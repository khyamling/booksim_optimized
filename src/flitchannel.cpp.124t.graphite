
;; Function virtual FlitChannel::~FlitChannel() (_ZN11FlitChannelD0Ev, funcdef_no=2364, decl_uid=33827, cgraph_uid=850, symbol_order=852)


Pass statistics:
----------------

virtual FlitChannel::~FlitChannel() (struct FlitChannelD.31994 * const thisD.33828)
{
  struct pairD.32024 * * __nstartD.48681;
  struct ModuleD.27766 * * _3;
  intD.9 * _5;
  charD.10 * const _8;
  const charD.10 * _9;
  charD.10 * const _10;
  const charD.10 * _11;
  struct pairD.32024 * * _12;
  struct pairD.32024 * * _13;
  struct pairD.32024 * * _14;
  struct pairD.32024 * _17;
  struct pairD.32024 * * pretmp_30;
  struct pairD.32024 * * prephitmp_31;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.48609 => this_2(D)
  # .MEM_26 = VDEF <.MEM_1(D)>
  this_2(D)->D.33846.D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV11FlitChannelD.33854 + 16B];
  # DEBUG D#171ptD.0 => &this_2(D)->_activeD.33822
  # DEBUG thisD.48610 => D#171ptD.0
  # DEBUG D#103ptD.0 => &D#171ptD.0->D.33820
  # DEBUG thisD.46488 => D#103ptD.0
  # DEBUG D#106ptD.0 => D#171ptD.0->D.33820._M_implD.33311._M_finishD.33314
  # DEBUG D#105ptD.0 => D#171ptD.0->D.33820._M_implD.33311._M_startD.33313
  # DEBUG __firstD.46485 => D#105ptD.0
  # DEBUG __lastD.46486 => D#106ptD.0
  # DEBUG D.46487 => NULL
  # DEBUG D#33ptD.0 => D#105ptD.0
  # DEBUG D#34ptD.0 => D#106ptD.0
  # DEBUG __firstD.46117 => D#33ptD.0
  # DEBUG __lastD.46116 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.46106 => D#29ptD.0
  # DEBUG D.46105 => D#30ptD.0
  # DEBUG D#104ptD.0 => &D#171ptD.0->D.33820
  # DEBUG thisD.48611 => D#104ptD.0
  # DEBUG D#102ptD.0 => D#104ptD.0->_M_implD.33311._M_end_of_storageD.33315
  # DEBUG D#101ptD.0 => (long intD.12) D#102ptD.0
  # VUSE <.MEM_26>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.33078 *)this_2(D) + 232B]._M_implD.33311._M_startD.33313;
  # DEBUG D#100ptD.0 => (long intD.12) _5
  # DEBUG D#99ptD.0 => D#101ptD.0 - D#100ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0 /[ex] 4
  # DEBUG D#97ptD.0 => (long unsigned intD.14) D#98ptD.0
  # DEBUG thisD.48614 => D#104ptD.0
  # DEBUG __pD.48613 => _5
  # DEBUG __nD.48612 => D#97ptD.0
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#95ptD.0 => &D#104ptD.0->_M_implD.33311
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#94ptD.0 => D#97ptD.0
  # DEBUG __pD.48618 => _5
  # DEBUG __aD.48616 => D#93ptD.0
  # DEBUG __nD.48617 => D#94ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0
  # DEBUG __pD.48621 => _5
  # DEBUG thisD.48619 => D#89ptD.0
  # DEBUG D.48620 => D#90ptD.0
  # .MEM_27 = VDEF <.MEM_26>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_20 = PHI <.MEM_26(2), .MEM_27(3)>
  # DEBUG D#96ptD.0 => &D#104ptD.0->_M_implD.33311
  # DEBUG thisD.48622 => D#96ptD.0
  # DEBUG thisD.48623 => D#96ptD.0
  # DEBUG thisD.48624 => D#96ptD.0
  # .MEM_32 = VDEF <.MEM_20>
  MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
  # DEBUG D#170ptD.0 => &this_2(D)->D.33846
  # DEBUG thisD.48625 => D#170ptD.0
  # .MEM_33 = VDEF <.MEM_32>
  MEM[(struct ChannelD.31995 *)this_2(D)].D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV7ChannelI4FlitED.33039 + 16B];
  # DEBUG D#169ptD.0 => &D#170ptD.0->_wait_queueD.32023
  # DEBUG thisD.48626 => D#169ptD.0
  # DEBUG D#167ptD.0 => &D#169ptD.0->cD.32988
  # DEBUG thisD.48627 => D#167ptD.0
  # DEBUG D#158ptD.0 => &D#167ptD.0->D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => D#167ptD.0
  # DEBUG D#12ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => D#167ptD.0
  # DEBUG D#11ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => D#167ptD.0
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # DEBUG D#291ptD.0 => &MEM[(struct dequeD.32026 *)this_2(D) + 120B].D.32945
  # DEBUG thisD.48675 => D#291ptD.0
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  _12 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;
;;    succ:       5 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  _13 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped 
  _14 = _13 + 8;
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  __nstart_15 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_startD.32400._M_nodeD.32298;
  # DEBUG D#149ptD.0 => D#291ptD.0
  # DEBUG __nstartD.48681 => __nstart_15
  # DEBUG __nfinishD.48680 => _14
  # DEBUG thisD.48679 => D#149ptD.0
  # DEBUG __nD.48682 => __nstart_15
  if (_14 <= __nstart_15)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_69 = PHI <__nstart_15(6), __nstart_18(8)>
  # .MEM_68 = PHI <.MEM_33(6), .MEM_34(8)>
  # DEBUG __nD.48682 => __nstart_69
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _17 = *__nstart_69;
  # DEBUG thisD.48684 => D#147ptD.0
  # DEBUG __pD.48683 => _17
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.48688 => _17
  # DEBUG __aD.48686 => D#133ptD.0
  # DEBUG __nD.48687 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.48691 => _17
  # DEBUG thisD.48689 => D#129ptD.0
  # DEBUG D.48690 => D#130ptD.0
  # .MEM_34 = VDEF <.MEM_68>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
  # PT = nonlocal escaped 
  __nstart_18 = __nstart_69 + 8;
  # DEBUG __nD.48682 => __nstart_18
  # DEBUG __nD.48682 => __nstart_18
  if (_14 <= __nstart_18)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_34>
  pretmp_30 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_66 = PHI <.MEM_34(9), .MEM_33(5)>
  # PT = nonlocal escaped 
  # prephitmp_31 = PHI <pretmp_30(9), _12(5)>
  # DEBUG D#156ptD.0 => D#291ptD.0->_M_implD.32396._M_map_sizeD.32399
  # DEBUG D#292ptD.0 => MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => D#291ptD.0
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.48694 => D#292ptD.0
  # DEBUG thisD.48692 => D#154ptD.0
  # DEBUG __nD.48693 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.48695
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.48698 => D#292ptD.0
  # DEBUG __aD.48696 => D#125ptD.0
  # DEBUG __nD.48697 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.48701 => D#292ptD.0
  # DEBUG thisD.48699 => D#121ptD.0
  # DEBUG D.48700 => D#122ptD.0
  # .MEM_35 = VDEF <.MEM_66>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_31);
  # DEBUG thisD.46826 => &__map_allocD.48695
  # DEBUG thisD.46805 => &__map_allocD.48695
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       4 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_22 = PHI <.MEM_33(4), .MEM_35(10)>
  # DEBUG D#157ptD.0 => &D#291ptD.0->_M_implD.32396
  # DEBUG thisD.48676 => D#157ptD.0
  # DEBUG thisD.48677 => D#157ptD.0
  # DEBUG thisD.48678 => D#157ptD.0
  # .MEM_41 = VDEF <.MEM_22>
  MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
  # DEBUG D#168ptD.0 => &D#170ptD.0->D.33033
  # DEBUG thisD.48628 => D#168ptD.0
  # DEBUG D#290ptD.0 => &MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611
  # DEBUG thisD.48629 => D#290ptD.0
  # .MEM_43 = VDEF <.MEM_41>
  MEM[(struct ModuleD.27766 *)this_2(D)]._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV6ModuleD.28566 + 16B];
  # DEBUG D#84ptD.0 => &D#290ptD.0->_childrenD.28516
  # DEBUG thisD.48630 => D#84ptD.0
  # DEBUG D#78ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.46348 => D#78ptD.0
  # DEBUG D#81ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_finishD.28008
  # DEBUG D#80ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_startD.28007
  # DEBUG D#26ptD.0 => D#80ptD.0
  # DEBUG D#27ptD.0 => D#81ptD.0
  # DEBUG __firstD.46347 => D#26ptD.0
  # DEBUG __lastD.46346 => D#27ptD.0
  # DEBUG D.46345 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG __firstD.46077 => D#22ptD.0
  # DEBUG __lastD.46076 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.46066 => D#18ptD.0
  # DEBUG D.46065 => D#19ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.48631 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0->_M_implD.28005._M_end_of_storageD.28009
  # DEBUG D#76ptD.0 => (long intD.12) D#77ptD.0
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _3 = MEM[(struct _Vector_baseD.27772 *)this_2(D) + 72B]._M_implD.28005._M_startD.28007;
  # DEBUG D#75ptD.0 => (long intD.12) _3
  # DEBUG D#74ptD.0 => D#76ptD.0 - D#75ptD.0
  # DEBUG D#73ptD.0 => D#74ptD.0 /[ex] 8
  # DEBUG D#70ptD.0 => D#79ptD.0
  # DEBUG D#71ptD.0 => (long unsigned intD.14) D#73ptD.0
  # DEBUG __pD.48634 => _3
  # DEBUG thisD.48632 => D#70ptD.0
  # DEBUG __nD.48633 => D#71ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  if (_3 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#67ptD.0 => &D#68ptD.0->_M_implD.28005
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#69ptD.0
  # DEBUG __pD.48638 => _3
  # DEBUG __aD.48636 => D#65ptD.0
  # DEBUG __nD.48637 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG __pD.48641 => _3
  # DEBUG thisD.48639 => D#61ptD.0
  # DEBUG D.48640 => D#62ptD.0
  # .MEM_44 = VDEF <.MEM_43>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_3);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_43(11), .MEM_44(12)>
  # DEBUG D#72ptD.0 => &D#79ptD.0->_M_implD.28005
  # DEBUG thisD.48642 => D#72ptD.0
  # DEBUG thisD.48643 => D#72ptD.0
  # DEBUG thisD.48644 => D#72ptD.0
  # .MEM_49 = VDEF <.MEM_23>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#290ptD.0->_fullnameD.27769
  # DEBUG thisD.48645 => D#83ptD.0
  # DEBUG thisD.48646 => D#83ptD.0
  # DEBUG thisD.48655 => D#83ptD.0
  # VUSE <.MEM_49>
  # PT = nonlocal escaped 
  _8 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48656 => D#83ptD.0
  # PT = nonlocal 
  _9 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 40B].D.15588._M_local_bufD.15590;
  if (_8 != _9)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#83ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48648 => D#83ptD.0
  # DEBUG __sizeD.48647 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#83ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48651 => _8
  # DEBUG __aD.48649 => D#54ptD.0
  # DEBUG __nD.48650 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48654 => _8
  # DEBUG thisD.48652 => D#50ptD.0
  # DEBUG D.48653 => D#51ptD.0
  # .MEM_50 = VDEF <.MEM_49>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_49(13), .MEM_50(14)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48657 => D#60ptD.0
  # DEBUG thisD.48658 => D#60ptD.0
  # DEBUG thisD.48659 => D#60ptD.0
  # .MEM_54 = VDEF <.MEM_24>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#82ptD.0 => &D#290ptD.0->_nameD.27768
  # DEBUG thisD.48660 => D#82ptD.0
  # DEBUG thisD.48661 => D#82ptD.0
  # DEBUG thisD.48670 => D#82ptD.0
  # VUSE <.MEM_54>
  # PT = nonlocal escaped 
  _10 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48671 => D#82ptD.0
  # PT = nonlocal 
  _11 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 8B].D.15588._M_local_bufD.15590;
  if (_10 != _11)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#82ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48663 => D#82ptD.0
  # DEBUG __sizeD.48662 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#82ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48666 => _10
  # DEBUG __aD.48664 => D#54ptD.0
  # DEBUG __nD.48665 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48669 => _10
  # DEBUG thisD.48667 => D#50ptD.0
  # DEBUG D.48668 => D#51ptD.0
  # .MEM_55 = VDEF <.MEM_54>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_10);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 16, next block 1, flags: (NEW, REACHABLE)
;;    pred:       15 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_54(15), .MEM_55(16)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48672 => D#60ptD.0
  # DEBUG thisD.48673 => D#60ptD.0
  # DEBUG thisD.48674 => D#60ptD.0
  # .MEM_63 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_63>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.33846.D.33033.D.28611._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 232B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 232
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 232B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
Creating dr for *__nstart_69
analyze_innermost: success.
	base_address: __nstart_15
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_15
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_69
analyze_innermost: success.
	base_address: __nstart_15
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_15
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_69
analyze_innermost: success.
	base_address: __nstart_15
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_15
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_69
analyze_innermost: success.
	base_address: __nstart_15
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_15
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_15 + 8, + , 8](no_overflow) < _13 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _13 - (unsigned long) __nstart_15) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 1
  exit condition [__nstart_15 + 8, + , 8](no_overflow) < _13 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _13 - (unsigned long) __nstart_15) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_69
analyze_innermost: success.
	base_address: __nstart_15
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_15
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_69
analyze_innermost: success.
	base_address: __nstart_15
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_15
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_69
analyze_innermost: success.
	base_address: __nstart_15
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_15
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_69
analyze_innermost: success.
	base_address: __nstart_15
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_15
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_15 + 8, + , 8](no_overflow) < _13 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _13 - (unsigned long) __nstart_15) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:19, LOOPS:1, CONDITIONS:7, STMTS:302)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG this => this_2(D)
    # .MEM_26 = VDEF <.MEM_1(D)>
    this_2(D)->D.33846.D.33033.D.28611._vptr.Module = &MEM[(void *)&_ZTV11FlitChannel + 16B];
    # DEBUG D#171 => &this_2(D)->_active
    # DEBUG this => D#171
    # DEBUG D#103 => &D#171->D.33820
    # DEBUG this => D#103
    # DEBUG D#106 => D#171->D.33820._M_impl._M_finish
    # DEBUG D#105 => D#171->D.33820._M_impl._M_start
    # DEBUG __first => D#105
    # DEBUG __last => D#106
    # DEBUG D.46487 => NULL
    # DEBUG D#33 => D#105
    # DEBUG D#34 => D#106
    # DEBUG __first => D#33
    # DEBUG __last => D#34
    # DEBUG D#32 => D#34
    # DEBUG D#31 => D#33
    # DEBUG D#29 => D#31
    # DEBUG D#30 => D#32
    # DEBUG D.46106 => D#29
    # DEBUG D.46105 => D#30
    # DEBUG D#104 => &D#171->D.33820
    # DEBUG this => D#104
    # DEBUG D#102 => D#104->_M_impl._M_end_of_storage
    # DEBUG D#101 => (long int) D#102
    # VUSE <.MEM_26>
    _5 = MEM[(struct _Vector_base *)this_2(D) + 232B]._M_impl._M_start;
    # DEBUG D#100 => (long int) _5
    # DEBUG D#99 => D#101 - D#100
    # DEBUG D#98 => D#99 /[ex] 4
    # DEBUG D#97 => (long unsigned int) D#98
    # DEBUG this => D#104
    # DEBUG __p => _5
    # DEBUG __n => D#97
    if (_5 != 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:
    # DEBUG D#95 => &D#104->_M_impl
    # DEBUG D#93 => D#95
    # DEBUG D#94 => D#97
    # DEBUG __p => _5
    # DEBUG __a => D#93
    # DEBUG __n => D#94
    # DEBUG D#92 => D#94
    # DEBUG D#91 => D#93
    # DEBUG D#89 => D#91
    # DEBUG D#90 => D#92
    # DEBUG __p => _5
    # DEBUG this => D#89
    # DEBUG D.48620 => D#90
    # .MEM_27 = VDEF <.MEM_26>
    operator delete (_5);

  }
  bb_4 (preds = {bb_2 bb_3 }, succs = {bb_5 bb_11 })
  {
    <bb 4>:
    # .MEM_20 = PHI <.MEM_26(2), .MEM_27(3)>
    # DEBUG D#96 => &D#104->_M_impl
    # DEBUG this => D#96
    # DEBUG this => D#96
    # DEBUG this => D#96
    # .MEM_32 = VDEF <.MEM_20>
    MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
    # DEBUG D#170 => &this_2(D)->D.33846
    # DEBUG this => D#170
    # .MEM_33 = VDEF <.MEM_32>
    MEM[(struct Channel *)this_2(D)].D.33033.D.28611._vptr.Module = &MEM[(void *)&_ZTV7ChannelI4FlitE + 16B];
    # DEBUG D#169 => &D#170->_wait_queue
    # DEBUG this => D#169
    # DEBUG D#167 => &D#169->c
    # DEBUG this => D#167
    # DEBUG D#158 => &D#167->D.32945
    # DEBUG this => D#158
    # DEBUG this => D#167
    # DEBUG D#12 => &D#167->D.32945._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#12
    # DEBUG D#166 => MEM[(const struct iterator &)D#167 + 48]._M_cur
    # DEBUG D.46875 => D#166
    # DEBUG D#165 => MEM[(const struct iterator &)D#167 + 48]._M_first
    # DEBUG D.46876 => D#165
    # DEBUG D#164 => MEM[(const struct iterator &)D#167 + 48]._M_last
    # DEBUG D.46877 => D#164
    # DEBUG D#163 => MEM[(const struct iterator &)D#167 + 48]._M_node
    # DEBUG D.46878 => D#163
    # DEBUG this => D#167
    # DEBUG D#11 => &D#167->D.32945._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#11
    # DEBUG D#162 => MEM[(const struct iterator &)D#167 + 16]._M_cur
    # DEBUG D.46871 => D#162
    # DEBUG D#161 => MEM[(const struct iterator &)D#167 + 16]._M_first
    # DEBUG D.46872 => D#161
    # DEBUG D#160 => MEM[(const struct iterator &)D#167 + 16]._M_last
    # DEBUG D.46873 => D#160
    # DEBUG D#159 => MEM[(const struct iterator &)D#167 + 16]._M_node
    # DEBUG D.46874 => D#159
    # DEBUG D#13 => D#167
    # DEBUG this => D#13
    # DEBUG __first => D#14
    # DEBUG __last => D#15
    # DEBUG D.46859 => D#16
    # DEBUG D#291 => &MEM[(struct deque *)this_2(D) + 120B].D.32945
    # DEBUG this => D#291
    # VUSE <.MEM_33>
    _12 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;
    if (_12 != 0B)
      goto <bb 5>;
    else
      goto <bb 11>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_10 bb_6 })
  {
    <bb 5>:
    # VUSE <.MEM_33>
    _13 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_finish._M_node;
    _14 = _13 + 8;
    # VUSE <.MEM_33>
    __nstart_15 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_start._M_node;
    # DEBUG D#149 => D#291
    # DEBUG __nstart => __nstart_15
    # DEBUG __nfinish => _14
    # DEBUG this => D#149
    # DEBUG __n => __nstart_15
    if (_14 <= __nstart_15)
      goto <bb 10>;
    else
      goto <bb 6>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 })
  {
    <bb 6>:

  }
  bb_9 (preds = {bb_7 }, succs = {bb_18 })
  {
    <bb 9>:

  }
  bb_18 (preds = {bb_9 }, succs = {bb_10 })
  {
    <bb 18>:
    # VUSE <.MEM_34>
    pretmp_30 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;

  }
  bb_10 (preds = {bb_18 bb_5 }, succs = {bb_11 })
  {
    <bb 10>:
    # .MEM_66 = PHI <.MEM_34(18), .MEM_33(5)>
    # prephitmp_31 = PHI <pretmp_30(18), _12(5)>
    # DEBUG D#156 => D#291->_M_impl._M_map_size
    # DEBUG D#292 => MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
    # DEBUG D#154 => D#291
    # DEBUG D#155 => D#156
    # DEBUG __p => D#292
    # DEBUG this => D#154
    # DEBUG __n => D#155
    # DEBUG D#153 => D#155
    # DEBUG D#152 => D#154
    # DEBUG D#151 => D#152
    # DEBUG this => D#151
    # DEBUG D#150 => D#151
    # DEBUG this => D#150
    # DEBUG this => NULL
    # DEBUG D.46793 => NULL
    # DEBUG this => NULL
    # DEBUG D#125 => &__map_alloc
    # DEBUG D#126 => D#153
    # DEBUG __p => D#292
    # DEBUG __a => D#125
    # DEBUG __n => D#126
    # DEBUG D#124 => D#126
    # DEBUG D#123 => D#125
    # DEBUG D#121 => D#123
    # DEBUG D#122 => D#124
    # DEBUG __p => D#292
    # DEBUG this => D#121
    # DEBUG D.48700 => D#122
    # .MEM_35 = VDEF <.MEM_66>
    operator delete (prephitmp_31);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc

  }
  bb_11 (preds = {bb_4 bb_10 }, succs = {bb_12 bb_13 })
  {
    <bb 11>:
    # .MEM_22 = PHI <.MEM_33(4), .MEM_35(10)>
    # DEBUG D#157 => &D#291->_M_impl
    # DEBUG this => D#157
    # DEBUG this => D#157
    # DEBUG this => D#157
    # .MEM_41 = VDEF <.MEM_22>
    MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
    # DEBUG D#168 => &D#170->D.33033
    # DEBUG this => D#168
    # DEBUG D#290 => &MEM[(struct TimedModule *)this_2(D)].D.28611
    # DEBUG this => D#290
    # .MEM_43 = VDEF <.MEM_41>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#84 => &D#290->_children
    # DEBUG this => D#84
    # DEBUG D#78 => &D#84->D.28514
    # DEBUG this => D#78
    # DEBUG D#81 => D#84->D.28514._M_impl._M_finish
    # DEBUG D#80 => D#84->D.28514._M_impl._M_start
    # DEBUG D#26 => D#80
    # DEBUG D#27 => D#81
    # DEBUG __first => D#26
    # DEBUG __last => D#27
    # DEBUG D.46345 => D#28
    # DEBUG D#25 => D#27
    # DEBUG D#24 => D#26
    # DEBUG D#22 => D#24
    # DEBUG D#23 => D#25
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.46066 => D#18
    # DEBUG D.46065 => D#19
    # DEBUG D#79 => &D#84->D.28514
    # DEBUG this => D#79
    # DEBUG D#77 => D#79->_M_impl._M_end_of_storage
    # DEBUG D#76 => (long int) D#77
    # VUSE <.MEM_43>
    _3 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#75 => (long int) _3
    # DEBUG D#74 => D#76 - D#75
    # DEBUG D#73 => D#74 /[ex] 8
    # DEBUG D#70 => D#79
    # DEBUG D#71 => (long unsigned int) D#73
    # DEBUG __p => _3
    # DEBUG this => D#70
    # DEBUG __n => D#71
    # DEBUG D#69 => D#71
    # DEBUG D#68 => D#70
    if (_3 != 0B)
      goto <bb 12>;
    else
      goto <bb 13>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 })
  {
    <bb 12>:
    # DEBUG D#67 => &D#68->_M_impl
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#69
    # DEBUG __p => _3
    # DEBUG __a => D#65
    # DEBUG __n => D#66
    # DEBUG D#64 => D#66
    # DEBUG D#63 => D#65
    # DEBUG D#61 => D#63
    # DEBUG D#62 => D#64
    # DEBUG __p => _3
    # DEBUG this => D#61
    # DEBUG D.48640 => D#62
    # .MEM_44 = VDEF <.MEM_43>
    operator delete (_3);

  }
  bb_13 (preds = {bb_11 bb_12 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # .MEM_23 = PHI <.MEM_43(11), .MEM_44(12)>
    # DEBUG D#72 => &D#79->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_49 = VDEF <.MEM_23>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#83 => &D#290->_fullname
    # DEBUG this => D#83
    # DEBUG this => D#83
    # DEBUG this => D#83
    # VUSE <.MEM_49>
    _8 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#3 => D#83
    # DEBUG this => D#3
    # DEBUG this => D#83
    _9 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.15588._M_local_buf;
    if (_8 != _9)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:
    # DEBUG D#59 => MEM[(struct basic_string *)D#83].D.15588._M_allocated_capacity
    # DEBUG D#58 => D#59
    # DEBUG this => D#83
    # DEBUG __size => D#58
    # DEBUG D#57 => D#58
    # DEBUG D#3 => D#83
    # DEBUG this => D#3
    # DEBUG this => D#83
    # DEBUG D#56 => &MEM[(struct basic_string *)D#83]._M_dataplus
    # DEBUG D#54 => D#56
    # DEBUG D#55 => D#57 + 1
    # DEBUG __p => _8
    # DEBUG __a => D#54
    # DEBUG __n => D#55
    # DEBUG D#53 => D#55
    # DEBUG D#52 => D#54
    # DEBUG D#50 => D#52
    # DEBUG D#51 => D#53
    # DEBUG __p => _8
    # DEBUG this => D#50
    # DEBUG D.48653 => D#51
    # .MEM_50 = VDEF <.MEM_49>
    operator delete (_8);

  }
  bb_15 (preds = {bb_13 bb_14 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_24 = PHI <.MEM_49(13), .MEM_50(14)>
    # DEBUG D#60 => &MEM[(struct basic_string *)D#83]._M_dataplus
    # DEBUG this => D#60
    # DEBUG this => D#60
    # DEBUG this => D#60
    # .MEM_54 = VDEF <.MEM_24>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#82 => &D#290->_name
    # DEBUG this => D#82
    # DEBUG this => D#82
    # DEBUG this => D#82
    # VUSE <.MEM_54>
    _10 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#3 => D#82
    # DEBUG this => D#3
    # DEBUG this => D#82
    _11 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.15588._M_local_buf;
    if (_10 != _11)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # DEBUG D#59 => MEM[(struct basic_string *)D#82].D.15588._M_allocated_capacity
    # DEBUG D#58 => D#59
    # DEBUG this => D#82
    # DEBUG __size => D#58
    # DEBUG D#57 => D#58
    # DEBUG D#3 => D#82
    # DEBUG this => D#3
    # DEBUG this => D#82
    # DEBUG D#56 => &MEM[(struct basic_string *)D#82]._M_dataplus
    # DEBUG D#54 => D#56
    # DEBUG D#55 => D#57 + 1
    # DEBUG __p => _10
    # DEBUG __a => D#54
    # DEBUG __n => D#55
    # DEBUG D#53 => D#55
    # DEBUG D#52 => D#54
    # DEBUG D#50 => D#52
    # DEBUG D#51 => D#53
    # DEBUG __p => _10
    # DEBUG this => D#50
    # DEBUG D.48668 => D#51
    # .MEM_55 = VDEF <.MEM_54>
    operator delete (_10);

  }
  bb_17 (preds = {bb_15 bb_16 }, succs = {bb_1 })
  {
    <bb 17>:
    # .MEM_25 = PHI <.MEM_54(15), .MEM_55(16)>
    # DEBUG D#60 => &MEM[(struct basic_string *)D#82]._M_dataplus
    # DEBUG this => D#60
    # DEBUG this => D#60
    # DEBUG this => D#60
    # .MEM_63 = VDEF <.MEM_25>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # .MEM_4 = VDEF <.MEM_63>
    operator delete (this_2(D));
    # VUSE <.MEM_4>
    return;

  }
  loop_1 (header = 7, latch = 8, niter = (((unsigned long) _13 - (unsigned long) __nstart_15) + 7) / 8, upper_bound = 2305843009213693951)
  {
    bb_7 (preds = {bb_6 bb_8 }, succs = {bb_9 bb_8 })
    {
      <bb 7>:
      # __nstart_69 = PHI <__nstart_15(6), __nstart_18(8)>
      # .MEM_68 = PHI <.MEM_33(6), .MEM_34(8)>
      # DEBUG __n => __nstart_69
      # VUSE <.MEM_68>
      _17 = *__nstart_69;
      # DEBUG this => D#147
      # DEBUG __p => _17
      # DEBUG __size => 16
      # DEBUG D#135 => &D#148->_M_impl
      # DEBUG D#133 => D#135
      # DEBUG __p => _17
      # DEBUG __a => D#133
      # DEBUG __n => D#134
      # DEBUG D#132 => D#134
      # DEBUG D#131 => D#133
      # DEBUG D#129 => D#131
      # DEBUG D#130 => D#132
      # DEBUG __p => _17
      # DEBUG this => D#129
      # DEBUG D.48690 => D#130
      # .MEM_34 = VDEF <.MEM_68>
      operator delete (_17);
      __nstart_18 = __nstart_69 + 8;
      # DEBUG __n => __nstart_18
      # DEBUG __n => __nstart_18
      if (_14 <= __nstart_18)
        goto <bb 9>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_7 })
    {
      <bb 8>:
      goto <bb 7>;

    }
  }
}

Pass statistics:
----------------

virtual FlitChannel::~FlitChannel() (struct FlitChannelD.31994 * const thisD.33828)
{
  struct pairD.32024 * * __nstartD.48681;
  struct ModuleD.27766 * * _3;
  intD.9 * _5;
  charD.10 * const _8;
  const charD.10 * _9;
  charD.10 * const _10;
  const charD.10 * _11;
  struct pairD.32024 * * _12;
  struct pairD.32024 * * _13;
  struct pairD.32024 * * _14;
  struct pairD.32024 * _17;
  struct pairD.32024 * * pretmp_30;
  struct pairD.32024 * * prephitmp_31;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.48609 => this_2(D)
  # .MEM_26 = VDEF <.MEM_1(D)>
  this_2(D)->D.33846.D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV11FlitChannelD.33854 + 16B];
  # DEBUG D#171ptD.0 => &this_2(D)->_activeD.33822
  # DEBUG thisD.48610 => D#171ptD.0
  # DEBUG D#103ptD.0 => &D#171ptD.0->D.33820
  # DEBUG thisD.46488 => D#103ptD.0
  # DEBUG D#106ptD.0 => D#171ptD.0->D.33820._M_implD.33311._M_finishD.33314
  # DEBUG D#105ptD.0 => D#171ptD.0->D.33820._M_implD.33311._M_startD.33313
  # DEBUG __firstD.46485 => D#105ptD.0
  # DEBUG __lastD.46486 => D#106ptD.0
  # DEBUG D.46487 => NULL
  # DEBUG D#33ptD.0 => D#105ptD.0
  # DEBUG D#34ptD.0 => D#106ptD.0
  # DEBUG __firstD.46117 => D#33ptD.0
  # DEBUG __lastD.46116 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.46106 => D#29ptD.0
  # DEBUG D.46105 => D#30ptD.0
  # DEBUG D#104ptD.0 => &D#171ptD.0->D.33820
  # DEBUG thisD.48611 => D#104ptD.0
  # DEBUG D#102ptD.0 => D#104ptD.0->_M_implD.33311._M_end_of_storageD.33315
  # DEBUG D#101ptD.0 => (long intD.12) D#102ptD.0
  # VUSE <.MEM_26>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.33078 *)this_2(D) + 232B]._M_implD.33311._M_startD.33313;
  # DEBUG D#100ptD.0 => (long intD.12) _5
  # DEBUG D#99ptD.0 => D#101ptD.0 - D#100ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0 /[ex] 4
  # DEBUG D#97ptD.0 => (long unsigned intD.14) D#98ptD.0
  # DEBUG thisD.48614 => D#104ptD.0
  # DEBUG __pD.48613 => _5
  # DEBUG __nD.48612 => D#97ptD.0
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#95ptD.0 => &D#104ptD.0->_M_implD.33311
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#94ptD.0 => D#97ptD.0
  # DEBUG __pD.48618 => _5
  # DEBUG __aD.48616 => D#93ptD.0
  # DEBUG __nD.48617 => D#94ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0
  # DEBUG __pD.48621 => _5
  # DEBUG thisD.48619 => D#89ptD.0
  # DEBUG D.48620 => D#90ptD.0
  # .MEM_27 = VDEF <.MEM_26>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_20 = PHI <.MEM_26(2), .MEM_27(3)>
  # DEBUG D#96ptD.0 => &D#104ptD.0->_M_implD.33311
  # DEBUG thisD.48622 => D#96ptD.0
  # DEBUG thisD.48623 => D#96ptD.0
  # DEBUG thisD.48624 => D#96ptD.0
  # .MEM_32 = VDEF <.MEM_20>
  MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
  # DEBUG D#170ptD.0 => &this_2(D)->D.33846
  # DEBUG thisD.48625 => D#170ptD.0
  # .MEM_33 = VDEF <.MEM_32>
  MEM[(struct ChannelD.31995 *)this_2(D)].D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV7ChannelI4FlitED.33039 + 16B];
  # DEBUG D#169ptD.0 => &D#170ptD.0->_wait_queueD.32023
  # DEBUG thisD.48626 => D#169ptD.0
  # DEBUG D#167ptD.0 => &D#169ptD.0->cD.32988
  # DEBUG thisD.48627 => D#167ptD.0
  # DEBUG D#158ptD.0 => &D#167ptD.0->D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => D#167ptD.0
  # DEBUG D#12ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => D#167ptD.0
  # DEBUG D#11ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => D#167ptD.0
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # DEBUG D#291ptD.0 => &MEM[(struct dequeD.32026 *)this_2(D) + 120B].D.32945
  # DEBUG thisD.48675 => D#291ptD.0
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  _12 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;
;;    succ:       5 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  _13 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped 
  _14 = _13 + 8;
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  __nstart_15 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_startD.32400._M_nodeD.32298;
  # DEBUG D#149ptD.0 => D#291ptD.0
  # DEBUG __nstartD.48681 => __nstart_15
  # DEBUG __nfinishD.48680 => _14
  # DEBUG thisD.48679 => D#149ptD.0
  # DEBUG __nD.48682 => __nstart_15
  if (_14 <= __nstart_15)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_69 = PHI <__nstart_15(6), __nstart_18(8)>
  # .MEM_68 = PHI <.MEM_33(6), .MEM_34(8)>
  # DEBUG __nD.48682 => __nstart_69
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _17 = *__nstart_69;
  # DEBUG thisD.48684 => D#147ptD.0
  # DEBUG __pD.48683 => _17
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.48688 => _17
  # DEBUG __aD.48686 => D#133ptD.0
  # DEBUG __nD.48687 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.48691 => _17
  # DEBUG thisD.48689 => D#129ptD.0
  # DEBUG D.48690 => D#130ptD.0
  # .MEM_34 = VDEF <.MEM_68>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
  # PT = nonlocal escaped 
  __nstart_18 = __nstart_69 + 8;
  # DEBUG __nD.48682 => __nstart_18
  # DEBUG __nD.48682 => __nstart_18
  if (_14 <= __nstart_18)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 18, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       18 [100.0%]  (FALLTHRU)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 9, next block 10, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_34>
  pretmp_30 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 11, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_66 = PHI <.MEM_34(18), .MEM_33(5)>
  # PT = nonlocal escaped 
  # prephitmp_31 = PHI <pretmp_30(18), _12(5)>
  # DEBUG D#156ptD.0 => D#291ptD.0->_M_implD.32396._M_map_sizeD.32399
  # DEBUG D#292ptD.0 => MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => D#291ptD.0
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.48694 => D#292ptD.0
  # DEBUG thisD.48692 => D#154ptD.0
  # DEBUG __nD.48693 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.48695
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.48698 => D#292ptD.0
  # DEBUG __aD.48696 => D#125ptD.0
  # DEBUG __nD.48697 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.48701 => D#292ptD.0
  # DEBUG thisD.48699 => D#121ptD.0
  # DEBUG D.48700 => D#122ptD.0
  # .MEM_35 = VDEF <.MEM_66>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_31);
  # DEBUG thisD.46826 => &__map_allocD.48695
  # DEBUG thisD.46805 => &__map_allocD.48695
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       4 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_22 = PHI <.MEM_33(4), .MEM_35(10)>
  # DEBUG D#157ptD.0 => &D#291ptD.0->_M_implD.32396
  # DEBUG thisD.48676 => D#157ptD.0
  # DEBUG thisD.48677 => D#157ptD.0
  # DEBUG thisD.48678 => D#157ptD.0
  # .MEM_41 = VDEF <.MEM_22>
  MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
  # DEBUG D#168ptD.0 => &D#170ptD.0->D.33033
  # DEBUG thisD.48628 => D#168ptD.0
  # DEBUG D#290ptD.0 => &MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611
  # DEBUG thisD.48629 => D#290ptD.0
  # .MEM_43 = VDEF <.MEM_41>
  MEM[(struct ModuleD.27766 *)this_2(D)]._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV6ModuleD.28566 + 16B];
  # DEBUG D#84ptD.0 => &D#290ptD.0->_childrenD.28516
  # DEBUG thisD.48630 => D#84ptD.0
  # DEBUG D#78ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.46348 => D#78ptD.0
  # DEBUG D#81ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_finishD.28008
  # DEBUG D#80ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_startD.28007
  # DEBUG D#26ptD.0 => D#80ptD.0
  # DEBUG D#27ptD.0 => D#81ptD.0
  # DEBUG __firstD.46347 => D#26ptD.0
  # DEBUG __lastD.46346 => D#27ptD.0
  # DEBUG D.46345 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG __firstD.46077 => D#22ptD.0
  # DEBUG __lastD.46076 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.46066 => D#18ptD.0
  # DEBUG D.46065 => D#19ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.48631 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0->_M_implD.28005._M_end_of_storageD.28009
  # DEBUG D#76ptD.0 => (long intD.12) D#77ptD.0
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _3 = MEM[(struct _Vector_baseD.27772 *)this_2(D) + 72B]._M_implD.28005._M_startD.28007;
  # DEBUG D#75ptD.0 => (long intD.12) _3
  # DEBUG D#74ptD.0 => D#76ptD.0 - D#75ptD.0
  # DEBUG D#73ptD.0 => D#74ptD.0 /[ex] 8
  # DEBUG D#70ptD.0 => D#79ptD.0
  # DEBUG D#71ptD.0 => (long unsigned intD.14) D#73ptD.0
  # DEBUG __pD.48634 => _3
  # DEBUG thisD.48632 => D#70ptD.0
  # DEBUG __nD.48633 => D#71ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  if (_3 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#67ptD.0 => &D#68ptD.0->_M_implD.28005
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#69ptD.0
  # DEBUG __pD.48638 => _3
  # DEBUG __aD.48636 => D#65ptD.0
  # DEBUG __nD.48637 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG __pD.48641 => _3
  # DEBUG thisD.48639 => D#61ptD.0
  # DEBUG D.48640 => D#62ptD.0
  # .MEM_44 = VDEF <.MEM_43>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_3);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_43(11), .MEM_44(12)>
  # DEBUG D#72ptD.0 => &D#79ptD.0->_M_implD.28005
  # DEBUG thisD.48642 => D#72ptD.0
  # DEBUG thisD.48643 => D#72ptD.0
  # DEBUG thisD.48644 => D#72ptD.0
  # .MEM_49 = VDEF <.MEM_23>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#290ptD.0->_fullnameD.27769
  # DEBUG thisD.48645 => D#83ptD.0
  # DEBUG thisD.48646 => D#83ptD.0
  # DEBUG thisD.48655 => D#83ptD.0
  # VUSE <.MEM_49>
  # PT = nonlocal escaped 
  _8 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48656 => D#83ptD.0
  # PT = nonlocal 
  _9 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 40B].D.15588._M_local_bufD.15590;
  if (_8 != _9)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#83ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48648 => D#83ptD.0
  # DEBUG __sizeD.48647 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#83ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48651 => _8
  # DEBUG __aD.48649 => D#54ptD.0
  # DEBUG __nD.48650 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48654 => _8
  # DEBUG thisD.48652 => D#50ptD.0
  # DEBUG D.48653 => D#51ptD.0
  # .MEM_50 = VDEF <.MEM_49>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_49(13), .MEM_50(14)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48657 => D#60ptD.0
  # DEBUG thisD.48658 => D#60ptD.0
  # DEBUG thisD.48659 => D#60ptD.0
  # .MEM_54 = VDEF <.MEM_24>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#82ptD.0 => &D#290ptD.0->_nameD.27768
  # DEBUG thisD.48660 => D#82ptD.0
  # DEBUG thisD.48661 => D#82ptD.0
  # DEBUG thisD.48670 => D#82ptD.0
  # VUSE <.MEM_54>
  # PT = nonlocal escaped 
  _10 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48671 => D#82ptD.0
  # PT = nonlocal 
  _11 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 8B].D.15588._M_local_bufD.15590;
  if (_10 != _11)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#82ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48663 => D#82ptD.0
  # DEBUG __sizeD.48662 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#82ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48666 => _10
  # DEBUG __aD.48664 => D#54ptD.0
  # DEBUG __nD.48665 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48669 => _10
  # DEBUG thisD.48667 => D#50ptD.0
  # DEBUG D.48668 => D#51ptD.0
  # .MEM_55 = VDEF <.MEM_54>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_10);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 16, next block 1, flags: (NEW, REACHABLE)
;;    pred:       15 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_54(15), .MEM_55(16)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48672 => D#60ptD.0
  # DEBUG thisD.48673 => D#60ptD.0
  # DEBUG thisD.48674 => D#60ptD.0
  # .MEM_63 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_63>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function Channel<T>::~Channel() [with T = Flit] (_ZN7ChannelI4FlitED2Ev, funcdef_no=2000, decl_uid=33030, cgraph_uid=486, symbol_order=487)


Pass statistics:
----------------

Channel<T>::~Channel() [with T = Flit] (struct ChannelD.31995 * const thisD.33031)
{
  struct pairD.32024 * * __nstartD.48769;
  struct pairD.32024 * * _11;
  struct ModuleD.27766 * * _13;
  charD.10 * const _14;
  const charD.10 * _15;
  charD.10 * const _16;
  const charD.10 * _17;
  struct pairD.32024 * * _18;
  struct pairD.32024 * * _19;
  struct pairD.32024 * _22;
  struct pairD.32024 * * pretmp_31;
  struct pairD.32024 * * prephitmp_32;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV7ChannelI4FlitED.33039 + 16B];
  # DEBUG D#169ptD.0 => &this_2(D)->_wait_queueD.32023
  # DEBUG thisD.46883 => D#169ptD.0
  # DEBUG D#167ptD.0 => &D#169ptD.0->cD.32988
  # DEBUG thisD.46884 => D#167ptD.0
  # DEBUG D#158ptD.0 => &D#167ptD.0->D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => D#167ptD.0
  # DEBUG D#12ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => D#167ptD.0
  # DEBUG D#11ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => D#167ptD.0
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # DEBUG D#294ptD.0 => &MEM[(struct dequeD.32026 *)this_2(D) + 120B].D.32945
  # DEBUG thisD.48763 => D#294ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
  if (_11 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _18 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped 
  _19 = _18 + 8;
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __nstart_20 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_startD.32400._M_nodeD.32298;
  # DEBUG D#149ptD.0 => D#294ptD.0
  # DEBUG __nstartD.48769 => __nstart_20
  # DEBUG __nfinishD.48768 => _19
  # DEBUG thisD.48767 => D#149ptD.0
  # DEBUG __nD.48770 => __nstart_20
  if (_19 <= __nstart_20)
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_57 = PHI <.MEM_3(4), .MEM_29(6)>
  # PT = nonlocal escaped 
  # __nstart_55 = PHI <__nstart_20(4), __nstart_23(6)>
  # DEBUG __nD.48770 => __nstart_55
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _22 = *__nstart_55;
  # DEBUG thisD.48772 => D#147ptD.0
  # DEBUG __pD.48771 => _22
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.48776 => _22
  # DEBUG __aD.48774 => D#133ptD.0
  # DEBUG __nD.48775 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.48779 => _22
  # DEBUG thisD.48777 => D#129ptD.0
  # DEBUG D.48778 => D#130ptD.0
  # .MEM_29 = VDEF <.MEM_57>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
  # PT = nonlocal escaped 
  __nstart_23 = __nstart_55 + 8;
  # DEBUG __nD.48770 => __nstart_23
  # DEBUG __nD.48770 => __nstart_23
  if (_19 <= __nstart_23)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_29>
  pretmp_31 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_56 = PHI <.MEM_29(7), .MEM_3(3)>
  # PT = nonlocal escaped 
  # prephitmp_32 = PHI <pretmp_31(7), _11(3)>
  # DEBUG D#156ptD.0 => D#294ptD.0->_M_implD.32396._M_map_sizeD.32399
  # DEBUG D#295ptD.0 => MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => D#294ptD.0
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.48782 => D#295ptD.0
  # DEBUG thisD.48780 => D#154ptD.0
  # DEBUG __nD.48781 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.48783
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.48786 => D#295ptD.0
  # DEBUG __aD.48784 => D#125ptD.0
  # DEBUG __nD.48785 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.48789 => D#295ptD.0
  # DEBUG thisD.48787 => D#121ptD.0
  # DEBUG D.48788 => D#122ptD.0
  # .MEM_30 = VDEF <.MEM_56>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_32);
  # DEBUG thisD.46826 => &__map_allocD.48783
  # DEBUG thisD.46805 => &__map_allocD.48783
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       2 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_3(2), .MEM_30(8)>
  # DEBUG D#157ptD.0 => &D#294ptD.0->_M_implD.32396
  # DEBUG thisD.48764 => D#157ptD.0
  # DEBUG thisD.48765 => D#157ptD.0
  # DEBUG thisD.48766 => D#157ptD.0
  # .MEM_9 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
  # DEBUG D#168ptD.0 => &this_2(D)->D.33033
  # DEBUG thisD.46882 => D#168ptD.0
  # DEBUG D#293ptD.0 => &MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611
  # DEBUG thisD.48717 => D#293ptD.0
  # .MEM_35 = VDEF <.MEM_9>
  MEM[(struct ModuleD.27766 *)this_2(D)]._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV6ModuleD.28566 + 16B];
  # DEBUG D#84ptD.0 => &D#293ptD.0->_childrenD.28516
  # DEBUG thisD.48718 => D#84ptD.0
  # DEBUG D#78ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.46348 => D#78ptD.0
  # DEBUG D#81ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_finishD.28008
  # DEBUG D#80ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_startD.28007
  # DEBUG D#26ptD.0 => D#80ptD.0
  # DEBUG D#27ptD.0 => D#81ptD.0
  # DEBUG __firstD.46347 => D#26ptD.0
  # DEBUG __lastD.46346 => D#27ptD.0
  # DEBUG D.46345 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG __firstD.46077 => D#22ptD.0
  # DEBUG __lastD.46076 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.46066 => D#18ptD.0
  # DEBUG D.46065 => D#19ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.48719 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0->_M_implD.28005._M_end_of_storageD.28009
  # DEBUG D#76ptD.0 => (long intD.12) D#77ptD.0
  # VUSE <.MEM_35>
  # PT = nonlocal escaped 
  _13 = MEM[(struct _Vector_baseD.27772 *)this_2(D) + 72B]._M_implD.28005._M_startD.28007;
  # DEBUG D#75ptD.0 => (long intD.12) _13
  # DEBUG D#74ptD.0 => D#76ptD.0 - D#75ptD.0
  # DEBUG D#73ptD.0 => D#74ptD.0 /[ex] 8
  # DEBUG D#70ptD.0 => D#79ptD.0
  # DEBUG D#71ptD.0 => (long unsigned intD.14) D#73ptD.0
  # DEBUG __pD.48722 => _13
  # DEBUG thisD.48720 => D#70ptD.0
  # DEBUG __nD.48721 => D#71ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  if (_13 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#67ptD.0 => &D#68ptD.0->_M_implD.28005
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#69ptD.0
  # DEBUG __pD.48726 => _13
  # DEBUG __aD.48724 => D#65ptD.0
  # DEBUG __nD.48725 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG __pD.48729 => _13
  # DEBUG thisD.48727 => D#61ptD.0
  # DEBUG D.48728 => D#62ptD.0
  # .MEM_36 = VDEF <.MEM_35>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_13);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_35(9), .MEM_36(10)>
  # DEBUG D#72ptD.0 => &D#79ptD.0->_M_implD.28005
  # DEBUG thisD.48730 => D#72ptD.0
  # DEBUG thisD.48731 => D#72ptD.0
  # DEBUG thisD.48732 => D#72ptD.0
  # .MEM_41 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#293ptD.0->_fullnameD.27769
  # DEBUG thisD.48733 => D#83ptD.0
  # DEBUG thisD.48734 => D#83ptD.0
  # DEBUG thisD.48743 => D#83ptD.0
  # VUSE <.MEM_41>
  # PT = nonlocal escaped 
  _14 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48744 => D#83ptD.0
  # PT = nonlocal 
  _15 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 40B].D.15588._M_local_bufD.15590;
  if (_14 != _15)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#83ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48736 => D#83ptD.0
  # DEBUG __sizeD.48735 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#83ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48739 => _14
  # DEBUG __aD.48737 => D#54ptD.0
  # DEBUG __nD.48738 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48742 => _14
  # DEBUG thisD.48740 => D#50ptD.0
  # DEBUG D.48741 => D#51ptD.0
  # .MEM_42 = VDEF <.MEM_41>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_14);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_41(11), .MEM_42(12)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48745 => D#60ptD.0
  # DEBUG thisD.48746 => D#60ptD.0
  # DEBUG thisD.48747 => D#60ptD.0
  # .MEM_46 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#82ptD.0 => &D#293ptD.0->_nameD.27768
  # DEBUG thisD.48748 => D#82ptD.0
  # DEBUG thisD.48749 => D#82ptD.0
  # DEBUG thisD.48758 => D#82ptD.0
  # VUSE <.MEM_46>
  # PT = nonlocal escaped 
  _16 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48759 => D#82ptD.0
  # PT = nonlocal 
  _17 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 8B].D.15588._M_local_bufD.15590;
  if (_16 != _17)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#82ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48751 => D#82ptD.0
  # DEBUG __sizeD.48750 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#82ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48754 => _16
  # DEBUG __aD.48752 => D#54ptD.0
  # DEBUG __nD.48753 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48757 => _16
  # DEBUG thisD.48755 => D#50ptD.0
  # DEBUG D.48756 => D#51ptD.0
  # .MEM_47 = VDEF <.MEM_46>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 14, next block 1, flags: (NEW, REACHABLE)
;;    pred:       13 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_46(13), .MEM_47(14)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48760 => D#60ptD.0
  # DEBUG thisD.48761 => D#60ptD.0
  # DEBUG thisD.48762 => D#60ptD.0
  # .MEM_6 = VDEF <.MEM_28>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_6>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.33033.D.28611._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
Creating dr for *__nstart_55
analyze_innermost: success.
	base_address: __nstart_20
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_20
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_55
analyze_innermost: success.
	base_address: __nstart_20
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_20
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_55
analyze_innermost: success.
	base_address: __nstart_20
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_20
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_55
analyze_innermost: success.
	base_address: __nstart_20
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_20
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_20 + 8, + , 8](no_overflow) < _18 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _18 - (unsigned long) __nstart_20) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 1
  exit condition [__nstart_20 + 8, + , 8](no_overflow) < _18 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _18 - (unsigned long) __nstart_20) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_55
analyze_innermost: success.
	base_address: __nstart_20
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_20
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_55
analyze_innermost: success.
	base_address: __nstart_20
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_20
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_55
analyze_innermost: success.
	base_address: __nstart_20
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_20
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_55
analyze_innermost: success.
	base_address: __nstart_20
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_20
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_20 + 8, + , 8](no_overflow) < _18 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _18 - (unsigned long) __nstart_20) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:17, LOOPS:1, CONDITIONS:6, STMTS:246)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_9 })
  {
    <bb 2>:
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->D.33033.D.28611._vptr.Module = &MEM[(void *)&_ZTV7ChannelI4FlitE + 16B];
    # DEBUG D#169 => &this_2(D)->_wait_queue
    # DEBUG this => D#169
    # DEBUG D#167 => &D#169->c
    # DEBUG this => D#167
    # DEBUG D#158 => &D#167->D.32945
    # DEBUG this => D#158
    # DEBUG this => D#167
    # DEBUG D#12 => &D#167->D.32945._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#12
    # DEBUG D#166 => MEM[(const struct iterator &)D#167 + 48]._M_cur
    # DEBUG D.46875 => D#166
    # DEBUG D#165 => MEM[(const struct iterator &)D#167 + 48]._M_first
    # DEBUG D.46876 => D#165
    # DEBUG D#164 => MEM[(const struct iterator &)D#167 + 48]._M_last
    # DEBUG D.46877 => D#164
    # DEBUG D#163 => MEM[(const struct iterator &)D#167 + 48]._M_node
    # DEBUG D.46878 => D#163
    # DEBUG this => D#167
    # DEBUG D#11 => &D#167->D.32945._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#11
    # DEBUG D#162 => MEM[(const struct iterator &)D#167 + 16]._M_cur
    # DEBUG D.46871 => D#162
    # DEBUG D#161 => MEM[(const struct iterator &)D#167 + 16]._M_first
    # DEBUG D.46872 => D#161
    # DEBUG D#160 => MEM[(const struct iterator &)D#167 + 16]._M_last
    # DEBUG D.46873 => D#160
    # DEBUG D#159 => MEM[(const struct iterator &)D#167 + 16]._M_node
    # DEBUG D.46874 => D#159
    # DEBUG D#13 => D#167
    # DEBUG this => D#13
    # DEBUG __first => D#14
    # DEBUG __last => D#15
    # DEBUG D.46859 => D#16
    # DEBUG D#294 => &MEM[(struct deque *)this_2(D) + 120B].D.32945
    # DEBUG this => D#294
    # VUSE <.MEM_3>
    _11 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;
    if (_11 != 0B)
      goto <bb 3>;
    else
      goto <bb 9>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_8 bb_4 })
  {
    <bb 3>:
    # VUSE <.MEM_3>
    _18 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_finish._M_node;
    _19 = _18 + 8;
    # VUSE <.MEM_3>
    __nstart_20 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_start._M_node;
    # DEBUG D#149 => D#294
    # DEBUG __nstart => __nstart_20
    # DEBUG __nfinish => _19
    # DEBUG this => D#149
    # DEBUG __n => __nstart_20
    if (_19 <= __nstart_20)
      goto <bb 8>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_7 (preds = {bb_5 }, succs = {bb_16 })
  {
    <bb 7>:

  }
  bb_16 (preds = {bb_7 }, succs = {bb_8 })
  {
    <bb 16>:
    # VUSE <.MEM_29>
    pretmp_31 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;

  }
  bb_8 (preds = {bb_16 bb_3 }, succs = {bb_9 })
  {
    <bb 8>:
    # .MEM_56 = PHI <.MEM_29(16), .MEM_3(3)>
    # prephitmp_32 = PHI <pretmp_31(16), _11(3)>
    # DEBUG D#156 => D#294->_M_impl._M_map_size
    # DEBUG D#295 => MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
    # DEBUG D#154 => D#294
    # DEBUG D#155 => D#156
    # DEBUG __p => D#295
    # DEBUG this => D#154
    # DEBUG __n => D#155
    # DEBUG D#153 => D#155
    # DEBUG D#152 => D#154
    # DEBUG D#151 => D#152
    # DEBUG this => D#151
    # DEBUG D#150 => D#151
    # DEBUG this => D#150
    # DEBUG this => NULL
    # DEBUG D.46793 => NULL
    # DEBUG this => NULL
    # DEBUG D#125 => &__map_alloc
    # DEBUG D#126 => D#153
    # DEBUG __p => D#295
    # DEBUG __a => D#125
    # DEBUG __n => D#126
    # DEBUG D#124 => D#126
    # DEBUG D#123 => D#125
    # DEBUG D#121 => D#123
    # DEBUG D#122 => D#124
    # DEBUG __p => D#295
    # DEBUG this => D#121
    # DEBUG D.48788 => D#122
    # .MEM_30 = VDEF <.MEM_56>
    operator delete (prephitmp_32);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc

  }
  bb_9 (preds = {bb_2 bb_8 }, succs = {bb_10 bb_11 })
  {
    <bb 9>:
    # .MEM_25 = PHI <.MEM_3(2), .MEM_30(8)>
    # DEBUG D#157 => &D#294->_M_impl
    # DEBUG this => D#157
    # DEBUG this => D#157
    # DEBUG this => D#157
    # .MEM_9 = VDEF <.MEM_25>
    MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
    # DEBUG D#168 => &this_2(D)->D.33033
    # DEBUG this => D#168
    # DEBUG D#293 => &MEM[(struct TimedModule *)this_2(D)].D.28611
    # DEBUG this => D#293
    # .MEM_35 = VDEF <.MEM_9>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#84 => &D#293->_children
    # DEBUG this => D#84
    # DEBUG D#78 => &D#84->D.28514
    # DEBUG this => D#78
    # DEBUG D#81 => D#84->D.28514._M_impl._M_finish
    # DEBUG D#80 => D#84->D.28514._M_impl._M_start
    # DEBUG D#26 => D#80
    # DEBUG D#27 => D#81
    # DEBUG __first => D#26
    # DEBUG __last => D#27
    # DEBUG D.46345 => D#28
    # DEBUG D#25 => D#27
    # DEBUG D#24 => D#26
    # DEBUG D#22 => D#24
    # DEBUG D#23 => D#25
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.46066 => D#18
    # DEBUG D.46065 => D#19
    # DEBUG D#79 => &D#84->D.28514
    # DEBUG this => D#79
    # DEBUG D#77 => D#79->_M_impl._M_end_of_storage
    # DEBUG D#76 => (long int) D#77
    # VUSE <.MEM_35>
    _13 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#75 => (long int) _13
    # DEBUG D#74 => D#76 - D#75
    # DEBUG D#73 => D#74 /[ex] 8
    # DEBUG D#70 => D#79
    # DEBUG D#71 => (long unsigned int) D#73
    # DEBUG __p => _13
    # DEBUG this => D#70
    # DEBUG __n => D#71
    # DEBUG D#69 => D#71
    # DEBUG D#68 => D#70
    if (_13 != 0B)
      goto <bb 10>;
    else
      goto <bb 11>;

  }
  bb_10 (preds = {bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # DEBUG D#67 => &D#68->_M_impl
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#69
    # DEBUG __p => _13
    # DEBUG __a => D#65
    # DEBUG __n => D#66
    # DEBUG D#64 => D#66
    # DEBUG D#63 => D#65
    # DEBUG D#61 => D#63
    # DEBUG D#62 => D#64
    # DEBUG __p => _13
    # DEBUG this => D#61
    # DEBUG D.48728 => D#62
    # .MEM_36 = VDEF <.MEM_35>
    operator delete (_13);

  }
  bb_11 (preds = {bb_9 bb_10 }, succs = {bb_12 bb_13 })
  {
    <bb 11>:
    # .MEM_26 = PHI <.MEM_35(9), .MEM_36(10)>
    # DEBUG D#72 => &D#79->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_41 = VDEF <.MEM_26>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#83 => &D#293->_fullname
    # DEBUG this => D#83
    # DEBUG this => D#83
    # DEBUG this => D#83
    # VUSE <.MEM_41>
    _14 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#3 => D#83
    # DEBUG this => D#3
    # DEBUG this => D#83
    _15 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.15588._M_local_buf;
    if (_14 != _15)
      goto <bb 12>;
    else
      goto <bb 13>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 })
  {
    <bb 12>:
    # DEBUG D#59 => MEM[(struct basic_string *)D#83].D.15588._M_allocated_capacity
    # DEBUG D#58 => D#59
    # DEBUG this => D#83
    # DEBUG __size => D#58
    # DEBUG D#57 => D#58
    # DEBUG D#3 => D#83
    # DEBUG this => D#3
    # DEBUG this => D#83
    # DEBUG D#56 => &MEM[(struct basic_string *)D#83]._M_dataplus
    # DEBUG D#54 => D#56
    # DEBUG D#55 => D#57 + 1
    # DEBUG __p => _14
    # DEBUG __a => D#54
    # DEBUG __n => D#55
    # DEBUG D#53 => D#55
    # DEBUG D#52 => D#54
    # DEBUG D#50 => D#52
    # DEBUG D#51 => D#53
    # DEBUG __p => _14
    # DEBUG this => D#50
    # DEBUG D.48741 => D#51
    # .MEM_42 = VDEF <.MEM_41>
    operator delete (_14);

  }
  bb_13 (preds = {bb_11 bb_12 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # .MEM_27 = PHI <.MEM_41(11), .MEM_42(12)>
    # DEBUG D#60 => &MEM[(struct basic_string *)D#83]._M_dataplus
    # DEBUG this => D#60
    # DEBUG this => D#60
    # DEBUG this => D#60
    # .MEM_46 = VDEF <.MEM_27>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#82 => &D#293->_name
    # DEBUG this => D#82
    # DEBUG this => D#82
    # DEBUG this => D#82
    # VUSE <.MEM_46>
    _16 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#3 => D#82
    # DEBUG this => D#3
    # DEBUG this => D#82
    _17 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.15588._M_local_buf;
    if (_16 != _17)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:
    # DEBUG D#59 => MEM[(struct basic_string *)D#82].D.15588._M_allocated_capacity
    # DEBUG D#58 => D#59
    # DEBUG this => D#82
    # DEBUG __size => D#58
    # DEBUG D#57 => D#58
    # DEBUG D#3 => D#82
    # DEBUG this => D#3
    # DEBUG this => D#82
    # DEBUG D#56 => &MEM[(struct basic_string *)D#82]._M_dataplus
    # DEBUG D#54 => D#56
    # DEBUG D#55 => D#57 + 1
    # DEBUG __p => _16
    # DEBUG __a => D#54
    # DEBUG __n => D#55
    # DEBUG D#53 => D#55
    # DEBUG D#52 => D#54
    # DEBUG D#50 => D#52
    # DEBUG D#51 => D#53
    # DEBUG __p => _16
    # DEBUG this => D#50
    # DEBUG D.48756 => D#51
    # .MEM_47 = VDEF <.MEM_46>
    operator delete (_16);

  }
  bb_15 (preds = {bb_13 bb_14 }, succs = {bb_1 })
  {
    <bb 15>:
    # .MEM_28 = PHI <.MEM_46(13), .MEM_47(14)>
    # DEBUG D#60 => &MEM[(struct basic_string *)D#82]._M_dataplus
    # DEBUG this => D#60
    # DEBUG this => D#60
    # DEBUG this => D#60
    # .MEM_6 = VDEF <.MEM_28>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # VUSE <.MEM_6>
    return;

  }
  loop_1 (header = 5, latch = 6, niter = (((unsigned long) _18 - (unsigned long) __nstart_20) + 7) / 8, upper_bound = 2305843009213693951)
  {
    bb_5 (preds = {bb_4 bb_6 }, succs = {bb_7 bb_6 })
    {
      <bb 5>:
      # .MEM_57 = PHI <.MEM_3(4), .MEM_29(6)>
      # __nstart_55 = PHI <__nstart_20(4), __nstart_23(6)>
      # DEBUG __n => __nstart_55
      # VUSE <.MEM_57>
      _22 = *__nstart_55;
      # DEBUG this => D#147
      # DEBUG __p => _22
      # DEBUG __size => 16
      # DEBUG D#135 => &D#148->_M_impl
      # DEBUG D#133 => D#135
      # DEBUG __p => _22
      # DEBUG __a => D#133
      # DEBUG __n => D#134
      # DEBUG D#132 => D#134
      # DEBUG D#131 => D#133
      # DEBUG D#129 => D#131
      # DEBUG D#130 => D#132
      # DEBUG __p => _22
      # DEBUG this => D#129
      # DEBUG D.48778 => D#130
      # .MEM_29 = VDEF <.MEM_57>
      operator delete (_22);
      __nstart_23 = __nstart_55 + 8;
      # DEBUG __n => __nstart_23
      # DEBUG __n => __nstart_23
      if (_19 <= __nstart_23)
        goto <bb 7>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_5 })
    {
      <bb 6>:
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

Channel<T>::~Channel() [with T = Flit] (struct ChannelD.31995 * const thisD.33031)
{
  struct pairD.32024 * * __nstartD.48769;
  struct pairD.32024 * * _11;
  struct ModuleD.27766 * * _13;
  charD.10 * const _14;
  const charD.10 * _15;
  charD.10 * const _16;
  const charD.10 * _17;
  struct pairD.32024 * * _18;
  struct pairD.32024 * * _19;
  struct pairD.32024 * _22;
  struct pairD.32024 * * pretmp_31;
  struct pairD.32024 * * prephitmp_32;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV7ChannelI4FlitED.33039 + 16B];
  # DEBUG D#169ptD.0 => &this_2(D)->_wait_queueD.32023
  # DEBUG thisD.46883 => D#169ptD.0
  # DEBUG D#167ptD.0 => &D#169ptD.0->cD.32988
  # DEBUG thisD.46884 => D#167ptD.0
  # DEBUG D#158ptD.0 => &D#167ptD.0->D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => D#167ptD.0
  # DEBUG D#12ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => D#167ptD.0
  # DEBUG D#11ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => D#167ptD.0
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # DEBUG D#294ptD.0 => &MEM[(struct dequeD.32026 *)this_2(D) + 120B].D.32945
  # DEBUG thisD.48763 => D#294ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
  if (_11 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _18 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped 
  _19 = _18 + 8;
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __nstart_20 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_startD.32400._M_nodeD.32298;
  # DEBUG D#149ptD.0 => D#294ptD.0
  # DEBUG __nstartD.48769 => __nstart_20
  # DEBUG __nfinishD.48768 => _19
  # DEBUG thisD.48767 => D#149ptD.0
  # DEBUG __nD.48770 => __nstart_20
  if (_19 <= __nstart_20)
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_57 = PHI <.MEM_3(4), .MEM_29(6)>
  # PT = nonlocal escaped 
  # __nstart_55 = PHI <__nstart_20(4), __nstart_23(6)>
  # DEBUG __nD.48770 => __nstart_55
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _22 = *__nstart_55;
  # DEBUG thisD.48772 => D#147ptD.0
  # DEBUG __pD.48771 => _22
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.48776 => _22
  # DEBUG __aD.48774 => D#133ptD.0
  # DEBUG __nD.48775 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.48779 => _22
  # DEBUG thisD.48777 => D#129ptD.0
  # DEBUG D.48778 => D#130ptD.0
  # .MEM_29 = VDEF <.MEM_57>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
  # PT = nonlocal escaped 
  __nstart_23 = __nstart_55 + 8;
  # DEBUG __nD.48770 => __nstart_23
  # DEBUG __nD.48770 => __nstart_23
  if (_19 <= __nstart_23)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 6, next block 16, flags: (NEW)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       16 [100.0%]  (FALLTHRU)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 8, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_29>
  pretmp_31 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 9, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_56 = PHI <.MEM_29(16), .MEM_3(3)>
  # PT = nonlocal escaped 
  # prephitmp_32 = PHI <pretmp_31(16), _11(3)>
  # DEBUG D#156ptD.0 => D#294ptD.0->_M_implD.32396._M_map_sizeD.32399
  # DEBUG D#295ptD.0 => MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => D#294ptD.0
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.48782 => D#295ptD.0
  # DEBUG thisD.48780 => D#154ptD.0
  # DEBUG __nD.48781 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.48783
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.48786 => D#295ptD.0
  # DEBUG __aD.48784 => D#125ptD.0
  # DEBUG __nD.48785 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.48789 => D#295ptD.0
  # DEBUG thisD.48787 => D#121ptD.0
  # DEBUG D.48788 => D#122ptD.0
  # .MEM_30 = VDEF <.MEM_56>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_32);
  # DEBUG thisD.46826 => &__map_allocD.48783
  # DEBUG thisD.46805 => &__map_allocD.48783
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       2 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_3(2), .MEM_30(8)>
  # DEBUG D#157ptD.0 => &D#294ptD.0->_M_implD.32396
  # DEBUG thisD.48764 => D#157ptD.0
  # DEBUG thisD.48765 => D#157ptD.0
  # DEBUG thisD.48766 => D#157ptD.0
  # .MEM_9 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
  # DEBUG D#168ptD.0 => &this_2(D)->D.33033
  # DEBUG thisD.46882 => D#168ptD.0
  # DEBUG D#293ptD.0 => &MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611
  # DEBUG thisD.48717 => D#293ptD.0
  # .MEM_35 = VDEF <.MEM_9>
  MEM[(struct ModuleD.27766 *)this_2(D)]._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV6ModuleD.28566 + 16B];
  # DEBUG D#84ptD.0 => &D#293ptD.0->_childrenD.28516
  # DEBUG thisD.48718 => D#84ptD.0
  # DEBUG D#78ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.46348 => D#78ptD.0
  # DEBUG D#81ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_finishD.28008
  # DEBUG D#80ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_startD.28007
  # DEBUG D#26ptD.0 => D#80ptD.0
  # DEBUG D#27ptD.0 => D#81ptD.0
  # DEBUG __firstD.46347 => D#26ptD.0
  # DEBUG __lastD.46346 => D#27ptD.0
  # DEBUG D.46345 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG __firstD.46077 => D#22ptD.0
  # DEBUG __lastD.46076 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.46066 => D#18ptD.0
  # DEBUG D.46065 => D#19ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.48719 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0->_M_implD.28005._M_end_of_storageD.28009
  # DEBUG D#76ptD.0 => (long intD.12) D#77ptD.0
  # VUSE <.MEM_35>
  # PT = nonlocal escaped 
  _13 = MEM[(struct _Vector_baseD.27772 *)this_2(D) + 72B]._M_implD.28005._M_startD.28007;
  # DEBUG D#75ptD.0 => (long intD.12) _13
  # DEBUG D#74ptD.0 => D#76ptD.0 - D#75ptD.0
  # DEBUG D#73ptD.0 => D#74ptD.0 /[ex] 8
  # DEBUG D#70ptD.0 => D#79ptD.0
  # DEBUG D#71ptD.0 => (long unsigned intD.14) D#73ptD.0
  # DEBUG __pD.48722 => _13
  # DEBUG thisD.48720 => D#70ptD.0
  # DEBUG __nD.48721 => D#71ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  if (_13 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#67ptD.0 => &D#68ptD.0->_M_implD.28005
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#69ptD.0
  # DEBUG __pD.48726 => _13
  # DEBUG __aD.48724 => D#65ptD.0
  # DEBUG __nD.48725 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG __pD.48729 => _13
  # DEBUG thisD.48727 => D#61ptD.0
  # DEBUG D.48728 => D#62ptD.0
  # .MEM_36 = VDEF <.MEM_35>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_13);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_35(9), .MEM_36(10)>
  # DEBUG D#72ptD.0 => &D#79ptD.0->_M_implD.28005
  # DEBUG thisD.48730 => D#72ptD.0
  # DEBUG thisD.48731 => D#72ptD.0
  # DEBUG thisD.48732 => D#72ptD.0
  # .MEM_41 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#293ptD.0->_fullnameD.27769
  # DEBUG thisD.48733 => D#83ptD.0
  # DEBUG thisD.48734 => D#83ptD.0
  # DEBUG thisD.48743 => D#83ptD.0
  # VUSE <.MEM_41>
  # PT = nonlocal escaped 
  _14 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48744 => D#83ptD.0
  # PT = nonlocal 
  _15 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 40B].D.15588._M_local_bufD.15590;
  if (_14 != _15)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#83ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48736 => D#83ptD.0
  # DEBUG __sizeD.48735 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#83ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48739 => _14
  # DEBUG __aD.48737 => D#54ptD.0
  # DEBUG __nD.48738 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48742 => _14
  # DEBUG thisD.48740 => D#50ptD.0
  # DEBUG D.48741 => D#51ptD.0
  # .MEM_42 = VDEF <.MEM_41>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_14);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_41(11), .MEM_42(12)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48745 => D#60ptD.0
  # DEBUG thisD.48746 => D#60ptD.0
  # DEBUG thisD.48747 => D#60ptD.0
  # .MEM_46 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#82ptD.0 => &D#293ptD.0->_nameD.27768
  # DEBUG thisD.48748 => D#82ptD.0
  # DEBUG thisD.48749 => D#82ptD.0
  # DEBUG thisD.48758 => D#82ptD.0
  # VUSE <.MEM_46>
  # PT = nonlocal escaped 
  _16 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48759 => D#82ptD.0
  # PT = nonlocal 
  _17 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 8B].D.15588._M_local_bufD.15590;
  if (_16 != _17)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#82ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48751 => D#82ptD.0
  # DEBUG __sizeD.48750 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#82ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48754 => _16
  # DEBUG __aD.48752 => D#54ptD.0
  # DEBUG __nD.48753 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48757 => _16
  # DEBUG thisD.48755 => D#50ptD.0
  # DEBUG D.48756 => D#51ptD.0
  # .MEM_47 = VDEF <.MEM_46>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 14, next block 1, flags: (NEW, REACHABLE)
;;    pred:       13 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_46(13), .MEM_47(14)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48760 => D#60ptD.0
  # DEBUG thisD.48761 => D#60ptD.0
  # DEBUG thisD.48762 => D#60ptD.0
  # .MEM_6 = VDEF <.MEM_28>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_6>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function Channel<T>::~Channel() [with T = Flit] (_ZN7ChannelI4FlitED0Ev, funcdef_no=2002, decl_uid=33024, cgraph_uid=488, symbol_order=489)


Pass statistics:
----------------

Channel<T>::~Channel() [with T = Flit] (struct ChannelD.31995 * const thisD.33025)
{
  struct pairD.32024 * * __nstartD.48855;
  struct pairD.32024 * * _11;
  struct ModuleD.27766 * * _14;
  charD.10 * const _15;
  const charD.10 * _16;
  charD.10 * const _17;
  const charD.10 * _18;
  struct pairD.32024 * * _19;
  struct pairD.32024 * * _20;
  struct pairD.32024 * _23;
  struct pairD.32024 * * pretmp_32;
  struct pairD.32024 * * prephitmp_33;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.46886 => this_2(D)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV7ChannelI4FlitED.33039 + 16B];
  # DEBUG D#169ptD.0 => &this_2(D)->_wait_queueD.32023
  # DEBUG thisD.46887 => D#169ptD.0
  # DEBUG D#167ptD.0 => &D#169ptD.0->cD.32988
  # DEBUG thisD.46888 => D#167ptD.0
  # DEBUG D#158ptD.0 => &D#167ptD.0->D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => D#167ptD.0
  # DEBUG D#12ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => D#167ptD.0
  # DEBUG D#11ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => D#167ptD.0
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # DEBUG D#297ptD.0 => &MEM[(struct dequeD.32026 *)this_2(D) + 120B].D.32945
  # DEBUG thisD.48849 => D#297ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
  if (_11 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _19 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped 
  _20 = _19 + 8;
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __nstart_21 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_startD.32400._M_nodeD.32298;
  # DEBUG D#149ptD.0 => D#297ptD.0
  # DEBUG __nstartD.48855 => __nstart_21
  # DEBUG __nfinishD.48854 => _20
  # DEBUG thisD.48853 => D#149ptD.0
  # DEBUG __nD.48856 => __nstart_21
  if (_20 <= __nstart_21)
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_3(4), .MEM_30(6)>
  # PT = nonlocal escaped 
  # __nstart_56 = PHI <__nstart_21(4), __nstart_24(6)>
  # DEBUG __nD.48856 => __nstart_56
  # VUSE <.MEM_58>
  # PT = nonlocal escaped 
  _23 = *__nstart_56;
  # DEBUG thisD.48858 => D#147ptD.0
  # DEBUG __pD.48857 => _23
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.48862 => _23
  # DEBUG __aD.48860 => D#133ptD.0
  # DEBUG __nD.48861 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.48865 => _23
  # DEBUG thisD.48863 => D#129ptD.0
  # DEBUG D.48864 => D#130ptD.0
  # .MEM_30 = VDEF <.MEM_58>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_23);
  # PT = nonlocal escaped 
  __nstart_24 = __nstart_56 + 8;
  # DEBUG __nD.48856 => __nstart_24
  # DEBUG __nD.48856 => __nstart_24
  if (_20 <= __nstart_24)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_30>
  pretmp_32 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_57 = PHI <.MEM_30(7), .MEM_3(3)>
  # PT = nonlocal escaped 
  # prephitmp_33 = PHI <pretmp_32(7), _11(3)>
  # DEBUG D#156ptD.0 => D#297ptD.0->_M_implD.32396._M_map_sizeD.32399
  # DEBUG D#298ptD.0 => MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => D#297ptD.0
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.48868 => D#298ptD.0
  # DEBUG thisD.48866 => D#154ptD.0
  # DEBUG __nD.48867 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.48869
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.48872 => D#298ptD.0
  # DEBUG __aD.48870 => D#125ptD.0
  # DEBUG __nD.48871 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.48875 => D#298ptD.0
  # DEBUG thisD.48873 => D#121ptD.0
  # DEBUG D.48874 => D#122ptD.0
  # .MEM_31 = VDEF <.MEM_57>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_33);
  # DEBUG thisD.46826 => &__map_allocD.48869
  # DEBUG thisD.46805 => &__map_allocD.48869
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       2 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_3(2), .MEM_31(8)>
  # DEBUG D#157ptD.0 => &D#297ptD.0->_M_implD.32396
  # DEBUG thisD.48850 => D#157ptD.0
  # DEBUG thisD.48851 => D#157ptD.0
  # DEBUG thisD.48852 => D#157ptD.0
  # .MEM_9 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
  # DEBUG D#168ptD.0 => &this_2(D)->D.33033
  # DEBUG thisD.46889 => D#168ptD.0
  # DEBUG D#296ptD.0 => &MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611
  # DEBUG thisD.48803 => D#296ptD.0
  # .MEM_36 = VDEF <.MEM_9>
  MEM[(struct ModuleD.27766 *)this_2(D)]._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV6ModuleD.28566 + 16B];
  # DEBUG D#84ptD.0 => &D#296ptD.0->_childrenD.28516
  # DEBUG thisD.48804 => D#84ptD.0
  # DEBUG D#78ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.46348 => D#78ptD.0
  # DEBUG D#81ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_finishD.28008
  # DEBUG D#80ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_startD.28007
  # DEBUG D#26ptD.0 => D#80ptD.0
  # DEBUG D#27ptD.0 => D#81ptD.0
  # DEBUG __firstD.46347 => D#26ptD.0
  # DEBUG __lastD.46346 => D#27ptD.0
  # DEBUG D.46345 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG __firstD.46077 => D#22ptD.0
  # DEBUG __lastD.46076 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.46066 => D#18ptD.0
  # DEBUG D.46065 => D#19ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.48805 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0->_M_implD.28005._M_end_of_storageD.28009
  # DEBUG D#76ptD.0 => (long intD.12) D#77ptD.0
  # VUSE <.MEM_36>
  # PT = nonlocal escaped 
  _14 = MEM[(struct _Vector_baseD.27772 *)this_2(D) + 72B]._M_implD.28005._M_startD.28007;
  # DEBUG D#75ptD.0 => (long intD.12) _14
  # DEBUG D#74ptD.0 => D#76ptD.0 - D#75ptD.0
  # DEBUG D#73ptD.0 => D#74ptD.0 /[ex] 8
  # DEBUG D#70ptD.0 => D#79ptD.0
  # DEBUG D#71ptD.0 => (long unsigned intD.14) D#73ptD.0
  # DEBUG __pD.48808 => _14
  # DEBUG thisD.48806 => D#70ptD.0
  # DEBUG __nD.48807 => D#71ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  if (_14 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#67ptD.0 => &D#68ptD.0->_M_implD.28005
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#69ptD.0
  # DEBUG __pD.48812 => _14
  # DEBUG __aD.48810 => D#65ptD.0
  # DEBUG __nD.48811 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG __pD.48815 => _14
  # DEBUG thisD.48813 => D#61ptD.0
  # DEBUG D.48814 => D#62ptD.0
  # .MEM_37 = VDEF <.MEM_36>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_14);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_36(9), .MEM_37(10)>
  # DEBUG D#72ptD.0 => &D#79ptD.0->_M_implD.28005
  # DEBUG thisD.48816 => D#72ptD.0
  # DEBUG thisD.48817 => D#72ptD.0
  # DEBUG thisD.48818 => D#72ptD.0
  # .MEM_42 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#296ptD.0->_fullnameD.27769
  # DEBUG thisD.48819 => D#83ptD.0
  # DEBUG thisD.48820 => D#83ptD.0
  # DEBUG thisD.48829 => D#83ptD.0
  # VUSE <.MEM_42>
  # PT = nonlocal escaped 
  _15 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48830 => D#83ptD.0
  # PT = nonlocal 
  _16 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 40B].D.15588._M_local_bufD.15590;
  if (_15 != _16)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#83ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48822 => D#83ptD.0
  # DEBUG __sizeD.48821 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#83ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48825 => _15
  # DEBUG __aD.48823 => D#54ptD.0
  # DEBUG __nD.48824 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48828 => _15
  # DEBUG thisD.48826 => D#50ptD.0
  # DEBUG D.48827 => D#51ptD.0
  # .MEM_43 = VDEF <.MEM_42>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_15);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_42(11), .MEM_43(12)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48831 => D#60ptD.0
  # DEBUG thisD.48832 => D#60ptD.0
  # DEBUG thisD.48833 => D#60ptD.0
  # .MEM_47 = VDEF <.MEM_28>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#82ptD.0 => &D#296ptD.0->_nameD.27768
  # DEBUG thisD.48834 => D#82ptD.0
  # DEBUG thisD.48835 => D#82ptD.0
  # DEBUG thisD.48844 => D#82ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _17 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48845 => D#82ptD.0
  # PT = nonlocal 
  _18 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 8B].D.15588._M_local_bufD.15590;
  if (_17 != _18)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#82ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48837 => D#82ptD.0
  # DEBUG __sizeD.48836 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#82ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48840 => _17
  # DEBUG __aD.48838 => D#54ptD.0
  # DEBUG __nD.48839 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48843 => _17
  # DEBUG thisD.48841 => D#50ptD.0
  # DEBUG D.48842 => D#51ptD.0
  # .MEM_48 = VDEF <.MEM_47>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 14, next block 1, flags: (NEW, REACHABLE)
;;    pred:       13 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_47(13), .MEM_48(14)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48846 => D#60ptD.0
  # DEBUG thisD.48847 => D#60ptD.0
  # DEBUG thisD.48848 => D#60ptD.0
  # .MEM_13 = VDEF <.MEM_29>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_13>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.33033.D.28611._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
Creating dr for *__nstart_56
analyze_innermost: success.
	base_address: __nstart_21
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_21
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_56
analyze_innermost: success.
	base_address: __nstart_21
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_21
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_56
analyze_innermost: success.
	base_address: __nstart_21
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_21
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_56
analyze_innermost: success.
	base_address: __nstart_21
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_21
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_21 + 8, + , 8](no_overflow) < _19 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _19 - (unsigned long) __nstart_21) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 1
  exit condition [__nstart_21 + 8, + , 8](no_overflow) < _19 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _19 - (unsigned long) __nstart_21) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_56
analyze_innermost: success.
	base_address: __nstart_21
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_21
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_56
analyze_innermost: success.
	base_address: __nstart_21
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_21
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_56
analyze_innermost: success.
	base_address: __nstart_21
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_21
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_56
analyze_innermost: success.
	base_address: __nstart_21
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_21
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_21 + 8, + , 8](no_overflow) < _19 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _19 - (unsigned long) __nstart_21) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:17, LOOPS:1, CONDITIONS:6, STMTS:248)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_9 })
  {
    <bb 2>:
    # DEBUG this => this_2(D)
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->D.33033.D.28611._vptr.Module = &MEM[(void *)&_ZTV7ChannelI4FlitE + 16B];
    # DEBUG D#169 => &this_2(D)->_wait_queue
    # DEBUG this => D#169
    # DEBUG D#167 => &D#169->c
    # DEBUG this => D#167
    # DEBUG D#158 => &D#167->D.32945
    # DEBUG this => D#158
    # DEBUG this => D#167
    # DEBUG D#12 => &D#167->D.32945._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#12
    # DEBUG D#166 => MEM[(const struct iterator &)D#167 + 48]._M_cur
    # DEBUG D.46875 => D#166
    # DEBUG D#165 => MEM[(const struct iterator &)D#167 + 48]._M_first
    # DEBUG D.46876 => D#165
    # DEBUG D#164 => MEM[(const struct iterator &)D#167 + 48]._M_last
    # DEBUG D.46877 => D#164
    # DEBUG D#163 => MEM[(const struct iterator &)D#167 + 48]._M_node
    # DEBUG D.46878 => D#163
    # DEBUG this => D#167
    # DEBUG D#11 => &D#167->D.32945._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#11
    # DEBUG D#162 => MEM[(const struct iterator &)D#167 + 16]._M_cur
    # DEBUG D.46871 => D#162
    # DEBUG D#161 => MEM[(const struct iterator &)D#167 + 16]._M_first
    # DEBUG D.46872 => D#161
    # DEBUG D#160 => MEM[(const struct iterator &)D#167 + 16]._M_last
    # DEBUG D.46873 => D#160
    # DEBUG D#159 => MEM[(const struct iterator &)D#167 + 16]._M_node
    # DEBUG D.46874 => D#159
    # DEBUG D#13 => D#167
    # DEBUG this => D#13
    # DEBUG __first => D#14
    # DEBUG __last => D#15
    # DEBUG D.46859 => D#16
    # DEBUG D#297 => &MEM[(struct deque *)this_2(D) + 120B].D.32945
    # DEBUG this => D#297
    # VUSE <.MEM_3>
    _11 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;
    if (_11 != 0B)
      goto <bb 3>;
    else
      goto <bb 9>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_8 bb_4 })
  {
    <bb 3>:
    # VUSE <.MEM_3>
    _19 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_finish._M_node;
    _20 = _19 + 8;
    # VUSE <.MEM_3>
    __nstart_21 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_start._M_node;
    # DEBUG D#149 => D#297
    # DEBUG __nstart => __nstart_21
    # DEBUG __nfinish => _20
    # DEBUG this => D#149
    # DEBUG __n => __nstart_21
    if (_20 <= __nstart_21)
      goto <bb 8>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_7 (preds = {bb_5 }, succs = {bb_16 })
  {
    <bb 7>:

  }
  bb_16 (preds = {bb_7 }, succs = {bb_8 })
  {
    <bb 16>:
    # VUSE <.MEM_30>
    pretmp_32 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;

  }
  bb_8 (preds = {bb_16 bb_3 }, succs = {bb_9 })
  {
    <bb 8>:
    # .MEM_57 = PHI <.MEM_30(16), .MEM_3(3)>
    # prephitmp_33 = PHI <pretmp_32(16), _11(3)>
    # DEBUG D#156 => D#297->_M_impl._M_map_size
    # DEBUG D#298 => MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
    # DEBUG D#154 => D#297
    # DEBUG D#155 => D#156
    # DEBUG __p => D#298
    # DEBUG this => D#154
    # DEBUG __n => D#155
    # DEBUG D#153 => D#155
    # DEBUG D#152 => D#154
    # DEBUG D#151 => D#152
    # DEBUG this => D#151
    # DEBUG D#150 => D#151
    # DEBUG this => D#150
    # DEBUG this => NULL
    # DEBUG D.46793 => NULL
    # DEBUG this => NULL
    # DEBUG D#125 => &__map_alloc
    # DEBUG D#126 => D#153
    # DEBUG __p => D#298
    # DEBUG __a => D#125
    # DEBUG __n => D#126
    # DEBUG D#124 => D#126
    # DEBUG D#123 => D#125
    # DEBUG D#121 => D#123
    # DEBUG D#122 => D#124
    # DEBUG __p => D#298
    # DEBUG this => D#121
    # DEBUG D.48874 => D#122
    # .MEM_31 = VDEF <.MEM_57>
    operator delete (prephitmp_33);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc

  }
  bb_9 (preds = {bb_2 bb_8 }, succs = {bb_10 bb_11 })
  {
    <bb 9>:
    # .MEM_26 = PHI <.MEM_3(2), .MEM_31(8)>
    # DEBUG D#157 => &D#297->_M_impl
    # DEBUG this => D#157
    # DEBUG this => D#157
    # DEBUG this => D#157
    # .MEM_9 = VDEF <.MEM_26>
    MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
    # DEBUG D#168 => &this_2(D)->D.33033
    # DEBUG this => D#168
    # DEBUG D#296 => &MEM[(struct TimedModule *)this_2(D)].D.28611
    # DEBUG this => D#296
    # .MEM_36 = VDEF <.MEM_9>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#84 => &D#296->_children
    # DEBUG this => D#84
    # DEBUG D#78 => &D#84->D.28514
    # DEBUG this => D#78
    # DEBUG D#81 => D#84->D.28514._M_impl._M_finish
    # DEBUG D#80 => D#84->D.28514._M_impl._M_start
    # DEBUG D#26 => D#80
    # DEBUG D#27 => D#81
    # DEBUG __first => D#26
    # DEBUG __last => D#27
    # DEBUG D.46345 => D#28
    # DEBUG D#25 => D#27
    # DEBUG D#24 => D#26
    # DEBUG D#22 => D#24
    # DEBUG D#23 => D#25
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.46066 => D#18
    # DEBUG D.46065 => D#19
    # DEBUG D#79 => &D#84->D.28514
    # DEBUG this => D#79
    # DEBUG D#77 => D#79->_M_impl._M_end_of_storage
    # DEBUG D#76 => (long int) D#77
    # VUSE <.MEM_36>
    _14 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#75 => (long int) _14
    # DEBUG D#74 => D#76 - D#75
    # DEBUG D#73 => D#74 /[ex] 8
    # DEBUG D#70 => D#79
    # DEBUG D#71 => (long unsigned int) D#73
    # DEBUG __p => _14
    # DEBUG this => D#70
    # DEBUG __n => D#71
    # DEBUG D#69 => D#71
    # DEBUG D#68 => D#70
    if (_14 != 0B)
      goto <bb 10>;
    else
      goto <bb 11>;

  }
  bb_10 (preds = {bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # DEBUG D#67 => &D#68->_M_impl
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#69
    # DEBUG __p => _14
    # DEBUG __a => D#65
    # DEBUG __n => D#66
    # DEBUG D#64 => D#66
    # DEBUG D#63 => D#65
    # DEBUG D#61 => D#63
    # DEBUG D#62 => D#64
    # DEBUG __p => _14
    # DEBUG this => D#61
    # DEBUG D.48814 => D#62
    # .MEM_37 = VDEF <.MEM_36>
    operator delete (_14);

  }
  bb_11 (preds = {bb_9 bb_10 }, succs = {bb_12 bb_13 })
  {
    <bb 11>:
    # .MEM_27 = PHI <.MEM_36(9), .MEM_37(10)>
    # DEBUG D#72 => &D#79->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_42 = VDEF <.MEM_27>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#83 => &D#296->_fullname
    # DEBUG this => D#83
    # DEBUG this => D#83
    # DEBUG this => D#83
    # VUSE <.MEM_42>
    _15 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#3 => D#83
    # DEBUG this => D#3
    # DEBUG this => D#83
    _16 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.15588._M_local_buf;
    if (_15 != _16)
      goto <bb 12>;
    else
      goto <bb 13>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 })
  {
    <bb 12>:
    # DEBUG D#59 => MEM[(struct basic_string *)D#83].D.15588._M_allocated_capacity
    # DEBUG D#58 => D#59
    # DEBUG this => D#83
    # DEBUG __size => D#58
    # DEBUG D#57 => D#58
    # DEBUG D#3 => D#83
    # DEBUG this => D#3
    # DEBUG this => D#83
    # DEBUG D#56 => &MEM[(struct basic_string *)D#83]._M_dataplus
    # DEBUG D#54 => D#56
    # DEBUG D#55 => D#57 + 1
    # DEBUG __p => _15
    # DEBUG __a => D#54
    # DEBUG __n => D#55
    # DEBUG D#53 => D#55
    # DEBUG D#52 => D#54
    # DEBUG D#50 => D#52
    # DEBUG D#51 => D#53
    # DEBUG __p => _15
    # DEBUG this => D#50
    # DEBUG D.48827 => D#51
    # .MEM_43 = VDEF <.MEM_42>
    operator delete (_15);

  }
  bb_13 (preds = {bb_11 bb_12 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # .MEM_28 = PHI <.MEM_42(11), .MEM_43(12)>
    # DEBUG D#60 => &MEM[(struct basic_string *)D#83]._M_dataplus
    # DEBUG this => D#60
    # DEBUG this => D#60
    # DEBUG this => D#60
    # .MEM_47 = VDEF <.MEM_28>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#82 => &D#296->_name
    # DEBUG this => D#82
    # DEBUG this => D#82
    # DEBUG this => D#82
    # VUSE <.MEM_47>
    _17 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#3 => D#82
    # DEBUG this => D#3
    # DEBUG this => D#82
    _18 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.15588._M_local_buf;
    if (_17 != _18)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:
    # DEBUG D#59 => MEM[(struct basic_string *)D#82].D.15588._M_allocated_capacity
    # DEBUG D#58 => D#59
    # DEBUG this => D#82
    # DEBUG __size => D#58
    # DEBUG D#57 => D#58
    # DEBUG D#3 => D#82
    # DEBUG this => D#3
    # DEBUG this => D#82
    # DEBUG D#56 => &MEM[(struct basic_string *)D#82]._M_dataplus
    # DEBUG D#54 => D#56
    # DEBUG D#55 => D#57 + 1
    # DEBUG __p => _17
    # DEBUG __a => D#54
    # DEBUG __n => D#55
    # DEBUG D#53 => D#55
    # DEBUG D#52 => D#54
    # DEBUG D#50 => D#52
    # DEBUG D#51 => D#53
    # DEBUG __p => _17
    # DEBUG this => D#50
    # DEBUG D.48842 => D#51
    # .MEM_48 = VDEF <.MEM_47>
    operator delete (_17);

  }
  bb_15 (preds = {bb_13 bb_14 }, succs = {bb_1 })
  {
    <bb 15>:
    # .MEM_29 = PHI <.MEM_47(13), .MEM_48(14)>
    # DEBUG D#60 => &MEM[(struct basic_string *)D#82]._M_dataplus
    # DEBUG this => D#60
    # DEBUG this => D#60
    # DEBUG this => D#60
    # .MEM_13 = VDEF <.MEM_29>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # .MEM_4 = VDEF <.MEM_13>
    operator delete (this_2(D));
    # VUSE <.MEM_4>
    return;

  }
  loop_1 (header = 5, latch = 6, niter = (((unsigned long) _19 - (unsigned long) __nstart_21) + 7) / 8, upper_bound = 2305843009213693951)
  {
    bb_5 (preds = {bb_4 bb_6 }, succs = {bb_7 bb_6 })
    {
      <bb 5>:
      # .MEM_58 = PHI <.MEM_3(4), .MEM_30(6)>
      # __nstart_56 = PHI <__nstart_21(4), __nstart_24(6)>
      # DEBUG __n => __nstart_56
      # VUSE <.MEM_58>
      _23 = *__nstart_56;
      # DEBUG this => D#147
      # DEBUG __p => _23
      # DEBUG __size => 16
      # DEBUG D#135 => &D#148->_M_impl
      # DEBUG D#133 => D#135
      # DEBUG __p => _23
      # DEBUG __a => D#133
      # DEBUG __n => D#134
      # DEBUG D#132 => D#134
      # DEBUG D#131 => D#133
      # DEBUG D#129 => D#131
      # DEBUG D#130 => D#132
      # DEBUG __p => _23
      # DEBUG this => D#129
      # DEBUG D.48864 => D#130
      # .MEM_30 = VDEF <.MEM_58>
      operator delete (_23);
      __nstart_24 = __nstart_56 + 8;
      # DEBUG __n => __nstart_24
      # DEBUG __n => __nstart_24
      if (_20 <= __nstart_24)
        goto <bb 7>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_5 })
    {
      <bb 6>:
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

Channel<T>::~Channel() [with T = Flit] (struct ChannelD.31995 * const thisD.33025)
{
  struct pairD.32024 * * __nstartD.48855;
  struct pairD.32024 * * _11;
  struct ModuleD.27766 * * _14;
  charD.10 * const _15;
  const charD.10 * _16;
  charD.10 * const _17;
  const charD.10 * _18;
  struct pairD.32024 * * _19;
  struct pairD.32024 * * _20;
  struct pairD.32024 * _23;
  struct pairD.32024 * * pretmp_32;
  struct pairD.32024 * * prephitmp_33;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.46886 => this_2(D)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV7ChannelI4FlitED.33039 + 16B];
  # DEBUG D#169ptD.0 => &this_2(D)->_wait_queueD.32023
  # DEBUG thisD.46887 => D#169ptD.0
  # DEBUG D#167ptD.0 => &D#169ptD.0->cD.32988
  # DEBUG thisD.46888 => D#167ptD.0
  # DEBUG D#158ptD.0 => &D#167ptD.0->D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => D#167ptD.0
  # DEBUG D#12ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => D#167ptD.0
  # DEBUG D#11ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => D#167ptD.0
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # DEBUG D#297ptD.0 => &MEM[(struct dequeD.32026 *)this_2(D) + 120B].D.32945
  # DEBUG thisD.48849 => D#297ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
  if (_11 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _19 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped 
  _20 = _19 + 8;
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __nstart_21 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_startD.32400._M_nodeD.32298;
  # DEBUG D#149ptD.0 => D#297ptD.0
  # DEBUG __nstartD.48855 => __nstart_21
  # DEBUG __nfinishD.48854 => _20
  # DEBUG thisD.48853 => D#149ptD.0
  # DEBUG __nD.48856 => __nstart_21
  if (_20 <= __nstart_21)
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_3(4), .MEM_30(6)>
  # PT = nonlocal escaped 
  # __nstart_56 = PHI <__nstart_21(4), __nstart_24(6)>
  # DEBUG __nD.48856 => __nstart_56
  # VUSE <.MEM_58>
  # PT = nonlocal escaped 
  _23 = *__nstart_56;
  # DEBUG thisD.48858 => D#147ptD.0
  # DEBUG __pD.48857 => _23
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.48862 => _23
  # DEBUG __aD.48860 => D#133ptD.0
  # DEBUG __nD.48861 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.48865 => _23
  # DEBUG thisD.48863 => D#129ptD.0
  # DEBUG D.48864 => D#130ptD.0
  # .MEM_30 = VDEF <.MEM_58>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_23);
  # PT = nonlocal escaped 
  __nstart_24 = __nstart_56 + 8;
  # DEBUG __nD.48856 => __nstart_24
  # DEBUG __nD.48856 => __nstart_24
  if (_20 <= __nstart_24)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 6, next block 16, flags: (NEW)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       16 [100.0%]  (FALLTHRU)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 8, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_30>
  pretmp_32 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 9, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_57 = PHI <.MEM_30(16), .MEM_3(3)>
  # PT = nonlocal escaped 
  # prephitmp_33 = PHI <pretmp_32(16), _11(3)>
  # DEBUG D#156ptD.0 => D#297ptD.0->_M_implD.32396._M_map_sizeD.32399
  # DEBUG D#298ptD.0 => MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => D#297ptD.0
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.48868 => D#298ptD.0
  # DEBUG thisD.48866 => D#154ptD.0
  # DEBUG __nD.48867 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.48869
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.48872 => D#298ptD.0
  # DEBUG __aD.48870 => D#125ptD.0
  # DEBUG __nD.48871 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.48875 => D#298ptD.0
  # DEBUG thisD.48873 => D#121ptD.0
  # DEBUG D.48874 => D#122ptD.0
  # .MEM_31 = VDEF <.MEM_57>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_33);
  # DEBUG thisD.46826 => &__map_allocD.48869
  # DEBUG thisD.46805 => &__map_allocD.48869
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       2 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_3(2), .MEM_31(8)>
  # DEBUG D#157ptD.0 => &D#297ptD.0->_M_implD.32396
  # DEBUG thisD.48850 => D#157ptD.0
  # DEBUG thisD.48851 => D#157ptD.0
  # DEBUG thisD.48852 => D#157ptD.0
  # .MEM_9 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
  # DEBUG D#168ptD.0 => &this_2(D)->D.33033
  # DEBUG thisD.46889 => D#168ptD.0
  # DEBUG D#296ptD.0 => &MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611
  # DEBUG thisD.48803 => D#296ptD.0
  # .MEM_36 = VDEF <.MEM_9>
  MEM[(struct ModuleD.27766 *)this_2(D)]._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV6ModuleD.28566 + 16B];
  # DEBUG D#84ptD.0 => &D#296ptD.0->_childrenD.28516
  # DEBUG thisD.48804 => D#84ptD.0
  # DEBUG D#78ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.46348 => D#78ptD.0
  # DEBUG D#81ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_finishD.28008
  # DEBUG D#80ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_startD.28007
  # DEBUG D#26ptD.0 => D#80ptD.0
  # DEBUG D#27ptD.0 => D#81ptD.0
  # DEBUG __firstD.46347 => D#26ptD.0
  # DEBUG __lastD.46346 => D#27ptD.0
  # DEBUG D.46345 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG __firstD.46077 => D#22ptD.0
  # DEBUG __lastD.46076 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.46066 => D#18ptD.0
  # DEBUG D.46065 => D#19ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.48805 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0->_M_implD.28005._M_end_of_storageD.28009
  # DEBUG D#76ptD.0 => (long intD.12) D#77ptD.0
  # VUSE <.MEM_36>
  # PT = nonlocal escaped 
  _14 = MEM[(struct _Vector_baseD.27772 *)this_2(D) + 72B]._M_implD.28005._M_startD.28007;
  # DEBUG D#75ptD.0 => (long intD.12) _14
  # DEBUG D#74ptD.0 => D#76ptD.0 - D#75ptD.0
  # DEBUG D#73ptD.0 => D#74ptD.0 /[ex] 8
  # DEBUG D#70ptD.0 => D#79ptD.0
  # DEBUG D#71ptD.0 => (long unsigned intD.14) D#73ptD.0
  # DEBUG __pD.48808 => _14
  # DEBUG thisD.48806 => D#70ptD.0
  # DEBUG __nD.48807 => D#71ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  if (_14 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#67ptD.0 => &D#68ptD.0->_M_implD.28005
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#69ptD.0
  # DEBUG __pD.48812 => _14
  # DEBUG __aD.48810 => D#65ptD.0
  # DEBUG __nD.48811 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG __pD.48815 => _14
  # DEBUG thisD.48813 => D#61ptD.0
  # DEBUG D.48814 => D#62ptD.0
  # .MEM_37 = VDEF <.MEM_36>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_14);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_36(9), .MEM_37(10)>
  # DEBUG D#72ptD.0 => &D#79ptD.0->_M_implD.28005
  # DEBUG thisD.48816 => D#72ptD.0
  # DEBUG thisD.48817 => D#72ptD.0
  # DEBUG thisD.48818 => D#72ptD.0
  # .MEM_42 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#296ptD.0->_fullnameD.27769
  # DEBUG thisD.48819 => D#83ptD.0
  # DEBUG thisD.48820 => D#83ptD.0
  # DEBUG thisD.48829 => D#83ptD.0
  # VUSE <.MEM_42>
  # PT = nonlocal escaped 
  _15 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48830 => D#83ptD.0
  # PT = nonlocal 
  _16 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 40B].D.15588._M_local_bufD.15590;
  if (_15 != _16)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#83ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48822 => D#83ptD.0
  # DEBUG __sizeD.48821 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#83ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48825 => _15
  # DEBUG __aD.48823 => D#54ptD.0
  # DEBUG __nD.48824 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48828 => _15
  # DEBUG thisD.48826 => D#50ptD.0
  # DEBUG D.48827 => D#51ptD.0
  # .MEM_43 = VDEF <.MEM_42>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_15);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_42(11), .MEM_43(12)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48831 => D#60ptD.0
  # DEBUG thisD.48832 => D#60ptD.0
  # DEBUG thisD.48833 => D#60ptD.0
  # .MEM_47 = VDEF <.MEM_28>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#82ptD.0 => &D#296ptD.0->_nameD.27768
  # DEBUG thisD.48834 => D#82ptD.0
  # DEBUG thisD.48835 => D#82ptD.0
  # DEBUG thisD.48844 => D#82ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _17 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48845 => D#82ptD.0
  # PT = nonlocal 
  _18 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 8B].D.15588._M_local_bufD.15590;
  if (_17 != _18)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#82ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48837 => D#82ptD.0
  # DEBUG __sizeD.48836 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#82ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48840 => _17
  # DEBUG __aD.48838 => D#54ptD.0
  # DEBUG __nD.48839 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48843 => _17
  # DEBUG thisD.48841 => D#50ptD.0
  # DEBUG D.48842 => D#51ptD.0
  # .MEM_48 = VDEF <.MEM_47>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 14, next block 1, flags: (NEW, REACHABLE)
;;    pred:       13 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_47(13), .MEM_48(14)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48846 => D#60ptD.0
  # DEBUG thisD.48847 => D#60ptD.0
  # DEBUG thisD.48848 => D#60ptD.0
  # .MEM_13 = VDEF <.MEM_29>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_13>
  # USE = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function FlitChannel::~FlitChannel() (_ZN11FlitChannelD2Ev, funcdef_no=2362, decl_uid=33833, cgraph_uid=848, symbol_order=850)


Pass statistics:
----------------

FlitChannel::~FlitChannel() (struct FlitChannelD.31994 * const thisD.33834)
{
  struct pairD.32024 * * __nstartD.48941;
  intD.9 * _5;
  struct pairD.32024 * * pretmp_12;
  struct pairD.32024 * * prephitmp_13;
  struct pairD.32024 * * _20;
  struct ModuleD.27766 * * _23;
  charD.10 * const _24;
  const charD.10 * _25;
  charD.10 * const _26;
  const charD.10 * _27;
  struct pairD.32024 * * _28;
  struct pairD.32024 * * _29;
  struct pairD.32024 * _32;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.33846.D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV11FlitChannelD.33854 + 16B];
  # DEBUG D#171ptD.0 => &this_2(D)->_activeD.33822
  # DEBUG thisD.46895 => D#171ptD.0
  # DEBUG D#103ptD.0 => &D#171ptD.0->D.33820
  # DEBUG thisD.46488 => D#103ptD.0
  # DEBUG D#106ptD.0 => D#171ptD.0->D.33820._M_implD.33311._M_finishD.33314
  # DEBUG D#105ptD.0 => D#171ptD.0->D.33820._M_implD.33311._M_startD.33313
  # DEBUG __firstD.46485 => D#105ptD.0
  # DEBUG __lastD.46486 => D#106ptD.0
  # DEBUG D.46487 => NULL
  # DEBUG D#33ptD.0 => D#105ptD.0
  # DEBUG D#34ptD.0 => D#106ptD.0
  # DEBUG __firstD.46117 => D#33ptD.0
  # DEBUG __lastD.46116 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.46106 => D#29ptD.0
  # DEBUG D.46105 => D#30ptD.0
  # DEBUG D#104ptD.0 => &D#171ptD.0->D.33820
  # DEBUG thisD.46896 => D#104ptD.0
  # DEBUG D#102ptD.0 => D#104ptD.0->_M_implD.33311._M_end_of_storageD.33315
  # DEBUG D#101ptD.0 => (long intD.12) D#102ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.33078 *)this_2(D) + 232B]._M_implD.33311._M_startD.33313;
  # DEBUG D#100ptD.0 => (long intD.12) _5
  # DEBUG D#99ptD.0 => D#101ptD.0 - D#100ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0 /[ex] 4
  # DEBUG D#97ptD.0 => (long unsigned intD.14) D#98ptD.0
  # DEBUG thisD.46899 => D#104ptD.0
  # DEBUG __pD.46898 => _5
  # DEBUG __nD.46897 => D#97ptD.0
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#95ptD.0 => &D#104ptD.0->_M_implD.33311
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#94ptD.0 => D#97ptD.0
  # DEBUG __pD.46903 => _5
  # DEBUG __aD.46901 => D#93ptD.0
  # DEBUG __nD.46902 => D#94ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0
  # DEBUG __pD.46906 => _5
  # DEBUG thisD.46904 => D#89ptD.0
  # DEBUG D.46905 => D#90ptD.0
  # .MEM_9 = VDEF <.MEM_3>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_3(2), .MEM_9(3)>
  # DEBUG D#96ptD.0 => &D#104ptD.0->_M_implD.33311
  # DEBUG thisD.46907 => D#96ptD.0
  # DEBUG thisD.46908 => D#96ptD.0
  # DEBUG thisD.46909 => D#96ptD.0
  # .MEM_14 = VDEF <.MEM_4>
  MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
  # DEBUG D#170ptD.0 => &this_2(D)->D.33846
  # DEBUG thisD.46891 => D#170ptD.0
  # .MEM_15 = VDEF <.MEM_14>
  MEM[(struct ChannelD.31995 *)this_2(D)].D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV7ChannelI4FlitED.33039 + 16B];
  # DEBUG D#169ptD.0 => &D#170ptD.0->_wait_queueD.32023
  # DEBUG thisD.46892 => D#169ptD.0
  # DEBUG D#167ptD.0 => &D#169ptD.0->cD.32988
  # DEBUG thisD.46893 => D#167ptD.0
  # DEBUG D#158ptD.0 => &D#167ptD.0->D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => D#167ptD.0
  # DEBUG D#12ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => D#167ptD.0
  # DEBUG D#11ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => D#167ptD.0
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # DEBUG D#300ptD.0 => &MEM[(struct dequeD.32026 *)this_2(D) + 120B].D.32945
  # DEBUG thisD.48935 => D#300ptD.0
  # VUSE <.MEM_15>
  # PT = nonlocal escaped 
  _20 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
  if (_20 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;
;;    succ:       5 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_15>
  # PT = nonlocal escaped 
  _28 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped 
  _29 = _28 + 8;
  # VUSE <.MEM_15>
  # PT = nonlocal escaped 
  __nstart_30 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_startD.32400._M_nodeD.32298;
  # DEBUG D#149ptD.0 => D#300ptD.0
  # DEBUG __nstartD.48941 => __nstart_30
  # DEBUG __nfinishD.48940 => _29
  # DEBUG thisD.48939 => D#149ptD.0
  # DEBUG __nD.48942 => __nstart_30
  if (_29 <= __nstart_30)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_68 = PHI <.MEM_15(6), .MEM_39(8)>
  # PT = nonlocal escaped 
  # __nstart_66 = PHI <__nstart_30(6), __nstart_33(8)>
  # DEBUG __nD.48942 => __nstart_66
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _32 = *__nstart_66;
  # DEBUG thisD.48944 => D#147ptD.0
  # DEBUG __pD.48943 => _32
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.48948 => _32
  # DEBUG __aD.48946 => D#133ptD.0
  # DEBUG __nD.48947 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.48951 => _32
  # DEBUG thisD.48949 => D#129ptD.0
  # DEBUG D.48950 => D#130ptD.0
  # .MEM_39 = VDEF <.MEM_68>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
  # PT = nonlocal escaped 
  __nstart_33 = __nstart_66 + 8;
  # DEBUG __nD.48942 => __nstart_33
  # DEBUG __nD.48942 => __nstart_33
  if (_29 <= __nstart_33)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_39>
  pretmp_12 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_67 = PHI <.MEM_39(9), .MEM_15(5)>
  # PT = nonlocal escaped 
  # prephitmp_13 = PHI <pretmp_12(9), _20(5)>
  # DEBUG D#156ptD.0 => D#300ptD.0->_M_implD.32396._M_map_sizeD.32399
  # DEBUG D#301ptD.0 => MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => D#300ptD.0
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.48954 => D#301ptD.0
  # DEBUG thisD.48952 => D#154ptD.0
  # DEBUG __nD.48953 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.48955
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.48958 => D#301ptD.0
  # DEBUG __aD.48956 => D#125ptD.0
  # DEBUG __nD.48957 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.48961 => D#301ptD.0
  # DEBUG thisD.48959 => D#121ptD.0
  # DEBUG D.48960 => D#122ptD.0
  # .MEM_40 = VDEF <.MEM_67>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_13);
  # DEBUG thisD.46826 => &__map_allocD.48955
  # DEBUG thisD.46805 => &__map_allocD.48955
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       4 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_15(4), .MEM_40(10)>
  # DEBUG D#157ptD.0 => &D#300ptD.0->_M_implD.32396
  # DEBUG thisD.48936 => D#157ptD.0
  # DEBUG thisD.48937 => D#157ptD.0
  # DEBUG thisD.48938 => D#157ptD.0
  # .MEM_18 = VDEF <.MEM_35>
  MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
  # DEBUG D#168ptD.0 => &D#170ptD.0->D.33033
  # DEBUG thisD.46894 => D#168ptD.0
  # DEBUG D#299ptD.0 => &MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611
  # DEBUG thisD.48889 => D#299ptD.0
  # .MEM_45 = VDEF <.MEM_18>
  MEM[(struct ModuleD.27766 *)this_2(D)]._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV6ModuleD.28566 + 16B];
  # DEBUG D#84ptD.0 => &D#299ptD.0->_childrenD.28516
  # DEBUG thisD.48890 => D#84ptD.0
  # DEBUG D#78ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.46348 => D#78ptD.0
  # DEBUG D#81ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_finishD.28008
  # DEBUG D#80ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_startD.28007
  # DEBUG D#26ptD.0 => D#80ptD.0
  # DEBUG D#27ptD.0 => D#81ptD.0
  # DEBUG __firstD.46347 => D#26ptD.0
  # DEBUG __lastD.46346 => D#27ptD.0
  # DEBUG D.46345 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG __firstD.46077 => D#22ptD.0
  # DEBUG __lastD.46076 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.46066 => D#18ptD.0
  # DEBUG D.46065 => D#19ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.48891 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0->_M_implD.28005._M_end_of_storageD.28009
  # DEBUG D#76ptD.0 => (long intD.12) D#77ptD.0
  # VUSE <.MEM_45>
  # PT = nonlocal escaped 
  _23 = MEM[(struct _Vector_baseD.27772 *)this_2(D) + 72B]._M_implD.28005._M_startD.28007;
  # DEBUG D#75ptD.0 => (long intD.12) _23
  # DEBUG D#74ptD.0 => D#76ptD.0 - D#75ptD.0
  # DEBUG D#73ptD.0 => D#74ptD.0 /[ex] 8
  # DEBUG D#70ptD.0 => D#79ptD.0
  # DEBUG D#71ptD.0 => (long unsigned intD.14) D#73ptD.0
  # DEBUG __pD.48894 => _23
  # DEBUG thisD.48892 => D#70ptD.0
  # DEBUG __nD.48893 => D#71ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  if (_23 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#67ptD.0 => &D#68ptD.0->_M_implD.28005
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#69ptD.0
  # DEBUG __pD.48898 => _23
  # DEBUG __aD.48896 => D#65ptD.0
  # DEBUG __nD.48897 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG __pD.48901 => _23
  # DEBUG thisD.48899 => D#61ptD.0
  # DEBUG D.48900 => D#62ptD.0
  # .MEM_46 = VDEF <.MEM_45>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_23);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_36 = PHI <.MEM_45(11), .MEM_46(12)>
  # DEBUG D#72ptD.0 => &D#79ptD.0->_M_implD.28005
  # DEBUG thisD.48902 => D#72ptD.0
  # DEBUG thisD.48903 => D#72ptD.0
  # DEBUG thisD.48904 => D#72ptD.0
  # .MEM_51 = VDEF <.MEM_36>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#299ptD.0->_fullnameD.27769
  # DEBUG thisD.48905 => D#83ptD.0
  # DEBUG thisD.48906 => D#83ptD.0
  # DEBUG thisD.48915 => D#83ptD.0
  # VUSE <.MEM_51>
  # PT = nonlocal escaped 
  _24 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48916 => D#83ptD.0
  # PT = nonlocal 
  _25 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 40B].D.15588._M_local_bufD.15590;
  if (_24 != _25)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#83ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48908 => D#83ptD.0
  # DEBUG __sizeD.48907 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#83ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48911 => _24
  # DEBUG __aD.48909 => D#54ptD.0
  # DEBUG __nD.48910 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48914 => _24
  # DEBUG thisD.48912 => D#50ptD.0
  # DEBUG D.48913 => D#51ptD.0
  # .MEM_52 = VDEF <.MEM_51>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_51(13), .MEM_52(14)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48917 => D#60ptD.0
  # DEBUG thisD.48918 => D#60ptD.0
  # DEBUG thisD.48919 => D#60ptD.0
  # .MEM_56 = VDEF <.MEM_37>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#82ptD.0 => &D#299ptD.0->_nameD.27768
  # DEBUG thisD.48920 => D#82ptD.0
  # DEBUG thisD.48921 => D#82ptD.0
  # DEBUG thisD.48930 => D#82ptD.0
  # VUSE <.MEM_56>
  # PT = nonlocal escaped 
  _26 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48931 => D#82ptD.0
  # PT = nonlocal 
  _27 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 8B].D.15588._M_local_bufD.15590;
  if (_26 != _27)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#82ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48923 => D#82ptD.0
  # DEBUG __sizeD.48922 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#82ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48926 => _26
  # DEBUG __aD.48924 => D#54ptD.0
  # DEBUG __nD.48925 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48929 => _26
  # DEBUG thisD.48927 => D#50ptD.0
  # DEBUG D.48928 => D#51ptD.0
  # .MEM_57 = VDEF <.MEM_56>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 16, next block 1, flags: (NEW, REACHABLE)
;;    pred:       15 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_56(15), .MEM_57(16)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48932 => D#60ptD.0
  # DEBUG thisD.48933 => D#60ptD.0
  # DEBUG thisD.48934 => D#60ptD.0
  # .MEM_6 = VDEF <.MEM_38>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_6>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.33846.D.33033.D.28611._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 232B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 232
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 232B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
Creating dr for *__nstart_66
analyze_innermost: success.
	base_address: __nstart_30
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_30
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_66
analyze_innermost: success.
	base_address: __nstart_30
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_30
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_66
analyze_innermost: success.
	base_address: __nstart_30
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_30
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_66
analyze_innermost: success.
	base_address: __nstart_30
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_30
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_30 + 8, + , 8](no_overflow) < _28 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _28 - (unsigned long) __nstart_30) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 1
  exit condition [__nstart_30 + 8, + , 8](no_overflow) < _28 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _28 - (unsigned long) __nstart_30) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_66
analyze_innermost: success.
	base_address: __nstart_30
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_30
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_66
analyze_innermost: success.
	base_address: __nstart_30
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_30
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_66
analyze_innermost: success.
	base_address: __nstart_30
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_30
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_66
analyze_innermost: success.
	base_address: __nstart_30
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_30
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_30 + 8, + , 8](no_overflow) < _28 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _28 - (unsigned long) __nstart_30) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)this_2(D) + 120B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:19, LOOPS:1, CONDITIONS:7, STMTS:300)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->D.33846.D.33033.D.28611._vptr.Module = &MEM[(void *)&_ZTV11FlitChannel + 16B];
    # DEBUG D#171 => &this_2(D)->_active
    # DEBUG this => D#171
    # DEBUG D#103 => &D#171->D.33820
    # DEBUG this => D#103
    # DEBUG D#106 => D#171->D.33820._M_impl._M_finish
    # DEBUG D#105 => D#171->D.33820._M_impl._M_start
    # DEBUG __first => D#105
    # DEBUG __last => D#106
    # DEBUG D.46487 => NULL
    # DEBUG D#33 => D#105
    # DEBUG D#34 => D#106
    # DEBUG __first => D#33
    # DEBUG __last => D#34
    # DEBUG D#32 => D#34
    # DEBUG D#31 => D#33
    # DEBUG D#29 => D#31
    # DEBUG D#30 => D#32
    # DEBUG D.46106 => D#29
    # DEBUG D.46105 => D#30
    # DEBUG D#104 => &D#171->D.33820
    # DEBUG this => D#104
    # DEBUG D#102 => D#104->_M_impl._M_end_of_storage
    # DEBUG D#101 => (long int) D#102
    # VUSE <.MEM_3>
    _5 = MEM[(struct _Vector_base *)this_2(D) + 232B]._M_impl._M_start;
    # DEBUG D#100 => (long int) _5
    # DEBUG D#99 => D#101 - D#100
    # DEBUG D#98 => D#99 /[ex] 4
    # DEBUG D#97 => (long unsigned int) D#98
    # DEBUG this => D#104
    # DEBUG __p => _5
    # DEBUG __n => D#97
    if (_5 != 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:
    # DEBUG D#95 => &D#104->_M_impl
    # DEBUG D#93 => D#95
    # DEBUG D#94 => D#97
    # DEBUG __p => _5
    # DEBUG __a => D#93
    # DEBUG __n => D#94
    # DEBUG D#92 => D#94
    # DEBUG D#91 => D#93
    # DEBUG D#89 => D#91
    # DEBUG D#90 => D#92
    # DEBUG __p => _5
    # DEBUG this => D#89
    # DEBUG D.46905 => D#90
    # .MEM_9 = VDEF <.MEM_3>
    operator delete (_5);

  }
  bb_4 (preds = {bb_2 bb_3 }, succs = {bb_5 bb_11 })
  {
    <bb 4>:
    # .MEM_4 = PHI <.MEM_3(2), .MEM_9(3)>
    # DEBUG D#96 => &D#104->_M_impl
    # DEBUG this => D#96
    # DEBUG this => D#96
    # DEBUG this => D#96
    # .MEM_14 = VDEF <.MEM_4>
    MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
    # DEBUG D#170 => &this_2(D)->D.33846
    # DEBUG this => D#170
    # .MEM_15 = VDEF <.MEM_14>
    MEM[(struct Channel *)this_2(D)].D.33033.D.28611._vptr.Module = &MEM[(void *)&_ZTV7ChannelI4FlitE + 16B];
    # DEBUG D#169 => &D#170->_wait_queue
    # DEBUG this => D#169
    # DEBUG D#167 => &D#169->c
    # DEBUG this => D#167
    # DEBUG D#158 => &D#167->D.32945
    # DEBUG this => D#158
    # DEBUG this => D#167
    # DEBUG D#12 => &D#167->D.32945._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#12
    # DEBUG D#166 => MEM[(const struct iterator &)D#167 + 48]._M_cur
    # DEBUG D.46875 => D#166
    # DEBUG D#165 => MEM[(const struct iterator &)D#167 + 48]._M_first
    # DEBUG D.46876 => D#165
    # DEBUG D#164 => MEM[(const struct iterator &)D#167 + 48]._M_last
    # DEBUG D.46877 => D#164
    # DEBUG D#163 => MEM[(const struct iterator &)D#167 + 48]._M_node
    # DEBUG D.46878 => D#163
    # DEBUG this => D#167
    # DEBUG D#11 => &D#167->D.32945._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#11
    # DEBUG D#162 => MEM[(const struct iterator &)D#167 + 16]._M_cur
    # DEBUG D.46871 => D#162
    # DEBUG D#161 => MEM[(const struct iterator &)D#167 + 16]._M_first
    # DEBUG D.46872 => D#161
    # DEBUG D#160 => MEM[(const struct iterator &)D#167 + 16]._M_last
    # DEBUG D.46873 => D#160
    # DEBUG D#159 => MEM[(const struct iterator &)D#167 + 16]._M_node
    # DEBUG D.46874 => D#159
    # DEBUG D#13 => D#167
    # DEBUG this => D#13
    # DEBUG __first => D#14
    # DEBUG __last => D#15
    # DEBUG D.46859 => D#16
    # DEBUG D#300 => &MEM[(struct deque *)this_2(D) + 120B].D.32945
    # DEBUG this => D#300
    # VUSE <.MEM_15>
    _20 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;
    if (_20 != 0B)
      goto <bb 5>;
    else
      goto <bb 11>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_10 bb_6 })
  {
    <bb 5>:
    # VUSE <.MEM_15>
    _28 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_finish._M_node;
    _29 = _28 + 8;
    # VUSE <.MEM_15>
    __nstart_30 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_start._M_node;
    # DEBUG D#149 => D#300
    # DEBUG __nstart => __nstart_30
    # DEBUG __nfinish => _29
    # DEBUG this => D#149
    # DEBUG __n => __nstart_30
    if (_29 <= __nstart_30)
      goto <bb 10>;
    else
      goto <bb 6>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 })
  {
    <bb 6>:

  }
  bb_9 (preds = {bb_7 }, succs = {bb_18 })
  {
    <bb 9>:

  }
  bb_18 (preds = {bb_9 }, succs = {bb_10 })
  {
    <bb 18>:
    # VUSE <.MEM_39>
    pretmp_12 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;

  }
  bb_10 (preds = {bb_18 bb_5 }, succs = {bb_11 })
  {
    <bb 10>:
    # .MEM_67 = PHI <.MEM_39(18), .MEM_15(5)>
    # prephitmp_13 = PHI <pretmp_12(18), _20(5)>
    # DEBUG D#156 => D#300->_M_impl._M_map_size
    # DEBUG D#301 => MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
    # DEBUG D#154 => D#300
    # DEBUG D#155 => D#156
    # DEBUG __p => D#301
    # DEBUG this => D#154
    # DEBUG __n => D#155
    # DEBUG D#153 => D#155
    # DEBUG D#152 => D#154
    # DEBUG D#151 => D#152
    # DEBUG this => D#151
    # DEBUG D#150 => D#151
    # DEBUG this => D#150
    # DEBUG this => NULL
    # DEBUG D.46793 => NULL
    # DEBUG this => NULL
    # DEBUG D#125 => &__map_alloc
    # DEBUG D#126 => D#153
    # DEBUG __p => D#301
    # DEBUG __a => D#125
    # DEBUG __n => D#126
    # DEBUG D#124 => D#126
    # DEBUG D#123 => D#125
    # DEBUG D#121 => D#123
    # DEBUG D#122 => D#124
    # DEBUG __p => D#301
    # DEBUG this => D#121
    # DEBUG D.48960 => D#122
    # .MEM_40 = VDEF <.MEM_67>
    operator delete (prephitmp_13);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc

  }
  bb_11 (preds = {bb_4 bb_10 }, succs = {bb_12 bb_13 })
  {
    <bb 11>:
    # .MEM_35 = PHI <.MEM_15(4), .MEM_40(10)>
    # DEBUG D#157 => &D#300->_M_impl
    # DEBUG this => D#157
    # DEBUG this => D#157
    # DEBUG this => D#157
    # .MEM_18 = VDEF <.MEM_35>
    MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
    # DEBUG D#168 => &D#170->D.33033
    # DEBUG this => D#168
    # DEBUG D#299 => &MEM[(struct TimedModule *)this_2(D)].D.28611
    # DEBUG this => D#299
    # .MEM_45 = VDEF <.MEM_18>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#84 => &D#299->_children
    # DEBUG this => D#84
    # DEBUG D#78 => &D#84->D.28514
    # DEBUG this => D#78
    # DEBUG D#81 => D#84->D.28514._M_impl._M_finish
    # DEBUG D#80 => D#84->D.28514._M_impl._M_start
    # DEBUG D#26 => D#80
    # DEBUG D#27 => D#81
    # DEBUG __first => D#26
    # DEBUG __last => D#27
    # DEBUG D.46345 => D#28
    # DEBUG D#25 => D#27
    # DEBUG D#24 => D#26
    # DEBUG D#22 => D#24
    # DEBUG D#23 => D#25
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.46066 => D#18
    # DEBUG D.46065 => D#19
    # DEBUG D#79 => &D#84->D.28514
    # DEBUG this => D#79
    # DEBUG D#77 => D#79->_M_impl._M_end_of_storage
    # DEBUG D#76 => (long int) D#77
    # VUSE <.MEM_45>
    _23 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#75 => (long int) _23
    # DEBUG D#74 => D#76 - D#75
    # DEBUG D#73 => D#74 /[ex] 8
    # DEBUG D#70 => D#79
    # DEBUG D#71 => (long unsigned int) D#73
    # DEBUG __p => _23
    # DEBUG this => D#70
    # DEBUG __n => D#71
    # DEBUG D#69 => D#71
    # DEBUG D#68 => D#70
    if (_23 != 0B)
      goto <bb 12>;
    else
      goto <bb 13>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 })
  {
    <bb 12>:
    # DEBUG D#67 => &D#68->_M_impl
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#69
    # DEBUG __p => _23
    # DEBUG __a => D#65
    # DEBUG __n => D#66
    # DEBUG D#64 => D#66
    # DEBUG D#63 => D#65
    # DEBUG D#61 => D#63
    # DEBUG D#62 => D#64
    # DEBUG __p => _23
    # DEBUG this => D#61
    # DEBUG D.48900 => D#62
    # .MEM_46 = VDEF <.MEM_45>
    operator delete (_23);

  }
  bb_13 (preds = {bb_11 bb_12 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # .MEM_36 = PHI <.MEM_45(11), .MEM_46(12)>
    # DEBUG D#72 => &D#79->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_51 = VDEF <.MEM_36>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#83 => &D#299->_fullname
    # DEBUG this => D#83
    # DEBUG this => D#83
    # DEBUG this => D#83
    # VUSE <.MEM_51>
    _24 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#3 => D#83
    # DEBUG this => D#3
    # DEBUG this => D#83
    _25 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.15588._M_local_buf;
    if (_24 != _25)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:
    # DEBUG D#59 => MEM[(struct basic_string *)D#83].D.15588._M_allocated_capacity
    # DEBUG D#58 => D#59
    # DEBUG this => D#83
    # DEBUG __size => D#58
    # DEBUG D#57 => D#58
    # DEBUG D#3 => D#83
    # DEBUG this => D#3
    # DEBUG this => D#83
    # DEBUG D#56 => &MEM[(struct basic_string *)D#83]._M_dataplus
    # DEBUG D#54 => D#56
    # DEBUG D#55 => D#57 + 1
    # DEBUG __p => _24
    # DEBUG __a => D#54
    # DEBUG __n => D#55
    # DEBUG D#53 => D#55
    # DEBUG D#52 => D#54
    # DEBUG D#50 => D#52
    # DEBUG D#51 => D#53
    # DEBUG __p => _24
    # DEBUG this => D#50
    # DEBUG D.48913 => D#51
    # .MEM_52 = VDEF <.MEM_51>
    operator delete (_24);

  }
  bb_15 (preds = {bb_13 bb_14 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_37 = PHI <.MEM_51(13), .MEM_52(14)>
    # DEBUG D#60 => &MEM[(struct basic_string *)D#83]._M_dataplus
    # DEBUG this => D#60
    # DEBUG this => D#60
    # DEBUG this => D#60
    # .MEM_56 = VDEF <.MEM_37>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#82 => &D#299->_name
    # DEBUG this => D#82
    # DEBUG this => D#82
    # DEBUG this => D#82
    # VUSE <.MEM_56>
    _26 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#3 => D#82
    # DEBUG this => D#3
    # DEBUG this => D#82
    _27 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.15588._M_local_buf;
    if (_26 != _27)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # DEBUG D#59 => MEM[(struct basic_string *)D#82].D.15588._M_allocated_capacity
    # DEBUG D#58 => D#59
    # DEBUG this => D#82
    # DEBUG __size => D#58
    # DEBUG D#57 => D#58
    # DEBUG D#3 => D#82
    # DEBUG this => D#3
    # DEBUG this => D#82
    # DEBUG D#56 => &MEM[(struct basic_string *)D#82]._M_dataplus
    # DEBUG D#54 => D#56
    # DEBUG D#55 => D#57 + 1
    # DEBUG __p => _26
    # DEBUG __a => D#54
    # DEBUG __n => D#55
    # DEBUG D#53 => D#55
    # DEBUG D#52 => D#54
    # DEBUG D#50 => D#52
    # DEBUG D#51 => D#53
    # DEBUG __p => _26
    # DEBUG this => D#50
    # DEBUG D.48928 => D#51
    # .MEM_57 = VDEF <.MEM_56>
    operator delete (_26);

  }
  bb_17 (preds = {bb_15 bb_16 }, succs = {bb_1 })
  {
    <bb 17>:
    # .MEM_38 = PHI <.MEM_56(15), .MEM_57(16)>
    # DEBUG D#60 => &MEM[(struct basic_string *)D#82]._M_dataplus
    # DEBUG this => D#60
    # DEBUG this => D#60
    # DEBUG this => D#60
    # .MEM_6 = VDEF <.MEM_38>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # VUSE <.MEM_6>
    return;

  }
  loop_1 (header = 7, latch = 8, niter = (((unsigned long) _28 - (unsigned long) __nstart_30) + 7) / 8, upper_bound = 2305843009213693951)
  {
    bb_7 (preds = {bb_6 bb_8 }, succs = {bb_9 bb_8 })
    {
      <bb 7>:
      # .MEM_68 = PHI <.MEM_15(6), .MEM_39(8)>
      # __nstart_66 = PHI <__nstart_30(6), __nstart_33(8)>
      # DEBUG __n => __nstart_66
      # VUSE <.MEM_68>
      _32 = *__nstart_66;
      # DEBUG this => D#147
      # DEBUG __p => _32
      # DEBUG __size => 16
      # DEBUG D#135 => &D#148->_M_impl
      # DEBUG D#133 => D#135
      # DEBUG __p => _32
      # DEBUG __a => D#133
      # DEBUG __n => D#134
      # DEBUG D#132 => D#134
      # DEBUG D#131 => D#133
      # DEBUG D#129 => D#131
      # DEBUG D#130 => D#132
      # DEBUG __p => _32
      # DEBUG this => D#129
      # DEBUG D.48950 => D#130
      # .MEM_39 = VDEF <.MEM_68>
      operator delete (_32);
      __nstart_33 = __nstart_66 + 8;
      # DEBUG __n => __nstart_33
      # DEBUG __n => __nstart_33
      if (_29 <= __nstart_33)
        goto <bb 9>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_7 })
    {
      <bb 8>:
      goto <bb 7>;

    }
  }
}

Pass statistics:
----------------

FlitChannel::~FlitChannel() (struct FlitChannelD.31994 * const thisD.33834)
{
  struct pairD.32024 * * __nstartD.48941;
  intD.9 * _5;
  struct pairD.32024 * * pretmp_12;
  struct pairD.32024 * * prephitmp_13;
  struct pairD.32024 * * _20;
  struct ModuleD.27766 * * _23;
  charD.10 * const _24;
  const charD.10 * _25;
  charD.10 * const _26;
  const charD.10 * _27;
  struct pairD.32024 * * _28;
  struct pairD.32024 * * _29;
  struct pairD.32024 * _32;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.33846.D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV11FlitChannelD.33854 + 16B];
  # DEBUG D#171ptD.0 => &this_2(D)->_activeD.33822
  # DEBUG thisD.46895 => D#171ptD.0
  # DEBUG D#103ptD.0 => &D#171ptD.0->D.33820
  # DEBUG thisD.46488 => D#103ptD.0
  # DEBUG D#106ptD.0 => D#171ptD.0->D.33820._M_implD.33311._M_finishD.33314
  # DEBUG D#105ptD.0 => D#171ptD.0->D.33820._M_implD.33311._M_startD.33313
  # DEBUG __firstD.46485 => D#105ptD.0
  # DEBUG __lastD.46486 => D#106ptD.0
  # DEBUG D.46487 => NULL
  # DEBUG D#33ptD.0 => D#105ptD.0
  # DEBUG D#34ptD.0 => D#106ptD.0
  # DEBUG __firstD.46117 => D#33ptD.0
  # DEBUG __lastD.46116 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.46106 => D#29ptD.0
  # DEBUG D.46105 => D#30ptD.0
  # DEBUG D#104ptD.0 => &D#171ptD.0->D.33820
  # DEBUG thisD.46896 => D#104ptD.0
  # DEBUG D#102ptD.0 => D#104ptD.0->_M_implD.33311._M_end_of_storageD.33315
  # DEBUG D#101ptD.0 => (long intD.12) D#102ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.33078 *)this_2(D) + 232B]._M_implD.33311._M_startD.33313;
  # DEBUG D#100ptD.0 => (long intD.12) _5
  # DEBUG D#99ptD.0 => D#101ptD.0 - D#100ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0 /[ex] 4
  # DEBUG D#97ptD.0 => (long unsigned intD.14) D#98ptD.0
  # DEBUG thisD.46899 => D#104ptD.0
  # DEBUG __pD.46898 => _5
  # DEBUG __nD.46897 => D#97ptD.0
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#95ptD.0 => &D#104ptD.0->_M_implD.33311
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#94ptD.0 => D#97ptD.0
  # DEBUG __pD.46903 => _5
  # DEBUG __aD.46901 => D#93ptD.0
  # DEBUG __nD.46902 => D#94ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0
  # DEBUG __pD.46906 => _5
  # DEBUG thisD.46904 => D#89ptD.0
  # DEBUG D.46905 => D#90ptD.0
  # .MEM_9 = VDEF <.MEM_3>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_3(2), .MEM_9(3)>
  # DEBUG D#96ptD.0 => &D#104ptD.0->_M_implD.33311
  # DEBUG thisD.46907 => D#96ptD.0
  # DEBUG thisD.46908 => D#96ptD.0
  # DEBUG thisD.46909 => D#96ptD.0
  # .MEM_14 = VDEF <.MEM_4>
  MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
  # DEBUG D#170ptD.0 => &this_2(D)->D.33846
  # DEBUG thisD.46891 => D#170ptD.0
  # .MEM_15 = VDEF <.MEM_14>
  MEM[(struct ChannelD.31995 *)this_2(D)].D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV7ChannelI4FlitED.33039 + 16B];
  # DEBUG D#169ptD.0 => &D#170ptD.0->_wait_queueD.32023
  # DEBUG thisD.46892 => D#169ptD.0
  # DEBUG D#167ptD.0 => &D#169ptD.0->cD.32988
  # DEBUG thisD.46893 => D#167ptD.0
  # DEBUG D#158ptD.0 => &D#167ptD.0->D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => D#167ptD.0
  # DEBUG D#12ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => D#167ptD.0
  # DEBUG D#11ptD.0 => &D#167ptD.0->D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)D#167ptD.0 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => D#167ptD.0
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # DEBUG D#300ptD.0 => &MEM[(struct dequeD.32026 *)this_2(D) + 120B].D.32945
  # DEBUG thisD.48935 => D#300ptD.0
  # VUSE <.MEM_15>
  # PT = nonlocal escaped 
  _20 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
  if (_20 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;
;;    succ:       5 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_15>
  # PT = nonlocal escaped 
  _28 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped 
  _29 = _28 + 8;
  # VUSE <.MEM_15>
  # PT = nonlocal escaped 
  __nstart_30 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_startD.32400._M_nodeD.32298;
  # DEBUG D#149ptD.0 => D#300ptD.0
  # DEBUG __nstartD.48941 => __nstart_30
  # DEBUG __nfinishD.48940 => _29
  # DEBUG thisD.48939 => D#149ptD.0
  # DEBUG __nD.48942 => __nstart_30
  if (_29 <= __nstart_30)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_68 = PHI <.MEM_15(6), .MEM_39(8)>
  # PT = nonlocal escaped 
  # __nstart_66 = PHI <__nstart_30(6), __nstart_33(8)>
  # DEBUG __nD.48942 => __nstart_66
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _32 = *__nstart_66;
  # DEBUG thisD.48944 => D#147ptD.0
  # DEBUG __pD.48943 => _32
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.48948 => _32
  # DEBUG __aD.48946 => D#133ptD.0
  # DEBUG __nD.48947 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.48951 => _32
  # DEBUG thisD.48949 => D#129ptD.0
  # DEBUG D.48950 => D#130ptD.0
  # .MEM_39 = VDEF <.MEM_68>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
  # PT = nonlocal escaped 
  __nstart_33 = __nstart_66 + 8;
  # DEBUG __nD.48942 => __nstart_33
  # DEBUG __nD.48942 => __nstart_33
  if (_29 <= __nstart_33)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 18, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       18 [100.0%]  (FALLTHRU)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 9, next block 10, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_39>
  pretmp_12 = MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 11, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_67 = PHI <.MEM_39(18), .MEM_15(5)>
  # PT = nonlocal escaped 
  # prephitmp_13 = PHI <pretmp_12(18), _20(5)>
  # DEBUG D#156ptD.0 => D#300ptD.0->_M_implD.32396._M_map_sizeD.32399
  # DEBUG D#301ptD.0 => MEM[(struct _Deque_baseD.32030 *)this_2(D) + 120B]._M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => D#300ptD.0
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.48954 => D#301ptD.0
  # DEBUG thisD.48952 => D#154ptD.0
  # DEBUG __nD.48953 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.48955
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.48958 => D#301ptD.0
  # DEBUG __aD.48956 => D#125ptD.0
  # DEBUG __nD.48957 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.48961 => D#301ptD.0
  # DEBUG thisD.48959 => D#121ptD.0
  # DEBUG D.48960 => D#122ptD.0
  # .MEM_40 = VDEF <.MEM_67>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_13);
  # DEBUG thisD.46826 => &__map_allocD.48955
  # DEBUG thisD.46805 => &__map_allocD.48955
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       4 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_15(4), .MEM_40(10)>
  # DEBUG D#157ptD.0 => &D#300ptD.0->_M_implD.32396
  # DEBUG thisD.48936 => D#157ptD.0
  # DEBUG thisD.48937 => D#157ptD.0
  # DEBUG thisD.48938 => D#157ptD.0
  # .MEM_18 = VDEF <.MEM_35>
  MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
  # DEBUG D#168ptD.0 => &D#170ptD.0->D.33033
  # DEBUG thisD.46894 => D#168ptD.0
  # DEBUG D#299ptD.0 => &MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611
  # DEBUG thisD.48889 => D#299ptD.0
  # .MEM_45 = VDEF <.MEM_18>
  MEM[(struct ModuleD.27766 *)this_2(D)]._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV6ModuleD.28566 + 16B];
  # DEBUG D#84ptD.0 => &D#299ptD.0->_childrenD.28516
  # DEBUG thisD.48890 => D#84ptD.0
  # DEBUG D#78ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.46348 => D#78ptD.0
  # DEBUG D#81ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_finishD.28008
  # DEBUG D#80ptD.0 => D#84ptD.0->D.28514._M_implD.28005._M_startD.28007
  # DEBUG D#26ptD.0 => D#80ptD.0
  # DEBUG D#27ptD.0 => D#81ptD.0
  # DEBUG __firstD.46347 => D#26ptD.0
  # DEBUG __lastD.46346 => D#27ptD.0
  # DEBUG D.46345 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG __firstD.46077 => D#22ptD.0
  # DEBUG __lastD.46076 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.46066 => D#18ptD.0
  # DEBUG D.46065 => D#19ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.28514
  # DEBUG thisD.48891 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0->_M_implD.28005._M_end_of_storageD.28009
  # DEBUG D#76ptD.0 => (long intD.12) D#77ptD.0
  # VUSE <.MEM_45>
  # PT = nonlocal escaped 
  _23 = MEM[(struct _Vector_baseD.27772 *)this_2(D) + 72B]._M_implD.28005._M_startD.28007;
  # DEBUG D#75ptD.0 => (long intD.12) _23
  # DEBUG D#74ptD.0 => D#76ptD.0 - D#75ptD.0
  # DEBUG D#73ptD.0 => D#74ptD.0 /[ex] 8
  # DEBUG D#70ptD.0 => D#79ptD.0
  # DEBUG D#71ptD.0 => (long unsigned intD.14) D#73ptD.0
  # DEBUG __pD.48894 => _23
  # DEBUG thisD.48892 => D#70ptD.0
  # DEBUG __nD.48893 => D#71ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  if (_23 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#67ptD.0 => &D#68ptD.0->_M_implD.28005
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#69ptD.0
  # DEBUG __pD.48898 => _23
  # DEBUG __aD.48896 => D#65ptD.0
  # DEBUG __nD.48897 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG __pD.48901 => _23
  # DEBUG thisD.48899 => D#61ptD.0
  # DEBUG D.48900 => D#62ptD.0
  # .MEM_46 = VDEF <.MEM_45>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_23);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_36 = PHI <.MEM_45(11), .MEM_46(12)>
  # DEBUG D#72ptD.0 => &D#79ptD.0->_M_implD.28005
  # DEBUG thisD.48902 => D#72ptD.0
  # DEBUG thisD.48903 => D#72ptD.0
  # DEBUG thisD.48904 => D#72ptD.0
  # .MEM_51 = VDEF <.MEM_36>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#299ptD.0->_fullnameD.27769
  # DEBUG thisD.48905 => D#83ptD.0
  # DEBUG thisD.48906 => D#83ptD.0
  # DEBUG thisD.48915 => D#83ptD.0
  # VUSE <.MEM_51>
  # PT = nonlocal escaped 
  _24 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48916 => D#83ptD.0
  # PT = nonlocal 
  _25 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 40B].D.15588._M_local_bufD.15590;
  if (_24 != _25)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 699, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#83ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48908 => D#83ptD.0
  # DEBUG __sizeD.48907 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#83ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#83ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48911 => _24
  # DEBUG __aD.48909 => D#54ptD.0
  # DEBUG __nD.48910 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48914 => _24
  # DEBUG thisD.48912 => D#50ptD.0
  # DEBUG D.48913 => D#51ptD.0
  # .MEM_52 = VDEF <.MEM_51>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_51(13), .MEM_52(14)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#83ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48917 => D#60ptD.0
  # DEBUG thisD.48918 => D#60ptD.0
  # DEBUG thisD.48919 => D#60ptD.0
  # .MEM_56 = VDEF <.MEM_37>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#82ptD.0 => &D#299ptD.0->_nameD.27768
  # DEBUG thisD.48920 => D#82ptD.0
  # DEBUG thisD.48921 => D#82ptD.0
  # DEBUG thisD.48930 => D#82ptD.0
  # VUSE <.MEM_56>
  # PT = nonlocal escaped 
  _26 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.45913 => D#3ptD.0
  # DEBUG thisD.48931 => D#82ptD.0
  # PT = nonlocal 
  _27 = &MEM[(const struct basic_stringD.10937 *)this_2(D) + 8B].D.15588._M_local_bufD.15590;
  if (_26 != _27)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 785, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#59ptD.0 => MEM[(struct basic_stringD.10937 *)D#82ptD.0].D.15588._M_allocated_capacityD.15591
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG thisD.48923 => D#82ptD.0
  # DEBUG __sizeD.48922 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG D#3ptD.0 => D#82ptD.0
  # DEBUG thisD.46230 => D#3ptD.0
  # DEBUG thisD.46231 => D#82ptD.0
  # DEBUG D#56ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0 + 1
  # DEBUG __pD.48926 => _26
  # DEBUG __aD.48924 => D#54ptD.0
  # DEBUG __nD.48925 => D#55ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG __pD.48929 => _26
  # DEBUG thisD.48927 => D#50ptD.0
  # DEBUG D.48928 => D#51ptD.0
  # .MEM_57 = VDEF <.MEM_56>
  # USE = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  # CLB = nonlocal { D.28566 D.33039 D.33854 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 16, next block 1, flags: (NEW, REACHABLE)
;;    pred:       15 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_56(15), .MEM_57(16)>
  # DEBUG D#60ptD.0 => &MEM[(struct basic_stringD.10937 *)D#82ptD.0]._M_dataplusD.15568
  # DEBUG thisD.48932 => D#60ptD.0
  # DEBUG thisD.48933 => D#60ptD.0
  # DEBUG thisD.48934 => D#60ptD.0
  # .MEM_6 = VDEF <.MEM_38>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_6>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, Flit*>; _Alloc = std::allocator<std::pair<int, Flit*> >] (_ZNSt11_Deque_baseISt4pairIiP4FlitESaIS3_EED2Ev, funcdef_no=2106, decl_uid=32451, cgraph_uid=592, symbol_order=593)


Pass statistics:
----------------

std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, Flit*>; _Alloc = std::allocator<std::pair<int, Flit*> >] (struct _Deque_baseD.32030 * const thisD.32452)
{
  struct pairD.32024 * * __nstartD.46842;
  struct pairD.32024 * * _4;
  struct pairD.32024 * * _5;
  struct pairD.32024 * * _6;
  struct pairD.32024 * _13;
  struct pairD.32024 * * pretmp_16;
  struct pairD.32024 * * prephitmp_17;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _4 = this_3(D)->_M_implD.32396._M_mapD.32398;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _5 = this_3(D)->_M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped 
  _6 = _5 + 8;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __nstart_7 = this_3(D)->_M_implD.32396._M_startD.32400._M_nodeD.32298;
  # DEBUG D#149ptD.0 => this_3(D)
  # DEBUG __nstartD.46842 => __nstart_7
  # DEBUG __nfinishD.46843 => _6
  # DEBUG thisD.46844 => D#149ptD.0
  # DEBUG __nD.46845 => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # .MEM_19 = PHI <.MEM_2(D)(4), .MEM_8(6)>
  # DEBUG __nD.46845 => __nstart_20
  # VUSE <.MEM_19>
  # PT = nonlocal escaped 
  _13 = *__nstart_20;
  # DEBUG thisD.46847 => D#147ptD.0
  # DEBUG __pD.46846 => _13
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.46851 => _13
  # DEBUG __aD.46849 => D#133ptD.0
  # DEBUG __nD.46850 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.46854 => _13
  # DEBUG thisD.46852 => D#129ptD.0
  # DEBUG D.46853 => D#130ptD.0
  # .MEM_8 = VDEF <.MEM_19>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (_13);
  # PT = nonlocal escaped 
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __nD.46845 => __nstart_14
  # DEBUG __nD.46845 => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_8>
  pretmp_16 = this_3(D)->_M_implD.32396._M_mapD.32398;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_8(7), .MEM_2(D)(3)>
  # PT = nonlocal escaped 
  # prephitmp_17 = PHI <pretmp_16(7), _4(3)>
  # DEBUG D#156ptD.0 => this_3(D)->_M_implD.32396._M_map_sizeD.32399
  # DEBUG D#304ptD.0 => this_3(D)->_M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => this_3(D)
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.46832 => D#304ptD.0
  # DEBUG thisD.46834 => D#154ptD.0
  # DEBUG __nD.46833 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.46835
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.46838 => D#304ptD.0
  # DEBUG __aD.46836 => D#125ptD.0
  # DEBUG __nD.46837 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.46841 => D#304ptD.0
  # DEBUG thisD.46839 => D#121ptD.0
  # DEBUG D.46840 => D#122ptD.0
  # .MEM_15 = VDEF <.MEM_23>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (prephitmp_17);
  # DEBUG thisD.46826 => &__map_allocD.46835
  # DEBUG thisD.46805 => &__map_allocD.46835
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 8, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_2(D)(2), .MEM_15(8)>
  # DEBUG D#157ptD.0 => &this_3(D)->_M_implD.32396
  # DEBUG thisD.46855 => D#157ptD.0
  # DEBUG thisD.46856 => D#157ptD.0
  # DEBUG thisD.46857 => D#157ptD.0
  # .MEM_12 = VDEF <.MEM_1>
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_3(D)->_M_impl._M_map
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
Creating dr for this_3(D)->_M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
Creating dr for this_3(D)->_M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_7 + 8, + , 8](no_overflow) < _5 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _5 - (unsigned long) __nstart_7) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 1
  exit condition [__nstart_7 + 8, + , 8](no_overflow) < _5 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _5 - (unsigned long) __nstart_7) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_7 + 8, + , 8](no_overflow) < _5 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _5 - (unsigned long) __nstart_7) + 7) / 8, bounded by 2305843009213693951
Creating dr for this_3(D)->_M_impl._M_map
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:11, LOOPS:1, CONDITIONS:3, STMTS:71)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_9 })
  {
    <bb 2>:
    # VUSE <.MEM_2(D)>
    _4 = this_3(D)->_M_impl._M_map;
    if (_4 != 0B)
      goto <bb 3>;
    else
      goto <bb 9>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_8 bb_4 })
  {
    <bb 3>:
    # VUSE <.MEM_2(D)>
    _5 = this_3(D)->_M_impl._M_finish._M_node;
    _6 = _5 + 8;
    # VUSE <.MEM_2(D)>
    __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
    # DEBUG D#149 => this_3(D)
    # DEBUG __nstart => __nstart_7
    # DEBUG __nfinish => _6
    # DEBUG this => D#149
    # DEBUG __n => __nstart_7
    if (_6 <= __nstart_7)
      goto <bb 8>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_7 (preds = {bb_5 }, succs = {bb_10 })
  {
    <bb 7>:

  }
  bb_10 (preds = {bb_7 }, succs = {bb_8 })
  {
    <bb 10>:
    # VUSE <.MEM_8>
    pretmp_16 = this_3(D)->_M_impl._M_map;

  }
  bb_8 (preds = {bb_10 bb_3 }, succs = {bb_9 })
  {
    <bb 8>:
    # .MEM_23 = PHI <.MEM_8(10), .MEM_2(D)(3)>
    # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
    # DEBUG D#156 => this_3(D)->_M_impl._M_map_size
    # DEBUG D#304 => this_3(D)->_M_impl._M_map
    # DEBUG D#154 => this_3(D)
    # DEBUG D#155 => D#156
    # DEBUG __p => D#304
    # DEBUG this => D#154
    # DEBUG __n => D#155
    # DEBUG D#153 => D#155
    # DEBUG D#152 => D#154
    # DEBUG D#151 => D#152
    # DEBUG this => D#151
    # DEBUG D#150 => D#151
    # DEBUG this => D#150
    # DEBUG this => NULL
    # DEBUG D.46793 => NULL
    # DEBUG this => NULL
    # DEBUG D#125 => &__map_alloc
    # DEBUG D#126 => D#153
    # DEBUG __p => D#304
    # DEBUG __a => D#125
    # DEBUG __n => D#126
    # DEBUG D#124 => D#126
    # DEBUG D#123 => D#125
    # DEBUG D#121 => D#123
    # DEBUG D#122 => D#124
    # DEBUG __p => D#304
    # DEBUG this => D#121
    # DEBUG D.46840 => D#122
    # .MEM_15 = VDEF <.MEM_23>
    operator delete (prephitmp_17);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc

  }
  bb_9 (preds = {bb_2 bb_8 }, succs = {bb_1 })
  {
    <bb 9>:
    # .MEM_1 = PHI <.MEM_2(D)(2), .MEM_15(8)>
    # DEBUG D#157 => &this_3(D)->_M_impl
    # DEBUG this => D#157
    # DEBUG this => D#157
    # DEBUG this => D#157
    # .MEM_12 = VDEF <.MEM_1>
    MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
    # VUSE <.MEM_12>
    return;

  }
  loop_1 (header = 5, latch = 6, niter = (((unsigned long) _5 - (unsigned long) __nstart_7) + 7) / 8, upper_bound = 2305843009213693951)
  {
    bb_5 (preds = {bb_4 bb_6 }, succs = {bb_7 bb_6 })
    {
      <bb 5>:
      # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
      # .MEM_19 = PHI <.MEM_2(D)(4), .MEM_8(6)>
      # DEBUG __n => __nstart_20
      # VUSE <.MEM_19>
      _13 = *__nstart_20;
      # DEBUG this => D#147
      # DEBUG __p => _13
      # DEBUG __size => 16
      # DEBUG D#135 => &D#148->_M_impl
      # DEBUG D#133 => D#135
      # DEBUG __p => _13
      # DEBUG __a => D#133
      # DEBUG __n => D#134
      # DEBUG D#132 => D#134
      # DEBUG D#131 => D#133
      # DEBUG D#129 => D#131
      # DEBUG D#130 => D#132
      # DEBUG __p => _13
      # DEBUG this => D#129
      # DEBUG D.46853 => D#130
      # .MEM_8 = VDEF <.MEM_19>
      operator delete (_13);
      __nstart_14 = __nstart_20 + 8;
      # DEBUG __n => __nstart_14
      # DEBUG __n => __nstart_14
      if (_6 <= __nstart_14)
        goto <bb 7>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_5 })
    {
      <bb 6>:
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, Flit*>; _Alloc = std::allocator<std::pair<int, Flit*> >] (struct _Deque_baseD.32030 * const thisD.32452)
{
  struct pairD.32024 * * __nstartD.46842;
  struct pairD.32024 * * _4;
  struct pairD.32024 * * _5;
  struct pairD.32024 * * _6;
  struct pairD.32024 * _13;
  struct pairD.32024 * * pretmp_16;
  struct pairD.32024 * * prephitmp_17;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _4 = this_3(D)->_M_implD.32396._M_mapD.32398;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _5 = this_3(D)->_M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped 
  _6 = _5 + 8;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __nstart_7 = this_3(D)->_M_implD.32396._M_startD.32400._M_nodeD.32298;
  # DEBUG D#149ptD.0 => this_3(D)
  # DEBUG __nstartD.46842 => __nstart_7
  # DEBUG __nfinishD.46843 => _6
  # DEBUG thisD.46844 => D#149ptD.0
  # DEBUG __nD.46845 => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # .MEM_19 = PHI <.MEM_2(D)(4), .MEM_8(6)>
  # DEBUG __nD.46845 => __nstart_20
  # VUSE <.MEM_19>
  # PT = nonlocal escaped 
  _13 = *__nstart_20;
  # DEBUG thisD.46847 => D#147ptD.0
  # DEBUG __pD.46846 => _13
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.46851 => _13
  # DEBUG __aD.46849 => D#133ptD.0
  # DEBUG __nD.46850 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.46854 => _13
  # DEBUG thisD.46852 => D#129ptD.0
  # DEBUG D.46853 => D#130ptD.0
  # .MEM_8 = VDEF <.MEM_19>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (_13);
  # PT = nonlocal escaped 
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __nD.46845 => __nstart_14
  # DEBUG __nD.46845 => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 6, next block 10, flags: (NEW)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       10 [100.0%]  (FALLTHRU)

;;   basic block 10, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 8, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_8>
  pretmp_16 = this_3(D)->_M_implD.32396._M_mapD.32398;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 9, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_8(10), .MEM_2(D)(3)>
  # PT = nonlocal escaped 
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#156ptD.0 => this_3(D)->_M_implD.32396._M_map_sizeD.32399
  # DEBUG D#304ptD.0 => this_3(D)->_M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => this_3(D)
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.46832 => D#304ptD.0
  # DEBUG thisD.46834 => D#154ptD.0
  # DEBUG __nD.46833 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.46835
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.46838 => D#304ptD.0
  # DEBUG __aD.46836 => D#125ptD.0
  # DEBUG __nD.46837 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.46841 => D#304ptD.0
  # DEBUG thisD.46839 => D#121ptD.0
  # DEBUG D.46840 => D#122ptD.0
  # .MEM_15 = VDEF <.MEM_23>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (prephitmp_17);
  # DEBUG thisD.46826 => &__map_allocD.46835
  # DEBUG thisD.46805 => &__map_allocD.46835
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 8, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_2(D)(2), .MEM_15(8)>
  # DEBUG D#157ptD.0 => &this_3(D)->_M_implD.32396
  # DEBUG thisD.46855 => D#157ptD.0
  # DEBUG thisD.46856 => D#157ptD.0
  # DEBUG thisD.46857 => D#157ptD.0
  # .MEM_12 = VDEF <.MEM_1>
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=2129, decl_uid=33743, cgraph_uid=615, symbol_order=616)


Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.33064 * const thisD.33744, struct iteratorD.33388 __positionD.33745, size_typeD.33396 __nD.33746, const value_typeD.33383 & __xD.33747)
{
  const long unsigned intD.14 D.49232;
  const size_typeD.33396 __lenD.49226;
  size_typeD.33396 D.49231;
  size_typeD.33396 __nD.49224;
  intD.9 * D.49222;
  const ptrdiff_tD.2819 _NumD.49212;
  intD.9 * D.49213;
  intD.9 * const __positionD.48466;
  intD.9 * __firstD.48434;
  const ptrdiff_tD.2819 _NumD.48428;
  const ptrdiff_tD.2819 _NumD.48389;
  intD.9 * __firstD.48317;
  long unsigned intD.14 __nD.48318;
  intD.9 * __firstD.48268;
  const ptrdiff_tD.2819 _NumD.48264;
  intD.9 * __firstD.48217;
  intD.9 * __new_finishD.43434;
  const size_typeD.33396 __elems_afterD.43398;
  value_typeD.33383 __x_copyD.43397;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.42794 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.25_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.30_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#311ptD.0 => MEM[(struct __normal_iteratorD.33389 *)&__positionD.33745]
  # DEBUG __positionD.48466 => D#311ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(13), .MEM_54(23), .MEM_154(26)>
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.33389 *)&__positionD.33745];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.33820._M_implD.33311._M_end_of_storageD.33315;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.33820._M_implD.33311._M_finishD.33314;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.43397 => __x_copy_35
  # DEBUG thisD.48212 => this_4(D)
  # DEBUG D#17ptD.0 => &this_4(D)->D.33820._M_implD.33311._M_finishD.33314
  # DEBUG thisD.48214 => NULL
  # DEBUG __iD.48213 => D#17ptD.0
  # DEBUG __lhsD.48209 => &D.43399
  # DEBUG __rhsD.48210 => &__positionD.33745
  # DEBUG thisD.46138 => &D.43399
  # DEBUG thisD.46136 => &__positionD.33745
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.33396) _22;
  # DEBUG __elems_afterD.43398 => __elems_after_37
  # DEBUG __old_finishD.43406 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#272ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48266 => D#272ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.48231 => _41
  # DEBUG __lastD.48232 => __first_7
  # DEBUG __resultD.48233 => __first_7
  # DEBUG __allocD.48234 => D#264ptD.0
  # DEBUG D#263ptD.0 => D#264ptD.0
  # DEBUG D#262ptD.0 => D#263ptD.0
  # DEBUG __firstD.48238 => _41
  # DEBUG __lastD.48237 => __first_7
  # DEBUG __resultD.48236 => __first_7
  # DEBUG D.48235 => D#262ptD.0
  # DEBUG __firstD.48241 => _41
  # DEBUG __lastD.48240 => __first_7
  # DEBUG __resultD.48239 => __first_7
  # DEBUG __assignableD.48244 => 1
  # DEBUG __firstD.48247 => _41
  # DEBUG __lastD.48246 => __first_7
  # DEBUG __resultD.48245 => __first_7
  # DEBUG __firstD.48250 => _41
  # DEBUG __lastD.48249 => __first_7
  # DEBUG __resultD.48248 => __first_7
  # DEBUG __itD.47960 => __first_7
  # DEBUG __itD.46591 => __first_7
  # DEBUG __itD.47958 => _41
  # DEBUG __itD.46591 => _41
  # DEBUG __firstD.48253 => _41
  # DEBUG __lastD.48252 => __first_7
  # DEBUG __resultD.48251 => __first_7
  # DEBUG __itD.47940 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG __itD.47938 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG __itD.47936 => _41
  # DEBUG __itD.46594 => _41
  # DEBUG __firstD.48256 => _41
  # DEBUG __lastD.48255 => __first_7
  # DEBUG __resultD.48254 => __first_7
  # DEBUG __simpleD.48260 => 1
  # DEBUG __firstD.48263 => _41
  # DEBUG __lastD.48262 => __first_7
  # DEBUG __resultD.48261 => __first_7
  __first.25_49 = (long intD.12) _41;
  _47 = _8 - __first.25_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.48264 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.33820._M_implD.33311._M_finishD.33314;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.33820._M_implD.33311._M_finishD.33314 = _43;
  # DEBUG thisD.48229 => &__positionD.33745
  # DEBUG __firstD.49196 => D#311ptD.0
  # DEBUG __lastD.49197 => _41
  # DEBUG __resultD.49198 => __first_7
  # DEBUG __itD.46985 => _41
  # DEBUG __itD.46591 => _41
  # DEBUG __itD.46983 => D#311ptD.0
  # DEBUG __itD.46591 => D#311ptD.0
  # DEBUG __firstD.49201 => D#311ptD.0
  # DEBUG __lastD.49200 => _41
  # DEBUG __resultD.49199 => __first_7
  # DEBUG __itD.46965 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG __itD.46963 => _41
  # DEBUG __itD.46594 => _41
  # DEBUG __itD.46961 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG __firstD.49204 => D#311ptD.0
  # DEBUG __lastD.49203 => _41
  # DEBUG __resultD.49202 => __first_7
  # DEBUG __simpleD.49208 => 1
  # DEBUG __firstD.49211 => D#311ptD.0
  # DEBUG __lastD.49210 => _41
  # DEBUG __resultD.49209 => __first_7
  _104 = __first.25_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.49212 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.48227 => &__positionD.33745
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.48225 => &__positionD.33745
  # DEBUG D#128ptD.0 => &__x_copyD.43397
  # DEBUG __firstD.48217 => D#311ptD.0
  # DEBUG __lastD.48218 => _48
  # DEBUG D#127ptD.0 => D#128ptD.0
  # DEBUG __valueD.48220 => D#127ptD.0
  # DEBUG __itD.46604 => _48
  # DEBUG __itD.46594 => _48
  # DEBUG __itD.46602 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG D#107ptD.0 => D#127ptD.0
  # DEBUG __firstD.48223 => D#311ptD.0
  # DEBUG __lastD.48222 => _48
  # DEBUG __valueD.48221 => D#107ptD.0
  # DEBUG __tmpD.48224 => __x_copy_35
  # DEBUG __firstD.48223 => D#311ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.48223 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.48223 => __position_55
  # DEBUG __firstD.48223 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#273ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48339 => D#273ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#217ptD.0 => &__x_copyD.43397
  # DEBUG __firstD.48317 => __first_7
  # DEBUG __nD.48318 => __n_50
  # DEBUG D#216ptD.0 => D#217ptD.0
  # DEBUG __xD.48321 => D#216ptD.0
  # DEBUG D.48320 => D#218ptD.0
  # DEBUG D#215ptD.0 => D#216ptD.0
  # DEBUG __firstD.48324 => __first_7
  # DEBUG __nD.48323 => __n_50
  # DEBUG D#214ptD.0 => D#215ptD.0
  # DEBUG __xD.48322 => D#214ptD.0
  # DEBUG __assignableD.48326 => 1
  # DEBUG D#213ptD.0 => D#214ptD.0
  # DEBUG __firstD.48329 => __first_7
  # DEBUG __nD.48328 => __n_50
  # DEBUG D#212ptD.0 => D#213ptD.0
  # DEBUG __xD.48327 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#212ptD.0
  # DEBUG __firstD.48332 => __first_7
  # DEBUG __nD.48331 => __n_50
  # DEBUG D#210ptD.0 => D#211ptD.0
  # DEBUG __valueD.48330 => D#210ptD.0
  # DEBUG __itD.47222 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG D#209ptD.0 => D#210ptD.0
  # DEBUG __firstD.48335 => __first_7
  # DEBUG __nD.48334 => __n_50
  # DEBUG __valueD.48333 => D#209ptD.0
  # DEBUG __tmpD.48336 => __x_copy_35
  # DEBUG __niterD.48337 => __n_50
  # DEBUG __niterD.48337 => __n_50
  # DEBUG __firstD.48335 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.48337 => __n_111
  # DEBUG __firstD.48335 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.48337 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.48335 => __first_64
  # DEBUG __niterD.48337 => __n_63
  # DEBUG __firstD.48335 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(18), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(18), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.33820._M_implD.33311._M_finishD.33314 = __first_125;
  # DEBUG D#274ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48315 => D#274ptD.0
  # DEBUG thisD.48313 => &__positionD.33745
  # DEBUG __firstD.48278 => D#311ptD.0
  # DEBUG __lastD.48279 => __first_7
  # DEBUG __resultD.48280 => __first_125
  # DEBUG __allocD.48281 => D#264ptD.0
  # DEBUG D#263ptD.0 => D#264ptD.0
  # DEBUG D#262ptD.0 => D#263ptD.0
  # DEBUG __firstD.48285 => D#311ptD.0
  # DEBUG __lastD.48284 => __first_7
  # DEBUG __resultD.48283 => __first_125
  # DEBUG D.48282 => D#262ptD.0
  # DEBUG __firstD.48288 => D#311ptD.0
  # DEBUG __lastD.48287 => __first_7
  # DEBUG __resultD.48286 => __first_125
  # DEBUG __assignableD.48291 => 1
  # DEBUG __firstD.48294 => D#311ptD.0
  # DEBUG __lastD.48293 => __first_7
  # DEBUG __resultD.48292 => __first_125
  # DEBUG __firstD.48297 => D#311ptD.0
  # DEBUG __lastD.48296 => __first_7
  # DEBUG __resultD.48295 => __first_125
  # DEBUG __itD.47960 => __first_7
  # DEBUG __itD.46591 => __first_7
  # DEBUG __itD.47958 => D#311ptD.0
  # DEBUG __itD.46591 => D#311ptD.0
  # DEBUG __firstD.48300 => D#311ptD.0
  # DEBUG __lastD.48299 => __first_7
  # DEBUG __resultD.48298 => __first_125
  # DEBUG __itD.47940 => __first_125
  # DEBUG __itD.46594 => __first_125
  # DEBUG __itD.47938 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG __itD.47936 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG __firstD.48303 => D#311ptD.0
  # DEBUG __lastD.48302 => __first_7
  # DEBUG __resultD.48301 => __first_125
  # DEBUG __simpleD.48307 => 1
  # DEBUG __firstD.48310 => D#311ptD.0
  # DEBUG __lastD.48309 => __first_7
  # DEBUG __resultD.48308 => __first_125
  # DEBUG _NumD.48311 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.33820._M_implD.33311._M_finishD.33314;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.33820._M_implD.33311._M_finishD.33314 = _53;
  # DEBUG thisD.48276 => &__positionD.33745
  # DEBUG D#128ptD.0 => &__x_copyD.43397
  # DEBUG __firstD.48268 => D#311ptD.0
  # DEBUG __lastD.48269 => __first_7
  # DEBUG D#127ptD.0 => D#128ptD.0
  # DEBUG __valueD.48271 => D#127ptD.0
  # DEBUG __itD.46604 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG __itD.46602 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG D#107ptD.0 => D#127ptD.0
  # DEBUG __firstD.48274 => D#311ptD.0
  # DEBUG __lastD.48273 => __first_7
  # DEBUG __valueD.48272 => D#107ptD.0
  # DEBUG __tmpD.48275 => __x_copy_35
  # DEBUG __firstD.48274 => D#311ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.48274 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.48274 => __position_58
  # DEBUG __firstD.48274 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.49223 => this_4(D)
  # DEBUG __nD.49224 => __n_2(D)
  # DEBUG __nD.49224 => __n_2(D)
  # DEBUG __sD.49225 => "vector::_M_fill_insert"
  # DEBUG D#180ptD.0 => this_4(D)
  # DEBUG thisD.47021 => D#180ptD.0
  # DEBUG D#179ptD.0 => D#180ptD.0
  # DEBUG D#178ptD.0 => &D#179ptD.0->D.33820
  # DEBUG thisD.47011 => D#178ptD.0
  # DEBUG __aD.47003 => D#177ptD.0
  # DEBUG D#176ptD.0 => D#177ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  # DEBUG thisD.46994 => D#175ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG thisD.49229 => D#10ptD.0
  # DEBUG thisD.49230 => D#10ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG thisD.47039 => D#10ptD.0
  # DEBUG thisD.47038 => D#10ptD.0
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG thisD.47034 => D#10ptD.0
  # DEBUG thisD.47033 => D#10ptD.0
  # DEBUG __aD.49228 => &D.49232
  # DEBUG __bD.49227 => &__nD.49224
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.49226 => __len_124
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG thisD.47026 => D#10ptD.0
  # DEBUG thisD.47025 => D#10ptD.0
  # DEBUG D#180ptD.0 => this_4(D)
  # DEBUG thisD.47041 => D#180ptD.0
  # DEBUG D#179ptD.0 => D#180ptD.0
  # DEBUG D#178ptD.0 => &D#179ptD.0->D.33820
  # DEBUG thisD.47011 => D#178ptD.0
  # DEBUG __aD.47003 => D#177ptD.0
  # DEBUG D#176ptD.0 => D#177ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  # DEBUG thisD.46994 => D#175ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.43430 => NULL
  # DEBUG thisD.48461 => this_4(D)
  # DEBUG D#39ptD.0 => &this_4(D)->D.33820._M_implD.33311._M_startD.33313
  # DEBUG thisD.48463 => NULL
  # DEBUG __iD.48462 => D#39ptD.0
  # DEBUG __lhsD.48458 => &__positionD.33745
  # DEBUG __rhsD.48459 => &D.43432
  # DEBUG thisD.46138 => &__positionD.33745
  # DEBUG thisD.46136 => &D.43432
  # DEBUG D#285ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.43431 => (const size_typeD.33396) D#285ptD.0
  # DEBUG D#284ptD.0 => &this_4(D)->D.33820
  # DEBUG D#188ptD.0 => D#284ptD.0
  # DEBUG __nD.49214 => NULL
  # DEBUG thisD.49215 => D#188ptD.0
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG D#186ptD.0 => &D#187ptD.0->_M_implD.33311
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG __nD.49218 => NULL
  # DEBUG __aD.49217 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#183ptD.0 => 0B
  # DEBUG __nD.49221 => NULL
  # DEBUG thisD.49219 => D#182ptD.0
  # DEBUG D.49220 => D#183ptD.0
  # DEBUG D#181ptD.0 => D#182ptD.0
  # DEBUG D#175ptD.0 => D#181ptD.0
  # DEBUG thisD.47046 => D#175ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.49235 } (escaped heap)
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.33820._M_implD.33311._M_startD.33313;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.33820._M_implD.33311._M_finishD.33314;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.49235 } (escaped heap)
  # iftmp.30_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.49235 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
  # DEBUG __new_startD.43433 => NULL
  # DEBUG __new_finishD.43434 => NULL
  # DEBUG D#268ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48456 => D#268ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.49235 } (escaped heap)
  __first_20 = iftmp.30_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#217ptD.0 => __x_21(D)
  # DEBUG __firstD.48434 => __first_20
  # DEBUG __nD.48435 => __n_2(D)
  # DEBUG D#216ptD.0 => D#217ptD.0
  # DEBUG __xD.48438 => D#216ptD.0
  # DEBUG D.48437 => D#218ptD.0
  # DEBUG D#215ptD.0 => D#216ptD.0
  # DEBUG __firstD.48441 => __first_20
  # DEBUG __nD.48440 => __n_2(D)
  # DEBUG D#214ptD.0 => D#215ptD.0
  # DEBUG __xD.48439 => D#214ptD.0
  # DEBUG __assignableD.48443 => 1
  # DEBUG D#213ptD.0 => D#214ptD.0
  # DEBUG __firstD.48446 => __first_20
  # DEBUG __nD.48445 => __n_2(D)
  # DEBUG D#212ptD.0 => D#213ptD.0
  # DEBUG __xD.48444 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#212ptD.0
  # DEBUG __firstD.48449 => __first_20
  # DEBUG __nD.48448 => __n_2(D)
  # DEBUG D#210ptD.0 => D#211ptD.0
  # DEBUG __valueD.48447 => D#210ptD.0
  # DEBUG __itD.47222 => __first_20
  # DEBUG __itD.46594 => __first_20
  # DEBUG D#209ptD.0 => D#210ptD.0
  # DEBUG __firstD.48452 => __first_20
  # DEBUG __nD.48451 => __n_2(D)
  # DEBUG __valueD.48450 => D#209ptD.0
  # DEBUG __tmpD.48453 => _56
  # DEBUG __niterD.48454 => __n_2(D)
  # DEBUG __niterD.48454 => __n_2(D)
  # DEBUG __firstD.48452 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(33)>
  # PT = null { D.49235 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(33)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(33)>
  # DEBUG __niterD.48454 => __n_132
  # DEBUG __firstD.48452 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.48454 => __n_79
  # PT = null { D.49235 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.48452 => __first_80
  # DEBUG __niterD.48454 => __n_79
  # DEBUG __firstD.48452 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.43434 => 0B
  # DEBUG D#269ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48432 => D#269ptD.0
  # DEBUG thisD.48430 => &__positionD.33745
  # DEBUG D#310ptD.0 => this_4(D)->D.33820._M_implD.33311._M_startD.33313
  # DEBUG __firstD.48395 => D#310ptD.0
  # DEBUG __lastD.48396 => D#311ptD.0
  # DEBUG __resultD.48397 => NULL
  # DEBUG __allocD.48398 => D#266ptD.0
  # DEBUG D#265ptD.0 => D#266ptD.0
  # DEBUG D#262ptD.0 => D#265ptD.0
  # DEBUG __firstD.48402 => D#310ptD.0
  # DEBUG __lastD.48401 => D#311ptD.0
  # DEBUG __resultD.48400 => NULL
  # DEBUG D.48399 => D#262ptD.0
  # DEBUG __firstD.48405 => D#310ptD.0
  # DEBUG __lastD.48404 => D#311ptD.0
  # DEBUG __resultD.48403 => NULL
  # DEBUG __assignableD.48408 => 1
  # DEBUG __firstD.48411 => D#310ptD.0
  # DEBUG __lastD.48410 => D#311ptD.0
  # DEBUG __resultD.48409 => NULL
  # DEBUG __firstD.48414 => D#310ptD.0
  # DEBUG __lastD.48413 => D#311ptD.0
  # DEBUG __resultD.48412 => NULL
  # DEBUG __itD.47960 => D#311ptD.0
  # DEBUG __itD.46591 => D#311ptD.0
  # DEBUG __itD.47958 => D#310ptD.0
  # DEBUG __itD.46591 => D#310ptD.0
  # DEBUG __firstD.48417 => D#310ptD.0
  # DEBUG __lastD.48416 => D#311ptD.0
  # DEBUG __resultD.48415 => NULL
  # DEBUG __itD.47940 => NULL
  # DEBUG __itD.46594 => NULL
  # DEBUG __itD.47938 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG __itD.47936 => D#310ptD.0
  # DEBUG __itD.46594 => D#310ptD.0
  # DEBUG __firstD.48420 => D#310ptD.0
  # DEBUG __lastD.48419 => D#311ptD.0
  # DEBUG __resultD.48418 => NULL
  # DEBUG __simpleD.48424 => 1
  # DEBUG __firstD.48427 => D#310ptD.0
  # DEBUG __lastD.48426 => D#311ptD.0
  # DEBUG __resultD.48425 => NULL
  # DEBUG D#309ptD.0 => (long intD.12) D#310ptD.0
  # DEBUG D#308ptD.0 => _158 - D#309ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.48428 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  memmoveD.995 (iftmp.30_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#307ptD.0 => (long unsigned intD.14) D#308ptD.0
  # DEBUG __new_finishD.43434 => iftmp.30_113 + D#307ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.49235 } (escaped heap)
  __new_finish_26 = iftmp.30_113 + _133;
  # DEBUG __new_finishD.43434 => __new_finish_26
  # DEBUG D#270ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48393 => D#270ptD.0
  # DEBUG D#306ptD.0 => this_4(D)->D.33820._M_implD.33311._M_finishD.33314
  # DEBUG thisD.48391 => &__positionD.33745
  # DEBUG __firstD.48356 => D#311ptD.0
  # DEBUG __lastD.48357 => D#306ptD.0
  # DEBUG __resultD.48358 => __new_finish_26
  # DEBUG __allocD.48359 => D#266ptD.0
  # DEBUG D#265ptD.0 => D#266ptD.0
  # DEBUG D#262ptD.0 => D#265ptD.0
  # DEBUG __firstD.48363 => D#311ptD.0
  # DEBUG __lastD.48362 => D#306ptD.0
  # DEBUG __resultD.48361 => __new_finish_26
  # DEBUG D.48360 => D#262ptD.0
  # DEBUG __firstD.48366 => D#311ptD.0
  # DEBUG __lastD.48365 => D#306ptD.0
  # DEBUG __resultD.48364 => __new_finish_26
  # DEBUG __assignableD.48369 => 1
  # DEBUG __firstD.48372 => D#311ptD.0
  # DEBUG __lastD.48371 => D#306ptD.0
  # DEBUG __resultD.48370 => __new_finish_26
  # DEBUG __firstD.48375 => D#311ptD.0
  # DEBUG __lastD.48374 => D#306ptD.0
  # DEBUG __resultD.48373 => __new_finish_26
  # DEBUG __itD.47960 => D#306ptD.0
  # DEBUG __itD.46591 => D#306ptD.0
  # DEBUG __itD.47958 => D#311ptD.0
  # DEBUG __itD.46591 => D#311ptD.0
  # DEBUG __firstD.48378 => D#311ptD.0
  # DEBUG __lastD.48377 => D#306ptD.0
  # DEBUG __resultD.48376 => __new_finish_26
  # DEBUG __itD.47940 => __new_finish_26
  # DEBUG __itD.46594 => __new_finish_26
  # DEBUG __itD.47938 => D#306ptD.0
  # DEBUG __itD.46594 => D#306ptD.0
  # DEBUG __itD.47936 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG __firstD.48381 => D#311ptD.0
  # DEBUG __lastD.48380 => D#306ptD.0
  # DEBUG __resultD.48379 => __new_finish_26
  # DEBUG __simpleD.48385 => 1
  # DEBUG __firstD.48388 => D#311ptD.0
  # DEBUG __lastD.48387 => D#306ptD.0
  # DEBUG __resultD.48386 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.48389 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.49235 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.43434 => _70
  # DEBUG D#271ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48354 => D#271ptD.0
  # DEBUG D#283ptD.0 => this_4(D)->D.33820._M_implD.33311._M_finishD.33314
  # DEBUG D#282ptD.0 => this_4(D)->D.33820._M_implD.33311._M_startD.33313
  # DEBUG __firstD.48351 => D#282ptD.0
  # DEBUG __lastD.48352 => D#283ptD.0
  # DEBUG D.48353 => NULL
  # DEBUG D#33ptD.0 => D#282ptD.0
  # DEBUG D#34ptD.0 => D#283ptD.0
  # DEBUG __firstD.46117 => D#33ptD.0
  # DEBUG __lastD.46116 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.46106 => D#29ptD.0
  # DEBUG D.46105 => D#30ptD.0
  # DEBUG D#281ptD.0 => this_4(D)->D.33820._M_implD.33311._M_end_of_storageD.33315
  # DEBUG D#280ptD.0 => (long intD.12) D#281ptD.0
  # DEBUG D#279ptD.0 => (long intD.12) D#310ptD.0
  # DEBUG D#278ptD.0 => D#280ptD.0 - D#279ptD.0
  # DEBUG D#277ptD.0 => D#278ptD.0 /[ex] 4
  # DEBUG D#276ptD.0 => (long unsigned intD.14) D#277ptD.0
  # DEBUG D#275ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48341 => D#275ptD.0
  # DEBUG __pD.48342 => D#310ptD.0
  # DEBUG __nD.48343 => D#276ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#95ptD.0 => &D#275ptD.0->_M_implD.33311
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#94ptD.0 => D#276ptD.0
  # DEBUG __pD.48347 => D#310ptD.0
  # DEBUG __aD.48345 => D#93ptD.0
  # DEBUG __nD.48346 => D#94ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0
  # DEBUG __pD.48350 => D#310ptD.0
  # DEBUG thisD.48348 => D#89ptD.0
  # DEBUG D.48349 => D#90ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.33820._M_implD.33311._M_startD.33313 = iftmp.30_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.33820._M_implD.33311._M_finishD.33314 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.33820._M_implD.33311._M_end_of_storageD.33315 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(3), .MEM_34(44)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.43430 => NULL
  # DEBUG thisD.48461 => this_4(D)
  # DEBUG D#39ptD.0 => &this_4(D)->D.33820._M_implD.33311._M_startD.33313
  # DEBUG thisD.48463 => NULL
  # DEBUG __iD.48462 => D#39ptD.0
  # DEBUG __lhsD.48458 => &__positionD.33745
  # DEBUG __rhsD.48459 => &D.43432
  # DEBUG thisD.46138 => &__positionD.33745
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.46136 => &D.43432
  _143 = _144 - _116;
  # DEBUG D#285ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.43431 => (const size_typeD.33396) D#285ptD.0
  # DEBUG D#284ptD.0 => &this_4(D)->D.33820
  # DEBUG D#188ptD.0 => D#284ptD.0
  # DEBUG __nD.49214 => NULL
  # DEBUG thisD.49215 => D#188ptD.0
  # DEBUG D#187ptD.0 => D#188ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.43430 => NULL
  # DEBUG thisD.48461 => this_4(D)
  # DEBUG D#39ptD.0 => &this_4(D)->D.33820._M_implD.33311._M_startD.33313
  # DEBUG thisD.48463 => NULL
  # DEBUG __iD.48462 => D#39ptD.0
  # DEBUG __lhsD.48458 => &__positionD.33745
  # DEBUG __rhsD.48459 => &D.43432
  # DEBUG thisD.46138 => &__positionD.33745
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.46136 => &D.43432
  _150 = _151 - _116;
  # DEBUG D#285ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.43431 => (const size_typeD.33396) D#285ptD.0
  # DEBUG D#284ptD.0 => &this_4(D)->D.33820
  # DEBUG D#188ptD.0 => D#284ptD.0
  # DEBUG __nD.49214 => NULL
  # DEBUG thisD.49215 => D#188ptD.0
  # DEBUG D#187ptD.0 => D#188ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for this_4(D)->D.33820._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.33820._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__x_21(D)
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__x_21(D)
Creating dr for this_4(D)->D.33820._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.33820._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.33820._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for MEM[(int * *)this_4(D)]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D)]
Applying pattern match.pd:725, generic-match.c:1428
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for MEM[(const int &)__x_21(D)]
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const int &)__x_21(D)]
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.30_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.30_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.30_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.30_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.30_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.30_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.30_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.30_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.30_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.30_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.30_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.30_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.30_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.30_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.30_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.30_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.33820._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.33820._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.33820._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:18)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:39)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:56, LOOPS:4, CONDITIONS:19, STMTS:600)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG D#311 => MEM[(struct __normal_iterator *)&__position]
    # DEBUG __position => D#311
    if (__n_2(D) != 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_10 bb_48 bb_23 bb_49 }, succs = {bb_55 })
  {
    <bb 3>:
    # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>

  }
  bb_55 (preds = {bb_3 }, succs = {bb_45 })
  {
    <bb 55>:
    goto <bb 45>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_28 })
  {
    <bb 4>:
    # VUSE <.MEM_3(D)>
    __position_16 = MEM[(struct __normal_iterator *)&__position];
    # VUSE <.MEM_3(D)>
    _5 = this_4(D)->D.33820._M_impl._M_end_of_storage;
    _6 = (long int) _5;
    # VUSE <.MEM_3(D)>
    __first_7 = this_4(D)->D.33820._M_impl._M_finish;
    _8 = (long int) __first_7;
    _9 = _6 - _8;
    _10 = _9 /[ex] 4;
    _11 = (long unsigned int) _10;
    if (__n_2(D) <= _11)
      goto <bb 5>;
    else
      goto <bb 28>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 bb_15 })
  {
    <bb 5>:
    # VUSE <.MEM_3(D)>
    __x_copy_35 = *__x_21(D);
    # DEBUG __x_copy => __x_copy_35
    # DEBUG this => this_4(D)
    # DEBUG D#17 => &this_4(D)->D.33820._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#17
    # DEBUG __lhs => &D.43399
    # DEBUG __rhs => &__position
    # DEBUG this => &D.43399
    # DEBUG this => &__position
    _27 = (long int) __position_16;
    _23 = _8 - _27;
    _22 = _23 /[ex] 4;
    __elems_after_37 = (const size_type) _22;
    # DEBUG __elems_after => __elems_after_37
    # DEBUG __old_finish => __first_7
    if (__n_2(D) < __elems_after_37)
      goto <bb 6>;
    else
      goto <bb 15>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#272 => &this_4(D)->D.33820
    # DEBUG this => D#272
    _39 = __n_2(D) * 4;
    _40 = -_39;
    _41 = __first_7 + _40;
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __alloc => D#264
    # DEBUG D#263 => D#264
    # DEBUG D#262 => D#263
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG D.48235 => D#262
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __assignable => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    __first.25_49 = (long int) _41;
    _47 = _8 - __first.25_49;
    _Num_45 = _47 /[ex] 4;
    # DEBUG _Num => _Num_45
    if (_Num_45 != 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    _38 = (long unsigned int) _47;
    # .MEM_97 = VDEF <.MEM_3(D)>
    __builtin_memmove (__first_7, _41, _38);
    # VUSE <.MEM_97>
    pretmp_173 = this_4(D)->D.33820._M_impl._M_finish;

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
    # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
    _43 = prephitmp_174 + _39;
    # .MEM_44 = VDEF <.MEM_14>
    this_4(D)->D.33820._M_impl._M_finish = _43;
    # DEBUG this => &__position
    # DEBUG __first => D#311
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#311
    # DEBUG __it => D#311
    # DEBUG __first => D#311
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#311
    # DEBUG __it => D#311
    # DEBUG __first => D#311
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => D#311
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    _104 = __first.25_49 - _27;
    _Num_105 = _104 /[ex] 4;
    # DEBUG _Num => _Num_105
    if (_Num_105 != 0)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    _106 = (long unsigned int) _104;
    _107 = -_106;
    _108 = __first_7 + _107;
    # .MEM_135 = VDEF <.MEM_44>
    __builtin_memmove (_108, __position_16, _106);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_3 bb_11 })
  {
    <bb 10>:
    # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
    # DEBUG this => &__position
    _48 = __position_16 + _39;
    # DEBUG this => &__position
    # DEBUG D#128 => &__x_copy
    # DEBUG __first => D#311
    # DEBUG __last => _48
    # DEBUG D#127 => D#128
    # DEBUG __value => D#127
    # DEBUG __it => _48
    # DEBUG __it => _48
    # DEBUG __it => D#311
    # DEBUG __it => D#311
    # DEBUG D#107 => D#127
    # DEBUG __first => D#311
    # DEBUG __last => _48
    # DEBUG __value => D#107
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#311
    if (__position_16 == _48)
      goto <bb 3>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:

  }
  bb_13 (preds = {bb_12 }, succs = {bb_48 })
  {
    <bb 13>:
    # .MEM_13 = PHI <.MEM_98(12)>

  }
  bb_48 (preds = {bb_13 }, succs = {bb_3 })
  {
    <bb 48>:
    goto <bb 3>;

  }
  bb_15 (preds = {bb_5 }, succs = {bb_20 bb_16 })
  {
    <bb 15>:
    # DEBUG D#273 => &this_4(D)->D.33820
    # DEBUG this => D#273
    __n_50 = __n_2(D) - __elems_after_37;
    # DEBUG D#217 => &__x_copy
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#216 => D#217
    # DEBUG __x => D#216
    # DEBUG D.48320 => D#218
    # DEBUG D#215 => D#216
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#214 => D#215
    # DEBUG __x => D#214
    # DEBUG __assignable => 1
    # DEBUG D#213 => D#214
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#212 => D#213
    # DEBUG __x => D#212
    # DEBUG D#211 => D#212
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#210 => D#211
    # DEBUG __value => D#210
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG D#209 => D#210
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG __value => D#209
    # DEBUG __tmp => __x_copy_35
    # DEBUG __niter => __n_50
    # DEBUG __niter => __n_50
    # DEBUG __first => __first_7
    if (__n_50 == 0)
      goto <bb 20>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:

  }
  bb_18 (preds = {bb_17 }, succs = {bb_50 })
  {
    <bb 18>:

  }
  bb_50 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 50>:
    _160 = __n_50 * 4;
    __first_123 = __first_7 + _160;
    goto <bb 20>;

  }
  bb_20 (preds = {bb_50 bb_15 }, succs = {bb_22 bb_21 })
  {
    <bb 20>:
    # __first_125 = PHI <__first_123(50), __first_7(15)>
    # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
    # .MEM_51 = VDEF <.MEM_84>
    this_4(D)->D.33820._M_impl._M_finish = __first_125;
    # DEBUG D#274 => &this_4(D)->D.33820
    # DEBUG this => D#274
    # DEBUG this => &__position
    # DEBUG __first => D#311
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __alloc => D#264
    # DEBUG D#263 => D#264
    # DEBUG D#262 => D#263
    # DEBUG __first => D#311
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG D.48282 => D#262
    # DEBUG __first => D#311
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __assignable => 1
    # DEBUG __first => D#311
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __first => D#311
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#311
    # DEBUG __it => D#311
    # DEBUG __first => D#311
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#311
    # DEBUG __it => D#311
    # DEBUG __first => D#311
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __simple => 1
    # DEBUG __first => D#311
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG _Num => _22
    if (_22 != 0)
      goto <bb 22>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 21>:
    pretmp_168 = (long unsigned int) _23;
    goto <bb 23>;

  }
  bb_22 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 22>:
    _59 = (long unsigned int) _23;
    # .MEM_100 = VDEF <.MEM_51>
    __builtin_memmove (__first_125, __position_16, _59);
    # VUSE <.MEM_100>
    pretmp_166 = this_4(D)->D.33820._M_impl._M_finish;

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_3 bb_24 })
  {
    <bb 23>:
    # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
    # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
    # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
    _53 = prephitmp_167 + prephitmp_169;
    # .MEM_54 = VDEF <.MEM_87>
    this_4(D)->D.33820._M_impl._M_finish = _53;
    # DEBUG this => &__position
    # DEBUG D#128 => &__x_copy
    # DEBUG __first => D#311
    # DEBUG __last => __first_7
    # DEBUG D#127 => D#128
    # DEBUG __value => D#127
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#311
    # DEBUG __it => D#311
    # DEBUG D#107 => D#127
    # DEBUG __first => D#311
    # DEBUG __last => __first_7
    # DEBUG __value => D#107
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#311
    if (__first_7 == __position_16)
      goto <bb 3>;
    else
      goto <bb 24>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:

  }
  bb_26 (preds = {bb_25 }, succs = {bb_49 })
  {
    <bb 26>:
    # .MEM_154 = PHI <.MEM_101(25)>

  }
  bb_49 (preds = {bb_26 }, succs = {bb_3 })
  {
    <bb 49>:
    goto <bb 3>;

  }
  bb_28 (preds = {bb_4 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # DEBUG this => this_4(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __s => "vector::_M_fill_insert"
    # DEBUG D#180 => this_4(D)
    # DEBUG this => D#180
    # DEBUG D#179 => D#180
    # DEBUG D#178 => &D#179->D.33820
    # DEBUG this => D#178
    # DEBUG __a => D#177
    # DEBUG D#176 => D#177
    # DEBUG D#175 => D#176
    # DEBUG this => D#175
    # VUSE <.MEM_3(D)>
    _17 = MEM[(int * *)this_4(D)];
    # DEBUG D#10 => this_4(D)
    # DEBUG D#10 => this_4(D)
    # DEBUG this => D#10
    # DEBUG this => D#10
    _116 = (long int) _17;
    _117 = _8 - _116;
    _118 = _117 /[ex] 4;
    _119 = (const long unsigned int) _118;
    _120 = 4611686018427387903 - _119;
    if (__n_2(D) > _120)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {})
  {
    <bb 29>:
    # .MEM_134 = VDEF <.MEM_3(D)>
    std::__throw_length_error ("vector::_M_fill_insert");

  }
  bb_30 (preds = {bb_28 }, succs = {bb_46 bb_47 })
  {
    <bb 30>:
    # DEBUG D#10 => this_4(D)
    # DEBUG D#10 => this_4(D)
    # DEBUG this => D#10
    # DEBUG this => D#10
    # DEBUG D#10 => this_4(D)
    # DEBUG D#10 => this_4(D)
    # DEBUG this => D#10
    # DEBUG this => D#10
    # DEBUG __a => &D.49232
    # DEBUG __b => &__n
    _77 = MAX_EXPR <__n_2(D), _119>;
    __len_124 = _77 + _119;
    # DEBUG __len => __len_124
    # DEBUG D#10 => this_4(D)
    # DEBUG D#10 => this_4(D)
    # DEBUG this => D#10
    # DEBUG this => D#10
    # DEBUG D#180 => this_4(D)
    # DEBUG this => D#180
    # DEBUG D#179 => D#180
    # DEBUG D#178 => &D#179->D.33820
    # DEBUG this => D#178
    # DEBUG __a => D#177
    # DEBUG D#176 => D#177
    # DEBUG D#175 => D#176
    # DEBUG this => D#175
    _152 = __len_124 > 4611686018427387903;
    _142 = _119 > __len_124;
    _114 = _142 | _152;
    if (_114 != 0)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_31 (preds = {bb_47 }, succs = {bb_32 })
  {
    <bb 31>:
    pretmp_164 = __len_124 * 4;

  }
  bb_32 (preds = {bb_46 bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    # _156 = PHI <_144(46), _151(31)>
    # _157 = PHI <_143(46), _150(31)>
    # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#39 => &this_4(D)->D.33820._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#39
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.43432
    # DEBUG this => &__position
    # DEBUG this => &D.43432
    # DEBUG D#285 => _157 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#285
    # DEBUG D#284 => &this_4(D)->D.33820
    # DEBUG D#188 => D#284
    # DEBUG __n => NULL
    # DEBUG this => D#188
    # DEBUG D#187 => D#188
    # DEBUG D#186 => &D#187->_M_impl
    # DEBUG D#185 => D#186
    # DEBUG __n => NULL
    # DEBUG __a => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#182 => D#184
    # DEBUG D#183 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#182
    # DEBUG D.49220 => D#183
    # DEBUG D#181 => D#182
    # DEBUG D#175 => D#181
    # DEBUG this => D#175
    # .MEM_131 = VDEF <.MEM_3(D)>
    _112 = operator new (prephitmp_165);
    # VUSE <.MEM_131>
    pretmp_29 = this_4(D)->D.33820._M_impl._M_start;
    # VUSE <.MEM_131>
    pretmp_147 = this_4(D)->D.33820._M_impl._M_finish;
    pretmp_149 = _112 + prephitmp_165;
    pretmp_145 = (long int) pretmp_147;
    pretmp_138 = (long int) pretmp_29;
    pretmp_140 = _156 - pretmp_138;

  }
  bb_33 (preds = {bb_47 bb_32 }, succs = {bb_52 })
  {
    <bb 33>:
    # iftmp.30_113 = PHI <0B(47), _112(32)>
    # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
    # _158 = PHI <_151(47), _156(32)>
    # _153 = PHI <_150(47), _157(32)>
    # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
    # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
    # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
    # prephitmp_137 = PHI <_150(47), pretmp_140(32)>

  }
  bb_52 (preds = {bb_33 }, succs = {bb_34 })
  {
    <bb 52>:
    # DEBUG __new_start => NULL
    # DEBUG __new_finish => NULL
    # DEBUG D#268 => &this_4(D)->D.33820
    # DEBUG this => D#268
    _19 = (long unsigned int) _153;
    __first_20 = iftmp.30_113 + _19;
    # VUSE <.MEM_126>
    _56 = MEM[(const int &)__x_21(D)];
    # DEBUG D#217 => __x_21(D)
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#216 => D#217
    # DEBUG __x => D#216
    # DEBUG D.48437 => D#218
    # DEBUG D#215 => D#216
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#214 => D#215
    # DEBUG __x => D#214
    # DEBUG __assignable => 1
    # DEBUG D#213 => D#214
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#212 => D#213
    # DEBUG __x => D#212
    # DEBUG D#211 => D#212
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#210 => D#211
    # DEBUG __value => D#210
    # DEBUG __it => __first_20
    # DEBUG __it => __first_20
    # DEBUG D#209 => D#210
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG __value => D#209
    # DEBUG __tmp => _56
    # DEBUG __niter => __n_2(D)
    # DEBUG __niter => __n_2(D)
    # DEBUG __first => __first_20

  }
  bb_36 (preds = {bb_34 }, succs = {bb_51 })
  {
    <bb 36>:

  }
  bb_51 (preds = {bb_36 }, succs = {bb_38 bb_37 })
  {
    <bb 51>:
    # DEBUG __new_finish => 0B
    # DEBUG D#269 => &this_4(D)->D.33820
    # DEBUG this => D#269
    # DEBUG this => &__position
    # DEBUG D#310 => this_4(D)->D.33820._M_impl._M_start
    # DEBUG __first => D#310
    # DEBUG __last => D#311
    # DEBUG __result => NULL
    # DEBUG __alloc => D#266
    # DEBUG D#265 => D#266
    # DEBUG D#262 => D#265
    # DEBUG __first => D#310
    # DEBUG __last => D#311
    # DEBUG __result => NULL
    # DEBUG D.48399 => D#262
    # DEBUG __first => D#310
    # DEBUG __last => D#311
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => D#310
    # DEBUG __last => D#311
    # DEBUG __result => NULL
    # DEBUG __first => D#310
    # DEBUG __last => D#311
    # DEBUG __result => NULL
    # DEBUG __it => D#311
    # DEBUG __it => D#311
    # DEBUG __it => D#310
    # DEBUG __it => D#310
    # DEBUG __first => D#310
    # DEBUG __last => D#311
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => D#311
    # DEBUG __it => D#311
    # DEBUG __it => D#310
    # DEBUG __it => D#310
    # DEBUG __first => D#310
    # DEBUG __last => D#311
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => D#310
    # DEBUG __last => D#311
    # DEBUG __result => NULL
    # DEBUG D#309 => (long int) D#310
    # DEBUG D#308 => _158 - D#309
    _Num_73 = prephitmp_137 /[ex] 4;
    # DEBUG _Num => _Num_73
    if (_Num_73 != 0)
      goto <bb 38>;
    else
      goto <bb 37>;

  }
  bb_37 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 37>:
    pretmp_103 = (long unsigned int) prephitmp_137;
    goto <bb 39>;

  }
  bb_38 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 38>:
    _74 = (long unsigned int) prephitmp_137;
    # .MEM_94 = VDEF <.MEM_93>
    __builtin_memmove (iftmp.30_113, prephitmp_146, _74);

  }
  bb_39 (preds = {bb_37 bb_38 }, succs = {bb_41 bb_40 })
  {
    <bb 39>:
    # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
    # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
    # DEBUG D#307 => (long unsigned int) D#308
    # DEBUG __new_finish => iftmp.30_113 + D#307
    _25 = __n_2(D) * 4;
    _133 = _25 + prephitmp_102;
    __new_finish_26 = iftmp.30_113 + _133;
    # DEBUG __new_finish => __new_finish_26
    # DEBUG D#270 => &this_4(D)->D.33820
    # DEBUG this => D#270
    # DEBUG D#306 => this_4(D)->D.33820._M_impl._M_finish
    # DEBUG this => &__position
    # DEBUG __first => D#311
    # DEBUG __last => D#306
    # DEBUG __result => __new_finish_26
    # DEBUG __alloc => D#266
    # DEBUG D#265 => D#266
    # DEBUG D#262 => D#265
    # DEBUG __first => D#311
    # DEBUG __last => D#306
    # DEBUG __result => __new_finish_26
    # DEBUG D.48360 => D#262
    # DEBUG __first => D#311
    # DEBUG __last => D#306
    # DEBUG __result => __new_finish_26
    # DEBUG __assignable => 1
    # DEBUG __first => D#311
    # DEBUG __last => D#306
    # DEBUG __result => __new_finish_26
    # DEBUG __first => D#311
    # DEBUG __last => D#306
    # DEBUG __result => __new_finish_26
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG __it => D#311
    # DEBUG __it => D#311
    # DEBUG __first => D#311
    # DEBUG __last => D#306
    # DEBUG __result => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG __it => D#311
    # DEBUG __it => D#311
    # DEBUG __first => D#311
    # DEBUG __last => D#306
    # DEBUG __result => __new_finish_26
    # DEBUG __simple => 1
    # DEBUG __first => D#311
    # DEBUG __last => D#306
    # DEBUG __result => __new_finish_26
    _66 = prephitmp_121 - _158;
    _Num_67 = _66 /[ex] 4;
    # DEBUG _Num => _Num_67
    if (_Num_67 != 0)
      goto <bb 41>;
    else
      goto <bb 40>;

  }
  bb_40 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 40>:
    pretmp_162 = (long unsigned int) _66;
    goto <bb 42>;

  }
  bb_41 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 41>:
    _68 = (long unsigned int) _66;
    # .MEM_95 = VDEF <.MEM_90>
    __builtin_memcpy (__new_finish_26, __position_16, _68);

  }
  bb_42 (preds = {bb_40 bb_41 }, succs = {bb_43 bb_44 })
  {
    <bb 42>:
    # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
    # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
    _70 = __new_finish_26 + prephitmp_163;
    # DEBUG __new_finish => _70
    # DEBUG D#271 => &this_4(D)->D.33820
    # DEBUG this => D#271
    # DEBUG D#283 => this_4(D)->D.33820._M_impl._M_finish
    # DEBUG D#282 => this_4(D)->D.33820._M_impl._M_start
    # DEBUG __first => D#282
    # DEBUG __last => D#283
    # DEBUG D.48353 => NULL
    # DEBUG D#33 => D#282
    # DEBUG D#34 => D#283
    # DEBUG __first => D#33
    # DEBUG __last => D#34
    # DEBUG D#32 => D#34
    # DEBUG D#31 => D#33
    # DEBUG D#29 => D#31
    # DEBUG D#30 => D#32
    # DEBUG D.46106 => D#29
    # DEBUG D.46105 => D#30
    # DEBUG D#281 => this_4(D)->D.33820._M_impl._M_end_of_storage
    # DEBUG D#280 => (long int) D#281
    # DEBUG D#279 => (long int) D#310
    # DEBUG D#278 => D#280 - D#279
    # DEBUG D#277 => D#278 /[ex] 4
    # DEBUG D#276 => (long unsigned int) D#277
    # DEBUG D#275 => &this_4(D)->D.33820
    # DEBUG this => D#275
    # DEBUG __p => D#310
    # DEBUG __n => D#276
    if (prephitmp_146 != 0B)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#95 => &D#275->_M_impl
    # DEBUG D#93 => D#95
    # DEBUG D#94 => D#276
    # DEBUG __p => D#310
    # DEBUG __a => D#93
    # DEBUG __n => D#94
    # DEBUG D#92 => D#94
    # DEBUG D#91 => D#93
    # DEBUG D#89 => D#91
    # DEBUG D#90 => D#92
    # DEBUG __p => D#310
    # DEBUG this => D#89
    # DEBUG D.48349 => D#90
    # .MEM_96 = VDEF <.MEM_91>
    operator delete (prephitmp_146);

  }
  bb_44 (preds = {bb_43 bb_42 }, succs = {bb_53 })
  {
    <bb 44>:
    # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>

  }
  bb_53 (preds = {bb_44 }, succs = {bb_45 })
  {
    <bb 53>:
    # .MEM_30 = VDEF <.MEM_92>
    this_4(D)->D.33820._M_impl._M_start = iftmp.30_113;
    # .MEM_31 = VDEF <.MEM_30>
    this_4(D)->D.33820._M_impl._M_finish = _70;
    # .MEM_34 = VDEF <.MEM_31>
    this_4(D)->D.33820._M_impl._M_end_of_storage = prephitmp_148;

  }
  bb_45 (preds = {bb_55 bb_53 }, succs = {bb_54 })
  {
    <bb 45>:
    # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>

  }
  bb_54 (preds = {bb_45 }, succs = {bb_1 })
  {
    <bb 54>:
    # VUSE <.MEM_1>
    return;

  }
  bb_46 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 46>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#39 => &this_4(D)->D.33820._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#39
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.43432
    # DEBUG this => &__position
    _144 = (long int) __position_16;
    # DEBUG this => &D.43432
    _143 = _144 - _116;
    # DEBUG D#285 => _143 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#285
    # DEBUG D#284 => &this_4(D)->D.33820
    # DEBUG D#188 => D#284
    # DEBUG __n => NULL
    # DEBUG this => D#188
    # DEBUG D#187 => D#188
    goto <bb 32>;

  }
  bb_47 (preds = {bb_30 }, succs = {bb_31 bb_33 })
  {
    <bb 47>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#39 => &this_4(D)->D.33820._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#39
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.43432
    # DEBUG this => &__position
    _151 = (long int) __position_16;
    # DEBUG this => &D.43432
    _150 = _151 - _116;
    # DEBUG D#285 => _150 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#285
    # DEBUG D#284 => &this_4(D)->D.33820
    # DEBUG D#188 => D#284
    # DEBUG __n => NULL
    # DEBUG this => D#188
    # DEBUG D#187 => D#188
    if (__len_124 != 0)
      goto <bb 31>;
    else
      goto <bb 33>;

  }
  loop_1 (header = 12, latch = 14, niter = ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_12 (preds = {bb_11 bb_14 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # __position_109 = PHI <__position_16(11), __position_55(14)>
      # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
      # DEBUG __first => __position_109
      # .MEM_98 = VDEF <.MEM_83>
      *__position_109 = __x_copy_35;
      __position_55 = __position_109 + 4;
      # DEBUG __first => __position_55
      # DEBUG __first => __position_55
      if (_48 == __position_55)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_12 }, succs = {bb_12 })
    {
      <bb 14>:
      goto <bb 12>;

    }
  }
  loop_2 (header = 25, latch = 27, niter = ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_25 (preds = {bb_24 bb_27 }, succs = {bb_26 bb_27 })
    {
      <bb 25>:
      # __position_110 = PHI <__position_16(24), __position_58(27)>
      # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
      # DEBUG __first => __position_110
      # .MEM_101 = VDEF <.MEM_136>
      *__position_110 = __x_copy_35;
      __position_58 = __position_110 + 4;
      # DEBUG __first => __position_58
      # DEBUG __first => __position_58
      if (__first_7 == __position_58)
        goto <bb 26>;
      else
        goto <bb 27>;

    }
    bb_27 (preds = {bb_25 }, succs = {bb_25 })
    {
      <bb 27>:
      goto <bb 25>;

    }
  }
  loop_3 (header = 17, latch = 19, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_17 (preds = {bb_16 bb_19 }, succs = {bb_18 bb_19 })
    {
      <bb 17>:
      # __n_111 = PHI <__n_50(16), __n_63(19)>
      # __first_76 = PHI <__first_7(16), __first_64(19)>
      # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
      # DEBUG __niter => __n_111
      # DEBUG __first => __first_76
      # .MEM_99 = VDEF <.MEM_81>
      *__first_76 = __x_copy_35;
      __n_63 = __n_111 + 18446744073709551615;
      # DEBUG __niter => __n_63
      __first_64 = __first_76 + 4;
      # DEBUG __first => __first_64
      # DEBUG __niter => __n_63
      # DEBUG __first => __first_64
      if (__n_63 == 0)
        goto <bb 18>;
      else
        goto <bb 19>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_17 })
    {
      <bb 19>:
      goto <bb 17>;

    }
  }
  loop_4 (header = 34, latch = 35, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_34 (preds = {bb_35 bb_52 }, succs = {bb_36 bb_35 })
    {
      <bb 34>:
      # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
      # __first_155 = PHI <__first_80(35), __first_20(52)>
      # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
      # DEBUG __niter => __n_132
      # DEBUG __first => __first_155
      # .MEM_93 = VDEF <.MEM_130>
      *__first_155 = _56;
      __n_79 = __n_132 + 18446744073709551615;
      # DEBUG __niter => __n_79
      __first_80 = __first_155 + 4;
      # DEBUG __first => __first_80
      # DEBUG __niter => __n_79
      # DEBUG __first => __first_80
      if (__n_79 == 0)
        goto <bb 36>;
      else
        goto <bb 35>;

    }
    bb_35 (preds = {bb_34 }, succs = {bb_34 })
    {
      <bb 35>:
      goto <bb 34>;

    }
  }
}

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.33064 * const thisD.33744, struct iteratorD.33388 __positionD.33745, size_typeD.33396 __nD.33746, const value_typeD.33383 & __xD.33747)
{
  const long unsigned intD.14 D.49232;
  const size_typeD.33396 __lenD.49226;
  size_typeD.33396 D.49231;
  size_typeD.33396 __nD.49224;
  intD.9 * D.49222;
  const ptrdiff_tD.2819 _NumD.49212;
  intD.9 * D.49213;
  intD.9 * const __positionD.48466;
  intD.9 * __firstD.48434;
  const ptrdiff_tD.2819 _NumD.48428;
  const ptrdiff_tD.2819 _NumD.48389;
  intD.9 * __firstD.48317;
  long unsigned intD.14 __nD.48318;
  intD.9 * __firstD.48268;
  const ptrdiff_tD.2819 _NumD.48264;
  intD.9 * __firstD.48217;
  intD.9 * __new_finishD.43434;
  const size_typeD.33396 __elems_afterD.43398;
  value_typeD.33383 __x_copyD.43397;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.42794 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.25_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.30_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#311ptD.0 => MEM[(struct __normal_iteratorD.33389 *)&__positionD.33745]
  # DEBUG __positionD.48466 => D#311ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 55, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 55, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.33389 *)&__positionD.33745];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.33820._M_implD.33311._M_end_of_storageD.33315;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.33820._M_implD.33311._M_finishD.33314;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.43397 => __x_copy_35
  # DEBUG thisD.48212 => this_4(D)
  # DEBUG D#17ptD.0 => &this_4(D)->D.33820._M_implD.33311._M_finishD.33314
  # DEBUG thisD.48214 => NULL
  # DEBUG __iD.48213 => D#17ptD.0
  # DEBUG __lhsD.48209 => &D.43399
  # DEBUG __rhsD.48210 => &__positionD.33745
  # DEBUG thisD.46138 => &D.43399
  # DEBUG thisD.46136 => &__positionD.33745
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.33396) _22;
  # DEBUG __elems_afterD.43398 => __elems_after_37
  # DEBUG __old_finishD.43406 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#272ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48266 => D#272ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.48231 => _41
  # DEBUG __lastD.48232 => __first_7
  # DEBUG __resultD.48233 => __first_7
  # DEBUG __allocD.48234 => D#264ptD.0
  # DEBUG D#263ptD.0 => D#264ptD.0
  # DEBUG D#262ptD.0 => D#263ptD.0
  # DEBUG __firstD.48238 => _41
  # DEBUG __lastD.48237 => __first_7
  # DEBUG __resultD.48236 => __first_7
  # DEBUG D.48235 => D#262ptD.0
  # DEBUG __firstD.48241 => _41
  # DEBUG __lastD.48240 => __first_7
  # DEBUG __resultD.48239 => __first_7
  # DEBUG __assignableD.48244 => 1
  # DEBUG __firstD.48247 => _41
  # DEBUG __lastD.48246 => __first_7
  # DEBUG __resultD.48245 => __first_7
  # DEBUG __firstD.48250 => _41
  # DEBUG __lastD.48249 => __first_7
  # DEBUG __resultD.48248 => __first_7
  # DEBUG __itD.47960 => __first_7
  # DEBUG __itD.46591 => __first_7
  # DEBUG __itD.47958 => _41
  # DEBUG __itD.46591 => _41
  # DEBUG __firstD.48253 => _41
  # DEBUG __lastD.48252 => __first_7
  # DEBUG __resultD.48251 => __first_7
  # DEBUG __itD.47940 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG __itD.47938 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG __itD.47936 => _41
  # DEBUG __itD.46594 => _41
  # DEBUG __firstD.48256 => _41
  # DEBUG __lastD.48255 => __first_7
  # DEBUG __resultD.48254 => __first_7
  # DEBUG __simpleD.48260 => 1
  # DEBUG __firstD.48263 => _41
  # DEBUG __lastD.48262 => __first_7
  # DEBUG __resultD.48261 => __first_7
  __first.25_49 = (long intD.12) _41;
  _47 = _8 - __first.25_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.48264 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.33820._M_implD.33311._M_finishD.33314;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.33820._M_implD.33311._M_finishD.33314 = _43;
  # DEBUG thisD.48229 => &__positionD.33745
  # DEBUG __firstD.49196 => D#311ptD.0
  # DEBUG __lastD.49197 => _41
  # DEBUG __resultD.49198 => __first_7
  # DEBUG __itD.46985 => _41
  # DEBUG __itD.46591 => _41
  # DEBUG __itD.46983 => D#311ptD.0
  # DEBUG __itD.46591 => D#311ptD.0
  # DEBUG __firstD.49201 => D#311ptD.0
  # DEBUG __lastD.49200 => _41
  # DEBUG __resultD.49199 => __first_7
  # DEBUG __itD.46965 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG __itD.46963 => _41
  # DEBUG __itD.46594 => _41
  # DEBUG __itD.46961 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG __firstD.49204 => D#311ptD.0
  # DEBUG __lastD.49203 => _41
  # DEBUG __resultD.49202 => __first_7
  # DEBUG __simpleD.49208 => 1
  # DEBUG __firstD.49211 => D#311ptD.0
  # DEBUG __lastD.49210 => _41
  # DEBUG __resultD.49209 => __first_7
  _104 = __first.25_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.49212 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.48227 => &__positionD.33745
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.48225 => &__positionD.33745
  # DEBUG D#128ptD.0 => &__x_copyD.43397
  # DEBUG __firstD.48217 => D#311ptD.0
  # DEBUG __lastD.48218 => _48
  # DEBUG D#127ptD.0 => D#128ptD.0
  # DEBUG __valueD.48220 => D#127ptD.0
  # DEBUG __itD.46604 => _48
  # DEBUG __itD.46594 => _48
  # DEBUG __itD.46602 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG D#107ptD.0 => D#127ptD.0
  # DEBUG __firstD.48223 => D#311ptD.0
  # DEBUG __lastD.48222 => _48
  # DEBUG __valueD.48221 => D#107ptD.0
  # DEBUG __tmpD.48224 => __x_copy_35
  # DEBUG __firstD.48223 => D#311ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.48223 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.48223 => __position_55
  # DEBUG __firstD.48223 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 48, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
;;    succ:       48 [100.0%]  (FALLTHRU)

;;   basic block 48, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 48, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#273ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48339 => D#273ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#217ptD.0 => &__x_copyD.43397
  # DEBUG __firstD.48317 => __first_7
  # DEBUG __nD.48318 => __n_50
  # DEBUG D#216ptD.0 => D#217ptD.0
  # DEBUG __xD.48321 => D#216ptD.0
  # DEBUG D.48320 => D#218ptD.0
  # DEBUG D#215ptD.0 => D#216ptD.0
  # DEBUG __firstD.48324 => __first_7
  # DEBUG __nD.48323 => __n_50
  # DEBUG D#214ptD.0 => D#215ptD.0
  # DEBUG __xD.48322 => D#214ptD.0
  # DEBUG __assignableD.48326 => 1
  # DEBUG D#213ptD.0 => D#214ptD.0
  # DEBUG __firstD.48329 => __first_7
  # DEBUG __nD.48328 => __n_50
  # DEBUG D#212ptD.0 => D#213ptD.0
  # DEBUG __xD.48327 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#212ptD.0
  # DEBUG __firstD.48332 => __first_7
  # DEBUG __nD.48331 => __n_50
  # DEBUG D#210ptD.0 => D#211ptD.0
  # DEBUG __valueD.48330 => D#210ptD.0
  # DEBUG __itD.47222 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG D#209ptD.0 => D#210ptD.0
  # DEBUG __firstD.48335 => __first_7
  # DEBUG __nD.48334 => __n_50
  # DEBUG __valueD.48333 => D#209ptD.0
  # DEBUG __tmpD.48336 => __x_copy_35
  # DEBUG __niterD.48337 => __n_50
  # DEBUG __niterD.48337 => __n_50
  # DEBUG __firstD.48335 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.48337 => __n_111
  # DEBUG __firstD.48335 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.48337 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.48335 => __first_64
  # DEBUG __niterD.48337 => __n_63
  # DEBUG __firstD.48335 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 50, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       50 [100.0%]  (FALLTHRU)

;;   basic block 50, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 50, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(50), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.33820._M_implD.33311._M_finishD.33314 = __first_125;
  # DEBUG D#274ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48315 => D#274ptD.0
  # DEBUG thisD.48313 => &__positionD.33745
  # DEBUG __firstD.48278 => D#311ptD.0
  # DEBUG __lastD.48279 => __first_7
  # DEBUG __resultD.48280 => __first_125
  # DEBUG __allocD.48281 => D#264ptD.0
  # DEBUG D#263ptD.0 => D#264ptD.0
  # DEBUG D#262ptD.0 => D#263ptD.0
  # DEBUG __firstD.48285 => D#311ptD.0
  # DEBUG __lastD.48284 => __first_7
  # DEBUG __resultD.48283 => __first_125
  # DEBUG D.48282 => D#262ptD.0
  # DEBUG __firstD.48288 => D#311ptD.0
  # DEBUG __lastD.48287 => __first_7
  # DEBUG __resultD.48286 => __first_125
  # DEBUG __assignableD.48291 => 1
  # DEBUG __firstD.48294 => D#311ptD.0
  # DEBUG __lastD.48293 => __first_7
  # DEBUG __resultD.48292 => __first_125
  # DEBUG __firstD.48297 => D#311ptD.0
  # DEBUG __lastD.48296 => __first_7
  # DEBUG __resultD.48295 => __first_125
  # DEBUG __itD.47960 => __first_7
  # DEBUG __itD.46591 => __first_7
  # DEBUG __itD.47958 => D#311ptD.0
  # DEBUG __itD.46591 => D#311ptD.0
  # DEBUG __firstD.48300 => D#311ptD.0
  # DEBUG __lastD.48299 => __first_7
  # DEBUG __resultD.48298 => __first_125
  # DEBUG __itD.47940 => __first_125
  # DEBUG __itD.46594 => __first_125
  # DEBUG __itD.47938 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG __itD.47936 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG __firstD.48303 => D#311ptD.0
  # DEBUG __lastD.48302 => __first_7
  # DEBUG __resultD.48301 => __first_125
  # DEBUG __simpleD.48307 => 1
  # DEBUG __firstD.48310 => D#311ptD.0
  # DEBUG __lastD.48309 => __first_7
  # DEBUG __resultD.48308 => __first_125
  # DEBUG _NumD.48311 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.33820._M_implD.33311._M_finishD.33314;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.33820._M_implD.33311._M_finishD.33314 = _53;
  # DEBUG thisD.48276 => &__positionD.33745
  # DEBUG D#128ptD.0 => &__x_copyD.43397
  # DEBUG __firstD.48268 => D#311ptD.0
  # DEBUG __lastD.48269 => __first_7
  # DEBUG D#127ptD.0 => D#128ptD.0
  # DEBUG __valueD.48271 => D#127ptD.0
  # DEBUG __itD.46604 => __first_7
  # DEBUG __itD.46594 => __first_7
  # DEBUG __itD.46602 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG D#107ptD.0 => D#127ptD.0
  # DEBUG __firstD.48274 => D#311ptD.0
  # DEBUG __lastD.48273 => __first_7
  # DEBUG __valueD.48272 => D#107ptD.0
  # DEBUG __tmpD.48275 => __x_copy_35
  # DEBUG __firstD.48274 => D#311ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.48274 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.48274 => __position_58
  # DEBUG __firstD.48274 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 49, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
;;    succ:       49 [100.0%]  (FALLTHRU)

;;   basic block 49, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 49, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.49223 => this_4(D)
  # DEBUG __nD.49224 => __n_2(D)
  # DEBUG __nD.49224 => __n_2(D)
  # DEBUG __sD.49225 => "vector::_M_fill_insert"
  # DEBUG D#180ptD.0 => this_4(D)
  # DEBUG thisD.47021 => D#180ptD.0
  # DEBUG D#179ptD.0 => D#180ptD.0
  # DEBUG D#178ptD.0 => &D#179ptD.0->D.33820
  # DEBUG thisD.47011 => D#178ptD.0
  # DEBUG __aD.47003 => D#177ptD.0
  # DEBUG D#176ptD.0 => D#177ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  # DEBUG thisD.46994 => D#175ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG thisD.49229 => D#10ptD.0
  # DEBUG thisD.49230 => D#10ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG thisD.47039 => D#10ptD.0
  # DEBUG thisD.47038 => D#10ptD.0
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG thisD.47034 => D#10ptD.0
  # DEBUG thisD.47033 => D#10ptD.0
  # DEBUG __aD.49228 => &D.49232
  # DEBUG __bD.49227 => &__nD.49224
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.49226 => __len_124
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG D#10ptD.0 => this_4(D)
  # DEBUG thisD.47026 => D#10ptD.0
  # DEBUG thisD.47025 => D#10ptD.0
  # DEBUG D#180ptD.0 => this_4(D)
  # DEBUG thisD.47041 => D#180ptD.0
  # DEBUG D#179ptD.0 => D#180ptD.0
  # DEBUG D#178ptD.0 => &D#179ptD.0->D.33820
  # DEBUG thisD.47011 => D#178ptD.0
  # DEBUG __aD.47003 => D#177ptD.0
  # DEBUG D#176ptD.0 => D#177ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  # DEBUG thisD.46994 => D#175ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.43430 => NULL
  # DEBUG thisD.48461 => this_4(D)
  # DEBUG D#39ptD.0 => &this_4(D)->D.33820._M_implD.33311._M_startD.33313
  # DEBUG thisD.48463 => NULL
  # DEBUG __iD.48462 => D#39ptD.0
  # DEBUG __lhsD.48458 => &__positionD.33745
  # DEBUG __rhsD.48459 => &D.43432
  # DEBUG thisD.46138 => &__positionD.33745
  # DEBUG thisD.46136 => &D.43432
  # DEBUG D#285ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.43431 => (const size_typeD.33396) D#285ptD.0
  # DEBUG D#284ptD.0 => &this_4(D)->D.33820
  # DEBUG D#188ptD.0 => D#284ptD.0
  # DEBUG __nD.49214 => NULL
  # DEBUG thisD.49215 => D#188ptD.0
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG D#186ptD.0 => &D#187ptD.0->_M_implD.33311
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG __nD.49218 => NULL
  # DEBUG __aD.49217 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#183ptD.0 => 0B
  # DEBUG __nD.49221 => NULL
  # DEBUG thisD.49219 => D#182ptD.0
  # DEBUG D.49220 => D#183ptD.0
  # DEBUG D#181ptD.0 => D#182ptD.0
  # DEBUG D#175ptD.0 => D#181ptD.0
  # DEBUG thisD.47046 => D#175ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.49235 } (escaped heap)
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.33820._M_implD.33311._M_startD.33313;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.33820._M_implD.33311._M_finishD.33314;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 52, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.49235 } (escaped heap)
  # iftmp.30_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.49235 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
;;    succ:       52 [100.0%]  (FALLTHRU)

;;   basic block 52, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 33, next block 34, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # DEBUG __new_startD.43433 => NULL
  # DEBUG __new_finishD.43434 => NULL
  # DEBUG D#268ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48456 => D#268ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.49235 } (escaped heap)
  __first_20 = iftmp.30_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#217ptD.0 => __x_21(D)
  # DEBUG __firstD.48434 => __first_20
  # DEBUG __nD.48435 => __n_2(D)
  # DEBUG D#216ptD.0 => D#217ptD.0
  # DEBUG __xD.48438 => D#216ptD.0
  # DEBUG D.48437 => D#218ptD.0
  # DEBUG D#215ptD.0 => D#216ptD.0
  # DEBUG __firstD.48441 => __first_20
  # DEBUG __nD.48440 => __n_2(D)
  # DEBUG D#214ptD.0 => D#215ptD.0
  # DEBUG __xD.48439 => D#214ptD.0
  # DEBUG __assignableD.48443 => 1
  # DEBUG D#213ptD.0 => D#214ptD.0
  # DEBUG __firstD.48446 => __first_20
  # DEBUG __nD.48445 => __n_2(D)
  # DEBUG D#212ptD.0 => D#213ptD.0
  # DEBUG __xD.48444 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#212ptD.0
  # DEBUG __firstD.48449 => __first_20
  # DEBUG __nD.48448 => __n_2(D)
  # DEBUG D#210ptD.0 => D#211ptD.0
  # DEBUG __valueD.48447 => D#210ptD.0
  # DEBUG __itD.47222 => __first_20
  # DEBUG __itD.46594 => __first_20
  # DEBUG D#209ptD.0 => D#210ptD.0
  # DEBUG __firstD.48452 => __first_20
  # DEBUG __nD.48451 => __n_2(D)
  # DEBUG __valueD.48450 => D#209ptD.0
  # DEBUG __tmpD.48453 => _56
  # DEBUG __niterD.48454 => __n_2(D)
  # DEBUG __niterD.48454 => __n_2(D)
  # DEBUG __firstD.48452 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 52, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
  # PT = null { D.49235 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(52)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
  # DEBUG __niterD.48454 => __n_132
  # DEBUG __firstD.48452 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.48454 => __n_79
  # PT = null { D.49235 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.48452 => __first_80
  # DEBUG __niterD.48454 => __n_79
  # DEBUG __firstD.48452 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 51, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU)

;;   basic block 51, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 36, next block 37, flags: (NEW)
;;    pred:       36 [100.0%]  (FALLTHRU)
  # DEBUG __new_finishD.43434 => 0B
  # DEBUG D#269ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48432 => D#269ptD.0
  # DEBUG thisD.48430 => &__positionD.33745
  # DEBUG D#310ptD.0 => this_4(D)->D.33820._M_implD.33311._M_startD.33313
  # DEBUG __firstD.48395 => D#310ptD.0
  # DEBUG __lastD.48396 => D#311ptD.0
  # DEBUG __resultD.48397 => NULL
  # DEBUG __allocD.48398 => D#266ptD.0
  # DEBUG D#265ptD.0 => D#266ptD.0
  # DEBUG D#262ptD.0 => D#265ptD.0
  # DEBUG __firstD.48402 => D#310ptD.0
  # DEBUG __lastD.48401 => D#311ptD.0
  # DEBUG __resultD.48400 => NULL
  # DEBUG D.48399 => D#262ptD.0
  # DEBUG __firstD.48405 => D#310ptD.0
  # DEBUG __lastD.48404 => D#311ptD.0
  # DEBUG __resultD.48403 => NULL
  # DEBUG __assignableD.48408 => 1
  # DEBUG __firstD.48411 => D#310ptD.0
  # DEBUG __lastD.48410 => D#311ptD.0
  # DEBUG __resultD.48409 => NULL
  # DEBUG __firstD.48414 => D#310ptD.0
  # DEBUG __lastD.48413 => D#311ptD.0
  # DEBUG __resultD.48412 => NULL
  # DEBUG __itD.47960 => D#311ptD.0
  # DEBUG __itD.46591 => D#311ptD.0
  # DEBUG __itD.47958 => D#310ptD.0
  # DEBUG __itD.46591 => D#310ptD.0
  # DEBUG __firstD.48417 => D#310ptD.0
  # DEBUG __lastD.48416 => D#311ptD.0
  # DEBUG __resultD.48415 => NULL
  # DEBUG __itD.47940 => NULL
  # DEBUG __itD.46594 => NULL
  # DEBUG __itD.47938 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG __itD.47936 => D#310ptD.0
  # DEBUG __itD.46594 => D#310ptD.0
  # DEBUG __firstD.48420 => D#310ptD.0
  # DEBUG __lastD.48419 => D#311ptD.0
  # DEBUG __resultD.48418 => NULL
  # DEBUG __simpleD.48424 => 1
  # DEBUG __firstD.48427 => D#310ptD.0
  # DEBUG __lastD.48426 => D#311ptD.0
  # DEBUG __resultD.48425 => NULL
  # DEBUG D#309ptD.0 => (long intD.12) D#310ptD.0
  # DEBUG D#308ptD.0 => _158 - D#309ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.48428 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 51, next block 38, flags: (NEW)
;;    pred:       51 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       51 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  memmoveD.995 (iftmp.30_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#307ptD.0 => (long unsigned intD.14) D#308ptD.0
  # DEBUG __new_finishD.43434 => iftmp.30_113 + D#307ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.49235 } (escaped heap)
  __new_finish_26 = iftmp.30_113 + _133;
  # DEBUG __new_finishD.43434 => __new_finish_26
  # DEBUG D#270ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48393 => D#270ptD.0
  # DEBUG D#306ptD.0 => this_4(D)->D.33820._M_implD.33311._M_finishD.33314
  # DEBUG thisD.48391 => &__positionD.33745
  # DEBUG __firstD.48356 => D#311ptD.0
  # DEBUG __lastD.48357 => D#306ptD.0
  # DEBUG __resultD.48358 => __new_finish_26
  # DEBUG __allocD.48359 => D#266ptD.0
  # DEBUG D#265ptD.0 => D#266ptD.0
  # DEBUG D#262ptD.0 => D#265ptD.0
  # DEBUG __firstD.48363 => D#311ptD.0
  # DEBUG __lastD.48362 => D#306ptD.0
  # DEBUG __resultD.48361 => __new_finish_26
  # DEBUG D.48360 => D#262ptD.0
  # DEBUG __firstD.48366 => D#311ptD.0
  # DEBUG __lastD.48365 => D#306ptD.0
  # DEBUG __resultD.48364 => __new_finish_26
  # DEBUG __assignableD.48369 => 1
  # DEBUG __firstD.48372 => D#311ptD.0
  # DEBUG __lastD.48371 => D#306ptD.0
  # DEBUG __resultD.48370 => __new_finish_26
  # DEBUG __firstD.48375 => D#311ptD.0
  # DEBUG __lastD.48374 => D#306ptD.0
  # DEBUG __resultD.48373 => __new_finish_26
  # DEBUG __itD.47960 => D#306ptD.0
  # DEBUG __itD.46591 => D#306ptD.0
  # DEBUG __itD.47958 => D#311ptD.0
  # DEBUG __itD.46591 => D#311ptD.0
  # DEBUG __firstD.48378 => D#311ptD.0
  # DEBUG __lastD.48377 => D#306ptD.0
  # DEBUG __resultD.48376 => __new_finish_26
  # DEBUG __itD.47940 => __new_finish_26
  # DEBUG __itD.46594 => __new_finish_26
  # DEBUG __itD.47938 => D#306ptD.0
  # DEBUG __itD.46594 => D#306ptD.0
  # DEBUG __itD.47936 => D#311ptD.0
  # DEBUG __itD.46594 => D#311ptD.0
  # DEBUG __firstD.48381 => D#311ptD.0
  # DEBUG __lastD.48380 => D#306ptD.0
  # DEBUG __resultD.48379 => __new_finish_26
  # DEBUG __simpleD.48385 => 1
  # DEBUG __firstD.48388 => D#311ptD.0
  # DEBUG __lastD.48387 => D#306ptD.0
  # DEBUG __resultD.48386 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.48389 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.49235 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.43434 => _70
  # DEBUG D#271ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48354 => D#271ptD.0
  # DEBUG D#283ptD.0 => this_4(D)->D.33820._M_implD.33311._M_finishD.33314
  # DEBUG D#282ptD.0 => this_4(D)->D.33820._M_implD.33311._M_startD.33313
  # DEBUG __firstD.48351 => D#282ptD.0
  # DEBUG __lastD.48352 => D#283ptD.0
  # DEBUG D.48353 => NULL
  # DEBUG D#33ptD.0 => D#282ptD.0
  # DEBUG D#34ptD.0 => D#283ptD.0
  # DEBUG __firstD.46117 => D#33ptD.0
  # DEBUG __lastD.46116 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.46106 => D#29ptD.0
  # DEBUG D.46105 => D#30ptD.0
  # DEBUG D#281ptD.0 => this_4(D)->D.33820._M_implD.33311._M_end_of_storageD.33315
  # DEBUG D#280ptD.0 => (long intD.12) D#281ptD.0
  # DEBUG D#279ptD.0 => (long intD.12) D#310ptD.0
  # DEBUG D#278ptD.0 => D#280ptD.0 - D#279ptD.0
  # DEBUG D#277ptD.0 => D#278ptD.0 /[ex] 4
  # DEBUG D#276ptD.0 => (long unsigned intD.14) D#277ptD.0
  # DEBUG D#275ptD.0 => &this_4(D)->D.33820
  # DEBUG thisD.48341 => D#275ptD.0
  # DEBUG __pD.48342 => D#310ptD.0
  # DEBUG __nD.48343 => D#276ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#95ptD.0 => &D#275ptD.0->_M_implD.33311
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#94ptD.0 => D#276ptD.0
  # DEBUG __pD.48347 => D#310ptD.0
  # DEBUG __aD.48345 => D#93ptD.0
  # DEBUG __nD.48346 => D#94ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0
  # DEBUG __pD.48350 => D#310ptD.0
  # DEBUG thisD.48348 => D#89ptD.0
  # DEBUG D.48349 => D#90ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.49235 } (escaped heap)
  # CLB = nonlocal null { D.49235 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 53, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
;;    succ:       53 [100.0%]  (FALLTHRU)

;;   basic block 53, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 44, next block 45, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU)
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.33820._M_implD.33311._M_startD.33313 = iftmp.30_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.33820._M_implD.33311._M_finishD.33314 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.33820._M_implD.33311._M_end_of_storageD.33315 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 53, next block 54, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>
;;    succ:       54 [100.0%]  (FALLTHRU)

;;   basic block 54, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 45, next block 46, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 54, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.43430 => NULL
  # DEBUG thisD.48461 => this_4(D)
  # DEBUG D#39ptD.0 => &this_4(D)->D.33820._M_implD.33311._M_startD.33313
  # DEBUG thisD.48463 => NULL
  # DEBUG __iD.48462 => D#39ptD.0
  # DEBUG __lhsD.48458 => &__positionD.33745
  # DEBUG __rhsD.48459 => &D.43432
  # DEBUG thisD.46138 => &__positionD.33745
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.46136 => &D.43432
  _143 = _144 - _116;
  # DEBUG D#285ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.43431 => (const size_typeD.33396) D#285ptD.0
  # DEBUG D#284ptD.0 => &this_4(D)->D.33820
  # DEBUG D#188ptD.0 => D#284ptD.0
  # DEBUG __nD.49214 => NULL
  # DEBUG thisD.49215 => D#188ptD.0
  # DEBUG D#187ptD.0 => D#188ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.43430 => NULL
  # DEBUG thisD.48461 => this_4(D)
  # DEBUG D#39ptD.0 => &this_4(D)->D.33820._M_implD.33311._M_startD.33313
  # DEBUG thisD.48463 => NULL
  # DEBUG __iD.48462 => D#39ptD.0
  # DEBUG __lhsD.48458 => &__positionD.33745
  # DEBUG __rhsD.48459 => &D.43432
  # DEBUG thisD.46138 => &__positionD.33745
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.46136 => &D.43432
  _150 = _151 - _116;
  # DEBUG D#285ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.43431 => (const size_typeD.33396) D#285ptD.0
  # DEBUG D#284ptD.0 => &this_4(D)->D.33820
  # DEBUG D#188ptD.0 => D#284ptD.0
  # DEBUG __nD.49214 => NULL
  # DEBUG thisD.49215 => D#188ptD.0
  # DEBUG D#187ptD.0 => D#188ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = std::pair<int, Flit*>; _Alloc = std::allocator<std::pair<int, Flit*> >; std::size_t = long unsigned int] (_ZNSt11_Deque_baseISt4pairIiP4FlitESaIS3_EE17_M_initialize_mapEm, funcdef_no=2158, decl_uid=32383, cgraph_uid=644, symbol_order=645)


Pass statistics:
----------------

void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = std::pair<int, Flit*>; _Alloc = std::allocator<std::pair<int, Flit*> >; std::size_t = long unsigned int] (struct _Deque_baseD.32030 * const thisD.32384, size_tD.2818 __num_elementsD.32385)
Eh tree:
   5 must_not_throw
   4 cleanup land:{2,<L2>}
   3 try land:{1,<L0>} catch:{}
     8 must_not_throw
     7 cleanup land:{4,<L5>}
     6 try land:{3,<L3>} catch:{}
{
  struct pairD.32024 * * __nstartD.49327;
  struct pairD.32024 * * __nfinishD.43587;
  struct pairD.32024 * * __nstartD.43586;
  const size_tD.2818 __num_nodesD.43583;
  const long unsigned intD.14 D.43584;
  const long unsigned intD.14 D.43585;
  long unsigned intD.14 _3;
  struct pairD.32024 * * _8;
  long unsigned intD.14 _15;
  long unsigned intD.14 _16;
  long unsigned intD.14 _17;
  long unsigned intD.14 _18;
  long unsigned intD.14 _20;
  struct pairD.32024 * * _23;
  struct pairD.32024 * _24;
  long unsigned intD.14 _26;
  long unsigned intD.14 _27;
  long unsigned intD.14 _28;
  struct pairD.32024 * _29;
  voidD.45 * _31;
  struct pairD.32024 * * _33;
  struct pairD.32024 * _40;
  struct pairD.32024 * _41;
  struct pairD.32024 * _42;
  struct pairD.32024 * _52;
  voidD.45 * _54;
  struct pairD.32024 * _56;
  long unsigned intD.14 _65;

;;   basic block 2, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __sizeD.47476 => 16
  # RANGE [0, 576460752303423487] NONZERO 576460752303423487
  _3 = __num_elements_2(D) >> 5;
  # RANGE [1, 576460752303423488] NONZERO 1152921504606846975
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodesD.43583 => __num_nodes_4
  # RANGE [3, 576460752303423490] NONZERO 1152921504606846975
  _5 = _3 + 3;
  # DEBUG __aD.47473 => &D.43584
  # DEBUG __bD.47474 => &D.43585
  # RANGE [8, 576460752303423490] NONZERO 1152921504606846975
  _65 = MAX_EXPR <_5, 8>;
  # .MEM_11 = VDEF <.MEM_1(D)>
  this_10(D)->_M_implD.32396._M_map_sizeD.32399 = _65;
  # DEBUG D#196ptD.0 => this_10(D)
  # DEBUG __nD.47464 => D#374ptD.0
  # DEBUG thisD.47465 => D#196ptD.0
  # DEBUG D#195ptD.0 => D#196ptD.0
  # DEBUG D#151ptD.0 => D#195ptD.0
  # DEBUG thisD.47137 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#194ptD.0 => &__map_allocD.47466
  # DEBUG __nD.47468 => D#374ptD.0
  # DEBUG __aD.47467 => D#194ptD.0
  # DEBUG D#193ptD.0 => D#194ptD.0
  # DEBUG D#191ptD.0 => D#193ptD.0
  # DEBUG D#192ptD.0 => 0B
  # DEBUG __nD.47471 => D#374ptD.0
  # DEBUG thisD.47469 => D#191ptD.0
  # DEBUG D.47470 => D#192ptD.0
  # DEBUG D#190ptD.0 => D#191ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0
  # DEBUG thisD.47102 => D#189ptD.0
  # RANGE [64, 4611686018427387920] NONZERO 9223372036854775800
  _26 = _65 * 8;
  # .MEM_34 = VDEF <.MEM_11>
  # PT = { D.49357 } (escaped heap)
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  _8 = _ZnwmD.2764 (_26);
  # DEBUG thisD.47150 => &__map_allocD.47466
  # DEBUG thisD.47139 => &__map_allocD.47466
  # .MEM_14 = VDEF <.MEM_34>
  this_10(D)->_M_implD.32396._M_mapD.32398 = _8;
  # VUSE <.MEM_14>
  _15 = this_10(D)->_M_implD.32396._M_map_sizeD.32399;
  # RANGE [0, 18446744073709551615]
  _16 = _15 - __num_nodes_4;
  # RANGE [0, 9223372036854775807] NONZERO 9223372036854775807
  _17 = _16 >> 1;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _18 = _17 * 8;
  # PT = { D.49357 } (escaped heap)
  __nstart_19 = _8 + _18;
  # DEBUG __nstartD.43586 => __nstart_19
  # RANGE [8, 4611686018427387904] NONZERO 9223372036854775800
  _20 = __num_nodes_4 * 8;
  # PT = { D.49357 } (escaped heap)
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinishD.43587 => __nfinish_21
  # DEBUG D#230ptD.0 => this_10(D)
  # DEBUG __nstartD.49327 => __nstart_19
  # DEBUG __nfinishD.49328 => __nfinish_21
  # DEBUG thisD.49329 => D#230ptD.0
  # DEBUG __curD.49330 => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 14>;
  else
    goto <bb 3>;
;;    succ:       14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_14(3), .MEM_60(6)>
  # PT = { D.49357 } (escaped heap)
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __curD.49330 => __nstart_75
  # DEBUG D#227ptD.0 => D#228ptD.0
  # DEBUG thisD.49344 => D#227ptD.0
  # DEBUG D#226ptD.0 => D#227ptD.0
  # DEBUG __sizeD.47399 => 16
  # DEBUG D#225ptD.0 => &D#226ptD.0->_M_implD.32396
  # DEBUG D#224ptD.0 => D#225ptD.0
  # DEBUG __nD.49347 => NULL
  # DEBUG __aD.49346 => D#224ptD.0
  # DEBUG D#223ptD.0 => D#224ptD.0
  # DEBUG D#221ptD.0 => D#223ptD.0
  # DEBUG D#222ptD.0 => 0B
  # DEBUG __nD.49350 => NULL
  # DEBUG thisD.49348 => D#221ptD.0
  # DEBUG D.49349 => D#222ptD.0
  # DEBUG D#220ptD.0 => D#221ptD.0
  # DEBUG D#219ptD.0 => D#220ptD.0
  # DEBUG thisD.47356 => D#219ptD.0
  [LP 3] # .MEM_59 = VDEF <.MEM_71>
  # PT = { D.49358 } (escaped heap)
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  _52 = _ZnwmD.2764 (512);
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = VDEF <.MEM_59>
  *__nstart_75 = _52;
  # PT = { D.49357 } (escaped heap)
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __curD.49330 => __nstart_53
  # DEBUG __curD.49330 => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
  # PT = { D.49357 } (escaped heap)
  # __nstart_13 = PHI <__nstart_75(4)>
<L3>: [LP 3]
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _54 = __builtin_eh_pointerD.2738 (6);
  # .MEM_61 = VDEF <.MEM_59>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_begin_catchD.17563 (_54);
  # DEBUG D#149ptD.0 => D#229ptD.0
  # DEBUG __nstartD.49333 => __nstart_19
  # DEBUG __nfinishD.49332 => __nstart_13
  # DEBUG thisD.49331 => D#149ptD.0
  # DEBUG __nD.49334 => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_61(7), .MEM_74(11)>
  [LP 4] # .MEM_63 = VDEF <.MEM_55>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_rethrowD.43440 ();
;;    succ:       13 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = { D.49357 } (escaped heap)
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(12)>
  # .MEM_73 = PHI <.MEM_61(9), .MEM_62(12)>
  # DEBUG __nD.49334 => __nstart_72
  # VUSE <.MEM_73>
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _56 = *__nstart_72;
  # DEBUG thisD.49336 => D#147ptD.0
  # DEBUG __pD.49335 => _56
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.49340 => _56
  # DEBUG __aD.49338 => D#133ptD.0
  # DEBUG __nD.49339 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.49343 => _56
  # DEBUG thisD.49341 => D#129ptD.0
  # DEBUG D.49342 => D#130ptD.0
  # .MEM_62 = VDEF <.MEM_73>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  _ZdlPvD.2766 (_56);
  # PT = { D.49357 } (escaped heap)
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __nD.49334 => __nstart_57
  # DEBUG __nD.49334 => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_74 = PHI <.MEM_62(10)>
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       8 (EH,EXECUTABLE)
<L5>: [LP 4]
  [MNT 8] # .MEM_64 = VDEF <.MEM_63>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_end_catchD.17562 ();
  [LP 1] resx 7
;;    succ:       15 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       2 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_14(2), .MEM_60(5)>
  # DEBUG D#233ptD.0 => &this_10(D)->_M_implD.32396._M_startD.32400
  # DEBUG thisD.47482 => D#233ptD.0
  # DEBUG __new_nodeD.47483 => __nstart_19
  # .MEM_43 = VDEF <.MEM_58>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 16B]._M_nodeD.32298 = __nstart_19;
  # VUSE <.MEM_43>
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _24 = *__nstart_19;
  # .MEM_44 = VDEF <.MEM_43>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 16B]._M_firstD.32296 = _24;
  # DEBUG __sizeD.46552 => 16
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _42 = _24 + 512;
  # .MEM_45 = VDEF <.MEM_44>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 16B]._M_lastD.32297 = _42;
  # PT = { D.49357 } (escaped heap)
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#232ptD.0 => &this_10(D)->_M_implD.32396._M_finishD.32401
  # DEBUG thisD.47480 => D#232ptD.0
  # DEBUG __new_nodeD.47481 => _23
  # .MEM_46 = VDEF <.MEM_45>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 48B]._M_nodeD.32298 = _23;
  # VUSE <.MEM_46>
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _40 = MEM[(struct pairD.32024 * *)__nfinish_21 + -8B];
  # .MEM_47 = VDEF <.MEM_46>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 48B]._M_firstD.32296 = _40;
  # DEBUG __sizeD.46552 => 16
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _41 = _40 + 512;
  # .MEM_48 = VDEF <.MEM_47>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 48B]._M_lastD.32297 = _41;
  # .MEM_25 = VDEF <.MEM_48>
  this_10(D)->_M_implD.32396._M_startD.32400._M_curD.32295 = _24;
  # DEBUG __sizeD.47478 => 16
  # RANGE [0, 31] NONZERO 31
  _27 = __num_elements_2(D) & 31;
  # RANGE [0, 496] NONZERO 496
  _28 = _27 * 16;
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _29 = _40 + _28;
  # .MEM_30 = VDEF <.MEM_25>
  this_10(D)->_M_implD.32396._M_finishD.32401._M_curD.32295 = _29;
  # VUSE <.MEM_30>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 (EH,EXECUTABLE)
<L0>: [LP 1]
  # VUSE <.MEM_64>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _31 = __builtin_eh_pointerD.2738 (3);
  # .MEM_32 = VDEF <.MEM_64>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_begin_catchD.17563 (_31);
  # DEBUG D#231ptD.0 => this_10(D)->_M_implD.32396._M_map_sizeD.32399
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _33 = this_10(D)->_M_implD.32396._M_mapD.32398;
  # DEBUG D#154ptD.0 => this_10(D)
  # DEBUG D#155ptD.0 => D#231ptD.0
  # DEBUG __pD.47484 => _33
  # DEBUG thisD.47486 => D#154ptD.0
  # DEBUG __nD.47485 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.47487
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.47490 => _33
  # DEBUG __aD.47488 => D#125ptD.0
  # DEBUG __nD.47489 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.47493 => _33
  # DEBUG thisD.47491 => D#121ptD.0
  # DEBUG D.47492 => D#122ptD.0
  # .MEM_49 = VDEF <.MEM_32>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  _ZdlPvD.2766 (_33);
  # DEBUG thisD.46826 => &__map_allocD.47487
  # DEBUG thisD.46805 => &__map_allocD.47487
  # .MEM_35 = VDEF <.MEM_49>
  this_10(D)->_M_implD.32396._M_mapD.32398 = 0B;
  # .MEM_36 = VDEF <.MEM_35>
  this_10(D)->_M_implD.32396._M_map_sizeD.32399 = 0;
  [LP 2] # .MEM_37 = VDEF <.MEM_36>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_rethrowD.43440 ();
;;    succ:       16 (EH,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 1, flags: (NEW, REACHABLE)
;;    pred:       15 (EH,EXECUTABLE)
<L2>: [LP 2]
  [MNT 5] # .MEM_38 = VDEF <.MEM_37>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_end_catchD.17562 ();
  resx 4
;;    succ:      

}


Creating dr for this_10(D)->_M_impl._M_map_size
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_10(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for *__nstart_75
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_75
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_19 + 8, + , 8](no_overflow) < __nstart_13
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) __nstart_13 - (unsigned long) (__nstart_19 + 8)) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 1
  exit condition [__nstart_19 + 8, + , 8](no_overflow) < __nstart_13
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) __nstart_13 - (unsigned long) (__nstart_19 + 8)) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_19 + 8, + , 8](no_overflow) < __nstart_13
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) __nstart_13 - (unsigned long) (__nstart_19 + 8)) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 16B]
	Access function 0: 192
Creating dr for *__nstart_19
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__nstart_19
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 16B]
	Access function 0: 64
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 16B]
	Access function 0: 128
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 48B]
	Access function 0: 192
Creating dr for MEM[(struct pair * *)__nfinish_21 + -8B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:397, generic-match.c:4039
Applying pattern match.pd:697, generic-match.c:1350
Applying pattern match.pd:625, generic-match.c:1309
success.
Applying pattern match.pd:715, generic-match.c:1389
Applying pattern match.pd:397, generic-match.c:4039
Applying pattern match.pd:715, generic-match.c:1389
	base_address: _8 + (_3 + _17) * 8
	offset from base address: 0
	constant offset from base address: 0(OVF)
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair * *)__nfinish_21 + -8B]
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 48B]
	Access function 0: 64
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 48B]
	Access function 0: 128
Creating dr for this_10(D)->_M_impl._M_start._M_cur
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_10(D)
	Access function 0: 0
	Access function 1: 128
	Access function 2: 0
Creating dr for this_10(D)->_M_impl._M_finish._M_cur
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: *this_10(D)
	Access function 0: 0
	Access function 1: 384
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:26)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:19, LOOPS:2, CONDITIONS:5, STMTS:177)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_14 bb_3 })
  {
    <bb 2>:
    # DEBUG __size => 16
    _3 = __num_elements_2(D) >> 5;
    __num_nodes_4 = _3 + 1;
    # DEBUG __num_nodes => __num_nodes_4
    _5 = _3 + 3;
    # DEBUG __a => &D.43584
    # DEBUG __b => &D.43585
    _65 = MAX_EXPR <_5, 8>;
    # .MEM_11 = VDEF <.MEM_1(D)>
    this_10(D)->_M_impl._M_map_size = _65;
    # DEBUG D#196 => this_10(D)
    # DEBUG __n => D#374
    # DEBUG this => D#196
    # DEBUG D#195 => D#196
    # DEBUG D#151 => D#195
    # DEBUG this => D#151
    # DEBUG D#150 => D#151
    # DEBUG this => D#150
    # DEBUG this => NULL
    # DEBUG D.46793 => NULL
    # DEBUG this => NULL
    # DEBUG D#194 => &__map_alloc
    # DEBUG __n => D#374
    # DEBUG __a => D#194
    # DEBUG D#193 => D#194
    # DEBUG D#191 => D#193
    # DEBUG D#192 => 0B
    # DEBUG __n => D#374
    # DEBUG this => D#191
    # DEBUG D.47470 => D#192
    # DEBUG D#190 => D#191
    # DEBUG D#189 => D#190
    # DEBUG this => D#189
    _26 = _65 * 8;
    # .MEM_34 = VDEF <.MEM_11>
    _8 = operator new (_26);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc
    # .MEM_14 = VDEF <.MEM_34>
    this_10(D)->_M_impl._M_map = _8;
    # VUSE <.MEM_14>
    _15 = this_10(D)->_M_impl._M_map_size;
    _16 = _15 - __num_nodes_4;
    _17 = _16 >> 1;
    _18 = _17 * 8;
    __nstart_19 = _8 + _18;
    # DEBUG __nstart => __nstart_19
    _20 = __num_nodes_4 * 8;
    __nfinish_21 = __nstart_19 + _20;
    # DEBUG __nfinish => __nfinish_21
    # DEBUG D#230 => this_10(D)
    # DEBUG __nstart => __nstart_19
    # DEBUG __nfinish => __nfinish_21
    # DEBUG this => D#230
    # DEBUG __cur => __nstart_19
    if (__nstart_19 >= __nfinish_21)
      goto <bb 14>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:

  }
  bb_7 (preds = {bb_4 }, succs = {bb_8 bb_9 })
  {
    # __nstart_13 = PHI <__nstart_75(4)>
  <L3>:
    # VUSE <.MEM_59>
    _54 = __builtin_eh_pointer (6);
    # .MEM_61 = VDEF <.MEM_59>
    __cxa_begin_catch (_54);
    # DEBUG D#149 => D#229
    # DEBUG __nstart => __nstart_19
    # DEBUG __nfinish => __nstart_13
    # DEBUG this => D#149
    # DEBUG __n => __nstart_19
    if (__nstart_19 >= __nstart_13)
      goto <bb 8>;
    else
      goto <bb 9>;

  }
  bb_8 (preds = {bb_7 bb_17 }, succs = {bb_13 })
  {
    <bb 8>:
    # .MEM_55 = PHI <.MEM_61(7), .MEM_74(17)>
    # .MEM_63 = VDEF <.MEM_55>
    __cxa_rethrow ();

  }
  bb_9 (preds = {bb_7 }, succs = {bb_10 })
  {
    <bb 9>:

  }
  bb_11 (preds = {bb_10 }, succs = {bb_17 })
  {
    <bb 11>:
    # .MEM_74 = PHI <.MEM_62(10)>

  }
  bb_17 (preds = {bb_11 }, succs = {bb_8 })
  {
    <bb 17>:
    goto <bb 8>;

  }
  bb_13 (preds = {bb_8 }, succs = {bb_15 })
  {
  <L5>:
    # .MEM_64 = VDEF <.MEM_63>
    __cxa_end_catch ();
    resx 7

  }
  bb_14 (preds = {bb_2 bb_5 }, succs = {bb_18 })
  {
    <bb 14>:
    # .MEM_58 = PHI <.MEM_14(2), .MEM_60(5)>

  }
  bb_18 (preds = {bb_14 }, succs = {bb_1 })
  {
    <bb 18>:
    # DEBUG D#233 => &this_10(D)->_M_impl._M_start
    # DEBUG this => D#233
    # DEBUG __new_node => __nstart_19
    # .MEM_43 = VDEF <.MEM_58>
    MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node = __nstart_19;
    # VUSE <.MEM_43>
    _24 = *__nstart_19;
    # .MEM_44 = VDEF <.MEM_43>
    MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first = _24;
    # DEBUG __size => 16
    _42 = _24 + 512;
    # .MEM_45 = VDEF <.MEM_44>
    MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last = _42;
    _23 = __nfinish_21 + 18446744073709551608;
    # DEBUG D#232 => &this_10(D)->_M_impl._M_finish
    # DEBUG this => D#232
    # DEBUG __new_node => _23
    # .MEM_46 = VDEF <.MEM_45>
    MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node = _23;
    # VUSE <.MEM_46>
    _40 = MEM[(struct pair * *)__nfinish_21 + -8B];
    # .MEM_47 = VDEF <.MEM_46>
    MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first = _40;
    # DEBUG __size => 16
    _41 = _40 + 512;
    # .MEM_48 = VDEF <.MEM_47>
    MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last = _41;
    # .MEM_25 = VDEF <.MEM_48>
    this_10(D)->_M_impl._M_start._M_cur = _24;
    # DEBUG __size => 16
    _27 = __num_elements_2(D) & 31;
    _28 = _27 * 16;
    _29 = _40 + _28;
    # .MEM_30 = VDEF <.MEM_25>
    this_10(D)->_M_impl._M_finish._M_cur = _29;
    # VUSE <.MEM_30>
    return;

  }
  bb_15 (preds = {bb_13 }, succs = {bb_16 })
  {
  <L0>:
    # VUSE <.MEM_64>
    _31 = __builtin_eh_pointer (3);
    # .MEM_32 = VDEF <.MEM_64>
    __cxa_begin_catch (_31);
    # DEBUG D#231 => this_10(D)->_M_impl._M_map_size
    # VUSE <.MEM_32>
    _33 = this_10(D)->_M_impl._M_map;
    # DEBUG D#154 => this_10(D)
    # DEBUG D#155 => D#231
    # DEBUG __p => _33
    # DEBUG this => D#154
    # DEBUG __n => D#155
    # DEBUG D#153 => D#155
    # DEBUG D#152 => D#154
    # DEBUG D#151 => D#152
    # DEBUG this => D#151
    # DEBUG D#150 => D#151
    # DEBUG this => D#150
    # DEBUG this => NULL
    # DEBUG D.46793 => NULL
    # DEBUG this => NULL
    # DEBUG D#125 => &__map_alloc
    # DEBUG D#126 => D#153
    # DEBUG __p => _33
    # DEBUG __a => D#125
    # DEBUG __n => D#126
    # DEBUG D#124 => D#126
    # DEBUG D#123 => D#125
    # DEBUG D#121 => D#123
    # DEBUG D#122 => D#124
    # DEBUG __p => _33
    # DEBUG this => D#121
    # DEBUG D.47492 => D#122
    # .MEM_49 = VDEF <.MEM_32>
    operator delete (_33);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc
    # .MEM_35 = VDEF <.MEM_49>
    this_10(D)->_M_impl._M_map = 0B;
    # .MEM_36 = VDEF <.MEM_35>
    this_10(D)->_M_impl._M_map_size = 0;
    # .MEM_37 = VDEF <.MEM_36>
    __cxa_rethrow ();

  }
  bb_16 (preds = {bb_15 }, succs = {})
  {
  <L2>:
    # .MEM_38 = VDEF <.MEM_37>
    __cxa_end_catch ();
    resx 4

  }
  loop_1 (header = 10, latch = 12, niter = (((unsigned long) __nstart_13 - (unsigned long) (__nstart_19 + 8)) + 7) / 8, upper_bound = 2305843009213693951)
  {
    bb_10 (preds = {bb_9 bb_12 }, succs = {bb_11 bb_12 })
    {
      <bb 10>:
      # __nstart_72 = PHI <__nstart_19(9), __nstart_57(12)>
      # .MEM_73 = PHI <.MEM_61(9), .MEM_62(12)>
      # DEBUG __n => __nstart_72
      # VUSE <.MEM_73>
      _56 = *__nstart_72;
      # DEBUG this => D#147
      # DEBUG __p => _56
      # DEBUG __size => 16
      # DEBUG D#135 => &D#148->_M_impl
      # DEBUG D#133 => D#135
      # DEBUG __p => _56
      # DEBUG __a => D#133
      # DEBUG __n => D#134
      # DEBUG D#132 => D#134
      # DEBUG D#131 => D#133
      # DEBUG D#129 => D#131
      # DEBUG D#130 => D#132
      # DEBUG __p => _56
      # DEBUG this => D#129
      # DEBUG D.49342 => D#130
      # .MEM_62 = VDEF <.MEM_73>
      operator delete (_56);
      __nstart_57 = __nstart_72 + 8;
      # DEBUG __n => __nstart_57
      # DEBUG __n => __nstart_57
      if (__nstart_57 >= __nstart_13)
        goto <bb 11>;
      else
        goto <bb 12>;

    }
    bb_12 (preds = {bb_10 }, succs = {bb_10 })
    {
      <bb 12>:
      goto <bb 10>;

    }
  }
  loop_2 (header = 4, latch = 6, niter = , upper_bound = 2305843009213693951)
  {
    bb_4 (preds = {bb_3 bb_6 }, succs = {bb_5 bb_7 })
    {
      <bb 4>:
      # .MEM_71 = PHI <.MEM_14(3), .MEM_60(6)>
      # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
      # DEBUG __cur => __nstart_75
      # DEBUG D#227 => D#228
      # DEBUG this => D#227
      # DEBUG D#226 => D#227
      # DEBUG __size => 16
      # DEBUG D#225 => &D#226->_M_impl
      # DEBUG D#224 => D#225
      # DEBUG __n => NULL
      # DEBUG __a => D#224
      # DEBUG D#223 => D#224
      # DEBUG D#221 => D#223
      # DEBUG D#222 => 0B
      # DEBUG __n => NULL
      # DEBUG this => D#221
      # DEBUG D.49349 => D#222
      # DEBUG D#220 => D#221
      # DEBUG D#219 => D#220
      # DEBUG this => D#219
      # .MEM_59 = VDEF <.MEM_71>
      _52 = operator new (512);

    }
    bb_5 (preds = {bb_4 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # .MEM_60 = VDEF <.MEM_59>
      *__nstart_75 = _52;
      __nstart_53 = __nstart_75 + 8;
      # DEBUG __cur => __nstart_53
      # DEBUG __cur => __nstart_53
      if (__nfinish_21 <= __nstart_53)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_4 })
    {
      <bb 6>:
      goto <bb 4>;

    }
  }
}

Pass statistics:
----------------

void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = std::pair<int, Flit*>; _Alloc = std::allocator<std::pair<int, Flit*> >; std::size_t = long unsigned int] (struct _Deque_baseD.32030 * const thisD.32384, size_tD.2818 __num_elementsD.32385)
Eh tree:
   5 must_not_throw
   4 cleanup land:{2,<L2>}
   3 try land:{1,<L0>} catch:{}
     8 must_not_throw
     7 cleanup land:{4,<L5>}
     6 try land:{3,<L3>} catch:{}
{
  struct pairD.32024 * * __nstartD.49327;
  struct pairD.32024 * * __nfinishD.43587;
  struct pairD.32024 * * __nstartD.43586;
  const size_tD.2818 __num_nodesD.43583;
  const long unsigned intD.14 D.43584;
  const long unsigned intD.14 D.43585;
  long unsigned intD.14 _3;
  struct pairD.32024 * * _8;
  long unsigned intD.14 _15;
  long unsigned intD.14 _16;
  long unsigned intD.14 _17;
  long unsigned intD.14 _18;
  long unsigned intD.14 _20;
  struct pairD.32024 * * _23;
  struct pairD.32024 * _24;
  long unsigned intD.14 _26;
  long unsigned intD.14 _27;
  long unsigned intD.14 _28;
  struct pairD.32024 * _29;
  voidD.45 * _31;
  struct pairD.32024 * * _33;
  struct pairD.32024 * _40;
  struct pairD.32024 * _41;
  struct pairD.32024 * _42;
  struct pairD.32024 * _52;
  voidD.45 * _54;
  struct pairD.32024 * _56;
  long unsigned intD.14 _65;

;;   basic block 2, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __sizeD.47476 => 16
  # RANGE [0, 576460752303423487] NONZERO 576460752303423487
  _3 = __num_elements_2(D) >> 5;
  # RANGE [1, 576460752303423488] NONZERO 1152921504606846975
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodesD.43583 => __num_nodes_4
  # RANGE [3, 576460752303423490] NONZERO 1152921504606846975
  _5 = _3 + 3;
  # DEBUG __aD.47473 => &D.43584
  # DEBUG __bD.47474 => &D.43585
  # RANGE [8, 576460752303423490] NONZERO 1152921504606846975
  _65 = MAX_EXPR <_5, 8>;
  # .MEM_11 = VDEF <.MEM_1(D)>
  this_10(D)->_M_implD.32396._M_map_sizeD.32399 = _65;
  # DEBUG D#196ptD.0 => this_10(D)
  # DEBUG __nD.47464 => D#374ptD.0
  # DEBUG thisD.47465 => D#196ptD.0
  # DEBUG D#195ptD.0 => D#196ptD.0
  # DEBUG D#151ptD.0 => D#195ptD.0
  # DEBUG thisD.47137 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#194ptD.0 => &__map_allocD.47466
  # DEBUG __nD.47468 => D#374ptD.0
  # DEBUG __aD.47467 => D#194ptD.0
  # DEBUG D#193ptD.0 => D#194ptD.0
  # DEBUG D#191ptD.0 => D#193ptD.0
  # DEBUG D#192ptD.0 => 0B
  # DEBUG __nD.47471 => D#374ptD.0
  # DEBUG thisD.47469 => D#191ptD.0
  # DEBUG D.47470 => D#192ptD.0
  # DEBUG D#190ptD.0 => D#191ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0
  # DEBUG thisD.47102 => D#189ptD.0
  # RANGE [64, 4611686018427387920] NONZERO 9223372036854775800
  _26 = _65 * 8;
  # .MEM_34 = VDEF <.MEM_11>
  # PT = { D.49357 } (escaped heap)
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  _8 = _ZnwmD.2764 (_26);
  # DEBUG thisD.47150 => &__map_allocD.47466
  # DEBUG thisD.47139 => &__map_allocD.47466
  # .MEM_14 = VDEF <.MEM_34>
  this_10(D)->_M_implD.32396._M_mapD.32398 = _8;
  # VUSE <.MEM_14>
  _15 = this_10(D)->_M_implD.32396._M_map_sizeD.32399;
  # RANGE [0, 18446744073709551615]
  _16 = _15 - __num_nodes_4;
  # RANGE [0, 9223372036854775807] NONZERO 9223372036854775807
  _17 = _16 >> 1;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _18 = _17 * 8;
  # PT = { D.49357 } (escaped heap)
  __nstart_19 = _8 + _18;
  # DEBUG __nstartD.43586 => __nstart_19
  # RANGE [8, 4611686018427387904] NONZERO 9223372036854775800
  _20 = __num_nodes_4 * 8;
  # PT = { D.49357 } (escaped heap)
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinishD.43587 => __nfinish_21
  # DEBUG D#230ptD.0 => this_10(D)
  # DEBUG __nstartD.49327 => __nstart_19
  # DEBUG __nfinishD.49328 => __nfinish_21
  # DEBUG thisD.49329 => D#230ptD.0
  # DEBUG __curD.49330 => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 14>;
  else
    goto <bb 3>;
;;    succ:       14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_14(3), .MEM_60(6)>
  # PT = { D.49357 } (escaped heap)
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __curD.49330 => __nstart_75
  # DEBUG D#227ptD.0 => D#228ptD.0
  # DEBUG thisD.49344 => D#227ptD.0
  # DEBUG D#226ptD.0 => D#227ptD.0
  # DEBUG __sizeD.47399 => 16
  # DEBUG D#225ptD.0 => &D#226ptD.0->_M_implD.32396
  # DEBUG D#224ptD.0 => D#225ptD.0
  # DEBUG __nD.49347 => NULL
  # DEBUG __aD.49346 => D#224ptD.0
  # DEBUG D#223ptD.0 => D#224ptD.0
  # DEBUG D#221ptD.0 => D#223ptD.0
  # DEBUG D#222ptD.0 => 0B
  # DEBUG __nD.49350 => NULL
  # DEBUG thisD.49348 => D#221ptD.0
  # DEBUG D.49349 => D#222ptD.0
  # DEBUG D#220ptD.0 => D#221ptD.0
  # DEBUG D#219ptD.0 => D#220ptD.0
  # DEBUG thisD.47356 => D#219ptD.0
  [LP 3] # .MEM_59 = VDEF <.MEM_71>
  # PT = { D.49358 } (escaped heap)
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  _52 = _ZnwmD.2764 (512);
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = VDEF <.MEM_59>
  *__nstart_75 = _52;
  # PT = { D.49357 } (escaped heap)
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __curD.49330 => __nstart_53
  # DEBUG __curD.49330 => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
  # PT = { D.49357 } (escaped heap)
  # __nstart_13 = PHI <__nstart_75(4)>
<L3>: [LP 3]
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _54 = __builtin_eh_pointerD.2738 (6);
  # .MEM_61 = VDEF <.MEM_59>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_begin_catchD.17563 (_54);
  # DEBUG D#149ptD.0 => D#229ptD.0
  # DEBUG __nstartD.49333 => __nstart_19
  # DEBUG __nfinishD.49332 => __nstart_13
  # DEBUG thisD.49331 => D#149ptD.0
  # DEBUG __nD.49334 => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_61(7), .MEM_74(17)>
  [LP 4] # .MEM_63 = VDEF <.MEM_55>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_rethrowD.43440 ();
;;    succ:       13 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = { D.49357 } (escaped heap)
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(12)>
  # .MEM_73 = PHI <.MEM_61(9), .MEM_62(12)>
  # DEBUG __nD.49334 => __nstart_72
  # VUSE <.MEM_73>
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _56 = *__nstart_72;
  # DEBUG thisD.49336 => D#147ptD.0
  # DEBUG __pD.49335 => _56
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.49340 => _56
  # DEBUG __aD.49338 => D#133ptD.0
  # DEBUG __nD.49339 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.49343 => _56
  # DEBUG thisD.49341 => D#129ptD.0
  # DEBUG D.49342 => D#130ptD.0
  # .MEM_62 = VDEF <.MEM_73>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  _ZdlPvD.2766 (_56);
  # PT = { D.49357 } (escaped heap)
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __nD.49334 => __nstart_57
  # DEBUG __nD.49334 => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 10, next block 17, flags: (NEW)
;;    pred:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_74 = PHI <.MEM_62(10)>
;;    succ:       17 [100.0%]  (FALLTHRU)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 12, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU)
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 17, next block 13, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       8 (EH,EXECUTABLE)
<L5>: [LP 4]
  [MNT 8] # .MEM_64 = VDEF <.MEM_63>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_end_catchD.17562 ();
  [LP 1] resx 7
;;    succ:       15 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 13, next block 18, flags: (NEW, REACHABLE)
;;    pred:       2 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_14(2), .MEM_60(5)>
;;    succ:       18 [100.0%]  (FALLTHRU)

;;   basic block 18, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG D#233ptD.0 => &this_10(D)->_M_implD.32396._M_startD.32400
  # DEBUG thisD.47482 => D#233ptD.0
  # DEBUG __new_nodeD.47483 => __nstart_19
  # .MEM_43 = VDEF <.MEM_58>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 16B]._M_nodeD.32298 = __nstart_19;
  # VUSE <.MEM_43>
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _24 = *__nstart_19;
  # .MEM_44 = VDEF <.MEM_43>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 16B]._M_firstD.32296 = _24;
  # DEBUG __sizeD.46552 => 16
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _42 = _24 + 512;
  # .MEM_45 = VDEF <.MEM_44>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 16B]._M_lastD.32297 = _42;
  # PT = { D.49357 } (escaped heap)
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#232ptD.0 => &this_10(D)->_M_implD.32396._M_finishD.32401
  # DEBUG thisD.47480 => D#232ptD.0
  # DEBUG __new_nodeD.47481 => _23
  # .MEM_46 = VDEF <.MEM_45>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 48B]._M_nodeD.32298 = _23;
  # VUSE <.MEM_46>
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _40 = MEM[(struct pairD.32024 * *)__nfinish_21 + -8B];
  # .MEM_47 = VDEF <.MEM_46>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 48B]._M_firstD.32296 = _40;
  # DEBUG __sizeD.46552 => 16
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _41 = _40 + 512;
  # .MEM_48 = VDEF <.MEM_47>
  MEM[(struct _Deque_iteratorD.32263 *)this_10(D) + 48B]._M_lastD.32297 = _41;
  # .MEM_25 = VDEF <.MEM_48>
  this_10(D)->_M_implD.32396._M_startD.32400._M_curD.32295 = _24;
  # DEBUG __sizeD.47478 => 16
  # RANGE [0, 31] NONZERO 31
  _27 = __num_elements_2(D) & 31;
  # RANGE [0, 496] NONZERO 496
  _28 = _27 * 16;
  # PT = nonlocal escaped { D.49358 } (escaped heap)
  _29 = _40 + _28;
  # .MEM_30 = VDEF <.MEM_25>
  this_10(D)->_M_implD.32396._M_finishD.32401._M_curD.32295 = _29;
  # VUSE <.MEM_30>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 18, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 (EH,EXECUTABLE)
<L0>: [LP 1]
  # VUSE <.MEM_64>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _31 = __builtin_eh_pointerD.2738 (3);
  # .MEM_32 = VDEF <.MEM_64>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_begin_catchD.17563 (_31);
  # DEBUG D#231ptD.0 => this_10(D)->_M_implD.32396._M_map_sizeD.32399
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _33 = this_10(D)->_M_implD.32396._M_mapD.32398;
  # DEBUG D#154ptD.0 => this_10(D)
  # DEBUG D#155ptD.0 => D#231ptD.0
  # DEBUG __pD.47484 => _33
  # DEBUG thisD.47486 => D#154ptD.0
  # DEBUG __nD.47485 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.47487
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.47490 => _33
  # DEBUG __aD.47488 => D#125ptD.0
  # DEBUG __nD.47489 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.47493 => _33
  # DEBUG thisD.47491 => D#121ptD.0
  # DEBUG D.47492 => D#122ptD.0
  # .MEM_49 = VDEF <.MEM_32>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  _ZdlPvD.2766 (_33);
  # DEBUG thisD.46826 => &__map_allocD.47487
  # DEBUG thisD.46805 => &__map_allocD.47487
  # .MEM_35 = VDEF <.MEM_49>
  this_10(D)->_M_implD.32396._M_mapD.32398 = 0B;
  # .MEM_36 = VDEF <.MEM_35>
  this_10(D)->_M_implD.32396._M_map_sizeD.32399 = 0;
  [LP 2] # .MEM_37 = VDEF <.MEM_36>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_rethrowD.43440 ();
;;    succ:       16 (EH,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 1, flags: (NEW, REACHABLE)
;;    pred:       15 (EH,EXECUTABLE)
<L2>: [LP 2]
  [MNT 5] # .MEM_38 = VDEF <.MEM_37>
  # USE = nonlocal null { D.49357 D.49358 } (escaped heap)
  # CLB = nonlocal null { D.49357 D.49358 } (escaped heap)
  __cxa_end_catchD.17562 ();
  resx 4
;;    succ:      

}



;; Function Channel<T>::Channel(Module*, const string&) [with T = Flit; std::__cxx11::string = std::__cxx11::basic_string<char>] (_ZN7ChannelI4FlitEC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1997, decl_uid=33020, cgraph_uid=483, symbol_order=484)


Pass statistics:
----------------

Channel<T>::Channel(Module*, const string&) [with T = Flit; std::__cxx11::string = std::__cxx11::basic_string<char>] (struct ChannelD.31995 * const thisD.33021, struct ModuleD.27766 * parentD.33022, const struct stringD.10938 & nameD.33023)
Eh tree:
   1 cleanup land:{3,<L2>},{1,<L3>}
     2 cleanup land:{2,<L0>}
{
  struct pairD.32024 * * __first$_M_nodeD.49479;
  struct pairD.32024 * __first$_M_lastD.49478;
  struct pairD.32024 * const __firstD.49476;
  struct pairD.32024 * * SR.464D.49475;
  struct pairD.32024 * SR.463D.49474;
  struct pairD.32024 * SR.462D.49473;
  struct pairD.32024 * * __first$_M_nodeD.49472;
  struct pairD.32024 * __first$_M_lastD.49471;
  struct pairD.32024 * __first$_M_firstD.49470;
  struct pairD.32024 * __first$_M_curD.49469;
  struct pairD.32024 * * __first$_M_nodeD.49468;
  struct pairD.32024 * __first$_M_lastD.49467;
  struct pairD.32024 * __first$_M_firstD.49466;
  struct pairD.32024 * __first$_M_curD.49465;
  struct pairD.32024 * * SR.453D.49464;
  struct pairD.32024 * SR.452D.49463;
  struct pairD.32024 * SR.451D.49462;
  struct pairD.32024 * SR.450D.49461;
  struct pairD.32024 * * __nstartD.49439;
  struct _Deque_iteratorD.32265 __firstD.49414;
  struct _Deque_iteratorD.32263 D.49413;
  struct _Deque_iteratorD.32265 __firstD.49406;
  struct _Deque_iteratorD.32263 D.49412;
  struct _Deque_iteratorD.32265 __firstD.49399;
  struct _Deque_iteratorD.32263 D.49398;
  struct _Deque_iteratorD.32265 D.49397;
  struct dequeD.32026 D.42714;
  struct pairD.32024 * * prephitmp_6;
  struct ModuleD.27766 * _11;
  struct pairD.32024 * * _35;
  long intD.12 _36;
  struct pairD.32024 * * _37;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  long intD.12 _41;
  long intD.12 _42;
  struct pairD.32024 * _43;
  long intD.12 _44;
  struct pairD.32024 * _45;
  long intD.12 _46;
  long intD.12 _47;
  long intD.12 _48;
  long intD.12 _49;
  struct pairD.32024 * _50;
  long intD.12 _51;
  struct pairD.32024 * _52;
  long intD.12 _53;
  long intD.12 _54;
  long intD.12 _55;
  difference_typeD.32293 _56;
  size_typeD.32472 _57;
  struct _Deque_baseD.32030 * _58;
  struct pairD.32024 * _59;
  struct pairD.32024 * _61;
  struct pairD.32024 * * _62;
  struct pairD.32024 * _63;
  struct pairD.32024 * _64;
  struct pairD.32024 * _66;
  struct pairD.32024 * _82;
  struct pairD.32024 * * _89;
  struct pairD.32024 * _90;
  struct pairD.32024 * _91;
  struct pairD.32024 * * _92;
  struct pairD.32024 * * _93;
  struct pairD.32024 * * _94;
  struct pairD.32024 * _97;
  struct pairD.32024 * * pretmp_115;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#250ptD.0 => &this_2(D)->D.33033
  # DEBUG thisD.47678 => D#250ptD.0
  # DEBUG parentD.47679 => parent_4(D)
  # DEBUG nameD.47680 => name_5(D)
  # PT = nonlocal 
  _11 = &MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611;
  # .MEM_14 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZN6ModuleC2EPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.28548 (_11, parent_4(D), name_5(D));
  # .MEM_7 = VDEF <.MEM_14>
  this_2(D)->D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV7ChannelI4FlitED.33039 + 16B];
  # .MEM_8 = VDEF <.MEM_7>
  this_2(D)->_delayD.32020 = 1;
  # .MEM_9 = VDEF <.MEM_8>
  this_2(D)->_inputD.32021 = 0B;
  # .MEM_10 = VDEF <.MEM_9>
  this_2(D)->_outputD.32022 = 0B;
  # DEBUG thisD.47673 => &D.42714
  # DEBUG thisD.47674 => &D.42714.D.32945
  # DEBUG D#235ptD.0 => &MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396
  # DEBUG thisD.47675 => D#235ptD.0
  # DEBUG thisD.46550 => D#235ptD.0
  # DEBUG thisD.46546 => D#235ptD.0
  # .MEM_16 = VDEF <.MEM_10>
  MEM[(struct _Deque_implD.32364 *)&D.42714]._M_mapD.32398 = 0B;
  # .MEM_17 = VDEF <.MEM_16>
  MEM[(struct _Deque_implD.32364 *)&D.42714]._M_map_sizeD.32399 = 0;
  # DEBUG D#118ptD.0 => &D#235ptD.0->_M_startD.32400
  # DEBUG thisD.47676 => D#118ptD.0
  # .MEM_18 = VDEF <.MEM_17>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 16B]._M_curD.32295 = 0B;
  # .MEM_19 = VDEF <.MEM_18>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 16B]._M_firstD.32296 = 0B;
  # .MEM_20 = VDEF <.MEM_19>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 16B]._M_lastD.32297 = 0B;
  # .MEM_21 = VDEF <.MEM_20>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 16B]._M_nodeD.32298 = 0B;
  # DEBUG D#117ptD.0 => &D#235ptD.0->_M_finishD.32401
  # DEBUG thisD.47677 => D#117ptD.0
  # .MEM_22 = VDEF <.MEM_21>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 48B]._M_curD.32295 = 0B;
  # .MEM_23 = VDEF <.MEM_22>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 48B]._M_firstD.32296 = 0B;
  # .MEM_24 = VDEF <.MEM_23>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 48B]._M_lastD.32297 = 0B;
  # .MEM_25 = VDEF <.MEM_24>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 48B]._M_nodeD.32298 = 0B;
  [LP 3] # .MEM_26 = VDEF <.MEM_25>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZNSt11_Deque_baseISt4pairIiP4FlitESaIS3_EE17_M_initialize_mapEmD.32383 (&D.42714.D.32945, 0);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 (EH,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#248ptD.0 => &this_2(D)->_wait_queueD.32023
  # DEBUG thisD.47681 => D#248ptD.0
  # DEBUG __cD.47682 => &D.42714
  # DEBUG D#375ptD.0 => &MEM[(struct queueD.32027 *)this_2(D) + 120B].cD.32988
  # DEBUG thisD.49377 => D#375ptD.0
  # DEBUG __xD.49378 => &D.42714
  # DEBUG thisD.49379 => &D.42714
  # DEBUG D#119ptD.0 => &D.42714.D.32945._M_implD.32396._M_startD.32400
  # DEBUG D#120ptD.0 => &D.42714.D.32945._M_implD.32396._M_finishD.32401
  # DEBUG __xD.49381 => D#120ptD.0
  # DEBUG __yD.49380 => D#119ptD.0
  # DEBUG __sizeD.46552 => 16
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _35 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 48]._M_nodeD.32298;
  _36 = (long intD.12) _35;
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _37 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 16]._M_nodeD.32298;
  _38 = (long intD.12) _37;
  _39 = _36 - _38;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _40 = _39 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _41 = _40 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551584
  _42 = _41 * 32;
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _43 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 48]._M_curD.32295;
  _44 = (long intD.12) _43;
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _45 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 48]._M_firstD.32296;
  _46 = (long intD.12) _45;
  _47 = _44 - _46;
  # RANGE [-576460752303423488, 576460752303423487]
  _48 = _47 /[ex] 16;
  _49 = _42 + _48;
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _50 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 16]._M_lastD.32297;
  _51 = (long intD.12) _50;
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _52 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 16]._M_curD.32295;
  _53 = (long intD.12) _52;
  _54 = _51 - _53;
  # RANGE [-576460752303423488, 576460752303423487]
  _55 = _54 /[ex] 16;
  _56 = _49 + _55;
  # RANGE [0, 18446744073709551615]
  _57 = (size_typeD.32472) _56;
  # DEBUG D#242ptD.0 => &D.42714.D.32945
  # DEBUG thisD.47661 => D#242ptD.0
  # DEBUG __aD.47659 => NULL
  # PT = nonlocal 
  _58 = &MEM[(struct dequeD.32026 *)this_2(D) + 120B].D.32945;
  # DEBUG thisD.49384 => _58
  # DEBUG __aD.49383 => NULL
  # DEBUG __num_elementsD.49382 => _57
  # DEBUG D#237ptD.0 => &_58->_M_implD.32396
  # DEBUG thisD.49386 => D#237ptD.0
  # DEBUG __aD.49385 => NULL
  # DEBUG thisD.46918 => D#237ptD.0
  # DEBUG __aD.46919 => NULL
  # DEBUG thisD.46913 => D#237ptD.0
  # DEBUG D.46914 => NULL
  # .MEM_104 = VDEF <.MEM_26>
  MEM[(struct _Deque_implD.32364 *)this_2(D) + 120B]._M_mapD.32398 = 0B;
  # .MEM_105 = VDEF <.MEM_104>
  MEM[(struct _Deque_implD.32364 *)this_2(D) + 120B]._M_map_sizeD.32399 = 0;
  # DEBUG D#173ptD.0 => &D#237ptD.0->_M_startD.32400
  # DEBUG thisD.49387 => D#173ptD.0
  # .MEM_106 = VDEF <.MEM_105>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 136B]._M_curD.32295 = 0B;
  # .MEM_107 = VDEF <.MEM_106>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 136B]._M_firstD.32296 = 0B;
  # .MEM_108 = VDEF <.MEM_107>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 136B]._M_lastD.32297 = 0B;
  # .MEM_109 = VDEF <.MEM_108>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 136B]._M_nodeD.32298 = 0B;
  # DEBUG D#172ptD.0 => &D#237ptD.0->_M_finishD.32401
  # DEBUG thisD.49388 => D#172ptD.0
  # .MEM_110 = VDEF <.MEM_109>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 168B]._M_curD.32295 = 0B;
  # .MEM_111 = VDEF <.MEM_110>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 168B]._M_firstD.32296 = 0B;
  # .MEM_112 = VDEF <.MEM_111>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 168B]._M_lastD.32297 = 0B;
  # .MEM_113 = VDEF <.MEM_112>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 168B]._M_nodeD.32298 = 0B;
  [LP 2] # .MEM_114 = VDEF <.MEM_113>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZNSt11_Deque_baseISt4pairIiP4FlitESaIS3_EE17_M_initialize_mapEmD.32383 (_58, _57);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 (EH,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#243ptD.0 => &D#375ptD.0->D.32945
  # DEBUG thisD.47649 => D#243ptD.0
  # DEBUG D#244ptD.0 => &D#375ptD.0->D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.49390 => &D.49398
  # DEBUG __xD.49389 => D#244ptD.0
  # VUSE <.MEM_114>
  # PT = nonlocal escaped 
  _59 = MEM[(const struct iteratorD.32283 &)this_2(D) + 136]._M_curD.32295;
  # VUSE <.MEM_114>
  # PT = nonlocal escaped 
  _61 = MEM[(const struct iteratorD.32283 &)this_2(D) + 136]._M_lastD.32297;
  # VUSE <.MEM_114>
  # PT = nonlocal escaped 
  _62 = MEM[(const struct iteratorD.32283 &)this_2(D) + 136]._M_nodeD.32298;
  # DEBUG thisD.49391 => &D.42714
  # DEBUG D#85ptD.0 => &D.42714.D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.49393 => NULL
  # DEBUG __xD.49392 => D#85ptD.0
  # VUSE <.MEM_114>
  # PT = nonlocal escaped null 
  _63 = MEM[(const struct iteratorD.43267 &)&D.42714 + 48]._M_curD.32295;
  # DEBUG D#247ptD.0 => MEM[(const struct iteratorD.43267 &)&D.42714 + 48]._M_firstD.32296
  # DEBUG D.47668 => D#247ptD.0
  # DEBUG D#246ptD.0 => MEM[(const struct iteratorD.43267 &)&D.42714 + 48]._M_lastD.32297
  # DEBUG D.47669 => D#246ptD.0
  # DEBUG D#245ptD.0 => MEM[(const struct iteratorD.43267 &)&D.42714 + 48]._M_nodeD.32298
  # DEBUG D.47670 => D#245ptD.0
  # DEBUG thisD.49394 => &D.42714
  # DEBUG D#86ptD.0 => &D.42714.D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.49396 => &D.49397
  # DEBUG __xD.49395 => D#86ptD.0
  # VUSE <.MEM_114>
  # PT = nonlocal escaped null 
  _64 = MEM[(const struct iteratorD.43267 &)&D.42714 + 16]._M_curD.32295;
  # DEBUG D#376ptD.0 => MEM[(const struct iteratorD.43267 &)&D.42714 + 16]._M_firstD.32296
  # VUSE <.MEM_114>
  # PT = nonlocal escaped null 
  _66 = MEM[(const struct iteratorD.43267 &)&D.42714 + 16]._M_lastD.32297;
  # VUSE <.MEM_114>
  # PT = nonlocal escaped null 
  __nstart_67 = MEM[(const struct iteratorD.43267 &)&D.42714 + 16]._M_nodeD.32298;
  # DEBUG __first$_M_curD.49465 => _64
  # DEBUG __first$_M_firstD.49466 => D#376ptD.0
  # DEBUG __first$_M_lastD.49467 => _66
  # DEBUG __first$_M_nodeD.49468 => __nstart_67
  # DEBUG __resultD.49401 => &D.49398
  # DEBUG D.49402 => D#241ptD.0
  # DEBUG thisD.49404 => NULL
  # DEBUG __xD.49403 => &D.49398
  # DEBUG __first$_M_curD.49469 => _64
  # DEBUG __first$_M_firstD.49470 => D#376ptD.0
  # DEBUG __first$_M_lastD.49471 => _66
  # DEBUG __first$_M_nodeD.49472 => __nstart_67
  # DEBUG __resultD.49405 => NULL
  # DEBUG __assignableD.49409 => 1
  # DEBUG thisD.49411 => &D.49413
  # DEBUG __xD.49410 => NULL
  # DEBUG __firstD.49476 => _64
  # DEBUG __first$_M_firstD.49477 => D#376ptD.0
  # DEBUG __first$_M_lastD.49478 => _66
  # DEBUG __first$_M_nodeD.49479 => __nstart_67
  # DEBUG __resultD.49416 => &D.49413
  # DEBUG thisD.49424 => &D.49412
  # DEBUG __xD.49423 => &D.49413
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 1512, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_153 = PHI <.MEM_114(4), .MEM_100(13)>
  # PT = nonlocal escaped 
  # SR.462_144 = PHI <_59(4), _90(13)>
  # PT = nonlocal escaped 
  # SR.463_141 = PHI <_61(4), _91(13)>
  # PT = nonlocal escaped 
  # SR.464_140 = PHI <_62(4), _89(13)>
  # PT = nonlocal escaped null 
  # __first_139 = PHI <_64(4), __first_119(13)>
  # PT = nonlocal escaped null 
  # __first$_M_last_135 = PHI <_66(4), __first$_M_last_120(13)>
  # PT = nonlocal escaped null 
  # __first$_M_node_130 = PHI <__nstart_67(4), __first$_M_node_121(13)>
  # DEBUG __first$_M_nodeD.49479 => __first$_M_node_130
  # DEBUG __first$_M_lastD.49478 => __first$_M_last_135
  # DEBUG __firstD.49476 => __first_139
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 2, count 0, freq 10000, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_153(5), .MEM_100(12)>
  # PT = nonlocal escaped 
  # SR.462_143 = PHI <SR.462_144(5), _82(12)>
  # PT = nonlocal escaped null 
  # __first_138 = PHI <__first_139(5), __first_136(12)>
  # PT = nonlocal escaped null 
  # __first$_M_last_133 = PHI <__first$_M_last_135(5), __first$_M_last_132(12)>
  # PT = nonlocal escaped null 
  # __first$_M_node_129 = PHI <__first$_M_node_130(5), __first$_M_node_124(12)>
  # DEBUG __first$_M_nodeD.49479 => __first$_M_node_129
  # DEBUG __first$_M_lastD.49478 => __first$_M_last_133
  # DEBUG __firstD.49476 => __first_138
  # DEBUG __xD.47566 => &__firstD.49414
  # DEBUG __yD.47565 => NULL
  # DEBUG D#197ptD.0 => &__firstD.49414
  # DEBUG __xD.47174 => D#197ptD.0
  # DEBUG __yD.47173 => D#198ptD.0
  if (_63 != __first_138)
    goto <bb 7>;
  else
    goto <bb 14>;
;;    succ:       7 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#174ptD.0 => &__firstD.49414
  # DEBUG thisD.47559 => D#174ptD.0
  # DEBUG D#45ptD.0 => &D.49412
  # DEBUG thisD.47560 => D#45ptD.0
  # DEBUG __rD.47542 => NULL
  # DEBUG __pD.49420 => NULL
  # DEBUG __valueD.49419 => NULL
  # DEBUG D#4ptD.0 => 16
  # DEBUG __pD.46938 => NULL
  # DEBUG D.46939 => D#4ptD.0
  if (SR.462_143 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 7735, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_28>
  *SR.462_143 = MEM[(const struct pairD.32024 &)__first_138];
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [15.0%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_28(7), .MEM_134(8)>
  # DEBUG thisD.49421 => &__firstD.49414
  # PT = nonlocal escaped null 
  __first_79 = __first_138 + 16;
  # DEBUG __firstD.49476 => __first_79
  if (__first_79 == __first$_M_last_133)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 612, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.49425 => &__firstD.49414
  # PT = nonlocal escaped null 
  __first$_M_node_85 = __first$_M_node_129 + 8;
  # DEBUG thisD.49427 => &__firstD.49414
  # DEBUG __new_nodeD.49426 => __first$_M_node_85
  # DEBUG __first$_M_nodeD.49479 => __first$_M_node_85
  # VUSE <.MEM_100>
  # PT = nonlocal escaped 
  __first_86 = MEM[(struct pairD.32024 * *)__first$_M_node_129 + 8B];
  # DEBUG __sizeD.47517 => 16
  # PT = nonlocal escaped 
  __first$_M_last_87 = __first_86 + 512;
  # DEBUG __first$_M_lastD.49478 => __first$_M_last_87
  # DEBUG __firstD.49476 => __first_86
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __first_136 = PHI <__first_79(9), __first_86(10)>
  # PT = nonlocal escaped null 
  # __first$_M_last_132 = PHI <__first$_M_last_133(9), __first$_M_last_87(10)>
  # PT = nonlocal escaped null 
  # __first$_M_node_124 = PHI <__first$_M_node_129(9), __first$_M_node_85(10)>
  # DEBUG __first$_M_nodeD.49479 => __first$_M_node_124
  # DEBUG __first$_M_lastD.49478 => __first$_M_last_132
  # DEBUG __firstD.49476 => __first_136
  # DEBUG thisD.49422 => &D.49412
  # PT = nonlocal escaped 
  _82 = SR.462_143 + 16;
  if (_82 == SR.463_141)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 2, count 0, freq 8488, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [93.3%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __first$_M_node_121 = PHI <__first$_M_node_124(11)>
  # PT = nonlocal escaped null 
  # __first$_M_last_120 = PHI <__first$_M_last_132(11)>
  # PT = nonlocal escaped null 
  # __first_119 = PHI <__first_136(11)>
  # DEBUG thisD.49429 => &D.49412
  # PT = nonlocal escaped 
  _89 = SR.464_140 + 8;
  # DEBUG thisD.49431 => &D.49412
  # DEBUG __new_nodeD.49430 => _89
  # VUSE <.MEM_100>
  # PT = nonlocal escaped 
  _90 = MEM[(struct pairD.32024 * *)SR.464_140 + 8B];
  # DEBUG __sizeD.46552 => 16
  # PT = nonlocal escaped 
  _91 = _90 + 512;
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       6 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_145 = VDEF <.MEM_28>
  D.49413 ={v} {CLOBBER};
  # .MEM_146 = VDEF <.MEM_145>
  D.49398 ={v} {CLOBBER};
  # DEBUG thisD.47683 => &D.42714
  # DEBUG D#158ptD.0 => &D.42714.D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => &D.42714
  # DEBUG D#12ptD.0 => &D.42714.D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => &D.42714
  # DEBUG D#11ptD.0 => &D.42714.D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => &D.42714
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # DEBUG thisD.49433 => &D.42714.D.32945
  # VUSE <.MEM_146>
  # PT = nonlocal escaped null 
  _92 = MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396._M_mapD.32398;
  if (_92 != 0B)
    goto <bb 15>;
  else
    goto <bb 21>;
;;    succ:       15 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_146>
  # PT = nonlocal escaped null 
  _93 = MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped null 
  _94 = _93 + 8;
  # DEBUG D#149ptD.0 => &D.42714.D.32945
  # DEBUG __nstartD.49439 => __nstart_67
  # DEBUG __nfinishD.49438 => _94
  # DEBUG thisD.49437 => D#149ptD.0
  # DEBUG __nD.49440 => __nstart_67
  if (__nstart_67 >= _94)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 736, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 8177, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __nstart_60 = PHI <__nstart_67(16), __nstart_98(18)>
  # .MEM_116 = PHI <.MEM_146(16), .MEM_147(18)>
  # DEBUG __nD.49440 => __nstart_60
  # VUSE <.MEM_116>
  # PT = nonlocal escaped 
  _97 = *__nstart_60;
  # DEBUG thisD.49442 => D#147ptD.0
  # DEBUG __pD.49441 => _97
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.49446 => _97
  # DEBUG __aD.49444 => D#133ptD.0
  # DEBUG __nD.49445 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.49449 => _97
  # DEBUG thisD.49447 => D#129ptD.0
  # DEBUG D.49448 => D#130ptD.0
  # .MEM_147 = VDEF <.MEM_116>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZdlPvD.2766 (_97);
  # PT = nonlocal escaped null 
  __nstart_98 = __nstart_60 + 8;
  # DEBUG __nD.49440 => __nstart_98
  # DEBUG __nD.49440 => __nstart_98
  if (_94 <= __nstart_98)
    goto <bb 19>;
  else
    goto <bb 18>;
;;    succ:       19 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 7441, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 736, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_147>
  pretmp_115 = MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396._M_mapD.32398;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_117 = PHI <.MEM_147(19), .MEM_146(15)>
  # PT = nonlocal escaped null 
  # prephitmp_6 = PHI <pretmp_115(19), _92(15)>
  # DEBUG D#156ptD.0 => MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396._M_map_sizeD.32399
  # DEBUG D#377ptD.0 => MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => &D.42714.D.32945
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.49452 => D#377ptD.0
  # DEBUG thisD.49450 => D#154ptD.0
  # DEBUG __nD.49451 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.49453
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.49456 => D#377ptD.0
  # DEBUG __aD.49454 => D#125ptD.0
  # DEBUG __nD.49455 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.49459 => D#377ptD.0
  # DEBUG thisD.49457 => D#121ptD.0
  # DEBUG D.49458 => D#122ptD.0
  # .MEM_148 = VDEF <.MEM_117>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_6);
  # DEBUG thisD.46826 => &__map_allocD.49453
  # DEBUG thisD.46805 => &__map_allocD.49453
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       14 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_103 = PHI <.MEM_146(14), .MEM_148(20)>
  # DEBUG D#157ptD.0 => &MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396
  # DEBUG thisD.49434 => D#157ptD.0
  # DEBUG thisD.49435 => D#157ptD.0
  # DEBUG thisD.49436 => D#157ptD.0
  # .MEM_12 = VDEF <.MEM_103>
  D.42714 ={v} {CLOBBER};
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       3 (EH,EXECUTABLE)
<L0>: [LP 2]
  # DEBUG thisD.47684 => &D.42714
  # DEBUG D#158ptD.0 => &D.42714.D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => &D.42714
  # DEBUG D#12ptD.0 => &D.42714.D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => &D.42714
  # DEBUG D#11ptD.0 => &D.42714.D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => &D.42714
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # .MEM_30 = VDEF <.MEM_114>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZNSt11_Deque_baseISt4pairIiP4FlitESaIS3_EED2EvD.32451 (&D.42714.D.32945);
  # .MEM_13 = VDEF <.MEM_30>
  D.42714 ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       23 (EH,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 (EH,EXECUTABLE)
<L3>: [LP 1]
  goto <bb 25> (<L1>);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       2 (EH,EXECUTABLE)
<L2>: [LP 3]
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 24, next block 1, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_26(24), .MEM_13(23)>
<L1>:
  # DEBUG D#249ptD.0 => &this_2(D)->D.33033
  # DEBUG thisD.47685 => D#249ptD.0
  # .MEM_32 = VDEF <.MEM_1>
  MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV11TimedModuleD.28613 + 16B];
  # .MEM_33 = VDEF <.MEM_32>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZN6ModuleD2EvD.28558 (_11);
  # .MEM_34 = VDEF <.MEM_33>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


Creating dr for MEM[(const struct _Deque_iterator &)&D.42714 + 48]._M_node
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)&D.42714 + 48]
	Access function 0: 192
Creating dr for MEM[(const struct _Deque_iterator &)&D.42714 + 16]._M_node
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)&D.42714 + 16]
	Access function 0: 192
Creating dr for MEM[(const struct _Deque_iterator &)&D.42714 + 48]._M_cur
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)&D.42714 + 48]
	Access function 0: 0
Creating dr for MEM[(const struct _Deque_iterator &)&D.42714 + 48]._M_first
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)&D.42714 + 48]
	Access function 0: 64
Creating dr for MEM[(const struct _Deque_iterator &)&D.42714 + 16]._M_last
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)&D.42714 + 16]
	Access function 0: 128
Creating dr for MEM[(const struct _Deque_iterator &)&D.42714 + 16]._M_cur
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)&D.42714 + 16]
	Access function 0: 0
Creating dr for MEM[(struct _Deque_impl *)this_2(D) + 120B]._M_map
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_impl *)this_2(D) + 120B]
	Access function 0: 0
Creating dr for MEM[(struct _Deque_impl *)this_2(D) + 120B]._M_map_size
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 128
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_impl *)this_2(D) + 120B]
	Access function 0: 64
Creating dr for MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_cur
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_2(D) + 136B]
	Access function 0: 0
Creating dr for MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_first
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_2(D) + 136B]
	Access function 0: 64
Creating dr for MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_last
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_2(D) + 136B]
	Access function 0: 128
Creating dr for MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_2(D) + 136B]
	Access function 0: 192
Creating dr for MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_cur
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 168
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_2(D) + 168B]
	Access function 0: 0
Creating dr for MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_first
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_2(D) + 168B]
	Access function 0: 64
Creating dr for MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_last
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_2(D) + 168B]
	Access function 0: 128
Creating dr for MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_2(D) + 168B]
	Access function 0: 192
Creating dr for MEM[(const struct iterator &)this_2(D) + 136]._M_cur
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)this_2(D) + 136]
	Access function 0: 0
Creating dr for MEM[(const struct iterator &)this_2(D) + 136]._M_last
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)this_2(D) + 136]
	Access function 0: 128
Creating dr for MEM[(const struct iterator &)this_2(D) + 136]._M_node
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)this_2(D) + 136]
	Access function 0: 192
Creating dr for MEM[(const struct iterator &)&D.42714 + 48]._M_cur
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)&D.42714 + 48]
	Access function 0: 0
Creating dr for MEM[(const struct iterator &)&D.42714 + 16]._M_cur
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)&D.42714 + 16]
	Access function 0: 0
Creating dr for MEM[(const struct iterator &)&D.42714 + 16]._M_last
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)&D.42714 + 16]
	Access function 0: 128
Creating dr for MEM[(const struct iterator &)&D.42714 + 16]._M_node
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)&D.42714 + 16]
	Access function 0: 192
Creating dr for MEM[(const struct pair &)__first_138]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair &)__first_138]
Creating dr for *SR.462_143
analyze_innermost: success.
	base_address: SR.462_144
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 256
	base_object: *SR.462_144
	Access function 0: {0B, +, 16}_3
Creating dr for MEM[(const struct pair &)__first_138]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair &)__first_138]
Creating dr for *SR.462_143
analyze_innermost: success.
	base_address: SR.462_144
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 256
	base_object: *SR.462_143
Creating dr for MEM[(const struct pair &)__first_138]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair &)__first_138]
Creating dr for *SR.462_143
analyze_innermost: success.
	base_address: SR.462_144
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 256
	base_object: *SR.462_143
Creating dr for MEM[(struct pair * *)__first$_M_node_129 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct pair * *)__first$_M_node_129 + 8B]
Creating dr for MEM[(struct pair * *)__first$_M_node_129 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct pair * *)__first$_M_node_129 + 8B]
Creating dr for MEM[(struct pair * *)__first$_M_node_129 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct pair * *)__first$_M_node_129 + 8B]
Creating dr for MEM[(struct pair * *)SR.464_140 + 8B]
analyze_innermost: success.
	base_address: _62
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_62
	Access function 0: {8B, +, 8}_1
Creating dr for MEM[(struct pair * *)SR.464_140 + 8B]
analyze_innermost: success.
	base_address: _62
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_62
	Access function 0: {8B, +, 8}_1
Creating dr for MEM[(struct _Deque_base *)&D.42714]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)&D.42714]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Analyzing # of iterations of loop 2
  exit condition [__nstart_67 + 8, + , 8](no_overflow) < _93 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _93 - (unsigned long) __nstart_67) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 2
  exit condition [__nstart_67 + 8, + , 8](no_overflow) < _93 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _93 - (unsigned long) __nstart_67) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Analyzing # of iterations of loop 2
  exit condition [__nstart_67 + 8, + , 8](no_overflow) < _93 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _93 - (unsigned long) __nstart_67) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)&D.42714]._M_impl._M_map
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)&D.42714]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(const struct pair &)__first_138]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair &)__first_138]
Creating dr for *SR.462_143
analyze_innermost: success.
	base_address: SR.462_144
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 256
	base_object: *SR.462_144
	Access function 0: {0B, +, 16}_3
Creating dr for MEM[(const struct pair &)__first_138]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair &)__first_138]
Creating dr for *SR.462_143
analyze_innermost: success.
	base_address: SR.462_144
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 256
	base_object: *SR.462_143
Creating dr for MEM[(const struct pair &)__first_138]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair &)__first_138]
Creating dr for *SR.462_143
analyze_innermost: success.
	base_address: SR.462_144
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 256
	base_object: *SR.462_143
Creating dr for MEM[(struct pair * *)__first$_M_node_129 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct pair * *)__first$_M_node_129 + 8B]
Creating dr for MEM[(struct pair * *)__first$_M_node_129 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct pair * *)__first$_M_node_129 + 8B]
Creating dr for MEM[(struct pair * *)__first$_M_node_129 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct pair * *)__first$_M_node_129 + 8B]
Creating dr for MEM[(struct pair * *)SR.464_140 + 8B]
analyze_innermost: success.
	base_address: _62
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_62
	Access function 0: {8B, +, 8}_1
Creating dr for MEM[(struct pair * *)SR.464_140 + 8B]
analyze_innermost: success.
	base_address: _62
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_62
	Access function 0: {8B, +, 8}_1
Creating dr for MEM[(struct _Deque_base *)&D.42714]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)&D.42714]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Analyzing # of iterations of loop 2
  exit condition [__nstart_67 + 8, + , 8](no_overflow) < _93 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _93 - (unsigned long) __nstart_67) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_60
analyze_innermost: success.
	base_address: __nstart_67
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_67
	Access function 0: {0B, +, 8}_2
Analyzing # of iterations of loop 2
  exit condition [__nstart_67 + 8, + , 8](no_overflow) < _93 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _93 - (unsigned long) __nstart_67) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)&D.42714]._M_impl._M_map
analyze_innermost: success.
	base_address: &D.42714
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)&D.42714]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct TimedModule *)this_2(D)].D.28611._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct TimedModule *)this_2(D)]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:10)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:7)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:50)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:29, LOOPS:3, CONDITIONS:9, STMTS:346)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_24 })
  {
    <bb 2>:
    # DEBUG D#250 => &this_2(D)->D.33033
    # DEBUG this => D#250
    # DEBUG parent => parent_4(D)
    # DEBUG name => name_5(D)
    _11 = &MEM[(struct TimedModule *)this_2(D)].D.28611;
    # .MEM_14 = VDEF <.MEM_3(D)>
    Module::Module (_11, parent_4(D), name_5(D));
    # .MEM_7 = VDEF <.MEM_14>
    this_2(D)->D.33033.D.28611._vptr.Module = &MEM[(void *)&_ZTV7ChannelI4FlitE + 16B];
    # .MEM_8 = VDEF <.MEM_7>
    this_2(D)->_delay = 1;
    # .MEM_9 = VDEF <.MEM_8>
    this_2(D)->_input = 0B;
    # .MEM_10 = VDEF <.MEM_9>
    this_2(D)->_output = 0B;
    # DEBUG this => &D.42714
    # DEBUG this => &D.42714.D.32945
    # DEBUG D#235 => &MEM[(struct _Deque_base *)&D.42714]._M_impl
    # DEBUG this => D#235
    # DEBUG this => D#235
    # DEBUG this => D#235
    # .MEM_16 = VDEF <.MEM_10>
    MEM[(struct _Deque_impl *)&D.42714]._M_map = 0B;
    # .MEM_17 = VDEF <.MEM_16>
    MEM[(struct _Deque_impl *)&D.42714]._M_map_size = 0;
    # DEBUG D#118 => &D#235->_M_start
    # DEBUG this => D#118
    # .MEM_18 = VDEF <.MEM_17>
    MEM[(struct _Deque_iterator *)&D.42714 + 16B]._M_cur = 0B;
    # .MEM_19 = VDEF <.MEM_18>
    MEM[(struct _Deque_iterator *)&D.42714 + 16B]._M_first = 0B;
    # .MEM_20 = VDEF <.MEM_19>
    MEM[(struct _Deque_iterator *)&D.42714 + 16B]._M_last = 0B;
    # .MEM_21 = VDEF <.MEM_20>
    MEM[(struct _Deque_iterator *)&D.42714 + 16B]._M_node = 0B;
    # DEBUG D#117 => &D#235->_M_finish
    # DEBUG this => D#117
    # .MEM_22 = VDEF <.MEM_21>
    MEM[(struct _Deque_iterator *)&D.42714 + 48B]._M_cur = 0B;
    # .MEM_23 = VDEF <.MEM_22>
    MEM[(struct _Deque_iterator *)&D.42714 + 48B]._M_first = 0B;
    # .MEM_24 = VDEF <.MEM_23>
    MEM[(struct _Deque_iterator *)&D.42714 + 48B]._M_last = 0B;
    # .MEM_25 = VDEF <.MEM_24>
    MEM[(struct _Deque_iterator *)&D.42714 + 48B]._M_node = 0B;
    # .MEM_26 = VDEF <.MEM_25>
    std::_Deque_base<std::pair<int, Flit*>, std::allocator<std::pair<int, Flit*> > >::_M_initialize_map (&D.42714.D.32945, 0);

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 bb_22 })
  {
    <bb 3>:
    # DEBUG D#248 => &this_2(D)->_wait_queue
    # DEBUG this => D#248
    # DEBUG __c => &D.42714
    # DEBUG D#375 => &MEM[(struct queue *)this_2(D) + 120B].c
    # DEBUG this => D#375
    # DEBUG __x => &D.42714
    # DEBUG this => &D.42714
    # DEBUG D#119 => &D.42714.D.32945._M_impl._M_start
    # DEBUG D#120 => &D.42714.D.32945._M_impl._M_finish
    # DEBUG __x => D#120
    # DEBUG __y => D#119
    # DEBUG __size => 16
    # VUSE <.MEM_26>
    _35 = MEM[(const struct _Deque_iterator &)&D.42714 + 48]._M_node;
    _36 = (long int) _35;
    # VUSE <.MEM_26>
    _37 = MEM[(const struct _Deque_iterator &)&D.42714 + 16]._M_node;
    _38 = (long int) _37;
    _39 = _36 - _38;
    _40 = _39 /[ex] 8;
    _41 = _40 + -1;
    _42 = _41 * 32;
    # VUSE <.MEM_26>
    _43 = MEM[(const struct _Deque_iterator &)&D.42714 + 48]._M_cur;
    _44 = (long int) _43;
    # VUSE <.MEM_26>
    _45 = MEM[(const struct _Deque_iterator &)&D.42714 + 48]._M_first;
    _46 = (long int) _45;
    _47 = _44 - _46;
    _48 = _47 /[ex] 16;
    _49 = _42 + _48;
    # VUSE <.MEM_26>
    _50 = MEM[(const struct _Deque_iterator &)&D.42714 + 16]._M_last;
    _51 = (long int) _50;
    # VUSE <.MEM_26>
    _52 = MEM[(const struct _Deque_iterator &)&D.42714 + 16]._M_cur;
    _53 = (long int) _52;
    _54 = _51 - _53;
    _55 = _54 /[ex] 16;
    _56 = _49 + _55;
    _57 = (size_type) _56;
    # DEBUG D#242 => &D.42714.D.32945
    # DEBUG this => D#242
    # DEBUG __a => NULL
    _58 = &MEM[(struct deque *)this_2(D) + 120B].D.32945;
    # DEBUG this => _58
    # DEBUG __a => NULL
    # DEBUG __num_elements => _57
    # DEBUG D#237 => &_58->_M_impl
    # DEBUG this => D#237
    # DEBUG __a => NULL
    # DEBUG this => D#237
    # DEBUG __a => NULL
    # DEBUG this => D#237
    # DEBUG D.46914 => NULL
    # .MEM_104 = VDEF <.MEM_26>
    MEM[(struct _Deque_impl *)this_2(D) + 120B]._M_map = 0B;
    # .MEM_105 = VDEF <.MEM_104>
    MEM[(struct _Deque_impl *)this_2(D) + 120B]._M_map_size = 0;
    # DEBUG D#173 => &D#237->_M_start
    # DEBUG this => D#173
    # .MEM_106 = VDEF <.MEM_105>
    MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_cur = 0B;
    # .MEM_107 = VDEF <.MEM_106>
    MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_first = 0B;
    # .MEM_108 = VDEF <.MEM_107>
    MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_last = 0B;
    # .MEM_109 = VDEF <.MEM_108>
    MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_node = 0B;
    # DEBUG D#172 => &D#237->_M_finish
    # DEBUG this => D#172
    # .MEM_110 = VDEF <.MEM_109>
    MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_cur = 0B;
    # .MEM_111 = VDEF <.MEM_110>
    MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_first = 0B;
    # .MEM_112 = VDEF <.MEM_111>
    MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_last = 0B;
    # .MEM_113 = VDEF <.MEM_112>
    MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_node = 0B;
    # .MEM_114 = VDEF <.MEM_113>
    std::_Deque_base<std::pair<int, Flit*>, std::allocator<std::pair<int, Flit*> > >::_M_initialize_map (_58, _57);

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 })
  {
    <bb 4>:
    # DEBUG D#243 => &D#375->D.32945
    # DEBUG this => D#243
    # DEBUG D#244 => &D#375->D.32945._M_impl._M_start
    # DEBUG this => &D.49398
    # DEBUG __x => D#244
    # VUSE <.MEM_114>
    _59 = MEM[(const struct iterator &)this_2(D) + 136]._M_cur;
    # VUSE <.MEM_114>
    _61 = MEM[(const struct iterator &)this_2(D) + 136]._M_last;
    # VUSE <.MEM_114>
    _62 = MEM[(const struct iterator &)this_2(D) + 136]._M_node;
    # DEBUG this => &D.42714
    # DEBUG D#85 => &D.42714.D.32945._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#85
    # VUSE <.MEM_114>
    _63 = MEM[(const struct iterator &)&D.42714 + 48]._M_cur;
    # DEBUG D#247 => MEM[(const struct iterator &)&D.42714 + 48]._M_first
    # DEBUG D.47668 => D#247
    # DEBUG D#246 => MEM[(const struct iterator &)&D.42714 + 48]._M_last
    # DEBUG D.47669 => D#246
    # DEBUG D#245 => MEM[(const struct iterator &)&D.42714 + 48]._M_node
    # DEBUG D.47670 => D#245
    # DEBUG this => &D.42714
    # DEBUG D#86 => &D.42714.D.32945._M_impl._M_start
    # DEBUG this => &D.49397
    # DEBUG __x => D#86
    # VUSE <.MEM_114>
    _64 = MEM[(const struct iterator &)&D.42714 + 16]._M_cur;
    # DEBUG D#376 => MEM[(const struct iterator &)&D.42714 + 16]._M_first
    # VUSE <.MEM_114>
    _66 = MEM[(const struct iterator &)&D.42714 + 16]._M_last;
    # VUSE <.MEM_114>
    __nstart_67 = MEM[(const struct iterator &)&D.42714 + 16]._M_node;
    # DEBUG __first$_M_cur => _64
    # DEBUG __first$_M_first => D#376
    # DEBUG __first$_M_last => _66
    # DEBUG __first$_M_node => __nstart_67
    # DEBUG __result => &D.49398
    # DEBUG D.49402 => D#241
    # DEBUG this => NULL
    # DEBUG __x => &D.49398
    # DEBUG __first$_M_cur => _64
    # DEBUG __first$_M_first => D#376
    # DEBUG __first$_M_last => _66
    # DEBUG __first$_M_node => __nstart_67
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG this => &D.49413
    # DEBUG __x => NULL
    # DEBUG __first => _64
    # DEBUG __first$_M_first => D#376
    # DEBUG __first$_M_last => _66
    # DEBUG __first$_M_node => __nstart_67
    # DEBUG __result => &D.49413
    # DEBUG this => &D.49412
    # DEBUG __x => &D.49413

  }
  bb_14 (preds = {bb_6 }, succs = {bb_27 })
  {
    <bb 14>:

  }
  bb_27 (preds = {bb_14 }, succs = {bb_15 bb_21 })
  {
    <bb 27>:
    # .MEM_145 = VDEF <.MEM_28>
    D.49413 ={v} {CLOBBER};
    # .MEM_146 = VDEF <.MEM_145>
    D.49398 ={v} {CLOBBER};
    # DEBUG this => &D.42714
    # DEBUG D#158 => &D.42714.D.32945
    # DEBUG this => D#158
    # DEBUG this => &D.42714
    # DEBUG D#12 => &D.42714.D.32945._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#12
    # DEBUG D#166 => MEM[(const struct iterator &)&D.42714 + 48]._M_cur
    # DEBUG D.46875 => D#166
    # DEBUG D#165 => MEM[(const struct iterator &)&D.42714 + 48]._M_first
    # DEBUG D.46876 => D#165
    # DEBUG D#164 => MEM[(const struct iterator &)&D.42714 + 48]._M_last
    # DEBUG D.46877 => D#164
    # DEBUG D#163 => MEM[(const struct iterator &)&D.42714 + 48]._M_node
    # DEBUG D.46878 => D#163
    # DEBUG this => &D.42714
    # DEBUG D#11 => &D.42714.D.32945._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#11
    # DEBUG D#162 => MEM[(const struct iterator &)&D.42714 + 16]._M_cur
    # DEBUG D.46871 => D#162
    # DEBUG D#161 => MEM[(const struct iterator &)&D.42714 + 16]._M_first
    # DEBUG D.46872 => D#161
    # DEBUG D#160 => MEM[(const struct iterator &)&D.42714 + 16]._M_last
    # DEBUG D.46873 => D#160
    # DEBUG D#159 => MEM[(const struct iterator &)&D.42714 + 16]._M_node
    # DEBUG D.46874 => D#159
    # DEBUG D#13 => &D.42714
    # DEBUG this => D#13
    # DEBUG __first => D#14
    # DEBUG __last => D#15
    # DEBUG D.46859 => D#16
    # DEBUG this => &D.42714.D.32945
    # VUSE <.MEM_146>
    _92 = MEM[(struct _Deque_base *)&D.42714]._M_impl._M_map;
    if (_92 != 0B)
      goto <bb 15>;
    else
      goto <bb 21>;

  }
  bb_15 (preds = {bb_27 }, succs = {bb_20 bb_16 })
  {
    <bb 15>:
    # VUSE <.MEM_146>
    _93 = MEM[(struct _Deque_base *)&D.42714]._M_impl._M_finish._M_node;
    _94 = _93 + 8;
    # DEBUG D#149 => &D.42714.D.32945
    # DEBUG __nstart => __nstart_67
    # DEBUG __nfinish => _94
    # DEBUG this => D#149
    # DEBUG __n => __nstart_67
    if (__nstart_67 >= _94)
      goto <bb 20>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:

  }
  bb_19 (preds = {bb_17 }, succs = {bb_26 })
  {
    <bb 19>:

  }
  bb_26 (preds = {bb_19 }, succs = {bb_20 })
  {
    <bb 26>:
    # VUSE <.MEM_147>
    pretmp_115 = MEM[(struct _Deque_base *)&D.42714]._M_impl._M_map;

  }
  bb_20 (preds = {bb_26 bb_15 }, succs = {bb_21 })
  {
    <bb 20>:
    # .MEM_117 = PHI <.MEM_147(26), .MEM_146(15)>
    # prephitmp_6 = PHI <pretmp_115(26), _92(15)>
    # DEBUG D#156 => MEM[(struct _Deque_base *)&D.42714]._M_impl._M_map_size
    # DEBUG D#377 => MEM[(struct _Deque_base *)&D.42714]._M_impl._M_map
    # DEBUG D#154 => &D.42714.D.32945
    # DEBUG D#155 => D#156
    # DEBUG __p => D#377
    # DEBUG this => D#154
    # DEBUG __n => D#155
    # DEBUG D#153 => D#155
    # DEBUG D#152 => D#154
    # DEBUG D#151 => D#152
    # DEBUG this => D#151
    # DEBUG D#150 => D#151
    # DEBUG this => D#150
    # DEBUG this => NULL
    # DEBUG D.46793 => NULL
    # DEBUG this => NULL
    # DEBUG D#125 => &__map_alloc
    # DEBUG D#126 => D#153
    # DEBUG __p => D#377
    # DEBUG __a => D#125
    # DEBUG __n => D#126
    # DEBUG D#124 => D#126
    # DEBUG D#123 => D#125
    # DEBUG D#121 => D#123
    # DEBUG D#122 => D#124
    # DEBUG __p => D#377
    # DEBUG this => D#121
    # DEBUG D.49458 => D#122
    # .MEM_148 = VDEF <.MEM_117>
    operator delete (prephitmp_6);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc

  }
  bb_21 (preds = {bb_27 bb_20 }, succs = {bb_1 })
  {
    <bb 21>:
    # .MEM_103 = PHI <.MEM_146(27), .MEM_148(20)>
    # DEBUG D#157 => &MEM[(struct _Deque_base *)&D.42714]._M_impl
    # DEBUG this => D#157
    # DEBUG this => D#157
    # DEBUG this => D#157
    # .MEM_12 = VDEF <.MEM_103>
    D.42714 ={v} {CLOBBER};
    # VUSE <.MEM_12>
    return;

  }
  bb_22 (preds = {bb_3 }, succs = {bb_23 })
  {
  <L0>:
    # DEBUG this => &D.42714
    # DEBUG D#158 => &D.42714.D.32945
    # DEBUG this => D#158
    # DEBUG this => &D.42714
    # DEBUG D#12 => &D.42714.D.32945._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#12
    # DEBUG D#166 => MEM[(const struct iterator &)&D.42714 + 48]._M_cur
    # DEBUG D.46875 => D#166
    # DEBUG D#165 => MEM[(const struct iterator &)&D.42714 + 48]._M_first
    # DEBUG D.46876 => D#165
    # DEBUG D#164 => MEM[(const struct iterator &)&D.42714 + 48]._M_last
    # DEBUG D.46877 => D#164
    # DEBUG D#163 => MEM[(const struct iterator &)&D.42714 + 48]._M_node
    # DEBUG D.46878 => D#163
    # DEBUG this => &D.42714
    # DEBUG D#11 => &D.42714.D.32945._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#11
    # DEBUG D#162 => MEM[(const struct iterator &)&D.42714 + 16]._M_cur
    # DEBUG D.46871 => D#162
    # DEBUG D#161 => MEM[(const struct iterator &)&D.42714 + 16]._M_first
    # DEBUG D.46872 => D#161
    # DEBUG D#160 => MEM[(const struct iterator &)&D.42714 + 16]._M_last
    # DEBUG D.46873 => D#160
    # DEBUG D#159 => MEM[(const struct iterator &)&D.42714 + 16]._M_node
    # DEBUG D.46874 => D#159
    # DEBUG D#13 => &D.42714
    # DEBUG this => D#13
    # DEBUG __first => D#14
    # DEBUG __last => D#15
    # DEBUG D.46859 => D#16
    # .MEM_30 = VDEF <.MEM_114>
    std::_Deque_base<std::pair<int, Flit*>, std::allocator<std::pair<int, Flit*> > >::~_Deque_base (&D.42714.D.32945);
    # .MEM_13 = VDEF <.MEM_30>
    D.42714 ={v} {CLOBBER};
    resx 2

  }
  bb_23 (preds = {bb_22 }, succs = {bb_25 })
  {
  <L3>:
    goto <bb 25> (<L1>);

  }
  bb_24 (preds = {bb_2 }, succs = {bb_25 })
  {
  <L2>:

  }
  bb_25 (preds = {bb_24 bb_23 }, succs = {})
  {
    # .MEM_1 = PHI <.MEM_26(24), .MEM_13(23)>
  <L1>:
    # DEBUG D#249 => &this_2(D)->D.33033
    # DEBUG this => D#249
    # .MEM_32 = VDEF <.MEM_1>
    MEM[(struct TimedModule *)this_2(D)].D.28611._vptr.Module = &MEM[(void *)&_ZTV11TimedModule + 16B];
    # .MEM_33 = VDEF <.MEM_32>
    Module::~Module (_11);
    # .MEM_34 = VDEF <.MEM_33>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    resx 1

  }
  loop_2 (header = 17, latch = 18, niter = (((unsigned long) _93 - (unsigned long) __nstart_67) + 7) / 8, upper_bound = 2305843009213693951)
  {
    bb_17 (preds = {bb_16 bb_18 }, succs = {bb_19 bb_18 })
    {
      <bb 17>:
      # __nstart_60 = PHI <__nstart_67(16), __nstart_98(18)>
      # .MEM_116 = PHI <.MEM_146(16), .MEM_147(18)>
      # DEBUG __n => __nstart_60
      # VUSE <.MEM_116>
      _97 = *__nstart_60;
      # DEBUG this => D#147
      # DEBUG __p => _97
      # DEBUG __size => 16
      # DEBUG D#135 => &D#148->_M_impl
      # DEBUG D#133 => D#135
      # DEBUG __p => _97
      # DEBUG __a => D#133
      # DEBUG __n => D#134
      # DEBUG D#132 => D#134
      # DEBUG D#131 => D#133
      # DEBUG D#129 => D#131
      # DEBUG D#130 => D#132
      # DEBUG __p => _97
      # DEBUG this => D#129
      # DEBUG D.49448 => D#130
      # .MEM_147 = VDEF <.MEM_116>
      operator delete (_97);
      __nstart_98 = __nstart_60 + 8;
      # DEBUG __n => __nstart_98
      # DEBUG __n => __nstart_98
      if (_94 <= __nstart_98)
        goto <bb 19>;
      else
        goto <bb 18>;

    }
    bb_18 (preds = {bb_17 }, succs = {bb_17 })
    {
      <bb 18>:
      goto <bb 17>;

    }
  }
  loop_1 (header = 5, latch = 13, niter = )
  {
    bb_5 (preds = {bb_4 bb_13 }, succs = {bb_28 })
    {
      <bb 5>:
      # .MEM_153 = PHI <.MEM_114(4), .MEM_100(13)>
      # SR.462_144 = PHI <_59(4), _90(13)>
      # SR.463_141 = PHI <_61(4), _91(13)>
      # SR.464_140 = PHI <_62(4), _89(13)>
      # __first_139 = PHI <_64(4), __first_119(13)>
      # __first$_M_last_135 = PHI <_66(4), __first$_M_last_120(13)>
      # __first$_M_node_130 = PHI <__nstart_67(4), __first$_M_node_121(13)>

    }
    bb_28 (preds = {bb_5 }, succs = {bb_6 })
    {
      <bb 28>:
      # DEBUG __first$_M_node => __first$_M_node_130
      # DEBUG __first$_M_last => __first$_M_last_135
      # DEBUG __first => __first_139

    }
    bb_13 (preds = {bb_11 }, succs = {bb_5 })
    {
      <bb 13>:
      # __first$_M_node_121 = PHI <__first$_M_node_124(11)>
      # __first$_M_last_120 = PHI <__first$_M_last_132(11)>
      # __first_119 = PHI <__first_136(11)>
      # DEBUG this => &D.49412
      _89 = SR.464_140 + 8;
      # DEBUG this => &D.49412
      # DEBUG __new_node => _89
      # VUSE <.MEM_100>
      _90 = MEM[(struct pair * *)SR.464_140 + 8B];
      # DEBUG __size => 16
      _91 = _90 + 512;
      goto <bb 5>;

    }
    loop_3 (header = 6, latch = 12, niter = )
    {
      bb_6 (preds = {bb_28 bb_12 }, succs = {bb_7 bb_14 })
      {
        <bb 6>:
        # .MEM_28 = PHI <.MEM_153(28), .MEM_100(12)>
        # SR.462_143 = PHI <SR.462_144(28), _82(12)>
        # __first_138 = PHI <__first_139(28), __first_136(12)>
        # __first$_M_last_133 = PHI <__first$_M_last_135(28), __first$_M_last_132(12)>
        # __first$_M_node_129 = PHI <__first$_M_node_130(28), __first$_M_node_124(12)>
        # DEBUG __first$_M_node => __first$_M_node_129
        # DEBUG __first$_M_last => __first$_M_last_133
        # DEBUG __first => __first_138
        # DEBUG __x => &__first
        # DEBUG __y => NULL
        # DEBUG D#197 => &__first
        # DEBUG __x => D#197
        # DEBUG __y => D#198
        if (_63 != __first_138)
          goto <bb 7>;
        else
          goto <bb 14>;

      }
      bb_7 (preds = {bb_6 }, succs = {bb_8 bb_9 })
      {
        <bb 7>:
        # DEBUG D#174 => &__first
        # DEBUG this => D#174
        # DEBUG D#45 => &D.49412
        # DEBUG this => D#45
        # DEBUG __r => NULL
        # DEBUG __p => NULL
        # DEBUG __value => NULL
        # DEBUG D#4 => 16
        # DEBUG __p => NULL
        # DEBUG D.46939 => D#4
        if (SR.462_143 != 0B)
          goto <bb 8>;
        else
          goto <bb 9>;

      }
      bb_8 (preds = {bb_7 }, succs = {bb_9 })
      {
        <bb 8>:
        # .MEM_134 = VDEF <.MEM_28>
        *SR.462_143 = MEM[(const struct pair &)__first_138];

      }
      bb_9 (preds = {bb_7 bb_8 }, succs = {bb_10 bb_11 })
      {
        <bb 9>:
        # .MEM_100 = PHI <.MEM_28(7), .MEM_134(8)>
        # DEBUG this => &__first
        __first_79 = __first_138 + 16;
        # DEBUG __first => __first_79
        if (__first_79 == __first$_M_last_133)
          goto <bb 10>;
        else
          goto <bb 11>;

      }
      bb_10 (preds = {bb_9 }, succs = {bb_11 })
      {
        <bb 10>:
        # DEBUG this => &__first
        __first$_M_node_85 = __first$_M_node_129 + 8;
        # DEBUG this => &__first
        # DEBUG __new_node => __first$_M_node_85
        # DEBUG __first$_M_node => __first$_M_node_85
        # VUSE <.MEM_100>
        __first_86 = MEM[(struct pair * *)__first$_M_node_129 + 8B];
        # DEBUG __size => 16
        __first$_M_last_87 = __first_86 + 512;
        # DEBUG __first$_M_last => __first$_M_last_87
        # DEBUG __first => __first_86

      }
      bb_11 (preds = {bb_9 bb_10 }, succs = {bb_13 bb_12 })
      {
        <bb 11>:
        # __first_136 = PHI <__first_79(9), __first_86(10)>
        # __first$_M_last_132 = PHI <__first$_M_last_133(9), __first$_M_last_87(10)>
        # __first$_M_node_124 = PHI <__first$_M_node_129(9), __first$_M_node_85(10)>
        # DEBUG __first$_M_node => __first$_M_node_124
        # DEBUG __first$_M_last => __first$_M_last_132
        # DEBUG __first => __first_136
        # DEBUG this => &D.49412
        _82 = SR.462_143 + 16;
        if (_82 == SR.463_141)
          goto <bb 13>;
        else
          goto <bb 12>;

      }
      bb_12 (preds = {bb_11 }, succs = {bb_6 })
      {
        <bb 12>:
        goto <bb 6>;

      }
    }
  }
}

Pass statistics:
----------------

Channel<T>::Channel(Module*, const string&) [with T = Flit; std::__cxx11::string = std::__cxx11::basic_string<char>] (struct ChannelD.31995 * const thisD.33021, struct ModuleD.27766 * parentD.33022, const struct stringD.10938 & nameD.33023)
Eh tree:
   1 cleanup land:{3,<L2>},{1,<L3>}
     2 cleanup land:{2,<L0>}
{
  struct pairD.32024 * * __first$_M_nodeD.49479;
  struct pairD.32024 * __first$_M_lastD.49478;
  struct pairD.32024 * const __firstD.49476;
  struct pairD.32024 * * SR.464D.49475;
  struct pairD.32024 * SR.463D.49474;
  struct pairD.32024 * SR.462D.49473;
  struct pairD.32024 * * __first$_M_nodeD.49472;
  struct pairD.32024 * __first$_M_lastD.49471;
  struct pairD.32024 * __first$_M_firstD.49470;
  struct pairD.32024 * __first$_M_curD.49469;
  struct pairD.32024 * * __first$_M_nodeD.49468;
  struct pairD.32024 * __first$_M_lastD.49467;
  struct pairD.32024 * __first$_M_firstD.49466;
  struct pairD.32024 * __first$_M_curD.49465;
  struct pairD.32024 * * SR.453D.49464;
  struct pairD.32024 * SR.452D.49463;
  struct pairD.32024 * SR.451D.49462;
  struct pairD.32024 * SR.450D.49461;
  struct pairD.32024 * * __nstartD.49439;
  struct _Deque_iteratorD.32265 __firstD.49414;
  struct _Deque_iteratorD.32263 D.49413;
  struct _Deque_iteratorD.32265 __firstD.49406;
  struct _Deque_iteratorD.32263 D.49412;
  struct _Deque_iteratorD.32265 __firstD.49399;
  struct _Deque_iteratorD.32263 D.49398;
  struct _Deque_iteratorD.32265 D.49397;
  struct dequeD.32026 D.42714;
  struct pairD.32024 * * prephitmp_6;
  struct ModuleD.27766 * _11;
  struct pairD.32024 * * _35;
  long intD.12 _36;
  struct pairD.32024 * * _37;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  long intD.12 _41;
  long intD.12 _42;
  struct pairD.32024 * _43;
  long intD.12 _44;
  struct pairD.32024 * _45;
  long intD.12 _46;
  long intD.12 _47;
  long intD.12 _48;
  long intD.12 _49;
  struct pairD.32024 * _50;
  long intD.12 _51;
  struct pairD.32024 * _52;
  long intD.12 _53;
  long intD.12 _54;
  long intD.12 _55;
  difference_typeD.32293 _56;
  size_typeD.32472 _57;
  struct _Deque_baseD.32030 * _58;
  struct pairD.32024 * _59;
  struct pairD.32024 * _61;
  struct pairD.32024 * * _62;
  struct pairD.32024 * _63;
  struct pairD.32024 * _64;
  struct pairD.32024 * _66;
  struct pairD.32024 * _82;
  struct pairD.32024 * * _89;
  struct pairD.32024 * _90;
  struct pairD.32024 * _91;
  struct pairD.32024 * * _92;
  struct pairD.32024 * * _93;
  struct pairD.32024 * * _94;
  struct pairD.32024 * _97;
  struct pairD.32024 * * pretmp_115;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#250ptD.0 => &this_2(D)->D.33033
  # DEBUG thisD.47678 => D#250ptD.0
  # DEBUG parentD.47679 => parent_4(D)
  # DEBUG nameD.47680 => name_5(D)
  # PT = nonlocal 
  _11 = &MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611;
  # .MEM_14 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZN6ModuleC2EPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.28548 (_11, parent_4(D), name_5(D));
  # .MEM_7 = VDEF <.MEM_14>
  this_2(D)->D.33033.D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV7ChannelI4FlitED.33039 + 16B];
  # .MEM_8 = VDEF <.MEM_7>
  this_2(D)->_delayD.32020 = 1;
  # .MEM_9 = VDEF <.MEM_8>
  this_2(D)->_inputD.32021 = 0B;
  # .MEM_10 = VDEF <.MEM_9>
  this_2(D)->_outputD.32022 = 0B;
  # DEBUG thisD.47673 => &D.42714
  # DEBUG thisD.47674 => &D.42714.D.32945
  # DEBUG D#235ptD.0 => &MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396
  # DEBUG thisD.47675 => D#235ptD.0
  # DEBUG thisD.46550 => D#235ptD.0
  # DEBUG thisD.46546 => D#235ptD.0
  # .MEM_16 = VDEF <.MEM_10>
  MEM[(struct _Deque_implD.32364 *)&D.42714]._M_mapD.32398 = 0B;
  # .MEM_17 = VDEF <.MEM_16>
  MEM[(struct _Deque_implD.32364 *)&D.42714]._M_map_sizeD.32399 = 0;
  # DEBUG D#118ptD.0 => &D#235ptD.0->_M_startD.32400
  # DEBUG thisD.47676 => D#118ptD.0
  # .MEM_18 = VDEF <.MEM_17>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 16B]._M_curD.32295 = 0B;
  # .MEM_19 = VDEF <.MEM_18>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 16B]._M_firstD.32296 = 0B;
  # .MEM_20 = VDEF <.MEM_19>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 16B]._M_lastD.32297 = 0B;
  # .MEM_21 = VDEF <.MEM_20>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 16B]._M_nodeD.32298 = 0B;
  # DEBUG D#117ptD.0 => &D#235ptD.0->_M_finishD.32401
  # DEBUG thisD.47677 => D#117ptD.0
  # .MEM_22 = VDEF <.MEM_21>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 48B]._M_curD.32295 = 0B;
  # .MEM_23 = VDEF <.MEM_22>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 48B]._M_firstD.32296 = 0B;
  # .MEM_24 = VDEF <.MEM_23>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 48B]._M_lastD.32297 = 0B;
  # .MEM_25 = VDEF <.MEM_24>
  MEM[(struct _Deque_iteratorD.32263 *)&D.42714 + 48B]._M_nodeD.32298 = 0B;
  [LP 3] # .MEM_26 = VDEF <.MEM_25>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZNSt11_Deque_baseISt4pairIiP4FlitESaIS3_EE17_M_initialize_mapEmD.32383 (&D.42714.D.32945, 0);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 (EH,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#248ptD.0 => &this_2(D)->_wait_queueD.32023
  # DEBUG thisD.47681 => D#248ptD.0
  # DEBUG __cD.47682 => &D.42714
  # DEBUG D#375ptD.0 => &MEM[(struct queueD.32027 *)this_2(D) + 120B].cD.32988
  # DEBUG thisD.49377 => D#375ptD.0
  # DEBUG __xD.49378 => &D.42714
  # DEBUG thisD.49379 => &D.42714
  # DEBUG D#119ptD.0 => &D.42714.D.32945._M_implD.32396._M_startD.32400
  # DEBUG D#120ptD.0 => &D.42714.D.32945._M_implD.32396._M_finishD.32401
  # DEBUG __xD.49381 => D#120ptD.0
  # DEBUG __yD.49380 => D#119ptD.0
  # DEBUG __sizeD.46552 => 16
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _35 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 48]._M_nodeD.32298;
  _36 = (long intD.12) _35;
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _37 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 16]._M_nodeD.32298;
  _38 = (long intD.12) _37;
  _39 = _36 - _38;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _40 = _39 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _41 = _40 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551584
  _42 = _41 * 32;
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _43 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 48]._M_curD.32295;
  _44 = (long intD.12) _43;
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _45 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 48]._M_firstD.32296;
  _46 = (long intD.12) _45;
  _47 = _44 - _46;
  # RANGE [-576460752303423488, 576460752303423487]
  _48 = _47 /[ex] 16;
  _49 = _42 + _48;
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _50 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 16]._M_lastD.32297;
  _51 = (long intD.12) _50;
  # VUSE <.MEM_26>
  # PT = nonlocal escaped null 
  _52 = MEM[(const struct _Deque_iteratorD.32263 &)&D.42714 + 16]._M_curD.32295;
  _53 = (long intD.12) _52;
  _54 = _51 - _53;
  # RANGE [-576460752303423488, 576460752303423487]
  _55 = _54 /[ex] 16;
  _56 = _49 + _55;
  # RANGE [0, 18446744073709551615]
  _57 = (size_typeD.32472) _56;
  # DEBUG D#242ptD.0 => &D.42714.D.32945
  # DEBUG thisD.47661 => D#242ptD.0
  # DEBUG __aD.47659 => NULL
  # PT = nonlocal 
  _58 = &MEM[(struct dequeD.32026 *)this_2(D) + 120B].D.32945;
  # DEBUG thisD.49384 => _58
  # DEBUG __aD.49383 => NULL
  # DEBUG __num_elementsD.49382 => _57
  # DEBUG D#237ptD.0 => &_58->_M_implD.32396
  # DEBUG thisD.49386 => D#237ptD.0
  # DEBUG __aD.49385 => NULL
  # DEBUG thisD.46918 => D#237ptD.0
  # DEBUG __aD.46919 => NULL
  # DEBUG thisD.46913 => D#237ptD.0
  # DEBUG D.46914 => NULL
  # .MEM_104 = VDEF <.MEM_26>
  MEM[(struct _Deque_implD.32364 *)this_2(D) + 120B]._M_mapD.32398 = 0B;
  # .MEM_105 = VDEF <.MEM_104>
  MEM[(struct _Deque_implD.32364 *)this_2(D) + 120B]._M_map_sizeD.32399 = 0;
  # DEBUG D#173ptD.0 => &D#237ptD.0->_M_startD.32400
  # DEBUG thisD.49387 => D#173ptD.0
  # .MEM_106 = VDEF <.MEM_105>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 136B]._M_curD.32295 = 0B;
  # .MEM_107 = VDEF <.MEM_106>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 136B]._M_firstD.32296 = 0B;
  # .MEM_108 = VDEF <.MEM_107>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 136B]._M_lastD.32297 = 0B;
  # .MEM_109 = VDEF <.MEM_108>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 136B]._M_nodeD.32298 = 0B;
  # DEBUG D#172ptD.0 => &D#237ptD.0->_M_finishD.32401
  # DEBUG thisD.49388 => D#172ptD.0
  # .MEM_110 = VDEF <.MEM_109>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 168B]._M_curD.32295 = 0B;
  # .MEM_111 = VDEF <.MEM_110>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 168B]._M_firstD.32296 = 0B;
  # .MEM_112 = VDEF <.MEM_111>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 168B]._M_lastD.32297 = 0B;
  # .MEM_113 = VDEF <.MEM_112>
  MEM[(struct _Deque_iteratorD.32263 *)this_2(D) + 168B]._M_nodeD.32298 = 0B;
  [LP 2] # .MEM_114 = VDEF <.MEM_113>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZNSt11_Deque_baseISt4pairIiP4FlitESaIS3_EE17_M_initialize_mapEmD.32383 (_58, _57);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 (EH,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#243ptD.0 => &D#375ptD.0->D.32945
  # DEBUG thisD.47649 => D#243ptD.0
  # DEBUG D#244ptD.0 => &D#375ptD.0->D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.49390 => &D.49398
  # DEBUG __xD.49389 => D#244ptD.0
  # VUSE <.MEM_114>
  # PT = nonlocal escaped 
  _59 = MEM[(const struct iteratorD.32283 &)this_2(D) + 136]._M_curD.32295;
  # VUSE <.MEM_114>
  # PT = nonlocal escaped 
  _61 = MEM[(const struct iteratorD.32283 &)this_2(D) + 136]._M_lastD.32297;
  # VUSE <.MEM_114>
  # PT = nonlocal escaped 
  _62 = MEM[(const struct iteratorD.32283 &)this_2(D) + 136]._M_nodeD.32298;
  # DEBUG thisD.49391 => &D.42714
  # DEBUG D#85ptD.0 => &D.42714.D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.49393 => NULL
  # DEBUG __xD.49392 => D#85ptD.0
  # VUSE <.MEM_114>
  # PT = nonlocal escaped null 
  _63 = MEM[(const struct iteratorD.43267 &)&D.42714 + 48]._M_curD.32295;
  # DEBUG D#247ptD.0 => MEM[(const struct iteratorD.43267 &)&D.42714 + 48]._M_firstD.32296
  # DEBUG D.47668 => D#247ptD.0
  # DEBUG D#246ptD.0 => MEM[(const struct iteratorD.43267 &)&D.42714 + 48]._M_lastD.32297
  # DEBUG D.47669 => D#246ptD.0
  # DEBUG D#245ptD.0 => MEM[(const struct iteratorD.43267 &)&D.42714 + 48]._M_nodeD.32298
  # DEBUG D.47670 => D#245ptD.0
  # DEBUG thisD.49394 => &D.42714
  # DEBUG D#86ptD.0 => &D.42714.D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.49396 => &D.49397
  # DEBUG __xD.49395 => D#86ptD.0
  # VUSE <.MEM_114>
  # PT = nonlocal escaped null 
  _64 = MEM[(const struct iteratorD.43267 &)&D.42714 + 16]._M_curD.32295;
  # DEBUG D#376ptD.0 => MEM[(const struct iteratorD.43267 &)&D.42714 + 16]._M_firstD.32296
  # VUSE <.MEM_114>
  # PT = nonlocal escaped null 
  _66 = MEM[(const struct iteratorD.43267 &)&D.42714 + 16]._M_lastD.32297;
  # VUSE <.MEM_114>
  # PT = nonlocal escaped null 
  __nstart_67 = MEM[(const struct iteratorD.43267 &)&D.42714 + 16]._M_nodeD.32298;
  # DEBUG __first$_M_curD.49465 => _64
  # DEBUG __first$_M_firstD.49466 => D#376ptD.0
  # DEBUG __first$_M_lastD.49467 => _66
  # DEBUG __first$_M_nodeD.49468 => __nstart_67
  # DEBUG __resultD.49401 => &D.49398
  # DEBUG D.49402 => D#241ptD.0
  # DEBUG thisD.49404 => NULL
  # DEBUG __xD.49403 => &D.49398
  # DEBUG __first$_M_curD.49469 => _64
  # DEBUG __first$_M_firstD.49470 => D#376ptD.0
  # DEBUG __first$_M_lastD.49471 => _66
  # DEBUG __first$_M_nodeD.49472 => __nstart_67
  # DEBUG __resultD.49405 => NULL
  # DEBUG __assignableD.49409 => 1
  # DEBUG thisD.49411 => &D.49413
  # DEBUG __xD.49410 => NULL
  # DEBUG __firstD.49476 => _64
  # DEBUG __first$_M_firstD.49477 => D#376ptD.0
  # DEBUG __first$_M_lastD.49478 => _66
  # DEBUG __first$_M_nodeD.49479 => __nstart_67
  # DEBUG __resultD.49416 => &D.49413
  # DEBUG thisD.49424 => &D.49412
  # DEBUG __xD.49423 => &D.49413
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 1512, maybe hot
;;    prev block 4, next block 28, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_153 = PHI <.MEM_114(4), .MEM_100(13)>
  # PT = nonlocal escaped 
  # SR.462_144 = PHI <_59(4), _90(13)>
  # PT = nonlocal escaped 
  # SR.463_141 = PHI <_61(4), _91(13)>
  # PT = nonlocal escaped 
  # SR.464_140 = PHI <_62(4), _89(13)>
  # PT = nonlocal escaped null 
  # __first_139 = PHI <_64(4), __first_119(13)>
  # PT = nonlocal escaped null 
  # __first$_M_last_135 = PHI <_66(4), __first$_M_last_120(13)>
  # PT = nonlocal escaped null 
  # __first$_M_node_130 = PHI <__nstart_67(4), __first$_M_node_121(13)>
;;    succ:       28 [100.0%]  (FALLTHRU)

;;   basic block 28, loop depth 1, count 0, freq 1512, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU)
  # DEBUG __first$_M_nodeD.49479 => __first$_M_node_130
  # DEBUG __first$_M_lastD.49478 => __first$_M_last_135
  # DEBUG __firstD.49476 => __first_139
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 2, count 0, freq 10000, maybe hot
;;    prev block 28, next block 7, flags: (NEW)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_153(28), .MEM_100(12)>
  # PT = nonlocal escaped 
  # SR.462_143 = PHI <SR.462_144(28), _82(12)>
  # PT = nonlocal escaped null 
  # __first_138 = PHI <__first_139(28), __first_136(12)>
  # PT = nonlocal escaped null 
  # __first$_M_last_133 = PHI <__first$_M_last_135(28), __first$_M_last_132(12)>
  # PT = nonlocal escaped null 
  # __first$_M_node_129 = PHI <__first$_M_node_130(28), __first$_M_node_124(12)>
  # DEBUG __first$_M_nodeD.49479 => __first$_M_node_129
  # DEBUG __first$_M_lastD.49478 => __first$_M_last_133
  # DEBUG __firstD.49476 => __first_138
  # DEBUG __xD.47566 => &__firstD.49414
  # DEBUG __yD.47565 => NULL
  # DEBUG D#197ptD.0 => &__firstD.49414
  # DEBUG __xD.47174 => D#197ptD.0
  # DEBUG __yD.47173 => D#198ptD.0
  if (_63 != __first_138)
    goto <bb 7>;
  else
    goto <bb 14>;
;;    succ:       7 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#174ptD.0 => &__firstD.49414
  # DEBUG thisD.47559 => D#174ptD.0
  # DEBUG D#45ptD.0 => &D.49412
  # DEBUG thisD.47560 => D#45ptD.0
  # DEBUG __rD.47542 => NULL
  # DEBUG __pD.49420 => NULL
  # DEBUG __valueD.49419 => NULL
  # DEBUG D#4ptD.0 => 16
  # DEBUG __pD.46938 => NULL
  # DEBUG D.46939 => D#4ptD.0
  if (SR.462_143 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 7735, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_28>
  *SR.462_143 = MEM[(const struct pairD.32024 &)__first_138];
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [15.0%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_28(7), .MEM_134(8)>
  # DEBUG thisD.49421 => &__firstD.49414
  # PT = nonlocal escaped null 
  __first_79 = __first_138 + 16;
  # DEBUG __firstD.49476 => __first_79
  if (__first_79 == __first$_M_last_133)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 612, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.49425 => &__firstD.49414
  # PT = nonlocal escaped null 
  __first$_M_node_85 = __first$_M_node_129 + 8;
  # DEBUG thisD.49427 => &__firstD.49414
  # DEBUG __new_nodeD.49426 => __first$_M_node_85
  # DEBUG __first$_M_nodeD.49479 => __first$_M_node_85
  # VUSE <.MEM_100>
  # PT = nonlocal escaped 
  __first_86 = MEM[(struct pairD.32024 * *)__first$_M_node_129 + 8B];
  # DEBUG __sizeD.47517 => 16
  # PT = nonlocal escaped 
  __first$_M_last_87 = __first_86 + 512;
  # DEBUG __first$_M_lastD.49478 => __first$_M_last_87
  # DEBUG __firstD.49476 => __first_86
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __first_136 = PHI <__first_79(9), __first_86(10)>
  # PT = nonlocal escaped null 
  # __first$_M_last_132 = PHI <__first$_M_last_133(9), __first$_M_last_87(10)>
  # PT = nonlocal escaped null 
  # __first$_M_node_124 = PHI <__first$_M_node_129(9), __first$_M_node_85(10)>
  # DEBUG __first$_M_nodeD.49479 => __first$_M_node_124
  # DEBUG __first$_M_lastD.49478 => __first$_M_last_132
  # DEBUG __firstD.49476 => __first_136
  # DEBUG thisD.49422 => &D.49412
  # PT = nonlocal escaped 
  _82 = SR.462_143 + 16;
  if (_82 == SR.463_141)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 2, count 0, freq 8488, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [93.3%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __first$_M_node_121 = PHI <__first$_M_node_124(11)>
  # PT = nonlocal escaped null 
  # __first$_M_last_120 = PHI <__first$_M_last_132(11)>
  # PT = nonlocal escaped null 
  # __first_119 = PHI <__first_136(11)>
  # DEBUG thisD.49429 => &D.49412
  # PT = nonlocal escaped 
  _89 = SR.464_140 + 8;
  # DEBUG thisD.49431 => &D.49412
  # DEBUG __new_nodeD.49430 => _89
  # VUSE <.MEM_100>
  # PT = nonlocal escaped 
  _90 = MEM[(struct pairD.32024 * *)SR.464_140 + 8B];
  # DEBUG __sizeD.46552 => 16
  # PT = nonlocal escaped 
  _91 = _90 + 512;
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 13, next block 27, flags: (NEW, REACHABLE)
;;    pred:       6 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       27 [100.0%]  (FALLTHRU)

;;   basic block 27, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # .MEM_145 = VDEF <.MEM_28>
  D.49413 ={v} {CLOBBER};
  # .MEM_146 = VDEF <.MEM_145>
  D.49398 ={v} {CLOBBER};
  # DEBUG thisD.47683 => &D.42714
  # DEBUG D#158ptD.0 => &D.42714.D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => &D.42714
  # DEBUG D#12ptD.0 => &D.42714.D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => &D.42714
  # DEBUG D#11ptD.0 => &D.42714.D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => &D.42714
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # DEBUG thisD.49433 => &D.42714.D.32945
  # VUSE <.MEM_146>
  # PT = nonlocal escaped null 
  _92 = MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396._M_mapD.32398;
  if (_92 != 0B)
    goto <bb 15>;
  else
    goto <bb 21>;
;;    succ:       15 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 27, next block 16, flags: (NEW, REACHABLE)
;;    pred:       27 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_146>
  # PT = nonlocal escaped null 
  _93 = MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396._M_finishD.32401._M_nodeD.32298;
  # PT = nonlocal escaped null 
  _94 = _93 + 8;
  # DEBUG D#149ptD.0 => &D.42714.D.32945
  # DEBUG __nstartD.49439 => __nstart_67
  # DEBUG __nfinishD.49438 => _94
  # DEBUG thisD.49437 => D#149ptD.0
  # DEBUG __nD.49440 => __nstart_67
  if (__nstart_67 >= _94)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 736, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 8177, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __nstart_60 = PHI <__nstart_67(16), __nstart_98(18)>
  # .MEM_116 = PHI <.MEM_146(16), .MEM_147(18)>
  # DEBUG __nD.49440 => __nstart_60
  # VUSE <.MEM_116>
  # PT = nonlocal escaped 
  _97 = *__nstart_60;
  # DEBUG thisD.49442 => D#147ptD.0
  # DEBUG __pD.49441 => _97
  # DEBUG __sizeD.46652 => 16
  # DEBUG D#135ptD.0 => &D#148ptD.0->_M_implD.32396
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.49446 => _97
  # DEBUG __aD.49444 => D#133ptD.0
  # DEBUG __nD.49445 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG __pD.49449 => _97
  # DEBUG thisD.49447 => D#129ptD.0
  # DEBUG D.49448 => D#130ptD.0
  # .MEM_147 = VDEF <.MEM_116>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZdlPvD.2766 (_97);
  # PT = nonlocal escaped null 
  __nstart_98 = __nstart_60 + 8;
  # DEBUG __nD.49440 => __nstart_98
  # DEBUG __nD.49440 => __nstart_98
  if (_94 <= __nstart_98)
    goto <bb 19>;
  else
    goto <bb 18>;
;;    succ:       19 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 7441, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 736, maybe hot
;;    prev block 18, next block 26, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       26 [100.0%]  (FALLTHRU)

;;   basic block 26, loop depth 0, count 0, freq 736, maybe hot
;;    prev block 19, next block 20, flags: (NEW)
;;    pred:       19 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_147>
  pretmp_115 = MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396._M_mapD.32398;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 26, next block 21, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_117 = PHI <.MEM_147(26), .MEM_146(15)>
  # PT = nonlocal escaped null 
  # prephitmp_6 = PHI <pretmp_115(26), _92(15)>
  # DEBUG D#156ptD.0 => MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396._M_map_sizeD.32399
  # DEBUG D#377ptD.0 => MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396._M_mapD.32398
  # DEBUG D#154ptD.0 => &D.42714.D.32945
  # DEBUG D#155ptD.0 => D#156ptD.0
  # DEBUG __pD.49452 => D#377ptD.0
  # DEBUG thisD.49450 => D#154ptD.0
  # DEBUG __nD.49451 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#151ptD.0 => D#152ptD.0
  # DEBUG thisD.46812 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG thisD.46800 => D#150ptD.0
  # DEBUG thisD.46792 => NULL
  # DEBUG D.46793 => NULL
  # DEBUG thisD.46790 => NULL
  # DEBUG D#125ptD.0 => &__map_allocD.49453
  # DEBUG D#126ptD.0 => D#153ptD.0
  # DEBUG __pD.49456 => D#377ptD.0
  # DEBUG __aD.49454 => D#125ptD.0
  # DEBUG __nD.49455 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG __pD.49459 => D#377ptD.0
  # DEBUG thisD.49457 => D#121ptD.0
  # DEBUG D.49458 => D#122ptD.0
  # .MEM_148 = VDEF <.MEM_117>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_6);
  # DEBUG thisD.46826 => &__map_allocD.49453
  # DEBUG thisD.46805 => &__map_allocD.49453
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       27 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_103 = PHI <.MEM_146(27), .MEM_148(20)>
  # DEBUG D#157ptD.0 => &MEM[(struct _Deque_baseD.32030 *)&D.42714]._M_implD.32396
  # DEBUG thisD.49434 => D#157ptD.0
  # DEBUG thisD.49435 => D#157ptD.0
  # DEBUG thisD.49436 => D#157ptD.0
  # .MEM_12 = VDEF <.MEM_103>
  D.42714 ={v} {CLOBBER};
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       3 (EH,EXECUTABLE)
<L0>: [LP 2]
  # DEBUG thisD.47684 => &D.42714
  # DEBUG D#158ptD.0 => &D.42714.D.32945
  # DEBUG thisD.46869 => D#158ptD.0
  # DEBUG thisD.46866 => &D.42714
  # DEBUG D#12ptD.0 => &D.42714.D.32945._M_implD.32396._M_finishD.32401
  # DEBUG thisD.46868 => NULL
  # DEBUG __xD.46867 => D#12ptD.0
  # DEBUG D#166ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_curD.32295
  # DEBUG D.46875 => D#166ptD.0
  # DEBUG D#165ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_firstD.32296
  # DEBUG D.46876 => D#165ptD.0
  # DEBUG D#164ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_lastD.32297
  # DEBUG D.46877 => D#164ptD.0
  # DEBUG D#163ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 48]._M_nodeD.32298
  # DEBUG D.46878 => D#163ptD.0
  # DEBUG thisD.46863 => &D.42714
  # DEBUG D#11ptD.0 => &D.42714.D.32945._M_implD.32396._M_startD.32400
  # DEBUG thisD.46865 => NULL
  # DEBUG __xD.46864 => D#11ptD.0
  # DEBUG D#162ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_curD.32295
  # DEBUG D.46871 => D#162ptD.0
  # DEBUG D#161ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_firstD.32296
  # DEBUG D.46872 => D#161ptD.0
  # DEBUG D#160ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_lastD.32297
  # DEBUG D.46873 => D#160ptD.0
  # DEBUG D#159ptD.0 => MEM[(const struct iteratorD.32283 &)&D.42714 + 16]._M_nodeD.32298
  # DEBUG D.46874 => D#159ptD.0
  # DEBUG D#13ptD.0 => &D.42714
  # DEBUG thisD.46862 => D#13ptD.0
  # DEBUG __firstD.46861 => D#14ptD.0
  # DEBUG __lastD.46860 => D#15ptD.0
  # DEBUG D.46859 => D#16ptD.0
  # .MEM_30 = VDEF <.MEM_114>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZNSt11_Deque_baseISt4pairIiP4FlitESaIS3_EED2EvD.32451 (&D.42714.D.32945);
  # .MEM_13 = VDEF <.MEM_30>
  D.42714 ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       23 (EH,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 (EH,EXECUTABLE)
<L3>: [LP 1]
  goto <bb 25> (<L1>);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       2 (EH,EXECUTABLE)
<L2>: [LP 3]
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 24, next block 1, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_26(24), .MEM_13(23)>
<L1>:
  # DEBUG D#249ptD.0 => &this_2(D)->D.33033
  # DEBUG thisD.47685 => D#249ptD.0
  # .MEM_32 = VDEF <.MEM_1>
  MEM[(struct TimedModuleD.28579 *)this_2(D)].D.28611._vptr.ModuleD.28561 = &MEM[(voidD.45 *)&_ZTV11TimedModuleD.28613 + 16B];
  # .MEM_33 = VDEF <.MEM_32>
  # USE = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  # CLB = nonlocal null { D.28613 D.33039 D.42714 } (nonlocal, escaped)
  _ZN6ModuleD2EvD.28558 (_11);
  # .MEM_34 = VDEF <.MEM_33>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


