
;; Function virtual int BitRevTrafficPattern::dest(int) (_ZN20BitRevTrafficPattern4destEi, funcdef_no=1772, decl_uid=34022, cgraph_uid=442, symbol_order=443)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual int BitRevTrafficPattern::dest(int) (struct BitRevTrafficPattern * const this, int source)
{
  int n;
  int result;
  int _10;
  int _11;

  <bb 2>:
  if (source_4(D) < 0)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 3>:
  n_7 = this_6(D)->D.34042.D.33950.D.33923._nodes;
  if (source_4(D) >= n_7)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  # DEBUG n => n_7
  # DEBUG result => 0
  # DEBUG source => source_4(D)
  if (n_7 <= 1)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#16 => this_6(D)
  # DEBUG D#17 => source_4(D)
  # DEBUG D#18 => D#17
  # DEBUG source => D#18
  # DEBUG D#19 => D#16
  # DEBUG this => D#19
  __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 260, &__PRETTY_FUNCTION__);

  <bb 6>:

  <bb 7>:
  # source_19 = PHI <source_4(D)(6), source_13(8)>
  # result_20 = PHI <0(6), result_12(8)>
  # n_23 = PHI <n_7(6), n_14(8)>
  # DEBUG n => n_23
  # DEBUG result => result_20
  # DEBUG source => source_19
  _10 = result_20 << 1;
  _11 = source_19 % 2;
  result_12 = _10 | _11;
  # DEBUG result => result_12
  source_13 = source_19 >> 1;
  # DEBUG source => source_13
  n_14 = n_23 >> 1;
  # DEBUG n => n_14
  # DEBUG n => n_14
  # DEBUG result => result_12
  # DEBUG source => source_13
  if (n_14 <= 1)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # result_21 = PHI <result_12(7)>

  <bb 11>:

  <bb 10>:
  # result_22 = PHI <result_21(11), 0(4)>

  <bb 12>:
  return result_22;

}



;; Function virtual int TornadoTrafficPattern::dest(int) (_ZN21TornadoTrafficPattern4destEi, funcdef_no=1787, decl_uid=34127, cgraph_uid=457, symbol_order=458)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual int TornadoTrafficPattern::dest(int) (struct TornadoTrafficPattern * const this, int source)
{
  bool Close_Phi.788_I_lsm.796;
  int Close_Phi.788_I_lsm.795;
  bool phi_out_of_ssa.786_I_lsm.794;
  int phi_out_of_ssa.786_I_lsm.793;
  bool phi_out_of_ssa.787_I_lsm.792;
  int phi_out_of_ssa.787_I_lsm.791;
  signed long graphite_IV.790;
  int Cross_BB_scalar_dependence.789[1];
  int D.51780;
  int D.51779;
  int D.51778;
  int D.51777;
  int D.51776;
  int D.51775;
  int D.51774;
  int D.51773;
  int D.51772;
  int D.51771;
  int Close_Phi.788[1];
  int phi_out_of_ssa.787[1];
  int phi_out_of_ssa.786[1];
  int n;
  int result;
  int offset;
  int _7;
  bool _11;
  signed long _12;
  signed long _17;
  int _31;
  int pretmp_35;
  int pretmp_37;
  int pretmp_39;
  int pretmp_40;
  int pretmp_41;
  int pretmp_42;
  int _53;
  int _54;
  int _55;
  int _56;
  int _57;

  <bb 2>:
  if (source_4(D) < 0)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 3>:
  _7 = this_6(D)->D.34153.D.34111.D.33923._nodes;
  if (source_4(D) >= _7)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  # DEBUG n => 0
  # DEBUG result => 0
  # DEBUG offset => 1
  _31 = this_6(D)->D.34153._n;
  if (_31 <= 0)
    goto <bb 12>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#24 => this_6(D)
  # DEBUG D#25 => source_4(D)
  # DEBUG D#26 => D#25
  # DEBUG source => D#26
  # DEBUG D#27 => D#24
  # DEBUG this => D#27
  __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 297, &__PRETTY_FUNCTION__);

  <bb 6>:
  pretmp_35 = this_6(D)->D.34153._xr;
  pretmp_37 = this_6(D)->D.34153._k;
  pretmp_39 = pretmp_35 * pretmp_37;
  pretmp_40 = pretmp_39 + 1;
  pretmp_41 = pretmp_40 / 2;
  pretmp_42 = pretmp_41 + -1;
  phi_out_of_ssa.786[0] = 1;
  phi_out_of_ssa.787[0] = 0;
  _11 = _31 > 0;
  if (_11 != 0)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 7>:
  _12 = (signed long) _31;
  _17 = _12 + -1;
  phi_out_of_ssa.787_I_lsm.791_49 = phi_out_of_ssa.787[0];
  phi_out_of_ssa.786_I_lsm.793_32 = phi_out_of_ssa.786[0];

  <bb 8>:
  # graphite_IV.790_18 = PHI <0(7), graphite_IV.790_19(9)>
  # phi_out_of_ssa.787_I_lsm.791_60 = PHI <phi_out_of_ssa.787_I_lsm.791_49(7), result_58(9)>
  # phi_out_of_ssa.786_I_lsm.793_10 = PHI <phi_out_of_ssa.786_I_lsm.793_32(7), offset_61(9)>
  # DEBUG n => NULL
  # DEBUG result => NULL
  # DEBUG offset => NULL
  _53 = source_4(D) / phi_out_of_ssa.786_I_lsm.793_10;
  _54 = _53 % pretmp_39;
  _55 = pretmp_42 + _54;
  _56 = _55 % pretmp_39;
  _57 = phi_out_of_ssa.786_I_lsm.793_10 * _56;
  result_58 = _57 + phi_out_of_ssa.787_I_lsm.791_60;
  # DEBUG result => NULL
  offset_61 = phi_out_of_ssa.786_I_lsm.793_10 * pretmp_39;
  # DEBUG offset => NULL
  # DEBUG n => NULL
  # DEBUG n => NULL
  # DEBUG result => NULL
  # DEBUG offset => NULL
  graphite_IV.790_19 = graphite_IV.790_18 + 1;
  if (graphite_IV.790_18 < _17)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  # Close_Phi.788_I_lsm.795_50 = PHI <result_58(8)>
  Close_Phi.788[0] = Close_Phi.788_I_lsm.795_50;

  <bb 11>:
  result_65 = Close_Phi.788[0];
  Cross_BB_scalar_dependence.789[0] = result_65;
  result_36 = Cross_BB_scalar_dependence.789[0];

  <bb 12>:
  # result_33 = PHI <result_36(11), 0(4)>
  return result_33;

}



;; Function virtual int NeighborTrafficPattern::dest(int) (_ZN22NeighborTrafficPattern4destEi, funcdef_no=1791, decl_uid=34166, cgraph_uid=461, symbol_order=462)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual int NeighborTrafficPattern::dest(int) (struct NeighborTrafficPattern * const this, int source)
{
  bool Close_Phi.805_I_lsm.813;
  int Close_Phi.805_I_lsm.812;
  bool phi_out_of_ssa.803_I_lsm.811;
  int phi_out_of_ssa.803_I_lsm.810;
  bool phi_out_of_ssa.804_I_lsm.809;
  int phi_out_of_ssa.804_I_lsm.808;
  signed long graphite_IV.807;
  int Cross_BB_scalar_dependence.806[1];
  int D.51817;
  int D.51816;
  int D.51815;
  int D.51814;
  int D.51813;
  int D.51812;
  int D.51811;
  int D.51810;
  int D.51809;
  int D.51808;
  int Close_Phi.805[1];
  int phi_out_of_ssa.804[1];
  int phi_out_of_ssa.803[1];
  int n;
  int result;
  int offset;
  int _7;
  bool _11;
  signed long _12;
  int _28;
  int pretmp_32;
  int pretmp_34;
  int pretmp_36;
  signed long _45;
  int _50;
  int _51;
  int _52;
  int _53;
  int _54;

  <bb 2>:
  if (source_4(D) < 0)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 3>:
  _7 = this_6(D)->D.34192.D.34111.D.33923._nodes;
  if (source_4(D) >= _7)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  # DEBUG n => 0
  # DEBUG result => 0
  # DEBUG offset => 1
  _28 = this_6(D)->D.34192._n;
  if (_28 <= 0)
    goto <bb 12>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#28 => this_6(D)
  # DEBUG D#29 => source_4(D)
  # DEBUG D#30 => D#29
  # DEBUG source => D#30
  # DEBUG D#31 => D#28
  # DEBUG this => D#31
  __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 318, &__PRETTY_FUNCTION__);

  <bb 6>:
  pretmp_32 = this_6(D)->D.34192._xr;
  pretmp_34 = this_6(D)->D.34192._k;
  pretmp_36 = pretmp_32 * pretmp_34;
  phi_out_of_ssa.803[0] = 1;
  phi_out_of_ssa.804[0] = 0;
  _11 = _28 > 0;
  if (_11 != 0)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 7>:
  _12 = (signed long) _28;
  _45 = _12 + -1;
  phi_out_of_ssa.804_I_lsm.808_43 = phi_out_of_ssa.804[0];
  phi_out_of_ssa.803_I_lsm.810_29 = phi_out_of_ssa.803[0];

  <bb 8>:
  # graphite_IV.807_46 = PHI <0(7), graphite_IV.807_47(9)>
  # phi_out_of_ssa.804_I_lsm.808_57 = PHI <phi_out_of_ssa.804_I_lsm.808_43(7), result_55(9)>
  # phi_out_of_ssa.803_I_lsm.810_10 = PHI <phi_out_of_ssa.803_I_lsm.810_29(7), offset_58(9)>
  # DEBUG n => NULL
  # DEBUG result => NULL
  # DEBUG offset => NULL
  _50 = source_4(D) / phi_out_of_ssa.803_I_lsm.810_10;
  _51 = _50 % pretmp_36;
  _52 = _51 + 1;
  _53 = _52 % pretmp_36;
  _54 = phi_out_of_ssa.803_I_lsm.810_10 * _53;
  result_55 = _54 + phi_out_of_ssa.804_I_lsm.808_57;
  # DEBUG result => NULL
  offset_58 = phi_out_of_ssa.803_I_lsm.810_10 * pretmp_36;
  # DEBUG offset => NULL
  # DEBUG n => NULL
  # DEBUG n => NULL
  # DEBUG result => NULL
  # DEBUG offset => NULL
  graphite_IV.807_47 = graphite_IV.807_46 + 1;
  if (graphite_IV.807_46 < _45)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  # Close_Phi.805_I_lsm.812_44 = PHI <result_55(8)>
  Close_Phi.805[0] = Close_Phi.805_I_lsm.812_44;

  <bb 11>:
  result_62 = Close_Phi.805[0];
  Cross_BB_scalar_dependence.806[0] = result_62;
  result_33 = Cross_BB_scalar_dependence.806[0];

  <bb 12>:
  # result_30 = PHI <result_33(11), 0(4)>
  return result_30;

}



;; Function virtual int UniformBackgroundTrafficPattern::dest(int) (_ZN31UniformBackgroundTrafficPattern4destEi, funcdef_no=1814, decl_uid=35882, cgraph_uid=484, symbol_order=485)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual int UniformBackgroundTrafficPattern::dest(int) (struct UniformBackgroundTrafficPattern * const this, int source)
{
  const struct _Rb_tree_node * __y;
  int _5;
  int _6;
  int _7;
  long int _8;
  long int _11;
  long int _12;
  int _13;
  int _15;
  const int _16;
  const int _20;
  int prephitmp_22;
  int pretmp_27;
  int _33;
  const struct _Rb_tree_node_base * pretmp_36;

  <bb 2>:
  if (source_2(D) < 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _5 = this_4(D)->D.35913.D.35001._nodes;
  if (source_2(D) >= _5)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  # DEBUG D#434 => this_4(D)
  # DEBUG D#435 => source_2(D)
  # DEBUG D#436 => D#435
  # DEBUG source => D#436
  # DEBUG D#437 => D#434
  # DEBUG this => D#437
  __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 404, &__PRETTY_FUNCTION__);

  <bb 5>:
  pretmp_36 = &MEM[(const struct _Rb_tree *)this_4(D) + 16B]._M_impl._M_header;

  <bb 6>:
  # prephitmp_22 = PHI <_5(5), pretmp_27(17)>
  # DEBUG D#563 => this_4(D)->D.35913.D.35001._nodes
  # DEBUG max => D#563 + -1
  _8 = ran_next ();
  _11 = (long int) prephitmp_22;
  _12 = _8 % _11;
  _13 = (int) _12;
  # DEBUG result => _13
  # DEBUG D#433 => &this_4(D)->_excluded
  # DEBUG this => D#433
  # DEBUG __x => &result
  # DEBUG D#429 => &MEM[(const struct set *)D#433]._M_t
  # DEBUG this => D#429
  # DEBUG D#562 => &MEM[(const struct _Rb_tree *)this_4(D) + 16B]._M_impl._M_header
  # DEBUG this => NULL
  # DEBUG __x => D#562
  # DEBUG D#430 => &MEM[(const struct set *)D#433]._M_t
  # DEBUG this => D#430
  # DEBUG __k => &result
  # DEBUG this => D#430
  __y_14 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 32B];
  # DEBUG D#132 => D#430
  # DEBUG this => D#132
  # DEBUG D#420 => D#430
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &result
  # DEBUG __y => D#562
  # DEBUG __x => __y_14
  if (__y_14 == 0B)
    goto <bb 18>;
  else
    goto <bb 9>;

  <bb 7>:
  # __y_10 = PHI <__y_18(12), __y_17(11)>
  # __y_23 = PHI <__y_38(12), __y_24(11)>
  # DEBUG __y => __y_23
  # DEBUG __x => __y_10
  if (__y_10 == 0B)
    goto <bb 13>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 10>;

  <bb 9>:

  <bb 10>:
  # __y_24 = PHI <__y_14(9), __y_10(8)>
  # __y_38 = PHI <pretmp_36(9), __y_23(8)>
  # DEBUG __y => __y_38
  # DEBUG __x => __y_24
  # DEBUG __x => __y_24
  # DEBUG __x => __y_24
  # DEBUG this => __y_24
  # DEBUG D#417 => &__y_24->_M_value_field
  # DEBUG __r => D#417
  # DEBUG __x => D#417
  # DEBUG this => D#131
  # DEBUG D#418 => &D#419->_M_impl._M_key_compare
  # DEBUG D#133 => D#418
  _16 = MEM[(const int &)__y_24 + 32];
  # DEBUG D#134 => D#417
  # DEBUG D#135 => &result
  # DEBUG this => D#133
  # DEBUG __x => D#134
  # DEBUG __y => D#135
  if (_13 <= _16)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG __y => __y_24
  __y_17 = MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B];
  # DEBUG D#206 => __y_24
  # DEBUG __x => D#206
  # DEBUG __x => NULL
  goto <bb 7>;

  <bb 12>:
  __y_18 = MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B];
  # DEBUG D#207 => __y_24
  # DEBUG __x => D#207
  # DEBUG __x => NULL
  goto <bb 7>;

  <bb 13>:
  # __y_19 = PHI <__y_23(7)>

  <bb 20>:
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG __j$_M_node => __y_19
  # DEBUG this => D#430
  # DEBUG this => NULL
  # DEBUG __x => D#562
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_19 == pretmp_36)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # _7 = PHI <_13(20)>
  goto <bb 19>;

  <bb 15>:
  # DEBUG __x => __y_19
  # DEBUG __x => __y_19
  # DEBUG this => __y_19
  # DEBUG D#426 => &__y_19->_M_value_field
  # DEBUG __r => D#426
  # DEBUG __x => D#426
  # DEBUG this => D#131
  # DEBUG D#428 => &MEM[(const struct _Rb_tree *)D#430]._M_impl._M_key_compare
  # DEBUG D#133 => D#428
  # DEBUG D#134 => &result
  _20 = MEM[(const int &)__y_19 + 32];
  # DEBUG D#135 => D#426
  # DEBUG this => D#133
  # DEBUG __x => D#134
  # DEBUG __y => D#135
  # DEBUG D#427 => {CLOBBER}
  # DEBUG __j$_M_node => D#427
  # DEBUG this => NULL
  # DEBUG __x => NULL
  if (_13 < _20)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # _15 = PHI <_13(15)>
  goto <bb 19>;

  <bb 17>:
  pretmp_27 = this_4(D)->D.35913.D.35001._nodes;
  goto <bb 6>;

  <bb 18>:
  # _6 = PHI <_13(6)>

  <bb 19>:
  # _33 = PHI <_7(14), _6(18), _15(16)>
  # DEBUG D#431 => {CLOBBER}
  # DEBUG result => D#431
  return _33;

}



;; Function virtual int HotSpotTrafficPattern::dest(int) (_ZN21HotSpotTrafficPattern4destEi, funcdef_no=1838, decl_uid=36094, cgraph_uid=508, symbol_order=509)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual int HotSpotTrafficPattern::dest(int) (struct HotSpotTrafficPattern * const this, int source)
{
  int pct;
  size_t i;
  const int limit;
  int D.51963;
  static const char __PRETTY_FUNCTION__[45] = "virtual int HotSpotTrafficPattern::dest(int)";
  int _1;
  int * const _2;
  int _6;
  int * const _7;
  long int _8;
  int _9;
  long int _11;
  long int _12;
  long int _13;
  int * const _15;
  int * const _16;
  int _18;
  long int _19;
  int _20;
  long int _21;
  long int _22;
  long unsigned int _34;
  int & _35;
  int & _38;
  int _39;
  int * _42;
  int _43;
  int _44;
  size_type _48;
  long int _49;
  long int _50;
  long int _51;
  long int _52;
  long unsigned int _53;
  int * _54;
  long unsigned int _56;
  long unsigned int _61;

  <bb 2>:
  if (source_3(D) < 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _6 = this_5(D)->D.36118._nodes;
  if (source_3(D) >= _6)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 508, &__PRETTY_FUNCTION__);

  <bb 5>:
  # DEBUG D#120 => &this_5(D)->_hotspots
  _15 = MEM[(int * *)this_5(D) + 16B];
  # DEBUG D#99 => D#120
  _16 = MEM[(int * *)this_5(D) + 24B];
  # DEBUG D#99 => D#120
  # DEBUG this => D#99
  # DEBUG this => D#99
  _13 = (long int) _16;
  _12 = (long int) _15;
  _11 = _13 - _12;
  _8 = _11 /[ex] 4;
  if (_8 == 1)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#121 => &this_5(D)->_hotspots
  # DEBUG D#100 => D#121
  # DEBUG __n => 0
  # DEBUG this => D#100
  _9 = *_15;
  goto <bb 19>;

  <bb 7>:
  # DEBUG D#127 => source_3(D)
  # DEBUG this => this_5(D)
  # DEBUG D#128 => D#127
  # DEBUG source => D#128
  _18 = this_5(D)->_max_val;
  # DEBUG max => _18
  _19 = ran_next ();
  _20 = _18 + 1;
  _21 = (long int) _20;
  _22 = _19 % _21;
  pct_23 = (int) _22;
  # DEBUG pct => pct_23
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG pct => pct_23
  # DEBUG D#122 => &this_5(D)->_hotspots
  _7 = MEM[(int * *)this_5(D) + 16B];
  # DEBUG D#99 => D#122
  _2 = MEM[(int * *)this_5(D) + 24B];
  # DEBUG D#99 => D#122
  # DEBUG this => D#99
  # DEBUG this => D#99
  _52 = (long int) _2;
  _51 = (long int) _7;
  _50 = _52 - _51;
  _49 = _50 /[ex] 4;
  _48 = (size_type) _49;
  _53 = _48 + 18446744073709551615;
  if (_53 != 0)
    goto <bb 8>;
  else
    goto <bb 16>;

  <bb 8>:
  # DEBUG D#123 => &this_5(D)->_rates
  _54 = MEM[(int * *)this_5(D) + 40B];
  # DEBUG D#100 => D#123
  # DEBUG __n => 0
  # DEBUG this => D#100
  limit_57 = *_54;
  # DEBUG limit => limit_57
  if (pct_23 < limit_57)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 9>:
  # DEBUG D#123 => &this_5(D)->_rates
  # DEBUG D#100 => D#123
  # DEBUG __n => i_41
  # DEBUG this => D#100
  _34 = i_41 * 4;
  _35 = _54 + _34;
  limit_36 = *_35;
  # DEBUG limit => limit_36
  if (limit_36 > pct_40)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 14>;

  <bb 11>:
  # _56 = PHI <_34(9)>

  <bb 12>:
  # _61 = PHI <_56(11), 0(8)>

  <bb 20>:
  # DEBUG D#124 => &this_5(D)->_hotspots
  # DEBUG D#100 => D#124
  # DEBUG __n => 0
  # DEBUG this => D#100
  _38 = _7 + _61;
  _39 = *_38;
  goto <bb 19>;

  <bb 13>:

  <bb 14>:
  # i_60 = PHI <0(13), i_41(10)>
  # limit_62 = PHI <limit_57(13), limit_36(10)>
  # pct_63 = PHI <pct_23(13), pct_40(10)>
  # DEBUG i => i_60
  # DEBUG pct => pct_63
  # DEBUG D#122 => &this_5(D)->_hotspots
  # DEBUG D#99 => D#122
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG D#123 => &this_5(D)->_rates
  # DEBUG D#100 => D#123
  # DEBUG __n => i_60
  # DEBUG this => D#100
  # DEBUG limit => limit_62
  pct_40 = pct_63 - limit_62;
  # DEBUG pct => pct_40
  i_41 = i_60 + 1;
  # DEBUG i => i_41
  # DEBUG i => i_41
  # DEBUG pct => pct_40
  # DEBUG D#122 => &this_5(D)->_hotspots
  # DEBUG D#99 => D#122
  # DEBUG D#99 => D#122
  # DEBUG this => D#99
  # DEBUG this => D#99
  if (i_41 < _53)
    goto <bb 9>;
  else
    goto <bb 15>;

  <bb 15>:
  # pct_55 = PHI <pct_40(14)>

  <bb 16>:
  # pct_64 = PHI <pct_55(15), pct_23(7)>
  # DEBUG D#125 => &this_5(D)->_rates
  # DEBUG this => D#125
  # DEBUG this => D#125
  # DEBUG D#118 => &D#125->D.34940._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#118
  _42 = MEM[(int * const &)this_5(D) + 48];
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _43 = MEM[(int &)_42 + 18446744073709551612];
  if (_43 <= pct_64)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  __assert_fail ("_rates.back() > pct", "traffic.cpp", 524, &__PRETTY_FUNCTION__);

  <bb 18>:
  # DEBUG D#126 => &this_5(D)->_hotspots
  # DEBUG this => D#126
  # DEBUG this => D#126
  # DEBUG D#118 => &D#126->D.34940._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#118
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _44 = MEM[(int &)_2 + 18446744073709551612];

  <bb 19>:
  # _1 = PHI <_9(6), _44(18), _39(20)>

  <bb 21>:
  return _1;

}



;; Function TransposeTrafficPattern::TransposeTrafficPattern(int) (_ZN23TransposeTrafficPatternC2Ei, funcdef_no=1766, decl_uid=34008, cgraph_uid=436, symbol_order=437)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
TransposeTrafficPattern::TransposeTrafficPattern(int) (struct TransposeTrafficPattern * const this, int nodes)
{
  bool this___shift_lsm.859;
  int this___shift_lsm.858;
  int _13;
  unsigned int _16;
  unsigned int _17;
  int pretmp_24;
  int prephitmp_25;
  int prephitmp_26;
  int _27;
  int _30;
  int _31;

  <bb 2>:
  # DEBUG D#577 => &this_4(D)->D.34011
  # DEBUG this => D#577
  # DEBUG nodes => nodes_7(D)
  # DEBUG D#69 => &D#577->D.33950
  # DEBUG this => D#69
  # DEBUG nodes => nodes_7(D)
  # DEBUG D#66 => &D#69->D.33923
  # DEBUG this => D#66
  # DEBUG nodes => nodes_7(D)
  MEM[(struct TrafficPattern *)this_4(D)]._vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  MEM[(struct TrafficPattern *)this_4(D)]._nodes = nodes_7(D);
  if (nodes_7(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#62 => D#66
  # DEBUG D#63 => nodes_7(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 4>:
  MEM[(struct BitPermutationTrafficPattern *)this_4(D)].D.33950.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV28BitPermutationTrafficPattern + 16B];
  _30 = -nodes_7(D);
  _31 = nodes_7(D) & _30;
  if (nodes_7(D) != _31)
    goto <bb 5>;
  else
    goto <bb 13>;

  <bb 5>:
  # DEBUG __out => &cout
  # DEBUG __s => "Error: Bit permutation traffic patterns require the number of "
  # DEBUG __s => "Error: Bit permutation traffic patterns require the number of "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Bit permutation traffic patterns require the number of ", 62);

  <bb 6>:
  # DEBUG __out => &cout
  # DEBUG __s => "nodes to be a power of two."
  # DEBUG __s => "nodes to be a power of two."
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "nodes to be a power of two.", 27);
  goto <bb 8>;

<L8>:
  goto <bb 12> (<L6>);

  <bb 8>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (&cout);
  goto <bb 10>;

<L9>:
  goto <bb 12> (<L6>);

  <bb 10>:
  exit (-1);

<L7>:

<L6>:
  # DEBUG D#68 => &D#577->D.33950
  # DEBUG this => D#68
  # DEBUG D#67 => &D#68->D.33923
  # DEBUG this => D#67
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  resx 3

  <bb 13>:
  this_4(D)->D.34011.D.33950.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV23TransposeTrafficPattern + 16B];
  this_4(D)->_shift = 0;
  # DEBUG nodes => nodes_7(D)
  nodes_47 = nodes_7(D) >> 1;
  # DEBUG nodes => nodes_47
  if (nodes_47 != 0)
    goto <bb 14>;
  else
    goto <bb 24>;

  <bb 14>:

  <bb 15>:
  # nodes_48 = PHI <nodes_47(14), nodes_11(16)>
  # prephitmp_26 = PHI <0(14), _13(16)>
  # DEBUG nodes => nodes_48
  _13 = prephitmp_26 + 1;
  # DEBUG nodes => nodes_48
  nodes_11 = nodes_48 >> 1;
  # DEBUG nodes => nodes_11
  if (nodes_11 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  goto <bb 15>;

  <bb 17>:
  # _27 = PHI <_13(15)>

  <bb 27>:
  this_4(D)->_shift = _27;
  _16 = (unsigned int) _27;
  _17 = _16 & 1;
  if (_17 != 0)
    goto <bb 18>;
  else
    goto <bb 23>;

  <bb 18>:
  # DEBUG __out => &cout
  # DEBUG __s => "Error: Transpose traffic pattern requires the number of nodes to "
  # DEBUG __s => "Error: Transpose traffic pattern requires the number of nodes to "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Transpose traffic pattern requires the number of nodes to ", 65);

  <bb 19>:
  # DEBUG __out => &cout
  # DEBUG __s => "be an even power of two."
  # DEBUG __s => "be an even power of two."
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "be an even power of two.", 24);
  goto <bb 21>;

<L11>:
  goto <bb 26> (<L5>);

  <bb 21>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (&cout);
  goto <bb 10>;

<L12>:
  goto <bb 26> (<L5>);

  <bb 23>:
  pretmp_24 = _27 >> 1;

  <bb 24>:
  # prephitmp_25 = PHI <pretmp_24(23), 0(13)>

  <bb 28>:
  this_4(D)->_shift = prephitmp_25;
  return;

<L10>:

<L5>:
  # DEBUG D#75 => &this_4(D)->D.34011
  # DEBUG this => D#75
  # DEBUG D#70 => &D#75->D.33950
  # DEBUG this => D#70
  # DEBUG D#67 => &D#70->D.33923
  # DEBUG this => D#67
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  resx 1

}



;; Function void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE6resizeEmi, funcdef_no=1891, decl_uid=34605, cgraph_uid=561, symbol_order=562)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, size_type __new_size, value_type __x)
{
  const long unsigned int D.52565;
  const size_type __len;
  size_type D.52564;
  size_type __n;
  int * D.52555;
  const ptrdiff_t _Num;
  int * D.52546;
  value_type __x_copy;
  const size_type __elems_after;
  int * __new_finish;
  int * __first;
  const ptrdiff_t _Num;
  int * __first;
  long unsigned int __n;
  int * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  int * __first;
  int * const __position;
  struct iterator __position;
  size_type __n;
  struct iterator __position;
  long int _5;
  long unsigned int _7;
  int * _8;
  int * const _9;
  long int _11;
  long int _12;
  long int _13;
  const ptrdiff_t pretmp_15;
  long int pretmp_18;
  int * _19;
  long int _20;
  long int pretmp_21;
  long int _23;
  long int _24;
  long unsigned int _25;
  long unsigned int _28;
  long int prephitmp_31;
  bool _32;
  long unsigned int prephitmp_35;
  long unsigned int pretmp_38;
  long unsigned int prephitmp_39;
  int * pretmp_40;
  long unsigned int _60;
  long unsigned int _71;
  int * pretmp_73;
  long unsigned int _74;
  int * _82;
  long unsigned int prephitmp_88;
  int * prephitmp_89;
  long unsigned int _92;
  int * _96;
  int * iftmp.79_97;
  long unsigned int _105;
  int * prephitmp_107;
  const ptrdiff_t pretmp_111;
  long unsigned int pretmp_112;
  long int pretmp_114;
  bool _115;
  long int pretmp_116;
  int * pretmp_118;
  const ptrdiff_t prephitmp_122;
  const ptrdiff_t prephitmp_123;
  long unsigned int pretmp_124;
  bool _130;
  long unsigned int _136;

  <bb 2>:
  _9 = MEM[(int * *)this_3(D)];
  # DEBUG D#99 => this_3(D)
  __first_10 = MEM[(int * *)this_3(D) + 8B];
  # DEBUG D#99 => this_3(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  _5 = (long int) __first_10;
  _11 = (long int) _9;
  _12 = _5 - _11;
  _13 = _12 /[ex] 4;
  _14 = (const long unsigned int) _13;
  if (__new_size_4(D) > _14)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 3>:
  # DEBUG D#99 => this_3(D)
  # DEBUG D#99 => this_3(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  __n_6 = __new_size_4(D) - _14;
  # DEBUG this => this_3(D)
  # DEBUG D#118 => &this_3(D)->D.34940._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#118
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_6
  # DEBUG __x => &__x
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_6
  # DEBUG __x => &__x
  # DEBUG __position => __first_10
  _19 = this_3(D)->D.34940._M_impl._M_end_of_storage;
  _20 = (long int) _19;
  _23 = _20 - _5;
  _24 = _23 /[ex] 4;
  _25 = (long unsigned int) _24;
  if (__n_6 <= _25)
    goto <bb 4>;
  else
    goto <bb 8>;

  <bb 4>:

  <bb 5>:
  # __n_138 = PHI <__n_6(4), __n_46(6)>
  # __first_132 = PHI <__first_10(4), __first_47(6)>
  # DEBUG __niter => __n_138
  # DEBUG __first => __first_132
  *__first_132 = __x_148(D);
  __n_46 = __n_138 + 18446744073709551615;
  # DEBUG __niter => __n_46
  __first_47 = __first_132 + 4;
  # DEBUG __first => __first_47
  # DEBUG __niter => __n_46
  # DEBUG __first => __first_47
  if (__n_46 == 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 28>:
  _28 = __n_6 * 4;
  __first_125 = __first_10 + _28;
  this_3(D)->D.34940._M_impl._M_finish = __first_125;
  # DEBUG D#476 => &this_3(D)->D.34940
  # DEBUG this => D#476
  # DEBUG this => &__position
  # DEBUG __first => __first_10
  # DEBUG __last => __first_10
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#246
  # DEBUG D#245 => D#246
  # DEBUG D#244 => D#245
  # DEBUG __first => __first_10
  # DEBUG __last => __first_10
  # DEBUG __result => __first_125
  # DEBUG D.52341 => D#244
  # DEBUG __first => __first_10
  # DEBUG __last => __first_10
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => __first_10
  # DEBUG __last => __first_10
  # DEBUG __result => __first_125
  # DEBUG __first => __first_10
  # DEBUG __last => __first_10
  # DEBUG __result => __first_125
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __first => __first_10
  # DEBUG __last => __first_10
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => 0
  # DEBUG this => &__position
  # DEBUG D#251 => &__x_copy
  # DEBUG __first => __first_10
  # DEBUG __last => __first_10
  # DEBUG D#250 => D#251
  # DEBUG __value => D#250
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG D#249 => D#250
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __value => D#249
  # DEBUG __tmp => __x_148(D)
  # DEBUG __first => __first_10
  goto <bb 33>;

  <bb 8>:
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_6
  # DEBUG __n => __n_6
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#395 => this_3(D)
  # DEBUG this => D#395
  # DEBUG D#394 => D#395
  # DEBUG D#393 => &D#394->D.34940
  # DEBUG this => D#393
  # DEBUG __a => D#392
  # DEBUG D#391 => D#392
  # DEBUG D#338 => D#391
  # DEBUG this => D#338
  # DEBUG D#99 => this_3(D)
  # DEBUG D#99 => this_3(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  _105 = 4611686018427387903 - _14;
  if (__n_6 > _105)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 10>:
  # DEBUG D#99 => this_3(D)
  # DEBUG D#99 => this_3(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG D#99 => this_3(D)
  # DEBUG D#99 => this_3(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG __a => &D.52565
  # DEBUG __b => &__n
  _92 = MAX_EXPR <__n_6, _14>;
  __len_109 = _14 + _92;
  # DEBUG __len => __len_109
  # DEBUG D#99 => this_3(D)
  # DEBUG D#99 => this_3(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG D#395 => this_3(D)
  # DEBUG this => D#395
  # DEBUG D#394 => D#395
  # DEBUG D#393 => &D#394->D.34940
  # DEBUG this => D#393
  # DEBUG __a => D#392
  # DEBUG D#391 => D#392
  # DEBUG D#338 => D#391
  # DEBUG this => D#338
  _115 = __len_109 > 4611686018427387903;
  _130 = _14 > __len_109;
  _32 = _115 | _130;
  if (_32 != 0)
    goto <bb 11>;
  else
    goto <bb 26>;

  <bb 11>:
  # prephitmp_35 = PHI <18446744073709551612(10), pretmp_112(27)>
  # DEBUG __len => NULL
  # DEBUG this => this_3(D)
  # DEBUG D#119 => &this_3(D)->D.34940._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#119
  # DEBUG __lhs => &__position
  # DEBUG __rhs => NULL
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG D#487 => _12 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#487
  # DEBUG D#486 => &this_3(D)->D.34940
  # DEBUG D#346 => D#486
  # DEBUG __n => NULL
  # DEBUG this => D#346
  # DEBUG D#345 => D#346
  # DEBUG D#344 => &D#345->_M_impl
  # DEBUG D#343 => D#344
  # DEBUG __n => NULL
  # DEBUG __a => D#343
  # DEBUG D#342 => D#343
  # DEBUG D#340 => D#342
  # DEBUG D#341 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#340
  # DEBUG D.52553 => D#341
  # DEBUG D#339 => D#340
  # DEBUG D#338 => D#339
  # DEBUG this => D#338
  _96 = operator new (prephitmp_35);
  pretmp_118 = this_3(D)->D.34940._M_impl._M_start;
  pretmp_116 = (long int) pretmp_118;
  pretmp_114 = _5 - pretmp_116;
  pretmp_15 = pretmp_114 /[ex] 4;
  pretmp_73 = this_3(D)->D.34940._M_impl._M_finish;
  pretmp_18 = (long int) pretmp_73;
  pretmp_21 = pretmp_18 - _5;
  pretmp_111 = pretmp_21 /[ex] 4;
  pretmp_38 = (long unsigned int) pretmp_21;
  pretmp_40 = _96 + prephitmp_35;

  <bb 12>:
  # iftmp.79_97 = PHI <0B(26), _96(11)>
  # prephitmp_107 = PHI <_9(26), pretmp_118(11)>
  # prephitmp_31 = PHI <_12(26), pretmp_114(11)>
  # prephitmp_122 = PHI <_13(26), pretmp_15(11)>
  # prephitmp_123 = PHI <0(26), pretmp_111(11)>
  # prephitmp_39 = PHI <0(26), pretmp_38(11)>
  # prephitmp_89 = PHI <0B(26), pretmp_40(11)>

  <bb 30>:
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#470 => &this_3(D)->D.34940
  # DEBUG this => D#470
  _60 = (long unsigned int) _12;
  __first_61 = iftmp.79_97 + _60;
  # DEBUG D#376 => &__x
  # DEBUG __first => __first_61
  # DEBUG __n => __n_6
  # DEBUG D#375 => D#376
  # DEBUG __x => D#375
  # DEBUG D.52431 => D#377
  # DEBUG D#374 => D#375
  # DEBUG __first => __first_61
  # DEBUG __n => __n_6
  # DEBUG D#373 => D#374
  # DEBUG __x => D#373
  # DEBUG __assignable => 1
  # DEBUG D#372 => D#373
  # DEBUG __first => __first_61
  # DEBUG __n => __n_6
  # DEBUG D#371 => D#372
  # DEBUG __x => D#371
  # DEBUG D#308 => D#371
  # DEBUG __first => __first_61
  # DEBUG __n => __n_6
  # DEBUG D#307 => D#308
  # DEBUG __value => D#307
  # DEBUG __it => __first_61
  # DEBUG __it => __first_61
  # DEBUG D#306 => D#307
  # DEBUG __first => NULL
  # DEBUG __n => __n_6
  # DEBUG __value => D#306
  # DEBUG __tmp => __x_148(D)
  # DEBUG __niter => __n_6
  # DEBUG __niter => __n_6
  # DEBUG __first => __first_61

  <bb 13>:
  # __n_53 = PHI <__n_65(14), __n_6(30)>
  # __first_90 = PHI <__first_66(14), __first_61(30)>
  # DEBUG __niter => __n_53
  # DEBUG __first => __first_90
  *__first_90 = __x_148(D);
  __n_65 = __n_53 + 18446744073709551615;
  # DEBUG __niter => __n_65
  __first_66 = __first_90 + 4;
  # DEBUG __first => __first_66
  # DEBUG __niter => __n_65
  # DEBUG __first => __first_66
  if (__n_65 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:

  <bb 29>:
  # DEBUG __new_finish => 0B
  # DEBUG D#471 => &this_3(D)->D.34940
  # DEBUG this => D#471
  # DEBUG this => &__position
  # DEBUG D#599 => this_3(D)->D.34940._M_impl._M_start
  # DEBUG __first => D#599
  # DEBUG __last => __first_10
  # DEBUG __result => NULL
  # DEBUG __alloc => D#248
  # DEBUG D#247 => D#248
  # DEBUG D#244 => D#247
  # DEBUG __first => D#599
  # DEBUG __last => __first_10
  # DEBUG __result => NULL
  # DEBUG D.52454 => D#244
  # DEBUG __first => D#599
  # DEBUG __last => __first_10
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#599
  # DEBUG __last => __first_10
  # DEBUG __result => NULL
  # DEBUG __first => D#599
  # DEBUG __last => __first_10
  # DEBUG __result => NULL
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __it => D#599
  # DEBUG __it => D#599
  # DEBUG __first => D#599
  # DEBUG __last => __first_10
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __it => D#599
  # DEBUG __it => D#599
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG D#598 => (long int) D#599
  # DEBUG D#597 => _5 - D#598
  # DEBUG _Num => D#597 /[ex] 4
  if (prephitmp_122 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  pretmp_124 = (long unsigned int) prephitmp_31;
  goto <bb 18>;

  <bb 17>:
  _71 = (long unsigned int) prephitmp_31;
  __builtin_memmove (iftmp.79_97, prephitmp_107, _71);

  <bb 18>:
  # prephitmp_88 = PHI <pretmp_124(16), _71(17)>
  # DEBUG D#596 => (long unsigned int) D#597
  # DEBUG __new_finish => iftmp.79_97 + D#596
  _74 = __n_6 * 4;
  _136 = _74 + prephitmp_88;
  __new_finish_75 = iftmp.79_97 + _136;
  # DEBUG __new_finish => __new_finish_75
  # DEBUG D#472 => &this_3(D)->D.34940
  # DEBUG this => D#472
  # DEBUG D#595 => this_3(D)->D.34940._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => __first_10
  # DEBUG __last => D#595
  # DEBUG __result => __new_finish_75
  # DEBUG __alloc => D#248
  # DEBUG D#247 => D#248
  # DEBUG D#244 => D#247
  # DEBUG __first => __first_10
  # DEBUG __last => D#595
  # DEBUG __result => __new_finish_75
  # DEBUG D.52488 => D#244
  # DEBUG __first => __first_10
  # DEBUG __last => D#595
  # DEBUG __result => __new_finish_75
  # DEBUG __assignable => 1
  # DEBUG __first => __first_10
  # DEBUG __last => D#595
  # DEBUG __result => __new_finish_75
  # DEBUG __first => __first_10
  # DEBUG __last => D#595
  # DEBUG __result => __new_finish_75
  # DEBUG __it => D#595
  # DEBUG __it => D#595
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __first => __first_10
  # DEBUG __last => D#595
  # DEBUG __result => __new_finish_75
  # DEBUG __it => __new_finish_75
  # DEBUG __it => __new_finish_75
  # DEBUG __it => D#595
  # DEBUG __it => D#595
  # DEBUG __it => __first_10
  # DEBUG __it => __first_10
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG D#594 => (long int) D#595
  # DEBUG D#593 => D#594 - _5
  # DEBUG _Num => D#593 /[ex] 4
  if (prephitmp_123 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  __builtin_memmove (__new_finish_75, __first_10, prephitmp_39);

  <bb 20>:
  _82 = __new_finish_75 + prephitmp_39;
  # DEBUG __new_finish => _82
  # DEBUG D#473 => &this_3(D)->D.34940
  # DEBUG this => D#473
  # DEBUG D#485 => this_3(D)->D.34940._M_impl._M_finish
  # DEBUG D#484 => this_3(D)->D.34940._M_impl._M_start
  # DEBUG __first => D#484
  # DEBUG __last => D#485
  # DEBUG D.49960 => NULL
  # DEBUG D#140 => D#484
  # DEBUG D#141 => D#485
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#483 => this_3(D)->D.34940._M_impl._M_end_of_storage
  # DEBUG D#482 => (long int) D#483
  # DEBUG D#481 => (long int) D#599
  # DEBUG D#480 => D#482 - D#481
  # DEBUG D#479 => D#480 /[ex] 4
  # DEBUG D#478 => (long unsigned int) D#479
  # DEBUG D#477 => &this_3(D)->D.34940
  # DEBUG this => D#477
  # DEBUG __p => D#599
  # DEBUG __n => D#478
  if (prephitmp_107 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#159 => &D#477->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#478
  # DEBUG __p => D#599
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => D#599
  # DEBUG this => D#153
  # DEBUG D.52526 => D#154
  operator delete (prephitmp_107);

  <bb 22>:

  <bb 31>:
  this_3(D)->D.34940._M_impl._M_start = iftmp.79_97;
  this_3(D)->D.34940._M_impl._M_finish = _82;
  this_3(D)->D.34940._M_impl._M_end_of_storage = prephitmp_89;
  goto <bb 33>;

  <bb 23>:
  # DEBUG D#99 => this_3(D)
  # DEBUG D#99 => this_3(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  if (__new_size_4(D) < _14)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _7 = __new_size_4(D) * 4;
  _8 = _9 + _7;
  # DEBUG D#145 => this_3(D)
  # DEBUG __pos => _8
  # DEBUG D#144 => D#145
  # DEBUG this => D#144
  # DEBUG D#142 => &D#144->D.34940
  # DEBUG this => D#142
  # DEBUG D#143 => D#144->D.34940._M_impl._M_finish
  # DEBUG __first => _8
  # DEBUG __last => D#143
  # DEBUG D.45839 => NULL
  # DEBUG D#140 => _8
  # DEBUG D#141 => D#143
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  MEM[(int * *)this_3(D) + 8B] = _8;

  <bb 25>:

  <bb 33>:

  <bb 32>:
  return;

  <bb 26>:
  # DEBUG __len => NULL
  # DEBUG this => this_3(D)
  # DEBUG D#119 => &this_3(D)->D.34940._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#119
  # DEBUG __lhs => &__position
  # DEBUG __rhs => NULL
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG D#487 => _12 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#487
  # DEBUG D#486 => &this_3(D)->D.34940
  # DEBUG D#346 => D#486
  # DEBUG __n => NULL
  # DEBUG this => D#346
  # DEBUG D#345 => D#346
  if (__len_109 != 0)
    goto <bb 27>;
  else
    goto <bb 12>;

  <bb 27>:
  pretmp_112 = __len_109 * 4;
  goto <bb 11>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*] (_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_, funcdef_no=1983, decl_uid=36828, cgraph_uid=653, symbol_order=654)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*] (struct vector * const this, struct iterator __position, const struct basic_string & __x)
{
  size_type __dnew;
  struct basic_string * D.52842;
  struct basic_string * __first;
  struct basic_string * __result;
  size_type __dnew;
  struct basic_string * D.52768;
  struct basic_string * __first;
  struct basic_string * __result;
  size_type __dnew;
  const long unsigned int D.52697;
  const size_type __len;
  size_type D.52696;
  size_type __n;
  struct basic_string * D.52687;
  size_type __dnew;
  size_type __dnew;
  struct basic_string * const __position;
  struct basic_string * __first;
  difference_type __n;
  struct basic_string * __last;
  struct basic_string * __result;
  struct basic_string * __new_finish;
  struct basic_string __x_copy;
  struct basic_string * _8;
  struct basic_string * _9;
  size_type pretmp_10;
  struct basic_string * _12;
  long int __last.69_15;
  struct basic_string * _16;
  long int _19;
  long int __first.70_20;
  char * _21;
  char * const _23;
  bool _25;
  char * _27;
  struct basic_string * const _29;
  bool _30;
  long unsigned int _31;
  struct basic_string * _32;
  const size_type _33;
  char * const _34;
  char * _37;
  struct basic_string * _38;
  const size_type _39;
  char * const _40;
  struct basic_string * prephitmp_44;
  struct basic_string * _48;
  void * _50;
  char * _53;
  char * const _64;
  char * const _65;
  const size_type _66;
  char * _67;
  size_type pretmp_69;
  bool _71;
  char * const _73;
  const char * _74;
  char * const _76;
  char * const _78;
  const char * _79;
  struct basic_string * pretmp_100;
  struct basic_string * prephitmp_101;
  long unsigned int prephitmp_104;
  char[16] * pretmp_106;
  char[16] * pretmp_107;
  size_type prephitmp_109;
  char[16] * prephitmp_113;
  struct basic_string * pretmp_114;
  struct basic_string * prephitmp_115;
  long unsigned int prephitmp_133;
  char * _134;
  long unsigned int __dnew.63_135;
  const char_type _137;
  char * _140;
  char * const prephitmp_141;
  long int _144;
  char * _145;
  long unsigned int __dnew.63_146;
  const char_type _148;
  char * _151;
  struct basic_string * _152;
  bool _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  void * _160;
  bool _161;
  size_type prephitmp_162;
  bool _163;
  char * _170;
  long unsigned int __dnew.63_171;
  const char_type _173;
  char * _176;
  char * const pretmp_177;
  char * _178;
  char * const _179;
  const size_type _180;
  char * _181;
  void * _184;
  char * const pretmp_185;
  char * const _186;
  const char * _187;
  char * _193;
  long unsigned int __dnew.63_194;
  const char_type _196;
  char * _199;
  size_type pretmp_200;
  char * _202;
  char * const _203;
  const size_type _204;
  char * _205;
  void * _208;
  char * const pretmp_209;
  char * const _210;
  const char * _211;
  char * _217;
  long unsigned int __dnew.63_218;
  const char_type _220;
  char * _223;
  char * const prephitmp_226;
  size_type pretmp_229;
  void * _232;
  char * const prephitmp_236;
  size_type prephitmp_239;
  struct basic_string * pretmp_243;
  char * const _270;
  long int _271;
  char * const _322;
  size_type prephitmp_346;
  char * const prephitmp_358;
  bool _362;
  char * const prephitmp_364;
  long unsigned int pretmp_367;
  char * const _378;
  char * const _384;
  char * const _385;
  size_type pretmp_389;
  bool _393;
  bool _394;
  long int _395;
  bool _396;
  bool _397;
  char * const pretmp_398;
  bool _399;
  bool _400;
  bool _401;
  long int _402;
  char * const pretmp_403;
  size_type prephitmp_405;
  long int _406;
  long int _407;
  bool _408;

  <bb 2>:
  __position_28 = MEM[(struct __normal_iterator *)&__position];
  # DEBUG __position => __position_28
  _8 = this_7(D)->D.36900._M_impl._M_finish;
  _9 = this_7(D)->D.36900._M_impl._M_end_of_storage;
  if (_8 != _9)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 3>:
  # DEBUG D#451 => _8 + 18446744073709551584
  # DEBUG D#464 => &this_7(D)->D.36900._M_impl
  # DEBUG D#447 => D#464
  # DEBUG __p => _8
  # DEBUG __arg => D#451
  # DEBUG __a => D#447
  # DEBUG D#446 => D#447
  # DEBUG D#445 => D#446
  # DEBUG __p => _8
  # DEBUG __val => D#451
  # DEBUG this => D#445
  # DEBUG D#33 => 32
  # DEBUG __p => _8
  # DEBUG D.49285 => D#33
  if (_8 != 0B)
    goto <bb 4>;
  else
    goto <bb 10>;

  <bb 4>:
  # DEBUG this => _8
  # DEBUG __str => D#451
  # DEBUG this => D#451
  # DEBUG D#442 => &D#451->_M_dataplus
  # DEBUG this => _8
  _53 = &_8->D.11539._M_local_buf;
  # DEBUG D#443 => &_8->_M_dataplus
  # DEBUG D#151 => D#442
  # DEBUG this => D#443
  # DEBUG __dat => _53
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#443
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)_8]._M_p = _53;
  _40 = MEM[(char * *)_8 + -32B];
  # DEBUG D#2 => D#451
  # DEBUG this => D#2
  _39 = MEM[(long unsigned int *)_8 + -24B];
  # DEBUG D#5 => D#451
  # DEBUG this => D#5
  _37 = _40 + _39;
  # DEBUG D#2 => D#451
  # DEBUG this => D#2
  # DEBUG this => _8
  # DEBUG __beg => _40
  # DEBUG __end => _37
  # DEBUG this => _8
  # DEBUG __beg => _40
  # DEBUG __end => _37
  # DEBUG this => _8
  # DEBUG __beg => _40
  # DEBUG __end => _37
  # DEBUG __ptr => _40
  _163 = _37 != 0B;
  _362 = _40 == 0B;
  _401 = _163 & _362;
  if (_401 != 0)
    goto <bb 115>;
  else
    goto <bb 116>;

  <bb 5>:
  _134 = std::__cxx11::basic_string<char>::_M_create (_8, &__dnew, 0);
  # DEBUG D#6 => _8
  # DEBUG __p => _134
  # DEBUG this => D#6
  MEM[(char * *)_8] = _134;
  __dnew.63_135 = __dnew;
  # DEBUG D#7 => _8
  # DEBUG __capacity => __dnew.63_135
  # DEBUG this => D#7
  MEM[(size_type *)_8 + 16B] = __dnew.63_135;
  # DEBUG D#2 => _8
  # DEBUG this => D#2
  # DEBUG __p => _134
  # DEBUG __k1 => _40
  # DEBUG __k2 => _37
  # DEBUG __d => _134
  # DEBUG __s => _40
  # DEBUG __n => _39
  goto <bb 8>;

  <bb 6>:
  # DEBUG D#2 => _8
  # DEBUG this => D#2
  # DEBUG __p => _53
  # DEBUG __k1 => _40
  # DEBUG __k2 => _37
  # DEBUG __d => _53
  # DEBUG __s => _40
  # DEBUG __n => _39
  if (_39 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _137 = MEM[(const char_type &)_40];
  # DEBUG D#32 => _40
  # DEBUG __c1 => _53
  # DEBUG __c2 => D#32
  MEM[(char_type &)_53] = _137;
  goto <bb 9>;

  <bb 8>:
  # _270 = PHI <_53(6), _134(5)>
  # DEBUG D#2 => _8
  # DEBUG this => D#2
  # DEBUG __p => _270
  # DEBUG __k1 => _40
  # DEBUG __k2 => _37
  # DEBUG __d => _270
  # DEBUG __s => _40
  # DEBUG __n => _39
  # DEBUG __s1 => _270
  # DEBUG __s2 => _40
  # DEBUG __n => _39
  __builtin_memcpy (_270, _40, _39);
  pretmp_69 = __dnew;
  pretmp_403 = MEM[(char * *)_8];

  <bb 9>:
  # prephitmp_346 = PHI <_39(7), pretmp_69(8)>
  # prephitmp_358 = PHI <_53(7), pretmp_403(8)>
  # DEBUG D#655 => __dnew
  # DEBUG this => _8
  # DEBUG __n => D#655
  # DEBUG D#4 => _8
  # DEBUG __length => D#655
  # DEBUG this => D#4
  MEM[(size_type *)_8 + 8B] = prephitmp_346;
  # DEBUG D#2 => _8
  # DEBUG this => D#2
  _140 = prephitmp_358 + prephitmp_346;
  # DEBUG __c1 => _140
  # DEBUG __c2 => D#32
  MEM[(char_type &)_140] = 0;
  __dnew ={v} {CLOBBER};
  pretmp_243 = this_7(D)->D.36900._M_impl._M_finish;

  <bb 10>:
  # prephitmp_44 = PHI <pretmp_243(9), _8(3)>
  _12 = prephitmp_44 + 32;
  this_7(D)->D.36900._M_impl._M_finish = _12;
  # DEBUG this => &__x_copy
  # DEBUG __str => __x_14(D)
  # DEBUG this => __x_14(D)
  # DEBUG D#442 => &__x_14(D)->_M_dataplus
  # DEBUG this => &__x_copy
  # DEBUG D#443 => &__x_copy._M_dataplus
  # DEBUG D#151 => D#442
  # DEBUG this => D#443
  # DEBUG __dat => &__x_copy.D.11539._M_local_buf
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#443
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)&__x_copy]._M_p = &__x_copy.D.11539._M_local_buf;
  _34 = MEM[(char * *)__x_14(D)];
  # DEBUG D#2 => __x_14(D)
  # DEBUG this => D#2
  _33 = MEM[(long unsigned int *)__x_14(D) + 8B];
  # DEBUG D#5 => __x_14(D)
  # DEBUG this => D#5
  _27 = _34 + _33;
  # DEBUG D#2 => __x_14(D)
  # DEBUG this => D#2
  # DEBUG this => &__x_copy
  # DEBUG __beg => _34
  # DEBUG __end => _27
  # DEBUG this => &__x_copy
  # DEBUG __beg => _34
  # DEBUG __end => _27
  # DEBUG this => &__x_copy
  # DEBUG __beg => _34
  # DEBUG __end => _27
  # DEBUG __ptr => _34
  _408 = _27 != 0B;
  _161 = _34 == 0B;
  _154 = _161 & _408;
  if (_154 != 0)
    goto <bb 115>;
  else
    goto <bb 117>;

  <bb 11>:
  _145 = std::__cxx11::basic_string<char>::_M_create (&__x_copy, &__dnew, 0);
  # DEBUG D#6 => &__x_copy
  # DEBUG __p => _145
  # DEBUG this => D#6
  MEM[(char * *)&__x_copy] = _145;
  __dnew.63_146 = __dnew;
  # DEBUG D#7 => &__x_copy
  # DEBUG __capacity => __dnew.63_146
  # DEBUG this => D#7
  MEM[(size_type *)&__x_copy + 16B] = __dnew.63_146;
  # DEBUG D#2 => &__x_copy
  # DEBUG this => D#2
  # DEBUG __p => _145
  # DEBUG __k1 => _34
  # DEBUG __k2 => _27
  # DEBUG __d => _145
  # DEBUG __s => _34
  # DEBUG __n => _33
  goto <bb 14>;

  <bb 12>:
  # DEBUG D#2 => &__x_copy
  # DEBUG this => D#2
  # DEBUG __p => &__x_copy.D.11539._M_local_buf
  # DEBUG __k1 => _34
  # DEBUG __k2 => _27
  # DEBUG __d => &__x_copy.D.11539._M_local_buf
  # DEBUG __s => _34
  # DEBUG __n => _33
  if (_33 == 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _148 = MEM[(const char_type &)_34];
  # DEBUG D#32 => _34
  # DEBUG __c1 => &__x_copy.D.11539._M_local_buf
  # DEBUG __c2 => D#32
  MEM[(char_type &)&__x_copy + 16] = _148;
  goto <bb 15>;

  <bb 14>:
  # _322 = PHI <&__x_copy.D.11539._M_local_buf(12), _145(11)>
  # DEBUG D#2 => &__x_copy
  # DEBUG this => D#2
  # DEBUG __p => _322
  # DEBUG __k1 => _34
  # DEBUG __k2 => _27
  # DEBUG __d => _322
  # DEBUG __s => _34
  # DEBUG __n => _33
  # DEBUG __s1 => _322
  # DEBUG __s2 => _34
  # DEBUG __n => _33
  __builtin_memcpy (_322, _34, _33);
  pretmp_10 = __dnew;
  pretmp_398 = MEM[(char * *)&__x_copy];

  <bb 15>:
  # prephitmp_405 = PHI <_33(13), pretmp_10(14)>
  # prephitmp_226 = PHI <&__x_copy.D.11539._M_local_buf(13), pretmp_398(14)>
  # DEBUG D#654 => __dnew
  # DEBUG this => &__x_copy
  # DEBUG __n => D#654
  # DEBUG D#4 => &__x_copy
  # DEBUG __length => D#654
  # DEBUG this => D#4
  MEM[(size_type *)&__x_copy + 8B] = prephitmp_405;
  # DEBUG D#2 => &__x_copy
  # DEBUG this => D#2
  _151 = prephitmp_226 + prephitmp_405;
  # DEBUG __c1 => _151
  # DEBUG __c2 => D#32
  MEM[(char_type &)_151] = 0;
  __dnew ={v} {CLOBBER};
  _16 = this_7(D)->D.36900._M_impl._M_finish;
  __result_17 = _16 + 18446744073709551584;
  __last_18 = _16 + 18446744073709551552;
  # DEBUG this => &__position
  # DEBUG __first => __position_28
  # DEBUG __last => __last_18
  # DEBUG __result => __result_17
  # DEBUG __it => __last_18
  # DEBUG __it => __last_18
  # DEBUG __it => __position_28
  # DEBUG __it => __position_28
  # DEBUG __first => __position_28
  # DEBUG __last => __last_18
  # DEBUG __result => __result_17
  # DEBUG __it => __result_17
  # DEBUG __it => __result_17
  # DEBUG __it => __last_18
  # DEBUG __it => __last_18
  # DEBUG __it => __position_28
  # DEBUG __it => __position_28
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __last.69_15 = (long int) __last_18;
  __first.70_20 = (long int) __position_28;
  _19 = __last.69_15 - __first.70_20;
  __n_57 = _19 /[ex] 32;
  # DEBUG __n => __n_57
  # DEBUG __n => __n_57
  # DEBUG __result => __result_17
  # DEBUG __last => __last_18
  if (__n_57 <= 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG __str => &__x_copy
  # DEBUG this => NULL
  # DEBUG __str => &__x_copy
  std::__cxx11::basic_string<char>::_M_assign (__position_28, &__x_copy);
  goto <bb 22>;

  <bb 17>:

  <bb 18>:
  # __n_131 = PHI <__n_57(17), __n_63(20)>
  # __last_132 = PHI <__last_18(17), __last_60(20)>
  # __result_166 = PHI <__result_17(17), __result_62(20)>
  # DEBUG __n => __n_131
  # DEBUG __result => __result_166
  # DEBUG __last => __last_132
  __last_60 = __last_132 + 18446744073709551584;
  # DEBUG __last => __last_60
  __result_62 = __result_166 + 18446744073709551584;
  # DEBUG __result => __result_62
  # DEBUG this => __result_62
  # DEBUG __str => __last_60
  # DEBUG this => __result_62
  # DEBUG __str => __last_60
  std::__cxx11::basic_string<char>::_M_assign (__result_62, __last_60);

  <bb 19>:
  __n_63 = __n_131 + -1;
  # DEBUG __n => __n_63
  # DEBUG __n => __n_63
  # DEBUG __result => __result_62
  # DEBUG __last => __last_60
  if (__n_63 <= 0)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 18>;

<L20>:
  goto <bb 95> (<L3>);

  <bb 22>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  _64 = MEM[(char * *)&__x_copy];
  # DEBUG D#2 => &__x_copy
  # DEBUG this => D#2
  # DEBUG this => &__x_copy
  if (&__x_copy.D.11539._M_local_buf != _64)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#219 => __x_copy.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &__x_copy
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &__x_copy
  # DEBUG this => D#2
  # DEBUG this => &__x_copy
  # DEBUG D#216 => &__x_copy._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _64
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _64
  # DEBUG this => D#210
  # DEBUG D.49560 => D#211
  operator delete (_64);

  <bb 24>:
  # DEBUG D#220 => &__x_copy._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  __x_copy ={v} {CLOBBER};
  goto <bb 93>;

  <bb 25>:
  # DEBUG this => this_7(D)
  # DEBUG __n => 1
  # DEBUG __n => 1
  # DEBUG __s => "vector::_M_insert_aux"
  # DEBUG D#329 => this_7(D)
  # DEBUG this => D#329
  # DEBUG D#328 => D#329
  # DEBUG D#327 => &D#328->D.36900
  # DEBUG this => D#327
  # DEBUG __a => D#326
  # DEBUG D#325 => D#326
  # DEBUG D#324 => D#325
  # DEBUG this => D#324
  _29 = MEM[(struct basic_string * *)this_7(D)];
  # DEBUG D#98 => this_7(D)
  # DEBUG D#98 => this_7(D)
  # DEBUG this => D#98
  # DEBUG this => D#98
  _155 = (long int) _8;
  _156 = (long int) _29;
  _157 = _155 - _156;
  _158 = _157 /[ex] 32;
  _159 = (const long unsigned int) _158;
  # DEBUG D#98 => this_7(D)
  # DEBUG D#98 => this_7(D)
  # DEBUG this => D#98
  # DEBUG this => D#98
  # DEBUG D#98 => this_7(D)
  # DEBUG D#98 => this_7(D)
  # DEBUG this => D#98
  # DEBUG this => D#98
  # DEBUG __a => &D.52697
  # DEBUG __b => &__n
  if (_159 == 0)
    goto <bb 119>;
  else
    goto <bb 26>;

  <bb 26>:
  __len_164 = _159 + _159;
  # DEBUG __len => __len_164
  # DEBUG D#98 => this_7(D)
  # DEBUG D#98 => this_7(D)
  # DEBUG this => D#98
  # DEBUG this => D#98
  if (_159 > __len_164)
    goto <bb 118>;
  else
    goto <bb 27>;

  <bb 27>:
  # DEBUG __len => __len_164
  # DEBUG D#98 => this_7(D)
  # DEBUG this => D#98
  # DEBUG this => D#98
  # DEBUG D#329 => this_7(D)
  # DEBUG this => D#329
  # DEBUG D#328 => D#329
  # DEBUG D#327 => &D#328->D.36900
  # DEBUG this => D#327
  # DEBUG __a => D#326
  # DEBUG D#325 => D#326
  # DEBUG D#324 => D#325
  # DEBUG this => D#324
  if (__len_164 > 576460752303423487)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 28>:
  pretmp_367 = __len_59 * 32;

  <bb 29>:
  # _271 = PHI <_407(118), _402(28)>
  # prephitmp_133 = PHI <18446744073709551584(118), pretmp_367(28)>
  # DEBUG __len => NULL
  # DEBUG this => this_7(D)
  # DEBUG D#117 => &this_7(D)->D.36900._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#117
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.40360
  # DEBUG this => &__position
  # DEBUG this => &D.40360
  # DEBUG D#467 => _271 /[ex] 32
  # DEBUG __elems_before => (const size_type) D#467
  # DEBUG D#466 => &this_7(D)->D.36900
  # DEBUG D#337 => D#466
  # DEBUG __n => NULL
  # DEBUG this => D#337
  # DEBUG D#336 => D#337
  # DEBUG D#335 => &D#336->_M_impl
  # DEBUG D#334 => D#335
  # DEBUG __n => NULL
  # DEBUG __a => D#334
  # DEBUG D#333 => D#334
  # DEBUG D#331 => D#333
  # DEBUG D#332 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#331
  # DEBUG D.52685 => D#332
  # DEBUG D#330 => D#331
  # DEBUG D#324 => D#330
  # DEBUG this => D#324
  _152 = operator new (prephitmp_133);

  <bb 30>:
  # __new_finish_153 = PHI <0B(119), _152(29)>
  # _144 = PHI <_402(119), _271(29)>
  # prephitmp_104 = PHI <0(119), prephitmp_133(29)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  _31 = (long unsigned int) _144;
  _32 = __new_finish_153 + _31;
  # DEBUG D#465 => &this_7(D)->D.36900._M_impl
  # DEBUG D#447 => D#465
  # DEBUG __p => _32
  # DEBUG __arg => __x_14(D)
  # DEBUG __a => D#447
  # DEBUG D#446 => D#447
  # DEBUG D#445 => D#446
  # DEBUG __p => _32
  # DEBUG __val => __x_14(D)
  # DEBUG this => D#445
  # DEBUG D#33 => 32
  # DEBUG __p => _32
  # DEBUG D.49285 => D#33
  if (_32 != 0B)
    goto <bb 31>;
  else
    goto <bb 38>;

  <bb 31>:
  # DEBUG this => _32
  # DEBUG __str => __x_14(D)
  # DEBUG this => __x_14(D)
  # DEBUG D#442 => &__x_14(D)->_M_dataplus
  # DEBUG this => _32
  _21 = &_32->D.11539._M_local_buf;
  # DEBUG D#443 => &_32->_M_dataplus
  # DEBUG D#151 => D#442
  # DEBUG this => D#443
  # DEBUG __dat => _21
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#443
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)_32]._M_p = _21;
  _65 = MEM[(char * *)__x_14(D)];
  # DEBUG D#2 => __x_14(D)
  # DEBUG this => D#2
  _66 = MEM[(long unsigned int *)__x_14(D) + 8B];
  # DEBUG D#5 => __x_14(D)
  # DEBUG this => D#5
  _67 = _65 + _66;
  # DEBUG D#2 => __x_14(D)
  # DEBUG this => D#2
  # DEBUG this => _32
  # DEBUG __beg => _65
  # DEBUG __end => _67
  # DEBUG this => _32
  # DEBUG __beg => _65
  # DEBUG __end => _67
  # DEBUG this => _32
  # DEBUG __beg => _65
  # DEBUG __end => _67
  # DEBUG __ptr => _65
  _71 = _67 != 0B;
  _30 = _65 == 0B;
  _25 = _30 & _71;
  if (_25 != 0)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 32>:
  _170 = std::__cxx11::basic_string<char>::_M_create (_32, &__dnew, 0);

  <bb 33>:
  # DEBUG D#6 => _32
  # DEBUG __p => _170
  # DEBUG this => D#6
  MEM[(char * *)_32] = _170;
  __dnew.63_171 = __dnew;
  # DEBUG D#7 => _32
  # DEBUG __capacity => __dnew.63_171
  # DEBUG this => D#7
  MEM[(size_type *)_32 + 16B] = __dnew.63_171;
  # DEBUG D#2 => _32
  # DEBUG this => D#2
  # DEBUG __p => _170
  # DEBUG __k1 => _65
  # DEBUG __k2 => _67
  # DEBUG __d => _170
  # DEBUG __s => _65
  # DEBUG __n => _66
  goto <bb 36>;

  <bb 34>:
  # DEBUG D#2 => _32
  # DEBUG this => D#2
  # DEBUG __p => _21
  # DEBUG __k1 => _65
  # DEBUG __k2 => _67
  # DEBUG __d => _21
  # DEBUG __s => _65
  # DEBUG __n => _66
  if (_66 == 1)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  _173 = MEM[(const char_type &)_65];
  # DEBUG D#32 => _65
  # DEBUG __c1 => _21
  # DEBUG __c2 => D#32
  MEM[(char_type &)_21] = _173;
  goto <bb 37>;

  <bb 36>:
  # _384 = PHI <_21(34), _170(33)>
  # DEBUG D#2 => _32
  # DEBUG this => D#2
  # DEBUG __p => _384
  # DEBUG __k1 => _65
  # DEBUG __k2 => _67
  # DEBUG __d => _384
  # DEBUG __s => _65
  # DEBUG __n => _66
  # DEBUG __s1 => _384
  # DEBUG __s2 => _65
  # DEBUG __n => _66
  __builtin_memcpy (_384, _65, _66);
  pretmp_200 = __dnew;
  pretmp_209 = MEM[(char * *)_32];

  <bb 37>:
  # prephitmp_239 = PHI <_66(35), pretmp_200(36)>
  # prephitmp_364 = PHI <_21(35), pretmp_209(36)>
  # DEBUG D#653 => __dnew
  # DEBUG this => _32
  # DEBUG __n => D#653
  # DEBUG D#4 => _32
  # DEBUG __length => D#653
  # DEBUG this => D#4
  MEM[(size_type *)_32 + 8B] = prephitmp_239;
  # DEBUG D#2 => _32
  # DEBUG this => D#2
  _176 = prephitmp_364 + prephitmp_239;
  # DEBUG __c1 => _176
  # DEBUG __c2 => D#32
  MEM[(char_type &)_176] = 0;
  __dnew ={v} {CLOBBER};

  <bb 38>:
  # DEBUG __new_finish => 0B
  # DEBUG D#452 => &this_7(D)->D.36900
  # DEBUG this => D#452
  # DEBUG this => &__position
  __first_35 = this_7(D)->D.36900._M_impl._M_start;
  # DEBUG __first => __first_35
  # DEBUG __last => __position_28
  # DEBUG __result => NULL
  # DEBUG __alloc => D#450
  # DEBUG D#449 => D#450
  # DEBUG D#448 => D#449
  # DEBUG __first => __first_35
  # DEBUG __last => __position_28
  # DEBUG __result => NULL
  # DEBUG D.49599 => D#448
  # DEBUG __first => __first_35
  # DEBUG __last => __position_28
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => __first_35
  # DEBUG __last => __position_28
  # DEBUG __result => __new_finish_153
  # DEBUG __cur => __new_finish_153
  # DEBUG __cur => __new_finish_153
  # DEBUG __first => __first_35
  if (__position_28 == __first_35)
    goto <bb 51>;
  else
    goto <bb 39>;

  <bb 39>:

  <bb 40>:
  # __first_213 = PHI <__first_35(39), __first_182(50)>
  # __new_finish_214 = PHI <__new_finish_153(39), __new_finish_183(50)>
  # DEBUG __cur => __new_finish_214
  # DEBUG __first => __first_213
  # DEBUG __r => __new_finish_214
  # DEBUG __p => NULL
  # DEBUG __value => __first_213
  # DEBUG D#33 => 32
  # DEBUG __p => NULL
  # DEBUG D.49371 => D#33
  if (__new_finish_214 != 0B)
    goto <bb 41>;
  else
    goto <bb 48>;

  <bb 41>:
  # DEBUG this => NULL
  # DEBUG __str => __first_213
  # DEBUG this => __first_213
  # DEBUG D#442 => &MEM[(const struct basic_string *)__first_213]._M_dataplus
  # DEBUG this => NULL
  _178 = &__new_finish_214->D.11539._M_local_buf;
  # DEBUG D#151 => D#442
  # DEBUG this => D#443
  # DEBUG __dat => _178
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#443
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)__new_finish_214]._M_p = _178;
  _179 = MEM[(char * *)__first_213];
  # DEBUG D#2 => __first_213
  # DEBUG this => D#2
  _180 = MEM[(long unsigned int *)__first_213 + 8B];
  # DEBUG D#5 => __first_213
  # DEBUG this => D#5
  _181 = _179 + _180;
  # DEBUG D#2 => __first_213
  # DEBUG this => D#2
  # DEBUG this => NULL
  # DEBUG __beg => _179
  # DEBUG __end => _181
  # DEBUG this => NULL
  # DEBUG __beg => _179
  # DEBUG __end => _181
  # DEBUG this => __new_finish_214
  # DEBUG __beg => _179
  # DEBUG __end => _181
  # DEBUG __ptr => _179
  _393 = _181 != 0B;
  _396 = _179 == 0B;
  _394 = _393 & _396;
  if (_394 != 0)
    goto <bb 122>;
  else
    goto <bb 124>;

  <bb 42>:
  _193 = std::__cxx11::basic_string<char>::_M_create (__new_finish_214, &__dnew, 0);

  <bb 43>:
  # DEBUG D#6 => __new_finish_214
  # DEBUG __p => _193
  # DEBUG this => D#6
  MEM[(char * *)__new_finish_214] = _193;
  __dnew.63_194 = __dnew;
  # DEBUG D#7 => __new_finish_214
  # DEBUG __capacity => __dnew.63_194
  # DEBUG this => D#7
  MEM[(size_type *)__new_finish_214 + 16B] = __dnew.63_194;
  # DEBUG D#2 => __new_finish_214
  # DEBUG this => D#2
  # DEBUG __p => _193
  # DEBUG __k1 => _179
  # DEBUG __k2 => _181
  # DEBUG __d => _193
  # DEBUG __s => _179
  # DEBUG __n => _180
  goto <bb 46>;

  <bb 44>:
  # DEBUG D#2 => __new_finish_214
  # DEBUG this => D#2
  # DEBUG __p => _178
  # DEBUG __k1 => _179
  # DEBUG __k2 => _181
  # DEBUG __d => _178
  # DEBUG __s => _179
  # DEBUG __n => _180
  if (_180 == 1)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  _196 = MEM[(const char_type &)_179];
  # DEBUG D#32 => _179
  # DEBUG __c1 => _178
  # DEBUG __c2 => D#32
  MEM[(char_type &)_178] = _196;
  goto <bb 47>;

  <bb 46>:
  # _378 = PHI <_178(44), _193(43)>
  # DEBUG D#2 => __new_finish_214
  # DEBUG this => D#2
  # DEBUG __p => _378
  # DEBUG __k1 => _179
  # DEBUG __k2 => _181
  # DEBUG __d => _378
  # DEBUG __s => _179
  # DEBUG __n => _180
  # DEBUG __s1 => _378
  # DEBUG __s2 => _179
  # DEBUG __n => _180
  __builtin_memcpy (_378, _179, _180);
  pretmp_229 = __dnew;
  pretmp_185 = MEM[(char * *)__new_finish_214];

  <bb 47>:
  # prephitmp_162 = PHI <_180(45), pretmp_229(46)>
  # prephitmp_236 = PHI <_178(45), pretmp_185(46)>
  # DEBUG D#652 => __dnew
  # DEBUG this => __new_finish_214
  # DEBUG __n => D#652
  # DEBUG D#4 => __new_finish_214
  # DEBUG __length => D#652
  # DEBUG this => D#4
  MEM[(size_type *)__new_finish_214 + 8B] = prephitmp_162;
  # DEBUG D#2 => __new_finish_214
  # DEBUG this => D#2
  _199 = prephitmp_236 + prephitmp_162;
  # DEBUG __c1 => _199
  # DEBUG __c2 => D#32
  MEM[(char_type &)_199] = 0;
  __dnew ={v} {CLOBBER};

  <bb 48>:
  __first_182 = __first_213 + 32;
  # DEBUG __first => __first_182
  __new_finish_183 = __new_finish_214 + 32;
  # DEBUG __cur => __new_finish_183
  # DEBUG __cur => __new_finish_183
  # DEBUG __first => __first_182
  if (__position_28 == __first_182)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # __new_finish_142 = PHI <__new_finish_183(48)>
  goto <bb 51>;

  <bb 50>:
  goto <bb 40>;

  <bb 51>:
  # __new_finish_215 = PHI <__new_finish_142(49), __new_finish_153(38)>
  # DEBUG __new_finish => NULL
  __new_finish_36 = __new_finish_215 + 32;
  # DEBUG __new_finish => __new_finish_36
  # DEBUG D#453 => &this_7(D)->D.36900
  # DEBUG this => D#453
  _38 = this_7(D)->D.36900._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => __position_28
  # DEBUG __last => _38
  # DEBUG __result => __new_finish_36
  # DEBUG __alloc => D#450
  # DEBUG D#449 => D#450
  # DEBUG D#448 => D#449
  # DEBUG __first => __position_28
  # DEBUG __last => _38
  # DEBUG __result => __new_finish_36
  # DEBUG D.49618 => D#448
  # DEBUG __first => __position_28
  # DEBUG __last => _38
  # DEBUG __result => __new_finish_36
  # DEBUG __assignable => 1
  # DEBUG __first => __position_28
  # DEBUG __last => _38
  # DEBUG __result => __new_finish_36
  # DEBUG __cur => __new_finish_36
  # DEBUG __first => __position_28
  if (__position_28 == _38)
    goto <bb 73>;
  else
    goto <bb 61>;

  # __new_finish_125 = PHI <__new_finish_214(42)>
<L22>:

  # __new_finish_120 = PHI <__new_finish_125(52), __new_finish_124(123)>
<L11>:
  _184 = __builtin_eh_pointer (11);
  __cxa_begin_catch (_184);
  # DEBUG __first => __new_finish_153
  # DEBUG __last => __new_finish_120
  # DEBUG __first => __new_finish_153
  # DEBUG __last => __new_finish_120
  # DEBUG __first => __new_finish_153
  if (__new_finish_153 == __new_finish_120)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  __cxa_rethrow ();

  <bb 55>:

  <bb 56>:
  # __new_finish_165 = PHI <__new_finish_153(55), __new_finish_188(59)>
  # DEBUG __first => __new_finish_165
  # DEBUG __r => __new_finish_165
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _186 = MEM[(char * *)__new_finish_165];
  # DEBUG this => D#2
  # DEBUG this => NULL
  _187 = &MEM[(const struct basic_string *)__new_finish_165].D.11539._M_local_buf;
  if (_186 != _187)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG D#218 => D#219
  # DEBUG this => NULL
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG this => D#2
  # DEBUG this => NULL
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _186
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _186
  # DEBUG this => D#210
  # DEBUG D.52745 => D#211
  operator delete (_186);

  <bb 58>:
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  MEM[(struct  &)__new_finish_165] ={v} {CLOBBER};
  __new_finish_188 = __new_finish_165 + 32;
  # DEBUG __first => __new_finish_188
  # DEBUG __first => __new_finish_188
  if (__new_finish_188 == __new_finish_120)
    goto <bb 54>;
  else
    goto <bb 59>;

  <bb 59>:
  goto <bb 56>;

<L13>:
  __cxa_end_catch ();
  resx 10

  <bb 61>:

  <bb 62>:
  # __position_129 = PHI <__position_28(61), __position_206(71)>
  # __new_finish_111 = PHI <__new_finish_36(61), __new_finish_207(71)>
  # DEBUG __cur => __new_finish_111
  # DEBUG __first => __position_129
  # DEBUG __r => __new_finish_111
  # DEBUG __p => NULL
  # DEBUG __value => __position_129
  # DEBUG D#33 => 32
  # DEBUG __p => NULL
  # DEBUG D.49371 => D#33
  if (__new_finish_111 != 0B)
    goto <bb 63>;
  else
    goto <bb 70>;

  <bb 63>:
  # DEBUG this => NULL
  # DEBUG __str => __position_129
  # DEBUG this => __position_129
  # DEBUG D#442 => &MEM[(const struct basic_string *)__position_129]._M_dataplus
  # DEBUG this => NULL
  _202 = &__new_finish_111->D.11539._M_local_buf;
  # DEBUG D#151 => D#442
  # DEBUG this => D#443
  # DEBUG __dat => _202
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#443
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)__new_finish_111]._M_p = _202;
  _203 = MEM[(char * *)__position_129];
  # DEBUG D#2 => __position_129
  # DEBUG this => D#2
  _204 = MEM[(long unsigned int *)__position_129 + 8B];
  # DEBUG D#5 => __position_129
  # DEBUG this => D#5
  _205 = _203 + _204;
  # DEBUG D#2 => __position_129
  # DEBUG this => D#2
  # DEBUG this => NULL
  # DEBUG __beg => _203
  # DEBUG __end => _205
  # DEBUG this => NULL
  # DEBUG __beg => _203
  # DEBUG __end => _205
  # DEBUG this => __new_finish_111
  # DEBUG __beg => _203
  # DEBUG __end => _205
  # DEBUG __ptr => _203
  _400 = _205 != 0B;
  _399 = _203 == 0B;
  _397 = _399 & _400;
  if (_397 != 0)
    goto <bb 125>;
  else
    goto <bb 127>;

  <bb 64>:
  _217 = std::__cxx11::basic_string<char>::_M_create (__new_finish_111, &__dnew, 0);

  <bb 65>:
  # DEBUG D#6 => __new_finish_111
  # DEBUG __p => _217
  # DEBUG this => D#6
  MEM[(char * *)__new_finish_111] = _217;
  __dnew.63_218 = __dnew;
  # DEBUG D#7 => __new_finish_111
  # DEBUG __capacity => __dnew.63_218
  # DEBUG this => D#7
  MEM[(size_type *)__new_finish_111 + 16B] = __dnew.63_218;
  # DEBUG D#2 => __new_finish_111
  # DEBUG this => D#2
  # DEBUG __p => _217
  # DEBUG __k1 => _203
  # DEBUG __k2 => _205
  # DEBUG __d => _217
  # DEBUG __s => _203
  # DEBUG __n => _204
  goto <bb 68>;

  <bb 66>:
  # DEBUG D#2 => __new_finish_111
  # DEBUG this => D#2
  # DEBUG __p => _202
  # DEBUG __k1 => _203
  # DEBUG __k2 => _205
  # DEBUG __d => _202
  # DEBUG __s => _203
  # DEBUG __n => _204
  if (_204 == 1)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  _220 = MEM[(const char_type &)_203];
  # DEBUG D#32 => _203
  # DEBUG __c1 => _202
  # DEBUG __c2 => D#32
  MEM[(char_type &)_202] = _220;
  goto <bb 69>;

  <bb 68>:
  # _385 = PHI <_202(66), _217(65)>
  # DEBUG D#2 => __new_finish_111
  # DEBUG this => D#2
  # DEBUG __p => _385
  # DEBUG __k1 => _203
  # DEBUG __k2 => _205
  # DEBUG __d => _385
  # DEBUG __s => _203
  # DEBUG __n => _204
  # DEBUG __s1 => _385
  # DEBUG __s2 => _203
  # DEBUG __n => _204
  __builtin_memcpy (_385, _203, _204);
  pretmp_389 = __dnew;
  pretmp_177 = MEM[(char * *)__new_finish_111];

  <bb 69>:
  # prephitmp_109 = PHI <_204(67), pretmp_389(68)>
  # prephitmp_141 = PHI <_202(67), pretmp_177(68)>
  # DEBUG D#651 => __dnew
  # DEBUG this => __new_finish_111
  # DEBUG __n => D#651
  # DEBUG D#4 => __new_finish_111
  # DEBUG __length => D#651
  # DEBUG this => D#4
  MEM[(size_type *)__new_finish_111 + 8B] = prephitmp_109;
  # DEBUG D#2 => __new_finish_111
  # DEBUG this => D#2
  _223 = prephitmp_141 + prephitmp_109;
  # DEBUG __c1 => _223
  # DEBUG __c2 => D#32
  MEM[(char_type &)_223] = 0;
  __dnew ={v} {CLOBBER};

  <bb 70>:
  __position_206 = __position_129 + 32;
  # DEBUG __first => __position_206
  __new_finish_207 = __new_finish_111 + 32;
  # DEBUG __cur => __new_finish_207
  # DEBUG __cur => __new_finish_207
  # DEBUG __first => __position_206
  if (_38 == __position_206)
    goto <bb 72>;
  else
    goto <bb 71>;

  <bb 71>:
  goto <bb 62>;

  <bb 72>:
  # __new_finish_126 = PHI <__new_finish_207(70)>
  pretmp_114 = this_7(D)->D.36900._M_impl._M_finish;

  <bb 73>:
  # __new_finish_110 = PHI <__new_finish_126(72), __new_finish_36(51)>
  # prephitmp_115 = PHI <pretmp_114(72), _38(51)>
  # DEBUG __new_finish => NULL
  # DEBUG D#454 => &this_7(D)->D.36900
  # DEBUG this => D#454
  # DEBUG D#650 => this_7(D)->D.36900._M_impl._M_finish
  __first_42 = this_7(D)->D.36900._M_impl._M_start;
  # DEBUG __first => __first_42
  # DEBUG __last => D#650
  # DEBUG __first => __first_42
  if (__first_42 == prephitmp_115)
    goto <bb 90>;
  else
    goto <bb 84>;

  # __new_finish_224 = PHI <__new_finish_111(64)>
<L23>:

  # __new_finish_121 = PHI <__new_finish_224(74), __new_finish_201(126)>
<L14>:
  _208 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_208);
  # DEBUG __first => __new_finish_36
  # DEBUG __last => __new_finish_121
  # DEBUG __first => __new_finish_36
  # DEBUG __last => __new_finish_121
  # DEBUG __first => __new_finish_36
  if (__new_finish_36 == __new_finish_121)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  __cxa_rethrow ();

  <bb 77>:

  <bb 78>:
  # __new_finish_93 = PHI <__new_finish_36(77), __new_finish_212(81)>
  # DEBUG __first => __new_finish_93
  # DEBUG __r => __new_finish_93
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _210 = MEM[(char * *)__new_finish_93];
  # DEBUG this => D#2
  # DEBUG this => NULL
  _211 = &MEM[(const struct basic_string *)__new_finish_93].D.11539._M_local_buf;
  if (_210 != _211)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  # DEBUG D#218 => D#219
  # DEBUG this => NULL
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG this => D#2
  # DEBUG this => NULL
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _210
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _210
  # DEBUG this => D#210
  # DEBUG D.52819 => D#211
  operator delete (_210);

  <bb 80>:
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  MEM[(struct  &)__new_finish_93] ={v} {CLOBBER};
  __new_finish_212 = __new_finish_93 + 32;
  # DEBUG __first => __new_finish_212
  # DEBUG __first => __new_finish_212
  if (__new_finish_121 == __new_finish_212)
    goto <bb 76>;
  else
    goto <bb 81>;

  <bb 81>:
  goto <bb 78>;

<L16>:
  __cxa_end_catch ();
  resx 13

<L24>:
  goto <bb 99> (<L5>);

  <bb 84>:

  <bb 85>:
  # __first_143 = PHI <__first_42(84), __first_75(88)>
  # DEBUG __first => __first_143
  # DEBUG __r => __first_143
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _73 = MEM[(char * *)__first_143];
  # DEBUG this => D#2
  # DEBUG this => NULL
  _74 = &MEM[(const struct basic_string *)__first_143].D.11539._M_local_buf;
  if (_73 != _74)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG D#218 => D#219
  # DEBUG this => NULL
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG this => D#2
  # DEBUG this => NULL
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _73
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _73
  # DEBUG this => D#210
  # DEBUG D.49660 => D#211
  operator delete (_73);

  <bb 87>:
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  MEM[(struct  &)__first_143] ={v} {CLOBBER};
  __first_75 = __first_143 + 32;
  # DEBUG __first => __first_75
  # DEBUG __first => __first_75
  if (__first_75 == prephitmp_115)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  goto <bb 85>;

  <bb 89>:
  pretmp_100 = this_7(D)->D.36900._M_impl._M_start;

  <bb 90>:
  # prephitmp_101 = PHI <pretmp_100(89), __first_42(73)>
  # DEBUG D#461 => this_7(D)->D.36900._M_impl._M_end_of_storage
  # DEBUG D#460 => (long int) D#461
  # DEBUG D#649 => this_7(D)->D.36900._M_impl._M_start
  # DEBUG D#459 => (long int) D#649
  # DEBUG D#458 => D#460 - D#459
  # DEBUG D#457 => D#458 /[ex] 32
  # DEBUG D#456 => &this_7(D)->D.36900
  # DEBUG D#233 => D#456
  # DEBUG D#234 => (long unsigned int) D#457
  # DEBUG __p => D#649
  # DEBUG this => D#233
  # DEBUG __n => D#234
  # DEBUG D#232 => D#234
  # DEBUG D#231 => D#233
  if (prephitmp_101 != 0B)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 91>:
  # DEBUG D#230 => &D#231->_M_impl
  # DEBUG D#228 => D#230
  # DEBUG D#229 => D#232
  # DEBUG __p => D#649
  # DEBUG __a => D#228
  # DEBUG __n => D#229
  # DEBUG D#227 => D#229
  # DEBUG D#226 => D#228
  # DEBUG D#224 => D#226
  # DEBUG D#225 => D#227
  # DEBUG __p => D#649
  # DEBUG this => D#224
  # DEBUG D.49641 => D#225
  operator delete (prephitmp_101);

  <bb 92>:
  this_7(D)->D.36900._M_impl._M_start = __new_finish_153;
  this_7(D)->D.36900._M_impl._M_finish = __new_finish_110;
  _48 = __new_finish_153 + prephitmp_104;
  this_7(D)->D.36900._M_impl._M_end_of_storage = _48;

  <bb 93>:
  return;

<L19>:

<L3>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  _76 = MEM[(char * *)&__x_copy];
  # DEBUG D#2 => &__x_copy
  # DEBUG this => D#2
  # DEBUG this => &__x_copy
  if (&__x_copy.D.11539._M_local_buf != _76)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  # DEBUG D#219 => __x_copy.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &__x_copy
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &__x_copy
  # DEBUG this => D#2
  # DEBUG this => &__x_copy
  # DEBUG D#216 => &__x_copy._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _76
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _76
  # DEBUG this => D#210
  # DEBUG D.49677 => D#211
  operator delete (_76);

  <bb 97>:
  # DEBUG D#220 => &__x_copy._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  resx 2

<L21>:

  # __new_finish_1 = PHI <__new_finish_153(98), __new_finish_36(83)>
<L5>:
  # DEBUG __new_finish => __new_finish_1
  _50 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_50);
  if (__new_finish_1 == 0B)
    goto <bb 102>;
  else
    goto <bb 100>;

  <bb 100>:
  # DEBUG __first => __new_finish_153
  if (__new_finish_1 == __new_finish_153)
    goto <bb 101>;
  else
    goto <bb 106>;

  <bb 101>:
  goto <bb 111>;

  <bb 102>:
  pretmp_106 = &_32->D.11539._M_local_buf;

  <bb 103>:
  # prephitmp_113 = PHI <pretmp_106(102), pretmp_107(128), _21(129)>
  # DEBUG __new_finish => 0B
  # DEBUG D#462 => &this_7(D)->D.36900._M_impl
  # DEBUG D#223 => D#462
  # DEBUG __p => _32
  # DEBUG __a => D#223
  # DEBUG D#222 => D#223
  # DEBUG D#221 => D#222
  # DEBUG __p => _32
  # DEBUG this => D#221
  # DEBUG this => _32
  # DEBUG this => _32
  # DEBUG this => _32
  _23 = MEM[(char * *)_32];
  # DEBUG D#2 => _32
  # DEBUG this => D#2
  # DEBUG this => _32
  if (_23 != prephitmp_113)
    goto <bb 104>;
  else
    goto <bb 105>;

  <bb 104>:
  # DEBUG D#219 => _32->D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => _32
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => _32
  # DEBUG this => D#2
  # DEBUG this => _32
  # DEBUG D#216 => &_32->_M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _23
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _23
  # DEBUG this => D#210
  # DEBUG D.49696 => D#211
  operator delete (_23);

  <bb 105>:
  # DEBUG D#220 => &_32->_M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  MEM[(struct  &)_32] ={v} {CLOBBER};
  goto <bb 111>;

  <bb 106>:

  <bb 107>:
  # __new_finish_130 = PHI <__new_finish_153(106), __new_finish_80(110)>
  # DEBUG __first => __new_finish_130
  # DEBUG __r => __new_finish_130
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _78 = MEM[(char * *)__new_finish_130];
  # DEBUG this => D#2
  # DEBUG this => NULL
  _79 = &MEM[(const struct basic_string *)__new_finish_130].D.11539._M_local_buf;
  if (_78 != _79)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  # DEBUG D#218 => D#219
  # DEBUG this => NULL
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG this => D#2
  # DEBUG this => NULL
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _78
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _78
  # DEBUG this => D#210
  # DEBUG D.49720 => D#211
  operator delete (_78);

  <bb 109>:
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  MEM[(struct  &)__new_finish_130] ={v} {CLOBBER};
  __new_finish_80 = __new_finish_130 + 32;
  # DEBUG __first => __new_finish_80
  # DEBUG __first => __new_finish_80
  if (__new_finish_1 == __new_finish_80)
    goto <bb 101>;
  else
    goto <bb 110>;

  <bb 110>:
  goto <bb 107>;

  <bb 111>:
  # DEBUG D#463 => &this_7(D)->D.36900
  # DEBUG D#233 => D#463
  # DEBUG __p => NULL
  # DEBUG this => D#233
  # DEBUG __n => D#234
  # DEBUG D#232 => D#234
  # DEBUG D#231 => D#233
  if (__new_finish_153 != 0B)
    goto <bb 112>;
  else
    goto <bb 113>;

  <bb 112>:
  # DEBUG D#230 => &D#231->_M_impl
  # DEBUG D#228 => D#230
  # DEBUG D#229 => D#232
  # DEBUG __p => NULL
  # DEBUG __a => D#228
  # DEBUG __n => D#229
  # DEBUG D#227 => D#229
  # DEBUG D#226 => D#228
  # DEBUG D#224 => D#226
  # DEBUG D#225 => D#227
  # DEBUG __p => NULL
  # DEBUG this => D#224
  # DEBUG D.49737 => D#225
  operator delete (__new_finish_153);

  <bb 113>:
  __cxa_rethrow ();

<L10>:
  __cxa_end_catch ();
  resx 7

  <bb 115>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 116>:
  # DEBUG __first => _40
  # DEBUG __last => _37
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => _40
  # DEBUG __last => _37
  __dnew = _39;
  if (_39 > 15)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 117>:
  # DEBUG __first => _34
  # DEBUG __last => _27
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => _34
  # DEBUG __last => _27
  __dnew = _33;
  if (_33 > 15)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 118>:
  # DEBUG __len => NULL
  # DEBUG this => this_7(D)
  # DEBUG D#117 => &this_7(D)->D.36900._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#117
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.40360
  # DEBUG this => &__position
  _406 = (long int) __position_28;
  # DEBUG this => &D.40360
  _407 = _406 - _156;
  # DEBUG D#467 => _407 /[ex] 32
  # DEBUG __elems_before => (const size_type) D#467
  # DEBUG D#466 => &this_7(D)->D.36900
  # DEBUG D#337 => D#466
  # DEBUG __n => NULL
  # DEBUG this => D#337
  # DEBUG D#336 => D#337
  goto <bb 29>;

  <bb 119>:
  # __len_59 = PHI <__len_164(27), 1(25)>
  # DEBUG __len => __len_59
  # DEBUG D#98 => this_7(D)
  # DEBUG this => D#98
  # DEBUG this => D#98
  # DEBUG D#329 => this_7(D)
  # DEBUG this => D#329
  # DEBUG D#328 => D#329
  # DEBUG D#327 => &D#328->D.36900
  # DEBUG this => D#327
  # DEBUG __a => D#326
  # DEBUG D#325 => D#326
  # DEBUG D#324 => D#325
  # DEBUG this => D#324
  # DEBUG __len => NULL
  # DEBUG this => this_7(D)
  # DEBUG D#117 => &this_7(D)->D.36900._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#117
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.40360
  # DEBUG this => &__position
  _395 = (long int) __position_28;
  # DEBUG this => &D.40360
  _402 = _395 - _156;
  # DEBUG D#467 => _402 /[ex] 32
  # DEBUG __elems_before => (const size_type) D#467
  # DEBUG D#466 => &this_7(D)->D.36900
  # DEBUG D#337 => D#466
  # DEBUG __n => NULL
  # DEBUG this => D#337
  # DEBUG D#336 => D#337
  if (__len_59 != 0)
    goto <bb 28>;
  else
    goto <bb 30>;

  <bb 120>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 121>:
  # DEBUG __first => _65
  # DEBUG __last => _67
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => _65
  # DEBUG __last => _67
  __dnew = _66;
  if (_66 > 15)
    goto <bb 32>;
  else
    goto <bb 34>;

  <bb 122>:
  # __new_finish_124 = PHI <__new_finish_214(41)>
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L25>:
  goto <bb 53> (<L11>);

  <bb 124>:
  # DEBUG __first => _179
  # DEBUG __last => _181
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => _179
  # DEBUG __last => _181
  __dnew = _180;
  if (_180 > 15)
    goto <bb 42>;
  else
    goto <bb 44>;

  <bb 125>:
  # __new_finish_201 = PHI <__new_finish_111(63)>
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L26>:
  goto <bb 75> (<L14>);

  <bb 127>:
  # DEBUG __first => _203
  # DEBUG __last => _205
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => _203
  # DEBUG __last => _205
  __dnew = _204;
  if (_204 > 15)
    goto <bb 64>;
  else
    goto <bb 66>;

<L17>:
  # DEBUG __new_finish => 0B
  _232 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_232);
  pretmp_107 = &_32->D.11539._M_local_buf;
  goto <bb 103>;

<L18>:
  # DEBUG __new_finish => __new_finish_153
  _160 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_160);
  if (__new_finish_153 == 0B)
    goto <bb 103>;
  else
    goto <bb 101>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE, funcdef_no=2027, decl_uid=35420, cgraph_uid=697, symbol_order=698)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#129 => __x_68
  # DEBUG __x => D#129
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#130 => __x_68
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_68
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_68
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_68
  # DEBUG this => D#404
  # DEBUG D.48872 => D#405
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#129 => __x_72
  # DEBUG __x => D#129
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#130 => __x_72
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_72
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_72
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_72
  # DEBUG this => D#404
  # DEBUG D.53008 => D#405
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#129 => __x_71
  # DEBUG __x => D#129
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#130 => __x_71
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_71
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_71
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_71
  # DEBUG this => D#404
  # DEBUG D.53021 => D#405
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#129 => __x_77
  # DEBUG __x => D#129
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#130 => __x_77
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_77
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_77
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_77
  # DEBUG this => D#404
  # DEBUG D.53034 => D#405
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#129 => __x_80
  # DEBUG __x => D#129
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#130 => __x_80
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_80
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_80
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_80
  # DEBUG this => D#404
  # DEBUG D.53047 => D#405
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#129 => __x_83
  # DEBUG __x => D#129
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#130 => __x_83
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_83
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_83
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_83
  # DEBUG this => D#404
  # DEBUG D.53060 => D#405
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#129 => __x_86
  # DEBUG __x => D#129
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#130 => __x_86
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_86
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_86
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_86
  # DEBUG this => D#404
  # DEBUG D.53073 => D#405
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#129 => __x_89
  # DEBUG __x => D#129
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#130 => __x_89
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_89
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_89
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_89
  # DEBUG this => D#404
  # DEBUG D.53086 => D#405
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#129 => __x_92
  # DEBUG __x => D#129
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#130 => __x_92
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_92
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_92
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_92
  # DEBUG this => D#404
  # DEBUG D.53099 => D#405
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>) (_ZN31UniformBackgroundTrafficPatternC2EiSt6vectorIiSaIiEE, funcdef_no=1812, decl_uid=35909, cgraph_uid=482, symbol_order=483)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>) (struct UniformBackgroundTrafficPattern * const this, int nodes, struct vector & restrict excluded_nodes)
{
  struct _Rb_tree_node_base * SR.991;
  struct _Rb_tree_node_base * SR.990;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  bool __insert_left;
  struct iterator D.53177;
  struct pair D.53150;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct pair D.53123;
  struct iterator D.53122;
  struct pair __res;
  struct _Rb_tree_node_base * __res$first;
  struct _Rb_tree_node_base * __res$second;
  struct _Rb_tree_node_base * SR.705;
  struct pair __p;
  const int node;
  size_t i;
  static const char __PRETTY_FUNCTION__[88] = "UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>)";
  static const char __PRETTY_FUNCTION__[88] = "UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>)";
  long int _7;
  int node.101_10;
  int _12;
  const int prephitmp_15;
  long int _21;
  long int _22;
  long int _23;
  size_type _24;
  long unsigned int _25;
  int & _26;
  struct _Rb_tree_node_base * _28;
  const int pretmp_33;
  struct _Rb_tree_node_base * pretmp_41;
  struct _Rb_tree_node_base * prephitmp_42;
  int * const prephitmp_43;
  int * const prephitmp_45;
  const int _56;
  struct _Rb_tree_node_base * _58;
  struct _Rb_tree_node_base * _59;
  struct _Rb_tree_node_base * _61;
  int node.101_66;
  struct _Rb_tree_node_base * const _67;
  int * const prephitmp_70;
  const int _72;
  struct _Rb_tree_node * _73;
  long int _74;
  int _78;
  long unsigned int _79;
  long unsigned int _80;
  struct _Rep_type * pretmp_87;
  long int _95;
  long int _96;
  int * const _100;
  long int _101;
  int * const _102;
  int node.101_107;
  int * const pretmp_108;
  const int _110;
  int * const prephitmp_113;
  int * const pretmp_114;

  <bb 2>:
  # DEBUG D#534 => &this_3(D)->D.35913
  # DEBUG this => D#534
  # DEBUG nodes => nodes_5(D)
  # DEBUG D#84 => &D#534->D.35001
  # DEBUG this => D#84
  # DEBUG nodes => nodes_5(D)
  MEM[(struct TrafficPattern *)this_3(D)]._vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  MEM[(struct TrafficPattern *)this_3(D)]._nodes = nodes_5(D);
  if (nodes_5(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#62 => D#84
  # DEBUG D#63 => nodes_5(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 4>:
  this_3(D)->D.35913.D.35001._vptr.TrafficPattern = &MEM[(void *)&_ZTV31UniformBackgroundTrafficPattern + 16B];
  # DEBUG D#533 => &this_3(D)->_excluded
  # DEBUG this => D#533
  # DEBUG D#310 => &D#533->_M_t
  # DEBUG this => D#310
  # DEBUG D#309 => &MEM[(struct _Rb_tree *)D#310]._M_impl
  # DEBUG this => D#309
  # DEBUG this => D#309
  # DEBUG this => D#309
  MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_node_count = 0;
  # DEBUG this => D#309
  __j$_M_node_9 = &MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header;
  MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_left = __j$_M_node_9;
  MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_right = __j$_M_node_9;
  # DEBUG i => 0
  # DEBUG i => 0
  _102 = MEM[(int * *)excluded_nodes_8(D)];
  # DEBUG D#99 => excluded_nodes_8(D)
  _100 = MEM[(int * *)excluded_nodes_8(D) + 8B];
  # DEBUG D#99 => excluded_nodes_8(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  _101 = (long int) _100;
  _74 = (long int) _102;
  _95 = _101 - _74;
  _96 = _95 /[ex] 4;
  if (_96 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 33>:
  return;

  <bb 6>:
  # DEBUG D#100 => excluded_nodes_8(D)
  # DEBUG __n => 0
  # DEBUG this => D#100
  node.101_66 = *_102;
  # DEBUG node => node.101_66
  if (node.101_66 < 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("(node >= 0) && (node < _nodes)", "traffic.cpp", 397, &__PRETTY_FUNCTION__);

  <bb 8>:
  if (nodes_5(D) <= node.101_66)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 9>:
  # DEBUG D#100 => excluded_nodes_8(D)
  # DEBUG __n => i_14
  # DEBUG this => D#100
  _25 = i_14 * 4;
  _26 = prephitmp_113 + _25;
  node.101_10 = *_26;
  # DEBUG node => node.101_10
  if (node.101_10 < 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 10>:
  _12 = this_3(D)->D.35913.D.35001._nodes;
  if (node.101_10 >= _12)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  pretmp_41 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B];
  goto <bb 13>;

  <bb 12>:

  <bb 13>:
  # i_103 = PHI <0(12), i_14(11)>
  # node.101_107 = PHI <node.101_66(12), node.101_10(11)>
  # prephitmp_42 = PHI <0B(12), pretmp_41(11)>
  # prephitmp_43 = PHI <_100(12), prephitmp_70(11)>
  # prephitmp_45 = PHI <_102(12), prephitmp_113(11)>
  # DEBUG i => i_103
  # DEBUG D#99 => excluded_nodes_8(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG D#100 => excluded_nodes_8(D)
  # DEBUG __n => i_103
  # DEBUG this => D#100
  # DEBUG node => node.101_107
  # DEBUG D#527 => &this_3(D)->_excluded
  # DEBUG this => D#527
  # DEBUG __x => &node
  # DEBUG D#681 => &MEM[(struct set *)this_3(D) + 16B]._M_t
  # DEBUG this => D#681
  # DEBUG __v => &node
  # DEBUG __x => &node
  # DEBUG this => D#131
  # DEBUG this => D#681
  # DEBUG __k => &node
  # DEBUG D#680 => MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B]
  # DEBUG D#111 => D#681
  # DEBUG this => D#111
  # DEBUG __x => NULL
  # DEBUG this => D#681
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_9
  # DEBUG __x => D#680
  if (prephitmp_42 == 0B)
    goto <bb 21>;
  else
    goto <bb 16>;

  <bb 14>:
  # _67 = PHI <_58(18), _59(19)>
  # DEBUG __comp => _56 > node.101_107
  # DEBUG __y => __j$_M_node_106
  # DEBUG __x => _67
  if (_67 == 0B)
    goto <bb 20>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 17>;

  <bb 16>:

  <bb 17>:
  # __j$_M_node_106 = PHI <prephitmp_42(16), _67(15)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_106
  # DEBUG __y => __j$_M_node_106
  # DEBUG __x => __j$_M_node_106
  # DEBUG __x => __j$_M_node_106
  # DEBUG this => __j$_M_node_106
  # DEBUG D#421 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_106]._M_value_field
  # DEBUG __r => D#421
  # DEBUG __x => D#421
  # DEBUG this => D#131
  # DEBUG D#425 => &MEM[(struct _Rb_tree *)D#681]._M_impl._M_key_compare
  # DEBUG D#133 => D#425
  # DEBUG D#134 => &node
  _56 = MEM[(const int &)__j$_M_node_106 + 32];
  # DEBUG D#135 => D#421
  # DEBUG this => D#133
  # DEBUG __x => D#134
  # DEBUG __y => D#135
  # DEBUG __comp => NULL
  if (_56 > node.101_107)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _58 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B];
  # DEBUG D#130 => __j$_M_node_106
  # DEBUG __x => D#130
  goto <bb 14>;

  <bb 19>:
  _59 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B];
  # DEBUG D#129 => __j$_M_node_106
  # DEBUG __x => D#129
  goto <bb 14>;

  <bb 20>:
  # _110 = PHI <_56(14)>
  # __j$_M_node_97 = PHI <__j$_M_node_106(14)>

  <bb 32>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_97
  # DEBUG __j$_M_node => __j$_M_node_97
  if (_110 > node.101_107)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 21>:
  # __j$_M_node_109 = PHI <__j$_M_node_97(32), __j$_M_node_9(13)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_109
  # DEBUG __j$_M_node => __j$_M_node_109
  _61 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 40B];
  # DEBUG D#205 => D#681
  # DEBUG this => D#205
  # DEBUG this => NULL
  # DEBUG __x => _61
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_61 == __j$_M_node_109)
    goto <bb 24>;
  else
    goto <bb 22>;

  <bb 22>:
  # DEBUG this => &__j
  __j$_M_node_63 = std::_Rb_tree_decrement (__j$_M_node_109);
  # DEBUG __j$_M_node => __j$_M_node_63
  pretmp_33 = MEM[(const int &)__j$_M_node_63 + 32];

  <bb 23>:
  # __j$_M_node_68 = PHI <__j$_M_node_97(32), __j$_M_node_109(22)>
  # prephitmp_15 = PHI <_110(32), pretmp_33(22)>
  # DEBUG __j$_M_node => NULL
  # DEBUG __x => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __r => D#422
  # DEBUG __x => D#422
  # DEBUG this => D#131
  # DEBUG D#424 => &MEM[(struct _Rb_tree *)D#681]._M_impl._M_key_compare
  # DEBUG D#133 => D#424
  # DEBUG D#134 => D#422
  # DEBUG D#135 => &node
  # DEBUG this => D#133
  # DEBUG __x => D#134
  # DEBUG __y => D#135
  if (prephitmp_15 < node.101_107)
    goto <bb 24>;
  else
    goto <bb 29>;

  <bb 24>:
  # __res$8_89 = PHI <_61(21), __j$_M_node_68(23)>
  # DEBUG D#423 => {CLOBBER}
  # DEBUG __j$_M_node => D#423
  # DEBUG __res => 0B
  # DEBUG __res$8 => __res$8_89
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __res$8_89
  if (__res$8_89 != 0B)
    goto <bb 25>;
  else
    goto <bb 29>;

  <bb 25>:
  # DEBUG this => &__an
  # DEBUG __t => D#681
  # DEBUG __an$_M_t => D#681
  # DEBUG D#522 => &__an
  # DEBUG this => D#681
  # DEBUG __x => 0B
  # DEBUG __p => __res$8_89
  # DEBUG __v => &node
  # DEBUG __node_gen => D#522
  # DEBUG D#521 => D#522
  # DEBUG this => D#681
  if (__j$_M_node_9 == __res$8_89)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  # DEBUG __x => __res$8_89
  # DEBUG __x => __res$8_89
  # DEBUG this => __res$8_89
  # DEBUG D#519 => &MEM[(const struct _Rb_tree_node *)__res$8_89]._M_value_field
  # DEBUG __r => D#519
  # DEBUG __x => D#519
  # DEBUG this => D#131
  # DEBUG __x => &node
  # DEBUG this => D#131
  # DEBUG D#520 => &MEM[(struct _Rb_tree *)D#681]._M_impl._M_key_compare
  # DEBUG D#133 => D#520
  _72 = MEM[(const int &)__res$8_89 + 32];
  # DEBUG D#135 => D#519
  # DEBUG this => D#133
  # DEBUG __x => D#134
  # DEBUG __y => D#135
  __insert_left_55 = _72 > node.101_107;

  <bb 27>:
  # __insert_left_77 = PHI <__insert_left_55(26), 1(25)>
  # DEBUG __insert_left => __insert_left_77
  # DEBUG D#518 => D#521
  # DEBUG __arg => &node
  # DEBUG this => D#518
  # DEBUG D#517 => D#518
  # DEBUG D#516 => D#517->_M_t
  # DEBUG D#515 => D#516
  # DEBUG __x => &node
  # DEBUG this => D#515
  # DEBUG D#514 => D#515
  # DEBUG D#513 => D#515
  # DEBUG D#512 => D#513
  # DEBUG this => D#512
  # DEBUG D#511 => D#512
  # DEBUG this => D#511
  # DEBUG __n => 1
  # DEBUG __a => D#510
  # DEBUG D#509 => D#510
  # DEBUG D#507 => D#509
  # DEBUG D#508 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#507
  # DEBUG D.53167 => D#508
  # DEBUG D#506 => D#507
  # DEBUG D#505 => D#506
  # DEBUG this => D#505
  _73 = operator new (40);

  <bb 28>:
  # DEBUG __tmp => _73
  # DEBUG D#504 => D#514
  # DEBUG __node => _73
  # DEBUG __x => &node
  # DEBUG this => D#504
  # DEBUG D#503 => D#504
  # DEBUG this => _73
  # DEBUG D#679 => &_73->_M_value_field
  # DEBUG __r => D#679
  # DEBUG D#397 => D#503
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#679
  # DEBUG __val => &node
  # DEBUG this => D#502
  # DEBUG D#33 => 4
  # DEBUG __p => D#679
  # DEBUG D.50198 => D#33
  MEM[(int *)_73 + 32B] = node.101_107;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _73
  _78 = (int) __insert_left_77;
  std::_Rb_tree_insert_and_rebalance (_78, _73, __res$8_89, __j$_M_node_9);
  _79 = MEM[(struct _Rb_tree *)this_3(D) + 16B]._M_impl._M_node_count;
  _80 = _79 + 1;
  MEM[(struct _Rb_tree *)this_3(D) + 16B]._M_impl._M_node_count = _80;
  # DEBUG this => NULL
  # DEBUG __x => _73
  # DEBUG this => NULL
  # DEBUG __a => &D.53122
  # DEBUG __b => NULL
  D.53122 ={v} {CLOBBER};
  pretmp_114 = MEM[(int * *)excluded_nodes_8(D)];
  pretmp_108 = MEM[(int * *)excluded_nodes_8(D) + 8B];

  <bb 29>:
  # prephitmp_113 = PHI <pretmp_114(28), prephitmp_45(24), prephitmp_45(23)>
  # prephitmp_70 = PHI <pretmp_108(28), prephitmp_43(24), prephitmp_43(23)>
  # DEBUG D#525 => {CLOBBER}
  # DEBUG __res$first => D#525
  # DEBUG D#526 => {CLOBBER}
  # DEBUG __res$second => D#526
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#532 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#531 => MEM[(const bool &)&__p + 8]
  # DEBUG D#530 => VIEW_CONVERT_EXPR<unsigned char>(D#531)
  __p ={v} {CLOBBER};
  # DEBUG D.50521 => D#532
  # DEBUG D.50522 => D#530
  # DEBUG D#678 => {CLOBBER}
  # DEBUG node => D#678
  i_14 = i_103 + 1;
  # DEBUG i => i_14
  # DEBUG i => i_14
  # DEBUG D#99 => excluded_nodes_8(D)
  # DEBUG D#99 => excluded_nodes_8(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  _7 = (long int) prephitmp_70;
  _21 = (long int) prephitmp_113;
  _22 = _7 - _21;
  _23 = _22 /[ex] 4;
  _24 = (size_type) _23;
  if (i_14 < _24)
    goto <bb 9>;
  else
    goto <bb 5>;

<L7>:
  # DEBUG D#677 => {CLOBBER}
  # DEBUG node => D#677
  # DEBUG D#529 => &this_3(D)->_excluded
  # DEBUG this => D#529
  # DEBUG this => D#681
  _28 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B];
  # DEBUG D#111 => D#681
  # DEBUG this => D#111
  pretmp_87 = &MEM[(struct set *)this_3(D) + 16B]._M_t;
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (pretmp_87, _28);
  # DEBUG D#414 => &MEM[(struct _Rb_tree *)D#681]._M_impl
  # DEBUG this => D#414
  # DEBUG this => D#414
  # DEBUG this => D#414
  MEM[(struct  &)this_3(D) + 16] ={v} {CLOBBER};
  resx 2

<L8>:
  # DEBUG D#528 => &this_3(D)->D.35913
  # DEBUG this => D#528
  # DEBUG D#85 => &D#528->D.35001
  # DEBUG this => D#85
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  resx 1

}



;; Function UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern() (_ZN31UniformBackgroundTrafficPatternD2Ev, funcdef_no=2364, decl_uid=35902, cgraph_uid=1034, symbol_order=1042)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern() (struct UniformBackgroundTrafficPattern * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rep_type * _5;
  struct _Rb_tree_node_base * _18;

  <bb 2>:
  this_2(D)->D.35913.D.35001._vptr.TrafficPattern = &MEM[(void *)&_ZTV31UniformBackgroundTrafficPattern + 16B];
  # DEBUG D#416 => &this_2(D)->_excluded
  # DEBUG this => D#416
  _5 = &MEM[(struct set *)this_2(D) + 16B]._M_t;
  # DEBUG this => _5
  __x_7 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 32B];
  # DEBUG D#111 => _5
  # DEBUG this => D#111
  # DEBUG this => _5
  # DEBUG __x => __x_7
  # DEBUG __x => __x_7
  if (__x_7 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#414 => &MEM[(struct _Rb_tree *)_5]._M_impl
  # DEBUG this => D#414
  # DEBUG this => D#414
  # DEBUG this => D#414
  # DEBUG D#415 => &this_2(D)->D.35913
  # DEBUG this => D#415
  # DEBUG D#85 => &D#415->D.35001
  # DEBUG this => D#85
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

  <bb 4>:

  <bb 5>:
  # __x_24 = PHI <__x_7(4), __x_19(6)>
  # DEBUG __x => __x_24
  _18 = MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B];
  # DEBUG D#129 => __x_24
  # DEBUG __x => D#129
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_5, _18);
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_24 + 16B];
  # DEBUG D#130 => __x_24
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => _5
  # DEBUG __p => __x_24
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_24
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_24
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_24
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_24
  # DEBUG this => D#404
  # DEBUG D.53221 => D#405
  operator delete (__x_24);
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

}



;; Function virtual UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern() (_ZN31UniformBackgroundTrafficPatternD0Ev, funcdef_no=2366, decl_uid=35896, cgraph_uid=1036, symbol_order=1044)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern() (struct UniformBackgroundTrafficPattern * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rep_type * _5;
  struct _Rb_tree_node_base * _19;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.35913.D.35001._vptr.TrafficPattern = &MEM[(void *)&_ZTV31UniformBackgroundTrafficPattern + 16B];
  # DEBUG D#416 => &this_2(D)->_excluded
  # DEBUG this => D#416
  _5 = &MEM[(struct set *)this_2(D) + 16B]._M_t;
  # DEBUG this => _5
  __x_6 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 32B];
  # DEBUG D#111 => _5
  # DEBUG this => D#111
  # DEBUG this => _5
  # DEBUG __x => __x_6
  # DEBUG __x => __x_6
  if (__x_6 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#414 => &MEM[(struct _Rb_tree *)_5]._M_impl
  # DEBUG this => D#414
  # DEBUG this => D#414
  # DEBUG this => D#414
  # DEBUG D#415 => &this_2(D)->D.35913
  # DEBUG this => D#415
  # DEBUG D#85 => &D#415->D.35001
  # DEBUG this => D#85
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

  <bb 4>:

  <bb 5>:
  # __x_25 = PHI <__x_6(4), __x_20(6)>
  # DEBUG __x => __x_25
  _19 = MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B];
  # DEBUG D#129 => __x_25
  # DEBUG __x => D#129
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_5, _19);
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_25 + 16B];
  # DEBUG D#130 => __x_25
  # DEBUG __x => D#130
  # DEBUG __y => NULL
  # DEBUG D#413 => _5
  # DEBUG __p => __x_25
  # DEBUG this => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#413
  # DEBUG D#402 => D#410
  # DEBUG D#403 => __x_25
  # DEBUG this => D#402
  # DEBUG __p => D#403
  # DEBUG D#401 => D#402
  # DEBUG D#400 => D#403
  # DEBUG D#399 => D#403
  # DEBUG this => D#399
  # DEBUG D#398 => &D#400->_M_value_field
  # DEBUG __r => D#398
  # DEBUG D#397 => D#401
  # DEBUG this => D#397
  # DEBUG D#396 => D#397
  # DEBUG this => D#396
  # DEBUG this => NULL
  # DEBUG D.48773 => NULL
  # DEBUG this => NULL
  # DEBUG D#312 => D#398
  # DEBUG this => D#311
  # DEBUG __p => D#312
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#411
  # DEBUG __p => __x_25
  # DEBUG this => D#412
  # DEBUG D#409 => 1
  # DEBUG __p => __x_25
  # DEBUG __a => D#408
  # DEBUG __n => D#409
  # DEBUG D#407 => D#409
  # DEBUG D#406 => D#408
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#407
  # DEBUG __p => __x_25
  # DEBUG this => D#404
  # DEBUG D.53238 => D#405
  operator delete (__x_25);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=2107, decl_uid=34863, cgraph_uid=777, symbol_order=778)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.53280;
  const size_type __len;
  size_type D.53279;
  size_type __n;
  int * D.53270;
  const ptrdiff_t _Num;
  int * D.53261;
  int * const __position;
  int * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  int * __first;
  long unsigned int __n;
  int * __first;
  const ptrdiff_t _Num;
  int * __first;
  int * __new_finish;
  const size_type __elems_after;
  value_type __x_copy;
  int * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  int * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  int * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  int * _41;
  int * _43;
  long int _47;
  int * _48;
  long int __first.82_49;
  int * _53;
  const int _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  int * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  int * _108;
  int * _112;
  int * iftmp.79_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  int * prephitmp_146;
  int * pretmp_147;
  int * prephitmp_148;
  int * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  int * pretmp_166;
  int * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  int * pretmp_173;
  int * prephitmp_174;

  <bb 2>:
  # DEBUG D#692 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#692
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.34940._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.34940._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 4;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#118 => &this_4(D)->D.34940._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#118
  # DEBUG __lhs => &D.41028
  # DEBUG __rhs => &__position
  # DEBUG this => &D.41028
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 4;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#474 => &this_4(D)->D.34940
  # DEBUG this => D#474
  _39 = __n_2(D) * 4;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#246
  # DEBUG D#245 => D#246
  # DEBUG D#244 => D#245
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.49842 => D#244
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __first.82_49 = (long int) _41;
  _47 = _8 - __first.82_49;
  _Num_45 = _47 /[ex] 4;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.34940._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.34940._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#692
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#692
  # DEBUG __it => D#692
  # DEBUG __first => D#692
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#692
  # DEBUG __it => D#692
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _104 = __first.82_49 - _27;
  _Num_105 = _104 /[ex] 4;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#251 => &__x_copy
  # DEBUG __first => D#692
  # DEBUG __last => _48
  # DEBUG D#250 => D#251
  # DEBUG __value => D#250
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#692
  # DEBUG __it => D#692
  # DEBUG D#249 => D#250
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __value => D#249
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#692
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 4;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#475 => &this_4(D)->D.34940
  # DEBUG this => D#475
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#376 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#375 => D#376
  # DEBUG __x => D#375
  # DEBUG D.49927 => D#377
  # DEBUG D#374 => D#375
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#373 => D#374
  # DEBUG __x => D#373
  # DEBUG __assignable => 1
  # DEBUG D#372 => D#373
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#371 => D#372
  # DEBUG __x => D#371
  # DEBUG D#308 => D#371
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#307 => D#308
  # DEBUG __value => D#307
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#306 => D#307
  # DEBUG __first => NULL
  # DEBUG __n => __n_50
  # DEBUG __value => D#306
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 4;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 4;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.34940._M_impl._M_finish = __first_125;
  # DEBUG D#476 => &this_4(D)->D.34940
  # DEBUG this => D#476
  # DEBUG this => &__position
  # DEBUG __first => D#692
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#246
  # DEBUG D#245 => D#246
  # DEBUG D#244 => D#245
  # DEBUG __first => D#692
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.49889 => D#244
  # DEBUG __first => D#692
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#692
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#692
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#692
  # DEBUG __it => D#692
  # DEBUG __first => D#692
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#692
  # DEBUG __it => D#692
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.34940._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.34940._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#251 => &__x_copy
  # DEBUG __first => D#692
  # DEBUG __last => __first_7
  # DEBUG D#250 => D#251
  # DEBUG __value => D#250
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#692
  # DEBUG __it => D#692
  # DEBUG D#249 => D#250
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __value => D#249
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#692
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 4;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#395 => this_4(D)
  # DEBUG this => D#395
  # DEBUG D#394 => D#395
  # DEBUG D#393 => &D#394->D.34940
  # DEBUG this => D#393
  # DEBUG __a => D#392
  # DEBUG D#391 => D#392
  # DEBUG D#338 => D#391
  # DEBUG this => D#338
  _17 = MEM[(int * *)this_4(D)];
  # DEBUG D#99 => this_4(D)
  # DEBUG D#99 => this_4(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 4;
  _119 = (const long unsigned int) _118;
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#99 => this_4(D)
  # DEBUG D#99 => this_4(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG D#99 => this_4(D)
  # DEBUG D#99 => this_4(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG __a => &D.53280
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#99 => this_4(D)
  # DEBUG D#99 => this_4(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG D#395 => this_4(D)
  # DEBUG this => D#395
  # DEBUG D#394 => D#395
  # DEBUG D#393 => &D#394->D.34940
  # DEBUG this => D#393
  # DEBUG __a => D#392
  # DEBUG D#391 => D#392
  # DEBUG D#338 => D#391
  # DEBUG this => D#338
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 4;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551612(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#119 => &this_4(D)->D.34940._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#119
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.41061
  # DEBUG this => &__position
  # DEBUG this => &D.41061
  # DEBUG D#487 => _157 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#487
  # DEBUG D#486 => &this_4(D)->D.34940
  # DEBUG D#346 => D#486
  # DEBUG __n => NULL
  # DEBUG this => D#346
  # DEBUG D#345 => D#346
  # DEBUG D#344 => &D#345->_M_impl
  # DEBUG D#343 => D#344
  # DEBUG __n => NULL
  # DEBUG __a => D#343
  # DEBUG D#342 => D#343
  # DEBUG D#340 => D#342
  # DEBUG D#341 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#340
  # DEBUG D.53268 => D#341
  # DEBUG D#339 => D#340
  # DEBUG D#338 => D#339
  # DEBUG this => D#338
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.34940._M_impl._M_start;
  pretmp_147 = this_4(D)->D.34940._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.79_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#470 => &this_4(D)->D.34940
  # DEBUG this => D#470
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.79_113 + _19;
  _56 = MEM[(const int &)__x_21(D)];
  # DEBUG D#376 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#375 => D#376
  # DEBUG __x => D#375
  # DEBUG D.50044 => D#377
  # DEBUG D#374 => D#375
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#373 => D#374
  # DEBUG __x => D#373
  # DEBUG __assignable => 1
  # DEBUG D#372 => D#373
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#371 => D#372
  # DEBUG __x => D#371
  # DEBUG D#308 => D#371
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#307 => D#308
  # DEBUG __value => D#307
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#306 => D#307
  # DEBUG __first => NULL
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#306
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 4;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#471 => &this_4(D)->D.34940
  # DEBUG this => D#471
  # DEBUG this => &__position
  # DEBUG D#691 => this_4(D)->D.34940._M_impl._M_start
  # DEBUG __first => D#691
  # DEBUG __last => D#692
  # DEBUG __result => NULL
  # DEBUG __alloc => D#248
  # DEBUG D#247 => D#248
  # DEBUG D#244 => D#247
  # DEBUG __first => D#691
  # DEBUG __last => D#692
  # DEBUG __result => NULL
  # DEBUG D.50006 => D#244
  # DEBUG __first => D#691
  # DEBUG __last => D#692
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#691
  # DEBUG __last => D#692
  # DEBUG __result => NULL
  # DEBUG __first => D#691
  # DEBUG __last => D#692
  # DEBUG __result => NULL
  # DEBUG __it => D#692
  # DEBUG __it => D#692
  # DEBUG __it => D#691
  # DEBUG __it => D#691
  # DEBUG __first => D#691
  # DEBUG __last => D#692
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#692
  # DEBUG __it => D#692
  # DEBUG __it => D#691
  # DEBUG __it => D#691
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG D#690 => (long int) D#691
  # DEBUG D#689 => _158 - D#690
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.79_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#688 => (long unsigned int) D#689
  # DEBUG __new_finish => iftmp.79_113 + D#688
  _25 = __n_2(D) * 4;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.79_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#472 => &this_4(D)->D.34940
  # DEBUG this => D#472
  # DEBUG D#687 => this_4(D)->D.34940._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#692
  # DEBUG __last => D#687
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#248
  # DEBUG D#247 => D#248
  # DEBUG D#244 => D#247
  # DEBUG __first => D#692
  # DEBUG __last => D#687
  # DEBUG __result => __new_finish_26
  # DEBUG D.49967 => D#244
  # DEBUG __first => D#692
  # DEBUG __last => D#687
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#692
  # DEBUG __last => D#687
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#692
  # DEBUG __last => D#687
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#687
  # DEBUG __it => D#687
  # DEBUG __it => D#692
  # DEBUG __it => D#692
  # DEBUG __first => D#692
  # DEBUG __last => D#687
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#687
  # DEBUG __it => D#687
  # DEBUG __it => D#692
  # DEBUG __it => D#692
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 4;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#473 => &this_4(D)->D.34940
  # DEBUG this => D#473
  # DEBUG D#485 => this_4(D)->D.34940._M_impl._M_finish
  # DEBUG D#484 => this_4(D)->D.34940._M_impl._M_start
  # DEBUG __first => D#484
  # DEBUG __last => D#485
  # DEBUG D.49960 => NULL
  # DEBUG D#140 => D#484
  # DEBUG D#141 => D#485
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#483 => this_4(D)->D.34940._M_impl._M_end_of_storage
  # DEBUG D#482 => (long int) D#483
  # DEBUG D#481 => (long int) D#691
  # DEBUG D#480 => D#482 - D#481
  # DEBUG D#479 => D#480 /[ex] 4
  # DEBUG D#478 => (long unsigned int) D#479
  # DEBUG D#477 => &this_4(D)->D.34940
  # DEBUG this => D#477
  # DEBUG __p => D#691
  # DEBUG __n => D#478
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#159 => &D#477->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#478
  # DEBUG __p => D#691
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => D#691
  # DEBUG this => D#153
  # DEBUG D.49956 => D#154
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.34940._M_impl._M_start = iftmp.79_113;
  this_4(D)->D.34940._M_impl._M_finish = _70;
  this_4(D)->D.34940._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#119 => &this_4(D)->D.34940._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#119
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.41061
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.41061
  _143 = _144 - _116;
  # DEBUG D#487 => _143 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#487
  # DEBUG D#486 => &this_4(D)->D.34940
  # DEBUG D#346 => D#486
  # DEBUG __n => NULL
  # DEBUG this => D#346
  # DEBUG D#345 => D#346
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#119 => &this_4(D)->D.34940._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#119
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.41061
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.41061
  _150 = _151 - _116;
  # DEBUG D#487 => _150 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#487
  # DEBUG D#486 => &this_4(D)->D.34940
  # DEBUG D#346 => D#486
  # DEBUG __n => NULL
  # DEBUG this => D#346
  # DEBUG D#345 => D#346
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function RandomPermutationTrafficPattern::RandomPermutationTrafficPattern(int, int) (_ZN31RandomPermutationTrafficPatternC2Eii, funcdef_no=1793, decl_uid=34969, cgraph_uid=463, symbol_order=464)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
RandomPermutationTrafficPattern::RandomPermutationTrafficPattern(int, int) (struct RandomPermutationTrafficPattern * const this, int nodes, int seed)
{
  int * D.53663;
  int * __first;
  size_type __n;
  int * __tmp;
  int * __tmp;
  int * __tmp;
  struct vector __tmp;
  long unsigned int __n;
  int * __first;
  int * __first;
  int * __first;
  size_t __n;
  struct vector save_x;
  struct vector save_u;
  int i;
  int j;
  int cnt;
  int __val;
  static const char __PRETTY_FUNCTION__[53] = "void RandomPermutationTrafficPattern::randomize(int)";
  struct iterator __position;
  value_type __x;
  int * _5;
  long unsigned int _8;
  struct vector * _9;
  long int _10;
  int prephitmp_19;
  int * pretmp_21;
  int * pretmp_22;
  int * prephitmp_24;
  int _27;
  unsigned long _28;
  unsigned long _34;
  int _37;
  sizetype _38;
  int _40;
  int _42;
  int _43;
  long int _44;
  int _45;
  long int _46;
  long int _47;
  int _48;
  long unsigned int _51;
  long unsigned int _53;
  int & _54;
  int _55;
  long unsigned int _57;
  long unsigned int _59;
  int & _60;
  int _61;
  int _64;
  int & _67;
  long unsigned int _68;
  double * _70;
  long int * _71;
  double * _72;
  long int * _73;
  int * const _76;
  long int _77;
  long int _78;
  long int _79;
  long int _80;
  size_type _81;
  long int _83;
  long int _84;
  long int _85;
  size_type _86;
  unsigned long _94;
  sizetype _95;
  int * _110;
  sizetype _112;
  sizetype _113;
  long unsigned int _116;
  int * _117;
  int * _121;
  unsigned long _148;
  sizetype _152;
  sizetype _163;
  sizetype _165;
  long unsigned int _181;
  int pretmp_182;
  int pretmp_183;
  int prephitmp_184;
  int * pretmp_187;
  sizetype _195;
  long unsigned int _202;
  long unsigned int _203;
  int pretmp_204;
  int * _213;
  int * _214;
  long unsigned int _215;
  long unsigned int _218;

  <bb 2>:
  # DEBUG D#491 => &this_2(D)->D.34973
  # DEBUG this => D#491
  # DEBUG nodes => nodes_4(D)
  MEM[(struct TrafficPattern *)this_2(D)]._vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  MEM[(struct TrafficPattern *)this_2(D)]._nodes = nodes_4(D);
  if (nodes_4(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#62 => D#491
  # DEBUG D#63 => nodes_4(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 4>:
  this_2(D)->D.34973._vptr.TrafficPattern = &MEM[(void *)&_ZTV31RandomPermutationTrafficPattern + 16B];
  # DEBUG D#490 => &this_2(D)->_dest
  # DEBUG this => D#490
  # DEBUG D#209 => &D#490->D.34940
  # DEBUG this => D#209
  # DEBUG D#208 => &D#209->_M_impl
  # DEBUG this => D#208
  # DEBUG this => D#208
  # DEBUG this => D#208
  MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_end_of_storage = 0B;
  _8 = (long unsigned int) nodes_4(D);
  _9 = &this_2(D)->_dest;
  # DEBUG this => _9
  # DEBUG __new_size => _8
  __x = 0;
  # DEBUG __x => __x
  # DEBUG D#99 => _9
  # DEBUG D#99 => _9
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG D#99 => _9
  # DEBUG D#99 => _9
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG this => _9
  # DEBUG D#118 => &_9->D.34940._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#118
  # DEBUG this => _9
  MEM[(struct __normal_iterator *)&__position] = 0B;
  # DEBUG __n => _8
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_9, __position, _8, &__x);

  <bb 5>:
  # DEBUG this => this_2(D)
  # DEBUG seed => seed_11(D)
  # DEBUG this => &save_x
  # DEBUG D#255 => &save_x.D.38036
  # DEBUG this => D#255
  # DEBUG D#254 => &D#255->_M_impl
  # DEBUG this => D#254
  # DEBUG this => D#254
  # DEBUG this => D#254
  MEM[(struct _Vector_impl *)&save_x]._M_start = 0B;
  MEM[(struct _Vector_impl *)&save_x]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&save_x]._M_end_of_storage = 0B;
  # DEBUG this => &save_u
  # DEBUG D#278 => &save_u.D.38781
  # DEBUG this => D#278
  # DEBUG D#277 => &D#278->_M_impl
  # DEBUG this => D#277
  # DEBUG this => D#277
  # DEBUG this => D#277
  MEM[(struct _Vector_impl *)&save_u]._M_start = 0B;
  MEM[(struct _Vector_impl *)&save_u]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&save_u]._M_end_of_storage = 0B;
  SaveRandomState (&save_x, &save_u);

  <bb 6>:
  _10 = (long int) seed_11(D);
  # DEBUG seed => _10
  ran_start (_10);
  goto <bb 8>;

<L6>:
  goto <bb 49> (<L2>);

  <bb 8>:
  ranf_start (_10);
  goto <bb 10>;

<L7>:
  goto <bb 49> (<L2>);

  <bb 10>:
  _37 = this_2(D)->D.34973._nodes;
  # DEBUG D#756 => &this_2(D)->_dest
  # DEBUG this => D#756
  # DEBUG __first => _37
  # DEBUG __last => -1
  # DEBUG this => D#756
  # DEBUG __n => _37
  # DEBUG __val => -1
  # DEBUG __val => -1
  __n_39 = (size_t) _37;
  # DEBUG this => D#756
  # DEBUG __n => __n_39
  # DEBUG __val => &__val
  __first_12 = MEM[(int * *)this_2(D) + 16B];
  # DEBUG D#110 => D#756
  _76 = MEM[(int * *)this_2(D) + 32B];
  # DEBUG D#110 => D#756
  # DEBUG this => D#110
  # DEBUG this => D#110
  _77 = (long int) _76;
  _78 = (long int) __first_12;
  _79 = _77 - _78;
  _80 = _79 /[ex] 4;
  _81 = (size_type) _80;
  if (__n_39 > _81)
    goto <bb 11>;
  else
    goto <bb 23>;

  <bb 11>:
  # DEBUG this => D#756
  # DEBUG __n => __n_39
  # DEBUG __val => &__val
  # DEBUG D#384 => &D#756->D.34940
  # DEBUG this => D#384
  # DEBUG D#755 => &MEM[(struct _Vector_base *)this_2(D) + 16B]._M_impl
  # DEBUG this => &__tmp
  # DEBUG __n => __n_39
  # DEBUG __value => &__val
  # DEBUG __a => D#755
  # DEBUG D#383 => &__tmp.D.34940
  # DEBUG this => D#383
  # DEBUG __n => __n_39
  # DEBUG __a => D#755
  # DEBUG D#367 => &D#383->_M_impl
  # DEBUG this => D#367
  # DEBUG __a => D#755
  # DEBUG this => D#367
  # DEBUG __a => D#755
  # DEBUG this => D#367
  # DEBUG D.46559 => D#755
  # DEBUG this => D#383
  # DEBUG __n => __n_39
  # DEBUG D#346 => D#383
  # DEBUG __n => __n_39
  # DEBUG this => D#346
  # DEBUG D#345 => D#346
  if (__n_39 != 0)
    goto <bb 12>;
  else
    goto <bb 64>;

  <bb 12>:
  # DEBUG D#344 => &D#345->_M_impl
  # DEBUG D#343 => D#344
  # DEBUG __n => __n_39
  # DEBUG __a => D#343
  # DEBUG D#342 => D#343
  # DEBUG D#340 => D#342
  # DEBUG D#341 => 0B
  # DEBUG __n => __n_39
  # DEBUG this => D#340
  # DEBUG D.53661 => D#341
  # DEBUG D#339 => D#340
  # DEBUG D#338 => D#339
  # DEBUG this => D#338
  if (__n_39 > 4611686018427387903)
    goto <bb 13>;
  else
    goto <bb 15>;

  <bb 13>:
  std::__throw_bad_alloc ();

<L8>:
  goto <bb 49> (<L2>);

  <bb 15>:
  _116 = __n_39 * 4;
  _117 = operator new (_116);
  goto <bb 17>;

<L9>:
  goto <bb 49> (<L2>);

  <bb 17>:
  _110 = _117 + _116;
  # DEBUG D#381 => &__tmp
  # DEBUG D#381 => &__tmp
  # DEBUG D#382 => &__val
  # DEBUG __n => __n_39
  # DEBUG D#379 => D#381
  # DEBUG this => D#379
  # DEBUG this => D#381
  # DEBUG D#380 => D#382
  # DEBUG __value => D#380
  # DEBUG D#378 => &D#379->D.34940
  # DEBUG this => D#378
  # DEBUG D#376 => D#380
  # DEBUG __first => NULL
  # DEBUG __n => __n_39
  # DEBUG D#375 => D#376
  # DEBUG __x => D#375
  # DEBUG D.53636 => D#377
  # DEBUG D#374 => D#375
  # DEBUG __first => NULL
  # DEBUG __n => __n_39
  # DEBUG D#373 => D#374
  # DEBUG __x => D#373
  # DEBUG __assignable => 1
  # DEBUG D#372 => D#373
  # DEBUG __first => NULL
  # DEBUG __n => __n_39
  # DEBUG D#371 => D#372
  # DEBUG __x => D#371
  # DEBUG D#308 => D#371
  # DEBUG __first => NULL
  # DEBUG __n => __n_39
  # DEBUG D#307 => D#308
  # DEBUG __value => D#307
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#306 => D#307
  # DEBUG __first => NULL
  # DEBUG __n => __n_39
  # DEBUG __value => D#306
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_39
  # DEBUG __niter => __n_39
  # DEBUG __first => _117
  if (__n_39 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  pretmp_22 = MEM[(int * &)this_2(D) + 16];
  goto <bb 20>;

  <bb 19>:
  _165 = (sizetype) _37;
  _152 = _165 * 4;
  __builtin_memset (_117, 255, _152);
  _215 = (long unsigned int) _37;
  _68 = _215 * 4;
  __first_20 = _117 + _68;
  pretmp_21 = MEM[(int * &)this_2(D) + 16];

  <bb 20>:
  # __first_159 = PHI <__first_20(19), _117(18), 0B(64)>
  # _213 = PHI <_110(19), _110(18), _121(64)>
  # __first_212 = PHI <_117(19), _117(18), 0B(64)>
  # prephitmp_24 = PHI <pretmp_21(19), pretmp_22(18), __first_12(64)>
  # DEBUG D#386 => &D#756->D.34940._M_impl
  # DEBUG this => &__tmp.D.34940._M_impl
  # DEBUG __x => D#386
  # DEBUG D#305 => &D#386->_M_start
  # DEBUG D#304 => &MEM[(struct _Vector_impl *)&__tmp]._M_start
  # DEBUG __a => D#304
  # DEBUG __b => D#305
  # DEBUG __tmp => __first_212
  # DEBUG D#757 => MEM[(int * &)this_2(D) + 16]
  MEM[(int * &)this_2(D) + 16] = __first_212;
  # DEBUG D#303 => &D#386->_M_finish
  # DEBUG D#302 => &MEM[(struct _Vector_impl *)&__tmp]._M_finish
  # DEBUG __a => D#302
  # DEBUG __b => D#303
  # DEBUG __tmp => __first_159
  MEM[(int * &)this_2(D) + 24] = __first_159;
  # DEBUG D#301 => &D#386->_M_end_of_storage
  # DEBUG D#300 => &MEM[(struct _Vector_impl *)&__tmp]._M_end_of_storage
  # DEBUG __a => D#300
  # DEBUG __b => D#301
  # DEBUG __tmp => _213
  MEM[(int * &)this_2(D) + 32] = _213;
  # DEBUG this => &__tmp
  # DEBUG D#167 => &__tmp.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => __tmp.D.34940._M_impl._M_finish
  # DEBUG D#169 => __tmp.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &__tmp.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  # DEBUG D#164 => (long int) D#757
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => D#757
  # DEBUG __n => D#161
  if (prephitmp_24 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => D#757
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => D#757
  # DEBUG this => D#153
  # DEBUG D.53593 => D#154
  operator delete (prephitmp_24);

  <bb 22>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  __tmp ={v} {CLOBBER};
  pretmp_182 = this_2(D)->D.34973._nodes;
  goto <bb 30>;

  <bb 23>:
  # DEBUG D#99 => D#756
  __first_82 = MEM[(int * *)this_2(D) + 24B];
  # DEBUG D#99 => D#756
  # DEBUG this => D#99
  # DEBUG this => D#99
  _83 = (long int) __first_82;
  _84 = _83 - _78;
  _85 = _84 /[ex] 4;
  _86 = (size_type) _85;
  if (__n_39 > _86)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:
  # DEBUG __niter => __n_39
  # DEBUG __first => __first_12
  if (__n_39 == 0)
    goto <bb 29>;
  else
    goto <bb 28>;

  <bb 25>:
  # DEBUG __first => __first_12
  if (__first_12 == __first_82)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#385 => &D#756->D.34940
  # DEBUG this => D#385
  # DEBUG D#99 => D#756
  # DEBUG D#99 => D#756
  # DEBUG this => D#99
  # DEBUG this => D#99
  __n_90 = __n_39 - _86;
  # DEBUG D#376 => &__val
  # DEBUG __first => __first_82
  # DEBUG __n => __n_90
  # DEBUG D#375 => D#376
  # DEBUG __x => D#375
  # DEBUG D.53493 => D#377
  # DEBUG D#374 => D#375
  # DEBUG __first => __first_82
  # DEBUG __n => __n_90
  # DEBUG D#373 => D#374
  # DEBUG __x => D#373
  # DEBUG __assignable => 1
  # DEBUG D#372 => D#373
  # DEBUG __first => __first_82
  # DEBUG __n => __n_90
  # DEBUG D#371 => D#372
  # DEBUG __x => D#371
  # DEBUG D#308 => D#371
  # DEBUG __first => __first_82
  # DEBUG __n => __n_90
  # DEBUG D#307 => D#308
  # DEBUG __value => D#307
  # DEBUG __it => __first_82
  # DEBUG __it => __first_82
  # DEBUG D#306 => D#307
  # DEBUG __first => NULL
  # DEBUG __n => __n_90
  # DEBUG __value => D#306
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_90
  # DEBUG __niter => __n_90
  # DEBUG __first => __first_82
  _113 = __n_90 * 4;
  __builtin_memset (__first_82, 255, _113);
  _181 = __n_90 * 4;
  __first_66 = __first_82 + _181;
  MEM[(struct vector *)this_2(D) + 16B].D.34940._M_impl._M_finish = __first_66;
  pretmp_183 = this_2(D)->D.34973._nodes;
  goto <bb 30>;

  <bb 27>:
  _34 = (unsigned long) __first_82;
  _214 = __first_12 + 4;
  _28 = (unsigned long) _214;
  _148 = _34 - _28;
  _94 = _148 /[ex] 4;
  _95 = _94 & 4611686018427387903;
  _112 = _95 + 1;
  _195 = _112 * 4;
  __builtin_memset (__first_12, 255, _195);
  goto <bb 26>;

  <bb 28>:
  _163 = (sizetype) _37;
  _38 = _163 * 4;
  __builtin_memset (__first_12, 255, _38);
  _203 = (long unsigned int) _37;
  _202 = _203 * 4;
  __first_65 = __first_12 + _202;
  pretmp_204 = this_2(D)->D.34973._nodes;

  <bb 29>:
  # __first_153 = PHI <__first_65(28), __first_12(24)>
  # prephitmp_19 = PHI <pretmp_204(28), _37(24)>
  # DEBUG D#145 => D#756
  # DEBUG __pos => __first_153
  # DEBUG D#144 => D#145
  # DEBUG this => D#144
  # DEBUG D#142 => &D#144->D.34940
  # DEBUG this => D#142
  # DEBUG D#143 => D#144->D.34940._M_impl._M_finish
  # DEBUG __first => __first_153
  # DEBUG __last => D#143
  # DEBUG D.45839 => NULL
  # DEBUG D#140 => __first_153
  # DEBUG D#141 => D#143
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  MEM[(int * *)this_2(D) + 24B] = __first_153;

  <bb 30>:
  # prephitmp_184 = PHI <pretmp_182(22), prephitmp_19(29), pretmp_183(26)>
  # DEBUG i => 0
  if (prephitmp_184 <= 0)
    goto <bb 41>;
  else
    goto <bb 31>;

  <bb 31>:

  <bb 32>:
  # _27 = PHI <prephitmp_184(31), _40(62)>
  # i_119 = PHI <0(31), i_69(62)>
  # DEBUG i => i_119
  _42 = _27 + -1;
  _43 = _42 - i_119;
  # DEBUG max => _43
  _44 = ran_next ();
  goto <bb 34>;

<L10>:
  goto <bb 49> (<L2>);

  <bb 34>:
  _45 = _43 + 1;
  _46 = (long int) _45;
  _47 = _44 % _46;
  _48 = (int) _47;
  # DEBUG ind => _48
  # DEBUG j => 0
  # DEBUG cnt => 0
  pretmp_187 = MEM[(int * *)this_2(D) + 16B];

  <bb 35>:
  # j_50 = PHI <0(34), j_63(39)>
  # cnt_49 = PHI <0(34), cnt_75(39)>
  # DEBUG cnt => cnt_49
  # DEBUG j => j_50
  if (_48 > cnt_49)
    goto <bb 63>;
  else
    goto <bb 36>;

  <bb 36>:
  _51 = (long unsigned int) j_50;
  # DEBUG D#389 => &this_2(D)->_dest
  # DEBUG D#100 => D#389
  # DEBUG __n => _51
  # DEBUG this => D#100
  _53 = _51 * 4;
  _54 = pretmp_187 + _53;
  _55 = *_54;
  if (_55 != -1)
    goto <bb 38>;
  else
    goto <bb 61>;

  <bb 37>:
  cnt_62 = cnt_49 + 1;
  # DEBUG cnt => cnt_62

  <bb 38>:
  # cnt_75 = PHI <cnt_49(63), cnt_62(37), cnt_49(36)>
  # DEBUG cnt => cnt_75
  j_63 = j_50 + 1;
  # DEBUG j => j_63
  _64 = this_2(D)->D.34973._nodes;
  if (j_63 >= _64)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:
  goto <bb 35>;

  <bb 40>:
  __assert_fail ("j < _nodes", "traffic.cpp", 358, &__PRETTY_FUNCTION__);

  <bb 41>:
  RestoreRandomState (&save_x, &save_u);
  goto <bb 43>;

<L11>:
  goto <bb 49> (<L2>);

  <bb 43>:
  # DEBUG this => &save_u
  # DEBUG D#296 => &save_u.D.38781
  # DEBUG this => D#296
  # DEBUG D#299 => save_u.D.38781._M_impl._M_finish
  # DEBUG D#298 => save_u.D.38781._M_impl._M_start
  # DEBUG D#202 => D#298
  # DEBUG D#203 => D#299
  # DEBUG __first => D#202
  # DEBUG __last => D#203
  # DEBUG D.47202 => D#204
  # DEBUG D#201 => D#203
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => D#201
  # DEBUG __first => D#198
  # DEBUG __last => D#199
  # DEBUG D#197 => D#199
  # DEBUG D#196 => D#198
  # DEBUG D#194 => D#196
  # DEBUG D#195 => D#197
  # DEBUG D.46124 => D#194
  # DEBUG D.46123 => D#195
  # DEBUG D#297 => &save_u.D.38781
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _70 = MEM[(struct _Vector_base *)&save_u]._M_impl._M_start;
  # DEBUG D#293 => (long int) _70
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 8
  # DEBUG D#288 => D#297
  # DEBUG D#289 => (long unsigned int) D#291
  # DEBUG __p => _70
  # DEBUG this => D#288
  # DEBUG __n => D#289
  # DEBUG D#287 => D#289
  # DEBUG D#286 => D#288
  if (_70 != 0B)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # DEBUG D#285 => &D#286->_M_impl
  # DEBUG D#283 => D#285
  # DEBUG D#284 => D#287
  # DEBUG __p => _70
  # DEBUG __a => D#283
  # DEBUG __n => D#284
  # DEBUG D#282 => D#284
  # DEBUG D#281 => D#283
  # DEBUG D#279 => D#281
  # DEBUG D#280 => D#282
  # DEBUG __p => _70
  # DEBUG this => D#279
  # DEBUG D.53425 => D#280
  operator delete (_70);

  <bb 45>:
  # DEBUG D#290 => &D#297->_M_impl
  # DEBUG this => D#290
  # DEBUG this => D#290
  # DEBUG this => D#290
  MEM[(struct  &)&save_u] ={v} {CLOBBER};
  # DEBUG this => &save_x
  # DEBUG D#273 => &save_x.D.38036
  # DEBUG this => D#273
  # DEBUG D#276 => save_x.D.38036._M_impl._M_finish
  # DEBUG D#275 => save_x.D.38036._M_impl._M_start
  # DEBUG D#191 => D#275
  # DEBUG D#192 => D#276
  # DEBUG __first => D#191
  # DEBUG __last => D#192
  # DEBUG D.47112 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#189 => D#191
  # DEBUG D#187 => D#189
  # DEBUG D#188 => D#190
  # DEBUG __first => D#187
  # DEBUG __last => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#187
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186
  # DEBUG D.46086 => D#183
  # DEBUG D.46085 => D#184
  # DEBUG D#274 => &save_x.D.38036
  # DEBUG this => D#274
  # DEBUG D#272 => D#274->_M_impl._M_end_of_storage
  # DEBUG D#271 => (long int) D#272
  _71 = MEM[(struct _Vector_base *)&save_x]._M_impl._M_start;
  # DEBUG D#270 => (long int) _71
  # DEBUG D#269 => D#271 - D#270
  # DEBUG D#268 => D#269 /[ex] 8
  # DEBUG D#265 => D#274
  # DEBUG D#266 => (long unsigned int) D#268
  # DEBUG __p => _71
  # DEBUG this => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  if (_71 != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  # DEBUG D#262 => &D#263->_M_impl
  # DEBUG D#260 => D#262
  # DEBUG D#261 => D#264
  # DEBUG __p => _71
  # DEBUG __a => D#260
  # DEBUG __n => D#261
  # DEBUG D#259 => D#261
  # DEBUG D#258 => D#260
  # DEBUG D#256 => D#258
  # DEBUG D#257 => D#259
  # DEBUG __p => _71
  # DEBUG this => D#256
  # DEBUG D.53440 => D#257
  operator delete (_71);

  <bb 47>:
  # DEBUG D#267 => &D#274->_M_impl
  # DEBUG this => D#267
  # DEBUG this => D#267
  # DEBUG this => D#267
  save_x ={v} {CLOBBER};
  save_u ={v} {CLOBBER};
  return;

<L5>:

<L2>:
  # DEBUG this => &save_u
  # DEBUG D#296 => &save_u.D.38781
  # DEBUG this => D#296
  # DEBUG D#299 => save_u.D.38781._M_impl._M_finish
  # DEBUG D#298 => save_u.D.38781._M_impl._M_start
  # DEBUG D#202 => D#298
  # DEBUG D#203 => D#299
  # DEBUG __first => D#202
  # DEBUG __last => D#203
  # DEBUG D.47202 => D#204
  # DEBUG D#201 => D#203
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => D#201
  # DEBUG __first => D#198
  # DEBUG __last => D#199
  # DEBUG D#197 => D#199
  # DEBUG D#196 => D#198
  # DEBUG D#194 => D#196
  # DEBUG D#195 => D#197
  # DEBUG D.46124 => D#194
  # DEBUG D.46123 => D#195
  # DEBUG D#297 => &save_u.D.38781
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _72 = MEM[(struct _Vector_base *)&save_u]._M_impl._M_start;
  # DEBUG D#293 => (long int) _72
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 8
  # DEBUG D#288 => D#297
  # DEBUG D#289 => (long unsigned int) D#291
  # DEBUG __p => _72
  # DEBUG this => D#288
  # DEBUG __n => D#289
  # DEBUG D#287 => D#289
  # DEBUG D#286 => D#288
  if (_72 != 0B)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  # DEBUG D#285 => &D#286->_M_impl
  # DEBUG D#283 => D#285
  # DEBUG D#284 => D#287
  # DEBUG __p => _72
  # DEBUG __a => D#283
  # DEBUG __n => D#284
  # DEBUG D#282 => D#284
  # DEBUG D#281 => D#283
  # DEBUG D#279 => D#281
  # DEBUG D#280 => D#282
  # DEBUG __p => _72
  # DEBUG this => D#279
  # DEBUG D.53410 => D#280
  operator delete (_72);

  <bb 51>:
  # DEBUG D#290 => &D#297->_M_impl
  # DEBUG this => D#290
  # DEBUG this => D#290
  # DEBUG this => D#290
  MEM[(struct  &)&save_u] ={v} {CLOBBER};
  resx 6

<L3>:
  # DEBUG this => &save_x
  # DEBUG D#273 => &save_x.D.38036
  # DEBUG this => D#273
  # DEBUG D#276 => save_x.D.38036._M_impl._M_finish
  # DEBUG D#275 => save_x.D.38036._M_impl._M_start
  # DEBUG D#191 => D#275
  # DEBUG D#192 => D#276
  # DEBUG __first => D#191
  # DEBUG __last => D#192
  # DEBUG D.47112 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#189 => D#191
  # DEBUG D#187 => D#189
  # DEBUG D#188 => D#190
  # DEBUG __first => D#187
  # DEBUG __last => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#187
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186
  # DEBUG D.46086 => D#183
  # DEBUG D.46085 => D#184
  # DEBUG D#274 => &save_x.D.38036
  # DEBUG this => D#274
  # DEBUG D#272 => D#274->_M_impl._M_end_of_storage
  # DEBUG D#271 => (long int) D#272
  _73 = MEM[(struct _Vector_base *)&save_x]._M_impl._M_start;
  # DEBUG D#270 => (long int) _73
  # DEBUG D#269 => D#271 - D#270
  # DEBUG D#268 => D#269 /[ex] 8
  # DEBUG D#265 => D#274
  # DEBUG D#266 => (long unsigned int) D#268
  # DEBUG __p => _73
  # DEBUG this => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  if (_73 != 0B)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG D#262 => &D#263->_M_impl
  # DEBUG D#260 => D#262
  # DEBUG D#261 => D#264
  # DEBUG __p => _73
  # DEBUG __a => D#260
  # DEBUG __n => D#261
  # DEBUG D#259 => D#261
  # DEBUG D#258 => D#260
  # DEBUG D#256 => D#258
  # DEBUG D#257 => D#259
  # DEBUG __p => _73
  # DEBUG this => D#256
  # DEBUG D.53395 => D#257
  operator delete (_73);

  <bb 54>:
  # DEBUG D#267 => &D#274->_M_impl
  # DEBUG this => D#267
  # DEBUG this => D#267
  # DEBUG this => D#267
  MEM[(struct  &)&save_x] ={v} {CLOBBER};
  resx 5

<L12>:
  goto <bb 57> (<L0>);

<L4>:

<L0>:
  # DEBUG D#489 => &this_2(D)->_dest
  # DEBUG this => D#489
  # DEBUG D#167 => &D#489->D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D#489->D.34940._M_impl._M_finish
  # DEBUG D#169 => D#489->D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D#489->D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _5 = MEM[(struct _Vector_base *)this_2(D) + 16B]._M_impl._M_start;
  # DEBUG D#164 => (long int) _5
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _5
  # DEBUG __n => D#161
  if (_5 != 0B)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _5
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _5
  # DEBUG this => D#153
  # DEBUG D.50126 => D#154
  operator delete (_5);

  <bb 59>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  MEM[(struct  &)this_2(D) + 16] ={v} {CLOBBER};
  resx 2

<L1>:
  # DEBUG D#488 => &this_2(D)->D.34973
  # DEBUG this => D#488
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  resx 1

  <bb 61>:
  # _67 = PHI <_54(36)>
  # DEBUG D#390 => &this_2(D)->_dest
  # DEBUG D#100 => D#390
  # DEBUG __n => _51
  # DEBUG this => D#100
  *_67 = i_119;
  i_69 = i_119 + 1;
  # DEBUG i => i_69
  # DEBUG i => i_69
  _40 = this_2(D)->D.34973._nodes;
  if (_40 <= i_69)
    goto <bb 41>;
  else
    goto <bb 62>;

  <bb 62>:
  goto <bb 32>;

  <bb 63>:
  _57 = (long unsigned int) j_50;
  # DEBUG D#388 => &this_2(D)->_dest
  # DEBUG D#100 => D#388
  # DEBUG __n => _57
  # DEBUG this => D#100
  _59 = _57 * 4;
  _60 = pretmp_187 + _59;
  _61 = *_60;
  if (_61 == -1)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 64>:
  _218 = __n_39 * 4;
  _121 = (int *) _218;
  # DEBUG D#381 => &__tmp
  # DEBUG D#381 => &__tmp
  # DEBUG D#382 => &__val
  # DEBUG __n => __n_39
  # DEBUG D#379 => D#381
  # DEBUG this => D#379
  # DEBUG this => D#381
  # DEBUG D#380 => D#382
  # DEBUG __value => D#380
  # DEBUG D#378 => &D#379->D.34940
  # DEBUG this => D#378
  # DEBUG D#376 => D#380
  # DEBUG __first => NULL
  # DEBUG __n => __n_39
  # DEBUG D#375 => D#376
  # DEBUG __x => D#375
  # DEBUG D.53636 => D#377
  # DEBUG D#374 => D#375
  # DEBUG __first => NULL
  # DEBUG __n => __n_39
  # DEBUG D#373 => D#374
  # DEBUG __x => D#373
  # DEBUG __assignable => 1
  # DEBUG D#372 => D#373
  # DEBUG __first => NULL
  # DEBUG __n => __n_39
  # DEBUG D#371 => D#372
  # DEBUG __x => D#371
  # DEBUG D#308 => D#371
  # DEBUG __first => NULL
  # DEBUG __n => __n_39
  # DEBUG D#307 => D#308
  # DEBUG __value => D#307
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#306 => D#307
  # DEBUG __first => NULL
  # DEBUG __n => __n_39
  # DEBUG __value => D#306
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_39
  # DEBUG __niter => __n_39
  # DEBUG __first => 0B
  goto <bb 20>;

}



;; Function HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>) (_ZN21HotSpotTrafficPatternC2EiSt6vectorIiSaIiEES2_, funcdef_no=1836, decl_uid=36113, cgraph_uid=506, symbol_order=507)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>) (struct HotSpotTrafficPattern * const this, int nodes, struct vector & restrict hotspots, struct vector & restrict rates)
{
  struct iterator __position;
  value_type __x;
  int * D.53801;
  const ptrdiff_t _Num;
  int * D.53751;
  const ptrdiff_t _Num;
  const int rate;
  const int hotspot;
  size_t i;
  static const char __PRETTY_FUNCTION__[86] = "HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>)";
  static const char __PRETTY_FUNCTION__[86] = "HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>)";
  long unsigned int prephitmp_1;
  int iftmp.118_2;
  long unsigned int pretmp_11;
  long unsigned int _13;
  struct vector * _14;
  long unsigned int _16;
  int iftmp.118_20;
  int _27;
  int * _32;
  long unsigned int pretmp_38;
  long int _39;
  long int _40;
  long int _41;
  long int _42;
  size_type _43;
  long unsigned int _44;
  int & _45;
  int & _46;
  int * _47;
  long unsigned int prephitmp_51;
  long unsigned int pretmp_52;
  long unsigned int prephitmp_53;
  int * const pretmp_54;
  int * const prephitmp_57;
  long unsigned int pretmp_58;
  long unsigned int prephitmp_59;
  int * const pretmp_60;
  int * const prephitmp_62;
  int * const _65;
  int * const _66;
  long int _67;
  long int _68;
  long int _69;
  long int _70;
  size_type _71;
  int * _74;
  int * const _75;
  int * const _76;
  long int __last.81_77;
  long int __first.82_78;
  long int _79;
  long unsigned int _81;
  int * _83;
  int * _84;
  int * iftmp.79_85;
  int * const _86;
  int * const _87;
  long int _88;
  long int _89;
  long int _90;
  long int _91;
  size_type _92;
  int * _95;
  int * const _96;
  int * const _97;
  long int __last.81_98;
  long int __first.82_99;
  long int _100;
  long unsigned int _102;
  int * _104;
  int * _105;
  int * iftmp.79_106;
  int * _109;
  int _112;
  size_type _113;
  long unsigned int _114;
  long unsigned int _115;
  int * _116;
  int pretmp_120;
  int * _148;
  int prephitmp_152;

  <bb 2>:
  # DEBUG D#501 => &this_6(D)->D.36118
  # DEBUG this => D#501
  # DEBUG nodes => nodes_8(D)
  MEM[(struct TrafficPattern *)this_6(D)]._vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  MEM[(struct TrafficPattern *)this_6(D)]._nodes = nodes_8(D);
  if (nodes_8(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#62 => D#501
  # DEBUG D#63 => nodes_8(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 4>:
  this_6(D)->D.36118._vptr.TrafficPattern = &MEM[(void *)&_ZTV21HotSpotTrafficPattern + 16B];
  # DEBUG D#763 => &this_6(D)->_hotspots
  # DEBUG this => D#763
  # DEBUG __x => hotspots_12(D)
  # DEBUG D#368 => &MEM[(const struct vector *)hotspots_12(D)].D.34940
  # DEBUG this => D#368
  # DEBUG __a => NULL
  _65 = MEM[(int * *)hotspots_12(D)];
  # DEBUG D#99 => hotspots_12(D)
  _66 = MEM[(int * *)hotspots_12(D) + 8B];
  # DEBUG D#99 => hotspots_12(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  _67 = (long int) _66;
  _68 = (long int) _65;
  _69 = _67 - _68;
  _70 = _69 /[ex] 4;
  _71 = (size_type) _70;
  # DEBUG D#370 => &D#763->D.34940
  # DEBUG this => D#370
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#367 => &D#370->_M_impl
  # DEBUG this => D#367
  # DEBUG __a => NULL
  # DEBUG this => D#367
  # DEBUG __a => NULL
  # DEBUG this => D#367
  # DEBUG D.46559 => NULL
  MEM[(struct _Vector_impl *)this_6(D) + 16B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_6(D) + 16B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_6(D) + 16B]._M_end_of_storage = 0B;
  # DEBUG this => D#370
  # DEBUG __n => NULL
  # DEBUG D#346 => D#370
  # DEBUG __n => _71
  # DEBUG this => D#346
  # DEBUG D#345 => D#346
  if (_71 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_38 = (long unsigned int) _69;
  goto <bb 10>;

  <bb 6>:
  # DEBUG D#344 => &D#345->_M_impl
  # DEBUG D#343 => D#344
  # DEBUG __n => _71
  # DEBUG __a => D#343
  # DEBUG D#342 => D#343
  # DEBUG D#340 => D#342
  # DEBUG D#341 => 0B
  # DEBUG __n => _71
  # DEBUG this => D#340
  # DEBUG D.53749 => D#341
  # DEBUG D#339 => D#340
  # DEBUG D#338 => D#339
  # DEBUG this => D#338
  if (_71 > 4611686018427387903)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _13 = (long unsigned int) _69;
  _84 = operator new (_13);
  goto <bb 10>;

<L17>:
  goto <bb 55> (<L15>);

  <bb 10>:
  # iftmp.79_85 = PHI <0B(5), _84(8)>
  # prephitmp_51 = PHI <pretmp_38(5), _13(8)>
  MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_start = iftmp.79_85;
  MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_finish = iftmp.79_85;
  _74 = iftmp.79_85 + prephitmp_51;
  MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_end_of_storage = _74;
  # DEBUG D#369 => &D#763->D.34940
  # DEBUG this => D#369
  _75 = MEM[(int * *)hotspots_12(D) + 8B];
  # DEBUG D#114 => hotspots_12(D)
  # DEBUG this => D#114
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _76 = MEM[(int * *)hotspots_12(D)];
  # DEBUG D#115 => hotspots_12(D)
  # DEBUG this => D#115
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _76
  # DEBUG __last => _75
  # DEBUG __result => NULL
  # DEBUG D.53713 => D#323
  # DEBUG __first => _76
  # DEBUG __last => _75
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _76
  # DEBUG __last => _75
  # DEBUG __result => NULL
  # DEBUG __first => _76
  # DEBUG __last => _75
  # DEBUG __result => NULL
  # DEBUG __it => _75
  # DEBUG __it$_M_current => _75
  # DEBUG __it => _76
  # DEBUG __it$_M_current => _76
  # DEBUG __first => _76
  # DEBUG __last => _75
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _75
  # DEBUG __it => _75
  # DEBUG this => NULL
  # DEBUG __it => _76
  # DEBUG __it => _76
  # DEBUG this => NULL
  # DEBUG __first => _76
  # DEBUG __last => _75
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _76
  # DEBUG __last => _75
  # DEBUG __result => NULL
  __last.81_77 = (long int) _75;
  __first.82_78 = (long int) _76;
  _79 = __last.81_77 - __first.82_78;
  _Num_80 = _79 /[ex] 4;
  # DEBUG _Num => _Num_80
  if (_Num_80 != 0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  pretmp_52 = (long unsigned int) _79;
  goto <bb 13>;

  <bb 12>:
  _81 = (long unsigned int) _79;
  __builtin_memmove (iftmp.79_85, _76, _81);

  <bb 13>:
  # prephitmp_53 = PHI <pretmp_52(11), _81(12)>
  _83 = iftmp.79_85 + prephitmp_53;
  MEM[(struct vector *)this_6(D) + 16B].D.34940._M_impl._M_finish = _83;
  # DEBUG D#764 => &this_6(D)->_rates
  # DEBUG this => D#764
  # DEBUG __x => rates_15(D)
  # DEBUG D#368 => &MEM[(const struct vector *)rates_15(D)].D.34940
  # DEBUG this => D#368
  # DEBUG __a => NULL
  _86 = MEM[(int * *)rates_15(D)];
  # DEBUG D#99 => rates_15(D)
  _87 = MEM[(int * *)rates_15(D) + 8B];
  # DEBUG D#99 => rates_15(D)
  # DEBUG this => D#99
  # DEBUG this => D#99
  _88 = (long int) _87;
  _89 = (long int) _86;
  _90 = _88 - _89;
  _91 = _90 /[ex] 4;
  _92 = (size_type) _91;
  # DEBUG D#370 => &D#764->D.34940
  # DEBUG this => D#370
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#367 => &D#370->_M_impl
  # DEBUG this => D#367
  # DEBUG __a => NULL
  # DEBUG this => D#367
  # DEBUG __a => NULL
  # DEBUG this => D#367
  # DEBUG D.46559 => NULL
  MEM[(struct _Vector_impl *)this_6(D) + 40B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_6(D) + 40B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_6(D) + 40B]._M_end_of_storage = 0B;
  # DEBUG this => D#370
  # DEBUG __n => NULL
  # DEBUG D#346 => D#370
  # DEBUG __n => _92
  # DEBUG this => D#346
  # DEBUG D#345 => D#346
  if (_92 != 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  pretmp_58 = (long unsigned int) _90;
  goto <bb 20>;

  <bb 15>:
  # DEBUG D#344 => &D#345->_M_impl
  # DEBUG D#343 => D#344
  # DEBUG __n => _92
  # DEBUG __a => D#343
  # DEBUG D#342 => D#343
  # DEBUG D#340 => D#342
  # DEBUG D#341 => 0B
  # DEBUG __n => _92
  # DEBUG this => D#340
  # DEBUG D.53799 => D#341
  # DEBUG D#339 => D#340
  # DEBUG D#338 => D#339
  # DEBUG this => D#338
  if (_92 > 4611686018427387903)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  std::__throw_bad_alloc ();

  <bb 17>:
  _16 = (long unsigned int) _90;
  _105 = operator new (_16);
  goto <bb 19>;

<L19>:
  goto <bb 50> (<L14>);

  <bb 19>:
  pretmp_54 = MEM[(int * *)this_6(D) + 24B];
  pretmp_60 = MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_start;

  <bb 20>:
  # iftmp.79_106 = PHI <0B(14), _105(19)>
  # prephitmp_57 = PHI <_83(14), pretmp_54(19)>
  # prephitmp_59 = PHI <pretmp_58(14), _16(19)>
  # prephitmp_62 = PHI <iftmp.79_85(14), pretmp_60(19)>
  MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_start = iftmp.79_106;
  MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_finish = iftmp.79_106;
  _95 = iftmp.79_106 + prephitmp_59;
  MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_end_of_storage = _95;
  # DEBUG D#369 => &D#764->D.34940
  # DEBUG this => D#369
  _96 = MEM[(int * *)rates_15(D) + 8B];
  # DEBUG D#114 => rates_15(D)
  # DEBUG this => D#114
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _97 = MEM[(int * *)rates_15(D)];
  # DEBUG D#115 => rates_15(D)
  # DEBUG this => D#115
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _97
  # DEBUG __last => _96
  # DEBUG __result => NULL
  # DEBUG D.53763 => D#323
  # DEBUG __first => _97
  # DEBUG __last => _96
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _97
  # DEBUG __last => _96
  # DEBUG __result => NULL
  # DEBUG __first => _97
  # DEBUG __last => _96
  # DEBUG __result => NULL
  # DEBUG __it => _96
  # DEBUG __it$_M_current => _96
  # DEBUG __it => _97
  # DEBUG __it$_M_current => _97
  # DEBUG __first => _97
  # DEBUG __last => _96
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _96
  # DEBUG __it => _96
  # DEBUG this => NULL
  # DEBUG __it => _97
  # DEBUG __it => _97
  # DEBUG this => NULL
  # DEBUG __first => _97
  # DEBUG __last => _96
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _97
  # DEBUG __last => _96
  # DEBUG __result => NULL
  __last.81_98 = (long int) _96;
  __first.82_99 = (long int) _97;
  _100 = __last.81_98 - __first.82_99;
  _Num_101 = _100 /[ex] 4;
  # DEBUG _Num => _Num_101
  if (_Num_101 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  pretmp_11 = (long unsigned int) _100;
  goto <bb 23>;

  <bb 22>:
  _102 = (long unsigned int) _100;
  __builtin_memmove (iftmp.79_106, _97, _102);

  <bb 23>:
  # prephitmp_1 = PHI <pretmp_11(21), _102(22)>
  _104 = iftmp.79_106 + prephitmp_1;
  MEM[(struct vector *)this_6(D) + 40B].D.34940._M_impl._M_finish = _104;
  this_6(D)->_max_val = -1;
  # DEBUG D#492 => &this_6(D)->_hotspots
  # DEBUG this => D#492
  # DEBUG D#114 => D#492
  # DEBUG this => D#114
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#115 => D#492
  # DEBUG this => D#115
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (prephitmp_57 == prephitmp_62)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __assert_fail ("!_hotspots.empty()", "traffic.cpp", 494, &__PRETTY_FUNCTION__);

  <bb 25>:
  # DEBUG D#493 => &this_6(D)->_hotspots
  # DEBUG D#99 => D#493
  # DEBUG D#99 => D#493
  # DEBUG this => D#99
  # DEBUG this => D#99
  _39 = (long int) prephitmp_57;
  _40 = (long int) prephitmp_62;
  _41 = _39 - _40;
  _42 = _41 /[ex] 4;
  _43 = (size_type) _42;
  # DEBUG size => NULL
  # DEBUG D#494 => &this_6(D)->_rates
  # DEBUG this => D#494
  # DEBUG D#114 => D#494
  # DEBUG this => D#114
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#115 => D#494
  # DEBUG this => D#115
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_104 == iftmp.79_106)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  # DEBUG D#495 => &this_6(D)->_rates
  # DEBUG this => D#495
  # DEBUG this => D#495
  # DEBUG D#118 => &D#495->D.34940._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#118
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  iftmp.118_20 = MEM[(int &)_104 + 18446744073709551612];

  <bb 27>:
  # iftmp.118_2 = PHI <1(25), iftmp.118_20(26)>
  # DEBUG this => D#764
  # DEBUG __new_size => _43
  __x = iftmp.118_2;
  # DEBUG __x => __x
  # DEBUG D#99 => D#764
  # DEBUG D#99 => D#764
  # DEBUG this => D#99
  # DEBUG this => D#99
  _113 = (size_type) _Num_101;
  if (_43 > _113)
    goto <bb 28>;
  else
    goto <bb 30>;

  <bb 28>:
  # DEBUG D#99 => D#764
  # DEBUG D#99 => D#764
  # DEBUG this => D#99
  # DEBUG this => D#99
  _114 = _43 - _113;
  # DEBUG this => D#764
  # DEBUG D#118 => &D#764->D.34940._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#118
  # DEBUG this => D#764
  MEM[(struct __normal_iterator *)&__position] = _104;
  # DEBUG __n => _114
  # DEBUG __x => &__x
  _14 = &this_6(D)->_rates;
  std::vector<int>::_M_fill_insert (_14, __position, _114, &__x);

  <bb 29>:

  <bb 57>:
  goto <bb 32>;

  <bb 30>:
  # DEBUG D#99 => D#764
  # DEBUG D#99 => D#764
  # DEBUG this => D#99
  # DEBUG this => D#99
  if (_43 < _113)
    goto <bb 31>;
  else
    goto <bb 29>;

  <bb 31>:
  _115 = (long unsigned int) _41;
  _116 = iftmp.79_106 + _115;
  # DEBUG D#145 => D#764
  # DEBUG __pos => _116
  # DEBUG D#144 => D#145
  # DEBUG this => D#144
  # DEBUG D#142 => &D#144->D.34940
  # DEBUG this => D#142
  # DEBUG D#143 => D#144->D.34940._M_impl._M_finish
  # DEBUG __first => _116
  # DEBUG __last => D#143
  # DEBUG D.45839 => NULL
  # DEBUG D#140 => _116
  # DEBUG D#141 => D#143
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  MEM[(int * *)this_6(D) + 48B] = _116;

  <bb 32>:
  # DEBUG i => 0
  if (_43 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:

  <bb 56>:
  return;

  <bb 34>:
  # DEBUG D#496 => &this_6(D)->_hotspots
  _109 = MEM[(int * *)this_6(D) + 16B];
  # DEBUG D#100 => D#496
  # DEBUG __n => 0
  # DEBUG this => D#100
  hotspot_154 = *_109;
  # DEBUG hotspot => hotspot_154
  if (hotspot_154 < 0)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  __assert_fail ("(hotspot >= 0) && (hotspot < _nodes)", "traffic.cpp", 499, &__PRETTY_FUNCTION__);

  <bb 36>:
  _112 = this_6(D)->D.36118._nodes;
  if (_112 <= hotspot_154)
    goto <bb 35>;
  else
    goto <bb 37>;

  <bb 37>:
  # DEBUG D#497 => &this_6(D)->_rates
  _148 = MEM[(int * *)this_6(D) + 40B];
  # DEBUG D#100 => D#497
  # DEBUG __n => 0
  # DEBUG this => D#100
  rate_18 = *_148;
  # DEBUG rate => rate_18
  if (rate_18 < 0)
    goto <bb 38>;
  else
    goto <bb 43>;

  <bb 38>:
  __assert_fail ("rate >= 0", "traffic.cpp", 501, &__PRETTY_FUNCTION__);

  <bb 39>:
  # DEBUG D#496 => &this_6(D)->_hotspots
  # DEBUG D#100 => D#496
  # DEBUG __n => i_29
  # DEBUG this => D#100
  _44 = i_29 * 4;
  _45 = _109 + _44;
  hotspot_22 = *_45;
  # DEBUG hotspot => hotspot_22
  if (hotspot_22 < 0)
    goto <bb 35>;
  else
    goto <bb 40>;

  <bb 40>:
  if (hotspot_22 >= _112)
    goto <bb 35>;
  else
    goto <bb 41>;

  <bb 41>:
  # DEBUG D#497 => &this_6(D)->_rates
  # DEBUG D#100 => D#497
  # DEBUG __n => i_29
  # DEBUG this => D#100
  _46 = _148 + _44;
  rate_25 = *_46;
  # DEBUG rate => rate_25
  if (rate_25 < 0)
    goto <bb 38>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 44>;

  <bb 43>:
  pretmp_120 = this_6(D)->_max_val;

  <bb 44>:
  # i_126 = PHI <0(43), i_29(42)>
  # rate_166 = PHI <rate_18(43), rate_25(42)>
  # prephitmp_152 = PHI <pretmp_120(43), _27(42)>
  # DEBUG i => i_126
  # DEBUG D#496 => &this_6(D)->_hotspots
  # DEBUG __n => i_126
  # DEBUG this => D#100
  # DEBUG hotspot => hotspot_154
  # DEBUG D#497 => &this_6(D)->_rates
  # DEBUG D#100 => D#497
  # DEBUG __n => i_126
  # DEBUG this => D#100
  # DEBUG rate => rate_166
  _27 = prephitmp_152 + rate_166;
  this_6(D)->_max_val = _27;
  i_29 = i_126 + 1;
  # DEBUG i => i_29
  # DEBUG i => i_29
  if (i_29 >= _43)
    goto <bb 33>;
  else
    goto <bb 39>;

<L13>:
  # DEBUG D#498 => &this_6(D)->_rates
  # DEBUG this => D#498
  # DEBUG D#167 => &D#498->D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D#498->D.34940._M_impl._M_finish
  # DEBUG D#169 => D#498->D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D#498->D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _47 = MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_start;
  # DEBUG D#164 => (long int) _47
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _47
  # DEBUG __n => D#161
  if (_47 != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _47
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _47
  # DEBUG this => D#153
  # DEBUG D.50173 => D#154
  operator delete (_47);

  <bb 47>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  MEM[(struct  &)this_6(D) + 40] ={v} {CLOBBER};
  resx 3

<L20>:
  goto <bb 50> (<L14>);

<L18>:

<L14>:
  # DEBUG D#499 => &this_6(D)->_hotspots
  # DEBUG this => D#499
  # DEBUG D#167 => &D#499->D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D#499->D.34940._M_impl._M_finish
  # DEBUG D#169 => D#499->D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D#499->D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _32 = MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_start;
  # DEBUG D#164 => (long int) _32
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _32
  # DEBUG __n => D#161
  if (_32 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _32
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _32
  # DEBUG this => D#153
  # DEBUG D.50188 => D#154
  operator delete (_32);

  <bb 52>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  MEM[(struct  &)this_6(D) + 16] ={v} {CLOBBER};
  resx 2

<L21>:
  goto <bb 55> (<L15>);

<L16>:

<L15>:
  # DEBUG D#500 => &this_6(D)->D.36118
  # DEBUG this => D#500
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  resx 1

}



;; Function static TrafficPattern* TrafficPattern::New(const string&, int, const Configuration*) (_ZN14TrafficPattern3NewERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiPK13Configuration, funcdef_no=1746, decl_uid=33870, cgraph_uid=416, symbol_order=417)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static TrafficPattern* TrafficPattern::New(const string&, int, const Configuration*) (const struct string & pattern, int nodes, const struct Configuration * const config)
{
  struct basic_string * __first;
  struct basic_string * __first;
  int * D.54421;
  const int * __last;
  const int * __first;
  const ptrdiff_t _Num;
  int * __result;
  int * D.54410;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct __normal_iterator D.54374;
  struct __normal_iterator D.54373;
  int * __tmp;
  const ptrdiff_t _Num;
  struct vector & D.54372;
  size_type __dnew;
  struct __normal_iterator D.54256;
  int * D.54233;
  const ptrdiff_t _Num;
  size_type __dnew;
  char_type D.54138;
  char __c;
  char_type D.54135;
  struct basic_ostream & D.54129;
  size_type __dnew;
  size_type __dnew;
  const char * __start;
  size_type __dnew;
  const char * __start;
  size_type __dnew;
  const char * __start;
  size_t i;
  struct vector rates;
  struct vector hotspots;
  int xr;
  int n;
  int k;
  bool missing_params;
  int n;
  int k;
  bool missing_params;
  struct vector excludes;
  int perm_seed;
  struct TrafficPattern * result;
  struct vector params;
  struct string param_str;
  struct string pattern_name;
  struct vector D.37136;
  struct vector D.37135;
  struct vector D.37124;
  const struct value_type D.37119;
  const struct string D.37086;
  const struct string D.37082;
  const struct string D.37078;
  const struct string D.37054;
  const struct string D.37050;
  struct vector D.37014;
  const struct string D.36972;
  const struct string D.36968;
  struct string D.36969;
  struct basic_string D.36156;
  struct basic_string D.36155;
  struct basic_string D.36153;
  long unsigned int prephitmp_3;
  bool _4;
  long unsigned int pretmp_5;
  int * const prephitmp_7;
  bool _9;
  int * const pretmp_10;
  long int pretmp_13;
  int * prephitmp_17;
  long int prephitmp_25;
  size_type _40;
  bool _41;
  char * const _43;
  long unsigned int _44;
  long int pretmp_45;
  char * const _46;
  char * const _48;
  long unsigned int _51;
  long unsigned int _52;
  bool _53;
  char * const _54;
  int _55;
  char * const _57;
  char * const _59;
  int _66;
  int _68;
  int _76;
  int _81;
  struct basic_string * const _83;
  int * _84;
  char * const _89;
  char * const _91;
  long int _93;
  struct basic_ostream & _96;
  int * const _97;
  char * const _101;
  int * _103;
  char * const _104;
  char * const _107;
  const size_type _108;
  char * const _109;
  int _111;
  int _118;
  long unsigned int _121;
  int _125;
  int * _127;
  int * _130;
  char * const _132;
  int _136;
  int _140;
  int _142;
  char * const _150;
  char * const _152;
  char * const _154;
  struct basic_ostream & _155;
  char * const _156;
  long int _157;
  char * const _161;
  char * const _163;
  char * const _165;
  int _168;
  const size_type _170;
  int _172;
  int _173;
  int _174;
  char * const _178;
  char * const _180;
  char * const _182;
  struct basic_string * const _183;
  char * const _187;
  char * const _189;
  char * const _191;
  size_type _192;
  char * const _196;
  char * const _198;
  char * const _200;
  int _204;
  int _208;
  int _212;
  const size_type _214;
  int _215;
  struct basic_string * const _217;
  long int _218;
  char * const _223;
  int * _225;
  long int _226;
  long int _229;
  int _230;
  long int _234;
  long int _239;
  int _240;
  int * _243;
  long int _245;
  int * _253;
  int * _255;
  int * _256;
  int * _260;
  int * _262;
  int * _264;
  char * const _265;
  const size_type _268;
  char * const _269;
  struct basic_string * _271;
  char * const _272;
  char * const _273;
  char * const _278;
  struct basic_string * _280;
  struct basic_string * const _282;
  struct basic_string * const _283;
  struct basic_string * const _284;
  struct basic_string * const _285;
  struct basic_string * const _286;
  struct basic_string * const _287;
  struct basic_string * const _288;
  struct basic_string * const _289;
  struct basic_string * const _292;
  struct basic_string * const _293;
  int * const _296;
  int * const _297;
  long int _298;
  long int _299;
  long int _300;
  long int _301;
  long int _303;
  long int _304;
  long int _305;
  long int _306;
  size_type _307;
  long int _308;
  char * const _309;
  struct basic_ostream & _310;
  long int _311;
  long int _312;
  long int _313;
  long int _314;
  long int _316;
  long int _317;
  long int _318;
  long int _319;
  size_type _320;
  size_type _325;
  long int _326;
  char * const _327;
  struct basic_ostream & _328;
  struct basic_string * const _329;
  long int _330;
  long int _331;
  long int _332;
  long int _333;
  size_type _334;
  long unsigned int _335;
  int & _336;
  long int _337;
  long int _338;
  long int _339;
  int _340;
  long int _341;
  long int _342;
  long int _343;
  long int _344;
  size_type _345;
  struct basic_string & _346;
  long int _347;
  long int _348;
  long int _349;
  long int _350;
  size_type _351;
  int * _354;
  long int _355;
  char * const _356;
  struct basic_ostream & _357;
  int * const pretmp_409;
  int * const prephitmp_410;
  int * const pretmp_411;
  int * const prephitmp_412;
  int * pretmp_416;
  int * prephitmp_417;
  int * const pretmp_418;
  int * prephitmp_427;
  int * const pretmp_429;
  int * const prephitmp_430;
  int _442;
  int _446;
  int * prephitmp_454;
  int * pretmp_455;
  int * pretmp_456;
  int * pretmp_459;
  long unsigned int pretmp_460;
  int * pretmp_461;
  long unsigned int pretmp_462;
  const struct __ctype_type * _464;
  struct basic_string * prephitmp_466;
  int * pretmp_467;
  int * pretmp_468;
  int * pretmp_469;
  long int pretmp_536;
  long int prephitmp_537;
  struct basic_string * pretmp_538;
  long int pretmp_547;
  long int pretmp_549;
  struct basic_string * const prephitmp_572;
  struct basic_string * const pretmp_573;
  long int pretmp_575;
  struct basic_string * pretmp_583;
  struct basic_string * prephitmp_584;
  struct basic_string * const pretmp_586;
  struct basic_string * pretmp_595;
  struct basic_string * prephitmp_596;
  size_type _735;
  const size_type _737;
  long int pretmp_740;
  const char * _741;
  char * _747;
  long unsigned int __dnew.63_748;
  const char_type _750;
  char * _753;
  const size_type _754;
  char * const _755;
  int * const prephitmp_756;
  long unsigned int _758;
  const char * _760;
  size_type prephitmp_761;
  char * _766;
  long unsigned int __dnew.63_767;
  const char_type _769;
  char * _772;
  const size_type _773;
  char * const _774;
  long unsigned int _777;
  const char * _779;
  char * const pretmp_780;
  long unsigned int prephitmp_783;
  char * _785;
  long unsigned int __dnew.63_786;
  const char_type _788;
  char * _791;
  int _792;
  int _793;
  int _794;
  int _795;
  long int pretmp_796;
  size_type iftmp.47_797;
  long unsigned int pretmp_800;
  size_type pretmp_802;
  bool _803;
  char * const prephitmp_808;
  size_type prephitmp_809;
  char * const pretmp_810;
  int (*__vtbl_ptr_type) () * _811;
  long int _812;
  sizetype _813;
  struct basic_ios * _814;
  bool _815;
  int _816;
  struct basic_ostream & _817;
  struct basic_string * const _818;
  char _819;
  size_type iftmp.47_821;
  char_type _822;
  char_type _825;
  int (*__vtbl_ptr_type) () * _827;
  int (*__vtbl_ptr_type) () _828;
  char_type _830;
  long unsigned int prephitmp_837;
  struct basic_string * const _838;
  size_type pretmp_839;
  long unsigned int pretmp_840;
  const ptrdiff_t prephitmp_843;
  struct basic_string * const _845;
  struct basic_string * const _847;
  int * const _848;
  int * const _849;
  long int _850;
  long int _851;
  long int _852;
  long int _853;
  size_type _854;
  bool _855;
  int * _857;
  int * _866;
  int * _867;
  int * iftmp.79_868;
  struct basic_string * _869;
  struct basic_string * _870;
  char * _871;
  char * const _872;
  const size_type _873;
  char * _874;
  struct basic_string * _876;
  struct basic_string * const _877;
  long int _878;
  long int _879;
  char * _881;
  long unsigned int __dnew.63_882;
  const char_type _884;
  char * _887;
  int * const _888;
  int * const _889;
  long int _890;
  long int _891;
  long int _892;
  long int _893;
  size_type _894;
  int * const _895;
  int * const _896;
  long int _897;
  long int _898;
  long int _899;
  long int _900;
  size_type _901;
  int * _905;
  int * const _906;
  long int _907;
  long int _908;
  long int _909;
  size_type _910;
  long unsigned int _911;
  long unsigned int _912;
  int * _921;
  long int __first.82_923;
  long int _924;
  long unsigned int _926;
  long int pretmp_933;
  long unsigned int _937;
  int * _938;
  int * iftmp.79_939;
  struct basic_string * _940;
  int * const prephitmp_942;
  char * const _943;
  const char * _944;
  char * const _949;
  const char * _950;
  long int _955;
  long int _958;
  int * const prephitmp_970;
  const ptrdiff_t pretmp_978;
  int * pretmp_1020;
  long unsigned int pretmp_1033;
  int * pretmp_1046;
  bool _1061;
  bool _1070;
  char * const _1077;
  bool _1080;
  long int _1110;
  long int _1111;
  size_type _1112;
  char * const prephitmp_1113;
  bool _1116;
  size_type _1126;
  long unsigned int _1140;
  size_type _1145;
  int * pretmp_1149;
  long int _1157;
  bool _1159;
  long int _1161;
  long int _1162;
  long int _1163;
  char * const _1165;
  char * const prephitmp_1193;
  size_type prephitmp_1194;
  int * const pretmp_1195;
  int * const prephitmp_1196;
  int * const pretmp_1198;
  size_type prephitmp_1199;
  char * const pretmp_1200;
  char * const prephitmp_1201;
  char * const pretmp_1202;
  size_type pretmp_1203;
  long unsigned int prephitmp_1206;
  long int pretmp_1207;
  long unsigned int pretmp_1208;
  long int pretmp_1209;
  long int _1210;
  long int _1211;
  size_type _1212;
  int * const pretmp_1213;
  struct basic_string * const _1215;
  struct basic_string * const _1216;
  long int _1217;
  long int _1218;
  struct basic_string * const _1219;
  struct basic_string * const _1220;
  long int _1221;
  size_type pretmp_1222;
  struct basic_string * prephitmp_1223;
  struct basic_string * pretmp_1224;
  char * const _1226;
  char * const _1227;
  int * const _1229;
  int * const _1230;
  long int _1232;

  <bb 2>:
  # DEBUG this => &pattern_name
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG this => &pattern_name
  # DEBUG D#152 => &pattern_name._M_dataplus
  # DEBUG this => D#152
  # DEBUG __dat => &pattern_name.D.11539._M_local_buf
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#152
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)&pattern_name]._M_p = &pattern_name.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &pattern_name
  # DEBUG __n => 0
  # DEBUG D#4 => &pattern_name
  # DEBUG __length => 0
  # DEBUG this => D#4
  MEM[(size_type *)&pattern_name + 8B] = 0;
  # DEBUG D#2 => &pattern_name
  # DEBUG this => D#2
  # DEBUG __c1 => &pattern_name.D.11539._M_local_buf
  # DEBUG __c2 => D#32
  MEM[(char_type &)&pattern_name + 16] = 0;
  # DEBUG this => &param_str
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG this => &param_str
  # DEBUG D#152 => &param_str._M_dataplus
  # DEBUG this => D#152
  # DEBUG __dat => &param_str.D.11539._M_local_buf
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#152
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)&param_str]._M_p = &param_str.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &param_str
  # DEBUG __n => 0
  # DEBUG D#4 => &param_str
  # DEBUG __length => 0
  # DEBUG this => D#4
  MEM[(size_type *)&param_str + 8B] = 0;
  # DEBUG D#2 => &param_str
  # DEBUG this => D#2
  # DEBUG __c1 => &param_str.D.11539._M_local_buf
  # DEBUG __c2 => D#32
  MEM[(char_type &)&param_str + 16] = 0;
  # DEBUG this => pattern_39(D)
  # DEBUG __c => 40
  # DEBUG __pos => 0
  _192 = std::__cxx11::basic_string<char>::find (pattern_39(D), 40, 0);

  <bb 3>:
  # DEBUG left => _192
  if (_192 == 18446744073709551615)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 4>:
  # DEBUG this => &pattern_name
  # DEBUG __str => pattern_39(D)
  # DEBUG this => &pattern_name
  # DEBUG __str => pattern_39(D)
  std::__cxx11::basic_string<char>::_M_assign (&pattern_name, pattern_39(D));
  goto <bb 47>;

<L171>:
  goto <bb 520> (<L164>);

  <bb 6>:
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => 0
  # DEBUG __n => _192
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => 0
  # DEBUG __s => "basic_string::substr"
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  # DEBUG this => &D.36153
  # DEBUG __str => pattern_39(D)
  # DEBUG __pos => 0
  # DEBUG __n => _192
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG this => &D.36153
  # DEBUG D#317 => &D.36153._M_dataplus
  # DEBUG this => D#317
  # DEBUG __dat => &D.36153.D.11539._M_local_buf
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#317
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)&D.36153]._M_p = &D.36153.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  __start_736 = MEM[(char * *)pattern_39(D)];
  # DEBUG D#2 => pattern_39(D)
  # DEBUG this => D#2
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => 0
  # DEBUG __s => "basic_string::basic_string"
  _737 = MEM[(long unsigned int *)pattern_39(D) + 8B];
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  # DEBUG __start => __start_736
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => 0
  # DEBUG __off => _192
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  # DEBUG __testoff => _737 > _192
  iftmp.47_821 = MIN_EXPR <_192, _737>;
  _741 = __start_736 + iftmp.47_821;
  # DEBUG this => &D.36153
  # DEBUG __beg => __start_736
  # DEBUG __end => _741
  # DEBUG this => &D.36153
  # DEBUG __beg => __start_736
  # DEBUG __end => _741
  # DEBUG this => &D.36153
  # DEBUG __beg => __start_736
  # DEBUG __end => _741
  # DEBUG __ptr => __start_736
  _4 = _741 != 0B;
  _1159 = __start_736 == 0B;
  _1080 = _4 & _1159;
  if (_1080 != 0)
    goto <bb 526>;
  else
    goto <bb 528>;

  <bb 7>:
  _747 = std::__cxx11::basic_string<char>::_M_create (&D.36153, &__dnew, 0);
  goto <bb 9>;

<L172>:
  goto <bb 520> (<L164>);

  <bb 9>:
  # DEBUG D#6 => &D.36153
  # DEBUG __p => _747
  # DEBUG this => D#6
  MEM[(char * *)&D.36153] = _747;
  __dnew.63_748 = __dnew;
  # DEBUG D#7 => &D.36153
  # DEBUG __capacity => __dnew.63_748
  # DEBUG this => D#7
  MEM[(size_type *)&D.36153 + 16B] = __dnew.63_748;
  # DEBUG D#2 => &D.36153
  # DEBUG this => D#2
  # DEBUG __p => _747
  # DEBUG __k1 => __start_736
  # DEBUG __k2 => _741
  # DEBUG __d => _747
  # DEBUG __s => __start_736
  # DEBUG __n => iftmp.47_821
  goto <bb 12>;

  <bb 10>:
  # DEBUG D#2 => &D.36153
  # DEBUG this => D#2
  # DEBUG __p => &D.36153.D.11539._M_local_buf
  # DEBUG __k1 => __start_736
  # DEBUG __k2 => _741
  # DEBUG __d => &D.36153.D.11539._M_local_buf
  # DEBUG __s => __start_736
  # DEBUG __n => iftmp.47_821
  if (iftmp.47_821 == 1)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _750 = MEM[(const char_type &)__start_736];
  # DEBUG D#32 => __start_736
  # DEBUG __c1 => &D.36153.D.11539._M_local_buf
  # DEBUG __c2 => D#32
  MEM[(char_type &)&D.36153 + 16] = _750;
  goto <bb 13>;

  <bb 12>:
  # _1227 = PHI <&D.36153.D.11539._M_local_buf(10), _747(9)>
  # DEBUG D#2 => &D.36153
  # DEBUG this => D#2
  # DEBUG __p => _1227
  # DEBUG __k1 => __start_736
  # DEBUG __k2 => _741
  # DEBUG __d => _1227
  # DEBUG __s => __start_736
  # DEBUG __n => iftmp.47_821
  # DEBUG __s1 => _1227
  # DEBUG __s2 => __start_736
  # DEBUG __n => iftmp.47_821
  __builtin_memcpy (_1227, __start_736, iftmp.47_821);
  pretmp_839 = __dnew;
  pretmp_810 = MEM[(char * *)&D.36153];

  <bb 13>:
  # prephitmp_809 = PHI <iftmp.47_821(11), pretmp_839(12)>
  # prephitmp_808 = PHI <&D.36153.D.11539._M_local_buf(11), pretmp_810(12)>
  # DEBUG D#787 => __dnew
  # DEBUG this => &D.36153
  # DEBUG __n => D#787
  # DEBUG D#4 => &D.36153
  # DEBUG __length => D#787
  # DEBUG this => D#4
  MEM[(size_type *)&D.36153 + 8B] = prephitmp_809;
  # DEBUG D#2 => &D.36153
  # DEBUG this => D#2
  _753 = prephitmp_808 + prephitmp_809;
  # DEBUG __c1 => _753
  # DEBUG __c2 => D#32
  MEM[(char_type &)_753] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &pattern_name
  # DEBUG __str => &D.36153
  # DEBUG this => &pattern_name
  # DEBUG __str => &D.36153
  std::__cxx11::basic_string<char>::_M_assign (&pattern_name, &D.36153);

  <bb 14>:
  # DEBUG this => &D.36153
  # DEBUG this => &D.36153
  # DEBUG this => &D.36153
  _43 = MEM[(char * *)&D.36153];
  # DEBUG D#2 => &D.36153
  # DEBUG this => D#2
  # DEBUG this => &D.36153
  if (&D.36153.D.11539._M_local_buf != _43)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#219 => D.36153.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36153
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36153
  # DEBUG this => D#2
  # DEBUG this => &D.36153
  # DEBUG D#216 => &D.36153._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _43
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _43
  # DEBUG this => D#210
  # DEBUG D.50591 => D#211
  operator delete (_43);

  <bb 16>:
  # DEBUG D#220 => &D.36153._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36153 ={v} {CLOBBER};
  # DEBUG this => pattern_39(D)
  # DEBUG __c => 41
  # DEBUG __pos => 18446744073709551615
  _40 = std::__cxx11::basic_string<char>::rfind (pattern_39(D), 41, 18446744073709551615);
  goto <bb 18>;

<L173>:
  goto <bb 520> (<L164>);

  <bb 18>:
  # DEBUG right => _40
  if (_40 == 18446744073709551615)
    goto <bb 19>;
  else
    goto <bb 33>;

  <bb 19>:
  _44 = _192 + 1;
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => _44
  # DEBUG __n => 18446744073709551615
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => _44
  # DEBUG __s => "basic_string::substr"
  _754 = MEM[(long unsigned int *)pattern_39(D) + 8B];
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  if (_44 > _754)
    goto <bb 20>;
  else
    goto <bb 22>;

  <bb 20>:
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  std::__throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", _44, _754);

<L174>:
  goto <bb 520> (<L164>);

  <bb 22>:
  # DEBUG this => &D.36155
  # DEBUG __str => pattern_39(D)
  # DEBUG __pos => _44
  # DEBUG __n => 18446744073709551615
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG this => &D.36155
  # DEBUG D#317 => &D.36155._M_dataplus
  # DEBUG this => D#317
  # DEBUG __dat => &D.36155.D.11539._M_local_buf
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#317
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)&D.36155]._M_p = &D.36155.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  _755 = MEM[(char * *)pattern_39(D)];
  # DEBUG D#2 => pattern_39(D)
  # DEBUG this => D#2
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => _44
  # DEBUG __s => "basic_string::basic_string"
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  __start_757 = _755 + _44;
  # DEBUG __start => __start_757
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => _44
  # DEBUG __off => 18446744073709551615
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  _758 = _754 - _44;
  # DEBUG __testoff => _758 > 18446744073709551615
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  _760 = __start_757 + _758;
  # DEBUG this => &D.36155
  # DEBUG __beg => __start_757
  # DEBUG __end => _760
  # DEBUG this => &D.36155
  # DEBUG __beg => __start_757
  # DEBUG __end => _760
  # DEBUG this => &D.36155
  # DEBUG __beg => __start_757
  # DEBUG __end => _760
  # DEBUG __ptr => __start_757
  _9 = _760 != 0B;
  _1061 = __start_757 == 0B;
  _803 = _9 & _1061;
  if (_803 != 0)
    goto <bb 529>;
  else
    goto <bb 531>;

  <bb 23>:
  _766 = std::__cxx11::basic_string<char>::_M_create (&D.36155, &__dnew, 0);
  goto <bb 25>;

<L175>:
  goto <bb 520> (<L164>);

  <bb 25>:
  # DEBUG D#6 => &D.36155
  # DEBUG __p => _766
  # DEBUG this => D#6
  MEM[(char * *)&D.36155] = _766;
  __dnew.63_767 = __dnew;
  # DEBUG D#7 => &D.36155
  # DEBUG __capacity => __dnew.63_767
  # DEBUG this => D#7
  MEM[(size_type *)&D.36155 + 16B] = __dnew.63_767;
  # DEBUG D#2 => &D.36155
  # DEBUG this => D#2
  # DEBUG __p => _766
  # DEBUG __k1 => __start_757
  # DEBUG __k2 => _760
  # DEBUG __d => _766
  # DEBUG __s => __start_757
  # DEBUG __n => _758
  goto <bb 28>;

  <bb 26>:
  # DEBUG D#2 => &D.36155
  # DEBUG this => D#2
  # DEBUG __p => &D.36155.D.11539._M_local_buf
  # DEBUG __k1 => __start_757
  # DEBUG __k2 => _760
  # DEBUG __d => &D.36155.D.11539._M_local_buf
  # DEBUG __s => __start_757
  # DEBUG __n => _758
  if (_758 == 1)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _769 = MEM[(const char_type &)__start_757];
  # DEBUG D#32 => __start_757
  # DEBUG __c1 => &D.36155.D.11539._M_local_buf
  # DEBUG __c2 => D#32
  MEM[(char_type &)&D.36155 + 16] = _769;
  goto <bb 29>;

  <bb 28>:
  # _1226 = PHI <&D.36155.D.11539._M_local_buf(26), _766(25)>
  # DEBUG D#2 => &D.36155
  # DEBUG this => D#2
  # DEBUG __p => _1226
  # DEBUG __k1 => __start_757
  # DEBUG __k2 => _760
  # DEBUG __d => _1226
  # DEBUG __s => __start_757
  # DEBUG __n => _758
  # DEBUG __s1 => _1226
  # DEBUG __s2 => __start_757
  # DEBUG __n => _758
  __builtin_memcpy (_1226, __start_757, _758);
  pretmp_1203 = __dnew;
  pretmp_1202 = MEM[(char * *)&D.36155];

  <bb 29>:
  # prephitmp_1194 = PHI <_758(27), pretmp_1203(28)>
  # prephitmp_1193 = PHI <&D.36155.D.11539._M_local_buf(27), pretmp_1202(28)>
  # DEBUG D#786 => __dnew
  # DEBUG this => &D.36155
  # DEBUG __n => D#786
  # DEBUG D#4 => &D.36155
  # DEBUG __length => D#786
  # DEBUG this => D#4
  MEM[(size_type *)&D.36155 + 8B] = prephitmp_1194;
  # DEBUG D#2 => &D.36155
  # DEBUG this => D#2
  _772 = prephitmp_1193 + prephitmp_1194;
  # DEBUG __c1 => _772
  # DEBUG __c2 => D#32
  MEM[(char_type &)_772] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &param_str
  # DEBUG __str => &D.36155
  # DEBUG this => &param_str
  # DEBUG __str => &D.36155
  std::__cxx11::basic_string<char>::_M_assign (&param_str, &D.36155);

  <bb 30>:
  # DEBUG this => &D.36155
  # DEBUG this => &D.36155
  # DEBUG this => &D.36155
  _46 = MEM[(char * *)&D.36155];
  # DEBUG D#2 => &D.36155
  # DEBUG this => D#2
  # DEBUG this => &D.36155
  if (&D.36155.D.11539._M_local_buf != _46)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#219 => D.36155.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36155
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36155
  # DEBUG this => D#2
  # DEBUG this => &D.36155
  # DEBUG D#216 => &D.36155._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _46
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _46
  # DEBUG this => D#210
  # DEBUG D.50611 => D#211
  operator delete (_46);

  <bb 32>:
  # DEBUG D#220 => &D.36155._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36155 ={v} {CLOBBER};
  goto <bb 47>;

  <bb 33>:
  _1140 = ~_192;
  _51 = _40 + _1140;
  _52 = _192 + 1;
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => _52
  # DEBUG __n => _51
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => _52
  # DEBUG __s => "basic_string::substr"
  _773 = MEM[(long unsigned int *)pattern_39(D) + 8B];
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  if (_52 > _773)
    goto <bb 34>;
  else
    goto <bb 36>;

  <bb 34>:
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  std::__throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", _52, _773);

<L176>:
  goto <bb 520> (<L164>);

  <bb 36>:
  # DEBUG this => &D.36156
  # DEBUG __str => pattern_39(D)
  # DEBUG __pos => _52
  # DEBUG __n => _51
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG this => &D.36156
  # DEBUG D#317 => &D.36156._M_dataplus
  # DEBUG this => D#317
  # DEBUG __dat => &D.36156.D.11539._M_local_buf
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#317
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)&D.36156]._M_p = &D.36156.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  _774 = MEM[(char * *)pattern_39(D)];
  # DEBUG D#2 => pattern_39(D)
  # DEBUG this => D#2
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => _52
  # DEBUG __s => "basic_string::basic_string"
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  __start_776 = _774 + _52;
  # DEBUG __start => __start_776
  # DEBUG this => pattern_39(D)
  # DEBUG __pos => _52
  # DEBUG __off => _51
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  _777 = _773 - _52;
  # DEBUG __testoff => _777 > _51
  iftmp.47_797 = MIN_EXPR <_51, _777>;
  _779 = __start_776 + iftmp.47_797;
  # DEBUG this => &D.36156
  # DEBUG __beg => __start_776
  # DEBUG __end => _779
  # DEBUG this => &D.36156
  # DEBUG __beg => __start_776
  # DEBUG __end => _779
  # DEBUG this => &D.36156
  # DEBUG __beg => __start_776
  # DEBUG __end => _779
  # DEBUG __ptr => __start_776
  _1070 = _779 != 0B;
  _815 = __start_776 == 0B;
  _855 = _815 & _1070;
  if (_855 != 0)
    goto <bb 532>;
  else
    goto <bb 534>;

  <bb 37>:
  _785 = std::__cxx11::basic_string<char>::_M_create (&D.36156, &__dnew, 0);
  goto <bb 39>;

<L177>:
  goto <bb 520> (<L164>);

  <bb 39>:
  # DEBUG D#6 => &D.36156
  # DEBUG __p => _785
  # DEBUG this => D#6
  MEM[(char * *)&D.36156] = _785;
  __dnew.63_786 = __dnew;
  # DEBUG D#7 => &D.36156
  # DEBUG __capacity => __dnew.63_786
  # DEBUG this => D#7
  MEM[(size_type *)&D.36156 + 16B] = __dnew.63_786;
  # DEBUG D#2 => &D.36156
  # DEBUG this => D#2
  # DEBUG __p => _785
  # DEBUG __k1 => __start_776
  # DEBUG __k2 => _779
  # DEBUG __d => _785
  # DEBUG __s => __start_776
  # DEBUG __n => iftmp.47_797
  goto <bb 42>;

  <bb 40>:
  # DEBUG D#2 => &D.36156
  # DEBUG this => D#2
  # DEBUG __p => &D.36156.D.11539._M_local_buf
  # DEBUG __k1 => __start_776
  # DEBUG __k2 => _779
  # DEBUG __d => &D.36156.D.11539._M_local_buf
  # DEBUG __s => __start_776
  # DEBUG __n => iftmp.47_797
  if (iftmp.47_797 == 1)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  _788 = MEM[(const char_type &)__start_776];
  # DEBUG D#32 => __start_776
  # DEBUG __c1 => &D.36156.D.11539._M_local_buf
  # DEBUG __c2 => D#32
  MEM[(char_type &)&D.36156 + 16] = _788;
  goto <bb 43>;

  <bb 42>:
  # _1077 = PHI <&D.36156.D.11539._M_local_buf(40), _785(39)>
  # DEBUG D#2 => &D.36156
  # DEBUG this => D#2
  # DEBUG __p => _1077
  # DEBUG __k1 => __start_776
  # DEBUG __k2 => _779
  # DEBUG __d => _1077
  # DEBUG __s => __start_776
  # DEBUG __n => iftmp.47_797
  # DEBUG __s1 => _1077
  # DEBUG __s2 => __start_776
  # DEBUG __n => iftmp.47_797
  __builtin_memcpy (_1077, __start_776, iftmp.47_797);
  pretmp_802 = __dnew;
  pretmp_1200 = MEM[(char * *)&D.36156];

  <bb 43>:
  # prephitmp_1199 = PHI <iftmp.47_797(41), pretmp_802(42)>
  # prephitmp_1201 = PHI <&D.36156.D.11539._M_local_buf(41), pretmp_1200(42)>
  # DEBUG D#785 => __dnew
  # DEBUG this => &D.36156
  # DEBUG __n => D#785
  # DEBUG D#4 => &D.36156
  # DEBUG __length => D#785
  # DEBUG this => D#4
  MEM[(size_type *)&D.36156 + 8B] = prephitmp_1199;
  # DEBUG D#2 => &D.36156
  # DEBUG this => D#2
  _791 = prephitmp_1201 + prephitmp_1199;
  # DEBUG __c1 => _791
  # DEBUG __c2 => D#32
  MEM[(char_type &)_791] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &param_str
  # DEBUG __str => &D.36156
  # DEBUG this => &param_str
  # DEBUG __str => &D.36156
  std::__cxx11::basic_string<char>::_M_assign (&param_str, &D.36156);

  <bb 44>:
  # DEBUG this => &D.36156
  # DEBUG this => &D.36156
  # DEBUG this => &D.36156
  _54 = MEM[(char * *)&D.36156];
  # DEBUG D#2 => &D.36156
  # DEBUG this => D#2
  # DEBUG this => &D.36156
  if (&D.36156.D.11539._M_local_buf != _54)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#219 => D.36156.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36156
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36156
  # DEBUG this => D#2
  # DEBUG this => &D.36156
  # DEBUG D#216 => &D.36156._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _54
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _54
  # DEBUG this => D#210
  # DEBUG D.50631 => D#211
  operator delete (_54);

  <bb 46>:
  # DEBUG D#220 => &D.36156._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36156 ={v} {CLOBBER};

  <bb 47>:
  params = tokenize_str (&param_str); [return slot optimization]
  goto <bb 49>;

<L178>:
  goto <bb 520> (<L164>);

  <bb 49>:
  # DEBUG result => 0B
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "bitcomp"
  _55 = std::__cxx11::basic_string<char>::compare (&pattern_name, "bitcomp");

  <bb 50>:
  if (_55 == 0)
    goto <bb 51>;
  else
    goto <bb 66>;

  <bb 51>:
  result_64 = operator new (16);
  goto <bb 53>;

<L180>:
  goto <bb 508> (<L163>);

  <bb 53>:
  # DEBUG this => result_64
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#770 => &MEM[(struct BitCompTrafficPattern *)result_64].D.33980
  # DEBUG this => D#770
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#69 => &D#770->D.33950
  # DEBUG this => D#69
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#66 => &D#69->D.33923
  # DEBUG this => D#66
  # DEBUG nodes => nodes_65(D)
  result_64->_vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  result_64->_nodes = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  # DEBUG D#62 => D#66
  # DEBUG D#63 => nodes_65(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 55>:
  MEM[(struct BitPermutationTrafficPattern *)result_64].D.33950.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV28BitPermutationTrafficPattern + 16B];
  _792 = -nodes_65(D);
  _793 = nodes_65(D) & _792;
  if (nodes_65(D) != _793)
    goto <bb 56>;
  else
    goto <bb 65>;

  <bb 56>:
  # DEBUG __out => &cout
  # DEBUG __s => "Error: Bit permutation traffic patterns require the number of "
  # DEBUG __s => "Error: Bit permutation traffic patterns require the number of "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Bit permutation traffic patterns require the number of ", 62);

  <bb 57>:
  # DEBUG __out => &cout
  # DEBUG __s => "nodes to be a power of two."
  # DEBUG __s => "nodes to be a power of two."
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "nodes to be a power of two.", 27);
  goto <bb 59>;

<L183>:
  goto <bb 63> (<L167>);

  <bb 59>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (&cout);
  goto <bb 61>;

<L184>:
  goto <bb 63> (<L167>);

  <bb 61>:
  exit (-1);

<L182>:

<L167>:
  # DEBUG D#68 => &D#770->D.33950
  # DEBUG this => D#68
  # DEBUG D#67 => &D#68->D.33923
  # DEBUG this => D#67
  MEM[(struct  &)result_64] ={v} {CLOBBER};
  resx 97

<L185>:
  goto <bb 402> (<L122>);

  <bb 65>:
  MEM[(struct BitCompTrafficPattern *)result_64].D.33980.D.33950.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV21BitCompTrafficPattern + 16B];
  # DEBUG result => result_64
  goto <bb 375>;

  <bb 66>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "transpose"
  _66 = std::__cxx11::basic_string<char>::compare (&pattern_name, "transpose");
  goto <bb 68>;

<L186>:
  goto <bb 508> (<L163>);

  <bb 68>:
  if (_66 == 0)
    goto <bb 69>;
  else
    goto <bb 72>;

  <bb 69>:
  result_70 = operator new (16);
  goto <bb 71>;

<L187>:
  goto <bb 508> (<L163>);

  <bb 71>:
  TransposeTrafficPattern::TransposeTrafficPattern (result_70, nodes_65(D));
  goto <bb 375>;

  <bb 72>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "bitrev"
  _68 = std::__cxx11::basic_string<char>::compare (&pattern_name, "bitrev");
  goto <bb 74>;

<L188>:
  goto <bb 508> (<L163>);

  <bb 74>:
  if (_68 == 0)
    goto <bb 75>;
  else
    goto <bb 89>;

  <bb 75>:
  result_75 = operator new (16);
  goto <bb 77>;

<L189>:
  goto <bb 508> (<L163>);

  <bb 77>:
  # DEBUG this => result_75
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#769 => &MEM[(struct BitRevTrafficPattern *)result_75].D.34042
  # DEBUG this => D#769
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#69 => &D#769->D.33950
  # DEBUG this => D#69
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#66 => &D#69->D.33923
  # DEBUG this => D#66
  # DEBUG nodes => nodes_65(D)
  result_75->_vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  result_75->_nodes = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  # DEBUG D#62 => D#66
  # DEBUG D#63 => nodes_65(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 79>:
  MEM[(struct BitPermutationTrafficPattern *)result_75].D.33950.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV28BitPermutationTrafficPattern + 16B];
  _442 = -nodes_65(D);
  _794 = nodes_65(D) & _442;
  if (nodes_65(D) != _794)
    goto <bb 80>;
  else
    goto <bb 88>;

  <bb 80>:
  # DEBUG __out => &cout
  # DEBUG __s => "Error: Bit permutation traffic patterns require the number of "
  # DEBUG __s => "Error: Bit permutation traffic patterns require the number of "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Bit permutation traffic patterns require the number of ", 62);

  <bb 81>:
  # DEBUG __out => &cout
  # DEBUG __s => "nodes to be a power of two."
  # DEBUG __s => "nodes to be a power of two."
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "nodes to be a power of two.", 27);
  goto <bb 83>;

<L192>:
  goto <bb 86> (<L168>);

  <bb 83>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (&cout);
  goto <bb 61>;

<L193>:
  goto <bb 86> (<L168>);

<L191>:

<L168>:
  # DEBUG D#68 => &D#769->D.33950
  # DEBUG this => D#68
  # DEBUG D#67 => &D#68->D.33923
  # DEBUG this => D#67
  MEM[(struct  &)result_75] ={v} {CLOBBER};
  resx 98

<L194>:
  goto <bb 407> (<L124>);

  <bb 88>:
  MEM[(struct BitRevTrafficPattern *)result_75].D.34042.D.33950.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV20BitRevTrafficPattern + 16B];
  # DEBUG result => result_75
  goto <bb 375>;

  <bb 89>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "shuffle"
  _76 = std::__cxx11::basic_string<char>::compare (&pattern_name, "shuffle");
  goto <bb 91>;

<L195>:
  goto <bb 508> (<L163>);

  <bb 91>:
  if (_76 == 0)
    goto <bb 92>;
  else
    goto <bb 106>;

  <bb 92>:
  result_80 = operator new (16);
  goto <bb 94>;

<L196>:
  goto <bb 508> (<L163>);

  <bb 94>:
  # DEBUG this => result_80
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#768 => &MEM[(struct ShuffleTrafficPattern *)result_80].D.34072
  # DEBUG this => D#768
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#69 => &D#768->D.33950
  # DEBUG this => D#69
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#66 => &D#69->D.33923
  # DEBUG this => D#66
  # DEBUG nodes => nodes_65(D)
  result_80->_vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  result_80->_nodes = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  # DEBUG D#62 => D#66
  # DEBUG D#63 => nodes_65(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 96>:
  MEM[(struct BitPermutationTrafficPattern *)result_80].D.33950.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV28BitPermutationTrafficPattern + 16B];
  _446 = -nodes_65(D);
  _795 = nodes_65(D) & _446;
  if (nodes_65(D) != _795)
    goto <bb 97>;
  else
    goto <bb 105>;

  <bb 97>:
  # DEBUG __out => &cout
  # DEBUG __s => "Error: Bit permutation traffic patterns require the number of "
  # DEBUG __s => "Error: Bit permutation traffic patterns require the number of "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Bit permutation traffic patterns require the number of ", 62);

  <bb 98>:
  # DEBUG __out => &cout
  # DEBUG __s => "nodes to be a power of two."
  # DEBUG __s => "nodes to be a power of two."
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "nodes to be a power of two.", 27);
  goto <bb 100>;

<L199>:
  goto <bb 103> (<L169>);

  <bb 100>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (&cout);
  goto <bb 61>;

<L200>:
  goto <bb 103> (<L169>);

<L198>:

<L169>:
  # DEBUG D#68 => &D#768->D.33950
  # DEBUG this => D#68
  # DEBUG D#67 => &D#68->D.33923
  # DEBUG this => D#67
  MEM[(struct  &)result_80] ={v} {CLOBBER};
  resx 99

<L201>:
  goto <bb 410> (<L125>);

  <bb 105>:
  MEM[(struct ShuffleTrafficPattern *)result_80].D.34072.D.33950.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV21ShuffleTrafficPattern + 16B];
  # DEBUG result => result_80
  goto <bb 375>;

  <bb 106>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "randperm"
  _81 = std::__cxx11::basic_string<char>::compare (&pattern_name, "randperm");
  goto <bb 108>;

<L202>:
  goto <bb 508> (<L163>);

  <bb 108>:
  if (_81 == 0)
    goto <bb 109>;
  else
    goto <bb 149>;

  <bb 109>:
  # DEBUG perm_seed => -1
  # DEBUG this => &params
  _83 = MEM[(struct basic_string * *)&params + 8B];
  # DEBUG D#112 => &params
  # DEBUG this => D#112
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _183 = MEM[(struct basic_string * *)&params];
  # DEBUG D#113 => &params
  # DEBUG this => D#113
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_83 == _183)
    goto <bb 110>;
  else
    goto <bb 145>;

  <bb 110>:
  if (config_85(D) != 0B)
    goto <bb 111>;
  else
    goto <bb 139>;

  <bb 111>:
  # DEBUG D#109 => &D.36967
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG D#322 => &D.36967
  # DEBUG this => &D.36968
  # DEBUG __s => "perm_seed"
  # DEBUG __a => D#322
  # DEBUG D#321 => D#322
  # DEBUG this => &D.36968
  # DEBUG D#319 => &D.36968._M_dataplus
  # DEBUG D#151 => D#321
  # DEBUG this => D#319
  # DEBUG __dat => &D.36968.D.11539._M_local_buf
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#319
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)&D.36968]._M_p = &D.36968.D.11539._M_local_buf;
  # DEBUG __s => "perm_seed"
  # DEBUG this => &D.36968
  # DEBUG __beg => "perm_seed"
  # DEBUG __end => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG this => &D.36968
  # DEBUG __beg => "perm_seed"
  # DEBUG __end => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG this => &D.36968
  # DEBUG __beg => "perm_seed"
  # DEBUG __end => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG __ptr => "perm_seed"
  # DEBUG __first => "perm_seed"
  # DEBUG __last => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => "perm_seed"
  # DEBUG __last => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG __dnew => 9
  # DEBUG D#2 => &D.36968
  # DEBUG this => D#2
  # DEBUG __p => &D.36968.D.11539._M_local_buf
  # DEBUG __k1 => "perm_seed"
  # DEBUG __k2 => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG __d => &D.36968.D.11539._M_local_buf
  # DEBUG __s => "perm_seed"
  # DEBUG __n => 9
  # DEBUG __s1 => &D.36968.D.11539._M_local_buf
  # DEBUG __s2 => "perm_seed"
  # DEBUG __n => 9
  __builtin_memcpy (&D.36968.D.11539._M_local_buf, "perm_seed", 9);
  # DEBUG this => &D.36968
  # DEBUG __n => 9
  # DEBUG D#4 => &D.36968
  # DEBUG __length => 9
  # DEBUG this => D#4
  MEM[(size_type *)&D.36968 + 8B] = 9;
  # DEBUG D#2 => &D.36968
  # DEBUG this => D#2
  # DEBUG __c1 => &MEM[(void *)&D.36968 + 25B]
  # DEBUG __c2 => D#32
  MEM[(char_type &)&D.36968 + 25] = 0;
  # DEBUG D#771 => {CLOBBER}
  # DEBUG __dnew => D#771
  D.36969 = Configuration::GetStr (config_85(D), &D.36968); [return slot optimization]

  <bb 112>:
  # DEBUG __lhs => &D.36969
  # DEBUG __rhs => "time"
  _174 = std::__cxx11::basic_string<char>::compare (&D.36969, "time");

  <bb 113>:
  # DEBUG this => &D.36969
  # DEBUG this => &D.36969
  # DEBUG this => &D.36969
  _89 = MEM[(char * *)&D.36969];
  # DEBUG D#2 => &D.36969
  # DEBUG this => D#2
  # DEBUG this => &D.36969
  if (&D.36969.D.11539._M_local_buf != _89)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  # DEBUG D#219 => D.36969.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36969
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36969
  # DEBUG this => D#2
  # DEBUG this => &D.36969
  # DEBUG D#216 => &D.36969._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _89
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _89
  # DEBUG this => D#210
  # DEBUG D.50692 => D#211
  operator delete (_89);

  <bb 115>:
  # DEBUG D#220 => &D.36969._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36969 ={v} {CLOBBER};
  # DEBUG this => &D.36968
  # DEBUG this => &D.36968
  # DEBUG this => &D.36968
  _91 = MEM[(char * *)&D.36968];
  # DEBUG D#2 => &D.36968
  # DEBUG this => D#2
  # DEBUG this => &D.36968
  if (&D.36968.D.11539._M_local_buf != _91)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG D#219 => D.36968.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36968
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36968
  # DEBUG this => D#2
  # DEBUG this => &D.36968
  # DEBUG D#216 => &D.36968._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _91
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _91
  # DEBUG this => D#210
  # DEBUG D.50677 => D#211
  operator delete (_91);

  <bb 117>:
  # DEBUG D#220 => &D.36968._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36968 ={v} {CLOBBER};
  # DEBUG this => &D.36967
  # DEBUG this => &D.36967
  if (_174 == 0)
    goto <bb 118>;
  else
    goto <bb 135>;

  <bb 118>:
  _93 = time (0B);
  perm_seed_94 = (int) _93;
  # DEBUG perm_seed => perm_seed_94
  # DEBUG __out => &cout
  # DEBUG __s => "SEED: perm_seed="
  # DEBUG __s => "SEED: perm_seed="
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "SEED: perm_seed=", 16);
  goto <bb 120>;

<L204>:
  goto <bb 508> (<L163>);

  <bb 120>:
  _96 = std::basic_ostream<char>::operator<< (&cout, perm_seed_94);
  goto <bb 122>;

<L205>:
  goto <bb 508> (<L163>);

  <bb 122>:
  # DEBUG this => _96
  # DEBUG __pf => endl
  # DEBUG __os => _96
  _811 = _96->_vptr.basic_ostream;
  _812 = MEM[(long int *)_811 + -24B];
  _813 = (sizetype) _812;
  _814 = _96 + _813;
  # DEBUG this => _814
  # DEBUG __c => 10
  _464 = MEM[(const struct basic_ios *)_814]._M_ctype;
  # DEBUG __f => _464
  if (_464 == 0B)
    goto <bb 123>;
  else
    goto <bb 125>;

  <bb 123>:
  std::__throw_bad_cast ();

<L206>:
  goto <bb 508> (<L163>);

  <bb 125>:
  # DEBUG this => _464
  # DEBUG __c => 10
  _819 = MEM[(const struct ctype *)_464]._M_widen_ok;
  if (_819 != 0)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  _822 = MEM[(const struct ctype *)_464]._M_widen[10];
  goto <bb 131>;

  <bb 127>:
  # DEBUG this => _464
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_464);
  goto <bb 129>;

<L207>:
  goto <bb 508> (<L163>);

  <bb 129>:
  _827 = MEM[(const struct ctype *)_464].D.16885._vptr.facet;
  _828 = MEM[(int (*__vtbl_ptr_type) () *)_827 + 48B];
  _830 = OBJ_TYPE_REF(_828;(const struct ctype)_464->6) (_464, 10);
  goto <bb 131>;

<L208>:
  goto <bb 508> (<L163>);

  <bb 131>:
  # _825 = PHI <_822(126), _830(129)>
  _816 = (int) _825;
  _817 = std::basic_ostream<char>::put (_96, _816);
  goto <bb 133>;

<L209>:
  goto <bb 508> (<L163>);

  <bb 133>:
  # DEBUG __os => _817
  std::basic_ostream<char>::flush (_817);
  goto <bb 146>;

<L210>:
  goto <bb 508> (<L163>);

  <bb 135>:
  # DEBUG D#109 => &D.36971
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG D#322 => &D.36971
  # DEBUG this => &D.36972
  # DEBUG __s => "perm_seed"
  # DEBUG __a => D#322
  # DEBUG D#321 => D#322
  # DEBUG this => &D.36972
  # DEBUG D#319 => &D.36972._M_dataplus
  # DEBUG D#151 => D#321
  # DEBUG this => D#319
  # DEBUG __dat => &D.36972.D.11539._M_local_buf
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#319
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)&D.36972]._M_p = &D.36972.D.11539._M_local_buf;
  # DEBUG __s => "perm_seed"
  # DEBUG this => &D.36972
  # DEBUG __beg => "perm_seed"
  # DEBUG __end => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG this => &D.36972
  # DEBUG __beg => "perm_seed"
  # DEBUG __end => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG this => &D.36972
  # DEBUG __beg => "perm_seed"
  # DEBUG __end => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG __ptr => "perm_seed"
  # DEBUG __first => "perm_seed"
  # DEBUG __last => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => "perm_seed"
  # DEBUG __last => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG __dnew => 9
  # DEBUG D#2 => &D.36972
  # DEBUG this => D#2
  # DEBUG __p => &D.36972.D.11539._M_local_buf
  # DEBUG __k1 => "perm_seed"
  # DEBUG __k2 => &MEM[(void *)"perm_seed" + 9B]
  # DEBUG __d => &D.36972.D.11539._M_local_buf
  # DEBUG __s => "perm_seed"
  # DEBUG __n => 9
  # DEBUG __s1 => &D.36972.D.11539._M_local_buf
  # DEBUG __s2 => "perm_seed"
  # DEBUG __n => 9
  __builtin_memcpy (&D.36972.D.11539._M_local_buf, "perm_seed", 9);
  # DEBUG this => &D.36972
  # DEBUG __n => 9
  # DEBUG D#4 => &D.36972
  # DEBUG __length => 9
  # DEBUG this => D#4
  MEM[(size_type *)&D.36972 + 8B] = 9;
  # DEBUG D#2 => &D.36972
  # DEBUG this => D#2
  # DEBUG __c1 => &MEM[(void *)&D.36972 + 25B]
  # DEBUG __c2 => D#32
  MEM[(char_type &)&D.36972 + 25] = 0;
  # DEBUG D#772 => {CLOBBER}
  # DEBUG __dnew => D#772
  perm_seed_99 = Configuration::GetInt (config_85(D), &D.36972);

  <bb 136>:
  # DEBUG perm_seed => perm_seed_99
  # DEBUG this => &D.36972
  # DEBUG this => &D.36972
  # DEBUG this => &D.36972
  _101 = MEM[(char * *)&D.36972];
  # DEBUG D#2 => &D.36972
  # DEBUG this => D#2
  # DEBUG this => &D.36972
  if (&D.36972.D.11539._M_local_buf != _101)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  # DEBUG D#219 => D.36972.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36972
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36972
  # DEBUG this => D#2
  # DEBUG this => &D.36972
  # DEBUG D#216 => &D.36972._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _101
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _101
  # DEBUG this => D#210
  # DEBUG D.50717 => D#211
  operator delete (_101);

  <bb 138>:
  # DEBUG D#220 => &D.36972._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36972 ={v} {CLOBBER};
  # DEBUG this => &D.36971
  # DEBUG this => &D.36971
  goto <bb 146>;

  <bb 139>:
  # DEBUG __out => &cout
  # DEBUG __s => "Error: Missing parameter for random permutation traffic pattern: "
  # DEBUG __s => "Error: Missing parameter for random permutation traffic pattern: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Missing parameter for random permutation traffic pattern: ", 65);
  goto <bb 141>;

<L211>:
  goto <bb 508> (<L163>);

  <bb 141>:
  # DEBUG __os => &cout
  # DEBUG __str => pattern_39(D)
  _108 = MEM[(long unsigned int *)pattern_39(D) + 8B];
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  _157 = (long int) _108;
  # DEBUG this => pattern_39(D)
  _156 = MEM[(char * *)pattern_39(D)];
  # DEBUG D#2 => pattern_39(D)
  # DEBUG this => D#2
  _155 = std::__ostream_insert<char, std::char_traits<char> > (&cout, _156, _157);
  goto <bb 143>;

<L212>:
  goto <bb 508> (<L163>);

  <bb 143>:
  # DEBUG this => _155
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_155);
  goto <bb 61>;

<L213>:
  goto <bb 508> (<L163>);

  <bb 145>:
  # DEBUG D#97 => &params
  # DEBUG __n => 0
  # DEBUG this => D#97
  # DEBUG this => NULL
  _109 = MEM[(char * *)_183];
  # DEBUG this => D#2
  # DEBUG __nptr => _109
  _245 = strtol (_109, 0B, 10);
  perm_seed_241 = (int) _245;
  # DEBUG perm_seed => NULL

  <bb 146>:
  # perm_seed_2 = PHI <perm_seed_94(133), perm_seed_241(145), perm_seed_99(138)>
  # DEBUG perm_seed => perm_seed_2
  result_113 = operator new (40);
  goto <bb 148>;

<L214>:
  goto <bb 508> (<L163>);

  <bb 148>:
  RandomPermutationTrafficPattern::RandomPermutationTrafficPattern (result_113, nodes_65(D), perm_seed_2);
  goto <bb 375>;

  <bb 149>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "uniform"
  _111 = std::__cxx11::basic_string<char>::compare (&pattern_name, "uniform");
  goto <bb 151>;

<L215>:
  goto <bb 508> (<L163>);

  <bb 151>:
  if (_111 == 0)
    goto <bb 152>;
  else
    goto <bb 157>;

  <bb 152>:
  result_117 = operator new (16);
  goto <bb 154>;

<L216>:
  goto <bb 508> (<L163>);

  <bb 154>:
  # DEBUG this => result_117
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#90 => &MEM[(struct UniformRandomTrafficPattern *)result_117].D.35031
  # DEBUG this => D#90
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#84 => &D#90->D.35001
  # DEBUG this => D#84
  # DEBUG nodes => nodes_65(D)
  result_117->_vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  result_117->_nodes = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 155>;
  else
    goto <bb 156>;

  <bb 155>:
  # DEBUG D#62 => D#84
  # DEBUG D#63 => nodes_65(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 156>:
  MEM[(struct UniformRandomTrafficPattern *)result_117].D.35031.D.35001._vptr.TrafficPattern = &MEM[(void *)&_ZTV27UniformRandomTrafficPattern + 16B];
  # DEBUG result => result_117
  goto <bb 375>;

  <bb 157>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "background"
  _118 = std::__cxx11::basic_string<char>::compare (&pattern_name, "background");
  goto <bb 159>;

<L217>:
  goto <bb 508> (<L163>);

  <bb 159>:
  if (_118 == 0)
    goto <bb 160>;
  else
    goto <bb 178>;

  <bb 160>:
  _280 = MEM[(struct basic_string * *)&params];
  # DEBUG D#97 => &params
  # DEBUG __n => 0
  # DEBUG this => D#97
  excludes = tokenize_int (_280); [return slot optimization]
  goto <bb 162>;

<L218>:
  goto <bb 508> (<L163>);

  <bb 162>:
  # DEBUG this => &D.37014
  # DEBUG __x => &excludes
  # DEBUG D#368 => &excludes.D.34940
  # DEBUG this => D#368
  # DEBUG __a => NULL
  _848 = MEM[(int * *)&excludes];
  # DEBUG D#99 => &excludes
  _849 = MEM[(int * *)&excludes + 8B];
  # DEBUG D#99 => &excludes
  # DEBUG this => D#99
  # DEBUG this => D#99
  _850 = (long int) _849;
  _851 = (long int) _848;
  _852 = _850 - _851;
  _853 = _852 /[ex] 4;
  _854 = (size_type) _853;
  # DEBUG D#370 => &D.37014.D.34940
  # DEBUG this => D#370
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#367 => &D#370->_M_impl
  # DEBUG this => D#367
  # DEBUG __a => NULL
  # DEBUG this => D#367
  # DEBUG __a => NULL
  # DEBUG this => D#367
  # DEBUG D.46559 => NULL
  MEM[(struct _Vector_impl *)&D.37014]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.37014]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.37014]._M_end_of_storage = 0B;
  # DEBUG this => D#370
  # DEBUG __n => NULL
  # DEBUG D#346 => D#370
  # DEBUG __n => _854
  # DEBUG this => D#346
  # DEBUG D#345 => D#346
  if (_854 != 0)
    goto <bb 164>;
  else
    goto <bb 163>;

  <bb 163>:
  pretmp_1208 = (long unsigned int) _852;
  goto <bb 169>;

  <bb 164>:
  # DEBUG D#344 => &D#345->_M_impl
  # DEBUG D#343 => D#344
  # DEBUG __n => _854
  # DEBUG __a => D#343
  # DEBUG D#342 => D#343
  # DEBUG D#340 => D#342
  # DEBUG D#341 => 0B
  # DEBUG __n => _854
  # DEBUG this => D#340
  # DEBUG D.54231 => D#341
  # DEBUG D#339 => D#340
  # DEBUG D#338 => D#339
  # DEBUG this => D#338
  if (_854 > 4611686018427387903)
    goto <bb 165>;
  else
    goto <bb 166>;

  <bb 165>:
  std::__throw_bad_alloc ();

  <bb 166>:
  _121 = (long unsigned int) _852;
  _867 = operator new (_121);
  goto <bb 168>;

<L220>:
  goto <bb 437> (<L135>);

  <bb 168>:
  pretmp_1213 = MEM[(int * *)&excludes + 8B];
  pretmp_10 = MEM[(struct _Vector_base *)&excludes]._M_impl._M_start;
  pretmp_1207 = (long int) pretmp_1213;
  pretmp_1209 = (long int) pretmp_10;
  pretmp_740 = pretmp_1207 - pretmp_1209;
  pretmp_978 = pretmp_740 /[ex] 4;
  pretmp_840 = (long unsigned int) pretmp_740;

  <bb 169>:
  # iftmp.79_868 = PHI <0B(163), _867(168)>
  # prephitmp_1206 = PHI <pretmp_1208(163), _121(168)>
  # prephitmp_7 = PHI <_848(163), pretmp_10(168)>
  # prephitmp_843 = PHI <_853(163), pretmp_978(168)>
  # prephitmp_837 = PHI <pretmp_1208(163), pretmp_840(168)>
  MEM[(struct _Vector_base *)&D.37014]._M_impl._M_start = iftmp.79_868;
  MEM[(struct _Vector_base *)&D.37014]._M_impl._M_finish = iftmp.79_868;
  _857 = iftmp.79_868 + prephitmp_1206;
  MEM[(struct _Vector_base *)&D.37014]._M_impl._M_end_of_storage = _857;
  # DEBUG D#369 => &D.37014.D.34940
  # DEBUG this => D#369
  # DEBUG D#784 => MEM[(int * *)&excludes + 8B]
  # DEBUG D#114 => &excludes
  # DEBUG this => D#114
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#783 => MEM[(int * *)&excludes]
  # DEBUG D#115 => &excludes
  # DEBUG this => D#115
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#783
  # DEBUG __last => D#784
  # DEBUG __result => NULL
  # DEBUG D.54195 => D#323
  # DEBUG __first => D#783
  # DEBUG __last => D#784
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#783
  # DEBUG __last => D#784
  # DEBUG __result => NULL
  # DEBUG __first => D#783
  # DEBUG __last => D#784
  # DEBUG __result => NULL
  # DEBUG __it => D#784
  # DEBUG __it$_M_current => D#784
  # DEBUG __it => D#783
  # DEBUG __it$_M_current => D#783
  # DEBUG __first => D#783
  # DEBUG __last => D#784
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#784
  # DEBUG __it => D#784
  # DEBUG this => NULL
  # DEBUG __it => D#783
  # DEBUG __it => D#783
  # DEBUG this => NULL
  # DEBUG __first => D#783
  # DEBUG __last => D#784
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#783
  # DEBUG __last => D#784
  # DEBUG __result => NULL
  # DEBUG D#782 => (long int) D#784
  # DEBUG D#781 => (long int) D#783
  # DEBUG D#780 => D#782 - D#781
  # DEBUG _Num => D#780 /[ex] 4
  if (prephitmp_843 != 0)
    goto <bb 170>;
  else
    goto <bb 171>;

  <bb 170>:
  __builtin_memmove (iftmp.79_868, prephitmp_7, prephitmp_837);

  <bb 171>:
  _866 = iftmp.79_868 + prephitmp_837;
  D.37014.D.34940._M_impl._M_finish = _866;
  result_123 = operator new (64);

  <bb 172>:
  UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern (result_123, nodes_65(D), &D.37014);

  <bb 173>:
  # DEBUG result => result_123
  # DEBUG this => &D.37014
  # DEBUG D#167 => &D.37014.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D.37014.D.34940._M_impl._M_finish
  # DEBUG D#169 => D.37014.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D.37014.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _127 = MEM[(struct _Vector_base *)&D.37014]._M_impl._M_start;
  # DEBUG D#164 => (long int) _127
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _127
  # DEBUG __n => D#161
  if (_127 != 0B)
    goto <bb 174>;
  else
    goto <bb 175>;

  <bb 174>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _127
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _127
  # DEBUG this => D#153
  # DEBUG D.50781 => D#154
  operator delete (_127);

  <bb 175>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  D.37014 ={v} {CLOBBER};
  # DEBUG this => &excludes
  # DEBUG D#167 => &excludes.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => excludes.D.34940._M_impl._M_finish
  # DEBUG D#169 => excludes.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &excludes.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _84 = MEM[(struct _Vector_base *)&excludes]._M_impl._M_start;
  # DEBUG D#164 => (long int) _84
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _84
  # DEBUG __n => D#161
  if (_84 != 0B)
    goto <bb 176>;
  else
    goto <bb 177>;

  <bb 176>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _84
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _84
  # DEBUG this => D#153
  # DEBUG D.50766 => D#154
  operator delete (_84);

  <bb 177>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  excludes ={v} {CLOBBER};
  goto <bb 375>;

  <bb 178>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "diagonal"
  _125 = std::__cxx11::basic_string<char>::compare (&pattern_name, "diagonal");
  goto <bb 180>;

<L222>:
  goto <bb 508> (<L163>);

  <bb 180>:
  if (_125 == 0)
    goto <bb 181>;
  else
    goto <bb 186>;

  <bb 181>:
  result_135 = operator new (16);
  goto <bb 183>;

<L223>:
  goto <bb 508> (<L163>);

  <bb 183>:
  # DEBUG this => result_135
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#91 => &MEM[(struct DiagonalTrafficPattern *)result_135].D.35944
  # DEBUG this => D#91
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#84 => &D#91->D.35001
  # DEBUG this => D#84
  # DEBUG nodes => nodes_65(D)
  result_135->_vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  result_135->_nodes = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 184>;
  else
    goto <bb 185>;

  <bb 184>:
  # DEBUG D#62 => D#84
  # DEBUG D#63 => nodes_65(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 185>:
  MEM[(struct DiagonalTrafficPattern *)result_135].D.35944.D.35001._vptr.TrafficPattern = &MEM[(void *)&_ZTV22DiagonalTrafficPattern + 16B];
  # DEBUG result => result_135
  goto <bb 375>;

  <bb 186>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "asymmetric"
  _136 = std::__cxx11::basic_string<char>::compare (&pattern_name, "asymmetric");
  goto <bb 188>;

<L224>:
  goto <bb 508> (<L163>);

  <bb 188>:
  if (_136 == 0)
    goto <bb 189>;
  else
    goto <bb 194>;

  <bb 189>:
  result_139 = operator new (16);
  goto <bb 191>;

<L225>:
  goto <bb 508> (<L163>);

  <bb 191>:
  # DEBUG this => result_139
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#92 => &MEM[(struct AsymmetricTrafficPattern *)result_139].D.35974
  # DEBUG this => D#92
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#84 => &D#92->D.35001
  # DEBUG this => D#84
  # DEBUG nodes => nodes_65(D)
  result_139->_vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  result_139->_nodes = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 192>;
  else
    goto <bb 193>;

  <bb 192>:
  # DEBUG D#62 => D#84
  # DEBUG D#63 => nodes_65(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 193>:
  MEM[(struct AsymmetricTrafficPattern *)result_139].D.35974.D.35001._vptr.TrafficPattern = &MEM[(void *)&_ZTV24AsymmetricTrafficPattern + 16B];
  # DEBUG result => result_139
  goto <bb 375>;

  <bb 194>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "taper64"
  _140 = std::__cxx11::basic_string<char>::compare (&pattern_name, "taper64");
  goto <bb 196>;

<L226>:
  goto <bb 508> (<L163>);

  <bb 196>:
  if (_140 == 0)
    goto <bb 197>;
  else
    goto <bb 200>;

  <bb 197>:
  result_144 = operator new (16);
  goto <bb 199>;

<L227>:
  goto <bb 508> (<L163>);

  <bb 199>:
  Taper64TrafficPattern::Taper64TrafficPattern (result_144, nodes_65(D));
  goto <bb 375>;

  <bb 200>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "bad_dragon"
  _142 = std::__cxx11::basic_string<char>::compare (&pattern_name, "bad_dragon");
  goto <bb 202>;

<L228>:
  goto <bb 508> (<L163>);

  <bb 202>:
  if (_142 == 0)
    goto <bb 203>;
  else
    goto <bb 231>;

  <bb 203>:
  # DEBUG missing_params => 0
  # DEBUG k => -1
  _282 = MEM[(struct basic_string * *)&params];
  # DEBUG D#98 => &params
  _283 = MEM[(struct basic_string * *)&params + 8B];
  # DEBUG D#98 => &params
  # DEBUG this => D#98
  # DEBUG this => D#98
  _298 = (long int) _283;
  _299 = (long int) _282;
  _300 = _298 - _299;
  _301 = _300 /[ex] 32;
  if (_301 == 0)
    goto <bb 204>;
  else
    goto <bb 211>;

  <bb 204>:
  if (config_85(D) != 0B)
    goto <bb 205>;
  else
    goto <bb 222>;

  <bb 205>:
  # DEBUG D#109 => &D.37049
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG D#322 => &D.37049
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90 (&D.37050, "k");
  goto <bb 207>;

<L229>:
  goto <bb 508> (<L163>);

  <bb 207>:
  k_149 = Configuration::GetInt (config_85(D), &D.37050);

  <bb 208>:
  # DEBUG k => k_149
  # DEBUG this => &D.37050
  # DEBUG this => &D.37050
  # DEBUG this => &D.37050
  _152 = MEM[(char * *)&D.37050];
  # DEBUG D#2 => &D.37050
  # DEBUG this => D#2
  # DEBUG this => &D.37050
  if (&D.37050.D.11539._M_local_buf != _152)
    goto <bb 209>;
  else
    goto <bb 210>;

  <bb 209>:
  # DEBUG D#219 => D.37050.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37050
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37050
  # DEBUG this => D#2
  # DEBUG this => &D.37050
  # DEBUG D#216 => &D.37050._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _152
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _152
  # DEBUG this => D#210
  # DEBUG D.50826 => D#211
  operator delete (_152);

  <bb 210>:
  # DEBUG D#220 => &D.37050._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37050 ={v} {CLOBBER};
  # DEBUG this => &D.37049
  # DEBUG this => &D.37049
  # DEBUG k => k_149
  # DEBUG missing_params => 0
  # DEBUG n => -1
  _818 = MEM[(struct basic_string * *)&params];
  # DEBUG D#98 => &params
  _877 = MEM[(struct basic_string * *)&params + 8B];
  # DEBUG D#98 => &params
  # DEBUG this => D#98
  # DEBUG this => D#98
  _878 = (long int) _877;
  _879 = (long int) _818;
  _1110 = _878 - _879;
  _1111 = _1110 /[ex] 32;
  _1112 = (size_type) _1111;
  if (_1112 <= 1)
    goto <bb 213>;
  else
    goto <bb 219>;

  <bb 211>:
  # DEBUG D#97 => &params
  # DEBUG __n => 0
  # DEBUG this => D#97
  # DEBUG this => NULL
  _150 = MEM[(char * *)_282];
  # DEBUG this => D#2
  # DEBUG __nptr => _150
  _239 = strtol (_150, 0B, 10);
  k_235 = (int) _239;
  # DEBUG k => NULL
  # DEBUG k => k_235
  # DEBUG missing_params => 0
  # DEBUG n => -1
  _284 = MEM[(struct basic_string * *)&params];
  # DEBUG D#98 => &params
  _285 = MEM[(struct basic_string * *)&params + 8B];
  # DEBUG D#98 => &params
  # DEBUG this => D#98
  # DEBUG this => D#98
  _303 = (long int) _285;
  _304 = (long int) _284;
  _305 = _303 - _304;
  _306 = _305 /[ex] 32;
  _307 = (size_type) _306;
  if (_307 <= 1)
    goto <bb 212>;
  else
    goto <bb 219>;

  <bb 212>:
  if (config_85(D) != 0B)
    goto <bb 213>;
  else
    goto <bb 222>;

  <bb 213>:
  # k_934 = PHI <k_235(212), k_149(210)>
  # DEBUG D#109 => &D.37053
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG D#322 => &D.37053
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90 (&D.37054, "n");
  goto <bb 215>;

<L230>:
  goto <bb 508> (<L163>);

  <bb 215>:
  n_160 = Configuration::GetInt (config_85(D), &D.37054);

  <bb 216>:
  # DEBUG n => n_160
  # DEBUG this => &D.37054
  # DEBUG this => &D.37054
  # DEBUG this => &D.37054
  _163 = MEM[(char * *)&D.37054];
  # DEBUG D#2 => &D.37054
  # DEBUG this => D#2
  # DEBUG this => &D.37054
  if (&D.37054.D.11539._M_local_buf != _163)
    goto <bb 217>;
  else
    goto <bb 218>;

  <bb 217>:
  # DEBUG D#219 => D.37054.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37054
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37054
  # DEBUG this => D#2
  # DEBUG this => &D.37054
  # DEBUG D#216 => &D.37054._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _163
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _163
  # DEBUG this => D#210
  # DEBUG D.50855 => D#211
  operator delete (_163);

  <bb 218>:
  # DEBUG D#220 => &D.37054._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37054 ={v} {CLOBBER};
  # DEBUG this => &D.37053
  # DEBUG this => &D.37053
  goto <bb 220>;

  <bb 219>:
  # k_935 = PHI <k_235(211), k_149(210)>
  # _847 = PHI <_284(211), _818(210)>
  # DEBUG D#97 => &params
  # DEBUG __n => 1
  # DEBUG this => D#97
  # DEBUG this => NULL
  _161 = MEM[(char * *)_847 + 32B];
  # DEBUG this => D#2
  # DEBUG __nptr => _161
  _234 = strtol (_161, 0B, 10);
  n_231 = (int) _234;
  # DEBUG n => NULL

  <bb 220>:
  # n_6 = PHI <n_160(218), n_231(219)>
  # k_449 = PHI <k_934(218), k_935(219)>
  # DEBUG n => n_6
  # DEBUG missing_params => 0
  result_167 = operator new (24);
  goto <bb 228>;

<L231>:
  goto <bb 508> (<L163>);

  <bb 222>:
  # DEBUG n => NULL
  # DEBUG missing_params => NULL
  # DEBUG __out => &cout
  # DEBUG __s => "Error: Missing parameters for dragonfly bad permutation traffic pattern: "
  # DEBUG __s => "Error: Missing parameters for dragonfly bad permutation traffic pattern: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Missing parameters for dragonfly bad permutation traffic pattern: ", 73);
  goto <bb 224>;

<L232>:
  goto <bb 508> (<L163>);

  <bb 224>:
  # DEBUG __os => &cout
  # DEBUG __str => pattern_39(D)
  _170 = MEM[(long unsigned int *)pattern_39(D) + 8B];
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  _308 = (long int) _170;
  # DEBUG this => pattern_39(D)
  _309 = MEM[(char * *)pattern_39(D)];
  # DEBUG D#2 => pattern_39(D)
  # DEBUG this => D#2
  _310 = std::__ostream_insert<char, std::char_traits<char> > (&cout, _309, _308);
  goto <bb 226>;

<L233>:
  goto <bb 508> (<L163>);

  <bb 226>:
  # DEBUG this => _310
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_310);
  goto <bb 61>;

<L234>:
  goto <bb 508> (<L163>);

  <bb 228>:
  # DEBUG this => result_167
  # DEBUG nodes => nodes_65(D)
  # DEBUG k => k_449
  # DEBUG n => n_6
  # DEBUG D#95 => &MEM[(struct BadPermDFlyTrafficPattern *)result_167].D.36040
  # DEBUG this => D#95
  # DEBUG nodes => nodes_65(D)
  # DEBUG k => k_449
  # DEBUG n => n_6
  # DEBUG xr => 1
  # DEBUG D#76 => &D#95->D.34111
  # DEBUG this => D#76
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#66 => &D#76->D.33923
  # DEBUG this => D#66
  # DEBUG nodes => nodes_65(D)
  result_167->_vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  result_167->_nodes = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 229>;
  else
    goto <bb 230>;

  <bb 229>:
  # DEBUG D#62 => D#66
  # DEBUG D#63 => nodes_65(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 230>:
  MEM[(struct DigitPermutationTrafficPattern *)result_167]._k = k_449;
  MEM[(struct DigitPermutationTrafficPattern *)result_167]._n = n_6;
  MEM[(struct DigitPermutationTrafficPattern *)result_167]._xr = 1;
  MEM[(struct BadPermDFlyTrafficPattern *)result_167].D.36040.D.34111.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV25BadPermDFlyTrafficPattern + 16B];
  # DEBUG result => result_167
  goto <bb 375>;

  <bb 231>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "tornado"
  _168 = std::__cxx11::basic_string<char>::compare (&pattern_name, "tornado");
  goto <bb 233>;

<L235>:
  goto <bb 508> (<L163>);

  <bb 233>:
  if (_168 == 0)
    goto <bb 537>;
  else
    goto <bb 234>;

  <bb 234>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "neighbor"
  _172 = std::__cxx11::basic_string<char>::compare (&pattern_name, "neighbor");
  goto <bb 236>;

<L236>:
  goto <bb 508> (<L163>);

  <bb 236>:
  if (_172 == 0)
    goto <bb 537>;
  else
    goto <bb 237>;

  <bb 237>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "badperm_yarc"
  _173 = std::__cxx11::basic_string<char>::compare (&pattern_name, "badperm_yarc");
  goto <bb 239>;

<L237>:
  goto <bb 508> (<L163>);

  <bb 239>:
  if (_173 == 0)
    goto <bb 537>;
  else
    goto <bb 535>;

  <bb 240>:
  if (config_85(D) != 0B)
    goto <bb 241>;
  else
    goto <bb 256>;

  <bb 241>:
  # DEBUG D#109 => &D.37077
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG D#322 => &D.37077
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90 (&D.37078, "k");
  goto <bb 243>;

<L238>:
  goto <bb 508> (<L163>);

  <bb 243>:
  k_177 = Configuration::GetInt (config_85(D), &D.37078);

  <bb 244>:
  # DEBUG k => k_177
  # DEBUG this => &D.37078
  # DEBUG this => &D.37078
  # DEBUG this => &D.37078
  _180 = MEM[(char * *)&D.37078];
  # DEBUG D#2 => &D.37078
  # DEBUG this => D#2
  # DEBUG this => &D.37078
  if (&D.37078.D.11539._M_local_buf != _180)
    goto <bb 245>;
  else
    goto <bb 246>;

  <bb 245>:
  # DEBUG D#219 => D.37078.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37078
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37078
  # DEBUG this => D#2
  # DEBUG this => &D.37078
  # DEBUG D#216 => &D.37078._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _180
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _180
  # DEBUG this => D#210
  # DEBUG D.50916 => D#211
  operator delete (_180);

  <bb 246>:
  # DEBUG D#220 => &D.37078._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37078 ={v} {CLOBBER};
  # DEBUG this => &D.37077
  # DEBUG this => &D.37077
  # DEBUG k => k_177
  # DEBUG missing_params => 0
  # DEBUG n => -1
  _1219 = MEM[(struct basic_string * *)&params];
  # DEBUG D#98 => &params
  _1220 = MEM[(struct basic_string * *)&params + 8B];
  # DEBUG D#98 => &params
  # DEBUG this => D#98
  # DEBUG this => D#98
  _1221 = (long int) _1220;
  _1162 = (long int) _1219;
  _1163 = _1221 - _1162;
  _955 = _1163 /[ex] 32;
  _1126 = (size_type) _955;
  if (_1126 <= 1)
    goto <bb 249>;
  else
    goto <bb 255>;

  <bb 247>:
  # DEBUG D#97 => &params
  # DEBUG __n => 0
  # DEBUG this => D#97
  # DEBUG this => NULL
  _178 = MEM[(char * *)_286];
  # DEBUG this => D#2
  # DEBUG __nptr => _178
  _229 = strtol (_178, 0B, 10);
  k_228 = (int) _229;
  # DEBUG k => NULL
  # DEBUG k => k_228
  # DEBUG missing_params => 0
  # DEBUG n => -1
  _288 = MEM[(struct basic_string * *)&params];
  # DEBUG D#98 => &params
  _289 = MEM[(struct basic_string * *)&params + 8B];
  # DEBUG D#98 => &params
  # DEBUG this => D#98
  # DEBUG this => D#98
  _316 = (long int) _289;
  _317 = (long int) _288;
  _318 = _316 - _317;
  _319 = _318 /[ex] 32;
  _320 = (size_type) _319;
  if (_320 <= 1)
    goto <bb 248>;
  else
    goto <bb 255>;

  <bb 248>:
  if (config_85(D) != 0B)
    goto <bb 249>;
  else
    goto <bb 541>;

  <bb 249>:
  # k_930 = PHI <k_228(248), k_177(246)>
  # DEBUG D#109 => &D.37081
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG D#322 => &D.37081
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90 (&D.37082, "n");
  goto <bb 251>;

<L239>:
  goto <bb 508> (<L163>);

  <bb 251>:
  n_186 = Configuration::GetInt (config_85(D), &D.37082);

  <bb 252>:
  # DEBUG n => n_186
  # DEBUG this => &D.37082
  # DEBUG this => &D.37082
  # DEBUG this => &D.37082
  _189 = MEM[(char * *)&D.37082];
  # DEBUG D#2 => &D.37082
  # DEBUG this => D#2
  # DEBUG this => &D.37082
  if (&D.37082.D.11539._M_local_buf != _189)
    goto <bb 253>;
  else
    goto <bb 254>;

  <bb 253>:
  # DEBUG D#219 => D.37082.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37082
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37082
  # DEBUG this => D#2
  # DEBUG this => &D.37082
  # DEBUG D#216 => &D.37082._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _189
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _189
  # DEBUG this => D#210
  # DEBUG D.50945 => D#211
  operator delete (_189);

  <bb 254>:
  # DEBUG D#220 => &D.37082._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37082 ={v} {CLOBBER};
  # DEBUG this => &D.37081
  # DEBUG this => &D.37081
  # DEBUG n => n_186
  # DEBUG missing_params => 0
  # DEBUG xr => -1
  _1215 = MEM[(struct basic_string * *)&params];
  # DEBUG D#98 => &params
  _1216 = MEM[(struct basic_string * *)&params + 8B];
  # DEBUG D#98 => &params
  # DEBUG this => D#98
  # DEBUG this => D#98
  _1218 = (long int) _1216;
  _1211 = (long int) _1215;
  _1217 = _1218 - _1211;
  _1210 = _1217 /[ex] 32;
  _1212 = (size_type) _1210;
  if (_1212 <= 2)
    goto <bb 259>;
  else
    goto <bb 265>;

  <bb 255>:
  # k_1118 = PHI <k_228(247), k_177(246)>
  # _845 = PHI <_288(247), _1219(246)>
  # DEBUG D#97 => &params
  # DEBUG __n => 1
  # DEBUG this => D#97
  # DEBUG this => NULL
  _187 = MEM[(char * *)_845 + 32B];
  # DEBUG this => D#2
  # DEBUG __nptr => _187
  _226 = strtol (_187, 0B, 10);
  n_219 = (int) _226;
  # DEBUG n => NULL
  pretmp_586 = MEM[(struct basic_string * *)&params];
  pretmp_573 = MEM[(struct basic_string * *)&params + 8B];
  pretmp_575 = (long int) pretmp_573;
  pretmp_547 = (long int) pretmp_586;
  pretmp_549 = pretmp_575 - pretmp_547;
  pretmp_536 = pretmp_549 /[ex] 32;

  <bb 256>:
  # missing_params_8 = PHI <1(240), 0(255)>
  # n_11 = PHI <-1(240), n_219(255)>
  # k_237 = PHI <-1(240), k_1118(255)>
  # prephitmp_572 = PHI <_286(240), pretmp_586(255)>
  # prephitmp_537 = PHI <_314(240), pretmp_536(255)>
  # DEBUG n => n_11
  # DEBUG missing_params => missing_params_8
  # DEBUG xr => -1
  # DEBUG D#98 => &params
  # DEBUG D#98 => &params
  # DEBUG this => D#98
  # DEBUG this => D#98
  _325 = (size_type) prephitmp_537;
  if (_325 <= 2)
    goto <bb 257>;
  else
    goto <bb 265>;

  <bb 257>:
  if (config_85(D) != 0B)
    goto <bb 259>;
  else
    goto <bb 258>;

  <bb 258>:
  # DEBUG xr => NULL
  # DEBUG missing_params => NULL
  # DEBUG __out => &cout
  # DEBUG __s => "Error: Missing parameters for digit permutation traffic pattern: "
  # DEBUG __s => "Error: Missing parameters for digit permutation traffic pattern: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Missing parameters for digit permutation traffic pattern: ", 65);
  goto <bb 268>;

  <bb 259>:
  # missing_params_880 = PHI <missing_params_8(257), 0(254)>
  # k_846 = PHI <k_237(257), k_930(254)>
  # n_1204 = PHI <n_11(257), n_186(254)>
  # DEBUG D#109 => &D.37085
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG D#322 => &D.37085
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90 (&D.37086, "xr");
  goto <bb 261>;

<L240>:
  goto <bb 508> (<L163>);

  <bb 261>:
  xr_195 = Configuration::GetInt (config_85(D), &D.37086);

  <bb 262>:
  # DEBUG xr => xr_195
  # DEBUG this => &D.37086
  # DEBUG this => &D.37086
  # DEBUG this => &D.37086
  _198 = MEM[(char * *)&D.37086];
  # DEBUG D#2 => &D.37086
  # DEBUG this => D#2
  # DEBUG this => &D.37086
  if (&D.37086.D.11539._M_local_buf != _198)
    goto <bb 263>;
  else
    goto <bb 264>;

  <bb 263>:
  # DEBUG D#219 => D.37086.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37086
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37086
  # DEBUG this => D#2
  # DEBUG this => &D.37086
  # DEBUG D#216 => &D.37086._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _198
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _198
  # DEBUG this => D#210
  # DEBUG D.50974 => D#211
  operator delete (_198);

  <bb 264>:
  # DEBUG D#220 => &D.37086._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37086 ={v} {CLOBBER};
  # DEBUG this => &D.37085
  # DEBUG this => &D.37085
  goto <bb 266>;

  <bb 265>:
  # missing_params_902 = PHI <missing_params_8(256), 0(254), 1(541)>
  # k_1090 = PHI <k_237(256), k_930(254), k_228(541)>
  # n_1073 = PHI <n_11(256), n_186(254), -1(541)>
  # _838 = PHI <prephitmp_572(256), _1215(254), _288(541)>
  # DEBUG D#97 => &params
  # DEBUG __n => 2
  # DEBUG this => D#97
  # DEBUG this => NULL
  _196 = MEM[(char * *)_838 + 64B];
  # DEBUG this => D#2
  # DEBUG __nptr => _196
  _218 = strtol (_196, 0B, 10);
  xr_201 = (int) _218;
  # DEBUG xr => NULL

  <bb 266>:
  # xr_12 = PHI <xr_195(264), xr_201(265)>
  # missing_params_738 = PHI <missing_params_880(264), missing_params_902(265)>
  # k_1205 = PHI <k_846(264), k_1090(265)>
  # n_807 = PHI <n_1204(264), n_1073(265)>
  # DEBUG xr => xr_12
  # DEBUG missing_params => missing_params_738
  if (missing_params_738 != 0)
    goto <bb 258>;
  else
    goto <bb 272>;

<L241>:
  goto <bb 508> (<L163>);

  <bb 268>:
  # DEBUG __os => &cout
  # DEBUG __str => pattern_39(D)
  _214 = MEM[(long unsigned int *)pattern_39(D) + 8B];
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  _326 = (long int) _214;
  # DEBUG this => pattern_39(D)
  _327 = MEM[(char * *)pattern_39(D)];
  # DEBUG D#2 => pattern_39(D)
  # DEBUG this => D#2
  _328 = std::__ostream_insert<char, std::char_traits<char> > (&cout, _327, _326);
  goto <bb 270>;

<L242>:
  goto <bb 508> (<L163>);

  <bb 270>:
  # DEBUG this => _328
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_328);
  goto <bb 61>;

<L243>:
  goto <bb 508> (<L163>);

  <bb 272>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "tornado"
  _215 = std::__cxx11::basic_string<char>::compare (&pattern_name, "tornado");
  goto <bb 274>;

<L244>:
  goto <bb 508> (<L163>);

  <bb 274>:
  if (_215 == 0)
    goto <bb 275>;
  else
    goto <bb 280>;

  <bb 275>:
  result_211 = operator new (24);
  goto <bb 277>;

<L245>:
  goto <bb 508> (<L163>);

  <bb 277>:
  # DEBUG this => result_211
  # DEBUG nodes => nodes_65(D)
  # DEBUG k => k_1205
  # DEBUG n => n_807
  # DEBUG xr => xr_12
  # DEBUG D#82 => &MEM[(struct TornadoTrafficPattern *)result_211].D.34153
  # DEBUG this => D#82
  # DEBUG nodes => nodes_65(D)
  # DEBUG k => k_1205
  # DEBUG n => n_807
  # DEBUG xr => xr_12
  # DEBUG D#76 => &D#82->D.34111
  # DEBUG this => D#76
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#66 => &D#76->D.33923
  # DEBUG this => D#66
  # DEBUG nodes => nodes_65(D)
  result_211->_vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  result_211->_nodes = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 278>;
  else
    goto <bb 279>;

  <bb 278>:
  # DEBUG D#62 => D#66
  # DEBUG D#63 => nodes_65(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 279>:
  MEM[(struct DigitPermutationTrafficPattern *)result_211]._k = k_1205;
  MEM[(struct DigitPermutationTrafficPattern *)result_211]._n = n_807;
  MEM[(struct DigitPermutationTrafficPattern *)result_211]._xr = xr_12;
  MEM[(struct TornadoTrafficPattern *)result_211].D.34153.D.34111.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV21TornadoTrafficPattern + 16B];
  # DEBUG result => result_211
  goto <bb 375>;

  <bb 280>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "neighbor"
  _212 = std::__cxx11::basic_string<char>::compare (&pattern_name, "neighbor");
  goto <bb 282>;

<L246>:
  goto <bb 508> (<L163>);

  <bb 282>:
  if (_212 == 0)
    goto <bb 283>;
  else
    goto <bb 288>;

  <bb 283>:
  result_203 = operator new (24);
  goto <bb 285>;

<L247>:
  goto <bb 508> (<L163>);

  <bb 285>:
  # DEBUG this => result_203
  # DEBUG nodes => nodes_65(D)
  # DEBUG k => k_1205
  # DEBUG n => n_807
  # DEBUG xr => xr_12
  # DEBUG D#83 => &MEM[(struct NeighborTrafficPattern *)result_203].D.34192
  # DEBUG this => D#83
  # DEBUG nodes => nodes_65(D)
  # DEBUG k => k_1205
  # DEBUG n => n_807
  # DEBUG xr => xr_12
  # DEBUG D#76 => &D#83->D.34111
  # DEBUG this => D#76
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#66 => &D#76->D.33923
  # DEBUG this => D#66
  # DEBUG nodes => nodes_65(D)
  result_203->_vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  result_203->_nodes = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 286>;
  else
    goto <bb 287>;

  <bb 286>:
  # DEBUG D#62 => D#66
  # DEBUG D#63 => nodes_65(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 287>:
  MEM[(struct DigitPermutationTrafficPattern *)result_203]._k = k_1205;
  MEM[(struct DigitPermutationTrafficPattern *)result_203]._n = n_807;
  MEM[(struct DigitPermutationTrafficPattern *)result_203]._xr = xr_12;
  MEM[(struct NeighborTrafficPattern *)result_203].D.34192.D.34111.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV22NeighborTrafficPattern + 16B];
  # DEBUG result => result_203
  goto <bb 375>;

  <bb 288>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "badperm_yarc"
  _204 = std::__cxx11::basic_string<char>::compare (&pattern_name, "badperm_yarc");
  goto <bb 290>;

<L248>:
  goto <bb 508> (<L163>);

  <bb 290>:
  if (_204 == 0)
    goto <bb 291>;
  else
    goto <bb 375>;

  <bb 291>:
  result_207 = operator new (24);
  goto <bb 293>;

<L249>:
  goto <bb 508> (<L163>);

  <bb 293>:
  # DEBUG this => result_207
  # DEBUG nodes => nodes_65(D)
  # DEBUG k => k_1205
  # DEBUG n => n_807
  # DEBUG xr => xr_12
  # DEBUG D#96 => &MEM[(struct BadPermYarcTrafficPattern *)result_207].D.36079
  # DEBUG this => D#96
  # DEBUG nodes => nodes_65(D)
  # DEBUG k => k_1205
  # DEBUG n => n_807
  # DEBUG xr => xr_12
  # DEBUG D#76 => &D#96->D.34111
  # DEBUG this => D#76
  # DEBUG nodes => nodes_65(D)
  # DEBUG D#66 => &D#76->D.33923
  # DEBUG this => D#66
  # DEBUG nodes => nodes_65(D)
  result_207->_vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
  result_207->_nodes = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 294>;
  else
    goto <bb 295>;

  <bb 294>:
  # DEBUG D#62 => D#66
  # DEBUG D#63 => nodes_65(D)
  TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  <bb 295>:
  MEM[(struct DigitPermutationTrafficPattern *)result_207]._k = k_1205;
  MEM[(struct DigitPermutationTrafficPattern *)result_207]._n = n_807;
  MEM[(struct DigitPermutationTrafficPattern *)result_207]._xr = xr_12;
  MEM[(struct BadPermYarcTrafficPattern *)result_207].D.36079.D.34111.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV25BadPermYarcTrafficPattern + 16B];
  # DEBUG result => result_207
  goto <bb 375>;

  <bb 296>:
  if (_208 == 0)
    goto <bb 297>;
  else
    goto <bb 369>;

  <bb 297>:
  # DEBUG this => &params
  _217 = MEM[(struct basic_string * *)&params + 8B];
  # DEBUG D#112 => &params
  # DEBUG this => D#112
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _329 = MEM[(struct basic_string * *)&params];
  # DEBUG D#113 => &params
  # DEBUG this => D#113
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_217 == _329)
    goto <bb 298>;
  else
    goto <bb 315>;

  <bb 298>:
  # DEBUG D#109 => &D.37118
  # DEBUG this => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => D#108
  # DEBUG D#322 => &D.37118
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90 (&D.37119, "-1");
  goto <bb 300>;

<L250>:
  goto <bb 508> (<L163>);

  <bb 300>:
  # DEBUG this => &params
  # DEBUG __x => &D.37119
  _869 = params.D.36900._M_impl._M_finish;
  _870 = params.D.36900._M_impl._M_end_of_storage;
  if (_869 != _870)
    goto <bb 301>;
  else
    goto <bb 310>;

  <bb 301>:
  # DEBUG D#468 => &params.D.36900._M_impl
  # DEBUG D#447 => D#468
  # DEBUG __p => _869
  # DEBUG __arg => &D.37119
  # DEBUG __a => D#447
  # DEBUG D#446 => D#447
  # DEBUG D#445 => D#446
  # DEBUG __p => _869
  # DEBUG __val => &D.37119
  # DEBUG this => D#445
  # DEBUG D#33 => 32
  # DEBUG __p => _869
  # DEBUG D.49285 => D#33
  if (_869 != 0B)
    goto <bb 302>;
  else
    goto <bb 309>;

  <bb 302>:
  # DEBUG this => _869
  # DEBUG __str => &D.37119
  # DEBUG this => &D.37119
  # DEBUG D#442 => &D.37119._M_dataplus
  # DEBUG this => _869
  _871 = &_869->D.11539._M_local_buf;
  # DEBUG D#443 => &_869->_M_dataplus
  # DEBUG D#151 => D#442
  # DEBUG this => D#443
  # DEBUG __dat => _871
  # DEBUG __a => D#151
  # DEBUG D#150 => D#151
  # DEBUG D#148 => D#443
  # DEBUG D#149 => D#150
  # DEBUG this => D#148
  # DEBUG __a => D#149
  # DEBUG D#147 => D#149
  # DEBUG D#146 => D#148
  # DEBUG this => D#146
  # DEBUG D.45854 => D#147
  MEM[(struct _Alloc_hider *)_869]._M_p = _871;
  _872 = MEM[(char * *)&D.37119];
  # DEBUG D#2 => &D.37119
  # DEBUG this => D#2
  _873 = MEM[(long unsigned int *)&D.37119 + 8B];
  # DEBUG D#5 => &D.37119
  # DEBUG this => D#5
  _874 = _872 + _873;
  # DEBUG D#2 => &D.37119
  # DEBUG this => D#2
  # DEBUG this => _869
  # DEBUG __beg => _872
  # DEBUG __end => _874
  # DEBUG this => _869
  # DEBUG __beg => _872
  # DEBUG __end => _874
  # DEBUG this => _869
  # DEBUG __beg => _872
  # DEBUG __end => _874
  # DEBUG __ptr => _872
  _1116 = _874 != 0B;
  _41 = _872 == 0B;
  _53 = _41 & _1116;
  if (_53 != 0)
    goto <bb 538>;
  else
    goto <bb 540>;

  <bb 303>:
  _881 = std::__cxx11::basic_string<char>::_M_create (_869, &__dnew, 0);

  <bb 304>:
  # DEBUG D#6 => _869
  # DEBUG __p => _881
  # DEBUG this => D#6
  MEM[(char * *)_869] = _881;
  __dnew.63_882 = __dnew;
  # DEBUG D#7 => _869
  # DEBUG __capacity => __dnew.63_882
  # DEBUG this => D#7
  MEM[(size_type *)_869 + 16B] = __dnew.63_882;
  # DEBUG D#2 => _869
  # DEBUG this => D#2
  # DEBUG __p => _881
  # DEBUG __k1 => _872
  # DEBUG __k2 => _874
  # DEBUG __d => _881
  # DEBUG __s => _872
  # DEBUG __n => _873
  goto <bb 307>;

  <bb 305>:
  # DEBUG D#2 => _869
  # DEBUG this => D#2
  # DEBUG __p => _871
  # DEBUG __k1 => _872
  # DEBUG __k2 => _874
  # DEBUG __d => _871
  # DEBUG __s => _872
  # DEBUG __n => _873
  if (_873 == 1)
    goto <bb 306>;
  else
    goto <bb 307>;

  <bb 306>:
  _884 = MEM[(const char_type &)_872];
  # DEBUG D#32 => _872
  # DEBUG __c1 => _871
  # DEBUG __c2 => D#32
  MEM[(char_type &)_871] = _884;
  goto <bb 308>;

  <bb 307>:
  # _1165 = PHI <_871(305), _881(304)>
  # DEBUG D#2 => _869
  # DEBUG this => D#2
  # DEBUG __p => _1165
  # DEBUG __k1 => _872
  # DEBUG __k2 => _874
  # DEBUG __d => _1165
  # DEBUG __s => _872
  # DEBUG __n => _873
  # DEBUG __s1 => _1165
  # DEBUG __s2 => _872
  # DEBUG __n => _873
  __builtin_memcpy (_1165, _872, _873);
  pretmp_1222 = __dnew;
  pretmp_780 = MEM[(char * *)_869];

  <bb 308>:
  # prephitmp_761 = PHI <_873(306), pretmp_1222(307)>
  # prephitmp_1113 = PHI <_871(306), pretmp_780(307)>
  # DEBUG D#779 => __dnew
  # DEBUG this => _869
  # DEBUG __n => D#779
  # DEBUG D#4 => _869
  # DEBUG __length => D#779
  # DEBUG this => D#4
  MEM[(size_type *)_869 + 8B] = prephitmp_761;
  # DEBUG D#2 => _869
  # DEBUG this => D#2
  _887 = prephitmp_1113 + prephitmp_761;
  # DEBUG __c1 => _887
  # DEBUG __c2 => D#32
  MEM[(char_type &)_887] = 0;
  __dnew ={v} {CLOBBER};
  pretmp_1224 = params.D.36900._M_impl._M_finish;

  <bb 309>:
  # prephitmp_1223 = PHI <_869(301), pretmp_1224(308)>
  _876 = prephitmp_1223 + 32;
  params.D.36900._M_impl._M_finish = _876;
  goto <bb 312>;

  <bb 310>:
  # DEBUG this => &params
  # DEBUG D#116 => &params.D.36900._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#116
  MEM[(struct __normal_iterator *)&D.54256] = _869;
  std::vector<std::__cxx11::basic_string<char> >::_M_insert_aux (&params, D.54256, &D.37119);
  goto <bb 312>;

<L252>:
  goto <bb 476> (<L154>);

  <bb 312>:
  # DEBUG this => &D.37119
  # DEBUG this => &D.37119
  # DEBUG this => &D.37119
  _223 = MEM[(char * *)&D.37119];
  # DEBUG D#2 => &D.37119
  # DEBUG this => D#2
  # DEBUG this => &D.37119
  if (&D.37119.D.11539._M_local_buf != _223)
    goto <bb 313>;
  else
    goto <bb 314>;

  <bb 313>:
  # DEBUG D#219 => D.37119.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37119
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37119
  # DEBUG this => D#2
  # DEBUG this => &D.37119
  # DEBUG D#216 => &D.37119._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _223
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _223
  # DEBUG this => D#210
  # DEBUG D.51066 => D#211
  operator delete (_223);

  <bb 314>:
  # DEBUG D#220 => &D.37119._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37119 ={v} {CLOBBER};
  # DEBUG this => &D.37118
  # DEBUG this => &D.37118
  pretmp_538 = MEM[(struct basic_string * *)&params];

  <bb 315>:
  # prephitmp_466 = PHI <_329(297), pretmp_538(314)>
  # DEBUG D#97 => &params
  # DEBUG __n => 0
  # DEBUG this => D#97
  hotspots = tokenize_int (prephitmp_466); [return slot optimization]
  goto <bb 317>;

<L253>:
  goto <bb 508> (<L163>);

  <bb 317>:
  # DEBUG i => 0
  _1230 = MEM[(int * *)&hotspots];
  # DEBUG D#99 => &hotspots
  _1229 = MEM[(int * *)&hotspots + 8B];
  # DEBUG D#99 => &hotspots
  # DEBUG this => D#99
  # DEBUG this => D#99
  _1232 = (long int) _1229;
  _1157 = (long int) _1230;
  _1161 = _1232 - _1157;
  _958 = _1161 /[ex] 4;
  if (_958 != 0)
    goto <bb 318>;
  else
    goto <bb 325>;

  <bb 318>:

  <bb 319>:
  # i_961 = PHI <0(318), i_233(324)>
  # _97 = PHI <_1230(318), prephitmp_1196(324)>
  # prephitmp_942 = PHI <_1230(318), prephitmp_1196(324)>
  # prephitmp_970 = PHI <_1229(318), prephitmp_756(324)>
  # DEBUG i => i_961
  # DEBUG D#99 => &hotspots
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG D#100 => &hotspots
  # DEBUG __n => i_961
  # DEBUG this => D#100
  _335 = i_961 * 4;
  _336 = _97 + _335;
  _230 = *_336;
  if (_230 < 0)
    goto <bb 320>;
  else
    goto <bb 322>;

  <bb 320>:
  # DEBUG D#100 => &hotspots
  # DEBUG __n => i_961
  # DEBUG this => D#100
  # DEBUG max => nodes_65(D) + -1
  _337 = ran_next ();

  <bb 321>:
  _338 = (long int) nodes_65(D);
  _339 = _337 % _338;
  _340 = (int) _339;
  *_336 = _340;
  pretmp_1195 = MEM[(struct _Vector_base *)&hotspots]._M_impl._M_start;
  pretmp_1198 = MEM[(int * *)&hotspots + 8B];

  <bb 322>:
  # prephitmp_1196 = PHI <prephitmp_942(319), pretmp_1195(321)>
  # prephitmp_756 = PHI <prephitmp_970(319), pretmp_1198(321)>
  i_233 = i_961 + 1;
  # DEBUG i => i_233
  # DEBUG i => i_233
  # DEBUG D#99 => &hotspots
  # DEBUG D#99 => &hotspots
  # DEBUG this => D#99
  # DEBUG this => D#99
  _330 = (long int) prephitmp_756;
  _331 = (long int) prephitmp_1196;
  _332 = _330 - _331;
  _333 = _332 /[ex] 4;
  _334 = (size_type) _333;
  if (i_233 < _334)
    goto <bb 324>;
  else
    goto <bb 323>;

  <bb 323>:
  # _1145 = PHI <_334(322)>
  goto <bb 325>;

  <bb 324>:
  goto <bb 319>;

  <bb 325>:
  # _735 = PHI <_1145(323), 0(317)>
  # DEBUG this => &rates
  # DEBUG D#209 => &rates.D.34940
  # DEBUG this => D#209
  # DEBUG D#208 => &D#209->_M_impl
  # DEBUG this => D#208
  # DEBUG this => D#208
  # DEBUG this => D#208
  MEM[(struct _Vector_impl *)&rates]._M_start = 0B;
  MEM[(struct _Vector_impl *)&rates]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&rates]._M_end_of_storage = 0B;
  _292 = MEM[(struct basic_string * *)&params];
  # DEBUG D#98 => &params
  _293 = MEM[(struct basic_string * *)&params + 8B];
  # DEBUG D#98 => &params
  # DEBUG this => D#98
  # DEBUG this => D#98
  _341 = (long int) _293;
  _342 = (long int) _292;
  _343 = _341 - _342;
  _344 = _343 /[ex] 32;
  _345 = (size_type) _344;
  if (_345 > 1)
    goto <bb 326>;
  else
    goto <bb 354>;

  <bb 326>:
  # DEBUG D#97 => &params
  # DEBUG __n => 1
  # DEBUG this => D#97
  _346 = _292 + 32;
  D.37124 = tokenize_int (_346); [return slot optimization]

  <bb 327>:
  # DEBUG this => &rates
  # DEBUG __x => &D.37124
  _888 = MEM[(int * *)&D.37124];
  # DEBUG D#99 => &D.37124
  _889 = MEM[(int * *)&D.37124 + 8B];
  # DEBUG D#99 => &D.37124
  # DEBUG this => D#99
  # DEBUG this => D#99
  _890 = (long int) _889;
  _891 = (long int) _888;
  _892 = _890 - _891;
  _893 = _892 /[ex] 4;
  _894 = (size_type) _893;
  # DEBUG __xlen => NULL
  _895 = MEM[(int * *)&rates];
  # DEBUG D#110 => &rates
  _896 = MEM[(int * *)&rates + 16B];
  # DEBUG D#110 => &rates
  # DEBUG this => D#110
  # DEBUG this => D#110
  _897 = (long int) _896;
  _898 = (long int) _895;
  _899 = _897 - _898;
  _900 = _899 /[ex] 4;
  _901 = (size_type) _900;
  if (_894 > _901)
    goto <bb 328>;
  else
    goto <bb 340>;

  <bb 328>:
  # DEBUG D#114 => &D.37124
  # DEBUG this => D#114
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#115 => &D.37124
  # DEBUG this => D#115
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#351 => &rates
  # DEBUG __n => _894
  # DEBUG this => D#351
  # DEBUG D#350 => D#351
  # DEBUG D#349 => D#351
  # DEBUG D#348 => &D#349->D.34940
  # DEBUG D#346 => D#348
  # DEBUG __n => _894
  # DEBUG this => D#346
  # DEBUG D#345 => D#346
  if (_894 != 0)
    goto <bb 330>;
  else
    goto <bb 329>;

  <bb 329>:
  pretmp_5 = (long unsigned int) _892;
  goto <bb 335>;

  <bb 330>:
  # DEBUG D#344 => &D#345->_M_impl
  # DEBUG D#343 => D#344
  # DEBUG __n => _894
  # DEBUG __a => D#343
  # DEBUG D#342 => D#343
  # DEBUG D#340 => D#342
  # DEBUG D#341 => 0B
  # DEBUG __n => _894
  # DEBUG this => D#340
  # DEBUG D.54419 => D#341
  # DEBUG D#339 => D#340
  # DEBUG D#338 => D#339
  # DEBUG this => D#338
  if (_894 > 4611686018427387903)
    goto <bb 331>;
  else
    goto <bb 332>;

  <bb 331>:
  std::__throw_bad_alloc ();

  <bb 332>:
  _937 = (long unsigned int) _892;
  _938 = operator new (_937);
  goto <bb 334>;

<L257>:
  goto <bb 481> (<L156>);

  <bb 334>:
  pretmp_1149 = rates.D.34940._M_impl._M_start;

  <bb 335>:
  # iftmp.79_939 = PHI <0B(329), _938(334)>
  # prephitmp_17 = PHI <_895(329), pretmp_1149(334)>
  # prephitmp_3 = PHI <pretmp_5(329), _937(334)>
  # DEBUG __result => NULL
  # DEBUG D#347 => &D#350->D.34940
  # DEBUG this => D#347
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => NULL
  # DEBUG D.54380 => D#323
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => NULL
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => NULL
  # DEBUG __it => _889
  # DEBUG __it$_M_current => _889
  # DEBUG __it => _888
  # DEBUG __it$_M_current => _888
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _889
  # DEBUG __it => _889
  # DEBUG this => NULL
  # DEBUG __it => _888
  # DEBUG __it => _888
  # DEBUG this => NULL
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => NULL
  # DEBUG _Num => _893
  if (_893 != 0)
    goto <bb 336>;
  else
    goto <bb 337>;

  <bb 336>:
  __builtin_memmove (iftmp.79_939, _888, prephitmp_3);

  <bb 337>:
  # DEBUG __tmp => NULL
  # DEBUG D#352 => &rates.D.34940
  # DEBUG this => D#352
  # DEBUG D#365 => rates.D.34940._M_impl._M_finish
  # DEBUG D#364 => rates.D.34940._M_impl._M_start
  # DEBUG __first => D#364
  # DEBUG __last => D#365
  # DEBUG D.47993 => NULL
  # DEBUG D#140 => D#364
  # DEBUG D#141 => D#365
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#363 => rates.D.34940._M_impl._M_end_of_storage
  # DEBUG D#362 => (long int) D#363
  # DEBUG D#778 => rates.D.34940._M_impl._M_start
  # DEBUG D#361 => (long int) D#778
  # DEBUG D#360 => D#362 - D#361
  # DEBUG D#359 => D#360 /[ex] 4
  # DEBUG D#358 => (long unsigned int) D#359
  # DEBUG D#357 => &rates.D.34940
  # DEBUG this => D#357
  # DEBUG __p => D#778
  # DEBUG __n => D#358
  if (prephitmp_17 != 0B)
    goto <bb 338>;
  else
    goto <bb 339>;

  <bb 338>:
  # DEBUG D#159 => &D#357->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#358
  # DEBUG __p => D#778
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => D#778
  # DEBUG this => D#153
  # DEBUG D.54370 => D#154
  operator delete (prephitmp_17);

  <bb 339>:
  rates.D.34940._M_impl._M_start = iftmp.79_939;
  _905 = iftmp.79_939 + prephitmp_3;
  rates.D.34940._M_impl._M_end_of_storage = _905;
  pretmp_467 = MEM[(struct _Vector_base *)&D.37124]._M_impl._M_start;
  goto <bb 349>;

  <bb 340>:
  # DEBUG D#99 => &rates
  _906 = MEM[(int * *)&rates + 8B];
  # DEBUG D#99 => &rates
  # DEBUG this => D#99
  # DEBUG this => D#99
  _907 = (long int) _906;
  _908 = _907 - _898;
  _909 = _908 /[ex] 4;
  _910 = (size_type) _909;
  if (_894 <= _910)
    goto <bb 341>;
  else
    goto <bb 344>;

  <bb 341>:
  # DEBUG D#353 => &rates.D.34940
  # DEBUG this => D#353
  # DEBUG this => &rates
  # DEBUG D#118 => &rates.D.34940._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#118
  # DEBUG D.48108 => _906
  # DEBUG this => &rates
  # DEBUG D#119 => &rates.D.34940._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#119
  # DEBUG D#114 => &D.37124
  # DEBUG this => D#114
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#115 => &D.37124
  # DEBUG this => D#115
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => _895
  # DEBUG __it => _889
  # DEBUG __it$_M_current => _889
  # DEBUG __it => _888
  # DEBUG __it$_M_current => _888
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => _895
  # DEBUG __it => _895
  # DEBUG __it => _895
  # DEBUG this => NULL
  # DEBUG __it => _889
  # DEBUG __it => _889
  # DEBUG this => NULL
  # DEBUG __it => _888
  # DEBUG __it => _888
  # DEBUG this => NULL
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => _895
  # DEBUG __simple => 1
  # DEBUG __first => _888
  # DEBUG __last => _889
  # DEBUG __result => _895
  # DEBUG _Num => _893
  if (_893 != 0)
    goto <bb 343>;
  else
    goto <bb 342>;

  <bb 342>:
  pretmp_462 = (long unsigned int) _892;
  pretmp_1046 = _895 + pretmp_462;
  goto <bb 349>;

  <bb 343>:
  _911 = (long unsigned int) _892;
  __builtin_memmove (_895, _888, _911);
  pretmp_468 = MEM[(struct _Vector_base *)&D.37124]._M_impl._M_start;
  pretmp_455 = rates.D.34940._M_impl._M_start;
  pretmp_459 = pretmp_455 + _911;
  goto <bb 349>;

  <bb 344>:
  # DEBUG D#99 => &rates
  # DEBUG D#99 => &rates
  # DEBUG this => D#99
  # DEBUG this => D#99
  _912 = (long unsigned int) _908;
  # DEBUG D#356 => _888 + _912
  # DEBUG __first => _888
  # DEBUG __last => D#356
  # DEBUG __result => _895
  # DEBUG __it => D#356
  # DEBUG __it => D#356
  # DEBUG __it => _888
  # DEBUG __it => _888
  # DEBUG __first => _888
  # DEBUG __last => D#356
  # DEBUG __result => _895
  # DEBUG __it => _895
  # DEBUG __it => _895
  # DEBUG __it => D#356
  # DEBUG __it => D#356
  # DEBUG __it => _888
  # DEBUG __it => _888
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => _909
  if (_909 != 0)
    goto <bb 345>;
  else
    goto <bb 346>;

  <bb 345>:
  __builtin_memmove (_895, _888, _912);
  pretmp_416 = rates.D.34940._M_impl._M_finish;
  pretmp_418 = D.37124.D.34940._M_impl._M_finish;
  pretmp_409 = D.37124.D.34940._M_impl._M_start;
  pretmp_411 = MEM[(int * *)&rates];
  pretmp_796 = (long int) pretmp_416;
  pretmp_933 = (long int) pretmp_411;
  pretmp_45 = pretmp_796 - pretmp_933;
  pretmp_800 = (long unsigned int) pretmp_45;
  pretmp_13 = (long int) pretmp_418;

  <bb 346>:
  # prephitmp_417 = PHI <_906(344), pretmp_416(345)>
  # prephitmp_410 = PHI <_888(344), pretmp_409(345)>
  # prephitmp_412 = PHI <_895(344), pretmp_411(345)>
  # prephitmp_783 = PHI <_912(344), pretmp_800(345)>
  # prephitmp_25 = PHI <_890(344), pretmp_13(345)>
  # DEBUG D#354 => &rates.D.34940
  # DEBUG this => D#354
  # DEBUG D#777 => rates.D.34940._M_impl._M_finish
  # DEBUG D#776 => D.37124.D.34940._M_impl._M_finish
  # DEBUG D#99 => &rates
  # DEBUG D#99 => &rates
  # DEBUG this => D#99
  # DEBUG this => D#99
  _921 = prephitmp_410 + prephitmp_783;
  # DEBUG __first => _921
  # DEBUG __last => D#776
  # DEBUG __result => D#777
  # DEBUG D.54310 => D#244
  # DEBUG __first => _921
  # DEBUG __last => D#776
  # DEBUG __result => D#777
  # DEBUG __assignable => 1
  # DEBUG __first => _921
  # DEBUG __last => D#776
  # DEBUG __result => D#777
  # DEBUG __first => _921
  # DEBUG __last => D#776
  # DEBUG __result => D#777
  # DEBUG __it => D#776
  # DEBUG __it => D#776
  # DEBUG __it => _921
  # DEBUG __it => _921
  # DEBUG __first => _921
  # DEBUG __last => D#776
  # DEBUG __result => D#777
  # DEBUG __it => D#777
  # DEBUG __it => D#777
  # DEBUG __it => D#776
  # DEBUG __it => D#776
  # DEBUG __it => _921
  # DEBUG __it => _921
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __first.82_923 = (long int) _921;
  _924 = prephitmp_25 - __first.82_923;
  _Num_925 = _924 /[ex] 4;
  # DEBUG _Num => _Num_925
  if (_Num_925 != 0)
    goto <bb 348>;
  else
    goto <bb 347>;

  <bb 347>:
  pretmp_1033 = (long unsigned int) _892;
  pretmp_1020 = prephitmp_412 + pretmp_1033;
  goto <bb 349>;

  <bb 348>:
  _926 = (long unsigned int) _924;
  __builtin_memmove (prephitmp_417, _921, _926);
  pretmp_469 = MEM[(struct _Vector_base *)&D.37124]._M_impl._M_start;
  pretmp_456 = rates.D.34940._M_impl._M_start;
  pretmp_460 = (long unsigned int) _892;
  pretmp_461 = pretmp_456 + pretmp_460;

  <bb 349>:
  # prephitmp_454 = PHI <pretmp_467(339), pretmp_468(343), pretmp_469(348), _888(342), prephitmp_410(347)>
  # prephitmp_427 = PHI <_905(339), pretmp_459(343), pretmp_461(348), pretmp_1046(342), pretmp_1020(347)>
  rates.D.34940._M_impl._M_finish = prephitmp_427;
  # DEBUG this => &D.37124
  # DEBUG D#167 => &D.37124.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D.37124.D.34940._M_impl._M_finish
  # DEBUG D#169 => D.37124.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D.37124.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  # DEBUG D#775 => MEM[(struct _Vector_base *)&D.37124]._M_impl._M_start
  # DEBUG D#164 => (long int) D#775
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => D#775
  # DEBUG __n => D#161
  if (prephitmp_454 != 0B)
    goto <bb 350>;
  else
    goto <bb 351>;

  <bb 350>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => D#775
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => D#775
  # DEBUG this => D#153
  # DEBUG D.51126 => D#154
  operator delete (prephitmp_454);
  pretmp_429 = MEM[(int * const &)&rates + 8];

  <bb 351>:
  # prephitmp_430 = PHI <prephitmp_427(349), pretmp_429(350)>
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  D.37124 ={v} {CLOBBER};
  # DEBUG this => &rates
  # DEBUG this => &rates
  # DEBUG D#118 => &rates.D.34940._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#118
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _240 = MEM[(int &)prephitmp_430 + 18446744073709551612];
  _296 = MEM[(int * *)&hotspots];
  # DEBUG D#99 => &hotspots
  _297 = MEM[(int * *)&hotspots + 8B];
  # DEBUG D#99 => &hotspots
  # DEBUG this => D#99
  # DEBUG this => D#99
  _347 = (long int) _297;
  _348 = (long int) _296;
  _349 = _347 - _348;
  _350 = _349 /[ex] 4;
  _351 = (size_type) _350;
  std::vector<int>::resize (&rates, _351, _240);

  <bb 352>:
  std::vector<int>::vector (&D.37135, &hotspots);
  goto <bb 357>;

<L258>:
  goto <bb 498> (<L160>);

  <bb 354>:
  # DEBUG D#99 => &hotspots
  # DEBUG D#99 => &hotspots
  # DEBUG this => D#99
  # DEBUG this => D#99
  std::vector<int>::resize (&rates, _735, 1);
  goto <bb 352>;

<L259>:
  goto <bb 498> (<L160>);

<L260>:
  goto <bb 498> (<L160>);

  <bb 357>:
  std::vector<int>::vector (&D.37136, &rates);

  <bb 358>:
  result_250 = operator new (72);

  <bb 359>:
  HotSpotTrafficPattern::HotSpotTrafficPattern (result_250, nodes_65(D), &D.37135, &D.37136);

  <bb 360>:
  # DEBUG result => result_250
  # DEBUG this => &D.37136
  # DEBUG D#167 => &D.37136.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D.37136.D.34940._M_impl._M_finish
  # DEBUG D#169 => D.37136.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D.37136.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _253 = MEM[(struct _Vector_base *)&D.37136]._M_impl._M_start;
  # DEBUG D#164 => (long int) _253
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _253
  # DEBUG __n => D#161
  if (_253 != 0B)
    goto <bb 361>;
  else
    goto <bb 362>;

  <bb 361>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _253
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _253
  # DEBUG this => D#153
  # DEBUG D.51191 => D#154
  operator delete (_253);

  <bb 362>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  D.37136 ={v} {CLOBBER};
  # DEBUG this => &D.37135
  # DEBUG D#167 => &D.37135.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D.37135.D.34940._M_impl._M_finish
  # DEBUG D#169 => D.37135.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D.37135.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _255 = MEM[(struct _Vector_base *)&D.37135]._M_impl._M_start;
  # DEBUG D#164 => (long int) _255
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _255
  # DEBUG __n => D#161
  if (_255 != 0B)
    goto <bb 363>;
  else
    goto <bb 364>;

  <bb 363>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _255
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _255
  # DEBUG this => D#153
  # DEBUG D.51176 => D#154
  operator delete (_255);

  <bb 364>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  D.37135 ={v} {CLOBBER};
  # DEBUG this => &rates
  # DEBUG D#167 => &rates.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => rates.D.34940._M_impl._M_finish
  # DEBUG D#169 => rates.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &rates.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _256 = MEM[(struct _Vector_base *)&rates]._M_impl._M_start;
  # DEBUG D#164 => (long int) _256
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _256
  # DEBUG __n => D#161
  if (_256 != 0B)
    goto <bb 365>;
  else
    goto <bb 366>;

  <bb 365>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _256
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _256
  # DEBUG this => D#153
  # DEBUG D.51161 => D#154
  operator delete (_256);

  <bb 366>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  MEM[(struct  &)&rates] ={v} {CLOBBER};
  # DEBUG this => &hotspots
  # DEBUG D#167 => &hotspots.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => hotspots.D.34940._M_impl._M_finish
  # DEBUG D#169 => hotspots.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &hotspots.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _354 = MEM[(struct _Vector_base *)&hotspots]._M_impl._M_start;
  # DEBUG D#164 => (long int) _354
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _354
  # DEBUG __n => D#161
  if (_354 != 0B)
    goto <bb 367>;
  else
    goto <bb 368>;

  <bb 367>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _354
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _354
  # DEBUG this => D#153
  # DEBUG D.51146 => D#154
  operator delete (_354);

  <bb 368>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  hotspots ={v} {CLOBBER};
  rates ={v} {CLOBBER};
  goto <bb 375>;

  <bb 369>:
  # DEBUG __out => &cout
  # DEBUG __s => "Error: Unknown traffic pattern: "
  # DEBUG __s => "Error: Unknown traffic pattern: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Unknown traffic pattern: ", 32);
  goto <bb 371>;

<L263>:
  goto <bb 508> (<L163>);

  <bb 371>:
  # DEBUG __os => &cout
  # DEBUG __str => pattern_39(D)
  _268 = MEM[(long unsigned int *)pattern_39(D) + 8B];
  # DEBUG D#1 => pattern_39(D)
  # DEBUG this => D#1
  _355 = (long int) _268;
  # DEBUG this => pattern_39(D)
  _356 = MEM[(char * *)pattern_39(D)];
  # DEBUG D#2 => pattern_39(D)
  # DEBUG this => D#2
  _357 = std::__ostream_insert<char, std::char_traits<char> > (&cout, _356, _355);
  goto <bb 373>;

<L264>:
  goto <bb 508> (<L163>);

  <bb 373>:
  # DEBUG this => _357
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_357);
  goto <bb 61>;

<L265>:
  goto <bb 508> (<L163>);

  <bb 375>:
  # result_1 = PHI <result_64(65), result_70(71), result_75(88), result_80(105), result_113(148), result_117(156), result_123(177), result_135(185), result_139(193), result_144(199), result_167(230), result_203(287), result_250(368), result_211(279), result_207(295), 0B(290)>
  # DEBUG result => result_1
  # DEBUG this => &params
  # DEBUG D#242 => &params.D.36900
  # DEBUG this => D#242
  _940 = params.D.36900._M_impl._M_finish;
  __first_941 = params.D.36900._M_impl._M_start;
  # DEBUG __first => __first_941
  # DEBUG __last => _940
  # DEBUG __first => __first_941
  if (_940 == __first_941)
    goto <bb 382>;
  else
    goto <bb 376>;

  <bb 376>:

  <bb 377>:
  # __first_743 = PHI <__first_941(376), __first_945(380)>
  # DEBUG __first => __first_743
  # DEBUG __r => __first_743
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _943 = MEM[(char * *)__first_743];
  # DEBUG this => D#2
  # DEBUG this => NULL
  _944 = &MEM[(const struct basic_string *)__first_743].D.11539._M_local_buf;
  if (_943 != _944)
    goto <bb 378>;
  else
    goto <bb 379>;

  <bb 378>:
  # DEBUG D#218 => D#219
  # DEBUG this => NULL
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG this => D#2
  # DEBUG this => NULL
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _943
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _943
  # DEBUG this => D#210
  # DEBUG D.54440 => D#211
  operator delete (_943);

  <bb 379>:
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  MEM[(struct  &)__first_743] ={v} {CLOBBER};
  __first_945 = __first_743 + 32;
  # DEBUG __first => __first_945
  # DEBUG __first => __first_945
  if (_940 == __first_945)
    goto <bb 381>;
  else
    goto <bb 380>;

  <bb 380>:
  goto <bb 377>;

  <bb 381>:
  pretmp_583 = MEM[(struct _Vector_base *)&params]._M_impl._M_start;

  <bb 382>:
  # prephitmp_584 = PHI <pretmp_583(381), __first_941(375)>
  # DEBUG D#243 => &params.D.36900
  # DEBUG this => D#243
  # DEBUG D#240 => D#243->_M_impl._M_end_of_storage
  # DEBUG D#239 => (long int) D#240
  # DEBUG D#774 => MEM[(struct _Vector_base *)&params]._M_impl._M_start
  # DEBUG D#238 => (long int) D#774
  # DEBUG D#237 => D#239 - D#238
  # DEBUG D#236 => D#237 /[ex] 32
  # DEBUG D#233 => D#243
  # DEBUG D#234 => (long unsigned int) D#236
  # DEBUG __p => D#774
  # DEBUG this => D#233
  # DEBUG __n => D#234
  # DEBUG D#232 => D#234
  # DEBUG D#231 => D#233
  if (prephitmp_584 != 0B)
    goto <bb 383>;
  else
    goto <bb 384>;

  <bb 383>:
  # DEBUG D#230 => &D#231->_M_impl
  # DEBUG D#228 => D#230
  # DEBUG D#229 => D#232
  # DEBUG __p => D#774
  # DEBUG __a => D#228
  # DEBUG __n => D#229
  # DEBUG D#227 => D#229
  # DEBUG D#226 => D#228
  # DEBUG D#224 => D#226
  # DEBUG D#225 => D#227
  # DEBUG __p => D#774
  # DEBUG this => D#224
  # DEBUG D.54456 => D#225
  operator delete (prephitmp_584);

  <bb 384>:
  # DEBUG D#235 => &D#243->_M_impl
  # DEBUG this => D#235
  # DEBUG this => D#235
  # DEBUG this => D#235
  MEM[(struct  &)&params] ={v} {CLOBBER};
  # DEBUG this => &param_str
  # DEBUG this => &param_str
  # DEBUG this => &param_str
  _273 = MEM[(char * *)&param_str];
  # DEBUG D#2 => &param_str
  # DEBUG this => D#2
  # DEBUG this => &param_str
  if (&param_str.D.11539._M_local_buf != _273)
    goto <bb 385>;
  else
    goto <bb 386>;

  <bb 385>:
  # DEBUG D#219 => param_str.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &param_str
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &param_str
  # DEBUG this => D#2
  # DEBUG this => &param_str
  # DEBUG D#216 => &param_str._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _273
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _273
  # DEBUG this => D#210
  # DEBUG D.51229 => D#211
  operator delete (_273);

  <bb 386>:
  # DEBUG D#220 => &param_str._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  MEM[(struct  &)&param_str] ={v} {CLOBBER};
  # DEBUG this => &pattern_name
  # DEBUG this => &pattern_name
  # DEBUG this => &pattern_name
  _269 = MEM[(char * *)&pattern_name];
  # DEBUG D#2 => &pattern_name
  # DEBUG this => D#2
  # DEBUG this => &pattern_name
  if (&pattern_name.D.11539._M_local_buf != _269)
    goto <bb 387>;
  else
    goto <bb 388>;

  <bb 387>:
  # DEBUG D#219 => pattern_name.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &pattern_name
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &pattern_name
  # DEBUG this => D#2
  # DEBUG this => &pattern_name
  # DEBUG D#216 => &pattern_name._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _269
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _269
  # DEBUG this => D#210
  # DEBUG D.51214 => D#211
  operator delete (_269);

  <bb 388>:
  # DEBUG D#220 => &pattern_name._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  pattern_name ={v} {CLOBBER};
  param_str ={v} {CLOBBER};
  params ={v} {CLOBBER};
  return result_1;

<L119>:
  # DEBUG this => &D.36153
  # DEBUG this => &D.36153
  # DEBUG this => &D.36153
  _272 = MEM[(char * *)&D.36153];
  # DEBUG D#2 => &D.36153
  # DEBUG this => D#2
  # DEBUG this => &D.36153
  if (&D.36153.D.11539._M_local_buf != _272)
    goto <bb 390>;
  else
    goto <bb 391>;

  <bb 390>:
  # DEBUG D#219 => D.36153.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36153
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36153
  # DEBUG this => D#2
  # DEBUG this => &D.36153
  # DEBUG D#216 => &D.36153._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _272
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _272
  # DEBUG this => D#210
  # DEBUG D.51244 => D#211
  operator delete (_272);

  <bb 391>:
  # DEBUG D#220 => &D.36153._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36153 ={v} {CLOBBER};
  resx 4

<L266>:
  goto <bb 520> (<L164>);

<L120>:
  # DEBUG this => &D.36155
  # DEBUG this => &D.36155
  # DEBUG this => &D.36155
  _59 = MEM[(char * *)&D.36155];
  # DEBUG D#2 => &D.36155
  # DEBUG this => D#2
  # DEBUG this => &D.36155
  if (&D.36155.D.11539._M_local_buf != _59)
    goto <bb 394>;
  else
    goto <bb 395>;

  <bb 394>:
  # DEBUG D#219 => D.36155.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36155
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36155
  # DEBUG this => D#2
  # DEBUG this => &D.36155
  # DEBUG D#216 => &D.36155._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _59
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _59
  # DEBUG this => D#210
  # DEBUG D.51259 => D#211
  operator delete (_59);

  <bb 395>:
  # DEBUG D#220 => &D.36155._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36155 ={v} {CLOBBER};
  resx 6

<L267>:
  goto <bb 520> (<L164>);

<L121>:
  # DEBUG this => &D.36156
  # DEBUG this => &D.36156
  # DEBUG this => &D.36156
  _48 = MEM[(char * *)&D.36156];
  # DEBUG D#2 => &D.36156
  # DEBUG this => D#2
  # DEBUG this => &D.36156
  if (&D.36156.D.11539._M_local_buf != _48)
    goto <bb 398>;
  else
    goto <bb 399>;

  <bb 398>:
  # DEBUG D#219 => D.36156.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36156
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36156
  # DEBUG this => D#2
  # DEBUG this => &D.36156
  # DEBUG D#216 => &D.36156._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _48
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _48
  # DEBUG this => D#210
  # DEBUG D.51274 => D#211
  operator delete (_48);

  <bb 399>:
  # DEBUG D#220 => &D.36156._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36156 ={v} {CLOBBER};
  resx 8

<L268>:
  goto <bb 520> (<L164>);

<L181>:

<L122>:
  operator delete (result_64);
  resx 11

<L269>:
  goto <bb 508> (<L163>);

<L123>:
  operator delete (result_70);
  resx 13

<L270>:
  goto <bb 508> (<L163>);

<L190>:

<L124>:
  operator delete (result_75);
  resx 15

<L271>:
  goto <bb 508> (<L163>);

<L197>:

<L125>:
  operator delete (result_80);
  resx 17

<L272>:
  goto <bb 508> (<L163>);

<L126>:
  # DEBUG this => &D.36969
  # DEBUG this => &D.36969
  # DEBUG this => &D.36969
  _57 = MEM[(char * *)&D.36969];
  # DEBUG D#2 => &D.36969
  # DEBUG this => D#2
  # DEBUG this => &D.36969
  if (&D.36969.D.11539._M_local_buf != _57)
    goto <bb 413>;
  else
    goto <bb 414>;

  <bb 413>:
  # DEBUG D#219 => D.36969.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36969
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36969
  # DEBUG this => D#2
  # DEBUG this => &D.36969
  # DEBUG D#216 => &D.36969._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _57
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _57
  # DEBUG this => D#210
  # DEBUG D.51289 => D#211
  operator delete (_57);

  <bb 414>:
  # DEBUG D#220 => &D.36969._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36969 ={v} {CLOBBER};
  resx 21

<L273>:
  goto <bb 417> (<L127>);

<L203>:

<L127>:
  # DEBUG this => &D.36968
  # DEBUG this => &D.36968
  # DEBUG this => &D.36968
  _104 = MEM[(char * *)&D.36968];
  # DEBUG D#2 => &D.36968
  # DEBUG this => D#2
  # DEBUG this => &D.36968
  if (&D.36968.D.11539._M_local_buf != _104)
    goto <bb 418>;
  else
    goto <bb 419>;

  <bb 418>:
  # DEBUG D#219 => D.36968.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36968
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36968
  # DEBUG this => D#2
  # DEBUG this => &D.36968
  # DEBUG D#216 => &D.36968._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _104
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _104
  # DEBUG this => D#210
  # DEBUG D.51304 => D#211
  operator delete (_104);

  <bb 419>:
  # DEBUG D#220 => &D.36968._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36968 ={v} {CLOBBER};
  resx 20

<L274>:
  goto <bb 508> (<L163>);

<L129>:
  # DEBUG this => &D.36972
  # DEBUG this => &D.36972
  # DEBUG this => &D.36972
  _107 = MEM[(char * *)&D.36972];
  # DEBUG D#2 => &D.36972
  # DEBUG this => D#2
  # DEBUG this => &D.36972
  if (&D.36972.D.11539._M_local_buf != _107)
    goto <bb 422>;
  else
    goto <bb 423>;

  <bb 422>:
  # DEBUG D#219 => D.36972.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.36972
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.36972
  # DEBUG this => D#2
  # DEBUG this => &D.36972
  # DEBUG D#216 => &D.36972._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _107
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _107
  # DEBUG this => D#210
  # DEBUG D.51321 => D#211
  operator delete (_107);

  <bb 423>:
  # DEBUG D#220 => &D.36972._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.36972 ={v} {CLOBBER};
  resx 26

<L275>:
  goto <bb 508> (<L163>);

<L131>:
  operator delete (result_113);
  resx 29

<L276>:
  goto <bb 508> (<L163>);

<L132>:
  operator delete (result_117);
  resx 31

<L277>:
  goto <bb 508> (<L163>);

<L133>:
  operator delete (result_123);
  resx 36

<L278>:
  goto <bb 432> (<L134>);

<L221>:

<L134>:
  # DEBUG this => &D.37014
  # DEBUG D#167 => &D.37014.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D.37014.D.34940._M_impl._M_finish
  # DEBUG D#169 => D.37014.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D.37014.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _103 = MEM[(struct _Vector_base *)&D.37014]._M_impl._M_start;
  # DEBUG D#164 => (long int) _103
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _103
  # DEBUG __n => D#161
  if (_103 != 0B)
    goto <bb 433>;
  else
    goto <bb 434>;

  <bb 433>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _103
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _103
  # DEBUG this => D#153
  # DEBUG D.51340 => D#154
  operator delete (_103);

  <bb 434>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  D.37014 ={v} {CLOBBER};
  resx 35

<L279>:
  goto <bb 437> (<L135>);

<L219>:

<L135>:
  # DEBUG this => &excludes
  # DEBUG D#167 => &excludes.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => excludes.D.34940._M_impl._M_finish
  # DEBUG D#169 => excludes.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &excludes.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _130 = MEM[(struct _Vector_base *)&excludes]._M_impl._M_start;
  # DEBUG D#164 => (long int) _130
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _130
  # DEBUG __n => D#161
  if (_130 != 0B)
    goto <bb 438>;
  else
    goto <bb 439>;

  <bb 438>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _130
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _130
  # DEBUG this => D#153
  # DEBUG D.51355 => D#154
  operator delete (_130);

  <bb 439>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  resx 34

<L280>:
  goto <bb 508> (<L163>);

<L137>:
  operator delete (result_135);
  resx 41

<L281>:
  goto <bb 508> (<L163>);

<L138>:
  operator delete (result_139);
  resx 43

<L282>:
  goto <bb 508> (<L163>);

<L139>:
  operator delete (result_144);
  resx 45

<L283>:
  goto <bb 508> (<L163>);

<L140>:
  # DEBUG this => &D.37050
  # DEBUG this => &D.37050
  # DEBUG this => &D.37050
  _132 = MEM[(char * *)&D.37050];
  # DEBUG D#2 => &D.37050
  # DEBUG this => D#2
  # DEBUG this => &D.37050
  if (&D.37050.D.11539._M_local_buf != _132)
    goto <bb 448>;
  else
    goto <bb 449>;

  <bb 448>:
  # DEBUG D#219 => D.37050.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37050
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37050
  # DEBUG this => D#2
  # DEBUG this => &D.37050
  # DEBUG D#216 => &D.37050._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _132
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _132
  # DEBUG this => D#210
  # DEBUG D.51368 => D#211
  operator delete (_132);

  <bb 449>:
  # DEBUG D#220 => &D.37050._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37050 ={v} {CLOBBER};
  resx 48

<L284>:
  goto <bb 508> (<L163>);

<L142>:
  # DEBUG this => &D.37054
  # DEBUG this => &D.37054
  # DEBUG this => &D.37054
  _154 = MEM[(char * *)&D.37054];
  # DEBUG D#2 => &D.37054
  # DEBUG this => D#2
  # DEBUG this => &D.37054
  if (&D.37054.D.11539._M_local_buf != _154)
    goto <bb 452>;
  else
    goto <bb 453>;

  <bb 452>:
  # DEBUG D#219 => D.37054.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37054
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37054
  # DEBUG this => D#2
  # DEBUG this => &D.37054
  # DEBUG D#216 => &D.37054._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _154
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _154
  # DEBUG this => D#210
  # DEBUG D.51385 => D#211
  operator delete (_154);

  <bb 453>:
  # DEBUG D#220 => &D.37054._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37054 ={v} {CLOBBER};
  resx 52

<L285>:
  goto <bb 508> (<L163>);

<L144>:
  operator delete (result_167);
  resx 55

<L286>:
  goto <bb 508> (<L163>);

<L145>:
  # DEBUG this => &D.37078
  # DEBUG this => &D.37078
  # DEBUG this => &D.37078
  _165 = MEM[(char * *)&D.37078];
  # DEBUG D#2 => &D.37078
  # DEBUG this => D#2
  # DEBUG this => &D.37078
  if (&D.37078.D.11539._M_local_buf != _165)
    goto <bb 458>;
  else
    goto <bb 459>;

  <bb 458>:
  # DEBUG D#219 => D.37078.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37078
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37078
  # DEBUG this => D#2
  # DEBUG this => &D.37078
  # DEBUG D#216 => &D.37078._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _165
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _165
  # DEBUG this => D#210
  # DEBUG D.51402 => D#211
  operator delete (_165);

  <bb 459>:
  # DEBUG D#220 => &D.37078._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37078 ={v} {CLOBBER};
  resx 58

<L287>:
  goto <bb 508> (<L163>);

<L147>:
  # DEBUG this => &D.37082
  # DEBUG this => &D.37082
  # DEBUG this => &D.37082
  _182 = MEM[(char * *)&D.37082];
  # DEBUG D#2 => &D.37082
  # DEBUG this => D#2
  # DEBUG this => &D.37082
  if (&D.37082.D.11539._M_local_buf != _182)
    goto <bb 462>;
  else
    goto <bb 463>;

  <bb 462>:
  # DEBUG D#219 => D.37082.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37082
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37082
  # DEBUG this => D#2
  # DEBUG this => &D.37082
  # DEBUG D#216 => &D.37082._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _182
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _182
  # DEBUG this => D#210
  # DEBUG D.51419 => D#211
  operator delete (_182);

  <bb 463>:
  # DEBUG D#220 => &D.37082._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37082 ={v} {CLOBBER};
  resx 62

<L288>:
  goto <bb 508> (<L163>);

<L149>:
  # DEBUG this => &D.37086
  # DEBUG this => &D.37086
  # DEBUG this => &D.37086
  _191 = MEM[(char * *)&D.37086];
  # DEBUG D#2 => &D.37086
  # DEBUG this => D#2
  # DEBUG this => &D.37086
  if (&D.37086.D.11539._M_local_buf != _191)
    goto <bb 466>;
  else
    goto <bb 467>;

  <bb 466>:
  # DEBUG D#219 => D.37086.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37086
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37086
  # DEBUG this => D#2
  # DEBUG this => &D.37086
  # DEBUG D#216 => &D.37086._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _191
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _191
  # DEBUG this => D#210
  # DEBUG D.51436 => D#211
  operator delete (_191);

  <bb 467>:
  # DEBUG D#220 => &D.37086._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37086 ={v} {CLOBBER};
  resx 66

<L289>:
  goto <bb 508> (<L163>);

<L151>:
  operator delete (result_211);
  resx 69

<L290>:
  goto <bb 508> (<L163>);

<L152>:
  operator delete (result_203);
  resx 71

<L291>:
  goto <bb 508> (<L163>);

<L153>:
  operator delete (result_207);
  resx 73

<L292>:
  goto <bb 508> (<L163>);

<L251>:

<L154>:
  # DEBUG this => &D.37119
  # DEBUG this => &D.37119
  # DEBUG this => &D.37119
  _200 = MEM[(char * *)&D.37119];
  # DEBUG D#2 => &D.37119
  # DEBUG this => D#2
  # DEBUG this => &D.37119
  if (&D.37119.D.11539._M_local_buf != _200)
    goto <bb 477>;
  else
    goto <bb 478>;

  <bb 477>:
  # DEBUG D#219 => D.37119.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &D.37119
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &D.37119
  # DEBUG this => D#2
  # DEBUG this => &D.37119
  # DEBUG D#216 => &D.37119._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _200
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _200
  # DEBUG this => D#210
  # DEBUG D.51453 => D#211
  operator delete (_200);

  <bb 478>:
  # DEBUG D#220 => &D.37119._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  D.37119 ={v} {CLOBBER};
  resx 77

<L293>:
  goto <bb 508> (<L163>);

<L256>:

<L156>:
  # DEBUG this => &D.37124
  # DEBUG D#167 => &D.37124.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D.37124.D.34940._M_impl._M_finish
  # DEBUG D#169 => D.37124.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D.37124.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _225 = MEM[(struct _Vector_base *)&D.37124]._M_impl._M_start;
  # DEBUG D#164 => (long int) _225
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _225
  # DEBUG __n => D#161
  if (_225 != 0B)
    goto <bb 482>;
  else
    goto <bb 483>;

  <bb 482>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _225
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _225
  # DEBUG this => D#153
  # DEBUG D.51472 => D#154
  operator delete (_225);

  <bb 483>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  D.37124 ={v} {CLOBBER};
  resx 82

<L294>:
  goto <bb 498> (<L160>);

<L157>:
  operator delete (result_250);
  resx 86

<L295>:
  goto <bb 488> (<L158>);

<L262>:

<L158>:
  # DEBUG this => &D.37136
  # DEBUG D#167 => &D.37136.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D.37136.D.34940._M_impl._M_finish
  # DEBUG D#169 => D.37136.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D.37136.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _243 = MEM[(struct _Vector_base *)&D.37136]._M_impl._M_start;
  # DEBUG D#164 => (long int) _243
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _243
  # DEBUG __n => D#161
  if (_243 != 0B)
    goto <bb 489>;
  else
    goto <bb 490>;

  <bb 489>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _243
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _243
  # DEBUG this => D#153
  # DEBUG D.51487 => D#154
  operator delete (_243);

  <bb 490>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  D.37136 ={v} {CLOBBER};
  resx 85

<L296>:
  goto <bb 493> (<L159>);

<L261>:

<L159>:
  # DEBUG this => &D.37135
  # DEBUG D#167 => &D.37135.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => D.37135.D.34940._M_impl._M_finish
  # DEBUG D#169 => D.37135.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &D.37135.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _260 = MEM[(struct _Vector_base *)&D.37135]._M_impl._M_start;
  # DEBUG D#164 => (long int) _260
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _260
  # DEBUG __n => D#161
  if (_260 != 0B)
    goto <bb 494>;
  else
    goto <bb 495>;

  <bb 494>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _260
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _260
  # DEBUG this => D#153
  # DEBUG D.51502 => D#154
  operator delete (_260);

  <bb 495>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  D.37135 ={v} {CLOBBER};
  resx 84

<L297>:
  goto <bb 498> (<L160>);

<L255>:

<L160>:
  # DEBUG this => &rates
  # DEBUG D#167 => &rates.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => rates.D.34940._M_impl._M_finish
  # DEBUG D#169 => rates.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &rates.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _262 = MEM[(struct _Vector_base *)&rates]._M_impl._M_start;
  # DEBUG D#164 => (long int) _262
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _262
  # DEBUG __n => D#161
  if (_262 != 0B)
    goto <bb 499>;
  else
    goto <bb 500>;

  <bb 499>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _262
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _262
  # DEBUG this => D#153
  # DEBUG D.51517 => D#154
  operator delete (_262);

  <bb 500>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  MEM[(struct  &)&rates] ={v} {CLOBBER};
  resx 81

<L298>:
  goto <bb 503> (<L161>);

<L254>:

<L161>:
  # DEBUG this => &hotspots
  # DEBUG D#167 => &hotspots.D.34940
  # DEBUG this => D#167
  # DEBUG D#170 => hotspots.D.34940._M_impl._M_finish
  # DEBUG D#169 => hotspots.D.34940._M_impl._M_start
  # DEBUG __first => D#169
  # DEBUG __last => D#170
  # DEBUG D.45958 => NULL
  # DEBUG D#140 => D#169
  # DEBUG D#141 => D#170
  # DEBUG __first => D#140
  # DEBUG __last => D#141
  # DEBUG D#139 => D#141
  # DEBUG D#138 => D#140
  # DEBUG D#136 => D#138
  # DEBUG D#137 => D#139
  # DEBUG D.45823 => D#136
  # DEBUG D.45822 => D#137
  # DEBUG D#168 => &hotspots.D.34940
  # DEBUG this => D#168
  # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
  # DEBUG D#165 => (long int) D#166
  _264 = MEM[(struct _Vector_base *)&hotspots]._M_impl._M_start;
  # DEBUG D#164 => (long int) _264
  # DEBUG D#163 => D#165 - D#164
  # DEBUG D#162 => D#163 /[ex] 4
  # DEBUG D#161 => (long unsigned int) D#162
  # DEBUG this => D#168
  # DEBUG __p => _264
  # DEBUG __n => D#161
  if (_264 != 0B)
    goto <bb 504>;
  else
    goto <bb 505>;

  <bb 504>:
  # DEBUG D#159 => &D#168->_M_impl
  # DEBUG D#157 => D#159
  # DEBUG D#158 => D#161
  # DEBUG __p => _264
  # DEBUG __a => D#157
  # DEBUG __n => D#158
  # DEBUG D#156 => D#158
  # DEBUG D#155 => D#157
  # DEBUG D#153 => D#155
  # DEBUG D#154 => D#156
  # DEBUG __p => _264
  # DEBUG this => D#153
  # DEBUG D.51532 => D#154
  operator delete (_264);

  <bb 505>:
  # DEBUG D#160 => &D#168->_M_impl
  # DEBUG this => D#160
  # DEBUG this => D#160
  # DEBUG this => D#160
  resx 80

<L299>:
  goto <bb 508> (<L163>);

<L179>:

<L163>:
  hotspots ={v} {CLOBBER};
  rates ={v} {CLOBBER};
  excludes ={v} {CLOBBER};
  # DEBUG this => &params
  # DEBUG D#242 => &params.D.36900
  # DEBUG this => D#242
  _271 = params.D.36900._M_impl._M_finish;
  __first_947 = params.D.36900._M_impl._M_start;
  # DEBUG __first => __first_947
  # DEBUG __last => _271
  # DEBUG __first => __first_947
  if (_271 == __first_947)
    goto <bb 515>;
  else
    goto <bb 509>;

  <bb 509>:

  <bb 510>:
  # __first_744 = PHI <__first_947(509), __first_951(513)>
  # DEBUG __first => __first_744
  # DEBUG __r => __first_744
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _949 = MEM[(char * *)__first_744];
  # DEBUG this => D#2
  # DEBUG this => NULL
  _950 = &MEM[(const struct basic_string *)__first_744].D.11539._M_local_buf;
  if (_949 != _950)
    goto <bb 511>;
  else
    goto <bb 512>;

  <bb 511>:
  # DEBUG D#218 => D#219
  # DEBUG this => NULL
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG this => D#2
  # DEBUG this => NULL
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _949
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _949
  # DEBUG this => D#210
  # DEBUG D.54479 => D#211
  operator delete (_949);

  <bb 512>:
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  MEM[(struct  &)__first_744] ={v} {CLOBBER};
  __first_951 = __first_744 + 32;
  # DEBUG __first => __first_951
  # DEBUG __first => __first_951
  if (_271 == __first_951)
    goto <bb 514>;
  else
    goto <bb 513>;

  <bb 513>:
  goto <bb 510>;

  <bb 514>:
  pretmp_595 = MEM[(struct _Vector_base *)&params]._M_impl._M_start;

  <bb 515>:
  # prephitmp_596 = PHI <pretmp_595(514), __first_947(508)>
  # DEBUG D#243 => &params.D.36900
  # DEBUG this => D#243
  # DEBUG D#240 => D#243->_M_impl._M_end_of_storage
  # DEBUG D#239 => (long int) D#240
  # DEBUG D#773 => MEM[(struct _Vector_base *)&params]._M_impl._M_start
  # DEBUG D#238 => (long int) D#773
  # DEBUG D#237 => D#239 - D#238
  # DEBUG D#236 => D#237 /[ex] 32
  # DEBUG D#233 => D#243
  # DEBUG D#234 => (long unsigned int) D#236
  # DEBUG __p => D#773
  # DEBUG this => D#233
  # DEBUG __n => D#234
  # DEBUG D#232 => D#234
  # DEBUG D#231 => D#233
  if (prephitmp_596 != 0B)
    goto <bb 516>;
  else
    goto <bb 517>;

  <bb 516>:
  # DEBUG D#230 => &D#231->_M_impl
  # DEBUG D#228 => D#230
  # DEBUG D#229 => D#232
  # DEBUG __p => D#773
  # DEBUG __a => D#228
  # DEBUG __n => D#229
  # DEBUG D#227 => D#229
  # DEBUG D#226 => D#228
  # DEBUG D#224 => D#226
  # DEBUG D#225 => D#227
  # DEBUG __p => D#773
  # DEBUG this => D#224
  # DEBUG D.54495 => D#225
  operator delete (prephitmp_596);

  <bb 517>:
  # DEBUG D#235 => &D#243->_M_impl
  # DEBUG this => D#235
  # DEBUG this => D#235
  # DEBUG this => D#235
  MEM[(struct  &)&params] ={v} {CLOBBER};
  resx 10

<L300>:
  goto <bb 520> (<L164>);

<L170>:

<L164>:
  # DEBUG this => &param_str
  # DEBUG this => &param_str
  # DEBUG this => &param_str
  _265 = MEM[(char * *)&param_str];
  # DEBUG D#2 => &param_str
  # DEBUG this => D#2
  # DEBUG this => &param_str
  if (&param_str.D.11539._M_local_buf != _265)
    goto <bb 521>;
  else
    goto <bb 522>;

  <bb 521>:
  # DEBUG D#219 => param_str.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &param_str
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &param_str
  # DEBUG this => D#2
  # DEBUG this => &param_str
  # DEBUG D#216 => &param_str._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _265
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _265
  # DEBUG this => D#210
  # DEBUG D.51545 => D#211
  operator delete (_265);

  <bb 522>:
  # DEBUG D#220 => &param_str._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  MEM[(struct  &)&param_str] ={v} {CLOBBER};
  resx 3

<L165>:
  # DEBUG this => &pattern_name
  # DEBUG this => &pattern_name
  # DEBUG this => &pattern_name
  _278 = MEM[(char * *)&pattern_name];
  # DEBUG D#2 => &pattern_name
  # DEBUG this => D#2
  # DEBUG this => &pattern_name
  if (&pattern_name.D.11539._M_local_buf != _278)
    goto <bb 524>;
  else
    goto <bb 525>;

  <bb 524>:
  # DEBUG D#219 => pattern_name.D.11539._M_allocated_capacity
  # DEBUG D#218 => D#219
  # DEBUG this => &pattern_name
  # DEBUG __size => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#2 => &pattern_name
  # DEBUG this => D#2
  # DEBUG this => &pattern_name
  # DEBUG D#216 => &pattern_name._M_dataplus
  # DEBUG D#214 => D#216
  # DEBUG D#215 => D#217 + 1
  # DEBUG __p => _278
  # DEBUG __a => D#214
  # DEBUG __n => D#215
  # DEBUG D#213 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#210 => D#212
  # DEBUG D#211 => D#213
  # DEBUG __p => _278
  # DEBUG this => D#210
  # DEBUG D.51560 => D#211
  operator delete (_278);

  <bb 525>:
  # DEBUG D#220 => &pattern_name._M_dataplus
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#220
  resx 2

  <bb 526>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L301>:
  goto <bb 520> (<L164>);

  <bb 528>:
  # DEBUG __first => __start_736
  # DEBUG __last => _741
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => __start_736
  # DEBUG __last => _741
  __dnew = iftmp.47_821;
  if (iftmp.47_821 > 15)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 529>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L302>:
  goto <bb 520> (<L164>);

  <bb 531>:
  # DEBUG __first => __start_757
  # DEBUG __last => _760
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => __start_757
  # DEBUG __last => _760
  __dnew = _758;
  if (_758 > 15)
    goto <bb 23>;
  else
    goto <bb 26>;

  <bb 532>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L303>:
  goto <bb 520> (<L164>);

  <bb 534>:
  # DEBUG __first => __start_776
  # DEBUG __last => _779
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => __start_776
  # DEBUG __last => _779
  __dnew = iftmp.47_797;
  if (iftmp.47_797 > 15)
    goto <bb 37>;
  else
    goto <bb 40>;

  <bb 535>:
  # DEBUG __lhs => &pattern_name
  # DEBUG __rhs => "hotspot"
  _208 = std::__cxx11::basic_string<char>::compare (&pattern_name, "hotspot");
  goto <bb 296>;

<L304>:
  goto <bb 508> (<L163>);

  <bb 537>:
  # DEBUG missing_params => 0
  # DEBUG k => -1
  _286 = MEM[(struct basic_string * *)&params];
  # DEBUG D#98 => &params
  _287 = MEM[(struct basic_string * *)&params + 8B];
  # DEBUG D#98 => &params
  # DEBUG this => D#98
  # DEBUG this => D#98
  _311 = (long int) _287;
  _312 = (long int) _286;
  _313 = _311 - _312;
  _314 = _313 /[ex] 32;
  if (_314 == 0)
    goto <bb 240>;
  else
    goto <bb 247>;

  <bb 538>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L305>:
  goto <bb 476> (<L154>);

  <bb 540>:
  # DEBUG __first => _872
  # DEBUG __last => _874
  # DEBUG D#438 => &__first
  # DEBUG D.49159 => D#438
  # DEBUG __first => _872
  # DEBUG __last => _874
  __dnew = _873;
  if (_873 > 15)
    goto <bb 303>;
  else
    goto <bb 305>;

  <bb 541>:
  # DEBUG n => -1
  # DEBUG missing_params => 1
  # DEBUG xr => -1
  # DEBUG D#98 => &params
  # DEBUG D#98 => &params
  # DEBUG this => D#98
  # DEBUG this => D#98
  if (_320 <= 2)
    goto <bb 258>;
  else
    goto <bb 265>;

}


