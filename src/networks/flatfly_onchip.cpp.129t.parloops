
;; Function void adaptive_xyyx_flatfly(const Router*, const Flit*, int, OutputSet*, bool) (_Z21adaptive_xyyx_flatflyPK6RouterPK4FlitiP9OutputSetb, funcdef_no=2246, decl_uid=47380, cgraph_uid=670, symbol_order=675)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void adaptive_xyyx_flatfly(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  char_type D.60044;
  char __c;
  char_type D.60041;
  struct basic_ostream & D.60035;
  char_type D.60016;
  char __c;
  char_type D.60013;
  struct basic_ostream & D.60007;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.59989;
  int rID;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int power;
  int D.59980;
  int rID;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int credit_yx;
  int credit_xy;
  bool x_then_y;
  const int available_vcs;
  int targetr;
  int dest;
  int out_port;
  static const char __PRETTY_FUNCTION__[78] = "void adaptive_xyyx_flatfly(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  int gNumVCs.102_10;
  FlitType _13;
  int _22;
  int _25;
  int _26;
  int _xrouter.147_29;
  int _31;
  int _32;
  int _xcount.146_34;
  int (*__vtbl_ptr_type) () * _35;
  int prephitmp_38;
  int (*__vtbl_ptr_type) () * _41;
  int (*__vtbl_ptr_type) () _42;
  int (*__vtbl_ptr_type) () * _45;
  int (*__vtbl_ptr_type) () _46;
  int _50;
  int _51;
  int _61;
  int _64;
  int _yrouter.148_65;
  int _68;
  int _69;
  int gC.149_70;
  int _71;
  int _72;
  int _73;
  long int _75;
  long int _76;
  int _77;
  bool _79;
  bool _80;
  bool _81;
  int gK.110_91;
  int _92;
  int _93;
  int gC.109_94;
  int _95;
  int _98;
  int _115;
  int _118;
  long int _127;
  sizetype _128;
  struct basic_ios * _129;
  int _131;
  struct basic_ostream & _132;
  const struct __ctype_type * _134;
  char _135;
  int pretmp_137;
  char_type _138;
  bool _140;
  char_type _141;
  int pretmp_142;
  int (*__vtbl_ptr_type) () * _143;
  int (*__vtbl_ptr_type) () _144;
  char_type _146;
  int (*__vtbl_ptr_type) () * _148;
  long int _149;
  sizetype _150;
  struct basic_ios * _151;
  int _153;
  struct basic_ostream & _154;
  int gK.145_155;
  const struct __ctype_type * _156;
  char _157;
  int prephitmp_159;
  char_type _160;
  char_type _163;
  int (*__vtbl_ptr_type) () * _165;
  int (*__vtbl_ptr_type) () _166;
  char_type _168;
  int pretmp_182;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#248 => gNumVCs
  # DEBUG vcEnd => D#248 + -1
  _13 = f_12(D)->type;
  if (_13 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_14 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_14
  vcEnd_15 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_15
  goto <bb 11>;

  <bb 4>:
  if (_13 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_16 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_16
  vcEnd_17 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_17
  goto <bb 11>;

  <bb 6>:
  if (_13 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_18 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_18
  vcEnd_19 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_19
  goto <bb 11>;

  <bb 8>:
  gNumVCs.102_10 = gNumVCs;
  if (_13 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_11 = gNumVCs.102_10 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_20 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_20
  vcEnd_21 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_21

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_14(3), vcBegin_16(5), vcBegin_18(7), 0(9), vcBegin_20(10)>
  # vcEnd_3 = PHI <vcEnd_15(3), vcEnd_17(5), vcEnd_19(7), vcEnd_11(9), vcEnd_21(10)>

  <bb 61>:
  # DEBUG vcEnd => vcEnd_3
  # DEBUG vcBegin => vcBegin_1
  _22 = f_12(D)->vc;
  _79 = vcEnd_3 < _22;
  _80 = vcBegin_1 > _22;
  _81 = _79 | _80;
  if (_81 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _140 = _22 >= 0;
  if (inject_23(D) <= _140)
    goto <bb 13>;
  else
    goto <bb 56>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "networks/flatfly_onchip.cpp", 350, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_23(D) != 0)
    goto <bb 56>;
  else
    goto <bb 15>;

  <bb 15>:
  _25 = f_12(D)->dest;
  # DEBUG dest => _25
  _xcount.146_34 = _xcount;
  _xrouter.147_29 = _xrouter;
  _26 = _xrouter.147_29 * _xcount.146_34;
  _61 = _25 % _26;
  horizontal_62 = _61 / _xrouter.147_29;
  # DEBUG horizontal => horizontal_62
  horizontal_rem_63 = _61 % _xrouter.147_29;
  # DEBUG horizontal_rem => horizontal_rem_63
  _64 = _25 / _26;
  _yrouter.148_65 = _yrouter;
  vertical_66 = _64 / _yrouter.148_65;
  # DEBUG vertical => vertical_66
  vertical_rem_67 = _64 % _yrouter.148_65;
  # DEBUG vertical_rem => vertical_rem_67
  _68 = _xcount.146_34 * vertical_66;
  _69 = horizontal_62 + _68;
  gC.149_70 = gC;
  _71 = _69 * gC.149_70;
  _72 = _xrouter.147_29 * vertical_rem_67;
  _73 = _71 + _72;
  dest_74 = horizontal_rem_63 + _73;
  # DEBUG dest => dest_74
  # DEBUG dest => NULL
  targetr_27 = dest_74 / gC.149_70;
  # DEBUG targetr => targetr_27
  rID_59 = MEM[(int *)r_28(D) + 96B];
  # DEBUG D#19 => r_28(D)
  # DEBUG this => D#19
  if (targetr_27 == rID_59)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  out_port_30 = dest_74 % gC.149_70;
  # DEBUG out_port => out_port_30
  goto <bb 56>;

  <bb 17>:
  _31 = vcEnd_3 - vcBegin_1;
  _32 = _31 + 1;
  available_vcs_33 = _32 / 2;
  # DEBUG available_vcs => available_vcs_33
  if (available_vcs_33 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __assert_fail ("available_vcs > 0", "networks/flatfly_onchip.cpp", 370, &__PRETTY_FUNCTION__);

  <bb 19>:
  # DEBUG D#19 => r_28(D)
  # DEBUG this => D#19
  # DEBUG dest => dest_74
  # DEBUG rID => rID_59
  # DEBUG dest_rID => targetr_27
  _dim_105 = gN;
  # DEBUG _dim => _dim_105
  # DEBUG output => -1
  # DEBUG d => 0
  # DEBUG dest_rID => targetr_27
  # DEBUG rID => rID_59
  if (_dim_105 <= 0)
    goto <bb 29>;
  else
    goto <bb 20>;

  <bb 20>:
  gK.145_155 = gK;
  dID_37 = targetr_27 % gK.145_155;
  # DEBUG dID => dID_37
  sID_82 = rID_59 % gK.145_155;
  # DEBUG sID => sID_82
  if (dID_37 != sID_82)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 21>:
  dID_110 = targetr_120 % gK.145_155;
  # DEBUG dID => dID_110
  sID_112 = rID_121 % gK.145_155;
  # DEBUG sID => sID_112
  if (dID_110 != sID_112)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  goto <bb 28>;

  <bb 23>:
  # dID_111 = PHI <dID_110(21)>
  # sID_109 = PHI <sID_112(21)>
  # d_108 = PHI <d_122(21)>
  pretmp_137 = gK.145_155 + -1;
  pretmp_142 = d_108 * pretmp_137;

  <bb 24>:
  # dID_202 = PHI <dID_111(23), dID_37(20)>
  # sID_200 = PHI <sID_109(23), sID_82(20)>
  # prephitmp_159 = PHI <pretmp_142(23), 0(20)>

  <bb 59>:
  _115 = gC.149_70 + prephitmp_159;
  output_116 = _115 + -1;
  # DEBUG output => output_116
  if (sID_200 < dID_202)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  output_117 = output_116 + dID_202;
  # DEBUG output => output_117
  goto <bb 35>;

  <bb 26>:
  _118 = dID_202 + 1;
  output_119 = output_116 + _118;
  # DEBUG output => output_119
  goto <bb 35>;

  <bb 27>:

  <bb 28>:
  # d_196 = PHI <0(27), d_122(22)>
  # targetr_167 = PHI <targetr_27(27), targetr_120(22)>
  # rID_201 = PHI <rID_59(27), rID_121(22)>
  # DEBUG d => d_196
  # DEBUG dest_rID => targetr_167
  # DEBUG rID => rID_201
  # DEBUG dID => dID_37
  # DEBUG sID => dID_37
  targetr_120 = targetr_167 / gK.145_155;
  # DEBUG dest_rID => targetr_120
  rID_121 = rID_201 / gK.145_155;
  # DEBUG rID => rID_121
  d_122 = d_196 + 1;
  # DEBUG d => d_122
  # DEBUG d => d_122
  # DEBUG dest_rID => targetr_120
  # DEBUG rID => rID_121
  if (_dim_105 <= d_122)
    goto <bb 29>;
  else
    goto <bb 21>;

  <bb 29>:
  # DEBUG D#24 => dest_74
  # DEBUG D#25 => rID_59
  # DEBUG D#26 => D#25
  # DEBUG rID => D#26
  # DEBUG D#27 => D#24
  # DEBUG dest => D#27
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found "
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR ---- FLATFLY_OUTPORT function : output not found ", 56);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _35 = cout._vptr.basic_ostream;
  _127 = MEM[(long int *)_35 + -24B];
  _128 = (sizetype) _127;
  _129 = &cout + _128;
  # DEBUG this => _129
  # DEBUG __c => 10
  _134 = MEM[(const struct basic_ios *)_129]._M_ctype;
  # DEBUG __f => _134
  if (_134 == 0B)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  std::__throw_bad_cast ();

  <bb 31>:
  # DEBUG this => _134
  # DEBUG __c => 10
  _135 = MEM[(const struct ctype *)_134]._M_widen_ok;
  if (_135 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  _138 = MEM[(const struct ctype *)_134]._M_widen[10];
  goto <bb 34>;

  <bb 33>:
  # DEBUG this => _134
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_134);
  _143 = MEM[(const struct ctype *)_134].D.20312._vptr.facet;
  _144 = MEM[(int (*__vtbl_ptr_type) () *)_143 + 48B];
  _146 = OBJ_TYPE_REF(_144;(const struct ctype)_134->6) (_134, 10);

  <bb 34>:
  # _141 = PHI <_138(32), _146(33)>
  _131 = (int) _141;
  _132 = std::basic_ostream<char>::put (&cout, _131);
  # DEBUG __os => _132
  std::basic_ostream<char>::flush (_132);
  exit (-1);

  <bb 35>:
  # out_port_123 = PHI <output_119(26), output_117(25)>

  <bb 60>:
  # DEBUG out_port_xy => NULL
  # DEBUG D#19 => r_28(D)
  # DEBUG this => D#19
  # DEBUG dest => dest_74
  # DEBUG rID => rID_59
  # DEBUG dest_rID => targetr_27
  # DEBUG _dim => _dim_105
  # DEBUG output => -1
  d_83 = _dim_105 + -1;
  # DEBUG d => d_83
  # DEBUG d => d_83
  # DEBUG dest_rID => targetr_27
  # DEBUG rID => rID_59
  if (d_83 < 0)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  goto <bb 38>;

  <bb 37>:
  # DEBUG D#20 => dest_74
  # DEBUG D#21 => rID_59
  # DEBUG D#22 => D#21
  # DEBUG rID => D#22
  # DEBUG D#23 => D#20
  # DEBUG dest => D#23
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found yx"
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found yx"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR ---- FLATFLY_OUTPORT function : output not found yx", 58);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _148 = cout._vptr.basic_ostream;
  _149 = MEM[(long int *)_148 + -24B];
  _150 = (sizetype) _149;
  _151 = &cout + _150;
  # DEBUG this => _151
  # DEBUG __c => 10
  _156 = MEM[(const struct basic_ios *)_151]._M_ctype;
  # DEBUG __f => _156
  if (_156 == 0B)
    goto <bb 30>;
  else
    goto <bb 44>;

  <bb 38>:
  # d_106 = PHI <d_83(36), d_102(43)>
  # targetr_205 = PHI <targetr_27(36), targetr_100(43)>
  # rID_198 = PHI <rID_59(36), rID_101(43)>
  # prephitmp_38 = PHI <gK.145_155(36), pretmp_182(43)>
  # DEBUG d => d_106
  # DEBUG dest_rID => targetr_205
  # DEBUG rID => rID_198
  power_86 = powi (prephitmp_38, d_106);
  # DEBUG power => power_86
  dID_88 = targetr_205 / power_86;
  # DEBUG dID => dID_88
  sID_90 = rID_198 / power_86;
  # DEBUG sID => sID_90
  if (dID_88 != sID_90)
    goto <bb 39>;
  else
    goto <bb 42>;

  <bb 39>:
  # dID_139 = PHI <dID_88(38)>
  # sID_136 = PHI <sID_90(38)>
  # d_126 = PHI <d_106(38)>
  gK.110_91 = gK;
  _92 = gK.110_91 + -1;
  _93 = _92 * d_126;
  gC.109_94 = gC;
  _95 = _93 + gC.109_94;
  output_96 = _95 + -1;
  # DEBUG output => output_96
  if (dID_139 > sID_136)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  output_97 = dID_139 + output_96;
  # DEBUG output => output_97
  goto <bb 48>;

  <bb 41>:
  _98 = dID_139 + 1;
  output_99 = output_96 + _98;
  # DEBUG output => output_99
  goto <bb 48>;

  <bb 42>:
  targetr_100 = targetr_205 % power_86;
  # DEBUG dest_rID => targetr_100
  rID_101 = rID_198 % power_86;
  # DEBUG rID => rID_101
  d_102 = d_106 + -1;
  # DEBUG d => d_102
  # DEBUG d => d_102
  # DEBUG dest_rID => targetr_100
  # DEBUG rID => rID_101
  if (d_102 < 0)
    goto <bb 37>;
  else
    goto <bb 43>;

  <bb 43>:
  pretmp_182 = gK;
  goto <bb 38>;

  <bb 44>:
  # DEBUG this => _156
  # DEBUG __c => 10
  _157 = MEM[(const struct ctype *)_156]._M_widen_ok;
  if (_157 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  _160 = MEM[(const struct ctype *)_156]._M_widen[10];
  goto <bb 47>;

  <bb 46>:
  # DEBUG this => _156
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_156);
  _165 = MEM[(const struct ctype *)_156].D.20312._vptr.facet;
  _166 = MEM[(int (*__vtbl_ptr_type) () *)_165 + 48B];
  _168 = OBJ_TYPE_REF(_166;(const struct ctype)_156->6) (_156, 10);

  <bb 47>:
  # _163 = PHI <_160(45), _168(46)>
  _153 = (int) _163;
  _154 = std::basic_ostream<char>::put (&cout, _153);
  # DEBUG __os => _154
  std::basic_ostream<char>::flush (_154);
  exit (-1);

  <bb 48>:
  # out_port_103 = PHI <output_99(41), output_97(40)>
  # DEBUG out_port_yx => NULL
  if (in_channel_40(D) < gC.109_94)
    goto <bb 49>;
  else
    goto <bb 53>;

  <bb 49>:
  _41 = r_28(D)->D.45421.D.36000._vptr.Module;
  _42 = MEM[(int (*__vtbl_ptr_type) () *)_41 + 72B];
  credit_xy_44 = OBJ_TYPE_REF(_42;(const struct Router)r_28(D)->9) (r_28(D), out_port_123);
  # DEBUG credit_xy => credit_xy_44
  _45 = r_28(D)->D.45421.D.36000._vptr.Module;
  _46 = MEM[(int (*__vtbl_ptr_type) () *)_45 + 72B];
  credit_yx_48 = OBJ_TYPE_REF(_46;(const struct Router)r_28(D)->9) (r_28(D), out_port_103);
  # DEBUG credit_yx => credit_yx_48
  if (credit_xy_44 > credit_yx_48)
    goto <bb 55>;
  else
    goto <bb 50>;

  <bb 50>:
  if (credit_xy_44 < credit_yx_48)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:

  <bb 58>:
  # DEBUG x_then_y => NULL
  # DEBUG out_port => NULL
  vcEnd_53 = vcEnd_3 - available_vcs_33;
  # DEBUG vcEnd => vcEnd_53
  goto <bb 56>;

  <bb 52>:
  # DEBUG max => 1
  _75 = ran_next ();
  _76 = _75 % 2;
  _77 = (int) _76;
  x_then_y_49 = _77 > 0;
  # DEBUG x_then_y => x_then_y_49
  goto <bb 54>;

  <bb 53>:
  _50 = f_12(D)->vc;
  _51 = vcBegin_1 + available_vcs_33;
  x_then_y_52 = _50 < _51;
  # DEBUG x_then_y => x_then_y_52

  <bb 54>:
  # x_then_y_6 = PHI <x_then_y_49(52), x_then_y_52(53)>
  # DEBUG x_then_y => x_then_y_6
  if (x_then_y_6 != 0)
    goto <bb 51>;
  else
    goto <bb 55>;

  <bb 55>:

  <bb 57>:
  # DEBUG x_then_y => NULL
  # DEBUG out_port => NULL
  vcBegin_54 = vcBegin_1 + available_vcs_33;
  # DEBUG vcBegin => vcBegin_54

  <bb 56>:
  # vcBegin_2 = PHI <vcBegin_1(14), vcBegin_1(16), vcBegin_1(58), vcBegin_54(57), vcBegin_1(12)>
  # vcEnd_4 = PHI <vcEnd_3(14), vcEnd_3(16), vcEnd_53(58), vcEnd_3(57), vcEnd_3(12)>
  # out_port_5 = PHI <-1(14), out_port_30(16), out_port_123(58), out_port_103(57), -1(12)>
  # DEBUG out_port => out_port_5
  # DEBUG vcEnd => vcEnd_4
  # DEBUG vcBegin => vcBegin_2
  OutputSet::Clear (outputs_56(D));
  OutputSet::AddRange (outputs_56(D), out_port_5, vcBegin_2, vcEnd_4, 0);
  return;

}



;; Function void min_flatfly(const Router*, const Flit*, int, OutputSet*, bool) (_Z11min_flatflyPK6RouterPK4FlitiP9OutputSetb, funcdef_no=2250, decl_uid=47392, cgraph_uid=674, symbol_order=679)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void min_flatfly(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  char_type D.60115;
  char __c;
  char_type D.60112;
  struct basic_ostream & D.60106;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.60088;
  int rID;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int targetr;
  int dest;
  int out_port;
  static const char __PRETTY_FUNCTION__[68] = "void min_flatfly(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  int gNumVCs.118_6;
  FlitType _9;
  int _18;
  int _21;
  int _xrouter.147_22;
  int _xcount.146_25;
  int (*__vtbl_ptr_type) () * _27;
  int pretmp_28;
  int _33;
  int _34;
  int _37;
  int _yrouter.148_38;
  int _41;
  int _42;
  int gC.149_43;
  int _44;
  int _45;
  int _46;
  int gK.145_51;
  int _60;
  int _63;
  bool _69;
  bool _70;
  long int _72;
  sizetype _73;
  struct basic_ios * _74;
  int _76;
  struct basic_ostream & _77;
  const struct __ctype_type * _79;
  char _80;
  char_type _83;
  bool _85;
  char_type _86;
  int (*__vtbl_ptr_type) () * _88;
  int (*__vtbl_ptr_type) () _89;
  char_type _91;
  bool _96;
  int pretmp_113;
  int prephitmp_114;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#257 => gNumVCs
  # DEBUG vcEnd => D#257 + -1
  _9 = f_8(D)->type;
  if (_9 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_10 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_10
  vcEnd_11 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_11
  goto <bb 11>;

  <bb 4>:
  if (_9 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_12 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_12
  vcEnd_13 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_13
  goto <bb 11>;

  <bb 6>:
  if (_9 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_14 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_14
  vcEnd_15 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_15
  goto <bb 11>;

  <bb 8>:
  gNumVCs.118_6 = gNumVCs;
  if (_9 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_7 = gNumVCs.118_6 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_16 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_16
  vcEnd_17 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_17

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_10(3), vcBegin_12(5), vcBegin_14(7), 0(9), vcBegin_16(10)>
  # vcEnd_2 = PHI <vcEnd_11(3), vcEnd_13(5), vcEnd_15(7), vcEnd_7(9), vcEnd_17(10)>

  <bb 36>:
  # DEBUG vcEnd => vcEnd_2
  # DEBUG vcBegin => vcBegin_1
  _18 = f_8(D)->vc;
  _69 = vcEnd_2 < _18;
  _70 = vcBegin_1 > _18;
  _96 = _69 | _70;
  if (_96 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _85 = _18 >= 0;
  if (inject_19(D) <= _85)
    goto <bb 13>;
  else
    goto <bb 35>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "networks/flatfly_onchip.cpp", 589, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_19(D) != 0)
    goto <bb 35>;
  else
    goto <bb 15>;

  <bb 15>:
  _21 = f_8(D)->dest;
  # DEBUG dest => _21
  _xcount.146_25 = _xcount;
  _xrouter.147_22 = _xrouter;
  _33 = _xrouter.147_22 * _xcount.146_25;
  _34 = _21 % _33;
  horizontal_35 = _34 / _xrouter.147_22;
  # DEBUG horizontal => horizontal_35
  horizontal_rem_36 = _34 % _xrouter.147_22;
  # DEBUG horizontal_rem => horizontal_rem_36
  _37 = _21 / _33;
  _yrouter.148_38 = _yrouter;
  vertical_39 = _37 / _yrouter.148_38;
  # DEBUG vertical => vertical_39
  vertical_rem_40 = _37 % _yrouter.148_38;
  # DEBUG vertical_rem => vertical_rem_40
  _41 = _xcount.146_25 * vertical_39;
  _42 = horizontal_35 + _41;
  gC.149_43 = gC;
  _44 = _42 * gC.149_43;
  _45 = _xrouter.147_22 * vertical_rem_40;
  _46 = _44 + _45;
  dest_47 = horizontal_rem_36 + _46;
  # DEBUG dest => dest_47
  # DEBUG dest => NULL
  targetr_23 = dest_47 / gC.149_43;
  # DEBUG targetr => targetr_23
  rID_32 = MEM[(int *)r_24(D) + 96B];
  # DEBUG D#19 => r_24(D)
  # DEBUG this => D#19
  if (targetr_23 == rID_32)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  out_port_26 = dest_47 % gC.149_43;
  # DEBUG out_port => out_port_26
  goto <bb 35>;

  <bb 17>:
  # DEBUG D#19 => r_24(D)
  # DEBUG this => D#19
  # DEBUG dest => dest_47
  # DEBUG rID => rID_32
  # DEBUG dest_rID => targetr_23
  _dim_50 = gN;
  # DEBUG _dim => _dim_50
  # DEBUG output => -1
  # DEBUG d => 0
  # DEBUG dest_rID => targetr_23
  # DEBUG rID => rID_32
  if (_dim_50 <= 0)
    goto <bb 27>;
  else
    goto <bb 18>;

  <bb 18>:
  gK.145_51 = gK;
  dID_110 = targetr_23 % gK.145_51;
  # DEBUG dID => dID_110
  sID_112 = rID_32 % gK.145_51;
  # DEBUG sID => sID_112
  if (dID_110 != sID_112)
    goto <bb 22>;
  else
    goto <bb 25>;

  <bb 19>:
  dID_55 = targetr_65 % gK.145_51;
  # DEBUG dID => dID_55
  sID_57 = rID_66 % gK.145_51;
  # DEBUG sID => sID_57
  if (dID_55 != sID_57)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 26>;

  <bb 21>:
  # dID_107 = PHI <dID_55(19)>
  # sID_100 = PHI <sID_57(19)>
  # d_97 = PHI <d_67(19)>
  pretmp_28 = gK.145_51 + -1;
  pretmp_113 = pretmp_28 * d_97;

  <bb 22>:
  # dID_105 = PHI <dID_107(21), dID_110(18)>
  # sID_104 = PHI <sID_100(21), sID_112(18)>
  # prephitmp_114 = PHI <pretmp_113(21), 0(18)>

  <bb 34>:
  _60 = gC.149_43 + prephitmp_114;
  output_61 = _60 + -1;
  # DEBUG output => output_61
  if (sID_104 < dID_105)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  out_port_62 = output_61 + dID_105;
  # DEBUG output => out_port_62
  goto <bb 33>;

  <bb 24>:
  _63 = dID_105 + 1;
  out_port_64 = output_61 + _63;
  # DEBUG output => out_port_64
  goto <bb 33>;

  <bb 25>:

  <bb 26>:
  # d_109 = PHI <0(25), d_67(20)>
  # targetr_106 = PHI <targetr_23(25), targetr_65(20)>
  # rID_103 = PHI <rID_32(25), rID_66(20)>
  # DEBUG d => d_109
  # DEBUG dest_rID => targetr_106
  # DEBUG rID => rID_103
  # DEBUG dID => dID_110
  # DEBUG sID => dID_110
  targetr_65 = targetr_106 / gK.145_51;
  # DEBUG dest_rID => targetr_65
  rID_66 = rID_103 / gK.145_51;
  # DEBUG rID => rID_66
  d_67 = d_109 + 1;
  # DEBUG d => d_67
  # DEBUG d => d_67
  # DEBUG dest_rID => targetr_65
  # DEBUG rID => rID_66
  if (_dim_50 <= d_67)
    goto <bb 27>;
  else
    goto <bb 19>;

  <bb 27>:
  # DEBUG D#24 => dest_47
  # DEBUG D#25 => rID_32
  # DEBUG D#26 => D#25
  # DEBUG rID => D#26
  # DEBUG D#27 => D#24
  # DEBUG dest => D#27
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found "
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR ---- FLATFLY_OUTPORT function : output not found ", 56);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _27 = cout._vptr.basic_ostream;
  _72 = MEM[(long int *)_27 + -24B];
  _73 = (sizetype) _72;
  _74 = &cout + _73;
  # DEBUG this => _74
  # DEBUG __c => 10
  _79 = MEM[(const struct basic_ios *)_74]._M_ctype;
  # DEBUG __f => _79
  if (_79 == 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  std::__throw_bad_cast ();

  <bb 29>:
  # DEBUG this => _79
  # DEBUG __c => 10
  _80 = MEM[(const struct ctype *)_79]._M_widen_ok;
  if (_80 != 0)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  _83 = MEM[(const struct ctype *)_79]._M_widen[10];
  goto <bb 32>;

  <bb 31>:
  # DEBUG this => _79
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_79);
  _88 = MEM[(const struct ctype *)_79].D.20312._vptr.facet;
  _89 = MEM[(int (*__vtbl_ptr_type) () *)_88 + 48B];
  _91 = OBJ_TYPE_REF(_89;(const struct ctype)_79->6) (_79, 10);

  <bb 32>:
  # _86 = PHI <_83(30), _91(31)>
  _76 = (int) _86;
  _77 = std::basic_ostream<char>::put (&cout, _76);
  # DEBUG __os => _77
  std::basic_ostream<char>::flush (_77);
  exit (-1);

  <bb 33>:
  # out_port_111 = PHI <out_port_64(24), out_port_62(23)>

  <bb 35>:
  # out_port_3 = PHI <out_port_111(33), out_port_26(16), -1(12), -1(14)>
  # DEBUG out_port => out_port_3
  OutputSet::Clear (outputs_29(D));
  OutputSet::AddRange (outputs_29(D), out_port_3, vcBegin_1, vcEnd_2, 0);
  return;

}



;; Function void xyyx_flatfly(const Router*, const Flit*, int, OutputSet*, bool) (_Z12xyyx_flatflyPK6RouterPK4FlitiP9OutputSetb, funcdef_no=2247, decl_uid=47386, cgraph_uid=671, symbol_order=676)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void xyyx_flatfly(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  char_type D.60180;
  char __c;
  char_type D.60177;
  struct basic_ostream & D.60171;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int power;
  int D.60152;
  int rID;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.60142;
  int rID;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  bool x_then_y;
  const int available_vcs;
  int targetr;
  int dest;
  int out_port;
  static const char __PRETTY_FUNCTION__[69] = "void xyyx_flatfly(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  int gNumVCs.105_10;
  FlitType _13;
  int _22;
  int _25;
  int _26;
  int _xrouter.147_29;
  int _31;
  int _32;
  int _36;
  int _xcount.146_38;
  bool _40;
  int (*__vtbl_ptr_type) () * _42;
  const int _49;
  int _52;
  int _55;
  int _yrouter.148_56;
  int _59;
  int _60;
  int gC.149_61;
  int _62;
  int _63;
  int _64;
  long int _66;
  long int _67;
  int _68;
  int gC.144_70;
  int _73;
  int _82;
  int _85;
  bool _91;
  bool _92;
  int _96;
  int gK.110_99;
  int gK.110_105;
  int _106;
  int _107;
  int gC.109_108;
  int _109;
  int _112;
  long int _118;
  sizetype _119;
  struct basic_ios * _120;
  int _122;
  struct basic_ostream & _123;
  const struct __ctype_type * _125;
  char _126;
  char_type _129;
  const int pretmp_130;
  char_type _132;
  int (*__vtbl_ptr_type) () * _134;
  int (*__vtbl_ptr_type) () _135;
  int pretmp_136;
  char_type _137;
  bool _147;
  int prephitmp_155;
  int gC.144_159;
  int gK.145_178;
  const int prephitmp_179;
  int pretmp_180;
  int prephitmp_181;
  int pretmp_187;
  int pretmp_188;
  int prephitmp_189;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#270 => gNumVCs
  # DEBUG vcEnd => D#270 + -1
  _13 = f_12(D)->type;
  if (_13 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_14 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_14
  vcEnd_15 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_15
  goto <bb 11>;

  <bb 4>:
  if (_13 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_16 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_16
  vcEnd_17 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_17
  goto <bb 11>;

  <bb 6>:
  if (_13 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_18 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_18
  vcEnd_19 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_19
  goto <bb 11>;

  <bb 8>:
  gNumVCs.105_10 = gNumVCs;
  if (_13 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_11 = gNumVCs.105_10 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_20 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_20
  vcEnd_21 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_21

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_14(3), vcBegin_16(5), vcBegin_18(7), 0(9), vcBegin_20(10)>
  # vcEnd_3 = PHI <vcEnd_15(3), vcEnd_17(5), vcEnd_19(7), vcEnd_11(9), vcEnd_21(10)>
  # DEBUG vcEnd => vcEnd_3
  # DEBUG vcBegin => vcBegin_1
  _22 = f_12(D)->vc;
  _91 = vcEnd_3 < _22;
  _92 = vcBegin_1 > _22;
  _40 = _91 | _92;
  if (_40 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _147 = _22 >= 0;
  if (inject_23(D) <= _147)
    goto <bb 13>;
  else
    goto <bb 56>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "networks/flatfly_onchip.cpp", 427, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_23(D) != 0)
    goto <bb 56>;
  else
    goto <bb 15>;

  <bb 15>:
  _25 = f_12(D)->dest;
  # DEBUG dest => _25
  _xcount.146_38 = _xcount;
  _xrouter.147_29 = _xrouter;
  _26 = _xrouter.147_29 * _xcount.146_38;
  _52 = _25 % _26;
  horizontal_53 = _52 / _xrouter.147_29;
  # DEBUG horizontal => horizontal_53
  horizontal_rem_54 = _52 % _xrouter.147_29;
  # DEBUG horizontal_rem => horizontal_rem_54
  _55 = _25 / _26;
  _yrouter.148_56 = _yrouter;
  vertical_57 = _55 / _yrouter.148_56;
  # DEBUG vertical => vertical_57
  vertical_rem_58 = _55 % _yrouter.148_56;
  # DEBUG vertical_rem => vertical_rem_58
  _59 = _xcount.146_38 * vertical_57;
  _60 = horizontal_53 + _59;
  gC.149_61 = gC;
  _62 = _60 * gC.149_61;
  _63 = _xrouter.147_29 * vertical_rem_58;
  _64 = _62 + _63;
  dest_65 = horizontal_rem_54 + _64;
  # DEBUG dest => dest_65
  # DEBUG dest => NULL
  targetr_27 = dest_65 / gC.149_61;
  # DEBUG targetr => targetr_27
  _49 = MEM[(int *)r_28(D) + 96B];
  # DEBUG D#19 => r_28(D)
  # DEBUG this => D#19
  if (targetr_27 == _49)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  out_port_30 = dest_65 % gC.149_61;
  # DEBUG out_port => out_port_30
  goto <bb 56>;

  <bb 17>:
  _31 = vcEnd_3 - vcBegin_1;
  _32 = _31 + 1;
  available_vcs_33 = _32 / 2;
  # DEBUG available_vcs => available_vcs_33
  if (available_vcs_33 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __assert_fail ("available_vcs > 0", "networks/flatfly_onchip.cpp", 447, &__PRETTY_FUNCTION__);

  <bb 19>:
  if (in_channel_34(D) < gC.149_61)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG max => 1
  _66 = ran_next ();
  _67 = _66 % 2;
  _68 = (int) _67;
  # DEBUG x_then_y => _68 > 0
  if (_68 > 0)
    goto <bb 22>;
  else
    goto <bb 38>;

  <bb 21>:
  _36 = vcBegin_1 + available_vcs_33;
  # DEBUG x_then_y => _22 < _36
  if (_22 < _36)
    goto <bb 57>;
  else
    goto <bb 39>;

  <bb 22>:
  rID_50 = MEM[(int *)r_28(D) + 96B];
  # DEBUG D#19 => r_28(D)
  # DEBUG this => D#19
  # DEBUG dest => dest_65
  # DEBUG rID => rID_50
  gC.144_70 = gC;
  dest_rID_71 = dest_65 / gC.144_70;
  # DEBUG dest_rID => dest_rID_71
  # DEBUG D#269 => gN
  # DEBUG _dim => D#269
  # DEBUG output => -1
  if (rID_50 == dest_rID_71)
    goto <bb 25>;
  else
    goto <bb 23>;

  <bb 23>:
  _dim_72 = gN;

  <bb 24>:
  # rID_93 = PHI <rID_50(23), _49(57)>
  # gC.144_159 = PHI <gC.144_70(23), gC.149_61(57)>
  # dest_rID_43 = PHI <dest_rID_71(23), targetr_27(57)>
  # _dim_133 = PHI <_dim_72(23), _dim_174(57)>
  # DEBUG D#19 => r_28(D)
  # DEBUG this => D#19
  # DEBUG dest => dest_65
  # DEBUG _dim => _dim_133
  # DEBUG output => -1
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_43
  # DEBUG rID => rID_93
  if (_dim_133 <= 0)
    goto <bb 35>;
  else
    goto <bb 26>;

  <bb 25>:
  _73 = dest_65 % gC.144_70;
  goto <bb 37>;

  <bb 26>:
  gK.145_178 = gK;
  dID_177 = dest_rID_43 % gK.145_178;
  # DEBUG dID => dID_177
  sID_173 = rID_93 % gK.145_178;
  # DEBUG sID => sID_173
  if (sID_173 != dID_177)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 27>:
  dID_77 = dest_rID_87 % gK.145_178;
  # DEBUG dID => dID_77
  sID_79 = rID_88 % gK.145_178;
  # DEBUG sID => sID_79
  if (dID_77 != sID_79)
    goto <bb 29>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 34>;

  <bb 29>:
  # dID_171 = PHI <dID_77(27)>
  # sID_170 = PHI <sID_79(27)>
  # d_169 = PHI <d_89(27)>
  pretmp_187 = gK.145_178 + -1;
  pretmp_188 = d_169 * pretmp_187;

  <bb 30>:
  # dID_166 = PHI <dID_171(29), dID_177(26)>
  # sID_163 = PHI <sID_170(29), sID_173(26)>
  # prephitmp_189 = PHI <pretmp_188(29), 0(26)>
  _82 = gC.144_159 + prephitmp_189;
  output_83 = _82 + -1;
  # DEBUG output => output_83
  if (sID_163 < dID_166)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  output_84 = output_83 + dID_166;
  # DEBUG output => output_84
  goto <bb 36>;

  <bb 32>:
  _85 = dID_166 + 1;
  output_86 = output_83 + _85;
  # DEBUG output => output_86
  goto <bb 36>;

  <bb 33>:

  <bb 34>:
  # d_175 = PHI <0(33), d_89(28)>
  # dest_rID_167 = PHI <dest_rID_43(33), dest_rID_87(28)>
  # rID_164 = PHI <rID_93(33), rID_88(28)>
  # DEBUG d => d_175
  # DEBUG dest_rID => dest_rID_167
  # DEBUG rID => rID_164
  # DEBUG dID => dID_177
  # DEBUG sID => dID_177
  dest_rID_87 = dest_rID_167 / gK.145_178;
  # DEBUG dest_rID => dest_rID_87
  rID_88 = rID_164 / gK.145_178;
  # DEBUG rID => rID_88
  d_89 = d_175 + 1;
  # DEBUG d => d_89
  # DEBUG d => d_89
  # DEBUG dest_rID => dest_rID_87
  # DEBUG rID => rID_88
  if (d_89 >= _dim_133)
    goto <bb 35>;
  else
    goto <bb 27>;

  <bb 35>:
  # DEBUG D#24 => dest_65
  # DEBUG D#25 => rID_93
  _Z15flatfly_outportii.part.17 ();

  <bb 36>:
  # out_port_172 = PHI <output_86(32), output_84(31)>

  <bb 37>:
  # out_port_90 = PHI <out_port_172(36), _73(25)>
  # DEBUG out_port => NULL
  vcEnd_41 = vcEnd_3 - available_vcs_33;
  # DEBUG vcEnd => vcEnd_41
  goto <bb 56>;

  <bb 38>:
  pretmp_136 = gC;
  pretmp_130 = MEM[(int *)r_28(D) + 96B];
  pretmp_180 = dest_65 / pretmp_136;

  <bb 39>:
  # prephitmp_155 = PHI <pretmp_136(38), gC.149_61(21)>
  # prephitmp_179 = PHI <pretmp_130(38), _49(21)>
  # prephitmp_181 = PHI <pretmp_180(38), targetr_27(21)>
  # DEBUG D#267 => MEM[(int *)r_28(D) + 96B]
  # DEBUG D#19 => r_28(D)
  # DEBUG this => D#19
  # DEBUG dest => dest_65
  # DEBUG rID => D#267
  # DEBUG D#266 => gC
  # DEBUG D#265 => dest_65 / D#266
  # DEBUG dest_rID => D#265
  # DEBUG D#268 => gN
  # DEBUG _dim => D#268
  # DEBUG output => -1
  if (prephitmp_179 == prephitmp_181)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  _96 = dest_65 % prephitmp_155;
  goto <bb 55>;

  <bb 41>:
  _dim_95 = gN;
  # DEBUG D#19 => r_28(D)
  # DEBUG this => D#19
  # DEBUG dest => dest_65
  # DEBUG rID => D#267
  # DEBUG dest_rID => D#265
  # DEBUG _dim => D#268
  # DEBUG output => -1
  d_97 = _dim_95 + -1;
  # DEBUG d => d_97
  # DEBUG d => d_97
  # DEBUG dest_rID => D#265
  # DEBUG rID => D#267
  if (d_97 < 0)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#20 => dest_65
  # DEBUG D#21 => D#267
  # DEBUG D#22 => D#21
  # DEBUG rID => D#22
  # DEBUG D#23 => D#20
  # DEBUG dest => D#23
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found yx"
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found yx"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR ---- FLATFLY_OUTPORT function : output not found yx", 58);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _42 = cout._vptr.basic_ostream;
  _118 = MEM[(long int *)_42 + -24B];
  _119 = (sizetype) _118;
  _120 = &cout + _119;
  # DEBUG this => _120
  # DEBUG __c => 10
  _125 = MEM[(const struct basic_ios *)_120]._M_ctype;
  # DEBUG __f => _125
  if (_125 == 0B)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 43>:

  <bb 44>:
  # d_162 = PHI <d_97(43), d_116(49)>
  # dest_rID_158 = PHI <prephitmp_181(43), dest_rID_114(49)>
  # rID_128 = PHI <prephitmp_179(43), rID_115(49)>
  # DEBUG d => d_162
  # DEBUG dest_rID => dest_rID_158
  # DEBUG rID => rID_128
  gK.110_99 = gK;
  power_100 = powi (gK.110_99, d_162);
  # DEBUG power => power_100
  dID_102 = dest_rID_158 / power_100;
  # DEBUG dID => dID_102
  sID_104 = rID_128 / power_100;
  # DEBUG sID => sID_104
  if (dID_102 != sID_104)
    goto <bb 45>;
  else
    goto <bb 48>;

  <bb 45>:
  # dID_168 = PHI <dID_102(44)>
  # sID_165 = PHI <sID_104(44)>
  # d_154 = PHI <d_162(44)>
  gK.110_105 = gK;
  _106 = gK.110_105 + -1;
  _107 = _106 * d_154;
  gC.109_108 = gC;
  _109 = _107 + gC.109_108;
  output_110 = _109 + -1;
  # DEBUG output => output_110
  if (dID_168 > sID_165)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  output_111 = dID_168 + output_110;
  # DEBUG output => output_111
  goto <bb 55>;

  <bb 47>:
  _112 = dID_168 + 1;
  output_113 = output_110 + _112;
  # DEBUG output => output_113
  goto <bb 55>;

  <bb 48>:
  dest_rID_114 = dest_rID_158 % power_100;
  # DEBUG dest_rID => dest_rID_114
  rID_115 = rID_128 % power_100;
  # DEBUG rID => rID_115
  d_116 = d_162 + -1;
  # DEBUG d => d_116
  # DEBUG d => d_116
  # DEBUG dest_rID => dest_rID_114
  # DEBUG rID => rID_115
  if (d_116 < 0)
    goto <bb 42>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 44>;

  <bb 50>:
  std::__throw_bad_cast ();

  <bb 51>:
  # DEBUG this => _125
  # DEBUG __c => 10
  _126 = MEM[(const struct ctype *)_125]._M_widen_ok;
  if (_126 != 0)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  _129 = MEM[(const struct ctype *)_125]._M_widen[10];
  goto <bb 54>;

  <bb 53>:
  # DEBUG this => _125
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_125);
  _134 = MEM[(const struct ctype *)_125].D.20312._vptr.facet;
  _135 = MEM[(int (*__vtbl_ptr_type) () *)_134 + 48B];
  _137 = OBJ_TYPE_REF(_135;(const struct ctype)_125->6) (_125, 10);

  <bb 54>:
  # _132 = PHI <_129(52), _137(53)>
  _122 = (int) _132;
  _123 = std::basic_ostream<char>::put (&cout, _122);
  # DEBUG __os => _123
  std::basic_ostream<char>::flush (_123);
  exit (-1);

  <bb 55>:
  # out_port_117 = PHI <_96(40), output_111(46), output_113(47)>
  # DEBUG out_port => NULL
  vcBegin_44 = vcBegin_1 + available_vcs_33;
  # DEBUG vcBegin => vcBegin_44

  <bb 56>:
  # vcBegin_2 = PHI <vcBegin_1(14), vcBegin_1(16), vcBegin_1(37), vcBegin_44(55), vcBegin_1(12)>
  # vcEnd_4 = PHI <vcEnd_3(14), vcEnd_3(16), vcEnd_41(37), vcEnd_3(55), vcEnd_3(12)>
  # out_port_5 = PHI <-1(14), out_port_30(16), out_port_90(37), out_port_117(55), -1(12)>
  # DEBUG out_port => out_port_5
  # DEBUG vcEnd => vcEnd_4
  # DEBUG vcBegin => vcBegin_2
  OutputSet::Clear (outputs_46(D));
  OutputSet::AddRange (outputs_46(D), out_port_5, vcBegin_2, vcEnd_4, 0);
  return;

  <bb 57>:
  # DEBUG D#19 => r_28(D)
  # DEBUG this => D#19
  # DEBUG dest => dest_65
  # DEBUG rID => _49
  # DEBUG dest_rID => targetr_27
  _dim_174 = gN;
  # DEBUG _dim => _dim_174
  # DEBUG output => -1
  goto <bb 24>;

}



;; Function void valiant_flatfly(const Router*, const Flit*, int, OutputSet*, bool) (_Z15valiant_flatflyPK6RouterPK4FlitiP9OutputSetb, funcdef_no=2249, decl_uid=47416, cgraph_uid=673, symbol_order=678)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void valiant_flatfly(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  char_type D.60250;
  char __c;
  char_type D.60247;
  struct basic_ostream & D.60241;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.60223;
  int rID;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.60214;
  int rID;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  const int available_vcs;
  int dest;
  int intm;
  int out_port;
  static const char __PRETTY_FUNCTION__[72] = "void valiant_flatfly(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  int gNumVCs.111_13;
  FlitType _16;
  int _25;
  int gC.112_28;
  int gN.113_31;
  int gK.114_32;
  int _34;
  int gC.112_35;
  int _36;
  int _39;
  int _42;
  int _43;
  long int _44;
  long int _47;
  bool _48;
  int (*__vtbl_ptr_type) () * _50;
  long int _55;
  int _56;
  int _57;
  const int _67;
  int _71;
  int _74;
  int _77;
  int _78;
  int _79;
  int _80;
  int _81;
  int _xcount.146_83;
  int _xrouter.147_84;
  int _85;
  int _86;
  int _89;
  int _yrouter.148_90;
  int _93;
  int _94;
  int _96;
  int _97;
  int _98;
  int _104;
  int _113;
  int _116;
  bool _121;
  int gK.145_123;
  int _136;
  int _139;
  bool _144;
  long int _148;
  sizetype _149;
  struct basic_ios * _150;
  int _152;
  struct basic_ostream & _153;
  const struct __ctype_type * _155;
  char _156;
  char_type _159;
  char_type _162;
  int (*__vtbl_ptr_type) () * _164;
  int (*__vtbl_ptr_type) () _165;
  char_type _167;
  bool _170;
  int _175;
  int _185;
  int gK.145_194;
  int pretmp_251;
  int prephitmp_252;
  int pretmp_253;
  int prephitmp_254;
  int pretmp_258;
  int prephitmp_259;
  int prephitmp_260;
  const int pretmp_261;
  const int prephitmp_262;
  int pretmp_268;
  int pretmp_269;
  int prephitmp_270;
  int pretmp_276;
  int pretmp_277;
  int prephitmp_278;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#286 => gNumVCs
  # DEBUG vcEnd => D#286 + -1
  _16 = f_15(D)->type;
  if (_16 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_17 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_17
  vcEnd_18 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_18
  goto <bb 11>;

  <bb 4>:
  if (_16 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_19 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_19
  vcEnd_20 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_20
  goto <bb 11>;

  <bb 6>:
  if (_16 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_21 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_21
  vcEnd_22 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_22
  goto <bb 11>;

  <bb 8>:
  gNumVCs.111_13 = gNumVCs;
  if (_16 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_14 = gNumVCs.111_13 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_23 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_23
  vcEnd_24 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_24

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_17(3), vcBegin_19(5), vcBegin_21(7), 0(9), vcBegin_23(10)>
  # vcEnd_3 = PHI <vcEnd_18(3), vcEnd_20(5), vcEnd_22(7), vcEnd_14(9), vcEnd_24(10)>

  <bb 68>:
  # DEBUG vcEnd => vcEnd_3
  # DEBUG vcBegin => vcBegin_1
  _25 = f_15(D)->vc;
  _121 = vcEnd_3 < _25;
  _144 = vcBegin_1 > _25;
  _170 = _121 | _144;
  if (_170 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _48 = _25 >= 0;
  if (inject_26(D) <= _48)
    goto <bb 13>;
  else
    goto <bb 58>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "networks/flatfly_onchip.cpp", 520, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_26(D) != 0)
    goto <bb 58>;
  else
    goto <bb 15>;

  <bb 15>:
  gC.112_28 = gC;
  if (gC.112_28 > in_channel_29(D))
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  pretmp_251 = f_15(D)->intm;
  goto <bb 18>;

  <bb 17>:
  f_15(D)->ph = 0;
  gN.113_31 = gN;
  gK.114_32 = gK;
  _34 = powi (gK.114_32, gN.113_31);
  gC.112_35 = gC;
  _36 = _34 * gC.112_35;
  # DEBUG max => _36 + -1
  _55 = ran_next ();
  _47 = (long int) _36;
  _44 = _55 % _47;
  _42 = (int) _44;
  f_15(D)->intm = _42;
  pretmp_253 = gC;

  <bb 18>:
  # prephitmp_252 = PHI <pretmp_251(16), _42(17)>
  # prephitmp_254 = PHI <gC.112_28(16), pretmp_253(17)>
  # DEBUG D#284 => f_15(D)->intm
  # DEBUG dest => D#284
  _xcount.146_83 = _xcount;
  _xrouter.147_84 = _xrouter;
  _85 = _xcount.146_83 * _xrouter.147_84;
  _86 = prephitmp_252 % _85;
  horizontal_87 = _86 / _xrouter.147_84;
  # DEBUG horizontal => horizontal_87
  horizontal_rem_88 = _86 % _xrouter.147_84;
  # DEBUG horizontal_rem => horizontal_rem_88
  _89 = prephitmp_252 / _85;
  _yrouter.148_90 = _yrouter;
  vertical_91 = _89 / _yrouter.148_90;
  # DEBUG vertical => vertical_91
  vertical_rem_92 = _89 % _yrouter.148_90;
  # DEBUG vertical_rem => vertical_rem_92
  _93 = _xcount.146_83 * vertical_91;
  _94 = horizontal_87 + _93;
  # DEBUG D#283 => gC
  _96 = _94 * prephitmp_254;
  _97 = _xrouter.147_84 * vertical_rem_92;
  _98 = _96 + _97;
  intm_99 = horizontal_rem_88 + _98;
  # DEBUG dest => intm_99
  # DEBUG intm => NULL
  _39 = f_15(D)->dest;
  # DEBUG dest => _39
  _71 = _39 % _85;
  horizontal_72 = _71 / _xrouter.147_84;
  # DEBUG horizontal => horizontal_72
  horizontal_rem_73 = _71 % _xrouter.147_84;
  # DEBUG horizontal_rem => horizontal_rem_73
  _74 = _39 / _85;
  vertical_75 = _74 / _yrouter.148_90;
  # DEBUG vertical => vertical_75
  vertical_rem_76 = _74 % _yrouter.148_90;
  # DEBUG vertical_rem => vertical_rem_76
  _77 = vertical_75 * _xcount.146_83;
  _78 = horizontal_72 + _77;
  _79 = _78 * prephitmp_254;
  _80 = vertical_rem_76 * _xrouter.147_84;
  _81 = _79 + _80;
  dest_82 = horizontal_rem_73 + _81;
  # DEBUG dest => dest_82
  # DEBUG dest => NULL
  dest_rID_40 = intm_99 / prephitmp_254;
  _67 = MEM[(int *)r_41(D) + 96B];
  # DEBUG D#19 => r_41(D)
  # DEBUG this => D#19
  if (dest_rID_40 == _67)
    goto <bb 59>;
  else
    goto <bb 19>;

  <bb 19>:
  _43 = dest_82 / prephitmp_254;
  # DEBUG D#19 => r_41(D)
  # DEBUG this => D#19
  if (_43 == _67)
    goto <bb 60>;
  else
    goto <bb 62>;

  <bb 20>:
  gK.145_123 = gK;
  dID_101 = dest_rID_40 % gK.145_123;
  # DEBUG dID => dID_101
  sID_154 = _67 % gK.145_123;
  # DEBUG sID => sID_154
  if (dID_101 != sID_154)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 21>:
  dID_108 = dest_rID_118 % gK.145_123;
  # DEBUG dID => dID_108
  sID_110 = rID_119 % gK.145_123;
  # DEBUG sID => sID_110
  if (dID_108 != sID_110)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  goto <bb 28>;

  <bb 23>:
  # dID_267 = PHI <dID_108(21)>
  # sID_266 = PHI <sID_110(21)>
  # d_265 = PHI <d_120(21)>
  pretmp_276 = gK.145_123 + -1;
  pretmp_277 = d_265 * pretmp_276;

  <bb 24>:
  # dID_190 = PHI <dID_267(23), dID_101(20)>
  # sID_191 = PHI <sID_266(23), sID_154(20)>
  # prephitmp_278 = PHI <pretmp_277(23), 0(20)>

  <bb 64>:
  _113 = prephitmp_254 + prephitmp_278;
  output_114 = _113 + -1;
  # DEBUG output => output_114
  if (dID_190 > sID_191)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  out_port_115 = output_114 + dID_190;
  # DEBUG output => out_port_115
  goto <bb 50>;

  <bb 26>:
  _116 = dID_190 + 1;
  out_port_117 = output_114 + _116;
  # DEBUG output => out_port_117
  goto <bb 50>;

  <bb 27>:

  <bb 28>:
  # d_202 = PHI <0(27), d_120(22)>
  # dest_rID_188 = PHI <dest_rID_40(27), dest_rID_118(22)>
  # rID_192 = PHI <_67(27), rID_119(22)>
  # DEBUG d => d_202
  # DEBUG dest_rID => dest_rID_188
  # DEBUG rID => rID_192
  # DEBUG dID => dID_101
  # DEBUG sID => dID_101
  dest_rID_118 = dest_rID_188 / gK.145_123;
  # DEBUG dest_rID => dest_rID_118
  rID_119 = rID_192 / gK.145_123;
  # DEBUG rID => rID_119
  d_120 = d_202 + 1;
  # DEBUG d => d_120
  # DEBUG d => d_120
  # DEBUG dest_rID => dest_rID_118
  # DEBUG rID => rID_119
  if (d_120 >= _dim_193)
    goto <bb 29>;
  else
    goto <bb 21>;

  <bb 29>:
  # DEBUG D#24 => intm_99
  # DEBUG D#25 => _67
  _Z15flatfly_outportii.part.17 ();

  <bb 30>:
  if (_185 != 1)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  __assert_fail ("f->ph == 1", "networks/flatfly_onchip.cpp", 545, &__PRETTY_FUNCTION__);

  <bb 32>:
  # _104 = PHI <_185(30), 1(65)>
  # prephitmp_260 = PHI <_43(30), prephitmp_259(65)>
  # prephitmp_262 = PHI <_67(30), pretmp_261(65)>
  # DEBUG D#282 => MEM[(int *)r_41(D) + 96B]
  # DEBUG D#19 => r_41(D)
  # DEBUG this => D#19
  # DEBUG dest => dest_82
  # DEBUG rID => D#282
  # DEBUG D#281 => dest_82 / D#283
  # DEBUG dest_rID => D#281
  # DEBUG D#285 => gN
  # DEBUG _dim => D#285
  # DEBUG output => -1
  if (prephitmp_260 == prephitmp_262)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  _dim_126 = gN;
  # DEBUG d => 0
  # DEBUG dest_rID => D#281
  # DEBUG rID => D#282
  if (_dim_126 <= 0)
    goto <bb 44>;
  else
    goto <bb 35>;

  <bb 34>:
  out_port_127 = dest_82 % prephitmp_254;
  # DEBUG out_port => out_port_127
  # DEBUG D#19 => r_41(D)
  # DEBUG this => D#19
  goto <bb 58>;

  <bb 35>:
  gK.145_194 = gK;
  dID_205 = prephitmp_260 % gK.145_194;
  # DEBUG dID => dID_205
  sID_204 = prephitmp_262 % gK.145_194;
  # DEBUG sID => sID_204
  if (sID_204 != dID_205)
    goto <bb 39>;
  else
    goto <bb 42>;

  <bb 36>:
  dID_131 = dest_rID_141 % gK.145_194;
  # DEBUG dID => dID_131
  sID_133 = rID_142 % gK.145_194;
  # DEBUG sID => sID_133
  if (dID_131 != sID_133)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 37>:
  goto <bb 43>;

  <bb 38>:
  # dID_264 = PHI <dID_131(36)>
  # sID_257 = PHI <sID_133(36)>
  # d_256 = PHI <d_143(36)>
  pretmp_268 = gK.145_194 + -1;
  pretmp_269 = d_256 * pretmp_268;

  <bb 39>:
  # dID_189 = PHI <dID_264(38), dID_205(35)>
  # sID_184 = PHI <sID_257(38), sID_204(35)>
  # prephitmp_270 = PHI <pretmp_269(38), 0(35)>

  <bb 66>:
  _136 = prephitmp_254 + prephitmp_270;
  output_137 = _136 + -1;
  # DEBUG output => output_137
  if (sID_184 < dID_189)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  out_port_138 = output_137 + dID_189;
  # DEBUG output => out_port_138
  goto <bb 63>;

  <bb 41>:
  _139 = dID_189 + 1;
  out_port_140 = output_137 + _139;
  # DEBUG output => out_port_140
  goto <bb 63>;

  <bb 42>:

  <bb 43>:
  # d_200 = PHI <0(42), d_143(37)>
  # dest_rID_182 = PHI <prephitmp_260(42), dest_rID_141(37)>
  # rID_196 = PHI <prephitmp_262(42), rID_142(37)>
  # DEBUG d => d_200
  # DEBUG dest_rID => dest_rID_182
  # DEBUG rID => rID_196
  # DEBUG dID => dID_205
  # DEBUG sID => dID_205
  dest_rID_141 = dest_rID_182 / gK.145_194;
  # DEBUG dest_rID => dest_rID_141
  rID_142 = rID_196 / gK.145_194;
  # DEBUG rID => rID_142
  d_143 = d_200 + 1;
  # DEBUG d => d_143
  # DEBUG d => d_143
  # DEBUG dest_rID => dest_rID_141
  # DEBUG rID => rID_142
  if (_dim_126 <= d_143)
    goto <bb 44>;
  else
    goto <bb 36>;

  <bb 44>:
  # DEBUG D#24 => dest_82
  # DEBUG D#25 => D#282
  # DEBUG D#26 => D#25
  # DEBUG rID => D#26
  # DEBUG D#27 => D#24
  # DEBUG dest => D#27
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found "
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR ---- FLATFLY_OUTPORT function : output not found ", 56);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _50 = cout._vptr.basic_ostream;
  _148 = MEM[(long int *)_50 + -24B];
  _149 = (sizetype) _148;
  _150 = &cout + _149;
  # DEBUG this => _150
  # DEBUG __c => 10
  _155 = MEM[(const struct basic_ios *)_150]._M_ctype;
  # DEBUG __f => _155
  if (_155 == 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  std::__throw_bad_cast ();

  <bb 46>:
  # DEBUG this => _155
  # DEBUG __c => 10
  _156 = MEM[(const struct ctype *)_155]._M_widen_ok;
  if (_156 != 0)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  _159 = MEM[(const struct ctype *)_155]._M_widen[10];
  goto <bb 49>;

  <bb 48>:
  # DEBUG this => _155
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_155);
  _164 = MEM[(const struct ctype *)_155].D.20312._vptr.facet;
  _165 = MEM[(int (*__vtbl_ptr_type) () *)_164 + 48B];
  _167 = OBJ_TYPE_REF(_165;(const struct ctype)_155->6) (_155, 10);

  <bb 49>:
  # _162 = PHI <_159(47), _167(48)>
  _152 = (int) _162;
  _153 = std::basic_ostream<char>::put (&cout, _152);
  # DEBUG __os => _153
  std::basic_ostream<char>::flush (_153);
  exit (-1);

  <bb 50>:
  # out_port_5 = PHI <out_port_115(25), out_port_117(26)>

  <bb 67>:
  # DEBUG out_port => out_port_5
  # DEBUG D#19 => r_41(D)
  # DEBUG this => D#19
  if (_43 != _67)
    goto <bb 51>;
  else
    goto <bb 58>;

  <bb 51>:
  # out_port_146 = PHI <out_port_5(67), out_port_158(63)>
  # _175 = PHI <_185(67), _104(63)>
  # DEBUG out_port => out_port_146
  # DEBUG D#19 => r_41(D)
  # DEBUG this => D#19
  _56 = vcEnd_3 - vcBegin_1;
  _57 = _56 + 1;
  available_vcs_58 = _57 / 2;
  # DEBUG available_vcs => available_vcs_58
  if (available_vcs_58 <= 0)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  __assert_fail ("available_vcs > 0", "networks/flatfly_onchip.cpp", 553, &__PRETTY_FUNCTION__);

  <bb 53>:
  if (_175 == 0)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  vcEnd_62 = vcEnd_3 - available_vcs_58;
  # DEBUG vcEnd => vcEnd_62
  goto <bb 58>;

  <bb 55>:
  if (_175 != 1)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  __assert_fail ("f->ph == 1", "networks/flatfly_onchip.cpp", 559, &__PRETTY_FUNCTION__);

  <bb 57>:
  vcBegin_60 = vcBegin_1 + available_vcs_58;
  # DEBUG vcBegin => vcBegin_60

  <bb 58>:
  # vcBegin_2 = PHI <vcBegin_1(14), vcBegin_1(67), vcBegin_60(57), vcBegin_1(54), vcBegin_1(12), vcBegin_1(34)>
  # vcEnd_4 = PHI <vcEnd_3(14), vcEnd_3(67), vcEnd_3(57), vcEnd_62(54), vcEnd_3(12), vcEnd_3(34)>
  # out_port_6 = PHI <-1(14), out_port_5(67), out_port_146(57), out_port_146(54), -1(12), out_port_127(34)>
  # DEBUG out_port => out_port_6
  # DEBUG vcEnd => vcEnd_4
  # DEBUG vcBegin => vcBegin_2
  OutputSet::Clear (outputs_64(D));
  OutputSet::AddRange (outputs_64(D), out_port_6, vcBegin_2, vcEnd_4, 0);
  return;

  <bb 59>:
  pretmp_258 = dest_82 / prephitmp_254;

  <bb 60>:
  # prephitmp_259 = PHI <pretmp_258(59), _43(19)>

  <bb 65>:
  f_15(D)->ph = 1;
  pretmp_261 = MEM[(int *)r_41(D) + 96B];
  goto <bb 32>;

  <bb 61>:
  # DEBUG D#19 => r_41(D)
  # DEBUG this => D#19
  # DEBUG dest => intm_99
  # DEBUG rID => _67
  # DEBUG dest_rID => dest_rID_40
  _dim_193 = gN;
  # DEBUG _dim => _dim_193
  # DEBUG output => -1
  # DEBUG D#19 => r_41(D)
  # DEBUG this => D#19
  # DEBUG dest => intm_99
  # DEBUG _dim => _dim_193
  # DEBUG output => -1
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_40
  # DEBUG rID => _67
  if (_dim_193 <= 0)
    goto <bb 29>;
  else
    goto <bb 20>;

  <bb 62>:
  _185 = f_15(D)->ph;
  if (_185 == 0)
    goto <bb 61>;
  else
    goto <bb 30>;

  <bb 63>:
  # out_port_158 = PHI <out_port_140(41), out_port_138(40)>
  # DEBUG out_port => out_port_158
  # DEBUG D#19 => r_41(D)
  # DEBUG this => D#19
  goto <bb 51>;

}



;; Function void ugal_flatfly_onchip(const Router*, const Flit*, int, OutputSet*, bool) (_Z19ugal_flatfly_onchipPK6RouterPK4FlitiP9OutputSetb, funcdef_no=2252, decl_uid=47404, cgraph_uid=676, symbol_order=681)

Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void ugal_flatfly_onchip(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  char_type D.60443;
  char __c;
  char_type D.60440;
  char __c;
  char_type D.60437;
  char_type D.60431;
  char __c;
  char_type D.60428;
  char __c;
  char_type D.60425;
  struct basic_ostream & D.60419;
  struct basic_ostream & D.60416;
  char_type D.60413;
  char __c;
  char_type D.60410;
  struct basic_ostream & D.60404;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.60386;
  int rID;
  char_type D.60377;
  char __c;
  char_type D.60374;
  char __c;
  char_type D.60371;
  struct basic_ostream & D.60365;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.60362;
  int rID;
  int _dim;
  int _dim_size;
  int _ran_dest;
  int d;
  int D.60353;
  int src;
  int dest;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.60343;
  int rID;
  char_type D.60334;
  char __c;
  char_type D.60331;
  char __c;
  char_type D.60328;
  char_type D.60322;
  char __c;
  char_type D.60319;
  char __c;
  char_type D.60316;
  char_type D.60310;
  char __c;
  char_type D.60307;
  char __c;
  char_type D.60304;
  struct basic_ostream & D.60298;
  struct basic_ostream & D.60295;
  struct basic_ostream & D.60292;
  char_type D.60289;
  char __c;
  char_type D.60286;
  char __c;
  char_type D.60283;
  struct basic_ostream & D.60277;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int dest;
  int dist;
  int _dim;
  int src_tmp;
  int dest_tmp;
  int d;
  int src_id;
  int dest_id;
  int dist;
  int src_tmp;
  int dest_tmp;
  int d;
  int src_id;
  int dest_id;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int dest;
  int _dim;
  int src_tmp;
  int dest_tmp;
  int d;
  int src_id;
  int dest_id;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  const int available_vcs;
  int _nonmin_queucnt;
  int _min_queucnt;
  int _nonmin_hop;
  int _min_hop;
  int _ran_intm;
  int tmp_out_port;
  int found;
  int dest;
  int out_port;
  static const char __PRETTY_FUNCTION__[76] = "void ugal_flatfly_onchip(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  long int _7;
  long int _11;
  int gNumVCs.127_27;
  FlitType _30;
  int _39;
  int _42;
  int _43;
  int _45;
  bool gTrace.129_47;
  int _48;
  struct basic_ostream & _50;
  bool gTrace.129_52;
  struct basic_ostream & _54;
  struct basic_ostream & _56;
  int (*__vtbl_ptr_type) () * _57;
  int (*__vtbl_ptr_type) () _58;
  int _60;
  struct basic_ostream & _62;
  int _xcount.146_63;
  int _64;
  int _66;
  int _68;
  int _69;
  int _73;
  int _76;
  int _yrouter.148_78;
  int _79;
  int gK.145_80;
  bool _84;
  int _87;
  struct ostream * gWatchOut.130_88;
  struct basic_ostream & _90;
  const size_type _91;
  int (*__vtbl_ptr_type) () * _93;
  int (*__vtbl_ptr_type) () _94;
  int _97;
  int _99;
  int _100;
  int (*__vtbl_ptr_type) () * _102;
  bool _104;
  int _xrouter.147_105;
  int _107;
  struct ostream * gWatchOut.130_108;
  struct basic_ostream & _110;
  const size_type _111;
  struct basic_ostream & _113;
  int _114;
  int _115;
  int _xcount.146_116;
  int (*__vtbl_ptr_type) () * _117;
  int (*__vtbl_ptr_type) () _118;
  int _121;
  int _122;
  int _123;
  int _xcount.146_124;
  int _130;
  int (*__vtbl_ptr_type) () * _132;
  int _135;
  int _136;
  int gK.131_143;
  int _144;
  int _146;
  int _148;
  bool gTrace.129_149;
  struct basic_ostream & _151;
  struct basic_ostream & _153;
  int gK.131_154;
  int _155;
  int gN.132_156;
  int _157;
  int _158;
  struct basic_ostream & _160;
  int gC.149_168;
  int _169;
  int _170;
  int _171;
  int _xrouter.147_173;
  int _174;
  int _175;
  int _178;
  int _yrouter.148_179;
  int _182;
  int _183;
  int _185;
  int _186;
  int _187;
  long int _194;
  long int _198;
  int _xcount.146_204;
  int _xrouter.147_205;
  int _206;
  int _207;
  int _210;
  int _yrouter.148_211;
  int _214;
  int _215;
  int _217;
  int _218;
  int _219;
  long int _221;
  char * const _222;
  struct basic_ostream & _223;
  int _240;
  int _242;
  int _244;
  int _246;
  int _xcount.146_252;
  int _xrouter.147_253;
  int _254;
  int _255;
  int _258;
  int _yrouter.148_259;
  int _262;
  int _263;
  int gC.149_264;
  int _265;
  int _266;
  int _267;
  long int _269;
  char * const _270;
  struct basic_ostream & _271;
  int _xrouter.147_272;
  int _273;
  int _274;
  int _277;
  int _yrouter.148_278;
  int _281;
  int _282;
  int gC.149_283;
  int _284;
  int _285;
  int _286;
  const struct __ctype_type * _289;
  const struct __ctype_type * _291;
  int (*__vtbl_ptr_type) () * _293;
  int (*__vtbl_ptr_type) () * _295;
  const struct __ctype_type * _304;
  const struct __ctype_type * _306;
  int (*__vtbl_ptr_type) () * _308;
  long int _315;
  int (*__vtbl_ptr_type) () * _317;
  long int _318;
  sizetype _319;
  struct basic_ios * _320;
  struct basic_ostream & _323;
  char _325;
  char_type _328;
  int (*__vtbl_ptr_type) () * _333;
  int (*__vtbl_ptr_type) () _334;
  void * PROF_338;
  char_type _340;
  int (*__vtbl_ptr_type) () * _343;
  long int _344;
  sizetype _345;
  struct basic_ios * _346;
  struct basic_ostream & _349;
  long int _351;
  sizetype _352;
  struct basic_ios * _353;
  struct basic_ostream & _356;
  long int _358;
  sizetype _359;
  struct basic_ios * _360;
  struct basic_ostream & _363;
  char _365;
  char_type _368;
  int _372;
  int (*__vtbl_ptr_type) () * _373;
  int (*__vtbl_ptr_type) () _374;
  bool _377;
  void * PROF_378;
  char_type _380;
  int _382;
  const struct __ctype_type * _383;
  char _384;
  char_type _387;
  int (*__vtbl_ptr_type) () * _392;
  int (*__vtbl_ptr_type) () _393;
  void * PROF_397;
  char_type _399;
  const struct __ctype_type * _402;
  char _403;
  char_type _406;
  int (*__vtbl_ptr_type) () * _411;
  int (*__vtbl_ptr_type) () _412;
  bool _414;
  void * PROF_416;
  char_type _418;
  int gC.144_421;
  int _424;
  int _433;
  int _436;
  int _441;
  bool _446;
  int _454;
  int gC.142_455;
  int gK.143_457;
  int _459;
  int _460;
  int _461;
  int _462;
  long int _465;
  long int _466;
  long int _467;
  int _468;
  int _469;
  int _478;
  int _487;
  int _490;
  int _495;
  long int _499;
  sizetype _500;
  struct basic_ios * _501;
  struct basic_ostream & _504;
  char _506;
  char_type _509;
  int (*__vtbl_ptr_type) () * _514;
  int (*__vtbl_ptr_type) () _515;
  long int _516;
  bool _517;
  void * PROF_519;
  char_type _521;
  int _527;
  int _536;
  int _539;
  long int _548;
  sizetype _549;
  struct basic_ios * _550;
  int _552;
  struct basic_ostream & _553;
  const struct __ctype_type * _555;
  char _556;
  char_type _559;
  char_type _562;
  int (*__vtbl_ptr_type) () * _564;
  int (*__vtbl_ptr_type) () _565;
  char_type _567;
  int (*__vtbl_ptr_type) () * _569;
  long int _570;
  sizetype _571;
  struct basic_ios * _572;
  struct basic_ostream & _575;
  int gK.145_576;
  long int _577;
  sizetype _578;
  struct basic_ios * _579;
  struct basic_ostream & _582;
  char _584;
  char_type _587;
  int (*__vtbl_ptr_type) () * _592;
  int (*__vtbl_ptr_type) () _593;
  void * PROF_597;
  char_type _599;
  const struct __ctype_type * _602;
  char _603;
  char_type _606;
  int (*__vtbl_ptr_type) () * _611;
  int (*__vtbl_ptr_type) () _612;
  void * PROF_616;
  char_type _618;
  int _686;
  int pretmp_748;
  int pretmp_750;
  int prephitmp_751;
  int pretmp_757;
  int pretmp_758;
  int prephitmp_759;
  int pretmp_760;
  int prephitmp_761;
  int pretmp_767;
  int pretmp_768;
  int prephitmp_769;
  int pretmp_772;
  int pretmp_781;
  int pretmp_782;
  int prephitmp_783;
  int pretmp_786;
  int pretmp_789;
  int prephitmp_790;
  int pretmp_792;
  int prephitmp_793;
  int pretmp_794;
  int prephitmp_795;
  int prephitmp_796;
  int pretmp_797;
  int pretmp_798;
  int prephitmp_799;
  int pretmp_800;
  int pretmp_801;
  int prephitmp_802;
  int pretmp_804;
  int pretmp_805;
  int pretmp_806;
  int prephitmp_808;
  int prephitmp_809;
  int pretmp_817;
  int pretmp_818;
  int prephitmp_819;
  int prephitmp_827;
  int pretmp_828;
  int prephitmp_829;
  int pretmp_840;
  int pretmp_841;
  int prephitmp_842;
  int pretmp_843;
  int pretmp_844;
  int prephitmp_845;
  int pretmp_846;
  int pretmp_847;
  int prephitmp_848;
  bool pretmp_849;
  bool prephitmp_850;
  int pretmp_860;
  int pretmp_861;
  int prephitmp_862;
  int prephitmp_864;
  int prephitmp_872;
  int prephitmp_873;
  int pretmp_874;
  int prephitmp_875;
  int prephitmp_876;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#318 => gNumVCs
  # DEBUG vcEnd => D#318 + -1
  _30 = f_29(D)->type;
  if (_30 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_31 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_31
  vcEnd_32 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_32
  goto <bb 11>;

  <bb 4>:
  if (_30 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_33 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_33
  vcEnd_34 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_34
  goto <bb 11>;

  <bb 6>:
  if (_30 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_35 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_35
  vcEnd_36 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_36
  goto <bb 11>;

  <bb 8>:
  gNumVCs.127_27 = gNumVCs;
  if (_30 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_28 = gNumVCs.127_27 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_37 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_37
  vcEnd_38 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_38

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_31(3), vcBegin_33(5), vcBegin_35(7), 0(9), vcBegin_37(10)>
  # vcEnd_4 = PHI <vcEnd_32(3), vcEnd_34(5), vcEnd_36(7), vcEnd_28(9), vcEnd_38(10)>
  # DEBUG vcEnd => vcEnd_4
  # DEBUG vcBegin => vcBegin_1
  _39 = f_29(D)->vc;
  _517 = vcEnd_4 < _39;
  _446 = vcBegin_1 > _39;
  _377 = _446 | _517;
  if (_377 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _414 = _39 >= 0;
  if (inject_40(D) <= _414)
    goto <bb 13>;
  else
    goto <bb 154>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "networks/flatfly_onchip.cpp", 843, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_40(D) != 0)
    goto <bb 154>;
  else
    goto <bb 15>;

  <bb 15>:
  _42 = f_29(D)->dest;
  # DEBUG dest => _42
  _xcount.146_116 = _xcount;
  _xrouter.147_105 = _xrouter;
  # DEBUG D#317 => _xrouter.147_105 * _xcount.146_116
  # DEBUG D#316 => _42 % D#317
  # DEBUG D#315 => D#316 / _xrouter.147_105
  # DEBUG horizontal => D#315
  # DEBUG D#314 => D#316 % _xrouter.147_105
  # DEBUG horizontal_rem => D#314
  # DEBUG D#313 => _42 / D#317
  _yrouter.148_78 = _yrouter;
  # DEBUG D#312 => D#313 / _yrouter.148_78
  # DEBUG vertical => D#312
  # DEBUG D#311 => D#313 % _yrouter.148_78
  # DEBUG vertical_rem => D#311
  # DEBUG D#310 => D#312 * _xcount.146_116
  # DEBUG D#309 => D#310 + D#315
  gC.149_168 = gC;
  # DEBUG D#308 => D#309 * gC.149_168
  # DEBUG D#307 => D#311 * _xrouter.147_105
  # DEBUG D#306 => D#308 + D#307
  # DEBUG D#305 => D#314 + D#306
  # DEBUG dest => D#305
  # DEBUG dest => NULL
  rID_167 = MEM[(int *)r_44(D) + 96B];
  # DEBUG D#19 => r_44(D)
  # DEBUG this => D#19
  # DEBUG rID => NULL
  # DEBUG _concentration => gC.149_168
  # DEBUG debug => 0
  # DEBUG threshold => 2
  if (in_channel_46(D) < gC.149_168)
    goto <bb 16>;
  else
    goto <bb 26>;

  <bb 16>:
  gTrace.129_47 = gTrace;
  if (gTrace.129_47 != 0)
    goto <bb 17>;
  else
    goto <bb 24>;

  <bb 17>:
  _48 = f_29(D)->src;
  # DEBUG __out => &cout
  # DEBUG __s => "New Flit "
  # DEBUG __s => "New Flit "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "New Flit ", 9);
  _50 = std::basic_ostream<char>::operator<< (&cout, _48);
  # DEBUG this => _50
  # DEBUG __pf => endl
  # DEBUG __os => _50
  _317 = _50->_vptr.basic_ostream;
  _318 = MEM[(long int *)_317 + -24B];
  _319 = (sizetype) _318;
  _320 = _50 + _319;
  # DEBUG this => _320
  # DEBUG __c => 10
  _289 = MEM[(const struct basic_ios *)_320]._M_ctype;
  # DEBUG __f => _289
  if (_289 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  std::__throw_bad_cast ();

  <bb 19>:
  # DEBUG this => _289
  # DEBUG __c => 10
  _325 = MEM[(const struct ctype *)_289]._M_widen_ok;
  if (_325 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _328 = MEM[(const struct ctype *)_289]._M_widen[10];
  pretmp_860 = (int) _328;
  goto <bb 23>;

  <bb 21>:
  # DEBUG this => _289
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_289);
  _333 = MEM[(const struct ctype *)_289].D.20312._vptr.facet;
  _334 = MEM[(int (*__vtbl_ptr_type) () *)_333 + 48B];
  PROF_338 = [obj_type_ref] OBJ_TYPE_REF(_334;(const struct ctype)_289->6);
  if (PROF_338 == do_widen)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  _340 = OBJ_TYPE_REF(_334;(const struct ctype)_289->6) (_289, 10);
  pretmp_861 = (int) _340;

  <bb 23>:
  # prephitmp_862 = PHI <pretmp_860(20), 10(21), pretmp_861(22)>
  _323 = std::basic_ostream<char>::put (_50, prephitmp_862);
  # DEBUG __os => _323
  std::basic_ostream<char>::flush (_323);
  pretmp_849 = gTrace;

  <bb 24>:
  # prephitmp_850 = PHI <gTrace.129_47(16), pretmp_849(23)>
  f_29(D)->ph = 0;
  if (prephitmp_850 != 0)
    goto <bb 25>;
  else
    goto <bb 156>;

  <bb 25>:
  # DEBUG load => 0
  # DEBUG __out => &cout
  # DEBUG __s => "Router "
  # DEBUG __s => "Router "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Router ", 7);
  _54 = std::basic_ostream<char>::operator<< (&cout, rID_167);
  # DEBUG this => _54
  # DEBUG __pf => endl
  # DEBUG __os => _54
  _293 = _54->_vptr.basic_ostream;
  _358 = MEM[(long int *)_293 + -24B];
  _359 = (sizetype) _358;
  _360 = _54 + _359;
  # DEBUG this => _360
  # DEBUG __c => 10
  _291 = MEM[(const struct basic_ios *)_360]._M_ctype;
  # DEBUG __f => _291
  if (_291 == 0B)
    goto <bb 18>;
  else
    goto <bb 27>;

  <bb 26>:
  gTrace.129_52 = gTrace;
  if (gTrace.129_52 != 0)
    goto <bb 25>;
  else
    goto <bb 42>;

  <bb 27>:
  # DEBUG this => _291
  # DEBUG __c => 10
  _365 = MEM[(const struct ctype *)_291]._M_widen_ok;
  if (_365 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _368 = MEM[(const struct ctype *)_291]._M_widen[10];
  pretmp_840 = (int) _368;
  goto <bb 31>;

  <bb 29>:
  # DEBUG this => _291
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_291);
  _373 = MEM[(const struct ctype *)_291].D.20312._vptr.facet;
  _374 = MEM[(int (*__vtbl_ptr_type) () *)_373 + 48B];
  PROF_378 = [obj_type_ref] OBJ_TYPE_REF(_374;(const struct ctype)_291->6);
  if (PROF_378 == do_widen)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  _380 = OBJ_TYPE_REF(_374;(const struct ctype)_291->6) (_291, 10);
  pretmp_841 = (int) _380;

  <bb 31>:
  # prephitmp_842 = PHI <pretmp_840(28), 10(29), pretmp_841(30)>
  _363 = std::basic_ostream<char>::put (_54, prephitmp_842);
  # DEBUG __os => _363
  std::basic_ostream<char>::flush (_363);
  # DEBUG __out => &cout
  # DEBUG __s => "Input Channel "
  # DEBUG __s => "Input Channel "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Input Channel ", 14);
  _56 = std::basic_ostream<char>::operator<< (&cout, in_channel_46(D));
  # DEBUG this => _56
  # DEBUG __pf => endl
  # DEBUG __os => _56
  _295 = _56->_vptr.basic_ostream;
  _351 = MEM[(long int *)_295 + -24B];
  _352 = (sizetype) _351;
  _353 = _56 + _352;
  # DEBUG this => _353
  # DEBUG __c => 10
  _383 = MEM[(const struct basic_ios *)_353]._M_ctype;
  # DEBUG __f => _383
  if (_383 == 0B)
    goto <bb 18>;
  else
    goto <bb 32>;

  <bb 32>:
  # DEBUG this => _383
  # DEBUG __c => 10
  _384 = MEM[(const struct ctype *)_383]._M_widen_ok;
  if (_384 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  _387 = MEM[(const struct ctype *)_383]._M_widen[10];
  pretmp_843 = (int) _387;
  goto <bb 36>;

  <bb 34>:
  # DEBUG this => _383
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_383);
  _392 = MEM[(const struct ctype *)_383].D.20312._vptr.facet;
  _393 = MEM[(int (*__vtbl_ptr_type) () *)_392 + 48B];
  PROF_397 = [obj_type_ref] OBJ_TYPE_REF(_393;(const struct ctype)_383->6);
  if (PROF_397 == do_widen)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  _399 = OBJ_TYPE_REF(_393;(const struct ctype)_383->6) (_383, 10);
  pretmp_844 = (int) _399;

  <bb 36>:
  # prephitmp_845 = PHI <pretmp_843(33), 10(34), pretmp_844(35)>
  _356 = std::basic_ostream<char>::put (_56, prephitmp_845);
  # DEBUG __os => _356
  std::basic_ostream<char>::flush (_356);
  _57 = r_44(D)->D.45421.D.36000._vptr.Module;
  _58 = MEM[(int (*__vtbl_ptr_type) () *)_57 + 80B];
  _60 = OBJ_TYPE_REF(_58;(const struct Router)r_44(D)->10) (r_44(D), in_channel_46(D));
  # DEBUG load => _60
  # DEBUG __out => &cout
  # DEBUG __s => "Rload "
  # DEBUG __s => "Rload "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Rload ", 6);
  _62 = std::basic_ostream<char>::operator<< (&cout, _60);
  # DEBUG this => _62
  # DEBUG __pf => endl
  # DEBUG __os => _62
  _343 = _62->_vptr.basic_ostream;
  _344 = MEM[(long int *)_343 + -24B];
  _345 = (sizetype) _344;
  _346 = _62 + _345;
  # DEBUG this => _346
  # DEBUG __c => 10
  _402 = MEM[(const struct basic_ios *)_346]._M_ctype;
  # DEBUG __f => _402
  if (_402 == 0B)
    goto <bb 18>;
  else
    goto <bb 37>;

  <bb 37>:
  # DEBUG this => _402
  # DEBUG __c => 10
  _403 = MEM[(const struct ctype *)_402]._M_widen_ok;
  if (_403 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  _406 = MEM[(const struct ctype *)_402]._M_widen[10];
  pretmp_846 = (int) _406;
  goto <bb 41>;

  <bb 39>:
  # DEBUG this => _402
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_402);
  _411 = MEM[(const struct ctype *)_402].D.20312._vptr.facet;
  _412 = MEM[(int (*__vtbl_ptr_type) () *)_411 + 48B];
  PROF_416 = [obj_type_ref] OBJ_TYPE_REF(_412;(const struct ctype)_402->6);
  if (PROF_416 == do_widen)
    goto <bb 41>;
  else
    goto <bb 40>;

  <bb 40>:
  _418 = OBJ_TYPE_REF(_412;(const struct ctype)_402->6) (_402, 10);
  pretmp_847 = (int) _418;

  <bb 41>:
  # prephitmp_848 = PHI <pretmp_846(38), 10(39), pretmp_847(40)>
  _349 = std::basic_ostream<char>::put (_62, prephitmp_848);
  # DEBUG __os => _349
  std::basic_ostream<char>::flush (_349);
  pretmp_828 = gC;

  <bb 42>:
  # prephitmp_829 = PHI <gC.149_168(26), pretmp_828(41)>
  # DEBUG found => 0
  _64 = f_29(D)->ph;
  if (_64 == 1)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  dest_65 = f_29(D)->intm;
  # DEBUG dest => dest_65
  # DEBUG dest => dest_65
  _460 = rID_167 * gC.149_168;
  if (dest_65 >= _460)
    goto <bb 45>;
  else
    goto <bb 115>;

  <bb 44>:
  # _246 = PHI <_64(42), 0(156)>
  # prephitmp_827 = PHI <_64(42), 0(156)>
  # prephitmp_875 = PHI <prephitmp_829(42), pretmp_874(156)>
  _100 = _xrouter.147_105 * _xcount.146_116;
  _99 = _42 % _100;
  _79 = _42 / _100;
  vertical_rem_74 = _79 % _yrouter.148_78;
  _170 = vertical_rem_74 * _xrouter.147_105;
  vertical_77 = _79 / _yrouter.148_78;
  _45 = vertical_77 * _xcount.146_116;
  horizontal_98 = _99 / _xrouter.147_105;
  _43 = _45 + horizontal_98;
  _169 = _43 * gC.149_168;
  _171 = _169 + _170;
  horizontal_rem_85 = _99 % _xrouter.147_105;
  dest_172 = horizontal_rem_85 + _171;
  # DEBUG dest => D#305
  _66 = rID_167 * gC.149_168;
  if (_66 <= dest_172)
    goto <bb 45>;
  else
    goto <bb 155>;

  <bb 45>:
  # dest_321 = PHI <dest_172(44), dest_65(43)>
  # _242 = PHI <_246(44), _64(43)>
  # _244 = PHI <_66(44), _460(43)>
  # prephitmp_872 = PHI <prephitmp_875(44), prephitmp_829(43)>
  # prephitmp_873 = PHI <prephitmp_827(44), _64(43)>
  _68 = rID_167 + 1;
  _69 = _68 * gC.149_168;
  if (_69 > dest_321)
    goto <bb 46>;
  else
    goto <bb 155>;

  <bb 46>:
  if (_242 == 1)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  f_29(D)->ph = 2;
  _73 = f_29(D)->dest;
  # DEBUG dest => _73
  _xcount.146_63 = _xcount;
  _xrouter.147_173 = _xrouter;
  _174 = _xcount.146_63 * _xrouter.147_173;
  _175 = _73 % _174;
  horizontal_176 = _175 / _xrouter.147_173;
  # DEBUG horizontal => horizontal_176
  horizontal_rem_177 = _175 % _xrouter.147_173;
  # DEBUG horizontal_rem => horizontal_rem_177
  _178 = _73 / _174;
  _yrouter.148_179 = _yrouter;
  vertical_180 = _178 / _yrouter.148_179;
  # DEBUG vertical => vertical_180
  vertical_rem_181 = _178 % _yrouter.148_179;
  # DEBUG vertical_rem => vertical_rem_181
  _182 = _xcount.146_63 * vertical_180;
  _183 = horizontal_176 + _182;
  _185 = _183 * prephitmp_872;
  _186 = _xrouter.147_173 * vertical_rem_181;
  _187 = _185 + _186;
  dest_188 = horizontal_rem_177 + _187;
  # DEBUG dest => dest_188
  # DEBUG dest => NULL
  # DEBUG found => 0
  # DEBUG dest => dest_188
  # DEBUG out_port => out_port_67(D)
  # DEBUG found => 0
  # DEBUG dest => dest_188
  # DEBUG out_port => out_port_67(D)
  goto <bb 115>;

  <bb 48>:
  # DEBUG found => 1
  out_port_71 = dest_321 % prephitmp_872;
  # DEBUG out_port => out_port_71
  # DEBUG found => 1
  # DEBUG dest => dest_321
  # DEBUG out_port => out_port_71
  pretmp_794 = gN;
  goto <bb 140>;

  <bb 49>:
  _76 = f_29(D)->src;
  # DEBUG dest => _76
  _xcount.146_204 = _xcount;
  _xrouter.147_205 = _xrouter;
  _206 = _xcount.146_204 * _xrouter.147_205;
  _207 = _76 % _206;
  horizontal_208 = _207 / _xrouter.147_205;
  # DEBUG horizontal => horizontal_208
  horizontal_rem_209 = _207 % _xrouter.147_205;
  # DEBUG horizontal_rem => horizontal_rem_209
  _210 = _76 / _206;
  _yrouter.148_211 = _yrouter;
  vertical_212 = _210 / _yrouter.148_211;
  # DEBUG vertical => vertical_212
  vertical_rem_213 = _210 % _yrouter.148_211;
  # DEBUG vertical_rem => vertical_rem_213
  _214 = _xcount.146_204 * vertical_212;
  _215 = horizontal_208 + _214;
  # DEBUG D#303 => gC
  _217 = _215 * prephitmp_876;
  _218 = _xrouter.147_205 * vertical_rem_213;
  _219 = _217 + _218;
  dest_220 = horizontal_rem_209 + _219;
  # DEBUG dest => dest_220
  # DEBUG src => NULL
  # DEBUG dest => dest_379
  # DEBUG dist => 0
  _dim_189 = gN;
  # DEBUG _dim => _dim_189
  src_190 = dest_220 / prephitmp_876;
  # DEBUG src_tmp => src_190
  dest_191 = dest_379 / prephitmp_876;
  # DEBUG dest_tmp => dest_191
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_191
  # DEBUG src_tmp => src_190
  # DEBUG dist => 0
  if (_dim_189 <= 0)
    goto <bb 158>;
  else
    goto <bb 50>;

  <bb 50>:
  pretmp_786 = gK;

  <bb 51>:
  # d_417 = PHI <0(50), d_202(54)>
  # src_413 = PHI <src_190(50), src_200(54)>
  # dest_508 = PHI <dest_191(50), dest_201(54)>
  # _min_hop_507 = PHI <0(50), _min_hop_203(54)>
  # DEBUG d => d_417
  # DEBUG dest_tmp => dest_508
  # DEBUG src_tmp => src_413
  # DEBUG dist => _min_hop_507
  src_id_195 = src_413 % pretmp_786;
  # DEBUG src_id => src_id_195
  dest_id_197 = dest_508 % pretmp_786;
  # DEBUG dest_id => dest_id_197
  if (src_id_195 != dest_id_197)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  _min_hop_199 = _min_hop_507 + 1;
  # DEBUG dist => _min_hop_199

  <bb 53>:
  # _min_hop_203 = PHI <_min_hop_507(51), _min_hop_199(52)>
  # DEBUG dist => _min_hop_203
  src_200 = src_413 / pretmp_786;
  # DEBUG src_tmp => src_200
  dest_201 = dest_508 / pretmp_786;
  # DEBUG dest_tmp => dest_201
  d_202 = d_417 + 1;
  # DEBUG d => d_202
  # DEBUG d => d_202
  # DEBUG dest_tmp => dest_201
  # DEBUG src_tmp => src_200
  # DEBUG dist => _min_hop_203
  if (_dim_189 <= d_202)
    goto <bb 157>;
  else
    goto <bb 54>;

  <bb 54>:
  goto <bb 51>;

  <bb 55>:

  <bb 56>:
  # d_419 = PHI <0(157), d_474(55)>
  # src_657 = PHI <src_190(157), src_472(55)>
  # dest_420 = PHI <dest_191(157), dest_473(55)>
  # dest_573 = PHI <dest_13(157), dest_475(55)>
  # prephitmp_790 = PHI <pretmp_789(157), prephitmp_793(55)>
  # DEBUG d => d_419
  # DEBUG _ran_dest => dest_573
  # DEBUG dest => dest_420
  # DEBUG src => src_657
  _454 = powi (prephitmp_790, d_419);
  gC.142_455 = gC;
  _dim_size_456 = _454 * gC.142_455;
  # DEBUG _dim_size => _dim_size_456
  gK.143_457 = gK;
  _459 = src_657 % gK.143_457;
  _461 = dest_420 % gK.143_457;
  if (_459 == _461)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  _462 = _dim_size_456 * _459;
  dest_464 = _462 + dest_573;
  # DEBUG _ran_dest => dest_464
  goto <bb 59>;

  <bb 58>:
  # DEBUG max => gK.143_457 + -1
  _465 = ran_next ();
  _466 = (long int) gK.143_457;
  _467 = _465 % _466;
  _468 = (int) _467;
  _469 = _dim_size_456 * _468;
  dest_470 = _469 + dest_573;
  # DEBUG _ran_dest => dest_470
  pretmp_792 = gK;

  <bb 59>:
  # dest_475 = PHI <dest_464(57), dest_470(58)>
  # prephitmp_793 = PHI <gK.143_457(57), pretmp_792(58)>
  # DEBUG _ran_dest => dest_475
  src_472 = src_657 / prephitmp_793;
  # DEBUG src => src_472
  dest_473 = dest_420 / prephitmp_793;
  # DEBUG dest => dest_473
  d_474 = d_419 + 1;
  # DEBUG d => d_474
  # DEBUG d => d_474
  # DEBUG _ran_dest => dest_475
  # DEBUG dest => dest_473
  # DEBUG src => src_472
  if (_dim_189 <= d_474)
    goto <bb 60>;
  else
    goto <bb 55>;

  <bb 60>:
  # dest_831 = PHI <dest_475(59)>

  <bb 61>:
  # dest_366 = PHI <dest_831(60), dest_513(158)>
  # _min_hop_332 = PHI <_min_hop_837(60), 0(158)>
  # DEBUG _ran_intm => NULL
  # DEBUG dest => dest_379
  # DEBUG rID => rID_167
  gC.144_421 = gC;
  dest_rID_422 = dest_379 / gC.144_421;
  # DEBUG dest_rID => dest_rID_422
  # DEBUG D#304 => gN
  # DEBUG _dim => D#304
  # DEBUG output => -1
  if (rID_167 == dest_rID_422)
    goto <bb 64>;
  else
    goto <bb 62>;

  <bb 62>:
  _dim_423 = gN;
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_422
  # DEBUG rID => rID_167
  if (_dim_423 <= 0)
    goto <bb 63>;
  else
    goto <bb 65>;

  <bb 63>:
  # DEBUG D#24 => dest_379
  # DEBUG D#25 => rID_167
  _Z15flatfly_outportii.part.17 ();

  <bb 64>:
  _424 = dest_379 % gC.144_421;
  goto <bb 74>;

  <bb 65>:
  gK.145_576 = gK;
  dID_505 = dest_rID_422 % gK.145_576;
  # DEBUG dID => dID_505
  sID_19 = rID_167 % gK.145_576;
  # DEBUG sID => sID_19
  if (sID_19 != dID_505)
    goto <bb 69>;
  else
    goto <bb 72>;

  <bb 66>:
  dID_428 = dest_rID_438 % gK.145_576;
  # DEBUG dID => dID_428
  sID_430 = rID_439 % gK.145_576;
  # DEBUG sID => sID_430
  if (dID_428 != sID_430)
    goto <bb 68>;
  else
    goto <bb 67>;

  <bb 67>:
  goto <bb 73>;

  <bb 68>:
  # dID_834 = PHI <dID_428(66)>
  # sID_833 = PHI <sID_430(66)>
  # d_832 = PHI <d_440(66)>
  pretmp_781 = gK.145_576 + -1;
  pretmp_782 = d_832 * pretmp_781;

  <bb 69>:
  # dID_677 = PHI <dID_834(68), dID_505(65)>
  # sID_523 = PHI <sID_833(68), sID_19(65)>
  # prephitmp_783 = PHI <pretmp_782(68), 0(65)>
  _433 = gC.144_421 + prephitmp_783;
  output_434 = _433 + -1;
  # DEBUG output => output_434
  if (sID_523 < dID_677)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  output_435 = output_434 + dID_677;
  # DEBUG output => output_435
  goto <bb 74>;

  <bb 71>:
  _436 = dID_677 + 1;
  output_437 = output_434 + _436;
  # DEBUG output => output_437
  goto <bb 74>;

  <bb 72>:

  <bb 73>:
  # d_405 = PHI <0(72), d_440(67)>
  # dest_rID_580 = PHI <dest_rID_422(72), dest_rID_438(67)>
  # rID_676 = PHI <rID_167(72), rID_439(67)>
  # DEBUG d => d_405
  # DEBUG dest_rID => dest_rID_580
  # DEBUG rID => rID_676
  # DEBUG dID => dID_505
  # DEBUG sID => dID_505
  dest_rID_438 = dest_rID_580 / gK.145_576;
  # DEBUG dest_rID => dest_rID_438
  rID_439 = rID_676 / gK.145_576;
  # DEBUG rID => rID_439
  d_440 = d_405 + 1;
  # DEBUG d => d_440
  # DEBUG d => d_440
  # DEBUG dest_rID => dest_rID_438
  # DEBUG rID => rID_439
  if (_dim_423 <= d_440)
    goto <bb 63>;
  else
    goto <bb 66>;

  <bb 74>:
  # _441 = PHI <_424(64), output_435(70), output_437(71)>
  # DEBUG tmp_out_port => NULL
  _84 = f_29(D)->watch;
  if (_84 != 0)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  # DEBUG D#28 => &r_44(D)->D.45421.D.36000
  # DEBUG this => D#28
  _87 = GetSimTime ();
  gWatchOut.130_88 = gWatchOut;
  _90 = std::basic_ostream<char>::operator<< (gWatchOut.130_88, _87);
  # DEBUG __out => _90
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_90, " | ", 3);
  # DEBUG __os => _90
  # DEBUG __str => NULL
  _91 = MEM[(long unsigned int *)r_44(D) + 48B];
  # DEBUG this => D#1
  _221 = (long int) _91;
  # DEBUG this => NULL
  _222 = MEM[(char * *)r_44(D) + 40B];
  # DEBUG this => D#6
  _223 = std::__ostream_insert<char, std::char_traits<char> > (_90, _222, _221);
  # DEBUG __out => _223
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_223, " | ", 3);
  # DEBUG __out => _223
  # DEBUG __s => " MIN tmp_out_port: "
  # DEBUG __s => " MIN tmp_out_port: "
  std::__ostream_insert<char, std::char_traits<char> > (_223, " MIN tmp_out_port: ", 19);
  std::basic_ostream<char>::operator<< (_223, _441);

  <bb 76>:
  _93 = r_44(D)->D.45421.D.36000._vptr.Module;
  _94 = MEM[(int (*__vtbl_ptr_type) () *)_93 + 72B];
  _min_queucnt_96 = OBJ_TYPE_REF(_94;(const struct Router)r_44(D)->9) (r_44(D), _441);
  # DEBUG _min_queucnt => _min_queucnt_96
  _97 = f_29(D)->src;
  # DEBUG dest => _97
  _xcount.146_252 = _xcount;
  _xrouter.147_253 = _xrouter;
  _254 = _xcount.146_252 * _xrouter.147_253;
  _255 = _97 % _254;
  horizontal_256 = _255 / _xrouter.147_253;
  # DEBUG horizontal => horizontal_256
  horizontal_rem_257 = _255 % _xrouter.147_253;
  # DEBUG horizontal_rem => horizontal_rem_257
  _258 = _97 / _254;
  _yrouter.148_259 = _yrouter;
  vertical_260 = _258 / _yrouter.148_259;
  # DEBUG vertical => vertical_260
  vertical_rem_261 = _258 % _yrouter.148_259;
  # DEBUG vertical_rem => vertical_rem_261
  _262 = _xcount.146_252 * vertical_260;
  _263 = horizontal_256 + _262;
  gC.149_264 = gC;
  _265 = _263 * gC.149_264;
  _266 = _xrouter.147_253 * vertical_rem_261;
  _267 = _265 + _266;
  dest_268 = horizontal_rem_257 + _267;
  # DEBUG dest => dest_268
  # DEBUG src => NULL
  # DEBUG dest => NULL
  # DEBUG dist => 0
  _dim_237 = gN;
  # DEBUG _dim => _dim_237
  src_tmp_238 = dest_268 / gC.149_264;
  # DEBUG src_tmp => src_tmp_238
  dest_rID_239 = dest_366 / gC.149_264;
  # DEBUG dest_tmp => dest_rID_239
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_rID_239
  # DEBUG src_tmp => src_tmp_238
  # DEBUG dist => 0
  if (_dim_237 <= 0)
    goto <bb 160>;
  else
    goto <bb 77>;

  <bb 77>:
  pretmp_772 = gK;

  <bb 78>:
  # d_401 = PHI <0(77), d_250(81)>
  # src_tmp_659 = PHI <src_tmp_238(77), src_tmp_248(81)>
  # dest_rID_400 = PHI <dest_rID_239(77), dest_rID_249(81)>
  # dist_649 = PHI <0(77), dist_251(81)>
  # DEBUG d => d_401
  # DEBUG dest_tmp => dest_rID_400
  # DEBUG src_tmp => src_tmp_659
  # DEBUG dist => dist_649
  src_id_243 = src_tmp_659 % pretmp_772;
  # DEBUG src_id => src_id_243
  dest_id_245 = dest_rID_400 % pretmp_772;
  # DEBUG dest_id => dest_id_245
  if (src_id_243 != dest_id_245)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  dist_247 = dist_649 + 1;
  # DEBUG dist => dist_247

  <bb 80>:
  # dist_251 = PHI <dist_649(78), dist_247(79)>
  # DEBUG dist => dist_251
  src_tmp_248 = src_tmp_659 / pretmp_772;
  # DEBUG src_tmp => src_tmp_248
  dest_rID_249 = dest_rID_400 / pretmp_772;
  # DEBUG dest_tmp => dest_rID_249
  d_250 = d_401 + 1;
  # DEBUG d => d_250
  # DEBUG d => d_250
  # DEBUG dest_tmp => dest_rID_249
  # DEBUG src_tmp => src_tmp_248
  # DEBUG dist => dist_251
  if (_dim_237 <= d_250)
    goto <bb 159>;
  else
    goto <bb 81>;

  <bb 81>:
  goto <bb 78>;

  <bb 82>:

  <bb 83>:
  # d_444 = PHI <0(159), d_235(82)>
  # dest_rID_706 = PHI <dest_rID_239(159), dest_rID_233(82)>
  # dest_tmp_391 = PHI <dest_tmp_162(159), dest_tmp_234(82)>
  # dist_394 = PHI <0(159), dist_236(82)>
  # DEBUG d => d_444
  # DEBUG dest_tmp => dest_tmp_391
  # DEBUG src_tmp => dest_rID_706
  # DEBUG dist => dist_394
  src_id_228 = dest_rID_706 % pretmp_772;
  # DEBUG src_id => src_id_228
  dest_id_230 = dest_tmp_391 % pretmp_772;
  # DEBUG dest_id => dest_id_230
  if (src_id_228 != dest_id_230)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  dist_232 = dist_394 + 1;
  # DEBUG dist => dist_232

  <bb 85>:
  # dist_236 = PHI <dist_394(83), dist_232(84)>
  # DEBUG dist => dist_236
  dest_rID_233 = dest_rID_706 / pretmp_772;
  # DEBUG src_tmp => dest_rID_233
  dest_tmp_234 = dest_tmp_391 / pretmp_772;
  # DEBUG dest_tmp => dest_tmp_234
  d_235 = d_444 + 1;
  # DEBUG d => d_235
  # DEBUG d => d_235
  # DEBUG dest_tmp => dest_tmp_234
  # DEBUG src_tmp => dest_rID_233
  # DEBUG dist => dist_236
  if (d_235 >= _dim_237)
    goto <bb 161>;
  else
    goto <bb 82>;

  <bb 86>:
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_239
  # DEBUG rID => rID_167
  if (_dim_237 <= 0)
    goto <bb 63>;
  else
    goto <bb 88>;

  <bb 87>:
  # _nonmin_hop_545 = PHI <0(160), _nonmin_hop_687(161)>
  _478 = dest_366 % gC.149_264;
  goto <bb 98>;

  <bb 88>:
  pretmp_760 = gK;

  <bb 89>:
  # _nonmin_hop_81 = PHI <0(88), _nonmin_hop_687(161)>
  # prephitmp_761 = PHI <pretmp_760(88), pretmp_772(161)>
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_239
  # DEBUG rID => rID_167
  dID_705 = dest_rID_239 % prephitmp_761;
  # DEBUG dID => dID_705
  sID_608 = rID_167 % prephitmp_761;
  # DEBUG sID => sID_608
  if (sID_608 != dID_705)
    goto <bb 93>;
  else
    goto <bb 96>;

  <bb 90>:
  dID_482 = dest_rID_492 % prephitmp_761;
  # DEBUG dID => dID_482
  sID_484 = rID_493 % prephitmp_761;
  # DEBUG sID => sID_484
  if (dID_482 != sID_484)
    goto <bb 92>;
  else
    goto <bb 91>;

  <bb 91>:
  goto <bb 97>;

  <bb 92>:
  # dID_830 = PHI <dID_482(90)>
  # sID_826 = PHI <sID_484(90)>
  # d_825 = PHI <d_494(90)>
  pretmp_767 = prephitmp_761 + -1;
  pretmp_768 = d_825 * pretmp_767;

  <bb 93>:
  # dID_511 = PHI <dID_830(92), dID_705(89)>
  # sID_589 = PHI <sID_826(92), sID_608(89)>
  # prephitmp_769 = PHI <pretmp_768(92), 0(89)>
  _487 = gC.149_264 + prephitmp_769;
  output_488 = _487 + -1;
  # DEBUG output => output_488
  if (dID_511 > sID_589)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  output_489 = output_488 + dID_511;
  # DEBUG output => output_489
  goto <bb 98>;

  <bb 95>:
  _490 = dID_511 + 1;
  output_491 = output_488 + _490;
  # DEBUG output => output_491
  goto <bb 98>;

  <bb 96>:

  <bb 97>:
  # d_632 = PHI <0(96), d_494(91)>
  # dest_rID_367 = PHI <dest_rID_239(96), dest_rID_492(91)>
  # rID_698 = PHI <rID_167(96), rID_493(91)>
  # DEBUG d => d_632
  # DEBUG dest_rID => dest_rID_367
  # DEBUG rID => rID_698
  # DEBUG dID => dID_705
  # DEBUG sID => dID_705
  dest_rID_492 = dest_rID_367 / prephitmp_761;
  # DEBUG dest_rID => dest_rID_492
  rID_493 = rID_698 / prephitmp_761;
  # DEBUG rID => rID_493
  d_494 = d_632 + 1;
  # DEBUG d => d_494
  # DEBUG d => d_494
  # DEBUG dest_rID => dest_rID_492
  # DEBUG rID => rID_493
  if (_dim_237 <= d_494)
    goto <bb 63>;
  else
    goto <bb 90>;

  <bb 98>:
  # _495 = PHI <_478(87), output_489(94), output_491(95)>
  # _nonmin_hop_329 = PHI <_nonmin_hop_545(87), _nonmin_hop_81(94), _nonmin_hop_81(95)>
  # DEBUG tmp_out_port => NULL
  _104 = f_29(D)->watch;
  if (_104 != 0)
    goto <bb 99>;
  else
    goto <bb 105>;

  <bb 99>:
  # DEBUG D#29 => &r_44(D)->D.45421.D.36000
  # DEBUG this => D#29
  _107 = GetSimTime ();
  gWatchOut.130_108 = gWatchOut;
  _110 = std::basic_ostream<char>::operator<< (gWatchOut.130_108, _107);
  # DEBUG __out => _110
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_110, " | ", 3);
  # DEBUG __os => _110
  # DEBUG __str => NULL
  _111 = MEM[(long unsigned int *)r_44(D) + 48B];
  # DEBUG this => D#1
  _269 = (long int) _111;
  # DEBUG this => NULL
  _270 = MEM[(char * *)r_44(D) + 40B];
  # DEBUG this => D#6
  _271 = std::__ostream_insert<char, std::char_traits<char> > (_110, _270, _269);
  # DEBUG __out => _271
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_271, " | ", 3);
  # DEBUG __out => _271
  # DEBUG __s => " NONMIN tmp_out_port: "
  # DEBUG __s => " NONMIN tmp_out_port: "
  std::__ostream_insert<char, std::char_traits<char> > (_271, " NONMIN tmp_out_port: ", 22);
  _113 = std::basic_ostream<char>::operator<< (_271, _495);
  # DEBUG this => _113
  # DEBUG __pf => endl
  # DEBUG __os => _113
  _102 = _113->_vptr.basic_ostream;
  _499 = MEM[(long int *)_102 + -24B];
  _500 = (sizetype) _499;
  _501 = _113 + _500;
  # DEBUG this => _501
  # DEBUG __c => 10
  _304 = MEM[(const struct basic_ios *)_501]._M_ctype;
  # DEBUG __f => _304
  if (_304 == 0B)
    goto <bb 18>;
  else
    goto <bb 100>;

  <bb 100>:
  # DEBUG this => _304
  # DEBUG __c => 10
  _506 = MEM[(const struct ctype *)_304]._M_widen_ok;
  if (_506 != 0)
    goto <bb 101>;
  else
    goto <bb 102>;

  <bb 101>:
  _509 = MEM[(const struct ctype *)_304]._M_widen[10];
  pretmp_757 = (int) _509;
  goto <bb 104>;

  <bb 102>:
  # DEBUG this => _304
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_304);
  _514 = MEM[(const struct ctype *)_304].D.20312._vptr.facet;
  _515 = MEM[(int (*__vtbl_ptr_type) () *)_514 + 48B];
  PROF_519 = [obj_type_ref] OBJ_TYPE_REF(_515;(const struct ctype)_304->6);
  if (PROF_519 == do_widen)
    goto <bb 104>;
  else
    goto <bb 103>;

  <bb 103>:
  _521 = OBJ_TYPE_REF(_515;(const struct ctype)_304->6) (_304, 10);
  pretmp_758 = (int) _521;

  <bb 104>:
  # prephitmp_759 = PHI <pretmp_757(101), 10(102), pretmp_758(103)>
  _504 = std::basic_ostream<char>::put (_113, prephitmp_759);
  # DEBUG __os => _504
  std::basic_ostream<char>::flush (_504);

  <bb 105>:
  if (_240 <= dest_366)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  _114 = rID_167 + 1;
  _115 = _114 * gC.149_168;
  if (_115 > dest_366)
    goto <bb 163>;
  else
    goto <bb 107>;

  <bb 107>:
  _117 = r_44(D)->D.45421.D.36000._vptr.Module;
  _118 = MEM[(int (*__vtbl_ptr_type) () *)_117 + 72B];
  _nonmin_queucnt_120 = OBJ_TYPE_REF(_118;(const struct Router)r_44(D)->9) (r_44(D), _495);
  # DEBUG _nonmin_queucnt => _nonmin_queucnt_120
  # DEBUG _nonmin_queucnt => _nonmin_queucnt_120
  _121 = _min_queucnt_96 * _min_hop_332;
  _122 = _nonmin_queucnt_120 * _nonmin_hop_329;
  _123 = _122 + 2;
  if (_121 <= _123)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  f_29(D)->ph = 2;
  pretmp_805 = gC;
  goto <bb 115>;

  <bb 109>:
  f_29(D)->ph = 1;
  f_29(D)->intm = dest_366;
  # DEBUG dest => NULL
  if (_240 <= dest_366)
    goto <bb 111>;
  else
    goto <bb 110>;

  <bb 110>:
  pretmp_804 = gC;
  goto <bb 115>;

  <bb 111>:
  pretmp_748 = rID_167 + 1;
  pretmp_750 = gC.149_168 * pretmp_748;

  <bb 112>:
  # prephitmp_751 = PHI <pretmp_750(111), _115(162)>
  # DEBUG dest => NULL
  if (dest_366 < prephitmp_751)
    goto <bb 114>;
  else
    goto <bb 113>;

  <bb 113>:
  pretmp_806 = gC;
  goto <bb 115>;

  <bb 114>:
  f_29(D)->ph = 2;
  _130 = f_29(D)->dest;
  # DEBUG dest => _130
  _xcount.146_124 = _xcount;
  _xrouter.147_272 = _xrouter;
  _273 = _xcount.146_124 * _xrouter.147_272;
  _274 = _130 % _273;
  horizontal_275 = _274 / _xrouter.147_272;
  # DEBUG horizontal => horizontal_275
  horizontal_rem_276 = _274 % _xrouter.147_272;
  # DEBUG horizontal_rem => horizontal_rem_276
  _277 = _130 / _273;
  _yrouter.148_278 = _yrouter;
  vertical_279 = _277 / _yrouter.148_278;
  # DEBUG vertical => vertical_279
  vertical_rem_280 = _277 % _yrouter.148_278;
  # DEBUG vertical_rem => vertical_rem_280
  _281 = _xcount.146_124 * vertical_279;
  _282 = horizontal_275 + _281;
  gC.149_283 = gC;
  _284 = _282 * gC.149_283;
  _285 = _xrouter.147_272 * vertical_rem_280;
  _286 = _284 + _285;
  dest_287 = horizontal_rem_276 + _286;
  # DEBUG dest => dest_287
  # DEBUG dest => NULL

  <bb 115>:
  # dest_12 = PHI <dest_379(155), dest_366(110), dest_379(108), dest_287(114), dest_366(113), dest_65(43), dest_188(47)>
  # prephitmp_808 = PHI <prephitmp_876(155), pretmp_804(110), pretmp_805(108), gC.149_283(114), pretmp_806(113), prephitmp_829(43), prephitmp_872(47)>
  # prephitmp_809 = PHI <prephitmp_864(155), 1(110), 2(108), 2(114), 1(113), _64(43), 2(47)>
  # DEBUG dest => dest_12
  # DEBUG dest => dest_12
  # DEBUG rID => rID_167
  dest_rID_525 = dest_12 / prephitmp_808;
  # DEBUG dest_rID => dest_rID_525
  _dim_526 = gN;
  # DEBUG _dim => _dim_526
  # DEBUG output => -1
  if (rID_167 == dest_rID_525)
    goto <bb 117>;
  else
    goto <bb 116>;

  <bb 116>:
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_525
  # DEBUG rID => rID_167
  if (_dim_526 <= 0)
    goto <bb 127>;
  else
    goto <bb 118>;

  <bb 117>:
  _527 = dest_12 % prephitmp_808;
  goto <bb 132>;

  <bb 118>:
  gK.145_80 = gK;
  dID_476 = dest_rID_525 % gK.145_80;
  # DEBUG dID => dID_476
  sID_477 = rID_167 % gK.145_80;
  # DEBUG sID => sID_477
  if (dID_476 != sID_477)
    goto <bb 122>;
  else
    goto <bb 125>;

  <bb 119>:
  dID_531 = dest_rID_541 % gK.145_80;
  # DEBUG dID => dID_531
  sID_533 = rID_542 % gK.145_80;
  # DEBUG sID => sID_533
  if (dID_531 != sID_533)
    goto <bb 121>;
  else
    goto <bb 120>;

  <bb 120>:
  goto <bb 126>;

  <bb 121>:
  # dID_824 = PHI <dID_531(119)>
  # sID_823 = PHI <sID_533(119)>
  # d_822 = PHI <d_543(119)>
  pretmp_817 = gK.145_80 + -1;
  pretmp_818 = d_822 * pretmp_817;

  <bb 122>:
  # dID_327 = PHI <dID_824(121), dID_476(118)>
  # sID_407 = PHI <sID_823(121), sID_477(118)>
  # prephitmp_819 = PHI <pretmp_818(121), 0(118)>
  _536 = prephitmp_808 + prephitmp_819;
  output_537 = _536 + -1;
  # DEBUG output => output_537
  if (dID_327 > sID_407)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 123>:
  output_538 = dID_327 + output_537;
  # DEBUG output => output_538
  goto <bb 132>;

  <bb 124>:
  _539 = dID_327 + 1;
  output_540 = output_537 + _539;
  # DEBUG output => output_540
  goto <bb 132>;

  <bb 125>:

  <bb 126>:
  # d_386 = PHI <0(125), d_543(120)>
  # dest_rID_381 = PHI <dest_rID_525(125), dest_rID_541(120)>
  # rID_410 = PHI <rID_167(125), rID_542(120)>
  # DEBUG d => d_386
  # DEBUG dest_rID => dest_rID_381
  # DEBUG rID => rID_410
  # DEBUG dID => dID_476
  # DEBUG sID => dID_476
  dest_rID_541 = dest_rID_381 / gK.145_80;
  # DEBUG dest_rID => dest_rID_541
  rID_542 = rID_410 / gK.145_80;
  # DEBUG rID => rID_542
  d_543 = d_386 + 1;
  # DEBUG d => d_543
  # DEBUG d => d_543
  # DEBUG dest_rID => dest_rID_541
  # DEBUG rID => rID_542
  if (_dim_526 <= d_543)
    goto <bb 127>;
  else
    goto <bb 119>;

  <bb 127>:
  # DEBUG D#24 => dest_12
  # DEBUG D#25 => rID_167
  # DEBUG D#26 => D#25
  # DEBUG rID => D#26
  # DEBUG D#27 => D#24
  # DEBUG dest => D#27
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found "
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR ---- FLATFLY_OUTPORT function : output not found ", 56);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _132 = cout._vptr.basic_ostream;
  _548 = MEM[(long int *)_132 + -24B];
  _549 = (sizetype) _548;
  _550 = &cout + _549;
  # DEBUG this => _550
  # DEBUG __c => 10
  _555 = MEM[(const struct basic_ios *)_550]._M_ctype;
  # DEBUG __f => _555
  if (_555 == 0B)
    goto <bb 18>;
  else
    goto <bb 128>;

  <bb 128>:
  # DEBUG this => _555
  # DEBUG __c => 10
  _556 = MEM[(const struct ctype *)_555]._M_widen_ok;
  if (_556 != 0)
    goto <bb 129>;
  else
    goto <bb 130>;

  <bb 129>:
  _559 = MEM[(const struct ctype *)_555]._M_widen[10];
  goto <bb 131>;

  <bb 130>:
  # DEBUG this => _555
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_555);
  _564 = MEM[(const struct ctype *)_555].D.20312._vptr.facet;
  _565 = MEM[(int (*__vtbl_ptr_type) () *)_564 + 48B];
  _567 = OBJ_TYPE_REF(_565;(const struct ctype)_555->6) (_555, 10);

  <bb 131>:
  # _562 = PHI <_559(129), _567(130)>
  _552 = (int) _562;
  _553 = std::basic_ostream<char>::put (&cout, _552);
  # DEBUG __os => _553
  std::basic_ostream<char>::flush (_553);
  exit (-1);

  <bb 132>:
  # out_port_544 = PHI <_527(117), output_538(123), output_540(124)>
  # DEBUG out_port => NULL
  if (out_port_544 >= prephitmp_808)
    goto <bb 133>;
  else
    goto <bb 140>;

  <bb 133>:
  _135 = vcEnd_4 - vcBegin_1;
  _136 = _135 + 1;
  available_vcs_137 = _136 / 2;
  # DEBUG available_vcs => available_vcs_137
  if (available_vcs_137 <= 0)
    goto <bb 134>;
  else
    goto <bb 135>;

  <bb 134>:
  __assert_fail ("available_vcs > 0", "networks/flatfly_onchip.cpp", 960, &__PRETTY_FUNCTION__);

  <bb 135>:
  if (prephitmp_809 == 1)
    goto <bb 136>;
  else
    goto <bb 137>;

  <bb 136>:
  vcEnd_141 = vcEnd_4 - available_vcs_137;
  # DEBUG vcEnd => vcEnd_141
  goto <bb 140>;

  <bb 137>:
  if (prephitmp_809 != 2)
    goto <bb 138>;
  else
    goto <bb 139>;

  <bb 138>:
  __assert_fail ("f->ph == 2", "networks/flatfly_onchip.cpp", 964, &__PRETTY_FUNCTION__);

  <bb 139>:
  vcBegin_139 = vcBegin_1 + available_vcs_137;
  # DEBUG vcBegin => vcBegin_139

  <bb 140>:
  # vcBegin_2 = PHI <vcBegin_1(48), vcBegin_139(139), vcBegin_1(132), vcBegin_1(136)>
  # vcEnd_5 = PHI <vcEnd_4(48), vcEnd_4(139), vcEnd_4(132), vcEnd_141(136)>
  # out_port_8 = PHI <out_port_71(48), out_port_544(139), out_port_544(132), out_port_544(136)>
  # prephitmp_795 = PHI <pretmp_794(48), _dim_526(139), _dim_526(132), _dim_526(136)>
  # prephitmp_796 = PHI <prephitmp_872(48), prephitmp_808(139), prephitmp_808(132), prephitmp_808(136)>
  # DEBUG found => 1
  # DEBUG out_port => out_port_8
  # DEBUG vcEnd => vcEnd_5
  # DEBUG vcBegin => vcBegin_2
  gK.131_143 = gK;
  _144 = gK.131_143 + -1;
  _146 = _144 * prephitmp_795;
  _148 = _146 + prephitmp_796;
  if (out_port_8 >= _148)
    goto <bb 141>;
  else
    goto <bb 142>;

  <bb 141>:
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR: output port too big! "
  # DEBUG __s => " ERROR: output port too big! "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR: output port too big! ", 29);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (&cout);
  # DEBUG __out => &cout
  # DEBUG __s => " OUTPUT select: "
  # DEBUG __s => " OUTPUT select: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " OUTPUT select: ", 16);
  _153 = std::basic_ostream<char>::operator<< (&cout, out_port_8);
  # DEBUG this => _153
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_153);
  gK.131_154 = gK;
  _155 = gK.131_154 + -1;
  gN.132_156 = gN;
  _157 = _155 * gN.132_156;
  _158 = gK.131_154 + _157;
  # DEBUG __out => &cout
  # DEBUG __s => " router radix: "
  # DEBUG __s => " router radix: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " router radix: ", 15);
  _160 = std::basic_ostream<char>::operator<< (&cout, _158);
  # DEBUG this => _160
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_160);
  exit (-1);

  <bb 142>:
  gTrace.129_149 = gTrace;
  if (gTrace.129_149 != 0)
    goto <bb 143>;
  else
    goto <bb 154>;

  <bb 143>:
  # DEBUG __out => &cout
  # DEBUG __s => "Outport "
  # DEBUG __s => "Outport "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Outport ", 8);
  _151 = std::basic_ostream<char>::operator<< (&cout, out_port_8);
  # DEBUG this => _151
  # DEBUG __pf => endl
  # DEBUG __os => _151
  _308 = _151->_vptr.basic_ostream;
  _577 = MEM[(long int *)_308 + -24B];
  _578 = (sizetype) _577;
  _579 = _151 + _578;
  # DEBUG this => _579
  # DEBUG __c => 10
  _306 = MEM[(const struct basic_ios *)_579]._M_ctype;
  # DEBUG __f => _306
  if (_306 == 0B)
    goto <bb 18>;
  else
    goto <bb 144>;

  <bb 144>:
  # DEBUG this => _306
  # DEBUG __c => 10
  _584 = MEM[(const struct ctype *)_306]._M_widen_ok;
  if (_584 != 0)
    goto <bb 145>;
  else
    goto <bb 146>;

  <bb 145>:
  _587 = MEM[(const struct ctype *)_306]._M_widen[10];
  pretmp_797 = (int) _587;
  goto <bb 148>;

  <bb 146>:
  # DEBUG this => _306
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_306);
  _592 = MEM[(const struct ctype *)_306].D.20312._vptr.facet;
  _593 = MEM[(int (*__vtbl_ptr_type) () *)_592 + 48B];
  PROF_597 = [obj_type_ref] OBJ_TYPE_REF(_593;(const struct ctype)_306->6);
  if (PROF_597 == do_widen)
    goto <bb 148>;
  else
    goto <bb 147>;

  <bb 147>:
  _599 = OBJ_TYPE_REF(_593;(const struct ctype)_306->6) (_306, 10);
  pretmp_798 = (int) _599;

  <bb 148>:
  # prephitmp_799 = PHI <pretmp_797(145), 10(146), pretmp_798(147)>
  _582 = std::basic_ostream<char>::put (_151, prephitmp_799);
  # DEBUG __os => _582
  std::basic_ostream<char>::flush (_582);
  # DEBUG __out => &cout
  # DEBUG __s => "Stop Mark"
  # DEBUG __s => "Stop Mark"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Stop Mark", 9);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _569 = cout._vptr.basic_ostream;
  _570 = MEM[(long int *)_569 + -24B];
  _571 = (sizetype) _570;
  _572 = &cout + _571;
  # DEBUG this => _572
  # DEBUG __c => 10
  _602 = MEM[(const struct basic_ios *)_572]._M_ctype;
  # DEBUG __f => _602
  if (_602 == 0B)
    goto <bb 18>;
  else
    goto <bb 149>;

  <bb 149>:
  # DEBUG this => _602
  # DEBUG __c => 10
  _603 = MEM[(const struct ctype *)_602]._M_widen_ok;
  if (_603 != 0)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  _606 = MEM[(const struct ctype *)_602]._M_widen[10];
  pretmp_800 = (int) _606;
  goto <bb 153>;

  <bb 151>:
  # DEBUG this => _602
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_602);
  _611 = MEM[(const struct ctype *)_602].D.20312._vptr.facet;
  _612 = MEM[(int (*__vtbl_ptr_type) () *)_611 + 48B];
  PROF_616 = [obj_type_ref] OBJ_TYPE_REF(_612;(const struct ctype)_602->6);
  if (PROF_616 == do_widen)
    goto <bb 153>;
  else
    goto <bb 152>;

  <bb 152>:
  _618 = OBJ_TYPE_REF(_612;(const struct ctype)_602->6) (_602, 10);
  pretmp_801 = (int) _618;

  <bb 153>:
  # prephitmp_802 = PHI <pretmp_800(150), 10(151), pretmp_801(152)>
  _575 = std::basic_ostream<char>::put (&cout, prephitmp_802);
  # DEBUG __os => _575
  std::basic_ostream<char>::flush (_575);

  <bb 154>:
  # vcBegin_3 = PHI <vcBegin_1(14), vcBegin_2(142), vcBegin_2(153), vcBegin_1(12)>
  # vcEnd_6 = PHI <vcEnd_4(14), vcEnd_5(142), vcEnd_5(153), vcEnd_4(12)>
  # out_port_9 = PHI <-1(14), out_port_8(142), out_port_8(153), -1(12)>
  # DEBUG out_port => out_port_9
  # DEBUG vcEnd => vcEnd_6
  # DEBUG vcBegin => vcBegin_3
  OutputSet::Clear (outputs_164(D));
  OutputSet::AddRange (outputs_164(D), out_port_9, vcBegin_3, vcEnd_6, 0);
  return;

  <bb 155>:
  # dest_379 = PHI <dest_172(44), dest_321(45)>
  # _240 = PHI <_66(44), _244(45)>
  # prephitmp_864 = PHI <prephitmp_827(44), prephitmp_873(45)>
  # prephitmp_876 = PHI <prephitmp_875(44), prephitmp_872(45)>
  # DEBUG found => 0
  # DEBUG dest => dest_379
  # DEBUG out_port => out_port_67(D)
  # DEBUG found => 0
  # DEBUG dest => dest_379
  # DEBUG out_port => out_port_67(D)
  if (prephitmp_864 == 0)
    goto <bb 49>;
  else
    goto <bb 115>;

  <bb 156>:
  # DEBUG found => 0
  pretmp_874 = gC;
  goto <bb 44>;

  <bb 157>:
  # _min_hop_837 = PHI <_min_hop_203(53)>
  # DEBUG _min_hop => NULL
  # DEBUG dest => _76
  # DEBUG horizontal => horizontal_208
  # DEBUG horizontal_rem => horizontal_rem_209
  # DEBUG vertical => vertical_212
  # DEBUG vertical_rem => vertical_rem_213
  # DEBUG dest => dest_220
  # DEBUG src => dest_220
  # DEBUG dest => dest_379
  # DEBUG _dim => _dim_189
  # DEBUG _ran_dest => 0
  # DEBUG debug => 0
  # DEBUG src => src_190
  # DEBUG dest => dest_191
  # DEBUG max => D#303 + -1
  _315 = ran_next ();
  _7 = (long int) prephitmp_876;
  _11 = _315 % _7;
  dest_13 = (int) _11;
  # DEBUG _ran_dest => dest_13
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG _ran_dest => dest_13
  # DEBUG dest => dest_191
  # DEBUG src => src_190
  # DEBUG _min_hop => NULL
  # DEBUG horizontal => horizontal_208
  # DEBUG horizontal_rem => horizontal_rem_209
  # DEBUG vertical => vertical_212
  # DEBUG vertical_rem => vertical_rem_213
  # DEBUG dest => dest_220
  # DEBUG _dim => _dim_189
  # DEBUG debug => 0
  # DEBUG max => D#303 + -1
  # DEBUG d => 0
  # DEBUG _ran_dest => dest_13
  # DEBUG dest => dest_191
  # DEBUG src => src_190
  pretmp_789 = gK;
  goto <bb 56>;

  <bb 158>:
  # DEBUG _min_hop => NULL
  # DEBUG dest => _76
  # DEBUG horizontal => horizontal_208
  # DEBUG horizontal_rem => horizontal_rem_209
  # DEBUG vertical => vertical_212
  # DEBUG vertical_rem => vertical_rem_213
  # DEBUG dest => dest_220
  # DEBUG src => dest_220
  # DEBUG dest => dest_379
  # DEBUG _dim => _dim_189
  # DEBUG _ran_dest => 0
  # DEBUG debug => 0
  # DEBUG src => src_190
  # DEBUG dest => dest_191
  # DEBUG max => D#303 + -1
  _194 = ran_next ();
  _198 = (long int) prephitmp_876;
  _516 = _194 % _198;
  dest_513 = (int) _516;
  # DEBUG _ran_dest => dest_513
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG _ran_dest => dest_513
  # DEBUG dest => dest_191
  # DEBUG src => src_190
  goto <bb 61>;

  <bb 159>:
  # dist_835 = PHI <dist_251(80)>
  # DEBUG src => NULL
  # DEBUG dest => dest_379
  # DEBUG dist => 0
  # DEBUG _dim => _dim_237
  # DEBUG src_tmp => dest_rID_239
  dest_tmp_162 = dest_379 / gC.149_264;
  # DEBUG dest_tmp => dest_tmp_162
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_tmp_162
  # DEBUG src_tmp => dest_rID_239
  # DEBUG dist => 0
  # DEBUG src => NULL
  # DEBUG dest => dest_379
  # DEBUG _dim => _dim_237
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_tmp_162
  # DEBUG src_tmp => dest_rID_239
  # DEBUG dist => 0
  goto <bb 83>;

  <bb 160>:
  # DEBUG src => NULL
  # DEBUG dest => dest_379
  # DEBUG dist => 0
  # DEBUG _dim => _dim_237
  # DEBUG src_tmp => dest_rID_239
  # DEBUG D#302 => dest_379 / gC.149_264
  # DEBUG dest_tmp => D#302
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => D#302
  # DEBUG src_tmp => dest_rID_239
  # DEBUG dist => 0
  # DEBUG _nonmin_hop => 0
  # DEBUG dest => dest_366
  # DEBUG rID => rID_167
  # DEBUG dest_rID => dest_rID_239
  # DEBUG _dim => _dim_237
  # DEBUG output => -1
  if (rID_167 == dest_rID_239)
    goto <bb 87>;
  else
    goto <bb 86>;

  <bb 161>:
  # dist_836 = PHI <dist_236(85)>
  _nonmin_hop_687 = dist_836 + dist_835;
  # DEBUG _nonmin_hop => _nonmin_hop_687
  # DEBUG dest => dest_366
  # DEBUG rID => rID_167
  # DEBUG dest_rID => dest_rID_239
  # DEBUG _dim => _dim_237
  # DEBUG output => -1
  if (rID_167 == dest_rID_239)
    goto <bb 87>;
  else
    goto <bb 89>;

  <bb 162>:
  f_29(D)->ph = 1;
  f_29(D)->intm = dest_366;
  # DEBUG dest => NULL
  goto <bb 112>;

  <bb 163>:
  # DEBUG _nonmin_queucnt => 2147483647
  _382 = _min_queucnt_96 * _min_hop_332;
  _686 = _nonmin_hop_329 * 2147483647;
  _372 = _686 + 2;
  if (_372 >= _382)
    goto <bb 108>;
  else
    goto <bb 162>;

}



;; Function void ugal_pni_flatfly_onchip(const Router*, const Flit*, int, OutputSet*, bool) (_Z23ugal_pni_flatfly_onchipPK6RouterPK4FlitiP9OutputSetb, funcdef_no=2253, decl_uid=47410, cgraph_uid=677, symbol_order=682)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void ugal_pni_flatfly_onchip(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  char_type D.60638;
  char __c;
  char_type D.60635;
  char __c;
  char_type D.60632;
  char_type D.60626;
  char __c;
  char_type D.60623;
  char __c;
  char_type D.60620;
  struct basic_ostream & D.60614;
  struct basic_ostream & D.60611;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.60608;
  int rID;
  char_type D.60599;
  char __c;
  char_type D.60596;
  char __c;
  char_type D.60593;
  struct basic_ostream & D.60587;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.60584;
  int rID;
  int _dim;
  int _dim_size;
  int _ran_dest;
  int d;
  int D.60575;
  int src;
  int dest;
  int dest_rID;
  int _dim;
  int output;
  int dID;
  int sID;
  int d;
  int D.60565;
  int rID;
  char_type D.60556;
  char __c;
  char_type D.60553;
  char __c;
  char_type D.60550;
  char_type D.60544;
  char __c;
  char_type D.60541;
  char __c;
  char_type D.60538;
  char_type D.60532;
  char __c;
  char_type D.60529;
  char __c;
  char_type D.60526;
  struct basic_ostream & D.60520;
  struct basic_ostream & D.60517;
  struct basic_ostream & D.60514;
  char_type D.60511;
  char __c;
  char_type D.60508;
  char __c;
  char_type D.60505;
  struct basic_ostream & D.60499;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int dest;
  int dist;
  int _dim;
  int src_tmp;
  int dest_tmp;
  int d;
  int src_id;
  int dest_id;
  int dist;
  int src_tmp;
  int dest_tmp;
  int d;
  int src_id;
  int dest_id;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int dest;
  int _dim;
  int src_tmp;
  int dest_tmp;
  int d;
  int src_id;
  int dest_id;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int d;
  int next_dim;
  int vcs_per_dest;
  int next_coord;
  const int available_vcs;
  int _nonmin_queucnt;
  int _min_queucnt;
  int _nonmin_hop;
  int _min_hop;
  int _ran_intm;
  int tmp_out_port;
  int found;
  int dest;
  int out_port;
  static const char __PRETTY_FUNCTION__[80] = "void ugal_pni_flatfly_onchip(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  long int _13;
  long int _15;
  bool iftmp.139_21;
  int gNumVCs.133_33;
  FlitType _36;
  int _45;
  int _48;
  int gC.149_49;
  int _51;
  bool gTrace.135_53;
  int _54;
  struct basic_ostream & _56;
  bool gTrace.135_58;
  struct basic_ostream & _60;
  struct basic_ostream & _62;
  int (*__vtbl_ptr_type) () * _63;
  int (*__vtbl_ptr_type) () _64;
  int _66;
  struct basic_ostream & _68;
  int _xcount.146_69;
  int _70;
  int _72;
  int _74;
  int _75;
  int _79;
  int _80;
  int _82;
  int _yrouter.148_85;
  bool _90;
  int _91;
  int _93;
  struct ostream * gWatchOut.136_94;
  struct basic_ostream & _96;
  const size_type _97;
  int (*__vtbl_ptr_type) () * _99;
  int (*__vtbl_ptr_type) () _100;
  int _103;
  int _106;
  int (*__vtbl_ptr_type) () * _108;
  bool _110;
  int _111;
  int _113;
  struct ostream * gWatchOut.136_114;
  struct basic_ostream & _116;
  const size_type _117;
  struct basic_ostream & _119;
  int _120;
  int _121;
  int _xrouter.147_122;
  int (*__vtbl_ptr_type) () * _123;
  int (*__vtbl_ptr_type) () _124;
  int _127;
  int _128;
  int _129;
  int _xcount.146_130;
  int _136;
  int _xcount.146_137;
  int (*__vtbl_ptr_type) () * _139;
  int _142;
  int _143;
  int gK.137_150;
  int _151;
  int _153;
  int _155;
  bool gTrace.135_156;
  int _xcount.146_157;
  struct basic_ostream & _159;
  struct basic_ostream & _161;
  int gK.137_162;
  int _163;
  int gN.138_164;
  int _165;
  int _166;
  struct basic_ostream & _168;
  int gK.137_173;
  int gC.134_174;
  int _175;
  bool iftmp.139_176;
  int _177;
  unsigned int _178;
  unsigned int _179;
  bool iftmp.139_180;
  int _181;
  int _184;
  int _185;
  int _186;
  int gN.138_188;
  int _194;
  int _195;
  int _197;
  int _199;
  int _209;
  int _210;
  int _211;
  int _xrouter.147_213;
  int _214;
  int _215;
  int _218;
  int _yrouter.148_219;
  int _222;
  int _223;
  int _225;
  int _226;
  int _227;
  long int _232;
  long int _234;
  long int _236;
  int _xcount.146_244;
  int _xrouter.147_245;
  int _246;
  int _247;
  int _250;
  int _yrouter.148_251;
  int _254;
  int _255;
  int _257;
  int _258;
  int _259;
  long int _261;
  char * const _262;
  struct basic_ostream & _263;
  int _280;
  int _284;
  int _xcount.146_292;
  int _xrouter.147_293;
  int _294;
  int _295;
  int _298;
  int _yrouter.148_299;
  int _302;
  int _303;
  int gC.149_304;
  int _305;
  int _306;
  int _307;
  long int _309;
  char * const _310;
  struct basic_ostream & _311;
  int _xrouter.147_312;
  int _313;
  int _314;
  int _317;
  int _yrouter.148_318;
  int _321;
  int _322;
  int gC.149_323;
  int _324;
  int _325;
  int _326;
  int _xrouter.147_328;
  int _329;
  int _330;
  int _333;
  int _yrouter.148_334;
  int _337;
  int _338;
  int _339;
  int _340;
  int _341;
  const struct __ctype_type * _344;
  const struct __ctype_type * _346;
  int (*__vtbl_ptr_type) () * _348;
  int (*__vtbl_ptr_type) () * _350;
  const struct __ctype_type * _359;
  const struct __ctype_type * _361;
  int (*__vtbl_ptr_type) () * _363;
  int (*__vtbl_ptr_type) () * _372;
  long int _373;
  sizetype _374;
  struct basic_ios * _375;
  struct basic_ostream & _378;
  char _380;
  int gK.137_381;
  char_type _383;
  int gC.134_387;
  int (*__vtbl_ptr_type) () * _388;
  int (*__vtbl_ptr_type) () _389;
  bool _392;
  void * PROF_393;
  char_type _395;
  int _397;
  int (*__vtbl_ptr_type) () * _398;
  long int _399;
  sizetype _400;
  struct basic_ios * _401;
  struct basic_ostream & _404;
  long int _406;
  sizetype _407;
  struct basic_ios * _408;
  struct basic_ostream & _411;
  long int _413;
  sizetype _414;
  struct basic_ios * _415;
  struct basic_ostream & _418;
  char _420;
  char_type _423;
  int (*__vtbl_ptr_type) () * _428;
  int (*__vtbl_ptr_type) () _429;
  void * PROF_433;
  char_type _435;
  const struct __ctype_type * _438;
  char _439;
  int gK.145_440;
  char_type _442;
  int (*__vtbl_ptr_type) () * _447;
  int (*__vtbl_ptr_type) () _448;
  void * PROF_452;
  char_type _454;
  const struct __ctype_type * _457;
  char _458;
  char_type _461;
  int (*__vtbl_ptr_type) () * _466;
  int (*__vtbl_ptr_type) () _467;
  bool _469;
  void * PROF_471;
  char_type _473;
  int gC.144_476;
  int _479;
  int _488;
  int _491;
  int _496;
  bool _500;
  bool _501;
  bool _502;
  int _507;
  int _509;
  int gC.142_510;
  int gK.143_512;
  long int _513;
  int _514;
  int _516;
  int _517;
  long int _520;
  long int _521;
  long int _522;
  int _523;
  int _524;
  int _533;
  int _542;
  int _545;
  int _550;
  long int _554;
  sizetype _555;
  struct basic_ios * _556;
  struct basic_ostream & _559;
  char _561;
  char_type _564;
  int (*__vtbl_ptr_type) () * _569;
  int (*__vtbl_ptr_type) () _570;
  int _571;
  void * PROF_574;
  char_type _576;
  int _582;
  int _591;
  int _594;
  int gK.137_600;
  long int _603;
  sizetype _604;
  struct basic_ios * _605;
  struct basic_ostream & _608;
  long int _610;
  sizetype _611;
  struct basic_ios * _612;
  struct basic_ostream & _615;
  int gK.145_616;
  char _617;
  char_type _620;
  int (*__vtbl_ptr_type) () * _625;
  int (*__vtbl_ptr_type) () _626;
  void * PROF_630;
  char_type _632;
  const struct __ctype_type * _635;
  char _636;
  char_type _639;
  int (*__vtbl_ptr_type) () * _644;
  int (*__vtbl_ptr_type) () _645;
  void * PROF_649;
  char_type _651;
  bool _659;
  bool _661;
  int _665;
  int gK.137_666;
  int gK.137_690;
  int _695;
  int _702;
  int gK.137_714;
  int pretmp_923;
  int pretmp_925;
  int prephitmp_926;
  int pretmp_935;
  int pretmp_936;
  int prephitmp_937;
  int pretmp_938;
  int prephitmp_939;
  int pretmp_945;
  int pretmp_946;
  int prephitmp_947;
  int pretmp_950;
  int pretmp_959;
  int pretmp_960;
  int prephitmp_961;
  int pretmp_964;
  int pretmp_967;
  int prephitmp_968;
  int pretmp_970;
  int prephitmp_971;
  int pretmp_972;
  int prephitmp_973;
  int prephitmp_974;
  int pretmp_975;
  int prephitmp_976;
  int pretmp_980;
  int pretmp_981;
  int prephitmp_982;
  int pretmp_983;
  int pretmp_984;
  int prephitmp_985;
  int pretmp_987;
  int pretmp_988;
  int pretmp_989;
  int prephitmp_991;
  int prephitmp_992;
  int pretmp_1000;
  int pretmp_1001;
  int prephitmp_1002;
  int prephitmp_1010;
  int pretmp_1011;
  int prephitmp_1012;
  int pretmp_1023;
  int pretmp_1024;
  int prephitmp_1025;
  int pretmp_1026;
  int pretmp_1027;
  int prephitmp_1028;
  int pretmp_1029;
  int pretmp_1030;
  int prephitmp_1031;
  bool pretmp_1032;
  bool prephitmp_1033;
  int pretmp_1043;
  int pretmp_1044;
  int prephitmp_1045;
  int prephitmp_1047;
  int prephitmp_1055;
  int prephitmp_1056;
  int pretmp_1057;
  int prephitmp_1058;
  int prephitmp_1059;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#374 => gNumVCs
  # DEBUG vcEnd => D#374 + -1
  _36 = f_35(D)->type;
  if (_36 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_37 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_37
  vcEnd_38 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_38
  goto <bb 11>;

  <bb 4>:
  if (_36 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_39 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_39
  vcEnd_40 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_40
  goto <bb 11>;

  <bb 6>:
  if (_36 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_41 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_41
  vcEnd_42 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_42
  goto <bb 11>;

  <bb 8>:
  gNumVCs.133_33 = gNumVCs;
  if (_36 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_34 = gNumVCs.133_33 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_43 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_43
  vcEnd_44 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_44

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_37(3), vcBegin_39(5), vcBegin_41(7), 0(9), vcBegin_43(10)>
  # vcEnd_5 = PHI <vcEnd_38(3), vcEnd_40(5), vcEnd_42(7), vcEnd_34(9), vcEnd_44(10)>
  # DEBUG vcEnd => vcEnd_5
  # DEBUG vcBegin => vcBegin_1
  _45 = f_35(D)->vc;
  _659 = vcEnd_5 < _45;
  _502 = vcBegin_1 > _45;
  _392 = _502 | _659;
  if (_392 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _469 = _45 >= 0;
  if (inject_46(D) <= _469)
    goto <bb 13>;
  else
    goto <bb 149>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "networks/flatfly_onchip.cpp", 1016, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_46(D) != 0)
    goto <bb 182>;
  else
    goto <bb 15>;

  <bb 15>:
  _48 = f_35(D)->dest;
  # DEBUG dest => _48
  _xcount.146_137 = _xcount;
  _xrouter.147_122 = _xrouter;
  # DEBUG D#373 => _xrouter.147_122 * _xcount.146_137
  # DEBUG D#372 => _48 % D#373
  # DEBUG D#371 => D#372 / _xrouter.147_122
  # DEBUG horizontal => D#371
  # DEBUG D#370 => D#372 % _xrouter.147_122
  # DEBUG horizontal_rem => D#370
  # DEBUG D#369 => _48 / D#373
  _yrouter.148_85 = _yrouter;
  # DEBUG D#368 => D#369 / _yrouter.148_85
  # DEBUG vertical => D#368
  # DEBUG D#367 => D#369 % _yrouter.148_85
  # DEBUG vertical_rem => D#367
  # DEBUG D#366 => D#368 * _xcount.146_137
  # DEBUG D#365 => D#366 + D#371
  gC.149_49 = gC;
  # DEBUG D#364 => gC.149_49 * D#365
  # DEBUG D#363 => D#367 * _xrouter.147_122
  # DEBUG D#362 => D#364 + D#363
  # DEBUG D#361 => D#370 + D#362
  # DEBUG dest => D#361
  # DEBUG dest => NULL
  rID_208 = MEM[(int *)r_50(D) + 96B];
  # DEBUG D#19 => r_50(D)
  # DEBUG this => D#19
  # DEBUG rID => NULL
  # DEBUG _concentration => gC.149_49
  # DEBUG debug => 0
  # DEBUG threshold => 2
  if (gC.149_49 > in_channel_52(D))
    goto <bb 16>;
  else
    goto <bb 26>;

  <bb 16>:
  gTrace.135_53 = gTrace;
  if (gTrace.135_53 != 0)
    goto <bb 17>;
  else
    goto <bb 24>;

  <bb 17>:
  _54 = f_35(D)->src;
  # DEBUG __out => &cout
  # DEBUG __s => "New Flit "
  # DEBUG __s => "New Flit "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "New Flit ", 9);
  _56 = std::basic_ostream<char>::operator<< (&cout, _54);
  # DEBUG this => _56
  # DEBUG __pf => endl
  # DEBUG __os => _56
  _372 = _56->_vptr.basic_ostream;
  _373 = MEM[(long int *)_372 + -24B];
  _374 = (sizetype) _373;
  _375 = _56 + _374;
  # DEBUG this => _375
  # DEBUG __c => 10
  _344 = MEM[(const struct basic_ios *)_375]._M_ctype;
  # DEBUG __f => _344
  if (_344 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  std::__throw_bad_cast ();

  <bb 19>:
  # DEBUG this => _344
  # DEBUG __c => 10
  _380 = MEM[(const struct ctype *)_344]._M_widen_ok;
  if (_380 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _383 = MEM[(const struct ctype *)_344]._M_widen[10];
  pretmp_1043 = (int) _383;
  goto <bb 23>;

  <bb 21>:
  # DEBUG this => _344
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_344);
  _388 = MEM[(const struct ctype *)_344].D.20312._vptr.facet;
  _389 = MEM[(int (*__vtbl_ptr_type) () *)_388 + 48B];
  PROF_393 = [obj_type_ref] OBJ_TYPE_REF(_389;(const struct ctype)_344->6);
  if (PROF_393 == do_widen)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  _395 = OBJ_TYPE_REF(_389;(const struct ctype)_344->6) (_344, 10);
  pretmp_1044 = (int) _395;

  <bb 23>:
  # prephitmp_1045 = PHI <pretmp_1043(20), 10(21), pretmp_1044(22)>
  _378 = std::basic_ostream<char>::put (_56, prephitmp_1045);
  # DEBUG __os => _378
  std::basic_ostream<char>::flush (_378);
  pretmp_1032 = gTrace;

  <bb 24>:
  # prephitmp_1033 = PHI <gTrace.135_53(16), pretmp_1032(23)>
  f_35(D)->ph = 0;
  if (prephitmp_1033 != 0)
    goto <bb 25>;
  else
    goto <bb 174>;

  <bb 25>:
  # DEBUG load => 0
  # DEBUG __out => &cout
  # DEBUG __s => "Router "
  # DEBUG __s => "Router "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Router ", 7);
  _60 = std::basic_ostream<char>::operator<< (&cout, rID_208);
  # DEBUG this => _60
  # DEBUG __pf => endl
  # DEBUG __os => _60
  _348 = _60->_vptr.basic_ostream;
  _413 = MEM[(long int *)_348 + -24B];
  _414 = (sizetype) _413;
  _415 = _60 + _414;
  # DEBUG this => _415
  # DEBUG __c => 10
  _346 = MEM[(const struct basic_ios *)_415]._M_ctype;
  # DEBUG __f => _346
  if (_346 == 0B)
    goto <bb 18>;
  else
    goto <bb 27>;

  <bb 26>:
  gTrace.135_58 = gTrace;
  if (gTrace.135_58 != 0)
    goto <bb 25>;
  else
    goto <bb 42>;

  <bb 27>:
  # DEBUG this => _346
  # DEBUG __c => 10
  _420 = MEM[(const struct ctype *)_346]._M_widen_ok;
  if (_420 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _423 = MEM[(const struct ctype *)_346]._M_widen[10];
  pretmp_1023 = (int) _423;
  goto <bb 31>;

  <bb 29>:
  # DEBUG this => _346
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_346);
  _428 = MEM[(const struct ctype *)_346].D.20312._vptr.facet;
  _429 = MEM[(int (*__vtbl_ptr_type) () *)_428 + 48B];
  PROF_433 = [obj_type_ref] OBJ_TYPE_REF(_429;(const struct ctype)_346->6);
  if (PROF_433 == do_widen)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  _435 = OBJ_TYPE_REF(_429;(const struct ctype)_346->6) (_346, 10);
  pretmp_1024 = (int) _435;

  <bb 31>:
  # prephitmp_1025 = PHI <pretmp_1023(28), 10(29), pretmp_1024(30)>
  _418 = std::basic_ostream<char>::put (_60, prephitmp_1025);
  # DEBUG __os => _418
  std::basic_ostream<char>::flush (_418);
  # DEBUG __out => &cout
  # DEBUG __s => "Input Channel "
  # DEBUG __s => "Input Channel "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Input Channel ", 14);
  _62 = std::basic_ostream<char>::operator<< (&cout, in_channel_52(D));
  # DEBUG this => _62
  # DEBUG __pf => endl
  # DEBUG __os => _62
  _350 = _62->_vptr.basic_ostream;
  _406 = MEM[(long int *)_350 + -24B];
  _407 = (sizetype) _406;
  _408 = _62 + _407;
  # DEBUG this => _408
  # DEBUG __c => 10
  _438 = MEM[(const struct basic_ios *)_408]._M_ctype;
  # DEBUG __f => _438
  if (_438 == 0B)
    goto <bb 18>;
  else
    goto <bb 32>;

  <bb 32>:
  # DEBUG this => _438
  # DEBUG __c => 10
  _439 = MEM[(const struct ctype *)_438]._M_widen_ok;
  if (_439 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  _442 = MEM[(const struct ctype *)_438]._M_widen[10];
  pretmp_1026 = (int) _442;
  goto <bb 36>;

  <bb 34>:
  # DEBUG this => _438
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_438);
  _447 = MEM[(const struct ctype *)_438].D.20312._vptr.facet;
  _448 = MEM[(int (*__vtbl_ptr_type) () *)_447 + 48B];
  PROF_452 = [obj_type_ref] OBJ_TYPE_REF(_448;(const struct ctype)_438->6);
  if (PROF_452 == do_widen)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  _454 = OBJ_TYPE_REF(_448;(const struct ctype)_438->6) (_438, 10);
  pretmp_1027 = (int) _454;

  <bb 36>:
  # prephitmp_1028 = PHI <pretmp_1026(33), 10(34), pretmp_1027(35)>
  _411 = std::basic_ostream<char>::put (_62, prephitmp_1028);
  # DEBUG __os => _411
  std::basic_ostream<char>::flush (_411);
  _63 = r_50(D)->D.45421.D.36000._vptr.Module;
  _64 = MEM[(int (*__vtbl_ptr_type) () *)_63 + 80B];
  _66 = OBJ_TYPE_REF(_64;(const struct Router)r_50(D)->10) (r_50(D), in_channel_52(D));
  # DEBUG load => _66
  # DEBUG __out => &cout
  # DEBUG __s => "Rload "
  # DEBUG __s => "Rload "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Rload ", 6);
  _68 = std::basic_ostream<char>::operator<< (&cout, _66);
  # DEBUG this => _68
  # DEBUG __pf => endl
  # DEBUG __os => _68
  _398 = _68->_vptr.basic_ostream;
  _399 = MEM[(long int *)_398 + -24B];
  _400 = (sizetype) _399;
  _401 = _68 + _400;
  # DEBUG this => _401
  # DEBUG __c => 10
  _457 = MEM[(const struct basic_ios *)_401]._M_ctype;
  # DEBUG __f => _457
  if (_457 == 0B)
    goto <bb 18>;
  else
    goto <bb 37>;

  <bb 37>:
  # DEBUG this => _457
  # DEBUG __c => 10
  _458 = MEM[(const struct ctype *)_457]._M_widen_ok;
  if (_458 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  _461 = MEM[(const struct ctype *)_457]._M_widen[10];
  pretmp_1029 = (int) _461;
  goto <bb 41>;

  <bb 39>:
  # DEBUG this => _457
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_457);
  _466 = MEM[(const struct ctype *)_457].D.20312._vptr.facet;
  _467 = MEM[(int (*__vtbl_ptr_type) () *)_466 + 48B];
  PROF_471 = [obj_type_ref] OBJ_TYPE_REF(_467;(const struct ctype)_457->6);
  if (PROF_471 == do_widen)
    goto <bb 41>;
  else
    goto <bb 40>;

  <bb 40>:
  _473 = OBJ_TYPE_REF(_467;(const struct ctype)_457->6) (_457, 10);
  pretmp_1030 = (int) _473;

  <bb 41>:
  # prephitmp_1031 = PHI <pretmp_1029(38), 10(39), pretmp_1030(40)>
  _404 = std::basic_ostream<char>::put (_68, prephitmp_1031);
  # DEBUG __os => _404
  std::basic_ostream<char>::flush (_404);
  pretmp_1011 = gC;

  <bb 42>:
  # prephitmp_1012 = PHI <gC.149_49(26), pretmp_1011(41)>
  # DEBUG found => 0
  _70 = f_35(D)->ph;
  if (_70 == 1)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  dest_71 = f_35(D)->intm;
  # DEBUG dest => dest_71
  # DEBUG dest => dest_71
  _507 = gC.149_49 * rID_208;
  if (dest_71 >= _507)
    goto <bb 45>;
  else
    goto <bb 115>;

  <bb 44>:
  # _284 = PHI <_70(42), 0(174)>
  # prephitmp_1010 = PHI <_70(42), 0(174)>
  # prephitmp_1058 = PHI <prephitmp_1012(42), pretmp_1057(174)>
  _111 = _xrouter.147_122 * _xcount.146_137;
  _106 = _48 % _111;
  _91 = _48 / _111;
  vertical_rem_83 = _91 % _yrouter.148_85;
  _210 = vertical_rem_83 * _xrouter.147_122;
  vertical_84 = _91 / _yrouter.148_85;
  _80 = vertical_84 * _xcount.146_137;
  horizontal_105 = _106 / _xrouter.147_122;
  _51 = _80 + horizontal_105;
  _209 = gC.149_49 * _51;
  _211 = _209 + _210;
  horizontal_rem_104 = _106 % _xrouter.147_122;
  dest_212 = horizontal_rem_104 + _211;
  # DEBUG dest => D#361
  _72 = gC.149_49 * rID_208;
  if (_72 <= dest_212)
    goto <bb 45>;
  else
    goto <bb 172>;

  <bb 45>:
  # dest_572 = PHI <dest_212(44), dest_71(43)>
  # _280 = PHI <_284(44), _70(43)>
  # _702 = PHI <_72(44), _507(43)>
  # prephitmp_1055 = PHI <prephitmp_1058(44), prephitmp_1012(43)>
  # prephitmp_1056 = PHI <prephitmp_1010(44), _70(43)>
  _74 = rID_208 + 1;
  _75 = gC.149_49 * _74;
  if (_75 > dest_572)
    goto <bb 46>;
  else
    goto <bb 172>;

  <bb 46>:
  if (_280 == 1)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  f_35(D)->ph = 2;
  _79 = f_35(D)->dest;
  # DEBUG dest => _79
  _xcount.146_69 = _xcount;
  _xrouter.147_213 = _xrouter;
  _214 = _xcount.146_69 * _xrouter.147_213;
  _215 = _79 % _214;
  horizontal_216 = _215 / _xrouter.147_213;
  # DEBUG horizontal => horizontal_216
  horizontal_rem_217 = _215 % _xrouter.147_213;
  # DEBUG horizontal_rem => horizontal_rem_217
  _218 = _79 / _214;
  _yrouter.148_219 = _yrouter;
  vertical_220 = _218 / _yrouter.148_219;
  # DEBUG vertical => vertical_220
  vertical_rem_221 = _218 % _yrouter.148_219;
  # DEBUG vertical_rem => vertical_rem_221
  _222 = _xcount.146_69 * vertical_220;
  _223 = horizontal_216 + _222;
  _225 = _223 * prephitmp_1055;
  _226 = _xrouter.147_213 * vertical_rem_221;
  _227 = _225 + _226;
  dest_228 = horizontal_rem_217 + _227;
  # DEBUG dest => dest_228
  # DEBUG dest => NULL
  # DEBUG found => 0
  # DEBUG dest => dest_228
  # DEBUG out_port => out_port_73(D)
  # DEBUG found => 0
  # DEBUG dest => dest_228
  # DEBUG out_port => out_port_73(D)
  goto <bb 115>;

  <bb 48>:
  # DEBUG found => 1
  out_port_77 = dest_572 % prephitmp_1055;
  # DEBUG out_port => out_port_77
  # DEBUG found => 1
  # DEBUG dest => dest_572
  # DEBUG out_port => out_port_77
  pretmp_972 = gN;
  goto <bb 135>;

  <bb 49>:
  _82 = f_35(D)->src;
  # DEBUG dest => _82
  _xcount.146_244 = _xcount;
  _xrouter.147_245 = _xrouter;
  _246 = _xcount.146_244 * _xrouter.147_245;
  _247 = _82 % _246;
  horizontal_248 = _247 / _xrouter.147_245;
  # DEBUG horizontal => horizontal_248
  horizontal_rem_249 = _247 % _xrouter.147_245;
  # DEBUG horizontal_rem => horizontal_rem_249
  _250 = _82 / _246;
  _yrouter.148_251 = _yrouter;
  vertical_252 = _250 / _yrouter.148_251;
  # DEBUG vertical => vertical_252
  vertical_rem_253 = _250 % _yrouter.148_251;
  # DEBUG vertical_rem => vertical_rem_253
  _254 = _xcount.146_244 * vertical_252;
  _255 = horizontal_248 + _254;
  # DEBUG D#359 => gC
  _257 = _255 * prephitmp_1059;
  _258 = _xrouter.147_245 * vertical_rem_253;
  _259 = _257 + _258;
  dest_260 = horizontal_rem_249 + _259;
  # DEBUG dest => dest_260
  # DEBUG src => NULL
  # DEBUG dest => dest_441
  # DEBUG dist => 0
  _dim_229 = gN;
  # DEBUG _dim => _dim_229
  src_230 = dest_260 / prephitmp_1059;
  # DEBUG src_tmp => src_230
  dest_231 = dest_441 / prephitmp_1059;
  # DEBUG dest_tmp => dest_231
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_231
  # DEBUG src_tmp => src_230
  # DEBUG dist => 0
  if (_dim_229 <= 0)
    goto <bb 176>;
  else
    goto <bb 50>;

  <bb 50>:
  pretmp_964 = gK;

  <bb 51>:
  # d_430 = PHI <0(50), d_242(54)>
  # src_736 = PHI <src_230(50), src_240(54)>
  # dest_737 = PHI <dest_231(50), dest_241(54)>
  # _min_hop_562 = PHI <0(50), _min_hop_243(54)>
  # DEBUG d => d_430
  # DEBUG dest_tmp => dest_737
  # DEBUG src_tmp => src_736
  # DEBUG dist => _min_hop_562
  src_id_235 = src_736 % pretmp_964;
  # DEBUG src_id => src_id_235
  dest_id_237 = dest_737 % pretmp_964;
  # DEBUG dest_id => dest_id_237
  if (src_id_235 != dest_id_237)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  _min_hop_239 = _min_hop_562 + 1;
  # DEBUG dist => _min_hop_239

  <bb 53>:
  # _min_hop_243 = PHI <_min_hop_562(51), _min_hop_239(52)>
  # DEBUG dist => _min_hop_243
  src_240 = src_736 / pretmp_964;
  # DEBUG src_tmp => src_240
  dest_241 = dest_737 / pretmp_964;
  # DEBUG dest_tmp => dest_241
  d_242 = d_430 + 1;
  # DEBUG d => d_242
  # DEBUG d => d_242
  # DEBUG dest_tmp => dest_241
  # DEBUG src_tmp => src_240
  # DEBUG dist => _min_hop_243
  if (_dim_229 <= d_242)
    goto <bb 175>;
  else
    goto <bb 54>;

  <bb 54>:
  goto <bb 51>;

  <bb 55>:

  <bb 56>:
  # d_730 = PHI <0(175), d_529(55)>
  # src_565 = PHI <src_230(175), src_527(55)>
  # dest_563 = PHI <dest_231(175), dest_528(55)>
  # dest_646 = PHI <dest_25(175), dest_530(55)>
  # prephitmp_968 = PHI <pretmp_967(175), prephitmp_971(55)>
  # DEBUG d => d_730
  # DEBUG _ran_dest => dest_646
  # DEBUG dest => dest_563
  # DEBUG src => src_565
  _509 = powi (prephitmp_968, d_730);
  gC.142_510 = gC;
  _dim_size_511 = _509 * gC.142_510;
  # DEBUG _dim_size => _dim_size_511
  gK.143_512 = gK;
  _514 = src_565 % gK.143_512;
  _516 = dest_563 % gK.143_512;
  if (_514 == _516)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  _517 = _dim_size_511 * _514;
  dest_519 = _517 + dest_646;
  # DEBUG _ran_dest => dest_519
  goto <bb 59>;

  <bb 58>:
  # DEBUG max => gK.143_512 + -1
  _520 = ran_next ();
  _521 = (long int) gK.143_512;
  _522 = _520 % _521;
  _523 = (int) _522;
  _524 = _dim_size_511 * _523;
  dest_525 = _524 + dest_646;
  # DEBUG _ran_dest => dest_525
  pretmp_970 = gK;

  <bb 59>:
  # dest_530 = PHI <dest_519(57), dest_525(58)>
  # prephitmp_971 = PHI <gK.143_512(57), pretmp_970(58)>
  # DEBUG _ran_dest => dest_530
  src_527 = src_565 / prephitmp_971;
  # DEBUG src => src_527
  dest_528 = dest_563 / prephitmp_971;
  # DEBUG dest => dest_528
  d_529 = d_730 + 1;
  # DEBUG d => d_529
  # DEBUG d => d_529
  # DEBUG _ran_dest => dest_530
  # DEBUG dest => dest_528
  # DEBUG src => src_527
  if (_dim_229 <= d_529)
    goto <bb 60>;
  else
    goto <bb 55>;

  <bb 60>:
  # dest_1008 = PHI <dest_530(59)>

  <bb 61>:
  # dest_643 = PHI <dest_1008(60), dest_238(176)>
  # _min_hop_744 = PHI <_min_hop_1017(60), 0(176)>
  # DEBUG _ran_intm => NULL
  # DEBUG dest => dest_441
  # DEBUG rID => rID_208
  gC.144_476 = gC;
  dest_rID_477 = dest_441 / gC.144_476;
  # DEBUG dest_rID => dest_rID_477
  # DEBUG D#360 => gN
  # DEBUG _dim => D#360
  # DEBUG output => -1
  if (rID_208 == dest_rID_477)
    goto <bb 64>;
  else
    goto <bb 62>;

  <bb 62>:
  _dim_478 = gN;
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_477
  # DEBUG rID => rID_208
  if (_dim_478 <= 0)
    goto <bb 63>;
  else
    goto <bb 65>;

  <bb 63>:
  # DEBUG D#25 => rID_208
  _Z15flatfly_outportii.part.17 ();

  <bb 64>:
  _479 = dest_441 % gC.144_476;
  goto <bb 74>;

  <bb 65>:
  gK.145_616 = gK;
  dID_405 = dest_rID_477 % gK.145_616;
  # DEBUG dID => dID_405
  sID_609 = rID_208 % gK.145_616;
  # DEBUG sID => sID_609
  if (dID_405 != sID_609)
    goto <bb 69>;
  else
    goto <bb 72>;

  <bb 66>:
  dID_483 = dest_rID_493 % gK.145_616;
  # DEBUG dID => dID_483
  sID_485 = rID_494 % gK.145_616;
  # DEBUG sID => sID_485
  if (dID_483 != sID_485)
    goto <bb 68>;
  else
    goto <bb 67>;

  <bb 67>:
  goto <bb 73>;

  <bb 68>:
  # dID_1014 = PHI <dID_483(66)>
  # sID_1013 = PHI <sID_485(66)>
  # d_1009 = PHI <d_495(66)>
  pretmp_959 = gK.145_616 + -1;
  pretmp_960 = d_1009 * pretmp_959;

  <bb 69>:
  # dID_421 = PHI <dID_1014(68), dID_405(65)>
  # sID_427 = PHI <sID_1013(68), sID_609(65)>
  # prephitmp_961 = PHI <pretmp_960(68), 0(65)>
  _488 = gC.144_476 + prephitmp_961;
  output_489 = _488 + -1;
  # DEBUG output => output_489
  if (dID_421 > sID_427)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  output_490 = dID_421 + output_489;
  # DEBUG output => output_490
  goto <bb 74>;

  <bb 71>:
  _491 = dID_421 + 1;
  output_492 = output_489 + _491;
  # DEBUG output => output_492
  goto <bb 74>;

  <bb 72>:

  <bb 73>:
  # d_631 = PHI <0(72), d_495(67)>
  # dest_rID_633 = PHI <dest_rID_477(72), dest_rID_493(67)>
  # rID_474 = PHI <rID_208(72), rID_494(67)>
  # DEBUG d => d_631
  # DEBUG dest_rID => dest_rID_633
  # DEBUG rID => rID_474
  # DEBUG dID => dID_405
  # DEBUG sID => dID_405
  dest_rID_493 = dest_rID_633 / gK.145_616;
  # DEBUG dest_rID => dest_rID_493
  rID_494 = rID_474 / gK.145_616;
  # DEBUG rID => rID_494
  d_495 = d_631 + 1;
  # DEBUG d => d_495
  # DEBUG d => d_495
  # DEBUG dest_rID => dest_rID_493
  # DEBUG rID => rID_494
  if (_dim_478 <= d_495)
    goto <bb 63>;
  else
    goto <bb 66>;

  <bb 74>:
  # _496 = PHI <_479(64), output_490(70), output_492(71)>
  # DEBUG tmp_out_port => NULL
  _90 = f_35(D)->watch;
  if (_90 != 0)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  # DEBUG D#30 => &r_50(D)->D.45421.D.36000
  # DEBUG this => D#30
  _93 = GetSimTime ();
  gWatchOut.136_94 = gWatchOut;
  _96 = std::basic_ostream<char>::operator<< (gWatchOut.136_94, _93);
  # DEBUG __out => _96
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_96, " | ", 3);
  # DEBUG __os => _96
  # DEBUG __str => NULL
  _97 = MEM[(long unsigned int *)r_50(D) + 48B];
  # DEBUG this => D#1
  _261 = (long int) _97;
  # DEBUG this => NULL
  _262 = MEM[(char * *)r_50(D) + 40B];
  # DEBUG this => D#6
  _263 = std::__ostream_insert<char, std::char_traits<char> > (_96, _262, _261);
  # DEBUG __out => _263
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_263, " | ", 3);
  # DEBUG __out => _263
  # DEBUG __s => " MIN tmp_out_port: "
  # DEBUG __s => " MIN tmp_out_port: "
  std::__ostream_insert<char, std::char_traits<char> > (_263, " MIN tmp_out_port: ", 19);
  std::basic_ostream<char>::operator<< (_263, _496);

  <bb 76>:
  _99 = r_50(D)->D.45421.D.36000._vptr.Module;
  _100 = MEM[(int (*__vtbl_ptr_type) () *)_99 + 72B];
  _min_queucnt_102 = OBJ_TYPE_REF(_100;(const struct Router)r_50(D)->9) (r_50(D), _496);
  # DEBUG _min_queucnt => _min_queucnt_102
  _103 = f_35(D)->src;
  # DEBUG dest => _103
  _xcount.146_292 = _xcount;
  _xrouter.147_293 = _xrouter;
  _294 = _xcount.146_292 * _xrouter.147_293;
  _295 = _103 % _294;
  horizontal_296 = _295 / _xrouter.147_293;
  # DEBUG horizontal => horizontal_296
  horizontal_rem_297 = _295 % _xrouter.147_293;
  # DEBUG horizontal_rem => horizontal_rem_297
  _298 = _103 / _294;
  _yrouter.148_299 = _yrouter;
  vertical_300 = _298 / _yrouter.148_299;
  # DEBUG vertical => vertical_300
  vertical_rem_301 = _298 % _yrouter.148_299;
  # DEBUG vertical_rem => vertical_rem_301
  _302 = _xcount.146_292 * vertical_300;
  _303 = horizontal_296 + _302;
  gC.149_304 = gC;
  _305 = _303 * gC.149_304;
  _306 = _xrouter.147_293 * vertical_rem_301;
  _307 = _305 + _306;
  dest_308 = horizontal_rem_297 + _307;
  # DEBUG dest => dest_308
  # DEBUG src => NULL
  # DEBUG dest => NULL
  # DEBUG dist => 0
  _dim_277 = gN;
  # DEBUG _dim => _dim_277
  src_tmp_278 = dest_308 / gC.149_304;
  # DEBUG src_tmp => src_tmp_278
  dest_rID_279 = dest_643 / gC.149_304;
  # DEBUG dest_tmp => dest_rID_279
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_rID_279
  # DEBUG src_tmp => src_tmp_278
  # DEBUG dist => 0
  if (_dim_277 <= 0)
    goto <bb 178>;
  else
    goto <bb 77>;

  <bb 77>:
  pretmp_950 = gK;

  <bb 78>:
  # d_619 = PHI <0(77), d_290(81)>
  # src_tmp_621 = PHI <src_tmp_278(77), src_tmp_288(81)>
  # dest_rID_624 = PHI <dest_rID_279(77), dest_rID_289(81)>
  # dist_627 = PHI <0(77), dist_291(81)>
  # DEBUG d => d_619
  # DEBUG dest_tmp => dest_rID_624
  # DEBUG src_tmp => src_tmp_621
  # DEBUG dist => dist_627
  src_id_283 = src_tmp_621 % pretmp_950;
  # DEBUG src_id => src_id_283
  dest_id_285 = dest_rID_624 % pretmp_950;
  # DEBUG dest_id => dest_id_285
  if (src_id_283 != dest_id_285)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  dist_287 = dist_627 + 1;
  # DEBUG dist => dist_287

  <bb 80>:
  # dist_291 = PHI <dist_627(78), dist_287(79)>
  # DEBUG dist => dist_291
  src_tmp_288 = src_tmp_621 / pretmp_950;
  # DEBUG src_tmp => src_tmp_288
  dest_rID_289 = dest_rID_624 / pretmp_950;
  # DEBUG dest_tmp => dest_rID_289
  d_290 = d_619 + 1;
  # DEBUG d => d_290
  # DEBUG d => d_290
  # DEBUG dest_tmp => dest_rID_289
  # DEBUG src_tmp => src_tmp_288
  # DEBUG dist => dist_291
  if (_dim_277 <= d_290)
    goto <bb 177>;
  else
    goto <bb 81>;

  <bb 81>:
  goto <bb 78>;

  <bb 82>:

  <bb 83>:
  # d_652 = PHI <0(177), d_275(82)>
  # dest_rID_728 = PHI <dest_rID_279(177), dest_rID_273(82)>
  # dest_tmp_653 = PHI <dest_tmp_7(177), dest_tmp_274(82)>
  # dist_650 = PHI <0(177), dist_276(82)>
  # DEBUG d => d_652
  # DEBUG dest_tmp => dest_tmp_653
  # DEBUG src_tmp => dest_rID_728
  # DEBUG dist => dist_650
  src_id_268 = dest_rID_728 % pretmp_950;
  # DEBUG src_id => src_id_268
  dest_id_270 = dest_tmp_653 % pretmp_950;
  # DEBUG dest_id => dest_id_270
  if (src_id_268 != dest_id_270)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  dist_272 = dist_650 + 1;
  # DEBUG dist => dist_272

  <bb 85>:
  # dist_276 = PHI <dist_650(83), dist_272(84)>
  # DEBUG dist => dist_276
  dest_rID_273 = dest_rID_728 / pretmp_950;
  # DEBUG src_tmp => dest_rID_273
  dest_tmp_274 = dest_tmp_653 / pretmp_950;
  # DEBUG dest_tmp => dest_tmp_274
  d_275 = d_652 + 1;
  # DEBUG d => d_275
  # DEBUG d => d_275
  # DEBUG dest_tmp => dest_tmp_274
  # DEBUG src_tmp => dest_rID_273
  # DEBUG dist => dist_276
  if (d_275 >= _dim_277)
    goto <bb 179>;
  else
    goto <bb 82>;

  <bb 86>:
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_279
  # DEBUG rID => rID_208
  if (_dim_277 <= 0)
    goto <bb 63>;
  else
    goto <bb 88>;

  <bb 87>:
  # _nonmin_hop_498 = PHI <0(178), _nonmin_hop_422(179)>
  _533 = dest_643 % gC.149_304;
  goto <bb 98>;

  <bb 88>:
  pretmp_938 = gK;

  <bb 89>:
  # _nonmin_hop_722 = PHI <0(88), _nonmin_hop_422(179)>
  # prephitmp_939 = PHI <pretmp_938(88), pretmp_950(179)>
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_279
  # DEBUG rID => rID_208
  dID_738 = dest_rID_279 % prephitmp_939;
  # DEBUG dID => dID_738
  sID_497 = rID_208 % prephitmp_939;
  # DEBUG sID => sID_497
  if (sID_497 != dID_738)
    goto <bb 93>;
  else
    goto <bb 96>;

  <bb 90>:
  dID_537 = dest_rID_547 % prephitmp_939;
  # DEBUG dID => dID_537
  sID_539 = rID_548 % prephitmp_939;
  # DEBUG sID => sID_539
  if (dID_537 != sID_539)
    goto <bb 92>;
  else
    goto <bb 91>;

  <bb 91>:
  goto <bb 97>;

  <bb 92>:
  # dID_1007 = PHI <dID_537(90)>
  # sID_1006 = PHI <sID_539(90)>
  # d_1005 = PHI <d_549(90)>
  pretmp_945 = prephitmp_939 + -1;
  pretmp_946 = d_1005 * pretmp_945;

  <bb 93>:
  # dID_460 = PHI <dID_1007(92), dID_738(89)>
  # sID_472 = PHI <sID_1006(92), sID_497(89)>
  # prephitmp_947 = PHI <pretmp_946(92), 0(89)>
  _542 = gC.149_304 + prephitmp_947;
  output_543 = _542 + -1;
  # DEBUG output => output_543
  if (dID_460 > sID_472)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  output_544 = dID_460 + output_543;
  # DEBUG output => output_544
  goto <bb 98>;

  <bb 95>:
  _545 = dID_460 + 1;
  output_546 = output_543 + _545;
  # DEBUG output => output_546
  goto <bb 98>;

  <bb 96>:

  <bb 97>:
  # d_449 = PHI <0(96), d_549(91)>
  # dest_rID_462 = PHI <dest_rID_279(96), dest_rID_547(91)>
  # rID_465 = PHI <rID_208(96), rID_548(91)>
  # DEBUG d => d_449
  # DEBUG dest_rID => dest_rID_462
  # DEBUG rID => rID_465
  # DEBUG dID => dID_738
  # DEBUG sID => dID_738
  dest_rID_547 = dest_rID_462 / prephitmp_939;
  # DEBUG dest_rID => dest_rID_547
  rID_548 = rID_465 / prephitmp_939;
  # DEBUG rID => rID_548
  d_549 = d_449 + 1;
  # DEBUG d => d_549
  # DEBUG d => d_549
  # DEBUG dest_rID => dest_rID_547
  # DEBUG rID => rID_548
  if (_dim_277 <= d_549)
    goto <bb 63>;
  else
    goto <bb 90>;

  <bb 98>:
  # _550 = PHI <_533(87), output_544(94), output_546(95)>
  # _nonmin_hop_622 = PHI <_nonmin_hop_498(87), _nonmin_hop_722(94), _nonmin_hop_722(95)>
  # DEBUG tmp_out_port => NULL
  _110 = f_35(D)->watch;
  if (_110 != 0)
    goto <bb 99>;
  else
    goto <bb 105>;

  <bb 99>:
  # DEBUG D#31 => &r_50(D)->D.45421.D.36000
  # DEBUG this => D#31
  _113 = GetSimTime ();
  gWatchOut.136_114 = gWatchOut;
  _116 = std::basic_ostream<char>::operator<< (gWatchOut.136_114, _113);
  # DEBUG __out => _116
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_116, " | ", 3);
  # DEBUG __os => _116
  # DEBUG __str => NULL
  _117 = MEM[(long unsigned int *)r_50(D) + 48B];
  # DEBUG this => D#1
  _309 = (long int) _117;
  # DEBUG this => NULL
  _310 = MEM[(char * *)r_50(D) + 40B];
  # DEBUG this => D#6
  _311 = std::__ostream_insert<char, std::char_traits<char> > (_116, _310, _309);
  # DEBUG __out => _311
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_311, " | ", 3);
  # DEBUG __out => _311
  # DEBUG __s => " NONMIN tmp_out_port: "
  # DEBUG __s => " NONMIN tmp_out_port: "
  std::__ostream_insert<char, std::char_traits<char> > (_311, " NONMIN tmp_out_port: ", 22);
  _119 = std::basic_ostream<char>::operator<< (_311, _550);
  # DEBUG this => _119
  # DEBUG __pf => endl
  # DEBUG __os => _119
  _108 = _119->_vptr.basic_ostream;
  _554 = MEM[(long int *)_108 + -24B];
  _555 = (sizetype) _554;
  _556 = _119 + _555;
  # DEBUG this => _556
  # DEBUG __c => 10
  _359 = MEM[(const struct basic_ios *)_556]._M_ctype;
  # DEBUG __f => _359
  if (_359 == 0B)
    goto <bb 18>;
  else
    goto <bb 100>;

  <bb 100>:
  # DEBUG this => _359
  # DEBUG __c => 10
  _561 = MEM[(const struct ctype *)_359]._M_widen_ok;
  if (_561 != 0)
    goto <bb 101>;
  else
    goto <bb 102>;

  <bb 101>:
  _564 = MEM[(const struct ctype *)_359]._M_widen[10];
  pretmp_935 = (int) _564;
  goto <bb 104>;

  <bb 102>:
  # DEBUG this => _359
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_359);
  _569 = MEM[(const struct ctype *)_359].D.20312._vptr.facet;
  _570 = MEM[(int (*__vtbl_ptr_type) () *)_569 + 48B];
  PROF_574 = [obj_type_ref] OBJ_TYPE_REF(_570;(const struct ctype)_359->6);
  if (PROF_574 == do_widen)
    goto <bb 104>;
  else
    goto <bb 103>;

  <bb 103>:
  _576 = OBJ_TYPE_REF(_570;(const struct ctype)_359->6) (_359, 10);
  pretmp_936 = (int) _576;

  <bb 104>:
  # prephitmp_937 = PHI <pretmp_935(101), 10(102), pretmp_936(103)>
  _559 = std::basic_ostream<char>::put (_119, prephitmp_937);
  # DEBUG __os => _559
  std::basic_ostream<char>::flush (_559);

  <bb 105>:
  if (dest_643 >= _695)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  _120 = rID_208 + 1;
  _121 = gC.149_49 * _120;
  if (_121 > dest_643)
    goto <bb 181>;
  else
    goto <bb 107>;

  <bb 107>:
  _123 = r_50(D)->D.45421.D.36000._vptr.Module;
  _124 = MEM[(int (*__vtbl_ptr_type) () *)_123 + 72B];
  _nonmin_queucnt_126 = OBJ_TYPE_REF(_124;(const struct Router)r_50(D)->9) (r_50(D), _550);
  # DEBUG _nonmin_queucnt => _nonmin_queucnt_126
  # DEBUG _nonmin_queucnt => _nonmin_queucnt_126
  _127 = _min_queucnt_102 * _min_hop_744;
  _128 = _nonmin_queucnt_126 * _nonmin_hop_622;
  _129 = _128 + 2;
  if (_127 <= _129)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  f_35(D)->ph = 2;
  pretmp_988 = gC;
  goto <bb 115>;

  <bb 109>:
  f_35(D)->ph = 1;
  f_35(D)->intm = dest_643;
  # DEBUG dest => NULL
  if (dest_643 >= _695)
    goto <bb 111>;
  else
    goto <bb 110>;

  <bb 110>:
  pretmp_987 = gC;
  goto <bb 115>;

  <bb 111>:
  pretmp_923 = rID_208 + 1;
  pretmp_925 = gC.149_49 * pretmp_923;

  <bb 112>:
  # prephitmp_926 = PHI <pretmp_925(111), _121(180)>
  # DEBUG dest => NULL
  if (dest_643 < prephitmp_926)
    goto <bb 114>;
  else
    goto <bb 113>;

  <bb 113>:
  pretmp_989 = gC;
  goto <bb 115>;

  <bb 114>:
  f_35(D)->ph = 2;
  _136 = f_35(D)->dest;
  # DEBUG dest => _136
  _xcount.146_130 = _xcount;
  _xrouter.147_312 = _xrouter;
  _313 = _xcount.146_130 * _xrouter.147_312;
  _314 = _136 % _313;
  horizontal_315 = _314 / _xrouter.147_312;
  # DEBUG horizontal => horizontal_315
  horizontal_rem_316 = _314 % _xrouter.147_312;
  # DEBUG horizontal_rem => horizontal_rem_316
  _317 = _136 / _313;
  _yrouter.148_318 = _yrouter;
  vertical_319 = _317 / _yrouter.148_318;
  # DEBUG vertical => vertical_319
  vertical_rem_320 = _317 % _yrouter.148_318;
  # DEBUG vertical_rem => vertical_rem_320
  _321 = _xcount.146_130 * vertical_319;
  _322 = horizontal_315 + _321;
  gC.149_323 = gC;
  _324 = _322 * gC.149_323;
  _325 = _xrouter.147_312 * vertical_rem_320;
  _326 = _324 + _325;
  dest_327 = horizontal_rem_316 + _326;
  # DEBUG dest => dest_327
  # DEBUG dest => NULL

  <bb 115>:
  # dest_14 = PHI <dest_441(172), dest_643(110), dest_441(108), dest_327(114), dest_643(113), dest_71(43), dest_228(47)>
  # prephitmp_991 = PHI <prephitmp_1059(172), pretmp_987(110), pretmp_988(108), gC.149_323(114), pretmp_989(113), prephitmp_1012(43), prephitmp_1055(47)>
  # prephitmp_992 = PHI <prephitmp_1047(172), 1(110), 2(108), 2(114), 1(113), _70(43), 2(47)>
  # DEBUG dest => dest_14
  # DEBUG dest => dest_14
  # DEBUG rID => rID_208
  dest_rID_580 = dest_14 / prephitmp_991;
  # DEBUG dest_rID => dest_rID_580
  _dim_581 = gN;
  # DEBUG _dim => _dim_581
  # DEBUG output => -1
  if (rID_208 == dest_rID_580)
    goto <bb 117>;
  else
    goto <bb 116>;

  <bb 116>:
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_580
  # DEBUG rID => rID_208
  if (_dim_581 <= 0)
    goto <bb 63>;
  else
    goto <bb 118>;

  <bb 117>:
  _582 = dest_14 % prephitmp_991;
  goto <bb 127>;

  <bb 118>:
  gK.145_440 = gK;
  dID_436 = dest_rID_580 % gK.145_440;
  # DEBUG dID => dID_436
  sID_444 = rID_208 % gK.145_440;
  # DEBUG sID => sID_444
  if (dID_436 != sID_444)
    goto <bb 122>;
  else
    goto <bb 125>;

  <bb 119>:
  dID_586 = dest_rID_596 % gK.145_440;
  # DEBUG dID => dID_586
  sID_588 = rID_597 % gK.145_440;
  # DEBUG sID => sID_588
  if (dID_586 != sID_588)
    goto <bb 121>;
  else
    goto <bb 120>;

  <bb 120>:
  goto <bb 126>;

  <bb 121>:
  # dID_1004 = PHI <dID_586(119)>
  # sID_1003 = PHI <sID_588(119)>
  # d_999 = PHI <d_598(119)>
  pretmp_1000 = gK.145_440 + -1;
  pretmp_1001 = d_999 * pretmp_1000;

  <bb 122>:
  # dID_578 = PHI <dID_1004(121), dID_436(118)>
  # sID_575 = PHI <sID_1003(121), sID_444(118)>
  # prephitmp_1002 = PHI <pretmp_1001(121), 0(118)>
  _591 = prephitmp_991 + prephitmp_1002;
  output_592 = _591 + -1;
  # DEBUG output => output_592
  if (sID_575 < dID_578)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 123>:
  output_593 = dID_578 + output_592;
  # DEBUG output => output_593
  goto <bb 127>;

  <bb 124>:
  _594 = dID_578 + 1;
  output_595 = output_592 + _594;
  # DEBUG output => output_595
  goto <bb 127>;

  <bb 125>:

  <bb 126>:
  # d_618 = PHI <0(125), d_598(120)>
  # dest_rID_709 = PHI <dest_rID_580(125), dest_rID_596(120)>
  # rID_456 = PHI <rID_208(125), rID_597(120)>
  # DEBUG d => d_618
  # DEBUG dest_rID => dest_rID_709
  # DEBUG rID => rID_456
  # DEBUG dID => dID_436
  # DEBUG sID => dID_436
  dest_rID_596 = dest_rID_709 / gK.145_440;
  # DEBUG dest_rID => dest_rID_596
  rID_597 = rID_456 / gK.145_440;
  # DEBUG rID => rID_597
  d_598 = d_618 + 1;
  # DEBUG d => d_598
  # DEBUG d => d_598
  # DEBUG dest_rID => dest_rID_596
  # DEBUG rID => rID_597
  if (_dim_581 <= d_598)
    goto <bb 63>;
  else
    goto <bb 119>;

  <bb 127>:
  # out_port_599 = PHI <_582(117), output_593(123), output_595(124)>
  # DEBUG out_port => NULL
  if (out_port_599 >= prephitmp_991)
    goto <bb 128>;
  else
    goto <bb 135>;

  <bb 128>:
  _142 = vcEnd_5 - vcBegin_1;
  _143 = _142 + 1;
  available_vcs_144 = _143 / 2;
  # DEBUG available_vcs => available_vcs_144
  if (available_vcs_144 <= 0)
    goto <bb 129>;
  else
    goto <bb 130>;

  <bb 129>:
  __assert_fail ("available_vcs > 0", "networks/flatfly_onchip.cpp", 1133, &__PRETTY_FUNCTION__);

  <bb 130>:
  if (prephitmp_992 == 1)
    goto <bb 131>;
  else
    goto <bb 132>;

  <bb 131>:
  vcEnd_148 = vcEnd_5 - available_vcs_144;
  # DEBUG vcEnd => vcEnd_148
  goto <bb 135>;

  <bb 132>:
  if (prephitmp_992 != 2)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  __assert_fail ("f->ph == 2", "networks/flatfly_onchip.cpp", 1137, &__PRETTY_FUNCTION__);

  <bb 134>:
  vcBegin_146 = vcBegin_1 + available_vcs_144;
  # DEBUG vcBegin => vcBegin_146

  <bb 135>:
  # vcBegin_2 = PHI <vcBegin_1(48), vcBegin_146(134), vcBegin_1(127), vcBegin_1(131)>
  # vcEnd_6 = PHI <vcEnd_5(48), vcEnd_5(134), vcEnd_5(127), vcEnd_148(131)>
  # out_port_10 = PHI <out_port_77(48), out_port_599(134), out_port_599(127), out_port_599(131)>
  # prephitmp_973 = PHI <pretmp_972(48), _dim_581(134), _dim_581(127), _dim_581(131)>
  # prephitmp_974 = PHI <prephitmp_1055(48), prephitmp_991(134), prephitmp_991(127), prephitmp_991(131)>
  # DEBUG found => 1
  # DEBUG out_port => out_port_10
  # DEBUG vcEnd => vcEnd_6
  # DEBUG vcBegin => vcBegin_2
  gK.137_150 = gK;
  _151 = gK.137_150 + -1;
  _153 = _151 * prephitmp_973;
  _155 = _153 + prephitmp_974;
  if (out_port_10 >= _155)
    goto <bb 136>;
  else
    goto <bb 137>;

  <bb 136>:
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR: output port too big! "
  # DEBUG __s => " ERROR: output port too big! "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR: output port too big! ", 29);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (&cout);
  # DEBUG __out => &cout
  # DEBUG __s => " OUTPUT select: "
  # DEBUG __s => " OUTPUT select: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " OUTPUT select: ", 16);
  _161 = std::basic_ostream<char>::operator<< (&cout, out_port_10);
  # DEBUG this => _161
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_161);
  gK.137_162 = gK;
  _163 = gK.137_162 + -1;
  gN.138_164 = gN;
  _165 = _163 * gN.138_164;
  _166 = gK.137_162 + _165;
  # DEBUG __out => &cout
  # DEBUG __s => " router radix: "
  # DEBUG __s => " router radix: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " router radix: ", 15);
  _168 = std::basic_ostream<char>::operator<< (&cout, _166);
  # DEBUG this => _168
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_168);
  exit (-1);

  <bb 137>:
  gTrace.135_156 = gTrace;
  if (gTrace.135_156 != 0)
    goto <bb 138>;
  else
    goto <bb 173>;

  <bb 138>:
  # DEBUG __out => &cout
  # DEBUG __s => "Outport "
  # DEBUG __s => "Outport "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Outport ", 8);
  _159 = std::basic_ostream<char>::operator<< (&cout, out_port_10);
  # DEBUG this => _159
  # DEBUG __pf => endl
  # DEBUG __os => _159
  _363 = _159->_vptr.basic_ostream;
  _610 = MEM[(long int *)_363 + -24B];
  _611 = (sizetype) _610;
  _612 = _159 + _611;
  # DEBUG this => _612
  # DEBUG __c => 10
  _361 = MEM[(const struct basic_ios *)_612]._M_ctype;
  # DEBUG __f => _361
  if (_361 == 0B)
    goto <bb 18>;
  else
    goto <bb 139>;

  <bb 139>:
  # DEBUG this => _361
  # DEBUG __c => 10
  _617 = MEM[(const struct ctype *)_361]._M_widen_ok;
  if (_617 != 0)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  _620 = MEM[(const struct ctype *)_361]._M_widen[10];
  pretmp_980 = (int) _620;
  goto <bb 143>;

  <bb 141>:
  # DEBUG this => _361
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_361);
  _625 = MEM[(const struct ctype *)_361].D.20312._vptr.facet;
  _626 = MEM[(int (*__vtbl_ptr_type) () *)_625 + 48B];
  PROF_630 = [obj_type_ref] OBJ_TYPE_REF(_626;(const struct ctype)_361->6);
  if (PROF_630 == do_widen)
    goto <bb 143>;
  else
    goto <bb 142>;

  <bb 142>:
  _632 = OBJ_TYPE_REF(_626;(const struct ctype)_361->6) (_361, 10);
  pretmp_981 = (int) _632;

  <bb 143>:
  # prephitmp_982 = PHI <pretmp_980(140), 10(141), pretmp_981(142)>
  _615 = std::basic_ostream<char>::put (_159, prephitmp_982);
  # DEBUG __os => _615
  std::basic_ostream<char>::flush (_615);
  # DEBUG __out => &cout
  # DEBUG __s => "Stop Mark"
  # DEBUG __s => "Stop Mark"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Stop Mark", 9);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _139 = cout._vptr.basic_ostream;
  _603 = MEM[(long int *)_139 + -24B];
  _604 = (sizetype) _603;
  _605 = &cout + _604;
  # DEBUG this => _605
  # DEBUG __c => 10
  _635 = MEM[(const struct basic_ios *)_605]._M_ctype;
  # DEBUG __f => _635
  if (_635 == 0B)
    goto <bb 18>;
  else
    goto <bb 144>;

  <bb 144>:
  # DEBUG this => _635
  # DEBUG __c => 10
  _636 = MEM[(const struct ctype *)_635]._M_widen_ok;
  if (_636 != 0)
    goto <bb 145>;
  else
    goto <bb 146>;

  <bb 145>:
  _639 = MEM[(const struct ctype *)_635]._M_widen[10];
  pretmp_983 = (int) _639;
  goto <bb 148>;

  <bb 146>:
  # DEBUG this => _635
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_635);
  _644 = MEM[(const struct ctype *)_635].D.20312._vptr.facet;
  _645 = MEM[(int (*__vtbl_ptr_type) () *)_644 + 48B];
  PROF_649 = [obj_type_ref] OBJ_TYPE_REF(_645;(const struct ctype)_635->6);
  if (PROF_649 == do_widen)
    goto <bb 148>;
  else
    goto <bb 147>;

  <bb 147>:
  _651 = OBJ_TYPE_REF(_645;(const struct ctype)_635->6) (_635, 10);
  pretmp_984 = (int) _651;

  <bb 148>:
  # prephitmp_985 = PHI <pretmp_983(145), 10(146), pretmp_984(147)>
  _608 = std::basic_ostream<char>::put (&cout, prephitmp_985);
  # DEBUG __os => _608
  std::basic_ostream<char>::flush (_608);
  pretmp_975 = gC;
  goto <bb 173>;

  <bb 149>:
  gK.137_173 = gK;
  gC.134_174 = gC;
  if (gK.137_173 != gC.134_174)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  __assert_fail ("gK == gC", "networks/flatfly_onchip.cpp", 1168, &__PRETTY_FUNCTION__);

  <bb 151>:
  if (inject_46(D) != 0)
    goto <bb 152>;
  else
    goto <bb 153>;

  <bb 152>:
  # gK.137_600 = PHI <gK.137_173(151), gK.137_690(182)>
  _175 = f_35(D)->ph;
  iftmp.139_176 = _175 == -1;
  goto <bb 154>;

  <bb 153>:
  # out_port_557 = PHI <-1(151), out_port_10(183)>
  # gK.137_666 = PHI <gK.137_173(151), gK.137_381(183)>
  # vcBegin_710 = PHI <vcBegin_1(151), vcBegin_2(183)>
  # vcEnd_87 = PHI <vcEnd_5(151), vcEnd_6(183)>
  _177 = f_35(D)->ph;
  _178 = (unsigned int) _177;
  _179 = _178 + 4294967295;
  iftmp.139_180 = _179 <= 1;

  <bb 154>:
  # iftmp.139_21 = PHI <iftmp.139_176(152), iftmp.139_180(153)>
  # out_port_385 = PHI <-1(152), out_port_557(153)>
  # gK.137_714 = PHI <gK.137_600(152), gK.137_666(153)>
  # vcBegin_566 = PHI <vcBegin_1(152), vcBegin_710(153)>
  # vcEnd_739 = PHI <vcEnd_5(152), vcEnd_87(153)>
  if (iftmp.139_21 != 0)
    goto <bb 156>;
  else
    goto <bb 155>;

  <bb 155>:
  __assert_fail ("inject ? (f->ph == -1) : (f->ph == 1 || f->ph == 2)", "networks/flatfly_onchip.cpp", 1170, &__PRETTY_FUNCTION__);

  <bb 156>:
  _181 = f_35(D)->dest;
  # DEBUG dest => _181
  _xcount.146_157 = _xcount;
  _xrouter.147_328 = _xrouter;
  _329 = _xcount.146_157 * _xrouter.147_328;
  _330 = _181 % _329;
  horizontal_331 = _330 / _xrouter.147_328;
  # DEBUG horizontal => horizontal_331
  horizontal_rem_332 = _330 % _xrouter.147_328;
  # DEBUG horizontal_rem => horizontal_rem_332
  _333 = _181 / _329;
  _yrouter.148_334 = _yrouter;
  vertical_335 = _333 / _yrouter.148_334;
  # DEBUG vertical => vertical_335
  vertical_rem_336 = _333 % _yrouter.148_334;
  # DEBUG vertical_rem => vertical_rem_336
  _337 = _xcount.146_157 * vertical_335;
  _338 = horizontal_331 + _337;
  _339 = _338 * gK.137_714;
  _340 = _xrouter.147_328 * vertical_rem_336;
  _341 = _339 + _340;
  next_coord_342 = horizontal_rem_332 + _341;
  # DEBUG dest => next_coord_342
  # DEBUG next_coord => NULL
  if (inject_46(D) != 0)
    goto <bb 157>;
  else
    goto <bb 158>;

  <bb 157>:
  next_coord_182 = next_coord_342 / gK.137_714;
  # DEBUG next_coord => next_coord_182
  next_coord_183 = next_coord_182 % gK.137_714;
  # DEBUG next_coord => next_coord_183
  goto <bb 166>;

  <bb 158>:
  _184 = out_port_385 - gK.137_714;
  _185 = gK.137_714 + -1;
  _186 = _184 / _185;
  next_dim_187 = _186 + 1;
  # DEBUG next_dim => next_dim_187
  gN.138_188 = gN;
  if (next_dim_187 == gN.138_188)
    goto <bb 159>;
  else
    goto <bb 160>;

  <bb 159>:
  next_coord_189 = next_coord_342 % gK.137_714;
  # DEBUG next_coord => next_coord_189
  goto <bb 166>;

  <bb 160>:
  next_coord_190 = next_coord_342 / gK.137_714;
  # DEBUG next_coord => next_coord_190
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG next_coord => next_coord_190
  if (next_dim_187 <= 0)
    goto <bb 165>;
  else
    goto <bb 161>;

  <bb 161>:

  <bb 162>:
  # next_coord_679 = PHI <next_coord_190(161), next_coord_191(164)>
  # d_434 = PHI <0(161), d_192(164)>
  # DEBUG d => d_434
  # DEBUG next_coord => next_coord_679
  next_coord_191 = next_coord_679 / gK.137_714;
  # DEBUG next_coord => next_coord_191
  d_192 = d_434 + 1;
  # DEBUG d => d_192
  # DEBUG d => d_192
  # DEBUG next_coord => next_coord_191
  if (next_dim_187 <= d_192)
    goto <bb 163>;
  else
    goto <bb 164>;

  <bb 163>:
  # next_coord_1018 = PHI <next_coord_191(162)>
  goto <bb 165>;

  <bb 164>:
  goto <bb 162>;

  <bb 165>:
  # next_coord_141 = PHI <next_coord_1018(163), next_coord_190(160)>
  next_coord_193 = next_coord_141 % gK.137_714;
  # DEBUG next_coord => next_coord_193

  <bb 166>:
  # next_coord_19 = PHI <next_coord_183(157), next_coord_189(159), next_coord_193(165)>
  # DEBUG next_coord => next_coord_19
  _500 = next_coord_19 >= gK.137_714;
  _501 = next_coord_19 < 0;
  _661 = _500 | _501;
  if (_661 != 0)
    goto <bb 167>;
  else
    goto <bb 168>;

  <bb 167>:
  __assert_fail ("next_coord >= 0 && next_coord < gK", "networks/flatfly_onchip.cpp", 1188, &__PRETTY_FUNCTION__);

  <bb 168>:
  _194 = vcEnd_739 - vcBegin_566;
  _195 = _194 + 1;
  vcs_per_dest_196 = _195 / gK.137_714;
  # DEBUG vcs_per_dest => vcs_per_dest_196
  if (vcs_per_dest_196 <= 0)
    goto <bb 169>;
  else
    goto <bb 170>;

  <bb 169>:
  __assert_fail ("vcs_per_dest > 0", "networks/flatfly_onchip.cpp", 1190, &__PRETTY_FUNCTION__);

  <bb 170>:
  _197 = next_coord_19 * vcs_per_dest_196;
  vcBegin_198 = _197 + vcBegin_566;
  # DEBUG vcBegin => vcBegin_198
  _199 = vcs_per_dest_196 + vcBegin_198;
  vcEnd_200 = _199 + -1;
  # DEBUG vcEnd => vcEnd_200

  <bb 171>:
  # vcBegin_4 = PHI <vcBegin_2(173), vcBegin_198(170)>
  # vcEnd_8 = PHI <vcEnd_6(173), vcEnd_200(170)>
  # out_port_171 = PHI <out_port_10(173), out_port_385(170)>
  # DEBUG vcEnd => vcEnd_8
  # DEBUG vcBegin => vcBegin_4
  OutputSet::Clear (outputs_205(D));
  OutputSet::AddRange (outputs_205(D), out_port_171, vcBegin_4, vcEnd_8, 0);
  return;

  <bb 172>:
  # dest_441 = PHI <dest_212(44), dest_572(45)>
  # _695 = PHI <_72(44), _702(45)>
  # prephitmp_1047 = PHI <prephitmp_1010(44), prephitmp_1056(45)>
  # prephitmp_1059 = PHI <prephitmp_1058(44), prephitmp_1055(45)>
  # DEBUG found => 0
  # DEBUG dest => dest_441
  # DEBUG out_port => out_port_73(D)
  # DEBUG found => 0
  # DEBUG dest => dest_441
  # DEBUG out_port => out_port_73(D)
  if (prephitmp_1047 == 0)
    goto <bb 49>;
  else
    goto <bb 115>;

  <bb 173>:
  # prephitmp_976 = PHI <pretmp_975(148), prephitmp_974(137)>
  # DEBUG out_port => out_port_10
  # DEBUG vcEnd => vcEnd_6
  # DEBUG vcBegin => vcBegin_2
  # DEBUG out_port => out_port_10
  # DEBUG vcEnd => vcEnd_6
  # DEBUG vcBegin => vcBegin_2
  if (out_port_10 >= prephitmp_976)
    goto <bb 183>;
  else
    goto <bb 171>;

  <bb 174>:
  # DEBUG found => 0
  pretmp_1057 = gC;
  goto <bb 44>;

  <bb 175>:
  # _min_hop_1017 = PHI <_min_hop_243(53)>
  # DEBUG _min_hop => NULL
  # DEBUG dest => _82
  # DEBUG horizontal => horizontal_248
  # DEBUG horizontal_rem => horizontal_rem_249
  # DEBUG vertical => vertical_252
  # DEBUG vertical_rem => vertical_rem_253
  # DEBUG dest => dest_260
  # DEBUG src => dest_260
  # DEBUG dest => dest_441
  # DEBUG _dim => _dim_229
  # DEBUG _ran_dest => 0
  # DEBUG debug => 0
  # DEBUG src => src_230
  # DEBUG dest => dest_231
  # DEBUG max => D#359 + -1
  _513 = ran_next ();
  _13 = (long int) prephitmp_1059;
  _15 = _513 % _13;
  dest_25 = (int) _15;
  # DEBUG _ran_dest => dest_25
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG _ran_dest => dest_25
  # DEBUG dest => dest_231
  # DEBUG src => src_230
  # DEBUG _min_hop => NULL
  # DEBUG horizontal => horizontal_248
  # DEBUG horizontal_rem => horizontal_rem_249
  # DEBUG vertical => vertical_252
  # DEBUG vertical_rem => vertical_rem_253
  # DEBUG dest => dest_260
  # DEBUG _dim => _dim_229
  # DEBUG debug => 0
  # DEBUG max => D#359 + -1
  # DEBUG d => 0
  # DEBUG _ran_dest => dest_25
  # DEBUG dest => dest_231
  # DEBUG src => src_230
  pretmp_967 = gK;
  goto <bb 56>;

  <bb 176>:
  # DEBUG _min_hop => NULL
  # DEBUG dest => _82
  # DEBUG horizontal => horizontal_248
  # DEBUG horizontal_rem => horizontal_rem_249
  # DEBUG vertical => vertical_252
  # DEBUG vertical_rem => vertical_rem_253
  # DEBUG dest => dest_260
  # DEBUG src => dest_260
  # DEBUG dest => dest_441
  # DEBUG _dim => _dim_229
  # DEBUG _ran_dest => 0
  # DEBUG debug => 0
  # DEBUG src => src_230
  # DEBUG dest => dest_231
  # DEBUG max => D#359 + -1
  _232 = ran_next ();
  _236 = (long int) prephitmp_1059;
  _234 = _232 % _236;
  dest_238 = (int) _234;
  # DEBUG _ran_dest => dest_238
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG _ran_dest => dest_238
  # DEBUG dest => dest_231
  # DEBUG src => src_230
  goto <bb 61>;

  <bb 177>:
  # dist_1015 = PHI <dist_291(80)>
  # DEBUG src => NULL
  # DEBUG dest => dest_441
  # DEBUG dist => 0
  # DEBUG _dim => _dim_277
  # DEBUG src_tmp => dest_rID_279
  dest_tmp_7 = dest_441 / gC.149_304;
  # DEBUG dest_tmp => dest_tmp_7
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_tmp_7
  # DEBUG src_tmp => dest_rID_279
  # DEBUG dist => 0
  # DEBUG src => NULL
  # DEBUG dest => dest_441
  # DEBUG _dim => _dim_277
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_tmp_7
  # DEBUG src_tmp => dest_rID_279
  # DEBUG dist => 0
  goto <bb 83>;

  <bb 178>:
  # DEBUG src => NULL
  # DEBUG dest => dest_441
  # DEBUG dist => 0
  # DEBUG _dim => _dim_277
  # DEBUG src_tmp => dest_rID_279
  # DEBUG D#358 => dest_441 / gC.149_304
  # DEBUG dest_tmp => D#358
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => D#358
  # DEBUG src_tmp => dest_rID_279
  # DEBUG dist => 0
  # DEBUG _nonmin_hop => 0
  # DEBUG dest => dest_643
  # DEBUG rID => rID_208
  # DEBUG dest_rID => dest_rID_279
  # DEBUG _dim => _dim_277
  # DEBUG output => -1
  if (rID_208 == dest_rID_279)
    goto <bb 87>;
  else
    goto <bb 86>;

  <bb 179>:
  # dist_1016 = PHI <dist_276(85)>
  _nonmin_hop_422 = dist_1016 + dist_1015;
  # DEBUG _nonmin_hop => _nonmin_hop_422
  # DEBUG dest => dest_643
  # DEBUG rID => rID_208
  # DEBUG dest_rID => dest_rID_279
  # DEBUG _dim => _dim_277
  # DEBUG output => -1
  if (rID_208 == dest_rID_279)
    goto <bb 87>;
  else
    goto <bb 89>;

  <bb 180>:
  f_35(D)->ph = 1;
  f_35(D)->intm = dest_643;
  # DEBUG dest => NULL
  goto <bb 112>;

  <bb 181>:
  # DEBUG _nonmin_queucnt => 2147483647
  _397 = _min_queucnt_102 * _min_hop_744;
  _665 = _nonmin_hop_622 * 2147483647;
  _571 = _665 + 2;
  if (_397 <= _571)
    goto <bb 108>;
  else
    goto <bb 180>;

  <bb 182>:
  gK.137_690 = gK;
  gC.134_387 = gC;
  if (gC.134_387 != gK.137_690)
    goto <bb 150>;
  else
    goto <bb 152>;

  <bb 183>:
  gK.137_381 = gK;
  if (gK.137_381 != prephitmp_976)
    goto <bb 150>;
  else
    goto <bb 153>;

}



;; Function int flatfly_outport_yx(int, int) (_Z18flatfly_outport_yxii, funcdef_no=2248, decl_uid=47430, cgraph_uid=672, symbol_order=677)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int flatfly_outport_yx(int, int) (int dest, int rID)
{
  char_type D.60735;
  char __c;
  char_type D.60732;
  char __c;
  char_type D.60729;
  struct basic_ostream & D.60723;
  int power;
  int d;
  int sID;
  int dID;
  int output;
  int _dim;
  int dest_rID;
  int pretmp_1;
  int pretmp_2;
  int prephitmp_3;
  int _4;
  int gC.109_7;
  int _12;
  int gK.110_14;
  int gK.110_22;
  int _23;
  int _24;
  int gC.109_25;
  int _26;
  int _29;
  int (*__vtbl_ptr_type) () * _32;
  long int _33;
  sizetype _34;
  struct basic_ios * _35;
  struct basic_ostream & _38;
  const struct __ctype_type * _40;
  char _41;
  char_type _44;
  int (*__vtbl_ptr_type) () * _49;
  int (*__vtbl_ptr_type) () _50;
  void * PROF_54;
  char_type _56;

  <bb 2>:
  gC.109_7 = gC;
  dest_rID_9 = dest_8(D) / gC.109_7;
  # DEBUG dest_rID => dest_rID_9
  # DEBUG D#419 => gN
  # DEBUG _dim => D#419
  # DEBUG output => -1
  if (dest_rID_9 == rID_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _12 = dest_8(D) % gC.109_7;
  goto <bb 19>;

  <bb 4>:
  _dim_10 = gN;
  d_13 = _dim_10 + -1;
  # DEBUG d => d_13
  # DEBUG d => d_13
  # DEBUG dest_rID => dest_rID_9
  # DEBUG rID => rID_11(D)
  if (d_13 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#20 => dest_8(D)
  # DEBUG D#21 => rID_11(D)
  # DEBUG D#22 => D#21
  # DEBUG rID => D#22
  # DEBUG D#23 => D#20
  # DEBUG dest => D#23
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found yx"
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found yx"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR ---- FLATFLY_OUTPORT function : output not found yx", 58);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _32 = cout._vptr.basic_ostream;
  _33 = MEM[(long int *)_32 + -24B];
  _34 = (sizetype) _33;
  _35 = &cout + _34;
  # DEBUG this => _35
  # DEBUG __c => 10
  _40 = MEM[(const struct basic_ios *)_35]._M_ctype;
  # DEBUG __f => _40
  if (_40 == 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 6>:

  <bb 7>:
  # rID_43 = PHI <rID_11(D)(6), rID_20(12)>
  # dest_rID_48 = PHI <dest_rID_9(6), dest_rID_19(12)>
  # d_45 = PHI <d_13(6), d_21(12)>
  # DEBUG d => d_45
  # DEBUG dest_rID => dest_rID_48
  # DEBUG rID => rID_43
  gK.110_14 = gK;
  power_16 = powi (gK.110_14, d_45);
  # DEBUG power => power_16
  dID_17 = dest_rID_48 / power_16;
  # DEBUG dID => dID_17
  sID_18 = rID_43 / power_16;
  # DEBUG sID => sID_18
  if (dID_17 != sID_18)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # dID_52 = PHI <dID_17(7)>
  # sID_53 = PHI <sID_18(7)>
  # d_46 = PHI <d_45(7)>
  gK.110_22 = gK;
  _23 = gK.110_22 + -1;
  _24 = _23 * d_46;
  gC.109_25 = gC;
  _26 = _24 + gC.109_25;
  output_27 = _26 + -1;
  # DEBUG output => output_27
  if (dID_52 > sID_53)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  output_28 = dID_52 + output_27;
  # DEBUG output => output_28
  goto <bb 19>;

  <bb 10>:
  _29 = dID_52 + 1;
  output_30 = output_27 + _29;
  # DEBUG output => output_30
  goto <bb 19>;

  <bb 11>:
  dest_rID_19 = dest_rID_48 % power_16;
  # DEBUG dest_rID => dest_rID_19
  rID_20 = rID_43 % power_16;
  # DEBUG rID => rID_20
  d_21 = d_45 + -1;
  # DEBUG d => d_21
  # DEBUG d => d_21
  # DEBUG dest_rID => dest_rID_19
  # DEBUG rID => rID_20
  if (d_21 < 0)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 7>;

  <bb 13>:
  std::__throw_bad_cast ();

  <bb 14>:
  # DEBUG this => _40
  # DEBUG __c => 10
  _41 = MEM[(const struct ctype *)_40]._M_widen_ok;
  if (_41 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _44 = MEM[(const struct ctype *)_40]._M_widen[10];
  pretmp_1 = (int) _44;
  goto <bb 18>;

  <bb 16>:
  # DEBUG this => _40
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_40);
  _49 = MEM[(const struct ctype *)_40].D.20312._vptr.facet;
  _50 = MEM[(int (*__vtbl_ptr_type) () *)_49 + 48B];
  PROF_54 = [obj_type_ref] OBJ_TYPE_REF(_50;(const struct ctype)_40->6);
  if (PROF_54 == do_widen)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  _56 = OBJ_TYPE_REF(_50;(const struct ctype)_40->6) (_40, 10);
  pretmp_2 = (int) _56;

  <bb 18>:
  # prephitmp_3 = PHI <pretmp_1(15), 10(16), pretmp_2(17)>
  _38 = std::basic_ostream<char>::put (&cout, prephitmp_3);
  # DEBUG __os => _38
  std::basic_ostream<char>::flush (_38);
  exit (-1);

  <bb 19>:
  # _4 = PHI <_12(3), output_30(10), output_28(9)>

  <bb 20>:
  return _4;

}



;; Function int find_distance(int, int) (_Z13find_distanceii, funcdef_no=2254, decl_uid=47419, cgraph_uid=678, symbol_order=683)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int find_distance(int, int) (int src, int dest)
{
  int dest_id;
  int src_id;
  int d;
  int dest_tmp;
  int src_tmp;
  int _dim;
  int dist;
  int pretmp_1;
  int gC.140_8;

  <bb 2>:
  # DEBUG dist => 0
  _dim_7 = gN;
  # DEBUG _dim => _dim_7
  gC.140_8 = gC;
  src_tmp_10 = src_9(D) / gC.140_8;
  # DEBUG src_tmp => src_tmp_10
  dest_tmp_12 = dest_11(D) / gC.140_8;
  # DEBUG dest_tmp => dest_tmp_12
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_tmp_12
  # DEBUG src_tmp => src_tmp_10
  # DEBUG dist => 0
  if (_dim_7 <= 0)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_1 = gK;

  <bb 4>:
  # dist_24 = PHI <0(3), dist_2(8)>
  # src_tmp_26 = PHI <src_tmp_10(3), src_tmp_17(8)>
  # dest_tmp_27 = PHI <dest_tmp_12(3), dest_tmp_18(8)>
  # d_28 = PHI <0(3), d_19(8)>
  # DEBUG d => d_28
  # DEBUG dest_tmp => dest_tmp_27
  # DEBUG src_tmp => src_tmp_26
  # DEBUG dist => dist_24
  src_id_14 = src_tmp_26 % pretmp_1;
  # DEBUG src_id => src_id_14
  dest_id_15 = dest_tmp_27 % pretmp_1;
  # DEBUG dest_id => dest_id_15
  if (src_id_14 != dest_id_15)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  dist_16 = dist_24 + 1;
  # DEBUG dist => dist_16

  <bb 6>:
  # dist_2 = PHI <dist_24(4), dist_16(5)>
  # DEBUG dist => dist_2
  src_tmp_17 = src_tmp_26 / pretmp_1;
  # DEBUG src_tmp => src_tmp_17
  dest_tmp_18 = dest_tmp_27 / pretmp_1;
  # DEBUG dest_tmp => dest_tmp_18
  d_19 = d_28 + 1;
  # DEBUG d => d_19
  # DEBUG d => d_19
  # DEBUG dest_tmp => dest_tmp_18
  # DEBUG src_tmp => src_tmp_17
  # DEBUG dist => dist_2
  if (_dim_7 <= d_19)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # dist_4 = PHI <dist_2(6)>

  <bb 10>:
  goto <bb 9>;

  <bb 8>:
  goto <bb 4>;

  <bb 9>:
  # dist_25 = PHI <dist_4(10), 0(2)>

  <bb 11>:
  return dist_25;

}



;; Function int find_ran_intm(int, int) (_Z13find_ran_intmii, funcdef_no=2255, decl_uid=47422, cgraph_uid=679, symbol_order=684)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int find_ran_intm(int, int) (int src, int dest)
{
  int d;
  int _ran_dest;
  int _dim_size;
  int _dim;
  int pretmp_2;
  int prephitmp_3;
  int pretmp_6;
  long int _10;
  int gC.142_13;
  int _18;
  int gC.142_19;
  int gK.143_21;
  int _22;
  int _23;
  int _24;
  long int _26;
  int _27;
  long int _33;
  long int _34;
  long int _36;
  long int _37;
  int _38;
  int prephitmp_45;

  <bb 2>:
  _dim_9 = gN;
  # DEBUG _dim => _dim_9
  # DEBUG _ran_dest => 0
  # DEBUG debug => 0
  gC.142_13 = gC;
  src_14 = src_11(D) / gC.142_13;
  # DEBUG src => src_14
  dest_15 = dest_12(D) / gC.142_13;
  # DEBUG dest => dest_15
  # DEBUG max => gC.142_13 + -1
  _10 = ran_next ();
  _33 = (long int) gC.142_13;
  _34 = _10 % _33;
  _ran_dest_35 = (int) _34;
  # DEBUG _ran_dest => _ran_dest_35
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG _ran_dest => _ran_dest_35
  # DEBUG dest => dest_15
  # DEBUG src => src_14
  if (_dim_9 <= 0)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_2 = gK;

  <bb 4>:
  # src_46 = PHI <src_14(3), src_30(9)>
  # dest_47 = PHI <dest_15(3), dest_31(9)>
  # _ran_dest_48 = PHI <_ran_dest_35(3), _ran_dest_4(9)>
  # d_50 = PHI <0(3), d_32(9)>
  # prephitmp_3 = PHI <pretmp_2(3), prephitmp_45(9)>
  # DEBUG d => d_50
  # DEBUG _ran_dest => _ran_dest_48
  # DEBUG dest => dest_47
  # DEBUG src => src_46
  _18 = powi (prephitmp_3, d_50);
  gC.142_19 = gC;
  _dim_size_20 = _18 * gC.142_19;
  # DEBUG _dim_size => _dim_size_20
  gK.143_21 = gK;
  _22 = src_46 % gK.143_21;
  _23 = dest_47 % gK.143_21;
  if (_22 == _23)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _24 = _dim_size_20 * _22;
  _ran_dest_25 = _24 + _ran_dest_48;
  # DEBUG _ran_dest => _ran_dest_25
  goto <bb 7>;

  <bb 6>:
  # DEBUG max => gK.143_21 + -1
  _26 = ran_next ();
  _36 = (long int) gK.143_21;
  _37 = _26 % _36;
  _38 = (int) _37;
  _27 = _dim_size_20 * _38;
  _ran_dest_28 = _27 + _ran_dest_48;
  # DEBUG _ran_dest => _ran_dest_28
  pretmp_6 = gK;

  <bb 7>:
  # _ran_dest_4 = PHI <_ran_dest_25(5), _ran_dest_28(6)>
  # prephitmp_45 = PHI <gK.143_21(5), pretmp_6(6)>
  # DEBUG _ran_dest => _ran_dest_4
  src_30 = src_46 / prephitmp_45;
  # DEBUG src => src_30
  dest_31 = dest_47 / prephitmp_45;
  # DEBUG dest => dest_31
  d_32 = d_50 + 1;
  # DEBUG d => d_32
  # DEBUG d => d_32
  # DEBUG _ran_dest => _ran_dest_4
  # DEBUG dest => dest_31
  # DEBUG src => src_30
  if (_dim_9 <= d_32)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # _ran_dest_1 = PHI <_ran_dest_4(7)>

  <bb 11>:
  goto <bb 10>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # _ran_dest_49 = PHI <_ran_dest_1(11), _ran_dest_35(2)>

  <bb 12>:
  return _ran_dest_49;

}



;; Function int flatfly_outport(int, int) (_Z15flatfly_outportii, funcdef_no=2256, decl_uid=47425, cgraph_uid=680, symbol_order=685)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int flatfly_outport(int, int) (int dest, int rID)
{
  char_type D.60820;
  char __c;
  char_type D.60817;
  char __c;
  char_type D.60814;
  struct basic_ostream & D.60808;
  int d;
  int sID;
  int dID;
  int output;
  int _dim;
  int dest_rID;
  int pretmp_1;
  int prephitmp_2;
  int gK.145_3;
  int _5;
  int gC.144_7;
  int _13;
  int _23;
  int _26;
  int (*__vtbl_ptr_type) () * _28;
  long int _29;
  sizetype _30;
  struct basic_ios * _31;
  struct basic_ostream & _34;
  const struct __ctype_type * _36;
  char _37;
  char_type _40;
  int _43;
  int (*__vtbl_ptr_type) () * _45;
  int (*__vtbl_ptr_type) () _46;
  void * PROF_50;
  char_type _52;
  int pretmp_54;
  int prephitmp_59;
  int pretmp_60;
  int pretmp_61;

  <bb 2>:
  gC.144_7 = gC;
  dest_rID_9 = dest_8(D) / gC.144_7;
  # DEBUG dest_rID => dest_rID_9
  # DEBUG D#433 => gN
  # DEBUG _dim => D#433
  # DEBUG output => -1
  if (dest_rID_9 == rID_11(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _dim_10 = gN;
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_9
  # DEBUG rID => rID_11(D)
  if (_dim_10 <= 0)
    goto <bb 14>;
  else
    goto <bb 5>;

  <bb 4>:
  _13 = dest_8(D) % gC.144_7;
  goto <bb 24>;

  <bb 5>:
  gK.145_3 = gK;
  dID_35 = dest_rID_9 % gK.145_3;
  # DEBUG dID => dID_35
  sID_41 = rID_11(D) % gK.145_3;
  # DEBUG sID => sID_41
  if (dID_35 != sID_41)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 6>:
  dID_15 = dest_rID_18 % gK.145_3;
  # DEBUG dID => dID_15
  sID_17 = rID_19 % gK.145_3;
  # DEBUG sID => sID_17
  if (dID_15 != sID_17)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 13>;

  <bb 8>:
  # dID_48 = PHI <dID_15(6)>
  # sID_42 = PHI <sID_17(6)>
  # d_32 = PHI <d_20(6)>
  pretmp_60 = gK.145_3 + -1;
  pretmp_54 = d_32 * pretmp_60;

  <bb 9>:
  # dID_64 = PHI <dID_48(8), dID_35(5)>
  # sID_51 = PHI <sID_42(8), sID_41(5)>
  # prephitmp_59 = PHI <pretmp_54(8), 0(5)>

  <bb 22>:
  _23 = gC.144_7 + prephitmp_59;
  output_24 = _23 + -1;
  # DEBUG output => output_24
  if (sID_51 < dID_64)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  output_25 = output_24 + dID_64;
  # DEBUG output => output_25
  goto <bb 21>;

  <bb 11>:
  _26 = dID_64 + 1;
  output_27 = output_24 + _26;
  # DEBUG output => output_27
  goto <bb 21>;

  <bb 12>:

  <bb 13>:
  # rID_47 = PHI <rID_11(D)(12), rID_19(7)>
  # dest_rID_44 = PHI <dest_rID_9(12), dest_rID_18(7)>
  # d_38 = PHI <0(12), d_20(7)>
  # DEBUG d => d_38
  # DEBUG dest_rID => dest_rID_44
  # DEBUG rID => rID_47
  # DEBUG dID => dID_35
  # DEBUG sID => dID_35
  dest_rID_18 = dest_rID_44 / gK.145_3;
  # DEBUG dest_rID => dest_rID_18
  rID_19 = rID_47 / gK.145_3;
  # DEBUG rID => rID_19
  d_20 = d_38 + 1;
  # DEBUG d => d_20
  # DEBUG d => d_20
  # DEBUG dest_rID => dest_rID_18
  # DEBUG rID => rID_19
  if (_dim_10 <= d_20)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 14>:
  # DEBUG D#24 => dest_8(D)
  # DEBUG D#25 => rID_11(D)
  # DEBUG D#26 => D#25
  # DEBUG rID => D#26
  # DEBUG D#27 => D#24
  # DEBUG dest => D#27
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found "
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR ---- FLATFLY_OUTPORT function : output not found ", 56);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _28 = cout._vptr.basic_ostream;
  _29 = MEM[(long int *)_28 + -24B];
  _30 = (sizetype) _29;
  _31 = &cout + _30;
  # DEBUG this => _31
  # DEBUG __c => 10
  _36 = MEM[(const struct basic_ios *)_31]._M_ctype;
  # DEBUG __f => _36
  if (_36 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  std::__throw_bad_cast ();

  <bb 16>:
  # DEBUG this => _36
  # DEBUG __c => 10
  _37 = MEM[(const struct ctype *)_36]._M_widen_ok;
  if (_37 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _40 = MEM[(const struct ctype *)_36]._M_widen[10];
  pretmp_61 = (int) _40;
  goto <bb 20>;

  <bb 18>:
  # DEBUG this => _36
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_36);
  _45 = MEM[(const struct ctype *)_36].D.20312._vptr.facet;
  _46 = MEM[(int (*__vtbl_ptr_type) () *)_45 + 48B];
  PROF_50 = [obj_type_ref] OBJ_TYPE_REF(_46;(const struct ctype)_36->6);
  if (PROF_50 == do_widen)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  _52 = OBJ_TYPE_REF(_46;(const struct ctype)_36->6) (_36, 10);
  pretmp_1 = (int) _52;

  <bb 20>:
  # prephitmp_2 = PHI <pretmp_61(17), 10(18), pretmp_1(19)>
  _34 = std::basic_ostream<char>::put (&cout, prephitmp_2);
  # DEBUG __os => _34
  std::basic_ostream<char>::flush (_34);
  exit (-1);

  <bb 21>:
  # _43 = PHI <output_25(10), output_27(11)>

  <bb 24>:
  # _5 = PHI <_43(21), _13(4)>

  <bb 23>:
  return _5;

}



;; Function void ugal_xyyx_flatfly_onchip(const Router*, const Flit*, int, OutputSet*, bool) (_Z24ugal_xyyx_flatfly_onchipPK6RouterPK4FlitiP9OutputSetb, funcdef_no=2251, decl_uid=47398, cgraph_uid=675, symbol_order=680)

Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void ugal_xyyx_flatfly_onchip(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  char_type D.60998;
  char __c;
  char_type D.60995;
  char __c;
  char_type D.60992;
  char_type D.60986;
  char __c;
  char_type D.60983;
  char __c;
  char_type D.60980;
  struct basic_ostream & D.60974;
  struct basic_ostream & D.60971;
  char_type D.60968;
  char __c;
  char_type D.60965;
  struct basic_ostream & D.60959;
  int power;
  int d;
  int sID;
  int dID;
  int output;
  int _dim;
  int dest_rID;
  int D.60940;
  int rID;
  int d;
  int sID;
  int dID;
  int output;
  int _dim;
  int dest_rID;
  int D.60930;
  int rID;
  char_type D.60921;
  char __c;
  char_type D.60918;
  char __c;
  char_type D.60915;
  struct basic_ostream & D.60909;
  int d;
  int _ran_dest;
  int _dim_size;
  int _dim;
  int D.60906;
  int src;
  int dest;
  char_type D.60896;
  char __c;
  char_type D.60893;
  char __c;
  char_type D.60890;
  char_type D.60884;
  char __c;
  char_type D.60881;
  char __c;
  char_type D.60878;
  char_type D.60872;
  char __c;
  char_type D.60869;
  char __c;
  char_type D.60866;
  struct basic_ostream & D.60860;
  struct basic_ostream & D.60857;
  struct basic_ostream & D.60854;
  char_type D.60851;
  char __c;
  char_type D.60848;
  char __c;
  char_type D.60845;
  struct basic_ostream & D.60839;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int dest;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int dest;
  int dist;
  int _dim;
  int src_tmp;
  int dest_tmp;
  int d;
  int src_id;
  int dest_id;
  int dist;
  int src_tmp;
  int dest_tmp;
  int d;
  int src_id;
  int dest_id;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int dest;
  int _dim;
  int src_tmp;
  int dest_tmp;
  int d;
  int src_id;
  int dest_id;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  int horizontal;
  int horizontal_rem;
  int vertical;
  int vertical_rem;
  const int ph_available_vcs;
  bool x_then_y;
  const int xy_available_vcs;
  int _nonmin_queucnt;
  int _min_queucnt;
  int _nonmin_hop;
  int _min_hop;
  int _ran_intm;
  int tmp_out_port;
  int found;
  int dest;
  int out_port;
  static const char __PRETTY_FUNCTION__[81] = "void ugal_xyyx_flatfly_onchip(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  int _25;
  int gNumVCs.121_37;
  FlitType _40;
  int _49;
  int _52;
  bool gTrace.123_57;
  int _58;
  struct basic_ostream & _60;
  bool gTrace.123_62;
  struct basic_ostream & _64;
  struct basic_ostream & _66;
  int (*__vtbl_ptr_type) () * _67;
  int (*__vtbl_ptr_type) () _68;
  int _70;
  struct basic_ostream & _72;
  int _xcount.146_73;
  int _74;
  int _76;
  int _78;
  int _79;
  int gC.122_80;
  int _83;
  int _yrouter.148_84;
  int _85;
  int _86;
  int gC.122_88;
  int _91;
  int _92;
  int _95;
  int _96;
  bool _102;
  int (*__vtbl_ptr_type) () * _104;
  int (*__vtbl_ptr_type) () _105;
  int _108;
  int (*__vtbl_ptr_type) () * _110;
  int _112;
  int _113;
  int _114;
  int _xrouter.147_115;
  bool _121;
  struct basic_ostream & _123;
  int _124;
  int _125;
  int _xcount.146_126;
  int (*__vtbl_ptr_type) () * _127;
  int (*__vtbl_ptr_type) () _128;
  int _131;
  int _132;
  int _133;
  int _xcount.146_134;
  int _140;
  int (*__vtbl_ptr_type) () * _146;
  int _152;
  int gK.125_158;
  int _159;
  int _161;
  int _163;
  bool gTrace.123_164;
  struct basic_ostream & _166;
  struct basic_ostream & _168;
  int gK.125_169;
  int _170;
  int gN.126_171;
  int _172;
  int _173;
  struct basic_ostream & _175;
  int _183;
  int _184;
  int gC.149_185;
  int _186;
  int _187;
  int _188;
  int _xrouter.147_190;
  int _191;
  int _192;
  int _195;
  int _yrouter.148_196;
  int _199;
  int _200;
  int gC.149_201;
  int _202;
  int _203;
  int _204;
  long int _206;
  long int _207;
  int _208;
  int _xcount.146_223;
  int _xrouter.147_224;
  int _225;
  int _226;
  int _229;
  int _yrouter.148_230;
  int _233;
  int _234;
  int _236;
  int _237;
  int _238;
  int _xcount.146_268;
  int _xrouter.147_269;
  int _270;
  int _271;
  int _274;
  int _yrouter.148_275;
  int _278;
  int _279;
  int gC.149_280;
  int _281;
  int _282;
  int _283;
  int _xcount.146_285;
  int _xrouter.147_286;
  int _287;
  int _288;
  int _291;
  int _yrouter.148_292;
  int _295;
  int _296;
  int gC.149_297;
  int _298;
  int _299;
  int _300;
  int _xrouter.147_302;
  int _303;
  int _304;
  int _307;
  int _yrouter.148_308;
  int _311;
  int _312;
  int gC.149_313;
  int _314;
  int _315;
  int _316;
  const struct __ctype_type * _319;
  const struct __ctype_type * _321;
  int (*__vtbl_ptr_type) () * _323;
  int (*__vtbl_ptr_type) () * _325;
  const struct __ctype_type * _329;
  const struct __ctype_type * _331;
  int (*__vtbl_ptr_type) () * _333;
  int (*__vtbl_ptr_type) () * _342;
  long int _343;
  sizetype _344;
  struct basic_ios * _345;
  struct basic_ostream & _348;
  char _350;
  char_type _353;
  int (*__vtbl_ptr_type) () * _358;
  int (*__vtbl_ptr_type) () _359;
  void * PROF_363;
  char_type _365;
  int (*__vtbl_ptr_type) () * _368;
  long int _369;
  sizetype _370;
  struct basic_ios * _371;
  struct basic_ostream & _374;
  long int _376;
  sizetype _377;
  struct basic_ios * _378;
  struct basic_ostream & _381;
  long int _383;
  sizetype _384;
  struct basic_ios * _385;
  struct basic_ostream & _388;
  char _390;
  char_type _393;
  int (*__vtbl_ptr_type) () * _398;
  int (*__vtbl_ptr_type) () _399;
  bool _401;
  bool _402;
  void * PROF_403;
  char_type _405;
  const struct __ctype_type * _408;
  char _409;
  char_type _412;
  int (*__vtbl_ptr_type) () * _417;
  int (*__vtbl_ptr_type) () _418;
  bool _420;
  void * PROF_422;
  char_type _424;
  const struct __ctype_type * _427;
  char _428;
  char_type _431;
  int (*__vtbl_ptr_type) () * _436;
  int (*__vtbl_ptr_type) () _437;
  bool _440;
  void * PROF_441;
  char_type _443;
  long int _450;
  long int _451;
  long int _452;
  int _456;
  int gC.142_457;
  int gK.143_459;
  int _461;
  int _463;
  int _464;
  long int _467;
  long int _468;
  long int _469;
  int _470;
  int _471;
  long int _478;
  sizetype _479;
  struct basic_ios * _480;
  struct basic_ostream & _483;
  int _484;
  char _485;
  char_type _488;
  int (*__vtbl_ptr_type) () * _493;
  int (*__vtbl_ptr_type) () _494;
  void * PROF_498;
  char_type _500;
  int _506;
  int _507;
  int _515;
  int _518;
  int _529;
  int gK.110_532;
  int gK.110_538;
  int _539;
  int _540;
  int gC.109_541;
  int _542;
  int _545;
  long int _551;
  sizetype _552;
  struct basic_ios * _553;
  int _555;
  struct basic_ostream & _556;
  int _557;
  const struct __ctype_type * _558;
  char _559;
  char_type _562;
  char_type _565;
  int (*__vtbl_ptr_type) () * _567;
  int (*__vtbl_ptr_type) () _568;
  char_type _570;
  int (*__vtbl_ptr_type) () * _572;
  long int _573;
  sizetype _574;
  struct basic_ios * _575;
  struct basic_ostream & _578;
  long int _580;
  sizetype _581;
  struct basic_ios * _582;
  struct basic_ostream & _585;
  char _587;
  char_type _590;
  int (*__vtbl_ptr_type) () * _595;
  int (*__vtbl_ptr_type) () _596;
  void * PROF_600;
  char_type _602;
  const struct __ctype_type * _605;
  char _606;
  char_type _609;
  int (*__vtbl_ptr_type) () * _614;
  int (*__vtbl_ptr_type) () _615;
  int gK.145_617;
  void * PROF_619;
  char_type _621;
  int prephitmp_822;
  int pretmp_823;
  int prephitmp_824;
  int pretmp_843;
  int pretmp_844;
  int pretmp_845;
  int prephitmp_846;
  int pretmp_848;
  int prephitmp_849;
  int prephitmp_850;
  int prephitmp_851;
  int prephitmp_852;
  int pretmp_858;
  int pretmp_859;
  int prephitmp_860;
  int pretmp_867;
  int prephitmp_868;
  int pretmp_869;
  int pretmp_871;
  int prephitmp_872;
  int pretmp_878;
  int pretmp_879;
  int prephitmp_880;
  int pretmp_881;
  int pretmp_885;
  int prephitmp_886;
  int pretmp_888;
  int prephitmp_889;
  int pretmp_890;
  int pretmp_893;
  int pretmp_894;
  int pretmp_895;
  int prephitmp_896;
  int prephitmp_897;
  int pretmp_898;
  int pretmp_899;
  int prephitmp_900;
  int pretmp_901;
  int pretmp_902;
  int prephitmp_903;
  int pretmp_918;
  int pretmp_919;
  int prephitmp_920;
  int pretmp_921;
  int pretmp_922;
  int prephitmp_923;
  int pretmp_924;
  int pretmp_925;
  int prephitmp_926;
  bool pretmp_927;
  bool prephitmp_928;
  int pretmp_943;
  int pretmp_944;
  int prephitmp_945;
  int prephitmp_946;
  int pretmp_950;
  int prephitmp_951;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#441 => gNumVCs
  # DEBUG vcEnd => D#441 + -1
  _40 = f_39(D)->type;
  if (_40 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_41 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_41
  vcEnd_42 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_42
  goto <bb 11>;

  <bb 4>:
  if (_40 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_43 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_43
  vcEnd_44 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_44
  goto <bb 11>;

  <bb 6>:
  if (_40 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_45 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_45
  vcEnd_46 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_46
  goto <bb 11>;

  <bb 8>:
  gNumVCs.121_37 = gNumVCs;
  if (_40 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_38 = gNumVCs.121_37 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_47 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_47
  vcEnd_48 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_48

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_41(3), vcBegin_43(5), vcBegin_45(7), 0(9), vcBegin_47(10)>
  # vcEnd_5 = PHI <vcEnd_42(3), vcEnd_44(5), vcEnd_46(7), vcEnd_38(9), vcEnd_48(10)>
  # DEBUG vcEnd => vcEnd_5
  # DEBUG vcBegin => vcBegin_1
  _49 = f_39(D)->vc;
  _401 = vcEnd_5 < _49;
  _402 = vcBegin_1 > _49;
  _420 = _401 | _402;
  if (_420 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _440 = _49 >= 0;
  if (inject_50(D) <= _440)
    goto <bb 13>;
  else
    goto <bb 159>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "networks/flatfly_onchip.cpp", 644, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_50(D) != 0)
    goto <bb 159>;
  else
    goto <bb 15>;

  <bb 15>:
  _52 = f_39(D)->dest;
  # DEBUG dest => _52
  _xcount.146_126 = _xcount;
  _xrouter.147_115 = _xrouter;
  _114 = _xrouter.147_115 * _xcount.146_126;
  _113 = _52 % _114;
  horizontal_109 = _113 / _xrouter.147_115;
  # DEBUG horizontal => horizontal_109
  horizontal_rem_97 = _113 % _xrouter.147_115;
  # DEBUG horizontal_rem => horizontal_rem_97
  _96 = _52 / _114;
  _yrouter.148_84 = _yrouter;
  vertical_55 = _96 / _yrouter.148_84;
  # DEBUG vertical => vertical_55
  vertical_rem_53 = _96 % _yrouter.148_84;
  # DEBUG vertical_rem => vertical_rem_53
  _183 = vertical_55 * _xcount.146_126;
  _184 = horizontal_109 + _183;
  gC.149_185 = gC;
  _186 = _184 * gC.149_185;
  _187 = vertical_rem_53 * _xrouter.147_115;
  _188 = _186 + _187;
  dest_189 = horizontal_rem_97 + _188;
  # DEBUG dest => dest_189
  # DEBUG dest => NULL
  rID_182 = MEM[(int *)r_54(D) + 96B];
  # DEBUG D#19 => r_54(D)
  # DEBUG this => D#19
  # DEBUG rID => NULL
  # DEBUG _concentration => gC.149_185
  # DEBUG debug => 0
  # DEBUG threshold => 2
  if (in_channel_56(D) < gC.149_185)
    goto <bb 16>;
  else
    goto <bb 26>;

  <bb 16>:
  gTrace.123_57 = gTrace;
  if (gTrace.123_57 != 0)
    goto <bb 17>;
  else
    goto <bb 24>;

  <bb 17>:
  _58 = f_39(D)->src;
  # DEBUG __out => &cout
  # DEBUG __s => "New Flit "
  # DEBUG __s => "New Flit "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "New Flit ", 9);
  _60 = std::basic_ostream<char>::operator<< (&cout, _58);
  # DEBUG this => _60
  # DEBUG __pf => endl
  # DEBUG __os => _60
  _342 = _60->_vptr.basic_ostream;
  _343 = MEM[(long int *)_342 + -24B];
  _344 = (sizetype) _343;
  _345 = _60 + _344;
  # DEBUG this => _345
  # DEBUG __c => 10
  _319 = MEM[(const struct basic_ios *)_345]._M_ctype;
  # DEBUG __f => _319
  if (_319 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  std::__throw_bad_cast ();

  <bb 19>:
  # DEBUG this => _319
  # DEBUG __c => 10
  _350 = MEM[(const struct ctype *)_319]._M_widen_ok;
  if (_350 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _353 = MEM[(const struct ctype *)_319]._M_widen[10];
  pretmp_943 = (int) _353;
  goto <bb 23>;

  <bb 21>:
  # DEBUG this => _319
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_319);
  _358 = MEM[(const struct ctype *)_319].D.20312._vptr.facet;
  _359 = MEM[(int (*__vtbl_ptr_type) () *)_358 + 48B];
  PROF_363 = [obj_type_ref] OBJ_TYPE_REF(_359;(const struct ctype)_319->6);
  if (PROF_363 == do_widen)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  _365 = OBJ_TYPE_REF(_359;(const struct ctype)_319->6) (_319, 10);
  pretmp_944 = (int) _365;

  <bb 23>:
  # prephitmp_945 = PHI <pretmp_943(20), 10(21), pretmp_944(22)>
  _348 = std::basic_ostream<char>::put (_60, prephitmp_945);
  # DEBUG __os => _348
  std::basic_ostream<char>::flush (_348);
  pretmp_927 = gTrace;

  <bb 24>:
  # prephitmp_928 = PHI <gTrace.123_57(16), pretmp_927(23)>
  f_39(D)->ph = 0;
  if (prephitmp_928 != 0)
    goto <bb 25>;
  else
    goto <bb 44>;

  <bb 25>:
  # DEBUG load => 0
  # DEBUG __out => &cout
  # DEBUG __s => "Router "
  # DEBUG __s => "Router "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Router ", 7);
  _64 = std::basic_ostream<char>::operator<< (&cout, rID_182);
  # DEBUG this => _64
  # DEBUG __pf => endl
  # DEBUG __os => _64
  _323 = _64->_vptr.basic_ostream;
  _383 = MEM[(long int *)_323 + -24B];
  _384 = (sizetype) _383;
  _385 = _64 + _384;
  # DEBUG this => _385
  # DEBUG __c => 10
  _321 = MEM[(const struct basic_ios *)_385]._M_ctype;
  # DEBUG __f => _321
  if (_321 == 0B)
    goto <bb 18>;
  else
    goto <bb 27>;

  <bb 26>:
  gTrace.123_62 = gTrace;
  if (gTrace.123_62 != 0)
    goto <bb 25>;
  else
    goto <bb 42>;

  <bb 27>:
  # DEBUG this => _321
  # DEBUG __c => 10
  _390 = MEM[(const struct ctype *)_321]._M_widen_ok;
  if (_390 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _393 = MEM[(const struct ctype *)_321]._M_widen[10];
  pretmp_918 = (int) _393;
  goto <bb 31>;

  <bb 29>:
  # DEBUG this => _321
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_321);
  _398 = MEM[(const struct ctype *)_321].D.20312._vptr.facet;
  _399 = MEM[(int (*__vtbl_ptr_type) () *)_398 + 48B];
  PROF_403 = [obj_type_ref] OBJ_TYPE_REF(_399;(const struct ctype)_321->6);
  if (PROF_403 == do_widen)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  _405 = OBJ_TYPE_REF(_399;(const struct ctype)_321->6) (_321, 10);
  pretmp_919 = (int) _405;

  <bb 31>:
  # prephitmp_920 = PHI <pretmp_918(28), 10(29), pretmp_919(30)>
  _388 = std::basic_ostream<char>::put (_64, prephitmp_920);
  # DEBUG __os => _388
  std::basic_ostream<char>::flush (_388);
  # DEBUG __out => &cout
  # DEBUG __s => "Input Channel "
  # DEBUG __s => "Input Channel "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Input Channel ", 14);
  _66 = std::basic_ostream<char>::operator<< (&cout, in_channel_56(D));
  # DEBUG this => _66
  # DEBUG __pf => endl
  # DEBUG __os => _66
  _325 = _66->_vptr.basic_ostream;
  _376 = MEM[(long int *)_325 + -24B];
  _377 = (sizetype) _376;
  _378 = _66 + _377;
  # DEBUG this => _378
  # DEBUG __c => 10
  _408 = MEM[(const struct basic_ios *)_378]._M_ctype;
  # DEBUG __f => _408
  if (_408 == 0B)
    goto <bb 18>;
  else
    goto <bb 32>;

  <bb 32>:
  # DEBUG this => _408
  # DEBUG __c => 10
  _409 = MEM[(const struct ctype *)_408]._M_widen_ok;
  if (_409 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  _412 = MEM[(const struct ctype *)_408]._M_widen[10];
  pretmp_921 = (int) _412;
  goto <bb 36>;

  <bb 34>:
  # DEBUG this => _408
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_408);
  _417 = MEM[(const struct ctype *)_408].D.20312._vptr.facet;
  _418 = MEM[(int (*__vtbl_ptr_type) () *)_417 + 48B];
  PROF_422 = [obj_type_ref] OBJ_TYPE_REF(_418;(const struct ctype)_408->6);
  if (PROF_422 == do_widen)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  _424 = OBJ_TYPE_REF(_418;(const struct ctype)_408->6) (_408, 10);
  pretmp_922 = (int) _424;

  <bb 36>:
  # prephitmp_923 = PHI <pretmp_921(33), 10(34), pretmp_922(35)>
  _381 = std::basic_ostream<char>::put (_66, prephitmp_923);
  # DEBUG __os => _381
  std::basic_ostream<char>::flush (_381);
  _67 = r_54(D)->D.45421.D.36000._vptr.Module;
  _68 = MEM[(int (*__vtbl_ptr_type) () *)_67 + 80B];
  _70 = OBJ_TYPE_REF(_68;(const struct Router)r_54(D)->10) (r_54(D), in_channel_56(D));
  # DEBUG load => _70
  # DEBUG __out => &cout
  # DEBUG __s => "Rload "
  # DEBUG __s => "Rload "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Rload ", 6);
  _72 = std::basic_ostream<char>::operator<< (&cout, _70);
  # DEBUG this => _72
  # DEBUG __pf => endl
  # DEBUG __os => _72
  _368 = _72->_vptr.basic_ostream;
  _369 = MEM[(long int *)_368 + -24B];
  _370 = (sizetype) _369;
  _371 = _72 + _370;
  # DEBUG this => _371
  # DEBUG __c => 10
  _427 = MEM[(const struct basic_ios *)_371]._M_ctype;
  # DEBUG __f => _427
  if (_427 == 0B)
    goto <bb 18>;
  else
    goto <bb 37>;

  <bb 37>:
  # DEBUG this => _427
  # DEBUG __c => 10
  _428 = MEM[(const struct ctype *)_427]._M_widen_ok;
  if (_428 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  _431 = MEM[(const struct ctype *)_427]._M_widen[10];
  pretmp_924 = (int) _431;
  goto <bb 41>;

  <bb 39>:
  # DEBUG this => _427
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_427);
  _436 = MEM[(const struct ctype *)_427].D.20312._vptr.facet;
  _437 = MEM[(int (*__vtbl_ptr_type) () *)_436 + 48B];
  PROF_441 = [obj_type_ref] OBJ_TYPE_REF(_437;(const struct ctype)_427->6);
  if (PROF_441 == do_widen)
    goto <bb 41>;
  else
    goto <bb 40>;

  <bb 40>:
  _443 = OBJ_TYPE_REF(_437;(const struct ctype)_427->6) (_427, 10);
  pretmp_925 = (int) _443;

  <bb 41>:
  # prephitmp_926 = PHI <pretmp_924(38), 10(39), pretmp_925(40)>
  _374 = std::basic_ostream<char>::put (_72, prephitmp_926);
  # DEBUG __os => _374
  std::basic_ostream<char>::flush (_374);

  <bb 42>:
  # DEBUG found => 0
  _74 = f_39(D)->ph;
  if (_74 == 1)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  dest_75 = f_39(D)->intm;
  # DEBUG dest => dest_75

  <bb 44>:
  # dest_13 = PHI <dest_189(42), dest_75(43), dest_189(24)>
  # _507 = PHI <_74(42), _74(43), 0(24)>
  # prephitmp_822 = PHI <_74(42), _74(43), 0(24)>
  # DEBUG dest => dest_13
  _76 = rID_182 * gC.149_185;
  if (dest_13 >= _76)
    goto <bb 45>;
  else
    goto <bb 160>;

  <bb 45>:
  _78 = rID_182 + 1;
  _79 = _78 * gC.149_185;
  if (dest_13 < _79)
    goto <bb 46>;
  else
    goto <bb 160>;

  <bb 46>:
  if (_507 == 1)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  f_39(D)->ph = 2;
  _83 = f_39(D)->dest;
  # DEBUG dest => _83
  _xcount.146_73 = _xcount;
  _xrouter.147_190 = _xrouter;
  _191 = _xcount.146_73 * _xrouter.147_190;
  _192 = _83 % _191;
  horizontal_193 = _192 / _xrouter.147_190;
  # DEBUG horizontal => horizontal_193
  horizontal_rem_194 = _192 % _xrouter.147_190;
  # DEBUG horizontal_rem => horizontal_rem_194
  _195 = _83 / _191;
  _yrouter.148_196 = _yrouter;
  vertical_197 = _195 / _yrouter.148_196;
  # DEBUG vertical => vertical_197
  vertical_rem_198 = _195 % _yrouter.148_196;
  # DEBUG vertical_rem => vertical_rem_198
  _199 = _xcount.146_73 * vertical_197;
  _200 = horizontal_193 + _199;
  gC.149_201 = gC;
  _202 = _200 * gC.149_201;
  _203 = _xrouter.147_190 * vertical_rem_198;
  _204 = _202 + _203;
  dest_205 = horizontal_rem_194 + _204;
  # DEBUG dest => dest_205
  # DEBUG dest => NULL
  goto <bb 160>;

  <bb 48>:
  # DEBUG found => 1
  gC.122_80 = gC;
  out_port_81 = dest_13 % gC.122_80;
  # DEBUG out_port => out_port_81
  # DEBUG found => 1
  # DEBUG dest => dest_13
  # DEBUG out_port => out_port_81
  pretmp_893 = gN;
  goto <bb 145>;

  <bb 49>:
  __assert_fail ("xy_available_vcs > 0", "networks/flatfly_onchip.cpp", 710, &__PRETTY_FUNCTION__);

  <bb 50>:
  gC.122_88 = gC;
  if (in_channel_56(D) < gC.122_88)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG max => 1
  _206 = ran_next ();
  _207 = _206 % 2;
  _208 = (int) _207;
  x_then_y_90 = _208 > 0;
  pretmp_823 = gC;
  pretmp_950 = f_39(D)->ph;
  goto <bb 53>;

  <bb 52>:
  _91 = f_39(D)->vc;
  _92 = vcBegin_1 + xy_available_vcs_87;
  x_then_y_93 = _91 < _92;

  <bb 53>:
  # x_then_y_21 = PHI <x_then_y_90(51), x_then_y_93(52)>
  # prephitmp_824 = PHI <pretmp_823(51), gC.122_88(52)>
  # prephitmp_951 = PHI <pretmp_950(51), prephitmp_946(52)>
  # DEBUG x_then_y => x_then_y_21
  if (prephitmp_951 == 0)
    goto <bb 54>;
  else
    goto <bb 105>;

  <bb 54>:
  _95 = f_39(D)->src;
  # DEBUG dest => _95
  _xcount.146_223 = _xcount;
  _xrouter.147_224 = _xrouter;
  _225 = _xcount.146_223 * _xrouter.147_224;
  _226 = _95 % _225;
  horizontal_227 = _226 / _xrouter.147_224;
  # DEBUG horizontal => horizontal_227
  horizontal_rem_228 = _226 % _xrouter.147_224;
  # DEBUG horizontal_rem => horizontal_rem_228
  _229 = _95 / _225;
  _yrouter.148_230 = _yrouter;
  vertical_231 = _229 / _yrouter.148_230;
  # DEBUG vertical => vertical_231
  vertical_rem_232 = _229 % _yrouter.148_230;
  # DEBUG vertical_rem => vertical_rem_232
  _233 = _xcount.146_223 * vertical_231;
  _234 = horizontal_227 + _233;
  _236 = _234 * prephitmp_824;
  _237 = _xrouter.147_224 * vertical_rem_232;
  _238 = _236 + _237;
  dest_239 = horizontal_rem_228 + _238;
  # DEBUG dest => dest_239
  # DEBUG src => NULL
  # DEBUG dest => dest_351
  # DEBUG dist => 0
  _dim_89 = gN;
  # DEBUG _dim => _dim_89
  src_tmp_209 = dest_239 / prephitmp_824;
  # DEBUG src_tmp => src_tmp_209
  dest_tmp_210 = dest_351 / prephitmp_824;
  # DEBUG dest_tmp => dest_tmp_210
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_tmp_210
  # DEBUG src_tmp => src_tmp_209
  # DEBUG dist => 0
  if (_dim_89 <= 0)
    goto <bb 61>;
  else
    goto <bb 55>;

  <bb 55>:
  pretmp_890 = gK;

  <bb 56>:
  # d_178 = PHI <0(55), d_221(60)>
  # src_tmp_346 = PHI <src_tmp_209(55), src_tmp_219(60)>
  # dest_tmp_489 = PHI <dest_tmp_210(55), dest_tmp_220(60)>
  # _min_hop_492 = PHI <0(55), _min_hop_222(60)>
  # DEBUG d => d_178
  # DEBUG dest_tmp => dest_tmp_489
  # DEBUG src_tmp => src_tmp_346
  # DEBUG dist => _min_hop_492
  src_id_214 = src_tmp_346 % pretmp_890;
  # DEBUG src_id => src_id_214
  dest_id_216 = dest_tmp_489 % pretmp_890;
  # DEBUG dest_id => dest_id_216
  if (src_id_214 != dest_id_216)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  _min_hop_218 = _min_hop_492 + 1;
  # DEBUG dist => _min_hop_218

  <bb 58>:
  # _min_hop_222 = PHI <_min_hop_492(56), _min_hop_218(57)>
  # DEBUG dist => _min_hop_222
  src_tmp_219 = src_tmp_346 / pretmp_890;
  # DEBUG src_tmp => src_tmp_219
  dest_tmp_220 = dest_tmp_489 / pretmp_890;
  # DEBUG dest_tmp => dest_tmp_220
  d_221 = d_178 + 1;
  # DEBUG d => d_221
  # DEBUG d => d_221
  # DEBUG dest_tmp => dest_tmp_220
  # DEBUG src_tmp => src_tmp_219
  # DEBUG dist => _min_hop_222
  if (_dim_89 <= d_221)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # _min_hop_934 = PHI <_min_hop_222(58)>
  goto <bb 61>;

  <bb 60>:
  goto <bb 56>;

  <bb 61>:
  # _min_hop_495 = PHI <_min_hop_934(59), 0(54)>
  # DEBUG _min_hop => NULL
  if (x_then_y_21 != 0)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  tmp_out_port_99 = flatfly_outport (dest_351, rID_182);
  # DEBUG tmp_out_port => tmp_out_port_99
  goto <bb 64>;

  <bb 63>:
  tmp_out_port_101 = flatfly_outport_yx (dest_351, rID_182);
  # DEBUG tmp_out_port => tmp_out_port_101

  <bb 64>:
  # tmp_out_port_18 = PHI <tmp_out_port_99(62), tmp_out_port_101(63)>
  # DEBUG tmp_out_port => tmp_out_port_18
  _102 = f_39(D)->watch;
  if (_102 != 0)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  # DEBUG __out => &cout
  # DEBUG __s => " MIN tmp_out_port: "
  # DEBUG __s => " MIN tmp_out_port: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " MIN tmp_out_port: ", 19);
  std::basic_ostream<char>::operator<< (&cout, tmp_out_port_18);

  <bb 66>:
  _104 = r_54(D)->D.45421.D.36000._vptr.Module;
  _105 = MEM[(int (*__vtbl_ptr_type) () *)_104 + 72B];
  _min_queucnt_107 = OBJ_TYPE_REF(_105;(const struct Router)r_54(D)->9) (r_54(D), tmp_out_port_18);
  # DEBUG _min_queucnt => _min_queucnt_107
  _108 = f_39(D)->src;
  # DEBUG dest => _108
  _xcount.146_285 = _xcount;
  _xrouter.147_286 = _xrouter;
  _287 = _xcount.146_285 * _xrouter.147_286;
  _288 = _108 % _287;
  horizontal_289 = _288 / _xrouter.147_286;
  # DEBUG horizontal => horizontal_289
  horizontal_rem_290 = _288 % _xrouter.147_286;
  # DEBUG horizontal_rem => horizontal_rem_290
  _291 = _108 / _287;
  _yrouter.148_292 = _yrouter;
  vertical_293 = _291 / _yrouter.148_292;
  # DEBUG vertical => vertical_293
  vertical_rem_294 = _291 % _yrouter.148_292;
  # DEBUG vertical_rem => vertical_rem_294
  _295 = _xcount.146_285 * vertical_293;
  _296 = horizontal_289 + _295;
  gC.149_297 = gC;
  _298 = _296 * gC.149_297;
  _299 = _xrouter.147_286 * vertical_rem_294;
  _300 = _298 + _299;
  dest_301 = horizontal_rem_290 + _300;
  # DEBUG dest => dest_301
  # DEBUG src => dest_301
  # DEBUG dest => dest_351
  _dim_446 = gN;
  # DEBUG _dim => _dim_446
  # DEBUG _ran_dest => 0
  # DEBUG debug => 0
  src_448 = dest_301 / gC.149_297;
  # DEBUG src => src_448
  dest_449 = dest_351 / gC.149_297;
  # DEBUG dest => dest_449
  # DEBUG max => gC.149_297 + -1
  _450 = ran_next ();
  _451 = (long int) gC.149_297;
  _452 = _450 % _451;
  dest_453 = (int) _452;
  # DEBUG _ran_dest => dest_453
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG _ran_dest => dest_453
  # DEBUG dest => dest_449
  # DEBUG src => src_448
  if (_dim_446 <= 0)
    goto <bb 74>;
  else
    goto <bb 67>;

  <bb 67>:
  pretmp_885 = gK;

  <bb 68>:
  # d_425 = PHI <0(67), d_476(73)>
  # src_438 = PHI <src_448(67), src_474(73)>
  # dest_435 = PHI <dest_449(67), dest_475(73)>
  # dest_432 = PHI <dest_453(67), dest_477(73)>
  # prephitmp_886 = PHI <pretmp_885(67), prephitmp_889(73)>
  # DEBUG d => d_425
  # DEBUG _ran_dest => dest_432
  # DEBUG dest => dest_435
  # DEBUG src => src_438
  _456 = powi (prephitmp_886, d_425);
  gC.142_457 = gC;
  _dim_size_458 = _456 * gC.142_457;
  # DEBUG _dim_size => _dim_size_458
  gK.143_459 = gK;
  _461 = src_438 % gK.143_459;
  _463 = dest_435 % gK.143_459;
  if (_461 == _463)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  _464 = _dim_size_458 * _461;
  dest_466 = dest_432 + _464;
  # DEBUG _ran_dest => dest_466
  goto <bb 71>;

  <bb 70>:
  # DEBUG max => gK.143_459 + -1
  _467 = ran_next ();
  _468 = (long int) gK.143_459;
  _469 = _467 % _468;
  _470 = (int) _469;
  _471 = _dim_size_458 * _470;
  dest_472 = dest_432 + _471;
  # DEBUG _ran_dest => dest_472
  pretmp_888 = gK;

  <bb 71>:
  # dest_477 = PHI <dest_466(69), dest_472(70)>
  # prephitmp_889 = PHI <gK.143_459(69), pretmp_888(70)>
  # DEBUG _ran_dest => dest_477
  src_474 = src_438 / prephitmp_889;
  # DEBUG src => src_474
  dest_475 = dest_435 / prephitmp_889;
  # DEBUG dest => dest_475
  d_476 = d_425 + 1;
  # DEBUG d => d_476
  # DEBUG d => d_476
  # DEBUG _ran_dest => dest_477
  # DEBUG dest => dest_475
  # DEBUG src => src_474
  if (_dim_446 <= d_476)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  # dest_930 = PHI <dest_477(71)>
  goto <bb 74>;

  <bb 73>:
  goto <bb 68>;

  <bb 74>:
  # dest_430 = PHI <dest_930(72), dest_453(66)>
  # DEBUG _ran_intm => NULL
  _112 = f_39(D)->src;
  # DEBUG dest => _112
  _xcount.146_268 = _xcount;
  _xrouter.147_269 = _xrouter;
  _270 = _xcount.146_268 * _xrouter.147_269;
  _271 = _112 % _270;
  horizontal_272 = _271 / _xrouter.147_269;
  # DEBUG horizontal => horizontal_272
  horizontal_rem_273 = _271 % _xrouter.147_269;
  # DEBUG horizontal_rem => horizontal_rem_273
  _274 = _112 / _270;
  _yrouter.148_275 = _yrouter;
  vertical_276 = _274 / _yrouter.148_275;
  # DEBUG vertical => vertical_276
  vertical_rem_277 = _274 % _yrouter.148_275;
  # DEBUG vertical_rem => vertical_rem_277
  _278 = _xcount.146_268 * vertical_276;
  _279 = horizontal_272 + _278;
  gC.149_280 = gC;
  _281 = _279 * gC.149_280;
  _282 = _xrouter.147_269 * vertical_rem_277;
  _283 = _281 + _282;
  dest_284 = horizontal_rem_273 + _283;
  # DEBUG dest => dest_284
  # DEBUG src => NULL
  # DEBUG dest => NULL
  # DEBUG dist => 0
  _dim_253 = gN;
  # DEBUG _dim => _dim_253
  src_tmp_254 = dest_284 / gC.149_280;
  # DEBUG src_tmp => src_tmp_254
  src_tmp_255 = dest_430 / gC.149_280;
  # DEBUG dest_tmp => src_tmp_255
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => src_tmp_255
  # DEBUG src_tmp => src_tmp_254
  # DEBUG dist => 0
  if (_dim_253 <= 0)
    goto <bb 85>;
  else
    goto <bb 75>;

  <bb 75>:
  pretmp_881 = gK;

  <bb 76>:
  # d_662 = PHI <0(75), d_266(79)>
  # src_tmp_357 = PHI <src_tmp_254(75), src_tmp_264(79)>
  # src_tmp_442 = PHI <src_tmp_255(75), src_tmp_265(79)>
  # dist_445 = PHI <0(75), dist_267(79)>
  # DEBUG d => d_662
  # DEBUG dest_tmp => src_tmp_442
  # DEBUG src_tmp => src_tmp_357
  # DEBUG dist => dist_445
  src_id_259 = src_tmp_357 % pretmp_881;
  # DEBUG src_id => src_id_259
  dest_id_261 = src_tmp_442 % pretmp_881;
  # DEBUG dest_id => dest_id_261
  if (src_id_259 != dest_id_261)
    goto <bb 77>;
  else
    goto <bb 78>;

  <bb 77>:
  dist_263 = dist_445 + 1;
  # DEBUG dist => dist_263

  <bb 78>:
  # dist_267 = PHI <dist_445(76), dist_263(77)>
  # DEBUG dist => dist_267
  src_tmp_264 = src_tmp_357 / pretmp_881;
  # DEBUG src_tmp => src_tmp_264
  src_tmp_265 = src_tmp_442 / pretmp_881;
  # DEBUG dest_tmp => src_tmp_265
  d_266 = d_662 + 1;
  # DEBUG d => d_266
  # DEBUG d => d_266
  # DEBUG dest_tmp => src_tmp_265
  # DEBUG src_tmp => src_tmp_264
  # DEBUG dist => dist_267
  if (_dim_253 <= d_266)
    goto <bb 161>;
  else
    goto <bb 79>;

  <bb 79>:
  goto <bb 76>;

  <bb 80>:

  <bb 81>:
  # d_677 = PHI <0(161), d_251(80)>
  # src_tmp_502 = PHI <src_tmp_255(161), src_tmp_249(80)>
  # dest_tmp_487 = PHI <dest_tmp_465(161), dest_tmp_250(80)>
  # dist_486 = PHI <0(161), dist_252(80)>
  # DEBUG d => d_677
  # DEBUG dest_tmp => dest_tmp_487
  # DEBUG src_tmp => src_tmp_502
  # DEBUG dist => dist_486
  src_id_244 = src_tmp_502 % pretmp_881;
  # DEBUG src_id => src_id_244
  dest_id_246 = dest_tmp_487 % pretmp_881;
  # DEBUG dest_id => dest_id_246
  if (src_id_244 != dest_id_246)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  dist_248 = dist_486 + 1;
  # DEBUG dist => dist_248

  <bb 83>:
  # dist_252 = PHI <dist_486(81), dist_248(82)>
  # DEBUG dist => dist_252
  src_tmp_249 = src_tmp_502 / pretmp_881;
  # DEBUG src_tmp => src_tmp_249
  dest_tmp_250 = dest_tmp_487 / pretmp_881;
  # DEBUG dest_tmp => dest_tmp_250
  d_251 = d_677 + 1;
  # DEBUG d => d_251
  # DEBUG d => d_251
  # DEBUG dest_tmp => dest_tmp_250
  # DEBUG src_tmp => src_tmp_249
  # DEBUG dist => dist_252
  if (d_251 >= _dim_253)
    goto <bb 84>;
  else
    goto <bb 80>;

  <bb 84>:
  # dist_933 = PHI <dist_252(83)>
  pretmp_867 = dist_933 + dist_932;

  <bb 85>:
  # prephitmp_868 = PHI <pretmp_867(84), 0(74)>
  # DEBUG _nonmin_hop => NULL
  if (x_then_y_21 != 0)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  tmp_out_port_118 = flatfly_outport (dest_430, rID_182);
  # DEBUG tmp_out_port => tmp_out_port_118
  goto <bb 88>;

  <bb 87>:
  tmp_out_port_120 = flatfly_outport_yx (dest_430, rID_182);
  # DEBUG tmp_out_port => tmp_out_port_120

  <bb 88>:
  # tmp_out_port_19 = PHI <tmp_out_port_118(86), tmp_out_port_120(87)>
  # DEBUG tmp_out_port => tmp_out_port_19
  _121 = f_39(D)->watch;
  if (_121 != 0)
    goto <bb 89>;
  else
    goto <bb 95>;

  <bb 89>:
  # DEBUG __out => &cout
  # DEBUG __s => " NONMIN tmp_out_port: "
  # DEBUG __s => " NONMIN tmp_out_port: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " NONMIN tmp_out_port: ", 22);
  _123 = std::basic_ostream<char>::operator<< (&cout, tmp_out_port_19);
  # DEBUG this => _123
  # DEBUG __pf => endl
  # DEBUG __os => _123
  _110 = _123->_vptr.basic_ostream;
  _478 = MEM[(long int *)_110 + -24B];
  _479 = (sizetype) _478;
  _480 = _123 + _479;
  # DEBUG this => _480
  # DEBUG __c => 10
  _329 = MEM[(const struct basic_ios *)_480]._M_ctype;
  # DEBUG __f => _329
  if (_329 == 0B)
    goto <bb 18>;
  else
    goto <bb 90>;

  <bb 90>:
  # DEBUG this => _329
  # DEBUG __c => 10
  _485 = MEM[(const struct ctype *)_329]._M_widen_ok;
  if (_485 != 0)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 91>:
  _488 = MEM[(const struct ctype *)_329]._M_widen[10];
  pretmp_878 = (int) _488;
  goto <bb 94>;

  <bb 92>:
  # DEBUG this => _329
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_329);
  _493 = MEM[(const struct ctype *)_329].D.20312._vptr.facet;
  _494 = MEM[(int (*__vtbl_ptr_type) () *)_493 + 48B];
  PROF_498 = [obj_type_ref] OBJ_TYPE_REF(_494;(const struct ctype)_329->6);
  if (PROF_498 == do_widen)
    goto <bb 94>;
  else
    goto <bb 93>;

  <bb 93>:
  _500 = OBJ_TYPE_REF(_494;(const struct ctype)_329->6) (_329, 10);
  pretmp_879 = (int) _500;

  <bb 94>:
  # prephitmp_880 = PHI <pretmp_878(91), 10(92), pretmp_879(93)>
  _483 = std::basic_ostream<char>::put (_123, prephitmp_880);
  # DEBUG __os => _483
  std::basic_ostream<char>::flush (_483);

  <bb 95>:
  if (_76 <= dest_430)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  _124 = rID_182 + 1;
  _125 = _124 * gC.149_185;
  if (_125 > dest_430)
    goto <bb 163>;
  else
    goto <bb 97>;

  <bb 97>:
  _127 = r_54(D)->D.45421.D.36000._vptr.Module;
  _128 = MEM[(int (*__vtbl_ptr_type) () *)_127 + 72B];
  _nonmin_queucnt_130 = OBJ_TYPE_REF(_128;(const struct Router)r_54(D)->9) (r_54(D), tmp_out_port_19);
  # DEBUG _nonmin_queucnt => _nonmin_queucnt_130
  # DEBUG _nonmin_queucnt => _nonmin_queucnt_130
  _131 = _min_queucnt_107 * _min_hop_495;
  _132 = _nonmin_queucnt_130 * prephitmp_868;
  _133 = _132 + 2;
  if (_131 <= _133)
    goto <bb 98>;
  else
    goto <bb 99>;

  <bb 98>:
  f_39(D)->ph = 2;
  pretmp_844 = gC;
  goto <bb 105>;

  <bb 99>:
  f_39(D)->ph = 1;
  f_39(D)->intm = dest_430;
  # DEBUG dest => NULL
  if (_76 <= dest_430)
    goto <bb 101>;
  else
    goto <bb 100>;

  <bb 100>:
  pretmp_843 = gC;
  goto <bb 105>;

  <bb 101>:
  pretmp_869 = rID_182 + 1;
  pretmp_871 = gC.149_185 * pretmp_869;

  <bb 102>:
  # prephitmp_872 = PHI <pretmp_871(101), _125(162)>
  # DEBUG dest => NULL
  if (dest_430 < prephitmp_872)
    goto <bb 104>;
  else
    goto <bb 103>;

  <bb 103>:
  pretmp_845 = gC;
  goto <bb 105>;

  <bb 104>:
  f_39(D)->ph = 2;
  _140 = f_39(D)->dest;
  # DEBUG dest => _140
  _xcount.146_134 = _xcount;
  _xrouter.147_302 = _xrouter;
  _303 = _xcount.146_134 * _xrouter.147_302;
  _304 = _140 % _303;
  horizontal_305 = _304 / _xrouter.147_302;
  # DEBUG horizontal => horizontal_305
  horizontal_rem_306 = _304 % _xrouter.147_302;
  # DEBUG horizontal_rem => horizontal_rem_306
  _307 = _140 / _303;
  _yrouter.148_308 = _yrouter;
  vertical_309 = _307 / _yrouter.148_308;
  # DEBUG vertical => vertical_309
  vertical_rem_310 = _307 % _yrouter.148_308;
  # DEBUG vertical_rem => vertical_rem_310
  _311 = _xcount.146_134 * vertical_309;
  _312 = horizontal_305 + _311;
  gC.149_313 = gC;
  _314 = _312 * gC.149_313;
  _315 = _xrouter.147_302 * vertical_rem_310;
  _316 = _314 + _315;
  dest_317 = horizontal_rem_306 + _316;
  # DEBUG dest => dest_317
  # DEBUG dest => NULL

  <bb 105>:
  # dest_15 = PHI <dest_351(53), dest_430(100), dest_351(98), dest_317(104), dest_430(103)>
  # prephitmp_846 = PHI <prephitmp_824(53), pretmp_843(100), pretmp_844(98), gC.149_313(104), pretmp_845(103)>
  # DEBUG dest => dest_15
  if (x_then_y_21 != 0)
    goto <bb 106>;
  else
    goto <bb 121>;

  <bb 106>:
  # DEBUG dest => dest_15
  # DEBUG rID => rID_182
  dest_rID_504 = dest_15 / prephitmp_846;
  # DEBUG dest_rID => dest_rID_504
  _dim_505 = gN;
  # DEBUG _dim => _dim_505
  # DEBUG output => -1
  if (rID_182 == dest_rID_504)
    goto <bb 108>;
  else
    goto <bb 107>;

  <bb 107>:
  # DEBUG d => 0
  # DEBUG dest_rID => dest_rID_504
  # DEBUG rID => rID_182
  if (_dim_505 <= 0)
    goto <bb 118>;
  else
    goto <bb 109>;

  <bb 108>:
  _506 = dest_15 % prephitmp_846;
  goto <bb 119>;

  <bb 109>:
  gK.145_617 = gK;
  dID_499 = dest_rID_504 % gK.145_617;
  # DEBUG dID => dID_499
  sID_713 = rID_182 % gK.145_617;
  # DEBUG sID => sID_713
  if (dID_499 != sID_713)
    goto <bb 113>;
  else
    goto <bb 116>;

  <bb 110>:
  dID_510 = dest_rID_520 % gK.145_617;
  # DEBUG dID => dID_510
  sID_512 = rID_521 % gK.145_617;
  # DEBUG sID => sID_512
  if (dID_510 != sID_512)
    goto <bb 112>;
  else
    goto <bb 111>;

  <bb 111>:
  goto <bb 117>;

  <bb 112>:
  # dID_929 = PHI <dID_510(110)>
  # sID_917 = PHI <sID_512(110)>
  # d_916 = PHI <d_522(110)>
  pretmp_858 = gK.145_617 + -1;
  pretmp_859 = d_916 * pretmp_858;

  <bb 113>:
  # dID_372 = PHI <dID_929(112), dID_499(109)>
  # sID_410 = PHI <sID_917(112), sID_713(109)>
  # prephitmp_860 = PHI <pretmp_859(112), 0(109)>
  _515 = prephitmp_846 + prephitmp_860;
  output_516 = _515 + -1;
  # DEBUG output => output_516
  if (dID_372 > sID_410)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  output_517 = dID_372 + output_516;
  # DEBUG output => output_517
  goto <bb 119>;

  <bb 115>:
  _518 = dID_372 + 1;
  output_519 = output_516 + _518;
  # DEBUG output => output_519
  goto <bb 119>;

  <bb 116>:

  <bb 117>:
  # d_404 = PHI <0(116), d_522(111)>
  # dest_rID_406 = PHI <dest_rID_504(116), dest_rID_520(111)>
  # rID_411 = PHI <rID_182(116), rID_521(111)>
  # DEBUG d => d_404
  # DEBUG dest_rID => dest_rID_406
  # DEBUG rID => rID_411
  # DEBUG dID => dID_499
  # DEBUG sID => dID_499
  dest_rID_520 = dest_rID_406 / gK.145_617;
  # DEBUG dest_rID => dest_rID_520
  rID_521 = rID_411 / gK.145_617;
  # DEBUG rID => rID_521
  d_522 = d_404 + 1;
  # DEBUG d => d_522
  # DEBUG d => d_522
  # DEBUG dest_rID => dest_rID_520
  # DEBUG rID => rID_521
  if (_dim_505 <= d_522)
    goto <bb 118>;
  else
    goto <bb 110>;

  <bb 118>:
  # DEBUG D#24 => dest_15
  # DEBUG D#25 => rID_182
  _Z15flatfly_outportii.part.17 ();

  <bb 119>:
  # out_port_523 = PHI <_506(108), output_517(114), output_519(115)>
  # DEBUG out_port => NULL
  if (out_port_523 >= prephitmp_846)
    goto <bb 120>;
  else
    goto <bb 165>;

  <bb 120>:
  vcEnd_145 = vcEnd_5 - xy_available_vcs_87;
  # DEBUG vcEnd => vcEnd_145
  goto <bb 164>;

  <bb 121>:
  # DEBUG dest => dest_15
  # DEBUG rID => rID_182
  dest_rID_527 = dest_15 / prephitmp_846;
  # DEBUG dest_rID => dest_rID_527
  # DEBUG D#440 => gN
  # DEBUG _dim => D#440
  # DEBUG output => -1
  if (rID_182 == dest_rID_527)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  _529 = dest_15 % prephitmp_846;
  goto <bb 136>;

  <bb 123>:
  _dim_528 = gN;
  d_530 = _dim_528 + -1;
  # DEBUG d => d_530
  # DEBUG d => d_530
  # DEBUG dest_rID => dest_rID_527
  # DEBUG rID => rID_182
  if (d_530 < 0)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  # DEBUG D#20 => dest_15
  # DEBUG D#21 => rID_182
  # DEBUG D#22 => D#21
  # DEBUG rID => D#22
  # DEBUG D#23 => D#20
  # DEBUG dest => D#23
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found yx"
  # DEBUG __s => " ERROR ---- FLATFLY_OUTPORT function : output not found yx"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR ---- FLATFLY_OUTPORT function : output not found yx", 58);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _146 = cout._vptr.basic_ostream;
  _551 = MEM[(long int *)_146 + -24B];
  _552 = (sizetype) _551;
  _553 = &cout + _552;
  # DEBUG this => _553
  # DEBUG __c => 10
  _558 = MEM[(const struct basic_ios *)_553]._M_ctype;
  # DEBUG __f => _558
  if (_558 == 0B)
    goto <bb 18>;
  else
    goto <bb 132>;

  <bb 125>:

  <bb 126>:
  # d_413 = PHI <d_530(125), d_549(131)>
  # dest_rID_583 = PHI <dest_rID_527(125), dest_rID_547(131)>
  # rID_416 = PHI <rID_182(125), rID_548(131)>
  # DEBUG d => d_413
  # DEBUG dest_rID => dest_rID_583
  # DEBUG rID => rID_416
  gK.110_532 = gK;
  power_533 = powi (gK.110_532, d_413);
  # DEBUG power => power_533
  dID_535 = dest_rID_583 / power_533;
  # DEBUG dID => dID_535
  sID_537 = rID_416 / power_533;
  # DEBUG sID => sID_537
  if (dID_535 != sID_537)
    goto <bb 127>;
  else
    goto <bb 130>;

  <bb 127>:
  # d_931 = PHI <d_413(126)>
  # dID_915 = PHI <dID_535(126)>
  # sID_914 = PHI <sID_537(126)>
  gK.110_538 = gK;
  _539 = gK.110_538 + -1;
  _540 = d_931 * _539;
  gC.109_541 = gC;
  _542 = _540 + gC.109_541;
  output_543 = _542 + -1;
  # DEBUG output => output_543
  if (dID_915 > sID_914)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  output_544 = dID_915 + output_543;
  # DEBUG output => output_544
  goto <bb 136>;

  <bb 129>:
  _545 = dID_915 + 1;
  output_546 = output_543 + _545;
  # DEBUG output => output_546
  goto <bb 136>;

  <bb 130>:
  dest_rID_547 = dest_rID_583 % power_533;
  # DEBUG dest_rID => dest_rID_547
  rID_548 = rID_416 % power_533;
  # DEBUG rID => rID_548
  d_549 = d_413 + -1;
  # DEBUG d => d_549
  # DEBUG d => d_549
  # DEBUG dest_rID => dest_rID_547
  # DEBUG rID => rID_548
  if (d_549 < 0)
    goto <bb 124>;
  else
    goto <bb 131>;

  <bb 131>:
  goto <bb 126>;

  <bb 132>:
  # DEBUG this => _558
  # DEBUG __c => 10
  _559 = MEM[(const struct ctype *)_558]._M_widen_ok;
  if (_559 != 0)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  _562 = MEM[(const struct ctype *)_558]._M_widen[10];
  goto <bb 135>;

  <bb 134>:
  # DEBUG this => _558
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_558);
  _567 = MEM[(const struct ctype *)_558].D.20312._vptr.facet;
  _568 = MEM[(int (*__vtbl_ptr_type) () *)_567 + 48B];
  _570 = OBJ_TYPE_REF(_568;(const struct ctype)_558->6) (_558, 10);

  <bb 135>:
  # _565 = PHI <_562(133), _570(134)>
  _555 = (int) _565;
  _556 = std::basic_ostream<char>::put (&cout, _555);
  # DEBUG __os => _556
  std::basic_ostream<char>::flush (_556);
  exit (-1);

  <bb 136>:
  # out_port_550 = PHI <_529(122), output_544(128), output_546(129)>
  # prephitmp_852 = PHI <prephitmp_846(122), gC.109_541(128), gC.109_541(129)>
  # DEBUG out_port => NULL
  if (out_port_550 >= prephitmp_852)
    goto <bb 138>;
  else
    goto <bb 137>;

  <bb 137>:
  pretmp_848 = gN;
  goto <bb 165>;

  <bb 138>:
  vcBegin_149 = vcBegin_1 + xy_available_vcs_87;
  # DEBUG vcBegin => vcBegin_149
  goto <bb 164>;

  <bb 139>:
  __assert_fail ("ph_available_vcs > 0", "networks/flatfly_onchip.cpp", 787, &__PRETTY_FUNCTION__);

  <bb 140>:
  _152 = f_39(D)->ph;
  if (_152 == 1)
    goto <bb 141>;
  else
    goto <bb 142>;

  <bb 141>:
  vcEnd_155 = vcEnd_215 - ph_available_vcs_151;
  # DEBUG vcEnd => vcEnd_155
  pretmp_895 = gN;
  goto <bb 145>;

  <bb 142>:
  if (_152 != 2)
    goto <bb 143>;
  else
    goto <bb 144>;

  <bb 143>:
  __assert_fail ("f->ph == 2", "networks/flatfly_onchip.cpp", 792, &__PRETTY_FUNCTION__);

  <bb 144>:
  vcBegin_153 = ph_available_vcs_151 + vcBegin_211;
  # DEBUG vcBegin => vcBegin_153
  pretmp_894 = gN;

  <bb 145>:
  # vcBegin_3 = PHI <vcBegin_1(48), vcBegin_153(144), vcBegin_1(165), vcBegin_211(141)>
  # vcEnd_7 = PHI <vcEnd_5(48), vcEnd_215(144), vcEnd_5(165), vcEnd_155(141)>
  # out_port_11 = PHI <out_port_81(48), out_port_213(144), out_port_9(165), out_port_213(141)>
  # prephitmp_896 = PHI <pretmp_893(48), pretmp_894(144), prephitmp_849(165), pretmp_895(141)>
  # prephitmp_897 = PHI <gC.122_80(48), prephitmp_851(144), prephitmp_850(165), prephitmp_851(141)>
  # DEBUG found => 1
  # DEBUG out_port => out_port_11
  # DEBUG vcEnd => vcEnd_7
  # DEBUG vcBegin => vcBegin_3
  gK.125_158 = gK;
  _159 = gK.125_158 + -1;
  _161 = _159 * prephitmp_896;
  _163 = _161 + prephitmp_897;
  if (out_port_11 >= _163)
    goto <bb 146>;
  else
    goto <bb 147>;

  <bb 146>:
  # DEBUG __out => &cout
  # DEBUG __s => " ERROR: output port too big! "
  # DEBUG __s => " ERROR: output port too big! "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ERROR: output port too big! ", 29);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (&cout);
  # DEBUG __out => &cout
  # DEBUG __s => " OUTPUT select: "
  # DEBUG __s => " OUTPUT select: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " OUTPUT select: ", 16);
  _168 = std::basic_ostream<char>::operator<< (&cout, out_port_11);
  # DEBUG this => _168
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_168);
  gK.125_169 = gK;
  _170 = gK.125_169 + -1;
  gN.126_171 = gN;
  _172 = _170 * gN.126_171;
  _173 = gK.125_169 + _172;
  # DEBUG __out => &cout
  # DEBUG __s => " router radix: "
  # DEBUG __s => " router radix: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " router radix: ", 15);
  _175 = std::basic_ostream<char>::operator<< (&cout, _173);
  # DEBUG this => _175
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_175);
  exit (-1);

  <bb 147>:
  gTrace.123_164 = gTrace;
  if (gTrace.123_164 != 0)
    goto <bb 148>;
  else
    goto <bb 159>;

  <bb 148>:
  # DEBUG __out => &cout
  # DEBUG __s => "Outport "
  # DEBUG __s => "Outport "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Outport ", 8);
  _166 = std::basic_ostream<char>::operator<< (&cout, out_port_11);
  # DEBUG this => _166
  # DEBUG __pf => endl
  # DEBUG __os => _166
  _333 = _166->_vptr.basic_ostream;
  _580 = MEM[(long int *)_333 + -24B];
  _581 = (sizetype) _580;
  _582 = _166 + _581;
  # DEBUG this => _582
  # DEBUG __c => 10
  _331 = MEM[(const struct basic_ios *)_582]._M_ctype;
  # DEBUG __f => _331
  if (_331 == 0B)
    goto <bb 18>;
  else
    goto <bb 149>;

  <bb 149>:
  # DEBUG this => _331
  # DEBUG __c => 10
  _587 = MEM[(const struct ctype *)_331]._M_widen_ok;
  if (_587 != 0)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  _590 = MEM[(const struct ctype *)_331]._M_widen[10];
  pretmp_898 = (int) _590;
  goto <bb 153>;

  <bb 151>:
  # DEBUG this => _331
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_331);
  _595 = MEM[(const struct ctype *)_331].D.20312._vptr.facet;
  _596 = MEM[(int (*__vtbl_ptr_type) () *)_595 + 48B];
  PROF_600 = [obj_type_ref] OBJ_TYPE_REF(_596;(const struct ctype)_331->6);
  if (PROF_600 == do_widen)
    goto <bb 153>;
  else
    goto <bb 152>;

  <bb 152>:
  _602 = OBJ_TYPE_REF(_596;(const struct ctype)_331->6) (_331, 10);
  pretmp_899 = (int) _602;

  <bb 153>:
  # prephitmp_900 = PHI <pretmp_898(150), 10(151), pretmp_899(152)>
  _585 = std::basic_ostream<char>::put (_166, prephitmp_900);
  # DEBUG __os => _585
  std::basic_ostream<char>::flush (_585);
  # DEBUG __out => &cout
  # DEBUG __s => "Stop Mark"
  # DEBUG __s => "Stop Mark"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Stop Mark", 9);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _572 = cout._vptr.basic_ostream;
  _573 = MEM[(long int *)_572 + -24B];
  _574 = (sizetype) _573;
  _575 = &cout + _574;
  # DEBUG this => _575
  # DEBUG __c => 10
  _605 = MEM[(const struct basic_ios *)_575]._M_ctype;
  # DEBUG __f => _605
  if (_605 == 0B)
    goto <bb 18>;
  else
    goto <bb 154>;

  <bb 154>:
  # DEBUG this => _605
  # DEBUG __c => 10
  _606 = MEM[(const struct ctype *)_605]._M_widen_ok;
  if (_606 != 0)
    goto <bb 155>;
  else
    goto <bb 156>;

  <bb 155>:
  _609 = MEM[(const struct ctype *)_605]._M_widen[10];
  pretmp_901 = (int) _609;
  goto <bb 158>;

  <bb 156>:
  # DEBUG this => _605
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_605);
  _614 = MEM[(const struct ctype *)_605].D.20312._vptr.facet;
  _615 = MEM[(int (*__vtbl_ptr_type) () *)_614 + 48B];
  PROF_619 = [obj_type_ref] OBJ_TYPE_REF(_615;(const struct ctype)_605->6);
  if (PROF_619 == do_widen)
    goto <bb 158>;
  else
    goto <bb 157>;

  <bb 157>:
  _621 = OBJ_TYPE_REF(_615;(const struct ctype)_605->6) (_605, 10);
  pretmp_902 = (int) _621;

  <bb 158>:
  # prephitmp_903 = PHI <pretmp_901(155), 10(156), pretmp_902(157)>
  _578 = std::basic_ostream<char>::put (&cout, prephitmp_903);
  # DEBUG __os => _578
  std::basic_ostream<char>::flush (_578);

  <bb 159>:
  # vcBegin_4 = PHI <vcBegin_1(14), vcBegin_3(147), vcBegin_3(158), vcBegin_1(12)>
  # vcEnd_8 = PHI <vcEnd_5(14), vcEnd_7(147), vcEnd_7(158), vcEnd_5(12)>
  # out_port_12 = PHI <-1(14), out_port_11(147), out_port_11(158), -1(12)>
  # DEBUG out_port => out_port_12
  # DEBUG vcEnd => vcEnd_8
  # DEBUG vcBegin => vcBegin_4
  OutputSet::Clear (outputs_179(D));
  OutputSet::AddRange (outputs_179(D), out_port_12, vcBegin_4, vcEnd_8, 0);
  return;

  <bb 160>:
  # dest_351 = PHI <dest_205(47), dest_13(45), dest_13(44)>
  # prephitmp_946 = PHI <2(47), prephitmp_822(45), prephitmp_822(44)>
  # DEBUG found => 0
  # DEBUG dest => dest_351
  # DEBUG out_port => out_port_77(D)
  # DEBUG found => 0
  # DEBUG dest => dest_351
  # DEBUG out_port => out_port_77(D)
  _85 = vcEnd_5 - vcBegin_1;
  _86 = _85 + 1;
  xy_available_vcs_87 = _86 / 2;
  # DEBUG xy_available_vcs => xy_available_vcs_87
  if (xy_available_vcs_87 <= 0)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 161>:
  # dist_932 = PHI <dist_267(78)>
  # DEBUG src => NULL
  # DEBUG dest => dest_351
  # DEBUG dist => 0
  # DEBUG _dim => _dim_253
  # DEBUG src_tmp => src_tmp_255
  dest_tmp_465 = dest_351 / gC.149_280;
  # DEBUG dest_tmp => dest_tmp_465
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_tmp_465
  # DEBUG src_tmp => src_tmp_255
  # DEBUG dist => 0
  # DEBUG src => NULL
  # DEBUG dest => dest_351
  # DEBUG _dim => _dim_253
  # DEBUG d => 0
  # DEBUG dest_tmp => dest_tmp_465
  # DEBUG src_tmp => src_tmp_255
  # DEBUG dist => 0
  goto <bb 81>;

  <bb 162>:
  f_39(D)->ph = 1;
  f_39(D)->intm = dest_430;
  # DEBUG dest => NULL
  goto <bb 102>;

  <bb 163>:
  # DEBUG _nonmin_queucnt => 2147483647
  _25 = _min_queucnt_107 * _min_hop_495;
  _484 = prephitmp_868 * 2147483647;
  _557 = _484 + 2;
  if (_25 <= _557)
    goto <bb 98>;
  else
    goto <bb 162>;

  <bb 164>:
  # vcBegin_211 = PHI <vcBegin_149(138), vcBegin_1(120)>
  # vcEnd_215 = PHI <vcEnd_5(138), vcEnd_145(120)>
  # out_port_213 = PHI <out_port_550(138), out_port_523(120)>
  # prephitmp_851 = PHI <prephitmp_852(138), prephitmp_846(120)>
  # DEBUG out_port => out_port_213
  # DEBUG vcEnd => vcEnd_215
  # DEBUG vcBegin => vcBegin_211
  # DEBUG out_port => out_port_213
  # DEBUG vcEnd => vcEnd_215
  # DEBUG vcBegin => vcBegin_211
  ph_available_vcs_151 = _86 / 4;
  # DEBUG ph_available_vcs => ph_available_vcs_151
  if (ph_available_vcs_151 <= 0)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 165>:
  # out_port_9 = PHI <out_port_523(119), out_port_550(137)>
  # prephitmp_849 = PHI <_dim_505(119), pretmp_848(137)>
  # prephitmp_850 = PHI <prephitmp_846(119), prephitmp_852(137)>
  # DEBUG out_port => out_port_9
  # DEBUG vcEnd => vcEnd_5
  # DEBUG vcBegin => vcBegin_1
  goto <bb 145>;

}



;; Function virtual void FlatFlyOnChip::_BuildNet(const Configuration&) (_ZN13FlatFlyOnChip9_BuildNetERK13Configuration, funcdef_no=2240, decl_uid=47313, cgraph_uid=664, symbol_order=669)

Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
virtual void FlatFlyOnChip::_BuildNet(const Configuration&) (struct FlatFlyOnChip * const this, const struct Configuration & config)
{
  char_type D.62120;
  char __c;
  char_type D.62117;
  char __c;
  char_type D.62114;
  struct basic_ostream & D.62108;
  char_type D.62105;
  char __c;
  char_type D.62102;
  char __c;
  char_type D.62099;
  struct basic_ostream & D.62093;
  size_type __dnew;
  const struct string D.62044;
  size_type __dnew;
  const struct string D.61962;
  size_type __dnew;
  const struct string D.61880;
  size_type __dnew;
  const struct string D.61798;
  size_type __dnew;
  const struct string D.61716;
  size_type __dnew;
  const struct string D.61634;
  __size_type __len;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.61474;
  struct __string_type D.61473;
  struct basic_ostream & D.61338;
  char_type D.61334;
  char __c;
  char_type D.61331;
  char __c;
  char_type D.61328;
  struct basic_ostream & D.61322;
  char_type D.61319;
  char __c;
  char_type D.61316;
  char __c;
  char_type D.61313;
  struct basic_ostream & D.61307;
  char_type D.61304;
  char __c;
  char_type D.61301;
  char __c;
  char_type D.61298;
  struct basic_ostream & D.61292;
  char_type D.61289;
  char __c;
  char_type D.61286;
  char __c;
  char_type D.61283;
  struct basic_ostream & D.61277;
  char_type D.61274;
  char __c;
  char_type D.61271;
  char __c;
  char_type D.61268;
  struct basic_ostream & D.61262;
  char_type D.61259;
  char __c;
  char_type D.61256;
  char __c;
  char_type D.61253;
  struct basic_ostream & D.61247;
  size_type __dnew;
  char_type D.61199;
  char __c;
  char_type D.61196;
  char __c;
  char_type D.61193;
  struct basic_ostream & D.61187;
  int twod;
  int oned;
  int length;
  int offset;
  int other;
  int cnt;
  int curr6;
  int curr5;
  int curr4;
  int curr3;
  int ycurr;
  int xcurr;
  int dim;
  int node;
  int link;
  int ileng;
  int x;
  int y;
  int x_index;
  int y_index;
  int xleng;
  int yleng;
  int node;
  static const char __PRETTY_FUNCTION__[60] = "virtual void FlatFlyOnChip::_BuildNet(const Configuration&)";
  struct ostringstream router_name;
  int _output;
  const struct __string_type D.47614;
  struct TimedModule * const D.47611;
  struct __string_type D.47610;
  const struct string D.47608;
  bool _4;
  char * const _37;
  bool gTrace.22_38;
  bool _39;
  int _42;
  char * const _45;
  int _47;
  int _48;
  int _49;
  struct basic_ostream & _51;
  struct basic_ostream & _54;
  struct basic_ostream & _57;
  int _59;
  struct basic_ostream & _61;
  int _63;
  struct basic_ostream & _65;
  int _66;
  struct basic_ostream & _68;
  int _69;
  struct basic_ostream & _71;
  int _72;
  long unsigned int _75;
  int _76;
  struct Module * _77;
  struct Router * _79;
  struct FlitChannel * & _82;
  struct Router * _83;
  struct deque * _85;
  char * const _90;
  int _yrouter.23_91;
  int _xrouter.24_93;
  int _95;
  int _96;
  int _xcount.25_97;
  int _xrouter.24_101;
  bool _102;
  bool _104;
  bool _106;
  bool _108;
  int _112;
  int _116;
  int _xcount.25_119;
  int _120;
  int _121;
  int _122;
  int _123;
  int _124;
  int _125;
  long unsigned int _127;
  struct FlitChannel * _128;
  struct Channel * & _131;
  struct Channel * _132;
  struct FlitChannel * _134;
  struct Channel * _137;
  long unsigned int _139;
  struct FlitChannel * & _140;
  struct FlitChannel * _141;
  long unsigned int _142;
  struct Channel * _143;
  struct FlitChannel * _144;
  char * const _145;
  struct Channel * _146;
  struct Router * & _147;
  struct Router * _148;
  int (*__vtbl_ptr_type) () * _149;
  int (*__vtbl_ptr_type) () _150;
  struct Router * & _155;
  struct Router * _156;
  int (*__vtbl_ptr_type) () * _157;
  int (*__vtbl_ptr_type) () _158;
  long unsigned int _159;
  struct Channel * _160;
  struct FlitChannel * _161;
  const struct __ctype_type * _166;
  char * const _169;
  int _176;
  int _179;
  int _182;
  int _183;
  int _185;
  int _187;
  int _188;
  int _189;
  int _191;
  int _192;
  int _194;
  int _195;
  int _196;
  int _197;
  int _199;
  int _200;
  int _202;
  int _203;
  int _204;
  int _205;
  int _207;
  int _208;
  int _209;
  int _xcount.25_211;
  int _212;
  int _213;
  int _214;
  int _216;
  int _217;
  int _218;
  int _xrouter.24_220;
  int _221;
  int _yrouter.23_222;
  int _223;
  int _225;
  int _226;
  int _227;
  int _228;
  int _229;
  int _230;
  int _231;
  long unsigned int _233;
  struct FlitChannel * _234;
  int _xrouter.24_237;
  long unsigned int _239;
  struct FlitChannel * _240;
  struct Channel * _241;
  long unsigned int _242;
  struct Router * _243;
  int (*__vtbl_ptr_type) () * _244;
  int (*__vtbl_ptr_type) () _245;
  long unsigned int _250;
  struct Router * _251;
  int (*__vtbl_ptr_type) () * _252;
  int (*__vtbl_ptr_type) () _253;
  struct Channel * _254;
  struct FlitChannel * _255;
  bool gTrace.22_257;
  struct basic_ostream & _259;
  struct basic_ostream & _261;
  struct basic_ostream & _263;
  struct basic_ostream & _265;
  bool gTrace.22_270;
  char * const _271;
  char * const _272;
  char * const _275;
  char * const _276;
  struct FlitChannel * * _277;
  struct FlitChannel * * _278;
  struct FlitChannel * * _279;
  struct FlitChannel * * _280;
  struct FlitChannel * * _282;
  struct FlitChannel * * _283;
  struct FlitChannel * * _284;
  struct FlitChannel * * _286;
  struct Channel * * _287;
  struct Channel * * _288;
  struct Channel * * _289;
  struct Channel * * _290;
  struct Channel * * _292;
  struct Channel * * _294;
  struct Channel * * _296;
  struct Router * * _297;
  struct Router * * _298;
  struct Router * * _299;
  struct Router * * _300;
  struct Router * * _301;
  struct Router * * _302;
  struct Channel * & _303;
  long unsigned int _307;
  struct FlitChannel * & _308;
  const struct __ctype_type * _309;
  struct Channel * & _310;
  struct FlitChannel * & _312;
  struct Channel * & _316;
  struct Router * & _320;
  struct FlitChannel * & _321;
  struct Channel * & _322;
  struct Router * & _323;
  long unsigned int _324;
  struct FlitChannel * & _325;
  long unsigned int _330;
  struct FlitChannel * & _331;
  struct Channel * & _335;
  long unsigned int _339;
  struct Router * & _340;
  struct FlitChannel * & _341;
  struct Channel * & _342;
  long unsigned int _343;
  struct Router * & _344;
  const struct __ctype_type * _348;
  const struct __ctype_type * _350;
  const struct __ctype_type * _352;
  const struct __ctype_type * _354;
  const struct __ctype_type * _356;
  const struct __ctype_type * _390;
  const struct __ctype_type * _392;
  int (*__vtbl_ptr_type) () * iftmp.33_400;
  long int _401;
  sizetype iftmp.34_402;
  struct basic_ios * _403;
  int (*__vtbl_ptr_type) () * iftmp.35_404;
  bool _410;
  int prephitmp_411;
  long int _413;
  sizetype iftmp.40_414;
  struct basic_ios * _415;
  int (*__vtbl_ptr_type) () * _418;
  long int _419;
  sizetype _420;
  struct basic_ios * _421;
  struct basic_ostream & _424;
  char _426;
  int pretmp_427;
  int prephitmp_428;
  char_type _429;
  int pretmp_430;
  struct Channel * prephitmp_431;
  int prephitmp_433;
  int (*__vtbl_ptr_type) () * _434;
  int (*__vtbl_ptr_type) () _435;
  void * PROF_439;
  struct TimedModule * * pretmp_440;
  char_type _441;
  size_type prephitmp_442;
  struct TimedModule * * prephitmp_443;
  char * const pretmp_444;
  char * const prephitmp_445;
  size_type pretmp_446;
  struct FlitChannel * prephitmp_455;
  size_type prephitmp_456;
  struct FlitChannel * * pretmp_457;
  int prephitmp_459;
  int (*__vtbl_ptr_type) () * _460;
  long int _461;
  sizetype _462;
  struct basic_ios * _463;
  struct basic_ostream & _466;
  char _468;
  char * const pretmp_469;
  char * const prephitmp_470;
  char_type _471;
  int pretmp_472;
  int pretmp_475;
  int (*__vtbl_ptr_type) () * _476;
  int (*__vtbl_ptr_type) () _477;
  int prephitmp_478;
  int prephitmp_480;
  void * PROF_481;
  char_type _483;
  int pretmp_484;
  int pretmp_485;
  int (*__vtbl_ptr_type) () * _486;
  long int _487;
  sizetype _488;
  struct basic_ios * _489;
  struct basic_ostream & _492;
  char _494;
  int prephitmp_495;
  int pretmp_496;
  char_type _497;
  int prephitmp_498;
  int pretmp_499;
  int pretmp_501;
  int (*__vtbl_ptr_type) () * _502;
  int (*__vtbl_ptr_type) () _503;
  int prephitmp_504;
  int _505;
  void * PROF_507;
  struct Channel * prephitmp_508;
  char_type _509;
  int prephitmp_510;
  struct FlitChannel * prephitmp_511;
  int (*__vtbl_ptr_type) () * _512;
  long int _513;
  sizetype _514;
  struct basic_ios * _515;
  struct basic_ostream & _518;
  char _520;
  char_type _523;
  int prephitmp_524;
  struct Channel * prephitmp_525;
  int pretmp_527;
  int (*__vtbl_ptr_type) () * _528;
  int (*__vtbl_ptr_type) () _529;
  int prephitmp_530;
  int pretmp_532;
  void * PROF_533;
  int pretmp_534;
  char_type _535;
  int prephitmp_537;
  int (*__vtbl_ptr_type) () * _538;
  long int _539;
  sizetype _540;
  struct basic_ios * _541;
  int prephitmp_542;
  struct basic_ostream & _544;
  char _546;
  bool pretmp_548;
  char_type _549;
  int prephitmp_551;
  int (*__vtbl_ptr_type) () * _554;
  int (*__vtbl_ptr_type) () _555;
  void * PROF_559;
  char_type _561;
  int (*__vtbl_ptr_type) () * _564;
  long int _565;
  sizetype _566;
  struct basic_ios * _567;
  struct basic_ostream & _570;
  char _572;
  char_type _575;
  int (*__vtbl_ptr_type) () * _580;
  int (*__vtbl_ptr_type) () _581;
  int _583;
  void * PROF_585;
  char_type _587;
  int (*__vtbl_ptr_type) () * _590;
  long int _591;
  sizetype _592;
  struct basic_ios * _593;
  struct basic_ostream & _596;
  char _598;
  char_type _601;
  int pretmp_603;
  int (*__vtbl_ptr_type) () * _606;
  int (*__vtbl_ptr_type) () _607;
  struct Channel * * pretmp_609;
  void * PROF_611;
  char_type _613;
  char_type * const _618;
  char_type * const _619;
  char_type * const _620;
  char * const _621;
  char_type * const _622;
  char * const _623;
  char * const _625;
  char * const _626;
  char * const _627;
  long int __last.49_628;
  long int __first.50_629;
  difference_type _630;
  long unsigned int __dnew.46_631;
  char * _632;
  long unsigned int __dnew.47_633;
  const char_type _635;
  char * _638;
  long int __last.49_640;
  long int __first.50_641;
  difference_type _642;
  long unsigned int __dnew.46_643;
  char * _644;
  long unsigned int __dnew.47_645;
  const char_type _647;
  char * _650;
  struct TimedModule * * _651;
  struct TimedModule * * _652;
  struct TimedModule * * _653;
  int pretmp_654;
  struct TimedModule * * _656;
  int pretmp_663;
  struct FlitChannel * pretmp_664;
  const size_type _675;
  _Ios_Openmode _676;
  int __a.67_677;
  int _678;
  char * const _681;
  int prephitmp_683;
  int prephitmp_690;
  int prephitmp_699;
  int pretmp_701;
  int pretmp_702;
  int pretmp_703;
  const void * pretmp_709;
  const void * pretmp_710;
  int prephitmp_711;
  const void * pretmp_713;
  const void * pretmp_714;
  const void * prephitmp_715;
  int pretmp_717;
  int pretmp_718;
  int pretmp_719;
  const void * pretmp_720;
  const void * pretmp_721;
  const void * pretmp_722;
  const void * pretmp_728;
  const void * pretmp_729;
  bool _730;
  const void * pretmp_732;
  const void * pretmp_733;
  const void * prephitmp_734;
  const void * pretmp_736;
  const void * pretmp_737;
  const void * pretmp_738;
  const void * pretmp_739;
  const void * pretmp_740;
  const void * pretmp_741;
  struct Channel * _751;
  int _753;
  const void * pretmp_755;
  const void * pretmp_756;
  const void * pretmp_757;
  struct Module * _758;
  char * const _759;
  char * const _760;
  char * _770;
  long unsigned int __dnew.47_771;
  long unsigned int __dnew.47_774;
  char * const _775;
  char * _776;
  struct Module * _777;
  char * const _778;
  char * const _779;
  char * _789;
  long unsigned int __dnew.47_790;
  long unsigned int __dnew.47_793;
  char * const _794;
  char * _795;
  int (*__vtbl_ptr_type) () * _796;
  long int _797;
  sizetype _798;
  struct basic_ios * _799;
  struct FlitChannel * prephitmp_800;
  struct basic_ostream & _802;
  char _804;
  char_type _807;
  int prephitmp_809;
  int (*__vtbl_ptr_type) () * _812;
  int (*__vtbl_ptr_type) () _813;
  void * PROF_817;
  char_type _819;
  int (*__vtbl_ptr_type) () * _822;
  long int _823;
  sizetype _824;
  struct basic_ios * _825;
  struct basic_ostream & _828;
  char _830;
  char_type _833;
  int (*__vtbl_ptr_type) () * _838;
  int (*__vtbl_ptr_type) () _839;
  void * PROF_843;
  char_type _845;
  long int _851;
  sizetype iftmp.40_852;
  struct basic_ios * _853;
  struct FlitChannel * * pretmp_856;
  long int _861;
  sizetype iftmp.40_862;
  struct basic_ios * _863;
  long unsigned int prephitmp_866;
  int prephitmp_870;
  struct Channel * * _871;
  const void * pretmp_873;
  int prephitmp_875;
  const void * pretmp_878;
  const void * pretmp_880;
  struct Channel * & _881;
  const void * pretmp_883;
  const void * pretmp_885;
  size_type pretmp_933;
  bool _935;
  struct Channel * * pretmp_938;
  int prephitmp_952;
  struct Channel * pretmp_957;
  int pretmp_960;
  long unsigned int prephitmp_965;
  int pretmp_977;
  bool pretmp_993;
  struct Channel * * _1057;
  bool _1058;
  int pretmp_1067;
  const void * pretmp_1091;
  const void * pretmp_1092;
  int pretmp_1097;
  int prephitmp_1098;
  int prephitmp_1099;
  int pretmp_1100;
  int prephitmp_1101;
  int pretmp_1102;
  const void * pretmp_1103;
  const void * prephitmp_1104;
  const void * pretmp_1105;
  const void * pretmp_1106;
  const void * prephitmp_1107;
  int prephitmp_1108;
  int pretmp_1109;
  int pretmp_1110;
  int prephitmp_1111;
  int pretmp_1112;
  int pretmp_1113;
  const void * pretmp_1115;
  const void * pretmp_1116;
  struct Channel * _1120;
  const void * pretmp_1121;
  const void * pretmp_1122;
  const void * pretmp_1123;
  const void * pretmp_1124;
  const void * pretmp_1126;
  const void * pretmp_1127;
  const void * pretmp_1128;
  const void * pretmp_1129;
  const void * pretmp_1130;
  const void * pretmp_1131;
  const void * pretmp_1134;
  const void * pretmp_1135;
  const void * pretmp_1136;
  const void * pretmp_1137;
  char * const _1141;
  char * const _1142;
  struct Channel * & _1144;
  const void * pretmp_1145;
  const void * pretmp_1146;
  const void * pretmp_1147;
  const void * pretmp_1148;
  const void * pretmp_1150;
  const void * pretmp_1151;
  const void * pretmp_1152;
  const void * pretmp_1153;
  const void * pretmp_1154;
  const void * pretmp_1155;
  const void * pretmp_1158;
  const void * pretmp_1159;
  const void * pretmp_1160;
  const void * pretmp_1161;
  struct Channel * _1169;
  int prephitmp_1215;
  int prephitmp_1236;
  int _1240;
  int _xrouter.24_1242;
  int _1247;

  <bb 2>:
  # DEBUG this => &router_name
  # DEBUG __mode => 16
  # DEBUG D#70 => &router_name.D.26644
  # DEBUG this => D#70
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&router_name + 112B].D.23348);
  MEM[(struct basic_ios *)&router_name + 112B].D.23348._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&router_name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&router_name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&router_name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&router_name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&router_name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&router_name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&router_name + 112B]._M_num_get = 0B;
  # DEBUG this => &router_name.D.26641
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.33_400 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  MEM[(struct basic_ostream *)&router_name]._vptr.basic_ostream = iftmp.33_400;
  _401 = MEM[(long int *)iftmp.33_400 + -24B];
  iftmp.34_402 = (sizetype) _401;
  _403 = &router_name.D.26641 + iftmp.34_402;
  iftmp.35_404 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _403->D.23348._vptr.ios_base = iftmp.35_404;
  std::basic_ios<char>::init (_403, 0B);

  <bb 3>:
  router_name.D.26641._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&router_name + 112B].D.23348._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#68 => &router_name._M_stringbuf
  # DEBUG this => D#68
  # DEBUG __mode => NULL
  # DEBUG D#52 => &MEM[(struct basic_stringbuf *)D#68].D.26491
  # DEBUG this => D#52
  MEM[(struct basic_streambuf *)&router_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&router_name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&router_name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&router_name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&router_name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&router_name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&router_name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&router_name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&router_name + 8B].D.26491._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&router_name + 8B]._M_mode = 16;
  # DEBUG D#51 => &MEM[(struct basic_stringbuf *)D#68]._M_string
  # DEBUG this => D#51
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG this => D#51
  # DEBUG D#50 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#50
  # DEBUG __dat => &MEM[(struct basic_string *)&router_name + 80B].D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#50
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&router_name + 80B]._M_p = &MEM[(struct basic_string *)&router_name + 80B].D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#51
  # DEBUG __n => 0
  # DEBUG D#10 => D#51
  # DEBUG __length => 0
  # DEBUG this => D#10
  MEM[(size_type *)&router_name + 88B] = 0;
  # DEBUG D#6 => D#51
  # DEBUG this => D#6
  # DEBUG __c1 => &MEM[(struct basic_string *)&router_name + 80B].D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&router_name + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&router_name + 112B], &router_name._M_stringbuf.D.26491);
  goto <bb 11>;

<L91>:
  # DEBUG this => &router_name._M_stringbuf
  MEM[(struct basic_stringbuf *)&router_name + 8B].D.26491._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#67 => &MEM[(struct basic_stringbuf *)&router_name + 8B]._M_string
  # DEBUG this => D#67
  # DEBUG this => D#67
  # DEBUG this => D#67
  _37 = MEM[(char * *)&router_name + 80B];
  # DEBUG D#6 => D#67
  # DEBUG this => D#6
  # DEBUG this => D#67
  if (&MEM[(const struct basic_string *)&router_name + 80B].D.11539._M_local_buf != _37)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#67].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#67
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#67
  # DEBUG this => D#6
  # DEBUG this => D#67
  # DEBUG D#61 => &MEM[(struct basic_string *)D#67]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _37
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _37
  # DEBUG this => D#55
  # DEBUG D.61177 => D#56
  operator delete (_37);

  <bb 6>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#67]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  MEM[(struct  &)&router_name + 80] ={v} {CLOBBER};
  # DEBUG D#66 => &MEM[(struct basic_stringbuf *)&router_name + 8B].D.26491
  # DEBUG this => D#66
  MEM[(struct basic_streambuf *)&router_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&router_name + 8B]._M_buf_locale);
  MEM[(struct  &)&router_name + 8] ={v} {CLOBBER};
  resx 26

<L92>:
  # DEBUG this => &router_name.D.26641
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _413 = MEM[(long int *)iftmp.33_400 + -24B];
  iftmp.40_414 = (sizetype) _413;
  _415 = &router_name.D.26641 + iftmp.40_414;
  _415->D.23348._vptr.ios_base = iftmp.35_404;
  MEM[(struct  &)&router_name] ={v} {CLOBBER};
  resx 25

<L104>:
  goto <bb 10> (<L93>);

<L103>:

<L93>:
  # DEBUG D#69 => &router_name.D.26644
  # DEBUG this => D#69
  MEM[(struct basic_ios *)&router_name + 112B].D.23348._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&router_name + 112B].D.23348);
  resx 24

  <bb 11>:
  gTrace.22_38 = gTrace;
  if (gTrace.22_38 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  # DEBUG D#36 => &D.47607
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#91 => &D.47607
  # DEBUG this => &D.47608
  # DEBUG __s => "use_noc_latency"
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.47608
  # DEBUG D#88 => &D.47608._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.47608.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.47608]._M_p = &D.47608.D.11539._M_local_buf;
  # DEBUG __s => "use_noc_latency"
  # DEBUG this => &D.47608
  # DEBUG __beg => "use_noc_latency"
  # DEBUG __end => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG this => &D.47608
  # DEBUG __beg => "use_noc_latency"
  # DEBUG __end => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG this => &D.47608
  # DEBUG __beg => "use_noc_latency"
  # DEBUG __end => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG __ptr => "use_noc_latency"
  # DEBUG __first => "use_noc_latency"
  # DEBUG __last => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => "use_noc_latency"
  # DEBUG __last => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG __dnew => 15
  # DEBUG D#6 => &D.47608
  # DEBUG this => D#6
  # DEBUG __p => &D.47608.D.11539._M_local_buf
  # DEBUG __k1 => "use_noc_latency"
  # DEBUG __k2 => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG __d => &D.47608.D.11539._M_local_buf
  # DEBUG __s => "use_noc_latency"
  # DEBUG __n => 15
  # DEBUG __s1 => &D.47608.D.11539._M_local_buf
  # DEBUG __s2 => "use_noc_latency"
  # DEBUG __n => 15
  __builtin_memcpy (&D.47608.D.11539._M_local_buf, "use_noc_latency", 15);
  # DEBUG this => &D.47608
  # DEBUG __n => 15
  # DEBUG D#10 => &D.47608
  # DEBUG __length => 15
  # DEBUG this => D#10
  MEM[(size_type *)&D.47608 + 8B] = 15;
  # DEBUG D#6 => &D.47608
  # DEBUG this => D#6
  # DEBUG __c1 => &MEM[(void *)&D.47608 + 31B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.47608 + 31] = 0;
  # DEBUG D#481 => {CLOBBER}
  # DEBUG __dnew => D#481
  _42 = Configuration::GetInt (config_40(D), &D.47608);
  goto <bb 29>;

  <bb 13>:
  # DEBUG __out => &cout
  # DEBUG __s => "Setup Finished Router"
  # DEBUG __s => "Setup Finished Router"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Setup Finished Router", 21);

  <bb 14>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _418 = cout._vptr.basic_ostream;
  _419 = MEM[(long int *)_418 + -24B];
  _420 = (sizetype) _419;
  _421 = &cout + _420;
  # DEBUG this => _421
  # DEBUG __c => 10
  _309 = MEM[(const struct basic_ios *)_421]._M_ctype;
  # DEBUG __f => _309
  if (_309 == 0B)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 15>:
  std::__throw_bad_cast ();

<L106>:
  goto <bb 368> (<L83>);

  <bb 17>:
  # DEBUG this => _309
  # DEBUG __c => 10
  _426 = MEM[(const struct ctype *)_309]._M_widen_ok;
  if (_426 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _429 = MEM[(const struct ctype *)_309]._M_widen[10];
  pretmp_472 = (int) _429;
  goto <bb 25>;

  <bb 19>:
  # DEBUG this => _309
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_309);
  goto <bb 21>;

<L107>:
  goto <bb 368> (<L83>);

  <bb 21>:
  _434 = MEM[(const struct ctype *)_309].D.20312._vptr.facet;
  _435 = MEM[(int (*__vtbl_ptr_type) () *)_434 + 48B];
  PROF_439 = [obj_type_ref] OBJ_TYPE_REF(_435;(const struct ctype)_309->6);
  if (PROF_439 == do_widen)
    goto <bb 25>;
  else
    goto <bb 22>;

  <bb 22>:
  _441 = OBJ_TYPE_REF(_435;(const struct ctype)_309->6) (_309, 10);
  goto <bb 24>;

<L108>:
  goto <bb 368> (<L83>);

  <bb 24>:
  pretmp_475 = (int) _441;

  <bb 25>:
  # prephitmp_478 = PHI <pretmp_472(18), 10(21), pretmp_475(24)>
  _424 = std::basic_ostream<char>::put (&cout, prephitmp_478);
  goto <bb 27>;

<L109>:
  goto <bb 368> (<L83>);

  <bb 27>:
  # DEBUG __os => _424
  std::basic_ostream<char>::flush (_424);
  goto <bb 12>;

<L110>:
  goto <bb 368> (<L83>);

  <bb 29>:
  # DEBUG use_noc_latency => _42 == 1
  # DEBUG this => &D.47608
  # DEBUG this => &D.47608
  # DEBUG this => &D.47608
  _45 = MEM[(char * *)&D.47608];
  # DEBUG D#6 => &D.47608
  # DEBUG this => D#6
  # DEBUG this => &D.47608
  if (&D.47608.D.11539._M_local_buf != _45)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#64 => D.47608.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.47608
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.47608
  # DEBUG this => D#6
  # DEBUG this => &D.47608
  # DEBUG D#61 => &D.47608._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _45
  # DEBUG this => D#55
  # DEBUG D.57976 => D#56
  operator delete (_45);

  <bb 31>:
  # DEBUG D#65 => &D.47608._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.47608 ={v} {CLOBBER};
  # DEBUG this => &D.47607
  # DEBUG this => &D.47607
  # DEBUG __out => &cout
  # DEBUG __s => " Flat Bufferfly "
  # DEBUG __s => " Flat Bufferfly "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " Flat Bufferfly ", 16);
  goto <bb 33>;

<L111>:
  goto <bb 368> (<L83>);

  <bb 33>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _460 = cout._vptr.basic_ostream;
  _461 = MEM[(long int *)_460 + -24B];
  _462 = (sizetype) _461;
  _463 = &cout + _462;
  # DEBUG this => _463
  # DEBUG __c => 10
  _166 = MEM[(const struct basic_ios *)_463]._M_ctype;
  # DEBUG __f => _166
  if (_166 == 0B)
    goto <bb 34>;
  else
    goto <bb 36>;

  <bb 34>:
  std::__throw_bad_cast ();

<L112>:
  goto <bb 368> (<L83>);

  <bb 36>:
  # DEBUG this => _166
  # DEBUG __c => 10
  _468 = MEM[(const struct ctype *)_166]._M_widen_ok;
  if (_468 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  _471 = MEM[(const struct ctype *)_166]._M_widen[10];
  pretmp_1097 = (int) _471;
  goto <bb 44>;

  <bb 38>:
  # DEBUG this => _166
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_166);
  goto <bb 40>;

<L113>:
  goto <bb 368> (<L83>);

  <bb 40>:
  _476 = MEM[(const struct ctype *)_166].D.20312._vptr.facet;
  _477 = MEM[(int (*__vtbl_ptr_type) () *)_476 + 48B];
  PROF_481 = [obj_type_ref] OBJ_TYPE_REF(_477;(const struct ctype)_166->6);
  if (PROF_481 == do_widen)
    goto <bb 44>;
  else
    goto <bb 41>;

  <bb 41>:
  _483 = OBJ_TYPE_REF(_477;(const struct ctype)_166->6) (_166, 10);
  goto <bb 43>;

<L114>:
  goto <bb 368> (<L83>);

  <bb 43>:
  pretmp_717 = (int) _483;

  <bb 44>:
  # prephitmp_1098 = PHI <pretmp_1097(37), 10(40), pretmp_717(43)>
  _466 = std::basic_ostream<char>::put (&cout, prephitmp_1098);
  goto <bb 46>;

<L115>:
  goto <bb 368> (<L83>);

  <bb 46>:
  # DEBUG __os => _466
  std::basic_ostream<char>::flush (_466);
  goto <bb 48>;

<L116>:
  goto <bb 368> (<L83>);

  <bb 48>:
  _47 = this_46(D)->_c;
  _48 = this_46(D)->_n;
  _49 = this_46(D)->_k;
  # DEBUG __out => &cout
  # DEBUG __s => " k = "
  # DEBUG __s => " k = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " k = ", 5);
  goto <bb 50>;

<L117>:
  goto <bb 368> (<L83>);

  <bb 50>:
  _51 = std::basic_ostream<char>::operator<< (&cout, _49);
  goto <bb 52>;

<L118>:
  goto <bb 368> (<L83>);

  <bb 52>:
  # DEBUG __out => _51
  # DEBUG __s => " n = "
  # DEBUG __s => " n = "
  std::__ostream_insert<char, std::char_traits<char> > (_51, " n = ", 5);
  goto <bb 54>;

<L119>:
  goto <bb 368> (<L83>);

  <bb 54>:
  _54 = std::basic_ostream<char>::operator<< (_51, _48);
  goto <bb 56>;

<L120>:
  goto <bb 368> (<L83>);

  <bb 56>:
  # DEBUG __out => _54
  # DEBUG __s => " c = "
  # DEBUG __s => " c = "
  std::__ostream_insert<char, std::char_traits<char> > (_54, " c = ", 5);
  goto <bb 58>;

<L121>:
  goto <bb 368> (<L83>);

  <bb 58>:
  _57 = std::basic_ostream<char>::operator<< (_54, _47);
  goto <bb 60>;

<L122>:
  goto <bb 368> (<L83>);

  <bb 60>:
  # DEBUG this => _57
  # DEBUG __pf => endl
  # DEBUG __os => _57
  _486 = _57->_vptr.basic_ostream;
  _487 = MEM[(long int *)_486 + -24B];
  _488 = (sizetype) _487;
  _489 = _57 + _488;
  # DEBUG this => _489
  # DEBUG __c => 10
  _348 = MEM[(const struct basic_ios *)_489]._M_ctype;
  # DEBUG __f => _348
  if (_348 == 0B)
    goto <bb 61>;
  else
    goto <bb 63>;

  <bb 61>:
  std::__throw_bad_cast ();

<L123>:
  goto <bb 368> (<L83>);

  <bb 63>:
  # DEBUG this => _348
  # DEBUG __c => 10
  _494 = MEM[(const struct ctype *)_348]._M_widen_ok;
  if (_494 != 0)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  _497 = MEM[(const struct ctype *)_348]._M_widen[10];
  pretmp_718 = (int) _497;
  goto <bb 71>;

  <bb 65>:
  # DEBUG this => _348
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_348);
  goto <bb 67>;

<L124>:
  goto <bb 368> (<L83>);

  <bb 67>:
  _502 = MEM[(const struct ctype *)_348].D.20312._vptr.facet;
  _503 = MEM[(int (*__vtbl_ptr_type) () *)_502 + 48B];
  PROF_507 = [obj_type_ref] OBJ_TYPE_REF(_503;(const struct ctype)_348->6);
  if (PROF_507 == do_widen)
    goto <bb 71>;
  else
    goto <bb 68>;

  <bb 68>:
  _509 = OBJ_TYPE_REF(_503;(const struct ctype)_348->6) (_348, 10);
  goto <bb 70>;

<L125>:
  goto <bb 368> (<L83>);

  <bb 70>:
  pretmp_719 = (int) _509;

  <bb 71>:
  # prephitmp_1099 = PHI <pretmp_718(64), 10(67), pretmp_719(70)>
  _492 = std::basic_ostream<char>::put (_57, prephitmp_1099);
  goto <bb 73>;

<L126>:
  goto <bb 368> (<L83>);

  <bb 73>:
  # DEBUG __os => _492
  std::basic_ostream<char>::flush (_492);
  goto <bb 75>;

<L127>:
  goto <bb 368> (<L83>);

  <bb 75>:
  _59 = this_46(D)->_r;
  # DEBUG __out => &cout
  # DEBUG __s => " each switch - total radix =  "
  # DEBUG __s => " each switch - total radix =  "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " each switch - total radix =  ", 30);
  goto <bb 77>;

<L128>:
  goto <bb 368> (<L83>);

  <bb 77>:
  _61 = std::basic_ostream<char>::operator<< (&cout, _59);
  goto <bb 79>;

<L129>:
  goto <bb 368> (<L83>);

  <bb 79>:
  # DEBUG this => _61
  # DEBUG __pf => endl
  # DEBUG __os => _61
  _512 = _61->_vptr.basic_ostream;
  _513 = MEM[(long int *)_512 + -24B];
  _514 = (sizetype) _513;
  _515 = _61 + _514;
  # DEBUG this => _515
  # DEBUG __c => 10
  _350 = MEM[(const struct basic_ios *)_515]._M_ctype;
  # DEBUG __f => _350
  if (_350 == 0B)
    goto <bb 80>;
  else
    goto <bb 82>;

  <bb 80>:
  std::__throw_bad_cast ();

<L130>:
  goto <bb 368> (<L83>);

  <bb 82>:
  # DEBUG this => _350
  # DEBUG __c => 10
  _520 = MEM[(const struct ctype *)_350]._M_widen_ok;
  if (_520 != 0)
    goto <bb 83>;
  else
    goto <bb 84>;

  <bb 83>:
  _523 = MEM[(const struct ctype *)_350]._M_widen[10];
  pretmp_1100 = (int) _523;
  goto <bb 90>;

  <bb 84>:
  # DEBUG this => _350
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_350);
  goto <bb 86>;

<L131>:
  goto <bb 368> (<L83>);

  <bb 86>:
  _528 = MEM[(const struct ctype *)_350].D.20312._vptr.facet;
  _529 = MEM[(int (*__vtbl_ptr_type) () *)_528 + 48B];
  PROF_533 = [obj_type_ref] OBJ_TYPE_REF(_529;(const struct ctype)_350->6);
  if (PROF_533 == do_widen)
    goto <bb 90>;
  else
    goto <bb 87>;

  <bb 87>:
  _535 = OBJ_TYPE_REF(_529;(const struct ctype)_350->6) (_350, 10);
  goto <bb 89>;

<L132>:
  goto <bb 368> (<L83>);

  <bb 89>:
  pretmp_701 = (int) _535;

  <bb 90>:
  # prephitmp_1101 = PHI <pretmp_1100(83), 10(86), pretmp_701(89)>
  _518 = std::basic_ostream<char>::put (_61, prephitmp_1101);
  goto <bb 92>;

<L133>:
  goto <bb 368> (<L83>);

  <bb 92>:
  # DEBUG __os => _518
  std::basic_ostream<char>::flush (_518);
  goto <bb 94>;

<L134>:
  goto <bb 368> (<L83>);

  <bb 94>:
  _63 = this_46(D)->_num_of_switch;
  # DEBUG __out => &cout
  # DEBUG __s => " # of switches = "
  # DEBUG __s => " # of switches = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " # of switches = ", 17);
  goto <bb 96>;

<L135>:
  goto <bb 368> (<L83>);

  <bb 96>:
  _65 = std::basic_ostream<char>::operator<< (&cout, _63);
  goto <bb 98>;

<L136>:
  goto <bb 368> (<L83>);

  <bb 98>:
  # DEBUG this => _65
  # DEBUG __pf => endl
  # DEBUG __os => _65
  _538 = _65->_vptr.basic_ostream;
  _539 = MEM[(long int *)_538 + -24B];
  _540 = (sizetype) _539;
  _541 = _65 + _540;
  # DEBUG this => _541
  # DEBUG __c => 10
  _352 = MEM[(const struct basic_ios *)_541]._M_ctype;
  # DEBUG __f => _352
  if (_352 == 0B)
    goto <bb 99>;
  else
    goto <bb 101>;

  <bb 99>:
  std::__throw_bad_cast ();

<L137>:
  goto <bb 368> (<L83>);

  <bb 101>:
  # DEBUG this => _352
  # DEBUG __c => 10
  _546 = MEM[(const struct ctype *)_352]._M_widen_ok;
  if (_546 != 0)
    goto <bb 102>;
  else
    goto <bb 103>;

  <bb 102>:
  _549 = MEM[(const struct ctype *)_352]._M_widen[10];
  pretmp_703 = (int) _549;
  goto <bb 109>;

  <bb 103>:
  # DEBUG this => _352
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_352);
  goto <bb 105>;

<L138>:
  goto <bb 368> (<L83>);

  <bb 105>:
  _554 = MEM[(const struct ctype *)_352].D.20312._vptr.facet;
  _555 = MEM[(int (*__vtbl_ptr_type) () *)_554 + 48B];
  PROF_559 = [obj_type_ref] OBJ_TYPE_REF(_555;(const struct ctype)_352->6);
  if (PROF_559 == do_widen)
    goto <bb 109>;
  else
    goto <bb 106>;

  <bb 106>:
  _561 = OBJ_TYPE_REF(_555;(const struct ctype)_352->6) (_352, 10);
  goto <bb 108>;

<L139>:
  goto <bb 368> (<L83>);

  <bb 108>:
  pretmp_702 = (int) _561;

  <bb 109>:
  # prephitmp_875 = PHI <pretmp_703(102), 10(105), pretmp_702(108)>
  _544 = std::basic_ostream<char>::put (_65, prephitmp_875);
  goto <bb 111>;

<L140>:
  goto <bb 368> (<L83>);

  <bb 111>:
  # DEBUG __os => _544
  std::basic_ostream<char>::flush (_544);
  goto <bb 113>;

<L141>:
  goto <bb 368> (<L83>);

  <bb 113>:
  _66 = this_46(D)->D.47360._channels;
  # DEBUG __out => &cout
  # DEBUG __s => " # of channels = "
  # DEBUG __s => " # of channels = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " # of channels = ", 17);
  goto <bb 115>;

<L142>:
  goto <bb 368> (<L83>);

  <bb 115>:
  _68 = std::basic_ostream<char>::operator<< (&cout, _66);
  goto <bb 117>;

<L143>:
  goto <bb 368> (<L83>);

  <bb 117>:
  # DEBUG this => _68
  # DEBUG __pf => endl
  # DEBUG __os => _68
  _564 = _68->_vptr.basic_ostream;
  _565 = MEM[(long int *)_564 + -24B];
  _566 = (sizetype) _565;
  _567 = _68 + _566;
  # DEBUG this => _567
  # DEBUG __c => 10
  _354 = MEM[(const struct basic_ios *)_567]._M_ctype;
  # DEBUG __f => _354
  if (_354 == 0B)
    goto <bb 118>;
  else
    goto <bb 120>;

  <bb 118>:
  std::__throw_bad_cast ();

<L144>:
  goto <bb 368> (<L83>);

  <bb 120>:
  # DEBUG this => _354
  # DEBUG __c => 10
  _572 = MEM[(const struct ctype *)_354]._M_widen_ok;
  if (_572 != 0)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  _575 = MEM[(const struct ctype *)_354]._M_widen[10];
  pretmp_1109 = (int) _575;
  goto <bb 128>;

  <bb 122>:
  # DEBUG this => _354
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_354);
  goto <bb 124>;

<L145>:
  goto <bb 368> (<L83>);

  <bb 124>:
  _580 = MEM[(const struct ctype *)_354].D.20312._vptr.facet;
  _581 = MEM[(int (*__vtbl_ptr_type) () *)_580 + 48B];
  PROF_585 = [obj_type_ref] OBJ_TYPE_REF(_581;(const struct ctype)_354->6);
  if (PROF_585 == do_widen)
    goto <bb 128>;
  else
    goto <bb 125>;

  <bb 125>:
  _587 = OBJ_TYPE_REF(_581;(const struct ctype)_354->6) (_354, 10);
  goto <bb 127>;

<L146>:
  goto <bb 368> (<L83>);

  <bb 127>:
  pretmp_1110 = (int) _587;

  <bb 128>:
  # prephitmp_1111 = PHI <pretmp_1109(121), 10(124), pretmp_1110(127)>
  _570 = std::basic_ostream<char>::put (_68, prephitmp_1111);
  goto <bb 130>;

<L147>:
  goto <bb 368> (<L83>);

  <bb 130>:
  # DEBUG __os => _570
  std::basic_ostream<char>::flush (_570);
  goto <bb 132>;

<L148>:
  goto <bb 368> (<L83>);

  <bb 132>:
  _69 = this_46(D)->D.47360._nodes;
  # DEBUG __out => &cout
  # DEBUG __s => " # of nodes ( size of network ) = "
  # DEBUG __s => " # of nodes ( size of network ) = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " # of nodes ( size of network ) = ", 34);
  goto <bb 134>;

<L149>:
  goto <bb 368> (<L83>);

  <bb 134>:
  _71 = std::basic_ostream<char>::operator<< (&cout, _69);
  goto <bb 136>;

<L150>:
  goto <bb 368> (<L83>);

  <bb 136>:
  # DEBUG this => _71
  # DEBUG __pf => endl
  # DEBUG __os => _71
  _590 = _71->_vptr.basic_ostream;
  _591 = MEM[(long int *)_590 + -24B];
  _592 = (sizetype) _591;
  _593 = _71 + _592;
  # DEBUG this => _593
  # DEBUG __c => 10
  _356 = MEM[(const struct basic_ios *)_593]._M_ctype;
  # DEBUG __f => _356
  if (_356 == 0B)
    goto <bb 137>;
  else
    goto <bb 139>;

  <bb 137>:
  std::__throw_bad_cast ();

<L151>:
  goto <bb 368> (<L83>);

  <bb 139>:
  # DEBUG this => _356
  # DEBUG __c => 10
  _598 = MEM[(const struct ctype *)_356]._M_widen_ok;
  if (_598 != 0)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  _601 = MEM[(const struct ctype *)_356]._M_widen[10];
  pretmp_1112 = (int) _601;
  goto <bb 147>;

  <bb 141>:
  # DEBUG this => _356
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_356);
  goto <bb 143>;

<L152>:
  goto <bb 368> (<L83>);

  <bb 143>:
  _606 = MEM[(const struct ctype *)_356].D.20312._vptr.facet;
  _607 = MEM[(int (*__vtbl_ptr_type) () *)_606 + 48B];
  PROF_611 = [obj_type_ref] OBJ_TYPE_REF(_607;(const struct ctype)_356->6);
  if (PROF_611 == do_widen)
    goto <bb 147>;
  else
    goto <bb 144>;

  <bb 144>:
  _613 = OBJ_TYPE_REF(_607;(const struct ctype)_356->6) (_356, 10);
  goto <bb 146>;

<L153>:
  goto <bb 368> (<L83>);

  <bb 146>:
  pretmp_1113 = (int) _613;

  <bb 147>:
  # prephitmp_1108 = PHI <pretmp_1112(140), 10(143), pretmp_1113(146)>
  _596 = std::basic_ostream<char>::put (_71, prephitmp_1108);
  goto <bb 149>;

<L154>:
  goto <bb 368> (<L83>);

  <bb 149>:
  # DEBUG __os => _596
  std::basic_ostream<char>::flush (_596);
  goto <bb 151>;

<L155>:
  goto <bb 368> (<L83>);

  <bb 151>:
  # DEBUG node => 0
  _505 = this_46(D)->_num_of_switch;
  if (_505 <= 0)
    goto <bb 333>;
  else
    goto <bb 154>;

  <bb 152>:
  # _1247 = PHI <_72(216)>
  # DEBUG node => 0
  if (_1247 <= 0)
    goto <bb 153>;
  else
    goto <bb 245>;

  <bb 153>:
  pretmp_1103 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1106 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 333>;

  <bb 154>:

  <bb 155>:
  # node_661 = PHI <0(154), node_165(217)>
  # DEBUG node => node_661
  # DEBUG __out => &router_name.D.26641
  # DEBUG __s => "router"
  # DEBUG __s => "router"
  std::__ostream_insert<char, std::char_traits<char> > (&router_name.D.26641, "router", 6);
  goto <bb 157>;

<L156>:
  pretmp_1145 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1121 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 157>:
  # DEBUG __out => &router_name.D.26641
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  std::__ostream_insert<char, std::char_traits<char> > (&router_name.D.26641, "_", 1);
  goto <bb 159>;

<L157>:
  pretmp_755 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_736 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 159>:
  std::basic_ostream<char>::operator<< (&router_name.D.26641, node_661);
  goto <bb 161>;

<L158>:
  pretmp_1146 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1122 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 161>:
  _75 = (long unsigned int) node_661;
  # DEBUG D#154 => &this_46(D)->D.47360._routers
  _297 = MEM[(struct Router * * *)this_46(D) + 112B];
  # DEBUG D#34 => D#154
  # DEBUG __n => _75
  # DEBUG this => D#34
  _159 = _75 * 8;
  _155 = _297 + _159;
  _76 = this_46(D)->_r;
  # DEBUG this => &router_name
  # DEBUG this => &router_name._M_stringbuf
  # DEBUG this => &D.47610
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG this => &D.47610
  # DEBUG D#50 => &D.47610._M_dataplus
  # DEBUG this => D#50
  # DEBUG __dat => &D.47610.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#50
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.47610]._M_p = &D.47610.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.47610
  # DEBUG __n => 0
  # DEBUG D#10 => &D.47610
  # DEBUG __length => 0
  # DEBUG this => D#10
  MEM[(size_type *)&D.47610 + 8B] = 0;
  # DEBUG D#6 => &D.47610
  # DEBUG this => D#6
  # DEBUG __c1 => &D.47610.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.47610 + 16] = 0;
  # DEBUG D#108 => &MEM[(const struct basic_stringbuf *)&router_name + 8B].D.26491
  _618 = MEM[(char_type * *)&router_name + 48B];
  # DEBUG D#3 => D#108
  # DEBUG this => D#3
  if (_618 != 0B)
    goto <bb 162>;
  else
    goto <bb 184>;

  <bb 162>:
  # DEBUG D#109 => &MEM[(const struct basic_stringbuf *)&router_name + 8B].D.26491
  # DEBUG D#3 => D#109
  # DEBUG this => D#3
  # DEBUG D#110 => &MEM[(const struct basic_stringbuf *)&router_name + 8B].D.26491
  _619 = MEM[(char_type * *)&router_name + 32B];
  # DEBUG D#4 => D#110
  # DEBUG this => D#4
  if (_618 > _619)
    goto <bb 163>;
  else
    goto <bb 173>;

  <bb 163>:
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#113 => &MEM[(const struct basic_stringbuf *)&router_name + 8B].D.26491
  # DEBUG D#3 => D#113
  # DEBUG this => D#3
  # DEBUG D#114 => &MEM[(const struct basic_stringbuf *)&router_name + 8B].D.26491
  _620 = MEM[(char_type * *)&router_name + 40B];
  # DEBUG D#5 => D#114
  # DEBUG this => D#5
  # DEBUG this => &D.61474
  # DEBUG __beg => _620
  # DEBUG __end => _618
  # DEBUG __a => NULL
  # DEBUG this => &D.61474
  # DEBUG D#106 => &D.61474._M_dataplus
  # DEBUG this => D#106
  # DEBUG __dat => &D.61474.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#106
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.61474]._M_p = &D.61474.D.11539._M_local_buf;
  # DEBUG this => &D.61474
  # DEBUG __beg => _620
  # DEBUG __end => _618
  # DEBUG this => &D.61474
  # DEBUG __beg => _620
  # DEBUG __end => _618
  # DEBUG this => &D.61474
  # DEBUG __beg => _620
  # DEBUG __end => _618
  # DEBUG __ptr => _620
  if (_620 == 0B)
    goto <bb 372>;
  else
    goto <bb 371>;

  <bb 164>:
  _632 = std::__cxx11::basic_string<char>::_M_create (&D.61474, &__dnew, 0);

  <bb 165>:
  # DEBUG D#8 => &D.61474
  # DEBUG __p => _632
  # DEBUG this => D#8
  MEM[(char * *)&D.61474] = _632;
  __dnew.47_633 = __dnew;
  # DEBUG D#9 => &D.61474
  # DEBUG __capacity => __dnew.47_633
  # DEBUG this => D#9
  MEM[(size_type *)&D.61474 + 16B] = __dnew.47_633;
  # DEBUG D#6 => &D.61474
  # DEBUG this => D#6
  # DEBUG __p => _632
  # DEBUG __k1 => _620
  # DEBUG __k2 => _618
  # DEBUG __d => _632
  # DEBUG __s => _620
  # DEBUG __n => __dnew.46_631
  goto <bb 168>;

  <bb 166>:
  # DEBUG D#6 => &D.61474
  # DEBUG this => D#6
  # DEBUG __p => &D.61474.D.11539._M_local_buf
  # DEBUG __k1 => _620
  # DEBUG __k2 => _618
  # DEBUG __d => &D.61474.D.11539._M_local_buf
  # DEBUG __s => _620
  # DEBUG __n => __dnew.46_631
  if (__dnew.46_631 == 1)
    goto <bb 167>;
  else
    goto <bb 168>;

  <bb 167>:
  _635 = MEM[(const char_type &)_620];
  # DEBUG D#11 => _620
  # DEBUG __c1 => &D.61474.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.61474 + 16] = _635;
  goto <bb 169>;

  <bb 168>:
  # _1141 = PHI <&D.61474.D.11539._M_local_buf(166), _632(165)>
  # DEBUG D#6 => &D.61474
  # DEBUG this => D#6
  # DEBUG __p => _1141
  # DEBUG __k1 => _620
  # DEBUG __k2 => _618
  # DEBUG __d => _1141
  # DEBUG __s => _620
  # DEBUG __n => __dnew.46_631
  # DEBUG __s1 => _1141
  # DEBUG __s2 => _620
  # DEBUG __n => __dnew.46_631
  __builtin_memcpy (_1141, _620, __dnew.46_631);
  pretmp_446 = __dnew;
  pretmp_469 = MEM[(char * *)&D.61474];

  <bb 169>:
  # prephitmp_456 = PHI <__dnew.46_631(167), pretmp_446(168)>
  # prephitmp_470 = PHI <&D.61474.D.11539._M_local_buf(167), pretmp_469(168)>
  # DEBUG D#485 => __dnew
  # DEBUG this => &D.61474
  # DEBUG __n => D#485
  # DEBUG D#10 => &D.61474
  # DEBUG __length => D#485
  # DEBUG this => D#10
  MEM[(size_type *)&D.61474 + 8B] = prephitmp_456;
  # DEBUG D#6 => &D.61474
  # DEBUG this => D#6
  _638 = prephitmp_470 + prephitmp_456;
  # DEBUG __c1 => _638
  # DEBUG __c2 => D#11
  MEM[(char_type &)_638] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.47610
  # DEBUG __str => &D.61474
  # DEBUG this => &D.47610
  # DEBUG __str => &D.61474
  std::__cxx11::basic_string<char>::_M_assign (&D.47610, &D.61474);

  <bb 170>:
  # DEBUG this => &D.61474
  # DEBUG this => &D.61474
  # DEBUG this => &D.61474
  _621 = MEM[(char * *)&D.61474];
  # DEBUG D#6 => &D.61474
  # DEBUG this => D#6
  # DEBUG this => &D.61474
  if (&D.61474.D.11539._M_local_buf != _621)
    goto <bb 171>;
  else
    goto <bb 172>;

  <bb 171>:
  # DEBUG D#64 => D.61474.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.61474
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.61474
  # DEBUG this => D#6
  # DEBUG this => &D.61474
  # DEBUG D#61 => &D.61474._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _621
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _621
  # DEBUG this => D#55
  # DEBUG D.61433 => D#56
  operator delete (_621);

  <bb 172>:
  # DEBUG D#65 => &D.61474._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.61474 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 199>;

  <bb 173>:
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#111 => &MEM[(const struct basic_stringbuf *)&router_name + 8B].D.26491
  # DEBUG D#4 => D#111
  # DEBUG this => D#4
  # DEBUG D#112 => &MEM[(const struct basic_stringbuf *)&router_name + 8B].D.26491
  _622 = MEM[(char_type * *)&router_name + 40B];
  # DEBUG D#5 => D#112
  # DEBUG this => D#5
  # DEBUG this => &D.61473
  # DEBUG __beg => _622
  # DEBUG __end => _619
  # DEBUG __a => NULL
  # DEBUG this => &D.61473
  # DEBUG D#106 => &D.61473._M_dataplus
  # DEBUG this => D#106
  # DEBUG __dat => &D.61473.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#106
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.61473]._M_p = &D.61473.D.11539._M_local_buf;
  # DEBUG this => &D.61473
  # DEBUG __beg => _622
  # DEBUG __end => _619
  # DEBUG this => &D.61473
  # DEBUG __beg => _622
  # DEBUG __end => _619
  # DEBUG this => &D.61473
  # DEBUG __beg => _622
  # DEBUG __end => _619
  # DEBUG __ptr => _622
  _4 = _619 != 0B;
  _1058 = _622 == 0B;
  _935 = _4 & _1058;
  if (_935 != 0)
    goto <bb 374>;
  else
    goto <bb 376>;

  <bb 174>:
  _644 = std::__cxx11::basic_string<char>::_M_create (&D.61473, &__dnew, 0);
  goto <bb 176>;

<L160>:
  goto <bb 195> (<L96>);

  <bb 176>:
  # DEBUG D#8 => &D.61473
  # DEBUG __p => _644
  # DEBUG this => D#8
  MEM[(char * *)&D.61473] = _644;
  __dnew.47_645 = __dnew;
  # DEBUG D#9 => &D.61473
  # DEBUG __capacity => __dnew.47_645
  # DEBUG this => D#9
  MEM[(size_type *)&D.61473 + 16B] = __dnew.47_645;
  # DEBUG D#6 => &D.61473
  # DEBUG this => D#6
  # DEBUG __p => _644
  # DEBUG __k1 => _622
  # DEBUG __k2 => _619
  # DEBUG __d => _644
  # DEBUG __s => _622
  # DEBUG __n => __dnew.46_643
  goto <bb 179>;

  <bb 177>:
  # DEBUG D#6 => &D.61473
  # DEBUG this => D#6
  # DEBUG __p => &D.61473.D.11539._M_local_buf
  # DEBUG __k1 => _622
  # DEBUG __k2 => _619
  # DEBUG __d => &D.61473.D.11539._M_local_buf
  # DEBUG __s => _622
  # DEBUG __n => __dnew.46_643
  if (__dnew.46_643 == 1)
    goto <bb 178>;
  else
    goto <bb 179>;

  <bb 178>:
  _647 = MEM[(const char_type &)_622];
  # DEBUG D#11 => _622
  # DEBUG __c1 => &D.61473.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.61473 + 16] = _647;
  goto <bb 180>;

  <bb 179>:
  # _1142 = PHI <&D.61473.D.11539._M_local_buf(177), _644(176)>
  # DEBUG D#6 => &D.61473
  # DEBUG this => D#6
  # DEBUG __p => _1142
  # DEBUG __k1 => _622
  # DEBUG __k2 => _619
  # DEBUG __d => _1142
  # DEBUG __s => _622
  # DEBUG __n => __dnew.46_643
  # DEBUG __s1 => _1142
  # DEBUG __s2 => _622
  # DEBUG __n => __dnew.46_643
  __builtin_memcpy (_1142, _622, __dnew.46_643);
  pretmp_933 = __dnew;
  pretmp_444 = MEM[(char * *)&D.61473];

  <bb 180>:
  # prephitmp_442 = PHI <__dnew.46_643(178), pretmp_933(179)>
  # prephitmp_445 = PHI <&D.61473.D.11539._M_local_buf(178), pretmp_444(179)>
  # DEBUG D#486 => __dnew
  # DEBUG this => &D.61473
  # DEBUG __n => D#486
  # DEBUG D#10 => &D.61473
  # DEBUG __length => D#486
  # DEBUG this => D#10
  MEM[(size_type *)&D.61473 + 8B] = prephitmp_442;
  # DEBUG D#6 => &D.61473
  # DEBUG this => D#6
  _650 = prephitmp_445 + prephitmp_442;
  # DEBUG __c1 => _650
  # DEBUG __c2 => D#11
  MEM[(char_type &)_650] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.47610
  # DEBUG __str => &D.61473
  # DEBUG this => &D.47610
  # DEBUG __str => &D.61473
  std::__cxx11::basic_string<char>::_M_assign (&D.47610, &D.61473);

  <bb 181>:
  # DEBUG this => &D.61473
  # DEBUG this => &D.61473
  # DEBUG this => &D.61473
  _623 = MEM[(char * *)&D.61473];
  # DEBUG D#6 => &D.61473
  # DEBUG this => D#6
  # DEBUG this => &D.61473
  if (&D.61473.D.11539._M_local_buf != _623)
    goto <bb 182>;
  else
    goto <bb 183>;

  <bb 182>:
  # DEBUG D#64 => D.61473.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.61473
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.61473
  # DEBUG this => D#6
  # DEBUG this => &D.61473
  # DEBUG D#61 => &D.61473._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _623
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _623
  # DEBUG this => D#55
  # DEBUG D.61396 => D#56
  operator delete (_623);

  <bb 183>:
  # DEBUG D#65 => &D.61473._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.61473 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 199>;

  <bb 184>:
  # DEBUG this => &D.47610
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&router_name + 8B]._M_string
  # DEBUG this => &D.47610
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&router_name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.47610, &MEM[(const struct basic_stringbuf *)&router_name + 8B]._M_string);
  goto <bb 199>;

<L161>:
  goto <bb 195> (<L96>);

<L94>:
  # DEBUG this => &D.61474
  # DEBUG this => &D.61474
  # DEBUG this => &D.61474
  _625 = MEM[(char * *)&D.61474];
  # DEBUG D#6 => &D.61474
  # DEBUG this => D#6
  # DEBUG this => &D.61474
  if (&D.61474.D.11539._M_local_buf != _625)
    goto <bb 187>;
  else
    goto <bb 188>;

  <bb 187>:
  # DEBUG D#64 => D.61474.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.61474
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.61474
  # DEBUG this => D#6
  # DEBUG this => &D.61474
  # DEBUG D#61 => &D.61474._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _625
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _625
  # DEBUG this => D#55
  # DEBUG D.61377 => D#56
  operator delete (_625);

  <bb 188>:
  # DEBUG D#65 => &D.61474._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.61474 ={v} {CLOBBER};
  resx 29

<L162>:
  goto <bb 195> (<L96>);

<L95>:
  # DEBUG this => &D.61473
  # DEBUG this => &D.61473
  # DEBUG this => &D.61473
  _626 = MEM[(char * *)&D.61473];
  # DEBUG D#6 => &D.61473
  # DEBUG this => D#6
  # DEBUG this => &D.61473
  if (&D.61473.D.11539._M_local_buf != _626)
    goto <bb 191>;
  else
    goto <bb 192>;

  <bb 191>:
  # DEBUG D#64 => D.61473.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.61473
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.61473
  # DEBUG this => D#6
  # DEBUG this => &D.61473
  # DEBUG D#61 => &D.61473._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _626
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _626
  # DEBUG this => D#55
  # DEBUG D.61361 => D#56
  operator delete (_626);

  <bb 192>:
  # DEBUG D#65 => &D.61473._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.61473 ={v} {CLOBBER};
  resx 28

<L163>:
  goto <bb 195> (<L96>);

<L159>:

<L96>:
  # DEBUG this => &D.47610
  # DEBUG this => &D.47610
  # DEBUG this => &D.47610
  _627 = MEM[(char * *)&D.47610];
  # DEBUG D#6 => &D.47610
  # DEBUG this => D#6
  # DEBUG this => &D.47610
  if (&D.47610.D.11539._M_local_buf != _627)
    goto <bb 196>;
  else
    goto <bb 197>;

  <bb 196>:
  # DEBUG D#64 => D.47610.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.47610
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.47610
  # DEBUG this => D#6
  # DEBUG this => &D.47610
  # DEBUG D#61 => &D.47610._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _627
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _627
  # DEBUG this => D#55
  # DEBUG D.61350 => D#56
  operator delete (_627);

  <bb 197>:
  # DEBUG D#65 => &D.47610._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  resx 27

<L164>:
  pretmp_756 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_737 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 199>:
  _77 = &this_46(D)->D.47360.D.47238.D.36000;
  _79 = Router::NewRouter (config_40(D), _77, &D.47610, node_661, _76, _76);

  <bb 200>:
  *_155 = _79;
  # DEBUG this => &D.47610
  # DEBUG this => &D.47610
  # DEBUG this => &D.47610
  _145 = MEM[(char * *)&D.47610];
  # DEBUG D#6 => &D.47610
  # DEBUG this => D#6
  # DEBUG this => &D.47610
  if (&D.47610.D.11539._M_local_buf != _145)
    goto <bb 201>;
  else
    goto <bb 202>;

  <bb 201>:
  # DEBUG D#64 => D.47610.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.47610
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.47610
  # DEBUG this => D#6
  # DEBUG this => &D.47610
  # DEBUG D#61 => &D.47610._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _145
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _145
  # DEBUG this => D#55
  # DEBUG D.58050 => D#56
  operator delete (_145);

  <bb 202>:
  # DEBUG D#65 => &D.47610._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.47610 ={v} {CLOBBER};
  # DEBUG D#155 => &this_46(D)->D.47360._routers
  _298 = MEM[(struct Router * * *)this_46(D) + 112B];
  # DEBUG D#34 => D#155
  # DEBUG __n => _75
  # DEBUG this => D#34
  _147 = _298 + _159;
  _83 = *_147;
  D.47611 = _83;
  # DEBUG D#487 => &this_46(D)->D.47360._timed_modules
  # DEBUG this => D#487
  # DEBUG __x => &D.47611
  _651 = MEM[(struct deque *)this_46(D) + 280B].D.47124._M_impl._M_finish._M_cur;
  _652 = MEM[(struct deque *)this_46(D) + 280B].D.47124._M_impl._M_finish._M_last;
  _653 = _652 + 18446744073709551608;
  if (_651 != _653)
    goto <bb 203>;
  else
    goto <bb 206>;

  <bb 203>:
  # DEBUG D#147 => &D#487->D.47124._M_impl
  # DEBUG D#39 => D#147
  # DEBUG __p => _651
  # DEBUG __arg => &D.47611
  # DEBUG __a => D#39
  # DEBUG D#38 => D#39
  # DEBUG D#37 => D#38
  # DEBUG __p => _651
  # DEBUG __val => &D.47611
  # DEBUG this => D#37
  # DEBUG D#12 => 8
  # DEBUG __p => _651
  # DEBUG D.56348 => D#12
  if (_651 != 0B)
    goto <bb 204>;
  else
    goto <bb 205>;

  <bb 204>:
  *_651 = _83;
  pretmp_440 = MEM[(struct deque *)this_46(D) + 280B].D.47124._M_impl._M_finish._M_cur;

  <bb 205>:
  # prephitmp_443 = PHI <_651(203), pretmp_440(204)>
  _656 = prephitmp_443 + 8;
  MEM[(struct deque *)this_46(D) + 280B].D.47124._M_impl._M_finish._M_cur = _656;
  goto <bb 208>;

  <bb 206>:
  _85 = &this_46(D)->D.47360._timed_modules;
  std::deque<TimedModule*>::_M_push_back_aux (_85, &D.47611);
  goto <bb 208>;

<L165>:
  pretmp_885 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_880 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 208>:
  D.47611 ={v} {CLOBBER};
  # DEBUG D#36 => &D.47613
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#91 => &D.47613
  # DEBUG this => &D.47614
  # DEBUG __s => ""
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.47614
  # DEBUG D#88 => &D.47614._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.47614.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.47614]._M_p = &D.47614.D.11539._M_local_buf;
  # DEBUG __s => ""
  # DEBUG this => &D.47614
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.47614
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.47614
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG __ptr => ""
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG __dnew => 0
  # DEBUG D#488 => MEM[(char * *)&D.47614]
  # DEBUG D#6 => &D.47614
  # DEBUG this => D#6
  # DEBUG __p => D#488
  # DEBUG __k1 => ""
  # DEBUG __k2 => ""
  # DEBUG __d => D#488
  # DEBUG __s => ""
  # DEBUG __n => 0
  # DEBUG __s1 => D#488
  # DEBUG __s2 => ""
  # DEBUG __n => 0
  # DEBUG this => &D.47614
  # DEBUG __n => 0
  # DEBUG D#10 => &D.47614
  # DEBUG __length => 0
  # DEBUG this => D#10
  MEM[(size_type *)&D.47614 + 8B] = 0;
  # DEBUG D#6 => &D.47614
  # DEBUG this => D#6
  # DEBUG __c1 => &D.47614.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.47614 + 16] = 0;
  # DEBUG D#482 => {CLOBBER}
  # DEBUG __dnew => D#482
  # DEBUG this => &router_name
  # DEBUG __s => &D.47614
  # DEBUG this => &router_name._M_stringbuf
  # DEBUG __s => &D.47614
  # DEBUG D#1 => &D.47614
  # DEBUG this => D#1
  # DEBUG this => &D.47614
  # DEBUG D#6 => &D.47614
  # DEBUG this => D#6
  # DEBUG this => &MEM[(struct basic_stringbuf *)&router_name + 8B]._M_string
  # DEBUG __s => &D.47614.D.11539._M_local_buf
  # DEBUG __n => 0
  _675 = MEM[(long unsigned int *)&router_name + 88B];
  # DEBUG D#1 => &MEM[(struct basic_stringbuf *)&router_name + 8B]._M_string
  # DEBUG this => D#1
  std::__cxx11::basic_string<char>::_M_replace (&MEM[(struct basic_stringbuf *)&router_name + 8B]._M_string, 0, _675, &D.47614.D.11539._M_local_buf, 0);

  <bb 209>:
  _676 = MEM[(struct basic_stringbuf *)&router_name + 8B]._M_mode;
  # DEBUG this => &router_name._M_stringbuf
  # DEBUG __mode => _676
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => _676
  # DEBUG __b => NULL
  __a.67_677 = (int) _676;
  _678 = __a.67_677 & 3;
  if (_678 != 0)
    goto <bb 210>;
  else
    goto <bb 211>;

  <bb 210>:
  # DEBUG D#15 => &MEM[(struct basic_stringbuf *)&router_name + 8B]._M_string
  __len_680 = MEM[(long unsigned int *)&router_name + 88B];
  # DEBUG D#1 => D#15
  # DEBUG this => D#1
  # DEBUG __len => __len_680

  <bb 211>:
  # __len_682 = PHI <0(209), __len_680(210)>
  # DEBUG __len => __len_682
  # DEBUG D#16 => &MEM[(struct basic_stringbuf *)&router_name + 8B]._M_string
  # DEBUG this => D#16
  _681 = MEM[(char * *)&router_name + 80B];
  # DEBUG D#6 => D#16
  # DEBUG this => D#6
  std::__cxx11::basic_stringbuf<char>::_M_sync (&router_name._M_stringbuf, _681, 0, __len_682);
  goto <bb 213>;

<L167>:
  goto <bb 363> (<L81>);

  <bb 213>:
  # DEBUG this => &D.47614
  # DEBUG this => &D.47614
  # DEBUG this => &D.47614
  _90 = MEM[(char * *)&D.47614];
  # DEBUG D#6 => &D.47614
  # DEBUG this => D#6
  # DEBUG this => &D.47614
  if (&D.47614.D.11539._M_local_buf != _90)
    goto <bb 214>;
  else
    goto <bb 215>;

  <bb 214>:
  # DEBUG D#64 => D.47614.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.47614
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.47614
  # DEBUG this => D#6
  # DEBUG this => &D.47614
  # DEBUG D#61 => &D.47614._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _90
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _90
  # DEBUG this => D#55
  # DEBUG D.58070 => D#56
  operator delete (_90);

  <bb 215>:
  # DEBUG D#65 => &D.47614._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.47614 ={v} {CLOBBER};
  # DEBUG this => &D.47613
  # DEBUG this => &D.47613
  _yrouter.23_91 = _yrouter;
  yleng_92 = _yrouter.23_91 / -2;
  # DEBUG yleng => yleng_92
  _xrouter.24_93 = _xrouter;
  xleng_94 = _xrouter.24_93 / -2;
  # DEBUG xleng => xleng_94
  _95 = _yrouter.23_91 % 2;
  # DEBUG yodd => _95 == 1
  _96 = _xrouter.24_93 % 2;
  # DEBUG xodd => _96 == 1
  _xcount.25_97 = _xcount;
  y_index_98 = node_661 / _xcount.25_97;
  # DEBUG y_index => y_index_98
  x_index_99 = node_661 % _xcount.25_97;
  # DEBUG x_index => x_index_99
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG xleng => xleng_94
  # DEBUG yleng => yleng_92
  if (_yrouter.23_91 <= 0)
    goto <bb 216>;
  else
    goto <bb 218>;

  <bb 216>:
  node_165 = node_661 + 1;
  # DEBUG node => node_165
  # DEBUG node => node_165
  _72 = this_46(D)->_num_of_switch;
  if (_72 <= node_165)
    goto <bb 152>;
  else
    goto <bb 217>;

  <bb 217>:
  goto <bb 155>;

  <bb 218>:

  <bb 219>:
  # yleng_21 = PHI <yleng_92(218), yleng_679(244)>
  # xleng_731 = PHI <xleng_94(218), xleng_766(244)>
  # y_767 = PHI <0(218), y_164(244)>
  # prephitmp_809 = PHI <_xrouter.24_93(218), prephitmp_551(244)>
  # prephitmp_1215 = PHI <_yrouter.23_91(218), prephitmp_510(244)>
  # DEBUG y => y_767
  # DEBUG xleng => xleng_94
  # DEBUG yleng => yleng_92
  # DEBUG x => 0
  # DEBUG xleng => xleng_731
  # DEBUG yleng => yleng_21
  if (prephitmp_809 <= 0)
    goto <bb 243>;
  else
    goto <bb 220>;

  <bb 220>:
  pretmp_993 = _95 != 1;
  pretmp_548 = _96 != 1;

  <bb 221>:
  # yleng_829 = PHI <yleng_21(220), yleng_5(241)>
  # xleng_235 = PHI <xleng_731(220), xleng_9(241)>
  # x_785 = PHI <0(220), x_163(241)>
  # _xrouter.24_237 = PHI <prephitmp_809(220), _xrouter.24_101(241)>
  # prephitmp_542 = PHI <prephitmp_1215(220), pretmp_603(241)>
  # DEBUG x => x_785
  # DEBUG xleng => xleng_235
  # DEBUG yleng => yleng_829
  _102 = yleng_829 == 0;
  _104 = _102 & pretmp_993;
  if (_104 != 0)
    goto <bb 377>;
  else
    goto <bb 222>;

  <bb 222>:
  # DEBUG yleng => yleng_829
  _106 = xleng_235 == 0;
  _108 = _106 & pretmp_548;
  if (_108 != 0)
    goto <bb 223>;
  else
    goto <bb 225>;

  <bb 223>:
  pretmp_427 = ABS_EXPR <yleng_829>;
  pretmp_430 = yleng_829 + 1;

  <bb 224>:
  # prephitmp_428 = PHI <pretmp_427(223), 1(377)>
  # prephitmp_433 = PHI <pretmp_430(223), 2(377)>
  # DEBUG xleng => 1
  # DEBUG xleng => 1
  # DEBUG ileng => 1
  if (prephitmp_428 > 1)
    goto <bb 231>;
  else
    goto <bb 228>;

  <bb 225>:
  # DEBUG xleng => xleng_235
  # DEBUG ileng => 1
  ileng_110 = ABS_EXPR <yleng_829>;
  if (ileng_110 > 1)
    goto <bb 226>;
  else
    goto <bb 227>;

  <bb 226>:
  pretmp_527 = ABS_EXPR <xleng_235>;
  pretmp_534 = yleng_829 + 1;
  goto <bb 229>;

  <bb 227>:
  pretmp_532 = ABS_EXPR <xleng_235>;
  pretmp_977 = yleng_829 + 1;

  <bb 228>:
  # xleng_1139 = PHI <xleng_235(227), xleng_235(378), 1(224)>
  # prephitmp_480 = PHI <pretmp_532(227), pretmp_499(378), 1(224)>
  # prephitmp_411 = PHI <pretmp_977(227), 2(378), prephitmp_433(224)>
  # DEBUG xleng => xleng_1139
  # DEBUG ileng => 1

  <bb 229>:
  # ileng_12 = PHI <1(228), ileng_110(226)>
  # xleng_747 = PHI <xleng_1139(228), xleng_235(226)>
  # prephitmp_530 = PHI <prephitmp_480(228), pretmp_527(226)>
  # prephitmp_537 = PHI <prephitmp_411(228), pretmp_534(226)>
  # DEBUG ileng => ileng_12
  if (prephitmp_530 > 1)
    goto <bb 230>;
  else
    goto <bb 231>;

  <bb 230>:
  _112 = prephitmp_530 + -1;
  ileng_113 = ileng_12 + _112;
  # DEBUG ileng => ileng_113

  <bb 231>:
  # ileng_13 = PHI <ileng_12(229), ileng_113(230), prephitmp_428(224)>
  # xleng_787 = PHI <xleng_747(229), xleng_747(230), 1(224)>
  # prephitmp_524 = PHI <prephitmp_537(229), prephitmp_537(230), prephitmp_433(224)>
  # DEBUG ileng => ileng_13
  # DEBUG yleng => NULL
  _116 = prephitmp_542 / 2;
  if (_116 < prephitmp_524)
    goto <bb 232>;
  else
    goto <bb 233>;

  <bb 232>:
  yleng_117 = prephitmp_542 / -2;
  # DEBUG yleng => yleng_117
  xleng_118 = xleng_787 + 1;
  # DEBUG xleng => xleng_118

  <bb 233>:
  # yleng_5 = PHI <prephitmp_524(231), yleng_117(232)>
  # xleng_9 = PHI <xleng_787(231), xleng_118(232)>
  # DEBUG xleng => xleng_9
  # DEBUG yleng => yleng_5
  _xcount.25_119 = _xcount;
  _120 = _xcount.25_119 * _xrouter.24_237;
  _121 = y_index_98 * prephitmp_542;
  _122 = _121 + y_767;
  _123 = _120 * _122;
  _124 = x_index_99 * _xrouter.24_237;
  _125 = _124 + x_785;
  link_126 = _123 + _125;
  # DEBUG link => link_126
  if (_42 == 1)
    goto <bb 234>;
  else
    goto <bb 235>;

  <bb 234>:
  _127 = (long unsigned int) link_126;
  # DEBUG D#156 => &this_46(D)->D.47360._inject
  _277 = MEM[(struct FlitChannel * * *)this_46(D) + 136B];
  # DEBUG D#32 => D#156
  # DEBUG __n => _127
  # DEBUG this => D#32
  _142 = _127 * 8;
  _140 = _277 + _142;
  _128 = *_140;
  # DEBUG D#479 => &_128->D.38127
  # DEBUG this => D#479
  # DEBUG cycles => ileng_13
  MEM[(struct Channel *)_128]._delay = ileng_13;
  # DEBUG D#157 => &this_46(D)->D.47360._inject_cred
  _287 = MEM[(struct Channel * * *)this_46(D) + 160B];
  # DEBUG D#33 => D#157
  # DEBUG __n => _127
  # DEBUG this => D#33
  _131 = _287 + _142;
  _132 = *_131;
  # DEBUG this => _132
  # DEBUG cycles => ileng_13
  _132->_delay = ileng_13;
  # DEBUG D#158 => &this_46(D)->D.47360._eject
  _278 = MEM[(struct FlitChannel * * *)this_46(D) + 184B];
  # DEBUG D#32 => D#158
  # DEBUG __n => _127
  # DEBUG this => D#32
  _82 = _278 + _142;
  _134 = *_82;
  # DEBUG D#478 => &_134->D.38127
  # DEBUG this => D#478
  # DEBUG cycles => ileng_13
  MEM[(struct Channel *)_134]._delay = ileng_13;
  # DEBUG D#159 => &this_46(D)->D.47360._eject_cred
  _288 = MEM[(struct Channel * * *)this_46(D) + 208B];
  # DEBUG D#33 => D#159
  # DEBUG __n => _127
  # DEBUG this => D#33
  _303 = _288 + _142;
  _137 = *_303;
  # DEBUG this => _137
  # DEBUG cycles => ileng_13
  _137->_delay = ileng_13;
  goto <bb 236>;

  <bb 235>:
  _139 = (long unsigned int) link_126;
  # DEBUG D#160 => &this_46(D)->D.47360._inject
  _279 = MEM[(struct FlitChannel * * *)this_46(D) + 136B];
  # DEBUG D#32 => D#160
  # DEBUG __n => _139
  # DEBUG this => D#32
  _307 = _139 * 8;
  _308 = _279 + _307;
  _141 = *_308;
  # DEBUG D#161 => &_141->D.38127
  # DEBUG this => D#161
  # DEBUG cycles => 1
  MEM[(struct Channel *)_141]._delay = 1;
  # DEBUG D#162 => &this_46(D)->D.47360._inject_cred
  _289 = MEM[(struct Channel * * *)this_46(D) + 160B];
  # DEBUG D#33 => D#162
  # DEBUG __n => _139
  # DEBUG this => D#33
  _310 = _289 + _307;
  _143 = *_310;
  # DEBUG this => _143
  # DEBUG cycles => 1
  _143->_delay = 1;
  # DEBUG D#163 => &this_46(D)->D.47360._eject
  _280 = MEM[(struct FlitChannel * * *)this_46(D) + 184B];
  # DEBUG D#32 => D#163
  # DEBUG __n => _139
  # DEBUG this => D#32
  _312 = _280 + _307;
  _144 = *_312;
  # DEBUG D#164 => &_144->D.38127
  # DEBUG this => D#164
  # DEBUG cycles => 1
  MEM[(struct Channel *)_144]._delay = 1;
  # DEBUG D#165 => &this_46(D)->D.47360._eject_cred
  _290 = MEM[(struct Channel * * *)this_46(D) + 208B];
  # DEBUG D#33 => D#165
  # DEBUG __n => _139
  # DEBUG this => D#33
  _316 = _290 + _307;
  _146 = *_316;
  # DEBUG this => _146
  # DEBUG cycles => 1
  _146->_delay = 1;

  <bb 236>:
  # prephitmp_525 = PHI <_132(234), _143(235)>
  # prephitmp_455 = PHI <_128(234), _141(235)>
  # prephitmp_965 = PHI <_142(234), _307(235)>
  # DEBUG D#166 => &this_46(D)->D.47360._routers
  _299 = MEM[(struct Router * * *)this_46(D) + 112B];
  # DEBUG D#34 => D#166
  # DEBUG __n => _75
  # DEBUG this => D#34
  _320 = _299 + _159;
  _148 = *_320;
  _149 = _148->D.45421.D.36000._vptr.Module;
  _150 = MEM[(int (*__vtbl_ptr_type) () *)_149 + 56B];
  # DEBUG D#484 => (long unsigned int) link_126
  # DEBUG D#167 => &this_46(D)->D.47360._inject_cred
  # DEBUG D#33 => D#167
  # DEBUG __n => D#484
  # DEBUG this => D#33
  # DEBUG D#168 => &this_46(D)->D.47360._inject
  # DEBUG D#32 => D#168
  # DEBUG __n => D#484
  # DEBUG this => D#32
  OBJ_TYPE_REF(_150;(struct Router)_148->7) (_148, prephitmp_455, prephitmp_525);
  goto <bb 238>;

<L168>:
  pretmp_1158 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1134 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 238>:
  # DEBUG D#169 => &this_46(D)->D.47360._routers
  _300 = MEM[(struct Router * * *)this_46(D) + 112B];
  # DEBUG D#34 => D#169
  # DEBUG __n => _75
  # DEBUG this => D#34
  _323 = _300 + _159;
  _156 = *_323;
  _157 = _156->D.45421.D.36000._vptr.Module;
  _158 = MEM[(int (*__vtbl_ptr_type) () *)_157 + 64B];
  # DEBUG D#170 => &this_46(D)->D.47360._eject_cred
  _292 = MEM[(struct Channel * * *)this_46(D) + 208B];
  # DEBUG D#33 => D#170
  # DEBUG __n => D#484
  # DEBUG this => D#33
  _322 = _292 + prephitmp_965;
  _160 = *_322;
  # DEBUG D#171 => &this_46(D)->D.47360._eject
  _282 = MEM[(struct FlitChannel * * *)this_46(D) + 184B];
  # DEBUG D#32 => D#171
  # DEBUG __n => D#484
  # DEBUG this => D#32
  _321 = _282 + prephitmp_965;
  _161 = *_321;
  OBJ_TYPE_REF(_158;(struct Router)_156->8) (_156, _161, _160);
  goto <bb 240>;

<L169>:
  pretmp_1159 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1135 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 240>:
  x_163 = x_785 + 1;
  # DEBUG x => x_163
  # DEBUG x => x_163
  # DEBUG xleng => xleng_9
  # DEBUG yleng => yleng_5
  _xrouter.24_101 = _xrouter;
  if (_xrouter.24_101 <= x_163)
    goto <bb 242>;
  else
    goto <bb 241>;

  <bb 241>:
  pretmp_603 = _yrouter;
  goto <bb 221>;

  <bb 242>:
  # yleng_1259 = PHI <yleng_5(240)>
  # xleng_1248 = PHI <xleng_9(240)>
  # _xrouter.24_1242 = PHI <_xrouter.24_101(240)>
  pretmp_960 = _yrouter;

  <bb 243>:
  # yleng_679 = PHI <yleng_1259(242), yleng_21(219)>
  # xleng_766 = PHI <xleng_1248(242), xleng_731(219)>
  # prephitmp_551 = PHI <_xrouter.24_1242(242), prephitmp_809(219)>
  # prephitmp_510 = PHI <pretmp_960(242), prephitmp_1215(219)>
  y_164 = y_767 + 1;
  # DEBUG y => y_164
  # DEBUG y => y_164
  # DEBUG xleng => xleng_766
  # DEBUG yleng => yleng_679
  if (y_164 >= prephitmp_510)
    goto <bb 216>;
  else
    goto <bb 244>;

  <bb 244>:
  goto <bb 219>;

  <bb 245>:
  pretmp_485 = this_46(D)->_n;

  <bb 246>:
  # node_786 = PHI <0(245), node_269(331)>
  # prephitmp_699 = PHI <_1247(245), prephitmp_495(331)>
  # prephitmp_952 = PHI <pretmp_485(245), prephitmp_683(331)>
  # DEBUG node => node_786
  # DEBUG dim => 0
  if (prephitmp_952 <= 0)
    goto <bb 330>;
  else
    goto <bb 247>;

  <bb 247>:
  pretmp_496 = this_46(D)->_k;
  _242 = (long unsigned int) node_786;
  _339 = _242 * 8;

  <bb 248>:
  # dim_109 = PHI <0(247), dim_268(328)>
  # prephitmp_870 = PHI <prephitmp_952(247), prephitmp_504(328)>
  # prephitmp_498 = PHI <pretmp_496(247), prephitmp_711(328)>
  # DEBUG dim => dim_109
  xcurr_174 = node_786 % prephitmp_498;
  # DEBUG xcurr => xcurr_174
  ycurr_175 = node_786 / prephitmp_498;
  # DEBUG ycurr => ycurr_175
  _176 = prephitmp_498 * prephitmp_498;
  curr3_177 = node_786 % _176;
  # DEBUG curr3 => curr3_177
  curr4_178 = node_786 / _176;
  # DEBUG curr4 => curr4_178
  _179 = _176 * prephitmp_498;
  curr5_180 = node_786 / _179;
  # DEBUG curr5 => curr5_180
  curr6_181 = node_786 % _179;
  # DEBUG curr6 => curr6_181
  # DEBUG cnt => 0
  # DEBUG cnt => 0
  # DEBUG curr4 => curr4_178
  if (prephitmp_498 <= 0)
    goto <bb 327>;
  else
    goto <bb 249>;

  <bb 249>:

  <bb 250>:
  # curr4_105 = PHI <curr4_178(249), curr4_748(266)>
  # cnt_934 = PHI <0(249), cnt_266(266)>
  # _753 = PHI <prephitmp_498(249), _182(266)>
  # DEBUG cnt => cnt_934
  # DEBUG curr4 => curr4_105
  # DEBUG other => 0
  # DEBUG offset => 0
  if (dim_109 == 0)
    goto <bb 251>;
  else
    goto <bb 252>;

  <bb 251>:
  _183 = ycurr_175 * _753;
  other_184 = _183 + cnt_934;
  # DEBUG other => other_184
  # DEBUG other => other_184
  # DEBUG curr4 => curr4_105
  goto <bb 264>;

  <bb 252>:
  if (dim_109 == 1)
    goto <bb 253>;
  else
    goto <bb 257>;

  <bb 253>:
  _185 = _753 * cnt_934;
  other_186 = xcurr_174 + _185;
  # DEBUG other => other_186
  _187 = this_46(D)->_n;
  if (_187 == 3)
    goto <bb 254>;
  else
    goto <bb 255>;

  <bb 254>:
  _188 = curr4_105 * _753;
  _189 = _188 * _753;
  other_190 = other_186 + _189;
  # DEBUG other => other_190
  # DEBUG other => other_190
  goto <bb 380>;

  <bb 255>:
  # DEBUG other => other_186
  if (_187 == 4)
    goto <bb 256>;
  else
    goto <bb 380>;

  <bb 256>:
  _191 = _753 * _753;
  _192 = node_786 / _191;
  curr4_193 = _192 % _753;
  # DEBUG curr4 => curr4_193
  _194 = curr5_180 * _753;
  _195 = curr4_193 + _194;
  _196 = _195 * _753;
  _197 = _196 * _753;
  other_198 = other_186 + _197;
  # DEBUG other => other_198
  goto <bb 380>;

  <bb 257>:
  if (dim_109 == 2)
    goto <bb 258>;
  else
    goto <bb 260>;

  <bb 258>:
  _199 = _753 * cnt_934;
  _200 = _199 * _753;
  other_201 = curr3_177 + _200;
  # DEBUG other => other_201
  _202 = this_46(D)->_n;
  if (_202 == 4)
    goto <bb 259>;
  else
    goto <bb 380>;

  <bb 259>:
  _203 = curr5_180 * _753;
  _204 = _203 * _753;
  _205 = _204 * _753;
  other_206 = other_201 + _205;
  # DEBUG other => other_206
  goto <bb 380>;

  <bb 260>:
  if (dim_109 == 3)
    goto <bb 261>;
  else
    goto <bb 262>;

  <bb 261>:
  _207 = _753 * cnt_934;
  _208 = _207 * _753;
  _209 = _208 * _753;
  other_210 = curr6_181 + _209;
  # DEBUG other => other_210
  goto <bb 380>;

  <bb 262>:
  # DEBUG other => 0
  # DEBUG curr4 => curr4_105
  if (dim_109 > 3)
    goto <bb 263>;
  else
    goto <bb 264>;

  <bb 263>:
  __assert_fail ("dim < 4", "networks/flatfly_onchip.cpp", 250, &__PRETTY_FUNCTION__);

  <bb 264>:
  # curr4_748 = PHI <curr4_105(262), curr4_105(251), curr4_708(380)>
  # other_1140 = PHI <0(262), other_184(251), other_788(380)>
  # DEBUG other => other_1140
  # DEBUG curr4 => curr4_748
  if (node_786 == other_1140)
    goto <bb 265>;
  else
    goto <bb 267>;

  <bb 265>:
  cnt_266 = cnt_934 + 1;
  # DEBUG cnt => cnt_266
  # DEBUG cnt => cnt_266
  # DEBUG curr4 => curr4_748
  _182 = this_46(D)->_k;
  if (_182 <= cnt_266)
    goto <bb 326>;
  else
    goto <bb 266>;

  <bb 266>:
  goto <bb 250>;

  <bb 267>:
  # DEBUG length => 0
  _xcount.25_211 = _xcount;
  _212 = node_786 % _xcount.25_211;
  _213 = other_1140 % _xcount.25_211;
  _214 = _212 - _213;
  oned_215 = ABS_EXPR <_214>;
  # DEBUG oned => oned_215
  _216 = node_786 / _xcount.25_211;
  _217 = other_1140 / _xcount.25_211;
  _218 = _216 - _217;
  twod_219 = ABS_EXPR <_218>;
  # DEBUG twod => twod_219
  _xrouter.24_220 = _xrouter;
  _221 = oned_215 * _xrouter.24_220;
  _yrouter.23_222 = _yrouter;
  _223 = twod_219 * _yrouter.23_222;
  length_224 = _221 + _223;
  # DEBUG length => length_224
  _39 = node_786 < other_1140;
  _583 = (int) _39;
  # DEBUG offset => -_583
  _225 = _753 + -1;
  _226 = this_46(D)->_n;
  _227 = _225 * _226;
  _228 = _227 * node_786;
  _229 = dim_109 * _225;
  _230 = _228 + _229;
  _231 = _230 + cnt_934;
  _output_232 = _231 - _583;
  # DEBUG _output => _output_232
  if (_42 == 1)
    goto <bb 268>;
  else
    goto <bb 289>;

  <bb 268>:
  _233 = (long unsigned int) _output_232;
  # DEBUG D#172 => &this_46(D)->D.47360._chan
  _283 = MEM[(struct FlitChannel * * *)this_46(D) + 232B];
  # DEBUG D#32 => D#172
  # DEBUG __n => _233
  # DEBUG this => D#32
  _324 = _233 * 8;
  _325 = _283 + _324;
  _234 = *_325;
  # DEBUG D#480 => &_234->D.38127
  # DEBUG this => D#480
  # DEBUG cycles => length_224
  if (length_224 <= 0)
    goto <bb 269>;
  else
    goto <bb 379>;

  <bb 269>:
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG this => &D.61962
  # DEBUG __s => "Channel must have positive delay."
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.61962
  # DEBUG D#88 => &D.61962._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.61962.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.61962]._M_p = &D.61962.D.11539._M_local_buf;
  # DEBUG __s => "Channel must have positive delay."
  # DEBUG this => &D.61962
  # DEBUG __beg => "Channel must have positive delay."
  # DEBUG __end => &MEM[(void *)"Channel must have positive delay." + 33B]
  # DEBUG this => &D.61962
  # DEBUG __beg => "Channel must have positive delay."
  # DEBUG __end => &MEM[(void *)"Channel must have positive delay." + 33B]
  # DEBUG this => &D.61962
  # DEBUG __beg => "Channel must have positive delay."
  # DEBUG __end => &MEM[(void *)"Channel must have positive delay." + 33B]
  # DEBUG __ptr => "Channel must have positive delay."
  # DEBUG __first => "Channel must have positive delay."
  # DEBUG __last => &MEM[(void *)"Channel must have positive delay." + 33B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => "Channel must have positive delay."
  # DEBUG __last => &MEM[(void *)"Channel must have positive delay." + 33B]
  __dnew = 33;
  _770 = std::__cxx11::basic_string<char>::_M_create (&D.61962, &__dnew, 0);
  goto <bb 271>;

<L170>:
  pretmp_733 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_714 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 271>:
  # DEBUG D#8 => &D.61962
  # DEBUG __p => _770
  # DEBUG this => D#8
  MEM[(char * *)&D.61962] = _770;
  __dnew.47_771 = __dnew;
  # DEBUG D#9 => &D.61962
  # DEBUG __capacity => __dnew.47_771
  # DEBUG this => D#9
  MEM[(size_type *)&D.61962 + 16B] = __dnew.47_771;
  # DEBUG D#6 => &D.61962
  # DEBUG this => D#6
  # DEBUG __p => _770
  # DEBUG __k1 => "Channel must have positive delay."
  # DEBUG __k2 => &MEM[(void *)"Channel must have positive delay." + 33B]
  # DEBUG __d => _770
  # DEBUG __s => "Channel must have positive delay."
  # DEBUG __n => 33
  # DEBUG __s1 => _770
  # DEBUG __s2 => "Channel must have positive delay."
  # DEBUG __n => 33
  __builtin_memcpy (_770, "Channel must have positive delay.", 33);
  __dnew.47_774 = __dnew;
  # DEBUG this => &D.61962
  # DEBUG __n => __dnew.47_774
  # DEBUG D#10 => &D.61962
  # DEBUG __length => __dnew.47_774
  # DEBUG this => D#10
  MEM[(size_type *)&D.61962 + 8B] = __dnew.47_774;
  _775 = MEM[(char * *)&D.61962];
  # DEBUG D#6 => &D.61962
  # DEBUG this => D#6
  _776 = _775 + __dnew.47_774;
  # DEBUG __c1 => _776
  # DEBUG __c2 => D#11
  MEM[(char_type &)_776] = 0;
  __dnew ={v} {CLOBBER};
  _758 = &MEM[(struct Channel *)_234].D.37521.D.36000;
  Module::Error (_758, &D.61962);

  <bb 272>:
  # DEBUG this => &D.61962
  # DEBUG this => &D.61962
  # DEBUG this => &D.61962
  _759 = MEM[(char * *)&D.61962];
  # DEBUG D#6 => &D.61962
  # DEBUG this => D#6
  # DEBUG this => &D.61962
  if (&D.61962.D.11539._M_local_buf != _759)
    goto <bb 273>;
  else
    goto <bb 274>;

  <bb 273>:
  # DEBUG D#64 => D.61962.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.61962
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.61962
  # DEBUG this => D#6
  # DEBUG this => &D.61962
  # DEBUG D#61 => &D.61962._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _759
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _759
  # DEBUG this => D#55
  # DEBUG D.61953 => D#56
  operator delete (_759);

  <bb 274>:
  # DEBUG D#65 => &D.61962._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.61962 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct Channel *)_234]._delay = length_224;
  # DEBUG D#173 => &this_46(D)->D.47360._chan_cred
  _1057 = MEM[(struct Channel * * *)this_46(D) + 256B];
  # DEBUG D#33 => D#173
  # DEBUG __n => _233
  # DEBUG this => D#33
  _881 = _1057 + _324;
  _1169 = *_881;
  # DEBUG this => _1169
  # DEBUG cycles => length_224
  # DEBUG D#173 => &this_46(D)->D.47360._chan_cred
  # DEBUG D#33 => D#173
  # DEBUG __n => _233
  # DEBUG this => D#33
  # DEBUG this => _1169
  # DEBUG cycles => length_224
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG this => &D.62044
  # DEBUG __s => "Channel must have positive delay."
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.62044
  # DEBUG D#88 => &D.62044._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.62044.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.62044]._M_p = &D.62044.D.11539._M_local_buf;
  # DEBUG __s => "Channel must have positive delay."
  # DEBUG this => &D.62044
  # DEBUG __beg => "Channel must have positive delay."
  # DEBUG __end => &MEM[(void *)"Channel must have positive delay." + 33B]
  # DEBUG this => &D.62044
  # DEBUG __beg => "Channel must have positive delay."
  # DEBUG __end => &MEM[(void *)"Channel must have positive delay." + 33B]
  # DEBUG this => &D.62044
  # DEBUG __beg => "Channel must have positive delay."
  # DEBUG __end => &MEM[(void *)"Channel must have positive delay." + 33B]
  # DEBUG __ptr => "Channel must have positive delay."
  # DEBUG __first => "Channel must have positive delay."
  # DEBUG __last => &MEM[(void *)"Channel must have positive delay." + 33B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => "Channel must have positive delay."
  # DEBUG __last => &MEM[(void *)"Channel must have positive delay." + 33B]
  __dnew = 33;
  _789 = std::__cxx11::basic_string<char>::_M_create (&D.62044, &__dnew, 0);
  goto <bb 280>;

<L171>:
  pretmp_741 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_722 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

<L101>:
  # DEBUG this => &D.61962
  # DEBUG this => &D.61962
  # DEBUG this => &D.61962
  _760 = MEM[(char * *)&D.61962];
  # DEBUG D#6 => &D.61962
  # DEBUG this => D#6
  # DEBUG this => &D.61962
  if (&D.61962.D.11539._M_local_buf != _760)
    goto <bb 277>;
  else
    goto <bb 278>;

  <bb 277>:
  # DEBUG D#64 => D.61962.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.61962
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.61962
  # DEBUG this => D#6
  # DEBUG this => &D.61962
  # DEBUG D#61 => &D.61962._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _760
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _760
  # DEBUG this => D#55
  # DEBUG D.61938 => D#56
  operator delete (_760);

  <bb 278>:
  # DEBUG D#65 => &D.61962._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.61962 ={v} {CLOBBER};
  resx 34

<L172>:
  pretmp_1160 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1136 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 280>:
  # DEBUG D#8 => &D.62044
  # DEBUG __p => _789
  # DEBUG this => D#8
  MEM[(char * *)&D.62044] = _789;
  __dnew.47_790 = __dnew;
  # DEBUG D#9 => &D.62044
  # DEBUG __capacity => __dnew.47_790
  # DEBUG this => D#9
  MEM[(size_type *)&D.62044 + 16B] = __dnew.47_790;
  # DEBUG D#6 => &D.62044
  # DEBUG this => D#6
  # DEBUG __p => _789
  # DEBUG __k1 => "Channel must have positive delay."
  # DEBUG __k2 => &MEM[(void *)"Channel must have positive delay." + 33B]
  # DEBUG __d => _789
  # DEBUG __s => "Channel must have positive delay."
  # DEBUG __n => 33
  # DEBUG __s1 => _789
  # DEBUG __s2 => "Channel must have positive delay."
  # DEBUG __n => 33
  __builtin_memcpy (_789, "Channel must have positive delay.", 33);
  __dnew.47_793 = __dnew;
  # DEBUG this => &D.62044
  # DEBUG __n => __dnew.47_793
  # DEBUG D#10 => &D.62044
  # DEBUG __length => __dnew.47_793
  # DEBUG this => D#10
  MEM[(size_type *)&D.62044 + 8B] = __dnew.47_793;
  _794 = MEM[(char * *)&D.62044];
  # DEBUG D#6 => &D.62044
  # DEBUG this => D#6
  _795 = _794 + __dnew.47_793;
  # DEBUG __c1 => _795
  # DEBUG __c2 => D#11
  MEM[(char_type &)_795] = 0;
  __dnew ={v} {CLOBBER};
  _777 = &_1169->D.48668.D.36000;
  Module::Error (_777, &D.62044);

  <bb 281>:
  # DEBUG this => &D.62044
  # DEBUG this => &D.62044
  # DEBUG this => &D.62044
  _778 = MEM[(char * *)&D.62044];
  # DEBUG D#6 => &D.62044
  # DEBUG this => D#6
  # DEBUG this => &D.62044
  if (&D.62044.D.11539._M_local_buf != _778)
    goto <bb 282>;
  else
    goto <bb 283>;

  <bb 282>:
  # DEBUG D#64 => D.62044.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.62044
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.62044
  # DEBUG this => D#6
  # DEBUG this => &D.62044
  # DEBUG D#61 => &D.62044._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _778
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _778
  # DEBUG this => D#55
  # DEBUG D.62035 => D#56
  operator delete (_778);

  <bb 283>:
  # DEBUG D#65 => &D.62044._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.62044 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  pretmp_938 = MEM[(struct Channel * * *)this_46(D) + 256B];
  pretmp_609 = pretmp_938 + _324;
  pretmp_957 = *pretmp_609;
  pretmp_457 = MEM[(struct FlitChannel * * *)this_46(D) + 232B];
  pretmp_856 = pretmp_457 + _324;
  pretmp_664 = *pretmp_856;

  <bb 284>:
  # _751 = PHI <_1120(379), _1169(283)>
  # prephitmp_431 = PHI <_1120(379), pretmp_957(283)>
  # prephitmp_800 = PHI <_234(379), pretmp_664(283)>
  _751->_delay = length_224;
  goto <bb 290>;

<L102>:
  # DEBUG this => &D.62044
  # DEBUG this => &D.62044
  # DEBUG this => &D.62044
  _779 = MEM[(char * *)&D.62044];
  # DEBUG D#6 => &D.62044
  # DEBUG this => D#6
  # DEBUG this => &D.62044
  if (&D.62044.D.11539._M_local_buf != _779)
    goto <bb 286>;
  else
    goto <bb 287>;

  <bb 286>:
  # DEBUG D#64 => D.62044.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.62044
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.62044
  # DEBUG this => D#6
  # DEBUG this => &D.62044
  # DEBUG D#61 => &D.62044._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _779
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _779
  # DEBUG this => D#55
  # DEBUG D.62020 => D#56
  operator delete (_779);

  <bb 287>:
  # DEBUG D#65 => &D.62044._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.62044 ={v} {CLOBBER};
  resx 35

<L173>:
  pretmp_1161 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1137 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 289>:
  _239 = (long unsigned int) _output_232;
  # DEBUG D#174 => &this_46(D)->D.47360._chan
  _284 = MEM[(struct FlitChannel * * *)this_46(D) + 232B];
  # DEBUG D#32 => D#174
  # DEBUG __n => _239
  # DEBUG this => D#32
  _330 = _239 * 8;
  _331 = _284 + _330;
  _240 = *_331;
  # DEBUG D#175 => &_240->D.38127
  # DEBUG this => D#175
  # DEBUG cycles => 1
  MEM[(struct Channel *)_240]._delay = 1;
  # DEBUG D#176 => &this_46(D)->D.47360._chan_cred
  _294 = MEM[(struct Channel * * *)this_46(D) + 256B];
  # DEBUG D#33 => D#176
  # DEBUG __n => _239
  # DEBUG this => D#33
  _335 = _294 + _330;
  _241 = *_335;
  # DEBUG this => _241
  # DEBUG cycles => 1
  _241->_delay = 1;

  <bb 290>:
  # prephitmp_866 = PHI <_324(284), _330(289)>
  # prephitmp_508 = PHI <prephitmp_431(284), _241(289)>
  # prephitmp_511 = PHI <prephitmp_800(284), _240(289)>
  # DEBUG D#177 => &this_46(D)->D.47360._routers
  _301 = MEM[(struct Router * * *)this_46(D) + 112B];
  # DEBUG D#34 => D#177
  # DEBUG __n => (long unsigned int) node_786
  # DEBUG this => D#34
  _340 = _301 + _339;
  _243 = *_340;
  _244 = _243->D.45421.D.36000._vptr.Module;
  _245 = MEM[(int (*__vtbl_ptr_type) () *)_244 + 64B];
  # DEBUG D#483 => (long unsigned int) _output_232
  # DEBUG D#178 => &this_46(D)->D.47360._chan_cred
  # DEBUG D#33 => D#178
  # DEBUG __n => D#483
  # DEBUG this => D#33
  # DEBUG D#179 => &this_46(D)->D.47360._chan
  # DEBUG D#32 => D#179
  # DEBUG __n => D#483
  # DEBUG this => D#32
  OBJ_TYPE_REF(_245;(struct Router)_243->8) (_243, prephitmp_511, prephitmp_508);
  goto <bb 292>;

<L174>:
  pretmp_1151 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1127 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 292>:
  _250 = (long unsigned int) other_1140;
  # DEBUG D#180 => &this_46(D)->D.47360._routers
  _302 = MEM[(struct Router * * *)this_46(D) + 112B];
  # DEBUG D#34 => D#180
  # DEBUG __n => _250
  # DEBUG this => D#34
  _343 = _250 * 8;
  _344 = _302 + _343;
  _251 = *_344;
  _252 = _251->D.45421.D.36000._vptr.Module;
  _253 = MEM[(int (*__vtbl_ptr_type) () *)_252 + 56B];
  # DEBUG D#181 => &this_46(D)->D.47360._chan_cred
  _296 = MEM[(struct Channel * * *)this_46(D) + 256B];
  # DEBUG D#33 => D#181
  # DEBUG __n => D#483
  # DEBUG this => D#33
  _342 = _296 + prephitmp_866;
  _254 = *_342;
  # DEBUG D#182 => &this_46(D)->D.47360._chan
  _286 = MEM[(struct FlitChannel * * *)this_46(D) + 232B];
  # DEBUG D#32 => D#182
  # DEBUG __n => D#483
  # DEBUG this => D#32
  _341 = _286 + prephitmp_866;
  _255 = *_341;
  OBJ_TYPE_REF(_253;(struct Router)_251->7) (_251, _255, _254);
  goto <bb 294>;

<L175>:
  pretmp_1152 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1128 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 294>:
  gTrace.22_257 = gTrace;
  if (gTrace.22_257 != 0)
    goto <bb 295>;
  else
    goto <bb 265>;

  <bb 295>:
  # DEBUG __out => &cout
  # DEBUG __s => "Link "
  # DEBUG __s => "Link "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Link ", 5);
  goto <bb 297>;

<L176>:
  pretmp_1153 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1129 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 297>:
  _259 = std::basic_ostream<char>::operator<< (&cout, _output_232);
  goto <bb 299>;

<L177>:
  pretmp_1154 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1130 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 299>:
  # DEBUG __out => _259
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_259, " ", 1);
  goto <bb 301>;

<L178>:
  pretmp_1155 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1131 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 301>:
  _261 = std::basic_ostream<char>::operator<< (_259, node_786);
  goto <bb 303>;

<L179>:
  pretmp_1150 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1126 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 303>:
  # DEBUG __out => _261
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_261, " ", 1);
  goto <bb 305>;

<L180>:
  pretmp_1115 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1091 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 305>:
  _263 = std::basic_ostream<char>::operator<< (_261, other_1140);
  goto <bb 307>;

<L181>:
  pretmp_728 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_709 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 307>:
  # DEBUG __out => _263
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_263, " ", 1);
  goto <bb 309>;

<L182>:
  pretmp_729 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_710 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 309>:
  _265 = std::basic_ostream<char>::operator<< (_263, length_224);
  goto <bb 311>;

<L183>:
  pretmp_1116 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1092 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 311>:
  # DEBUG this => _265
  # DEBUG __pf => endl
  # DEBUG __os => _265
  _796 = _265->_vptr.basic_ostream;
  _797 = MEM[(long int *)_796 + -24B];
  _798 = (sizetype) _797;
  _799 = _265 + _798;
  # DEBUG this => _799
  # DEBUG __c => 10
  _390 = MEM[(const struct basic_ios *)_799]._M_ctype;
  # DEBUG __f => _390
  if (_390 == 0B)
    goto <bb 312>;
  else
    goto <bb 314>;

  <bb 312>:
  std::__throw_bad_cast ();

<L184>:
  pretmp_1148 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1124 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 314>:
  # DEBUG this => _390
  # DEBUG __c => 10
  _804 = MEM[(const struct ctype *)_390]._M_widen_ok;
  if (_804 != 0)
    goto <bb 315>;
  else
    goto <bb 316>;

  <bb 315>:
  _807 = MEM[(const struct ctype *)_390]._M_widen[10];
  pretmp_663 = (int) _807;
  goto <bb 322>;

  <bb 316>:
  # DEBUG this => _390
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_390);
  goto <bb 318>;

<L185>:
  pretmp_739 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_720 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 318>:
  _812 = MEM[(const struct ctype *)_390].D.20312._vptr.facet;
  _813 = MEM[(int (*__vtbl_ptr_type) () *)_812 + 48B];
  PROF_817 = [obj_type_ref] OBJ_TYPE_REF(_813;(const struct ctype)_390->6);
  if (PROF_817 == do_widen)
    goto <bb 322>;
  else
    goto <bb 319>;

  <bb 319>:
  _819 = OBJ_TYPE_REF(_813;(const struct ctype)_390->6) (_390, 10);
  goto <bb 321>;

<L186>:
  pretmp_732 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_713 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 321>:
  pretmp_654 = (int) _819;

  <bb 322>:
  # prephitmp_459 = PHI <pretmp_663(315), 10(318), pretmp_654(321)>
  _802 = std::basic_ostream<char>::put (_265, prephitmp_459);
  goto <bb 324>;

<L187>:
  pretmp_1147 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1123 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 324>:
  # DEBUG __os => _802
  std::basic_ostream<char>::flush (_802);
  goto <bb 265>;

<L188>:
  pretmp_883 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_878 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

  <bb 326>:
  # _1240 = PHI <_182(265)>
  pretmp_501 = this_46(D)->_n;

  <bb 327>:
  # prephitmp_711 = PHI <_1240(326), prephitmp_498(248)>
  # prephitmp_504 = PHI <pretmp_501(326), prephitmp_870(248)>
  dim_268 = dim_109 + 1;
  # DEBUG dim => dim_268
  # DEBUG dim => dim_268
  if (dim_268 >= prephitmp_504)
    goto <bb 329>;
  else
    goto <bb 328>;

  <bb 328>:
  goto <bb 248>;

  <bb 329>:
  # prephitmp_1236 = PHI <prephitmp_504(327)>
  pretmp_484 = this_46(D)->_num_of_switch;

  <bb 330>:
  # prephitmp_683 = PHI <prephitmp_1236(329), prephitmp_952(246)>
  # prephitmp_495 = PHI <pretmp_484(329), prephitmp_699(246)>
  node_269 = node_786 + 1;
  # DEBUG node => node_269
  # DEBUG node => node_269
  if (node_269 >= prephitmp_495)
    goto <bb 332>;
  else
    goto <bb 331>;

  <bb 331>:
  goto <bb 246>;

  <bb 332>:
  pretmp_873 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1105 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 333>:
  # prephitmp_1104 = PHI <pretmp_873(332), pretmp_1103(153), iftmp.33_400(151)>
  # prephitmp_1107 = PHI <pretmp_1105(332), pretmp_1106(153), iftmp.35_404(151)>
  gTrace.22_270 = gTrace;
  if (gTrace.22_270 != 0)
    goto <bb 335>;
  else
    goto <bb 334>;

  <bb 334>:
  # DEBUG this => &router_name
  router_name.D.26641._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&router_name + 112B].D.23348._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &router_name._M_stringbuf
  MEM[(struct basic_stringbuf *)&router_name + 8B].D.26491._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#67 => &MEM[(struct basic_stringbuf *)&router_name + 8B]._M_string
  # DEBUG this => D#67
  # DEBUG this => D#67
  # DEBUG this => D#67
  _272 = MEM[(char * *)&router_name + 80B];
  # DEBUG D#6 => D#67
  # DEBUG this => D#6
  # DEBUG this => D#67
  if (&MEM[(const struct basic_string *)&router_name + 80B].D.11539._M_local_buf != _272)
    goto <bb 352>;
  else
    goto <bb 353>;

  <bb 335>:
  # DEBUG __out => &cout
  # DEBUG __s => "Setup Finished Link"
  # DEBUG __s => "Setup Finished Link"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Setup Finished Link", 19);
  goto <bb 337>;

<L189>:
  goto <bb 368> (<L83>);

  <bb 337>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _822 = cout._vptr.basic_ostream;
  _823 = MEM[(long int *)_822 + -24B];
  _824 = (sizetype) _823;
  _825 = &cout + _824;
  # DEBUG this => _825
  # DEBUG __c => 10
  _392 = MEM[(const struct basic_ios *)_825]._M_ctype;
  # DEBUG __f => _392
  if (_392 == 0B)
    goto <bb 338>;
  else
    goto <bb 340>;

  <bb 338>:
  std::__throw_bad_cast ();

<L190>:
  goto <bb 368> (<L83>);

  <bb 340>:
  # DEBUG this => _392
  # DEBUG __c => 10
  _830 = MEM[(const struct ctype *)_392]._M_widen_ok;
  if (_830 != 0)
    goto <bb 341>;
  else
    goto <bb 342>;

  <bb 341>:
  _833 = MEM[(const struct ctype *)_392]._M_widen[10];
  pretmp_1102 = (int) _833;
  goto <bb 348>;

  <bb 342>:
  # DEBUG this => _392
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_392);
  goto <bb 344>;

<L191>:
  goto <bb 368> (<L83>);

  <bb 344>:
  _838 = MEM[(const struct ctype *)_392].D.20312._vptr.facet;
  _839 = MEM[(int (*__vtbl_ptr_type) () *)_838 + 48B];
  PROF_843 = [obj_type_ref] OBJ_TYPE_REF(_839;(const struct ctype)_392->6);
  if (PROF_843 == do_widen)
    goto <bb 348>;
  else
    goto <bb 345>;

  <bb 345>:
  _845 = OBJ_TYPE_REF(_839;(const struct ctype)_392->6) (_392, 10);
  goto <bb 347>;

<L192>:
  goto <bb 368> (<L83>);

  <bb 347>:
  pretmp_1067 = (int) _845;

  <bb 348>:
  # prephitmp_690 = PHI <pretmp_1102(341), 10(344), pretmp_1067(347)>
  _828 = std::basic_ostream<char>::put (&cout, prephitmp_690);
  goto <bb 350>;

<L193>:
  goto <bb 368> (<L83>);

  <bb 350>:
  # DEBUG __os => _828
  std::basic_ostream<char>::flush (_828);
  goto <bb 334>;

<L194>:
  goto <bb 368> (<L83>);

  <bb 352>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#67].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#67
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#67
  # DEBUG this => D#6
  # DEBUG this => D#67
  # DEBUG D#61 => &MEM[(struct basic_string *)D#67]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _272
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _272
  # DEBUG this => D#55
  # DEBUG D.62134 => D#56
  operator delete (_272);

  <bb 353>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#67]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  MEM[(struct  &)&router_name + 80] ={v} {CLOBBER};
  # DEBUG D#66 => &MEM[(struct basic_stringbuf *)&router_name + 8B].D.26491
  # DEBUG this => D#66
  MEM[(struct basic_streambuf *)&router_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&router_name + 8B]._M_buf_locale);
  MEM[(struct  &)&router_name + 8] ={v} {CLOBBER};
  # DEBUG this => &router_name.D.26641
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _851 = MEM[(long int *)prephitmp_1104 + -24B];
  iftmp.40_852 = (sizetype) _851;
  _853 = &router_name.D.26641 + iftmp.40_852;
  _853->D.23348._vptr.ios_base = prephitmp_1107;
  MEM[(struct  &)&router_name] ={v} {CLOBBER};
  # DEBUG D#71 => &router_name.D.26644
  # DEBUG this => D#71
  MEM[(struct basic_ios *)&router_name + 112B].D.23348._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&router_name + 112B].D.23348);
  router_name ={v} {CLOBBER};
  return;

<L77>:
  # DEBUG this => &D.47608
  # DEBUG this => &D.47608
  # DEBUG this => &D.47608
  _271 = MEM[(char * *)&D.47608];
  # DEBUG D#6 => &D.47608
  # DEBUG this => D#6
  # DEBUG this => &D.47608
  if (&D.47608.D.11539._M_local_buf != _271)
    goto <bb 355>;
  else
    goto <bb 356>;

  <bb 355>:
  # DEBUG D#64 => D.47608.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.47608
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.47608
  # DEBUG this => D#6
  # DEBUG this => &D.47608
  # DEBUG D#61 => &D.47608._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _271
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _271
  # DEBUG this => D#55
  # DEBUG D.58429 => D#56
  operator delete (_271);

  <bb 356>:
  # DEBUG D#65 => &D.47608._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.47608 ={v} {CLOBBER};
  resx 4

<L195>:
  goto <bb 368> (<L83>);

<L79>:
  # DEBUG this => &D.47610
  # DEBUG this => &D.47610
  # DEBUG this => &D.47610
  _275 = MEM[(char * *)&D.47610];
  # DEBUG D#6 => &D.47610
  # DEBUG this => D#6
  # DEBUG this => &D.47610
  if (&D.47610.D.11539._M_local_buf != _275)
    goto <bb 359>;
  else
    goto <bb 360>;

  <bb 359>:
  # DEBUG D#64 => D.47610.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.47610
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.47610
  # DEBUG this => D#6
  # DEBUG this => &D.47610
  # DEBUG D#61 => &D.47610._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _275
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _275
  # DEBUG this => D#55
  # DEBUG D.58446 => D#56
  operator delete (_275);

  <bb 360>:
  # DEBUG D#65 => &D.47610._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.47610 ={v} {CLOBBER};
  resx 7

<L196>:
  pretmp_740 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_721 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

<L166>:

<L81>:
  # DEBUG this => &D.47614
  # DEBUG this => &D.47614
  # DEBUG this => &D.47614
  _169 = MEM[(char * *)&D.47614];
  # DEBUG D#6 => &D.47614
  # DEBUG this => D#6
  # DEBUG this => &D.47614
  if (&D.47614.D.11539._M_local_buf != _169)
    goto <bb 364>;
  else
    goto <bb 365>;

  <bb 364>:
  # DEBUG D#64 => D.47614.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.47614
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.47614
  # DEBUG this => D#6
  # DEBUG this => &D.47614
  # DEBUG D#61 => &D.47614._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _169
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _169
  # DEBUG this => D#55
  # DEBUG D.58461 => D#56
  operator delete (_169);

  <bb 365>:
  # DEBUG D#65 => &D.47614._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.47614 ={v} {CLOBBER};
  resx 12

<L197>:
  pretmp_757 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_738 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  goto <bb 368> (<L83>);

<L105>:

  # prephitmp_734 = PHI <iftmp.33_400(367), iftmp.33_400(28), iftmp.33_400(32), iftmp.33_400(47), iftmp.33_400(49), iftmp.33_400(51), iftmp.33_400(53), iftmp.33_400(55), iftmp.33_400(57), iftmp.33_400(59), iftmp.33_400(74), iftmp.33_400(76), iftmp.33_400(78), iftmp.33_400(93), iftmp.33_400(95), iftmp.33_400(97), iftmp.33_400(112), iftmp.33_400(114), iftmp.33_400(116), iftmp.33_400(131), iftmp.33_400(133), iftmp.33_400(135), iftmp.33_400(150), pretmp_1145(156), pretmp_755(158), pretmp_1146(160), pretmp_756(198), pretmp_757(366), pretmp_1147(323), pretmp_1148(313), pretmp_739(317), prephitmp_1104(346), pretmp_741(275), pretmp_740(361), pretmp_885(207), prephitmp_1104(351), pretmp_1158(237), pretmp_1159(239), pretmp_1160(279), pretmp_1161(288), prephitmp_1104(336), pretmp_883(325), pretmp_1151(291), pretmp_1152(293), pretmp_1153(296), pretmp_1154(298), pretmp_1155(300), pretmp_1150(302), pretmp_1115(304), pretmp_728(306), pretmp_729(308), pretmp_1116(310), pretmp_732(320), iftmp.33_400(357), iftmp.33_400(23), iftmp.33_400(26), iftmp.33_400(16), iftmp.33_400(20), prephitmp_1104(343), iftmp.33_400(42), iftmp.33_400(45), iftmp.33_400(35), iftmp.33_400(39), iftmp.33_400(69), iftmp.33_400(72), iftmp.33_400(62), iftmp.33_400(66), iftmp.33_400(88), iftmp.33_400(91), iftmp.33_400(81), iftmp.33_400(85), iftmp.33_400(107), iftmp.33_400(110), iftmp.33_400(100), iftmp.33_400(104), iftmp.33_400(126), iftmp.33_400(129), iftmp.33_400(119), iftmp.33_400(123), iftmp.33_400(145), iftmp.33_400(148), iftmp.33_400(138), iftmp.33_400(142), prephitmp_1104(339), pretmp_733(270), prephitmp_1104(349)>
  # prephitmp_715 = PHI <iftmp.35_404(367), iftmp.35_404(28), iftmp.35_404(32), iftmp.35_404(47), iftmp.35_404(49), iftmp.35_404(51), iftmp.35_404(53), iftmp.35_404(55), iftmp.35_404(57), iftmp.35_404(59), iftmp.35_404(74), iftmp.35_404(76), iftmp.35_404(78), iftmp.35_404(93), iftmp.35_404(95), iftmp.35_404(97), iftmp.35_404(112), iftmp.35_404(114), iftmp.35_404(116), iftmp.35_404(131), iftmp.35_404(133), iftmp.35_404(135), iftmp.35_404(150), pretmp_1121(156), pretmp_736(158), pretmp_1122(160), pretmp_737(198), pretmp_738(366), pretmp_1123(323), pretmp_1124(313), pretmp_720(317), prephitmp_1107(346), pretmp_722(275), pretmp_721(361), pretmp_880(207), prephitmp_1107(351), pretmp_1134(237), pretmp_1135(239), pretmp_1136(279), pretmp_1137(288), prephitmp_1107(336), pretmp_878(325), pretmp_1127(291), pretmp_1128(293), pretmp_1129(296), pretmp_1130(298), pretmp_1131(300), pretmp_1126(302), pretmp_1091(304), pretmp_709(306), pretmp_710(308), pretmp_1092(310), pretmp_713(320), iftmp.35_404(357), iftmp.35_404(23), iftmp.35_404(26), iftmp.35_404(16), iftmp.35_404(20), prephitmp_1107(343), iftmp.35_404(42), iftmp.35_404(45), iftmp.35_404(35), iftmp.35_404(39), iftmp.35_404(69), iftmp.35_404(72), iftmp.35_404(62), iftmp.35_404(66), iftmp.35_404(88), iftmp.35_404(91), iftmp.35_404(81), iftmp.35_404(85), iftmp.35_404(107), iftmp.35_404(110), iftmp.35_404(100), iftmp.35_404(104), iftmp.35_404(126), iftmp.35_404(129), iftmp.35_404(119), iftmp.35_404(123), iftmp.35_404(145), iftmp.35_404(148), iftmp.35_404(138), iftmp.35_404(142), prephitmp_1107(339), pretmp_714(270), prephitmp_1107(349)>
<L83>:
  D.47611 ={v} {CLOBBER};
  # DEBUG this => &router_name
  router_name.D.26641._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&router_name + 112B].D.23348._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &router_name._M_stringbuf
  MEM[(struct basic_stringbuf *)&router_name + 8B].D.26491._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#67 => &MEM[(struct basic_stringbuf *)&router_name + 8B]._M_string
  # DEBUG this => D#67
  # DEBUG this => D#67
  # DEBUG this => D#67
  _276 = MEM[(char * *)&router_name + 80B];
  # DEBUG D#6 => D#67
  # DEBUG this => D#6
  # DEBUG this => D#67
  if (&MEM[(const struct basic_string *)&router_name + 80B].D.11539._M_local_buf != _276)
    goto <bb 369>;
  else
    goto <bb 370>;

  <bb 369>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#67].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#67
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#67
  # DEBUG this => D#6
  # DEBUG this => D#67
  # DEBUG D#61 => &MEM[(struct basic_string *)D#67]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _276
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _276
  # DEBUG this => D#55
  # DEBUG D.62155 => D#56
  operator delete (_276);

  <bb 370>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#67]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  MEM[(struct  &)&router_name + 80] ={v} {CLOBBER};
  # DEBUG D#66 => &MEM[(struct basic_stringbuf *)&router_name + 8B].D.26491
  # DEBUG this => D#66
  MEM[(struct basic_streambuf *)&router_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&router_name + 8B]._M_buf_locale);
  MEM[(struct  &)&router_name + 8] ={v} {CLOBBER};
  # DEBUG this => &router_name.D.26641
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _861 = MEM[(long int *)prephitmp_734 + -24B];
  iftmp.40_862 = (sizetype) _861;
  _863 = &router_name.D.26641 + iftmp.40_862;
  _863->D.23348._vptr.ios_base = prephitmp_715;
  MEM[(struct  &)&router_name] ={v} {CLOBBER};
  # DEBUG D#71 => &router_name.D.26644
  # DEBUG this => D#71
  MEM[(struct basic_ios *)&router_name + 112B].D.23348._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&router_name + 112B].D.23348);
  resx 2

  <bb 371>:
  # DEBUG __first => _620
  # DEBUG __last => _618
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => _620
  # DEBUG __last => _618
  __last.49_628 = (long int) _618;
  __first.50_629 = (long int) _620;
  _630 = __last.49_628 - __first.50_629;
  __dnew.46_631 = (long unsigned int) _630;
  __dnew = __dnew.46_631;
  if (__dnew.46_631 > 15)
    goto <bb 164>;
  else
    goto <bb 166>;

  <bb 372>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L198>:
  goto <bb 195> (<L96>);

  <bb 374>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L199>:
  goto <bb 195> (<L96>);

  <bb 376>:
  # DEBUG __first => _622
  # DEBUG __last => _619
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => _622
  # DEBUG __last => _619
  __last.49_640 = (long int) _619;
  __first.50_641 = (long int) _622;
  _642 = __last.49_640 - __first.50_641;
  __dnew.46_643 = (long unsigned int) _642;
  __dnew = __dnew.46_643;
  if (__dnew.46_643 > 15)
    goto <bb 174>;
  else
    goto <bb 177>;

  <bb 377>:
  # DEBUG yleng => 1
  # DEBUG yleng => 1
  _410 = xleng_235 == 0;
  _730 = _410 & pretmp_548;
  if (_730 != 0)
    goto <bb 224>;
  else
    goto <bb 378>;

  <bb 378>:
  pretmp_499 = ABS_EXPR <xleng_235>;
  goto <bb 228>;

  <bb 379>:
  MEM[(struct Channel *)_234]._delay = length_224;
  # DEBUG D#173 => &this_46(D)->D.47360._chan_cred
  _871 = MEM[(struct Channel * * *)this_46(D) + 256B];
  # DEBUG D#33 => D#173
  # DEBUG __n => _233
  # DEBUG this => D#33
  _1144 = _871 + _324;
  _1120 = *_1144;
  # DEBUG this => _1120
  # DEBUG cycles => length_224
  goto <bb 284>;

  <bb 380>:
  # curr4_708 = PHI <curr4_105(258), curr4_105(255), curr4_105(261), curr4_105(259), curr4_193(256), curr4_105(254)>
  # other_788 = PHI <other_201(258), other_186(255), other_210(261), other_206(259), other_198(256), other_190(254)>
  # DEBUG other => other_788
  # DEBUG curr4 => curr4_708
  goto <bb 264>;

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE24_M_get_insert_unique_posERS7_, funcdef_no=2577, decl_uid=49248, cgraph_uid=1001, symbol_order=1006)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_tree * const this, const struct key_type & __k)
{
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.62435;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.62420;
  struct _Rb_tree_node_base * const __j$_M_node;
  bool __comp;
  struct _Rb_tree_node_base * const D.51886;
  struct _Rb_tree_node_base * const D.51887;
  struct pair D.53574;
  const size_type pretmp_1;
  char * const prephitmp_13;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node_base * _24;
  const size_type _34;
  char * const _37;
  long unsigned int _40;
  char * const pretmp_44;
  long unsigned int _52;
  const size_type prephitmp_61;
  char * const pretmp_64;
  char * const prephitmp_65;
  const size_type pretmp_67;
  const size_type pretmp_76;
  const size_type prephitmp_77;
  const size_type prephitmp_78;
  const size_type pretmp_79;
  char * const pretmp_80;
  char * const _83;
  const size_type _84;

  <bb 2>:
  _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
  # DEBUG D#53 => this_9(D)
  # DEBUG this => D#53
  # DEBUG __x => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#535 => &this_9(D)->_M_impl._M_header
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => D#535
  # DEBUG __x => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = &this_9(D)->_M_impl._M_header;
  goto <bb 15>;

  <bb 4>:
  pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_44 = MEM[(char * *)__k_12(D)];
  goto <bb 7>;

  <bb 5>:
  # _6 = PHI <_23(27), _22(28)>
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __comp => __comp_56
  # DEBUG __y => _10
  # DEBUG __x => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # _10 = PHI <_21(4), _6(6)>
  # DEBUG __comp => 1
  # DEBUG __x => _10
  # DEBUG __y => _10
  # DEBUG __x => _10
  # DEBUG __x => _10
  # DEBUG this => _10
  # DEBUG D#183 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
  # DEBUG __r => D#183
  # DEBUG __x => D#183
  # DEBUG this => D#83
  # DEBUG D#515 => &MEM[(const struct pair &)_10 + 32].first
  # DEBUG D#190 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#82 => D#190
  # DEBUG __x => __k_12(D)
  # DEBUG __y => D#515
  # DEBUG this => D#82
  # DEBUG __lhs => __k_12(D)
  # DEBUG __rhs => D#515
  # DEBUG this => __k_12(D)
  # DEBUG __str => D#515
  # DEBUG D#534 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG __size => D#534
  _34 = MEM[(long unsigned int *)_10 + 40B];
  # DEBUG D#1 => D#515
  # DEBUG this => D#1
  # DEBUG __osize => _34
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __len => D#513
  # DEBUG this => D#515
  _37 = MEM[(char * *)_10 + 32B];
  # DEBUG D#6 => D#515
  # DEBUG this => D#6
  # DEBUG D#533 => MEM[(char * *)__k_12(D)]
  # DEBUG D#6 => __k_12(D)
  # DEBUG this => D#6
  # DEBUG __s1 => D#533
  # DEBUG __s2 => _37
  # DEBUG __n => D#513
  __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
  # DEBUG __r => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => D#534
  # DEBUG __n2 => _34
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_type) _40;
  # DEBUG __d => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_42 = (int) _40;

  <bb 11>:
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __r => __r_43
  # DEBUG D#521 => {CLOBBER}
  # DEBUG __size => D#521
  # DEBUG D#522 => {CLOBBER}
  # DEBUG __osize => D#522
  # DEBUG __comp => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __comp => 1
  _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
  # DEBUG D#80 => _10
  # DEBUG __x => D#80
  goto <bb 5>;

  <bb 13>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG __comp => 0
  _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
  # DEBUG D#81 => _10
  # DEBUG __x => D#81
  goto <bb 5>;

  <bb 14>:
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # _83 = PHI <_37(5)>
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>

  <bb 26>:
  # DEBUG this => &__j
  # DEBUG __x => _85
  # DEBUG __j$_M_node => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG this => &__j
  # DEBUG __x => _57
  # DEBUG __j$_M_node => _57
  _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
  # DEBUG D#124 => this_9(D)
  # DEBUG this => D#124
  # DEBUG this => NULL
  # DEBUG __x => _24
  # DEBUG this => &__j
  # DEBUG __x => &D.51885
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &D.51888
  # DEBUG __a => &D.51886
  # DEBUG __b => &D.51887
  MEM[(struct pair *)&D.53574] = 0B;
  MEM[(struct pair *)&D.53574 + 8B] = _57;
  goto <bb 25>;

  <bb 17>:
  # DEBUG this => &__j
  __j$_M_node_25 = std::_Rb_tree_decrement (_57);
  # DEBUG __j$_M_node => __j$_M_node_25
  pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_80 = MEM[(char * *)__k_12(D)];
  pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
  pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  <bb 18>:
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_node => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG this => __j$_M_node_20
  # DEBUG D#187 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
  # DEBUG __r => D#187
  # DEBUG __x => D#187
  # DEBUG this => D#83
  # DEBUG D#516 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
  # DEBUG D#189 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#82 => D#189
  # DEBUG __x => D#516
  # DEBUG __y => __k_12(D)
  # DEBUG this => D#82
  # DEBUG __lhs => D#516
  # DEBUG __rhs => __k_12(D)
  # DEBUG this => D#516
  # DEBUG __str => __k_12(D)
  # DEBUG D#532 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
  # DEBUG D#1 => D#516
  # DEBUG this => D#1
  # DEBUG __size => D#532
  # DEBUG D#531 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG __osize => D#531
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#514
  # DEBUG this => __k_12(D)
  # DEBUG D#530 => MEM[(char * *)__k_12(D)]
  # DEBUG D#6 => __k_12(D)
  # DEBUG this => D#6
  # DEBUG D#529 => MEM[(char * *)__j$_M_node_20 + 32B]
  # DEBUG D#6 => D#516
  # DEBUG this => D#6
  # DEBUG __s1 => D#529
  # DEBUG __s2 => D#530
  # DEBUG __n => D#514
  __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __r => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG __n1 => D#532
  # DEBUG __n2 => D#531
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_type) _52;
  # DEBUG __d => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;

  <bb 20>:
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 21>:
  __r_54 = (int) _52;

  <bb 22>:
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __r => __r_55
  # DEBUG D#527 => {CLOBBER}
  # DEBUG __size => D#527
  # DEBUG D#528 => {CLOBBER}
  # DEBUG __osize => D#528
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:

  <bb 31>:
  # DEBUG __r => NULL
  # DEBUG this => &D.51891
  # DEBUG __a => &D.51889
  # DEBUG __b => &D.51890
  MEM[(struct pair *)&D.53574] = 0B;
  MEM[(struct pair *)&D.53574 + 8B] = _5;
  goto <bb 25>;

  <bb 24>:

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG this => &D.51893
  # DEBUG __a => &__j._M_node
  # DEBUG __b => &D.51892
  MEM[(struct pair *)&D.53574] = __j$_M_node_20;
  MEM[(struct pair *)&D.53574 + 8B] = 0B;

  <bb 25>:

  <bb 29>:
  # DEBUG D#188 => {CLOBBER}
  # DEBUG __j$_M_node => D#188
  return D.53574;

}



;; Function static void FlatFlyOnChip::RegisterRoutingFunctions() (_ZN13FlatFlyOnChip24RegisterRoutingFunctionsEv, funcdef_no=2245, decl_uid=47334, cgraph_uid=669, symbol_order=674)

Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static void FlatFlyOnChip::RegisterRoutingFunctions() ()
{
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.64078;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.64063;
  struct iterator D.64048;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.63986;
  struct iterator D.63985;
  struct iterator D.63984;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.445;
  struct _Rb_tree_node_base * SR.448;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.63980;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.63882;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.63867;
  struct iterator D.63852;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.63790;
  struct iterator D.63789;
  struct iterator D.63788;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.445;
  struct _Rb_tree_node_base * SR.448;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.63784;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.63686;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.63671;
  struct iterator D.63656;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.63594;
  struct iterator D.63593;
  struct iterator D.63592;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.445;
  struct _Rb_tree_node_base * SR.448;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.63588;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.63490;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.63475;
  struct iterator D.63460;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.63398;
  struct iterator D.63397;
  struct iterator D.63396;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.445;
  struct _Rb_tree_node_base * SR.448;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.63392;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.63294;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.63279;
  struct iterator D.63264;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.63202;
  struct iterator D.63201;
  struct iterator D.63200;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.445;
  struct _Rb_tree_node_base * SR.448;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.63196;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.63098;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.63083;
  struct iterator D.63068;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.63006;
  struct iterator D.63005;
  struct iterator D.63004;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.445;
  struct _Rb_tree_node_base * SR.448;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.63000;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.62902;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.62887;
  struct iterator D.62872;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.62810;
  struct iterator D.62809;
  struct iterator D.62808;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.445;
  struct _Rb_tree_node_base * SR.448;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.62804;
  const struct key_type D.49802;
  const struct key_type D.49799;
  const struct key_type D.49796;
  const struct key_type D.49793;
  const struct key_type D.49790;
  const struct key_type D.49787;
  const struct key_type D.49784;
  char * const _47;
  char * const _54;
  char * const _56;
  char * const _58;
  char * const _60;
  char * const _62;
  char * const _64;
  char * const pretmp_73;
  char * const prephitmp_78;
  const size_type prephitmp_79;
  char * const prephitmp_80;
  size_type pretmp_81;
  char * const pretmp_83;
  char * const prephitmp_84;
  char * const pretmp_85;
  char * const prephitmp_86;
  char * const pretmp_89;
  char * const prephitmp_90;
  char * const pretmp_93;
  char * const prephitmp_94;
  char * const pretmp_95;
  char * const prephitmp_96;
  char * const _152;
  char * const _155;
  char * const _165;
  const size_type _181;
  char * const _186;
  long unsigned int _188;
  const size_type _194;
  char * const _197;
  long unsigned int _200;
  char * const pretmp_210;
  size_type prephitmp_211;
  char * _225;
  char * const _227;
  char * const _230;
  char * _239;
  long unsigned int __dnew.47_240;
  long unsigned int __dnew.47_243;
  char * const _244;
  char * _245;
  const size_type _256;
  char * const _261;
  long unsigned int _263;
  const size_type _269;
  char * const _272;
  long unsigned int _275;
  char * _285;
  long unsigned int __dnew.47_286;
  const char_type _288;
  char * _291;
  char * const prephitmp_299;
  char * const _302;
  char * const _305;
  bool _315;
  const size_type _331;
  char * const _336;
  long unsigned int _338;
  const size_type _344;
  char * const _347;
  long unsigned int _350;
  char * const _377;
  char * const _380;
  const size_type _406;
  char * const _411;
  long unsigned int _413;
  const size_type _419;
  char * const _422;
  long unsigned int _425;
  char * const prephitmp_439;
  char * const _452;
  char * const _455;
  const size_type _481;
  char * const _486;
  long unsigned int _488;
  const size_type _494;
  char * const _497;
  long unsigned int _500;
  char * _525;
  char * const _527;
  char * const _530;
  char * _539;
  long unsigned int __dnew.47_540;
  long unsigned int __dnew.47_543;
  char * const _544;
  char * _545;
  bool _554;
  size_type pretmp_555;
  const size_type _556;
  char * const _561;
  long unsigned int _563;
  bool _567;
  const size_type _569;
  char * const _572;
  long unsigned int _575;
  bool _579;
  char * _585;
  long unsigned int __dnew.47_586;
  const char_type _588;
  char * _591;
  const size_type prephitmp_593;
  char * _600;
  char * const _602;
  char * const _605;
  char * _614;
  long unsigned int __dnew.47_615;
  long unsigned int __dnew.47_618;
  char * const _619;
  char * _620;
  bool _629;
  bool _630;
  const size_type _631;
  char * const _636;
  long unsigned int _638;
  bool _642;
  const size_type _644;
  char * const _647;
  long unsigned int _650;
  bool _654;
  char * _660;
  long unsigned int __dnew.47_661;
  const char_type _663;
  char * _666;
  const size_type pretmp_686;
  bool _692;
  char * const pretmp_700;
  char * const _718;
  size_type prephitmp_747;
  size_type prephitmp_752;
  char * const pretmp_753;
  char * const prephitmp_754;
  const size_type pretmp_755;
  char * const _765;
  char * const pretmp_777;
  char * const prephitmp_778;
  size_type pretmp_779;
  const size_type pretmp_803;
  const size_type prephitmp_804;
  char * const pretmp_805;
  char * const prephitmp_806;
  char * const pretmp_807;
  char * const pretmp_831;
  char * const pretmp_855;
  char * const prephitmp_856;
  const size_type pretmp_857;
  const size_type prephitmp_858;
  char * const prephitmp_880;
  const size_type pretmp_881;
  const size_type prephitmp_900;
  char * const pretmp_907;
  char * const prephitmp_908;
  char * const pretmp_957;
  char * const prephitmp_958;
  const size_type pretmp_959;
  const size_type prephitmp_960;

  <bb 2>:
  # DEBUG D#36 => &D.49783
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#91 => &D.49783
  # DEBUG this => &D.49784
  # DEBUG __s => "ran_min_flatfly"
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.49784
  # DEBUG D#88 => &D.49784._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.49784.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.49784]._M_p = &D.49784.D.11539._M_local_buf;
  # DEBUG __s => "ran_min_flatfly"
  # DEBUG this => &D.49784
  # DEBUG __beg => "ran_min_flatfly"
  # DEBUG __end => &MEM[(void *)"ran_min_flatfly" + 15B]
  # DEBUG this => &D.49784
  # DEBUG __beg => "ran_min_flatfly"
  # DEBUG __end => &MEM[(void *)"ran_min_flatfly" + 15B]
  # DEBUG this => &D.49784
  # DEBUG __beg => "ran_min_flatfly"
  # DEBUG __end => &MEM[(void *)"ran_min_flatfly" + 15B]
  # DEBUG __ptr => "ran_min_flatfly"
  # DEBUG __first => "ran_min_flatfly"
  # DEBUG __last => &MEM[(void *)"ran_min_flatfly" + 15B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => "ran_min_flatfly"
  # DEBUG __last => &MEM[(void *)"ran_min_flatfly" + 15B]
  # DEBUG __dnew => 15
  # DEBUG D#6 => &D.49784
  # DEBUG this => D#6
  # DEBUG __p => &D.49784.D.11539._M_local_buf
  # DEBUG __k1 => "ran_min_flatfly"
  # DEBUG __k2 => &MEM[(void *)"ran_min_flatfly" + 15B]
  # DEBUG __d => &D.49784.D.11539._M_local_buf
  # DEBUG __s => "ran_min_flatfly"
  # DEBUG __n => 15
  # DEBUG __s1 => &D.49784.D.11539._M_local_buf
  # DEBUG __s2 => "ran_min_flatfly"
  # DEBUG __n => 15
  __builtin_memcpy (&D.49784.D.11539._M_local_buf, "ran_min_flatfly", 15);
  # DEBUG this => &D.49784
  # DEBUG __n => 15
  # DEBUG D#10 => &D.49784
  # DEBUG __length => 15
  # DEBUG this => D#10
  MEM[(size_type *)&D.49784 + 8B] = 15;
  # DEBUG D#6 => &D.49784
  # DEBUG this => D#6
  # DEBUG __c1 => &MEM[(void *)&D.49784 + 31B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.49784 + 31] = 0;
  # DEBUG D#623 => {CLOBBER}
  # DEBUG __dnew => D#623
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.49784
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.49784
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.49784
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_172 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#53 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#53
  # DEBUG D#186 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.49784
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_172
  if (__i$_M_node_172 == 0B)
    goto <bb 238>;
  else
    goto <bb 5>;

  <bb 3>:
  # __i$_M_node_492 = PHI <__i$_M_node_176(11), __i$_M_node_177(12)>
  # __i$_M_node_504 = PHI <__i$_M_node_388(11), __i$_M_node_394(12)>
  # DEBUG __y => __i$_M_node_504
  # DEBUG __x => __i$_M_node_492
  if (__i$_M_node_492 == 0B)
    goto <bb 13>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:

  <bb 6>:
  # __i$_M_node_388 = PHI <__i$_M_node_172(5), __i$_M_node_492(4)>
  # __i$_M_node_394 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(5), __i$_M_node_504(4)>
  # DEBUG __y => __i$_M_node_394
  # DEBUG __x => __i$_M_node_388
  # DEBUG __x => __i$_M_node_388
  # DEBUG __x => __i$_M_node_388
  # DEBUG this => __i$_M_node_388
  # DEBUG D#183 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_388]._M_value_field
  # DEBUG __r => D#183
  # DEBUG __x => D#183
  # DEBUG this => D#83
  # DEBUG D#609 => &MEM[(const struct pair &)__i$_M_node_388 + 32].first
  # DEBUG D#184 => &D#185->_M_impl._M_key_compare
  # DEBUG D#82 => D#184
  # DEBUG __x => D#609
  # DEBUG __y => &D.49784
  # DEBUG this => D#82
  # DEBUG __lhs => D#609
  # DEBUG __rhs => &D.49784
  # DEBUG this => D#609
  # DEBUG __str => &D.49784
  _181 = MEM[(long unsigned int *)__i$_M_node_388 + 40B];
  # DEBUG D#1 => D#609
  # DEBUG this => D#1
  # DEBUG __size => _181
  # DEBUG D#1 => &D.49784
  # DEBUG this => D#1
  # DEBUG __osize => 15
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_162 = MIN_EXPR <_181, 15>;
  # DEBUG __len => D#595
  # DEBUG this => &D.49784
  # DEBUG D#6 => &D.49784
  # DEBUG this => D#6
  _186 = MEM[(char * *)__i$_M_node_388 + 32B];
  # DEBUG D#6 => D#609
  # DEBUG this => D#6
  # DEBUG __s1 => _186
  # DEBUG __s2 => &D.49784.D.11539._M_local_buf
  # DEBUG __n => D#595
  __r_187 = __builtin_memcmp (_186, &D.49784.D.11539._M_local_buf, __len_162);
  # DEBUG __r => NULL
  if (__r_187 == 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  # DEBUG __n1 => _181
  # DEBUG __n2 => 15
  _188 = _181 - 15;
  __d_189 = (const difference_type) _188;
  # DEBUG __d => __d_189
  if (__d_189 > 2147483647)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  if (__d_189 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  __r_190 = (int) _188;

  <bb 10>:
  # __r_191 = PHI <__r_187(6), __r_190(9)>
  # DEBUG __r => __r_191
  # DEBUG D#628 => {CLOBBER}
  # DEBUG __size => D#628
  # DEBUG D#629 => {CLOBBER}
  # DEBUG __osize => D#629
  if (__r_191 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_388
  __i$_M_node_176 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_388 + 16B];
  # DEBUG D#80 => __i$_M_node_388
  # DEBUG __x => D#80
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 12>:
  # DEBUG __r => NULL
  __i$_M_node_177 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_388 + 24B];
  # DEBUG D#81 => __i$_M_node_388
  # DEBUG __x => D#81
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 13>:
  # __i$_M_node_1014 = PHI <__i$_M_node_504(3)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_1014
  # DEBUG __i$_M_node => __i$_M_node_1014
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#54 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#54
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_1014 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 238>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1014
  # DEBUG D#237 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1014]._M_value_field
  # DEBUG __r => D#237
  # DEBUG D#610 => &MEM[(struct pair &)__i$_M_node_1014 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.49784
  # DEBUG __y => D#610
  # DEBUG this => D#82
  # DEBUG __lhs => &D.49784
  # DEBUG __rhs => D#610
  # DEBUG this => &D.49784
  # DEBUG __str => D#610
  # DEBUG D#1 => &D.49784
  # DEBUG this => D#1
  # DEBUG __size => 15
  _194 = MEM[(long unsigned int *)__i$_M_node_1014 + 40B];
  # DEBUG D#1 => D#610
  # DEBUG this => D#1
  # DEBUG __osize => _194
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_194 <= 14)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __len_196 = PHI <_194(14), 15(15)>
  # DEBUG __len => D#596
  # DEBUG this => D#610
  _197 = MEM[(char * *)__i$_M_node_1014 + 32B];
  # DEBUG D#6 => D#610
  # DEBUG this => D#6
  # DEBUG D#6 => &D.49784
  # DEBUG this => D#6
  # DEBUG __s1 => &D.49784.D.11539._M_local_buf
  # DEBUG __s2 => _197
  # DEBUG __n => D#596
  __r_199 = __builtin_memcmp (&D.49784.D.11539._M_local_buf, _197, __len_196);
  # DEBUG __r => NULL
  if (__r_199 == 0)
    goto <bb 17>;
  else
    goto <bb 20>;

  <bb 17>:
  # DEBUG __n1 => 15
  # DEBUG __n2 => _194
  _200 = 15 - _194;
  __d_201 = (const difference_type) _200;
  # DEBUG __d => __d_201
  if (__d_201 > 2147483647)
    goto <bb 25>;
  else
    goto <bb 18>;

  <bb 18>:
  if (__d_201 < -2147483648)
    goto <bb 21>;
  else
    goto <bb 19>;

  <bb 19>:
  __r_202 = (int) _200;

  <bb 20>:
  # __r_203 = PHI <__r_199(16), __r_202(19)>
  # DEBUG __r => __r_203
  # DEBUG D#634 => {CLOBBER}
  # DEBUG __size => D#634
  # DEBUG D#635 => {CLOBBER}
  # DEBUG __osize => D#635
  if (__r_203 < 0)
    goto <bb 238>;
  else
    goto <bb 25>;

  <bb 21>:
  # __i$_M_node_553 = PHI <__i$_M_node_1014(18), __i$_M_node_548(238)>
  # DEBUG this => &D.62810
  # DEBUG __a => &D.49784
  # DEBUG __b => NULL
  # DEBUG this => &D.62810.first
  # DEBUG __str => &D.49784
  # DEBUG this => &D.49784
  # DEBUG D#115 => &D.49784._M_dataplus
  # DEBUG this => &D.62810.first
  # DEBUG D#116 => &MEM[(struct basic_string *)&D.62810]._M_dataplus
  # DEBUG D#49 => D#115
  # DEBUG this => D#116
  # DEBUG __dat => &MEM[(struct basic_string *)&D.62810].D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#116
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.62810]._M_p = &MEM[(struct basic_string *)&D.62810].D.11539._M_local_buf;
  # DEBUG D#6 => &D.49784
  # DEBUG this => D#6
  # DEBUG D#7 => &D.49784
  # DEBUG this => D#7
  # DEBUG D#6 => &D.49784
  # DEBUG this => D#6
  # DEBUG this => &D.62810.first
  # DEBUG __beg => &D.49784.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49784 + 31B]
  # DEBUG this => &D.62810.first
  # DEBUG __beg => &D.49784.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49784 + 31B]
  # DEBUG this => &D.62810.first
  # DEBUG __beg => &D.49784.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49784 + 31B]
  # DEBUG __ptr => &D.49784.D.11539._M_local_buf
  # DEBUG __first => &D.49784.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.49784 + 31B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => &D.49784.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.49784 + 31B]
  # DEBUG __dnew => 15
  # DEBUG D#6 => &D.62810.first
  # DEBUG this => D#6
  # DEBUG __p => &MEM[(struct basic_string *)&D.62810].D.11539._M_local_buf
  # DEBUG __k1 => &D.49784.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.49784 + 31B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.62810].D.11539._M_local_buf
  # DEBUG __s => &D.49784.D.11539._M_local_buf
  # DEBUG __n => 15
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.62810].D.11539._M_local_buf
  # DEBUG __s2 => &D.49784.D.11539._M_local_buf
  # DEBUG __n => 15
  __builtin_memcpy (&MEM[(struct basic_string *)&D.62810].D.11539._M_local_buf, &D.49784.D.11539._M_local_buf, 15);
  # DEBUG this => &D.62810.first
  # DEBUG __n => 15
  # DEBUG D#10 => &D.62810.first
  # DEBUG __length => 15
  # DEBUG this => D#10
  MEM[(size_type *)&D.62810 + 8B] = 15;
  # DEBUG D#6 => &D.62810.first
  # DEBUG this => D#6
  # DEBUG __c1 => &MEM[(void *)&D.62810 + 31B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.62810 + 31] = 0;
  # DEBUG D#636 => {CLOBBER}
  # DEBUG __dnew => D#636
  D.62810.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_553
  # DEBUG __x => &D.62810
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_553;
  # DEBUG __x => &D.62810
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#236 => &__an
  D.62808 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.75.constprop (&gRoutingFunctionMap._M_t, __pos, &D.62810);

  <bb 22>:
  __i$_M_node_151 = MEM[(struct _Rb_tree_iterator *)&D.62808];
  # DEBUG __i$_M_node => __i$_M_node_151
  # DEBUG this => &D.62810
  # DEBUG D#72 => &D.62810.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _152 = MEM[(char * *)&D.62810];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.62810].D.11539._M_local_buf != _152)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _152
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _152
  # DEBUG this => D#55
  # DEBUG D.62764 => D#56
  operator delete (_152);

  <bb 24>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.62810 ={v} {CLOBBER};
  pretmp_957 = MEM[(char * *)&D.49784];

  <bb 25>:
  # __i$_M_node_153 = PHI <__i$_M_node_1014(17), __i$_M_node_151(24), __i$_M_node_1014(20)>
  # prephitmp_958 = PHI <&D.49784.D.11539._M_local_buf(17), pretmp_957(24), &D.49784.D.11539._M_local_buf(20)>
  # DEBUG __i$_M_node => __i$_M_node_153
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_153
  # DEBUG D#238 => &MEM[(struct _Rb_tree_node *)__i$_M_node_153]._M_value_field
  # DEBUG __r => D#238
  # DEBUG D#240 => {CLOBBER}
  # DEBUG __i$_M_node => D#240
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_153 + 64] = min_flatfly;
  # DEBUG this => &D.49784
  # DEBUG this => &D.49784
  # DEBUG this => &D.49784
  # DEBUG D#742 => MEM[(char * *)&D.49784]
  # DEBUG D#6 => &D.49784
  # DEBUG this => D#6
  # DEBUG this => &D.49784
  if (&D.49784.D.11539._M_local_buf != prephitmp_958)
    goto <bb 29>;
  else
    goto <bb 30>;

<L14>:
  # DEBUG this => &D.62810
  # DEBUG D#72 => &D.62810.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _155 = MEM[(char * *)&D.62810];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.62810].D.11539._M_local_buf != _155)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _155
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _155
  # DEBUG this => D#55
  # DEBUG D.62748 => D#56
  operator delete (_155);

  <bb 28>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.62810 ={v} {CLOBBER};
  resx 29

  <bb 29>:
  # DEBUG D#64 => D.49784.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49784
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49784
  # DEBUG this => D#6
  # DEBUG this => &D.49784
  # DEBUG D#61 => &D.49784._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => D#742
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => D#742
  # DEBUG this => D#55
  # DEBUG D.59301 => D#56
  operator delete (prephitmp_958);

  <bb 30>:
  # DEBUG D#65 => &D.49784._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49784 ={v} {CLOBBER};
  # DEBUG this => &D.49783
  # DEBUG this => &D.49783
  # DEBUG D#36 => &D.49786
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#91 => &D.49786
  # DEBUG this => &D.49787
  # DEBUG __s => "adaptive_xyyx_flatfly"
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.49787
  # DEBUG D#88 => &D.49787._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.49787.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.49787]._M_p = &D.49787.D.11539._M_local_buf;
  # DEBUG __s => "adaptive_xyyx_flatfly"
  # DEBUG this => &D.49787
  # DEBUG __beg => "adaptive_xyyx_flatfly"
  # DEBUG __end => &MEM[(void *)"adaptive_xyyx_flatfly" + 21B]
  # DEBUG this => &D.49787
  # DEBUG __beg => "adaptive_xyyx_flatfly"
  # DEBUG __end => &MEM[(void *)"adaptive_xyyx_flatfly" + 21B]
  # DEBUG this => &D.49787
  # DEBUG __beg => "adaptive_xyyx_flatfly"
  # DEBUG __end => &MEM[(void *)"adaptive_xyyx_flatfly" + 21B]
  # DEBUG __ptr => "adaptive_xyyx_flatfly"
  # DEBUG __first => "adaptive_xyyx_flatfly"
  # DEBUG __last => &MEM[(void *)"adaptive_xyyx_flatfly" + 21B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => "adaptive_xyyx_flatfly"
  # DEBUG __last => &MEM[(void *)"adaptive_xyyx_flatfly" + 21B]
  __dnew = 21;
  _239 = std::__cxx11::basic_string<char>::_M_create (&D.49787, &__dnew, 0);
  # DEBUG D#8 => &D.49787
  # DEBUG __p => _239
  # DEBUG this => D#8
  MEM[(char * *)&D.49787] = _239;
  __dnew.47_240 = __dnew;
  # DEBUG D#9 => &D.49787
  # DEBUG __capacity => __dnew.47_240
  # DEBUG this => D#9
  MEM[(size_type *)&D.49787 + 16B] = __dnew.47_240;
  # DEBUG D#6 => &D.49787
  # DEBUG this => D#6
  # DEBUG __p => _239
  # DEBUG __k1 => "adaptive_xyyx_flatfly"
  # DEBUG __k2 => &MEM[(void *)"adaptive_xyyx_flatfly" + 21B]
  # DEBUG __d => _239
  # DEBUG __s => "adaptive_xyyx_flatfly"
  # DEBUG __n => 21
  # DEBUG __s1 => _239
  # DEBUG __s2 => "adaptive_xyyx_flatfly"
  # DEBUG __n => 21
  __builtin_memcpy (_239, "adaptive_xyyx_flatfly", 21);
  __dnew.47_243 = __dnew;
  # DEBUG this => &D.49787
  # DEBUG __n => __dnew.47_243
  # DEBUG D#10 => &D.49787
  # DEBUG __length => __dnew.47_243
  # DEBUG this => D#10
  MEM[(size_type *)&D.49787 + 8B] = __dnew.47_243;
  _244 = MEM[(char * *)&D.49787];
  # DEBUG D#6 => &D.49787
  # DEBUG this => D#6
  _245 = _244 + __dnew.47_243;
  # DEBUG __c1 => _245
  # DEBUG __c2 => D#11
  MEM[(char_type &)_245] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.49787
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.49787
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.49787
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_247 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#53 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#53
  # DEBUG D#186 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.49787
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_247
  if (__i$_M_node_247 == 0B)
    goto <bb 239>;
  else
    goto <bb 31>;

  <bb 31>:
  pretmp_686 = MEM[(long unsigned int *)&D.49787 + 8B];
  pretmp_700 = MEM[(char * *)&D.49787];
  goto <bb 34>;

  <bb 32>:
  # __i$_M_node_429 = PHI <__i$_M_node_251(39), __i$_M_node_252(40)>
  # __i$_M_node_480 = PHI <__i$_M_node_538(39), __i$_M_node_19(40)>
  # DEBUG __y => __i$_M_node_480
  # DEBUG __x => __i$_M_node_429
  if (__i$_M_node_429 == 0B)
    goto <bb 41>;
  else
    goto <bb 33>;

  <bb 33>:

  <bb 34>:
  # __i$_M_node_538 = PHI <__i$_M_node_247(31), __i$_M_node_429(33)>
  # __i$_M_node_19 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(31), __i$_M_node_480(33)>
  # DEBUG __y => __i$_M_node_19
  # DEBUG __x => __i$_M_node_538
  # DEBUG __x => __i$_M_node_538
  # DEBUG __x => __i$_M_node_538
  # DEBUG this => __i$_M_node_538
  # DEBUG D#183 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_538]._M_value_field
  # DEBUG __r => D#183
  # DEBUG __x => D#183
  # DEBUG this => D#83
  # DEBUG D#611 => &MEM[(const struct pair &)__i$_M_node_538 + 32].first
  # DEBUG D#184 => &D#185->_M_impl._M_key_compare
  # DEBUG D#82 => D#184
  # DEBUG __x => D#611
  # DEBUG __y => &D.49787
  # DEBUG this => D#82
  # DEBUG __lhs => D#611
  # DEBUG __rhs => &D.49787
  # DEBUG this => D#611
  # DEBUG __str => &D.49787
  _256 = MEM[(long unsigned int *)__i$_M_node_538 + 40B];
  # DEBUG D#1 => D#611
  # DEBUG this => D#1
  # DEBUG __size => _256
  # DEBUG D#741 => MEM[(long unsigned int *)&D.49787 + 8B]
  # DEBUG D#1 => &D.49787
  # DEBUG this => D#1
  # DEBUG __osize => D#741
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_148 = MIN_EXPR <_256, pretmp_686>;
  # DEBUG __len => D#597
  # DEBUG this => &D.49787
  # DEBUG D#740 => MEM[(char * *)&D.49787]
  # DEBUG D#6 => &D.49787
  # DEBUG this => D#6
  _261 = MEM[(char * *)__i$_M_node_538 + 32B];
  # DEBUG D#6 => D#611
  # DEBUG this => D#6
  # DEBUG __s1 => _261
  # DEBUG __s2 => D#740
  # DEBUG __n => D#597
  __r_262 = __builtin_memcmp (_261, pretmp_700, __len_148);
  # DEBUG __r => NULL
  if (__r_262 == 0)
    goto <bb 35>;
  else
    goto <bb 38>;

  <bb 35>:
  # DEBUG __n1 => _256
  # DEBUG __n2 => D#741
  _263 = _256 - pretmp_686;
  __d_264 = (const difference_type) _263;
  # DEBUG __d => __d_264
  if (__d_264 > 2147483647)
    goto <bb 39>;
  else
    goto <bb 36>;

  <bb 36>:
  if (__d_264 < -2147483648)
    goto <bb 40>;
  else
    goto <bb 37>;

  <bb 37>:
  __r_265 = (int) _263;

  <bb 38>:
  # __r_266 = PHI <__r_262(34), __r_265(37)>
  # DEBUG __r => __r_266
  # DEBUG D#641 => {CLOBBER}
  # DEBUG __size => D#641
  # DEBUG D#642 => {CLOBBER}
  # DEBUG __osize => D#642
  if (__r_266 >= 0)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_538
  __i$_M_node_251 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_538 + 16B];
  # DEBUG D#80 => __i$_M_node_538
  # DEBUG __x => D#80
  # DEBUG __x => NULL
  goto <bb 32>;

  <bb 40>:
  # DEBUG __r => NULL
  __i$_M_node_252 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_538 + 24B];
  # DEBUG D#81 => __i$_M_node_538
  # DEBUG __x => D#81
  # DEBUG __x => NULL
  goto <bb 32>;

  <bb 41>:
  # __i$_M_node_1015 = PHI <__i$_M_node_480(32)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_1015
  # DEBUG __i$_M_node => __i$_M_node_1015
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#54 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#54
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_1015 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 240>;
  else
    goto <bb 42>;

  <bb 42>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1015
  # DEBUG D#237 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1015]._M_value_field
  # DEBUG __r => D#237
  # DEBUG D#612 => &MEM[(struct pair &)__i$_M_node_1015 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.49787
  # DEBUG __y => D#612
  # DEBUG this => D#82
  # DEBUG __lhs => &D.49787
  # DEBUG __rhs => D#612
  # DEBUG this => &D.49787
  # DEBUG __str => D#612
  # DEBUG D#739 => MEM[(long unsigned int *)&D.49787 + 8B]
  # DEBUG D#1 => &D.49787
  # DEBUG this => D#1
  # DEBUG __size => D#739
  _269 = MEM[(long unsigned int *)__i$_M_node_1015 + 40B];
  # DEBUG D#1 => D#612
  # DEBUG this => D#1
  # DEBUG __osize => _269
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_149 = MIN_EXPR <_269, pretmp_686>;
  # DEBUG __len => D#598
  # DEBUG this => D#612
  _272 = MEM[(char * *)__i$_M_node_1015 + 32B];
  # DEBUG D#6 => D#612
  # DEBUG this => D#6
  # DEBUG D#738 => MEM[(char * *)&D.49787]
  # DEBUG D#6 => &D.49787
  # DEBUG this => D#6
  # DEBUG __s1 => D#738
  # DEBUG __s2 => _272
  # DEBUG __n => D#598
  __r_274 = __builtin_memcmp (pretmp_700, _272, __len_149);
  # DEBUG __r => NULL
  if (__r_274 == 0)
    goto <bb 43>;
  else
    goto <bb 46>;

  <bb 43>:
  # DEBUG __n1 => D#739
  # DEBUG __n2 => _269
  _275 = pretmp_686 - _269;
  __d_276 = (const difference_type) _275;
  # DEBUG __d => __d_276
  if (__d_276 > 2147483647)
    goto <bb 57>;
  else
    goto <bb 44>;

  <bb 44>:
  if (__d_276 < -2147483648)
    goto <bb 47>;
  else
    goto <bb 45>;

  <bb 45>:
  __r_277 = (int) _275;

  <bb 46>:
  # __r_278 = PHI <__r_274(42), __r_277(45)>
  # DEBUG __r => __r_278
  # DEBUG D#647 => {CLOBBER}
  # DEBUG __size => D#647
  # DEBUG D#648 => {CLOBBER}
  # DEBUG __osize => D#648
  if (__r_278 < 0)
    goto <bb 240>;
  else
    goto <bb 57>;

  <bb 47>:
  # __i$_M_node_559 = PHI <__i$_M_node_1015(44), __i$_M_node_684(240)>
  # prephitmp_900 = PHI <pretmp_686(44), prephitmp_960(240)>
  # prephitmp_778 = PHI <pretmp_700(44), prephitmp_94(240)>
  # DEBUG this => &D.63006
  # DEBUG __a => &D.49787
  # DEBUG __b => NULL
  # DEBUG this => &D.63006.first
  # DEBUG __str => &D.49787
  # DEBUG this => &D.49787
  # DEBUG D#115 => &D.49787._M_dataplus
  # DEBUG this => &D.63006.first
  # DEBUG D#116 => &MEM[(struct basic_string *)&D.63006]._M_dataplus
  # DEBUG D#49 => D#115
  # DEBUG this => D#116
  # DEBUG __dat => &MEM[(struct basic_string *)&D.63006].D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#116
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.63006]._M_p = &MEM[(struct basic_string *)&D.63006].D.11539._M_local_buf;
  # DEBUG D#737 => MEM[(char * *)&D.49787]
  # DEBUG D#6 => &D.49787
  # DEBUG this => D#6
  # DEBUG D#736 => MEM[(long unsigned int *)&D.49787 + 8B]
  # DEBUG D#7 => &D.49787
  # DEBUG this => D#7
  _225 = prephitmp_778 + prephitmp_900;
  # DEBUG D#6 => &D.49787
  # DEBUG this => D#6
  # DEBUG this => &D.63006.first
  # DEBUG __beg => D#737
  # DEBUG __end => _225
  # DEBUG this => &D.63006.first
  # DEBUG __beg => D#737
  # DEBUG __end => _225
  # DEBUG this => &D.63006.first
  # DEBUG __beg => D#737
  # DEBUG __end => _225
  # DEBUG __ptr => D#737
  _554 = _225 != 0B;
  _567 = prephitmp_778 == 0B;
  _579 = _554 & _567;
  if (_579 != 0)
    goto <bb 241>;
  else
    goto <bb 243>;

  <bb 48>:
  _285 = std::__cxx11::basic_string<char>::_M_create (&D.63006.first, &__dnew, 0);

  <bb 49>:
  # DEBUG D#8 => &D.63006.first
  # DEBUG __p => _285
  # DEBUG this => D#8
  MEM[(char * *)&D.63006] = _285;
  __dnew.47_286 = __dnew;
  # DEBUG D#9 => &D.63006.first
  # DEBUG __capacity => __dnew.47_286
  # DEBUG this => D#9
  MEM[(size_type *)&D.63006 + 16B] = __dnew.47_286;
  # DEBUG D#6 => &D.63006.first
  # DEBUG this => D#6
  # DEBUG __p => _285
  # DEBUG __k1 => D#737
  # DEBUG __k2 => _225
  # DEBUG __d => _285
  # DEBUG __s => D#737
  # DEBUG __n => D#736
  goto <bb 52>;

  <bb 50>:
  # DEBUG D#6 => &D.63006.first
  # DEBUG this => D#6
  # DEBUG __p => &MEM[(struct basic_string *)&D.63006].D.11539._M_local_buf
  # DEBUG __k1 => D#737
  # DEBUG __k2 => _225
  # DEBUG __d => &MEM[(struct basic_string *)&D.63006].D.11539._M_local_buf
  # DEBUG __s => D#737
  # DEBUG __n => D#736
  if (prephitmp_900 == 1)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  _288 = MEM[(const char_type &)prephitmp_778];
  # DEBUG D#11 => D#737
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.63006].D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.63006 + 16] = _288;
  goto <bb 53>;

  <bb 52>:
  # _165 = PHI <&MEM[(struct basic_string *)&D.63006].D.11539._M_local_buf(50), _285(49)>
  # DEBUG D#6 => &D.63006.first
  # DEBUG this => D#6
  # DEBUG __p => _165
  # DEBUG __k1 => D#737
  # DEBUG __k2 => _225
  # DEBUG __d => _165
  # DEBUG __s => D#737
  # DEBUG __n => D#736
  # DEBUG __s1 => _165
  # DEBUG __s2 => D#737
  # DEBUG __n => D#736
  __builtin_memcpy (_165, prephitmp_778, prephitmp_900);
  pretmp_779 = __dnew;
  pretmp_777 = MEM[(char * *)&D.63006];

  <bb 53>:
  # prephitmp_747 = PHI <prephitmp_900(51), pretmp_779(52)>
  # prephitmp_439 = PHI <&MEM[(struct basic_string *)&D.63006].D.11539._M_local_buf(51), pretmp_777(52)>
  # DEBUG D#735 => __dnew
  # DEBUG this => &D.63006.first
  # DEBUG __n => D#735
  # DEBUG D#10 => &D.63006.first
  # DEBUG __length => D#735
  # DEBUG this => D#10
  MEM[(size_type *)&D.63006 + 8B] = prephitmp_747;
  # DEBUG D#6 => &D.63006.first
  # DEBUG this => D#6
  _291 = prephitmp_439 + prephitmp_747;
  # DEBUG __c1 => _291
  # DEBUG __c2 => D#11
  MEM[(char_type &)_291] = 0;
  __dnew ={v} {CLOBBER};
  D.63006.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_559
  # DEBUG __x => &D.63006
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_559;
  # DEBUG __x => &D.63006
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#236 => &__an
  D.63004 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.75.constprop (&gRoutingFunctionMap._M_t, __pos, &D.63006);

  <bb 54>:
  __i$_M_node_226 = MEM[(struct _Rb_tree_iterator *)&D.63004];
  # DEBUG __i$_M_node => __i$_M_node_226
  # DEBUG this => &D.63006
  # DEBUG D#72 => &D.63006.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _227 = MEM[(char * *)&D.63006];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63006].D.11539._M_local_buf != _227)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _227
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _227
  # DEBUG this => D#55
  # DEBUG D.62960 => D#56
  operator delete (_227);

  <bb 56>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63006 ={v} {CLOBBER};
  pretmp_95 = MEM[(char * *)&D.49787];

  <bb 57>:
  # __i$_M_node_228 = PHI <__i$_M_node_1015(43), __i$_M_node_226(56), __i$_M_node_1015(46)>
  # prephitmp_96 = PHI <pretmp_700(43), pretmp_95(56), pretmp_700(46)>
  # DEBUG __i$_M_node => __i$_M_node_228
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_228
  # DEBUG D#238 => &MEM[(struct _Rb_tree_node *)__i$_M_node_228]._M_value_field
  # DEBUG __r => D#238
  # DEBUG D#240 => {CLOBBER}
  # DEBUG __i$_M_node => D#240
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_228 + 64] = adaptive_xyyx_flatfly;
  # DEBUG this => &D.49787
  # DEBUG this => &D.49787
  # DEBUG this => &D.49787
  # DEBUG D#734 => MEM[(char * *)&D.49787]
  # DEBUG D#6 => &D.49787
  # DEBUG this => D#6
  # DEBUG this => &D.49787
  if (&D.49787.D.11539._M_local_buf != prephitmp_96)
    goto <bb 62>;
  else
    goto <bb 63>;

<L15>:
  # DEBUG this => &D.63006
  # DEBUG D#72 => &D.63006.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _230 = MEM[(char * *)&D.63006];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63006].D.11539._M_local_buf != _230)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _230
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _230
  # DEBUG this => D#55
  # DEBUG D.62944 => D#56
  operator delete (_230);

  <bb 60>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63006 ={v} {CLOBBER};
  resx 30

<L22>:
  goto <bb 218> (<L2>);

  <bb 62>:
  # DEBUG D#64 => D.49787.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49787
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49787
  # DEBUG this => D#6
  # DEBUG this => &D.49787
  # DEBUG D#61 => &D.49787._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => D#734
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => D#734
  # DEBUG this => D#55
  # DEBUG D.59319 => D#56
  operator delete (prephitmp_96);

  <bb 63>:
  # DEBUG D#65 => &D.49787._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49787 ={v} {CLOBBER};
  # DEBUG this => &D.49786
  # DEBUG this => &D.49786
  # DEBUG D#36 => &D.49789
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#91 => &D.49789
  # DEBUG this => &D.49790
  # DEBUG __s => "xyyx_flatfly"
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.49790
  # DEBUG D#88 => &D.49790._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.49790.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.49790]._M_p = &D.49790.D.11539._M_local_buf;
  # DEBUG __s => "xyyx_flatfly"
  # DEBUG this => &D.49790
  # DEBUG __beg => "xyyx_flatfly"
  # DEBUG __end => &MEM[(void *)"xyyx_flatfly" + 12B]
  # DEBUG this => &D.49790
  # DEBUG __beg => "xyyx_flatfly"
  # DEBUG __end => &MEM[(void *)"xyyx_flatfly" + 12B]
  # DEBUG this => &D.49790
  # DEBUG __beg => "xyyx_flatfly"
  # DEBUG __end => &MEM[(void *)"xyyx_flatfly" + 12B]
  # DEBUG __ptr => "xyyx_flatfly"
  # DEBUG __first => "xyyx_flatfly"
  # DEBUG __last => &MEM[(void *)"xyyx_flatfly" + 12B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => "xyyx_flatfly"
  # DEBUG __last => &MEM[(void *)"xyyx_flatfly" + 12B]
  # DEBUG __dnew => 12
  # DEBUG D#6 => &D.49790
  # DEBUG this => D#6
  # DEBUG __p => &D.49790.D.11539._M_local_buf
  # DEBUG __k1 => "xyyx_flatfly"
  # DEBUG __k2 => &MEM[(void *)"xyyx_flatfly" + 12B]
  # DEBUG __d => &D.49790.D.11539._M_local_buf
  # DEBUG __s => "xyyx_flatfly"
  # DEBUG __n => 12
  # DEBUG __s1 => &D.49790.D.11539._M_local_buf
  # DEBUG __s2 => "xyyx_flatfly"
  # DEBUG __n => 12
  __builtin_memcpy (&D.49790.D.11539._M_local_buf, "xyyx_flatfly", 12);
  # DEBUG this => &D.49790
  # DEBUG __n => 12
  # DEBUG D#10 => &D.49790
  # DEBUG __length => 12
  # DEBUG this => D#10
  MEM[(size_type *)&D.49790 + 8B] = 12;
  # DEBUG D#6 => &D.49790
  # DEBUG this => D#6
  # DEBUG __c1 => &MEM[(void *)&D.49790 + 28B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.49790 + 28] = 0;
  # DEBUG D#649 => {CLOBBER}
  # DEBUG __dnew => D#649
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.49790
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.49790
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.49790
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_322 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#53 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#53
  # DEBUG D#186 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.49790
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_322
  if (__i$_M_node_322 == 0B)
    goto <bb 244>;
  else
    goto <bb 66>;

  <bb 64>:
  # __i$_M_node_405 = PHI <__i$_M_node_326(72), __i$_M_node_327(73)>
  # __i$_M_node_404 = PHI <__i$_M_node_832(72), __i$_M_node_374(73)>
  # DEBUG __y => __i$_M_node_404
  # DEBUG __x => __i$_M_node_405
  if (__i$_M_node_405 == 0B)
    goto <bb 74>;
  else
    goto <bb 65>;

  <bb 65>:
  goto <bb 67>;

  <bb 66>:

  <bb 67>:
  # __i$_M_node_832 = PHI <__i$_M_node_322(66), __i$_M_node_405(65)>
  # __i$_M_node_374 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(66), __i$_M_node_404(65)>
  # DEBUG __y => __i$_M_node_374
  # DEBUG __x => __i$_M_node_832
  # DEBUG __x => __i$_M_node_832
  # DEBUG __x => __i$_M_node_832
  # DEBUG this => __i$_M_node_832
  # DEBUG D#183 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_832]._M_value_field
  # DEBUG __r => D#183
  # DEBUG __x => D#183
  # DEBUG this => D#83
  # DEBUG D#613 => &MEM[(const struct pair &)__i$_M_node_832 + 32].first
  # DEBUG D#184 => &D#185->_M_impl._M_key_compare
  # DEBUG D#82 => D#184
  # DEBUG __x => D#613
  # DEBUG __y => &D.49790
  # DEBUG this => D#82
  # DEBUG __lhs => D#613
  # DEBUG __rhs => &D.49790
  # DEBUG this => D#613
  # DEBUG __str => &D.49790
  _331 = MEM[(long unsigned int *)__i$_M_node_832 + 40B];
  # DEBUG D#1 => D#613
  # DEBUG this => D#1
  # DEBUG __size => _331
  # DEBUG D#1 => &D.49790
  # DEBUG this => D#1
  # DEBUG __osize => 12
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_193 = MIN_EXPR <_331, 12>;
  # DEBUG __len => D#599
  # DEBUG this => &D.49790
  # DEBUG D#6 => &D.49790
  # DEBUG this => D#6
  _336 = MEM[(char * *)__i$_M_node_832 + 32B];
  # DEBUG D#6 => D#613
  # DEBUG this => D#6
  # DEBUG __s1 => _336
  # DEBUG __s2 => &D.49790.D.11539._M_local_buf
  # DEBUG __n => D#599
  __r_337 = __builtin_memcmp (_336, &D.49790.D.11539._M_local_buf, __len_193);
  # DEBUG __r => NULL
  if (__r_337 == 0)
    goto <bb 68>;
  else
    goto <bb 71>;

  <bb 68>:
  # DEBUG __n1 => _331
  # DEBUG __n2 => 12
  _338 = _331 - 12;
  __d_339 = (const difference_type) _338;
  # DEBUG __d => __d_339
  if (__d_339 > 2147483647)
    goto <bb 72>;
  else
    goto <bb 69>;

  <bb 69>:
  if (__d_339 < -2147483648)
    goto <bb 73>;
  else
    goto <bb 70>;

  <bb 70>:
  __r_340 = (int) _338;

  <bb 71>:
  # __r_341 = PHI <__r_337(67), __r_340(70)>
  # DEBUG __r => __r_341
  # DEBUG D#654 => {CLOBBER}
  # DEBUG __size => D#654
  # DEBUG D#655 => {CLOBBER}
  # DEBUG __osize => D#655
  if (__r_341 >= 0)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_832
  __i$_M_node_326 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_832 + 16B];
  # DEBUG D#80 => __i$_M_node_832
  # DEBUG __x => D#80
  # DEBUG __x => NULL
  goto <bb 64>;

  <bb 73>:
  # DEBUG __r => NULL
  __i$_M_node_327 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_832 + 24B];
  # DEBUG D#81 => __i$_M_node_832
  # DEBUG __x => D#81
  # DEBUG __x => NULL
  goto <bb 64>;

  <bb 74>:
  # __i$_M_node_1016 = PHI <__i$_M_node_404(64)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_1016
  # DEBUG __i$_M_node => __i$_M_node_1016
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#54 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#54
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_1016 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 244>;
  else
    goto <bb 75>;

  <bb 75>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1016
  # DEBUG D#237 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1016]._M_value_field
  # DEBUG __r => D#237
  # DEBUG D#614 => &MEM[(struct pair &)__i$_M_node_1016 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.49790
  # DEBUG __y => D#614
  # DEBUG this => D#82
  # DEBUG __lhs => &D.49790
  # DEBUG __rhs => D#614
  # DEBUG this => &D.49790
  # DEBUG __str => D#614
  # DEBUG D#1 => &D.49790
  # DEBUG this => D#1
  # DEBUG __size => 12
  _344 = MEM[(long unsigned int *)__i$_M_node_1016 + 40B];
  # DEBUG D#1 => D#614
  # DEBUG this => D#1
  # DEBUG __osize => _344
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_344 <= 11)
    goto <bb 77>;
  else
    goto <bb 76>;

  <bb 76>:

  <bb 77>:
  # __len_346 = PHI <_344(75), 12(76)>
  # DEBUG __len => D#600
  # DEBUG this => D#614
  _347 = MEM[(char * *)__i$_M_node_1016 + 32B];
  # DEBUG D#6 => D#614
  # DEBUG this => D#6
  # DEBUG D#6 => &D.49790
  # DEBUG this => D#6
  # DEBUG __s1 => &D.49790.D.11539._M_local_buf
  # DEBUG __s2 => _347
  # DEBUG __n => D#600
  __r_349 = __builtin_memcmp (&D.49790.D.11539._M_local_buf, _347, __len_346);
  # DEBUG __r => NULL
  if (__r_349 == 0)
    goto <bb 78>;
  else
    goto <bb 81>;

  <bb 78>:
  # DEBUG __n1 => 12
  # DEBUG __n2 => _344
  _350 = 12 - _344;
  __d_351 = (const difference_type) _350;
  # DEBUG __d => __d_351
  if (__d_351 > 2147483647)
    goto <bb 86>;
  else
    goto <bb 79>;

  <bb 79>:
  if (__d_351 < -2147483648)
    goto <bb 82>;
  else
    goto <bb 80>;

  <bb 80>:
  __r_352 = (int) _350;

  <bb 81>:
  # __r_353 = PHI <__r_349(77), __r_352(80)>
  # DEBUG __r => __r_353
  # DEBUG D#660 => {CLOBBER}
  # DEBUG __size => D#660
  # DEBUG D#661 => {CLOBBER}
  # DEBUG __osize => D#661
  if (__r_353 < 0)
    goto <bb 244>;
  else
    goto <bb 86>;

  <bb 82>:
  # __i$_M_node_409 = PHI <__i$_M_node_1016(79), __i$_M_node_484(244)>
  # DEBUG this => &D.63202
  # DEBUG __a => &D.49790
  # DEBUG __b => NULL
  # DEBUG this => &D.63202.first
  # DEBUG __str => &D.49790
  # DEBUG this => &D.49790
  # DEBUG D#115 => &D.49790._M_dataplus
  # DEBUG this => &D.63202.first
  # DEBUG D#116 => &MEM[(struct basic_string *)&D.63202]._M_dataplus
  # DEBUG D#49 => D#115
  # DEBUG this => D#116
  # DEBUG __dat => &MEM[(struct basic_string *)&D.63202].D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#116
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.63202]._M_p = &MEM[(struct basic_string *)&D.63202].D.11539._M_local_buf;
  # DEBUG D#6 => &D.49790
  # DEBUG this => D#6
  # DEBUG D#7 => &D.49790
  # DEBUG this => D#7
  # DEBUG D#6 => &D.49790
  # DEBUG this => D#6
  # DEBUG this => &D.63202.first
  # DEBUG __beg => &D.49790.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49790 + 28B]
  # DEBUG this => &D.63202.first
  # DEBUG __beg => &D.49790.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49790 + 28B]
  # DEBUG this => &D.63202.first
  # DEBUG __beg => &D.49790.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49790 + 28B]
  # DEBUG __ptr => &D.49790.D.11539._M_local_buf
  # DEBUG __first => &D.49790.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.49790 + 28B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => &D.49790.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.49790 + 28B]
  # DEBUG __dnew => 12
  # DEBUG D#6 => &D.63202.first
  # DEBUG this => D#6
  # DEBUG __p => &MEM[(struct basic_string *)&D.63202].D.11539._M_local_buf
  # DEBUG __k1 => &D.49790.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.49790 + 28B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.63202].D.11539._M_local_buf
  # DEBUG __s => &D.49790.D.11539._M_local_buf
  # DEBUG __n => 12
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.63202].D.11539._M_local_buf
  # DEBUG __s2 => &D.49790.D.11539._M_local_buf
  # DEBUG __n => 12
  __builtin_memcpy (&MEM[(struct basic_string *)&D.63202].D.11539._M_local_buf, &D.49790.D.11539._M_local_buf, 12);
  # DEBUG this => &D.63202.first
  # DEBUG __n => 12
  # DEBUG D#10 => &D.63202.first
  # DEBUG __length => 12
  # DEBUG this => D#10
  MEM[(size_type *)&D.63202 + 8B] = 12;
  # DEBUG D#6 => &D.63202.first
  # DEBUG this => D#6
  # DEBUG __c1 => &MEM[(void *)&D.63202 + 28B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.63202 + 28] = 0;
  # DEBUG D#662 => {CLOBBER}
  # DEBUG __dnew => D#662
  D.63202.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_409
  # DEBUG __x => &D.63202
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_409;
  # DEBUG __x => &D.63202
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#236 => &__an
  D.63200 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.75.constprop (&gRoutingFunctionMap._M_t, __pos, &D.63202);

  <bb 83>:
  __i$_M_node_301 = MEM[(struct _Rb_tree_iterator *)&D.63200];
  # DEBUG __i$_M_node => __i$_M_node_301
  # DEBUG this => &D.63202
  # DEBUG D#72 => &D.63202.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _302 = MEM[(char * *)&D.63202];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63202].D.11539._M_local_buf != _302)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _302
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _302
  # DEBUG this => D#55
  # DEBUG D.63156 => D#56
  operator delete (_302);

  <bb 85>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63202 ={v} {CLOBBER};
  pretmp_907 = MEM[(char * *)&D.49790];

  <bb 86>:
  # __i$_M_node_303 = PHI <__i$_M_node_1016(78), __i$_M_node_301(85), __i$_M_node_1016(81)>
  # prephitmp_908 = PHI <&D.49790.D.11539._M_local_buf(78), pretmp_907(85), &D.49790.D.11539._M_local_buf(81)>
  # DEBUG __i$_M_node => __i$_M_node_303
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_303
  # DEBUG D#238 => &MEM[(struct _Rb_tree_node *)__i$_M_node_303]._M_value_field
  # DEBUG __r => D#238
  # DEBUG D#240 => {CLOBBER}
  # DEBUG __i$_M_node => D#240
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_303 + 64] = xyyx_flatfly;
  # DEBUG this => &D.49790
  # DEBUG this => &D.49790
  # DEBUG this => &D.49790
  # DEBUG D#733 => MEM[(char * *)&D.49790]
  # DEBUG D#6 => &D.49790
  # DEBUG this => D#6
  # DEBUG this => &D.49790
  if (&D.49790.D.11539._M_local_buf != prephitmp_908)
    goto <bb 90>;
  else
    goto <bb 91>;

<L16>:
  # DEBUG this => &D.63202
  # DEBUG D#72 => &D.63202.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _305 = MEM[(char * *)&D.63202];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63202].D.11539._M_local_buf != _305)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _305
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _305
  # DEBUG this => D#55
  # DEBUG D.63140 => D#56
  operator delete (_305);

  <bb 89>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63202 ={v} {CLOBBER};
  resx 31

  <bb 90>:
  # DEBUG D#64 => D.49790.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49790
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49790
  # DEBUG this => D#6
  # DEBUG this => &D.49790
  # DEBUG D#61 => &D.49790._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => D#733
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => D#733
  # DEBUG this => D#55
  # DEBUG D.59337 => D#56
  operator delete (prephitmp_908);

  <bb 91>:
  # DEBUG D#65 => &D.49790._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49790 ={v} {CLOBBER};
  # DEBUG this => &D.49789
  # DEBUG this => &D.49789
  # DEBUG D#36 => &D.49792
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#91 => &D.49792
  # DEBUG this => &D.49793
  # DEBUG __s => "valiant_flatfly"
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.49793
  # DEBUG D#88 => &D.49793._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.49793.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.49793]._M_p = &D.49793.D.11539._M_local_buf;
  # DEBUG __s => "valiant_flatfly"
  # DEBUG this => &D.49793
  # DEBUG __beg => "valiant_flatfly"
  # DEBUG __end => &MEM[(void *)"valiant_flatfly" + 15B]
  # DEBUG this => &D.49793
  # DEBUG __beg => "valiant_flatfly"
  # DEBUG __end => &MEM[(void *)"valiant_flatfly" + 15B]
  # DEBUG this => &D.49793
  # DEBUG __beg => "valiant_flatfly"
  # DEBUG __end => &MEM[(void *)"valiant_flatfly" + 15B]
  # DEBUG __ptr => "valiant_flatfly"
  # DEBUG __first => "valiant_flatfly"
  # DEBUG __last => &MEM[(void *)"valiant_flatfly" + 15B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => "valiant_flatfly"
  # DEBUG __last => &MEM[(void *)"valiant_flatfly" + 15B]
  # DEBUG __dnew => 15
  # DEBUG D#6 => &D.49793
  # DEBUG this => D#6
  # DEBUG __p => &D.49793.D.11539._M_local_buf
  # DEBUG __k1 => "valiant_flatfly"
  # DEBUG __k2 => &MEM[(void *)"valiant_flatfly" + 15B]
  # DEBUG __d => &D.49793.D.11539._M_local_buf
  # DEBUG __s => "valiant_flatfly"
  # DEBUG __n => 15
  # DEBUG __s1 => &D.49793.D.11539._M_local_buf
  # DEBUG __s2 => "valiant_flatfly"
  # DEBUG __n => 15
  __builtin_memcpy (&D.49793.D.11539._M_local_buf, "valiant_flatfly", 15);
  # DEBUG this => &D.49793
  # DEBUG __n => 15
  # DEBUG D#10 => &D.49793
  # DEBUG __length => 15
  # DEBUG this => D#10
  MEM[(size_type *)&D.49793 + 8B] = 15;
  # DEBUG D#6 => &D.49793
  # DEBUG this => D#6
  # DEBUG __c1 => &MEM[(void *)&D.49793 + 31B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.49793 + 31] = 0;
  # DEBUG D#663 => {CLOBBER}
  # DEBUG __dnew => D#663
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.49793
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.49793
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.49793
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_397 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#53 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#53
  # DEBUG D#186 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.49793
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_397
  if (__i$_M_node_397 == 0B)
    goto <bb 245>;
  else
    goto <bb 94>;

  <bb 92>:
  # __i$_M_node_329 = PHI <__i$_M_node_401(100), __i$_M_node_402(101)>
  # __i$_M_node_342 = PHI <__i$_M_node_788(100), __i$_M_node_250(101)>
  # DEBUG __y => __i$_M_node_342
  # DEBUG __x => __i$_M_node_329
  if (__i$_M_node_329 == 0B)
    goto <bb 102>;
  else
    goto <bb 93>;

  <bb 93>:
  goto <bb 95>;

  <bb 94>:

  <bb 95>:
  # __i$_M_node_788 = PHI <__i$_M_node_397(94), __i$_M_node_329(93)>
  # __i$_M_node_250 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(94), __i$_M_node_342(93)>
  # DEBUG __y => __i$_M_node_250
  # DEBUG __x => __i$_M_node_788
  # DEBUG __x => __i$_M_node_788
  # DEBUG __x => __i$_M_node_788
  # DEBUG this => __i$_M_node_788
  # DEBUG D#183 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_788]._M_value_field
  # DEBUG __r => D#183
  # DEBUG __x => D#183
  # DEBUG this => D#83
  # DEBUG D#615 => &MEM[(const struct pair &)__i$_M_node_788 + 32].first
  # DEBUG D#184 => &D#185->_M_impl._M_key_compare
  # DEBUG D#82 => D#184
  # DEBUG __x => D#615
  # DEBUG __y => &D.49793
  # DEBUG this => D#82
  # DEBUG __lhs => D#615
  # DEBUG __rhs => &D.49793
  # DEBUG this => D#615
  # DEBUG __str => &D.49793
  _406 = MEM[(long unsigned int *)__i$_M_node_788 + 40B];
  # DEBUG D#1 => D#615
  # DEBUG this => D#1
  # DEBUG __size => _406
  # DEBUG D#1 => &D.49793
  # DEBUG this => D#1
  # DEBUG __osize => 15
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_498 = MIN_EXPR <_406, 15>;
  # DEBUG __len => D#601
  # DEBUG this => &D.49793
  # DEBUG D#6 => &D.49793
  # DEBUG this => D#6
  _411 = MEM[(char * *)__i$_M_node_788 + 32B];
  # DEBUG D#6 => D#615
  # DEBUG this => D#6
  # DEBUG __s1 => _411
  # DEBUG __s2 => &D.49793.D.11539._M_local_buf
  # DEBUG __n => D#601
  __r_412 = __builtin_memcmp (_411, &D.49793.D.11539._M_local_buf, __len_498);
  # DEBUG __r => NULL
  if (__r_412 == 0)
    goto <bb 96>;
  else
    goto <bb 99>;

  <bb 96>:
  # DEBUG __n1 => _406
  # DEBUG __n2 => 15
  _413 = _406 - 15;
  __d_414 = (const difference_type) _413;
  # DEBUG __d => __d_414
  if (__d_414 > 2147483647)
    goto <bb 100>;
  else
    goto <bb 97>;

  <bb 97>:
  if (__d_414 < -2147483648)
    goto <bb 101>;
  else
    goto <bb 98>;

  <bb 98>:
  __r_415 = (int) _413;

  <bb 99>:
  # __r_416 = PHI <__r_412(95), __r_415(98)>
  # DEBUG __r => __r_416
  # DEBUG D#668 => {CLOBBER}
  # DEBUG __size => D#668
  # DEBUG D#669 => {CLOBBER}
  # DEBUG __osize => D#669
  if (__r_416 >= 0)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_788
  __i$_M_node_401 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_788 + 16B];
  # DEBUG D#80 => __i$_M_node_788
  # DEBUG __x => D#80
  # DEBUG __x => NULL
  goto <bb 92>;

  <bb 101>:
  # DEBUG __r => NULL
  __i$_M_node_402 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_788 + 24B];
  # DEBUG D#81 => __i$_M_node_788
  # DEBUG __x => D#81
  # DEBUG __x => NULL
  goto <bb 92>;

  <bb 102>:
  # __i$_M_node_1017 = PHI <__i$_M_node_342(92)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_1017
  # DEBUG __i$_M_node => __i$_M_node_1017
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#54 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#54
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_1017 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 245>;
  else
    goto <bb 103>;

  <bb 103>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1017
  # DEBUG D#237 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1017]._M_value_field
  # DEBUG __r => D#237
  # DEBUG D#616 => &MEM[(struct pair &)__i$_M_node_1017 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.49793
  # DEBUG __y => D#616
  # DEBUG this => D#82
  # DEBUG __lhs => &D.49793
  # DEBUG __rhs => D#616
  # DEBUG this => &D.49793
  # DEBUG __str => D#616
  # DEBUG D#1 => &D.49793
  # DEBUG this => D#1
  # DEBUG __size => 15
  _419 = MEM[(long unsigned int *)__i$_M_node_1017 + 40B];
  # DEBUG D#1 => D#616
  # DEBUG this => D#1
  # DEBUG __osize => _419
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_419 <= 14)
    goto <bb 105>;
  else
    goto <bb 104>;

  <bb 104>:

  <bb 105>:
  # __len_421 = PHI <_419(103), 15(104)>
  # DEBUG __len => D#602
  # DEBUG this => D#616
  _422 = MEM[(char * *)__i$_M_node_1017 + 32B];
  # DEBUG D#6 => D#616
  # DEBUG this => D#6
  # DEBUG D#6 => &D.49793
  # DEBUG this => D#6
  # DEBUG __s1 => &D.49793.D.11539._M_local_buf
  # DEBUG __s2 => _422
  # DEBUG __n => D#602
  __r_424 = __builtin_memcmp (&D.49793.D.11539._M_local_buf, _422, __len_421);
  # DEBUG __r => NULL
  if (__r_424 == 0)
    goto <bb 106>;
  else
    goto <bb 109>;

  <bb 106>:
  # DEBUG __n1 => 15
  # DEBUG __n2 => _419
  _425 = 15 - _419;
  __d_426 = (const difference_type) _425;
  # DEBUG __d => __d_426
  if (__d_426 > 2147483647)
    goto <bb 114>;
  else
    goto <bb 107>;

  <bb 107>:
  if (__d_426 < -2147483648)
    goto <bb 110>;
  else
    goto <bb 108>;

  <bb 108>:
  __r_427 = (int) _425;

  <bb 109>:
  # __r_428 = PHI <__r_424(105), __r_427(108)>
  # DEBUG __r => __r_428
  # DEBUG D#674 => {CLOBBER}
  # DEBUG __size => D#674
  # DEBUG D#675 => {CLOBBER}
  # DEBUG __osize => D#675
  if (__r_428 < 0)
    goto <bb 245>;
  else
    goto <bb 114>;

  <bb 110>:
  # __i$_M_node_334 = PHI <__i$_M_node_1017(107), __i$_M_node_675(245)>
  # DEBUG this => &D.63398
  # DEBUG __a => &D.49793
  # DEBUG __b => NULL
  # DEBUG this => &D.63398.first
  # DEBUG __str => &D.49793
  # DEBUG this => &D.49793
  # DEBUG D#115 => &D.49793._M_dataplus
  # DEBUG this => &D.63398.first
  # DEBUG D#116 => &MEM[(struct basic_string *)&D.63398]._M_dataplus
  # DEBUG D#49 => D#115
  # DEBUG this => D#116
  # DEBUG __dat => &MEM[(struct basic_string *)&D.63398].D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#116
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.63398]._M_p = &MEM[(struct basic_string *)&D.63398].D.11539._M_local_buf;
  # DEBUG D#6 => &D.49793
  # DEBUG this => D#6
  # DEBUG D#7 => &D.49793
  # DEBUG this => D#7
  # DEBUG D#6 => &D.49793
  # DEBUG this => D#6
  # DEBUG this => &D.63398.first
  # DEBUG __beg => &D.49793.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49793 + 31B]
  # DEBUG this => &D.63398.first
  # DEBUG __beg => &D.49793.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49793 + 31B]
  # DEBUG this => &D.63398.first
  # DEBUG __beg => &D.49793.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49793 + 31B]
  # DEBUG __ptr => &D.49793.D.11539._M_local_buf
  # DEBUG __first => &D.49793.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.49793 + 31B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => &D.49793.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.49793 + 31B]
  # DEBUG __dnew => 15
  # DEBUG D#6 => &D.63398.first
  # DEBUG this => D#6
  # DEBUG __p => &MEM[(struct basic_string *)&D.63398].D.11539._M_local_buf
  # DEBUG __k1 => &D.49793.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.49793 + 31B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.63398].D.11539._M_local_buf
  # DEBUG __s => &D.49793.D.11539._M_local_buf
  # DEBUG __n => 15
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.63398].D.11539._M_local_buf
  # DEBUG __s2 => &D.49793.D.11539._M_local_buf
  # DEBUG __n => 15
  __builtin_memcpy (&MEM[(struct basic_string *)&D.63398].D.11539._M_local_buf, &D.49793.D.11539._M_local_buf, 15);
  # DEBUG this => &D.63398.first
  # DEBUG __n => 15
  # DEBUG D#10 => &D.63398.first
  # DEBUG __length => 15
  # DEBUG this => D#10
  MEM[(size_type *)&D.63398 + 8B] = 15;
  # DEBUG D#6 => &D.63398.first
  # DEBUG this => D#6
  # DEBUG __c1 => &MEM[(void *)&D.63398 + 31B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.63398 + 31] = 0;
  # DEBUG D#676 => {CLOBBER}
  # DEBUG __dnew => D#676
  D.63398.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_334
  # DEBUG __x => &D.63398
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_334;
  # DEBUG __x => &D.63398
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#236 => &__an
  D.63396 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.75.constprop (&gRoutingFunctionMap._M_t, __pos, &D.63398);

  <bb 111>:
  __i$_M_node_376 = MEM[(struct _Rb_tree_iterator *)&D.63396];
  # DEBUG __i$_M_node => __i$_M_node_376
  # DEBUG this => &D.63398
  # DEBUG D#72 => &D.63398.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _377 = MEM[(char * *)&D.63398];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63398].D.11539._M_local_buf != _377)
    goto <bb 112>;
  else
    goto <bb 113>;

  <bb 112>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _377
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _377
  # DEBUG this => D#55
  # DEBUG D.63352 => D#56
  operator delete (_377);

  <bb 113>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63398 ={v} {CLOBBER};
  pretmp_89 = MEM[(char * *)&D.49793];

  <bb 114>:
  # __i$_M_node_378 = PHI <__i$_M_node_1017(106), __i$_M_node_376(113), __i$_M_node_1017(109)>
  # prephitmp_90 = PHI <&D.49793.D.11539._M_local_buf(106), pretmp_89(113), &D.49793.D.11539._M_local_buf(109)>
  # DEBUG __i$_M_node => __i$_M_node_378
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_378
  # DEBUG D#238 => &MEM[(struct _Rb_tree_node *)__i$_M_node_378]._M_value_field
  # DEBUG __r => D#238
  # DEBUG D#240 => {CLOBBER}
  # DEBUG __i$_M_node => D#240
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_378 + 64] = valiant_flatfly;
  # DEBUG this => &D.49793
  # DEBUG this => &D.49793
  # DEBUG this => &D.49793
  # DEBUG D#732 => MEM[(char * *)&D.49793]
  # DEBUG D#6 => &D.49793
  # DEBUG this => D#6
  # DEBUG this => &D.49793
  if (&D.49793.D.11539._M_local_buf != prephitmp_90)
    goto <bb 118>;
  else
    goto <bb 119>;

<L17>:
  # DEBUG this => &D.63398
  # DEBUG D#72 => &D.63398.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _380 = MEM[(char * *)&D.63398];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63398].D.11539._M_local_buf != _380)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _380
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _380
  # DEBUG this => D#55
  # DEBUG D.63336 => D#56
  operator delete (_380);

  <bb 117>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63398 ={v} {CLOBBER};
  resx 32

  <bb 118>:
  # DEBUG D#64 => D.49793.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49793
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49793
  # DEBUG this => D#6
  # DEBUG this => &D.49793
  # DEBUG D#61 => &D.49793._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => D#732
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => D#732
  # DEBUG this => D#55
  # DEBUG D.59355 => D#56
  operator delete (prephitmp_90);

  <bb 119>:
  # DEBUG D#65 => &D.49793._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49793 ={v} {CLOBBER};
  # DEBUG this => &D.49792
  # DEBUG this => &D.49792
  # DEBUG D#36 => &D.49795
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#91 => &D.49795
  # DEBUG this => &D.49796
  # DEBUG __s => "ugal_flatfly"
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.49796
  # DEBUG D#88 => &D.49796._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.49796.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.49796]._M_p = &D.49796.D.11539._M_local_buf;
  # DEBUG __s => "ugal_flatfly"
  # DEBUG this => &D.49796
  # DEBUG __beg => "ugal_flatfly"
  # DEBUG __end => &MEM[(void *)"ugal_flatfly" + 12B]
  # DEBUG this => &D.49796
  # DEBUG __beg => "ugal_flatfly"
  # DEBUG __end => &MEM[(void *)"ugal_flatfly" + 12B]
  # DEBUG this => &D.49796
  # DEBUG __beg => "ugal_flatfly"
  # DEBUG __end => &MEM[(void *)"ugal_flatfly" + 12B]
  # DEBUG __ptr => "ugal_flatfly"
  # DEBUG __first => "ugal_flatfly"
  # DEBUG __last => &MEM[(void *)"ugal_flatfly" + 12B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => "ugal_flatfly"
  # DEBUG __last => &MEM[(void *)"ugal_flatfly" + 12B]
  # DEBUG __dnew => 12
  # DEBUG D#6 => &D.49796
  # DEBUG this => D#6
  # DEBUG __p => &D.49796.D.11539._M_local_buf
  # DEBUG __k1 => "ugal_flatfly"
  # DEBUG __k2 => &MEM[(void *)"ugal_flatfly" + 12B]
  # DEBUG __d => &D.49796.D.11539._M_local_buf
  # DEBUG __s => "ugal_flatfly"
  # DEBUG __n => 12
  # DEBUG __s1 => &D.49796.D.11539._M_local_buf
  # DEBUG __s2 => "ugal_flatfly"
  # DEBUG __n => 12
  __builtin_memcpy (&D.49796.D.11539._M_local_buf, "ugal_flatfly", 12);
  # DEBUG this => &D.49796
  # DEBUG __n => 12
  # DEBUG D#10 => &D.49796
  # DEBUG __length => 12
  # DEBUG this => D#10
  MEM[(size_type *)&D.49796 + 8B] = 12;
  # DEBUG D#6 => &D.49796
  # DEBUG this => D#6
  # DEBUG __c1 => &MEM[(void *)&D.49796 + 28B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.49796 + 28] = 0;
  # DEBUG D#677 => {CLOBBER}
  # DEBUG __dnew => D#677
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.49796
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.49796
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.49796
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_472 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#53 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#53
  # DEBUG D#186 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.49796
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_472
  if (__i$_M_node_472 == 0B)
    goto <bb 246>;
  else
    goto <bb 122>;

  <bb 120>:
  # __i$_M_node_267 = PHI <__i$_M_node_476(128), __i$_M_node_477(129)>
  # __i$_M_node_279 = PHI <__i$_M_node_505(128), __i$_M_node_512(129)>
  # DEBUG __y => __i$_M_node_279
  # DEBUG __x => __i$_M_node_267
  if (__i$_M_node_267 == 0B)
    goto <bb 130>;
  else
    goto <bb 121>;

  <bb 121>:
  goto <bb 123>;

  <bb 122>:

  <bb 123>:
  # __i$_M_node_505 = PHI <__i$_M_node_472(122), __i$_M_node_267(121)>
  # __i$_M_node_512 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(122), __i$_M_node_279(121)>
  # DEBUG __y => __i$_M_node_512
  # DEBUG __x => __i$_M_node_505
  # DEBUG __x => __i$_M_node_505
  # DEBUG __x => __i$_M_node_505
  # DEBUG this => __i$_M_node_505
  # DEBUG D#183 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_505]._M_value_field
  # DEBUG __r => D#183
  # DEBUG __x => D#183
  # DEBUG this => D#83
  # DEBUG D#617 => &MEM[(const struct pair &)__i$_M_node_505 + 32].first
  # DEBUG D#184 => &D#185->_M_impl._M_key_compare
  # DEBUG D#82 => D#184
  # DEBUG __x => D#617
  # DEBUG __y => &D.49796
  # DEBUG this => D#82
  # DEBUG __lhs => D#617
  # DEBUG __rhs => &D.49796
  # DEBUG this => D#617
  # DEBUG __str => &D.49796
  _481 = MEM[(long unsigned int *)__i$_M_node_505 + 40B];
  # DEBUG D#1 => D#617
  # DEBUG this => D#1
  # DEBUG __size => _481
  # DEBUG D#1 => &D.49796
  # DEBUG this => D#1
  # DEBUG __osize => 12
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_730 = MIN_EXPR <_481, 12>;
  # DEBUG __len => D#603
  # DEBUG this => &D.49796
  # DEBUG D#6 => &D.49796
  # DEBUG this => D#6
  _486 = MEM[(char * *)__i$_M_node_505 + 32B];
  # DEBUG D#6 => D#617
  # DEBUG this => D#6
  # DEBUG __s1 => _486
  # DEBUG __s2 => &D.49796.D.11539._M_local_buf
  # DEBUG __n => D#603
  __r_487 = __builtin_memcmp (_486, &D.49796.D.11539._M_local_buf, __len_730);
  # DEBUG __r => NULL
  if (__r_487 == 0)
    goto <bb 124>;
  else
    goto <bb 127>;

  <bb 124>:
  # DEBUG __n1 => _481
  # DEBUG __n2 => 12
  _488 = _481 - 12;
  __d_489 = (const difference_type) _488;
  # DEBUG __d => __d_489
  if (__d_489 > 2147483647)
    goto <bb 128>;
  else
    goto <bb 125>;

  <bb 125>:
  if (__d_489 < -2147483648)
    goto <bb 129>;
  else
    goto <bb 126>;

  <bb 126>:
  __r_490 = (int) _488;

  <bb 127>:
  # __r_491 = PHI <__r_487(123), __r_490(126)>
  # DEBUG __r => __r_491
  # DEBUG D#682 => {CLOBBER}
  # DEBUG __size => D#682
  # DEBUG D#683 => {CLOBBER}
  # DEBUG __osize => D#683
  if (__r_491 >= 0)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_505
  __i$_M_node_476 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_505 + 16B];
  # DEBUG D#80 => __i$_M_node_505
  # DEBUG __x => D#80
  # DEBUG __x => NULL
  goto <bb 120>;

  <bb 129>:
  # DEBUG __r => NULL
  __i$_M_node_477 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_505 + 24B];
  # DEBUG D#81 => __i$_M_node_505
  # DEBUG __x => D#81
  # DEBUG __x => NULL
  goto <bb 120>;

  <bb 130>:
  # __i$_M_node_1018 = PHI <__i$_M_node_279(120)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_1018
  # DEBUG __i$_M_node => __i$_M_node_1018
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#54 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#54
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_1018 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 246>;
  else
    goto <bb 131>;

  <bb 131>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1018
  # DEBUG D#237 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1018]._M_value_field
  # DEBUG __r => D#237
  # DEBUG D#618 => &MEM[(struct pair &)__i$_M_node_1018 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.49796
  # DEBUG __y => D#618
  # DEBUG this => D#82
  # DEBUG __lhs => &D.49796
  # DEBUG __rhs => D#618
  # DEBUG this => &D.49796
  # DEBUG __str => D#618
  # DEBUG D#1 => &D.49796
  # DEBUG this => D#1
  # DEBUG __size => 12
  _494 = MEM[(long unsigned int *)__i$_M_node_1018 + 40B];
  # DEBUG D#1 => D#618
  # DEBUG this => D#1
  # DEBUG __osize => _494
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_494 <= 11)
    goto <bb 133>;
  else
    goto <bb 132>;

  <bb 132>:

  <bb 133>:
  # __len_496 = PHI <_494(131), 12(132)>
  # DEBUG __len => D#604
  # DEBUG this => D#618
  _497 = MEM[(char * *)__i$_M_node_1018 + 32B];
  # DEBUG D#6 => D#618
  # DEBUG this => D#6
  # DEBUG D#6 => &D.49796
  # DEBUG this => D#6
  # DEBUG __s1 => &D.49796.D.11539._M_local_buf
  # DEBUG __s2 => _497
  # DEBUG __n => D#604
  __r_499 = __builtin_memcmp (&D.49796.D.11539._M_local_buf, _497, __len_496);
  # DEBUG __r => NULL
  if (__r_499 == 0)
    goto <bb 134>;
  else
    goto <bb 137>;

  <bb 134>:
  # DEBUG __n1 => 12
  # DEBUG __n2 => _494
  _500 = 12 - _494;
  __d_501 = (const difference_type) _500;
  # DEBUG __d => __d_501
  if (__d_501 > 2147483647)
    goto <bb 142>;
  else
    goto <bb 135>;

  <bb 135>:
  if (__d_501 < -2147483648)
    goto <bb 138>;
  else
    goto <bb 136>;

  <bb 136>:
  __r_502 = (int) _500;

  <bb 137>:
  # __r_503 = PHI <__r_499(133), __r_502(136)>
  # DEBUG __r => __r_503
  # DEBUG D#688 => {CLOBBER}
  # DEBUG __size => D#688
  # DEBUG D#689 => {CLOBBER}
  # DEBUG __osize => D#689
  if (__r_503 < 0)
    goto <bb 246>;
  else
    goto <bb 142>;

  <bb 138>:
  # __i$_M_node_478 = PHI <__i$_M_node_1018(135), __i$_M_node_473(246)>
  # DEBUG this => &D.63594
  # DEBUG __a => &D.49796
  # DEBUG __b => NULL
  # DEBUG this => &D.63594.first
  # DEBUG __str => &D.49796
  # DEBUG this => &D.49796
  # DEBUG D#115 => &D.49796._M_dataplus
  # DEBUG this => &D.63594.first
  # DEBUG D#116 => &MEM[(struct basic_string *)&D.63594]._M_dataplus
  # DEBUG D#49 => D#115
  # DEBUG this => D#116
  # DEBUG __dat => &MEM[(struct basic_string *)&D.63594].D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#116
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.63594]._M_p = &MEM[(struct basic_string *)&D.63594].D.11539._M_local_buf;
  # DEBUG D#6 => &D.49796
  # DEBUG this => D#6
  # DEBUG D#7 => &D.49796
  # DEBUG this => D#7
  # DEBUG D#6 => &D.49796
  # DEBUG this => D#6
  # DEBUG this => &D.63594.first
  # DEBUG __beg => &D.49796.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49796 + 28B]
  # DEBUG this => &D.63594.first
  # DEBUG __beg => &D.49796.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49796 + 28B]
  # DEBUG this => &D.63594.first
  # DEBUG __beg => &D.49796.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.49796 + 28B]
  # DEBUG __ptr => &D.49796.D.11539._M_local_buf
  # DEBUG __first => &D.49796.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.49796 + 28B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => &D.49796.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.49796 + 28B]
  # DEBUG __dnew => 12
  # DEBUG D#6 => &D.63594.first
  # DEBUG this => D#6
  # DEBUG __p => &MEM[(struct basic_string *)&D.63594].D.11539._M_local_buf
  # DEBUG __k1 => &D.49796.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.49796 + 28B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.63594].D.11539._M_local_buf
  # DEBUG __s => &D.49796.D.11539._M_local_buf
  # DEBUG __n => 12
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.63594].D.11539._M_local_buf
  # DEBUG __s2 => &D.49796.D.11539._M_local_buf
  # DEBUG __n => 12
  __builtin_memcpy (&MEM[(struct basic_string *)&D.63594].D.11539._M_local_buf, &D.49796.D.11539._M_local_buf, 12);
  # DEBUG this => &D.63594.first
  # DEBUG __n => 12
  # DEBUG D#10 => &D.63594.first
  # DEBUG __length => 12
  # DEBUG this => D#10
  MEM[(size_type *)&D.63594 + 8B] = 12;
  # DEBUG D#6 => &D.63594.first
  # DEBUG this => D#6
  # DEBUG __c1 => &MEM[(void *)&D.63594 + 28B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.63594 + 28] = 0;
  # DEBUG D#690 => {CLOBBER}
  # DEBUG __dnew => D#690
  D.63594.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_478
  # DEBUG __x => &D.63594
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_478;
  # DEBUG __x => &D.63594
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#236 => &__an
  D.63592 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.75.constprop (&gRoutingFunctionMap._M_t, __pos, &D.63594);

  <bb 139>:
  __i$_M_node_451 = MEM[(struct _Rb_tree_iterator *)&D.63592];
  # DEBUG __i$_M_node => __i$_M_node_451
  # DEBUG this => &D.63594
  # DEBUG D#72 => &D.63594.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _452 = MEM[(char * *)&D.63594];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63594].D.11539._M_local_buf != _452)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _452
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _452
  # DEBUG this => D#55
  # DEBUG D.63548 => D#56
  operator delete (_452);

  <bb 141>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63594 ={v} {CLOBBER};
  pretmp_855 = MEM[(char * *)&D.49796];

  <bb 142>:
  # __i$_M_node_453 = PHI <__i$_M_node_1018(134), __i$_M_node_451(141), __i$_M_node_1018(137)>
  # prephitmp_856 = PHI <&D.49796.D.11539._M_local_buf(134), pretmp_855(141), &D.49796.D.11539._M_local_buf(137)>
  # DEBUG __i$_M_node => __i$_M_node_453
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_453
  # DEBUG D#238 => &MEM[(struct _Rb_tree_node *)__i$_M_node_453]._M_value_field
  # DEBUG __r => D#238
  # DEBUG D#240 => {CLOBBER}
  # DEBUG __i$_M_node => D#240
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_453 + 64] = ugal_flatfly_onchip;
  # DEBUG this => &D.49796
  # DEBUG this => &D.49796
  # DEBUG this => &D.49796
  # DEBUG D#731 => MEM[(char * *)&D.49796]
  # DEBUG D#6 => &D.49796
  # DEBUG this => D#6
  # DEBUG this => &D.49796
  if (&D.49796.D.11539._M_local_buf != prephitmp_856)
    goto <bb 146>;
  else
    goto <bb 147>;

<L18>:
  # DEBUG this => &D.63594
  # DEBUG D#72 => &D.63594.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _455 = MEM[(char * *)&D.63594];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63594].D.11539._M_local_buf != _455)
    goto <bb 144>;
  else
    goto <bb 145>;

  <bb 144>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _455
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _455
  # DEBUG this => D#55
  # DEBUG D.63532 => D#56
  operator delete (_455);

  <bb 145>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63594 ={v} {CLOBBER};
  resx 33

  <bb 146>:
  # DEBUG D#64 => D.49796.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49796
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49796
  # DEBUG this => D#6
  # DEBUG this => &D.49796
  # DEBUG D#61 => &D.49796._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => D#731
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => D#731
  # DEBUG this => D#55
  # DEBUG D.59373 => D#56
  operator delete (prephitmp_856);

  <bb 147>:
  # DEBUG D#65 => &D.49796._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49796 ={v} {CLOBBER};
  # DEBUG this => &D.49795
  # DEBUG this => &D.49795
  # DEBUG D#36 => &D.49798
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#91 => &D.49798
  # DEBUG this => &D.49799
  # DEBUG __s => "ugal_pni_flatfly"
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.49799
  # DEBUG D#88 => &D.49799._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.49799.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.49799]._M_p = &D.49799.D.11539._M_local_buf;
  # DEBUG __s => "ugal_pni_flatfly"
  # DEBUG this => &D.49799
  # DEBUG __beg => "ugal_pni_flatfly"
  # DEBUG __end => &MEM[(void *)"ugal_pni_flatfly" + 16B]
  # DEBUG this => &D.49799
  # DEBUG __beg => "ugal_pni_flatfly"
  # DEBUG __end => &MEM[(void *)"ugal_pni_flatfly" + 16B]
  # DEBUG this => &D.49799
  # DEBUG __beg => "ugal_pni_flatfly"
  # DEBUG __end => &MEM[(void *)"ugal_pni_flatfly" + 16B]
  # DEBUG __ptr => "ugal_pni_flatfly"
  # DEBUG __first => "ugal_pni_flatfly"
  # DEBUG __last => &MEM[(void *)"ugal_pni_flatfly" + 16B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => "ugal_pni_flatfly"
  # DEBUG __last => &MEM[(void *)"ugal_pni_flatfly" + 16B]
  __dnew = 16;
  _539 = std::__cxx11::basic_string<char>::_M_create (&D.49799, &__dnew, 0);
  # DEBUG D#8 => &D.49799
  # DEBUG __p => _539
  # DEBUG this => D#8
  MEM[(char * *)&D.49799] = _539;
  __dnew.47_540 = __dnew;
  # DEBUG D#9 => &D.49799
  # DEBUG __capacity => __dnew.47_540
  # DEBUG this => D#9
  MEM[(size_type *)&D.49799 + 16B] = __dnew.47_540;
  # DEBUG D#6 => &D.49799
  # DEBUG this => D#6
  # DEBUG __p => _539
  # DEBUG __k1 => "ugal_pni_flatfly"
  # DEBUG __k2 => &MEM[(void *)"ugal_pni_flatfly" + 16B]
  # DEBUG __d => _539
  # DEBUG __s => "ugal_pni_flatfly"
  # DEBUG __n => 16
  # DEBUG __s1 => _539
  # DEBUG __s2 => "ugal_pni_flatfly"
  # DEBUG __n => 16
  __builtin_memcpy (_539, "ugal_pni_flatfly", 16);
  __dnew.47_543 = __dnew;
  # DEBUG this => &D.49799
  # DEBUG __n => __dnew.47_543
  # DEBUG D#10 => &D.49799
  # DEBUG __length => __dnew.47_543
  # DEBUG this => D#10
  MEM[(size_type *)&D.49799 + 8B] = __dnew.47_543;
  _544 = MEM[(char * *)&D.49799];
  # DEBUG D#6 => &D.49799
  # DEBUG this => D#6
  _545 = _544 + __dnew.47_543;
  # DEBUG __c1 => _545
  # DEBUG __c2 => D#11
  MEM[(char_type &)_545] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.49799
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.49799
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.49799
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_547 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#53 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#53
  # DEBUG D#186 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.49799
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_547
  if (__i$_M_node_547 == 0B)
    goto <bb 247>;
  else
    goto <bb 148>;

  <bb 148>:
  pretmp_881 = MEM[(long unsigned int *)&D.49799 + 8B];
  pretmp_831 = MEM[(char * *)&D.49799];
  goto <bb 151>;

  <bb 149>:
  # __i$_M_node_204 = PHI <__i$_M_node_551(156), __i$_M_node_552(157)>
  # __i$_M_node_255 = PHI <__i$_M_node_516(156), __i$_M_node_514(157)>
  # DEBUG __y => __i$_M_node_255
  # DEBUG __x => __i$_M_node_204
  if (__i$_M_node_204 == 0B)
    goto <bb 158>;
  else
    goto <bb 150>;

  <bb 150>:

  <bb 151>:
  # __i$_M_node_516 = PHI <__i$_M_node_547(148), __i$_M_node_204(150)>
  # __i$_M_node_514 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(148), __i$_M_node_255(150)>
  # DEBUG __y => __i$_M_node_514
  # DEBUG __x => __i$_M_node_516
  # DEBUG __x => __i$_M_node_516
  # DEBUG __x => __i$_M_node_516
  # DEBUG this => __i$_M_node_516
  # DEBUG D#183 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_516]._M_value_field
  # DEBUG __r => D#183
  # DEBUG __x => D#183
  # DEBUG this => D#83
  # DEBUG D#619 => &MEM[(const struct pair &)__i$_M_node_516 + 32].first
  # DEBUG D#184 => &D#185->_M_impl._M_key_compare
  # DEBUG D#82 => D#184
  # DEBUG __x => D#619
  # DEBUG __y => &D.49799
  # DEBUG this => D#82
  # DEBUG __lhs => D#619
  # DEBUG __rhs => &D.49799
  # DEBUG this => D#619
  # DEBUG __str => &D.49799
  _556 = MEM[(long unsigned int *)__i$_M_node_516 + 40B];
  # DEBUG D#1 => D#619
  # DEBUG this => D#1
  # DEBUG __size => _556
  # DEBUG D#730 => MEM[(long unsigned int *)&D.49799 + 8B]
  # DEBUG D#1 => &D.49799
  # DEBUG this => D#1
  # DEBUG __osize => D#730
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_182 = MIN_EXPR <_556, pretmp_881>;
  # DEBUG __len => D#605
  # DEBUG this => &D.49799
  # DEBUG D#729 => MEM[(char * *)&D.49799]
  # DEBUG D#6 => &D.49799
  # DEBUG this => D#6
  _561 = MEM[(char * *)__i$_M_node_516 + 32B];
  # DEBUG D#6 => D#619
  # DEBUG this => D#6
  # DEBUG __s1 => _561
  # DEBUG __s2 => D#729
  # DEBUG __n => D#605
  __r_562 = __builtin_memcmp (_561, pretmp_831, __len_182);
  # DEBUG __r => NULL
  if (__r_562 == 0)
    goto <bb 152>;
  else
    goto <bb 155>;

  <bb 152>:
  # DEBUG __n1 => _556
  # DEBUG __n2 => D#730
  _563 = _556 - pretmp_881;
  __d_564 = (const difference_type) _563;
  # DEBUG __d => __d_564
  if (__d_564 > 2147483647)
    goto <bb 156>;
  else
    goto <bb 153>;

  <bb 153>:
  if (__d_564 < -2147483648)
    goto <bb 157>;
  else
    goto <bb 154>;

  <bb 154>:
  __r_565 = (int) _563;

  <bb 155>:
  # __r_566 = PHI <__r_562(151), __r_565(154)>
  # DEBUG __r => __r_566
  # DEBUG D#695 => {CLOBBER}
  # DEBUG __size => D#695
  # DEBUG D#696 => {CLOBBER}
  # DEBUG __osize => D#696
  if (__r_566 >= 0)
    goto <bb 156>;
  else
    goto <bb 157>;

  <bb 156>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_516
  __i$_M_node_551 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_516 + 16B];
  # DEBUG D#80 => __i$_M_node_516
  # DEBUG __x => D#80
  # DEBUG __x => NULL
  goto <bb 149>;

  <bb 157>:
  # DEBUG __r => NULL
  __i$_M_node_552 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_516 + 24B];
  # DEBUG D#81 => __i$_M_node_516
  # DEBUG __x => D#81
  # DEBUG __x => NULL
  goto <bb 149>;

  <bb 158>:
  # __i$_M_node_1034 = PHI <__i$_M_node_255(149)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_1034
  # DEBUG __i$_M_node => __i$_M_node_1034
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#54 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#54
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_1034 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 248>;
  else
    goto <bb 159>;

  <bb 159>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1034
  # DEBUG D#237 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1034]._M_value_field
  # DEBUG __r => D#237
  # DEBUG D#620 => &MEM[(struct pair &)__i$_M_node_1034 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.49799
  # DEBUG __y => D#620
  # DEBUG this => D#82
  # DEBUG __lhs => &D.49799
  # DEBUG __rhs => D#620
  # DEBUG this => &D.49799
  # DEBUG __str => D#620
  # DEBUG D#728 => MEM[(long unsigned int *)&D.49799 + 8B]
  # DEBUG D#1 => &D.49799
  # DEBUG this => D#1
  # DEBUG __size => D#728
  _569 = MEM[(long unsigned int *)__i$_M_node_1034 + 40B];
  # DEBUG D#1 => D#620
  # DEBUG this => D#1
  # DEBUG __osize => _569
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_169 = MIN_EXPR <_569, pretmp_881>;
  # DEBUG __len => D#606
  # DEBUG this => D#620
  _572 = MEM[(char * *)__i$_M_node_1034 + 32B];
  # DEBUG D#6 => D#620
  # DEBUG this => D#6
  # DEBUG D#727 => MEM[(char * *)&D.49799]
  # DEBUG D#6 => &D.49799
  # DEBUG this => D#6
  # DEBUG __s1 => D#727
  # DEBUG __s2 => _572
  # DEBUG __n => D#606
  __r_574 = __builtin_memcmp (pretmp_831, _572, __len_169);
  # DEBUG __r => NULL
  if (__r_574 == 0)
    goto <bb 160>;
  else
    goto <bb 163>;

  <bb 160>:
  # DEBUG __n1 => D#728
  # DEBUG __n2 => _569
  _575 = pretmp_881 - _569;
  __d_576 = (const difference_type) _575;
  # DEBUG __d => __d_576
  if (__d_576 > 2147483647)
    goto <bb 174>;
  else
    goto <bb 161>;

  <bb 161>:
  if (__d_576 < -2147483648)
    goto <bb 164>;
  else
    goto <bb 162>;

  <bb 162>:
  __r_577 = (int) _575;

  <bb 163>:
  # __r_578 = PHI <__r_574(159), __r_577(162)>
  # DEBUG __r => __r_578
  # DEBUG D#701 => {CLOBBER}
  # DEBUG __size => D#701
  # DEBUG D#702 => {CLOBBER}
  # DEBUG __osize => D#702
  if (__r_578 < 0)
    goto <bb 248>;
  else
    goto <bb 174>;

  <bb 164>:
  # __i$_M_node_403 = PHI <__i$_M_node_1034(161), __i$_M_node_398(248)>
  # prephitmp_593 = PHI <pretmp_881(161), prephitmp_858(248)>
  # prephitmp_299 = PHI <pretmp_831(161), prephitmp_84(248)>
  # DEBUG this => &D.63790
  # DEBUG __a => &D.49799
  # DEBUG __b => NULL
  # DEBUG this => &D.63790.first
  # DEBUG __str => &D.49799
  # DEBUG this => &D.49799
  # DEBUG D#115 => &D.49799._M_dataplus
  # DEBUG this => &D.63790.first
  # DEBUG D#116 => &MEM[(struct basic_string *)&D.63790]._M_dataplus
  # DEBUG D#49 => D#115
  # DEBUG this => D#116
  # DEBUG __dat => &MEM[(struct basic_string *)&D.63790].D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#116
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.63790]._M_p = &MEM[(struct basic_string *)&D.63790].D.11539._M_local_buf;
  # DEBUG D#726 => MEM[(char * *)&D.49799]
  # DEBUG D#6 => &D.49799
  # DEBUG this => D#6
  # DEBUG D#725 => MEM[(long unsigned int *)&D.49799 + 8B]
  # DEBUG D#7 => &D.49799
  # DEBUG this => D#7
  _525 = prephitmp_299 + prephitmp_593;
  # DEBUG D#6 => &D.49799
  # DEBUG this => D#6
  # DEBUG this => &D.63790.first
  # DEBUG __beg => D#726
  # DEBUG __end => _525
  # DEBUG this => &D.63790.first
  # DEBUG __beg => D#726
  # DEBUG __end => _525
  # DEBUG this => &D.63790.first
  # DEBUG __beg => D#726
  # DEBUG __end => _525
  # DEBUG __ptr => D#726
  _630 = _525 != 0B;
  _629 = prephitmp_299 == 0B;
  _642 = _629 & _630;
  if (_642 != 0)
    goto <bb 249>;
  else
    goto <bb 251>;

  <bb 165>:
  _585 = std::__cxx11::basic_string<char>::_M_create (&D.63790.first, &__dnew, 0);

  <bb 166>:
  # DEBUG D#8 => &D.63790.first
  # DEBUG __p => _585
  # DEBUG this => D#8
  MEM[(char * *)&D.63790] = _585;
  __dnew.47_586 = __dnew;
  # DEBUG D#9 => &D.63790.first
  # DEBUG __capacity => __dnew.47_586
  # DEBUG this => D#9
  MEM[(size_type *)&D.63790 + 16B] = __dnew.47_586;
  # DEBUG D#6 => &D.63790.first
  # DEBUG this => D#6
  # DEBUG __p => _585
  # DEBUG __k1 => D#726
  # DEBUG __k2 => _525
  # DEBUG __d => _585
  # DEBUG __s => D#726
  # DEBUG __n => D#725
  goto <bb 169>;

  <bb 167>:
  # DEBUG D#6 => &D.63790.first
  # DEBUG this => D#6
  # DEBUG __p => &MEM[(struct basic_string *)&D.63790].D.11539._M_local_buf
  # DEBUG __k1 => D#726
  # DEBUG __k2 => _525
  # DEBUG __d => &MEM[(struct basic_string *)&D.63790].D.11539._M_local_buf
  # DEBUG __s => D#726
  # DEBUG __n => D#725
  if (prephitmp_593 == 1)
    goto <bb 168>;
  else
    goto <bb 169>;

  <bb 168>:
  _588 = MEM[(const char_type &)prephitmp_299];
  # DEBUG D#11 => D#726
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.63790].D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.63790 + 16] = _588;
  goto <bb 170>;

  <bb 169>:
  # _718 = PHI <&MEM[(struct basic_string *)&D.63790].D.11539._M_local_buf(167), _585(166)>
  # DEBUG D#6 => &D.63790.first
  # DEBUG this => D#6
  # DEBUG __p => _718
  # DEBUG __k1 => D#726
  # DEBUG __k2 => _525
  # DEBUG __d => _718
  # DEBUG __s => D#726
  # DEBUG __n => D#725
  # DEBUG __s1 => _718
  # DEBUG __s2 => D#726
  # DEBUG __n => D#725
  __builtin_memcpy (_718, prephitmp_299, prephitmp_593);
  pretmp_555 = __dnew;
  pretmp_210 = MEM[(char * *)&D.63790];

  <bb 170>:
  # prephitmp_211 = PHI <prephitmp_593(168), pretmp_555(169)>
  # prephitmp_880 = PHI <&MEM[(struct basic_string *)&D.63790].D.11539._M_local_buf(168), pretmp_210(169)>
  # DEBUG D#724 => __dnew
  # DEBUG this => &D.63790.first
  # DEBUG __n => D#724
  # DEBUG D#10 => &D.63790.first
  # DEBUG __length => D#724
  # DEBUG this => D#10
  MEM[(size_type *)&D.63790 + 8B] = prephitmp_211;
  # DEBUG D#6 => &D.63790.first
  # DEBUG this => D#6
  _591 = prephitmp_880 + prephitmp_211;
  # DEBUG __c1 => _591
  # DEBUG __c2 => D#11
  MEM[(char_type &)_591] = 0;
  __dnew ={v} {CLOBBER};
  D.63790.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_403
  # DEBUG __x => &D.63790
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_403;
  # DEBUG __x => &D.63790
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#236 => &__an
  D.63788 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.75.constprop (&gRoutingFunctionMap._M_t, __pos, &D.63790);

  <bb 171>:
  __i$_M_node_526 = MEM[(struct _Rb_tree_iterator *)&D.63788];
  # DEBUG __i$_M_node => __i$_M_node_526
  # DEBUG this => &D.63790
  # DEBUG D#72 => &D.63790.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _527 = MEM[(char * *)&D.63790];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63790].D.11539._M_local_buf != _527)
    goto <bb 172>;
  else
    goto <bb 173>;

  <bb 172>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _527
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _527
  # DEBUG this => D#55
  # DEBUG D.63744 => D#56
  operator delete (_527);

  <bb 173>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63790 ={v} {CLOBBER};
  pretmp_85 = MEM[(char * *)&D.49799];

  <bb 174>:
  # __i$_M_node_528 = PHI <__i$_M_node_1034(160), __i$_M_node_526(173), __i$_M_node_1034(163)>
  # prephitmp_86 = PHI <pretmp_831(160), pretmp_85(173), pretmp_831(163)>
  # DEBUG __i$_M_node => __i$_M_node_528
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_528
  # DEBUG D#238 => &MEM[(struct _Rb_tree_node *)__i$_M_node_528]._M_value_field
  # DEBUG __r => D#238
  # DEBUG D#240 => {CLOBBER}
  # DEBUG __i$_M_node => D#240
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_528 + 64] = ugal_pni_flatfly_onchip;
  # DEBUG this => &D.49799
  # DEBUG this => &D.49799
  # DEBUG this => &D.49799
  # DEBUG D#723 => MEM[(char * *)&D.49799]
  # DEBUG D#6 => &D.49799
  # DEBUG this => D#6
  # DEBUG this => &D.49799
  if (&D.49799.D.11539._M_local_buf != prephitmp_86)
    goto <bb 179>;
  else
    goto <bb 180>;

<L19>:
  # DEBUG this => &D.63790
  # DEBUG D#72 => &D.63790.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _530 = MEM[(char * *)&D.63790];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63790].D.11539._M_local_buf != _530)
    goto <bb 176>;
  else
    goto <bb 177>;

  <bb 176>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _530
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _530
  # DEBUG this => D#55
  # DEBUG D.63728 => D#56
  operator delete (_530);

  <bb 177>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63790 ={v} {CLOBBER};
  resx 34

<L24>:
  goto <bb 231> (<L10>);

  <bb 179>:
  # DEBUG D#64 => D.49799.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49799
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49799
  # DEBUG this => D#6
  # DEBUG this => &D.49799
  # DEBUG D#61 => &D.49799._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => D#723
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => D#723
  # DEBUG this => D#55
  # DEBUG D.59391 => D#56
  operator delete (prephitmp_86);

  <bb 180>:
  # DEBUG D#65 => &D.49799._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49799 ={v} {CLOBBER};
  # DEBUG this => &D.49798
  # DEBUG this => &D.49798
  # DEBUG D#36 => &D.49801
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG this => D#35
  # DEBUG D#91 => &D.49801
  # DEBUG this => &D.49802
  # DEBUG __s => "ugal_xyyx_flatfly"
  # DEBUG __a => D#91
  # DEBUG D#90 => D#91
  # DEBUG this => &D.49802
  # DEBUG D#88 => &D.49802._M_dataplus
  # DEBUG D#49 => D#90
  # DEBUG this => D#88
  # DEBUG __dat => &D.49802.D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#88
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.49802]._M_p = &D.49802.D.11539._M_local_buf;
  # DEBUG __s => "ugal_xyyx_flatfly"
  # DEBUG this => &D.49802
  # DEBUG __beg => "ugal_xyyx_flatfly"
  # DEBUG __end => &MEM[(void *)"ugal_xyyx_flatfly" + 17B]
  # DEBUG this => &D.49802
  # DEBUG __beg => "ugal_xyyx_flatfly"
  # DEBUG __end => &MEM[(void *)"ugal_xyyx_flatfly" + 17B]
  # DEBUG this => &D.49802
  # DEBUG __beg => "ugal_xyyx_flatfly"
  # DEBUG __end => &MEM[(void *)"ugal_xyyx_flatfly" + 17B]
  # DEBUG __ptr => "ugal_xyyx_flatfly"
  # DEBUG __first => "ugal_xyyx_flatfly"
  # DEBUG __last => &MEM[(void *)"ugal_xyyx_flatfly" + 17B]
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => "ugal_xyyx_flatfly"
  # DEBUG __last => &MEM[(void *)"ugal_xyyx_flatfly" + 17B]
  __dnew = 17;
  _614 = std::__cxx11::basic_string<char>::_M_create (&D.49802, &__dnew, 0);
  # DEBUG D#8 => &D.49802
  # DEBUG __p => _614
  # DEBUG this => D#8
  MEM[(char * *)&D.49802] = _614;
  __dnew.47_615 = __dnew;
  # DEBUG D#9 => &D.49802
  # DEBUG __capacity => __dnew.47_615
  # DEBUG this => D#9
  MEM[(size_type *)&D.49802 + 16B] = __dnew.47_615;
  # DEBUG D#6 => &D.49802
  # DEBUG this => D#6
  # DEBUG __p => _614
  # DEBUG __k1 => "ugal_xyyx_flatfly"
  # DEBUG __k2 => &MEM[(void *)"ugal_xyyx_flatfly" + 17B]
  # DEBUG __d => _614
  # DEBUG __s => "ugal_xyyx_flatfly"
  # DEBUG __n => 17
  # DEBUG __s1 => _614
  # DEBUG __s2 => "ugal_xyyx_flatfly"
  # DEBUG __n => 17
  __builtin_memcpy (_614, "ugal_xyyx_flatfly", 17);
  __dnew.47_618 = __dnew;
  # DEBUG this => &D.49802
  # DEBUG __n => __dnew.47_618
  # DEBUG D#10 => &D.49802
  # DEBUG __length => __dnew.47_618
  # DEBUG this => D#10
  MEM[(size_type *)&D.49802 + 8B] = __dnew.47_618;
  _619 = MEM[(char * *)&D.49802];
  # DEBUG D#6 => &D.49802
  # DEBUG this => D#6
  _620 = _619 + __dnew.47_618;
  # DEBUG __c1 => _620
  # DEBUG __c2 => D#11
  MEM[(char_type &)_620] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.49802
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.49802
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.49802
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_622 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#53 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#53
  # DEBUG D#186 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.49802
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_622
  if (__i$_M_node_622 == 0B)
    goto <bb 252>;
  else
    goto <bb 181>;

  <bb 181>:
  pretmp_755 = MEM[(long unsigned int *)&D.49802 + 8B];
  pretmp_73 = MEM[(char * *)&D.49802];
  goto <bb 184>;

  <bb 182>:
  # __i$_M_node_180 = PHI <__i$_M_node_626(189), __i$_M_node_627(190)>
  # __i$_M_node_179 = PHI <__i$_M_node_396(189), __i$_M_node_584(190)>
  # DEBUG __y => __i$_M_node_179
  # DEBUG __x => __i$_M_node_180
  if (__i$_M_node_180 == 0B)
    goto <bb 191>;
  else
    goto <bb 183>;

  <bb 183>:

  <bb 184>:
  # __i$_M_node_396 = PHI <__i$_M_node_622(181), __i$_M_node_180(183)>
  # __i$_M_node_584 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(181), __i$_M_node_179(183)>
  # DEBUG __y => __i$_M_node_584
  # DEBUG __x => __i$_M_node_396
  # DEBUG __x => __i$_M_node_396
  # DEBUG __x => __i$_M_node_396
  # DEBUG this => __i$_M_node_396
  # DEBUG D#183 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_396]._M_value_field
  # DEBUG __r => D#183
  # DEBUG __x => D#183
  # DEBUG this => D#83
  # DEBUG D#621 => &MEM[(const struct pair &)__i$_M_node_396 + 32].first
  # DEBUG D#184 => &D#185->_M_impl._M_key_compare
  # DEBUG D#82 => D#184
  # DEBUG __x => D#621
  # DEBUG __y => &D.49802
  # DEBUG this => D#82
  # DEBUG __lhs => D#621
  # DEBUG __rhs => &D.49802
  # DEBUG this => D#621
  # DEBUG __str => &D.49802
  _631 = MEM[(long unsigned int *)__i$_M_node_396 + 40B];
  # DEBUG D#1 => D#621
  # DEBUG this => D#1
  # DEBUG __size => _631
  # DEBUG D#722 => MEM[(long unsigned int *)&D.49802 + 8B]
  # DEBUG D#1 => &D.49802
  # DEBUG this => D#1
  # DEBUG __osize => D#722
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_170 = MIN_EXPR <_631, pretmp_755>;
  # DEBUG __len => D#607
  # DEBUG this => &D.49802
  # DEBUG D#721 => MEM[(char * *)&D.49802]
  # DEBUG D#6 => &D.49802
  # DEBUG this => D#6
  _636 = MEM[(char * *)__i$_M_node_396 + 32B];
  # DEBUG D#6 => D#621
  # DEBUG this => D#6
  # DEBUG __s1 => _636
  # DEBUG __s2 => D#721
  # DEBUG __n => D#607
  __r_637 = __builtin_memcmp (_636, pretmp_73, __len_170);
  # DEBUG __r => NULL
  if (__r_637 == 0)
    goto <bb 185>;
  else
    goto <bb 188>;

  <bb 185>:
  # DEBUG __n1 => _631
  # DEBUG __n2 => D#722
  _638 = _631 - pretmp_755;
  __d_639 = (const difference_type) _638;
  # DEBUG __d => __d_639
  if (__d_639 > 2147483647)
    goto <bb 189>;
  else
    goto <bb 186>;

  <bb 186>:
  if (__d_639 < -2147483648)
    goto <bb 190>;
  else
    goto <bb 187>;

  <bb 187>:
  __r_640 = (int) _638;

  <bb 188>:
  # __r_641 = PHI <__r_637(184), __r_640(187)>
  # DEBUG __r => __r_641
  # DEBUG D#707 => {CLOBBER}
  # DEBUG __size => D#707
  # DEBUG D#708 => {CLOBBER}
  # DEBUG __osize => D#708
  if (__r_641 >= 0)
    goto <bb 189>;
  else
    goto <bb 190>;

  <bb 189>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_396
  __i$_M_node_626 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_396 + 16B];
  # DEBUG D#80 => __i$_M_node_396
  # DEBUG __x => D#80
  # DEBUG __x => NULL
  goto <bb 182>;

  <bb 190>:
  # DEBUG __r => NULL
  __i$_M_node_627 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_396 + 24B];
  # DEBUG D#81 => __i$_M_node_396
  # DEBUG __x => D#81
  # DEBUG __x => NULL
  goto <bb 182>;

  <bb 191>:
  # __i$_M_node_1035 = PHI <__i$_M_node_179(182)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_1035
  # DEBUG __i$_M_node => __i$_M_node_1035
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#54 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#54
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_1035 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 253>;
  else
    goto <bb 192>;

  <bb 192>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1035
  # DEBUG D#237 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1035]._M_value_field
  # DEBUG __r => D#237
  # DEBUG D#622 => &MEM[(struct pair &)__i$_M_node_1035 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.49802
  # DEBUG __y => D#622
  # DEBUG this => D#82
  # DEBUG __lhs => &D.49802
  # DEBUG __rhs => D#622
  # DEBUG this => &D.49802
  # DEBUG __str => D#622
  # DEBUG D#720 => MEM[(long unsigned int *)&D.49802 + 8B]
  # DEBUG D#1 => &D.49802
  # DEBUG this => D#1
  # DEBUG __size => D#720
  _644 = MEM[(long unsigned int *)__i$_M_node_1035 + 40B];
  # DEBUG D#1 => D#622
  # DEBUG this => D#1
  # DEBUG __osize => _644
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_166 = MIN_EXPR <_644, pretmp_755>;
  # DEBUG __len => D#608
  # DEBUG this => D#622
  _647 = MEM[(char * *)__i$_M_node_1035 + 32B];
  # DEBUG D#6 => D#622
  # DEBUG this => D#6
  # DEBUG D#719 => MEM[(char * *)&D.49802]
  # DEBUG D#6 => &D.49802
  # DEBUG this => D#6
  # DEBUG __s1 => D#719
  # DEBUG __s2 => _647
  # DEBUG __n => D#608
  __r_649 = __builtin_memcmp (pretmp_73, _647, __len_166);
  # DEBUG __r => NULL
  if (__r_649 == 0)
    goto <bb 193>;
  else
    goto <bb 196>;

  <bb 193>:
  # DEBUG __n1 => D#720
  # DEBUG __n2 => _644
  _650 = pretmp_755 - _644;
  __d_651 = (const difference_type) _650;
  # DEBUG __d => __d_651
  if (__d_651 > 2147483647)
    goto <bb 207>;
  else
    goto <bb 194>;

  <bb 194>:
  if (__d_651 < -2147483648)
    goto <bb 197>;
  else
    goto <bb 195>;

  <bb 195>:
  __r_652 = (int) _650;

  <bb 196>:
  # __r_653 = PHI <__r_649(192), __r_652(195)>
  # DEBUG __r => __r_653
  # DEBUG D#713 => {CLOBBER}
  # DEBUG __size => D#713
  # DEBUG D#714 => {CLOBBER}
  # DEBUG __osize => D#714
  if (__r_653 < 0)
    goto <bb 253>;
  else
    goto <bb 207>;

  <bb 197>:
  # __i$_M_node_259 = PHI <__i$_M_node_1035(194), __i$_M_node_271(253)>
  # prephitmp_79 = PHI <pretmp_755(194), prephitmp_804(253)>
  # prephitmp_80 = PHI <pretmp_73(194), prephitmp_806(253)>
  # DEBUG this => &D.63986
  # DEBUG __a => &D.49802
  # DEBUG __b => NULL
  # DEBUG this => &D.63986.first
  # DEBUG __str => &D.49802
  # DEBUG this => &D.49802
  # DEBUG D#115 => &D.49802._M_dataplus
  # DEBUG this => &D.63986.first
  # DEBUG D#116 => &MEM[(struct basic_string *)&D.63986]._M_dataplus
  # DEBUG D#49 => D#115
  # DEBUG this => D#116
  # DEBUG __dat => &MEM[(struct basic_string *)&D.63986].D.11539._M_local_buf
  # DEBUG __a => D#49
  # DEBUG D#48 => D#49
  # DEBUG D#46 => D#116
  # DEBUG D#47 => D#48
  # DEBUG this => D#46
  # DEBUG __a => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG this => D#44
  # DEBUG D.56395 => D#45
  MEM[(struct _Alloc_hider *)&D.63986]._M_p = &MEM[(struct basic_string *)&D.63986].D.11539._M_local_buf;
  # DEBUG D#718 => MEM[(char * *)&D.49802]
  # DEBUG D#6 => &D.49802
  # DEBUG this => D#6
  # DEBUG D#717 => MEM[(long unsigned int *)&D.49802 + 8B]
  # DEBUG D#7 => &D.49802
  # DEBUG this => D#7
  _600 = prephitmp_80 + prephitmp_79;
  # DEBUG D#6 => &D.49802
  # DEBUG this => D#6
  # DEBUG this => &D.63986.first
  # DEBUG __beg => D#718
  # DEBUG __end => _600
  # DEBUG this => &D.63986.first
  # DEBUG __beg => D#718
  # DEBUG __end => _600
  # DEBUG this => &D.63986.first
  # DEBUG __beg => D#718
  # DEBUG __end => _600
  # DEBUG __ptr => D#718
  _654 = _600 != 0B;
  _315 = prephitmp_80 == 0B;
  _692 = _315 & _654;
  if (_692 != 0)
    goto <bb 254>;
  else
    goto <bb 256>;

  <bb 198>:
  _660 = std::__cxx11::basic_string<char>::_M_create (&D.63986.first, &__dnew, 0);

  <bb 199>:
  # DEBUG D#8 => &D.63986.first
  # DEBUG __p => _660
  # DEBUG this => D#8
  MEM[(char * *)&D.63986] = _660;
  __dnew.47_661 = __dnew;
  # DEBUG D#9 => &D.63986.first
  # DEBUG __capacity => __dnew.47_661
  # DEBUG this => D#9
  MEM[(size_type *)&D.63986 + 16B] = __dnew.47_661;
  # DEBUG D#6 => &D.63986.first
  # DEBUG this => D#6
  # DEBUG __p => _660
  # DEBUG __k1 => D#718
  # DEBUG __k2 => _600
  # DEBUG __d => _660
  # DEBUG __s => D#718
  # DEBUG __n => D#717
  goto <bb 202>;

  <bb 200>:
  # DEBUG D#6 => &D.63986.first
  # DEBUG this => D#6
  # DEBUG __p => &MEM[(struct basic_string *)&D.63986].D.11539._M_local_buf
  # DEBUG __k1 => D#718
  # DEBUG __k2 => _600
  # DEBUG __d => &MEM[(struct basic_string *)&D.63986].D.11539._M_local_buf
  # DEBUG __s => D#718
  # DEBUG __n => D#717
  if (prephitmp_79 == 1)
    goto <bb 201>;
  else
    goto <bb 202>;

  <bb 201>:
  _663 = MEM[(const char_type &)prephitmp_80];
  # DEBUG D#11 => D#718
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.63986].D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.63986 + 16] = _663;
  goto <bb 203>;

  <bb 202>:
  # _765 = PHI <&MEM[(struct basic_string *)&D.63986].D.11539._M_local_buf(200), _660(199)>
  # DEBUG D#6 => &D.63986.first
  # DEBUG this => D#6
  # DEBUG __p => _765
  # DEBUG __k1 => D#718
  # DEBUG __k2 => _600
  # DEBUG __d => _765
  # DEBUG __s => D#718
  # DEBUG __n => D#717
  # DEBUG __s1 => _765
  # DEBUG __s2 => D#718
  # DEBUG __n => D#717
  __builtin_memcpy (_765, prephitmp_80, prephitmp_79);
  pretmp_81 = __dnew;
  pretmp_753 = MEM[(char * *)&D.63986];

  <bb 203>:
  # prephitmp_752 = PHI <prephitmp_79(201), pretmp_81(202)>
  # prephitmp_754 = PHI <&MEM[(struct basic_string *)&D.63986].D.11539._M_local_buf(201), pretmp_753(202)>
  # DEBUG D#716 => __dnew
  # DEBUG this => &D.63986.first
  # DEBUG __n => D#716
  # DEBUG D#10 => &D.63986.first
  # DEBUG __length => D#716
  # DEBUG this => D#10
  MEM[(size_type *)&D.63986 + 8B] = prephitmp_752;
  # DEBUG D#6 => &D.63986.first
  # DEBUG this => D#6
  _666 = prephitmp_754 + prephitmp_752;
  # DEBUG __c1 => _666
  # DEBUG __c2 => D#11
  MEM[(char_type &)_666] = 0;
  __dnew ={v} {CLOBBER};
  D.63986.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_259
  # DEBUG __x => &D.63986
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_259;
  # DEBUG __x => &D.63986
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#236 => &__an
  D.63984 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.75.constprop (&gRoutingFunctionMap._M_t, __pos, &D.63986);

  <bb 204>:
  __i$_M_node_601 = MEM[(struct _Rb_tree_iterator *)&D.63984];
  # DEBUG __i$_M_node => __i$_M_node_601
  # DEBUG this => &D.63986
  # DEBUG D#72 => &D.63986.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _602 = MEM[(char * *)&D.63986];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63986].D.11539._M_local_buf != _602)
    goto <bb 205>;
  else
    goto <bb 206>;

  <bb 205>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _602
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _602
  # DEBUG this => D#55
  # DEBUG D.63940 => D#56
  operator delete (_602);

  <bb 206>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63986 ={v} {CLOBBER};
  pretmp_807 = MEM[(char * *)&D.49802];

  <bb 207>:
  # __i$_M_node_603 = PHI <__i$_M_node_1035(193), __i$_M_node_601(206), __i$_M_node_1035(196)>
  # prephitmp_78 = PHI <pretmp_73(193), pretmp_807(206), pretmp_73(196)>
  # DEBUG __i$_M_node => __i$_M_node_603
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_603
  # DEBUG D#238 => &MEM[(struct _Rb_tree_node *)__i$_M_node_603]._M_value_field
  # DEBUG __r => D#238
  # DEBUG D#240 => {CLOBBER}
  # DEBUG __i$_M_node => D#240
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_603 + 64] = ugal_xyyx_flatfly_onchip;
  # DEBUG this => &D.49802
  # DEBUG this => &D.49802
  # DEBUG this => &D.49802
  # DEBUG D#715 => MEM[(char * *)&D.49802]
  # DEBUG D#6 => &D.49802
  # DEBUG this => D#6
  # DEBUG this => &D.49802
  if (&D.49802.D.11539._M_local_buf != prephitmp_78)
    goto <bb 212>;
  else
    goto <bb 213>;

<L20>:
  # DEBUG this => &D.63986
  # DEBUG D#72 => &D.63986.first
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG this => D#72
  _605 = MEM[(char * *)&D.63986];
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  if (&MEM[(const struct basic_string *)&D.63986].D.11539._M_local_buf != _605)
    goto <bb 209>;
  else
    goto <bb 210>;

  <bb 209>:
  # DEBUG D#64 => MEM[(struct basic_string *)D#72].D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => D#72
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => D#72
  # DEBUG this => D#6
  # DEBUG this => D#72
  # DEBUG D#61 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _605
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _605
  # DEBUG this => D#55
  # DEBUG D.63924 => D#56
  operator delete (_605);

  <bb 210>:
  # DEBUG D#65 => &MEM[(struct basic_string *)D#72]._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.63986 ={v} {CLOBBER};
  resx 35

<L26>:
  goto <bb 235> (<L12>);

  <bb 212>:
  # DEBUG D#64 => D.49802.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49802
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49802
  # DEBUG this => D#6
  # DEBUG this => &D.49802
  # DEBUG D#61 => &D.49802._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => D#715
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => D#715
  # DEBUG this => D#55
  # DEBUG D.59408 => D#56
  operator delete (prephitmp_78);

  <bb 213>:
  # DEBUG D#65 => &D.49802._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49802 ={v} {CLOBBER};
  # DEBUG this => &D.49801
  # DEBUG this => &D.49801
  return;

<L0>:
  # DEBUG this => &D.49784
  # DEBUG this => &D.49784
  # DEBUG this => &D.49784
  _47 = MEM[(char * *)&D.49784];
  # DEBUG D#6 => &D.49784
  # DEBUG this => D#6
  # DEBUG this => &D.49784
  if (&D.49784.D.11539._M_local_buf != _47)
    goto <bb 215>;
  else
    goto <bb 216>;

  <bb 215>:
  # DEBUG D#64 => D.49784.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49784
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49784
  # DEBUG this => D#6
  # DEBUG this => &D.49784
  # DEBUG D#61 => &D.49784._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _47
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _47
  # DEBUG this => D#55
  # DEBUG D.59423 => D#56
  operator delete (_47);

  <bb 216>:
  # DEBUG D#65 => &D.49784._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49784 ={v} {CLOBBER};
  resx 2

<L21>:

<L2>:
  # DEBUG this => &D.49787
  # DEBUG this => &D.49787
  # DEBUG this => &D.49787
  _64 = MEM[(char * *)&D.49787];
  # DEBUG D#6 => &D.49787
  # DEBUG this => D#6
  # DEBUG this => &D.49787
  if (&D.49787.D.11539._M_local_buf != _64)
    goto <bb 219>;
  else
    goto <bb 220>;

  <bb 219>:
  # DEBUG D#64 => D.49787.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49787
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49787
  # DEBUG this => D#6
  # DEBUG this => &D.49787
  # DEBUG D#61 => &D.49787._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _64
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _64
  # DEBUG this => D#55
  # DEBUG D.59440 => D#56
  operator delete (_64);

  <bb 220>:
  # DEBUG D#65 => &D.49787._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49787 ={v} {CLOBBER};
  resx 6

<L4>:
  # DEBUG this => &D.49790
  # DEBUG this => &D.49790
  # DEBUG this => &D.49790
  _62 = MEM[(char * *)&D.49790];
  # DEBUG D#6 => &D.49790
  # DEBUG this => D#6
  # DEBUG this => &D.49790
  if (&D.49790.D.11539._M_local_buf != _62)
    goto <bb 222>;
  else
    goto <bb 223>;

  <bb 222>:
  # DEBUG D#64 => D.49790.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49790
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49790
  # DEBUG this => D#6
  # DEBUG this => &D.49790
  # DEBUG D#61 => &D.49790._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _62
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _62
  # DEBUG this => D#55
  # DEBUG D.59457 => D#56
  operator delete (_62);

  <bb 223>:
  # DEBUG D#65 => &D.49790._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49790 ={v} {CLOBBER};
  resx 10

<L6>:
  # DEBUG this => &D.49793
  # DEBUG this => &D.49793
  # DEBUG this => &D.49793
  _60 = MEM[(char * *)&D.49793];
  # DEBUG D#6 => &D.49793
  # DEBUG this => D#6
  # DEBUG this => &D.49793
  if (&D.49793.D.11539._M_local_buf != _60)
    goto <bb 225>;
  else
    goto <bb 226>;

  <bb 225>:
  # DEBUG D#64 => D.49793.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49793
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49793
  # DEBUG this => D#6
  # DEBUG this => &D.49793
  # DEBUG D#61 => &D.49793._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _60
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _60
  # DEBUG this => D#55
  # DEBUG D.59474 => D#56
  operator delete (_60);

  <bb 226>:
  # DEBUG D#65 => &D.49793._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49793 ={v} {CLOBBER};
  resx 14

<L8>:
  # DEBUG this => &D.49796
  # DEBUG this => &D.49796
  # DEBUG this => &D.49796
  _58 = MEM[(char * *)&D.49796];
  # DEBUG D#6 => &D.49796
  # DEBUG this => D#6
  # DEBUG this => &D.49796
  if (&D.49796.D.11539._M_local_buf != _58)
    goto <bb 228>;
  else
    goto <bb 229>;

  <bb 228>:
  # DEBUG D#64 => D.49796.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49796
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49796
  # DEBUG this => D#6
  # DEBUG this => &D.49796
  # DEBUG D#61 => &D.49796._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _58
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _58
  # DEBUG this => D#55
  # DEBUG D.59491 => D#56
  operator delete (_58);

  <bb 229>:
  # DEBUG D#65 => &D.49796._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49796 ={v} {CLOBBER};
  resx 18

<L23>:

<L10>:
  # DEBUG this => &D.49799
  # DEBUG this => &D.49799
  # DEBUG this => &D.49799
  _56 = MEM[(char * *)&D.49799];
  # DEBUG D#6 => &D.49799
  # DEBUG this => D#6
  # DEBUG this => &D.49799
  if (&D.49799.D.11539._M_local_buf != _56)
    goto <bb 232>;
  else
    goto <bb 233>;

  <bb 232>:
  # DEBUG D#64 => D.49799.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49799
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49799
  # DEBUG this => D#6
  # DEBUG this => &D.49799
  # DEBUG D#61 => &D.49799._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _56
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _56
  # DEBUG this => D#55
  # DEBUG D.59508 => D#56
  operator delete (_56);

  <bb 233>:
  # DEBUG D#65 => &D.49799._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49799 ={v} {CLOBBER};
  resx 22

<L25>:

<L12>:
  # DEBUG this => &D.49802
  # DEBUG this => &D.49802
  # DEBUG this => &D.49802
  _54 = MEM[(char * *)&D.49802];
  # DEBUG D#6 => &D.49802
  # DEBUG this => D#6
  # DEBUG this => &D.49802
  if (&D.49802.D.11539._M_local_buf != _54)
    goto <bb 236>;
  else
    goto <bb 237>;

  <bb 236>:
  # DEBUG D#64 => D.49802.D.11539._M_allocated_capacity
  # DEBUG D#63 => D#64
  # DEBUG this => &D.49802
  # DEBUG __size => D#63
  # DEBUG D#62 => D#63
  # DEBUG D#6 => &D.49802
  # DEBUG this => D#6
  # DEBUG this => &D.49802
  # DEBUG D#61 => &D.49802._M_dataplus
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62 + 1
  # DEBUG __p => _54
  # DEBUG __a => D#59
  # DEBUG __n => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG D#55 => D#57
  # DEBUG D#56 => D#58
  # DEBUG __p => _54
  # DEBUG this => D#55
  # DEBUG D.59525 => D#56
  operator delete (_54);

  <bb 237>:
  # DEBUG D#65 => &D.49802._M_dataplus
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG this => D#65
  D.49802 ={v} {CLOBBER};
  resx 26

  <bb 238>:
  # __i$_M_node_548 = PHI <__i$_M_node_1014(20), __i$_M_node_1014(13), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(2)>
  goto <bb 21>;

  <bb 239>:
  pretmp_959 = MEM[(long unsigned int *)&D.49787 + 8B];
  pretmp_93 = MEM[(char * *)&D.49787];

  <bb 240>:
  # __i$_M_node_684 = PHI <__i$_M_node_1015(46), __i$_M_node_1015(41), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(239)>
  # prephitmp_960 = PHI <pretmp_686(46), pretmp_686(41), pretmp_959(239)>
  # prephitmp_94 = PHI <pretmp_700(46), pretmp_700(41), pretmp_93(239)>
  goto <bb 47>;

  <bb 241>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L27>:
  goto <bb 218> (<L2>);

  <bb 243>:
  # DEBUG __first => D#737
  # DEBUG __last => _225
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => D#737
  # DEBUG __last => _225
  __dnew = prephitmp_900;
  if (prephitmp_900 > 15)
    goto <bb 48>;
  else
    goto <bb 50>;

  <bb 244>:
  # __i$_M_node_484 = PHI <__i$_M_node_1016(81), __i$_M_node_1016(74), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(63)>
  goto <bb 82>;

  <bb 245>:
  # __i$_M_node_675 = PHI <__i$_M_node_1017(109), __i$_M_node_1017(102), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(91)>
  goto <bb 110>;

  <bb 246>:
  # __i$_M_node_473 = PHI <__i$_M_node_1018(137), __i$_M_node_1018(130), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(119)>
  goto <bb 138>;

  <bb 247>:
  pretmp_857 = MEM[(long unsigned int *)&D.49799 + 8B];
  pretmp_83 = MEM[(char * *)&D.49799];

  <bb 248>:
  # __i$_M_node_398 = PHI <__i$_M_node_1034(163), __i$_M_node_1034(158), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(247)>
  # prephitmp_858 = PHI <pretmp_881(163), pretmp_881(158), pretmp_857(247)>
  # prephitmp_84 = PHI <pretmp_831(163), pretmp_831(158), pretmp_83(247)>
  goto <bb 164>;

  <bb 249>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L28>:
  goto <bb 231> (<L10>);

  <bb 251>:
  # DEBUG __first => D#726
  # DEBUG __last => _525
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => D#726
  # DEBUG __last => _525
  __dnew = prephitmp_593;
  if (prephitmp_593 > 15)
    goto <bb 165>;
  else
    goto <bb 167>;

  <bb 252>:
  pretmp_803 = MEM[(long unsigned int *)&D.49802 + 8B];
  pretmp_805 = MEM[(char * *)&D.49802];

  <bb 253>:
  # __i$_M_node_271 = PHI <__i$_M_node_1035(196), __i$_M_node_1035(191), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(252)>
  # prephitmp_804 = PHI <pretmp_755(196), pretmp_755(191), pretmp_803(252)>
  # prephitmp_806 = PHI <pretmp_73(196), pretmp_73(191), pretmp_805(252)>
  goto <bb 197>;

  <bb 254>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L29>:
  goto <bb 235> (<L12>);

  <bb 256>:
  # DEBUG __first => D#718
  # DEBUG __last => _600
  # DEBUG D#102 => &__first
  # DEBUG D.57289 => D#102
  # DEBUG __first => D#718
  # DEBUG __last => _600
  __dnew = prephitmp_79;
  if (prephitmp_79 > 15)
    goto <bb 198>;
  else
    goto <bb 200>;

}


