
;; Function virtual void Network::Display(std::ostream&) const (_ZNK7Network7DisplayERSo, funcdef_no=2127, decl_uid=44859, cgraph_uid=482, symbol_order=483)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void Network::Display(std::ostream&) const (const struct Network * const this, struct ostream & os)
{
  int r;
  int _5;
  long unsigned int _6;
  struct Router * _7;
  struct Module * _8;
  int (*__vtbl_ptr_type) () * _9;
  int (*__vtbl_ptr_type) () _10;
  struct Router * * const _14;
  long unsigned int _15;
  struct Router * const & _16;
  int _19;

  <bb 2>:
  # DEBUG r => 0
  # DEBUG r => 0
  _19 = this_4(D)->_size;
  if (_19 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # r_20 = PHI <0(4), r_13(6)>
  # DEBUG r => r_20
  _6 = (long unsigned int) r_20;
  # DEBUG D#62 => &this_4(D)->_routers
  _14 = MEM[(struct Router * * *)this_4(D) + 112B];
  # DEBUG D#61 => D#62
  # DEBUG __n => _6
  # DEBUG this => D#61
  _15 = _6 * 8;
  _16 = _14 + _15;
  _7 = *_16;
  _8 = &_7->D.43102.D.33681;
  _9 = MEM[(struct Module *)_7]._vptr.Module;
  _10 = MEM[(int (*__vtbl_ptr_type) () *)_9 + 16B];
  OBJ_TYPE_REF(_10;(const struct Module)_8->2) (_8, os_11(D));
  r_13 = r_20 + 1;
  # DEBUG r => r_13
  # DEBUG r => r_13
  _5 = this_4(D)->_size;
  if (_5 <= r_13)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

}



;; Function virtual void Network::Evaluate() (_ZN7Network8EvaluateEv, funcdef_no=2118, decl_uid=44854, cgraph_uid=473, symbol_order=474)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual void Network::Evaluate() (struct Network * const this)
{
  struct TimedModule * * * iter$_M_node;
  struct TimedModule * * iter$_M_last;
  struct TimedModule * * iter$_M_cur;
  struct const_iterator iter;
  struct TimedModule * _6;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () _8;
  struct TimedModule * * _15;

  <bb 2>:
  # DEBUG D#93 => &this_2(D)->_timed_modules
  # DEBUG this => D#93
  # DEBUG D#64 => &D#93->D.44805._M_impl._M_start
  # DEBUG this => &D.50776
  # DEBUG __x => D#64
  iter$_M_cur_5 = MEM[(const struct iterator &)this_2(D) + 296]._M_cur;
  iter$_M_last_13 = MEM[(const struct iterator &)this_2(D) + 296]._M_last;
  iter$_M_node_14 = MEM[(const struct iterator &)this_2(D) + 296]._M_node;
  # DEBUG this => &iter
  # DEBUG __x => &D.50776
  # DEBUG iter$_M_cur => iter$_M_cur_5
  # DEBUG iter$_M_last => iter$_M_last_13
  # DEBUG iter$_M_node => iter$_M_node_14

  <bb 3>:
  # iter$_M_cur_31 = PHI <iter$_M_cur_5(2), iter$_M_cur_27(7)>
  # iter$_M_last_24 = PHI <iter$_M_last_13(2), iter$_M_last_28(7)>
  # iter$_M_node_23 = PHI <iter$_M_node_14(2), iter$_M_node_26(7)>

  <bb 10>:
  # DEBUG iter$_M_node => iter$_M_node_23
  # DEBUG iter$_M_last => iter$_M_last_24
  # DEBUG iter$_M_cur => iter$_M_cur_31

  <bb 4>:
  # iter$_M_cur_30 = PHI <iter$_M_cur_31(10), iter$_M_cur_17(6)>
  # DEBUG iter$_M_cur => iter$_M_cur_30
  # DEBUG D#94 => &this_2(D)->_timed_modules
  # DEBUG this => D#94
  # DEBUG D#63 => &D#94->D.44805._M_impl._M_finish
  # DEBUG this => &D.50778
  # DEBUG __x => D#63
  _15 = MEM[(const struct iterator &)this_2(D) + 328]._M_cur;
  # DEBUG D#97 => MEM[(const struct iterator &)this_2(D) + 328]._M_first
  # DEBUG D.60522 => D#97
  # DEBUG D#96 => MEM[(const struct iterator &)this_2(D) + 328]._M_last
  # DEBUG D.60523 => D#96
  # DEBUG D#95 => MEM[(const struct iterator &)this_2(D) + 328]._M_node
  # DEBUG D.60524 => D#95
  # DEBUG __x => &iter
  # DEBUG __y => &D.50778
  # DEBUG D#74 => &iter
  # DEBUG D#75 => &D.50778
  # DEBUG __x => D#74
  # DEBUG __y => D#75
  if (_15 != iter$_M_cur_30)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  # DEBUG D#60 => &iter
  # DEBUG this => D#60
  _6 = MEM[(struct TimedModule * const &)iter$_M_cur_30];
  _7 = _6->D.33681._vptr.Module;
  _8 = MEM[(int (*__vtbl_ptr_type) () *)_7 + 32B];
  OBJ_TYPE_REF(_8;(struct TimedModule)_6->4) (_6);
  # DEBUG this => &iter
  iter$_M_cur_17 = iter$_M_cur_30 + 8;
  # DEBUG iter$_M_cur => iter$_M_cur_17
  if (iter$_M_cur_17 == iter$_M_last_24)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  <bb 7>:
  # DEBUG this => &iter
  iter$_M_node_26 = iter$_M_node_23 + 8;
  # DEBUG this => &iter
  # DEBUG __new_node => iter$_M_node_26
  # DEBUG iter$_M_node => iter$_M_node_26
  iter$_M_cur_27 = MEM[(struct TimedModule * * *)iter$_M_node_23 + 8B];
  # DEBUG __size => 8
  iter$_M_last_28 = iter$_M_cur_27 + 512;
  # DEBUG iter$_M_last => iter$_M_last_28
  # DEBUG iter$_M_cur => iter$_M_cur_27
  goto <bb 3>;

  <bb 8>:

  <bb 9>:
  iter ={v} {CLOBBER};
  return;

}



;; Function virtual void Network::WriteOutputs() (_ZN7Network12WriteOutputsEv, funcdef_no=2119, decl_uid=44856, cgraph_uid=474, symbol_order=475)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual void Network::WriteOutputs() (struct Network * const this)
{
  struct TimedModule * * * iter$_M_node;
  struct TimedModule * * iter$_M_last;
  struct TimedModule * * iter$_M_cur;
  struct const_iterator iter;
  struct TimedModule * _6;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () _8;
  struct TimedModule * * _15;

  <bb 2>:
  # DEBUG D#98 => &this_2(D)->_timed_modules
  # DEBUG this => D#98
  # DEBUG D#64 => &D#98->D.44805._M_impl._M_start
  # DEBUG this => &D.50785
  # DEBUG __x => D#64
  iter$_M_cur_5 = MEM[(const struct iterator &)this_2(D) + 296]._M_cur;
  iter$_M_last_13 = MEM[(const struct iterator &)this_2(D) + 296]._M_last;
  iter$_M_node_14 = MEM[(const struct iterator &)this_2(D) + 296]._M_node;
  # DEBUG this => &iter
  # DEBUG __x => &D.50785
  # DEBUG iter$_M_cur => iter$_M_cur_5
  # DEBUG iter$_M_last => iter$_M_last_13
  # DEBUG iter$_M_node => iter$_M_node_14

  <bb 3>:
  # iter$_M_cur_31 = PHI <iter$_M_cur_5(2), iter$_M_cur_27(7)>
  # iter$_M_last_24 = PHI <iter$_M_last_13(2), iter$_M_last_28(7)>
  # iter$_M_node_23 = PHI <iter$_M_node_14(2), iter$_M_node_26(7)>

  <bb 10>:
  # DEBUG iter$_M_node => iter$_M_node_23
  # DEBUG iter$_M_last => iter$_M_last_24
  # DEBUG iter$_M_cur => iter$_M_cur_31

  <bb 4>:
  # iter$_M_cur_30 = PHI <iter$_M_cur_31(10), iter$_M_cur_17(6)>
  # DEBUG iter$_M_cur => iter$_M_cur_30
  # DEBUG D#99 => &this_2(D)->_timed_modules
  # DEBUG this => D#99
  # DEBUG D#63 => &D#99->D.44805._M_impl._M_finish
  # DEBUG this => &D.50787
  # DEBUG __x => D#63
  _15 = MEM[(const struct iterator &)this_2(D) + 328]._M_cur;
  # DEBUG D#102 => MEM[(const struct iterator &)this_2(D) + 328]._M_first
  # DEBUG D.60547 => D#102
  # DEBUG D#101 => MEM[(const struct iterator &)this_2(D) + 328]._M_last
  # DEBUG D.60548 => D#101
  # DEBUG D#100 => MEM[(const struct iterator &)this_2(D) + 328]._M_node
  # DEBUG D.60549 => D#100
  # DEBUG __x => &iter
  # DEBUG __y => &D.50787
  # DEBUG D#74 => &iter
  # DEBUG D#75 => &D.50787
  # DEBUG __x => D#74
  # DEBUG __y => D#75
  if (_15 != iter$_M_cur_30)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  # DEBUG D#60 => &iter
  # DEBUG this => D#60
  _6 = MEM[(struct TimedModule * const &)iter$_M_cur_30];
  _7 = _6->D.33681._vptr.Module;
  _8 = MEM[(int (*__vtbl_ptr_type) () *)_7 + 40B];
  OBJ_TYPE_REF(_8;(struct TimedModule)_6->5) (_6);
  # DEBUG this => &iter
  iter$_M_cur_17 = iter$_M_cur_30 + 8;
  # DEBUG iter$_M_cur => iter$_M_cur_17
  if (iter$_M_cur_17 == iter$_M_last_24)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  <bb 7>:
  # DEBUG this => &iter
  iter$_M_node_26 = iter$_M_node_23 + 8;
  # DEBUG this => &iter
  # DEBUG __new_node => iter$_M_node_26
  # DEBUG iter$_M_node => iter$_M_node_26
  iter$_M_cur_27 = MEM[(struct TimedModule * * *)iter$_M_node_23 + 8B];
  # DEBUG __size => 8
  iter$_M_last_28 = iter$_M_cur_27 + 512;
  # DEBUG iter$_M_last => iter$_M_last_28
  # DEBUG iter$_M_cur => iter$_M_cur_27
  goto <bb 3>;

  <bb 8>:

  <bb 9>:
  iter ={v} {CLOBBER};
  return;

}



;; Function virtual void Network::ReadInputs() (_ZN7Network10ReadInputsEv, funcdef_no=2117, decl_uid=44852, cgraph_uid=472, symbol_order=473)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual void Network::ReadInputs() (struct Network * const this)
{
  struct TimedModule * * * iter$_M_node;
  struct TimedModule * * iter$_M_last;
  struct TimedModule * * iter$_M_cur;
  struct const_iterator iter;
  struct TimedModule * _6;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () _8;
  struct TimedModule * * _15;

  <bb 2>:
  # DEBUG D#88 => &this_2(D)->_timed_modules
  # DEBUG this => D#88
  # DEBUG D#64 => &D#88->D.44805._M_impl._M_start
  # DEBUG this => &D.50755
  # DEBUG __x => D#64
  iter$_M_cur_5 = MEM[(const struct iterator &)this_2(D) + 296]._M_cur;
  iter$_M_last_13 = MEM[(const struct iterator &)this_2(D) + 296]._M_last;
  iter$_M_node_14 = MEM[(const struct iterator &)this_2(D) + 296]._M_node;
  # DEBUG this => &iter
  # DEBUG __x => &D.50755
  # DEBUG iter$_M_cur => iter$_M_cur_5
  # DEBUG iter$_M_last => iter$_M_last_13
  # DEBUG iter$_M_node => iter$_M_node_14

  <bb 3>:
  # iter$_M_cur_31 = PHI <iter$_M_cur_5(2), iter$_M_cur_27(7)>
  # iter$_M_last_24 = PHI <iter$_M_last_13(2), iter$_M_last_28(7)>
  # iter$_M_node_23 = PHI <iter$_M_node_14(2), iter$_M_node_26(7)>

  <bb 10>:
  # DEBUG iter$_M_node => iter$_M_node_23
  # DEBUG iter$_M_last => iter$_M_last_24
  # DEBUG iter$_M_cur => iter$_M_cur_31

  <bb 4>:
  # iter$_M_cur_30 = PHI <iter$_M_cur_31(10), iter$_M_cur_17(6)>
  # DEBUG iter$_M_cur => iter$_M_cur_30
  # DEBUG D#89 => &this_2(D)->_timed_modules
  # DEBUG this => D#89
  # DEBUG D#63 => &D#89->D.44805._M_impl._M_finish
  # DEBUG this => &D.50766
  # DEBUG __x => D#63
  _15 = MEM[(const struct iterator &)this_2(D) + 328]._M_cur;
  # DEBUG D#92 => MEM[(const struct iterator &)this_2(D) + 328]._M_first
  # DEBUG D.60497 => D#92
  # DEBUG D#91 => MEM[(const struct iterator &)this_2(D) + 328]._M_last
  # DEBUG D.60498 => D#91
  # DEBUG D#90 => MEM[(const struct iterator &)this_2(D) + 328]._M_node
  # DEBUG D.60499 => D#90
  # DEBUG __x => &iter
  # DEBUG __y => &D.50766
  # DEBUG D#74 => &iter
  # DEBUG D#75 => &D.50766
  # DEBUG __x => D#74
  # DEBUG __y => D#75
  if (_15 != iter$_M_cur_30)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  # DEBUG D#60 => &iter
  # DEBUG this => D#60
  _6 = MEM[(struct TimedModule * const &)iter$_M_cur_30];
  _7 = _6->D.33681._vptr.Module;
  _8 = MEM[(int (*__vtbl_ptr_type) () *)_7 + 24B];
  OBJ_TYPE_REF(_8;(struct TimedModule)_6->3) (_6);
  # DEBUG this => &iter
  iter$_M_cur_17 = iter$_M_cur_30 + 8;
  # DEBUG iter$_M_cur => iter$_M_cur_17
  if (iter$_M_cur_17 == iter$_M_last_24)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  <bb 7>:
  # DEBUG this => &iter
  iter$_M_node_26 = iter$_M_node_23 + 8;
  # DEBUG this => &iter
  # DEBUG __new_node => iter$_M_node_26
  # DEBUG iter$_M_node => iter$_M_node_26
  iter$_M_cur_27 = MEM[(struct TimedModule * * *)iter$_M_node_23 + 8B];
  # DEBUG __size => 8
  iter$_M_last_28 = iter$_M_cur_27 + 512;
  # DEBUG iter$_M_last => iter$_M_last_28
  # DEBUG iter$_M_cur => iter$_M_cur_27
  goto <bb 3>;

  <bb 8>:

  <bb 9>:
  iter ={v} {CLOBBER};
  return;

}



;; Function Channel<T>::~Channel() [with T = Credit] (_ZN7ChannelI6CreditED2Ev, funcdef_no=2193, decl_uid=50332, cgraph_uid=548, symbol_order=549)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Channel<T>::~Channel() [with T = Credit] (struct Channel * const this)
{
  struct pair * * __nstart;
  struct pair * * _11;
  struct Module * * _13;
  char * const _14;
  const char * _15;
  char * const _16;
  const char * _17;
  struct pair * * _18;
  struct pair * * _19;
  struct pair * _22;
  struct pair * * pretmp_31;
  struct pair * * prephitmp_32;

  <bb 2>:
  this_2(D)->D.50335.D.33681._vptr.Module = &MEM[(void *)&_ZTV7ChannelI6CreditE + 16B];
  # DEBUG D#438 => &this_2(D)->_wait_queue
  # DEBUG this => D#438
  # DEBUG D#436 => &D#438->c
  # DEBUG this => D#436
  # DEBUG D#427 => &D#436->D.50247
  # DEBUG this => D#427
  # DEBUG this => D#436
  # DEBUG D#77 => &D#436->D.50247._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#77
  # DEBUG D#435 => MEM[(const struct iterator &)D#436 + 48]._M_cur
  # DEBUG D.63141 => D#435
  # DEBUG D#434 => MEM[(const struct iterator &)D#436 + 48]._M_first
  # DEBUG D.63142 => D#434
  # DEBUG D#433 => MEM[(const struct iterator &)D#436 + 48]._M_last
  # DEBUG D.63143 => D#433
  # DEBUG D#432 => MEM[(const struct iterator &)D#436 + 48]._M_node
  # DEBUG D.63144 => D#432
  # DEBUG this => D#436
  # DEBUG D#76 => &D#436->D.50247._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#76
  # DEBUG D#431 => MEM[(const struct iterator &)D#436 + 16]._M_cur
  # DEBUG D.63137 => D#431
  # DEBUG D#430 => MEM[(const struct iterator &)D#436 + 16]._M_first
  # DEBUG D.63138 => D#430
  # DEBUG D#429 => MEM[(const struct iterator &)D#436 + 16]._M_last
  # DEBUG D.63139 => D#429
  # DEBUG D#428 => MEM[(const struct iterator &)D#436 + 16]._M_node
  # DEBUG D.63140 => D#428
  # DEBUG D#78 => D#436
  # DEBUG this => D#78
  # DEBUG __first => D#79
  # DEBUG __last => D#80
  # DEBUG D.63125 => D#81
  # DEBUG D#851 => &MEM[(struct deque *)this_2(D) + 120B].D.50247
  # DEBUG this => D#851
  _11 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;
  if (_11 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _18 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_finish._M_node;
  _19 = _18 + 8;
  __nstart_20 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_start._M_node;
  # DEBUG D#418 => D#851
  # DEBUG __nstart => __nstart_20
  # DEBUG __nfinish => _19
  # DEBUG this => D#418
  # DEBUG __n => __nstart_20
  if (_19 <= __nstart_20)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_55 = PHI <__nstart_20(4), __nstart_23(6)>
  # DEBUG __n => __nstart_55
  _22 = *__nstart_55;
  # DEBUG this => D#416
  # DEBUG __p => _22
  # DEBUG __size => 16
  # DEBUG D#415 => &D#417->_M_impl
  # DEBUG D#413 => D#415
  # DEBUG __p => _22
  # DEBUG __a => D#413
  # DEBUG __n => D#414
  # DEBUG D#412 => D#414
  # DEBUG D#411 => D#413
  # DEBUG D#409 => D#411
  # DEBUG D#410 => D#412
  # DEBUG __p => _22
  # DEBUG this => D#409
  # DEBUG D.68526 => D#410
  operator delete (_22);
  __nstart_23 = __nstart_55 + 8;
  # DEBUG __n => __nstart_23
  # DEBUG __n => __nstart_23
  if (_19 <= __nstart_23)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 16>:
  pretmp_31 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;

  <bb 8>:
  # prephitmp_32 = PHI <pretmp_31(16), _11(3)>
  # DEBUG D#425 => D#851->_M_impl._M_map_size
  # DEBUG D#852 => MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
  # DEBUG D#423 => D#851
  # DEBUG D#424 => D#425
  # DEBUG __p => D#852
  # DEBUG this => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#421
  # DEBUG this => D#420
  # DEBUG D#419 => D#420
  # DEBUG this => D#419
  # DEBUG this => NULL
  # DEBUG D.63059 => NULL
  # DEBUG this => NULL
  # DEBUG D#341 => &__map_alloc
  # DEBUG D#342 => D#422
  # DEBUG __p => D#852
  # DEBUG __a => D#341
  # DEBUG __n => D#342
  # DEBUG D#340 => D#342
  # DEBUG D#339 => D#341
  # DEBUG D#337 => D#339
  # DEBUG D#338 => D#340
  # DEBUG __p => D#852
  # DEBUG this => D#337
  # DEBUG D.68536 => D#338
  operator delete (prephitmp_32);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#426 => &D#851->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
  # DEBUG D#437 => &this_2(D)->D.50335
  # DEBUG this => D#437
  # DEBUG D#850 => &MEM[(struct TimedModule *)this_2(D)].D.33681
  # DEBUG this => D#850
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#196 => &D#850->_children
  # DEBUG this => D#196
  # DEBUG D#190 => &D#196->D.29201
  # DEBUG this => D#190
  # DEBUG D#193 => D#196->D.29201._M_impl._M_finish
  # DEBUG D#192 => D#196->D.29201._M_impl._M_start
  # DEBUG D#111 => D#192
  # DEBUG D#112 => D#193
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.61023 => D#113
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  # DEBUG D#107 => D#109
  # DEBUG D#108 => D#110
  # DEBUG __first => D#107
  # DEBUG __last => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#107
  # DEBUG D#103 => D#105
  # DEBUG D#104 => D#106
  # DEBUG D.60566 => D#103
  # DEBUG D.60565 => D#104
  # DEBUG D#191 => &D#196->D.29201
  # DEBUG this => D#191
  # DEBUG D#189 => D#191->_M_impl._M_end_of_storage
  # DEBUG D#188 => (long int) D#189
  _13 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#187 => (long int) _13
  # DEBUG D#186 => D#188 - D#187
  # DEBUG D#185 => D#186 /[ex] 8
  # DEBUG D#182 => D#191
  # DEBUG D#183 => (long unsigned int) D#185
  # DEBUG __p => _13
  # DEBUG this => D#182
  # DEBUG __n => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  if (_13 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#179 => &D#180->_M_impl
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#181
  # DEBUG __p => _13
  # DEBUG __a => D#177
  # DEBUG __n => D#178
  # DEBUG D#176 => D#178
  # DEBUG D#175 => D#177
  # DEBUG D#173 => D#175
  # DEBUG D#174 => D#176
  # DEBUG __p => _13
  # DEBUG this => D#173
  # DEBUG D.68476 => D#174
  operator delete (_13);

  <bb 11>:
  # DEBUG D#184 => &D#191->_M_impl
  # DEBUG this => D#184
  # DEBUG this => D#184
  # DEBUG this => D#184
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#195 => &D#850->_fullname
  # DEBUG this => D#195
  # DEBUG this => D#195
  # DEBUG this => D#195
  _14 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  _15 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11553._M_local_buf;
  if (_14 != _15)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#195].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#195
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  # DEBUG D#162 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _14
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _14
  # DEBUG this => D#156
  # DEBUG D.68489 => D#157
  operator delete (_14);

  <bb 13>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#194 => &D#850->_name
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG this => D#194
  _16 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  _17 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11553._M_local_buf;
  if (_16 != _17)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#194].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#194
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  # DEBUG D#162 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _16
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _16
  # DEBUG this => D#156
  # DEBUG D.68504 => D#157
  operator delete (_16);

  <bb 15>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function Channel<T>::~Channel() [with T = Credit] (_ZN7ChannelI6CreditED0Ev, funcdef_no=2195, decl_uid=50326, cgraph_uid=550, symbol_order=551)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Channel<T>::~Channel() [with T = Credit] (struct Channel * const this)
{
  struct pair * * __nstart;
  struct pair * * _11;
  struct Module * * _14;
  char * const _15;
  const char * _16;
  char * const _17;
  const char * _18;
  struct pair * * _19;
  struct pair * * _20;
  struct pair * _23;
  struct pair * * pretmp_32;
  struct pair * * prephitmp_33;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.50335.D.33681._vptr.Module = &MEM[(void *)&_ZTV7ChannelI6CreditE + 16B];
  # DEBUG D#438 => &this_2(D)->_wait_queue
  # DEBUG this => D#438
  # DEBUG D#436 => &D#438->c
  # DEBUG this => D#436
  # DEBUG D#427 => &D#436->D.50247
  # DEBUG this => D#427
  # DEBUG this => D#436
  # DEBUG D#77 => &D#436->D.50247._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#77
  # DEBUG D#435 => MEM[(const struct iterator &)D#436 + 48]._M_cur
  # DEBUG D.63141 => D#435
  # DEBUG D#434 => MEM[(const struct iterator &)D#436 + 48]._M_first
  # DEBUG D.63142 => D#434
  # DEBUG D#433 => MEM[(const struct iterator &)D#436 + 48]._M_last
  # DEBUG D.63143 => D#433
  # DEBUG D#432 => MEM[(const struct iterator &)D#436 + 48]._M_node
  # DEBUG D.63144 => D#432
  # DEBUG this => D#436
  # DEBUG D#76 => &D#436->D.50247._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#76
  # DEBUG D#431 => MEM[(const struct iterator &)D#436 + 16]._M_cur
  # DEBUG D.63137 => D#431
  # DEBUG D#430 => MEM[(const struct iterator &)D#436 + 16]._M_first
  # DEBUG D.63138 => D#430
  # DEBUG D#429 => MEM[(const struct iterator &)D#436 + 16]._M_last
  # DEBUG D.63139 => D#429
  # DEBUG D#428 => MEM[(const struct iterator &)D#436 + 16]._M_node
  # DEBUG D.63140 => D#428
  # DEBUG D#78 => D#436
  # DEBUG this => D#78
  # DEBUG __first => D#79
  # DEBUG __last => D#80
  # DEBUG D.63125 => D#81
  # DEBUG D#854 => &MEM[(struct deque *)this_2(D) + 120B].D.50247
  # DEBUG this => D#854
  _11 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;
  if (_11 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _19 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_finish._M_node;
  _20 = _19 + 8;
  __nstart_21 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_start._M_node;
  # DEBUG D#418 => D#854
  # DEBUG __nstart => __nstart_21
  # DEBUG __nfinish => _20
  # DEBUG this => D#418
  # DEBUG __n => __nstart_21
  if (_20 <= __nstart_21)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_56 = PHI <__nstart_21(4), __nstart_24(6)>
  # DEBUG __n => __nstart_56
  _23 = *__nstart_56;
  # DEBUG this => D#416
  # DEBUG __p => _23
  # DEBUG __size => 16
  # DEBUG D#415 => &D#417->_M_impl
  # DEBUG D#413 => D#415
  # DEBUG __p => _23
  # DEBUG __a => D#413
  # DEBUG __n => D#414
  # DEBUG D#412 => D#414
  # DEBUG D#411 => D#413
  # DEBUG D#409 => D#411
  # DEBUG D#410 => D#412
  # DEBUG __p => _23
  # DEBUG this => D#409
  # DEBUG D.68620 => D#410
  operator delete (_23);
  __nstart_24 = __nstart_56 + 8;
  # DEBUG __n => __nstart_24
  # DEBUG __n => __nstart_24
  if (_20 <= __nstart_24)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 16>:
  pretmp_32 = MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map;

  <bb 8>:
  # prephitmp_33 = PHI <pretmp_32(16), _11(3)>
  # DEBUG D#425 => D#854->_M_impl._M_map_size
  # DEBUG D#855 => MEM[(struct _Deque_base *)this_2(D) + 120B]._M_impl._M_map
  # DEBUG D#423 => D#854
  # DEBUG D#424 => D#425
  # DEBUG __p => D#855
  # DEBUG this => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#421
  # DEBUG this => D#420
  # DEBUG D#419 => D#420
  # DEBUG this => D#419
  # DEBUG this => NULL
  # DEBUG D.63059 => NULL
  # DEBUG this => NULL
  # DEBUG D#341 => &__map_alloc
  # DEBUG D#342 => D#422
  # DEBUG __p => D#855
  # DEBUG __a => D#341
  # DEBUG __n => D#342
  # DEBUG D#340 => D#342
  # DEBUG D#339 => D#341
  # DEBUG D#337 => D#339
  # DEBUG D#338 => D#340
  # DEBUG __p => D#855
  # DEBUG this => D#337
  # DEBUG D.68630 => D#338
  operator delete (prephitmp_33);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#426 => &D#854->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)this_2(D) + 120] ={v} {CLOBBER};
  # DEBUG D#437 => &this_2(D)->D.50335
  # DEBUG this => D#437
  # DEBUG D#853 => &MEM[(struct TimedModule *)this_2(D)].D.33681
  # DEBUG this => D#853
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#196 => &D#853->_children
  # DEBUG this => D#196
  # DEBUG D#190 => &D#196->D.29201
  # DEBUG this => D#190
  # DEBUG D#193 => D#196->D.29201._M_impl._M_finish
  # DEBUG D#192 => D#196->D.29201._M_impl._M_start
  # DEBUG D#111 => D#192
  # DEBUG D#112 => D#193
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.61023 => D#113
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  # DEBUG D#107 => D#109
  # DEBUG D#108 => D#110
  # DEBUG __first => D#107
  # DEBUG __last => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#107
  # DEBUG D#103 => D#105
  # DEBUG D#104 => D#106
  # DEBUG D.60566 => D#103
  # DEBUG D.60565 => D#104
  # DEBUG D#191 => &D#196->D.29201
  # DEBUG this => D#191
  # DEBUG D#189 => D#191->_M_impl._M_end_of_storage
  # DEBUG D#188 => (long int) D#189
  _14 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#187 => (long int) _14
  # DEBUG D#186 => D#188 - D#187
  # DEBUG D#185 => D#186 /[ex] 8
  # DEBUG D#182 => D#191
  # DEBUG D#183 => (long unsigned int) D#185
  # DEBUG __p => _14
  # DEBUG this => D#182
  # DEBUG __n => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  if (_14 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#179 => &D#180->_M_impl
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#181
  # DEBUG __p => _14
  # DEBUG __a => D#177
  # DEBUG __n => D#178
  # DEBUG D#176 => D#178
  # DEBUG D#175 => D#177
  # DEBUG D#173 => D#175
  # DEBUG D#174 => D#176
  # DEBUG __p => _14
  # DEBUG this => D#173
  # DEBUG D.68570 => D#174
  operator delete (_14);

  <bb 11>:
  # DEBUG D#184 => &D#191->_M_impl
  # DEBUG this => D#184
  # DEBUG this => D#184
  # DEBUG this => D#184
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#195 => &D#853->_fullname
  # DEBUG this => D#195
  # DEBUG this => D#195
  # DEBUG this => D#195
  _15 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  _16 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11553._M_local_buf;
  if (_15 != _16)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#195].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#195
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  # DEBUG D#162 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _15
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _15
  # DEBUG this => D#156
  # DEBUG D.68583 => D#157
  operator delete (_15);

  <bb 13>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#194 => &D#853->_name
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG this => D#194
  _17 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  _18 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11553._M_local_buf;
  if (_17 != _18)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#194].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#194
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  # DEBUG D#162 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _17
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _17
  # DEBUG this => D#156
  # DEBUG D.68598 => D#157
  operator delete (_17);

  <bb 15>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function void Network::DumpChannelMap(std::ostream&, const string&) const (_ZNK7Network14DumpChannelMapERSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2128, decl_uid=44863, cgraph_uid=483, symbol_order=484)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void Network::DumpChannelMap(std::ostream&, const string&) const (const struct Network * const this, struct ostream & os, const struct string & prefix)
{
  char_type D.69053;
  char __c;
  char_type D.69050;
  char __c;
  char_type D.69047;
  struct basic_ostream & D.69041;
  char_type D.69038;
  char __c;
  char_type D.69035;
  char __c;
  char_type D.69032;
  struct basic_ostream & D.69026;
  char_type D.69023;
  char __c;
  char_type D.69020;
  char __c;
  char_type D.69017;
  struct basic_ostream & D.69011;
  char_type D.69008;
  char __c;
  char_type D.69005;
  char __c;
  char_type D.69002;
  struct basic_ostream & D.68996;
  char __c;
  char __c;
  char __c;
  char __c;
  char __c;
  char __c;
  char __c;
  int c;
  int c;
  int c;
  int pretmp_10;
  const size_type _11;
  int _13;
  long unsigned int _14;
  char * const _15;
  struct FlitChannel * _16;
  long int _17;
  int _18;
  struct FlitChannel * const & _19;
  long unsigned int _20;
  int _22;
  const size_type _23;
  struct basic_ostream & _25;
  struct basic_ostream & _27;
  struct basic_ostream & _28;
  struct basic_ostream & _30;
  struct basic_ostream & _31;
  int _33;
  long unsigned int _34;
  struct FlitChannel * _35;
  int _36;
  int _37;
  struct basic_ostream & _38;
  char * const _39;
  struct basic_ostream & _41;
  const size_type _42;
  struct basic_ostream & _44;
  struct basic_ostream & _45;
  struct basic_ostream & _47;
  struct basic_ostream & _48;
  struct basic_ostream & _50;
  struct basic_ostream & _51;
  int _53;
  long unsigned int _54;
  long int _55;
  struct FlitChannel * _56;
  int _57;
  struct basic_ostream & _58;
  char * const _59;
  int _60;
  long int _61;
  struct basic_ostream & _63;
  const size_type _64;
  struct basic_ostream & _66;
  struct basic_ostream & _67;
  struct basic_ostream & _68;
  struct basic_ostream & _70;
  const struct Router * const _72;
  const struct Router * const _73;
  const struct Router * const _74;
  const struct Router * const _75;
  const int _76;
  const int _77;
  const int _78;
  const int _79;
  struct FlitChannel * * const _80;
  struct FlitChannel * * const _81;
  struct FlitChannel * * const _82;
  struct basic_ostream & _83;
  long unsigned int _84;
  struct FlitChannel * const & _85;
  long int _86;
  char * const _87;
  struct basic_ostream & _88;
  long unsigned int _89;
  struct FlitChannel * const & _90;
  const struct __ctype_type * _93;
  const struct __ctype_type * _100;
  const struct __ctype_type * _108;
  const struct __ctype_type * _115;
  int (*__vtbl_ptr_type) () * _116;
  long int _117;
  sizetype _118;
  struct basic_ios * _119;
  struct basic_ostream & _122;
  char _124;
  char_type _127;
  int (*__vtbl_ptr_type) () * _132;
  int (*__vtbl_ptr_type) () _133;
  void * PROF_137;
  char_type _139;
  int (*__vtbl_ptr_type) () * _142;
  long int _143;
  sizetype _144;
  struct basic_ios * _145;
  struct basic_ostream & _148;
  int _149;
  char _150;
  char_type _153;
  int (*__vtbl_ptr_type) () * _158;
  int (*__vtbl_ptr_type) () _159;
  void * PROF_163;
  char_type _165;
  int (*__vtbl_ptr_type) () * _168;
  long int _169;
  sizetype _170;
  struct basic_ios * _171;
  struct basic_ostream & _174;
  char _176;
  char_type _179;
  int (*__vtbl_ptr_type) () * _184;
  int (*__vtbl_ptr_type) () _185;
  int pretmp_186;
  void * PROF_189;
  int pretmp_190;
  char_type _191;
  int prephitmp_193;
  int (*__vtbl_ptr_type) () * _194;
  long int _195;
  sizetype _196;
  struct basic_ios * _197;
  struct basic_ostream & _200;
  int _201;
  char _202;
  int pretmp_203;
  int prephitmp_204;
  char_type _205;
  const int pretmp_206;
  const int prephitmp_209;
  int (*__vtbl_ptr_type) () * _210;
  int (*__vtbl_ptr_type) () _211;
  void * PROF_215;
  char_type _217;
  int _236;
  int _244;
  int pretmp_261;
  int pretmp_262;
  int prephitmp_263;
  int pretmp_266;
  int pretmp_267;
  int prephitmp_268;

  <bb 2>:
  # DEBUG __os => os_8(D)
  # DEBUG __str => prefix_9(D)
  _11 = MEM[(long unsigned int *)prefix_9(D) + 8B];
  # DEBUG D#2 => prefix_9(D)
  # DEBUG this => D#2
  _61 = (long int) _11;
  # DEBUG this => prefix_9(D)
  _59 = MEM[(char * *)prefix_9(D)];
  # DEBUG D#1 => prefix_9(D)
  # DEBUG this => D#1
  _58 = std::__ostream_insert<char, std::char_traits<char> > (os_8(D), _59, _61);
  # DEBUG __out => _58
  # DEBUG __s => "source_router,source_port,dest_router,dest_port"
  # DEBUG __s => "source_router,source_port,dest_router,dest_port"
  std::__ostream_insert<char, std::char_traits<char> > (_58, "source_router,source_port,dest_router,dest_port", 47);
  # DEBUG this => _58
  # DEBUG __pf => endl
  # DEBUG __os => _58
  _116 = _58->_vptr.basic_ostream;
  _117 = MEM[(long int *)_116 + -24B];
  _118 = (sizetype) _117;
  _119 = _58 + _118;
  # DEBUG this => _119
  # DEBUG __c => 10
  _93 = MEM[(const struct basic_ios *)_119]._M_ctype;
  # DEBUG __f => _93
  if (_93 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_bad_cast ();

  <bb 4>:
  # DEBUG this => _93
  # DEBUG __c => 10
  _124 = MEM[(const struct ctype *)_93]._M_widen_ok;
  if (_124 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _127 = MEM[(const struct ctype *)_93]._M_widen[10];
  pretmp_186 = (int) _127;
  goto <bb 8>;

  <bb 6>:
  # DEBUG this => _93
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_93);
  _132 = MEM[(const struct ctype *)_93].D.16899._vptr.facet;
  _133 = MEM[(int (*__vtbl_ptr_type) () *)_132 + 48B];
  PROF_137 = [obj_type_ref] OBJ_TYPE_REF(_133;(const struct ctype)_93->6);
  if (PROF_137 == do_widen)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _139 = OBJ_TYPE_REF(_133;(const struct ctype)_93->6) (_93, 10);
  pretmp_190 = (int) _139;

  <bb 8>:
  # prephitmp_193 = PHI <pretmp_186(5), 10(6), pretmp_190(7)>
  _122 = std::basic_ostream<char>::put (_58, prephitmp_193);
  # DEBUG __os => _122
  std::basic_ostream<char>::flush (_122);
  # DEBUG c => 0
  _236 = this_12(D)->_nodes;
  if (_236 <= 0)
    goto <bb 37>;
  else
    goto <bb 10>;

  <bb 9>:
  # _244 = PHI <_13(16)>
  # DEBUG c => 0
  _201 = this_12(D)->_channels;
  if (_201 <= 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 10>:

  <bb 11>:
  # c_220 = PHI <0(10), c_32(17)>
  # DEBUG c => c_220
  _14 = (long unsigned int) c_220;
  # DEBUG D#20 => &this_12(D)->_inject
  _80 = MEM[(struct FlitChannel * * *)this_12(D) + 136B];
  # DEBUG D#19 => D#20
  # DEBUG __n => _14
  # DEBUG this => D#19
  _20 = _14 * 8;
  _19 = _80 + _20;
  _16 = *_19;
  # DEBUG this => _16
  _18 = MEM[(const int &)_16 + 224];
  # DEBUG D#21 => &this_12(D)->_inject
  # DEBUG D#19 => D#21
  # DEBUG __n => _14
  # DEBUG this => D#19
  _74 = MEM[(const struct Router * *)_16 + 216B];
  # DEBUG D#17 => _16
  # DEBUG this => D#17
  _76 = MEM[(int *)_74 + 96B];
  # DEBUG this => D#18
  # DEBUG D#22 => &this_12(D)->_inject
  # DEBUG D#19 => D#22
  # DEBUG __n => _14
  # DEBUG this => D#19
  # DEBUG this => _16
  _22 = MEM[(const int &)_16 + 208];
  # DEBUG __os => os_8(D)
  # DEBUG __str => prefix_9(D)
  _23 = MEM[(long unsigned int *)prefix_9(D) + 8B];
  # DEBUG D#2 => prefix_9(D)
  # DEBUG this => D#2
  _55 = (long int) _23;
  # DEBUG this => prefix_9(D)
  _39 = MEM[(char * *)prefix_9(D)];
  # DEBUG D#1 => prefix_9(D)
  # DEBUG this => D#1
  _38 = std::__ostream_insert<char, std::char_traits<char> > (os_8(D), _39, _55);
  # DEBUG __out => _38
  # DEBUG __s => "-1,"
  # DEBUG __s => "-1,"
  std::__ostream_insert<char, std::char_traits<char> > (_38, "-1,", 3);
  _25 = std::basic_ostream<char>::operator<< (_38, _22);
  # DEBUG __out => _25
  __c = 44;
  # DEBUG __c => __c
  _28 = std::__ostream_insert<char, std::char_traits<char> > (_25, &__c, 1);
  _27 = std::basic_ostream<char>::operator<< (_28, _76);
  # DEBUG __out => _27
  __c = 44;
  # DEBUG __c => __c
  _31 = std::__ostream_insert<char, std::char_traits<char> > (_27, &__c, 1);
  _30 = std::basic_ostream<char>::operator<< (_31, _18);
  # DEBUG this => _30
  # DEBUG __pf => endl
  # DEBUG __os => _30
  _142 = _30->_vptr.basic_ostream;
  _143 = MEM[(long int *)_142 + -24B];
  _144 = (sizetype) _143;
  _145 = _30 + _144;
  # DEBUG this => _145
  # DEBUG __c => 10
  _100 = MEM[(const struct basic_ios *)_145]._M_ctype;
  # DEBUG __f => _100
  if (_100 == 0B)
    goto <bb 3>;
  else
    goto <bb 12>;

  <bb 12>:
  # DEBUG this => _100
  # DEBUG __c => 10
  _150 = MEM[(const struct ctype *)_100]._M_widen_ok;
  if (_150 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _153 = MEM[(const struct ctype *)_100]._M_widen[10];
  pretmp_266 = (int) _153;
  goto <bb 16>;

  <bb 14>:
  # DEBUG this => _100
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_100);
  _158 = MEM[(const struct ctype *)_100].D.16899._vptr.facet;
  _159 = MEM[(int (*__vtbl_ptr_type) () *)_158 + 48B];
  PROF_163 = [obj_type_ref] OBJ_TYPE_REF(_159;(const struct ctype)_100->6);
  if (PROF_163 == do_widen)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  _165 = OBJ_TYPE_REF(_159;(const struct ctype)_100->6) (_100, 10);
  pretmp_267 = (int) _165;

  <bb 16>:
  # prephitmp_268 = PHI <pretmp_266(13), 10(14), pretmp_267(15)>
  _148 = std::basic_ostream<char>::put (_30, prephitmp_268);
  # DEBUG __os => _148
  std::basic_ostream<char>::flush (_148);
  c_32 = c_220 + 1;
  # DEBUG c => c_32
  # DEBUG c => c_32
  _13 = this_12(D)->_nodes;
  if (_13 <= c_32)
    goto <bb 9>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 11>;

  <bb 18>:
  # prephitmp_209 = PHI <pretmp_206(28), _244(9)>
  # DEBUG c => 0
  if (prephitmp_209 <= 0)
    goto <bb 19>;
  else
    goto <bb 29>;

  <bb 19>:

  <bb 39>:
  return;

  <bb 20>:

  <bb 38>:

  <bb 21>:
  # c_245 = PHI <0(38), c_52(27)>
  # DEBUG c => c_245
  _34 = (long unsigned int) c_245;
  # DEBUG D#23 => &this_12(D)->_chan
  _81 = MEM[(struct FlitChannel * * *)this_12(D) + 232B];
  # DEBUG D#19 => D#23
  # DEBUG __n => _34
  # DEBUG this => D#19
  _84 = _34 * 8;
  _85 = _81 + _84;
  _35 = *_85;
  # DEBUG this => _35
  _36 = MEM[(const int &)_35 + 224];
  # DEBUG D#24 => &this_12(D)->_chan
  # DEBUG D#19 => D#24
  # DEBUG __n => _34
  # DEBUG this => D#19
  _75 = MEM[(const struct Router * *)_35 + 216B];
  # DEBUG D#17 => _35
  # DEBUG this => D#17
  _77 = MEM[(int *)_75 + 96B];
  # DEBUG this => D#18
  # DEBUG D#25 => &this_12(D)->_chan
  # DEBUG D#19 => D#25
  # DEBUG __n => _34
  # DEBUG this => D#19
  # DEBUG this => _35
  _37 = MEM[(const int &)_35 + 208];
  # DEBUG D#26 => &this_12(D)->_chan
  # DEBUG D#19 => D#26
  # DEBUG __n => _34
  # DEBUG this => D#19
  _72 = MEM[(const struct Router * *)_35 + 200B];
  # DEBUG D#16 => _35
  # DEBUG this => D#16
  _78 = MEM[(int *)_72 + 96B];
  # DEBUG this => D#18
  # DEBUG __os => os_8(D)
  # DEBUG __str => prefix_9(D)
  _42 = MEM[(long unsigned int *)prefix_9(D) + 8B];
  # DEBUG D#2 => prefix_9(D)
  # DEBUG this => D#2
  _17 = (long int) _42;
  # DEBUG this => prefix_9(D)
  _15 = MEM[(char * *)prefix_9(D)];
  # DEBUG D#1 => prefix_9(D)
  # DEBUG this => D#1
  _83 = std::__ostream_insert<char, std::char_traits<char> > (os_8(D), _15, _17);
  _41 = std::basic_ostream<char>::operator<< (_83, _78);
  # DEBUG __out => _41
  __c = 44;
  # DEBUG __c => __c
  _45 = std::__ostream_insert<char, std::char_traits<char> > (_41, &__c, 1);
  _44 = std::basic_ostream<char>::operator<< (_45, _37);
  # DEBUG __out => _44
  __c = 44;
  # DEBUG __c => __c
  _48 = std::__ostream_insert<char, std::char_traits<char> > (_44, &__c, 1);
  _47 = std::basic_ostream<char>::operator<< (_48, _77);
  # DEBUG __out => _47
  __c = 44;
  # DEBUG __c => __c
  _51 = std::__ostream_insert<char, std::char_traits<char> > (_47, &__c, 1);
  _50 = std::basic_ostream<char>::operator<< (_51, _36);
  # DEBUG this => _50
  # DEBUG __pf => endl
  # DEBUG __os => _50
  _168 = _50->_vptr.basic_ostream;
  _169 = MEM[(long int *)_168 + -24B];
  _170 = (sizetype) _169;
  _171 = _50 + _170;
  # DEBUG this => _171
  # DEBUG __c => 10
  _108 = MEM[(const struct basic_ios *)_171]._M_ctype;
  # DEBUG __f => _108
  if (_108 == 0B)
    goto <bb 3>;
  else
    goto <bb 22>;

  <bb 22>:
  # DEBUG this => _108
  # DEBUG __c => 10
  _176 = MEM[(const struct ctype *)_108]._M_widen_ok;
  if (_176 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  _179 = MEM[(const struct ctype *)_108]._M_widen[10];
  pretmp_10 = (int) _179;
  goto <bb 26>;

  <bb 24>:
  # DEBUG this => _108
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_108);
  _184 = MEM[(const struct ctype *)_108].D.16899._vptr.facet;
  _185 = MEM[(int (*__vtbl_ptr_type) () *)_184 + 48B];
  PROF_189 = [obj_type_ref] OBJ_TYPE_REF(_185;(const struct ctype)_108->6);
  if (PROF_189 == do_widen)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  _191 = OBJ_TYPE_REF(_185;(const struct ctype)_108->6) (_108, 10);
  pretmp_203 = (int) _191;

  <bb 26>:
  # prephitmp_204 = PHI <pretmp_10(23), 10(24), pretmp_203(25)>
  _174 = std::basic_ostream<char>::put (_50, prephitmp_204);
  # DEBUG __os => _174
  std::basic_ostream<char>::flush (_174);
  c_52 = c_245 + 1;
  # DEBUG c => c_52
  # DEBUG c => c_52
  _33 = this_12(D)->_channels;
  if (_33 <= c_52)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 21>;

  <bb 28>:
  pretmp_206 = this_12(D)->_nodes;
  goto <bb 18>;

  <bb 29>:

  <bb 30>:
  # c_155 = PHI <0(29), c_71(36)>
  # DEBUG c => c_155
  _54 = (long unsigned int) c_155;
  # DEBUG D#27 => &this_12(D)->_eject
  _82 = MEM[(struct FlitChannel * * *)this_12(D) + 184B];
  # DEBUG D#19 => D#27
  # DEBUG __n => _54
  # DEBUG this => D#19
  _89 = _54 * 8;
  _90 = _82 + _89;
  _56 = *_90;
  # DEBUG this => _56
  _57 = MEM[(const int &)_56 + 224];
  # DEBUG D#28 => &this_12(D)->_eject
  # DEBUG D#19 => D#28
  # DEBUG __n => _54
  # DEBUG this => D#19
  # DEBUG this => _56
  _60 = MEM[(const int &)_56 + 208];
  # DEBUG D#29 => &this_12(D)->_eject
  # DEBUG D#19 => D#29
  # DEBUG __n => _54
  # DEBUG this => D#19
  _73 = MEM[(const struct Router * *)_56 + 200B];
  # DEBUG D#16 => _56
  # DEBUG this => D#16
  _79 = MEM[(int *)_73 + 96B];
  # DEBUG this => D#18
  # DEBUG __os => os_8(D)
  # DEBUG __str => prefix_9(D)
  _64 = MEM[(long unsigned int *)prefix_9(D) + 8B];
  # DEBUG D#2 => prefix_9(D)
  # DEBUG this => D#2
  _86 = (long int) _64;
  # DEBUG this => prefix_9(D)
  _87 = MEM[(char * *)prefix_9(D)];
  # DEBUG D#1 => prefix_9(D)
  # DEBUG this => D#1
  _88 = std::__ostream_insert<char, std::char_traits<char> > (os_8(D), _87, _86);
  _63 = std::basic_ostream<char>::operator<< (_88, _79);
  # DEBUG __out => _63
  __c = 44;
  # DEBUG __c => __c
  _67 = std::__ostream_insert<char, std::char_traits<char> > (_63, &__c, 1);
  _66 = std::basic_ostream<char>::operator<< (_67, _60);
  # DEBUG __out => _66
  __c = 44;
  # DEBUG __c => __c
  _68 = std::__ostream_insert<char, std::char_traits<char> > (_66, &__c, 1);
  # DEBUG __out => _68
  # DEBUG __s => "-1,"
  # DEBUG __s => "-1,"
  std::__ostream_insert<char, std::char_traits<char> > (_68, "-1,", 3);
  _70 = std::basic_ostream<char>::operator<< (_68, _57);
  # DEBUG this => _70
  # DEBUG __pf => endl
  # DEBUG __os => _70
  _194 = _70->_vptr.basic_ostream;
  _195 = MEM[(long int *)_194 + -24B];
  _196 = (sizetype) _195;
  _197 = _70 + _196;
  # DEBUG this => _197
  # DEBUG __c => 10
  _115 = MEM[(const struct basic_ios *)_197]._M_ctype;
  # DEBUG __f => _115
  if (_115 == 0B)
    goto <bb 3>;
  else
    goto <bb 31>;

  <bb 31>:
  # DEBUG this => _115
  # DEBUG __c => 10
  _202 = MEM[(const struct ctype *)_115]._M_widen_ok;
  if (_202 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  _205 = MEM[(const struct ctype *)_115]._M_widen[10];
  pretmp_261 = (int) _205;
  goto <bb 35>;

  <bb 33>:
  # DEBUG this => _115
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_115);
  _210 = MEM[(const struct ctype *)_115].D.16899._vptr.facet;
  _211 = MEM[(int (*__vtbl_ptr_type) () *)_210 + 48B];
  PROF_215 = [obj_type_ref] OBJ_TYPE_REF(_211;(const struct ctype)_115->6);
  if (PROF_215 == do_widen)
    goto <bb 35>;
  else
    goto <bb 34>;

  <bb 34>:
  _217 = OBJ_TYPE_REF(_211;(const struct ctype)_115->6) (_115, 10);
  pretmp_262 = (int) _217;

  <bb 35>:
  # prephitmp_263 = PHI <pretmp_261(32), 10(33), pretmp_262(34)>
  _200 = std::basic_ostream<char>::put (_70, prephitmp_263);
  # DEBUG __os => _200
  std::basic_ostream<char>::flush (_200);
  c_71 = c_155 + 1;
  # DEBUG c => c_71
  # DEBUG c => c_71
  _53 = this_12(D)->_nodes;
  if (_53 <= c_71)
    goto <bb 19>;
  else
    goto <bb 36>;

  <bb 36>:
  goto <bb 30>;

  <bb 37>:
  # DEBUG c => 0
  _149 = this_12(D)->_channels;
  if (_149 <= 0)
    goto <bb 19>;
  else
    goto <bb 20>;

}



;; Function void Network::DumpNodeMap(std::ostream&, const string&) const (_ZNK7Network11DumpNodeMapERSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2129, decl_uid=44867, cgraph_uid=484, symbol_order=485)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void Network::DumpNodeMap(std::ostream&, const string&) const (const struct Network * const this, struct ostream & os, const struct string & prefix)
{
  char_type D.69118;
  char __c;
  char_type D.69115;
  char __c;
  char_type D.69112;
  struct basic_ostream & D.69106;
  char_type D.69103;
  char __c;
  char_type D.69100;
  char __c;
  char_type D.69097;
  struct basic_ostream & D.69091;
  char __c;
  int s;
  const size_type _6;
  int _8;
  long unsigned int _9;
  long int _10;
  struct FlitChannel * _11;
  struct basic_ostream & _12;
  char * const _13;
  long int _14;
  struct FlitChannel * _15;
  struct basic_ostream & _17;
  const size_type _18;
  struct basic_ostream & _20;
  struct basic_ostream & _21;
  const struct Router * const _23;
  const struct Router * const _24;
  const int _25;
  const int _26;
  struct FlitChannel * * const _27;
  struct FlitChannel * * const _28;
  char * const _29;
  struct basic_ostream & _30;
  struct FlitChannel * const & _31;
  long unsigned int _32;
  struct FlitChannel * const & _33;
  const struct __ctype_type * _36;
  const struct __ctype_type * _40;
  int (*__vtbl_ptr_type) () * _41;
  long int _42;
  sizetype _43;
  struct basic_ios * _44;
  struct basic_ostream & _47;
  char _49;
  char_type _52;
  int (*__vtbl_ptr_type) () * _57;
  int (*__vtbl_ptr_type) () _58;
  void * PROF_62;
  char_type _64;
  int prephitmp_65;
  int pretmp_66;
  int (*__vtbl_ptr_type) () * _67;
  long int _68;
  sizetype _69;
  struct basic_ios * _70;
  struct basic_ostream & _73;
  char _75;
  char_type _78;
  int pretmp_79;
  int pretmp_82;
  int (*__vtbl_ptr_type) () * _83;
  int (*__vtbl_ptr_type) () _84;
  int prephitmp_85;
  void * PROF_88;
  char_type _90;
  int pretmp_97;
  int _99;

  <bb 2>:
  # DEBUG __os => os_4(D)
  # DEBUG __str => prefix_5(D)
  _6 = MEM[(long unsigned int *)prefix_5(D) + 8B];
  # DEBUG D#2 => prefix_5(D)
  # DEBUG this => D#2
  _14 = (long int) _6;
  # DEBUG this => prefix_5(D)
  _13 = MEM[(char * *)prefix_5(D)];
  # DEBUG D#1 => prefix_5(D)
  # DEBUG this => D#1
  _12 = std::__ostream_insert<char, std::char_traits<char> > (os_4(D), _13, _14);
  # DEBUG __out => _12
  # DEBUG __s => "source_router,dest_router"
  # DEBUG __s => "source_router,dest_router"
  std::__ostream_insert<char, std::char_traits<char> > (_12, "source_router,dest_router", 25);
  # DEBUG this => _12
  # DEBUG __pf => endl
  # DEBUG __os => _12
  _41 = _12->_vptr.basic_ostream;
  _42 = MEM[(long int *)_41 + -24B];
  _43 = (sizetype) _42;
  _44 = _12 + _43;
  # DEBUG this => _44
  # DEBUG __c => 10
  _36 = MEM[(const struct basic_ios *)_44]._M_ctype;
  # DEBUG __f => _36
  if (_36 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_bad_cast ();

  <bb 4>:
  # DEBUG this => _36
  # DEBUG __c => 10
  _49 = MEM[(const struct ctype *)_36]._M_widen_ok;
  if (_49 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _52 = MEM[(const struct ctype *)_36]._M_widen[10];
  pretmp_66 = (int) _52;
  goto <bb 8>;

  <bb 6>:
  # DEBUG this => _36
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_36);
  _57 = MEM[(const struct ctype *)_36].D.16899._vptr.facet;
  _58 = MEM[(int (*__vtbl_ptr_type) () *)_57 + 48B];
  PROF_62 = [obj_type_ref] OBJ_TYPE_REF(_58;(const struct ctype)_36->6);
  if (PROF_62 == do_widen)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _64 = OBJ_TYPE_REF(_58;(const struct ctype)_36->6) (_36, 10);
  pretmp_97 = (int) _64;

  <bb 8>:
  # prephitmp_65 = PHI <pretmp_66(5), 10(6), pretmp_97(7)>
  _47 = std::basic_ostream<char>::put (_12, prephitmp_65);
  # DEBUG __os => _47
  std::basic_ostream<char>::flush (_47);
  # DEBUG s => 0
  _99 = this_7(D)->_nodes;
  if (_99 <= 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:

  <bb 18>:
  return;

  <bb 10>:

  <bb 11>:
  # s_98 = PHI <0(10), s_22(17)>
  # DEBUG s => s_98
  _9 = (long unsigned int) s_98;
  # DEBUG D#30 => &this_7(D)->_inject
  _27 = MEM[(struct FlitChannel * * *)this_7(D) + 136B];
  # DEBUG D#19 => D#30
  # DEBUG __n => _9
  # DEBUG this => D#19
  _32 = _9 * 8;
  _33 = _27 + _32;
  _11 = *_33;
  _24 = MEM[(const struct Router * *)_11 + 216B];
  # DEBUG D#17 => _11
  # DEBUG this => D#17
  _25 = MEM[(int *)_24 + 96B];
  # DEBUG this => D#18
  # DEBUG D#31 => &this_7(D)->_eject
  _28 = MEM[(struct FlitChannel * * *)this_7(D) + 184B];
  # DEBUG D#19 => D#31
  # DEBUG __n => _9
  # DEBUG this => D#19
  _31 = _28 + _32;
  _15 = *_31;
  _23 = MEM[(const struct Router * *)_15 + 200B];
  # DEBUG D#16 => _15
  # DEBUG this => D#16
  _26 = MEM[(int *)_23 + 96B];
  # DEBUG this => D#18
  # DEBUG __os => os_4(D)
  # DEBUG __str => prefix_5(D)
  _18 = MEM[(long unsigned int *)prefix_5(D) + 8B];
  # DEBUG D#2 => prefix_5(D)
  # DEBUG this => D#2
  _10 = (long int) _18;
  # DEBUG this => prefix_5(D)
  _29 = MEM[(char * *)prefix_5(D)];
  # DEBUG D#1 => prefix_5(D)
  # DEBUG this => D#1
  _30 = std::__ostream_insert<char, std::char_traits<char> > (os_4(D), _29, _10);
  _17 = std::basic_ostream<char>::operator<< (_30, _26);
  # DEBUG __out => _17
  __c = 44;
  # DEBUG __c => __c
  _21 = std::__ostream_insert<char, std::char_traits<char> > (_17, &__c, 1);
  _20 = std::basic_ostream<char>::operator<< (_21, _25);
  # DEBUG this => _20
  # DEBUG __pf => endl
  # DEBUG __os => _20
  _67 = _20->_vptr.basic_ostream;
  _68 = MEM[(long int *)_67 + -24B];
  _69 = (sizetype) _68;
  _70 = _20 + _69;
  # DEBUG this => _70
  # DEBUG __c => 10
  _40 = MEM[(const struct basic_ios *)_70]._M_ctype;
  # DEBUG __f => _40
  if (_40 == 0B)
    goto <bb 3>;
  else
    goto <bb 12>;

  <bb 12>:
  # DEBUG this => _40
  # DEBUG __c => 10
  _75 = MEM[(const struct ctype *)_40]._M_widen_ok;
  if (_75 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _78 = MEM[(const struct ctype *)_40]._M_widen[10];
  pretmp_79 = (int) _78;
  goto <bb 16>;

  <bb 14>:
  # DEBUG this => _40
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_40);
  _83 = MEM[(const struct ctype *)_40].D.16899._vptr.facet;
  _84 = MEM[(int (*__vtbl_ptr_type) () *)_83 + 48B];
  PROF_88 = [obj_type_ref] OBJ_TYPE_REF(_84;(const struct ctype)_40->6);
  if (PROF_88 == do_widen)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  _90 = OBJ_TYPE_REF(_84;(const struct ctype)_40->6) (_40, 10);
  pretmp_82 = (int) _90;

  <bb 16>:
  # prephitmp_85 = PHI <pretmp_79(13), 10(14), pretmp_82(15)>
  _73 = std::basic_ostream<char>::put (_20, prephitmp_85);
  # DEBUG __os => _73
  std::basic_ostream<char>::flush (_73);
  s_22 = s_98 + 1;
  # DEBUG s => s_22
  # DEBUG s => s_22
  _8 = this_7(D)->_nodes;
  if (_8 <= s_22)
    goto <bb 9>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 11>;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = TimedModule*; _Alloc = std::allocator<TimedModule*>] (_ZNSt11_Deque_baseIP11TimedModuleSaIS1_EED2Ev, funcdef_no=2298, decl_uid=44311, cgraph_uid=653, symbol_order=654)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = TimedModule*; _Alloc = std::allocator<TimedModule*>] (struct _Deque_base * const this)
{
  struct TimedModule * * * __nstart;
  struct TimedModule * * * _4;
  struct TimedModule * * * _5;
  struct TimedModule * * * _6;
  struct TimedModule * * _13;
  struct TimedModule * * * pretmp_16;
  struct TimedModule * * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG D#277 => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG this => D#277
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => D#275
  # DEBUG __p => _13
  # DEBUG __size => 8
  # DEBUG D#274 => &D#276->_M_impl
  # DEBUG D#272 => D#274
  # DEBUG __p => _13
  # DEBUG __a => D#272
  # DEBUG __n => D#273
  # DEBUG D#271 => D#273
  # DEBUG D#270 => D#272
  # DEBUG D#268 => D#270
  # DEBUG D#269 => D#271
  # DEBUG __p => _13
  # DEBUG this => D#268
  # DEBUG D.61512 => D#269
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#286 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#864 => this_3(D)->_M_impl._M_map
  # DEBUG D#284 => this_3(D)
  # DEBUG D#285 => D#286
  # DEBUG __p => D#864
  # DEBUG this => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#281 => D#282
  # DEBUG this => D#281
  # DEBUG D#280 => D#281
  # DEBUG this => D#280
  # DEBUG this => NULL
  # DEBUG D.61452 => NULL
  # DEBUG this => NULL
  # DEBUG D#263 => &__map_alloc
  # DEBUG D#264 => D#283
  # DEBUG __p => D#864
  # DEBUG __a => D#263
  # DEBUG __n => D#264
  # DEBUG D#262 => D#264
  # DEBUG D#261 => D#263
  # DEBUG D#259 => D#261
  # DEBUG D#260 => D#262
  # DEBUG __p => D#864
  # DEBUG this => D#259
  # DEBUG D.61499 => D#260
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#287 => &this_3(D)->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function Network::~Network() (_ZN7NetworkD2Ev, funcdef_no=2112, decl_uid=44916, cgraph_uid=467, symbol_order=468)

Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Network::~Network() (struct Network * const this)
{
  struct TimedModule * * * __nstart;
  struct pair * * __nstart;
  struct pair * * __nstart;
  struct pair * * __nstart;
  int c;
  int d;
  int s;
  int r;
  long unsigned int _21;
  struct Router * _22;
  int (*__vtbl_ptr_type) () * _24;
  int (*__vtbl_ptr_type) () _25;
  int _28;
  long unsigned int _29;
  struct FlitChannel * _30;
  int (*__vtbl_ptr_type) () * _31;
  int (*__vtbl_ptr_type) () _32;
  int _34;
  struct FlitChannel * & _35;
  int (*__vtbl_ptr_type) () * _36;
  int (*__vtbl_ptr_type) () _37;
  int _40;
  long unsigned int _41;
  long unsigned int _42;
  struct FlitChannel * _43;
  int (*__vtbl_ptr_type) () * _44;
  int (*__vtbl_ptr_type) () _45;
  int (*__vtbl_ptr_type) () * _48;
  int (*__vtbl_ptr_type) () _49;
  int _52;
  long unsigned int _53;
  struct FlitChannel * _55;
  struct Router * & _56;
  int (*__vtbl_ptr_type) () * _57;
  int (*__vtbl_ptr_type) () _58;
  long unsigned int _60;
  int (*__vtbl_ptr_type) () * _63;
  int (*__vtbl_ptr_type) () _64;
  struct _Deque_base * _67;
  struct Channel * * _69;
  struct FlitChannel * * _70;
  struct Channel * * _71;
  struct FlitChannel * * _72;
  struct Channel * * _73;
  struct FlitChannel * * _74;
  struct Router * * _75;
  struct Channel * * _77;
  struct FlitChannel * * _78;
  struct Channel * * _79;
  struct FlitChannel * * _80;
  struct Channel * * _81;
  struct FlitChannel * * _82;
  struct Router * * _83;
  struct Module * _84;
  struct FlitChannel * * _86;
  struct FlitChannel * * _87;
  struct FlitChannel * * _88;
  int _91;
  struct Router * * _92;
  long unsigned int _94;
  struct FlitChannel * & _95;
  long unsigned int _97;
  struct FlitChannel * & _98;
  struct Module * * _114;
  int prephitmp_126;
  struct TimedModule * * * pretmp_138;
  struct TimedModule * * * prephitmp_141;
  void * PROF_208;
  void * PROF_210;
  void * PROF_212;
  int _215;
  struct Module * * _216;
  char * const _217;
  const char * _218;
  char * const _219;
  const char * _220;
  struct pair * * _221;
  struct pair * * _222;
  struct pair * * _223;
  struct pair * _226;
  struct Module * * _231;
  char * const _232;
  const char * _233;
  char * const _234;
  const char * _235;
  struct pair * * _236;
  struct pair * * _237;
  struct pair * * _238;
  struct pair * _241;
  struct Module * * _246;
  char * const _247;
  const char * _248;
  char * const _249;
  const char * _250;
  struct pair * * _251;
  struct pair * * _252;
  struct pair * * _253;
  struct pair * _256;
  struct TimedModule * * * _259;
  struct TimedModule * * * _260;
  struct TimedModule * * * _261;
  struct TimedModule * * _264;
  char * const _267;
  const char * _268;
  char * const _269;
  const char * _270;
  struct pair * * pretmp_326;
  struct pair * * prephitmp_327;
  int pretmp_329;
  int prephitmp_331;
  int _368;
  struct pair * * pretmp_381;
  struct pair * * prephitmp_382;
  struct pair * * pretmp_395;
  struct pair * * prephitmp_396;
  struct Channel * _416;
  struct Channel * _437;
  struct Channel * & _438;
  struct Channel * * _439;
  struct Channel * _441;
  struct Channel * & _442;
  struct Channel * * _443;
  struct Channel * & _445;
  struct Channel * * _463;

  <bb 2>:
  this_18(D)->D.44919.D.33681._vptr.Module = &MEM[(void *)&_ZTV7Network + 16B];
  # DEBUG r => 0
  # DEBUG r => 0
  _34 = this_18(D)->_size;
  if (_34 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG s => 0
  _91 = this_18(D)->_nodes;
  if (_91 <= 0)
    goto <bb 35>;
  else
    goto <bb 11>;

  <bb 4>:

  <bb 5>:
  # r_14 = PHI <0(4), r_27(9)>
  # prephitmp_126 = PHI <_34(4), prephitmp_331(9)>
  # DEBUG r => r_14
  _21 = (long unsigned int) r_14;
  # DEBUG D#297 => &this_18(D)->_routers
  _92 = MEM[(struct Router * * *)this_18(D) + 112B];
  # DEBUG D#58 => D#297
  # DEBUG __n => _21
  # DEBUG this => D#58
  _60 = _21 * 8;
  _56 = _92 + _60;
  _22 = *_56;
  if (_22 != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  # DEBUG D#298 => &this_18(D)->_routers
  # DEBUG D#58 => D#298
  # DEBUG __n => _21
  # DEBUG this => D#58
  _24 = _22->D.43102.D.33681._vptr.Module;
  _25 = MEM[(int (*__vtbl_ptr_type) () *)_24 + 8B];
  OBJ_TYPE_REF(_25;(struct Router)_22->1) (_22);

  <bb 7>:
  pretmp_329 = this_18(D)->_size;

  <bb 8>:
  # prephitmp_331 = PHI <prephitmp_126(5), pretmp_329(7)>
  r_27 = r_14 + 1;
  # DEBUG r => r_27
  # DEBUG r => r_27
  if (r_27 >= prephitmp_331)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 5>;

  <bb 10>:
  # _368 = PHI <_28(33)>
  # DEBUG d => 0
  if (_368 <= 0)
    goto <bb 35>;
  else
    goto <bb 37>;

  <bb 11>:

  <bb 12>:
  # s_11 = PHI <0(11), s_39(34)>
  # DEBUG s => s_11
  _29 = (long unsigned int) s_11;
  # DEBUG D#299 => &this_18(D)->_inject
  _86 = MEM[(struct FlitChannel * * *)this_18(D) + 136B];
  # DEBUG D#32 => D#299
  # DEBUG __n => _29
  # DEBUG this => D#32
  _42 = _29 * 8;
  _35 = _86 + _42;
  _30 = *_35;
  if (_30 != 0B)
    goto <bb 13>;
  else
    goto <bb 136>;

  <bb 13>:
  # DEBUG D#300 => &this_18(D)->_inject
  # DEBUG D#32 => D#300
  # DEBUG __n => _29
  # DEBUG this => D#32
  _31 = _30->D.35808.D.35202.D.33681._vptr.Module;
  _32 = MEM[(int (*__vtbl_ptr_type) () *)_31 + 8B];
  OBJ_TYPE_REF(_32;(struct FlitChannel)_30->1) (_30);
  goto <bb 136>;

<L69>:
  goto <bb 113> (<L58>);

  <bb 15>:
  # DEBUG D#302 => &this_18(D)->_inject_cred
  # DEBUG D#45 => D#302
  # DEBUG __n => _29
  # DEBUG this => D#45
  # DEBUG D#302 => &this_18(D)->_inject_cred
  # DEBUG D#45 => D#302
  # DEBUG __n => _29
  # DEBUG this => D#45
  _36 = _441->D.50335.D.33681._vptr.Module;
  _37 = MEM[(int (*__vtbl_ptr_type) () *)_36 + 8B];
  PROF_208 = [obj_type_ref] OBJ_TYPE_REF(_37;(struct Channel)_441->1);
  if (PROF_208 == __deleting_dtor )
    goto <bb 16>;
  else
    goto <bb 30>;

  <bb 16>:
  # DEBUG this => _441
  # DEBUG this => _441
  _441->D.50335.D.33681._vptr.Module = &MEM[(void *)&_ZTV7ChannelI6CreditE + 16B];
  # DEBUG D#438 => &_441->_wait_queue
  # DEBUG this => D#438
  # DEBUG D#436 => &D#438->c
  # DEBUG this => D#436
  # DEBUG D#427 => &D#436->D.50247
  # DEBUG this => D#427
  # DEBUG this => D#436
  # DEBUG D#77 => &D#436->D.50247._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#77
  # DEBUG D#435 => MEM[(const struct iterator &)D#436 + 48]._M_cur
  # DEBUG D.63141 => D#435
  # DEBUG D#434 => MEM[(const struct iterator &)D#436 + 48]._M_first
  # DEBUG D.63142 => D#434
  # DEBUG D#433 => MEM[(const struct iterator &)D#436 + 48]._M_last
  # DEBUG D.63143 => D#433
  # DEBUG D#432 => MEM[(const struct iterator &)D#436 + 48]._M_node
  # DEBUG D.63144 => D#432
  # DEBUG this => D#436
  # DEBUG D#76 => &D#436->D.50247._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#76
  # DEBUG D#431 => MEM[(const struct iterator &)D#436 + 16]._M_cur
  # DEBUG D.63137 => D#431
  # DEBUG D#430 => MEM[(const struct iterator &)D#436 + 16]._M_first
  # DEBUG D.63138 => D#430
  # DEBUG D#429 => MEM[(const struct iterator &)D#436 + 16]._M_last
  # DEBUG D.63139 => D#429
  # DEBUG D#428 => MEM[(const struct iterator &)D#436 + 16]._M_node
  # DEBUG D.63140 => D#428
  # DEBUG D#78 => D#436
  # DEBUG this => D#78
  # DEBUG __first => D#79
  # DEBUG __last => D#80
  # DEBUG D.63125 => D#81
  # DEBUG D#873 => &MEM[(struct deque *)_441 + 120B].D.50247
  # DEBUG this => D#873
  _221 = MEM[(struct _Deque_base *)_441 + 120B]._M_impl._M_map;
  if (_221 != 0B)
    goto <bb 17>;
  else
    goto <bb 23>;

  <bb 17>:
  _222 = MEM[(struct _Deque_base *)_441 + 120B]._M_impl._M_finish._M_node;
  _223 = _222 + 8;
  __nstart_224 = MEM[(struct _Deque_base *)_441 + 120B]._M_impl._M_start._M_node;
  # DEBUG D#418 => D#873
  # DEBUG __nstart => __nstart_224
  # DEBUG __nfinish => _223
  # DEBUG this => D#418
  # DEBUG __n => __nstart_224
  if (_223 <= __nstart_224)
    goto <bb 22>;
  else
    goto <bb 18>;

  <bb 18>:

  <bb 19>:
  # __nstart_415 = PHI <__nstart_224(18), __nstart_227(20)>
  # DEBUG __n => __nstart_415
  _226 = *__nstart_415;
  # DEBUG this => D#416
  # DEBUG __p => _226
  # DEBUG __size => 16
  # DEBUG D#415 => &D#417->_M_impl
  # DEBUG D#413 => D#415
  # DEBUG __p => _226
  # DEBUG __a => D#413
  # DEBUG __n => D#414
  # DEBUG D#412 => D#414
  # DEBUG D#411 => D#413
  # DEBUG D#409 => D#411
  # DEBUG D#410 => D#412
  # DEBUG __p => _226
  # DEBUG this => D#409
  # DEBUG D.69298 => D#410
  operator delete (_226);
  __nstart_227 = __nstart_415 + 8;
  # DEBUG __n => __nstart_227
  # DEBUG __n => __nstart_227
  if (_223 <= __nstart_227)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 19>;

  <bb 21>:
  pretmp_326 = MEM[(struct _Deque_base *)_441 + 120B]._M_impl._M_map;

  <bb 22>:
  # prephitmp_327 = PHI <pretmp_326(21), _221(17)>
  # DEBUG D#425 => D#873->_M_impl._M_map_size
  # DEBUG D#877 => MEM[(struct _Deque_base *)_441 + 120B]._M_impl._M_map
  # DEBUG D#423 => D#873
  # DEBUG D#424 => D#425
  # DEBUG __p => D#877
  # DEBUG this => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#421
  # DEBUG this => D#420
  # DEBUG D#419 => D#420
  # DEBUG this => D#419
  # DEBUG this => NULL
  # DEBUG D.63059 => NULL
  # DEBUG this => NULL
  # DEBUG D#341 => &__map_alloc
  # DEBUG D#342 => D#422
  # DEBUG __p => D#877
  # DEBUG __a => D#341
  # DEBUG __n => D#342
  # DEBUG D#340 => D#342
  # DEBUG D#339 => D#341
  # DEBUG D#337 => D#339
  # DEBUG D#338 => D#340
  # DEBUG __p => D#877
  # DEBUG this => D#337
  # DEBUG D.69308 => D#338
  operator delete (prephitmp_327);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 23>:
  # DEBUG D#426 => &D#873->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)_441 + 120] ={v} {CLOBBER};
  # DEBUG D#437 => &_441->D.50335
  # DEBUG this => D#437
  # DEBUG D#872 => &MEM[(struct TimedModule *)_441].D.33681
  # DEBUG this => D#872
  MEM[(struct Module *)_441]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#196 => &D#872->_children
  # DEBUG this => D#196
  # DEBUG D#190 => &D#196->D.29201
  # DEBUG this => D#190
  # DEBUG D#193 => D#196->D.29201._M_impl._M_finish
  # DEBUG D#192 => D#196->D.29201._M_impl._M_start
  # DEBUG D#111 => D#192
  # DEBUG D#112 => D#193
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.61023 => D#113
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  # DEBUG D#107 => D#109
  # DEBUG D#108 => D#110
  # DEBUG __first => D#107
  # DEBUG __last => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#107
  # DEBUG D#103 => D#105
  # DEBUG D#104 => D#106
  # DEBUG D.60566 => D#103
  # DEBUG D.60565 => D#104
  # DEBUG D#191 => &D#196->D.29201
  # DEBUG this => D#191
  # DEBUG D#189 => D#191->_M_impl._M_end_of_storage
  # DEBUG D#188 => (long int) D#189
  _216 = MEM[(struct _Vector_base *)_441 + 72B]._M_impl._M_start;
  # DEBUG D#187 => (long int) _216
  # DEBUG D#186 => D#188 - D#187
  # DEBUG D#185 => D#186 /[ex] 8
  # DEBUG D#182 => D#191
  # DEBUG D#183 => (long unsigned int) D#185
  # DEBUG __p => _216
  # DEBUG this => D#182
  # DEBUG __n => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  if (_216 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#179 => &D#180->_M_impl
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#181
  # DEBUG __p => _216
  # DEBUG __a => D#177
  # DEBUG __n => D#178
  # DEBUG D#176 => D#178
  # DEBUG D#175 => D#177
  # DEBUG D#173 => D#175
  # DEBUG D#174 => D#176
  # DEBUG __p => _216
  # DEBUG this => D#173
  # DEBUG D.69248 => D#174
  operator delete (_216);

  <bb 25>:
  # DEBUG D#184 => &D#191->_M_impl
  # DEBUG this => D#184
  # DEBUG this => D#184
  # DEBUG this => D#184
  MEM[(struct  &)_441 + 72] ={v} {CLOBBER};
  # DEBUG D#195 => &D#872->_fullname
  # DEBUG this => D#195
  # DEBUG this => D#195
  # DEBUG this => D#195
  _217 = MEM[(char * *)_441 + 40B];
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  _218 = &MEM[(const struct basic_string *)_441 + 40B].D.11553._M_local_buf;
  if (_217 != _218)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#195].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#195
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  # DEBUG D#162 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _217
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _217
  # DEBUG this => D#156
  # DEBUG D.69261 => D#157
  operator delete (_217);

  <bb 27>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)_441 + 40] ={v} {CLOBBER};
  # DEBUG D#194 => &D#872->_name
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG this => D#194
  _219 = MEM[(char * *)_441 + 8B];
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  _220 = &MEM[(const struct basic_string *)_441 + 8B].D.11553._M_local_buf;
  if (_219 != _220)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#194].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#194
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  # DEBUG D#162 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _219
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _219
  # DEBUG this => D#156
  # DEBUG D.69276 => D#157
  operator delete (_219);

  <bb 29>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)_441] ={v} {CLOBBER};
  operator delete (_441);
  goto <bb 33>;

  <bb 30>:
  OBJ_TYPE_REF(_37;(struct Channel)_441->1) (_441);
  goto <bb 32>;

<L70>:
  goto <bb 113> (<L58>);

  <bb 32>:

  <bb 33>:
  s_39 = s_11 + 1;
  # DEBUG s => s_39
  # DEBUG s => s_39
  _28 = this_18(D)->_nodes;
  if (_28 <= s_39)
    goto <bb 10>;
  else
    goto <bb 34>;

  <bb 34>:
  goto <bb 12>;

  <bb 35>:
  # DEBUG c => 0
  _215 = this_18(D)->_channels;
  if (_215 <= 0)
    goto <bb 36>;
  else
    goto <bb 61>;

  <bb 36>:
  # DEBUG D#324 => &this_18(D)->_timed_modules
  # DEBUG this => D#324
  # DEBUG D#288 => &D#324->D.44805
  # DEBUG this => D#288
  # DEBUG this => D#324
  # DEBUG D#63 => &D#324->D.44805._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#63
  # DEBUG D#296 => MEM[(const struct iterator &)D#324 + 48]._M_cur
  # DEBUG D.61534 => D#296
  # DEBUG D#295 => MEM[(const struct iterator &)D#324 + 48]._M_first
  # DEBUG D.61535 => D#295
  # DEBUG D#294 => MEM[(const struct iterator &)D#324 + 48]._M_last
  # DEBUG D.61536 => D#294
  # DEBUG D#293 => MEM[(const struct iterator &)D#324 + 48]._M_node
  # DEBUG D.61537 => D#293
  # DEBUG this => D#324
  # DEBUG D#64 => &D#324->D.44805._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#64
  # DEBUG D#292 => MEM[(const struct iterator &)D#324 + 16]._M_cur
  # DEBUG D.61530 => D#292
  # DEBUG D#291 => MEM[(const struct iterator &)D#324 + 16]._M_first
  # DEBUG D.61531 => D#291
  # DEBUG D#290 => MEM[(const struct iterator &)D#324 + 16]._M_last
  # DEBUG D.61532 => D#290
  # DEBUG D#289 => MEM[(const struct iterator &)D#324 + 16]._M_node
  # DEBUG D.61533 => D#289
  # DEBUG D#65 => D#324
  # DEBUG this => D#65
  # DEBUG __first => D#66
  # DEBUG __last => D#67
  # DEBUG D.61518 => D#68
  # DEBUG D#871 => &MEM[(struct deque *)this_18(D) + 280B].D.44805
  # DEBUG this => D#871
  _259 = MEM[(struct _Deque_base *)this_18(D) + 280B]._M_impl._M_map;
  if (_259 != 0B)
    goto <bb 85>;
  else
    goto <bb 91>;

  <bb 37>:

  <bb 38>:
  # d_8 = PHI <0(37), d_51(60)>
  # DEBUG d => d_8
  _41 = (long unsigned int) d_8;
  # DEBUG D#303 => &this_18(D)->_eject
  _87 = MEM[(struct FlitChannel * * *)this_18(D) + 184B];
  # DEBUG D#32 => D#303
  # DEBUG __n => _41
  # DEBUG this => D#32
  _94 = _41 * 8;
  _95 = _87 + _94;
  _43 = *_95;
  if (_43 != 0B)
    goto <bb 39>;
  else
    goto <bb 137>;

  <bb 39>:
  # DEBUG D#304 => &this_18(D)->_eject
  # DEBUG D#32 => D#304
  # DEBUG __n => _41
  # DEBUG this => D#32
  _44 = _43->D.35808.D.35202.D.33681._vptr.Module;
  _45 = MEM[(int (*__vtbl_ptr_type) () *)_44 + 8B];
  OBJ_TYPE_REF(_45;(struct FlitChannel)_43->1) (_43);
  goto <bb 137>;

<L71>:
  goto <bb 113> (<L58>);

  <bb 41>:
  # DEBUG D#306 => &this_18(D)->_eject_cred
  # DEBUG D#45 => D#306
  # DEBUG __n => _41
  # DEBUG this => D#45
  # DEBUG D#306 => &this_18(D)->_eject_cred
  # DEBUG D#45 => D#306
  # DEBUG __n => _41
  # DEBUG this => D#45
  _48 = _416->D.50335.D.33681._vptr.Module;
  _49 = MEM[(int (*__vtbl_ptr_type) () *)_48 + 8B];
  PROF_210 = [obj_type_ref] OBJ_TYPE_REF(_49;(struct Channel)_416->1);
  if (PROF_210 == __deleting_dtor )
    goto <bb 42>;
  else
    goto <bb 56>;

  <bb 42>:
  # DEBUG this => _416
  # DEBUG this => _416
  _416->D.50335.D.33681._vptr.Module = &MEM[(void *)&_ZTV7ChannelI6CreditE + 16B];
  # DEBUG D#438 => &_416->_wait_queue
  # DEBUG this => D#438
  # DEBUG D#436 => &D#438->c
  # DEBUG this => D#436
  # DEBUG D#427 => &D#436->D.50247
  # DEBUG this => D#427
  # DEBUG this => D#436
  # DEBUG D#77 => &D#436->D.50247._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#77
  # DEBUG D#435 => MEM[(const struct iterator &)D#436 + 48]._M_cur
  # DEBUG D.63141 => D#435
  # DEBUG D#434 => MEM[(const struct iterator &)D#436 + 48]._M_first
  # DEBUG D.63142 => D#434
  # DEBUG D#433 => MEM[(const struct iterator &)D#436 + 48]._M_last
  # DEBUG D.63143 => D#433
  # DEBUG D#432 => MEM[(const struct iterator &)D#436 + 48]._M_node
  # DEBUG D.63144 => D#432
  # DEBUG this => D#436
  # DEBUG D#76 => &D#436->D.50247._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#76
  # DEBUG D#431 => MEM[(const struct iterator &)D#436 + 16]._M_cur
  # DEBUG D.63137 => D#431
  # DEBUG D#430 => MEM[(const struct iterator &)D#436 + 16]._M_first
  # DEBUG D.63138 => D#430
  # DEBUG D#429 => MEM[(const struct iterator &)D#436 + 16]._M_last
  # DEBUG D.63139 => D#429
  # DEBUG D#428 => MEM[(const struct iterator &)D#436 + 16]._M_node
  # DEBUG D.63140 => D#428
  # DEBUG D#78 => D#436
  # DEBUG this => D#78
  # DEBUG __first => D#79
  # DEBUG __last => D#80
  # DEBUG D.63125 => D#81
  # DEBUG D#870 => &MEM[(struct deque *)_416 + 120B].D.50247
  # DEBUG this => D#870
  _236 = MEM[(struct _Deque_base *)_416 + 120B]._M_impl._M_map;
  if (_236 != 0B)
    goto <bb 43>;
  else
    goto <bb 49>;

  <bb 43>:
  _237 = MEM[(struct _Deque_base *)_416 + 120B]._M_impl._M_finish._M_node;
  _238 = _237 + 8;
  __nstart_239 = MEM[(struct _Deque_base *)_416 + 120B]._M_impl._M_start._M_node;
  # DEBUG D#418 => D#870
  # DEBUG __nstart => __nstart_239
  # DEBUG __nfinish => _238
  # DEBUG this => D#418
  # DEBUG __n => __nstart_239
  if (_238 <= __nstart_239)
    goto <bb 48>;
  else
    goto <bb 44>;

  <bb 44>:

  <bb 45>:
  # __nstart_458 = PHI <__nstart_239(44), __nstart_242(46)>
  # DEBUG __n => __nstart_458
  _241 = *__nstart_458;
  # DEBUG this => D#416
  # DEBUG __p => _241
  # DEBUG __size => 16
  # DEBUG D#415 => &D#417->_M_impl
  # DEBUG D#413 => D#415
  # DEBUG __p => _241
  # DEBUG __a => D#413
  # DEBUG __n => D#414
  # DEBUG D#412 => D#414
  # DEBUG D#411 => D#413
  # DEBUG D#409 => D#411
  # DEBUG D#410 => D#412
  # DEBUG __p => _241
  # DEBUG this => D#409
  # DEBUG D.69376 => D#410
  operator delete (_241);
  __nstart_242 = __nstart_458 + 8;
  # DEBUG __n => __nstart_242
  # DEBUG __n => __nstart_242
  if (_238 <= __nstart_242)
    goto <bb 47>;
  else
    goto <bb 46>;

  <bb 46>:
  goto <bb 45>;

  <bb 47>:
  pretmp_381 = MEM[(struct _Deque_base *)_416 + 120B]._M_impl._M_map;

  <bb 48>:
  # prephitmp_382 = PHI <pretmp_381(47), _236(43)>
  # DEBUG D#425 => D#870->_M_impl._M_map_size
  # DEBUG D#876 => MEM[(struct _Deque_base *)_416 + 120B]._M_impl._M_map
  # DEBUG D#423 => D#870
  # DEBUG D#424 => D#425
  # DEBUG __p => D#876
  # DEBUG this => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#421
  # DEBUG this => D#420
  # DEBUG D#419 => D#420
  # DEBUG this => D#419
  # DEBUG this => NULL
  # DEBUG D.63059 => NULL
  # DEBUG this => NULL
  # DEBUG D#341 => &__map_alloc
  # DEBUG D#342 => D#422
  # DEBUG __p => D#876
  # DEBUG __a => D#341
  # DEBUG __n => D#342
  # DEBUG D#340 => D#342
  # DEBUG D#339 => D#341
  # DEBUG D#337 => D#339
  # DEBUG D#338 => D#340
  # DEBUG __p => D#876
  # DEBUG this => D#337
  # DEBUG D.69386 => D#338
  operator delete (prephitmp_382);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 49>:
  # DEBUG D#426 => &D#870->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)_416 + 120] ={v} {CLOBBER};
  # DEBUG D#437 => &_416->D.50335
  # DEBUG this => D#437
  # DEBUG D#869 => &MEM[(struct TimedModule *)_416].D.33681
  # DEBUG this => D#869
  MEM[(struct Module *)_416]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#196 => &D#869->_children
  # DEBUG this => D#196
  # DEBUG D#190 => &D#196->D.29201
  # DEBUG this => D#190
  # DEBUG D#193 => D#196->D.29201._M_impl._M_finish
  # DEBUG D#192 => D#196->D.29201._M_impl._M_start
  # DEBUG D#111 => D#192
  # DEBUG D#112 => D#193
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.61023 => D#113
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  # DEBUG D#107 => D#109
  # DEBUG D#108 => D#110
  # DEBUG __first => D#107
  # DEBUG __last => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#107
  # DEBUG D#103 => D#105
  # DEBUG D#104 => D#106
  # DEBUG D.60566 => D#103
  # DEBUG D.60565 => D#104
  # DEBUG D#191 => &D#196->D.29201
  # DEBUG this => D#191
  # DEBUG D#189 => D#191->_M_impl._M_end_of_storage
  # DEBUG D#188 => (long int) D#189
  _231 = MEM[(struct _Vector_base *)_416 + 72B]._M_impl._M_start;
  # DEBUG D#187 => (long int) _231
  # DEBUG D#186 => D#188 - D#187
  # DEBUG D#185 => D#186 /[ex] 8
  # DEBUG D#182 => D#191
  # DEBUG D#183 => (long unsigned int) D#185
  # DEBUG __p => _231
  # DEBUG this => D#182
  # DEBUG __n => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  if (_231 != 0B)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  # DEBUG D#179 => &D#180->_M_impl
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#181
  # DEBUG __p => _231
  # DEBUG __a => D#177
  # DEBUG __n => D#178
  # DEBUG D#176 => D#178
  # DEBUG D#175 => D#177
  # DEBUG D#173 => D#175
  # DEBUG D#174 => D#176
  # DEBUG __p => _231
  # DEBUG this => D#173
  # DEBUG D.69326 => D#174
  operator delete (_231);

  <bb 51>:
  # DEBUG D#184 => &D#191->_M_impl
  # DEBUG this => D#184
  # DEBUG this => D#184
  # DEBUG this => D#184
  MEM[(struct  &)_416 + 72] ={v} {CLOBBER};
  # DEBUG D#195 => &D#869->_fullname
  # DEBUG this => D#195
  # DEBUG this => D#195
  # DEBUG this => D#195
  _232 = MEM[(char * *)_416 + 40B];
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  _233 = &MEM[(const struct basic_string *)_416 + 40B].D.11553._M_local_buf;
  if (_232 != _233)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#195].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#195
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  # DEBUG D#162 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _232
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _232
  # DEBUG this => D#156
  # DEBUG D.69339 => D#157
  operator delete (_232);

  <bb 53>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)_416 + 40] ={v} {CLOBBER};
  # DEBUG D#194 => &D#869->_name
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG this => D#194
  _234 = MEM[(char * *)_416 + 8B];
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  _235 = &MEM[(const struct basic_string *)_416 + 8B].D.11553._M_local_buf;
  if (_234 != _235)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#194].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#194
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  # DEBUG D#162 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _234
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _234
  # DEBUG this => D#156
  # DEBUG D.69354 => D#157
  operator delete (_234);

  <bb 55>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)_416] ={v} {CLOBBER};
  operator delete (_416);
  goto <bb 59>;

  <bb 56>:
  OBJ_TYPE_REF(_49;(struct Channel)_416->1) (_416);
  goto <bb 58>;

<L72>:
  goto <bb 113> (<L58>);

  <bb 58>:

  <bb 59>:
  d_51 = d_8 + 1;
  # DEBUG d => d_51
  # DEBUG d => d_51
  _40 = this_18(D)->_nodes;
  if (_40 <= d_51)
    goto <bb 35>;
  else
    goto <bb 60>;

  <bb 60>:
  goto <bb 38>;

  <bb 61>:

  <bb 62>:
  # c_436 = PHI <0(61), c_66(84)>
  # DEBUG c => c_436
  _53 = (long unsigned int) c_436;
  # DEBUG D#307 => &this_18(D)->_chan
  _88 = MEM[(struct FlitChannel * * *)this_18(D) + 232B];
  # DEBUG D#32 => D#307
  # DEBUG __n => _53
  # DEBUG this => D#32
  _97 = _53 * 8;
  _98 = _88 + _97;
  _55 = *_98;
  if (_55 != 0B)
    goto <bb 63>;
  else
    goto <bb 138>;

  <bb 63>:
  # DEBUG D#308 => &this_18(D)->_chan
  # DEBUG D#32 => D#308
  # DEBUG __n => _53
  # DEBUG this => D#32
  _57 = _55->D.35808.D.35202.D.33681._vptr.Module;
  _58 = MEM[(int (*__vtbl_ptr_type) () *)_57 + 8B];
  OBJ_TYPE_REF(_58;(struct FlitChannel)_55->1) (_55);
  goto <bb 138>;

<L73>:
  goto <bb 113> (<L58>);

  <bb 65>:
  # DEBUG D#310 => &this_18(D)->_chan_cred
  # DEBUG D#45 => D#310
  # DEBUG __n => _53
  # DEBUG this => D#45
  # DEBUG D#310 => &this_18(D)->_chan_cred
  # DEBUG D#45 => D#310
  # DEBUG __n => _53
  # DEBUG this => D#45
  _63 = _437->D.50335.D.33681._vptr.Module;
  _64 = MEM[(int (*__vtbl_ptr_type) () *)_63 + 8B];
  PROF_212 = [obj_type_ref] OBJ_TYPE_REF(_64;(struct Channel)_437->1);
  if (PROF_212 == __deleting_dtor )
    goto <bb 66>;
  else
    goto <bb 80>;

  <bb 66>:
  # DEBUG this => _437
  # DEBUG this => _437
  _437->D.50335.D.33681._vptr.Module = &MEM[(void *)&_ZTV7ChannelI6CreditE + 16B];
  # DEBUG D#438 => &_437->_wait_queue
  # DEBUG this => D#438
  # DEBUG D#436 => &D#438->c
  # DEBUG this => D#436
  # DEBUG D#427 => &D#436->D.50247
  # DEBUG this => D#427
  # DEBUG this => D#436
  # DEBUG D#77 => &D#436->D.50247._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#77
  # DEBUG D#435 => MEM[(const struct iterator &)D#436 + 48]._M_cur
  # DEBUG D.63141 => D#435
  # DEBUG D#434 => MEM[(const struct iterator &)D#436 + 48]._M_first
  # DEBUG D.63142 => D#434
  # DEBUG D#433 => MEM[(const struct iterator &)D#436 + 48]._M_last
  # DEBUG D.63143 => D#433
  # DEBUG D#432 => MEM[(const struct iterator &)D#436 + 48]._M_node
  # DEBUG D.63144 => D#432
  # DEBUG this => D#436
  # DEBUG D#76 => &D#436->D.50247._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#76
  # DEBUG D#431 => MEM[(const struct iterator &)D#436 + 16]._M_cur
  # DEBUG D.63137 => D#431
  # DEBUG D#430 => MEM[(const struct iterator &)D#436 + 16]._M_first
  # DEBUG D.63138 => D#430
  # DEBUG D#429 => MEM[(const struct iterator &)D#436 + 16]._M_last
  # DEBUG D.63139 => D#429
  # DEBUG D#428 => MEM[(const struct iterator &)D#436 + 16]._M_node
  # DEBUG D.63140 => D#428
  # DEBUG D#78 => D#436
  # DEBUG this => D#78
  # DEBUG __first => D#79
  # DEBUG __last => D#80
  # DEBUG D.63125 => D#81
  # DEBUG D#868 => &MEM[(struct deque *)_437 + 120B].D.50247
  # DEBUG this => D#868
  _251 = MEM[(struct _Deque_base *)_437 + 120B]._M_impl._M_map;
  if (_251 != 0B)
    goto <bb 67>;
  else
    goto <bb 73>;

  <bb 67>:
  _252 = MEM[(struct _Deque_base *)_437 + 120B]._M_impl._M_finish._M_node;
  _253 = _252 + 8;
  __nstart_254 = MEM[(struct _Deque_base *)_437 + 120B]._M_impl._M_start._M_node;
  # DEBUG D#418 => D#868
  # DEBUG __nstart => __nstart_254
  # DEBUG __nfinish => _253
  # DEBUG this => D#418
  # DEBUG __n => __nstart_254
  if (_253 <= __nstart_254)
    goto <bb 72>;
  else
    goto <bb 68>;

  <bb 68>:

  <bb 69>:
  # __nstart_457 = PHI <__nstart_254(68), __nstart_257(70)>
  # DEBUG __n => __nstart_457
  _256 = *__nstart_457;
  # DEBUG this => D#416
  # DEBUG __p => _256
  # DEBUG __size => 16
  # DEBUG D#415 => &D#417->_M_impl
  # DEBUG D#413 => D#415
  # DEBUG __p => _256
  # DEBUG __a => D#413
  # DEBUG __n => D#414
  # DEBUG D#412 => D#414
  # DEBUG D#411 => D#413
  # DEBUG D#409 => D#411
  # DEBUG D#410 => D#412
  # DEBUG __p => _256
  # DEBUG this => D#409
  # DEBUG D.69454 => D#410
  operator delete (_256);
  __nstart_257 = __nstart_457 + 8;
  # DEBUG __n => __nstart_257
  # DEBUG __n => __nstart_257
  if (_253 <= __nstart_257)
    goto <bb 71>;
  else
    goto <bb 70>;

  <bb 70>:
  goto <bb 69>;

  <bb 71>:
  pretmp_395 = MEM[(struct _Deque_base *)_437 + 120B]._M_impl._M_map;

  <bb 72>:
  # prephitmp_396 = PHI <pretmp_395(71), _251(67)>
  # DEBUG D#425 => D#868->_M_impl._M_map_size
  # DEBUG D#875 => MEM[(struct _Deque_base *)_437 + 120B]._M_impl._M_map
  # DEBUG D#423 => D#868
  # DEBUG D#424 => D#425
  # DEBUG __p => D#875
  # DEBUG this => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#421
  # DEBUG this => D#420
  # DEBUG D#419 => D#420
  # DEBUG this => D#419
  # DEBUG this => NULL
  # DEBUG D.63059 => NULL
  # DEBUG this => NULL
  # DEBUG D#341 => &__map_alloc
  # DEBUG D#342 => D#422
  # DEBUG __p => D#875
  # DEBUG __a => D#341
  # DEBUG __n => D#342
  # DEBUG D#340 => D#342
  # DEBUG D#339 => D#341
  # DEBUG D#337 => D#339
  # DEBUG D#338 => D#340
  # DEBUG __p => D#875
  # DEBUG this => D#337
  # DEBUG D.69464 => D#338
  operator delete (prephitmp_396);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 73>:
  # DEBUG D#426 => &D#868->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)_437 + 120] ={v} {CLOBBER};
  # DEBUG D#437 => &_437->D.50335
  # DEBUG this => D#437
  # DEBUG D#867 => &MEM[(struct TimedModule *)_437].D.33681
  # DEBUG this => D#867
  MEM[(struct Module *)_437]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#196 => &D#867->_children
  # DEBUG this => D#196
  # DEBUG D#190 => &D#196->D.29201
  # DEBUG this => D#190
  # DEBUG D#193 => D#196->D.29201._M_impl._M_finish
  # DEBUG D#192 => D#196->D.29201._M_impl._M_start
  # DEBUG D#111 => D#192
  # DEBUG D#112 => D#193
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.61023 => D#113
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  # DEBUG D#107 => D#109
  # DEBUG D#108 => D#110
  # DEBUG __first => D#107
  # DEBUG __last => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#107
  # DEBUG D#103 => D#105
  # DEBUG D#104 => D#106
  # DEBUG D.60566 => D#103
  # DEBUG D.60565 => D#104
  # DEBUG D#191 => &D#196->D.29201
  # DEBUG this => D#191
  # DEBUG D#189 => D#191->_M_impl._M_end_of_storage
  # DEBUG D#188 => (long int) D#189
  _246 = MEM[(struct _Vector_base *)_437 + 72B]._M_impl._M_start;
  # DEBUG D#187 => (long int) _246
  # DEBUG D#186 => D#188 - D#187
  # DEBUG D#185 => D#186 /[ex] 8
  # DEBUG D#182 => D#191
  # DEBUG D#183 => (long unsigned int) D#185
  # DEBUG __p => _246
  # DEBUG this => D#182
  # DEBUG __n => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  if (_246 != 0B)
    goto <bb 74>;
  else
    goto <bb 75>;

  <bb 74>:
  # DEBUG D#179 => &D#180->_M_impl
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#181
  # DEBUG __p => _246
  # DEBUG __a => D#177
  # DEBUG __n => D#178
  # DEBUG D#176 => D#178
  # DEBUG D#175 => D#177
  # DEBUG D#173 => D#175
  # DEBUG D#174 => D#176
  # DEBUG __p => _246
  # DEBUG this => D#173
  # DEBUG D.69404 => D#174
  operator delete (_246);

  <bb 75>:
  # DEBUG D#184 => &D#191->_M_impl
  # DEBUG this => D#184
  # DEBUG this => D#184
  # DEBUG this => D#184
  MEM[(struct  &)_437 + 72] ={v} {CLOBBER};
  # DEBUG D#195 => &D#867->_fullname
  # DEBUG this => D#195
  # DEBUG this => D#195
  # DEBUG this => D#195
  _247 = MEM[(char * *)_437 + 40B];
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  _248 = &MEM[(const struct basic_string *)_437 + 40B].D.11553._M_local_buf;
  if (_247 != _248)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#195].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#195
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  # DEBUG D#162 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _247
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _247
  # DEBUG this => D#156
  # DEBUG D.69417 => D#157
  operator delete (_247);

  <bb 77>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)_437 + 40] ={v} {CLOBBER};
  # DEBUG D#194 => &D#867->_name
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG this => D#194
  _249 = MEM[(char * *)_437 + 8B];
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  _250 = &MEM[(const struct basic_string *)_437 + 8B].D.11553._M_local_buf;
  if (_249 != _250)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#194].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#194
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  # DEBUG D#162 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _249
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _249
  # DEBUG this => D#156
  # DEBUG D.69432 => D#157
  operator delete (_249);

  <bb 79>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)_437] ={v} {CLOBBER};
  operator delete (_437);
  goto <bb 83>;

  <bb 80>:
  OBJ_TYPE_REF(_64;(struct Channel)_437->1) (_437);
  goto <bb 82>;

<L74>:
  goto <bb 113> (<L58>);

  <bb 82>:

  <bb 83>:
  c_66 = c_436 + 1;
  # DEBUG c => c_66
  # DEBUG c => c_66
  _52 = this_18(D)->_channels;
  if (_52 <= c_66)
    goto <bb 36>;
  else
    goto <bb 84>;

  <bb 84>:
  goto <bb 62>;

  <bb 85>:
  _260 = MEM[(struct _Deque_base *)this_18(D) + 280B]._M_impl._M_finish._M_node;
  _261 = _260 + 8;
  __nstart_262 = MEM[(struct _Deque_base *)this_18(D) + 280B]._M_impl._M_start._M_node;
  # DEBUG D#277 => D#871
  # DEBUG __nstart => __nstart_262
  # DEBUG __nfinish => _261
  # DEBUG this => D#277
  # DEBUG __n => __nstart_262
  if (_261 <= __nstart_262)
    goto <bb 90>;
  else
    goto <bb 86>;

  <bb 86>:

  <bb 87>:
  # __nstart_456 = PHI <__nstart_262(86), __nstart_265(88)>
  # DEBUG __n => __nstart_456
  _264 = *__nstart_456;
  # DEBUG this => D#275
  # DEBUG __p => _264
  # DEBUG __size => 8
  # DEBUG D#274 => &D#276->_M_impl
  # DEBUG D#272 => D#274
  # DEBUG __p => _264
  # DEBUG __a => D#272
  # DEBUG __n => D#273
  # DEBUG D#271 => D#273
  # DEBUG D#270 => D#272
  # DEBUG D#268 => D#270
  # DEBUG D#269 => D#271
  # DEBUG __p => _264
  # DEBUG this => D#268
  # DEBUG D.69481 => D#269
  operator delete (_264);
  __nstart_265 = __nstart_456 + 8;
  # DEBUG __n => __nstart_265
  # DEBUG __n => __nstart_265
  if (_261 <= __nstart_265)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  goto <bb 87>;

  <bb 89>:
  pretmp_138 = MEM[(struct _Deque_base *)this_18(D) + 280B]._M_impl._M_map;

  <bb 90>:
  # prephitmp_141 = PHI <pretmp_138(89), _259(85)>
  # DEBUG D#286 => D#871->_M_impl._M_map_size
  # DEBUG D#874 => MEM[(struct _Deque_base *)this_18(D) + 280B]._M_impl._M_map
  # DEBUG D#284 => D#871
  # DEBUG D#285 => D#286
  # DEBUG __p => D#874
  # DEBUG this => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#281 => D#282
  # DEBUG this => D#281
  # DEBUG D#280 => D#281
  # DEBUG this => D#280
  # DEBUG this => NULL
  # DEBUG D.61452 => NULL
  # DEBUG this => NULL
  # DEBUG D#263 => &__map_alloc
  # DEBUG D#264 => D#283
  # DEBUG __p => D#874
  # DEBUG __a => D#263
  # DEBUG __n => D#264
  # DEBUG D#262 => D#264
  # DEBUG D#261 => D#263
  # DEBUG D#259 => D#261
  # DEBUG D#260 => D#262
  # DEBUG __p => D#874
  # DEBUG this => D#259
  # DEBUG D.69491 => D#260
  operator delete (prephitmp_141);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 91>:
  # DEBUG D#287 => &D#871->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)this_18(D) + 280] ={v} {CLOBBER};
  # DEBUG D#323 => &this_18(D)->_chan_cred
  # DEBUG this => D#323
  # DEBUG D#253 => &D#323->D.42106
  # DEBUG this => D#253
  # DEBUG D#256 => D#323->D.42106._M_impl._M_finish
  # DEBUG D#255 => D#323->D.42106._M_impl._M_start
  # DEBUG __first => D#255
  # DEBUG __last => D#256
  # DEBUG D.61300 => NULL
  # DEBUG D#138 => D#255
  # DEBUG D#139 => D#256
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  # DEBUG D#254 => &D#323->D.42106
  # DEBUG this => D#254
  # DEBUG D#252 => D#254->_M_impl._M_end_of_storage
  # DEBUG D#251 => (long int) D#252
  _69 = MEM[(struct _Vector_base *)this_18(D) + 256B]._M_impl._M_start;
  # DEBUG D#250 => (long int) _69
  # DEBUG D#249 => D#251 - D#250
  # DEBUG D#248 => D#249 /[ex] 8
  # DEBUG D#247 => (long unsigned int) D#248
  # DEBUG this => D#254
  # DEBUG __p => _69
  # DEBUG __n => D#247
  if (_69 != 0B)
    goto <bb 92>;
  else
    goto <bb 93>;

  <bb 92>:
  # DEBUG D#245 => &D#254->_M_impl
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#247
  # DEBUG __p => _69
  # DEBUG __a => D#243
  # DEBUG __n => D#244
  # DEBUG D#242 => D#244
  # DEBUG D#241 => D#243
  # DEBUG D#239 => D#241
  # DEBUG D#240 => D#242
  # DEBUG __p => _69
  # DEBUG this => D#239
  # DEBUG D.61696 => D#240
  operator delete (_69);

  <bb 93>:
  # DEBUG D#246 => &D#254->_M_impl
  # DEBUG this => D#246
  # DEBUG this => D#246
  # DEBUG this => D#246
  MEM[(struct  &)this_18(D) + 256] ={v} {CLOBBER};
  # DEBUG D#322 => &this_18(D)->_chan
  # DEBUG this => D#322
  # DEBUG D#233 => &D#322->D.41359
  # DEBUG this => D#233
  # DEBUG D#236 => D#322->D.41359._M_impl._M_finish
  # DEBUG D#235 => D#322->D.41359._M_impl._M_start
  # DEBUG __first => D#235
  # DEBUG __last => D#236
  # DEBUG D.61225 => NULL
  # DEBUG D#128 => D#235
  # DEBUG D#129 => D#236
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  # DEBUG D#234 => &D#322->D.41359
  # DEBUG this => D#234
  # DEBUG D#232 => D#234->_M_impl._M_end_of_storage
  # DEBUG D#231 => (long int) D#232
  _70 = MEM[(struct _Vector_base *)this_18(D) + 232B]._M_impl._M_start;
  # DEBUG D#230 => (long int) _70
  # DEBUG D#229 => D#231 - D#230
  # DEBUG D#228 => D#229 /[ex] 8
  # DEBUG D#227 => (long unsigned int) D#228
  # DEBUG this => D#234
  # DEBUG __p => _70
  # DEBUG __n => D#227
  if (_70 != 0B)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  # DEBUG D#225 => &D#234->_M_impl
  # DEBUG D#223 => D#225
  # DEBUG D#224 => D#227
  # DEBUG __p => _70
  # DEBUG __a => D#223
  # DEBUG __n => D#224
  # DEBUG D#222 => D#224
  # DEBUG D#221 => D#223
  # DEBUG D#219 => D#221
  # DEBUG D#220 => D#222
  # DEBUG __p => _70
  # DEBUG this => D#219
  # DEBUG D.61681 => D#220
  operator delete (_70);

  <bb 95>:
  # DEBUG D#226 => &D#234->_M_impl
  # DEBUG this => D#226
  # DEBUG this => D#226
  # DEBUG this => D#226
  MEM[(struct  &)this_18(D) + 232] ={v} {CLOBBER};
  # DEBUG D#320 => &this_18(D)->_eject_cred
  # DEBUG this => D#320
  # DEBUG D#253 => &D#320->D.42106
  # DEBUG this => D#253
  # DEBUG D#256 => D#320->D.42106._M_impl._M_finish
  # DEBUG D#255 => D#320->D.42106._M_impl._M_start
  # DEBUG __first => D#255
  # DEBUG __last => D#256
  # DEBUG D.61300 => NULL
  # DEBUG D#138 => D#255
  # DEBUG D#139 => D#256
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  # DEBUG D#254 => &D#320->D.42106
  # DEBUG this => D#254
  # DEBUG D#252 => D#254->_M_impl._M_end_of_storage
  # DEBUG D#251 => (long int) D#252
  _71 = MEM[(struct _Vector_base *)this_18(D) + 208B]._M_impl._M_start;
  # DEBUG D#250 => (long int) _71
  # DEBUG D#249 => D#251 - D#250
  # DEBUG D#248 => D#249 /[ex] 8
  # DEBUG D#247 => (long unsigned int) D#248
  # DEBUG this => D#254
  # DEBUG __p => _71
  # DEBUG __n => D#247
  if (_71 != 0B)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  # DEBUG D#245 => &D#254->_M_impl
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#247
  # DEBUG __p => _71
  # DEBUG __a => D#243
  # DEBUG __n => D#244
  # DEBUG D#242 => D#244
  # DEBUG D#241 => D#243
  # DEBUG D#239 => D#241
  # DEBUG D#240 => D#242
  # DEBUG __p => _71
  # DEBUG this => D#239
  # DEBUG D.61666 => D#240
  operator delete (_71);

  <bb 97>:
  # DEBUG D#246 => &D#254->_M_impl
  # DEBUG this => D#246
  # DEBUG this => D#246
  # DEBUG this => D#246
  MEM[(struct  &)this_18(D) + 208] ={v} {CLOBBER};
  # DEBUG D#319 => &this_18(D)->_eject
  # DEBUG this => D#319
  # DEBUG D#233 => &D#319->D.41359
  # DEBUG this => D#233
  # DEBUG D#236 => D#319->D.41359._M_impl._M_finish
  # DEBUG D#235 => D#319->D.41359._M_impl._M_start
  # DEBUG __first => D#235
  # DEBUG __last => D#236
  # DEBUG D.61225 => NULL
  # DEBUG D#128 => D#235
  # DEBUG D#129 => D#236
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  # DEBUG D#234 => &D#319->D.41359
  # DEBUG this => D#234
  # DEBUG D#232 => D#234->_M_impl._M_end_of_storage
  # DEBUG D#231 => (long int) D#232
  _72 = MEM[(struct _Vector_base *)this_18(D) + 184B]._M_impl._M_start;
  # DEBUG D#230 => (long int) _72
  # DEBUG D#229 => D#231 - D#230
  # DEBUG D#228 => D#229 /[ex] 8
  # DEBUG D#227 => (long unsigned int) D#228
  # DEBUG this => D#234
  # DEBUG __p => _72
  # DEBUG __n => D#227
  if (_72 != 0B)
    goto <bb 98>;
  else
    goto <bb 99>;

  <bb 98>:
  # DEBUG D#225 => &D#234->_M_impl
  # DEBUG D#223 => D#225
  # DEBUG D#224 => D#227
  # DEBUG __p => _72
  # DEBUG __a => D#223
  # DEBUG __n => D#224
  # DEBUG D#222 => D#224
  # DEBUG D#221 => D#223
  # DEBUG D#219 => D#221
  # DEBUG D#220 => D#222
  # DEBUG __p => _72
  # DEBUG this => D#219
  # DEBUG D.61651 => D#220
  operator delete (_72);

  <bb 99>:
  # DEBUG D#226 => &D#234->_M_impl
  # DEBUG this => D#226
  # DEBUG this => D#226
  # DEBUG this => D#226
  MEM[(struct  &)this_18(D) + 184] ={v} {CLOBBER};
  # DEBUG D#317 => &this_18(D)->_inject_cred
  # DEBUG this => D#317
  # DEBUG D#253 => &D#317->D.42106
  # DEBUG this => D#253
  # DEBUG D#256 => D#317->D.42106._M_impl._M_finish
  # DEBUG D#255 => D#317->D.42106._M_impl._M_start
  # DEBUG __first => D#255
  # DEBUG __last => D#256
  # DEBUG D.61300 => NULL
  # DEBUG D#138 => D#255
  # DEBUG D#139 => D#256
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  # DEBUG D#254 => &D#317->D.42106
  # DEBUG this => D#254
  # DEBUG D#252 => D#254->_M_impl._M_end_of_storage
  # DEBUG D#251 => (long int) D#252
  _73 = MEM[(struct _Vector_base *)this_18(D) + 160B]._M_impl._M_start;
  # DEBUG D#250 => (long int) _73
  # DEBUG D#249 => D#251 - D#250
  # DEBUG D#248 => D#249 /[ex] 8
  # DEBUG D#247 => (long unsigned int) D#248
  # DEBUG this => D#254
  # DEBUG __p => _73
  # DEBUG __n => D#247
  if (_73 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#245 => &D#254->_M_impl
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#247
  # DEBUG __p => _73
  # DEBUG __a => D#243
  # DEBUG __n => D#244
  # DEBUG D#242 => D#244
  # DEBUG D#241 => D#243
  # DEBUG D#239 => D#241
  # DEBUG D#240 => D#242
  # DEBUG __p => _73
  # DEBUG this => D#239
  # DEBUG D.61636 => D#240
  operator delete (_73);

  <bb 101>:
  # DEBUG D#246 => &D#254->_M_impl
  # DEBUG this => D#246
  # DEBUG this => D#246
  # DEBUG this => D#246
  MEM[(struct  &)this_18(D) + 160] ={v} {CLOBBER};
  # DEBUG D#316 => &this_18(D)->_inject
  # DEBUG this => D#316
  # DEBUG D#233 => &D#316->D.41359
  # DEBUG this => D#233
  # DEBUG D#236 => D#316->D.41359._M_impl._M_finish
  # DEBUG D#235 => D#316->D.41359._M_impl._M_start
  # DEBUG __first => D#235
  # DEBUG __last => D#236
  # DEBUG D.61225 => NULL
  # DEBUG D#128 => D#235
  # DEBUG D#129 => D#236
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  # DEBUG D#234 => &D#316->D.41359
  # DEBUG this => D#234
  # DEBUG D#232 => D#234->_M_impl._M_end_of_storage
  # DEBUG D#231 => (long int) D#232
  _74 = MEM[(struct _Vector_base *)this_18(D) + 136B]._M_impl._M_start;
  # DEBUG D#230 => (long int) _74
  # DEBUG D#229 => D#231 - D#230
  # DEBUG D#228 => D#229 /[ex] 8
  # DEBUG D#227 => (long unsigned int) D#228
  # DEBUG this => D#234
  # DEBUG __p => _74
  # DEBUG __n => D#227
  if (_74 != 0B)
    goto <bb 102>;
  else
    goto <bb 103>;

  <bb 102>:
  # DEBUG D#225 => &D#234->_M_impl
  # DEBUG D#223 => D#225
  # DEBUG D#224 => D#227
  # DEBUG __p => _74
  # DEBUG __a => D#223
  # DEBUG __n => D#224
  # DEBUG D#222 => D#224
  # DEBUG D#221 => D#223
  # DEBUG D#219 => D#221
  # DEBUG D#220 => D#222
  # DEBUG __p => _74
  # DEBUG this => D#219
  # DEBUG D.61621 => D#220
  operator delete (_74);

  <bb 103>:
  # DEBUG D#226 => &D#234->_M_impl
  # DEBUG this => D#226
  # DEBUG this => D#226
  # DEBUG this => D#226
  MEM[(struct  &)this_18(D) + 136] ={v} {CLOBBER};
  # DEBUG D#314 => &this_18(D)->_routers
  # DEBUG this => D#314
  # DEBUG D#213 => &D#314->D.43879
  # DEBUG this => D#213
  # DEBUG D#216 => D#314->D.43879._M_impl._M_finish
  # DEBUG D#215 => D#314->D.43879._M_impl._M_start
  # DEBUG __first => D#215
  # DEBUG __last => D#216
  # DEBUG D.61150 => NULL
  # DEBUG D#118 => D#215
  # DEBUG D#119 => D#216
  # DEBUG __first => D#118
  # DEBUG __last => D#119
  # DEBUG D#117 => D#119
  # DEBUG D#116 => D#118
  # DEBUG D#114 => D#116
  # DEBUG D#115 => D#117
  # DEBUG D.60604 => D#114
  # DEBUG D.60603 => D#115
  # DEBUG D#214 => &D#314->D.43879
  # DEBUG this => D#214
  # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
  # DEBUG D#211 => (long int) D#212
  _75 = MEM[(struct _Vector_base *)this_18(D) + 112B]._M_impl._M_start;
  # DEBUG D#210 => (long int) _75
  # DEBUG D#209 => D#211 - D#210
  # DEBUG D#208 => D#209 /[ex] 8
  # DEBUG D#207 => (long unsigned int) D#208
  # DEBUG this => D#214
  # DEBUG __p => _75
  # DEBUG __n => D#207
  if (_75 != 0B)
    goto <bb 104>;
  else
    goto <bb 105>;

  <bb 104>:
  # DEBUG D#205 => &D#214->_M_impl
  # DEBUG D#203 => D#205
  # DEBUG D#204 => D#207
  # DEBUG __p => _75
  # DEBUG __a => D#203
  # DEBUG __n => D#204
  # DEBUG D#202 => D#204
  # DEBUG D#201 => D#203
  # DEBUG D#199 => D#201
  # DEBUG D#200 => D#202
  # DEBUG __p => _75
  # DEBUG this => D#199
  # DEBUG D.61606 => D#200
  operator delete (_75);

  <bb 105>:
  # DEBUG D#206 => &D#214->_M_impl
  # DEBUG this => D#206
  # DEBUG this => D#206
  # DEBUG this => D#206
  MEM[(struct  &)this_18(D) + 112] ={v} {CLOBBER};
  # DEBUG D#313 => &this_18(D)->D.44919
  # DEBUG this => D#313
  # DEBUG D#866 => &MEM[(struct TimedModule *)this_18(D)].D.33681
  # DEBUG this => D#866
  MEM[(struct Module *)this_18(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#196 => &D#866->_children
  # DEBUG this => D#196
  # DEBUG D#190 => &D#196->D.29201
  # DEBUG this => D#190
  # DEBUG D#193 => D#196->D.29201._M_impl._M_finish
  # DEBUG D#192 => D#196->D.29201._M_impl._M_start
  # DEBUG D#111 => D#192
  # DEBUG D#112 => D#193
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.61023 => D#113
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  # DEBUG D#107 => D#109
  # DEBUG D#108 => D#110
  # DEBUG __first => D#107
  # DEBUG __last => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#107
  # DEBUG D#103 => D#105
  # DEBUG D#104 => D#106
  # DEBUG D.60566 => D#103
  # DEBUG D.60565 => D#104
  # DEBUG D#191 => &D#196->D.29201
  # DEBUG this => D#191
  # DEBUG D#189 => D#191->_M_impl._M_end_of_storage
  # DEBUG D#188 => (long int) D#189
  _114 = MEM[(struct _Vector_base *)this_18(D) + 72B]._M_impl._M_start;
  # DEBUG D#187 => (long int) _114
  # DEBUG D#186 => D#188 - D#187
  # DEBUG D#185 => D#186 /[ex] 8
  # DEBUG D#182 => D#191
  # DEBUG D#183 => (long unsigned int) D#185
  # DEBUG __p => _114
  # DEBUG this => D#182
  # DEBUG __n => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  if (_114 != 0B)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  # DEBUG D#179 => &D#180->_M_impl
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#181
  # DEBUG __p => _114
  # DEBUG __a => D#177
  # DEBUG __n => D#178
  # DEBUG D#176 => D#178
  # DEBUG D#175 => D#177
  # DEBUG D#173 => D#175
  # DEBUG D#174 => D#176
  # DEBUG __p => _114
  # DEBUG this => D#173
  # DEBUG D.69504 => D#174
  operator delete (_114);

  <bb 107>:
  # DEBUG D#184 => &D#191->_M_impl
  # DEBUG this => D#184
  # DEBUG this => D#184
  # DEBUG this => D#184
  MEM[(struct  &)this_18(D) + 72] ={v} {CLOBBER};
  # DEBUG D#195 => &D#866->_fullname
  # DEBUG this => D#195
  # DEBUG this => D#195
  # DEBUG this => D#195
  _267 = MEM[(char * *)this_18(D) + 40B];
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  _268 = &MEM[(const struct basic_string *)this_18(D) + 40B].D.11553._M_local_buf;
  if (_267 != _268)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#195].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#195
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#195
  # DEBUG this => D#1
  # DEBUG this => D#195
  # DEBUG D#162 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _267
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _267
  # DEBUG this => D#156
  # DEBUG D.69517 => D#157
  operator delete (_267);

  <bb 109>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#195]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)this_18(D) + 40] ={v} {CLOBBER};
  # DEBUG D#194 => &D#866->_name
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG this => D#194
  _269 = MEM[(char * *)this_18(D) + 8B];
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  _270 = &MEM[(const struct basic_string *)this_18(D) + 8B].D.11553._M_local_buf;
  if (_269 != _270)
    goto <bb 110>;
  else
    goto <bb 111>;

  <bb 110>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#194].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#194
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#194
  # DEBUG this => D#1
  # DEBUG this => D#194
  # DEBUG D#162 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _269
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _269
  # DEBUG this => D#156
  # DEBUG D.69532 => D#157
  operator delete (_269);

  <bb 111>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#194]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)this_18(D)] ={v} {CLOBBER};
  return;

<L68>:

<L58>:
  # DEBUG D#328 => &this_18(D)->_timed_modules
  # DEBUG this => D#328
  # DEBUG D#288 => &D#328->D.44805
  # DEBUG this => D#288
  # DEBUG this => D#328
  # DEBUG D#63 => &D#328->D.44805._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#63
  # DEBUG D#296 => MEM[(const struct iterator &)D#328 + 48]._M_cur
  # DEBUG D.61534 => D#296
  # DEBUG D#295 => MEM[(const struct iterator &)D#328 + 48]._M_first
  # DEBUG D.61535 => D#295
  # DEBUG D#294 => MEM[(const struct iterator &)D#328 + 48]._M_last
  # DEBUG D.61536 => D#294
  # DEBUG D#293 => MEM[(const struct iterator &)D#328 + 48]._M_node
  # DEBUG D.61537 => D#293
  # DEBUG this => D#328
  # DEBUG D#64 => &D#328->D.44805._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#64
  # DEBUG D#292 => MEM[(const struct iterator &)D#328 + 16]._M_cur
  # DEBUG D.61530 => D#292
  # DEBUG D#291 => MEM[(const struct iterator &)D#328 + 16]._M_first
  # DEBUG D.61531 => D#291
  # DEBUG D#290 => MEM[(const struct iterator &)D#328 + 16]._M_last
  # DEBUG D.61532 => D#290
  # DEBUG D#289 => MEM[(const struct iterator &)D#328 + 16]._M_node
  # DEBUG D.61533 => D#289
  # DEBUG D#65 => D#328
  # DEBUG this => D#65
  # DEBUG __first => D#66
  # DEBUG __last => D#67
  # DEBUG D.61518 => D#68
  _67 = &MEM[(struct deque *)this_18(D) + 280B].D.44805;
  std::_Deque_base<TimedModule*, std::allocator<TimedModule*> >::~_Deque_base (_67);
  MEM[(struct  &)this_18(D) + 280] ={v} {CLOBBER};
  resx 10

<L59>:
  # DEBUG D#327 => &this_18(D)->_chan_cred
  # DEBUG this => D#327
  # DEBUG D#253 => &D#327->D.42106
  # DEBUG this => D#253
  # DEBUG D#256 => D#327->D.42106._M_impl._M_finish
  # DEBUG D#255 => D#327->D.42106._M_impl._M_start
  # DEBUG __first => D#255
  # DEBUG __last => D#256
  # DEBUG D.61300 => NULL
  # DEBUG D#138 => D#255
  # DEBUG D#139 => D#256
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  # DEBUG D#254 => &D#327->D.42106
  # DEBUG this => D#254
  # DEBUG D#252 => D#254->_M_impl._M_end_of_storage
  # DEBUG D#251 => (long int) D#252
  _77 = MEM[(struct _Vector_base *)this_18(D) + 256B]._M_impl._M_start;
  # DEBUG D#250 => (long int) _77
  # DEBUG D#249 => D#251 - D#250
  # DEBUG D#248 => D#249 /[ex] 8
  # DEBUG D#247 => (long unsigned int) D#248
  # DEBUG this => D#254
  # DEBUG __p => _77
  # DEBUG __n => D#247
  if (_77 != 0B)
    goto <bb 115>;
  else
    goto <bb 116>;

  <bb 115>:
  # DEBUG D#245 => &D#254->_M_impl
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#247
  # DEBUG __p => _77
  # DEBUG __a => D#243
  # DEBUG __n => D#244
  # DEBUG D#242 => D#244
  # DEBUG D#241 => D#243
  # DEBUG D#239 => D#241
  # DEBUG D#240 => D#242
  # DEBUG __p => _77
  # DEBUG this => D#239
  # DEBUG D.61713 => D#240
  operator delete (_77);

  <bb 116>:
  # DEBUG D#246 => &D#254->_M_impl
  # DEBUG this => D#246
  # DEBUG this => D#246
  # DEBUG this => D#246
  MEM[(struct  &)this_18(D) + 256] ={v} {CLOBBER};
  resx 9

<L60>:
  # DEBUG D#326 => &this_18(D)->_chan
  # DEBUG this => D#326
  # DEBUG D#233 => &D#326->D.41359
  # DEBUG this => D#233
  # DEBUG D#236 => D#326->D.41359._M_impl._M_finish
  # DEBUG D#235 => D#326->D.41359._M_impl._M_start
  # DEBUG __first => D#235
  # DEBUG __last => D#236
  # DEBUG D.61225 => NULL
  # DEBUG D#128 => D#235
  # DEBUG D#129 => D#236
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  # DEBUG D#234 => &D#326->D.41359
  # DEBUG this => D#234
  # DEBUG D#232 => D#234->_M_impl._M_end_of_storage
  # DEBUG D#231 => (long int) D#232
  _78 = MEM[(struct _Vector_base *)this_18(D) + 232B]._M_impl._M_start;
  # DEBUG D#230 => (long int) _78
  # DEBUG D#229 => D#231 - D#230
  # DEBUG D#228 => D#229 /[ex] 8
  # DEBUG D#227 => (long unsigned int) D#228
  # DEBUG this => D#234
  # DEBUG __p => _78
  # DEBUG __n => D#227
  if (_78 != 0B)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  # DEBUG D#225 => &D#234->_M_impl
  # DEBUG D#223 => D#225
  # DEBUG D#224 => D#227
  # DEBUG __p => _78
  # DEBUG __a => D#223
  # DEBUG __n => D#224
  # DEBUG D#222 => D#224
  # DEBUG D#221 => D#223
  # DEBUG D#219 => D#221
  # DEBUG D#220 => D#222
  # DEBUG __p => _78
  # DEBUG this => D#219
  # DEBUG D.61728 => D#220
  operator delete (_78);

  <bb 119>:
  # DEBUG D#226 => &D#234->_M_impl
  # DEBUG this => D#226
  # DEBUG this => D#226
  # DEBUG this => D#226
  MEM[(struct  &)this_18(D) + 232] ={v} {CLOBBER};
  resx 8

<L61>:
  # DEBUG D#325 => &this_18(D)->_eject_cred
  # DEBUG this => D#325
  # DEBUG D#253 => &D#325->D.42106
  # DEBUG this => D#253
  # DEBUG D#256 => D#325->D.42106._M_impl._M_finish
  # DEBUG D#255 => D#325->D.42106._M_impl._M_start
  # DEBUG __first => D#255
  # DEBUG __last => D#256
  # DEBUG D.61300 => NULL
  # DEBUG D#138 => D#255
  # DEBUG D#139 => D#256
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  # DEBUG D#254 => &D#325->D.42106
  # DEBUG this => D#254
  # DEBUG D#252 => D#254->_M_impl._M_end_of_storage
  # DEBUG D#251 => (long int) D#252
  _79 = MEM[(struct _Vector_base *)this_18(D) + 208B]._M_impl._M_start;
  # DEBUG D#250 => (long int) _79
  # DEBUG D#249 => D#251 - D#250
  # DEBUG D#248 => D#249 /[ex] 8
  # DEBUG D#247 => (long unsigned int) D#248
  # DEBUG this => D#254
  # DEBUG __p => _79
  # DEBUG __n => D#247
  if (_79 != 0B)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  # DEBUG D#245 => &D#254->_M_impl
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#247
  # DEBUG __p => _79
  # DEBUG __a => D#243
  # DEBUG __n => D#244
  # DEBUG D#242 => D#244
  # DEBUG D#241 => D#243
  # DEBUG D#239 => D#241
  # DEBUG D#240 => D#242
  # DEBUG __p => _79
  # DEBUG this => D#239
  # DEBUG D.61743 => D#240
  operator delete (_79);

  <bb 122>:
  # DEBUG D#246 => &D#254->_M_impl
  # DEBUG this => D#246
  # DEBUG this => D#246
  # DEBUG this => D#246
  MEM[(struct  &)this_18(D) + 208] ={v} {CLOBBER};
  resx 7

<L62>:
  # DEBUG D#321 => &this_18(D)->_eject
  # DEBUG this => D#321
  # DEBUG D#233 => &D#321->D.41359
  # DEBUG this => D#233
  # DEBUG D#236 => D#321->D.41359._M_impl._M_finish
  # DEBUG D#235 => D#321->D.41359._M_impl._M_start
  # DEBUG __first => D#235
  # DEBUG __last => D#236
  # DEBUG D.61225 => NULL
  # DEBUG D#128 => D#235
  # DEBUG D#129 => D#236
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  # DEBUG D#234 => &D#321->D.41359
  # DEBUG this => D#234
  # DEBUG D#232 => D#234->_M_impl._M_end_of_storage
  # DEBUG D#231 => (long int) D#232
  _80 = MEM[(struct _Vector_base *)this_18(D) + 184B]._M_impl._M_start;
  # DEBUG D#230 => (long int) _80
  # DEBUG D#229 => D#231 - D#230
  # DEBUG D#228 => D#229 /[ex] 8
  # DEBUG D#227 => (long unsigned int) D#228
  # DEBUG this => D#234
  # DEBUG __p => _80
  # DEBUG __n => D#227
  if (_80 != 0B)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  # DEBUG D#225 => &D#234->_M_impl
  # DEBUG D#223 => D#225
  # DEBUG D#224 => D#227
  # DEBUG __p => _80
  # DEBUG __a => D#223
  # DEBUG __n => D#224
  # DEBUG D#222 => D#224
  # DEBUG D#221 => D#223
  # DEBUG D#219 => D#221
  # DEBUG D#220 => D#222
  # DEBUG __p => _80
  # DEBUG this => D#219
  # DEBUG D.61758 => D#220
  operator delete (_80);

  <bb 125>:
  # DEBUG D#226 => &D#234->_M_impl
  # DEBUG this => D#226
  # DEBUG this => D#226
  # DEBUG this => D#226
  MEM[(struct  &)this_18(D) + 184] ={v} {CLOBBER};
  resx 6

<L63>:
  # DEBUG D#318 => &this_18(D)->_inject_cred
  # DEBUG this => D#318
  # DEBUG D#253 => &D#318->D.42106
  # DEBUG this => D#253
  # DEBUG D#256 => D#318->D.42106._M_impl._M_finish
  # DEBUG D#255 => D#318->D.42106._M_impl._M_start
  # DEBUG __first => D#255
  # DEBUG __last => D#256
  # DEBUG D.61300 => NULL
  # DEBUG D#138 => D#255
  # DEBUG D#139 => D#256
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  # DEBUG D#254 => &D#318->D.42106
  # DEBUG this => D#254
  # DEBUG D#252 => D#254->_M_impl._M_end_of_storage
  # DEBUG D#251 => (long int) D#252
  _81 = MEM[(struct _Vector_base *)this_18(D) + 160B]._M_impl._M_start;
  # DEBUG D#250 => (long int) _81
  # DEBUG D#249 => D#251 - D#250
  # DEBUG D#248 => D#249 /[ex] 8
  # DEBUG D#247 => (long unsigned int) D#248
  # DEBUG this => D#254
  # DEBUG __p => _81
  # DEBUG __n => D#247
  if (_81 != 0B)
    goto <bb 127>;
  else
    goto <bb 128>;

  <bb 127>:
  # DEBUG D#245 => &D#254->_M_impl
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#247
  # DEBUG __p => _81
  # DEBUG __a => D#243
  # DEBUG __n => D#244
  # DEBUG D#242 => D#244
  # DEBUG D#241 => D#243
  # DEBUG D#239 => D#241
  # DEBUG D#240 => D#242
  # DEBUG __p => _81
  # DEBUG this => D#239
  # DEBUG D.61773 => D#240
  operator delete (_81);

  <bb 128>:
  # DEBUG D#246 => &D#254->_M_impl
  # DEBUG this => D#246
  # DEBUG this => D#246
  # DEBUG this => D#246
  MEM[(struct  &)this_18(D) + 160] ={v} {CLOBBER};
  resx 5

<L64>:
  # DEBUG D#315 => &this_18(D)->_inject
  # DEBUG this => D#315
  # DEBUG D#233 => &D#315->D.41359
  # DEBUG this => D#233
  # DEBUG D#236 => D#315->D.41359._M_impl._M_finish
  # DEBUG D#235 => D#315->D.41359._M_impl._M_start
  # DEBUG __first => D#235
  # DEBUG __last => D#236
  # DEBUG D.61225 => NULL
  # DEBUG D#128 => D#235
  # DEBUG D#129 => D#236
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  # DEBUG D#234 => &D#315->D.41359
  # DEBUG this => D#234
  # DEBUG D#232 => D#234->_M_impl._M_end_of_storage
  # DEBUG D#231 => (long int) D#232
  _82 = MEM[(struct _Vector_base *)this_18(D) + 136B]._M_impl._M_start;
  # DEBUG D#230 => (long int) _82
  # DEBUG D#229 => D#231 - D#230
  # DEBUG D#228 => D#229 /[ex] 8
  # DEBUG D#227 => (long unsigned int) D#228
  # DEBUG this => D#234
  # DEBUG __p => _82
  # DEBUG __n => D#227
  if (_82 != 0B)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # DEBUG D#225 => &D#234->_M_impl
  # DEBUG D#223 => D#225
  # DEBUG D#224 => D#227
  # DEBUG __p => _82
  # DEBUG __a => D#223
  # DEBUG __n => D#224
  # DEBUG D#222 => D#224
  # DEBUG D#221 => D#223
  # DEBUG D#219 => D#221
  # DEBUG D#220 => D#222
  # DEBUG __p => _82
  # DEBUG this => D#219
  # DEBUG D.61788 => D#220
  operator delete (_82);

  <bb 131>:
  # DEBUG D#226 => &D#234->_M_impl
  # DEBUG this => D#226
  # DEBUG this => D#226
  # DEBUG this => D#226
  MEM[(struct  &)this_18(D) + 136] ={v} {CLOBBER};
  resx 4

<L65>:
  # DEBUG D#312 => &this_18(D)->_routers
  # DEBUG this => D#312
  # DEBUG D#213 => &D#312->D.43879
  # DEBUG this => D#213
  # DEBUG D#216 => D#312->D.43879._M_impl._M_finish
  # DEBUG D#215 => D#312->D.43879._M_impl._M_start
  # DEBUG __first => D#215
  # DEBUG __last => D#216
  # DEBUG D.61150 => NULL
  # DEBUG D#118 => D#215
  # DEBUG D#119 => D#216
  # DEBUG __first => D#118
  # DEBUG __last => D#119
  # DEBUG D#117 => D#119
  # DEBUG D#116 => D#118
  # DEBUG D#114 => D#116
  # DEBUG D#115 => D#117
  # DEBUG D.60604 => D#114
  # DEBUG D.60603 => D#115
  # DEBUG D#214 => &D#312->D.43879
  # DEBUG this => D#214
  # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
  # DEBUG D#211 => (long int) D#212
  _83 = MEM[(struct _Vector_base *)this_18(D) + 112B]._M_impl._M_start;
  # DEBUG D#210 => (long int) _83
  # DEBUG D#209 => D#211 - D#210
  # DEBUG D#208 => D#209 /[ex] 8
  # DEBUG D#207 => (long unsigned int) D#208
  # DEBUG this => D#214
  # DEBUG __p => _83
  # DEBUG __n => D#207
  if (_83 != 0B)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  # DEBUG D#205 => &D#214->_M_impl
  # DEBUG D#203 => D#205
  # DEBUG D#204 => D#207
  # DEBUG __p => _83
  # DEBUG __a => D#203
  # DEBUG __n => D#204
  # DEBUG D#202 => D#204
  # DEBUG D#201 => D#203
  # DEBUG D#199 => D#201
  # DEBUG D#200 => D#202
  # DEBUG __p => _83
  # DEBUG this => D#199
  # DEBUG D.61803 => D#200
  operator delete (_83);

  <bb 134>:
  # DEBUG D#206 => &D#214->_M_impl
  # DEBUG this => D#206
  # DEBUG this => D#206
  # DEBUG this => D#206
  MEM[(struct  &)this_18(D) + 112] ={v} {CLOBBER};
  resx 3

<L66>:
  # DEBUG D#311 => &this_18(D)->D.44919
  # DEBUG this => D#311
  MEM[(struct TimedModule *)this_18(D)].D.33681._vptr.Module = &MEM[(void *)&_ZTV11TimedModule + 16B];
  _84 = &MEM[(struct TimedModule *)this_18(D)].D.33681;
  Module::~Module (_84);
  MEM[(struct  &)this_18(D)] ={v} {CLOBBER};
  resx 2

  <bb 136>:
  # DEBUG D#301 => &this_18(D)->_inject_cred
  _443 = MEM[(struct Channel * * *)this_18(D) + 160B];
  # DEBUG D#45 => D#301
  # DEBUG __n => _29
  # DEBUG this => D#45
  _442 = _443 + _42;
  _441 = *_442;
  if (_441 != 0B)
    goto <bb 15>;
  else
    goto <bb 32>;

  <bb 137>:
  # DEBUG D#305 => &this_18(D)->_eject_cred
  _439 = MEM[(struct Channel * * *)this_18(D) + 208B];
  # DEBUG D#45 => D#305
  # DEBUG __n => _41
  # DEBUG this => D#45
  _438 = _439 + _94;
  _416 = *_438;
  if (_416 != 0B)
    goto <bb 41>;
  else
    goto <bb 58>;

  <bb 138>:
  # DEBUG D#309 => &this_18(D)->_chan_cred
  _463 = MEM[(struct Channel * * *)this_18(D) + 256B];
  # DEBUG D#45 => D#309
  # DEBUG __n => _53
  # DEBUG this => D#45
  _445 = _463 + _97;
  _437 = *_445;
  if (_437 != 0B)
    goto <bb 65>;
  else
    goto <bb 82>;

}



;; Function Network::Network(const Configuration&, const string&) (_ZN7NetworkC2ERK13ConfigurationRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2109, decl_uid=44906, cgraph_uid=464, symbol_order=465)

Network::Network(const Configuration&, const string&) (struct Network * const this, const struct Configuration & config, const struct string & name)
{
  size_type __dnew;
  struct pair * * __nstart;
  const long unsigned int D.69644;
  const long unsigned int D.69643;
  const size_t __num_nodes;
  struct TimedModule * * * __nstart;
  struct TimedModule * * * __nfinish;
  const struct string D.49288;
  struct Module * _7;
  struct _Deque_base * _17;
  int _21;
  char * const _23;
  char * const _25;
  struct Channel * * _28;
  struct FlitChannel * * _29;
  struct Channel * * _30;
  struct FlitChannel * * _31;
  struct Channel * * _32;
  struct FlitChannel * * _33;
  struct Router * * _34;
  struct pair * _132;
  struct TimedModule * * * _134;
  long unsigned int _135;
  long unsigned int _136;
  long unsigned int _137;
  long unsigned int _138;
  struct TimedModule * * _143;
  void * _150;
  struct TimedModule * * * _151;
  void * _154;

  <bb 2>:
  # DEBUG D#408 => &this_3(D)->D.44919
  # DEBUG this => D#408
  # DEBUG parent => 0B
  # DEBUG name => name_5(D)
  _7 = &MEM[(struct TimedModule *)this_3(D)].D.33681;
  Module::Module (_7, 0B, name_5(D));
  this_3(D)->D.44919.D.33681._vptr.Module = &MEM[(void *)&_ZTV7Network + 16B];
  # DEBUG D#407 => &this_3(D)->_routers
  # DEBUG this => D#407
  # DEBUG D#198 => &D#407->D.43879
  # DEBUG this => D#198
  # DEBUG D#197 => &D#198->_M_impl
  # DEBUG this => D#197
  # DEBUG this => D#197
  # DEBUG this => D#197
  MEM[(struct _Vector_impl *)this_3(D) + 112B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 112B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 112B]._M_end_of_storage = 0B;
  # DEBUG D#406 => &this_3(D)->_inject
  # DEBUG this => D#406
  # DEBUG D#218 => &D#406->D.41359
  # DEBUG this => D#218
  # DEBUG D#217 => &D#218->_M_impl
  # DEBUG this => D#217
  # DEBUG this => D#217
  # DEBUG this => D#217
  MEM[(struct _Vector_impl *)this_3(D) + 136B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 136B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 136B]._M_end_of_storage = 0B;
  # DEBUG D#405 => &this_3(D)->_inject_cred
  # DEBUG this => D#405
  # DEBUG D#238 => &D#405->D.42106
  # DEBUG this => D#238
  # DEBUG D#237 => &D#238->_M_impl
  # DEBUG this => D#237
  # DEBUG this => D#237
  # DEBUG this => D#237
  MEM[(struct _Vector_impl *)this_3(D) + 160B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 160B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 160B]._M_end_of_storage = 0B;
  # DEBUG D#404 => &this_3(D)->_eject
  # DEBUG this => D#404
  # DEBUG D#218 => &D#404->D.41359
  # DEBUG this => D#218
  # DEBUG D#217 => &D#218->_M_impl
  # DEBUG this => D#217
  # DEBUG this => D#217
  # DEBUG this => D#217
  MEM[(struct _Vector_impl *)this_3(D) + 184B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 184B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 184B]._M_end_of_storage = 0B;
  # DEBUG D#403 => &this_3(D)->_eject_cred
  # DEBUG this => D#403
  # DEBUG D#238 => &D#403->D.42106
  # DEBUG this => D#238
  # DEBUG D#237 => &D#238->_M_impl
  # DEBUG this => D#237
  # DEBUG this => D#237
  # DEBUG this => D#237
  MEM[(struct _Vector_impl *)this_3(D) + 208B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 208B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 208B]._M_end_of_storage = 0B;
  # DEBUG D#402 => &this_3(D)->_chan
  # DEBUG this => D#402
  # DEBUG D#218 => &D#402->D.41359
  # DEBUG this => D#218
  # DEBUG D#217 => &D#218->_M_impl
  # DEBUG this => D#217
  # DEBUG this => D#217
  # DEBUG this => D#217
  MEM[(struct _Vector_impl *)this_3(D) + 232B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 232B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 232B]._M_end_of_storage = 0B;
  # DEBUG D#401 => &this_3(D)->_chan_cred
  # DEBUG this => D#401
  # DEBUG D#238 => &D#401->D.42106
  # DEBUG this => D#238
  # DEBUG D#237 => &D#238->_M_impl
  # DEBUG this => D#237
  # DEBUG this => D#237
  # DEBUG this => D#237
  MEM[(struct _Vector_impl *)this_3(D) + 256B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 256B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 256B]._M_end_of_storage = 0B;
  # DEBUG D#400 => &this_3(D)->_timed_modules
  # DEBUG this => D#400
  # DEBUG D#885 => &MEM[(struct deque *)this_3(D) + 280B].D.44805
  # DEBUG this => D#885
  # DEBUG D#390 => &D#885->_M_impl
  # DEBUG this => D#390
  # DEBUG this => D#390
  # DEBUG this => D#390
  MEM[(struct _Deque_impl *)this_3(D) + 280B]._M_map = 0B;
  # DEBUG D#258 => &D#390->_M_start
  # DEBUG this => D#258
  MEM[(struct _Deque_iterator *)this_3(D) + 296B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_3(D) + 296B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_3(D) + 296B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_3(D) + 296B]._M_node = 0B;
  # DEBUG D#257 => &D#390->_M_finish
  # DEBUG this => D#257
  MEM[(struct _Deque_iterator *)this_3(D) + 328B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_3(D) + 328B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_3(D) + 328B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_3(D) + 328B]._M_node = 0B;
  # DEBUG this => D#885
  # DEBUG __num_elements => 0
  # DEBUG __size => 8
  # DEBUG __num_nodes => 1
  # DEBUG __a => &D.69643
  # DEBUG __b => &D.69644
  MEM[(struct _Deque_base *)this_3(D) + 280B]._M_impl._M_map_size = 8;
  # DEBUG D#385 => D#885
  # DEBUG __n => 8
  # DEBUG this => D#385
  # DEBUG D#384 => D#385
  # DEBUG D#281 => D#384
  # DEBUG this => D#281
  # DEBUG D#280 => D#281
  # DEBUG this => D#280
  # DEBUG this => NULL
  # DEBUG D.61452 => NULL
  # DEBUG this => NULL
  # DEBUG D#383 => &__map_alloc
  # DEBUG __n => 8
  # DEBUG __a => D#383
  # DEBUG D#382 => D#383
  # DEBUG D#380 => D#382
  # DEBUG D#381 => 0B
  # DEBUG __n => 8
  # DEBUG this => D#380
  # DEBUG D.69641 => D#381
  # DEBUG D#379 => D#380
  # DEBUG D#378 => D#379
  # DEBUG this => D#378
  _134 = operator new (64);

  <bb 3>:
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  MEM[(struct _Deque_base *)this_3(D) + 280B]._M_impl._M_map = _134;
  _135 = MEM[(struct _Deque_base *)this_3(D) + 280B]._M_impl._M_map_size;
  _136 = _135 + 18446744073709551615;
  _137 = _136 >> 1;
  _138 = _137 * 8;
  __nstart_139 = _134 + _138;
  # DEBUG __nstart => __nstart_139
  # DEBUG D#882 => __nstart_139 + 8
  # DEBUG __nfinish => D#882
  # DEBUG D#373 => D#885
  # DEBUG __nstart => __nstart_139
  # DEBUG __nfinish => D#882
  # DEBUG this => D#555
  # DEBUG __cur => __nstart_139
  # DEBUG D#552 => D#553
  # DEBUG this => D#552
  # DEBUG D#551 => D#552
  # DEBUG __size => 16
  # DEBUG D#550 => &D#551->_M_impl
  # DEBUG D#549 => D#550
  # DEBUG __n => NULL
  # DEBUG __a => D#549
  # DEBUG D#548 => D#549
  # DEBUG D#546 => D#548
  # DEBUG D#547 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#546
  # DEBUG D.69670 => D#547
  # DEBUG D#545 => D#546
  # DEBUG D#544 => D#545
  # DEBUG this => D#544
  _132 = operator new (512);

  <bb 4>:
  *__nstart_139 = _132;
  # DEBUG D#883 => __nstart_139 + 8
  # DEBUG __cur => D#883
  # DEBUG __cur => D#883
  # DEBUG D#388 => &D#885->_M_impl._M_start
  # DEBUG this => D#388
  # DEBUG __new_node => __nstart_139
  MEM[(struct _Deque_iterator *)this_3(D) + 296B]._M_node = __nstart_139;
  MEM[(struct _Deque_iterator *)this_3(D) + 296B]._M_first = _132;
  # DEBUG __size => 8
  _143 = _132 + 512;
  MEM[(struct _Deque_iterator *)this_3(D) + 296B]._M_last = _143;
  # DEBUG D#387 => &D#885->_M_impl._M_finish
  # DEBUG this => D#387
  # DEBUG __new_node => __nstart_139
  MEM[(struct _Deque_iterator *)this_3(D) + 328B]._M_node = __nstart_139;
  MEM[(struct _Deque_iterator *)this_3(D) + 328B]._M_first = _132;
  # DEBUG __size => 8
  MEM[(struct _Deque_iterator *)this_3(D) + 328B]._M_last = _143;
  MEM[(struct _Deque_base *)this_3(D) + 280B]._M_impl._M_start._M_cur = _132;
  # DEBUG __size => 8
  MEM[(struct _Deque_base *)this_3(D) + 280B]._M_impl._M_finish._M_cur = _132;
  this_3(D)->_size = -1;
  this_3(D)->_nodes = -1;
  this_3(D)->_channels = -1;
  # DEBUG D#70 => &D.49289
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#336 => &D.49289
  # DEBUG this => &D.49288
  # DEBUG __s => "classes"
  # DEBUG __a => D#336
  # DEBUG D#335 => D#336
  # DEBUG this => &D.49288
  # DEBUG D#333 => &D.49288._M_dataplus
  # DEBUG D#149 => D#335
  # DEBUG this => D#333
  # DEBUG __dat => &D.49288.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#333
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.49288]._M_p = &D.49288.D.11553._M_local_buf;
  # DEBUG __s => "classes"
  # DEBUG this => &D.49288
  # DEBUG __beg => "classes"
  # DEBUG __end => &MEM[(void *)"classes" + 7B]
  # DEBUG this => &D.49288
  # DEBUG __beg => "classes"
  # DEBUG __end => &MEM[(void *)"classes" + 7B]
  # DEBUG this => &D.49288
  # DEBUG __beg => "classes"
  # DEBUG __end => &MEM[(void *)"classes" + 7B]
  # DEBUG __ptr => "classes"
  # DEBUG __first => "classes"
  # DEBUG __last => &MEM[(void *)"classes" + 7B]
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => "classes"
  # DEBUG __last => &MEM[(void *)"classes" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#1 => &D.49288
  # DEBUG this => D#1
  # DEBUG __p => &D.49288.D.11553._M_local_buf
  # DEBUG __k1 => "classes"
  # DEBUG __k2 => &MEM[(void *)"classes" + 7B]
  # DEBUG __d => &D.49288.D.11553._M_local_buf
  # DEBUG __s => "classes"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.49288.D.11553._M_local_buf
  # DEBUG __s2 => "classes"
  # DEBUG __n => 7
  __builtin_memcpy (&D.49288.D.11553._M_local_buf, "classes", 7);
  # DEBUG this => &D.49288
  # DEBUG __n => 7
  # DEBUG D#9 => &D.49288
  # DEBUG __length => 7
  # DEBUG this => D#9
  MEM[(size_type *)&D.49288 + 8B] = 7;
  # DEBUG D#1 => &D.49288
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.49288 + 23B]
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.49288 + 23] = 0;
  # DEBUG D#884 => {CLOBBER}
  # DEBUG __dnew => D#884
  _21 = Configuration::GetInt (config_19(D), &D.49288);
  goto <bb 10>;

<L14>:
  _154 = __builtin_eh_pointer (26);
  __cxa_begin_catch (_154);
  # DEBUG D#418 => D#554
  # DEBUG __nstart => __nstart_139
  # DEBUG __nfinish => __nstart_139
  # DEBUG this => D#418
  # DEBUG __n => __nstart_139
  __cxa_rethrow ();

<L16>:
  __cxa_end_catch ();
  resx 27

<L11>:
  _150 = __builtin_eh_pointer (25);
  __cxa_begin_catch (_150);
  # DEBUG D#386 => D#885->_M_impl._M_map_size
  _151 = MEM[(struct _Deque_base *)this_3(D) + 280B]._M_impl._M_map;
  # DEBUG D#284 => D#885
  # DEBUG D#285 => D#386
  # DEBUG __p => _151
  # DEBUG this => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#281 => D#282
  # DEBUG this => D#281
  # DEBUG D#280 => D#281
  # DEBUG this => D#280
  # DEBUG this => NULL
  # DEBUG D.61452 => NULL
  # DEBUG this => NULL
  # DEBUG D#263 => &__map_alloc
  # DEBUG D#264 => D#283
  # DEBUG __p => _151
  # DEBUG __a => D#263
  # DEBUG __n => D#264
  # DEBUG D#262 => D#264
  # DEBUG D#261 => D#263
  # DEBUG D#259 => D#261
  # DEBUG D#260 => D#262
  # DEBUG __p => _151
  # DEBUG this => D#259
  # DEBUG D.69627 => D#260
  operator delete (_151);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  MEM[(struct _Deque_base *)this_3(D) + 280B]._M_impl._M_map = 0B;
  MEM[(struct _Deque_base *)this_3(D) + 280B]._M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L13>:
  __cxa_end_catch ();
  resx 24

<L18>:
  goto <bb 19> (<L3>);

  <bb 10>:
  this_3(D)->_classes = _21;
  # DEBUG this => &D.49288
  # DEBUG this => &D.49288
  # DEBUG this => &D.49288
  _25 = MEM[(char * *)&D.49288];
  # DEBUG D#1 => &D.49288
  # DEBUG this => D#1
  # DEBUG this => &D.49288
  if (&D.49288.D.11553._M_local_buf != _25)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#165 => D.49288.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.49288
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.49288
  # DEBUG this => D#1
  # DEBUG this => &D.49288
  # DEBUG D#162 => &D.49288._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _25
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _25
  # DEBUG this => D#156
  # DEBUG D.62863 => D#157
  operator delete (_25);

  <bb 12>:
  # DEBUG D#166 => &D.49288._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.49288 ={v} {CLOBBER};
  # DEBUG this => &D.49289
  # DEBUG this => &D.49289
  return;

<L0>:
  # DEBUG this => &D.49288
  # DEBUG this => &D.49288
  # DEBUG this => &D.49288
  _23 = MEM[(char * *)&D.49288];
  # DEBUG D#1 => &D.49288
  # DEBUG this => D#1
  # DEBUG this => &D.49288
  if (&D.49288.D.11553._M_local_buf != _23)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#165 => D.49288.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.49288
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.49288
  # DEBUG this => D#1
  # DEBUG this => &D.49288
  # DEBUG D#162 => &D.49288._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _23
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _23
  # DEBUG this => D#156
  # DEBUG D.62878 => D#157
  operator delete (_23);

  <bb 15>:
  # DEBUG D#166 => &D.49288._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.49288 ={v} {CLOBBER};
  resx 11

<L1>:
  # DEBUG this => &D.49289
  # DEBUG this => &D.49289
  # DEBUG D#397 => &this_3(D)->_timed_modules
  # DEBUG this => D#397
  # DEBUG D#288 => &D#397->D.44805
  # DEBUG this => D#288
  # DEBUG this => D#397
  # DEBUG D#63 => &D#397->D.44805._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#63
  # DEBUG D#296 => MEM[(const struct iterator &)D#397 + 48]._M_cur
  # DEBUG D.61534 => D#296
  # DEBUG D#295 => MEM[(const struct iterator &)D#397 + 48]._M_first
  # DEBUG D.61535 => D#295
  # DEBUG D#294 => MEM[(const struct iterator &)D#397 + 48]._M_last
  # DEBUG D.61536 => D#294
  # DEBUG D#293 => MEM[(const struct iterator &)D#397 + 48]._M_node
  # DEBUG D.61537 => D#293
  # DEBUG this => D#397
  # DEBUG D#64 => &D#397->D.44805._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#64
  # DEBUG D#292 => MEM[(const struct iterator &)D#397 + 16]._M_cur
  # DEBUG D.61530 => D#292
  # DEBUG D#291 => MEM[(const struct iterator &)D#397 + 16]._M_first
  # DEBUG D.61531 => D#291
  # DEBUG D#290 => MEM[(const struct iterator &)D#397 + 16]._M_last
  # DEBUG D.61532 => D#290
  # DEBUG D#289 => MEM[(const struct iterator &)D#397 + 16]._M_node
  # DEBUG D.61533 => D#289
  # DEBUG D#65 => D#397
  # DEBUG this => D#65
  # DEBUG __first => D#66
  # DEBUG __last => D#67
  # DEBUG D.61518 => D#68
  _17 = &MEM[(struct deque *)this_3(D) + 280B].D.44805;
  std::_Deque_base<TimedModule*, std::allocator<TimedModule*> >::~_Deque_base (_17);
  MEM[(struct  &)this_3(D) + 280] ={v} {CLOBBER};
  resx 9

<L19>:
  goto <bb 19> (<L3>);

<L17>:

<L3>:
  # DEBUG D#399 => &this_3(D)->_chan_cred
  # DEBUG this => D#399
  # DEBUG D#253 => &D#399->D.42106
  # DEBUG this => D#253
  # DEBUG D#256 => D#399->D.42106._M_impl._M_finish
  # DEBUG D#255 => D#399->D.42106._M_impl._M_start
  # DEBUG __first => D#255
  # DEBUG __last => D#256
  # DEBUG D.61300 => NULL
  # DEBUG D#138 => D#255
  # DEBUG D#139 => D#256
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  # DEBUG D#254 => &D#399->D.42106
  # DEBUG this => D#254
  # DEBUG D#252 => D#254->_M_impl._M_end_of_storage
  # DEBUG D#251 => (long int) D#252
  _28 = MEM[(struct _Vector_base *)this_3(D) + 256B]._M_impl._M_start;
  # DEBUG D#250 => (long int) _28
  # DEBUG D#249 => D#251 - D#250
  # DEBUG D#248 => D#249 /[ex] 8
  # DEBUG D#247 => (long unsigned int) D#248
  # DEBUG this => D#254
  # DEBUG __p => _28
  # DEBUG __n => D#247
  if (_28 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#245 => &D#254->_M_impl
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#247
  # DEBUG __p => _28
  # DEBUG __a => D#243
  # DEBUG __n => D#244
  # DEBUG D#242 => D#244
  # DEBUG D#241 => D#243
  # DEBUG D#239 => D#241
  # DEBUG D#240 => D#242
  # DEBUG __p => _28
  # DEBUG this => D#239
  # DEBUG D.62898 => D#240
  operator delete (_28);

  <bb 21>:
  # DEBUG D#246 => &D#254->_M_impl
  # DEBUG this => D#246
  # DEBUG this => D#246
  # DEBUG this => D#246
  MEM[(struct  &)this_3(D) + 256] ={v} {CLOBBER};
  resx 8

<L4>:
  # DEBUG D#398 => &this_3(D)->_chan
  # DEBUG this => D#398
  # DEBUG D#233 => &D#398->D.41359
  # DEBUG this => D#233
  # DEBUG D#236 => D#398->D.41359._M_impl._M_finish
  # DEBUG D#235 => D#398->D.41359._M_impl._M_start
  # DEBUG __first => D#235
  # DEBUG __last => D#236
  # DEBUG D.61225 => NULL
  # DEBUG D#128 => D#235
  # DEBUG D#129 => D#236
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  # DEBUG D#234 => &D#398->D.41359
  # DEBUG this => D#234
  # DEBUG D#232 => D#234->_M_impl._M_end_of_storage
  # DEBUG D#231 => (long int) D#232
  _29 = MEM[(struct _Vector_base *)this_3(D) + 232B]._M_impl._M_start;
  # DEBUG D#230 => (long int) _29
  # DEBUG D#229 => D#231 - D#230
  # DEBUG D#228 => D#229 /[ex] 8
  # DEBUG D#227 => (long unsigned int) D#228
  # DEBUG this => D#234
  # DEBUG __p => _29
  # DEBUG __n => D#227
  if (_29 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#225 => &D#234->_M_impl
  # DEBUG D#223 => D#225
  # DEBUG D#224 => D#227
  # DEBUG __p => _29
  # DEBUG __a => D#223
  # DEBUG __n => D#224
  # DEBUG D#222 => D#224
  # DEBUG D#221 => D#223
  # DEBUG D#219 => D#221
  # DEBUG D#220 => D#222
  # DEBUG __p => _29
  # DEBUG this => D#219
  # DEBUG D.62913 => D#220
  operator delete (_29);

  <bb 24>:
  # DEBUG D#226 => &D#234->_M_impl
  # DEBUG this => D#226
  # DEBUG this => D#226
  # DEBUG this => D#226
  MEM[(struct  &)this_3(D) + 232] ={v} {CLOBBER};
  resx 7

<L5>:
  # DEBUG D#396 => &this_3(D)->_eject_cred
  # DEBUG this => D#396
  # DEBUG D#253 => &D#396->D.42106
  # DEBUG this => D#253
  # DEBUG D#256 => D#396->D.42106._M_impl._M_finish
  # DEBUG D#255 => D#396->D.42106._M_impl._M_start
  # DEBUG __first => D#255
  # DEBUG __last => D#256
  # DEBUG D.61300 => NULL
  # DEBUG D#138 => D#255
  # DEBUG D#139 => D#256
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  # DEBUG D#254 => &D#396->D.42106
  # DEBUG this => D#254
  # DEBUG D#252 => D#254->_M_impl._M_end_of_storage
  # DEBUG D#251 => (long int) D#252
  _30 = MEM[(struct _Vector_base *)this_3(D) + 208B]._M_impl._M_start;
  # DEBUG D#250 => (long int) _30
  # DEBUG D#249 => D#251 - D#250
  # DEBUG D#248 => D#249 /[ex] 8
  # DEBUG D#247 => (long unsigned int) D#248
  # DEBUG this => D#254
  # DEBUG __p => _30
  # DEBUG __n => D#247
  if (_30 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#245 => &D#254->_M_impl
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#247
  # DEBUG __p => _30
  # DEBUG __a => D#243
  # DEBUG __n => D#244
  # DEBUG D#242 => D#244
  # DEBUG D#241 => D#243
  # DEBUG D#239 => D#241
  # DEBUG D#240 => D#242
  # DEBUG __p => _30
  # DEBUG this => D#239
  # DEBUG D.62928 => D#240
  operator delete (_30);

  <bb 27>:
  # DEBUG D#246 => &D#254->_M_impl
  # DEBUG this => D#246
  # DEBUG this => D#246
  # DEBUG this => D#246
  MEM[(struct  &)this_3(D) + 208] ={v} {CLOBBER};
  resx 6

<L6>:
  # DEBUG D#395 => &this_3(D)->_eject
  # DEBUG this => D#395
  # DEBUG D#233 => &D#395->D.41359
  # DEBUG this => D#233
  # DEBUG D#236 => D#395->D.41359._M_impl._M_finish
  # DEBUG D#235 => D#395->D.41359._M_impl._M_start
  # DEBUG __first => D#235
  # DEBUG __last => D#236
  # DEBUG D.61225 => NULL
  # DEBUG D#128 => D#235
  # DEBUG D#129 => D#236
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  # DEBUG D#234 => &D#395->D.41359
  # DEBUG this => D#234
  # DEBUG D#232 => D#234->_M_impl._M_end_of_storage
  # DEBUG D#231 => (long int) D#232
  _31 = MEM[(struct _Vector_base *)this_3(D) + 184B]._M_impl._M_start;
  # DEBUG D#230 => (long int) _31
  # DEBUG D#229 => D#231 - D#230
  # DEBUG D#228 => D#229 /[ex] 8
  # DEBUG D#227 => (long unsigned int) D#228
  # DEBUG this => D#234
  # DEBUG __p => _31
  # DEBUG __n => D#227
  if (_31 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#225 => &D#234->_M_impl
  # DEBUG D#223 => D#225
  # DEBUG D#224 => D#227
  # DEBUG __p => _31
  # DEBUG __a => D#223
  # DEBUG __n => D#224
  # DEBUG D#222 => D#224
  # DEBUG D#221 => D#223
  # DEBUG D#219 => D#221
  # DEBUG D#220 => D#222
  # DEBUG __p => _31
  # DEBUG this => D#219
  # DEBUG D.62943 => D#220
  operator delete (_31);

  <bb 30>:
  # DEBUG D#226 => &D#234->_M_impl
  # DEBUG this => D#226
  # DEBUG this => D#226
  # DEBUG this => D#226
  MEM[(struct  &)this_3(D) + 184] ={v} {CLOBBER};
  resx 5

<L7>:
  # DEBUG D#394 => &this_3(D)->_inject_cred
  # DEBUG this => D#394
  # DEBUG D#253 => &D#394->D.42106
  # DEBUG this => D#253
  # DEBUG D#256 => D#394->D.42106._M_impl._M_finish
  # DEBUG D#255 => D#394->D.42106._M_impl._M_start
  # DEBUG __first => D#255
  # DEBUG __last => D#256
  # DEBUG D.61300 => NULL
  # DEBUG D#138 => D#255
  # DEBUG D#139 => D#256
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  # DEBUG D#254 => &D#394->D.42106
  # DEBUG this => D#254
  # DEBUG D#252 => D#254->_M_impl._M_end_of_storage
  # DEBUG D#251 => (long int) D#252
  _32 = MEM[(struct _Vector_base *)this_3(D) + 160B]._M_impl._M_start;
  # DEBUG D#250 => (long int) _32
  # DEBUG D#249 => D#251 - D#250
  # DEBUG D#248 => D#249 /[ex] 8
  # DEBUG D#247 => (long unsigned int) D#248
  # DEBUG this => D#254
  # DEBUG __p => _32
  # DEBUG __n => D#247
  if (_32 != 0B)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # DEBUG D#245 => &D#254->_M_impl
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#247
  # DEBUG __p => _32
  # DEBUG __a => D#243
  # DEBUG __n => D#244
  # DEBUG D#242 => D#244
  # DEBUG D#241 => D#243
  # DEBUG D#239 => D#241
  # DEBUG D#240 => D#242
  # DEBUG __p => _32
  # DEBUG this => D#239
  # DEBUG D.62958 => D#240
  operator delete (_32);

  <bb 33>:
  # DEBUG D#246 => &D#254->_M_impl
  # DEBUG this => D#246
  # DEBUG this => D#246
  # DEBUG this => D#246
  MEM[(struct  &)this_3(D) + 160] ={v} {CLOBBER};
  resx 4

<L8>:
  # DEBUG D#393 => &this_3(D)->_inject
  # DEBUG this => D#393
  # DEBUG D#233 => &D#393->D.41359
  # DEBUG this => D#233
  # DEBUG D#236 => D#393->D.41359._M_impl._M_finish
  # DEBUG D#235 => D#393->D.41359._M_impl._M_start
  # DEBUG __first => D#235
  # DEBUG __last => D#236
  # DEBUG D.61225 => NULL
  # DEBUG D#128 => D#235
  # DEBUG D#129 => D#236
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  # DEBUG D#234 => &D#393->D.41359
  # DEBUG this => D#234
  # DEBUG D#232 => D#234->_M_impl._M_end_of_storage
  # DEBUG D#231 => (long int) D#232
  _33 = MEM[(struct _Vector_base *)this_3(D) + 136B]._M_impl._M_start;
  # DEBUG D#230 => (long int) _33
  # DEBUG D#229 => D#231 - D#230
  # DEBUG D#228 => D#229 /[ex] 8
  # DEBUG D#227 => (long unsigned int) D#228
  # DEBUG this => D#234
  # DEBUG __p => _33
  # DEBUG __n => D#227
  if (_33 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG D#225 => &D#234->_M_impl
  # DEBUG D#223 => D#225
  # DEBUG D#224 => D#227
  # DEBUG __p => _33
  # DEBUG __a => D#223
  # DEBUG __n => D#224
  # DEBUG D#222 => D#224
  # DEBUG D#221 => D#223
  # DEBUG D#219 => D#221
  # DEBUG D#220 => D#222
  # DEBUG __p => _33
  # DEBUG this => D#219
  # DEBUG D.62973 => D#220
  operator delete (_33);

  <bb 36>:
  # DEBUG D#226 => &D#234->_M_impl
  # DEBUG this => D#226
  # DEBUG this => D#226
  # DEBUG this => D#226
  MEM[(struct  &)this_3(D) + 136] ={v} {CLOBBER};
  resx 3

<L9>:
  # DEBUG D#392 => &this_3(D)->_routers
  # DEBUG this => D#392
  # DEBUG D#213 => &D#392->D.43879
  # DEBUG this => D#213
  # DEBUG D#216 => D#392->D.43879._M_impl._M_finish
  # DEBUG D#215 => D#392->D.43879._M_impl._M_start
  # DEBUG __first => D#215
  # DEBUG __last => D#216
  # DEBUG D.61150 => NULL
  # DEBUG D#118 => D#215
  # DEBUG D#119 => D#216
  # DEBUG __first => D#118
  # DEBUG __last => D#119
  # DEBUG D#117 => D#119
  # DEBUG D#116 => D#118
  # DEBUG D#114 => D#116
  # DEBUG D#115 => D#117
  # DEBUG D.60604 => D#114
  # DEBUG D.60603 => D#115
  # DEBUG D#214 => &D#392->D.43879
  # DEBUG this => D#214
  # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
  # DEBUG D#211 => (long int) D#212
  _34 = MEM[(struct _Vector_base *)this_3(D) + 112B]._M_impl._M_start;
  # DEBUG D#210 => (long int) _34
  # DEBUG D#209 => D#211 - D#210
  # DEBUG D#208 => D#209 /[ex] 8
  # DEBUG D#207 => (long unsigned int) D#208
  # DEBUG this => D#214
  # DEBUG __p => _34
  # DEBUG __n => D#207
  if (_34 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#205 => &D#214->_M_impl
  # DEBUG D#203 => D#205
  # DEBUG D#204 => D#207
  # DEBUG __p => _34
  # DEBUG __a => D#203
  # DEBUG __n => D#204
  # DEBUG D#202 => D#204
  # DEBUG D#201 => D#203
  # DEBUG D#199 => D#201
  # DEBUG D#200 => D#202
  # DEBUG __p => _34
  # DEBUG this => D#199
  # DEBUG D.62988 => D#200
  operator delete (_34);

  <bb 39>:
  # DEBUG D#206 => &D#214->_M_impl
  # DEBUG this => D#206
  # DEBUG this => D#206
  # DEBUG this => D#206
  MEM[(struct  &)this_3(D) + 112] ={v} {CLOBBER};
  resx 2

<L10>:
  # DEBUG D#391 => &this_3(D)->D.44919
  # DEBUG this => D#391
  MEM[(struct TimedModule *)this_3(D)].D.33681._vptr.Module = &MEM[(void *)&_ZTV11TimedModule + 16B];
  Module::~Module (_7);
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  resx 1

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Router*; _Alloc = std::allocator<Router*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Router**, std::vector<Router*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Router**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Router*] (_ZNSt6vectorIP6RouterSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=2450, decl_uid=43802, cgraph_uid=805, symbol_order=806)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Router*; _Alloc = std::allocator<Router*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Router**, std::vector<Router*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Router**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Router*] (struct vector * const this, struct iterator __position, size_type __n, struct Router * const & __x)
{
  const long unsigned int D.69881;
  const size_type __len;
  size_type D.69880;
  size_type __n;
  struct Channel * * D.69871;
  const ptrdiff_t _Num;
  struct pair * * D.69862;
  struct Router * * const __position;
  struct Router * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct Router * * __first;
  long unsigned int __n;
  struct Router * * __first;
  const ptrdiff_t _Num;
  struct Router * * __first;
  struct Router * * __new_finish;
  const size_type __elems_after;
  struct Router * __x_copy;
  struct Router * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Channel * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct Router * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct Router * * _41;
  struct Router * * _43;
  long int _47;
  struct Router * * _48;
  long int __first.84_49;
  struct Router * * _53;
  struct Router * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct Router * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct pair * * _108;
  struct Channel * * _112;
  struct Channel * * iftmp.117_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct Router * * prephitmp_146;
  struct Router * * pretmp_147;
  struct Channel * * prephitmp_148;
  struct Channel * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct Router * * pretmp_166;
  struct Router * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct Router * * pretmp_173;
  struct Router * * prephitmp_174;

  <bb 2>:
  # DEBUG D#894 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#894
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.43879._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.43879._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#82 => &this_4(D)->D.43879._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#82
  # DEBUG __lhs => &D.52648
  # DEBUG __rhs => &__position
  # DEBUG this => &D.52648
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#586 => &this_4(D)->D.43879
  # DEBUG this => D#586
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#578
  # DEBUG D#577 => D#578
  # DEBUG D#576 => D#577
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.65043 => D#576
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.84_49 = (long int) _41;
  _47 = _8 - __first.84_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.43879._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.43879._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#894
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#894
  # DEBUG __it => D#894
  # DEBUG __first => D#894
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#894
  # DEBUG __it => D#894
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _104 = __first.84_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#357 => &__x_copy
  # DEBUG __first => D#894
  # DEBUG __last => _48
  # DEBUG D#356 => D#357
  # DEBUG __value => D#356
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#894
  # DEBUG __it => D#894
  # DEBUG D#265 => D#356
  # DEBUG __first => D#894
  # DEBUG __last => _48
  # DEBUG __value => D#265
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#894
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#587 => &this_4(D)->D.43879
  # DEBUG this => D#587
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#493 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#492 => D#493
  # DEBUG __x => D#492
  # DEBUG D.65128 => D#494
  # DEBUG D#491 => D#492
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#490 => D#491
  # DEBUG __x => D#490
  # DEBUG __assignable => 1
  # DEBUG D#489 => D#490
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#488 => D#489
  # DEBUG __x => D#488
  # DEBUG D#487 => D#488
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#486 => D#487
  # DEBUG __value => D#486
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#485 => D#486
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#485
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.43879._M_impl._M_finish = __first_125;
  # DEBUG D#588 => &this_4(D)->D.43879
  # DEBUG this => D#588
  # DEBUG this => &__position
  # DEBUG __first => D#894
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#578
  # DEBUG D#577 => D#578
  # DEBUG D#576 => D#577
  # DEBUG __first => D#894
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.65090 => D#576
  # DEBUG __first => D#894
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#894
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#894
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#894
  # DEBUG __it => D#894
  # DEBUG __first => D#894
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#894
  # DEBUG __it => D#894
  # DEBUG __first => D#894
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#894
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.43879._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.43879._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#357 => &__x_copy
  # DEBUG __first => D#894
  # DEBUG __last => __first_7
  # DEBUG D#356 => D#357
  # DEBUG __value => D#356
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#894
  # DEBUG __it => D#894
  # DEBUG D#265 => D#356
  # DEBUG __first => D#894
  # DEBUG __last => __first_7
  # DEBUG __value => D#265
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#894
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#472 => this_4(D)
  # DEBUG this => D#472
  # DEBUG D#471 => D#472
  # DEBUG D#470 => &D#471->D.42106
  # DEBUG this => D#470
  # DEBUG __a => D#469
  # DEBUG D#468 => D#469
  # DEBUG D#467 => D#468
  # DEBUG this => D#467
  _17 = MEM[(struct Channel * * *)this_4(D)];
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  # DEBUG __a => &D.69881
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  # DEBUG D#472 => this_4(D)
  # DEBUG this => D#472
  # DEBUG D#471 => D#472
  # DEBUG D#470 => &D#471->D.42106
  # DEBUG this => D#470
  # DEBUG __a => D#469
  # DEBUG D#468 => D#469
  # DEBUG D#467 => D#468
  # DEBUG this => D#467
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#153 => &this_4(D)->D.43879._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#153
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.52681
  # DEBUG this => &__position
  # DEBUG this => &D.52681
  # DEBUG D#599 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#599
  # DEBUG D#598 => &this_4(D)->D.43879
  # DEBUG D#452 => D#598
  # DEBUG __n => NULL
  # DEBUG this => D#480
  # DEBUG D#479 => D#480
  # DEBUG D#478 => &D#479->_M_impl
  # DEBUG D#477 => D#478
  # DEBUG __n => NULL
  # DEBUG __a => D#477
  # DEBUG D#476 => D#477
  # DEBUG D#474 => D#476
  # DEBUG D#475 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#474
  # DEBUG D.69869 => D#475
  # DEBUG D#473 => D#474
  # DEBUG D#467 => D#473
  # DEBUG this => D#467
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.43879._M_impl._M_start;
  pretmp_147 = this_4(D)->D.43879._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.117_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#582 => &this_4(D)->D.43879
  # DEBUG this => D#582
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.117_113 + _19;
  _56 = MEM[(struct Router * const &)__x_21(D)];
  # DEBUG D#493 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#492 => D#493
  # DEBUG __x => D#492
  # DEBUG D.65245 => D#494
  # DEBUG D#491 => D#492
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#490 => D#491
  # DEBUG __x => D#490
  # DEBUG __assignable => 1
  # DEBUG D#489 => D#490
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#488 => D#489
  # DEBUG __x => D#488
  # DEBUG D#487 => D#488
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#486 => D#487
  # DEBUG __value => D#486
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#485 => D#486
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#485
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#583 => &this_4(D)->D.43879
  # DEBUG this => D#583
  # DEBUG this => &__position
  # DEBUG D#893 => this_4(D)->D.43879._M_impl._M_start
  # DEBUG __first => D#893
  # DEBUG __last => D#894
  # DEBUG __result => NULL
  # DEBUG __alloc => D#580
  # DEBUG D#579 => D#580
  # DEBUG D#576 => D#579
  # DEBUG __first => D#893
  # DEBUG __last => D#894
  # DEBUG __result => NULL
  # DEBUG D.65207 => D#576
  # DEBUG __first => D#893
  # DEBUG __last => D#894
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#893
  # DEBUG __last => D#894
  # DEBUG __result => NULL
  # DEBUG __first => D#893
  # DEBUG __last => D#894
  # DEBUG __result => NULL
  # DEBUG __it => D#894
  # DEBUG __it => D#894
  # DEBUG __it => D#893
  # DEBUG __it => D#893
  # DEBUG __first => D#893
  # DEBUG __last => D#894
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#894
  # DEBUG __it => D#894
  # DEBUG __it => D#893
  # DEBUG __it => D#893
  # DEBUG __first => D#893
  # DEBUG __last => D#894
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#893
  # DEBUG __last => D#894
  # DEBUG __result => NULL
  # DEBUG D#892 => (long int) D#893
  # DEBUG D#891 => _158 - D#892
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.117_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#890 => (long unsigned int) D#891
  # DEBUG __new_finish => iftmp.117_113 + D#890
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.117_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#584 => &this_4(D)->D.43879
  # DEBUG this => D#584
  # DEBUG D#889 => this_4(D)->D.43879._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#894
  # DEBUG __last => D#889
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#580
  # DEBUG D#579 => D#580
  # DEBUG D#576 => D#579
  # DEBUG __first => D#894
  # DEBUG __last => D#889
  # DEBUG __result => __new_finish_26
  # DEBUG D.65168 => D#576
  # DEBUG __first => D#894
  # DEBUG __last => D#889
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#894
  # DEBUG __last => D#889
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#894
  # DEBUG __last => D#889
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#889
  # DEBUG __it => D#889
  # DEBUG __it => D#894
  # DEBUG __it => D#894
  # DEBUG __first => D#894
  # DEBUG __last => D#889
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#889
  # DEBUG __it => D#889
  # DEBUG __it => D#894
  # DEBUG __it => D#894
  # DEBUG __first => D#894
  # DEBUG __last => D#889
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#894
  # DEBUG __last => D#889
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#585 => &this_4(D)->D.43879
  # DEBUG this => D#585
  # DEBUG D#597 => this_4(D)->D.43879._M_impl._M_finish
  # DEBUG D#596 => this_4(D)->D.43879._M_impl._M_start
  # DEBUG __first => D#596
  # DEBUG __last => D#597
  # DEBUG D.65161 => NULL
  # DEBUG D#118 => D#596
  # DEBUG D#119 => D#597
  # DEBUG __first => D#118
  # DEBUG __last => D#119
  # DEBUG D#117 => D#119
  # DEBUG D#116 => D#118
  # DEBUG D#114 => D#116
  # DEBUG D#115 => D#117
  # DEBUG D.60604 => D#114
  # DEBUG D.60603 => D#115
  # DEBUG D#595 => this_4(D)->D.43879._M_impl._M_end_of_storage
  # DEBUG D#594 => (long int) D#595
  # DEBUG D#593 => (long int) D#893
  # DEBUG D#592 => D#594 - D#593
  # DEBUG D#591 => D#592 /[ex] 8
  # DEBUG D#590 => (long unsigned int) D#591
  # DEBUG D#589 => &this_4(D)->D.43879
  # DEBUG this => D#589
  # DEBUG __p => D#893
  # DEBUG __n => D#590
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#205 => &D#589->_M_impl
  # DEBUG D#203 => D#205
  # DEBUG D#204 => D#590
  # DEBUG __p => D#893
  # DEBUG __a => D#203
  # DEBUG __n => D#204
  # DEBUG D#202 => D#204
  # DEBUG D#201 => D#203
  # DEBUG D#199 => D#201
  # DEBUG D#200 => D#202
  # DEBUG __p => D#893
  # DEBUG this => D#199
  # DEBUG D.65157 => D#200
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.43879._M_impl._M_start = iftmp.117_113;
  this_4(D)->D.43879._M_impl._M_finish = _70;
  this_4(D)->D.43879._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#153 => &this_4(D)->D.43879._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#153
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.52681
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.52681
  _143 = _144 - _116;
  # DEBUG D#599 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#599
  # DEBUG D#598 => &this_4(D)->D.43879
  # DEBUG D#452 => D#598
  # DEBUG __n => NULL
  # DEBUG this => D#480
  # DEBUG D#479 => D#480
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#153 => &this_4(D)->D.43879._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#153
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.52681
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.52681
  _150 = _151 - _116;
  # DEBUG D#599 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#599
  # DEBUG D#598 => &this_4(D)->D.43879
  # DEBUG D#452 => D#598
  # DEBUG __n => NULL
  # DEBUG this => D#480
  # DEBUG D#479 => D#480
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = FlitChannel*; _Alloc = std::allocator<FlitChannel*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<FlitChannel**, std::vector<FlitChannel*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = FlitChannel**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = FlitChannel*] (_ZNSt6vectorIP11FlitChannelSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=2454, decl_uid=41282, cgraph_uid=809, symbol_order=810)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = FlitChannel*; _Alloc = std::allocator<FlitChannel*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<FlitChannel**, std::vector<FlitChannel*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = FlitChannel**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = FlitChannel*] (struct vector * const this, struct iterator __position, size_type __n, struct FlitChannel * const & __x)
{
  const long unsigned int D.70013;
  const size_type __len;
  size_type D.70012;
  size_type __n;
  struct Channel * * D.70003;
  const ptrdiff_t _Num;
  struct pair * * D.69994;
  struct FlitChannel * * const __position;
  struct FlitChannel * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct FlitChannel * * __first;
  long unsigned int __n;
  struct FlitChannel * * __first;
  const ptrdiff_t _Num;
  struct FlitChannel * * __first;
  struct FlitChannel * * __new_finish;
  const size_type __elems_after;
  struct FlitChannel * __x_copy;
  struct FlitChannel * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Channel * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct FlitChannel * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct FlitChannel * * _41;
  struct FlitChannel * * _43;
  long int _47;
  struct FlitChannel * * _48;
  long int __first.98_49;
  struct FlitChannel * * _53;
  struct FlitChannel * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct FlitChannel * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct pair * * _108;
  struct Channel * * _112;
  struct Channel * * iftmp.117_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct FlitChannel * * prephitmp_146;
  struct FlitChannel * * pretmp_147;
  struct Channel * * prephitmp_148;
  struct Channel * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct FlitChannel * * pretmp_166;
  struct FlitChannel * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct FlitChannel * * pretmp_173;
  struct FlitChannel * * prephitmp_174;

  <bb 2>:
  # DEBUG D#934 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#934
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.41359._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.41359._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#83 => &this_4(D)->D.41359._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#83
  # DEBUG __lhs => &D.52695
  # DEBUG __rhs => &__position
  # DEBUG this => &D.52695
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#610 => &this_4(D)->D.41359
  # DEBUG this => D#610
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#602
  # DEBUG D#601 => D#602
  # DEBUG D#600 => D#601
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.65630 => D#600
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.98_49 = (long int) _41;
  _47 = _8 - __first.98_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.41359._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.41359._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#934
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#934
  # DEBUG __it => D#934
  # DEBUG __first => D#934
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#934
  # DEBUG __it => D#934
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _104 = __first.98_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#359 => &__x_copy
  # DEBUG __first => D#934
  # DEBUG __last => _48
  # DEBUG D#358 => D#359
  # DEBUG __value => D#358
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#934
  # DEBUG __it => D#934
  # DEBUG D#266 => D#358
  # DEBUG __first => D#934
  # DEBUG __last => _48
  # DEBUG __value => D#266
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#934
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#611 => &this_4(D)->D.41359
  # DEBUG this => D#611
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#503 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#502 => D#503
  # DEBUG __x => D#502
  # DEBUG D.65715 => D#504
  # DEBUG D#501 => D#502
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#500 => D#501
  # DEBUG __x => D#500
  # DEBUG __assignable => 1
  # DEBUG D#499 => D#500
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#498 => D#499
  # DEBUG __x => D#498
  # DEBUG D#497 => D#498
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#496 => D#497
  # DEBUG __value => D#496
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#495 => D#496
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#495
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.41359._M_impl._M_finish = __first_125;
  # DEBUG D#612 => &this_4(D)->D.41359
  # DEBUG this => D#612
  # DEBUG this => &__position
  # DEBUG __first => D#934
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#602
  # DEBUG D#601 => D#602
  # DEBUG D#600 => D#601
  # DEBUG __first => D#934
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.65677 => D#600
  # DEBUG __first => D#934
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#934
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#934
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#934
  # DEBUG __it => D#934
  # DEBUG __first => D#934
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#934
  # DEBUG __it => D#934
  # DEBUG __first => D#934
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#934
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.41359._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.41359._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#359 => &__x_copy
  # DEBUG __first => D#934
  # DEBUG __last => __first_7
  # DEBUG D#358 => D#359
  # DEBUG __value => D#358
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#934
  # DEBUG __it => D#934
  # DEBUG D#266 => D#358
  # DEBUG __first => D#934
  # DEBUG __last => __first_7
  # DEBUG __value => D#266
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#934
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#472 => this_4(D)
  # DEBUG this => D#472
  # DEBUG D#471 => D#472
  # DEBUG D#470 => &D#471->D.42106
  # DEBUG this => D#470
  # DEBUG __a => D#469
  # DEBUG D#468 => D#469
  # DEBUG D#467 => D#468
  # DEBUG this => D#467
  _17 = MEM[(struct Channel * * *)this_4(D)];
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  # DEBUG __a => &D.70013
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  # DEBUG D#472 => this_4(D)
  # DEBUG this => D#472
  # DEBUG D#471 => D#472
  # DEBUG D#470 => &D#471->D.42106
  # DEBUG this => D#470
  # DEBUG __a => D#469
  # DEBUG D#468 => D#469
  # DEBUG D#467 => D#468
  # DEBUG this => D#467
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#154 => &this_4(D)->D.41359._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#154
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.52728
  # DEBUG this => &__position
  # DEBUG this => &D.52728
  # DEBUG D#623 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#623
  # DEBUG D#622 => &this_4(D)->D.41359
  # DEBUG D#466 => D#622
  # DEBUG __n => NULL
  # DEBUG this => D#480
  # DEBUG D#479 => D#480
  # DEBUG D#478 => &D#479->_M_impl
  # DEBUG D#477 => D#478
  # DEBUG __n => NULL
  # DEBUG __a => D#477
  # DEBUG D#476 => D#477
  # DEBUG D#474 => D#476
  # DEBUG D#475 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#474
  # DEBUG D.70001 => D#475
  # DEBUG D#473 => D#474
  # DEBUG D#467 => D#473
  # DEBUG this => D#467
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.41359._M_impl._M_start;
  pretmp_147 = this_4(D)->D.41359._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.117_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#606 => &this_4(D)->D.41359
  # DEBUG this => D#606
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.117_113 + _19;
  _56 = MEM[(struct FlitChannel * const &)__x_21(D)];
  # DEBUG D#503 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#502 => D#503
  # DEBUG __x => D#502
  # DEBUG D.65832 => D#504
  # DEBUG D#501 => D#502
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#500 => D#501
  # DEBUG __x => D#500
  # DEBUG __assignable => 1
  # DEBUG D#499 => D#500
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#498 => D#499
  # DEBUG __x => D#498
  # DEBUG D#497 => D#498
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#496 => D#497
  # DEBUG __value => D#496
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#495 => D#496
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#495
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#607 => &this_4(D)->D.41359
  # DEBUG this => D#607
  # DEBUG this => &__position
  # DEBUG D#933 => this_4(D)->D.41359._M_impl._M_start
  # DEBUG __first => D#933
  # DEBUG __last => D#934
  # DEBUG __result => NULL
  # DEBUG __alloc => D#604
  # DEBUG D#603 => D#604
  # DEBUG D#600 => D#603
  # DEBUG __first => D#933
  # DEBUG __last => D#934
  # DEBUG __result => NULL
  # DEBUG D.65794 => D#600
  # DEBUG __first => D#933
  # DEBUG __last => D#934
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#933
  # DEBUG __last => D#934
  # DEBUG __result => NULL
  # DEBUG __first => D#933
  # DEBUG __last => D#934
  # DEBUG __result => NULL
  # DEBUG __it => D#934
  # DEBUG __it => D#934
  # DEBUG __it => D#933
  # DEBUG __it => D#933
  # DEBUG __first => D#933
  # DEBUG __last => D#934
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#934
  # DEBUG __it => D#934
  # DEBUG __it => D#933
  # DEBUG __it => D#933
  # DEBUG __first => D#933
  # DEBUG __last => D#934
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#933
  # DEBUG __last => D#934
  # DEBUG __result => NULL
  # DEBUG D#932 => (long int) D#933
  # DEBUG D#931 => _158 - D#932
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.117_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#930 => (long unsigned int) D#931
  # DEBUG __new_finish => iftmp.117_113 + D#930
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.117_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#608 => &this_4(D)->D.41359
  # DEBUG this => D#608
  # DEBUG D#929 => this_4(D)->D.41359._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#934
  # DEBUG __last => D#929
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#604
  # DEBUG D#603 => D#604
  # DEBUG D#600 => D#603
  # DEBUG __first => D#934
  # DEBUG __last => D#929
  # DEBUG __result => __new_finish_26
  # DEBUG D.65755 => D#600
  # DEBUG __first => D#934
  # DEBUG __last => D#929
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#934
  # DEBUG __last => D#929
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#934
  # DEBUG __last => D#929
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#929
  # DEBUG __it => D#929
  # DEBUG __it => D#934
  # DEBUG __it => D#934
  # DEBUG __first => D#934
  # DEBUG __last => D#929
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#929
  # DEBUG __it => D#929
  # DEBUG __it => D#934
  # DEBUG __it => D#934
  # DEBUG __first => D#934
  # DEBUG __last => D#929
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#934
  # DEBUG __last => D#929
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#609 => &this_4(D)->D.41359
  # DEBUG this => D#609
  # DEBUG D#621 => this_4(D)->D.41359._M_impl._M_finish
  # DEBUG D#620 => this_4(D)->D.41359._M_impl._M_start
  # DEBUG __first => D#620
  # DEBUG __last => D#621
  # DEBUG D.65748 => NULL
  # DEBUG D#128 => D#620
  # DEBUG D#129 => D#621
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  # DEBUG D#619 => this_4(D)->D.41359._M_impl._M_end_of_storage
  # DEBUG D#618 => (long int) D#619
  # DEBUG D#617 => (long int) D#933
  # DEBUG D#616 => D#618 - D#617
  # DEBUG D#615 => D#616 /[ex] 8
  # DEBUG D#614 => (long unsigned int) D#615
  # DEBUG D#613 => &this_4(D)->D.41359
  # DEBUG this => D#613
  # DEBUG __p => D#933
  # DEBUG __n => D#614
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#225 => &D#613->_M_impl
  # DEBUG D#223 => D#225
  # DEBUG D#224 => D#614
  # DEBUG __p => D#933
  # DEBUG __a => D#223
  # DEBUG __n => D#224
  # DEBUG D#222 => D#224
  # DEBUG D#221 => D#223
  # DEBUG D#219 => D#221
  # DEBUG D#220 => D#222
  # DEBUG __p => D#933
  # DEBUG this => D#219
  # DEBUG D.65744 => D#220
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.41359._M_impl._M_start = iftmp.117_113;
  this_4(D)->D.41359._M_impl._M_finish = _70;
  this_4(D)->D.41359._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#154 => &this_4(D)->D.41359._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#154
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.52728
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.52728
  _143 = _144 - _116;
  # DEBUG D#623 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#623
  # DEBUG D#622 => &this_4(D)->D.41359
  # DEBUG D#466 => D#622
  # DEBUG __n => NULL
  # DEBUG this => D#480
  # DEBUG D#479 => D#480
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#154 => &this_4(D)->D.41359._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#154
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.52728
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.52728
  _150 = _151 - _116;
  # DEBUG D#623 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#623
  # DEBUG D#622 => &this_4(D)->D.41359
  # DEBUG D#466 => D#622
  # DEBUG __n => NULL
  # DEBUG this => D#480
  # DEBUG D#479 => D#480
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Channel<Credit>*; _Alloc = std::allocator<Channel<Credit>*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Channel<Credit>**, std::vector<Channel<Credit>*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Channel<Credit>**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Channel<Credit>*] (_ZNSt6vectorIP7ChannelI6CreditESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_, funcdef_no=2458, decl_uid=42029, cgraph_uid=813, symbol_order=814)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Channel<Credit>*; _Alloc = std::allocator<Channel<Credit>*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Channel<Credit>**, std::vector<Channel<Credit>*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Channel<Credit>**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Channel<Credit>*] (struct vector * const this, struct iterator __position, size_type __n, struct Channel * const & __x)
{
  const long unsigned int D.70141;
  const size_type __len;
  size_type D.70140;
  size_type __n;
  struct Channel * * D.70131;
  const ptrdiff_t _Num;
  struct pair * * D.70122;
  struct Channel * * const __position;
  struct Channel * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct Channel * * __first;
  long unsigned int __n;
  struct Channel * * __first;
  const ptrdiff_t _Num;
  struct Channel * * __first;
  struct Channel * * __new_finish;
  const size_type __elems_after;
  struct Channel * __x_copy;
  struct Channel * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Channel * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct Channel * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct Channel * * _41;
  struct Channel * * _43;
  long int _47;
  struct Channel * * _48;
  long int __first.112_49;
  struct Channel * * _53;
  struct Channel * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct Channel * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct pair * * _108;
  struct Channel * * _112;
  struct Channel * * iftmp.117_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct Channel * * prephitmp_146;
  struct Channel * * pretmp_147;
  struct Channel * * prephitmp_148;
  struct Channel * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct Channel * * pretmp_166;
  struct Channel * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct Channel * * pretmp_173;
  struct Channel * * prephitmp_174;

  <bb 2>:
  # DEBUG D#974 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#974
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.42106._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.42106._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#84 => &this_4(D)->D.42106._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#84
  # DEBUG __lhs => &D.52742
  # DEBUG __rhs => &__position
  # DEBUG this => &D.52742
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#634 => &this_4(D)->D.42106
  # DEBUG this => D#634
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#626
  # DEBUG D#625 => D#626
  # DEBUG D#624 => D#625
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.66217 => D#624
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.112_49 = (long int) _41;
  _47 = _8 - __first.112_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.42106._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.42106._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#974
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#974
  # DEBUG __it => D#974
  # DEBUG __first => D#974
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#974
  # DEBUG __it => D#974
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _104 = __first.112_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#361 => &__x_copy
  # DEBUG __first => D#974
  # DEBUG __last => _48
  # DEBUG D#360 => D#361
  # DEBUG __value => D#360
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#974
  # DEBUG __it => D#974
  # DEBUG D#267 => D#360
  # DEBUG __first => D#974
  # DEBUG __last => _48
  # DEBUG __value => D#267
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#974
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#635 => &this_4(D)->D.42106
  # DEBUG this => D#635
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#513 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#512 => D#513
  # DEBUG __x => D#512
  # DEBUG D.66302 => D#514
  # DEBUG D#511 => D#512
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#510 => D#511
  # DEBUG __x => D#510
  # DEBUG __assignable => 1
  # DEBUG D#509 => D#510
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#508 => D#509
  # DEBUG __x => D#508
  # DEBUG D#507 => D#508
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#506 => D#507
  # DEBUG __value => D#506
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#505 => D#506
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#505
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.42106._M_impl._M_finish = __first_125;
  # DEBUG D#636 => &this_4(D)->D.42106
  # DEBUG this => D#636
  # DEBUG this => &__position
  # DEBUG __first => D#974
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#626
  # DEBUG D#625 => D#626
  # DEBUG D#624 => D#625
  # DEBUG __first => D#974
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.66264 => D#624
  # DEBUG __first => D#974
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#974
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#974
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#974
  # DEBUG __it => D#974
  # DEBUG __first => D#974
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#974
  # DEBUG __it => D#974
  # DEBUG __first => D#974
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#974
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.42106._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.42106._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#361 => &__x_copy
  # DEBUG __first => D#974
  # DEBUG __last => __first_7
  # DEBUG D#360 => D#361
  # DEBUG __value => D#360
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#974
  # DEBUG __it => D#974
  # DEBUG D#267 => D#360
  # DEBUG __first => D#974
  # DEBUG __last => __first_7
  # DEBUG __value => D#267
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#974
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#472 => this_4(D)
  # DEBUG this => D#472
  # DEBUG D#471 => D#472
  # DEBUG D#470 => &D#471->D.42106
  # DEBUG this => D#470
  # DEBUG __a => D#469
  # DEBUG D#468 => D#469
  # DEBUG D#467 => D#468
  # DEBUG this => D#467
  _17 = MEM[(struct Channel * * *)this_4(D)];
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  # DEBUG __a => &D.70141
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#73 => this_4(D)
  # DEBUG D#73 => this_4(D)
  # DEBUG this => D#73
  # DEBUG this => D#73
  # DEBUG D#472 => this_4(D)
  # DEBUG this => D#472
  # DEBUG D#471 => D#472
  # DEBUG D#470 => &D#471->D.42106
  # DEBUG this => D#470
  # DEBUG __a => D#469
  # DEBUG D#468 => D#469
  # DEBUG D#467 => D#468
  # DEBUG this => D#467
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#155 => &this_4(D)->D.42106._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#155
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.52775
  # DEBUG this => &__position
  # DEBUG this => &D.52775
  # DEBUG D#647 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#647
  # DEBUG D#646 => &this_4(D)->D.42106
  # DEBUG D#480 => D#646
  # DEBUG __n => NULL
  # DEBUG this => D#480
  # DEBUG D#479 => D#480
  # DEBUG D#478 => &D#479->_M_impl
  # DEBUG D#477 => D#478
  # DEBUG __n => NULL
  # DEBUG __a => D#477
  # DEBUG D#476 => D#477
  # DEBUG D#474 => D#476
  # DEBUG D#475 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#474
  # DEBUG D.70129 => D#475
  # DEBUG D#473 => D#474
  # DEBUG D#467 => D#473
  # DEBUG this => D#467
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.42106._M_impl._M_start;
  pretmp_147 = this_4(D)->D.42106._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.117_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#630 => &this_4(D)->D.42106
  # DEBUG this => D#630
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.117_113 + _19;
  _56 = MEM[(struct Channel * const &)__x_21(D)];
  # DEBUG D#513 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#512 => D#513
  # DEBUG __x => D#512
  # DEBUG D.66419 => D#514
  # DEBUG D#511 => D#512
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#510 => D#511
  # DEBUG __x => D#510
  # DEBUG __assignable => 1
  # DEBUG D#509 => D#510
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#508 => D#509
  # DEBUG __x => D#508
  # DEBUG D#507 => D#508
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#506 => D#507
  # DEBUG __value => D#506
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#505 => D#506
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#505
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#631 => &this_4(D)->D.42106
  # DEBUG this => D#631
  # DEBUG this => &__position
  # DEBUG D#973 => this_4(D)->D.42106._M_impl._M_start
  # DEBUG __first => D#973
  # DEBUG __last => D#974
  # DEBUG __result => NULL
  # DEBUG __alloc => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#624 => D#627
  # DEBUG __first => D#973
  # DEBUG __last => D#974
  # DEBUG __result => NULL
  # DEBUG D.66381 => D#624
  # DEBUG __first => D#973
  # DEBUG __last => D#974
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#973
  # DEBUG __last => D#974
  # DEBUG __result => NULL
  # DEBUG __first => D#973
  # DEBUG __last => D#974
  # DEBUG __result => NULL
  # DEBUG __it => D#974
  # DEBUG __it => D#974
  # DEBUG __it => D#973
  # DEBUG __it => D#973
  # DEBUG __first => D#973
  # DEBUG __last => D#974
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#974
  # DEBUG __it => D#974
  # DEBUG __it => D#973
  # DEBUG __it => D#973
  # DEBUG __first => D#973
  # DEBUG __last => D#974
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#973
  # DEBUG __last => D#974
  # DEBUG __result => NULL
  # DEBUG D#972 => (long int) D#973
  # DEBUG D#971 => _158 - D#972
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.117_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#970 => (long unsigned int) D#971
  # DEBUG __new_finish => iftmp.117_113 + D#970
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.117_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#632 => &this_4(D)->D.42106
  # DEBUG this => D#632
  # DEBUG D#969 => this_4(D)->D.42106._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#974
  # DEBUG __last => D#969
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#624 => D#627
  # DEBUG __first => D#974
  # DEBUG __last => D#969
  # DEBUG __result => __new_finish_26
  # DEBUG D.66342 => D#624
  # DEBUG __first => D#974
  # DEBUG __last => D#969
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#974
  # DEBUG __last => D#969
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#974
  # DEBUG __last => D#969
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#969
  # DEBUG __it => D#969
  # DEBUG __it => D#974
  # DEBUG __it => D#974
  # DEBUG __first => D#974
  # DEBUG __last => D#969
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#969
  # DEBUG __it => D#969
  # DEBUG __it => D#974
  # DEBUG __it => D#974
  # DEBUG __first => D#974
  # DEBUG __last => D#969
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#974
  # DEBUG __last => D#969
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#633 => &this_4(D)->D.42106
  # DEBUG this => D#633
  # DEBUG D#645 => this_4(D)->D.42106._M_impl._M_finish
  # DEBUG D#644 => this_4(D)->D.42106._M_impl._M_start
  # DEBUG __first => D#644
  # DEBUG __last => D#645
  # DEBUG D.66335 => NULL
  # DEBUG D#138 => D#644
  # DEBUG D#139 => D#645
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  # DEBUG D#643 => this_4(D)->D.42106._M_impl._M_end_of_storage
  # DEBUG D#642 => (long int) D#643
  # DEBUG D#641 => (long int) D#973
  # DEBUG D#640 => D#642 - D#641
  # DEBUG D#639 => D#640 /[ex] 8
  # DEBUG D#638 => (long unsigned int) D#639
  # DEBUG D#637 => &this_4(D)->D.42106
  # DEBUG this => D#637
  # DEBUG __p => D#973
  # DEBUG __n => D#638
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#245 => &D#637->_M_impl
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#638
  # DEBUG __p => D#973
  # DEBUG __a => D#243
  # DEBUG __n => D#244
  # DEBUG D#242 => D#244
  # DEBUG D#241 => D#243
  # DEBUG D#239 => D#241
  # DEBUG D#240 => D#242
  # DEBUG __p => D#973
  # DEBUG this => D#239
  # DEBUG D.66331 => D#240
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.42106._M_impl._M_start = iftmp.117_113;
  this_4(D)->D.42106._M_impl._M_finish = _70;
  this_4(D)->D.42106._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#155 => &this_4(D)->D.42106._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#155
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.52775
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.52775
  _143 = _144 - _116;
  # DEBUG D#647 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#647
  # DEBUG D#646 => &this_4(D)->D.42106
  # DEBUG D#480 => D#646
  # DEBUG __n => NULL
  # DEBUG this => D#480
  # DEBUG D#479 => D#480
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#155 => &this_4(D)->D.42106._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#155
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.52775
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.52775
  _150 = _151 - _116;
  # DEBUG D#647 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#647
  # DEBUG D#646 => &this_4(D)->D.42106
  # DEBUG D#480 => D#646
  # DEBUG __n => NULL
  # DEBUG this => D#480
  # DEBUG D#479 => D#480
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = std::pair<int, Credit*>; _Alloc = std::allocator<std::pair<int, Credit*> >; std::size_t = long unsigned int] (_ZNSt11_Deque_baseISt4pairIiP6CreditESaIS3_EE17_M_initialize_mapEm, funcdef_no=2594, decl_uid=49685, cgraph_uid=949, symbol_order=950)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = std::pair<int, Credit*>; _Alloc = std::allocator<std::pair<int, Credit*> >; std::size_t = long unsigned int] (struct _Deque_base * const this, size_t __num_elements)
{
  struct pair * * __nstart;
  struct pair * * __nfinish;
  struct pair * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.53924;
  const long unsigned int D.53925;
  long unsigned int _3;
  struct pair * * _8;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _20;
  struct pair * * _23;
  struct pair * _24;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  struct pair * _29;
  void * _31;
  struct pair * * _33;
  struct pair * _40;
  struct pair * _41;
  struct pair * _42;
  struct pair * _52;
  void * _54;
  struct pair * _56;
  long unsigned int _65;

  <bb 2>:
  # DEBUG __size => 16
  _3 = __num_elements_2(D) >> 5;
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodes => __num_nodes_4
  _5 = _3 + 3;
  # DEBUG __a => &D.53924
  # DEBUG __b => &D.53925
  _65 = MAX_EXPR <_5, 8>;
  this_10(D)->_M_impl._M_map_size = _65;
  # DEBUG D#531 => this_10(D)
  # DEBUG __n => D#1009
  # DEBUG this => D#531
  # DEBUG D#530 => D#531
  # DEBUG D#420 => D#530
  # DEBUG this => D#420
  # DEBUG D#419 => D#420
  # DEBUG this => D#419
  # DEBUG this => NULL
  # DEBUG D.63059 => NULL
  # DEBUG this => NULL
  # DEBUG D#529 => &__map_alloc
  # DEBUG __n => D#1009
  # DEBUG __a => D#529
  # DEBUG D#528 => D#529
  # DEBUG D#526 => D#528
  # DEBUG D#527 => 0B
  # DEBUG __n => D#1009
  # DEBUG this => D#526
  # DEBUG D.64508 => D#527
  # DEBUG D#525 => D#526
  # DEBUG D#524 => D#525
  # DEBUG this => D#524
  _26 = _65 * 8;
  _8 = operator new (_26);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = _8;
  _15 = this_10(D)->_M_impl._M_map_size;
  _16 = _15 - __num_nodes_4;
  _17 = _16 >> 1;
  _18 = _17 * 8;
  __nstart_19 = _8 + _18;
  # DEBUG __nstart => __nstart_19
  _20 = __num_nodes_4 * 8;
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinish => __nfinish_21
  # DEBUG D#555 => this_10(D)
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nfinish_21
  # DEBUG this => D#555
  # DEBUG __cur => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 13>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __cur => __nstart_75
  # DEBUG D#552 => D#553
  # DEBUG this => D#552
  # DEBUG D#551 => D#552
  # DEBUG __size => 16
  # DEBUG D#550 => &D#551->_M_impl
  # DEBUG D#549 => D#550
  # DEBUG __n => NULL
  # DEBUG __a => D#549
  # DEBUG D#548 => D#549
  # DEBUG D#546 => D#548
  # DEBUG D#547 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#546
  # DEBUG D.70254 => D#547
  # DEBUG D#545 => D#546
  # DEBUG D#544 => D#545
  # DEBUG this => D#544
  _52 = operator new (512);

  <bb 5>:
  *__nstart_75 = _52;
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __cur => __nstart_53
  # DEBUG __cur => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 13>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  # __nstart_13 = PHI <__nstart_75(4)>
<L3>:
  _54 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_54);
  # DEBUG D#418 => D#554
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nstart_13
  # DEBUG this => D#418
  # DEBUG __n => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __cxa_rethrow ();

  <bb 9>:

  <bb 10>:
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(11)>
  # DEBUG __n => __nstart_72
  _56 = *__nstart_72;
  # DEBUG this => D#416
  # DEBUG __p => _56
  # DEBUG __size => 16
  # DEBUG D#415 => &D#417->_M_impl
  # DEBUG D#413 => D#415
  # DEBUG __p => _56
  # DEBUG __a => D#413
  # DEBUG __n => D#414
  # DEBUG D#412 => D#414
  # DEBUG D#411 => D#413
  # DEBUG D#409 => D#411
  # DEBUG D#410 => D#412
  # DEBUG __p => _56
  # DEBUG this => D#409
  # DEBUG D.70247 => D#410
  operator delete (_56);
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __n => __nstart_57
  # DEBUG __n => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

<L5>:
  __cxa_end_catch ();
  resx 7

  <bb 13>:
  # DEBUG D#558 => &this_10(D)->_M_impl._M_start
  # DEBUG this => D#558
  # DEBUG __new_node => __nstart_19
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node = __nstart_19;
  _24 = *__nstart_19;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first = _24;
  # DEBUG __size => 16
  _42 = _24 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last = _42;
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#557 => &this_10(D)->_M_impl._M_finish
  # DEBUG this => D#557
  # DEBUG __new_node => _23
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node = _23;
  _40 = MEM[(struct pair * *)__nfinish_21 + -8B];
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first = _40;
  # DEBUG __size => 16
  _41 = _40 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last = _41;
  this_10(D)->_M_impl._M_start._M_cur = _24;
  # DEBUG __size => 16
  _27 = __num_elements_2(D) & 31;
  _28 = _27 * 16;
  _29 = _40 + _28;
  this_10(D)->_M_impl._M_finish._M_cur = _29;
  return;

<L0>:
  _31 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_31);
  # DEBUG D#556 => this_10(D)->_M_impl._M_map_size
  _33 = this_10(D)->_M_impl._M_map;
  # DEBUG D#423 => this_10(D)
  # DEBUG D#424 => D#556
  # DEBUG __p => _33
  # DEBUG this => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#421
  # DEBUG this => D#420
  # DEBUG D#419 => D#420
  # DEBUG this => D#419
  # DEBUG this => NULL
  # DEBUG D.63059 => NULL
  # DEBUG this => NULL
  # DEBUG D#341 => &__map_alloc
  # DEBUG D#342 => D#422
  # DEBUG __p => _33
  # DEBUG __a => D#341
  # DEBUG __n => D#342
  # DEBUG D#340 => D#342
  # DEBUG D#339 => D#341
  # DEBUG D#337 => D#339
  # DEBUG D#338 => D#340
  # DEBUG __p => _33
  # DEBUG this => D#337
  # DEBUG D.64530 => D#338
  operator delete (_33);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = 0B;
  this_10(D)->_M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function Channel<T>::Channel(Module*, const string&) [with T = Credit; std::__cxx11::string = std::__cxx11::basic_string<char>] (_ZN7ChannelI6CreditEC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2222, decl_uid=50322, cgraph_uid=577, symbol_order=578)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Channel<T>::Channel(Module*, const string&) [with T = Credit; std::__cxx11::string = std::__cxx11::basic_string<char>] (struct Channel * const this, struct Module * parent, const struct string & name)
{
  struct pair * * __first$_M_node;
  struct pair * __first$_M_last;
  struct pair * const __first;
  struct pair * * SR.1286;
  struct pair * SR.1285;
  struct pair * SR.1284;
  struct pair * * __first$_M_node;
  struct pair * __first$_M_last;
  struct pair * __first$_M_first;
  struct pair * __first$_M_cur;
  struct pair * * __first$_M_node;
  struct pair * __first$_M_last;
  struct pair * __first$_M_first;
  struct pair * __first$_M_cur;
  struct pair * * SR.1275;
  struct pair * SR.1274;
  struct pair * SR.1273;
  struct pair * SR.1272;
  struct pair * * __nstart;
  struct pair * * __nstart;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.70318;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.70317;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.70303;
  struct _Deque_iterator D.70302;
  struct deque D.51722;
  struct Module * _11;
  struct pair * * _28;
  struct pair * * _35;
  long int _36;
  struct pair * * _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  long int _42;
  struct pair * _43;
  long int _44;
  struct pair * _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  struct pair * _50;
  long int _51;
  struct pair * _52;
  long int _53;
  long int _54;
  long int _55;
  difference_type _56;
  size_type _57;
  struct _Deque_base * _58;
  struct pair * _59;
  struct pair * * prephitmp_60;
  struct pair * _61;
  struct pair * * _62;
  struct pair * _63;
  struct pair * _64;
  struct pair * _66;
  struct pair * _82;
  struct pair * * _89;
  struct pair * _90;
  struct pair * _91;
  struct pair * * _92;
  struct pair * * _93;
  struct pair * * _94;
  struct pair * * pretmp_96;
  struct pair * _97;
  struct pair * * _100;
  struct pair * * _101;
  struct pair * _104;
  struct pair * * prephitmp_124;
  struct pair * * pretmp_125;

  <bb 2>:
  # DEBUG D#575 => &this_2(D)->D.50335
  # DEBUG this => D#575
  # DEBUG parent => parent_4(D)
  # DEBUG name => name_5(D)
  _11 = &MEM[(struct TimedModule *)this_2(D)].D.33681;
  Module::Module (_11, parent_4(D), name_5(D));
  this_2(D)->D.50335.D.33681._vptr.Module = &MEM[(void *)&_ZTV7ChannelI6CreditE + 16B];
  this_2(D)->_delay = 1;
  this_2(D)->_input = 0B;
  this_2(D)->_output = 0B;
  # DEBUG this => &D.51722
  # DEBUG this => &D.51722.D.50247
  # DEBUG D#560 => &MEM[(struct _Deque_base *)&D.51722]._M_impl
  # DEBUG this => D#560
  # DEBUG this => D#560
  # DEBUG this => D#560
  MEM[(struct _Deque_impl *)&D.51722]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.51722]._M_map_size = 0;
  # DEBUG D#375 => &D#560->_M_start
  # DEBUG this => D#375
  MEM[(struct _Deque_iterator *)&D.51722 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.51722 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.51722 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.51722 + 16B]._M_node = 0B;
  # DEBUG D#374 => &D#560->_M_finish
  # DEBUG this => D#374
  MEM[(struct _Deque_iterator *)&D.51722 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.51722 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.51722 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.51722 + 48B]._M_node = 0B;
  std::_Deque_base<std::pair<int, Credit*>, std::allocator<std::pair<int, Credit*> > >::_M_initialize_map (&D.51722.D.50247, 0);

  <bb 3>:
  # DEBUG D#573 => &this_2(D)->_wait_queue
  # DEBUG this => D#573
  # DEBUG __c => &D.51722
  # DEBUG D#1010 => &MEM[(struct queue *)this_2(D) + 120B].c
  # DEBUG this => D#1010
  # DEBUG __x => &D.51722
  # DEBUG this => &D.51722
  # DEBUG D#376 => &D.51722.D.50247._M_impl._M_start
  # DEBUG D#377 => &D.51722.D.50247._M_impl._M_finish
  # DEBUG __x => D#377
  # DEBUG __y => D#376
  # DEBUG __size => 16
  _35 = MEM[(const struct _Deque_iterator &)&D.51722 + 48]._M_node;
  _36 = (long int) _35;
  _37 = MEM[(const struct _Deque_iterator &)&D.51722 + 16]._M_node;
  _38 = (long int) _37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _40 + -1;
  _42 = _41 * 32;
  _43 = MEM[(const struct _Deque_iterator &)&D.51722 + 48]._M_cur;
  _44 = (long int) _43;
  _45 = MEM[(const struct _Deque_iterator &)&D.51722 + 48]._M_first;
  _46 = (long int) _45;
  _47 = _44 - _46;
  _48 = _47 /[ex] 16;
  _49 = _42 + _48;
  _50 = MEM[(const struct _Deque_iterator &)&D.51722 + 16]._M_last;
  _51 = (long int) _50;
  _52 = MEM[(const struct _Deque_iterator &)&D.51722 + 16]._M_cur;
  _53 = (long int) _52;
  _54 = _51 - _53;
  _55 = _54 /[ex] 16;
  _56 = _49 + _55;
  _57 = (size_type) _56;
  # DEBUG D#567 => &D.51722.D.50247
  # DEBUG this => D#567
  # DEBUG __a => NULL
  _58 = &MEM[(struct deque *)this_2(D) + 120B].D.50247;
  # DEBUG this => _58
  # DEBUG __a => NULL
  # DEBUG __num_elements => _57
  # DEBUG D#562 => &_58->_M_impl
  # DEBUG this => D#562
  # DEBUG __a => NULL
  # DEBUG this => D#562
  # DEBUG __a => NULL
  # DEBUG this => D#562
  # DEBUG D.63628 => NULL
  MEM[(struct _Deque_impl *)this_2(D) + 120B]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_2(D) + 120B]._M_map_size = 0;
  # DEBUG D#482 => &D#562->_M_start
  # DEBUG this => D#482
  MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_2(D) + 136B]._M_node = 0B;
  # DEBUG D#481 => &D#562->_M_finish
  # DEBUG this => D#481
  MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_2(D) + 168B]._M_node = 0B;
  std::_Deque_base<std::pair<int, Credit*>, std::allocator<std::pair<int, Credit*> > >::_M_initialize_map (_58, _57);

  <bb 4>:
  # DEBUG D#568 => &D#1010->D.50247
  # DEBUG this => D#568
  # DEBUG D#569 => &D#1010->D.50247._M_impl._M_start
  # DEBUG this => &D.70303
  # DEBUG __x => D#569
  _59 = MEM[(const struct iterator &)this_2(D) + 136]._M_cur;
  _61 = MEM[(const struct iterator &)this_2(D) + 136]._M_last;
  _62 = MEM[(const struct iterator &)this_2(D) + 136]._M_node;
  # DEBUG this => &D.51722
  # DEBUG D#278 => &D.51722.D.50247._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#278
  _63 = MEM[(const struct iterator &)&D.51722 + 48]._M_cur;
  # DEBUG D#572 => MEM[(const struct iterator &)&D.51722 + 48]._M_first
  # DEBUG D.64706 => D#572
  # DEBUG D#571 => MEM[(const struct iterator &)&D.51722 + 48]._M_last
  # DEBUG D.64707 => D#571
  # DEBUG D#570 => MEM[(const struct iterator &)&D.51722 + 48]._M_node
  # DEBUG D.64708 => D#570
  # DEBUG this => &D.51722
  # DEBUG D#279 => &D.51722.D.50247._M_impl._M_start
  # DEBUG this => &D.70302
  # DEBUG __x => D#279
  _64 = MEM[(const struct iterator &)&D.51722 + 16]._M_cur;
  # DEBUG D#1011 => MEM[(const struct iterator &)&D.51722 + 16]._M_first
  _66 = MEM[(const struct iterator &)&D.51722 + 16]._M_last;
  __nstart_67 = MEM[(const struct iterator &)&D.51722 + 16]._M_node;
  # DEBUG __first$_M_cur => _64
  # DEBUG __first$_M_first => D#1011
  # DEBUG __first$_M_last => _66
  # DEBUG __first$_M_node => __nstart_67
  # DEBUG __result => &D.70303
  # DEBUG D.70307 => D#566
  # DEBUG this => NULL
  # DEBUG __x => &D.70303
  # DEBUG __first$_M_cur => _64
  # DEBUG __first$_M_first => D#1011
  # DEBUG __first$_M_last => _66
  # DEBUG __first$_M_node => __nstart_67
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG this => &D.70318
  # DEBUG __x => NULL
  # DEBUG __first => _64
  # DEBUG __first$_M_first => D#1011
  # DEBUG __first$_M_last => _66
  # DEBUG __first$_M_node => __nstart_67
  # DEBUG __result => &D.70318
  # DEBUG this => &D.70317
  # DEBUG __x => &D.70318

  <bb 5>:
  # SR.1284_153 = PHI <_59(4), _90(13)>
  # SR.1285_150 = PHI <_61(4), _91(13)>
  # SR.1286_149 = PHI <_62(4), _89(13)>
  # __first_148 = PHI <_64(4), __first_109(13)>
  # __first$_M_last_144 = PHI <_66(4), __first$_M_last_111(13)>
  # __first$_M_node_139 = PHI <__nstart_67(4), __first$_M_node_128(13)>

  <bb 36>:
  # DEBUG __first$_M_node => __first$_M_node_139
  # DEBUG __first$_M_last => __first$_M_last_144
  # DEBUG __first => __first_148

  <bb 6>:
  # SR.1284_152 = PHI <SR.1284_153(36), _82(12)>
  # __first_147 = PHI <__first_148(36), __first_145(12)>
  # __first$_M_last_142 = PHI <__first$_M_last_144(36), __first$_M_last_141(12)>
  # __first$_M_node_138 = PHI <__first$_M_node_139(36), __first$_M_node_133(12)>
  # DEBUG __first$_M_node => __first$_M_node_138
  # DEBUG __first$_M_last => __first$_M_last_142
  # DEBUG __first => __first_147
  # DEBUG __x => &__first
  # DEBUG __y => NULL
  # DEBUG D#532 => &__first
  # DEBUG __x => D#532
  # DEBUG __y => D#533
  if (_63 != __first_147)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 7>:
  # DEBUG D#484 => &__first
  # DEBUG this => D#484
  # DEBUG D#483 => &D.70317
  # DEBUG this => D#483
  # DEBUG __r => NULL
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#11 => 16
  # DEBUG __p => NULL
  # DEBUG D.63660 => D#11
  if (SR.1284_152 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  *SR.1284_152 = MEM[(const struct pair &)__first_147];

  <bb 9>:
  # DEBUG this => &__first
  __first_79 = __first_147 + 16;
  # DEBUG __first => __first_79
  if (__first_79 == __first$_M_last_142)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_85 = __first$_M_node_138 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_85
  # DEBUG __first$_M_node => __first$_M_node_85
  __first_86 = MEM[(struct pair * *)__first$_M_node_138 + 8B];
  # DEBUG __size => 16
  __first$_M_last_87 = __first_86 + 512;
  # DEBUG __first$_M_last => __first$_M_last_87
  # DEBUG __first => __first_86

  <bb 11>:
  # __first_145 = PHI <__first_79(9), __first_86(10)>
  # __first$_M_last_141 = PHI <__first$_M_last_142(9), __first$_M_last_87(10)>
  # __first$_M_node_133 = PHI <__first$_M_node_138(9), __first$_M_node_85(10)>
  # DEBUG __first$_M_node => __first$_M_node_133
  # DEBUG __first$_M_last => __first$_M_last_141
  # DEBUG __first => __first_145
  # DEBUG this => &D.70317
  _82 = SR.1284_152 + 16;
  if (_82 == SR.1285_150)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 6>;

  <bb 13>:
  # __first$_M_node_128 = PHI <__first$_M_node_133(11)>
  # __first$_M_last_111 = PHI <__first$_M_last_141(11)>
  # __first_109 = PHI <__first_145(11)>
  # DEBUG this => &D.70317
  _89 = SR.1286_149 + 8;
  # DEBUG this => &D.70317
  # DEBUG __new_node => _89
  _90 = MEM[(struct pair * *)SR.1286_149 + 8B];
  # DEBUG __size => 16
  _91 = _90 + 512;
  goto <bb 5>;

  <bb 14>:

  <bb 34>:
  D.70318 ={v} {CLOBBER};
  D.70303 ={v} {CLOBBER};
  # DEBUG this => &D.51722
  # DEBUG D#427 => &D.51722.D.50247
  # DEBUG this => D#427
  # DEBUG this => &D.51722
  # DEBUG D#77 => &D.51722.D.50247._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#77
  # DEBUG D#435 => MEM[(const struct iterator &)&D.51722 + 48]._M_cur
  # DEBUG D.63141 => D#435
  # DEBUG D#434 => MEM[(const struct iterator &)&D.51722 + 48]._M_first
  # DEBUG D.63142 => D#434
  # DEBUG D#433 => MEM[(const struct iterator &)&D.51722 + 48]._M_last
  # DEBUG D.63143 => D#433
  # DEBUG D#432 => MEM[(const struct iterator &)&D.51722 + 48]._M_node
  # DEBUG D.63144 => D#432
  # DEBUG this => &D.51722
  # DEBUG D#76 => &D.51722.D.50247._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#76
  # DEBUG D#431 => MEM[(const struct iterator &)&D.51722 + 16]._M_cur
  # DEBUG D.63137 => D#431
  # DEBUG D#430 => MEM[(const struct iterator &)&D.51722 + 16]._M_first
  # DEBUG D.63138 => D#430
  # DEBUG D#429 => MEM[(const struct iterator &)&D.51722 + 16]._M_last
  # DEBUG D.63139 => D#429
  # DEBUG D#428 => MEM[(const struct iterator &)&D.51722 + 16]._M_node
  # DEBUG D.63140 => D#428
  # DEBUG D#78 => &D.51722
  # DEBUG this => D#78
  # DEBUG __first => D#79
  # DEBUG __last => D#80
  # DEBUG D.63125 => D#81
  # DEBUG this => &D.51722.D.50247
  _92 = MEM[(struct _Deque_base *)&D.51722]._M_impl._M_map;
  if (_92 != 0B)
    goto <bb 15>;
  else
    goto <bb 21>;

  <bb 15>:
  _93 = MEM[(struct _Deque_base *)&D.51722]._M_impl._M_finish._M_node;
  _94 = _93 + 8;
  # DEBUG D#418 => &D.51722.D.50247
  # DEBUG __nstart => __nstart_67
  # DEBUG __nfinish => _94
  # DEBUG this => D#418
  # DEBUG __n => __nstart_67
  if (__nstart_67 >= _94)
    goto <bb 20>;
  else
    goto <bb 16>;

  <bb 16>:

  <bb 17>:
  # __nstart_126 = PHI <__nstart_67(16), __nstart_98(18)>
  # DEBUG __n => __nstart_126
  _97 = *__nstart_126;
  # DEBUG this => D#416
  # DEBUG __p => _97
  # DEBUG __size => 16
  # DEBUG D#415 => &D#417->_M_impl
  # DEBUG D#413 => D#415
  # DEBUG __p => _97
  # DEBUG __a => D#413
  # DEBUG __n => D#414
  # DEBUG D#412 => D#414
  # DEBUG D#411 => D#413
  # DEBUG D#409 => D#411
  # DEBUG D#410 => D#412
  # DEBUG __p => _97
  # DEBUG this => D#409
  # DEBUG D.70353 => D#410
  operator delete (_97);
  __nstart_98 = __nstart_126 + 8;
  # DEBUG __n => __nstart_98
  # DEBUG __n => __nstart_98
  if (_94 <= __nstart_98)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 17>;

  <bb 19>:

  <bb 33>:
  pretmp_96 = MEM[(struct _Deque_base *)&D.51722]._M_impl._M_map;

  <bb 20>:
  # prephitmp_124 = PHI <pretmp_96(33), _92(15)>
  # DEBUG D#425 => MEM[(struct _Deque_base *)&D.51722]._M_impl._M_map_size
  # DEBUG D#1013 => MEM[(struct _Deque_base *)&D.51722]._M_impl._M_map
  # DEBUG D#423 => &D.51722.D.50247
  # DEBUG D#424 => D#425
  # DEBUG __p => D#1013
  # DEBUG this => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#421
  # DEBUG this => D#420
  # DEBUG D#419 => D#420
  # DEBUG this => D#419
  # DEBUG this => NULL
  # DEBUG D.63059 => NULL
  # DEBUG this => NULL
  # DEBUG D#341 => &__map_alloc
  # DEBUG D#342 => D#422
  # DEBUG __p => D#1013
  # DEBUG __a => D#341
  # DEBUG __n => D#342
  # DEBUG D#340 => D#342
  # DEBUG D#339 => D#341
  # DEBUG D#337 => D#339
  # DEBUG D#338 => D#340
  # DEBUG __p => D#1013
  # DEBUG this => D#337
  # DEBUG D.70363 => D#338
  operator delete (prephitmp_124);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 21>:
  # DEBUG D#426 => &MEM[(struct _Deque_base *)&D.51722]._M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  D.51722 ={v} {CLOBBER};
  return;

<L0>:
  # DEBUG this => &D.51722
  # DEBUG D#427 => &D.51722.D.50247
  # DEBUG this => D#427
  # DEBUG this => &D.51722
  # DEBUG D#77 => &D.51722.D.50247._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#77
  # DEBUG D#435 => MEM[(const struct iterator &)&D.51722 + 48]._M_cur
  # DEBUG D.63141 => D#435
  # DEBUG D#434 => MEM[(const struct iterator &)&D.51722 + 48]._M_first
  # DEBUG D.63142 => D#434
  # DEBUG D#433 => MEM[(const struct iterator &)&D.51722 + 48]._M_last
  # DEBUG D.63143 => D#433
  # DEBUG D#432 => MEM[(const struct iterator &)&D.51722 + 48]._M_node
  # DEBUG D.63144 => D#432
  # DEBUG this => &D.51722
  # DEBUG D#76 => &D.51722.D.50247._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#76
  # DEBUG D#431 => MEM[(const struct iterator &)&D.51722 + 16]._M_cur
  # DEBUG D.63137 => D#431
  # DEBUG D#430 => MEM[(const struct iterator &)&D.51722 + 16]._M_first
  # DEBUG D.63138 => D#430
  # DEBUG D#429 => MEM[(const struct iterator &)&D.51722 + 16]._M_last
  # DEBUG D.63139 => D#429
  # DEBUG D#428 => MEM[(const struct iterator &)&D.51722 + 16]._M_node
  # DEBUG D.63140 => D#428
  # DEBUG D#78 => &D.51722
  # DEBUG this => D#78
  # DEBUG __first => D#79
  # DEBUG __last => D#80
  # DEBUG D.63125 => D#81
  # DEBUG this => &D.51722.D.50247
  _28 = MEM[(struct _Deque_base *)&D.51722]._M_impl._M_map;
  if (_28 != 0B)
    goto <bb 23>;
  else
    goto <bb 29>;

  <bb 23>:
  _100 = MEM[(struct _Deque_base *)&D.51722]._M_impl._M_finish._M_node;
  _101 = _100 + 8;
  __nstart_102 = MEM[(struct _Deque_base *)&D.51722]._M_impl._M_start._M_node;
  # DEBUG D#418 => &D.51722.D.50247
  # DEBUG __nstart => __nstart_102
  # DEBUG __nfinish => _101
  # DEBUG this => D#418
  # DEBUG __n => __nstart_102
  if (_101 <= __nstart_102)
    goto <bb 28>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __nstart_127 = PHI <__nstart_102(24), __nstart_105(26)>
  # DEBUG __n => __nstart_127
  _104 = *__nstart_127;
  # DEBUG this => D#416
  # DEBUG __p => _104
  # DEBUG __size => 16
  # DEBUG D#415 => &D#417->_M_impl
  # DEBUG D#413 => D#415
  # DEBUG __p => _104
  # DEBUG __a => D#413
  # DEBUG __n => D#414
  # DEBUG D#412 => D#414
  # DEBUG D#411 => D#413
  # DEBUG D#409 => D#411
  # DEBUG D#410 => D#412
  # DEBUG __p => _104
  # DEBUG this => D#409
  # DEBUG D.70380 => D#410
  operator delete (_104);
  __nstart_105 = __nstart_127 + 8;
  # DEBUG __n => __nstart_105
  # DEBUG __n => __nstart_105
  if (_101 <= __nstart_105)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 25>;

  <bb 27>:

  <bb 35>:
  pretmp_125 = MEM[(struct _Deque_base *)&D.51722]._M_impl._M_map;

  <bb 28>:
  # prephitmp_60 = PHI <pretmp_125(35), _28(23)>
  # DEBUG D#425 => MEM[(struct _Deque_base *)&D.51722]._M_impl._M_map_size
  # DEBUG D#1012 => MEM[(struct _Deque_base *)&D.51722]._M_impl._M_map
  # DEBUG D#423 => &D.51722.D.50247
  # DEBUG D#424 => D#425
  # DEBUG __p => D#1012
  # DEBUG this => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#421
  # DEBUG this => D#420
  # DEBUG D#419 => D#420
  # DEBUG this => D#419
  # DEBUG this => NULL
  # DEBUG D.63059 => NULL
  # DEBUG this => NULL
  # DEBUG D#341 => &__map_alloc
  # DEBUG D#342 => D#422
  # DEBUG __p => D#1012
  # DEBUG __a => D#341
  # DEBUG __n => D#342
  # DEBUG D#340 => D#342
  # DEBUG D#339 => D#341
  # DEBUG D#337 => D#339
  # DEBUG D#338 => D#340
  # DEBUG __p => D#1012
  # DEBUG this => D#337
  # DEBUG D.70390 => D#338
  operator delete (prephitmp_60);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 29>:
  # DEBUG D#426 => &MEM[(struct _Deque_base *)&D.51722]._M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  D.51722 ={v} {CLOBBER};
  resx 2

<L3>:
  goto <bb 32> (<L1>);

<L2>:

<L1>:
  # DEBUG D#574 => &this_2(D)->D.50335
  # DEBUG this => D#574
  MEM[(struct TimedModule *)this_2(D)].D.33681._vptr.Module = &MEM[(void *)&_ZTV11TimedModule + 16B];
  Module::~Module (_11);
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  resx 1

}



;; Function void Network::_Alloc() (_ZN7Network6_AllocEv, funcdef_no=2116, decl_uid=44814, cgraph_uid=471, symbol_order=472)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void Network::_Alloc() (struct Network * const this)
{
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.71975;
  struct __string_type D.71974;
  __size_type __len;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.71715;
  struct __string_type D.71714;
  struct iterator __position;
  struct FlitChannel * __x;
  struct iterator __position;
  struct Channel * __x;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.71440;
  struct __string_type D.71439;
  __size_type __len;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.71180;
  struct __string_type D.71179;
  struct iterator __position;
  struct FlitChannel * __x;
  struct iterator __position;
  struct Channel * __x;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.70905;
  struct __string_type D.70904;
  __size_type __len;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.70645;
  struct __string_type D.70644;
  struct iterator __position;
  struct Router * __x;
  struct iterator __position;
  struct FlitChannel * __x;
  struct iterator __position;
  struct Channel * __x;
  struct ostringstream name;
  int c;
  struct ostringstream name;
  int d;
  struct ostringstream name;
  int s;
  static const char __PRETTY_FUNCTION__[23] = "void Network::_Alloc()";
  struct TimedModule * const D.50662;
  struct __string_type D.50659;
  const struct __string_type D.50658;
  struct TimedModule * const D.50655;
  struct __string_type D.50652;
  struct TimedModule * const D.50649;
  struct __string_type D.50646;
  const struct __string_type D.50645;
  struct TimedModule * const D.50642;
  struct __string_type D.50639;
  struct TimedModule * const D.50636;
  struct __string_type D.50606;
  const struct __string_type D.50605;
  struct TimedModule * const D.50602;
  struct __string_type D.50563;
  size_type prephitmp_1;
  size_type pretmp_2;
  char * const pretmp_3;
  size_type pretmp_4;
  size_type prephitmp_5;
  char * const prephitmp_6;
  int _18;
  int gNodes.76_19;
  int _20;
  long unsigned int _21;
  struct vector * _22;
  long unsigned int _26;
  struct vector * _27;
  struct Router * * const _28;
  struct vector * _31;
  struct FlitChannel * * const _32;
  int gNodes.76_33;
  struct Channel * & _35;
  void * _38;
  int _39;
  struct Module * _40;
  long unsigned int _42;
  struct FlitChannel * _45;
  struct FlitChannel * _47;
  struct deque * _49;
  struct basic_ostream & _52;
  const size_type _54;
  char * const _56;
  char * const _57;
  void * _60;
  long int _62;
  struct Channel * _65;
  size_type prephitmp_67;
  char * const _69;
  char * const _74;
  char * const _77;
  char * const _80;
  long unsigned int _83;
  struct vector * _84;
  struct TimedModule * * prephitmp_85;
  long unsigned int _87;
  struct vector * _88;
  struct FlitChannel * * const _89;
  int gNodes.76_90;
  struct FlitChannel * & _92;
  void * _95;
  int _96;
  struct Module * _97;
  long unsigned int _99;
  struct FlitChannel * _102;
  struct FlitChannel * & _104;
  struct FlitChannel * _105;
  struct deque * _107;
  char * const prephitmp_108;
  long unsigned int _110;
  const size_type _112;
  char * const _114;
  void * _117;
  char * const _119;
  struct FlitChannel * & _122;
  struct Channel * _123;
  char * const _127;
  char * const _132;
  char * const _135;
  char * const _138;
  int _141;
  long unsigned int _142;
  struct vector * _143;
  struct vector * _147;
  struct FlitChannel * * const _148;
  int _149;
  void * _153;
  int _154;
  struct Module * _155;
  long unsigned int _157;
  struct FlitChannel * _160;
  struct deque * _162;
  struct basic_ostream & _165;
  const size_type _167;
  char * const _169;
  char * const _170;
  void * _173;
  long int _175;
  const size_type _178;
  struct Channel * _179;
  char * const _183;
  char * const _191;
  char * const _194;
  struct FlitChannel * * _198;
  struct FlitChannel * * _199;
  struct FlitChannel * * _200;
  struct FlitChannel * * _201;
  struct FlitChannel * * _202;
  struct FlitChannel * * _203;
  struct FlitChannel * * _204;
  struct FlitChannel * * _205;
  struct Channel * * _206;
  struct Channel * * _207;
  struct Channel * * _208;
  struct Channel * * _209;
  struct Channel * * _210;
  struct Channel * * _211;
  char * const _212;
  struct Channel * & _213;
  const size_type _214;
  long int _215;
  char * const _216;
  struct basic_ostream & _217;
  struct FlitChannel * & _218;
  char * const _219;
  long unsigned int _220;
  struct FlitChannel * & _221;
  struct FlitChannel * & _222;
  long int _223;
  char * const _224;
  struct basic_ostream & _225;
  struct Channel * & _226;
  char * const _227;
  struct Channel * & _228;
  const size_type _229;
  long int _230;
  char * const _231;
  struct basic_ostream & _232;
  struct FlitChannel * & _233;
  char * const _234;
  long unsigned int _235;
  struct FlitChannel * & _236;
  long int _237;
  char * const _238;
  struct basic_ostream & _239;
  struct Channel * & _240;
  char * const _241;
  struct Channel * & _242;
  char * const _243;
  const void * pretmp_263;
  const void * prephitmp_265;
  const void * pretmp_266;
  const void * prephitmp_267;
  int pretmp_272;
  int prephitmp_273;
  const void * pretmp_274;
  char * const prephitmp_277;
  char * const pretmp_300;
  int prephitmp_303;
  size_type prephitmp_314;
  int pretmp_317;
  int prephitmp_318;
  long unsigned int pretmp_319;
  size_type pretmp_337;
  char * const prephitmp_351;
  struct Channel * * const _372;
  struct Channel * * const _373;
  long int _374;
  long int _375;
  long int _376;
  long int _377;
  size_type _378;
  long unsigned int _379;
  long unsigned int _380;
  struct Channel * * _381;
  struct FlitChannel * * const _382;
  long int _383;
  long int _384;
  long int _385;
  long int _386;
  size_type _387;
  long unsigned int _388;
  long unsigned int _389;
  struct FlitChannel * * _390;
  struct Router * * const _391;
  long int _392;
  long int _393;
  long int _394;
  long int _395;
  size_type _396;
  long unsigned int _397;
  long unsigned int _398;
  struct Router * * _399;
  long int _402;
  sizetype iftmp.126_403;
  struct basic_ios * _404;
  char * const pretmp_408;
  const void * prephitmp_413;
  long int _414;
  sizetype iftmp.132_415;
  struct basic_ios * _416;
  char_type * const _417;
  char_type * const _418;
  char_type * const _419;
  char * const _420;
  char_type * const _421;
  char * const _422;
  char * const _424;
  char * const _425;
  char * const _426;
  long int __last.144_427;
  long int __first.145_428;
  difference_type _429;
  long unsigned int __dnew.141_430;
  char * _431;
  long unsigned int __dnew.142_432;
  const char_type _434;
  char * _437;
  char * const pretmp_438;
  long int __last.144_439;
  long int __first.145_440;
  difference_type _441;
  long unsigned int __dnew.141_442;
  char * _443;
  long unsigned int __dnew.142_444;
  const char_type _446;
  char * _449;
  struct TimedModule * * _450;
  struct TimedModule * * _451;
  struct TimedModule * * _452;
  struct TimedModule * * _455;
  size_type prephitmp_460;
  size_type pretmp_465;
  char * const pretmp_467;
  const size_type _474;
  _Ios_Openmode _475;
  int __a.135_476;
  int _477;
  char * const pretmp_478;
  char * const _480;
  char_type * const _482;
  char_type * const _483;
  char_type * const _484;
  char * const _485;
  char_type * const _486;
  char * const _487;
  char * const _489;
  char * const _490;
  char * const _491;
  long int __last.144_492;
  long int __first.145_493;
  difference_type _494;
  long unsigned int __dnew.141_495;
  char * _496;
  long unsigned int __dnew.142_497;
  const char_type _499;
  char * _502;
  size_type prephitmp_503;
  long int __last.144_504;
  long int __first.145_505;
  difference_type _506;
  long unsigned int __dnew.141_507;
  char * _508;
  long unsigned int __dnew.142_509;
  const char_type _511;
  char * _514;
  struct TimedModule * * _515;
  struct TimedModule * * _516;
  struct TimedModule * * _517;
  struct TimedModule * * _520;
  size_type prephitmp_521;
  int (*__vtbl_ptr_type) () * iftmp.131_522;
  long int _523;
  sizetype iftmp.132_524;
  struct basic_ios * _525;
  int (*__vtbl_ptr_type) () * iftmp.133_526;
  char * const prephitmp_527;
  const void * prephitmp_529;
  struct Channel * * const _530;
  struct Channel * * const _531;
  long int _532;
  long int _533;
  long int _534;
  long int _535;
  size_type _536;
  long unsigned int _537;
  long unsigned int _538;
  struct Channel * * _539;
  struct FlitChannel * * const _540;
  long int _541;
  long int _542;
  long int _543;
  long int _544;
  size_type _545;
  long unsigned int _546;
  long unsigned int _547;
  struct FlitChannel * * _548;
  long int _551;
  sizetype iftmp.126_552;
  struct basic_ios * _553;
  struct TimedModule * * prephitmp_561;
  long int _563;
  sizetype iftmp.132_564;
  struct basic_ios * _565;
  char_type * const _566;
  char_type * const _567;
  char_type * const _568;
  char * const _569;
  char_type * const _570;
  char * const _571;
  char * const prephitmp_572;
  char * const _573;
  char * const _574;
  char * const _575;
  long int __last.144_576;
  long int __first.145_577;
  difference_type _578;
  long unsigned int __dnew.141_579;
  char * _580;
  long unsigned int __dnew.142_581;
  const char_type _583;
  char * _586;
  size_type pretmp_587;
  long int __last.144_588;
  long int __first.145_589;
  difference_type _590;
  long unsigned int __dnew.141_591;
  char * _592;
  long unsigned int __dnew.142_593;
  const char_type _595;
  char * _598;
  struct TimedModule * * _599;
  struct TimedModule * * _600;
  struct TimedModule * * _601;
  struct TimedModule * * _604;
  struct TimedModule * * prephitmp_608;
  char * const prephitmp_609;
  const size_type _623;
  _Ios_Openmode _624;
  int __a.135_625;
  int _626;
  size_type pretmp_627;
  char * const _629;
  char_type * const _631;
  char_type * const _632;
  char_type * const _633;
  char * const _634;
  char_type * const _635;
  char * const _636;
  char * const _638;
  char * const _639;
  char * const _640;
  long int __last.144_641;
  long int __first.145_642;
  difference_type _643;
  long unsigned int __dnew.141_644;
  char * _645;
  long unsigned int __dnew.142_646;
  const char_type _648;
  char * _651;
  struct TimedModule * * prephitmp_652;
  long int __last.144_653;
  long int __first.145_654;
  difference_type _655;
  long unsigned int __dnew.141_656;
  char * _657;
  long unsigned int __dnew.142_658;
  const char_type _660;
  char * _663;
  struct TimedModule * * _664;
  struct TimedModule * * _665;
  struct TimedModule * * _666;
  struct TimedModule * * _669;
  int (*__vtbl_ptr_type) () * iftmp.131_671;
  long int _672;
  sizetype iftmp.132_673;
  struct basic_ios * _674;
  int (*__vtbl_ptr_type) () * iftmp.133_675;
  struct Channel * * const _679;
  struct Channel * * const _680;
  long int _681;
  long int _682;
  long int _683;
  long int _684;
  size_type _685;
  long unsigned int _686;
  long unsigned int _687;
  struct Channel * * _688;
  struct FlitChannel * * const _689;
  long int _690;
  long int _691;
  long int _692;
  long int _693;
  size_type _694;
  long unsigned int _695;
  long unsigned int _696;
  struct FlitChannel * * _697;
  long int _700;
  sizetype iftmp.126_701;
  struct basic_ios * _702;
  long int _712;
  sizetype iftmp.132_713;
  struct basic_ios * _714;
  char_type * const _715;
  char_type * const _716;
  char_type * const _717;
  char * const _718;
  char_type * const _719;
  char * const _720;
  char * const _722;
  char * const _723;
  char * const _724;
  long int __last.144_725;
  long int __first.145_726;
  difference_type _727;
  long unsigned int __dnew.141_728;
  char * _729;
  long unsigned int __dnew.142_730;
  const char_type _732;
  char * _735;
  struct TimedModule * * pretmp_736;
  long int __last.144_737;
  long int __first.145_738;
  difference_type _739;
  long unsigned int __dnew.141_740;
  char * _741;
  long unsigned int __dnew.142_742;
  const char_type _744;
  char * _747;
  struct TimedModule * * _748;
  struct TimedModule * * _749;
  struct TimedModule * * _750;
  struct TimedModule * * _753;
  struct TimedModule * * pretmp_756;
  size_type prephitmp_758;
  bool _762;
  const size_type _772;
  _Ios_Openmode _773;
  int __a.135_774;
  int _775;
  char * const pretmp_776;
  char * const _778;
  char_type * const _780;
  char_type * const _781;
  char_type * const _782;
  char * const _783;
  char_type * const _784;
  char * const _785;
  char * const _787;
  char * const _788;
  char * const _789;
  long int __last.144_790;
  long int __first.145_791;
  difference_type _792;
  long unsigned int __dnew.141_793;
  char * _794;
  long unsigned int __dnew.142_795;
  const char_type _797;
  char * _800;
  char * const prephitmp_801;
  long int __last.144_802;
  long int __first.145_803;
  difference_type _804;
  long unsigned int __dnew.141_805;
  char * _806;
  long unsigned int __dnew.142_807;
  const char_type _809;
  char * _812;
  struct TimedModule * * _813;
  struct TimedModule * * _814;
  struct TimedModule * * _815;
  struct TimedModule * * _818;
  int (*__vtbl_ptr_type) () * iftmp.131_820;
  long int _821;
  sizetype iftmp.132_822;
  struct basic_ios * _823;
  int (*__vtbl_ptr_type) () * iftmp.133_824;
  int gNodes.76_827;
  const void * prephitmp_835;
  const void * pretmp_853;
  const void * prephitmp_856;
  const void * pretmp_868;
  int gNodes.76_871;
  void * _887;
  struct TimedModule * * pretmp_973;
  struct TimedModule * * prephitmp_974;
  size_type pretmp_995;
  size_type prephitmp_996;
  char * const pretmp_997;
  char * const prephitmp_998;
  const void * pretmp_1014;
  int pretmp_1062;
  int prephitmp_1063;
  long unsigned int pretmp_1064;
  long unsigned int prephitmp_1065;
  size_type pretmp_1100;
  size_type prephitmp_1105;
  int pretmp_1184;
  bool _1199;
  bool _1202;
  long unsigned int prephitmp_1224;
  int pretmp_1226;
  int prephitmp_1227;
  int prephitmp_1286;
  int pretmp_1370;
  bool _1385;
  bool _1386;
  bool _1387;
  size_type pretmp_1388;
  int prephitmp_1472;
  int prephitmp_1548;
  int pretmp_1549;
  int pretmp_1556;
  char * const prephitmp_1557;
  char * const prephitmp_1560;
  char * const pretmp_1561;
  size_type prephitmp_1562;
  size_type pretmp_1563;
  size_type pretmp_1567;
  size_type prephitmp_1568;
  char * const pretmp_1569;
  char * const prephitmp_1570;
  struct TimedModule * * pretmp_1571;
  struct TimedModule * * pretmp_1572;
  size_type pretmp_1574;
  char * const pretmp_1575;
  char * const _1583;
  char * const _1584;
  char * const _1589;
  char * const _1590;
  char * const _1591;
  char * const _1592;
  char * const _1593;
  bool _1597;
  char * const _1599;
  char * const _1600;
  char * const _1601;
  char * const _1602;
  char * const _1603;
  bool _1604;
  bool _1605;
  bool _1606;
  const void * prephitmp_1609;
  const void * prephitmp_1610;
  const void * prephitmp_1611;
  bool _1612;
  bool _1613;
  const void * prephitmp_1614;
  const void * prephitmp_1615;
  bool _1616;
  const void * prephitmp_1617;
  void * _1618;
  bool _1619;
  void * _1620;
  bool _1621;
  struct TimedModule * * pretmp_1622;
  void * _1623;
  struct TimedModule * * prephitmp_1624;
  bool _1626;
  void * _1627;
  void * _1628;
  bool _1629;
  bool _1630;
  char * const pretmp_1632;

  <bb 2>:
  _18 = this_17(D)->_size;
  if (_18 == -1)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 3>:
  gNodes.76_19 = this_17(D)->_nodes;
  if (gNodes.76_19 == -1)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  _20 = this_17(D)->_channels;
  if (_20 == -1)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __assert_fail ("( _size != -1 ) && ( _nodes != -1 ) && ( _channels != -1 )", "networks/network.cpp", 132, &__PRETTY_FUNCTION__);

  <bb 6>:
  _21 = (long unsigned int) _18;
  # DEBUG D#1037 => &this_17(D)->_routers
  # DEBUG this => D#1037
  # DEBUG __new_size => _21
  __x = 0B;
  # DEBUG __x => __x
  _28 = MEM[(struct Router * * *)this_17(D) + 112B];
  # DEBUG D#71 => D#1037
  _391 = MEM[(struct Router * * *)this_17(D) + 120B];
  # DEBUG D#71 => D#1037
  # DEBUG this => D#71
  # DEBUG this => D#71
  _392 = (long int) _391;
  _393 = (long int) _28;
  _394 = _392 - _393;
  _395 = _394 /[ex] 8;
  _396 = (size_type) _395;
  if (_21 > _396)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#71 => D#1037
  # DEBUG D#71 => D#1037
  # DEBUG this => D#71
  # DEBUG this => D#71
  _397 = _21 - _396;
  # DEBUG this => D#1037
  # DEBUG D#82 => &D#1037->D.43879._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#82
  # DEBUG this => D#1037
  MEM[(struct __normal_iterator *)&__position] = _391;
  # DEBUG __n => _397
  # DEBUG __x => &__x
  _22 = &this_17(D)->_routers;
  std::vector<Router*>::_M_fill_insert (_22, __position, _397, &__x);
  pretmp_1370 = this_17(D)->_nodes;
  goto <bb 10>;

  <bb 8>:
  # DEBUG D#71 => D#1037
  # DEBUG D#71 => D#1037
  # DEBUG this => D#71
  # DEBUG this => D#71
  if (_21 < _396)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _398 = _21 * 8;
  _399 = _28 + _398;
  # DEBUG D#123 => D#1037
  # DEBUG __pos => _399
  # DEBUG D#122 => D#123
  # DEBUG this => D#122
  # DEBUG D#120 => &D#122->D.43879
  # DEBUG this => D#120
  # DEBUG D#121 => D#122->D.43879._M_impl._M_finish
  # DEBUG __first => _399
  # DEBUG __last => D#121
  # DEBUG D.60620 => NULL
  # DEBUG D#118 => _399
  # DEBUG D#119 => D#121
  # DEBUG __first => D#118
  # DEBUG __last => D#119
  # DEBUG D#117 => D#119
  # DEBUG D#116 => D#118
  # DEBUG D#114 => D#116
  # DEBUG D#115 => D#117
  # DEBUG D.60604 => D#114
  # DEBUG D.60603 => D#115
  MEM[(struct Router * * *)this_17(D) + 120B] = _399;

  <bb 10>:
  # prephitmp_1472 = PHI <gNodes.76_19(8), pretmp_1370(7), gNodes.76_19(9)>
  gNodes = prephitmp_1472;
  _26 = (long unsigned int) prephitmp_1472;
  # DEBUG D#1036 => &this_17(D)->_inject
  # DEBUG this => D#1036
  # DEBUG __new_size => _26
  __x = 0B;
  # DEBUG __x => __x
  _32 = MEM[(struct FlitChannel * * *)this_17(D) + 136B];
  # DEBUG D#72 => D#1036
  _382 = MEM[(struct FlitChannel * * *)this_17(D) + 144B];
  # DEBUG D#72 => D#1036
  # DEBUG this => D#72
  # DEBUG this => D#72
  _383 = (long int) _382;
  _384 = (long int) _32;
  _385 = _383 - _384;
  _386 = _385 /[ex] 8;
  _387 = (size_type) _386;
  if (_26 > _387)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#72 => D#1036
  # DEBUG D#72 => D#1036
  # DEBUG this => D#72
  # DEBUG this => D#72
  _388 = _26 - _387;
  # DEBUG this => D#1036
  # DEBUG D#83 => &D#1036->D.41359._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#83
  # DEBUG this => D#1036
  MEM[(struct __normal_iterator *)&__position] = _382;
  # DEBUG __n => _388
  # DEBUG __x => &__x
  _27 = &this_17(D)->_inject;
  std::vector<FlitChannel*>::_M_fill_insert (_27, __position, _388, &__x);
  pretmp_317 = this_17(D)->_nodes;
  pretmp_319 = (long unsigned int) pretmp_317;
  goto <bb 14>;

  <bb 12>:
  # DEBUG D#72 => D#1036
  # DEBUG D#72 => D#1036
  # DEBUG this => D#72
  # DEBUG this => D#72
  if (_26 < _387)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _389 = _26 * 8;
  _390 = _32 + _389;
  # DEBUG D#133 => D#1036
  # DEBUG __pos => _390
  # DEBUG D#132 => D#133
  # DEBUG this => D#132
  # DEBUG D#130 => &D#132->D.41359
  # DEBUG this => D#130
  # DEBUG D#131 => D#132->D.41359._M_impl._M_finish
  # DEBUG __first => _390
  # DEBUG __last => D#131
  # DEBUG D.60664 => NULL
  # DEBUG D#128 => _390
  # DEBUG D#129 => D#131
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  MEM[(struct FlitChannel * * *)this_17(D) + 144B] = _390;

  <bb 14>:
  # prephitmp_318 = PHI <prephitmp_1472(12), pretmp_317(11), prephitmp_1472(13)>
  # prephitmp_1224 = PHI <_26(12), pretmp_319(11), _26(13)>
  # DEBUG D#1030 => this_17(D)->_nodes
  # DEBUG D#1035 => &this_17(D)->_inject_cred
  # DEBUG this => D#1035
  # DEBUG __new_size => (long unsigned int) D#1030
  __x = 0B;
  # DEBUG __x => __x
  _372 = MEM[(struct Channel * * *)this_17(D) + 160B];
  # DEBUG D#73 => D#1035
  _373 = MEM[(struct Channel * * *)this_17(D) + 168B];
  # DEBUG D#73 => D#1035
  # DEBUG this => D#73
  # DEBUG this => D#73
  _374 = (long int) _373;
  _375 = (long int) _372;
  _376 = _374 - _375;
  _377 = _376 /[ex] 8;
  _378 = (size_type) _377;
  if (_378 < prephitmp_1224)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 15>:
  # DEBUG D#73 => D#1035
  # DEBUG D#73 => D#1035
  # DEBUG this => D#73
  # DEBUG this => D#73
  _379 = prephitmp_1224 - _378;
  # DEBUG this => D#1035
  # DEBUG D#84 => &D#1035->D.42106._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#84
  # DEBUG this => D#1035
  MEM[(struct __normal_iterator *)&__position] = _373;
  # DEBUG __n => _379
  # DEBUG __x => &__x
  _31 = &this_17(D)->_inject_cred;
  std::vector<Channel<Credit>*>::_M_fill_insert (_31, __position, _379, &__x);
  pretmp_1226 = this_17(D)->_nodes;

  <bb 16>:
  # prephitmp_1227 = PHI <prephitmp_318(18), pretmp_1226(15), prephitmp_318(17)>
  # DEBUG s => 0
  if (prephitmp_1227 <= 0)
    goto <bb 148>;
  else
    goto <bb 19>;

  <bb 17>:
  # DEBUG D#73 => D#1035
  # DEBUG D#73 => D#1035
  # DEBUG this => D#73
  # DEBUG this => D#73
  if (_378 > prephitmp_1224)
    goto <bb 18>;
  else
    goto <bb 16>;

  <bb 18>:
  _380 = prephitmp_1224 * 8;
  _381 = _372 + _380;
  # DEBUG D#143 => D#1035
  # DEBUG __pos => _381
  # DEBUG D#142 => D#143
  # DEBUG this => D#142
  # DEBUG D#140 => &D#142->D.42106
  # DEBUG this => D#140
  # DEBUG D#141 => D#142->D.42106._M_impl._M_finish
  # DEBUG __first => _381
  # DEBUG __last => D#141
  # DEBUG D.60708 => NULL
  # DEBUG D#138 => _381
  # DEBUG D#139 => D#141
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  MEM[(struct Channel * * *)this_17(D) + 168B] = _381;
  goto <bb 16>;

  <bb 19>:
  pretmp_263 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1014 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 20>:
  # s_488 = PHI <0(19), s_71(147)>
  # prephitmp_835 = PHI <pretmp_263(19), iftmp.131_522(147)>
  # prephitmp_413 = PHI <pretmp_1014(19), iftmp.133_526(147)>
  # DEBUG s => s_488
  # DEBUG this => &name
  # DEBUG __mode => 16
  # DEBUG D#171 => &name.D.23245
  # DEBUG this => D#171
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&name + 112B].D.19935);
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_num_get = 0B;
  # DEBUG this => &name.D.23242
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&name]._vptr.basic_ostream = prephitmp_835;
  _402 = MEM[(long int *)prephitmp_835 + -24B];
  iftmp.126_403 = (sizetype) _402;
  _404 = &name.D.23242 + iftmp.126_403;
  _404->D.19935._vptr.ios_base = prephitmp_413;
  std::basic_ios<char>::init (_404, 0B);

  <bb 21>:
  name.D.23242._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#169 => &name._M_stringbuf
  # DEBUG this => D#169
  # DEBUG __mode => NULL
  # DEBUG D#152 => &MEM[(struct basic_stringbuf *)D#169].D.23092
  # DEBUG this => D#152
  MEM[(struct basic_streambuf *)&name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&name + 8B].D.23092._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&name + 8B]._M_mode = 16;
  # DEBUG D#151 => &MEM[(struct basic_stringbuf *)D#169]._M_string
  # DEBUG this => D#151
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG this => D#151
  # DEBUG D#150 => &MEM[(struct basic_string *)D#151]._M_dataplus
  # DEBUG this => D#150
  # DEBUG __dat => &MEM[(struct basic_string *)&name + 80B].D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#150
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&name + 80B]._M_p = &MEM[(struct basic_string *)&name + 80B].D.11553._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#151
  # DEBUG __n => 0
  # DEBUG D#9 => D#151
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&name + 88B] = 0;
  # DEBUG D#1 => D#151
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(struct basic_string *)&name + 80B].D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&name + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&name + 112B], &name._M_stringbuf.D.23092);
  goto <bb 27>;

  # prephitmp_1614 = PHI <prephitmp_413(21)>
  # prephitmp_1610 = PHI <prephitmp_835(21)>
<L43>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&name._M_stringbuf);
  resx 63

<L44>:
  # DEBUG this => &name.D.23242
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _414 = MEM[(long int *)prephitmp_1610 + -24B];
  iftmp.132_415 = (sizetype) _414;
  _416 = &name.D.23242 + iftmp.132_415;
  _416->D.19935._vptr.ios_base = prephitmp_1614;
  MEM[(struct  &)&name] ={v} {CLOBBER};
  resx 62

<L71>:
  goto <bb 26> (<L45>);

<L70>:

<L45>:
  # DEBUG D#170 => &name.D.23245
  # DEBUG this => D#170
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&name + 112B].D.19935);
  resx 61

  <bb 27>:
  # DEBUG D#648 => &this_17(D)->D.44919.D.33681
  # DEBUG this => D#648
  # DEBUG __os => &name.D.23242
  # DEBUG __str => NULL
  _178 = MEM[(long unsigned int *)this_17(D) + 16B];
  # DEBUG this => D#2
  _175 = (long int) _178;
  # DEBUG this => NULL
  _170 = MEM[(char * *)this_17(D) + 8B];
  # DEBUG this => D#1
  _165 = std::__ostream_insert<char, std::char_traits<char> > (&name.D.23242, _170, _175);

  <bb 28>:
  # DEBUG __out => _165
  # DEBUG __s => "_fchan_ingress"
  # DEBUG __s => "_fchan_ingress"
  std::__ostream_insert<char, std::char_traits<char> > (_165, "_fchan_ingress", 14);
  goto <bb 30>;

<L73>:
  goto <bb 441> (<L21>);

  <bb 30>:
  std::basic_ostream<char>::operator<< (_165, s_488);
  goto <bb 32>;

<L74>:
  goto <bb 441> (<L21>);

  <bb 32>:
  # DEBUG this => &name
  # DEBUG this => &name._M_stringbuf
  # DEBUG this => &D.50563
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG this => &D.50563
  # DEBUG D#150 => &D.50563._M_dataplus
  # DEBUG this => D#150
  # DEBUG __dat => &D.50563.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#150
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.50563]._M_p = &D.50563.D.11553._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.50563
  # DEBUG __n => 0
  # DEBUG D#9 => &D.50563
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.50563 + 8B] = 0;
  # DEBUG D#1 => &D.50563
  # DEBUG this => D#1
  # DEBUG __c1 => &D.50563.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.50563 + 16] = 0;
  # DEBUG D#349 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _417 = MEM[(char_type * *)&name + 48B];
  # DEBUG D#4 => D#349
  # DEBUG this => D#4
  if (_417 != 0B)
    goto <bb 33>;
  else
    goto <bb 55>;

  <bb 33>:
  # DEBUG D#350 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#350
  # DEBUG this => D#4
  # DEBUG D#351 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _418 = MEM[(char_type * *)&name + 32B];
  # DEBUG D#5 => D#351
  # DEBUG this => D#5
  if (_417 > _418)
    goto <bb 34>;
  else
    goto <bb 44>;

  <bb 34>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#354 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#354
  # DEBUG this => D#4
  # DEBUG D#355 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _419 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#355
  # DEBUG this => D#6
  # DEBUG this => &D.70645
  # DEBUG __beg => _419
  # DEBUG __end => _417
  # DEBUG __a => NULL
  # DEBUG this => &D.70645
  # DEBUG D#347 => &D.70645._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.70645.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.70645]._M_p = &D.70645.D.11553._M_local_buf;
  # DEBUG this => &D.70645
  # DEBUG __beg => _419
  # DEBUG __end => _417
  # DEBUG this => &D.70645
  # DEBUG __beg => _419
  # DEBUG __end => _417
  # DEBUG this => &D.70645
  # DEBUG __beg => _419
  # DEBUG __end => _417
  # DEBUG __ptr => _419
  if (_419 == 0B)
    goto <bb 485>;
  else
    goto <bb 484>;

  <bb 35>:
  _431 = std::__cxx11::basic_string<char>::_M_create (&D.70645, &__dnew, 0);

  <bb 36>:
  # DEBUG D#7 => &D.70645
  # DEBUG __p => _431
  # DEBUG this => D#7
  MEM[(char * *)&D.70645] = _431;
  __dnew.142_432 = __dnew;
  # DEBUG D#8 => &D.70645
  # DEBUG __capacity => __dnew.142_432
  # DEBUG this => D#8
  MEM[(size_type *)&D.70645 + 16B] = __dnew.142_432;
  # DEBUG D#1 => &D.70645
  # DEBUG this => D#1
  # DEBUG __p => _431
  # DEBUG __k1 => _419
  # DEBUG __k2 => _417
  # DEBUG __d => _431
  # DEBUG __s => _419
  # DEBUG __n => __dnew.141_430
  goto <bb 39>;

  <bb 37>:
  # DEBUG D#1 => &D.70645
  # DEBUG this => D#1
  # DEBUG __p => &D.70645.D.11553._M_local_buf
  # DEBUG __k1 => _419
  # DEBUG __k2 => _417
  # DEBUG __d => &D.70645.D.11553._M_local_buf
  # DEBUG __s => _419
  # DEBUG __n => __dnew.141_430
  if (__dnew.141_430 == 1)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  _434 = MEM[(const char_type &)_419];
  # DEBUG D#10 => _419
  # DEBUG __c1 => &D.70645.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.70645 + 16] = _434;
  goto <bb 40>;

  <bb 39>:
  # _1601 = PHI <&D.70645.D.11553._M_local_buf(37), _431(36)>
  # DEBUG D#1 => &D.70645
  # DEBUG this => D#1
  # DEBUG __p => _1601
  # DEBUG __k1 => _419
  # DEBUG __k2 => _417
  # DEBUG __d => _1601
  # DEBUG __s => _419
  # DEBUG __n => __dnew.141_430
  # DEBUG __s1 => _1601
  # DEBUG __s2 => _419
  # DEBUG __n => __dnew.141_430
  __builtin_memcpy (_1601, _419, __dnew.141_430);
  pretmp_1567 = __dnew;
  pretmp_1569 = MEM[(char * *)&D.70645];

  <bb 40>:
  # prephitmp_1568 = PHI <__dnew.141_430(38), pretmp_1567(39)>
  # prephitmp_1557 = PHI <&D.70645.D.11553._M_local_buf(38), pretmp_1569(39)>
  # DEBUG D#1028 => __dnew
  # DEBUG this => &D.70645
  # DEBUG __n => D#1028
  # DEBUG D#9 => &D.70645
  # DEBUG __length => D#1028
  # DEBUG this => D#9
  MEM[(size_type *)&D.70645 + 8B] = prephitmp_1568;
  # DEBUG D#1 => &D.70645
  # DEBUG this => D#1
  _437 = prephitmp_1557 + prephitmp_1568;
  # DEBUG __c1 => _437
  # DEBUG __c2 => D#10
  MEM[(char_type &)_437] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50563
  # DEBUG __str => &D.70645
  # DEBUG this => &D.50563
  # DEBUG __str => &D.70645
  std::__cxx11::basic_string<char>::_M_assign (&D.50563, &D.70645);

  <bb 41>:
  # DEBUG this => &D.70645
  # DEBUG this => &D.70645
  # DEBUG this => &D.70645
  _420 = MEM[(char * *)&D.70645];
  # DEBUG D#1 => &D.70645
  # DEBUG this => D#1
  # DEBUG this => &D.70645
  if (&D.70645.D.11553._M_local_buf != _420)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#165 => D.70645.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.70645
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.70645
  # DEBUG this => D#1
  # DEBUG this => &D.70645
  # DEBUG D#162 => &D.70645._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _420
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _420
  # DEBUG this => D#156
  # DEBUG D.70604 => D#157
  operator delete (_420);

  <bb 43>:
  # DEBUG D#166 => &D.70645._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.70645 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 70>;

  <bb 44>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#352 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#5 => D#352
  # DEBUG this => D#5
  # DEBUG D#353 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _421 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#353
  # DEBUG this => D#6
  # DEBUG this => &D.70644
  # DEBUG __beg => _421
  # DEBUG __end => _418
  # DEBUG __a => NULL
  # DEBUG this => &D.70644
  # DEBUG D#347 => &D.70644._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.70644.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.70644]._M_p = &D.70644.D.11553._M_local_buf;
  # DEBUG this => &D.70644
  # DEBUG __beg => _421
  # DEBUG __end => _418
  # DEBUG this => &D.70644
  # DEBUG __beg => _421
  # DEBUG __end => _418
  # DEBUG this => &D.70644
  # DEBUG __beg => _421
  # DEBUG __end => _418
  # DEBUG __ptr => _421
  _1387 = _418 != 0B;
  _1202 = _421 == 0B;
  _762 = _1202 & _1387;
  if (_762 != 0)
    goto <bb 487>;
  else
    goto <bb 489>;

  <bb 45>:
  _443 = std::__cxx11::basic_string<char>::_M_create (&D.70644, &__dnew, 0);
  goto <bb 47>;

<L76>:
  goto <bb 66> (<L48>);

  <bb 47>:
  # DEBUG D#7 => &D.70644
  # DEBUG __p => _443
  # DEBUG this => D#7
  MEM[(char * *)&D.70644] = _443;
  __dnew.142_444 = __dnew;
  # DEBUG D#8 => &D.70644
  # DEBUG __capacity => __dnew.142_444
  # DEBUG this => D#8
  MEM[(size_type *)&D.70644 + 16B] = __dnew.142_444;
  # DEBUG D#1 => &D.70644
  # DEBUG this => D#1
  # DEBUG __p => _443
  # DEBUG __k1 => _421
  # DEBUG __k2 => _418
  # DEBUG __d => _443
  # DEBUG __s => _421
  # DEBUG __n => __dnew.141_442
  goto <bb 50>;

  <bb 48>:
  # DEBUG D#1 => &D.70644
  # DEBUG this => D#1
  # DEBUG __p => &D.70644.D.11553._M_local_buf
  # DEBUG __k1 => _421
  # DEBUG __k2 => _418
  # DEBUG __d => &D.70644.D.11553._M_local_buf
  # DEBUG __s => _421
  # DEBUG __n => __dnew.141_442
  if (__dnew.141_442 == 1)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  _446 = MEM[(const char_type &)_421];
  # DEBUG D#10 => _421
  # DEBUG __c1 => &D.70644.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.70644 + 16] = _446;
  goto <bb 51>;

  <bb 50>:
  # _1602 = PHI <&D.70644.D.11553._M_local_buf(48), _443(47)>
  # DEBUG D#1 => &D.70644
  # DEBUG this => D#1
  # DEBUG __p => _1602
  # DEBUG __k1 => _421
  # DEBUG __k2 => _418
  # DEBUG __d => _1602
  # DEBUG __s => _421
  # DEBUG __n => __dnew.141_442
  # DEBUG __s1 => _1602
  # DEBUG __s2 => _421
  # DEBUG __n => __dnew.141_442
  __builtin_memcpy (_1602, _421, __dnew.141_442);
  pretmp_1563 = __dnew;
  pretmp_1561 = MEM[(char * *)&D.70644];

  <bb 51>:
  # prephitmp_1562 = PHI <__dnew.141_442(49), pretmp_1563(50)>
  # prephitmp_1560 = PHI <&D.70644.D.11553._M_local_buf(49), pretmp_1561(50)>
  # DEBUG D#1029 => __dnew
  # DEBUG this => &D.70644
  # DEBUG __n => D#1029
  # DEBUG D#9 => &D.70644
  # DEBUG __length => D#1029
  # DEBUG this => D#9
  MEM[(size_type *)&D.70644 + 8B] = prephitmp_1562;
  # DEBUG D#1 => &D.70644
  # DEBUG this => D#1
  _449 = prephitmp_1560 + prephitmp_1562;
  # DEBUG __c1 => _449
  # DEBUG __c2 => D#10
  MEM[(char_type &)_449] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50563
  # DEBUG __str => &D.70644
  # DEBUG this => &D.50563
  # DEBUG __str => &D.70644
  std::__cxx11::basic_string<char>::_M_assign (&D.50563, &D.70644);

  <bb 52>:
  # DEBUG this => &D.70644
  # DEBUG this => &D.70644
  # DEBUG this => &D.70644
  _422 = MEM[(char * *)&D.70644];
  # DEBUG D#1 => &D.70644
  # DEBUG this => D#1
  # DEBUG this => &D.70644
  if (&D.70644.D.11553._M_local_buf != _422)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG D#165 => D.70644.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.70644
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.70644
  # DEBUG this => D#1
  # DEBUG this => &D.70644
  # DEBUG D#162 => &D.70644._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _422
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _422
  # DEBUG this => D#156
  # DEBUG D.70567 => D#157
  operator delete (_422);

  <bb 54>:
  # DEBUG D#166 => &D.70644._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.70644 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 70>;

  <bb 55>:
  # DEBUG this => &D.50563
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => &D.50563
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.50563, &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string);
  goto <bb 70>;

<L77>:
  goto <bb 66> (<L48>);

<L46>:
  # DEBUG this => &D.70645
  # DEBUG this => &D.70645
  # DEBUG this => &D.70645
  _424 = MEM[(char * *)&D.70645];
  # DEBUG D#1 => &D.70645
  # DEBUG this => D#1
  # DEBUG this => &D.70645
  if (&D.70645.D.11553._M_local_buf != _424)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#165 => D.70645.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.70645
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.70645
  # DEBUG this => D#1
  # DEBUG this => &D.70645
  # DEBUG D#162 => &D.70645._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _424
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _424
  # DEBUG this => D#156
  # DEBUG D.70548 => D#157
  operator delete (_424);

  <bb 59>:
  # DEBUG D#166 => &D.70645._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.70645 ={v} {CLOBBER};
  resx 67

<L78>:
  goto <bb 66> (<L48>);

<L47>:
  # DEBUG this => &D.70644
  # DEBUG this => &D.70644
  # DEBUG this => &D.70644
  _425 = MEM[(char * *)&D.70644];
  # DEBUG D#1 => &D.70644
  # DEBUG this => D#1
  # DEBUG this => &D.70644
  if (&D.70644.D.11553._M_local_buf != _425)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # DEBUG D#165 => D.70644.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.70644
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.70644
  # DEBUG this => D#1
  # DEBUG this => &D.70644
  # DEBUG D#162 => &D.70644._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _425
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _425
  # DEBUG this => D#156
  # DEBUG D.70532 => D#157
  operator delete (_425);

  <bb 63>:
  # DEBUG D#166 => &D.70644._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.70644 ={v} {CLOBBER};
  resx 66

<L79>:
  goto <bb 66> (<L48>);

<L75>:

<L48>:
  # DEBUG this => &D.50563
  # DEBUG this => &D.50563
  # DEBUG this => &D.50563
  _426 = MEM[(char * *)&D.50563];
  # DEBUG D#1 => &D.50563
  # DEBUG this => D#1
  # DEBUG this => &D.50563
  if (&D.50563.D.11553._M_local_buf != _426)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  # DEBUG D#165 => D.50563.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50563
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50563
  # DEBUG this => D#1
  # DEBUG this => &D.50563
  # DEBUG D#162 => &D.50563._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _426
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _426
  # DEBUG this => D#156
  # DEBUG D.70521 => D#157
  operator delete (_426);

  <bb 68>:
  # DEBUG D#166 => &D.50563._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  resx 65

<L80>:
  goto <bb 441> (<L21>);

  <bb 70>:
  _38 = operator new (264);

  <bb 71>:
  _39 = this_17(D)->_classes;
  _40 = &this_17(D)->D.44919.D.33681;
  FlitChannel::FlitChannel (_38, _40, &D.50563, _39);

  <bb 72>:
  _42 = (long unsigned int) s_488;
  # DEBUG D#649 => &this_17(D)->_inject
  _198 = MEM[(struct FlitChannel * * *)this_17(D) + 136B];
  # DEBUG D#32 => D#649
  # DEBUG __n => _42
  # DEBUG this => D#32
  _110 = _42 * 8;
  _104 = _198 + _110;
  *_104 = _38;
  # DEBUG this => &D.50563
  # DEBUG this => &D.50563
  # DEBUG this => &D.50563
  _119 = MEM[(char * *)&D.50563];
  # DEBUG D#1 => &D.50563
  # DEBUG this => D#1
  # DEBUG this => &D.50563
  if (&D.50563.D.11553._M_local_buf != _119)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # DEBUG D#165 => D.50563.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50563
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50563
  # DEBUG this => D#1
  # DEBUG this => &D.50563
  # DEBUG D#162 => &D.50563._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _119
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _119
  # DEBUG this => D#156
  # DEBUG D.66508 => D#157
  operator delete (_119);

  <bb 74>:
  # DEBUG D#166 => &D.50563._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50563 ={v} {CLOBBER};
  # DEBUG D#650 => &this_17(D)->_inject
  _199 = MEM[(struct FlitChannel * * *)this_17(D) + 136B];
  # DEBUG D#32 => D#650
  # DEBUG __n => _42
  # DEBUG this => D#32
  _122 = _199 + _110;
  _45 = *_122;
  FlitChannel::SetSource (_45, 0B, s_488);
  goto <bb 76>;

<L82>:
  goto <bb 441> (<L21>);

  <bb 76>:
  # DEBUG D#651 => &this_17(D)->_inject
  _200 = MEM[(struct FlitChannel * * *)this_17(D) + 136B];
  # DEBUG D#32 => D#651
  # DEBUG __n => _42
  # DEBUG this => D#32
  _92 = _200 + _110;
  _47 = *_92;
  D.50602 = _47;
  _49 = &this_17(D)->_timed_modules;
  # DEBUG this => _49
  # DEBUG __x => &D.50602
  _450 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;
  _451 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_last;
  _452 = _451 + 18446744073709551608;
  if (_450 != _452)
    goto <bb 77>;
  else
    goto <bb 80>;

  <bb 77>:
  # DEBUG D#523 => &_49->D.44805._M_impl
  # DEBUG D#87 => D#523
  # DEBUG __p => _450
  # DEBUG __arg => &D.50602
  # DEBUG __a => D#87
  # DEBUG D#86 => D#87
  # DEBUG D#85 => D#86
  # DEBUG __p => _450
  # DEBUG __val => &D.50602
  # DEBUG this => D#85
  # DEBUG D#11 => 8
  # DEBUG __p => _450
  # DEBUG D.60437 => D#11
  if (_450 != 0B)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  *_450 = _47;
  pretmp_1571 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;

  <bb 79>:
  # prephitmp_561 = PHI <_450(77), pretmp_1571(78)>
  _455 = prephitmp_561 + 8;
  MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur = _455;
  goto <bb 82>;

  <bb 80>:
  std::deque<TimedModule*>::_M_push_back_aux (_49, &D.50602);
  goto <bb 82>;

<L83>:
  goto <bb 441> (<L21>);

  <bb 82>:
  D.50602 ={v} {CLOBBER};
  # DEBUG D#70 => &D.50604
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#336 => &D.50604
  # DEBUG this => &D.50605
  # DEBUG __s => ""
  # DEBUG __a => D#336
  # DEBUG D#335 => D#336
  # DEBUG this => &D.50605
  # DEBUG D#333 => &D.50605._M_dataplus
  # DEBUG D#149 => D#335
  # DEBUG this => D#333
  # DEBUG __dat => &D.50605.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#333
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.50605]._M_p = &D.50605.D.11553._M_local_buf;
  # DEBUG __s => ""
  # DEBUG this => &D.50605
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.50605
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.50605
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG __ptr => ""
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG __dnew => 0
  # DEBUG D#1040 => MEM[(char * *)&D.50605]
  # DEBUG D#1 => &D.50605
  # DEBUG this => D#1
  # DEBUG __p => D#1040
  # DEBUG __k1 => ""
  # DEBUG __k2 => ""
  # DEBUG __d => D#1040
  # DEBUG __s => ""
  # DEBUG __n => 0
  # DEBUG __s1 => D#1040
  # DEBUG __s2 => ""
  # DEBUG __n => 0
  # DEBUG this => &D.50605
  # DEBUG __n => 0
  # DEBUG D#9 => &D.50605
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.50605 + 8B] = 0;
  # DEBUG D#1 => &D.50605
  # DEBUG this => D#1
  # DEBUG __c1 => &D.50605.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.50605 + 16] = 0;
  # DEBUG D#1014 => {CLOBBER}
  # DEBUG __dnew => D#1014
  # DEBUG this => &name
  # DEBUG __s => &D.50605
  # DEBUG this => &name._M_stringbuf
  # DEBUG __s => &D.50605
  # DEBUG D#2 => &D.50605
  # DEBUG this => D#2
  # DEBUG this => &D.50605
  # DEBUG D#1 => &D.50605
  # DEBUG this => D#1
  # DEBUG this => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG __s => &D.50605.D.11553._M_local_buf
  # DEBUG __n => 0
  _474 = MEM[(long unsigned int *)&name + 88B];
  # DEBUG D#2 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#2
  std::__cxx11::basic_string<char>::_M_replace (&MEM[(struct basic_stringbuf *)&name + 8B]._M_string, 0, _474, &D.50605.D.11553._M_local_buf, 0);

  <bb 83>:
  _475 = MEM[(struct basic_stringbuf *)&name + 8B]._M_mode;
  # DEBUG this => &name._M_stringbuf
  # DEBUG __mode => _475
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => _475
  # DEBUG __b => NULL
  __a.135_476 = (int) _475;
  _477 = __a.135_476 & 3;
  if (_477 != 0)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  # DEBUG D#12 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  __len_479 = MEM[(long unsigned int *)&name + 88B];
  # DEBUG D#2 => D#12
  # DEBUG this => D#2
  # DEBUG __len => __len_479

  <bb 85>:
  # __len_481 = PHI <0(83), __len_479(84)>
  # DEBUG __len => __len_481
  # DEBUG D#13 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#13
  _480 = MEM[(char * *)&name + 80B];
  # DEBUG D#1 => D#13
  # DEBUG this => D#1
  std::__cxx11::basic_stringbuf<char>::_M_sync (&name._M_stringbuf, _480, 0, __len_481);
  goto <bb 87>;

<L85>:
  goto <bb 429> (<L16>);

  <bb 87>:
  # DEBUG this => &D.50605
  # DEBUG this => &D.50605
  # DEBUG this => &D.50605
  _56 = MEM[(char * *)&D.50605];
  # DEBUG D#1 => &D.50605
  # DEBUG this => D#1
  # DEBUG this => &D.50605
  if (&D.50605.D.11553._M_local_buf != _56)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  # DEBUG D#165 => D.50605.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50605
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50605
  # DEBUG this => D#1
  # DEBUG this => &D.50605
  # DEBUG D#162 => &D.50605._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _56
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _56
  # DEBUG this => D#156
  # DEBUG D.66541 => D#157
  operator delete (_56);

  <bb 89>:
  # DEBUG D#166 => &D.50605._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50605 ={v} {CLOBBER};
  # DEBUG this => &D.50604
  # DEBUG this => &D.50604
  # DEBUG D#652 => &this_17(D)->D.44919.D.33681
  # DEBUG this => D#652
  # DEBUG __os => &name.D.23242
  # DEBUG __str => NULL
  _54 = MEM[(long unsigned int *)this_17(D) + 16B];
  # DEBUG this => D#2
  _62 = (long int) _54;
  # DEBUG this => NULL
  _57 = MEM[(char * *)this_17(D) + 8B];
  # DEBUG this => D#1
  _52 = std::__ostream_insert<char, std::char_traits<char> > (&name.D.23242, _57, _62);
  goto <bb 91>;

<L86>:
  goto <bb 441> (<L21>);

  <bb 91>:
  # DEBUG __out => _52
  # DEBUG __s => "_cchan_ingress"
  # DEBUG __s => "_cchan_ingress"
  std::__ostream_insert<char, std::char_traits<char> > (_52, "_cchan_ingress", 14);
  goto <bb 93>;

<L87>:
  goto <bb 441> (<L21>);

  <bb 93>:
  std::basic_ostream<char>::operator<< (_52, s_488);
  goto <bb 95>;

<L88>:
  goto <bb 441> (<L21>);

  <bb 95>:
  # DEBUG this => &name
  # DEBUG this => &name._M_stringbuf
  # DEBUG this => &D.50606
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG this => &D.50606
  # DEBUG D#150 => &D.50606._M_dataplus
  # DEBUG this => D#150
  # DEBUG __dat => &D.50606.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#150
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.50606]._M_p = &D.50606.D.11553._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.50606
  # DEBUG __n => 0
  # DEBUG D#9 => &D.50606
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.50606 + 8B] = 0;
  # DEBUG D#1 => &D.50606
  # DEBUG this => D#1
  # DEBUG __c1 => &D.50606.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.50606 + 16] = 0;
  # DEBUG D#349 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _482 = MEM[(char_type * *)&name + 48B];
  # DEBUG D#4 => D#349
  # DEBUG this => D#4
  if (_482 != 0B)
    goto <bb 96>;
  else
    goto <bb 118>;

  <bb 96>:
  # DEBUG D#350 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#350
  # DEBUG this => D#4
  # DEBUG D#351 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _483 = MEM[(char_type * *)&name + 32B];
  # DEBUG D#5 => D#351
  # DEBUG this => D#5
  if (_482 > _483)
    goto <bb 97>;
  else
    goto <bb 107>;

  <bb 97>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#354 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#354
  # DEBUG this => D#4
  # DEBUG D#355 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _484 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#355
  # DEBUG this => D#6
  # DEBUG this => &D.70905
  # DEBUG __beg => _484
  # DEBUG __end => _482
  # DEBUG __a => NULL
  # DEBUG this => &D.70905
  # DEBUG D#347 => &D.70905._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.70905.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.70905]._M_p = &D.70905.D.11553._M_local_buf;
  # DEBUG this => &D.70905
  # DEBUG __beg => _484
  # DEBUG __end => _482
  # DEBUG this => &D.70905
  # DEBUG __beg => _484
  # DEBUG __end => _482
  # DEBUG this => &D.70905
  # DEBUG __beg => _484
  # DEBUG __end => _482
  # DEBUG __ptr => _484
  if (_484 == 0B)
    goto <bb 490>;
  else
    goto <bb 492>;

  <bb 98>:
  _496 = std::__cxx11::basic_string<char>::_M_create (&D.70905, &__dnew, 0);

  <bb 99>:
  # DEBUG D#7 => &D.70905
  # DEBUG __p => _496
  # DEBUG this => D#7
  MEM[(char * *)&D.70905] = _496;
  __dnew.142_497 = __dnew;
  # DEBUG D#8 => &D.70905
  # DEBUG __capacity => __dnew.142_497
  # DEBUG this => D#8
  MEM[(size_type *)&D.70905 + 16B] = __dnew.142_497;
  # DEBUG D#1 => &D.70905
  # DEBUG this => D#1
  # DEBUG __p => _496
  # DEBUG __k1 => _484
  # DEBUG __k2 => _482
  # DEBUG __d => _496
  # DEBUG __s => _484
  # DEBUG __n => __dnew.141_495
  goto <bb 102>;

  <bb 100>:
  # DEBUG D#1 => &D.70905
  # DEBUG this => D#1
  # DEBUG __p => &D.70905.D.11553._M_local_buf
  # DEBUG __k1 => _484
  # DEBUG __k2 => _482
  # DEBUG __d => &D.70905.D.11553._M_local_buf
  # DEBUG __s => _484
  # DEBUG __n => __dnew.141_495
  if (__dnew.141_495 == 1)
    goto <bb 101>;
  else
    goto <bb 102>;

  <bb 101>:
  _499 = MEM[(const char_type &)_484];
  # DEBUG D#10 => _484
  # DEBUG __c1 => &D.70905.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.70905 + 16] = _499;
  goto <bb 103>;

  <bb 102>:
  # _1603 = PHI <&D.70905.D.11553._M_local_buf(100), _496(99)>
  # DEBUG D#1 => &D.70905
  # DEBUG this => D#1
  # DEBUG __p => _1603
  # DEBUG __k1 => _484
  # DEBUG __k2 => _482
  # DEBUG __d => _1603
  # DEBUG __s => _484
  # DEBUG __n => __dnew.141_495
  # DEBUG __s1 => _1603
  # DEBUG __s2 => _484
  # DEBUG __n => __dnew.141_495
  __builtin_memcpy (_1603, _484, __dnew.141_495);
  pretmp_1574 = __dnew;
  pretmp_467 = MEM[(char * *)&D.70905];

  <bb 103>:
  # prephitmp_521 = PHI <__dnew.141_495(101), pretmp_1574(102)>
  # prephitmp_1570 = PHI <&D.70905.D.11553._M_local_buf(101), pretmp_467(102)>
  # DEBUG D#1026 => __dnew
  # DEBUG this => &D.70905
  # DEBUG __n => D#1026
  # DEBUG D#9 => &D.70905
  # DEBUG __length => D#1026
  # DEBUG this => D#9
  MEM[(size_type *)&D.70905 + 8B] = prephitmp_521;
  # DEBUG D#1 => &D.70905
  # DEBUG this => D#1
  _502 = prephitmp_1570 + prephitmp_521;
  # DEBUG __c1 => _502
  # DEBUG __c2 => D#10
  MEM[(char_type &)_502] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50606
  # DEBUG __str => &D.70905
  # DEBUG this => &D.50606
  # DEBUG __str => &D.70905
  std::__cxx11::basic_string<char>::_M_assign (&D.50606, &D.70905);

  <bb 104>:
  # DEBUG this => &D.70905
  # DEBUG this => &D.70905
  # DEBUG this => &D.70905
  _485 = MEM[(char * *)&D.70905];
  # DEBUG D#1 => &D.70905
  # DEBUG this => D#1
  # DEBUG this => &D.70905
  if (&D.70905.D.11553._M_local_buf != _485)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#165 => D.70905.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.70905
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.70905
  # DEBUG this => D#1
  # DEBUG this => &D.70905
  # DEBUG D#162 => &D.70905._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _485
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _485
  # DEBUG this => D#156
  # DEBUG D.70864 => D#157
  operator delete (_485);

  <bb 106>:
  # DEBUG D#166 => &D.70905._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.70905 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 133>;

  <bb 107>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#352 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#5 => D#352
  # DEBUG this => D#5
  # DEBUG D#353 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _486 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#353
  # DEBUG this => D#6
  # DEBUG this => &D.70904
  # DEBUG __beg => _486
  # DEBUG __end => _483
  # DEBUG __a => NULL
  # DEBUG this => &D.70904
  # DEBUG D#347 => &D.70904._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.70904.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.70904]._M_p = &D.70904.D.11553._M_local_buf;
  # DEBUG this => &D.70904
  # DEBUG __beg => _486
  # DEBUG __end => _483
  # DEBUG this => &D.70904
  # DEBUG __beg => _486
  # DEBUG __end => _483
  # DEBUG this => &D.70904
  # DEBUG __beg => _486
  # DEBUG __end => _483
  # DEBUG __ptr => _486
  _1386 = _483 != 0B;
  _1385 = _486 == 0B;
  _1199 = _1385 & _1386;
  if (_1199 != 0)
    goto <bb 493>;
  else
    goto <bb 495>;

  <bb 108>:
  _508 = std::__cxx11::basic_string<char>::_M_create (&D.70904, &__dnew, 0);
  goto <bb 110>;

<L90>:
  goto <bb 129> (<L51>);

  <bb 110>:
  # DEBUG D#7 => &D.70904
  # DEBUG __p => _508
  # DEBUG this => D#7
  MEM[(char * *)&D.70904] = _508;
  __dnew.142_509 = __dnew;
  # DEBUG D#8 => &D.70904
  # DEBUG __capacity => __dnew.142_509
  # DEBUG this => D#8
  MEM[(size_type *)&D.70904 + 16B] = __dnew.142_509;
  # DEBUG D#1 => &D.70904
  # DEBUG this => D#1
  # DEBUG __p => _508
  # DEBUG __k1 => _486
  # DEBUG __k2 => _483
  # DEBUG __d => _508
  # DEBUG __s => _486
  # DEBUG __n => __dnew.141_507
  goto <bb 113>;

  <bb 111>:
  # DEBUG D#1 => &D.70904
  # DEBUG this => D#1
  # DEBUG __p => &D.70904.D.11553._M_local_buf
  # DEBUG __k1 => _486
  # DEBUG __k2 => _483
  # DEBUG __d => &D.70904.D.11553._M_local_buf
  # DEBUG __s => _486
  # DEBUG __n => __dnew.141_507
  if (__dnew.141_507 == 1)
    goto <bb 112>;
  else
    goto <bb 113>;

  <bb 112>:
  _511 = MEM[(const char_type &)_486];
  # DEBUG D#10 => _486
  # DEBUG __c1 => &D.70904.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.70904 + 16] = _511;
  goto <bb 114>;

  <bb 113>:
  # _1591 = PHI <&D.70904.D.11553._M_local_buf(111), _508(110)>
  # DEBUG D#1 => &D.70904
  # DEBUG this => D#1
  # DEBUG __p => _1591
  # DEBUG __k1 => _486
  # DEBUG __k2 => _483
  # DEBUG __d => _1591
  # DEBUG __s => _486
  # DEBUG __n => __dnew.141_507
  # DEBUG __s1 => _1591
  # DEBUG __s2 => _486
  # DEBUG __n => __dnew.141_507
  __builtin_memcpy (_1591, _486, __dnew.141_507);
  pretmp_465 = __dnew;
  pretmp_1575 = MEM[(char * *)&D.70904];

  <bb 114>:
  # prephitmp_67 = PHI <__dnew.141_507(112), pretmp_465(113)>
  # prephitmp_527 = PHI <&D.70904.D.11553._M_local_buf(112), pretmp_1575(113)>
  # DEBUG D#1027 => __dnew
  # DEBUG this => &D.70904
  # DEBUG __n => D#1027
  # DEBUG D#9 => &D.70904
  # DEBUG __length => D#1027
  # DEBUG this => D#9
  MEM[(size_type *)&D.70904 + 8B] = prephitmp_67;
  # DEBUG D#1 => &D.70904
  # DEBUG this => D#1
  _514 = prephitmp_527 + prephitmp_67;
  # DEBUG __c1 => _514
  # DEBUG __c2 => D#10
  MEM[(char_type &)_514] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50606
  # DEBUG __str => &D.70904
  # DEBUG this => &D.50606
  # DEBUG __str => &D.70904
  std::__cxx11::basic_string<char>::_M_assign (&D.50606, &D.70904);

  <bb 115>:
  # DEBUG this => &D.70904
  # DEBUG this => &D.70904
  # DEBUG this => &D.70904
  _487 = MEM[(char * *)&D.70904];
  # DEBUG D#1 => &D.70904
  # DEBUG this => D#1
  # DEBUG this => &D.70904
  if (&D.70904.D.11553._M_local_buf != _487)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG D#165 => D.70904.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.70904
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.70904
  # DEBUG this => D#1
  # DEBUG this => &D.70904
  # DEBUG D#162 => &D.70904._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _487
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _487
  # DEBUG this => D#156
  # DEBUG D.70827 => D#157
  operator delete (_487);

  <bb 117>:
  # DEBUG D#166 => &D.70904._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.70904 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 133>;

  <bb 118>:
  # DEBUG this => &D.50606
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => &D.50606
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.50606, &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string);
  goto <bb 133>;

<L91>:
  goto <bb 129> (<L51>);

<L49>:
  # DEBUG this => &D.70905
  # DEBUG this => &D.70905
  # DEBUG this => &D.70905
  _489 = MEM[(char * *)&D.70905];
  # DEBUG D#1 => &D.70905
  # DEBUG this => D#1
  # DEBUG this => &D.70905
  if (&D.70905.D.11553._M_local_buf != _489)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  # DEBUG D#165 => D.70905.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.70905
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.70905
  # DEBUG this => D#1
  # DEBUG this => &D.70905
  # DEBUG D#162 => &D.70905._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _489
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _489
  # DEBUG this => D#156
  # DEBUG D.70808 => D#157
  operator delete (_489);

  <bb 122>:
  # DEBUG D#166 => &D.70905._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.70905 ={v} {CLOBBER};
  resx 70

<L92>:
  goto <bb 129> (<L51>);

<L50>:
  # DEBUG this => &D.70904
  # DEBUG this => &D.70904
  # DEBUG this => &D.70904
  _490 = MEM[(char * *)&D.70904];
  # DEBUG D#1 => &D.70904
  # DEBUG this => D#1
  # DEBUG this => &D.70904
  if (&D.70904.D.11553._M_local_buf != _490)
    goto <bb 125>;
  else
    goto <bb 126>;

  <bb 125>:
  # DEBUG D#165 => D.70904.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.70904
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.70904
  # DEBUG this => D#1
  # DEBUG this => &D.70904
  # DEBUG D#162 => &D.70904._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _490
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _490
  # DEBUG this => D#156
  # DEBUG D.70792 => D#157
  operator delete (_490);

  <bb 126>:
  # DEBUG D#166 => &D.70904._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.70904 ={v} {CLOBBER};
  resx 69

<L93>:
  goto <bb 129> (<L51>);

<L89>:

<L51>:
  # DEBUG this => &D.50606
  # DEBUG this => &D.50606
  # DEBUG this => &D.50606
  _491 = MEM[(char * *)&D.50606];
  # DEBUG D#1 => &D.50606
  # DEBUG this => D#1
  # DEBUG this => &D.50606
  if (&D.50606.D.11553._M_local_buf != _491)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # DEBUG D#165 => D.50606.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50606
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50606
  # DEBUG this => D#1
  # DEBUG this => &D.50606
  # DEBUG D#162 => &D.50606._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _491
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _491
  # DEBUG this => D#156
  # DEBUG D.70781 => D#157
  operator delete (_491);

  <bb 131>:
  # DEBUG D#166 => &D.50606._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  resx 68

<L94>:
  goto <bb 441> (<L21>);

  <bb 133>:
  _60 = operator new (200);

  <bb 134>:
  Channel<Credit>::Channel (_60, _40, &D.50606);

  <bb 135>:
  # DEBUG D#653 => &this_17(D)->_inject_cred
  _206 = MEM[(struct Channel * * *)this_17(D) + 160B];
  # DEBUG D#45 => D#653
  # DEBUG __n => _42
  # DEBUG this => D#45
  _213 = _206 + _110;
  *_213 = _60;
  # DEBUG this => &D.50606
  # DEBUG this => &D.50606
  # DEBUG this => &D.50606
  _212 = MEM[(char * *)&D.50606];
  # DEBUG D#1 => &D.50606
  # DEBUG this => D#1
  # DEBUG this => &D.50606
  if (&D.50606.D.11553._M_local_buf != _212)
    goto <bb 136>;
  else
    goto <bb 137>;

  <bb 136>:
  # DEBUG D#165 => D.50606.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50606
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50606
  # DEBUG this => D#1
  # DEBUG this => &D.50606
  # DEBUG D#162 => &D.50606._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _212
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _212
  # DEBUG this => D#156
  # DEBUG D.66565 => D#157
  operator delete (_212);

  <bb 137>:
  # DEBUG D#166 => &D.50606._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50606 ={v} {CLOBBER};
  # DEBUG D#654 => &this_17(D)->_inject_cred
  _207 = MEM[(struct Channel * * *)this_17(D) + 160B];
  # DEBUG D#45 => D#654
  # DEBUG __n => _42
  # DEBUG this => D#45
  _35 = _207 + _110;
  _65 = *_35;
  D.50636 = _65;
  # DEBUG this => _49
  # DEBUG __x => &D.50636
  _515 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;
  _516 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_last;
  _517 = _516 + 18446744073709551608;
  if (_515 != _517)
    goto <bb 138>;
  else
    goto <bb 141>;

  <bb 138>:
  # DEBUG D#523 => &_49->D.44805._M_impl
  # DEBUG D#87 => D#523
  # DEBUG __p => _515
  # DEBUG __arg => &D.50636
  # DEBUG __a => D#87
  # DEBUG D#86 => D#87
  # DEBUG D#85 => D#86
  # DEBUG __p => _515
  # DEBUG __val => &D.50636
  # DEBUG this => D#85
  # DEBUG D#11 => 8
  # DEBUG __p => _515
  # DEBUG D.60437 => D#11
  if (_515 != 0B)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 139>:
  *_515 = _65;
  pretmp_1572 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;

  <bb 140>:
  # prephitmp_85 = PHI <_515(138), pretmp_1572(139)>
  _520 = prephitmp_85 + 8;
  MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur = _520;
  goto <bb 143>;

  <bb 141>:
  std::deque<TimedModule*>::_M_push_back_aux (_49, &D.50636);
  goto <bb 143>;

<L96>:
  goto <bb 441> (<L21>);

  <bb 143>:
  D.50636 ={v} {CLOBBER};
  # DEBUG this => &name
  name.D.23242._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &name._M_stringbuf
  MEM[(struct basic_stringbuf *)&name + 8B].D.23092._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#168 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#168
  # DEBUG this => D#168
  # DEBUG this => D#168
  _69 = MEM[(char * *)&name + 80B];
  # DEBUG D#1 => D#168
  # DEBUG this => D#1
  # DEBUG this => D#168
  if (&MEM[(const struct basic_string *)&name + 80B].D.11553._M_local_buf != _69)
    goto <bb 144>;
  else
    goto <bb 145>;

  <bb 144>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#168].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#168
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#168
  # DEBUG this => D#1
  # DEBUG this => D#168
  # DEBUG D#162 => &MEM[(struct basic_string *)D#168]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _69
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _69
  # DEBUG this => D#156
  # DEBUG D.70988 => D#157
  operator delete (_69);

  <bb 145>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#168]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)&name + 80] ={v} {CLOBBER};
  # DEBUG D#167 => &MEM[(struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG this => D#167
  MEM[(struct basic_streambuf *)&name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&name + 8B]._M_buf_locale);
  MEM[(struct  &)&name + 8] ={v} {CLOBBER};
  # DEBUG this => &name.D.23242
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.131_522 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  _523 = MEM[(long int *)iftmp.131_522 + -24B];
  iftmp.132_524 = (sizetype) _523;
  _525 = &name.D.23242 + iftmp.132_524;
  iftmp.133_526 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _525->D.19935._vptr.ios_base = iftmp.133_526;
  MEM[(struct  &)&name] ={v} {CLOBBER};
  # DEBUG D#172 => &name.D.23245
  # DEBUG this => D#172
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&name + 112B].D.19935);
  name ={v} {CLOBBER};
  s_71 = s_488 + 1;
  # DEBUG s => s_71
  # DEBUG s => s_71
  gNodes.76_33 = this_17(D)->_nodes;
  if (gNodes.76_33 <= s_71)
    goto <bb 146>;
  else
    goto <bb 147>;

  <bb 146>:
  # gNodes.76_827 = PHI <gNodes.76_33(145)>
  goto <bb 148>;

  <bb 147>:
  goto <bb 20>;

  <bb 148>:
  # gNodes.76_871 = PHI <gNodes.76_827(146), prephitmp_1227(16)>
  # prephitmp_303 = PHI <gNodes.76_827(146), prephitmp_1227(16)>
  _83 = (long unsigned int) gNodes.76_871;
  # DEBUG D#1034 => &this_17(D)->_eject
  # DEBUG this => D#1034
  # DEBUG __new_size => _83
  __x = 0B;
  # DEBUG __x => __x
  _89 = MEM[(struct FlitChannel * * *)this_17(D) + 184B];
  # DEBUG D#72 => D#1034
  _540 = MEM[(struct FlitChannel * * *)this_17(D) + 192B];
  # DEBUG D#72 => D#1034
  # DEBUG this => D#72
  # DEBUG this => D#72
  _541 = (long int) _540;
  _542 = (long int) _89;
  _543 = _541 - _542;
  _544 = _543 /[ex] 8;
  _545 = (size_type) _544;
  if (_83 > _545)
    goto <bb 149>;
  else
    goto <bb 150>;

  <bb 149>:
  # DEBUG D#72 => D#1034
  # DEBUG D#72 => D#1034
  # DEBUG this => D#72
  # DEBUG this => D#72
  _546 = _83 - _545;
  # DEBUG this => D#1034
  # DEBUG D#83 => &D#1034->D.41359._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#83
  # DEBUG this => D#1034
  MEM[(struct __normal_iterator *)&__position] = _540;
  # DEBUG __n => _546
  # DEBUG __x => &__x
  _84 = &this_17(D)->_eject;
  std::vector<FlitChannel*>::_M_fill_insert (_84, __position, _546, &__x);
  pretmp_1549 = this_17(D)->_nodes;
  goto <bb 152>;

  <bb 150>:
  # DEBUG D#72 => D#1034
  # DEBUG D#72 => D#1034
  # DEBUG this => D#72
  # DEBUG this => D#72
  if (_83 < _545)
    goto <bb 151>;
  else
    goto <bb 152>;

  <bb 151>:
  _547 = _83 * 8;
  _548 = _89 + _547;
  # DEBUG D#133 => D#1034
  # DEBUG __pos => _548
  # DEBUG D#132 => D#133
  # DEBUG this => D#132
  # DEBUG D#130 => &D#132->D.41359
  # DEBUG this => D#130
  # DEBUG D#131 => D#132->D.41359._M_impl._M_finish
  # DEBUG __first => _548
  # DEBUG __last => D#131
  # DEBUG D.60664 => NULL
  # DEBUG D#128 => _548
  # DEBUG D#129 => D#131
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  MEM[(struct FlitChannel * * *)this_17(D) + 192B] = _548;
  pretmp_1556 = this_17(D)->_nodes;

  <bb 152>:
  # prephitmp_1548 = PHI <prephitmp_303(150), pretmp_1549(149), pretmp_1556(151)>
  _87 = (long unsigned int) prephitmp_1548;
  # DEBUG D#1033 => &this_17(D)->_eject_cred
  # DEBUG this => D#1033
  # DEBUG __new_size => _87
  __x = 0B;
  # DEBUG __x => __x
  _530 = MEM[(struct Channel * * *)this_17(D) + 208B];
  # DEBUG D#73 => D#1033
  _531 = MEM[(struct Channel * * *)this_17(D) + 216B];
  # DEBUG D#73 => D#1033
  # DEBUG this => D#73
  # DEBUG this => D#73
  _532 = (long int) _531;
  _533 = (long int) _530;
  _534 = _532 - _533;
  _535 = _534 /[ex] 8;
  _536 = (size_type) _535;
  if (_87 > _536)
    goto <bb 153>;
  else
    goto <bb 156>;

  <bb 153>:
  # DEBUG D#73 => D#1033
  # DEBUG D#73 => D#1033
  # DEBUG this => D#73
  # DEBUG this => D#73
  _537 = _87 - _536;
  # DEBUG this => D#1033
  # DEBUG D#84 => &D#1033->D.42106._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#84
  # DEBUG this => D#1033
  MEM[(struct __normal_iterator *)&__position] = _531;
  # DEBUG __n => _537
  # DEBUG __x => &__x
  _88 = &this_17(D)->_eject_cred;
  std::vector<Channel<Credit>*>::_M_fill_insert (_88, __position, _537, &__x);
  pretmp_1184 = this_17(D)->_nodes;

  <bb 154>:
  # prephitmp_1286 = PHI <prephitmp_1548(157), pretmp_1184(153), prephitmp_1548(156)>
  # DEBUG d => 0
  if (prephitmp_1286 <= 0)
    goto <bb 155>;
  else
    goto <bb 158>;

  <bb 155>:
  _141 = this_17(D)->_channels;
  _142 = (long unsigned int) _141;
  # DEBUG D#1032 => &this_17(D)->_chan
  # DEBUG this => D#1032
  # DEBUG __new_size => _142
  __x = 0B;
  # DEBUG __x => __x
  _148 = MEM[(struct FlitChannel * * *)this_17(D) + 232B];
  # DEBUG D#72 => D#1032
  _689 = MEM[(struct FlitChannel * * *)this_17(D) + 240B];
  # DEBUG D#72 => D#1032
  # DEBUG this => D#72
  # DEBUG this => D#72
  _690 = (long int) _689;
  _691 = (long int) _148;
  _692 = _690 - _691;
  _693 = _692 /[ex] 8;
  _694 = (size_type) _693;
  if (_142 > _694)
    goto <bb 286>;
  else
    goto <bb 287>;

  <bb 156>:
  # DEBUG D#73 => D#1033
  # DEBUG D#73 => D#1033
  # DEBUG this => D#73
  # DEBUG this => D#73
  if (_87 < _536)
    goto <bb 157>;
  else
    goto <bb 154>;

  <bb 157>:
  _538 = _87 * 8;
  _539 = _530 + _538;
  # DEBUG D#143 => D#1033
  # DEBUG __pos => _539
  # DEBUG D#142 => D#143
  # DEBUG this => D#142
  # DEBUG D#140 => &D#142->D.42106
  # DEBUG this => D#140
  # DEBUG D#141 => D#142->D.42106._M_impl._M_finish
  # DEBUG __first => _539
  # DEBUG __last => D#141
  # DEBUG D.60708 => NULL
  # DEBUG D#138 => _539
  # DEBUG D#139 => D#141
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  MEM[(struct Channel * * *)this_17(D) + 216B] = _539;
  goto <bb 154>;

  <bb 158>:
  pretmp_868 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_853 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 159>:
  # d_473 = PHI <0(158), d_129(285)>
  # prephitmp_856 = PHI <pretmp_868(158), iftmp.131_671(285)>
  # prephitmp_529 = PHI <pretmp_853(158), iftmp.133_675(285)>
  # DEBUG d => d_473
  # DEBUG this => &name
  # DEBUG __mode => 16
  # DEBUG D#171 => &name.D.23245
  # DEBUG this => D#171
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&name + 112B].D.19935);
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_num_get = 0B;
  # DEBUG this => &name.D.23242
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&name]._vptr.basic_ostream = prephitmp_856;
  _551 = MEM[(long int *)prephitmp_856 + -24B];
  iftmp.126_552 = (sizetype) _551;
  _553 = &name.D.23242 + iftmp.126_552;
  _553->D.19935._vptr.ios_base = prephitmp_529;
  std::basic_ios<char>::init (_553, 0B);

  <bb 160>:
  name.D.23242._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#169 => &name._M_stringbuf
  # DEBUG this => D#169
  # DEBUG __mode => NULL
  # DEBUG D#152 => &MEM[(struct basic_stringbuf *)D#169].D.23092
  # DEBUG this => D#152
  MEM[(struct basic_streambuf *)&name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&name + 8B].D.23092._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&name + 8B]._M_mode = 16;
  # DEBUG D#151 => &MEM[(struct basic_stringbuf *)D#169]._M_string
  # DEBUG this => D#151
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG this => D#151
  # DEBUG D#150 => &MEM[(struct basic_string *)D#151]._M_dataplus
  # DEBUG this => D#150
  # DEBUG __dat => &MEM[(struct basic_string *)&name + 80B].D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#150
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&name + 80B]._M_p = &MEM[(struct basic_string *)&name + 80B].D.11553._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#151
  # DEBUG __n => 0
  # DEBUG D#9 => D#151
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&name + 88B] = 0;
  # DEBUG D#1 => D#151
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(struct basic_string *)&name + 80B].D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&name + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&name + 112B], &name._M_stringbuf.D.23092);
  goto <bb 166>;

  # prephitmp_1611 = PHI <prephitmp_529(160)>
  # prephitmp_1609 = PHI <prephitmp_856(160)>
<L52>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&name._M_stringbuf);
  resx 73

<L53>:
  # DEBUG this => &name.D.23242
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _563 = MEM[(long int *)prephitmp_1609 + -24B];
  iftmp.132_564 = (sizetype) _563;
  _565 = &name.D.23242 + iftmp.132_564;
  _565->D.19935._vptr.ios_base = prephitmp_1611;
  MEM[(struct  &)&name] ={v} {CLOBBER};
  resx 72

<L98>:
  goto <bb 165> (<L54>);

<L97>:

<L54>:
  # DEBUG D#170 => &name.D.23245
  # DEBUG this => D#170
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&name + 112B].D.19935);
  resx 71

  <bb 166>:
  # DEBUG D#655 => &this_17(D)->D.44919.D.33681
  # DEBUG this => D#655
  # DEBUG __os => &name.D.23242
  # DEBUG __str => NULL
  _214 = MEM[(long unsigned int *)this_17(D) + 16B];
  # DEBUG this => D#2
  _215 = (long int) _214;
  # DEBUG this => NULL
  _216 = MEM[(char * *)this_17(D) + 8B];
  # DEBUG this => D#1
  _217 = std::__ostream_insert<char, std::char_traits<char> > (&name.D.23242, _216, _215);

  <bb 167>:
  # DEBUG __out => _217
  # DEBUG __s => "_fchan_egress"
  # DEBUG __s => "_fchan_egress"
  std::__ostream_insert<char, std::char_traits<char> > (_217, "_fchan_egress", 13);
  goto <bb 169>;

<L100>:
  goto <bb 462> (<L31>);

  <bb 169>:
  std::basic_ostream<char>::operator<< (_217, d_473);
  goto <bb 171>;

<L101>:
  goto <bb 462> (<L31>);

  <bb 171>:
  # DEBUG this => &name
  # DEBUG this => &name._M_stringbuf
  # DEBUG this => &D.50639
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG this => &D.50639
  # DEBUG D#150 => &D.50639._M_dataplus
  # DEBUG this => D#150
  # DEBUG __dat => &D.50639.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#150
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.50639]._M_p = &D.50639.D.11553._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.50639
  # DEBUG __n => 0
  # DEBUG D#9 => &D.50639
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.50639 + 8B] = 0;
  # DEBUG D#1 => &D.50639
  # DEBUG this => D#1
  # DEBUG __c1 => &D.50639.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.50639 + 16] = 0;
  # DEBUG D#349 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _566 = MEM[(char_type * *)&name + 48B];
  # DEBUG D#4 => D#349
  # DEBUG this => D#4
  if (_566 != 0B)
    goto <bb 172>;
  else
    goto <bb 194>;

  <bb 172>:
  # DEBUG D#350 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#350
  # DEBUG this => D#4
  # DEBUG D#351 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _567 = MEM[(char_type * *)&name + 32B];
  # DEBUG D#5 => D#351
  # DEBUG this => D#5
  if (_566 > _567)
    goto <bb 173>;
  else
    goto <bb 183>;

  <bb 173>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#354 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#354
  # DEBUG this => D#4
  # DEBUG D#355 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _568 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#355
  # DEBUG this => D#6
  # DEBUG this => &D.71180
  # DEBUG __beg => _568
  # DEBUG __end => _566
  # DEBUG __a => NULL
  # DEBUG this => &D.71180
  # DEBUG D#347 => &D.71180._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.71180.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.71180]._M_p = &D.71180.D.11553._M_local_buf;
  # DEBUG this => &D.71180
  # DEBUG __beg => _568
  # DEBUG __end => _566
  # DEBUG this => &D.71180
  # DEBUG __beg => _568
  # DEBUG __end => _566
  # DEBUG this => &D.71180
  # DEBUG __beg => _568
  # DEBUG __end => _566
  # DEBUG __ptr => _568
  if (_568 == 0B)
    goto <bb 497>;
  else
    goto <bb 496>;

  <bb 174>:
  _580 = std::__cxx11::basic_string<char>::_M_create (&D.71180, &__dnew, 0);

  <bb 175>:
  # DEBUG D#7 => &D.71180
  # DEBUG __p => _580
  # DEBUG this => D#7
  MEM[(char * *)&D.71180] = _580;
  __dnew.142_581 = __dnew;
  # DEBUG D#8 => &D.71180
  # DEBUG __capacity => __dnew.142_581
  # DEBUG this => D#8
  MEM[(size_type *)&D.71180 + 16B] = __dnew.142_581;
  # DEBUG D#1 => &D.71180
  # DEBUG this => D#1
  # DEBUG __p => _580
  # DEBUG __k1 => _568
  # DEBUG __k2 => _566
  # DEBUG __d => _580
  # DEBUG __s => _568
  # DEBUG __n => __dnew.141_579
  goto <bb 178>;

  <bb 176>:
  # DEBUG D#1 => &D.71180
  # DEBUG this => D#1
  # DEBUG __p => &D.71180.D.11553._M_local_buf
  # DEBUG __k1 => _568
  # DEBUG __k2 => _566
  # DEBUG __d => &D.71180.D.11553._M_local_buf
  # DEBUG __s => _568
  # DEBUG __n => __dnew.141_579
  if (__dnew.141_579 == 1)
    goto <bb 177>;
  else
    goto <bb 178>;

  <bb 177>:
  _583 = MEM[(const char_type &)_568];
  # DEBUG D#10 => _568
  # DEBUG __c1 => &D.71180.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.71180 + 16] = _583;
  goto <bb 179>;

  <bb 178>:
  # _1583 = PHI <&D.71180.D.11553._M_local_buf(176), _580(175)>
  # DEBUG D#1 => &D.71180
  # DEBUG this => D#1
  # DEBUG __p => _1583
  # DEBUG __k1 => _568
  # DEBUG __k2 => _566
  # DEBUG __d => _1583
  # DEBUG __s => _568
  # DEBUG __n => __dnew.141_579
  # DEBUG __s1 => _1583
  # DEBUG __s2 => _568
  # DEBUG __n => __dnew.141_579
  __builtin_memcpy (_1583, _568, __dnew.141_579);
  pretmp_337 = __dnew;
  pretmp_300 = MEM[(char * *)&D.71180];

  <bb 179>:
  # prephitmp_314 = PHI <__dnew.141_579(177), pretmp_337(178)>
  # prephitmp_277 = PHI <&D.71180.D.11553._M_local_buf(177), pretmp_300(178)>
  # DEBUG D#1024 => __dnew
  # DEBUG this => &D.71180
  # DEBUG __n => D#1024
  # DEBUG D#9 => &D.71180
  # DEBUG __length => D#1024
  # DEBUG this => D#9
  MEM[(size_type *)&D.71180 + 8B] = prephitmp_314;
  # DEBUG D#1 => &D.71180
  # DEBUG this => D#1
  _586 = prephitmp_277 + prephitmp_314;
  # DEBUG __c1 => _586
  # DEBUG __c2 => D#10
  MEM[(char_type &)_586] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50639
  # DEBUG __str => &D.71180
  # DEBUG this => &D.50639
  # DEBUG __str => &D.71180
  std::__cxx11::basic_string<char>::_M_assign (&D.50639, &D.71180);

  <bb 180>:
  # DEBUG this => &D.71180
  # DEBUG this => &D.71180
  # DEBUG this => &D.71180
  _569 = MEM[(char * *)&D.71180];
  # DEBUG D#1 => &D.71180
  # DEBUG this => D#1
  # DEBUG this => &D.71180
  if (&D.71180.D.11553._M_local_buf != _569)
    goto <bb 181>;
  else
    goto <bb 182>;

  <bb 181>:
  # DEBUG D#165 => D.71180.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71180
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71180
  # DEBUG this => D#1
  # DEBUG this => &D.71180
  # DEBUG D#162 => &D.71180._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _569
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _569
  # DEBUG this => D#156
  # DEBUG D.71139 => D#157
  operator delete (_569);

  <bb 182>:
  # DEBUG D#166 => &D.71180._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71180 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 209>;

  <bb 183>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#352 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#5 => D#352
  # DEBUG this => D#5
  # DEBUG D#353 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _570 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#353
  # DEBUG this => D#6
  # DEBUG this => &D.71179
  # DEBUG __beg => _570
  # DEBUG __end => _567
  # DEBUG __a => NULL
  # DEBUG this => &D.71179
  # DEBUG D#347 => &D.71179._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.71179.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.71179]._M_p = &D.71179.D.11553._M_local_buf;
  # DEBUG this => &D.71179
  # DEBUG __beg => _570
  # DEBUG __end => _567
  # DEBUG this => &D.71179
  # DEBUG __beg => _570
  # DEBUG __end => _567
  # DEBUG this => &D.71179
  # DEBUG __beg => _570
  # DEBUG __end => _567
  # DEBUG __ptr => _570
  _1597 = _567 != 0B;
  _1605 = _570 == 0B;
  _1604 = _1597 & _1605;
  if (_1604 != 0)
    goto <bb 499>;
  else
    goto <bb 501>;

  <bb 184>:
  _592 = std::__cxx11::basic_string<char>::_M_create (&D.71179, &__dnew, 0);
  goto <bb 186>;

<L103>:
  goto <bb 205> (<L57>);

  <bb 186>:
  # DEBUG D#7 => &D.71179
  # DEBUG __p => _592
  # DEBUG this => D#7
  MEM[(char * *)&D.71179] = _592;
  __dnew.142_593 = __dnew;
  # DEBUG D#8 => &D.71179
  # DEBUG __capacity => __dnew.142_593
  # DEBUG this => D#8
  MEM[(size_type *)&D.71179 + 16B] = __dnew.142_593;
  # DEBUG D#1 => &D.71179
  # DEBUG this => D#1
  # DEBUG __p => _592
  # DEBUG __k1 => _570
  # DEBUG __k2 => _567
  # DEBUG __d => _592
  # DEBUG __s => _570
  # DEBUG __n => __dnew.141_591
  goto <bb 189>;

  <bb 187>:
  # DEBUG D#1 => &D.71179
  # DEBUG this => D#1
  # DEBUG __p => &D.71179.D.11553._M_local_buf
  # DEBUG __k1 => _570
  # DEBUG __k2 => _567
  # DEBUG __d => &D.71179.D.11553._M_local_buf
  # DEBUG __s => _570
  # DEBUG __n => __dnew.141_591
  if (__dnew.141_591 == 1)
    goto <bb 188>;
  else
    goto <bb 189>;

  <bb 188>:
  _595 = MEM[(const char_type &)_570];
  # DEBUG D#10 => _570
  # DEBUG __c1 => &D.71179.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.71179 + 16] = _595;
  goto <bb 190>;

  <bb 189>:
  # _1590 = PHI <&D.71179.D.11553._M_local_buf(187), _592(186)>
  # DEBUG D#1 => &D.71179
  # DEBUG this => D#1
  # DEBUG __p => _1590
  # DEBUG __k1 => _570
  # DEBUG __k2 => _567
  # DEBUG __d => _1590
  # DEBUG __s => _570
  # DEBUG __n => __dnew.141_591
  # DEBUG __s1 => _1590
  # DEBUG __s2 => _570
  # DEBUG __n => __dnew.141_591
  __builtin_memcpy (_1590, _570, __dnew.141_591);
  pretmp_587 = __dnew;
  pretmp_438 = MEM[(char * *)&D.71179];

  <bb 190>:
  # prephitmp_503 = PHI <__dnew.141_591(188), pretmp_587(189)>
  # prephitmp_351 = PHI <&D.71179.D.11553._M_local_buf(188), pretmp_438(189)>
  # DEBUG D#1025 => __dnew
  # DEBUG this => &D.71179
  # DEBUG __n => D#1025
  # DEBUG D#9 => &D.71179
  # DEBUG __length => D#1025
  # DEBUG this => D#9
  MEM[(size_type *)&D.71179 + 8B] = prephitmp_503;
  # DEBUG D#1 => &D.71179
  # DEBUG this => D#1
  _598 = prephitmp_351 + prephitmp_503;
  # DEBUG __c1 => _598
  # DEBUG __c2 => D#10
  MEM[(char_type &)_598] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50639
  # DEBUG __str => &D.71179
  # DEBUG this => &D.50639
  # DEBUG __str => &D.71179
  std::__cxx11::basic_string<char>::_M_assign (&D.50639, &D.71179);

  <bb 191>:
  # DEBUG this => &D.71179
  # DEBUG this => &D.71179
  # DEBUG this => &D.71179
  _571 = MEM[(char * *)&D.71179];
  # DEBUG D#1 => &D.71179
  # DEBUG this => D#1
  # DEBUG this => &D.71179
  if (&D.71179.D.11553._M_local_buf != _571)
    goto <bb 192>;
  else
    goto <bb 193>;

  <bb 192>:
  # DEBUG D#165 => D.71179.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71179
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71179
  # DEBUG this => D#1
  # DEBUG this => &D.71179
  # DEBUG D#162 => &D.71179._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _571
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _571
  # DEBUG this => D#156
  # DEBUG D.71102 => D#157
  operator delete (_571);

  <bb 193>:
  # DEBUG D#166 => &D.71179._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71179 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 209>;

  <bb 194>:
  # DEBUG this => &D.50639
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => &D.50639
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.50639, &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string);
  goto <bb 209>;

<L104>:
  goto <bb 205> (<L57>);

<L55>:
  # DEBUG this => &D.71180
  # DEBUG this => &D.71180
  # DEBUG this => &D.71180
  _573 = MEM[(char * *)&D.71180];
  # DEBUG D#1 => &D.71180
  # DEBUG this => D#1
  # DEBUG this => &D.71180
  if (&D.71180.D.11553._M_local_buf != _573)
    goto <bb 197>;
  else
    goto <bb 198>;

  <bb 197>:
  # DEBUG D#165 => D.71180.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71180
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71180
  # DEBUG this => D#1
  # DEBUG this => &D.71180
  # DEBUG D#162 => &D.71180._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _573
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _573
  # DEBUG this => D#156
  # DEBUG D.71083 => D#157
  operator delete (_573);

  <bb 198>:
  # DEBUG D#166 => &D.71180._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71180 ={v} {CLOBBER};
  resx 77

<L105>:
  goto <bb 205> (<L57>);

<L56>:
  # DEBUG this => &D.71179
  # DEBUG this => &D.71179
  # DEBUG this => &D.71179
  _574 = MEM[(char * *)&D.71179];
  # DEBUG D#1 => &D.71179
  # DEBUG this => D#1
  # DEBUG this => &D.71179
  if (&D.71179.D.11553._M_local_buf != _574)
    goto <bb 201>;
  else
    goto <bb 202>;

  <bb 201>:
  # DEBUG D#165 => D.71179.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71179
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71179
  # DEBUG this => D#1
  # DEBUG this => &D.71179
  # DEBUG D#162 => &D.71179._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _574
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _574
  # DEBUG this => D#156
  # DEBUG D.71067 => D#157
  operator delete (_574);

  <bb 202>:
  # DEBUG D#166 => &D.71179._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71179 ={v} {CLOBBER};
  resx 76

<L106>:
  goto <bb 205> (<L57>);

<L102>:

<L57>:
  # DEBUG this => &D.50639
  # DEBUG this => &D.50639
  # DEBUG this => &D.50639
  _575 = MEM[(char * *)&D.50639];
  # DEBUG D#1 => &D.50639
  # DEBUG this => D#1
  # DEBUG this => &D.50639
  if (&D.50639.D.11553._M_local_buf != _575)
    goto <bb 206>;
  else
    goto <bb 207>;

  <bb 206>:
  # DEBUG D#165 => D.50639.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50639
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50639
  # DEBUG this => D#1
  # DEBUG this => &D.50639
  # DEBUG D#162 => &D.50639._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _575
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _575
  # DEBUG this => D#156
  # DEBUG D.71056 => D#157
  operator delete (_575);

  <bb 207>:
  # DEBUG D#166 => &D.50639._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  resx 75

<L107>:
  goto <bb 462> (<L31>);

  <bb 209>:
  _95 = operator new (264);

  <bb 210>:
  _96 = this_17(D)->_classes;
  _97 = &this_17(D)->D.44919.D.33681;
  FlitChannel::FlitChannel (_95, _97, &D.50639, _96);

  <bb 211>:
  _99 = (long unsigned int) d_473;
  # DEBUG D#656 => &this_17(D)->_eject
  _201 = MEM[(struct FlitChannel * * *)this_17(D) + 184B];
  # DEBUG D#32 => D#656
  # DEBUG __n => _99
  # DEBUG this => D#32
  _220 = _99 * 8;
  _221 = _201 + _220;
  *_221 = _95;
  # DEBUG this => &D.50639
  # DEBUG this => &D.50639
  # DEBUG this => &D.50639
  _219 = MEM[(char * *)&D.50639];
  # DEBUG D#1 => &D.50639
  # DEBUG this => D#1
  # DEBUG this => &D.50639
  if (&D.50639.D.11553._M_local_buf != _219)
    goto <bb 212>;
  else
    goto <bb 213>;

  <bb 212>:
  # DEBUG D#165 => D.50639.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50639
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50639
  # DEBUG this => D#1
  # DEBUG this => &D.50639
  # DEBUG D#162 => &D.50639._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _219
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _219
  # DEBUG this => D#156
  # DEBUG D.66598 => D#157
  operator delete (_219);

  <bb 213>:
  # DEBUG D#166 => &D.50639._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50639 ={v} {CLOBBER};
  # DEBUG D#657 => &this_17(D)->_eject
  _202 = MEM[(struct FlitChannel * * *)this_17(D) + 184B];
  # DEBUG D#32 => D#657
  # DEBUG __n => _99
  # DEBUG this => D#32
  _218 = _202 + _220;
  _102 = *_218;
  FlitChannel::SetSink (_102, 0B, d_473);
  goto <bb 215>;

<L109>:
  goto <bb 462> (<L31>);

  <bb 215>:
  # DEBUG D#658 => &this_17(D)->_eject
  _203 = MEM[(struct FlitChannel * * *)this_17(D) + 184B];
  # DEBUG D#32 => D#658
  # DEBUG __n => _99
  # DEBUG this => D#32
  _222 = _203 + _220;
  _105 = *_222;
  D.50642 = _105;
  _107 = &this_17(D)->_timed_modules;
  # DEBUG this => _107
  # DEBUG __x => &D.50642
  _599 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;
  _600 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_last;
  _601 = _600 + 18446744073709551608;
  if (_599 != _601)
    goto <bb 216>;
  else
    goto <bb 219>;

  <bb 216>:
  # DEBUG D#523 => &_107->D.44805._M_impl
  # DEBUG D#87 => D#523
  # DEBUG __p => _599
  # DEBUG __arg => &D.50642
  # DEBUG __a => D#87
  # DEBUG D#86 => D#87
  # DEBUG D#85 => D#86
  # DEBUG __p => _599
  # DEBUG __val => &D.50642
  # DEBUG this => D#85
  # DEBUG D#11 => 8
  # DEBUG __p => _599
  # DEBUG D.60437 => D#11
  if (_599 != 0B)
    goto <bb 217>;
  else
    goto <bb 218>;

  <bb 217>:
  *_599 = _105;
  pretmp_736 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;

  <bb 218>:
  # prephitmp_652 = PHI <_599(216), pretmp_736(217)>
  _604 = prephitmp_652 + 8;
  MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur = _604;
  goto <bb 221>;

  <bb 219>:
  std::deque<TimedModule*>::_M_push_back_aux (_107, &D.50642);
  goto <bb 221>;

<L110>:
  goto <bb 462> (<L31>);

  <bb 221>:
  D.50642 ={v} {CLOBBER};
  # DEBUG D#70 => &D.50644
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#336 => &D.50644
  # DEBUG this => &D.50645
  # DEBUG __s => ""
  # DEBUG __a => D#336
  # DEBUG D#335 => D#336
  # DEBUG this => &D.50645
  # DEBUG D#333 => &D.50645._M_dataplus
  # DEBUG D#149 => D#335
  # DEBUG this => D#333
  # DEBUG __dat => &D.50645.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#333
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.50645]._M_p = &D.50645.D.11553._M_local_buf;
  # DEBUG __s => ""
  # DEBUG this => &D.50645
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.50645
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.50645
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG __ptr => ""
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG __dnew => 0
  # DEBUG D#1039 => MEM[(char * *)&D.50645]
  # DEBUG D#1 => &D.50645
  # DEBUG this => D#1
  # DEBUG __p => D#1039
  # DEBUG __k1 => ""
  # DEBUG __k2 => ""
  # DEBUG __d => D#1039
  # DEBUG __s => ""
  # DEBUG __n => 0
  # DEBUG __s1 => D#1039
  # DEBUG __s2 => ""
  # DEBUG __n => 0
  # DEBUG this => &D.50645
  # DEBUG __n => 0
  # DEBUG D#9 => &D.50645
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.50645 + 8B] = 0;
  # DEBUG D#1 => &D.50645
  # DEBUG this => D#1
  # DEBUG __c1 => &D.50645.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.50645 + 16] = 0;
  # DEBUG D#1015 => {CLOBBER}
  # DEBUG __dnew => D#1015
  # DEBUG this => &name
  # DEBUG __s => &D.50645
  # DEBUG this => &name._M_stringbuf
  # DEBUG __s => &D.50645
  # DEBUG D#2 => &D.50645
  # DEBUG this => D#2
  # DEBUG this => &D.50645
  # DEBUG D#1 => &D.50645
  # DEBUG this => D#1
  # DEBUG this => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG __s => &D.50645.D.11553._M_local_buf
  # DEBUG __n => 0
  _623 = MEM[(long unsigned int *)&name + 88B];
  # DEBUG D#2 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#2
  std::__cxx11::basic_string<char>::_M_replace (&MEM[(struct basic_stringbuf *)&name + 8B]._M_string, 0, _623, &D.50645.D.11553._M_local_buf, 0);

  <bb 222>:
  _624 = MEM[(struct basic_stringbuf *)&name + 8B]._M_mode;
  # DEBUG this => &name._M_stringbuf
  # DEBUG __mode => _624
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => _624
  # DEBUG __b => NULL
  __a.135_625 = (int) _624;
  _626 = __a.135_625 & 3;
  if (_626 != 0)
    goto <bb 223>;
  else
    goto <bb 224>;

  <bb 223>:
  # DEBUG D#12 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  __len_628 = MEM[(long unsigned int *)&name + 88B];
  # DEBUG D#2 => D#12
  # DEBUG this => D#2
  # DEBUG __len => __len_628

  <bb 224>:
  # __len_630 = PHI <0(222), __len_628(223)>
  # DEBUG __len => __len_630
  # DEBUG D#13 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#13
  _629 = MEM[(char * *)&name + 80B];
  # DEBUG D#1 => D#13
  # DEBUG this => D#1
  std::__cxx11::basic_stringbuf<char>::_M_sync (&name._M_stringbuf, _629, 0, __len_630);
  goto <bb 226>;

<L112>:
  goto <bb 450> (<L26>);

  <bb 226>:
  # DEBUG this => &D.50645
  # DEBUG this => &D.50645
  # DEBUG this => &D.50645
  _114 = MEM[(char * *)&D.50645];
  # DEBUG D#1 => &D.50645
  # DEBUG this => D#1
  # DEBUG this => &D.50645
  if (&D.50645.D.11553._M_local_buf != _114)
    goto <bb 227>;
  else
    goto <bb 228>;

  <bb 227>:
  # DEBUG D#165 => D.50645.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50645
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50645
  # DEBUG this => D#1
  # DEBUG this => &D.50645
  # DEBUG D#162 => &D.50645._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _114
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _114
  # DEBUG this => D#156
  # DEBUG D.66631 => D#157
  operator delete (_114);

  <bb 228>:
  # DEBUG D#166 => &D.50645._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50645 ={v} {CLOBBER};
  # DEBUG this => &D.50644
  # DEBUG this => &D.50644
  # DEBUG D#659 => &this_17(D)->D.44919.D.33681
  # DEBUG this => D#659
  # DEBUG __os => &name.D.23242
  # DEBUG __str => NULL
  _112 = MEM[(long unsigned int *)this_17(D) + 16B];
  # DEBUG this => D#2
  _223 = (long int) _112;
  # DEBUG this => NULL
  _224 = MEM[(char * *)this_17(D) + 8B];
  # DEBUG this => D#1
  _225 = std::__ostream_insert<char, std::char_traits<char> > (&name.D.23242, _224, _223);
  goto <bb 230>;

<L113>:
  goto <bb 462> (<L31>);

  <bb 230>:
  # DEBUG __out => _225
  # DEBUG __s => "_cchan_egress"
  # DEBUG __s => "_cchan_egress"
  std::__ostream_insert<char, std::char_traits<char> > (_225, "_cchan_egress", 13);
  goto <bb 232>;

<L114>:
  goto <bb 462> (<L31>);

  <bb 232>:
  std::basic_ostream<char>::operator<< (_225, d_473);
  goto <bb 234>;

<L115>:
  goto <bb 462> (<L31>);

  <bb 234>:
  # DEBUG this => &name
  # DEBUG this => &name._M_stringbuf
  # DEBUG this => &D.50646
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG this => &D.50646
  # DEBUG D#150 => &D.50646._M_dataplus
  # DEBUG this => D#150
  # DEBUG __dat => &D.50646.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#150
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.50646]._M_p = &D.50646.D.11553._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.50646
  # DEBUG __n => 0
  # DEBUG D#9 => &D.50646
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.50646 + 8B] = 0;
  # DEBUG D#1 => &D.50646
  # DEBUG this => D#1
  # DEBUG __c1 => &D.50646.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.50646 + 16] = 0;
  # DEBUG D#349 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _631 = MEM[(char_type * *)&name + 48B];
  # DEBUG D#4 => D#349
  # DEBUG this => D#4
  if (_631 != 0B)
    goto <bb 235>;
  else
    goto <bb 257>;

  <bb 235>:
  # DEBUG D#350 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#350
  # DEBUG this => D#4
  # DEBUG D#351 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _632 = MEM[(char_type * *)&name + 32B];
  # DEBUG D#5 => D#351
  # DEBUG this => D#5
  if (_631 > _632)
    goto <bb 236>;
  else
    goto <bb 246>;

  <bb 236>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#354 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#354
  # DEBUG this => D#4
  # DEBUG D#355 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _633 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#355
  # DEBUG this => D#6
  # DEBUG this => &D.71440
  # DEBUG __beg => _633
  # DEBUG __end => _631
  # DEBUG __a => NULL
  # DEBUG this => &D.71440
  # DEBUG D#347 => &D.71440._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.71440.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.71440]._M_p = &D.71440.D.11553._M_local_buf;
  # DEBUG this => &D.71440
  # DEBUG __beg => _633
  # DEBUG __end => _631
  # DEBUG this => &D.71440
  # DEBUG __beg => _633
  # DEBUG __end => _631
  # DEBUG this => &D.71440
  # DEBUG __beg => _633
  # DEBUG __end => _631
  # DEBUG __ptr => _633
  if (_633 == 0B)
    goto <bb 502>;
  else
    goto <bb 504>;

  <bb 237>:
  _645 = std::__cxx11::basic_string<char>::_M_create (&D.71440, &__dnew, 0);

  <bb 238>:
  # DEBUG D#7 => &D.71440
  # DEBUG __p => _645
  # DEBUG this => D#7
  MEM[(char * *)&D.71440] = _645;
  __dnew.142_646 = __dnew;
  # DEBUG D#8 => &D.71440
  # DEBUG __capacity => __dnew.142_646
  # DEBUG this => D#8
  MEM[(size_type *)&D.71440 + 16B] = __dnew.142_646;
  # DEBUG D#1 => &D.71440
  # DEBUG this => D#1
  # DEBUG __p => _645
  # DEBUG __k1 => _633
  # DEBUG __k2 => _631
  # DEBUG __d => _645
  # DEBUG __s => _633
  # DEBUG __n => __dnew.141_644
  goto <bb 241>;

  <bb 239>:
  # DEBUG D#1 => &D.71440
  # DEBUG this => D#1
  # DEBUG __p => &D.71440.D.11553._M_local_buf
  # DEBUG __k1 => _633
  # DEBUG __k2 => _631
  # DEBUG __d => &D.71440.D.11553._M_local_buf
  # DEBUG __s => _633
  # DEBUG __n => __dnew.141_644
  if (__dnew.141_644 == 1)
    goto <bb 240>;
  else
    goto <bb 241>;

  <bb 240>:
  _648 = MEM[(const char_type &)_633];
  # DEBUG D#10 => _633
  # DEBUG __c1 => &D.71440.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.71440 + 16] = _648;
  goto <bb 242>;

  <bb 241>:
  # _1592 = PHI <&D.71440.D.11553._M_local_buf(239), _645(238)>
  # DEBUG D#1 => &D.71440
  # DEBUG this => D#1
  # DEBUG __p => _1592
  # DEBUG __k1 => _633
  # DEBUG __k2 => _631
  # DEBUG __d => _1592
  # DEBUG __s => _633
  # DEBUG __n => __dnew.141_644
  # DEBUG __s1 => _1592
  # DEBUG __s2 => _633
  # DEBUG __n => __dnew.141_644
  __builtin_memcpy (_1592, _633, __dnew.141_644);
  pretmp_627 = __dnew;
  pretmp_776 = MEM[(char * *)&D.71440];

  <bb 242>:
  # prephitmp_758 = PHI <__dnew.141_644(240), pretmp_627(241)>
  # prephitmp_801 = PHI <&D.71440.D.11553._M_local_buf(240), pretmp_776(241)>
  # DEBUG D#1022 => __dnew
  # DEBUG this => &D.71440
  # DEBUG __n => D#1022
  # DEBUG D#9 => &D.71440
  # DEBUG __length => D#1022
  # DEBUG this => D#9
  MEM[(size_type *)&D.71440 + 8B] = prephitmp_758;
  # DEBUG D#1 => &D.71440
  # DEBUG this => D#1
  _651 = prephitmp_801 + prephitmp_758;
  # DEBUG __c1 => _651
  # DEBUG __c2 => D#10
  MEM[(char_type &)_651] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50646
  # DEBUG __str => &D.71440
  # DEBUG this => &D.50646
  # DEBUG __str => &D.71440
  std::__cxx11::basic_string<char>::_M_assign (&D.50646, &D.71440);

  <bb 243>:
  # DEBUG this => &D.71440
  # DEBUG this => &D.71440
  # DEBUG this => &D.71440
  _634 = MEM[(char * *)&D.71440];
  # DEBUG D#1 => &D.71440
  # DEBUG this => D#1
  # DEBUG this => &D.71440
  if (&D.71440.D.11553._M_local_buf != _634)
    goto <bb 244>;
  else
    goto <bb 245>;

  <bb 244>:
  # DEBUG D#165 => D.71440.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71440
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71440
  # DEBUG this => D#1
  # DEBUG this => &D.71440
  # DEBUG D#162 => &D.71440._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _634
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _634
  # DEBUG this => D#156
  # DEBUG D.71399 => D#157
  operator delete (_634);

  <bb 245>:
  # DEBUG D#166 => &D.71440._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71440 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 272>;

  <bb 246>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#352 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#5 => D#352
  # DEBUG this => D#5
  # DEBUG D#353 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _635 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#353
  # DEBUG this => D#6
  # DEBUG this => &D.71439
  # DEBUG __beg => _635
  # DEBUG __end => _632
  # DEBUG __a => NULL
  # DEBUG this => &D.71439
  # DEBUG D#347 => &D.71439._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.71439.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.71439]._M_p = &D.71439.D.11553._M_local_buf;
  # DEBUG this => &D.71439
  # DEBUG __beg => _635
  # DEBUG __end => _632
  # DEBUG this => &D.71439
  # DEBUG __beg => _635
  # DEBUG __end => _632
  # DEBUG this => &D.71439
  # DEBUG __beg => _635
  # DEBUG __end => _632
  # DEBUG __ptr => _635
  _1616 = _632 != 0B;
  _1606 = _635 == 0B;
  _1613 = _1606 & _1616;
  if (_1613 != 0)
    goto <bb 505>;
  else
    goto <bb 507>;

  <bb 247>:
  _657 = std::__cxx11::basic_string<char>::_M_create (&D.71439, &__dnew, 0);
  goto <bb 249>;

<L117>:
  goto <bb 268> (<L60>);

  <bb 249>:
  # DEBUG D#7 => &D.71439
  # DEBUG __p => _657
  # DEBUG this => D#7
  MEM[(char * *)&D.71439] = _657;
  __dnew.142_658 = __dnew;
  # DEBUG D#8 => &D.71439
  # DEBUG __capacity => __dnew.142_658
  # DEBUG this => D#8
  MEM[(size_type *)&D.71439 + 16B] = __dnew.142_658;
  # DEBUG D#1 => &D.71439
  # DEBUG this => D#1
  # DEBUG __p => _657
  # DEBUG __k1 => _635
  # DEBUG __k2 => _632
  # DEBUG __d => _657
  # DEBUG __s => _635
  # DEBUG __n => __dnew.141_656
  goto <bb 252>;

  <bb 250>:
  # DEBUG D#1 => &D.71439
  # DEBUG this => D#1
  # DEBUG __p => &D.71439.D.11553._M_local_buf
  # DEBUG __k1 => _635
  # DEBUG __k2 => _632
  # DEBUG __d => &D.71439.D.11553._M_local_buf
  # DEBUG __s => _635
  # DEBUG __n => __dnew.141_656
  if (__dnew.141_656 == 1)
    goto <bb 251>;
  else
    goto <bb 252>;

  <bb 251>:
  _660 = MEM[(const char_type &)_635];
  # DEBUG D#10 => _635
  # DEBUG __c1 => &D.71439.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.71439 + 16] = _660;
  goto <bb 253>;

  <bb 252>:
  # _1593 = PHI <&D.71439.D.11553._M_local_buf(250), _657(249)>
  # DEBUG D#1 => &D.71439
  # DEBUG this => D#1
  # DEBUG __p => _1593
  # DEBUG __k1 => _635
  # DEBUG __k2 => _632
  # DEBUG __d => _1593
  # DEBUG __s => _635
  # DEBUG __n => __dnew.141_656
  # DEBUG __s1 => _1593
  # DEBUG __s2 => _635
  # DEBUG __n => __dnew.141_656
  __builtin_memcpy (_1593, _635, __dnew.141_656);
  pretmp_1388 = __dnew;
  pretmp_478 = MEM[(char * *)&D.71439];

  <bb 253>:
  # prephitmp_460 = PHI <__dnew.141_656(251), pretmp_1388(252)>
  # prephitmp_609 = PHI <&D.71439.D.11553._M_local_buf(251), pretmp_478(252)>
  # DEBUG D#1023 => __dnew
  # DEBUG this => &D.71439
  # DEBUG __n => D#1023
  # DEBUG D#9 => &D.71439
  # DEBUG __length => D#1023
  # DEBUG this => D#9
  MEM[(size_type *)&D.71439 + 8B] = prephitmp_460;
  # DEBUG D#1 => &D.71439
  # DEBUG this => D#1
  _663 = prephitmp_609 + prephitmp_460;
  # DEBUG __c1 => _663
  # DEBUG __c2 => D#10
  MEM[(char_type &)_663] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50646
  # DEBUG __str => &D.71439
  # DEBUG this => &D.50646
  # DEBUG __str => &D.71439
  std::__cxx11::basic_string<char>::_M_assign (&D.50646, &D.71439);

  <bb 254>:
  # DEBUG this => &D.71439
  # DEBUG this => &D.71439
  # DEBUG this => &D.71439
  _636 = MEM[(char * *)&D.71439];
  # DEBUG D#1 => &D.71439
  # DEBUG this => D#1
  # DEBUG this => &D.71439
  if (&D.71439.D.11553._M_local_buf != _636)
    goto <bb 255>;
  else
    goto <bb 256>;

  <bb 255>:
  # DEBUG D#165 => D.71439.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71439
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71439
  # DEBUG this => D#1
  # DEBUG this => &D.71439
  # DEBUG D#162 => &D.71439._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _636
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _636
  # DEBUG this => D#156
  # DEBUG D.71362 => D#157
  operator delete (_636);

  <bb 256>:
  # DEBUG D#166 => &D.71439._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71439 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 272>;

  <bb 257>:
  # DEBUG this => &D.50646
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => &D.50646
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.50646, &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string);
  goto <bb 272>;

<L118>:
  goto <bb 268> (<L60>);

<L58>:
  # DEBUG this => &D.71440
  # DEBUG this => &D.71440
  # DEBUG this => &D.71440
  _638 = MEM[(char * *)&D.71440];
  # DEBUG D#1 => &D.71440
  # DEBUG this => D#1
  # DEBUG this => &D.71440
  if (&D.71440.D.11553._M_local_buf != _638)
    goto <bb 260>;
  else
    goto <bb 261>;

  <bb 260>:
  # DEBUG D#165 => D.71440.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71440
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71440
  # DEBUG this => D#1
  # DEBUG this => &D.71440
  # DEBUG D#162 => &D.71440._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _638
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _638
  # DEBUG this => D#156
  # DEBUG D.71343 => D#157
  operator delete (_638);

  <bb 261>:
  # DEBUG D#166 => &D.71440._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71440 ={v} {CLOBBER};
  resx 80

<L119>:
  goto <bb 268> (<L60>);

<L59>:
  # DEBUG this => &D.71439
  # DEBUG this => &D.71439
  # DEBUG this => &D.71439
  _639 = MEM[(char * *)&D.71439];
  # DEBUG D#1 => &D.71439
  # DEBUG this => D#1
  # DEBUG this => &D.71439
  if (&D.71439.D.11553._M_local_buf != _639)
    goto <bb 264>;
  else
    goto <bb 265>;

  <bb 264>:
  # DEBUG D#165 => D.71439.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71439
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71439
  # DEBUG this => D#1
  # DEBUG this => &D.71439
  # DEBUG D#162 => &D.71439._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _639
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _639
  # DEBUG this => D#156
  # DEBUG D.71327 => D#157
  operator delete (_639);

  <bb 265>:
  # DEBUG D#166 => &D.71439._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71439 ={v} {CLOBBER};
  resx 79

<L120>:
  goto <bb 268> (<L60>);

<L116>:

<L60>:
  # DEBUG this => &D.50646
  # DEBUG this => &D.50646
  # DEBUG this => &D.50646
  _640 = MEM[(char * *)&D.50646];
  # DEBUG D#1 => &D.50646
  # DEBUG this => D#1
  # DEBUG this => &D.50646
  if (&D.50646.D.11553._M_local_buf != _640)
    goto <bb 269>;
  else
    goto <bb 270>;

  <bb 269>:
  # DEBUG D#165 => D.50646.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50646
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50646
  # DEBUG this => D#1
  # DEBUG this => &D.50646
  # DEBUG D#162 => &D.50646._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _640
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _640
  # DEBUG this => D#156
  # DEBUG D.71316 => D#157
  operator delete (_640);

  <bb 270>:
  # DEBUG D#166 => &D.50646._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  resx 78

<L121>:
  goto <bb 462> (<L31>);

  <bb 272>:
  _117 = operator new (200);

  <bb 273>:
  Channel<Credit>::Channel (_117, _97, &D.50646);

  <bb 274>:
  # DEBUG D#660 => &this_17(D)->_eject_cred
  _208 = MEM[(struct Channel * * *)this_17(D) + 208B];
  # DEBUG D#45 => D#660
  # DEBUG __n => _99
  # DEBUG this => D#45
  _228 = _208 + _220;
  *_228 = _117;
  # DEBUG this => &D.50646
  # DEBUG this => &D.50646
  # DEBUG this => &D.50646
  _227 = MEM[(char * *)&D.50646];
  # DEBUG D#1 => &D.50646
  # DEBUG this => D#1
  # DEBUG this => &D.50646
  if (&D.50646.D.11553._M_local_buf != _227)
    goto <bb 275>;
  else
    goto <bb 276>;

  <bb 275>:
  # DEBUG D#165 => D.50646.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50646
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50646
  # DEBUG this => D#1
  # DEBUG this => &D.50646
  # DEBUG D#162 => &D.50646._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _227
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _227
  # DEBUG this => D#156
  # DEBUG D.66655 => D#157
  operator delete (_227);

  <bb 276>:
  # DEBUG D#166 => &D.50646._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50646 ={v} {CLOBBER};
  # DEBUG D#661 => &this_17(D)->_eject_cred
  _209 = MEM[(struct Channel * * *)this_17(D) + 208B];
  # DEBUG D#45 => D#661
  # DEBUG __n => _99
  # DEBUG this => D#45
  _226 = _209 + _220;
  _123 = *_226;
  D.50649 = _123;
  # DEBUG this => _107
  # DEBUG __x => &D.50649
  _664 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;
  _665 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_last;
  _666 = _665 + 18446744073709551608;
  if (_664 != _666)
    goto <bb 277>;
  else
    goto <bb 280>;

  <bb 277>:
  # DEBUG D#523 => &_107->D.44805._M_impl
  # DEBUG D#87 => D#523
  # DEBUG __p => _664
  # DEBUG __arg => &D.50649
  # DEBUG __a => D#87
  # DEBUG D#86 => D#87
  # DEBUG D#85 => D#86
  # DEBUG __p => _664
  # DEBUG __val => &D.50649
  # DEBUG this => D#85
  # DEBUG D#11 => 8
  # DEBUG __p => _664
  # DEBUG D.60437 => D#11
  if (_664 != 0B)
    goto <bb 278>;
  else
    goto <bb 279>;

  <bb 278>:
  *_664 = _123;
  pretmp_756 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;

  <bb 279>:
  # prephitmp_608 = PHI <_664(277), pretmp_756(278)>
  _669 = prephitmp_608 + 8;
  MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur = _669;
  goto <bb 282>;

  <bb 280>:
  std::deque<TimedModule*>::_M_push_back_aux (_107, &D.50649);
  goto <bb 282>;

<L123>:
  goto <bb 462> (<L31>);

  <bb 282>:
  D.50649 ={v} {CLOBBER};
  # DEBUG this => &name
  name.D.23242._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &name._M_stringbuf
  MEM[(struct basic_stringbuf *)&name + 8B].D.23092._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#168 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#168
  # DEBUG this => D#168
  # DEBUG this => D#168
  _127 = MEM[(char * *)&name + 80B];
  # DEBUG D#1 => D#168
  # DEBUG this => D#1
  # DEBUG this => D#168
  if (&MEM[(const struct basic_string *)&name + 80B].D.11553._M_local_buf != _127)
    goto <bb 283>;
  else
    goto <bb 284>;

  <bb 283>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#168].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#168
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#168
  # DEBUG this => D#1
  # DEBUG this => D#168
  # DEBUG D#162 => &MEM[(struct basic_string *)D#168]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _127
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _127
  # DEBUG this => D#156
  # DEBUG D.71523 => D#157
  operator delete (_127);

  <bb 284>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#168]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)&name + 80] ={v} {CLOBBER};
  # DEBUG D#167 => &MEM[(struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG this => D#167
  MEM[(struct basic_streambuf *)&name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&name + 8B]._M_buf_locale);
  MEM[(struct  &)&name + 8] ={v} {CLOBBER};
  # DEBUG this => &name.D.23242
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.131_671 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  _672 = MEM[(long int *)iftmp.131_671 + -24B];
  iftmp.132_673 = (sizetype) _672;
  _674 = &name.D.23242 + iftmp.132_673;
  iftmp.133_675 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _674->D.19935._vptr.ios_base = iftmp.133_675;
  MEM[(struct  &)&name] ={v} {CLOBBER};
  # DEBUG D#172 => &name.D.23245
  # DEBUG this => D#172
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&name + 112B].D.19935);
  name ={v} {CLOBBER};
  d_129 = d_473 + 1;
  # DEBUG d => d_129
  # DEBUG d => d_129
  gNodes.76_90 = this_17(D)->_nodes;
  if (gNodes.76_90 <= d_129)
    goto <bb 155>;
  else
    goto <bb 285>;

  <bb 285>:
  goto <bb 159>;

  <bb 286>:
  # DEBUG D#72 => D#1032
  # DEBUG D#72 => D#1032
  # DEBUG this => D#72
  # DEBUG this => D#72
  _695 = _142 - _694;
  # DEBUG this => D#1032
  # DEBUG D#83 => &D#1032->D.41359._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#83
  # DEBUG this => D#1032
  MEM[(struct __normal_iterator *)&__position] = _689;
  # DEBUG __n => _695
  # DEBUG __x => &__x
  _143 = &this_17(D)->_chan;
  std::vector<FlitChannel*>::_M_fill_insert (_143, __position, _695, &__x);
  pretmp_1062 = this_17(D)->_channels;
  pretmp_1064 = (long unsigned int) pretmp_1062;
  goto <bb 289>;

  <bb 287>:
  # DEBUG D#72 => D#1032
  # DEBUG D#72 => D#1032
  # DEBUG this => D#72
  # DEBUG this => D#72
  if (_142 < _694)
    goto <bb 288>;
  else
    goto <bb 289>;

  <bb 288>:
  _696 = _142 * 8;
  _697 = _148 + _696;
  # DEBUG D#133 => D#1032
  # DEBUG __pos => _697
  # DEBUG D#132 => D#133
  # DEBUG this => D#132
  # DEBUG D#130 => &D#132->D.41359
  # DEBUG this => D#130
  # DEBUG D#131 => D#132->D.41359._M_impl._M_finish
  # DEBUG __first => _697
  # DEBUG __last => D#131
  # DEBUG D.60664 => NULL
  # DEBUG D#128 => _697
  # DEBUG D#129 => D#131
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D#127 => D#129
  # DEBUG D#126 => D#128
  # DEBUG D#124 => D#126
  # DEBUG D#125 => D#127
  # DEBUG D.60648 => D#124
  # DEBUG D.60647 => D#125
  MEM[(struct FlitChannel * * *)this_17(D) + 240B] = _697;

  <bb 289>:
  # prephitmp_1063 = PHI <_141(287), pretmp_1062(286), _141(288)>
  # prephitmp_1065 = PHI <_142(287), pretmp_1064(286), _142(288)>
  # DEBUG D#1021 => this_17(D)->_channels
  # DEBUG D#1031 => &this_17(D)->_chan_cred
  # DEBUG this => D#1031
  # DEBUG __new_size => (long unsigned int) D#1021
  __x = 0B;
  # DEBUG __x => __x
  _679 = MEM[(struct Channel * * *)this_17(D) + 256B];
  # DEBUG D#73 => D#1031
  _680 = MEM[(struct Channel * * *)this_17(D) + 264B];
  # DEBUG D#73 => D#1031
  # DEBUG this => D#73
  # DEBUG this => D#73
  _681 = (long int) _680;
  _682 = (long int) _679;
  _683 = _681 - _682;
  _684 = _683 /[ex] 8;
  _685 = (size_type) _684;
  if (_685 < prephitmp_1065)
    goto <bb 290>;
  else
    goto <bb 293>;

  <bb 290>:
  # DEBUG D#73 => D#1031
  # DEBUG D#73 => D#1031
  # DEBUG this => D#73
  # DEBUG this => D#73
  _686 = prephitmp_1065 - _685;
  # DEBUG this => D#1031
  # DEBUG D#84 => &D#1031->D.42106._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#84
  # DEBUG this => D#1031
  MEM[(struct __normal_iterator *)&__position] = _680;
  # DEBUG __n => _686
  # DEBUG __x => &__x
  _147 = &this_17(D)->_chan_cred;
  std::vector<Channel<Credit>*>::_M_fill_insert (_147, __position, _686, &__x);
  pretmp_272 = this_17(D)->_channels;

  <bb 291>:
  # prephitmp_273 = PHI <prephitmp_1063(294), pretmp_272(290), prephitmp_1063(293)>
  # DEBUG c => 0
  if (prephitmp_273 <= 0)
    goto <bb 292>;
  else
    goto <bb 295>;

  <bb 292>:
  return;

  <bb 293>:
  # DEBUG D#73 => D#1031
  # DEBUG D#73 => D#1031
  # DEBUG this => D#73
  # DEBUG this => D#73
  if (_685 > prephitmp_1065)
    goto <bb 294>;
  else
    goto <bb 291>;

  <bb 294>:
  _687 = prephitmp_1065 * 8;
  _688 = _679 + _687;
  # DEBUG D#143 => D#1031
  # DEBUG __pos => _688
  # DEBUG D#142 => D#143
  # DEBUG this => D#142
  # DEBUG D#140 => &D#142->D.42106
  # DEBUG this => D#140
  # DEBUG D#141 => D#142->D.42106._M_impl._M_finish
  # DEBUG __first => _688
  # DEBUG __last => D#141
  # DEBUG D.60708 => NULL
  # DEBUG D#138 => _688
  # DEBUG D#139 => D#141
  # DEBUG __first => D#138
  # DEBUG __last => D#139
  # DEBUG D#137 => D#139
  # DEBUG D#136 => D#138
  # DEBUG D#134 => D#136
  # DEBUG D#135 => D#137
  # DEBUG D.60692 => D#134
  # DEBUG D.60691 => D#135
  MEM[(struct Channel * * *)this_17(D) + 264B] = _688;
  goto <bb 291>;

  <bb 295>:
  pretmp_274 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_266 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 296>:
  # c_558 = PHI <0(295), c_185(420)>
  # prephitmp_265 = PHI <pretmp_274(295), iftmp.131_820(420)>
  # prephitmp_267 = PHI <pretmp_266(295), iftmp.133_824(420)>
  # DEBUG c => c_558
  # DEBUG this => &name
  # DEBUG __mode => 16
  # DEBUG D#171 => &name.D.23245
  # DEBUG this => D#171
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&name + 112B].D.19935);
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_num_get = 0B;
  # DEBUG this => &name.D.23242
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&name]._vptr.basic_ostream = prephitmp_265;
  _700 = MEM[(long int *)prephitmp_265 + -24B];
  iftmp.126_701 = (sizetype) _700;
  _702 = &name.D.23242 + iftmp.126_701;
  _702->D.19935._vptr.ios_base = prephitmp_267;
  std::basic_ios<char>::init (_702, 0B);

  <bb 297>:
  name.D.23242._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#169 => &name._M_stringbuf
  # DEBUG this => D#169
  # DEBUG __mode => NULL
  # DEBUG D#152 => &MEM[(struct basic_stringbuf *)D#169].D.23092
  # DEBUG this => D#152
  MEM[(struct basic_streambuf *)&name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&name + 8B].D.23092._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&name + 8B]._M_mode = 16;
  # DEBUG D#151 => &MEM[(struct basic_stringbuf *)D#169]._M_string
  # DEBUG this => D#151
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG this => D#151
  # DEBUG D#150 => &MEM[(struct basic_string *)D#151]._M_dataplus
  # DEBUG this => D#150
  # DEBUG __dat => &MEM[(struct basic_string *)&name + 80B].D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#150
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&name + 80B]._M_p = &MEM[(struct basic_string *)&name + 80B].D.11553._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#151
  # DEBUG __n => 0
  # DEBUG D#9 => D#151
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&name + 88B] = 0;
  # DEBUG D#1 => D#151
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(struct basic_string *)&name + 80B].D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&name + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&name + 112B], &name._M_stringbuf.D.23092);
  goto <bb 303>;

  # prephitmp_1617 = PHI <prephitmp_265(297)>
  # prephitmp_1615 = PHI <prephitmp_267(297)>
<L61>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&name._M_stringbuf);
  resx 83

<L62>:
  # DEBUG this => &name.D.23242
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _712 = MEM[(long int *)prephitmp_1617 + -24B];
  iftmp.132_713 = (sizetype) _712;
  _714 = &name.D.23242 + iftmp.132_713;
  _714->D.19935._vptr.ios_base = prephitmp_1615;
  MEM[(struct  &)&name] ={v} {CLOBBER};
  resx 82

<L125>:
  goto <bb 302> (<L63>);

<L124>:

<L63>:
  # DEBUG D#170 => &name.D.23245
  # DEBUG this => D#170
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&name + 112B].D.19935);
  resx 81

  <bb 303>:
  # DEBUG D#662 => &this_17(D)->D.44919.D.33681
  # DEBUG this => D#662
  # DEBUG __os => &name.D.23242
  # DEBUG __str => NULL
  _229 = MEM[(long unsigned int *)this_17(D) + 16B];
  # DEBUG this => D#2
  _230 = (long int) _229;
  # DEBUG this => NULL
  _231 = MEM[(char * *)this_17(D) + 8B];
  # DEBUG this => D#1
  _232 = std::__ostream_insert<char, std::char_traits<char> > (&name.D.23242, _231, _230);

  <bb 304>:
  # DEBUG __out => _232
  # DEBUG __s => "_fchan_"
  # DEBUG __s => "_fchan_"
  std::__ostream_insert<char, std::char_traits<char> > (_232, "_fchan_", 7);
  goto <bb 306>;

<L127>:
  goto <bb 483> (<L41>);

  <bb 306>:
  std::basic_ostream<char>::operator<< (_232, c_558);
  goto <bb 308>;

<L128>:
  goto <bb 483> (<L41>);

  <bb 308>:
  # DEBUG this => &name
  # DEBUG this => &name._M_stringbuf
  # DEBUG this => &D.50652
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG this => &D.50652
  # DEBUG D#150 => &D.50652._M_dataplus
  # DEBUG this => D#150
  # DEBUG __dat => &D.50652.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#150
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.50652]._M_p = &D.50652.D.11553._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.50652
  # DEBUG __n => 0
  # DEBUG D#9 => &D.50652
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.50652 + 8B] = 0;
  # DEBUG D#1 => &D.50652
  # DEBUG this => D#1
  # DEBUG __c1 => &D.50652.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.50652 + 16] = 0;
  # DEBUG D#349 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _715 = MEM[(char_type * *)&name + 48B];
  # DEBUG D#4 => D#349
  # DEBUG this => D#4
  if (_715 != 0B)
    goto <bb 309>;
  else
    goto <bb 331>;

  <bb 309>:
  # DEBUG D#350 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#350
  # DEBUG this => D#4
  # DEBUG D#351 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _716 = MEM[(char_type * *)&name + 32B];
  # DEBUG D#5 => D#351
  # DEBUG this => D#5
  if (_715 > _716)
    goto <bb 310>;
  else
    goto <bb 320>;

  <bb 310>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#354 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#354
  # DEBUG this => D#4
  # DEBUG D#355 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _717 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#355
  # DEBUG this => D#6
  # DEBUG this => &D.71715
  # DEBUG __beg => _717
  # DEBUG __end => _715
  # DEBUG __a => NULL
  # DEBUG this => &D.71715
  # DEBUG D#347 => &D.71715._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.71715.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.71715]._M_p = &D.71715.D.11553._M_local_buf;
  # DEBUG this => &D.71715
  # DEBUG __beg => _717
  # DEBUG __end => _715
  # DEBUG this => &D.71715
  # DEBUG __beg => _717
  # DEBUG __end => _715
  # DEBUG this => &D.71715
  # DEBUG __beg => _717
  # DEBUG __end => _715
  # DEBUG __ptr => _717
  if (_717 == 0B)
    goto <bb 509>;
  else
    goto <bb 508>;

  <bb 311>:
  _729 = std::__cxx11::basic_string<char>::_M_create (&D.71715, &__dnew, 0);

  <bb 312>:
  # DEBUG D#7 => &D.71715
  # DEBUG __p => _729
  # DEBUG this => D#7
  MEM[(char * *)&D.71715] = _729;
  __dnew.142_730 = __dnew;
  # DEBUG D#8 => &D.71715
  # DEBUG __capacity => __dnew.142_730
  # DEBUG this => D#8
  MEM[(size_type *)&D.71715 + 16B] = __dnew.142_730;
  # DEBUG D#1 => &D.71715
  # DEBUG this => D#1
  # DEBUG __p => _729
  # DEBUG __k1 => _717
  # DEBUG __k2 => _715
  # DEBUG __d => _729
  # DEBUG __s => _717
  # DEBUG __n => __dnew.141_728
  goto <bb 315>;

  <bb 313>:
  # DEBUG D#1 => &D.71715
  # DEBUG this => D#1
  # DEBUG __p => &D.71715.D.11553._M_local_buf
  # DEBUG __k1 => _717
  # DEBUG __k2 => _715
  # DEBUG __d => &D.71715.D.11553._M_local_buf
  # DEBUG __s => _717
  # DEBUG __n => __dnew.141_728
  if (__dnew.141_728 == 1)
    goto <bb 314>;
  else
    goto <bb 315>;

  <bb 314>:
  _732 = MEM[(const char_type &)_717];
  # DEBUG D#10 => _717
  # DEBUG __c1 => &D.71715.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.71715 + 16] = _732;
  goto <bb 316>;

  <bb 315>:
  # _1584 = PHI <&D.71715.D.11553._M_local_buf(313), _729(312)>
  # DEBUG D#1 => &D.71715
  # DEBUG this => D#1
  # DEBUG __p => _1584
  # DEBUG __k1 => _717
  # DEBUG __k2 => _715
  # DEBUG __d => _1584
  # DEBUG __s => _717
  # DEBUG __n => __dnew.141_728
  # DEBUG __s1 => _1584
  # DEBUG __s2 => _717
  # DEBUG __n => __dnew.141_728
  __builtin_memcpy (_1584, _717, __dnew.141_728);
  pretmp_4 = __dnew;
  pretmp_408 = MEM[(char * *)&D.71715];

  <bb 316>:
  # prephitmp_1 = PHI <__dnew.141_728(314), pretmp_4(315)>
  # prephitmp_108 = PHI <&D.71715.D.11553._M_local_buf(314), pretmp_408(315)>
  # DEBUG D#1019 => __dnew
  # DEBUG this => &D.71715
  # DEBUG __n => D#1019
  # DEBUG D#9 => &D.71715
  # DEBUG __length => D#1019
  # DEBUG this => D#9
  MEM[(size_type *)&D.71715 + 8B] = prephitmp_1;
  # DEBUG D#1 => &D.71715
  # DEBUG this => D#1
  _735 = prephitmp_108 + prephitmp_1;
  # DEBUG __c1 => _735
  # DEBUG __c2 => D#10
  MEM[(char_type &)_735] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50652
  # DEBUG __str => &D.71715
  # DEBUG this => &D.50652
  # DEBUG __str => &D.71715
  std::__cxx11::basic_string<char>::_M_assign (&D.50652, &D.71715);

  <bb 317>:
  # DEBUG this => &D.71715
  # DEBUG this => &D.71715
  # DEBUG this => &D.71715
  _718 = MEM[(char * *)&D.71715];
  # DEBUG D#1 => &D.71715
  # DEBUG this => D#1
  # DEBUG this => &D.71715
  if (&D.71715.D.11553._M_local_buf != _718)
    goto <bb 318>;
  else
    goto <bb 319>;

  <bb 318>:
  # DEBUG D#165 => D.71715.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71715
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71715
  # DEBUG this => D#1
  # DEBUG this => &D.71715
  # DEBUG D#162 => &D.71715._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _718
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _718
  # DEBUG this => D#156
  # DEBUG D.71674 => D#157
  operator delete (_718);

  <bb 319>:
  # DEBUG D#166 => &D.71715._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71715 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 346>;

  <bb 320>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#352 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#5 => D#352
  # DEBUG this => D#5
  # DEBUG D#353 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _719 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#353
  # DEBUG this => D#6
  # DEBUG this => &D.71714
  # DEBUG __beg => _719
  # DEBUG __end => _716
  # DEBUG __a => NULL
  # DEBUG this => &D.71714
  # DEBUG D#347 => &D.71714._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.71714.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.71714]._M_p = &D.71714.D.11553._M_local_buf;
  # DEBUG this => &D.71714
  # DEBUG __beg => _719
  # DEBUG __end => _716
  # DEBUG this => &D.71714
  # DEBUG __beg => _719
  # DEBUG __end => _716
  # DEBUG this => &D.71714
  # DEBUG __beg => _719
  # DEBUG __end => _716
  # DEBUG __ptr => _719
  _1626 = _716 != 0B;
  _1612 = _719 == 0B;
  _1621 = _1612 & _1626;
  if (_1621 != 0)
    goto <bb 511>;
  else
    goto <bb 513>;

  <bb 321>:
  _741 = std::__cxx11::basic_string<char>::_M_create (&D.71714, &__dnew, 0);
  goto <bb 323>;

<L130>:
  goto <bb 342> (<L66>);

  <bb 323>:
  # DEBUG D#7 => &D.71714
  # DEBUG __p => _741
  # DEBUG this => D#7
  MEM[(char * *)&D.71714] = _741;
  __dnew.142_742 = __dnew;
  # DEBUG D#8 => &D.71714
  # DEBUG __capacity => __dnew.142_742
  # DEBUG this => D#8
  MEM[(size_type *)&D.71714 + 16B] = __dnew.142_742;
  # DEBUG D#1 => &D.71714
  # DEBUG this => D#1
  # DEBUG __p => _741
  # DEBUG __k1 => _719
  # DEBUG __k2 => _716
  # DEBUG __d => _741
  # DEBUG __s => _719
  # DEBUG __n => __dnew.141_740
  goto <bb 326>;

  <bb 324>:
  # DEBUG D#1 => &D.71714
  # DEBUG this => D#1
  # DEBUG __p => &D.71714.D.11553._M_local_buf
  # DEBUG __k1 => _719
  # DEBUG __k2 => _716
  # DEBUG __d => &D.71714.D.11553._M_local_buf
  # DEBUG __s => _719
  # DEBUG __n => __dnew.141_740
  if (__dnew.141_740 == 1)
    goto <bb 325>;
  else
    goto <bb 326>;

  <bb 325>:
  _744 = MEM[(const char_type &)_719];
  # DEBUG D#10 => _719
  # DEBUG __c1 => &D.71714.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.71714 + 16] = _744;
  goto <bb 327>;

  <bb 326>:
  # _1589 = PHI <&D.71714.D.11553._M_local_buf(324), _741(323)>
  # DEBUG D#1 => &D.71714
  # DEBUG this => D#1
  # DEBUG __p => _1589
  # DEBUG __k1 => _719
  # DEBUG __k2 => _716
  # DEBUG __d => _1589
  # DEBUG __s => _719
  # DEBUG __n => __dnew.141_740
  # DEBUG __s1 => _1589
  # DEBUG __s2 => _719
  # DEBUG __n => __dnew.141_740
  __builtin_memcpy (_1589, _719, __dnew.141_740);
  pretmp_2 = __dnew;
  pretmp_1632 = MEM[(char * *)&D.71714];

  <bb 327>:
  # prephitmp_5 = PHI <__dnew.141_740(325), pretmp_2(326)>
  # prephitmp_572 = PHI <&D.71714.D.11553._M_local_buf(325), pretmp_1632(326)>
  # DEBUG D#1020 => __dnew
  # DEBUG this => &D.71714
  # DEBUG __n => D#1020
  # DEBUG D#9 => &D.71714
  # DEBUG __length => D#1020
  # DEBUG this => D#9
  MEM[(size_type *)&D.71714 + 8B] = prephitmp_5;
  # DEBUG D#1 => &D.71714
  # DEBUG this => D#1
  _747 = prephitmp_572 + prephitmp_5;
  # DEBUG __c1 => _747
  # DEBUG __c2 => D#10
  MEM[(char_type &)_747] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50652
  # DEBUG __str => &D.71714
  # DEBUG this => &D.50652
  # DEBUG __str => &D.71714
  std::__cxx11::basic_string<char>::_M_assign (&D.50652, &D.71714);

  <bb 328>:
  # DEBUG this => &D.71714
  # DEBUG this => &D.71714
  # DEBUG this => &D.71714
  _720 = MEM[(char * *)&D.71714];
  # DEBUG D#1 => &D.71714
  # DEBUG this => D#1
  # DEBUG this => &D.71714
  if (&D.71714.D.11553._M_local_buf != _720)
    goto <bb 329>;
  else
    goto <bb 330>;

  <bb 329>:
  # DEBUG D#165 => D.71714.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71714
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71714
  # DEBUG this => D#1
  # DEBUG this => &D.71714
  # DEBUG D#162 => &D.71714._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _720
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _720
  # DEBUG this => D#156
  # DEBUG D.71637 => D#157
  operator delete (_720);

  <bb 330>:
  # DEBUG D#166 => &D.71714._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71714 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 346>;

  <bb 331>:
  # DEBUG this => &D.50652
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => &D.50652
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.50652, &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string);
  goto <bb 346>;

<L131>:
  goto <bb 342> (<L66>);

<L64>:
  # DEBUG this => &D.71715
  # DEBUG this => &D.71715
  # DEBUG this => &D.71715
  _722 = MEM[(char * *)&D.71715];
  # DEBUG D#1 => &D.71715
  # DEBUG this => D#1
  # DEBUG this => &D.71715
  if (&D.71715.D.11553._M_local_buf != _722)
    goto <bb 334>;
  else
    goto <bb 335>;

  <bb 334>:
  # DEBUG D#165 => D.71715.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71715
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71715
  # DEBUG this => D#1
  # DEBUG this => &D.71715
  # DEBUG D#162 => &D.71715._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _722
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _722
  # DEBUG this => D#156
  # DEBUG D.71618 => D#157
  operator delete (_722);

  <bb 335>:
  # DEBUG D#166 => &D.71715._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71715 ={v} {CLOBBER};
  resx 87

<L132>:
  goto <bb 342> (<L66>);

<L65>:
  # DEBUG this => &D.71714
  # DEBUG this => &D.71714
  # DEBUG this => &D.71714
  _723 = MEM[(char * *)&D.71714];
  # DEBUG D#1 => &D.71714
  # DEBUG this => D#1
  # DEBUG this => &D.71714
  if (&D.71714.D.11553._M_local_buf != _723)
    goto <bb 338>;
  else
    goto <bb 339>;

  <bb 338>:
  # DEBUG D#165 => D.71714.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71714
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71714
  # DEBUG this => D#1
  # DEBUG this => &D.71714
  # DEBUG D#162 => &D.71714._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _723
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _723
  # DEBUG this => D#156
  # DEBUG D.71602 => D#157
  operator delete (_723);

  <bb 339>:
  # DEBUG D#166 => &D.71714._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71714 ={v} {CLOBBER};
  resx 86

<L133>:
  goto <bb 342> (<L66>);

<L129>:

<L66>:
  # DEBUG this => &D.50652
  # DEBUG this => &D.50652
  # DEBUG this => &D.50652
  _724 = MEM[(char * *)&D.50652];
  # DEBUG D#1 => &D.50652
  # DEBUG this => D#1
  # DEBUG this => &D.50652
  if (&D.50652.D.11553._M_local_buf != _724)
    goto <bb 343>;
  else
    goto <bb 344>;

  <bb 343>:
  # DEBUG D#165 => D.50652.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50652
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50652
  # DEBUG this => D#1
  # DEBUG this => &D.50652
  # DEBUG D#162 => &D.50652._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _724
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _724
  # DEBUG this => D#156
  # DEBUG D.71591 => D#157
  operator delete (_724);

  <bb 344>:
  # DEBUG D#166 => &D.50652._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  resx 85

<L134>:
  goto <bb 483> (<L41>);

  <bb 346>:
  _153 = operator new (264);

  <bb 347>:
  _154 = this_17(D)->_classes;
  _155 = &this_17(D)->D.44919.D.33681;
  FlitChannel::FlitChannel (_153, _155, &D.50652, _154);

  <bb 348>:
  _157 = (long unsigned int) c_558;
  # DEBUG D#663 => &this_17(D)->_chan
  _204 = MEM[(struct FlitChannel * * *)this_17(D) + 232B];
  # DEBUG D#32 => D#663
  # DEBUG __n => _157
  # DEBUG this => D#32
  _235 = _157 * 8;
  _236 = _204 + _235;
  *_236 = _153;
  # DEBUG this => &D.50652
  # DEBUG this => &D.50652
  # DEBUG this => &D.50652
  _234 = MEM[(char * *)&D.50652];
  # DEBUG D#1 => &D.50652
  # DEBUG this => D#1
  # DEBUG this => &D.50652
  if (&D.50652.D.11553._M_local_buf != _234)
    goto <bb 349>;
  else
    goto <bb 350>;

  <bb 349>:
  # DEBUG D#165 => D.50652.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50652
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50652
  # DEBUG this => D#1
  # DEBUG this => &D.50652
  # DEBUG D#162 => &D.50652._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _234
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _234
  # DEBUG this => D#156
  # DEBUG D.66688 => D#157
  operator delete (_234);

  <bb 350>:
  # DEBUG D#166 => &D.50652._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50652 ={v} {CLOBBER};
  # DEBUG D#664 => &this_17(D)->_chan
  _205 = MEM[(struct FlitChannel * * *)this_17(D) + 232B];
  # DEBUG D#32 => D#664
  # DEBUG __n => _157
  # DEBUG this => D#32
  _233 = _205 + _235;
  _160 = *_233;
  D.50655 = _160;
  _162 = &this_17(D)->_timed_modules;
  # DEBUG this => _162
  # DEBUG __x => &D.50655
  _748 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;
  _749 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_last;
  _750 = _749 + 18446744073709551608;
  if (_748 != _750)
    goto <bb 351>;
  else
    goto <bb 354>;

  <bb 351>:
  # DEBUG D#523 => &_162->D.44805._M_impl
  # DEBUG D#87 => D#523
  # DEBUG __p => _748
  # DEBUG __arg => &D.50655
  # DEBUG __a => D#87
  # DEBUG D#86 => D#87
  # DEBUG D#85 => D#86
  # DEBUG __p => _748
  # DEBUG __val => &D.50655
  # DEBUG this => D#85
  # DEBUG D#11 => 8
  # DEBUG __p => _748
  # DEBUG D.60437 => D#11
  if (_748 != 0B)
    goto <bb 352>;
  else
    goto <bb 353>;

  <bb 352>:
  *_748 = _160;
  pretmp_1622 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;

  <bb 353>:
  # prephitmp_1624 = PHI <_748(351), pretmp_1622(352)>
  _753 = prephitmp_1624 + 8;
  MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur = _753;
  goto <bb 356>;

  <bb 354>:
  std::deque<TimedModule*>::_M_push_back_aux (_162, &D.50655);
  goto <bb 356>;

<L136>:
  goto <bb 483> (<L41>);

  <bb 356>:
  D.50655 ={v} {CLOBBER};
  # DEBUG D#70 => &D.50657
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#336 => &D.50657
  # DEBUG this => &D.50658
  # DEBUG __s => ""
  # DEBUG __a => D#336
  # DEBUG D#335 => D#336
  # DEBUG this => &D.50658
  # DEBUG D#333 => &D.50658._M_dataplus
  # DEBUG D#149 => D#335
  # DEBUG this => D#333
  # DEBUG __dat => &D.50658.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#333
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.50658]._M_p = &D.50658.D.11553._M_local_buf;
  # DEBUG __s => ""
  # DEBUG this => &D.50658
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.50658
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.50658
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG __ptr => ""
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG __dnew => 0
  # DEBUG D#1038 => MEM[(char * *)&D.50658]
  # DEBUG D#1 => &D.50658
  # DEBUG this => D#1
  # DEBUG __p => D#1038
  # DEBUG __k1 => ""
  # DEBUG __k2 => ""
  # DEBUG __d => D#1038
  # DEBUG __s => ""
  # DEBUG __n => 0
  # DEBUG __s1 => D#1038
  # DEBUG __s2 => ""
  # DEBUG __n => 0
  # DEBUG this => &D.50658
  # DEBUG __n => 0
  # DEBUG D#9 => &D.50658
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.50658 + 8B] = 0;
  # DEBUG D#1 => &D.50658
  # DEBUG this => D#1
  # DEBUG __c1 => &D.50658.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.50658 + 16] = 0;
  # DEBUG D#1016 => {CLOBBER}
  # DEBUG __dnew => D#1016
  # DEBUG this => &name
  # DEBUG __s => &D.50658
  # DEBUG this => &name._M_stringbuf
  # DEBUG __s => &D.50658
  # DEBUG D#2 => &D.50658
  # DEBUG this => D#2
  # DEBUG this => &D.50658
  # DEBUG D#1 => &D.50658
  # DEBUG this => D#1
  # DEBUG this => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG __s => &D.50658.D.11553._M_local_buf
  # DEBUG __n => 0
  _772 = MEM[(long unsigned int *)&name + 88B];
  # DEBUG D#2 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#2
  std::__cxx11::basic_string<char>::_M_replace (&MEM[(struct basic_stringbuf *)&name + 8B]._M_string, 0, _772, &D.50658.D.11553._M_local_buf, 0);

  <bb 357>:
  _773 = MEM[(struct basic_stringbuf *)&name + 8B]._M_mode;
  # DEBUG this => &name._M_stringbuf
  # DEBUG __mode => _773
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => _773
  # DEBUG __b => NULL
  __a.135_774 = (int) _773;
  _775 = __a.135_774 & 3;
  if (_775 != 0)
    goto <bb 358>;
  else
    goto <bb 359>;

  <bb 358>:
  # DEBUG D#12 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  __len_777 = MEM[(long unsigned int *)&name + 88B];
  # DEBUG D#2 => D#12
  # DEBUG this => D#2
  # DEBUG __len => __len_777

  <bb 359>:
  # __len_779 = PHI <0(357), __len_777(358)>
  # DEBUG __len => __len_779
  # DEBUG D#13 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#13
  _778 = MEM[(char * *)&name + 80B];
  # DEBUG D#1 => D#13
  # DEBUG this => D#1
  std::__cxx11::basic_stringbuf<char>::_M_sync (&name._M_stringbuf, _778, 0, __len_779);
  goto <bb 361>;

<L138>:
  goto <bb 471> (<L36>);

  <bb 361>:
  # DEBUG this => &D.50658
  # DEBUG this => &D.50658
  # DEBUG this => &D.50658
  _169 = MEM[(char * *)&D.50658];
  # DEBUG D#1 => &D.50658
  # DEBUG this => D#1
  # DEBUG this => &D.50658
  if (&D.50658.D.11553._M_local_buf != _169)
    goto <bb 362>;
  else
    goto <bb 363>;

  <bb 362>:
  # DEBUG D#165 => D.50658.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50658
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50658
  # DEBUG this => D#1
  # DEBUG this => &D.50658
  # DEBUG D#162 => &D.50658._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _169
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _169
  # DEBUG this => D#156
  # DEBUG D.66717 => D#157
  operator delete (_169);

  <bb 363>:
  # DEBUG D#166 => &D.50658._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50658 ={v} {CLOBBER};
  # DEBUG this => &D.50657
  # DEBUG this => &D.50657
  # DEBUG D#665 => &this_17(D)->D.44919.D.33681
  # DEBUG this => D#665
  # DEBUG __os => &name.D.23242
  # DEBUG __str => NULL
  _167 = MEM[(long unsigned int *)this_17(D) + 16B];
  # DEBUG this => D#2
  _237 = (long int) _167;
  # DEBUG this => NULL
  _238 = MEM[(char * *)this_17(D) + 8B];
  # DEBUG this => D#1
  _239 = std::__ostream_insert<char, std::char_traits<char> > (&name.D.23242, _238, _237);
  goto <bb 365>;

<L139>:
  goto <bb 483> (<L41>);

  <bb 365>:
  # DEBUG __out => _239
  # DEBUG __s => "_cchan_"
  # DEBUG __s => "_cchan_"
  std::__ostream_insert<char, std::char_traits<char> > (_239, "_cchan_", 7);
  goto <bb 367>;

<L140>:
  goto <bb 483> (<L41>);

  <bb 367>:
  std::basic_ostream<char>::operator<< (_239, c_558);
  goto <bb 369>;

<L141>:
  goto <bb 483> (<L41>);

  <bb 369>:
  # DEBUG this => &name
  # DEBUG this => &name._M_stringbuf
  # DEBUG this => &D.50659
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG this => &D.50659
  # DEBUG D#150 => &D.50659._M_dataplus
  # DEBUG this => D#150
  # DEBUG __dat => &D.50659.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#150
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.50659]._M_p = &D.50659.D.11553._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.50659
  # DEBUG __n => 0
  # DEBUG D#9 => &D.50659
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.50659 + 8B] = 0;
  # DEBUG D#1 => &D.50659
  # DEBUG this => D#1
  # DEBUG __c1 => &D.50659.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.50659 + 16] = 0;
  # DEBUG D#349 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _780 = MEM[(char_type * *)&name + 48B];
  # DEBUG D#4 => D#349
  # DEBUG this => D#4
  if (_780 != 0B)
    goto <bb 370>;
  else
    goto <bb 392>;

  <bb 370>:
  # DEBUG D#350 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#350
  # DEBUG this => D#4
  # DEBUG D#351 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _781 = MEM[(char_type * *)&name + 32B];
  # DEBUG D#5 => D#351
  # DEBUG this => D#5
  if (_780 > _781)
    goto <bb 371>;
  else
    goto <bb 381>;

  <bb 371>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#354 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#4 => D#354
  # DEBUG this => D#4
  # DEBUG D#355 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _782 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#355
  # DEBUG this => D#6
  # DEBUG this => &D.71975
  # DEBUG __beg => _782
  # DEBUG __end => _780
  # DEBUG __a => NULL
  # DEBUG this => &D.71975
  # DEBUG D#347 => &D.71975._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.71975.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.71975]._M_p = &D.71975.D.11553._M_local_buf;
  # DEBUG this => &D.71975
  # DEBUG __beg => _782
  # DEBUG __end => _780
  # DEBUG this => &D.71975
  # DEBUG __beg => _782
  # DEBUG __end => _780
  # DEBUG this => &D.71975
  # DEBUG __beg => _782
  # DEBUG __end => _780
  # DEBUG __ptr => _782
  if (_782 == 0B)
    goto <bb 514>;
  else
    goto <bb 516>;

  <bb 372>:
  _794 = std::__cxx11::basic_string<char>::_M_create (&D.71975, &__dnew, 0);

  <bb 373>:
  # DEBUG D#7 => &D.71975
  # DEBUG __p => _794
  # DEBUG this => D#7
  MEM[(char * *)&D.71975] = _794;
  __dnew.142_795 = __dnew;
  # DEBUG D#8 => &D.71975
  # DEBUG __capacity => __dnew.142_795
  # DEBUG this => D#8
  MEM[(size_type *)&D.71975 + 16B] = __dnew.142_795;
  # DEBUG D#1 => &D.71975
  # DEBUG this => D#1
  # DEBUG __p => _794
  # DEBUG __k1 => _782
  # DEBUG __k2 => _780
  # DEBUG __d => _794
  # DEBUG __s => _782
  # DEBUG __n => __dnew.141_793
  goto <bb 376>;

  <bb 374>:
  # DEBUG D#1 => &D.71975
  # DEBUG this => D#1
  # DEBUG __p => &D.71975.D.11553._M_local_buf
  # DEBUG __k1 => _782
  # DEBUG __k2 => _780
  # DEBUG __d => &D.71975.D.11553._M_local_buf
  # DEBUG __s => _782
  # DEBUG __n => __dnew.141_793
  if (__dnew.141_793 == 1)
    goto <bb 375>;
  else
    goto <bb 376>;

  <bb 375>:
  _797 = MEM[(const char_type &)_782];
  # DEBUG D#10 => _782
  # DEBUG __c1 => &D.71975.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.71975 + 16] = _797;
  goto <bb 377>;

  <bb 376>:
  # _1599 = PHI <&D.71975.D.11553._M_local_buf(374), _794(373)>
  # DEBUG D#1 => &D.71975
  # DEBUG this => D#1
  # DEBUG __p => _1599
  # DEBUG __k1 => _782
  # DEBUG __k2 => _780
  # DEBUG __d => _1599
  # DEBUG __s => _782
  # DEBUG __n => __dnew.141_793
  # DEBUG __s1 => _1599
  # DEBUG __s2 => _782
  # DEBUG __n => __dnew.141_793
  __builtin_memcpy (_1599, _782, __dnew.141_793);
  pretmp_1100 = __dnew;
  pretmp_3 = MEM[(char * *)&D.71975];

  <bb 377>:
  # prephitmp_1105 = PHI <__dnew.141_793(375), pretmp_1100(376)>
  # prephitmp_6 = PHI <&D.71975.D.11553._M_local_buf(375), pretmp_3(376)>
  # DEBUG D#1017 => __dnew
  # DEBUG this => &D.71975
  # DEBUG __n => D#1017
  # DEBUG D#9 => &D.71975
  # DEBUG __length => D#1017
  # DEBUG this => D#9
  MEM[(size_type *)&D.71975 + 8B] = prephitmp_1105;
  # DEBUG D#1 => &D.71975
  # DEBUG this => D#1
  _800 = prephitmp_6 + prephitmp_1105;
  # DEBUG __c1 => _800
  # DEBUG __c2 => D#10
  MEM[(char_type &)_800] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50659
  # DEBUG __str => &D.71975
  # DEBUG this => &D.50659
  # DEBUG __str => &D.71975
  std::__cxx11::basic_string<char>::_M_assign (&D.50659, &D.71975);

  <bb 378>:
  # DEBUG this => &D.71975
  # DEBUG this => &D.71975
  # DEBUG this => &D.71975
  _783 = MEM[(char * *)&D.71975];
  # DEBUG D#1 => &D.71975
  # DEBUG this => D#1
  # DEBUG this => &D.71975
  if (&D.71975.D.11553._M_local_buf != _783)
    goto <bb 379>;
  else
    goto <bb 380>;

  <bb 379>:
  # DEBUG D#165 => D.71975.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71975
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71975
  # DEBUG this => D#1
  # DEBUG this => &D.71975
  # DEBUG D#162 => &D.71975._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _783
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _783
  # DEBUG this => D#156
  # DEBUG D.71934 => D#157
  operator delete (_783);

  <bb 380>:
  # DEBUG D#166 => &D.71975._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71975 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 407>;

  <bb 381>:
  # DEBUG this => D#70
  # DEBUG D#69 => D#70
  # DEBUG this => D#69
  # DEBUG D#352 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG D#5 => D#352
  # DEBUG this => D#5
  # DEBUG D#353 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.23092
  _784 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#6 => D#353
  # DEBUG this => D#6
  # DEBUG this => &D.71974
  # DEBUG __beg => _784
  # DEBUG __end => _781
  # DEBUG __a => NULL
  # DEBUG this => &D.71974
  # DEBUG D#347 => &D.71974._M_dataplus
  # DEBUG this => D#347
  # DEBUG __dat => &D.71974.D.11553._M_local_buf
  # DEBUG __a => D#149
  # DEBUG D#148 => D#149
  # DEBUG D#146 => D#347
  # DEBUG D#147 => D#148
  # DEBUG this => D#146
  # DEBUG __a => D#147
  # DEBUG D#145 => D#147
  # DEBUG D#144 => D#146
  # DEBUG this => D#144
  # DEBUG D.60731 => D#145
  MEM[(struct _Alloc_hider *)&D.71974]._M_p = &D.71974.D.11553._M_local_buf;
  # DEBUG this => &D.71974
  # DEBUG __beg => _784
  # DEBUG __end => _781
  # DEBUG this => &D.71974
  # DEBUG __beg => _784
  # DEBUG __end => _781
  # DEBUG this => &D.71974
  # DEBUG __beg => _784
  # DEBUG __end => _781
  # DEBUG __ptr => _784
  _1619 = _781 != 0B;
  _1630 = _784 == 0B;
  _1629 = _1619 & _1630;
  if (_1629 != 0)
    goto <bb 517>;
  else
    goto <bb 519>;

  <bb 382>:
  _806 = std::__cxx11::basic_string<char>::_M_create (&D.71974, &__dnew, 0);
  goto <bb 384>;

<L143>:
  goto <bb 403> (<L69>);

  <bb 384>:
  # DEBUG D#7 => &D.71974
  # DEBUG __p => _806
  # DEBUG this => D#7
  MEM[(char * *)&D.71974] = _806;
  __dnew.142_807 = __dnew;
  # DEBUG D#8 => &D.71974
  # DEBUG __capacity => __dnew.142_807
  # DEBUG this => D#8
  MEM[(size_type *)&D.71974 + 16B] = __dnew.142_807;
  # DEBUG D#1 => &D.71974
  # DEBUG this => D#1
  # DEBUG __p => _806
  # DEBUG __k1 => _784
  # DEBUG __k2 => _781
  # DEBUG __d => _806
  # DEBUG __s => _784
  # DEBUG __n => __dnew.141_805
  goto <bb 387>;

  <bb 385>:
  # DEBUG D#1 => &D.71974
  # DEBUG this => D#1
  # DEBUG __p => &D.71974.D.11553._M_local_buf
  # DEBUG __k1 => _784
  # DEBUG __k2 => _781
  # DEBUG __d => &D.71974.D.11553._M_local_buf
  # DEBUG __s => _784
  # DEBUG __n => __dnew.141_805
  if (__dnew.141_805 == 1)
    goto <bb 386>;
  else
    goto <bb 387>;

  <bb 386>:
  _809 = MEM[(const char_type &)_784];
  # DEBUG D#10 => _784
  # DEBUG __c1 => &D.71974.D.11553._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.71974 + 16] = _809;
  goto <bb 388>;

  <bb 387>:
  # _1600 = PHI <&D.71974.D.11553._M_local_buf(385), _806(384)>
  # DEBUG D#1 => &D.71974
  # DEBUG this => D#1
  # DEBUG __p => _1600
  # DEBUG __k1 => _784
  # DEBUG __k2 => _781
  # DEBUG __d => _1600
  # DEBUG __s => _784
  # DEBUG __n => __dnew.141_805
  # DEBUG __s1 => _1600
  # DEBUG __s2 => _784
  # DEBUG __n => __dnew.141_805
  __builtin_memcpy (_1600, _784, __dnew.141_805);
  pretmp_995 = __dnew;
  pretmp_997 = MEM[(char * *)&D.71974];

  <bb 388>:
  # prephitmp_996 = PHI <__dnew.141_805(386), pretmp_995(387)>
  # prephitmp_998 = PHI <&D.71974.D.11553._M_local_buf(386), pretmp_997(387)>
  # DEBUG D#1018 => __dnew
  # DEBUG this => &D.71974
  # DEBUG __n => D#1018
  # DEBUG D#9 => &D.71974
  # DEBUG __length => D#1018
  # DEBUG this => D#9
  MEM[(size_type *)&D.71974 + 8B] = prephitmp_996;
  # DEBUG D#1 => &D.71974
  # DEBUG this => D#1
  _812 = prephitmp_998 + prephitmp_996;
  # DEBUG __c1 => _812
  # DEBUG __c2 => D#10
  MEM[(char_type &)_812] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.50659
  # DEBUG __str => &D.71974
  # DEBUG this => &D.50659
  # DEBUG __str => &D.71974
  std::__cxx11::basic_string<char>::_M_assign (&D.50659, &D.71974);

  <bb 389>:
  # DEBUG this => &D.71974
  # DEBUG this => &D.71974
  # DEBUG this => &D.71974
  _785 = MEM[(char * *)&D.71974];
  # DEBUG D#1 => &D.71974
  # DEBUG this => D#1
  # DEBUG this => &D.71974
  if (&D.71974.D.11553._M_local_buf != _785)
    goto <bb 390>;
  else
    goto <bb 391>;

  <bb 390>:
  # DEBUG D#165 => D.71974.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71974
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71974
  # DEBUG this => D#1
  # DEBUG this => &D.71974
  # DEBUG D#162 => &D.71974._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _785
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _785
  # DEBUG this => D#156
  # DEBUG D.71897 => D#157
  operator delete (_785);

  <bb 391>:
  # DEBUG D#166 => &D.71974._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71974 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 407>;

  <bb 392>:
  # DEBUG this => &D.50659
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => &D.50659
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.50659, &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string);
  goto <bb 407>;

<L144>:
  goto <bb 403> (<L69>);

<L67>:
  # DEBUG this => &D.71975
  # DEBUG this => &D.71975
  # DEBUG this => &D.71975
  _787 = MEM[(char * *)&D.71975];
  # DEBUG D#1 => &D.71975
  # DEBUG this => D#1
  # DEBUG this => &D.71975
  if (&D.71975.D.11553._M_local_buf != _787)
    goto <bb 395>;
  else
    goto <bb 396>;

  <bb 395>:
  # DEBUG D#165 => D.71975.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71975
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71975
  # DEBUG this => D#1
  # DEBUG this => &D.71975
  # DEBUG D#162 => &D.71975._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _787
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _787
  # DEBUG this => D#156
  # DEBUG D.71878 => D#157
  operator delete (_787);

  <bb 396>:
  # DEBUG D#166 => &D.71975._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71975 ={v} {CLOBBER};
  resx 90

<L145>:
  goto <bb 403> (<L69>);

<L68>:
  # DEBUG this => &D.71974
  # DEBUG this => &D.71974
  # DEBUG this => &D.71974
  _788 = MEM[(char * *)&D.71974];
  # DEBUG D#1 => &D.71974
  # DEBUG this => D#1
  # DEBUG this => &D.71974
  if (&D.71974.D.11553._M_local_buf != _788)
    goto <bb 399>;
  else
    goto <bb 400>;

  <bb 399>:
  # DEBUG D#165 => D.71974.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.71974
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.71974
  # DEBUG this => D#1
  # DEBUG this => &D.71974
  # DEBUG D#162 => &D.71974._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _788
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _788
  # DEBUG this => D#156
  # DEBUG D.71862 => D#157
  operator delete (_788);

  <bb 400>:
  # DEBUG D#166 => &D.71974._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.71974 ={v} {CLOBBER};
  resx 89

<L146>:
  goto <bb 403> (<L69>);

<L142>:

<L69>:
  # DEBUG this => &D.50659
  # DEBUG this => &D.50659
  # DEBUG this => &D.50659
  _789 = MEM[(char * *)&D.50659];
  # DEBUG D#1 => &D.50659
  # DEBUG this => D#1
  # DEBUG this => &D.50659
  if (&D.50659.D.11553._M_local_buf != _789)
    goto <bb 404>;
  else
    goto <bb 405>;

  <bb 404>:
  # DEBUG D#165 => D.50659.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50659
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50659
  # DEBUG this => D#1
  # DEBUG this => &D.50659
  # DEBUG D#162 => &D.50659._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _789
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _789
  # DEBUG this => D#156
  # DEBUG D.71851 => D#157
  operator delete (_789);

  <bb 405>:
  # DEBUG D#166 => &D.50659._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  resx 88

<L147>:
  goto <bb 483> (<L41>);

  <bb 407>:
  _173 = operator new (200);

  <bb 408>:
  Channel<Credit>::Channel (_173, _155, &D.50659);

  <bb 409>:
  # DEBUG D#666 => &this_17(D)->_chan_cred
  _210 = MEM[(struct Channel * * *)this_17(D) + 256B];
  # DEBUG D#45 => D#666
  # DEBUG __n => _157
  # DEBUG this => D#45
  _242 = _210 + _235;
  *_242 = _173;
  # DEBUG this => &D.50659
  # DEBUG this => &D.50659
  # DEBUG this => &D.50659
  _241 = MEM[(char * *)&D.50659];
  # DEBUG D#1 => &D.50659
  # DEBUG this => D#1
  # DEBUG this => &D.50659
  if (&D.50659.D.11553._M_local_buf != _241)
    goto <bb 410>;
  else
    goto <bb 411>;

  <bb 410>:
  # DEBUG D#165 => D.50659.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50659
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50659
  # DEBUG this => D#1
  # DEBUG this => &D.50659
  # DEBUG D#162 => &D.50659._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _241
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _241
  # DEBUG this => D#156
  # DEBUG D.66741 => D#157
  operator delete (_241);

  <bb 411>:
  # DEBUG D#166 => &D.50659._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50659 ={v} {CLOBBER};
  # DEBUG D#667 => &this_17(D)->_chan_cred
  _211 = MEM[(struct Channel * * *)this_17(D) + 256B];
  # DEBUG D#45 => D#667
  # DEBUG __n => _157
  # DEBUG this => D#45
  _240 = _211 + _235;
  _179 = *_240;
  D.50662 = _179;
  # DEBUG this => _162
  # DEBUG __x => &D.50662
  _813 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;
  _814 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_last;
  _815 = _814 + 18446744073709551608;
  if (_813 != _815)
    goto <bb 412>;
  else
    goto <bb 415>;

  <bb 412>:
  # DEBUG D#523 => &_162->D.44805._M_impl
  # DEBUG D#87 => D#523
  # DEBUG __p => _813
  # DEBUG __arg => &D.50662
  # DEBUG __a => D#87
  # DEBUG D#86 => D#87
  # DEBUG D#85 => D#86
  # DEBUG __p => _813
  # DEBUG __val => &D.50662
  # DEBUG this => D#85
  # DEBUG D#11 => 8
  # DEBUG __p => _813
  # DEBUG D.60437 => D#11
  if (_813 != 0B)
    goto <bb 413>;
  else
    goto <bb 414>;

  <bb 413>:
  *_813 = _179;
  pretmp_973 = MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur;

  <bb 414>:
  # prephitmp_974 = PHI <_813(412), pretmp_973(413)>
  _818 = prephitmp_974 + 8;
  MEM[(struct deque *)this_17(D) + 280B].D.44805._M_impl._M_finish._M_cur = _818;
  goto <bb 417>;

  <bb 415>:
  std::deque<TimedModule*>::_M_push_back_aux (_162, &D.50662);
  goto <bb 417>;

<L149>:
  goto <bb 483> (<L41>);

  <bb 417>:
  D.50662 ={v} {CLOBBER};
  # DEBUG this => &name
  name.D.23242._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &name._M_stringbuf
  MEM[(struct basic_stringbuf *)&name + 8B].D.23092._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#168 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#168
  # DEBUG this => D#168
  # DEBUG this => D#168
  _183 = MEM[(char * *)&name + 80B];
  # DEBUG D#1 => D#168
  # DEBUG this => D#1
  # DEBUG this => D#168
  if (&MEM[(const struct basic_string *)&name + 80B].D.11553._M_local_buf != _183)
    goto <bb 418>;
  else
    goto <bb 419>;

  <bb 418>:
  # DEBUG D#165 => MEM[(struct basic_string *)D#168].D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => D#168
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => D#168
  # DEBUG this => D#1
  # DEBUG this => D#168
  # DEBUG D#162 => &MEM[(struct basic_string *)D#168]._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _183
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _183
  # DEBUG this => D#156
  # DEBUG D.72058 => D#157
  operator delete (_183);

  <bb 419>:
  # DEBUG D#166 => &MEM[(struct basic_string *)D#168]._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  MEM[(struct  &)&name + 80] ={v} {CLOBBER};
  # DEBUG D#167 => &MEM[(struct basic_stringbuf *)&name + 8B].D.23092
  # DEBUG this => D#167
  MEM[(struct basic_streambuf *)&name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&name + 8B]._M_buf_locale);
  MEM[(struct  &)&name + 8] ={v} {CLOBBER};
  # DEBUG this => &name.D.23242
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.131_820 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  _821 = MEM[(long int *)iftmp.131_820 + -24B];
  iftmp.132_822 = (sizetype) _821;
  _823 = &name.D.23242 + iftmp.132_822;
  iftmp.133_824 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _823->D.19935._vptr.ios_base = iftmp.133_824;
  MEM[(struct  &)&name] ={v} {CLOBBER};
  # DEBUG D#172 => &name.D.23245
  # DEBUG this => D#172
  MEM[(struct basic_ios *)&name + 112B].D.19935._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&name + 112B].D.19935);
  name ={v} {CLOBBER};
  c_185 = c_558 + 1;
  # DEBUG c => c_185
  # DEBUG c => c_185
  _149 = this_17(D)->_channels;
  if (_149 <= c_185)
    goto <bb 292>;
  else
    goto <bb 420>;

  <bb 420>:
  goto <bb 296>;

  # _887 = PHI <_38(71)>
<L13>:
  operator delete (_887);
  resx 4

<L150>:
  goto <bb 424> (<L14>);

<L81>:

<L14>:
  # DEBUG this => &D.50563
  # DEBUG this => &D.50563
  # DEBUG this => &D.50563
  _243 = MEM[(char * *)&D.50563];
  # DEBUG D#1 => &D.50563
  # DEBUG this => D#1
  # DEBUG this => &D.50563
  if (&D.50563.D.11553._M_local_buf != _243)
    goto <bb 425>;
  else
    goto <bb 426>;

  <bb 425>:
  # DEBUG D#165 => D.50563.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50563
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50563
  # DEBUG this => D#1
  # DEBUG this => &D.50563
  # DEBUG D#162 => &D.50563._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _243
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _243
  # DEBUG this => D#156
  # DEBUG D.66760 => D#157
  operator delete (_243);

  <bb 426>:
  # DEBUG D#166 => &D.50563._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50563 ={v} {CLOBBER};
  resx 3

<L151>:
  goto <bb 441> (<L21>);

<L84>:

<L16>:
  # DEBUG this => &D.50605
  # DEBUG this => &D.50605
  # DEBUG this => &D.50605
  _80 = MEM[(char * *)&D.50605];
  # DEBUG D#1 => &D.50605
  # DEBUG this => D#1
  # DEBUG this => &D.50605
  if (&D.50605.D.11553._M_local_buf != _80)
    goto <bb 430>;
  else
    goto <bb 431>;

  <bb 430>:
  # DEBUG D#165 => D.50605.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50605
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50605
  # DEBUG this => D#1
  # DEBUG this => &D.50605
  # DEBUG D#162 => &D.50605._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _80
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _80
  # DEBUG this => D#156
  # DEBUG D.66775 => D#157
  operator delete (_80);

  <bb 431>:
  # DEBUG D#166 => &D.50605._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50605 ={v} {CLOBBER};
  resx 10

<L152>:
  goto <bb 441> (<L21>);

  # _1628 = PHI <_60(134)>
<L18>:
  operator delete (_1628);
  resx 14

<L153>:
  goto <bb 436> (<L19>);

<L95>:

<L19>:
  # DEBUG this => &D.50606
  # DEBUG this => &D.50606
  # DEBUG this => &D.50606
  _77 = MEM[(char * *)&D.50606];
  # DEBUG D#1 => &D.50606
  # DEBUG this => D#1
  # DEBUG this => &D.50606
  if (&D.50606.D.11553._M_local_buf != _77)
    goto <bb 437>;
  else
    goto <bb 438>;

  <bb 437>:
  # DEBUG D#165 => D.50606.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50606
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50606
  # DEBUG this => D#1
  # DEBUG this => &D.50606
  # DEBUG D#162 => &D.50606._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _77
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _77
  # DEBUG this => D#156
  # DEBUG D.66792 => D#157
  operator delete (_77);

  <bb 438>:
  # DEBUG D#166 => &D.50606._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50606 ={v} {CLOBBER};
  resx 13

<L154>:
  goto <bb 441> (<L21>);

<L72>:

<L21>:
  D.50636 ={v} {CLOBBER};
  D.50602 ={v} {CLOBBER};
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&name);
  resx 2

  # _1627 = PHI <_95(210)>
<L23>:
  operator delete (_1627);
  resx 24

<L155>:
  goto <bb 445> (<L24>);

<L108>:

<L24>:
  # DEBUG this => &D.50639
  # DEBUG this => &D.50639
  # DEBUG this => &D.50639
  _74 = MEM[(char * *)&D.50639];
  # DEBUG D#1 => &D.50639
  # DEBUG this => D#1
  # DEBUG this => &D.50639
  if (&D.50639.D.11553._M_local_buf != _74)
    goto <bb 446>;
  else
    goto <bb 447>;

  <bb 446>:
  # DEBUG D#165 => D.50639.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50639
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50639
  # DEBUG this => D#1
  # DEBUG this => &D.50639
  # DEBUG D#162 => &D.50639._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _74
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _74
  # DEBUG this => D#156
  # DEBUG D.66807 => D#157
  operator delete (_74);

  <bb 447>:
  # DEBUG D#166 => &D.50639._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50639 ={v} {CLOBBER};
  resx 23

<L156>:
  goto <bb 462> (<L31>);

<L111>:

<L26>:
  # DEBUG this => &D.50645
  # DEBUG this => &D.50645
  # DEBUG this => &D.50645
  _138 = MEM[(char * *)&D.50645];
  # DEBUG D#1 => &D.50645
  # DEBUG this => D#1
  # DEBUG this => &D.50645
  if (&D.50645.D.11553._M_local_buf != _138)
    goto <bb 451>;
  else
    goto <bb 452>;

  <bb 451>:
  # DEBUG D#165 => D.50645.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50645
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50645
  # DEBUG this => D#1
  # DEBUG this => &D.50645
  # DEBUG D#162 => &D.50645._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _138
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _138
  # DEBUG this => D#156
  # DEBUG D.66822 => D#157
  operator delete (_138);

  <bb 452>:
  # DEBUG D#166 => &D.50645._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50645 ={v} {CLOBBER};
  resx 30

<L157>:
  goto <bb 462> (<L31>);

  # _1623 = PHI <_117(273)>
<L28>:
  operator delete (_1623);
  resx 34

<L158>:
  goto <bb 457> (<L29>);

<L122>:

<L29>:
  # DEBUG this => &D.50646
  # DEBUG this => &D.50646
  # DEBUG this => &D.50646
  _135 = MEM[(char * *)&D.50646];
  # DEBUG D#1 => &D.50646
  # DEBUG this => D#1
  # DEBUG this => &D.50646
  if (&D.50646.D.11553._M_local_buf != _135)
    goto <bb 458>;
  else
    goto <bb 459>;

  <bb 458>:
  # DEBUG D#165 => D.50646.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50646
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50646
  # DEBUG this => D#1
  # DEBUG this => &D.50646
  # DEBUG D#162 => &D.50646._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _135
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _135
  # DEBUG this => D#156
  # DEBUG D.66839 => D#157
  operator delete (_135);

  <bb 459>:
  # DEBUG D#166 => &D.50646._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50646 ={v} {CLOBBER};
  resx 33

<L159>:
  goto <bb 462> (<L31>);

<L99>:

<L31>:
  D.50649 ={v} {CLOBBER};
  D.50642 ={v} {CLOBBER};
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&name);
  resx 22

  # _1620 = PHI <_153(347)>
<L33>:
  operator delete (_1620);
  resx 44

<L160>:
  goto <bb 466> (<L34>);

<L135>:

<L34>:
  # DEBUG this => &D.50652
  # DEBUG this => &D.50652
  # DEBUG this => &D.50652
  _132 = MEM[(char * *)&D.50652];
  # DEBUG D#1 => &D.50652
  # DEBUG this => D#1
  # DEBUG this => &D.50652
  if (&D.50652.D.11553._M_local_buf != _132)
    goto <bb 467>;
  else
    goto <bb 468>;

  <bb 467>:
  # DEBUG D#165 => D.50652.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50652
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50652
  # DEBUG this => D#1
  # DEBUG this => &D.50652
  # DEBUG D#162 => &D.50652._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _132
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _132
  # DEBUG this => D#156
  # DEBUG D.66854 => D#157
  operator delete (_132);

  <bb 468>:
  # DEBUG D#166 => &D.50652._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50652 ={v} {CLOBBER};
  resx 43

<L161>:
  goto <bb 483> (<L41>);

<L137>:

<L36>:
  # DEBUG this => &D.50658
  # DEBUG this => &D.50658
  # DEBUG this => &D.50658
  _194 = MEM[(char * *)&D.50658];
  # DEBUG D#1 => &D.50658
  # DEBUG this => D#1
  # DEBUG this => &D.50658
  if (&D.50658.D.11553._M_local_buf != _194)
    goto <bb 472>;
  else
    goto <bb 473>;

  <bb 472>:
  # DEBUG D#165 => D.50658.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50658
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50658
  # DEBUG this => D#1
  # DEBUG this => &D.50658
  # DEBUG D#162 => &D.50658._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _194
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _194
  # DEBUG this => D#156
  # DEBUG D.66869 => D#157
  operator delete (_194);

  <bb 473>:
  # DEBUG D#166 => &D.50658._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50658 ={v} {CLOBBER};
  resx 50

<L162>:
  goto <bb 483> (<L41>);

  # _1618 = PHI <_173(408)>
<L38>:
  operator delete (_1618);
  resx 54

<L163>:
  goto <bb 478> (<L39>);

<L148>:

<L39>:
  # DEBUG this => &D.50659
  # DEBUG this => &D.50659
  # DEBUG this => &D.50659
  _191 = MEM[(char * *)&D.50659];
  # DEBUG D#1 => &D.50659
  # DEBUG this => D#1
  # DEBUG this => &D.50659
  if (&D.50659.D.11553._M_local_buf != _191)
    goto <bb 479>;
  else
    goto <bb 480>;

  <bb 479>:
  # DEBUG D#165 => D.50659.D.11553._M_allocated_capacity
  # DEBUG D#164 => D#165
  # DEBUG this => &D.50659
  # DEBUG __size => D#164
  # DEBUG D#163 => D#164
  # DEBUG D#1 => &D.50659
  # DEBUG this => D#1
  # DEBUG this => &D.50659
  # DEBUG D#162 => &D.50659._M_dataplus
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163 + 1
  # DEBUG __p => _191
  # DEBUG __a => D#160
  # DEBUG __n => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG __p => _191
  # DEBUG this => D#156
  # DEBUG D.66886 => D#157
  operator delete (_191);

  <bb 480>:
  # DEBUG D#166 => &D.50659._M_dataplus
  # DEBUG this => D#166
  # DEBUG this => D#166
  # DEBUG this => D#166
  D.50659 ={v} {CLOBBER};
  resx 53

<L164>:
  goto <bb 483> (<L41>);

<L126>:

<L41>:
  D.50662 ={v} {CLOBBER};
  D.50655 ={v} {CLOBBER};
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&name);
  resx 42

  <bb 484>:
  # DEBUG __first => _419
  # DEBUG __last => _417
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _419
  # DEBUG __last => _417
  __last.144_427 = (long int) _417;
  __first.145_428 = (long int) _419;
  _429 = __last.144_427 - __first.145_428;
  __dnew.141_430 = (long unsigned int) _429;
  __dnew = __dnew.141_430;
  if (__dnew.141_430 > 15)
    goto <bb 35>;
  else
    goto <bb 37>;

  <bb 485>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L165>:
  goto <bb 66> (<L48>);

  <bb 487>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L166>:
  goto <bb 66> (<L48>);

  <bb 489>:
  # DEBUG __first => _421
  # DEBUG __last => _418
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _421
  # DEBUG __last => _418
  __last.144_439 = (long int) _418;
  __first.145_440 = (long int) _421;
  _441 = __last.144_439 - __first.145_440;
  __dnew.141_442 = (long unsigned int) _441;
  __dnew = __dnew.141_442;
  if (__dnew.141_442 > 15)
    goto <bb 45>;
  else
    goto <bb 48>;

  <bb 490>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L167>:
  goto <bb 129> (<L51>);

  <bb 492>:
  # DEBUG __first => _484
  # DEBUG __last => _482
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _484
  # DEBUG __last => _482
  __last.144_492 = (long int) _482;
  __first.145_493 = (long int) _484;
  _494 = __last.144_492 - __first.145_493;
  __dnew.141_495 = (long unsigned int) _494;
  __dnew = __dnew.141_495;
  if (__dnew.141_495 > 15)
    goto <bb 98>;
  else
    goto <bb 100>;

  <bb 493>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L168>:
  goto <bb 129> (<L51>);

  <bb 495>:
  # DEBUG __first => _486
  # DEBUG __last => _483
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _486
  # DEBUG __last => _483
  __last.144_504 = (long int) _483;
  __first.145_505 = (long int) _486;
  _506 = __last.144_504 - __first.145_505;
  __dnew.141_507 = (long unsigned int) _506;
  __dnew = __dnew.141_507;
  if (__dnew.141_507 > 15)
    goto <bb 108>;
  else
    goto <bb 111>;

  <bb 496>:
  # DEBUG __first => _568
  # DEBUG __last => _566
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _568
  # DEBUG __last => _566
  __last.144_576 = (long int) _566;
  __first.145_577 = (long int) _568;
  _578 = __last.144_576 - __first.145_577;
  __dnew.141_579 = (long unsigned int) _578;
  __dnew = __dnew.141_579;
  if (__dnew.141_579 > 15)
    goto <bb 174>;
  else
    goto <bb 176>;

  <bb 497>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L169>:
  goto <bb 205> (<L57>);

  <bb 499>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L170>:
  goto <bb 205> (<L57>);

  <bb 501>:
  # DEBUG __first => _570
  # DEBUG __last => _567
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _570
  # DEBUG __last => _567
  __last.144_588 = (long int) _567;
  __first.145_589 = (long int) _570;
  _590 = __last.144_588 - __first.145_589;
  __dnew.141_591 = (long unsigned int) _590;
  __dnew = __dnew.141_591;
  if (__dnew.141_591 > 15)
    goto <bb 184>;
  else
    goto <bb 187>;

  <bb 502>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L171>:
  goto <bb 268> (<L60>);

  <bb 504>:
  # DEBUG __first => _633
  # DEBUG __last => _631
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _633
  # DEBUG __last => _631
  __last.144_641 = (long int) _631;
  __first.145_642 = (long int) _633;
  _643 = __last.144_641 - __first.145_642;
  __dnew.141_644 = (long unsigned int) _643;
  __dnew = __dnew.141_644;
  if (__dnew.141_644 > 15)
    goto <bb 237>;
  else
    goto <bb 239>;

  <bb 505>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L172>:
  goto <bb 268> (<L60>);

  <bb 507>:
  # DEBUG __first => _635
  # DEBUG __last => _632
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _635
  # DEBUG __last => _632
  __last.144_653 = (long int) _632;
  __first.145_654 = (long int) _635;
  _655 = __last.144_653 - __first.145_654;
  __dnew.141_656 = (long unsigned int) _655;
  __dnew = __dnew.141_656;
  if (__dnew.141_656 > 15)
    goto <bb 247>;
  else
    goto <bb 250>;

  <bb 508>:
  # DEBUG __first => _717
  # DEBUG __last => _715
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _717
  # DEBUG __last => _715
  __last.144_725 = (long int) _715;
  __first.145_726 = (long int) _717;
  _727 = __last.144_725 - __first.145_726;
  __dnew.141_728 = (long unsigned int) _727;
  __dnew = __dnew.141_728;
  if (__dnew.141_728 > 15)
    goto <bb 311>;
  else
    goto <bb 313>;

  <bb 509>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L173>:
  goto <bb 342> (<L66>);

  <bb 511>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L174>:
  goto <bb 342> (<L66>);

  <bb 513>:
  # DEBUG __first => _719
  # DEBUG __last => _716
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _719
  # DEBUG __last => _716
  __last.144_737 = (long int) _716;
  __first.145_738 = (long int) _719;
  _739 = __last.144_737 - __first.145_738;
  __dnew.141_740 = (long unsigned int) _739;
  __dnew = __dnew.141_740;
  if (__dnew.141_740 > 15)
    goto <bb 321>;
  else
    goto <bb 324>;

  <bb 514>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L175>:
  goto <bb 403> (<L69>);

  <bb 516>:
  # DEBUG __first => _782
  # DEBUG __last => _780
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _782
  # DEBUG __last => _780
  __last.144_790 = (long int) _780;
  __first.145_791 = (long int) _782;
  _792 = __last.144_790 - __first.145_791;
  __dnew.141_793 = (long unsigned int) _792;
  __dnew = __dnew.141_793;
  if (__dnew.141_793 > 15)
    goto <bb 372>;
  else
    goto <bb 374>;

  <bb 517>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L176>:
  goto <bb 403> (<L69>);

  <bb 519>:
  # DEBUG __first => _784
  # DEBUG __last => _781
  # DEBUG D#343 => &__first
  # DEBUG D.62201 => D#343
  # DEBUG __first => _784
  # DEBUG __last => _781
  __last.144_802 = (long int) _781;
  __first.145_803 = (long int) _784;
  _804 = __last.144_802 - __first.145_803;
  __dnew.141_805 = (long unsigned int) _804;
  __dnew = __dnew.141_805;
  if (__dnew.141_805 > 15)
    goto <bb 382>;
  else
    goto <bb 385>;

}


