
;; Function virtual void CMesh::_BuildNet(const Configuration&) (_ZN5CMesh9_BuildNetERK13Configuration, funcdef_no=2002, decl_uid=45033, cgraph_uid=468, symbol_order=474)

Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
virtual void CMesh::_BuildNet(const Configuration&) (struct CMesh * const this, const struct Configuration & config)
{
  char_type D.57782;
  char __c;
  char_type D.57779;
  char __c;
  char_type D.57776;
  struct basic_ostream & D.57770;
  char_type D.57767;
  char __c;
  char_type D.57764;
  char __c;
  char_type D.57761;
  struct basic_ostream & D.57755;
  char_type D.57752;
  char __c;
  char_type D.57749;
  char __c;
  char_type D.57746;
  struct basic_ostream & D.57740;
  char_type D.57737;
  char __c;
  char_type D.57734;
  char __c;
  char_type D.57731;
  struct basic_ostream & D.57725;
  __size_type __len;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.57598;
  struct __string_type D.57597;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  long unsigned int * __first;
  size_type __dnew;
  char_type D.57337;
  char __c;
  char_type D.57334;
  char __c;
  char_type D.57331;
  struct basic_ostream & D.57325;
  char __c;
  int i;
  int link;
  int x;
  int y;
  int ny_in;
  int py_in;
  int nx_in;
  int px_in;
  int ny_out;
  int py_out;
  int nx_out;
  int px_out;
  const int y;
  const int x;
  const int degree_in;
  int node;
  static const char __PRETTY_FUNCTION__[52] = "virtual void CMesh::_BuildNet(const Configuration&)";
  struct vector channel_vector;
  struct ostringstream name;
  int y_index;
  int x_index;
  const struct __string_type D.46340;
  struct TimedModule * const D.46337;
  struct __string_type D.46336;
  const bool D.46330;
  const struct string D.46327;
  int iftmp.80_9;
  int iftmp.81_10;
  int iftmp.82_11;
  int iftmp.83_12;
  sizetype _18;
  sizetype _22;
  bool gTrace.77_30;
  long unsigned int _31;
  int _32;
  int _35;
  char * const _38;
  long unsigned int _39;
  int _42;
  long unsigned int _43;
  struct Channel * * pretmp_46;
  int _47;
  int _48;
  int _51;
  int _52;
  int _53;
  struct basic_ostream & _56;
  struct basic_ostream & _58;
  long unsigned int _60;
  struct FlitChannel * & _61;
  struct Module * _62;
  struct Router * _64;
  struct Router * _67;
  struct deque * _69;
  char * const _75;
  int _cX.79_77;
  int _78;
  int _79;
  int _cY.78_80;
  int _81;
  int _82;
  int _83;
  int _84;
  int _85;
  int _87;
  long unsigned int _88;
  struct Router * _90;
  int (*__vtbl_ptr_type) () * _91;
  int (*__vtbl_ptr_type) () _92;
  struct FlitChannel * & _93;
  struct Channel * _94;
  struct FlitChannel * _95;
  struct Router * _98;
  int (*__vtbl_ptr_type) () * _99;
  int (*__vtbl_ptr_type) () _100;
  struct Channel * _102;
  struct FlitChannel * _104;
  struct Router * & _106;
  struct FlitChannel * _107;
  struct FlitChannel * _108;
  int _114;
  int _117;
  const int _119;
  int _120;
  int _121;
  int _124;
  int _126;
  int _128;
  int _129;
  int _131;
  int _133;
  int _134;
  int _135;
  int _137;
  int _138;
  int _139;
  int _141;
  int _142;
  int _143;
  int _144;
  int _147;
  int _148;
  bool _149;
  int _151;
  int _152;
  int _160;
  int _161;
  int _162;
  int _163;
  int _165;
  int _166;
  int _168;
  int _cY.78_176;
  int _177;
  int iftmp.80_178;
  int iftmp.80_179;
  long unsigned int _180;
  struct FlitChannel * _181;
  struct Channel * _182;
  struct Channel * & _184;
  struct Channel * _185;
  long unsigned int _187;
  struct FlitChannel * _188;
  struct Channel * _189;
  struct FlitChannel * & _190;
  struct Router * _191;
  int (*__vtbl_ptr_type) () * _192;
  int (*__vtbl_ptr_type) () _193;
  struct Router * _198;
  int (*__vtbl_ptr_type) () * _199;
  int (*__vtbl_ptr_type) () _200;
  long unsigned int _201;
  struct Channel * _202;
  struct FlitChannel * _203;
  bool gTrace.77_205;
  struct FlitChannel * _206;
  struct basic_ostream & _208;
  struct basic_ostream & _210;
  struct basic_ostream & _212;
  struct basic_ostream & _214;
  int _215;
  int _cY.78_216;
  int _217;
  int iftmp.81_218;
  int iftmp.81_219;
  long unsigned int _220;
  struct FlitChannel * _221;
  struct Channel * _222;
  struct Channel * _224;
  long unsigned int _226;
  struct FlitChannel * _228;
  struct Channel * _230;
  struct Router * _231;
  int (*__vtbl_ptr_type) () * _232;
  int (*__vtbl_ptr_type) () _233;
  long unsigned int _235;
  struct Router * _239;
  int (*__vtbl_ptr_type) () * _240;
  int (*__vtbl_ptr_type) () _241;
  long unsigned int _242;
  struct Channel * _243;
  struct Router * & _244;
  struct FlitChannel * _245;
  bool gTrace.77_247;
  struct FlitChannel * _248;
  struct basic_ostream & _250;
  struct basic_ostream & _252;
  struct basic_ostream & _254;
  struct basic_ostream & _256;
  int _257;
  int _258;
  int _cX.79_259;
  int _260;
  int iftmp.82_261;
  int iftmp.82_262;
  long unsigned int _263;
  struct Channel * & _264;
  struct FlitChannel * _265;
  struct Channel * _266;
  long unsigned int _268;
  struct Channel * _269;
  long unsigned int _271;
  struct FlitChannel * _272;
  struct FlitChannel * & _273;
  struct Channel * _274;
  struct Router * _275;
  int (*__vtbl_ptr_type) () * _276;
  int (*__vtbl_ptr_type) () _277;
  long unsigned int _279;
  _Bit_type * _281;
  long unsigned int _284;
  struct Router * _285;
  int (*__vtbl_ptr_type) () * _286;
  int (*__vtbl_ptr_type) () _287;
  long unsigned int _288;
  long unsigned int _289;
  struct Channel * _290;
  struct FlitChannel * _291;
  bool gTrace.77_293;
  unsigned int _294;
  struct FlitChannel * _295;
  unsigned int _296;
  struct basic_ostream & _298;
  struct basic_ostream & _300;
  struct basic_ostream & _302;
  struct basic_ostream & _304;
  int _305;
  int _cX.79_306;
  int _307;
  int iftmp.83_308;
  int iftmp.83_309;
  long unsigned int _310;
  struct FlitChannel * _311;
  struct Channel * _312;
  long unsigned int _314;
  struct Channel * _315;
  long unsigned int _317;
  struct FlitChannel * _318;
  long unsigned int _319;
  struct Channel * _320;
  struct Router * _321;
  int (*__vtbl_ptr_type) () * _322;
  int (*__vtbl_ptr_type) () _323;
  char * const _325;
  struct Router * & _327;
  struct Router * _330;
  int (*__vtbl_ptr_type) () * _331;
  int (*__vtbl_ptr_type) () _332;
  long unsigned int _333;
  struct Channel * _334;
  struct Router * & _335;
  struct FlitChannel * _336;
  bool gTrace.77_338;
  long unsigned int _339;
  struct FlitChannel * _340;
  struct basic_ostream & _342;
  struct basic_ostream & _344;
  struct basic_ostream & _346;
  struct basic_ostream & _348;
  char * const _353;
  long unsigned int _356;
  bool gTrace.77_359;
  char * const _360;
  sizetype _365;
  char * const _366;
  long unsigned int prephitmp_367;
  struct FlitChannel * * _370;
  struct FlitChannel * * _371;
  struct FlitChannel * * _372;
  struct FlitChannel * * _373;
  struct FlitChannel * * _374;
  struct FlitChannel * * _375;
  struct FlitChannel * * _377;
  struct FlitChannel * * _378;
  struct FlitChannel * * _379;
  struct FlitChannel * * _380;
  struct FlitChannel * * _382;
  struct FlitChannel * * _383;
  struct FlitChannel * * _384;
  struct FlitChannel * * _385;
  struct FlitChannel * * _387;
  struct FlitChannel * * _388;
  struct FlitChannel * * _389;
  struct FlitChannel * * _390;
  struct FlitChannel * * _392;
  struct FlitChannel * * _393;
  struct Channel * * _394;
  struct Channel * * _395;
  struct Channel * * _396;
  struct Channel * * _397;
  struct Channel * * _399;
  struct Channel * * _400;
  struct Channel * * _401;
  struct Channel * * _403;
  struct Channel * * _404;
  struct Channel * * _405;
  struct Channel * * _407;
  struct Channel * * _408;
  struct Channel * * _409;
  struct Channel * * _411;
  struct Router * * _412;
  struct Router * * _413;
  struct Router * * _414;
  struct Router * * _415;
  struct Router * * _416;
  struct Router * * _417;
  struct Router * * _418;
  struct Router * * _419;
  struct Router * * _420;
  struct Router * * _421;
  struct Router * * _422;
  struct Router * * _423;
  _Bit_type * _424;
  const int _426;
  const int _427;
  const int _428;
  const int _429;
  struct FlitChannel * & _430;
  struct Channel * & _431;
  int (*__vtbl_ptr_type) () * _433;
  long unsigned int _434;
  struct FlitChannel * & _435;
  struct Channel * & _438;
  struct Router * & _442;
  struct FlitChannel * & _443;
  long unsigned int _444;
  struct Channel * & _445;
  struct Router * & _446;
  struct FlitChannel * & _447;
  long unsigned int _448;
  struct FlitChannel * & _449;
  struct Channel * & _450;
  long unsigned int _454;
  struct FlitChannel * & _455;
  const struct __ctype_type * _456;
  struct Channel * & _458;
  struct Router * & _462;
  struct FlitChannel * & _463;
  long unsigned int _464;
  struct Channel * & _465;
  struct Router * & _466;
  struct FlitChannel * & _467;
  long unsigned int _468;
  struct FlitChannel * & _469;
  struct Channel * & _470;
  long unsigned int _473;
  struct FlitChannel * & _474;
  struct Channel * & _478;
  struct Router * & _482;
  struct FlitChannel * & _483;
  long unsigned int _484;
  struct Channel * & _485;
  struct Router * & _486;
  struct FlitChannel * & _487;
  long unsigned int _488;
  struct FlitChannel * & _489;
  struct Channel * & _490;
  long unsigned int _494;
  struct FlitChannel * & _495;
  int _cY.78_498;
  struct Channel * & _499;
  struct Router * & _503;
  struct FlitChannel * & _504;
  long unsigned int _505;
  struct Channel * & _506;
  struct Router * & _507;
  struct FlitChannel * & _508;
  long unsigned int _509;
  long unsigned int _510;
  unsigned int _511;
  unsigned int _512;
  long unsigned int _513;
  long unsigned int _514;
  _Bit_type * _515;
  long unsigned int _516;
  const struct __ctype_type * _528;
  const struct __ctype_type * _536;
  const struct __ctype_type * _544;
  const struct __ctype_type * _552;
  struct FlitChannel * * pretmp_578;
  int (*__vtbl_ptr_type) () * _584;
  long int _585;
  sizetype _586;
  struct basic_ios * _587;
  struct basic_ostream & _590;
  char _592;
  char_type _595;
  int _596;
  int (*__vtbl_ptr_type) () * _600;
  int (*__vtbl_ptr_type) () _601;
  _Bit_type * _603;
  void * PROF_605;
  char_type _607;
  int _611;
  int _619;
  int _630;
  struct Channel * * pretmp_634;
  int (*__vtbl_ptr_type) () * iftmp.64_636;
  long int _637;
  sizetype iftmp.65_638;
  struct basic_ios * _639;
  int (*__vtbl_ptr_type) () * iftmp.66_640;
  bool _642;
  int _cX.79_643;
  long int _649;
  sizetype iftmp.71_650;
  struct basic_ios * _651;
  size_t _652;
  long unsigned int _653;
  long unsigned int * _655;
  long int __n.86_656;
  long int _657;
  long unsigned int _658;
  long unsigned int _659;
  unsigned int _665;
  char_type * const _668;
  char_type * const _669;
  char_type * const _670;
  char * const _671;
  char_type * const _672;
  char * const _673;
  char * const _675;
  char * const _676;
  char * const _677;
  long int __last.25_678;
  long int __first.26_679;
  difference_type _680;
  long unsigned int __dnew.22_681;
  char * _682;
  long unsigned int __dnew.23_683;
  const char_type _685;
  char * _688;
  long int __last.25_690;
  long int __first.26_691;
  difference_type _692;
  long unsigned int __dnew.22_693;
  char * _694;
  long unsigned int __dnew.23_695;
  const char_type _697;
  char * _700;
  struct TimedModule * * _701;
  struct TimedModule * * _702;
  struct TimedModule * * _703;
  struct TimedModule * * _706;
  struct FlitChannel * * pretmp_707;
  struct FlitChannel * * pretmp_708;
  int _709;
  long unsigned int _711;
  char * const _715;
  struct Channel * * pretmp_724;
  const size_type _725;
  _Ios_Openmode _726;
  int __a.104_727;
  int _728;
  long unsigned int _729;
  char * const _731;
  long int _733;
  sizetype _734;
  struct basic_ios * _735;
  struct basic_ostream & _738;
  char _740;
  char_type _743;
  int _745;
  unsigned long _746;
  int (*__vtbl_ptr_type) () * _748;
  int (*__vtbl_ptr_type) () _749;
  void * PROF_753;
  char_type _755;
  struct FlitChannel * * pretmp_756;
  struct FlitChannel * * pretmp_757;
  int (*__vtbl_ptr_type) () * _758;
  long int _759;
  sizetype _760;
  struct basic_ios * _761;
  struct basic_ostream & _764;
  int _765;
  char _766;
  char_type _769;
  int _771;
  long unsigned int * _772;
  int (*__vtbl_ptr_type) () * _774;
  int (*__vtbl_ptr_type) () _775;
  void * PROF_779;
  char_type _781;
  int (*__vtbl_ptr_type) () * _784;
  long int _785;
  sizetype _786;
  struct basic_ios * _787;
  struct basic_ostream & _790;
  int _791;
  char _792;
  char_type _795;
  struct Channel * * pretmp_796;
  unsigned long _797;
  unsigned long _798;
  int (*__vtbl_ptr_type) () * _800;
  int (*__vtbl_ptr_type) () _801;
  long unsigned int prephitmp_802;
  int _803;
  void * PROF_805;
  char_type _807;
  int (*__vtbl_ptr_type) () * _810;
  long int _811;
  sizetype _812;
  struct basic_ios * _813;
  struct basic_ostream & _816;
  char _818;
  char_type _821;
  int (*__vtbl_ptr_type) () * _826;
  int (*__vtbl_ptr_type) () _827;
  void * PROF_831;
  char_type _833;
  struct FlitChannel * * pretmp_834;
  long unsigned int prephitmp_844;
  bool _846;
  int _858;
  struct Channel * * pretmp_869;
  char * const _972;
  int _973;
  struct Channel * * pretmp_983;
  int _994;
  unsigned long _1002;
  struct FlitChannel * * pretmp_1035;
  struct Channel * * pretmp_1037;
  long unsigned int prephitmp_1039;
  struct FlitChannel * * pretmp_1040;
  struct Channel * * pretmp_1042;
  int pretmp_1048;
  int pretmp_1049;
  int prephitmp_1050;
  int pretmp_1051;
  int pretmp_1052;
  int prephitmp_1053;
  int pretmp_1054;
  int pretmp_1055;
  int prephitmp_1056;
  int pretmp_1057;
  int pretmp_1058;
  int prephitmp_1059;
  int pretmp_1060;
  int pretmp_1062;
  int pretmp_1064;
  int prephitmp_1065;
  int pretmp_1066;
  int pretmp_1068;
  int prephitmp_1069;
  int pretmp_1070;
  int pretmp_1072;
  int pretmp_1074;
  int prephitmp_1075;
  int pretmp_1077;
  int pretmp_1079;
  int prephitmp_1080;
  int prephitmp_1081;
  int prephitmp_1101;
  struct TimedModule * * pretmp_1105;
  struct TimedModule * * prephitmp_1106;
  size_type pretmp_1107;
  size_type prephitmp_1108;
  char * const pretmp_1109;
  char * const prephitmp_1110;
  size_type pretmp_1111;
  size_type prephitmp_1112;
  char * const pretmp_1113;
  char * const prephitmp_1114;
  int pretmp_1122;
  int pretmp_1123;
  int prephitmp_1124;
  struct Channel * pretmp_1125;
  struct Channel * prephitmp_1126;
  struct FlitChannel * pretmp_1127;
  struct FlitChannel * prephitmp_1128;
  struct Channel * pretmp_1129;
  struct Channel * prephitmp_1130;
  struct FlitChannel * pretmp_1131;
  struct FlitChannel * prephitmp_1132;
  struct Channel * pretmp_1133;
  struct Channel * prephitmp_1134;
  struct FlitChannel * pretmp_1135;
  struct FlitChannel * prephitmp_1136;
  struct Channel * pretmp_1137;
  struct Channel * prephitmp_1138;
  struct FlitChannel * pretmp_1139;
  struct FlitChannel * prephitmp_1140;
  int pretmp_1141;
  int prephitmp_1142;
  int pretmp_1143;
  int prephitmp_1144;

  <bb 2>:
  gTrace.77_30 = gTrace;
  if (gTrace.77_30 != 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 3>:
  # DEBUG __out => &cout
  # DEBUG __s => "Setup Finished Router"
  # DEBUG __s => "Setup Finished Router"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Setup Finished Router", 21);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _584 = cout._vptr.basic_ostream;
  _585 = MEM[(long int *)_584 + -24B];
  _586 = (sizetype) _585;
  _587 = &cout + _586;
  # DEBUG this => _587
  # DEBUG __c => 10
  _456 = MEM[(const struct basic_ios *)_587]._M_ctype;
  # DEBUG __f => _456
  if (_456 == 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  std::__throw_bad_cast ();

  <bb 5>:
  # DEBUG this => _456
  # DEBUG __c => 10
  _592 = MEM[(const struct ctype *)_456]._M_widen_ok;
  if (_592 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _595 = MEM[(const struct ctype *)_456]._M_widen[10];
  pretmp_1122 = (int) _595;
  goto <bb 9>;

  <bb 7>:
  # DEBUG this => _456
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_456);
  _600 = MEM[(const struct ctype *)_456].D.20312._vptr.facet;
  _601 = MEM[(int (*__vtbl_ptr_type) () *)_600 + 48B];
  PROF_605 = [obj_type_ref] OBJ_TYPE_REF(_601;(const struct ctype)_456->6);
  if (PROF_605 == do_widen)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  _607 = OBJ_TYPE_REF(_601;(const struct ctype)_456->6) (_456, 10);
  pretmp_1123 = (int) _607;

  <bb 9>:
  # prephitmp_1124 = PHI <pretmp_1122(6), 10(7), pretmp_1123(8)>
  _590 = std::basic_ostream<char>::put (&cout, prephitmp_1124);
  # DEBUG __os => _590
  std::basic_ostream<char>::flush (_590);

  <bb 10>:
  # DEBUG D#37 => &D.46326
  # DEBUG this => D#37
  # DEBUG D#36 => D#37
  # DEBUG this => D#36
  # DEBUG D#109 => &D.46326
  # DEBUG this => &D.46327
  # DEBUG __s => "use_noc_latency"
  # DEBUG __a => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => &D.46327
  # DEBUG D#106 => &D.46327._M_dataplus
  # DEBUG D#53 => D#108
  # DEBUG this => D#106
  # DEBUG __dat => &D.46327.D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#106
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.46327]._M_p = &D.46327.D.11539._M_local_buf;
  # DEBUG __s => "use_noc_latency"
  # DEBUG this => &D.46327
  # DEBUG __beg => "use_noc_latency"
  # DEBUG __end => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG this => &D.46327
  # DEBUG __beg => "use_noc_latency"
  # DEBUG __end => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG this => &D.46327
  # DEBUG __beg => "use_noc_latency"
  # DEBUG __end => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG __ptr => "use_noc_latency"
  # DEBUG __first => "use_noc_latency"
  # DEBUG __last => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => "use_noc_latency"
  # DEBUG __last => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG __dnew => 15
  # DEBUG D#5 => &D.46327
  # DEBUG this => D#5
  # DEBUG __p => &D.46327.D.11539._M_local_buf
  # DEBUG __k1 => "use_noc_latency"
  # DEBUG __k2 => &MEM[(void *)"use_noc_latency" + 15B]
  # DEBUG __d => &D.46327.D.11539._M_local_buf
  # DEBUG __s => "use_noc_latency"
  # DEBUG __n => 15
  # DEBUG __s1 => &D.46327.D.11539._M_local_buf
  # DEBUG __s2 => "use_noc_latency"
  # DEBUG __n => 15
  __builtin_memcpy (&D.46327.D.11539._M_local_buf, "use_noc_latency", 15);
  # DEBUG this => &D.46327
  # DEBUG __n => 15
  # DEBUG D#10 => &D.46327
  # DEBUG __length => 15
  # DEBUG this => D#10
  MEM[(size_type *)&D.46327 + 8B] = 15;
  # DEBUG D#5 => &D.46327
  # DEBUG this => D#5
  # DEBUG __c1 => &MEM[(void *)&D.46327 + 31B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.46327 + 31] = 0;
  # DEBUG D#341 => {CLOBBER}
  # DEBUG __dnew => D#341
  _35 = Configuration::GetInt (config_33(D), &D.46327);

  <bb 11>:
  # DEBUG use_noc_latency => _35 == 1
  # DEBUG this => &D.46327
  # DEBUG this => &D.46327
  # DEBUG this => &D.46327
  _38 = MEM[(char * *)&D.46327];
  # DEBUG D#5 => &D.46327
  # DEBUG this => D#5
  # DEBUG this => &D.46327
  if (&D.46327.D.11539._M_local_buf != _38)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#68 => D.46327.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46327
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46327
  # DEBUG this => D#5
  # DEBUG this => &D.46327
  # DEBUG D#65 => &D.46327._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _38
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _38
  # DEBUG this => D#59
  # DEBUG D.54979 => D#60
  operator delete (_38);

  <bb 13>:
  # DEBUG D#69 => &D.46327._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46327 ={v} {CLOBBER};
  # DEBUG this => &D.46326
  # DEBUG this => &D.46326
  # DEBUG this => &name
  # DEBUG __mode => 16
  # DEBUG D#75 => &name.D.26644
  # DEBUG this => D#75
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&name + 112B].D.23348);
  MEM[(struct basic_ios *)&name + 112B].D.23348._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_num_get = 0B;
  # DEBUG this => &name.D.26641
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.64_636 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  MEM[(struct basic_ostream *)&name]._vptr.basic_ostream = iftmp.64_636;
  _637 = MEM[(long int *)iftmp.64_636 + -24B];
  iftmp.65_638 = (sizetype) _637;
  _639 = &name.D.26641 + iftmp.65_638;
  iftmp.66_640 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _639->D.23348._vptr.ios_base = iftmp.66_640;
  std::basic_ios<char>::init (_639, 0B);

  <bb 14>:
  name.D.26641._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&name + 112B].D.23348._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#73 => &name._M_stringbuf
  # DEBUG this => D#73
  # DEBUG __mode => NULL
  # DEBUG D#56 => &MEM[(struct basic_stringbuf *)D#73].D.26491
  # DEBUG this => D#56
  MEM[(struct basic_streambuf *)&name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&name + 8B].D.26491._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&name + 8B]._M_mode = 16;
  # DEBUG D#55 => &MEM[(struct basic_stringbuf *)D#73]._M_string
  # DEBUG this => D#55
  # DEBUG this => D#37
  # DEBUG D#36 => D#37
  # DEBUG this => D#36
  # DEBUG this => D#55
  # DEBUG D#54 => &MEM[(struct basic_string *)D#55]._M_dataplus
  # DEBUG this => D#54
  # DEBUG __dat => &MEM[(struct basic_string *)&name + 80B].D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#54
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&name + 80B]._M_p = &MEM[(struct basic_string *)&name + 80B].D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#55
  # DEBUG __n => 0
  # DEBUG D#10 => D#55
  # DEBUG __length => 0
  # DEBUG this => D#10
  MEM[(size_type *)&name + 88B] = 0;
  # DEBUG D#5 => D#55
  # DEBUG this => D#5
  # DEBUG __c1 => &MEM[(struct basic_string *)&name + 80B].D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&name + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&name + 112B], &name._M_stringbuf.D.26491);
  goto <bb 20>;

<L109>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&name._M_stringbuf);
  resx 42

<L110>:
  # DEBUG this => &name.D.26641
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _649 = MEM[(long int *)iftmp.64_636 + -24B];
  iftmp.71_650 = (sizetype) _649;
  _651 = &name.D.26641 + iftmp.71_650;
  _651->D.23348._vptr.ios_base = iftmp.66_640;
  MEM[(struct  &)&name] ={v} {CLOBBER};
  resx 41

<L116>:
  goto <bb 19> (<L111>);

<L115>:

<L111>:
  # DEBUG D#74 => &name.D.26644
  # DEBUG this => D#74
  MEM[(struct basic_ios *)&name + 112B].D.23348._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&name + 112B].D.23348);
  resx 40

  <bb 20>:
  # DEBUG this => &D.46332
  # DEBUG this => &D.46332
  _42 = this_41(D)->D.45063._nodes;
  _43 = (long unsigned int) _42;
  # DEBUG this => &channel_vector
  # DEBUG __n => _43
  # DEBUG __value => &D.46330
  # DEBUG __a => &D.46332
  # DEBUG D#123 => &channel_vector.D.43041
  # DEBUG this => D#123
  # DEBUG __a => &D.46332
  # DEBUG this => NULL
  # DEBUG D.53234 => &D.46332
  # DEBUG this => NULL
  # DEBUG D#83 => &D#123->_M_impl
  # DEBUG this => D#83
  # DEBUG __a => NULL
  # DEBUG this => D#83
  # DEBUG __a => NULL
  # DEBUG this => D#83
  # DEBUG D.53208 => NULL
  # DEBUG D#82 => &D#83->_M_start
  # DEBUG this => D#82
  # DEBUG D#15 => &D#82->D.15535
  # DEBUG this => D#15
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#15
  MEM[(struct _Bit_iterator_base *)&channel_vector]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)&channel_vector]._M_offset = 0;
  # DEBUG D#81 => &D#83->_M_finish
  # DEBUG this => D#81
  # DEBUG D#15 => &D#81->D.15535
  # DEBUG this => D#15
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#15
  MEM[(struct _Bit_iterator_base *)&channel_vector + 16B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)&channel_vector + 16B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)&channel_vector]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &channel_vector
  # DEBUG __n => _43
  # DEBUG D#121 => &channel_vector.D.43041
  # DEBUG D#119 => D#121
  # DEBUG __n => _43
  # DEBUG this => D#119
  # DEBUG D#118 => D#119
  # DEBUG __n => _43
  _39 = _43 + 63;
  _652 = _39 >> 6;
  # DEBUG D#117 => &D#118->_M_impl
  # DEBUG D#116 => D#117
  # DEBUG __n => NULL
  # DEBUG __a => D#116
  # DEBUG D#115 => D#116
  # DEBUG D#113 => D#115
  # DEBUG D#114 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#113
  # DEBUG D.57449 => D#114
  # DEBUG D#112 => D#113
  # DEBUG D#111 => D#112
  # DEBUG this => D#111
  _653 = _652 * 8;
  __first_654 = operator new (_653);

  <bb 21>:
  # DEBUG __q => __first_654
  # DEBUG __n => _43
  _655 = __first_654 + _653;
  channel_vector.D.43041._M_impl._M_end_of_storage = _655;
  # DEBUG __r => __first_654
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#16
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#16
  MEM[(struct _Bit_iterator *)&channel_vector] = __first_654;
  MEM[(struct _Bit_iterator *)&channel_vector + 8B] = 0;
  __n.86_656 = (long int) _42;
  # DEBUG D#120 => &channel_vector.D.43041._M_impl._M_start
  # DEBUG this => D#120
  # DEBUG __i => __n.86_656
  # DEBUG __tmp$_M_p => __first_654
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => __n.86_656
  # DEBUG D#18 => &__tmp.D.15535
  # DEBUG this => D#18
  # DEBUG __i => __n.86_656
  # DEBUG __n => __n.86_656
  _657 = __n.86_656 / 64;
  _658 = (long unsigned int) _657;
  _659 = _658 * 8;
  __tmp$_M_p_660 = __first_654 + _659;
  # DEBUG __tmp$_M_p => __tmp$_M_p_660
  __n_661 = __n.86_656 % 64;
  # DEBUG __n => __n_661
  if (__n_661 < 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  __n_662 = __n_661 + 64;
  # DEBUG __n => __n_662
  __tmp$_M_p_663 = __tmp$_M_p_660 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_663

  <bb 23>:
  # __n_664 = PHI <__n_661(21), __n_662(22)>
  # __tmp$_M_p_666 = PHI <__tmp$_M_p_660(21), __tmp$_M_p_663(22)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_666
  # DEBUG __n => __n_664
  _665 = (unsigned int) __n_664;
  # DEBUG __tmp$_M_offset => _665
  # DEBUG D#19 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#19
  # DEBUG D#20 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#20
  MEM[(struct _Bit_iterator *)&channel_vector + 16B] = __tmp$_M_p_666;
  MEM[(struct _Bit_iterator *)&channel_vector + 24B] = _665;
  # DEBUG D#122 => &channel_vector.D.43041._M_impl
  # DEBUG D#44 => D#122
  # DEBUG this => D#44
  # DEBUG D#39 => &D.57411
  # DEBUG __first => __first_654
  # DEBUG __last => _655
  # DEBUG D#38 => D#39
  # DEBUG __value => D#38
  # DEBUG __it => _655
  # DEBUG __it => _655
  # DEBUG __it => __first_654
  # DEBUG __it => __first_654
  # DEBUG D#35 => D#38
  # DEBUG __first => __first_654
  # DEBUG __last => _655
  # DEBUG __value => D#35
  # DEBUG __tmp => 0
  # DEBUG __first => __first_654
  if (__first_654 == _655)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG node => 0
  _791 = this_41(D)->D.45063._size;
  if (_791 <= 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 25>:
  _798 = (unsigned long) _655;
  _772 = __first_654 + 8;
  _746 = (unsigned long) _772;
  _797 = _798 - _746;
  _1002 = _797 /[ex] 8;
  _18 = _1002 & 2305843009213693951;
  _22 = _18 + 1;
  _365 = _22 * 8;
  __builtin_memset (__first_654, 0, _365);
  goto <bb 24>;

<L108>:
  # DEBUG this => &channel_vector.D.43041
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&channel_vector.D.43041);
  # DEBUG D#94 => &MEM[(struct _Bvector_base *)&channel_vector]._M_impl
  # DEBUG this => D#94
  # DEBUG this => D#94
  # DEBUG this => D#94
  MEM[(struct  &)&channel_vector] ={v} {CLOBBER};
  resx 38

  <bb 27>:
  # DEBUG i => 0
  _709 = this_41(D)->D.45063._nodes;
  if (_709 <= 0)
    goto <bb 333>;
  else
    goto <bb 327>;

  <bb 28>:

  <bb 29>:
  # node_620 = PHI <0(28), node_349(293)>
  # DEBUG node => node_620
  _48 = this_41(D)->_k;
  y_index_49 = node_620 / _48;
  # DEBUG y_index => y_index_49
  x_index_50 = node_620 % _48;
  # DEBUG x_index => x_index_50
  _51 = this_41(D)->_n;
  _52 = _51 * 2;
  _53 = this_41(D)->_c;
  degree_in_54 = _52 + _53;
  # DEBUG degree_in => degree_in_54
  # DEBUG degree_out => degree_in_54
  # DEBUG __out => &name.D.26641
  # DEBUG __s => "router_"
  # DEBUG __s => "router_"
  std::__ostream_insert<char, std::char_traits<char> > (&name.D.26641, "router_", 7);

  <bb 30>:
  _58 = std::basic_ostream<char>::operator<< (&name.D.26641, y_index_49);
  goto <bb 32>;

<L119>:
  goto <bb 352> (<L95>);

  <bb 32>:
  # DEBUG __out => _58
  __c = 95;
  # DEBUG __c => __c
  _56 = std::__ostream_insert<char, std::char_traits<char> > (_58, &__c, 1);
  goto <bb 34>;

<L120>:
  goto <bb 352> (<L95>);

  <bb 34>:
  std::basic_ostream<char>::operator<< (_56, x_index_50);
  goto <bb 36>;

<L121>:
  goto <bb 352> (<L95>);

  <bb 36>:
  _60 = (long unsigned int) node_620;
  # DEBUG D#205 => &this_41(D)->D.45063._routers
  _412 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#205
  # DEBUG __n => _60
  # DEBUG this => D#32
  _339 = _60 * 8;
  _335 = _412 + _339;
  # DEBUG this => &name
  # DEBUG this => &name._M_stringbuf
  # DEBUG this => &D.46336
  # DEBUG this => D#37
  # DEBUG D#36 => D#37
  # DEBUG this => D#36
  # DEBUG this => &D.46336
  # DEBUG D#54 => &D.46336._M_dataplus
  # DEBUG this => D#54
  # DEBUG __dat => &D.46336.D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#54
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.46336]._M_p = &D.46336.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.46336
  # DEBUG __n => 0
  # DEBUG D#10 => &D.46336
  # DEBUG __length => 0
  # DEBUG this => D#10
  MEM[(size_type *)&D.46336 + 8B] = 0;
  # DEBUG D#5 => &D.46336
  # DEBUG this => D#5
  # DEBUG __c1 => &D.46336.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.46336 + 16] = 0;
  # DEBUG D#143 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26491
  _668 = MEM[(char_type * *)&name + 48B];
  # DEBUG D#2 => D#143
  # DEBUG this => D#2
  if (_668 != 0B)
    goto <bb 37>;
  else
    goto <bb 59>;

  <bb 37>:
  # DEBUG D#144 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26491
  # DEBUG D#2 => D#144
  # DEBUG this => D#2
  # DEBUG D#145 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26491
  _669 = MEM[(char_type * *)&name + 32B];
  # DEBUG D#3 => D#145
  # DEBUG this => D#3
  if (_668 > _669)
    goto <bb 38>;
  else
    goto <bb 48>;

  <bb 38>:
  # DEBUG this => D#37
  # DEBUG D#36 => D#37
  # DEBUG this => D#36
  # DEBUG D#148 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26491
  # DEBUG D#2 => D#148
  # DEBUG this => D#2
  # DEBUG D#149 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26491
  _670 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#4 => D#149
  # DEBUG this => D#4
  # DEBUG this => &D.57598
  # DEBUG __beg => _670
  # DEBUG __end => _668
  # DEBUG __a => NULL
  # DEBUG this => &D.57598
  # DEBUG D#141 => &D.57598._M_dataplus
  # DEBUG this => D#141
  # DEBUG __dat => &D.57598.D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#141
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.57598]._M_p = &D.57598.D.11539._M_local_buf;
  # DEBUG this => &D.57598
  # DEBUG __beg => _670
  # DEBUG __end => _668
  # DEBUG this => &D.57598
  # DEBUG __beg => _670
  # DEBUG __end => _668
  # DEBUG this => &D.57598
  # DEBUG __beg => _670
  # DEBUG __end => _668
  # DEBUG __ptr => _670
  if (_670 == 0B)
    goto <bb 357>;
  else
    goto <bb 356>;

  <bb 39>:
  _682 = std::__cxx11::basic_string<char>::_M_create (&D.57598, &__dnew, 0);

  <bb 40>:
  # DEBUG D#8 => &D.57598
  # DEBUG __p => _682
  # DEBUG this => D#8
  MEM[(char * *)&D.57598] = _682;
  __dnew.23_683 = __dnew;
  # DEBUG D#9 => &D.57598
  # DEBUG __capacity => __dnew.23_683
  # DEBUG this => D#9
  MEM[(size_type *)&D.57598 + 16B] = __dnew.23_683;
  # DEBUG D#5 => &D.57598
  # DEBUG this => D#5
  # DEBUG __p => _682
  # DEBUG __k1 => _670
  # DEBUG __k2 => _668
  # DEBUG __d => _682
  # DEBUG __s => _670
  # DEBUG __n => __dnew.22_681
  goto <bb 43>;

  <bb 41>:
  # DEBUG D#5 => &D.57598
  # DEBUG this => D#5
  # DEBUG __p => &D.57598.D.11539._M_local_buf
  # DEBUG __k1 => _670
  # DEBUG __k2 => _668
  # DEBUG __d => &D.57598.D.11539._M_local_buf
  # DEBUG __s => _670
  # DEBUG __n => __dnew.22_681
  if (__dnew.22_681 == 1)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  _685 = MEM[(const char_type &)_670];
  # DEBUG D#11 => _670
  # DEBUG __c1 => &D.57598.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.57598 + 16] = _685;
  goto <bb 44>;

  <bb 43>:
  # _972 = PHI <&D.57598.D.11539._M_local_buf(41), _682(40)>
  # DEBUG D#5 => &D.57598
  # DEBUG this => D#5
  # DEBUG __p => _972
  # DEBUG __k1 => _670
  # DEBUG __k2 => _668
  # DEBUG __d => _972
  # DEBUG __s => _670
  # DEBUG __n => __dnew.22_681
  # DEBUG __s1 => _972
  # DEBUG __s2 => _670
  # DEBUG __n => __dnew.22_681
  __builtin_memcpy (_972, _670, __dnew.22_681);
  pretmp_1111 = __dnew;
  pretmp_1113 = MEM[(char * *)&D.57598];

  <bb 44>:
  # prephitmp_1112 = PHI <__dnew.22_681(42), pretmp_1111(43)>
  # prephitmp_1114 = PHI <&D.57598.D.11539._M_local_buf(42), pretmp_1113(43)>
  # DEBUG D#347 => __dnew
  # DEBUG this => &D.57598
  # DEBUG __n => D#347
  # DEBUG D#10 => &D.57598
  # DEBUG __length => D#347
  # DEBUG this => D#10
  MEM[(size_type *)&D.57598 + 8B] = prephitmp_1112;
  # DEBUG D#5 => &D.57598
  # DEBUG this => D#5
  _688 = prephitmp_1114 + prephitmp_1112;
  # DEBUG __c1 => _688
  # DEBUG __c2 => D#11
  MEM[(char_type &)_688] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.46336
  # DEBUG __str => &D.57598
  # DEBUG this => &D.46336
  # DEBUG __str => &D.57598
  std::__cxx11::basic_string<char>::_M_assign (&D.46336, &D.57598);

  <bb 45>:
  # DEBUG this => &D.57598
  # DEBUG this => &D.57598
  # DEBUG this => &D.57598
  _671 = MEM[(char * *)&D.57598];
  # DEBUG D#5 => &D.57598
  # DEBUG this => D#5
  # DEBUG this => &D.57598
  if (&D.57598.D.11539._M_local_buf != _671)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  # DEBUG D#68 => D.57598.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.57598
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.57598
  # DEBUG this => D#5
  # DEBUG this => &D.57598
  # DEBUG D#65 => &D.57598._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _671
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _671
  # DEBUG this => D#59
  # DEBUG D.57557 => D#60
  operator delete (_671);

  <bb 47>:
  # DEBUG D#69 => &D.57598._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.57598 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 74>;

  <bb 48>:
  # DEBUG this => D#37
  # DEBUG D#36 => D#37
  # DEBUG this => D#36
  # DEBUG D#146 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26491
  # DEBUG D#3 => D#146
  # DEBUG this => D#3
  # DEBUG D#147 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26491
  _672 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#4 => D#147
  # DEBUG this => D#4
  # DEBUG this => &D.57597
  # DEBUG __beg => _672
  # DEBUG __end => _669
  # DEBUG __a => NULL
  # DEBUG this => &D.57597
  # DEBUG D#141 => &D.57597._M_dataplus
  # DEBUG this => D#141
  # DEBUG __dat => &D.57597.D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#141
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.57597]._M_p = &D.57597.D.11539._M_local_buf;
  # DEBUG this => &D.57597
  # DEBUG __beg => _672
  # DEBUG __end => _669
  # DEBUG this => &D.57597
  # DEBUG __beg => _672
  # DEBUG __end => _669
  # DEBUG this => &D.57597
  # DEBUG __beg => _672
  # DEBUG __end => _669
  # DEBUG __ptr => _672
  _149 = _669 != 0B;
  _642 = _672 == 0B;
  _846 = _149 & _642;
  if (_846 != 0)
    goto <bb 359>;
  else
    goto <bb 361>;

  <bb 49>:
  _694 = std::__cxx11::basic_string<char>::_M_create (&D.57597, &__dnew, 0);
  goto <bb 51>;

<L123>:
  goto <bb 70> (<L114>);

  <bb 51>:
  # DEBUG D#8 => &D.57597
  # DEBUG __p => _694
  # DEBUG this => D#8
  MEM[(char * *)&D.57597] = _694;
  __dnew.23_695 = __dnew;
  # DEBUG D#9 => &D.57597
  # DEBUG __capacity => __dnew.23_695
  # DEBUG this => D#9
  MEM[(size_type *)&D.57597 + 16B] = __dnew.23_695;
  # DEBUG D#5 => &D.57597
  # DEBUG this => D#5
  # DEBUG __p => _694
  # DEBUG __k1 => _672
  # DEBUG __k2 => _669
  # DEBUG __d => _694
  # DEBUG __s => _672
  # DEBUG __n => __dnew.22_693
  goto <bb 54>;

  <bb 52>:
  # DEBUG D#5 => &D.57597
  # DEBUG this => D#5
  # DEBUG __p => &D.57597.D.11539._M_local_buf
  # DEBUG __k1 => _672
  # DEBUG __k2 => _669
  # DEBUG __d => &D.57597.D.11539._M_local_buf
  # DEBUG __s => _672
  # DEBUG __n => __dnew.22_693
  if (__dnew.22_693 == 1)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  _697 = MEM[(const char_type &)_672];
  # DEBUG D#11 => _672
  # DEBUG __c1 => &D.57597.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.57597 + 16] = _697;
  goto <bb 55>;

  <bb 54>:
  # _715 = PHI <&D.57597.D.11539._M_local_buf(52), _694(51)>
  # DEBUG D#5 => &D.57597
  # DEBUG this => D#5
  # DEBUG __p => _715
  # DEBUG __k1 => _672
  # DEBUG __k2 => _669
  # DEBUG __d => _715
  # DEBUG __s => _672
  # DEBUG __n => __dnew.22_693
  # DEBUG __s1 => _715
  # DEBUG __s2 => _672
  # DEBUG __n => __dnew.22_693
  __builtin_memcpy (_715, _672, __dnew.22_693);
  pretmp_1107 = __dnew;
  pretmp_1109 = MEM[(char * *)&D.57597];

  <bb 55>:
  # prephitmp_1108 = PHI <__dnew.22_693(53), pretmp_1107(54)>
  # prephitmp_1110 = PHI <&D.57597.D.11539._M_local_buf(53), pretmp_1109(54)>
  # DEBUG D#348 => __dnew
  # DEBUG this => &D.57597
  # DEBUG __n => D#348
  # DEBUG D#10 => &D.57597
  # DEBUG __length => D#348
  # DEBUG this => D#10
  MEM[(size_type *)&D.57597 + 8B] = prephitmp_1108;
  # DEBUG D#5 => &D.57597
  # DEBUG this => D#5
  _700 = prephitmp_1110 + prephitmp_1108;
  # DEBUG __c1 => _700
  # DEBUG __c2 => D#11
  MEM[(char_type &)_700] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.46336
  # DEBUG __str => &D.57597
  # DEBUG this => &D.46336
  # DEBUG __str => &D.57597
  std::__cxx11::basic_string<char>::_M_assign (&D.46336, &D.57597);

  <bb 56>:
  # DEBUG this => &D.57597
  # DEBUG this => &D.57597
  # DEBUG this => &D.57597
  _673 = MEM[(char * *)&D.57597];
  # DEBUG D#5 => &D.57597
  # DEBUG this => D#5
  # DEBUG this => &D.57597
  if (&D.57597.D.11539._M_local_buf != _673)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG D#68 => D.57597.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.57597
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.57597
  # DEBUG this => D#5
  # DEBUG this => &D.57597
  # DEBUG D#65 => &D.57597._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _673
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _673
  # DEBUG this => D#59
  # DEBUG D.57520 => D#60
  operator delete (_673);

  <bb 58>:
  # DEBUG D#69 => &D.57597._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.57597 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 74>;

  <bb 59>:
  # DEBUG this => &D.46336
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => &D.46336
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.46336, &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string);
  goto <bb 74>;

<L124>:
  goto <bb 70> (<L114>);

<L112>:
  # DEBUG this => &D.57598
  # DEBUG this => &D.57598
  # DEBUG this => &D.57598
  _675 = MEM[(char * *)&D.57598];
  # DEBUG D#5 => &D.57598
  # DEBUG this => D#5
  # DEBUG this => &D.57598
  if (&D.57598.D.11539._M_local_buf != _675)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # DEBUG D#68 => D.57598.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.57598
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.57598
  # DEBUG this => D#5
  # DEBUG this => &D.57598
  # DEBUG D#65 => &D.57598._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _675
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _675
  # DEBUG this => D#59
  # DEBUG D.57501 => D#60
  operator delete (_675);

  <bb 63>:
  # DEBUG D#69 => &D.57598._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.57598 ={v} {CLOBBER};
  resx 45

<L125>:
  goto <bb 70> (<L114>);

<L113>:
  # DEBUG this => &D.57597
  # DEBUG this => &D.57597
  # DEBUG this => &D.57597
  _676 = MEM[(char * *)&D.57597];
  # DEBUG D#5 => &D.57597
  # DEBUG this => D#5
  # DEBUG this => &D.57597
  if (&D.57597.D.11539._M_local_buf != _676)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # DEBUG D#68 => D.57597.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.57597
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.57597
  # DEBUG this => D#5
  # DEBUG this => &D.57597
  # DEBUG D#65 => &D.57597._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _676
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _676
  # DEBUG this => D#59
  # DEBUG D.57485 => D#60
  operator delete (_676);

  <bb 67>:
  # DEBUG D#69 => &D.57597._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.57597 ={v} {CLOBBER};
  resx 44

<L126>:
  goto <bb 70> (<L114>);

<L122>:

<L114>:
  # DEBUG this => &D.46336
  # DEBUG this => &D.46336
  # DEBUG this => &D.46336
  _677 = MEM[(char * *)&D.46336];
  # DEBUG D#5 => &D.46336
  # DEBUG this => D#5
  # DEBUG this => &D.46336
  if (&D.46336.D.11539._M_local_buf != _677)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # DEBUG D#68 => D.46336.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46336
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46336
  # DEBUG this => D#5
  # DEBUG this => &D.46336
  # DEBUG D#65 => &D.46336._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _677
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _677
  # DEBUG this => D#59
  # DEBUG D.57474 => D#60
  operator delete (_677);

  <bb 72>:
  # DEBUG D#69 => &D.46336._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  resx 43

<L127>:
  goto <bb 352> (<L95>);

  <bb 74>:
  _62 = &this_41(D)->D.45063.D.44951.D.33715;
  _64 = Router::NewRouter (config_33(D), _62, &D.46336, node_620, degree_in_54, degree_in_54);

  <bb 75>:
  *_335 = _64;
  # DEBUG this => &D.46336
  # DEBUG this => &D.46336
  # DEBUG this => &D.46336
  _325 = MEM[(char * *)&D.46336];
  # DEBUG D#5 => &D.46336
  # DEBUG this => D#5
  # DEBUG this => &D.46336
  if (&D.46336.D.11539._M_local_buf != _325)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  # DEBUG D#68 => D.46336.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46336
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46336
  # DEBUG this => D#5
  # DEBUG this => &D.46336
  # DEBUG D#65 => &D.46336._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _325
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _325
  # DEBUG this => D#59
  # DEBUG D.55013 => D#60
  operator delete (_325);

  <bb 77>:
  # DEBUG D#69 => &D.46336._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46336 ={v} {CLOBBER};
  # DEBUG D#206 => &this_41(D)->D.45063._routers
  _413 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#206
  # DEBUG __n => _60
  # DEBUG this => D#32
  _327 = _413 + _339;
  _67 = *_327;
  D.46337 = _67;
  # DEBUG D#355 => &this_41(D)->D.45063._timed_modules
  # DEBUG this => D#355
  # DEBUG __x => &D.46337
  _701 = MEM[(struct deque *)this_41(D) + 280B].D.44837._M_impl._M_finish._M_cur;
  _702 = MEM[(struct deque *)this_41(D) + 280B].D.44837._M_impl._M_finish._M_last;
  _703 = _702 + 18446744073709551608;
  if (_701 != _703)
    goto <bb 78>;
  else
    goto <bb 81>;

  <bb 78>:
  # DEBUG D#194 => &D#355->D.44837._M_impl
  # DEBUG D#47 => D#194
  # DEBUG __p => _701
  # DEBUG __arg => &D.46337
  # DEBUG __a => D#47
  # DEBUG D#46 => D#47
  # DEBUG D#45 => D#46
  # DEBUG __p => _701
  # DEBUG __val => &D.46337
  # DEBUG this => D#45
  # DEBUG D#12 => 8
  # DEBUG __p => _701
  # DEBUG D.52880 => D#12
  if (_701 != 0B)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  *_701 = _67;
  pretmp_1105 = MEM[(struct deque *)this_41(D) + 280B].D.44837._M_impl._M_finish._M_cur;

  <bb 80>:
  # prephitmp_1106 = PHI <_701(78), pretmp_1105(79)>
  _706 = prephitmp_1106 + 8;
  MEM[(struct deque *)this_41(D) + 280B].D.44837._M_impl._M_finish._M_cur = _706;
  goto <bb 83>;

  <bb 81>:
  _69 = &this_41(D)->D.45063._timed_modules;
  std::deque<TimedModule*>::_M_push_back_aux (_69, &D.46337);
  goto <bb 83>;

<L128>:
  goto <bb 352> (<L95>);

  <bb 83>:
  D.46337 ={v} {CLOBBER};
  # DEBUG D#37 => &D.46339
  # DEBUG this => D#37
  # DEBUG D#36 => D#37
  # DEBUG this => D#36
  # DEBUG D#109 => &D.46339
  # DEBUG this => &D.46340
  # DEBUG __s => ""
  # DEBUG __a => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => &D.46340
  # DEBUG D#106 => &D.46340._M_dataplus
  # DEBUG D#53 => D#108
  # DEBUG this => D#106
  # DEBUG __dat => &D.46340.D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#106
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.46340]._M_p = &D.46340.D.11539._M_local_buf;
  # DEBUG __s => ""
  # DEBUG this => &D.46340
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.46340
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.46340
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG __ptr => ""
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG __dnew => 0
  # DEBUG D#356 => MEM[(char * *)&D.46340]
  # DEBUG D#5 => &D.46340
  # DEBUG this => D#5
  # DEBUG __p => D#356
  # DEBUG __k1 => ""
  # DEBUG __k2 => ""
  # DEBUG __d => D#356
  # DEBUG __s => ""
  # DEBUG __n => 0
  # DEBUG __s1 => D#356
  # DEBUG __s2 => ""
  # DEBUG __n => 0
  # DEBUG this => &D.46340
  # DEBUG __n => 0
  # DEBUG D#10 => &D.46340
  # DEBUG __length => 0
  # DEBUG this => D#10
  MEM[(size_type *)&D.46340 + 8B] = 0;
  # DEBUG D#5 => &D.46340
  # DEBUG this => D#5
  # DEBUG __c1 => &D.46340.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.46340 + 16] = 0;
  # DEBUG D#342 => {CLOBBER}
  # DEBUG __dnew => D#342
  # DEBUG this => &name
  # DEBUG __s => &D.46340
  # DEBUG this => &name._M_stringbuf
  # DEBUG __s => &D.46340
  # DEBUG D#7 => &D.46340
  # DEBUG this => D#7
  # DEBUG this => &D.46340
  # DEBUG D#5 => &D.46340
  # DEBUG this => D#5
  # DEBUG this => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG __s => &D.46340.D.11539._M_local_buf
  # DEBUG __n => 0
  _725 = MEM[(long unsigned int *)&name + 88B];
  # DEBUG D#7 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#7
  std::__cxx11::basic_string<char>::_M_replace (&MEM[(struct basic_stringbuf *)&name + 8B]._M_string, 0, _725, &D.46340.D.11539._M_local_buf, 0);

  <bb 84>:
  _726 = MEM[(struct basic_stringbuf *)&name + 8B]._M_mode;
  # DEBUG this => &name._M_stringbuf
  # DEBUG __mode => _726
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => _726
  # DEBUG __b => NULL
  __a.104_727 = (int) _726;
  _728 = __a.104_727 & 3;
  if (_728 != 0)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  # DEBUG D#21 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  __len_730 = MEM[(long unsigned int *)&name + 88B];
  # DEBUG D#7 => D#21
  # DEBUG this => D#7
  # DEBUG __len => __len_730

  <bb 86>:
  # __len_732 = PHI <0(84), __len_730(85)>
  # DEBUG __len => __len_732
  # DEBUG D#22 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#22
  _731 = MEM[(char * *)&name + 80B];
  # DEBUG D#5 => D#22
  # DEBUG this => D#5
  std::__cxx11::basic_stringbuf<char>::_M_sync (&name._M_stringbuf, _731, 0, __len_732);
  goto <bb 88>;

<L130>:
  goto <bb 347> (<L93>);

  <bb 88>:
  # DEBUG this => &D.46340
  # DEBUG this => &D.46340
  # DEBUG this => &D.46340
  _75 = MEM[(char * *)&D.46340];
  # DEBUG D#5 => &D.46340
  # DEBUG this => D#5
  # DEBUG this => &D.46340
  if (&D.46340.D.11539._M_local_buf != _75)
    goto <bb 89>;
  else
    goto <bb 90>;

  <bb 89>:
  # DEBUG D#68 => D.46340.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46340
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46340
  # DEBUG this => D#5
  # DEBUG this => &D.46340
  # DEBUG D#65 => &D.46340._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _75
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _75
  # DEBUG this => D#59
  # DEBUG D.55033 => D#60
  operator delete (_75);

  <bb 90>:
  # DEBUG D#69 => &D.46340._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46340 ={v} {CLOBBER};
  # DEBUG this => &D.46339
  # DEBUG this => &D.46339
  # DEBUG y => 0
  # DEBUG y => 0
  _cY.78_498 = _cY;
  if (_cY.78_498 <= 0)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 91>:
  _114 = this_41(D)->_k;
  x_115 = node_620 % _114;
  # DEBUG x => x_115
  y_116 = node_620 / _114;
  # DEBUG y => y_116
  _117 = this_41(D)->_n;
  _119 = powi (_114, _117);
  goto <bb 113>;

  <bb 92>:
  pretmp_1141 = _cX;

  <bb 93>:
  # y_845 = PHI <0(92), y_113(111)>
  # prephitmp_1081 = PHI <_cY.78_498(92), prephitmp_1144(111)>
  # prephitmp_1142 = PHI <pretmp_1141(92), prephitmp_1101(111)>
  # DEBUG y => y_845
  # DEBUG x => 0
  if (prephitmp_1142 <= 0)
    goto <bb 110>;
  else
    goto <bb 94>;

  <bb 94>:
  _611 = this_41(D)->_k;
  _32 = _611 * prephitmp_1142;
  _994 = y_index_49 * prephitmp_1081;
  _771 = y_845 + _994;
  _973 = _32 * _771;
  _803 = x_index_50 * prephitmp_1142;
  link_610 = _803 + _973;
  # DEBUG link => link_610
  if (link_610 < 0)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  __assert_fail ("link >= 0", "networks/cmesh.cpp", 164, &__PRETTY_FUNCTION__);

  <bb 96>:
  _619 = this_41(D)->D.45063._nodes;
  if (link_610 >= _619)
    goto <bb 97>;
  else
    goto <bb 101>;

  <bb 97>:
  __assert_fail ("link < _nodes", "networks/cmesh.cpp", 165, &__PRETTY_FUNCTION__);

  <bb 98>:
  _78 = this_41(D)->_k;
  _79 = _cX.79_77 * _78;
  _cY.78_80 = _cY;
  _81 = y_index_49 * _cY.78_80;
  _82 = _81 + y_845;
  _83 = _79 * _82;
  _84 = x_index_50 * _cX.79_77;
  _85 = _84 + x_109;
  link_86 = _83 + _85;
  # DEBUG link => link_86
  if (link_86 < 0)
    goto <bb 95>;
  else
    goto <bb 99>;

  <bb 99>:
  _87 = this_41(D)->D.45063._nodes;
  if (link_86 >= _87)
    goto <bb 97>;
  else
    goto <bb 100>;

  <bb 100>:
  goto <bb 102>;

  <bb 101>:

  <bb 102>:
  # x_866 = PHI <0(101), x_109(100)>
  # link_713 = PHI <link_610(101), link_86(100)>
  # DEBUG x => x_866
  # DEBUG link => link_713
  _88 = (long unsigned int) link_713;
  _424 = MEM[(_Bit_type * *)&channel_vector];
  # DEBUG D#33 => &channel_vector
  # DEBUG __n => _88
  # DEBUG this => D#33
  _296 = (unsigned int) _88;
  _294 = _296 & 63;
  _289 = _88 >> 6;
  _284 = _289 * 8;
  _281 = _424 + _284;
  # DEBUG this => NULL
  # DEBUG __x => _281
  # DEBUG __y => _294
  # DEBUG this => D#16
  # DEBUG __x => _281
  # DEBUG __y => _294
  # DEBUG this => D#16
  # DEBUG this => D#17
  # DEBUG this => D#17
  _279 = 1 << _294;
  # DEBUG this => NULL
  # DEBUG __x => _281
  # DEBUG __y => _279
  # DEBUG this => &D.46345
  _319 = *_281;
  _314 = _279 & _319;
  if (_314 != 0)
    goto <bb 103>;
  else
    goto <bb 104>;

  <bb 103>:
  __assert_fail ("channel_vector[ link ] == false", "networks/cmesh.cpp", 166, &__PRETTY_FUNCTION__);

  <bb 104>:
  # DEBUG D#33 => &channel_vector
  # DEBUG __n => _88
  # DEBUG this => D#33
  # DEBUG this => NULL
  # DEBUG __x => _281
  # DEBUG __y => _294
  # DEBUG this => D#16
  # DEBUG __x => _281
  # DEBUG __y => _294
  # DEBUG this => D#16
  # DEBUG this => D#17
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __x => _281
  # DEBUG __y => _279
  # DEBUG this => &D.46346
  # DEBUG __x => 1
  _235 = _279 | _319;
  *_281 = _235;
  # DEBUG D#207 => &this_41(D)->D.45063._routers
  _414 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#207
  # DEBUG __n => _60
  # DEBUG this => D#32
  _244 = _414 + _339;
  _90 = *_244;
  _91 = _90->D.43134.D.33715._vptr.Module;
  _92 = MEM[(int (*__vtbl_ptr_type) () *)_91 + 56B];
  # DEBUG D#208 => &this_41(D)->D.45063._inject_cred
  _394 = MEM[(struct Channel * * *)this_41(D) + 160B];
  # DEBUG D#31 => D#208
  # DEBUG __n => _88
  # DEBUG this => D#31
  _268 = _88 * 8;
  _264 = _394 + _268;
  _94 = *_264;
  # DEBUG D#209 => &this_41(D)->D.45063._inject
  _370 = MEM[(struct FlitChannel * * *)this_41(D) + 136B];
  # DEBUG D#30 => D#209
  # DEBUG __n => _88
  # DEBUG this => D#30
  _273 = _370 + _268;
  _95 = *_273;
  OBJ_TYPE_REF(_92;(struct Router)_90->7) (_90, _95, _94);
  goto <bb 106>;

<L131>:
  goto <bb 352> (<L95>);

  <bb 106>:
  # DEBUG D#210 => &this_41(D)->D.45063._routers
  _415 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#210
  # DEBUG __n => _60
  # DEBUG this => D#32
  _106 = _415 + _339;
  _98 = *_106;
  _99 = _98->D.43134.D.33715._vptr.Module;
  _100 = MEM[(int (*__vtbl_ptr_type) () *)_99 + 64B];
  # DEBUG D#211 => &this_41(D)->D.45063._eject_cred
  _395 = MEM[(struct Channel * * *)this_41(D) + 208B];
  # DEBUG D#31 => D#211
  # DEBUG __n => _88
  # DEBUG this => D#31
  _184 = _395 + _268;
  _102 = *_184;
  # DEBUG D#212 => &this_41(D)->D.45063._eject
  _371 = MEM[(struct FlitChannel * * *)this_41(D) + 184B];
  # DEBUG D#30 => D#212
  # DEBUG __n => _88
  # DEBUG this => D#30
  _190 = _371 + _268;
  _104 = *_190;
  OBJ_TYPE_REF(_100;(struct Router)_98->8) (_98, _104, _102);
  goto <bb 108>;

<L132>:
  goto <bb 352> (<L95>);

  <bb 108>:
  # DEBUG D#213 => &this_41(D)->D.45063._inject
  _372 = MEM[(struct FlitChannel * * *)this_41(D) + 136B];
  # DEBUG D#30 => D#213
  # DEBUG __n => _88
  # DEBUG this => D#30
  _93 = _372 + _268;
  _107 = *_93;
  # DEBUG D#214 => &_107->D.35842
  # DEBUG this => D#214
  # DEBUG cycles => 1
  MEM[(struct Channel *)_107]._delay = 1;
  # DEBUG D#215 => &this_41(D)->D.45063._eject
  _373 = MEM[(struct FlitChannel * * *)this_41(D) + 184B];
  # DEBUG D#30 => D#215
  # DEBUG __n => _88
  # DEBUG this => D#30
  _61 = _373 + _268;
  _108 = *_61;
  # DEBUG D#216 => &_108->D.35842
  # DEBUG this => D#216
  # DEBUG cycles => 1
  MEM[(struct Channel *)_108]._delay = 1;
  x_109 = x_866 + 1;
  # DEBUG x => x_109
  # DEBUG x => x_109
  _cX.79_77 = _cX;
  if (_cX.79_77 <= x_109)
    goto <bb 109>;
  else
    goto <bb 98>;

  <bb 109>:
  # _cX.79_643 = PHI <_cX.79_77(108)>
  pretmp_1143 = _cY;

  <bb 110>:
  # prephitmp_1101 = PHI <_cX.79_643(109), prephitmp_1142(93)>
  # prephitmp_1144 = PHI <pretmp_1143(109), prephitmp_1081(93)>
  y_113 = y_845 + 1;
  # DEBUG y => y_113
  # DEBUG y => y_113
  if (y_113 >= prephitmp_1144)
    goto <bb 91>;
  else
    goto <bb 111>;

  <bb 111>:
  goto <bb 93>;

<L133>:
  goto <bb 352> (<L95>);

  <bb 113>:
  # DEBUG offset => _119
  _120 = this_41(D)->_k;
  _121 = y_116 * _120;
  px_out_122 = x_115 + _121;
  # DEBUG px_out => px_out_122
  nx_out_123 = _119 + px_out_122;
  # DEBUG nx_out => nx_out_123
  _124 = _119 * 2;
  py_out_125 = px_out_122 + _124;
  # DEBUG py_out => py_out_125
  _126 = _119 * 3;
  ny_out_127 = px_out_122 + _126;
  # DEBUG ny_out => ny_out_127
  _128 = x_115 + 1;
  _129 = _121 + _128;
  px_in_130 = _119 + _129;
  # DEBUG px_in => px_in_130
  # DEBUG D#354 => x_115 + -1
  # DEBUG D#353 => _121 + D#354
  # DEBUG nx_in => D#353
  _133 = y_116 + 1;
  _134 = _120 * _133;
  _135 = x_115 + _134;
  py_in_136 = _126 + _135;
  # DEBUG py_in => py_in_136
  # DEBUG D#352 => y_116 + -1
  # DEBUG D#351 => _120 * D#352
  # DEBUG D#350 => x_115 + D#351
  # DEBUG D#349 => _124 + D#350
  # DEBUG ny_in => D#349
  if (x_115 == 0)
    goto <bb 114>;
  else
    goto <bb 117>;

  <bb 114>:
  _141 = _120 / 2;
  if (y_116 < _141)
    goto <bb 115>;
  else
    goto <bb 116>;

  <bb 115>:
  _147 = y_116 + _141;
  _148 = _120 * _147;
  nx_in_150 = _119 + _148;
  # DEBUG nx_in => nx_in_150
  # DEBUG nx_in => nx_in_150
  _765 = _120 + -1;
  if (x_115 == _765)
    goto <bb 121>;
  else
    goto <bb 123>;

  <bb 116>:
  _142 = _120 / -2;
  _143 = y_116 + _142;
  _144 = _120 * _143;
  nx_in_146 = _119 + _144;
  # DEBUG nx_in => nx_in_146
  # DEBUG nx_in => nx_in_146
  _630 = _120 + -1;
  if (x_115 == _630)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 117>:
  _131 = x_115 + -1;
  nx_in_132 = _121 + _131;
  # DEBUG nx_in => D#353
  _151 = _120 + -1;
  if (x_115 == _151)
    goto <bb 118>;
  else
    goto <bb 123>;

  <bb 118>:
  _152 = _120 / 2;
  if (y_116 < _152)
    goto <bb 120>;
  else
    goto <bb 119>;

  <bb 119>:
  pretmp_1070 = _120 / -2;
  pretmp_1072 = y_116 + pretmp_1070;
  pretmp_1074 = _120 * pretmp_1072;
  goto <bb 122>;

  <bb 120>:
  pretmp_1077 = y_116 + _152;
  pretmp_1079 = _120 * pretmp_1077;

  <bb 121>:
  # nx_in_599 = PHI <nx_in_132(120), nx_in_150(115)>
  # _745 = PHI <_151(120), _765(115)>
  # prephitmp_1080 = PHI <pretmp_1079(120), _148(115)>
  px_in_159 = x_115 + prephitmp_1080;
  # DEBUG px_in => px_in_159
  goto <bb 123>;

  <bb 122>:
  # nx_in_714 = PHI <nx_in_132(119), nx_in_146(116)>
  # _596 = PHI <_151(119), _630(116)>
  # prephitmp_1075 = PHI <pretmp_1074(119), _144(116)>
  px_in_156 = x_115 + prephitmp_1075;
  # DEBUG px_in => px_in_156

  <bb 123>:
  # px_in_4 = PHI <px_in_130(117), px_in_156(122), px_in_159(121), px_in_130(116), px_in_130(115)>
  # nx_in_1012 = PHI <nx_in_132(117), nx_in_714(122), nx_in_599(121), nx_in_146(116), nx_in_150(115)>
  # _858 = PHI <_151(117), _596(122), _745(121), _630(116), _765(115)>
  # DEBUG px_in => px_in_4
  if (y_116 == 0)
    goto <bb 124>;
  else
    goto <bb 127>;

  <bb 124>:
  _160 = _120 / 2;
  if (x_115 < _160)
    goto <bb 125>;
  else
    goto <bb 126>;

  <bb 125>:
  _165 = x_115 + _160;
  _166 = _121 + _165;
  ny_in_167 = _126 + _166;
  # DEBUG ny_in => ny_in_167
  # DEBUG ny_in => ny_in_167
  if (y_116 == _858)
    goto <bb 131>;
  else
    goto <bb 133>;

  <bb 126>:
  _161 = _120 / -2;
  _162 = x_115 + _161;
  _163 = _121 + _162;
  ny_in_164 = _126 + _163;
  # DEBUG ny_in => ny_in_164
  # DEBUG ny_in => ny_in_164
  if (y_116 == _858)
    goto <bb 132>;
  else
    goto <bb 133>;

  <bb 127>:
  _137 = y_116 + -1;
  _138 = _120 * _137;
  _139 = x_115 + _138;
  ny_in_140 = _124 + _139;
  # DEBUG ny_in => D#349
  if (y_116 == _858)
    goto <bb 128>;
  else
    goto <bb 133>;

  <bb 128>:
  _168 = _120 / 2;
  if (x_115 < _168)
    goto <bb 130>;
  else
    goto <bb 129>;

  <bb 129>:
  pretmp_1060 = _120 / -2;
  pretmp_1062 = x_115 + pretmp_1060;
  pretmp_1064 = _121 + pretmp_1062;
  goto <bb 132>;

  <bb 130>:
  pretmp_1066 = x_115 + _168;
  pretmp_1068 = _121 + pretmp_1066;

  <bb 131>:
  # ny_in_762 = PHI <ny_in_140(130), ny_in_167(125)>
  # prephitmp_1069 = PHI <pretmp_1068(130), _166(125)>
  py_in_175 = _124 + prephitmp_1069;
  # DEBUG py_in => py_in_175
  goto <bb 133>;

  <bb 132>:
  # ny_in_814 = PHI <ny_in_140(129), ny_in_164(126)>
  # prephitmp_1065 = PHI <pretmp_1064(129), _163(126)>
  py_in_172 = _124 + prephitmp_1065;
  # DEBUG py_in => py_in_172

  <bb 133>:
  # py_in_6 = PHI <py_in_136(127), py_in_172(132), py_in_175(131), py_in_136(125), py_in_136(126)>
  # ny_in_997 = PHI <ny_in_140(127), ny_in_814(132), ny_in_762(131), ny_in_167(125), ny_in_164(126)>
  # DEBUG py_in => py_in_6
  if (_35 == 1)
    goto <bb 134>;
  else
    goto <bb 142>;

  <bb 134>:
  if (x_115 == _858)
    goto <bb 135>;
  else
    goto <bb 136>;

  <bb 135>:
  _cY.78_176 = _cY;
  _177 = _120 * _cY.78_176;
  iftmp.80_178 = _177 / 2;
  goto <bb 137>;

  <bb 136>:
  iftmp.80_179 = _cX;

  <bb 137>:
  # iftmp.80_9 = PHI <iftmp.80_178(135), iftmp.80_179(136)>
  # DEBUG px_latency => iftmp.80_9
  _180 = (long unsigned int) px_out_122;
  # DEBUG D#217 => &this_41(D)->D.45063._chan
  _374 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#217
  # DEBUG __n => _180
  # DEBUG this => D#30
  _31 = _180 * 8;
  _430 = _374 + _31;
  _181 = *_430;
  _182 = &_181->D.35842;
  Channel<Flit>::SetLatency (_182, iftmp.80_9);
  goto <bb 139>;

<L134>:
  goto <bb 352> (<L95>);

  <bb 139>:
  # DEBUG D#218 => &this_41(D)->D.45063._chan_cred
  _396 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#218
  # DEBUG __n => _180
  # DEBUG this => D#31
  _431 = _396 + _31;
  _185 = *_431;
  Channel<Credit>::SetLatency (_185, iftmp.80_9);

  <bb 140>:
  pretmp_757 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  pretmp_796 = MEM[(struct Channel * * *)this_41(D) + 256B];
  pretmp_756 = pretmp_757 + _31;
  pretmp_983 = pretmp_796 + _31;
  pretmp_1125 = *pretmp_983;
  pretmp_1127 = *pretmp_756;
  goto <bb 143>;

<L135>:
  goto <bb 352> (<L95>);

  <bb 142>:
  _187 = (long unsigned int) px_out_122;
  # DEBUG D#219 => &this_41(D)->D.45063._chan
  _375 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#219
  # DEBUG __n => _187
  # DEBUG this => D#30
  _434 = _187 * 8;
  _435 = _375 + _434;
  _188 = *_435;
  # DEBUG D#220 => &_188->D.35842
  # DEBUG this => D#220
  # DEBUG cycles => 1
  MEM[(struct Channel *)_188]._delay = 1;
  # DEBUG D#221 => &this_41(D)->D.45063._chan_cred
  _397 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#221
  # DEBUG __n => _187
  # DEBUG this => D#31
  _438 = _397 + _434;
  _189 = *_438;
  # DEBUG this => _189
  # DEBUG cycles => 1
  _189->_delay = 1;

  <bb 143>:
  # prephitmp_802 = PHI <_31(140), _434(142)>
  # prephitmp_1126 = PHI <pretmp_1125(140), _189(142)>
  # prephitmp_1128 = PHI <pretmp_1127(140), _188(142)>
  # DEBUG D#222 => &this_41(D)->D.45063._routers
  _416 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#222
  # DEBUG __n => _60
  # DEBUG this => D#32
  _442 = _416 + _339;
  _191 = *_442;
  _192 = _191->D.43134.D.33715._vptr.Module;
  _193 = MEM[(int (*__vtbl_ptr_type) () *)_192 + 64B];
  # DEBUG D#346 => (long unsigned int) px_out_122
  # DEBUG D#223 => &this_41(D)->D.45063._chan_cred
  # DEBUG D#31 => D#223
  # DEBUG __n => D#346
  # DEBUG this => D#31
  # DEBUG D#224 => &this_41(D)->D.45063._chan
  # DEBUG D#30 => D#224
  # DEBUG __n => D#346
  # DEBUG this => D#30
  OBJ_TYPE_REF(_193;(struct Router)_191->8) (_191, prephitmp_1128, prephitmp_1126);
  goto <bb 145>;

<L136>:
  goto <bb 352> (<L95>);

  <bb 145>:
  # DEBUG D#225 => &this_41(D)->D.45063._routers
  _417 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#225
  # DEBUG __n => _60
  # DEBUG this => D#32
  _446 = _417 + _339;
  _198 = *_446;
  _199 = _198->D.43134.D.33715._vptr.Module;
  _200 = MEM[(int (*__vtbl_ptr_type) () *)_199 + 56B];
  _201 = (long unsigned int) px_in_4;
  # DEBUG D#226 => &this_41(D)->D.45063._chan_cred
  _399 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#226
  # DEBUG __n => _201
  # DEBUG this => D#31
  _444 = _201 * 8;
  _445 = _399 + _444;
  _202 = *_445;
  # DEBUG D#227 => &this_41(D)->D.45063._chan
  _377 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#227
  # DEBUG __n => _201
  # DEBUG this => D#30
  _443 = _377 + _444;
  _203 = *_443;
  OBJ_TYPE_REF(_200;(struct Router)_198->7) (_198, _203, _202);
  goto <bb 147>;

<L137>:
  goto <bb 352> (<L95>);

  <bb 147>:
  gTrace.77_205 = gTrace;
  if (gTrace.77_205 != 0)
    goto <bb 149>;
  else
    goto <bb 148>;

  <bb 148>:
  if (_35 == 1)
    goto <bb 182>;
  else
    goto <bb 190>;

  <bb 149>:
  # DEBUG D#228 => &this_41(D)->D.45063._chan
  _378 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#228
  # DEBUG __n => D#346
  # DEBUG this => D#30
  _447 = _378 + prephitmp_802;
  _206 = *_447;
  # DEBUG D#229 => &_206->D.35842
  _426 = MEM[(int *)_206 + 96B];
  # DEBUG D#34 => D#229
  # DEBUG this => D#34
  # DEBUG __out => &cout
  # DEBUG __s => "Link "
  # DEBUG __s => "Link "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Link ", 5);
  goto <bb 151>;

<L138>:
  goto <bb 352> (<L95>);

  <bb 151>:
  # DEBUG __out => &cout
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ", 1);
  goto <bb 153>;

<L139>:
  goto <bb 352> (<L95>);

  <bb 153>:
  _208 = std::basic_ostream<char>::operator<< (&cout, px_out_122);
  goto <bb 155>;

<L140>:
  goto <bb 352> (<L95>);

  <bb 155>:
  # DEBUG __out => _208
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_208, " ", 1);
  goto <bb 157>;

<L141>:
  goto <bb 352> (<L95>);

  <bb 157>:
  _210 = std::basic_ostream<char>::operator<< (_208, px_in_4);
  goto <bb 159>;

<L142>:
  goto <bb 352> (<L95>);

  <bb 159>:
  # DEBUG __out => _210
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_210, " ", 1);
  goto <bb 161>;

<L143>:
  goto <bb 352> (<L95>);

  <bb 161>:
  _212 = std::basic_ostream<char>::operator<< (_210, node_620);
  goto <bb 163>;

<L144>:
  goto <bb 352> (<L95>);

  <bb 163>:
  # DEBUG __out => _212
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_212, " ", 1);
  goto <bb 165>;

<L145>:
  goto <bb 352> (<L95>);

  <bb 165>:
  _214 = std::basic_ostream<char>::operator<< (_212, _426);
  goto <bb 167>;

<L146>:
  goto <bb 352> (<L95>);

  <bb 167>:
  # DEBUG this => _214
  # DEBUG __pf => endl
  # DEBUG __os => _214
  _433 = _214->_vptr.basic_ostream;
  _733 = MEM[(long int *)_433 + -24B];
  _734 = (sizetype) _733;
  _735 = _214 + _734;
  # DEBUG this => _735
  # DEBUG __c => 10
  _528 = MEM[(const struct basic_ios *)_735]._M_ctype;
  # DEBUG __f => _528
  if (_528 == 0B)
    goto <bb 168>;
  else
    goto <bb 170>;

  <bb 168>:
  std::__throw_bad_cast ();

<L147>:
  goto <bb 352> (<L95>);

  <bb 170>:
  # DEBUG this => _528
  # DEBUG __c => 10
  _740 = MEM[(const struct ctype *)_528]._M_widen_ok;
  if (_740 != 0)
    goto <bb 171>;
  else
    goto <bb 172>;

  <bb 171>:
  _743 = MEM[(const struct ctype *)_528]._M_widen[10];
  pretmp_1057 = (int) _743;
  goto <bb 178>;

  <bb 172>:
  # DEBUG this => _528
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_528);
  goto <bb 174>;

<L148>:
  goto <bb 352> (<L95>);

  <bb 174>:
  _748 = MEM[(const struct ctype *)_528].D.20312._vptr.facet;
  _749 = MEM[(int (*__vtbl_ptr_type) () *)_748 + 48B];
  PROF_753 = [obj_type_ref] OBJ_TYPE_REF(_749;(const struct ctype)_528->6);
  if (PROF_753 == do_widen)
    goto <bb 178>;
  else
    goto <bb 175>;

  <bb 175>:
  _755 = OBJ_TYPE_REF(_749;(const struct ctype)_528->6) (_528, 10);
  goto <bb 177>;

<L149>:
  goto <bb 352> (<L95>);

  <bb 177>:
  pretmp_1058 = (int) _755;

  <bb 178>:
  # prephitmp_1059 = PHI <pretmp_1057(171), 10(174), pretmp_1058(177)>
  _738 = std::basic_ostream<char>::put (_214, prephitmp_1059);
  goto <bb 180>;

<L150>:
  goto <bb 352> (<L95>);

  <bb 180>:
  # DEBUG __os => _738
  std::basic_ostream<char>::flush (_738);
  goto <bb 148>;

<L151>:
  goto <bb 352> (<L95>);

  <bb 182>:
  if (x_115 == 0)
    goto <bb 183>;
  else
    goto <bb 184>;

  <bb 183>:
  _215 = this_41(D)->_k;
  _cY.78_216 = _cY;
  _217 = _215 * _cY.78_216;
  iftmp.81_218 = _217 / 2;
  goto <bb 185>;

  <bb 184>:
  iftmp.81_219 = _cX;

  <bb 185>:
  # iftmp.81_10 = PHI <iftmp.81_218(183), iftmp.81_219(184)>
  # DEBUG nx_latency => iftmp.81_10
  _220 = (long unsigned int) nx_out_123;
  # DEBUG D#230 => &this_41(D)->D.45063._chan
  _379 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#230
  # DEBUG __n => _220
  # DEBUG this => D#30
  _448 = _220 * 8;
  _449 = _379 + _448;
  _221 = *_449;
  _222 = &_221->D.35842;
  Channel<Flit>::SetLatency (_222, iftmp.81_10);
  goto <bb 187>;

<L152>:
  goto <bb 352> (<L95>);

  <bb 187>:
  # DEBUG D#231 => &this_41(D)->D.45063._chan_cred
  _400 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#231
  # DEBUG __n => _220
  # DEBUG this => D#31
  _450 = _400 + _448;
  _224 = *_450;
  Channel<Credit>::SetLatency (_224, iftmp.81_10);

  <bb 188>:
  pretmp_708 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  pretmp_724 = MEM[(struct Channel * * *)this_41(D) + 256B];
  pretmp_707 = pretmp_708 + _448;
  pretmp_869 = pretmp_724 + _448;
  pretmp_1129 = *pretmp_869;
  pretmp_1131 = *pretmp_707;
  goto <bb 191>;

<L153>:
  goto <bb 352> (<L95>);

  <bb 190>:
  _226 = (long unsigned int) nx_out_123;
  # DEBUG D#232 => &this_41(D)->D.45063._chan
  _380 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#232
  # DEBUG __n => _226
  # DEBUG this => D#30
  _454 = _226 * 8;
  _455 = _380 + _454;
  _228 = *_455;
  # DEBUG D#233 => &_228->D.35842
  # DEBUG this => D#233
  # DEBUG cycles => 1
  MEM[(struct Channel *)_228]._delay = 1;
  # DEBUG D#234 => &this_41(D)->D.45063._chan_cred
  _401 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#234
  # DEBUG __n => _226
  # DEBUG this => D#31
  _458 = _401 + _454;
  _230 = *_458;
  # DEBUG this => _230
  # DEBUG cycles => 1
  _230->_delay = 1;

  <bb 191>:
  # prephitmp_844 = PHI <_448(188), _454(190)>
  # prephitmp_1130 = PHI <pretmp_1129(188), _230(190)>
  # prephitmp_1132 = PHI <pretmp_1131(188), _228(190)>
  # DEBUG D#235 => &this_41(D)->D.45063._routers
  _418 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#235
  # DEBUG __n => _60
  # DEBUG this => D#32
  _462 = _418 + _339;
  _231 = *_462;
  _232 = _231->D.43134.D.33715._vptr.Module;
  _233 = MEM[(int (*__vtbl_ptr_type) () *)_232 + 64B];
  # DEBUG D#345 => (long unsigned int) nx_out_123
  # DEBUG D#236 => &this_41(D)->D.45063._chan_cred
  # DEBUG D#31 => D#236
  # DEBUG __n => D#345
  # DEBUG this => D#31
  # DEBUG D#237 => &this_41(D)->D.45063._chan
  # DEBUG D#30 => D#237
  # DEBUG __n => D#345
  # DEBUG this => D#30
  OBJ_TYPE_REF(_233;(struct Router)_231->8) (_231, prephitmp_1132, prephitmp_1130);
  goto <bb 193>;

<L154>:
  goto <bb 352> (<L95>);

  <bb 193>:
  # DEBUG D#238 => &this_41(D)->D.45063._routers
  _419 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#238
  # DEBUG __n => _60
  # DEBUG this => D#32
  _466 = _419 + _339;
  _239 = *_466;
  _240 = _239->D.43134.D.33715._vptr.Module;
  _241 = MEM[(int (*__vtbl_ptr_type) () *)_240 + 56B];
  _242 = (long unsigned int) nx_in_1012;
  # DEBUG D#239 => &this_41(D)->D.45063._chan_cred
  _403 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#239
  # DEBUG __n => _242
  # DEBUG this => D#31
  _464 = _242 * 8;
  _465 = _403 + _464;
  _243 = *_465;
  # DEBUG D#240 => &this_41(D)->D.45063._chan
  _382 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#240
  # DEBUG __n => _242
  # DEBUG this => D#30
  _463 = _382 + _464;
  _245 = *_463;
  OBJ_TYPE_REF(_241;(struct Router)_239->7) (_239, _245, _243);
  goto <bb 195>;

<L155>:
  goto <bb 352> (<L95>);

  <bb 195>:
  gTrace.77_247 = gTrace;
  if (gTrace.77_247 != 0)
    goto <bb 197>;
  else
    goto <bb 196>;

  <bb 196>:
  if (_35 == 1)
    goto <bb 230>;
  else
    goto <bb 238>;

  <bb 197>:
  # DEBUG D#241 => &this_41(D)->D.45063._chan
  _383 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#241
  # DEBUG __n => D#345
  # DEBUG this => D#30
  _467 = _383 + prephitmp_844;
  _248 = *_467;
  # DEBUG D#242 => &_248->D.35842
  _427 = MEM[(int *)_248 + 96B];
  # DEBUG D#34 => D#242
  # DEBUG this => D#34
  # DEBUG __out => &cout
  # DEBUG __s => "Link "
  # DEBUG __s => "Link "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Link ", 5);
  goto <bb 199>;

<L156>:
  goto <bb 352> (<L95>);

  <bb 199>:
  # DEBUG __out => &cout
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ", 1);
  goto <bb 201>;

<L157>:
  goto <bb 352> (<L95>);

  <bb 201>:
  _250 = std::basic_ostream<char>::operator<< (&cout, nx_out_123);
  goto <bb 203>;

<L158>:
  goto <bb 352> (<L95>);

  <bb 203>:
  # DEBUG __out => _250
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_250, " ", 1);
  goto <bb 205>;

<L159>:
  goto <bb 352> (<L95>);

  <bb 205>:
  _252 = std::basic_ostream<char>::operator<< (_250, nx_in_1012);
  goto <bb 207>;

<L160>:
  goto <bb 352> (<L95>);

  <bb 207>:
  # DEBUG __out => _252
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_252, " ", 1);
  goto <bb 209>;

<L161>:
  goto <bb 352> (<L95>);

  <bb 209>:
  _254 = std::basic_ostream<char>::operator<< (_252, node_620);
  goto <bb 211>;

<L162>:
  goto <bb 352> (<L95>);

  <bb 211>:
  # DEBUG __out => _254
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_254, " ", 1);
  goto <bb 213>;

<L163>:
  goto <bb 352> (<L95>);

  <bb 213>:
  _256 = std::basic_ostream<char>::operator<< (_254, _427);
  goto <bb 215>;

<L164>:
  goto <bb 352> (<L95>);

  <bb 215>:
  # DEBUG this => _256
  # DEBUG __pf => endl
  # DEBUG __os => _256
  _758 = _256->_vptr.basic_ostream;
  _759 = MEM[(long int *)_758 + -24B];
  _760 = (sizetype) _759;
  _761 = _256 + _760;
  # DEBUG this => _761
  # DEBUG __c => 10
  _536 = MEM[(const struct basic_ios *)_761]._M_ctype;
  # DEBUG __f => _536
  if (_536 == 0B)
    goto <bb 216>;
  else
    goto <bb 218>;

  <bb 216>:
  std::__throw_bad_cast ();

<L165>:
  goto <bb 352> (<L95>);

  <bb 218>:
  # DEBUG this => _536
  # DEBUG __c => 10
  _766 = MEM[(const struct ctype *)_536]._M_widen_ok;
  if (_766 != 0)
    goto <bb 219>;
  else
    goto <bb 220>;

  <bb 219>:
  _769 = MEM[(const struct ctype *)_536]._M_widen[10];
  pretmp_1054 = (int) _769;
  goto <bb 226>;

  <bb 220>:
  # DEBUG this => _536
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_536);
  goto <bb 222>;

<L166>:
  goto <bb 352> (<L95>);

  <bb 222>:
  _774 = MEM[(const struct ctype *)_536].D.20312._vptr.facet;
  _775 = MEM[(int (*__vtbl_ptr_type) () *)_774 + 48B];
  PROF_779 = [obj_type_ref] OBJ_TYPE_REF(_775;(const struct ctype)_536->6);
  if (PROF_779 == do_widen)
    goto <bb 226>;
  else
    goto <bb 223>;

  <bb 223>:
  _781 = OBJ_TYPE_REF(_775;(const struct ctype)_536->6) (_536, 10);
  goto <bb 225>;

<L167>:
  goto <bb 352> (<L95>);

  <bb 225>:
  pretmp_1055 = (int) _781;

  <bb 226>:
  # prephitmp_1056 = PHI <pretmp_1054(219), 10(222), pretmp_1055(225)>
  _764 = std::basic_ostream<char>::put (_256, prephitmp_1056);
  goto <bb 228>;

<L168>:
  goto <bb 352> (<L95>);

  <bb 228>:
  # DEBUG __os => _764
  std::basic_ostream<char>::flush (_764);
  goto <bb 196>;

<L169>:
  goto <bb 352> (<L95>);

  <bb 230>:
  _257 = this_41(D)->_k;
  _258 = _257 + -1;
  if (y_116 == _258)
    goto <bb 231>;
  else
    goto <bb 232>;

  <bb 231>:
  _cX.79_259 = _cX;
  _260 = _257 * _cX.79_259;
  iftmp.82_261 = _260 / 2;
  goto <bb 233>;

  <bb 232>:
  iftmp.82_262 = _cY;

  <bb 233>:
  # iftmp.82_11 = PHI <iftmp.82_261(231), iftmp.82_262(232)>
  # DEBUG py_latency => iftmp.82_11
  _263 = (long unsigned int) py_out_125;
  # DEBUG D#243 => &this_41(D)->D.45063._chan
  _384 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#243
  # DEBUG __n => _263
  # DEBUG this => D#30
  _468 = _263 * 8;
  _469 = _384 + _468;
  _265 = *_469;
  _266 = &_265->D.35842;
  Channel<Flit>::SetLatency (_266, iftmp.82_11);
  goto <bb 235>;

<L170>:
  goto <bb 352> (<L95>);

  <bb 235>:
  # DEBUG D#244 => &this_41(D)->D.45063._chan_cred
  _404 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#244
  # DEBUG __n => _263
  # DEBUG this => D#31
  _470 = _404 + _468;
  _269 = *_470;
  Channel<Credit>::SetLatency (_269, iftmp.82_11);

  <bb 236>:
  pretmp_834 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  pretmp_634 = MEM[(struct Channel * * *)this_41(D) + 256B];
  pretmp_578 = pretmp_834 + _468;
  pretmp_46 = pretmp_634 + _468;
  pretmp_1133 = *pretmp_46;
  pretmp_1135 = *pretmp_578;
  goto <bb 239>;

<L171>:
  goto <bb 352> (<L95>);

  <bb 238>:
  _271 = (long unsigned int) py_out_125;
  # DEBUG D#245 => &this_41(D)->D.45063._chan
  _385 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#245
  # DEBUG __n => _271
  # DEBUG this => D#30
  _473 = _271 * 8;
  _474 = _385 + _473;
  _272 = *_474;
  # DEBUG D#246 => &_272->D.35842
  # DEBUG this => D#246
  # DEBUG cycles => 1
  MEM[(struct Channel *)_272]._delay = 1;
  # DEBUG D#247 => &this_41(D)->D.45063._chan_cred
  _405 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#247
  # DEBUG __n => _271
  # DEBUG this => D#31
  _478 = _405 + _473;
  _274 = *_478;
  # DEBUG this => _274
  # DEBUG cycles => 1
  _274->_delay = 1;

  <bb 239>:
  # prephitmp_367 = PHI <_468(236), _473(238)>
  # prephitmp_1134 = PHI <pretmp_1133(236), _274(238)>
  # prephitmp_1136 = PHI <pretmp_1135(236), _272(238)>
  # DEBUG D#248 => &this_41(D)->D.45063._routers
  _420 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#248
  # DEBUG __n => _60
  # DEBUG this => D#32
  _482 = _420 + _339;
  _275 = *_482;
  _276 = _275->D.43134.D.33715._vptr.Module;
  _277 = MEM[(int (*__vtbl_ptr_type) () *)_276 + 64B];
  # DEBUG D#344 => (long unsigned int) py_out_125
  # DEBUG D#249 => &this_41(D)->D.45063._chan_cred
  # DEBUG D#31 => D#249
  # DEBUG __n => D#344
  # DEBUG this => D#31
  # DEBUG D#250 => &this_41(D)->D.45063._chan
  # DEBUG D#30 => D#250
  # DEBUG __n => D#344
  # DEBUG this => D#30
  OBJ_TYPE_REF(_277;(struct Router)_275->8) (_275, prephitmp_1136, prephitmp_1134);
  goto <bb 241>;

<L172>:
  goto <bb 352> (<L95>);

  <bb 241>:
  # DEBUG D#251 => &this_41(D)->D.45063._routers
  _421 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#251
  # DEBUG __n => _60
  # DEBUG this => D#32
  _486 = _421 + _339;
  _285 = *_486;
  _286 = _285->D.43134.D.33715._vptr.Module;
  _287 = MEM[(int (*__vtbl_ptr_type) () *)_286 + 56B];
  _288 = (long unsigned int) py_in_6;
  # DEBUG D#252 => &this_41(D)->D.45063._chan_cred
  _407 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#252
  # DEBUG __n => _288
  # DEBUG this => D#31
  _484 = _288 * 8;
  _485 = _407 + _484;
  _290 = *_485;
  # DEBUG D#253 => &this_41(D)->D.45063._chan
  _387 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#253
  # DEBUG __n => _288
  # DEBUG this => D#30
  _483 = _387 + _484;
  _291 = *_483;
  OBJ_TYPE_REF(_287;(struct Router)_285->7) (_285, _291, _290);
  goto <bb 243>;

<L173>:
  goto <bb 352> (<L95>);

  <bb 243>:
  gTrace.77_293 = gTrace;
  if (gTrace.77_293 != 0)
    goto <bb 245>;
  else
    goto <bb 244>;

  <bb 244>:
  if (_35 == 1)
    goto <bb 278>;
  else
    goto <bb 286>;

  <bb 245>:
  # DEBUG D#254 => &this_41(D)->D.45063._chan
  _388 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#254
  # DEBUG __n => D#344
  # DEBUG this => D#30
  _487 = _388 + prephitmp_367;
  _295 = *_487;
  # DEBUG D#255 => &_295->D.35842
  _428 = MEM[(int *)_295 + 96B];
  # DEBUG D#34 => D#255
  # DEBUG this => D#34
  # DEBUG __out => &cout
  # DEBUG __s => "Link "
  # DEBUG __s => "Link "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Link ", 5);
  goto <bb 247>;

<L174>:
  goto <bb 352> (<L95>);

  <bb 247>:
  # DEBUG __out => &cout
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ", 1);
  goto <bb 249>;

<L175>:
  goto <bb 352> (<L95>);

  <bb 249>:
  _298 = std::basic_ostream<char>::operator<< (&cout, py_out_125);
  goto <bb 251>;

<L176>:
  goto <bb 352> (<L95>);

  <bb 251>:
  # DEBUG __out => _298
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_298, " ", 1);
  goto <bb 253>;

<L177>:
  goto <bb 352> (<L95>);

  <bb 253>:
  _300 = std::basic_ostream<char>::operator<< (_298, py_in_6);
  goto <bb 255>;

<L178>:
  goto <bb 352> (<L95>);

  <bb 255>:
  # DEBUG __out => _300
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_300, " ", 1);
  goto <bb 257>;

<L179>:
  goto <bb 352> (<L95>);

  <bb 257>:
  _302 = std::basic_ostream<char>::operator<< (_300, node_620);
  goto <bb 259>;

<L180>:
  goto <bb 352> (<L95>);

  <bb 259>:
  # DEBUG __out => _302
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_302, " ", 1);
  goto <bb 261>;

<L181>:
  goto <bb 352> (<L95>);

  <bb 261>:
  _304 = std::basic_ostream<char>::operator<< (_302, _428);
  goto <bb 263>;

<L182>:
  goto <bb 352> (<L95>);

  <bb 263>:
  # DEBUG this => _304
  # DEBUG __pf => endl
  # DEBUG __os => _304
  _784 = _304->_vptr.basic_ostream;
  _785 = MEM[(long int *)_784 + -24B];
  _786 = (sizetype) _785;
  _787 = _304 + _786;
  # DEBUG this => _787
  # DEBUG __c => 10
  _544 = MEM[(const struct basic_ios *)_787]._M_ctype;
  # DEBUG __f => _544
  if (_544 == 0B)
    goto <bb 264>;
  else
    goto <bb 266>;

  <bb 264>:
  std::__throw_bad_cast ();

<L183>:
  goto <bb 352> (<L95>);

  <bb 266>:
  # DEBUG this => _544
  # DEBUG __c => 10
  _792 = MEM[(const struct ctype *)_544]._M_widen_ok;
  if (_792 != 0)
    goto <bb 267>;
  else
    goto <bb 268>;

  <bb 267>:
  _795 = MEM[(const struct ctype *)_544]._M_widen[10];
  pretmp_1051 = (int) _795;
  goto <bb 274>;

  <bb 268>:
  # DEBUG this => _544
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_544);
  goto <bb 270>;

<L184>:
  goto <bb 352> (<L95>);

  <bb 270>:
  _800 = MEM[(const struct ctype *)_544].D.20312._vptr.facet;
  _801 = MEM[(int (*__vtbl_ptr_type) () *)_800 + 48B];
  PROF_805 = [obj_type_ref] OBJ_TYPE_REF(_801;(const struct ctype)_544->6);
  if (PROF_805 == do_widen)
    goto <bb 274>;
  else
    goto <bb 271>;

  <bb 271>:
  _807 = OBJ_TYPE_REF(_801;(const struct ctype)_544->6) (_544, 10);
  goto <bb 273>;

<L185>:
  goto <bb 352> (<L95>);

  <bb 273>:
  pretmp_1052 = (int) _807;

  <bb 274>:
  # prephitmp_1053 = PHI <pretmp_1051(267), 10(270), pretmp_1052(273)>
  _790 = std::basic_ostream<char>::put (_304, prephitmp_1053);
  goto <bb 276>;

<L186>:
  goto <bb 352> (<L95>);

  <bb 276>:
  # DEBUG __os => _790
  std::basic_ostream<char>::flush (_790);
  goto <bb 244>;

<L187>:
  goto <bb 352> (<L95>);

  <bb 278>:
  if (y_116 == 0)
    goto <bb 279>;
  else
    goto <bb 280>;

  <bb 279>:
  _305 = this_41(D)->_k;
  _cX.79_306 = _cX;
  _307 = _305 * _cX.79_306;
  iftmp.83_308 = _307 / 2;
  goto <bb 281>;

  <bb 280>:
  iftmp.83_309 = _cY;

  <bb 281>:
  # iftmp.83_12 = PHI <iftmp.83_308(279), iftmp.83_309(280)>
  # DEBUG ny_latency => iftmp.83_12
  _310 = (long unsigned int) ny_out_127;
  # DEBUG D#256 => &this_41(D)->D.45063._chan
  _389 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#256
  # DEBUG __n => _310
  # DEBUG this => D#30
  _488 = _310 * 8;
  _489 = _389 + _488;
  _311 = *_489;
  _312 = &_311->D.35842;
  Channel<Flit>::SetLatency (_312, iftmp.83_12);
  goto <bb 283>;

<L188>:
  goto <bb 352> (<L95>);

  <bb 283>:
  # DEBUG D#257 => &this_41(D)->D.45063._chan_cred
  _408 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#257
  # DEBUG __n => _310
  # DEBUG this => D#31
  _490 = _408 + _488;
  _315 = *_490;
  Channel<Credit>::SetLatency (_315, iftmp.83_12);

  <bb 284>:
  pretmp_1035 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  pretmp_1037 = MEM[(struct Channel * * *)this_41(D) + 256B];
  pretmp_1040 = pretmp_1035 + _488;
  pretmp_1042 = pretmp_1037 + _488;
  pretmp_1137 = *pretmp_1042;
  pretmp_1139 = *pretmp_1040;
  goto <bb 287>;

<L189>:
  goto <bb 352> (<L95>);

  <bb 286>:
  _317 = (long unsigned int) ny_out_127;
  # DEBUG D#258 => &this_41(D)->D.45063._chan
  _390 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#258
  # DEBUG __n => _317
  # DEBUG this => D#30
  _494 = _317 * 8;
  _495 = _390 + _494;
  _318 = *_495;
  # DEBUG D#259 => &_318->D.35842
  # DEBUG this => D#259
  # DEBUG cycles => 1
  MEM[(struct Channel *)_318]._delay = 1;
  # DEBUG D#260 => &this_41(D)->D.45063._chan_cred
  _409 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#260
  # DEBUG __n => _317
  # DEBUG this => D#31
  _499 = _409 + _494;
  _320 = *_499;
  # DEBUG this => _320
  # DEBUG cycles => 1
  _320->_delay = 1;

  <bb 287>:
  # prephitmp_1039 = PHI <_488(284), _494(286)>
  # prephitmp_1138 = PHI <pretmp_1137(284), _320(286)>
  # prephitmp_1140 = PHI <pretmp_1139(284), _318(286)>
  # DEBUG D#261 => &this_41(D)->D.45063._routers
  _422 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#261
  # DEBUG __n => _60
  # DEBUG this => D#32
  _503 = _422 + _339;
  _321 = *_503;
  _322 = _321->D.43134.D.33715._vptr.Module;
  _323 = MEM[(int (*__vtbl_ptr_type) () *)_322 + 64B];
  # DEBUG D#343 => (long unsigned int) ny_out_127
  # DEBUG D#262 => &this_41(D)->D.45063._chan_cred
  # DEBUG D#31 => D#262
  # DEBUG __n => D#343
  # DEBUG this => D#31
  # DEBUG D#263 => &this_41(D)->D.45063._chan
  # DEBUG D#30 => D#263
  # DEBUG __n => D#343
  # DEBUG this => D#30
  OBJ_TYPE_REF(_323;(struct Router)_321->8) (_321, prephitmp_1140, prephitmp_1138);
  goto <bb 289>;

<L190>:
  goto <bb 352> (<L95>);

  <bb 289>:
  # DEBUG D#264 => &this_41(D)->D.45063._routers
  _423 = MEM[(struct Router * * *)this_41(D) + 112B];
  # DEBUG D#32 => D#264
  # DEBUG __n => _60
  # DEBUG this => D#32
  _507 = _423 + _339;
  _330 = *_507;
  _331 = _330->D.43134.D.33715._vptr.Module;
  _332 = MEM[(int (*__vtbl_ptr_type) () *)_331 + 56B];
  _333 = (long unsigned int) ny_in_997;
  # DEBUG D#265 => &this_41(D)->D.45063._chan_cred
  _411 = MEM[(struct Channel * * *)this_41(D) + 256B];
  # DEBUG D#31 => D#265
  # DEBUG __n => _333
  # DEBUG this => D#31
  _505 = _333 * 8;
  _506 = _411 + _505;
  _334 = *_506;
  # DEBUG D#266 => &this_41(D)->D.45063._chan
  _392 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#266
  # DEBUG __n => _333
  # DEBUG this => D#30
  _504 = _392 + _505;
  _336 = *_504;
  OBJ_TYPE_REF(_332;(struct Router)_330->7) (_330, _336, _334);
  goto <bb 291>;

<L191>:
  goto <bb 352> (<L95>);

  <bb 291>:
  gTrace.77_338 = gTrace;
  if (gTrace.77_338 != 0)
    goto <bb 294>;
  else
    goto <bb 292>;

  <bb 292>:
  node_349 = node_620 + 1;
  # DEBUG node => node_349
  # DEBUG node => node_349
  _47 = this_41(D)->D.45063._size;
  if (_47 <= node_349)
    goto <bb 27>;
  else
    goto <bb 293>;

  <bb 293>:
  goto <bb 29>;

  <bb 294>:
  # DEBUG D#267 => &this_41(D)->D.45063._chan
  _393 = MEM[(struct FlitChannel * * *)this_41(D) + 232B];
  # DEBUG D#30 => D#267
  # DEBUG __n => D#343
  # DEBUG this => D#30
  _508 = _393 + prephitmp_1039;
  _340 = *_508;
  # DEBUG D#268 => &_340->D.35842
  _429 = MEM[(int *)_340 + 96B];
  # DEBUG D#34 => D#268
  # DEBUG this => D#34
  # DEBUG __out => &cout
  # DEBUG __s => "Link "
  # DEBUG __s => "Link "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Link ", 5);
  goto <bb 296>;

<L192>:
  goto <bb 352> (<L95>);

  <bb 296>:
  # DEBUG __out => &cout
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, " ", 1);
  goto <bb 298>;

<L193>:
  goto <bb 352> (<L95>);

  <bb 298>:
  _342 = std::basic_ostream<char>::operator<< (&cout, ny_out_127);
  goto <bb 300>;

<L194>:
  goto <bb 352> (<L95>);

  <bb 300>:
  # DEBUG __out => _342
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_342, " ", 1);
  goto <bb 302>;

<L195>:
  goto <bb 352> (<L95>);

  <bb 302>:
  _344 = std::basic_ostream<char>::operator<< (_342, ny_in_997);
  goto <bb 304>;

<L196>:
  goto <bb 352> (<L95>);

  <bb 304>:
  # DEBUG __out => _344
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_344, " ", 1);
  goto <bb 306>;

<L197>:
  goto <bb 352> (<L95>);

  <bb 306>:
  _346 = std::basic_ostream<char>::operator<< (_344, node_620);
  goto <bb 308>;

<L198>:
  goto <bb 352> (<L95>);

  <bb 308>:
  # DEBUG __out => _346
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_346, " ", 1);
  goto <bb 310>;

<L199>:
  goto <bb 352> (<L95>);

  <bb 310>:
  _348 = std::basic_ostream<char>::operator<< (_346, _429);
  goto <bb 312>;

<L200>:
  goto <bb 352> (<L95>);

  <bb 312>:
  # DEBUG this => _348
  # DEBUG __pf => endl
  # DEBUG __os => _348
  _810 = _348->_vptr.basic_ostream;
  _811 = MEM[(long int *)_810 + -24B];
  _812 = (sizetype) _811;
  _813 = _348 + _812;
  # DEBUG this => _813
  # DEBUG __c => 10
  _552 = MEM[(const struct basic_ios *)_813]._M_ctype;
  # DEBUG __f => _552
  if (_552 == 0B)
    goto <bb 313>;
  else
    goto <bb 315>;

  <bb 313>:
  std::__throw_bad_cast ();

<L201>:
  goto <bb 352> (<L95>);

  <bb 315>:
  # DEBUG this => _552
  # DEBUG __c => 10
  _818 = MEM[(const struct ctype *)_552]._M_widen_ok;
  if (_818 != 0)
    goto <bb 316>;
  else
    goto <bb 317>;

  <bb 316>:
  _821 = MEM[(const struct ctype *)_552]._M_widen[10];
  pretmp_1048 = (int) _821;
  goto <bb 323>;

  <bb 317>:
  # DEBUG this => _552
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_552);
  goto <bb 319>;

<L202>:
  goto <bb 352> (<L95>);

  <bb 319>:
  _826 = MEM[(const struct ctype *)_552].D.20312._vptr.facet;
  _827 = MEM[(int (*__vtbl_ptr_type) () *)_826 + 48B];
  PROF_831 = [obj_type_ref] OBJ_TYPE_REF(_827;(const struct ctype)_552->6);
  if (PROF_831 == do_widen)
    goto <bb 323>;
  else
    goto <bb 320>;

  <bb 320>:
  _833 = OBJ_TYPE_REF(_827;(const struct ctype)_552->6) (_552, 10);
  goto <bb 322>;

<L203>:
  goto <bb 352> (<L95>);

  <bb 322>:
  pretmp_1049 = (int) _833;

  <bb 323>:
  # prephitmp_1050 = PHI <pretmp_1048(316), 10(319), pretmp_1049(322)>
  _816 = std::basic_ostream<char>::put (_348, prephitmp_1050);
  goto <bb 325>;

<L204>:
  goto <bb 352> (<L95>);

  <bb 325>:
  # DEBUG __os => _816
  std::basic_ostream<char>::flush (_816);
  goto <bb 292>;

<L205>:
  goto <bb 352> (<L95>);

  <bb 327>:
  _603 = MEM[(_Bit_type * *)&channel_vector];
  # DEBUG D#33 => &channel_vector
  # DEBUG __n => 0
  # DEBUG this => D#33
  # DEBUG this => NULL
  # DEBUG __x => _603
  # DEBUG __y => 0
  # DEBUG this => D#16
  # DEBUG __x => _603
  # DEBUG __y => 0
  # DEBUG this => D#16
  # DEBUG this => D#17
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __x => _603
  # DEBUG __y => 1
  # DEBUG this => &D.47408
  _711 = *_603;
  _729 = _711 & 1;
  if (_729 != 0)
    goto <bb 331>;
  else
    goto <bb 330>;

  <bb 328>:
  _356 = (long unsigned int) i_357;
  # DEBUG D#33 => &channel_vector
  # DEBUG __n => _356
  # DEBUG this => D#33
  _511 = (unsigned int) _356;
  _512 = _511 & 63;
  _513 = _356 >> 6;
  _514 = _513 * 8;
  _515 = _603 + _514;
  # DEBUG this => NULL
  # DEBUG __x => _515
  # DEBUG __y => _512
  # DEBUG this => D#16
  # DEBUG __x => _515
  # DEBUG __y => _512
  # DEBUG this => D#16
  # DEBUG this => D#17
  # DEBUG this => D#17
  _516 = 1 << _512;
  # DEBUG this => NULL
  # DEBUG __x => _515
  # DEBUG __y => _516
  # DEBUG this => &D.47408
  _509 = *_515;
  _510 = _509 & _516;
  if (_510 != 0)
    goto <bb 329>;
  else
    goto <bb 330>;

  <bb 329>:
  goto <bb 332>;

  <bb 330>:
  __assert_fail ("channel_vector[i] == true", "networks/cmesh.cpp", 302, &__PRETTY_FUNCTION__);

  <bb 331>:

  <bb 332>:
  # i_867 = PHI <0(331), i_357(329)>
  # DEBUG i => i_867
  # DEBUG D#33 => &channel_vector
  # DEBUG __n => 0
  # DEBUG this => D#33
  # DEBUG this => NULL
  # DEBUG __x => _603
  # DEBUG __y => 0
  # DEBUG this => D#16
  # DEBUG __x => _603
  # DEBUG __y => 0
  # DEBUG this => D#16
  # DEBUG this => D#17
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __x => _603
  # DEBUG __y => 1
  # DEBUG this => &D.47408
  i_357 = i_867 + 1;
  # DEBUG i => i_357
  # DEBUG i => i_357
  if (i_357 >= _709)
    goto <bb 333>;
  else
    goto <bb 328>;

  <bb 333>:
  gTrace.77_359 = gTrace;
  if (gTrace.77_359 != 0)
    goto <bb 335>;
  else
    goto <bb 334>;

  <bb 334>:
  # DEBUG this => &channel_vector
  # DEBUG this => &channel_vector.D.43041
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&channel_vector.D.43041);
  # DEBUG D#94 => &MEM[(struct _Bvector_base *)&channel_vector]._M_impl
  # DEBUG this => D#94
  # DEBUG this => D#94
  # DEBUG this => D#94
  MEM[(struct  &)&channel_vector] ={v} {CLOBBER};
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&name);
  name ={v} {CLOBBER};
  channel_vector ={v} {CLOBBER};
  return;

  <bb 335>:
  # DEBUG __out => &cout
  # DEBUG __s => "Setup Finished Link"
  # DEBUG __s => "Setup Finished Link"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Setup Finished Link", 19);
  goto <bb 337>;

<L206>:
  goto <bb 352> (<L95>);

  <bb 337>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (&cout);
  goto <bb 334>;

<L207>:
  goto <bb 352> (<L95>);

<L87>:
  # DEBUG this => &D.46327
  # DEBUG this => &D.46327
  # DEBUG this => &D.46327
  _360 = MEM[(char * *)&D.46327];
  # DEBUG D#5 => &D.46327
  # DEBUG this => D#5
  # DEBUG this => &D.46327
  if (&D.46327.D.11539._M_local_buf != _360)
    goto <bb 340>;
  else
    goto <bb 341>;

  <bb 340>:
  # DEBUG D#68 => D.46327.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46327
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46327
  # DEBUG this => D#5
  # DEBUG this => &D.46327
  # DEBUG D#65 => &D.46327._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _360
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _360
  # DEBUG this => D#59
  # DEBUG D.55770 => D#60
  operator delete (_360);

  <bb 341>:
  # DEBUG D#69 => &D.46327._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46327 ={v} {CLOBBER};
  resx 3

<L91>:
  # DEBUG this => &D.46336
  # DEBUG this => &D.46336
  # DEBUG this => &D.46336
  _366 = MEM[(char * *)&D.46336];
  # DEBUG D#5 => &D.46336
  # DEBUG this => D#5
  # DEBUG this => &D.46336
  if (&D.46336.D.11539._M_local_buf != _366)
    goto <bb 343>;
  else
    goto <bb 344>;

  <bb 343>:
  # DEBUG D#68 => D.46336.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46336
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46336
  # DEBUG this => D#5
  # DEBUG this => &D.46336
  # DEBUG D#65 => &D.46336._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _366
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _366
  # DEBUG this => D#59
  # DEBUG D.55789 => D#60
  operator delete (_366);

  <bb 344>:
  # DEBUG D#69 => &D.46336._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46336 ={v} {CLOBBER};
  resx 14

<L208>:
  goto <bb 352> (<L95>);

<L129>:

<L93>:
  # DEBUG this => &D.46340
  # DEBUG this => &D.46340
  # DEBUG this => &D.46340
  _353 = MEM[(char * *)&D.46340];
  # DEBUG D#5 => &D.46340
  # DEBUG this => D#5
  # DEBUG this => &D.46340
  if (&D.46340.D.11539._M_local_buf != _353)
    goto <bb 348>;
  else
    goto <bb 349>;

  <bb 348>:
  # DEBUG D#68 => D.46340.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46340
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46340
  # DEBUG this => D#5
  # DEBUG this => &D.46340
  # DEBUG D#65 => &D.46340._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _353
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _353
  # DEBUG this => D#59
  # DEBUG D.55804 => D#60
  operator delete (_353);

  <bb 349>:
  # DEBUG D#69 => &D.46340._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46340 ={v} {CLOBBER};
  resx 19

<L209>:
  goto <bb 352> (<L95>);

<L118>:

<L95>:
  D.46337 ={v} {CLOBBER};
  # DEBUG this => &channel_vector
  # DEBUG this => &channel_vector.D.43041
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&channel_vector.D.43041);
  # DEBUG D#94 => &MEM[(struct _Bvector_base *)&channel_vector]._M_impl
  # DEBUG this => D#94
  # DEBUG this => D#94
  # DEBUG this => D#94
  MEM[(struct  &)&channel_vector] ={v} {CLOBBER};
  resx 13

<L210>:
  goto <bb 355> (<L96>);

<L117>:

<L96>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&name);
  resx 6

  <bb 356>:
  # DEBUG __first => _670
  # DEBUG __last => _668
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => _670
  # DEBUG __last => _668
  __last.25_678 = (long int) _668;
  __first.26_679 = (long int) _670;
  _680 = __last.25_678 - __first.26_679;
  __dnew.22_681 = (long unsigned int) _680;
  __dnew = __dnew.22_681;
  if (__dnew.22_681 > 15)
    goto <bb 39>;
  else
    goto <bb 41>;

  <bb 357>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L211>:
  goto <bb 70> (<L114>);

  <bb 359>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L212>:
  goto <bb 70> (<L114>);

  <bb 361>:
  # DEBUG __first => _672
  # DEBUG __last => _669
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => _672
  # DEBUG __last => _669
  __last.25_690 = (long int) _669;
  __first.26_691 = (long int) _672;
  _692 = __last.25_690 - __first.26_691;
  __dnew.22_693 = (long unsigned int) _692;
  __dnew = __dnew.22_693;
  if (__dnew.22_693 > 15)
    goto <bb 49>;
  else
    goto <bb 52>;

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE24_M_get_insert_unique_posERS7_, funcdef_no=2378, decl_uid=45670, cgraph_uid=844, symbol_order=850)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_tree * const this, const struct key_type & __k)
{
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58002;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57987;
  struct _Rb_tree_node_base * const __j$_M_node;
  bool __comp;
  struct _Rb_tree_node_base * const D.49543;
  struct _Rb_tree_node_base * const D.49544;
  struct pair D.50379;
  const size_type pretmp_1;
  char * const prephitmp_13;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node_base * _24;
  const size_type _34;
  char * const _37;
  long unsigned int _40;
  char * const pretmp_44;
  long unsigned int _52;
  const size_type prephitmp_61;
  char * const pretmp_64;
  char * const prephitmp_65;
  const size_type pretmp_67;
  const size_type pretmp_76;
  const size_type prephitmp_77;
  const size_type prephitmp_78;
  const size_type pretmp_79;
  char * const pretmp_80;
  char * const _83;
  const size_type _84;

  <bb 2>:
  _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
  # DEBUG D#57 => this_9(D)
  # DEBUG this => D#57
  # DEBUG __x => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#401 => &this_9(D)->_M_impl._M_header
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => D#401
  # DEBUG __x => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = &this_9(D)->_M_impl._M_header;
  goto <bb 15>;

  <bb 4>:
  pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_44 = MEM[(char * *)__k_12(D)];
  goto <bb 7>;

  <bb 5>:
  # _6 = PHI <_23(27), _22(28)>
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __comp => __comp_56
  # DEBUG __y => _10
  # DEBUG __x => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # _10 = PHI <_21(4), _6(6)>
  # DEBUG __comp => 1
  # DEBUG __x => _10
  # DEBUG __y => _10
  # DEBUG __x => _10
  # DEBUG __x => _10
  # DEBUG this => _10
  # DEBUG D#156 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
  # DEBUG __r => D#156
  # DEBUG __x => D#156
  # DEBUG this => D#80
  # DEBUG D#381 => &MEM[(const struct pair &)_10 + 32].first
  # DEBUG D#163 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#79 => D#163
  # DEBUG __x => __k_12(D)
  # DEBUG __y => D#381
  # DEBUG this => D#79
  # DEBUG __lhs => __k_12(D)
  # DEBUG __rhs => D#381
  # DEBUG this => __k_12(D)
  # DEBUG __str => D#381
  # DEBUG D#400 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#7 => __k_12(D)
  # DEBUG this => D#7
  # DEBUG __size => D#400
  _34 = MEM[(long unsigned int *)_10 + 40B];
  # DEBUG D#7 => D#381
  # DEBUG this => D#7
  # DEBUG __osize => _34
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __len => D#379
  # DEBUG this => D#381
  _37 = MEM[(char * *)_10 + 32B];
  # DEBUG D#5 => D#381
  # DEBUG this => D#5
  # DEBUG D#399 => MEM[(char * *)__k_12(D)]
  # DEBUG D#5 => __k_12(D)
  # DEBUG this => D#5
  # DEBUG __s1 => D#399
  # DEBUG __s2 => _37
  # DEBUG __n => D#379
  __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
  # DEBUG __r => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => D#400
  # DEBUG __n2 => _34
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_type) _40;
  # DEBUG __d => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_42 = (int) _40;

  <bb 11>:
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __r => __r_43
  # DEBUG D#387 => {CLOBBER}
  # DEBUG __size => D#387
  # DEBUG D#388 => {CLOBBER}
  # DEBUG __osize => D#388
  # DEBUG __comp => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __comp => 1
  _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
  # DEBUG D#77 => _10
  # DEBUG __x => D#77
  goto <bb 5>;

  <bb 13>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG __comp => 0
  _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
  # DEBUG D#78 => _10
  # DEBUG __x => D#78
  goto <bb 5>;

  <bb 14>:
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # _83 = PHI <_37(5)>
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>

  <bb 26>:
  # DEBUG this => &__j
  # DEBUG __x => _85
  # DEBUG __j$_M_node => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG this => &__j
  # DEBUG __x => _57
  # DEBUG __j$_M_node => _57
  _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
  # DEBUG D#133 => this_9(D)
  # DEBUG this => D#133
  # DEBUG this => NULL
  # DEBUG __x => _24
  # DEBUG this => &__j
  # DEBUG __x => &D.49542
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &D.49545
  # DEBUG __a => &D.49543
  # DEBUG __b => &D.49544
  MEM[(struct pair *)&D.50379] = 0B;
  MEM[(struct pair *)&D.50379 + 8B] = _57;
  goto <bb 25>;

  <bb 17>:
  # DEBUG this => &__j
  __j$_M_node_25 = std::_Rb_tree_decrement (_57);
  # DEBUG __j$_M_node => __j$_M_node_25
  pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_80 = MEM[(char * *)__k_12(D)];
  pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
  pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  <bb 18>:
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_node => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG this => __j$_M_node_20
  # DEBUG D#160 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
  # DEBUG __r => D#160
  # DEBUG __x => D#160
  # DEBUG this => D#80
  # DEBUG D#382 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
  # DEBUG D#162 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#79 => D#162
  # DEBUG __x => D#382
  # DEBUG __y => __k_12(D)
  # DEBUG this => D#79
  # DEBUG __lhs => D#382
  # DEBUG __rhs => __k_12(D)
  # DEBUG this => D#382
  # DEBUG __str => __k_12(D)
  # DEBUG D#398 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
  # DEBUG D#7 => D#382
  # DEBUG this => D#7
  # DEBUG __size => D#398
  # DEBUG D#397 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#7 => __k_12(D)
  # DEBUG this => D#7
  # DEBUG __osize => D#397
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#380
  # DEBUG this => __k_12(D)
  # DEBUG D#396 => MEM[(char * *)__k_12(D)]
  # DEBUG D#5 => __k_12(D)
  # DEBUG this => D#5
  # DEBUG D#395 => MEM[(char * *)__j$_M_node_20 + 32B]
  # DEBUG D#5 => D#382
  # DEBUG this => D#5
  # DEBUG __s1 => D#395
  # DEBUG __s2 => D#396
  # DEBUG __n => D#380
  __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __r => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG __n1 => D#398
  # DEBUG __n2 => D#397
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_type) _52;
  # DEBUG __d => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;

  <bb 20>:
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 21>:
  __r_54 = (int) _52;

  <bb 22>:
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __r => __r_55
  # DEBUG D#393 => {CLOBBER}
  # DEBUG __size => D#393
  # DEBUG D#394 => {CLOBBER}
  # DEBUG __osize => D#394
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:

  <bb 31>:
  # DEBUG __r => NULL
  # DEBUG this => &D.49548
  # DEBUG __a => &D.49546
  # DEBUG __b => &D.49547
  MEM[(struct pair *)&D.50379] = 0B;
  MEM[(struct pair *)&D.50379 + 8B] = _5;
  goto <bb 25>;

  <bb 24>:

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG this => &D.49550
  # DEBUG __a => &__j._M_node
  # DEBUG __b => &D.49549
  MEM[(struct pair *)&D.50379] = __j$_M_node_20;
  MEM[(struct pair *)&D.50379 + 8B] = 0B;

  <bb 25>:

  <bb 29>:
  # DEBUG D#161 => {CLOBBER}
  # DEBUG __j$_M_node => D#161
  return D.50379;

}



;; Function static void CMesh::RegisterRoutingFunctions() (_ZN5CMesh24RegisterRoutingFunctionsEv, funcdef_no=2000, decl_uid=45023, cgraph_uid=466, symbol_order=472)

Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static void CMesh::RegisterRoutingFunctions() ()
{
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.59057;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.59042;
  struct iterator D.59027;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.58965;
  struct iterator D.58964;
  struct iterator D.58963;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.509;
  struct _Rb_tree_node_base * SR.512;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.58959;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58861;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58846;
  struct iterator D.58831;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.58769;
  struct iterator D.58768;
  struct iterator D.58767;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.509;
  struct _Rb_tree_node_base * SR.512;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.58763;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58665;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58650;
  struct iterator D.58635;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.58573;
  struct iterator D.58572;
  struct iterator D.58571;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.509;
  struct _Rb_tree_node_base * SR.512;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.58567;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58469;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58454;
  struct iterator D.58439;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.58377;
  struct iterator D.58376;
  struct iterator D.58375;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.509;
  struct _Rb_tree_node_base * SR.512;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.58371;
  const struct key_type D.46215;
  const struct key_type D.46212;
  const struct key_type D.46209;
  const struct key_type D.46206;
  char * const _26;
  char * const _33;
  char * const _35;
  char * const _37;
  const size_type prephitmp_44;
  char * const prephitmp_45;
  size_type pretmp_46;
  size_type pretmp_53;
  size_type prephitmp_54;
  char * const pretmp_55;
  char * const prephitmp_56;
  char * const prephitmp_58;
  const size_type pretmp_59;
  const size_type prephitmp_60;
  char * const pretmp_61;
  const size_type pretmp_78;
  const size_type prephitmp_79;
  char * const pretmp_80;
  char * const prephitmp_81;
  char * const _92;
  char * const _95;
  char * const _115;
  const size_type _121;
  char * const _126;
  long unsigned int _128;
  const size_type _134;
  char * const _137;
  char * const _138;
  long unsigned int _140;
  bool _151;
  char * _165;
  char * const _167;
  char * const _170;
  char * _179;
  long unsigned int __dnew.23_180;
  long unsigned int __dnew.23_183;
  char * const _184;
  char * _185;
  const size_type _196;
  char * const _201;
  long unsigned int _203;
  const size_type _209;
  char * const _212;
  long unsigned int _215;
  char * _225;
  long unsigned int __dnew.23_226;
  const char_type _228;
  char * _231;
  char * const _242;
  char * const _245;
  const size_type _271;
  char * const _276;
  long unsigned int _278;
  const size_type _284;
  char * const _287;
  long unsigned int _290;
  char * _315;
  char * const _317;
  char * const _320;
  char * const pretmp_328;
  char * _329;
  long unsigned int __dnew.23_330;
  long unsigned int __dnew.23_333;
  char * const _334;
  char * _335;
  bool _344;
  bool _345;
  const size_type _346;
  char * const _351;
  long unsigned int _353;
  bool _357;
  const size_type _359;
  char * const _362;
  long unsigned int _365;
  bool _369;
  char * _375;
  long unsigned int __dnew.23_376;
  const char_type _378;
  char * _381;
  char * const pretmp_456;
  char * const prephitmp_457;
  size_type prephitmp_473;
  char * const pretmp_474;
  char * const prephitmp_478;
  const size_type pretmp_479;
  const size_type pretmp_497;
  char * const pretmp_499;
  bool _516;
  char * const prephitmp_548;
  char * const pretmp_549;
  char * const prephitmp_550;
  const size_type prephitmp_551;
  char * const prephitmp_552;
  char * const pretmp_599;
  char * const prephitmp_600;
  char * const pretmp_603;

  <bb 2>:
  # DEBUG D#37 => &D.46205
  # DEBUG this => D#37
  # DEBUG D#36 => D#37
  # DEBUG this => D#36
  # DEBUG D#109 => &D.46205
  # DEBUG this => &D.46206
  # DEBUG __s => "dor_cmesh"
  # DEBUG __a => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => &D.46206
  # DEBUG D#106 => &D.46206._M_dataplus
  # DEBUG D#53 => D#108
  # DEBUG this => D#106
  # DEBUG __dat => &D.46206.D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#106
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.46206]._M_p = &D.46206.D.11539._M_local_buf;
  # DEBUG __s => "dor_cmesh"
  # DEBUG this => &D.46206
  # DEBUG __beg => "dor_cmesh"
  # DEBUG __end => &MEM[(void *)"dor_cmesh" + 9B]
  # DEBUG this => &D.46206
  # DEBUG __beg => "dor_cmesh"
  # DEBUG __end => &MEM[(void *)"dor_cmesh" + 9B]
  # DEBUG this => &D.46206
  # DEBUG __beg => "dor_cmesh"
  # DEBUG __end => &MEM[(void *)"dor_cmesh" + 9B]
  # DEBUG __ptr => "dor_cmesh"
  # DEBUG __first => "dor_cmesh"
  # DEBUG __last => &MEM[(void *)"dor_cmesh" + 9B]
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => "dor_cmesh"
  # DEBUG __last => &MEM[(void *)"dor_cmesh" + 9B]
  # DEBUG __dnew => 9
  # DEBUG D#5 => &D.46206
  # DEBUG this => D#5
  # DEBUG __p => &D.46206.D.11539._M_local_buf
  # DEBUG __k1 => "dor_cmesh"
  # DEBUG __k2 => &MEM[(void *)"dor_cmesh" + 9B]
  # DEBUG __d => &D.46206.D.11539._M_local_buf
  # DEBUG __s => "dor_cmesh"
  # DEBUG __n => 9
  # DEBUG __s1 => &D.46206.D.11539._M_local_buf
  # DEBUG __s2 => "dor_cmesh"
  # DEBUG __n => 9
  __builtin_memcpy (&D.46206.D.11539._M_local_buf, "dor_cmesh", 9);
  # DEBUG this => &D.46206
  # DEBUG __n => 9
  # DEBUG D#10 => &D.46206
  # DEBUG __length => 9
  # DEBUG this => D#10
  MEM[(size_type *)&D.46206 + 8B] = 9;
  # DEBUG D#5 => &D.46206
  # DEBUG this => D#5
  # DEBUG __c1 => &MEM[(void *)&D.46206 + 25B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.46206 + 25] = 0;
  # DEBUG D#477 => {CLOBBER}
  # DEBUG __dnew => D#477
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.46206
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.46206
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.46206
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_112 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#57 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#57
  # DEBUG D#159 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.46206
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_112
  if (__i$_M_node_112 == 0B)
    goto <bb 139>;
  else
    goto <bb 5>;

  <bb 3>:
  # __i$_M_node_269 = PHI <__i$_M_node_116(11), __i$_M_node_117(12)>
  # __i$_M_node_282 = PHI <__i$_M_node_306(11), __i$_M_node_305(12)>
  # DEBUG __y => __i$_M_node_282
  # DEBUG __x => __i$_M_node_269
  if (__i$_M_node_269 == 0B)
    goto <bb 13>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:

  <bb 6>:
  # __i$_M_node_306 = PHI <__i$_M_node_112(5), __i$_M_node_269(4)>
  # __i$_M_node_305 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(5), __i$_M_node_282(4)>
  # DEBUG __y => __i$_M_node_305
  # DEBUG __x => __i$_M_node_306
  # DEBUG __x => __i$_M_node_306
  # DEBUG __x => __i$_M_node_306
  # DEBUG this => __i$_M_node_306
  # DEBUG D#156 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_306]._M_value_field
  # DEBUG __r => D#156
  # DEBUG __x => D#156
  # DEBUG this => D#80
  # DEBUG D#469 => &MEM[(const struct pair &)__i$_M_node_306 + 32].first
  # DEBUG D#157 => &D#158->_M_impl._M_key_compare
  # DEBUG D#79 => D#157
  # DEBUG __x => D#469
  # DEBUG __y => &D.46206
  # DEBUG this => D#79
  # DEBUG __lhs => D#469
  # DEBUG __rhs => &D.46206
  # DEBUG this => D#469
  # DEBUG __str => &D.46206
  _121 = MEM[(long unsigned int *)__i$_M_node_306 + 40B];
  # DEBUG D#7 => D#469
  # DEBUG this => D#7
  # DEBUG __size => _121
  # DEBUG D#7 => &D.46206
  # DEBUG this => D#7
  # DEBUG __osize => 9
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_149 = MIN_EXPR <_121, 9>;
  # DEBUG __len => D#461
  # DEBUG this => &D.46206
  # DEBUG D#5 => &D.46206
  # DEBUG this => D#5
  _126 = MEM[(char * *)__i$_M_node_306 + 32B];
  # DEBUG D#5 => D#469
  # DEBUG this => D#5
  # DEBUG __s1 => _126
  # DEBUG __s2 => &D.46206.D.11539._M_local_buf
  # DEBUG __n => D#461
  __r_127 = __builtin_memcmp (_126, &D.46206.D.11539._M_local_buf, __len_149);
  # DEBUG __r => NULL
  if (__r_127 == 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  # DEBUG __n1 => _121
  # DEBUG __n2 => 9
  _128 = _121 - 9;
  __d_129 = (const difference_type) _128;
  # DEBUG __d => __d_129
  if (__d_129 > 2147483647)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  if (__d_129 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  __r_130 = (int) _128;

  <bb 10>:
  # __r_131 = PHI <__r_127(6), __r_130(9)>
  # DEBUG __r => __r_131
  # DEBUG D#482 => {CLOBBER}
  # DEBUG __size => D#482
  # DEBUG D#483 => {CLOBBER}
  # DEBUG __osize => D#483
  if (__r_131 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_306
  __i$_M_node_116 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_306 + 16B];
  # DEBUG D#77 => __i$_M_node_306
  # DEBUG __x => D#77
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 12>:
  # DEBUG __r => NULL
  __i$_M_node_117 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_306 + 24B];
  # DEBUG D#78 => __i$_M_node_306
  # DEBUG __x => D#78
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 13>:
  # __i$_M_node_576 = PHI <__i$_M_node_282(3)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_576
  # DEBUG __i$_M_node => __i$_M_node_576
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#58 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#58
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_576 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 139>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_576
  # DEBUG D#307 => &MEM[(struct _Rb_tree_node *)__i$_M_node_576]._M_value_field
  # DEBUG __r => D#307
  # DEBUG D#470 => &MEM[(struct pair &)__i$_M_node_576 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.46206
  # DEBUG __y => D#470
  # DEBUG this => D#79
  # DEBUG __lhs => &D.46206
  # DEBUG __rhs => D#470
  # DEBUG this => &D.46206
  # DEBUG __str => D#470
  # DEBUG D#7 => &D.46206
  # DEBUG this => D#7
  # DEBUG __size => 9
  _134 = MEM[(long unsigned int *)__i$_M_node_576 + 40B];
  # DEBUG D#7 => D#470
  # DEBUG this => D#7
  # DEBUG __osize => _134
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_134 <= 8)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __len_136 = PHI <_134(14), 9(15)>
  # DEBUG __len => D#462
  # DEBUG this => D#470
  _137 = MEM[(char * *)__i$_M_node_576 + 32B];
  # DEBUG D#5 => D#470
  # DEBUG this => D#5
  # DEBUG D#5 => &D.46206
  # DEBUG this => D#5
  # DEBUG __s1 => &D.46206.D.11539._M_local_buf
  # DEBUG __s2 => _137
  # DEBUG __n => D#462
  __r_139 = __builtin_memcmp (&D.46206.D.11539._M_local_buf, _137, __len_136);
  # DEBUG __r => NULL
  if (__r_139 == 0)
    goto <bb 17>;
  else
    goto <bb 20>;

  <bb 17>:
  # DEBUG __n1 => 9
  # DEBUG __n2 => _134
  _140 = 9 - _134;
  __d_141 = (const difference_type) _140;
  # DEBUG __d => __d_141
  if (__d_141 > 2147483647)
    goto <bb 25>;
  else
    goto <bb 18>;

  <bb 18>:
  if (__d_141 < -2147483648)
    goto <bb 21>;
  else
    goto <bb 19>;

  <bb 19>:
  __r_142 = (int) _140;

  <bb 20>:
  # __r_143 = PHI <__r_139(16), __r_142(19)>
  # DEBUG __r => __r_143
  # DEBUG D#488 => {CLOBBER}
  # DEBUG __size => D#488
  # DEBUG D#489 => {CLOBBER}
  # DEBUG __osize => D#489
  if (__r_143 < 0)
    goto <bb 139>;
  else
    goto <bb 25>;

  <bb 21>:
  # __i$_M_node_199 = PHI <__i$_M_node_576(18), __i$_M_node_211(139)>
  # DEBUG this => &D.58377
  # DEBUG __a => &D.46206
  # DEBUG __b => NULL
  # DEBUG this => &D.58377.first
  # DEBUG __str => &D.46206
  # DEBUG this => &D.46206
  # DEBUG D#138 => &D.46206._M_dataplus
  # DEBUG this => &D.58377.first
  # DEBUG D#139 => &MEM[(struct basic_string *)&D.58377]._M_dataplus
  # DEBUG D#53 => D#138
  # DEBUG this => D#139
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58377].D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#139
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.58377]._M_p = &MEM[(struct basic_string *)&D.58377].D.11539._M_local_buf;
  # DEBUG D#5 => &D.46206
  # DEBUG this => D#5
  # DEBUG D#6 => &D.46206
  # DEBUG this => D#6
  # DEBUG D#5 => &D.46206
  # DEBUG this => D#5
  # DEBUG this => &D.58377.first
  # DEBUG __beg => &D.46206.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.46206 + 25B]
  # DEBUG this => &D.58377.first
  # DEBUG __beg => &D.46206.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.46206 + 25B]
  # DEBUG this => &D.58377.first
  # DEBUG __beg => &D.46206.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.46206 + 25B]
  # DEBUG __ptr => &D.46206.D.11539._M_local_buf
  # DEBUG __first => &D.46206.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.46206 + 25B]
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => &D.46206.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.46206 + 25B]
  # DEBUG __dnew => 9
  # DEBUG D#5 => &D.58377.first
  # DEBUG this => D#5
  # DEBUG __p => &MEM[(struct basic_string *)&D.58377].D.11539._M_local_buf
  # DEBUG __k1 => &D.46206.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.46206 + 25B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.58377].D.11539._M_local_buf
  # DEBUG __s => &D.46206.D.11539._M_local_buf
  # DEBUG __n => 9
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.58377].D.11539._M_local_buf
  # DEBUG __s2 => &D.46206.D.11539._M_local_buf
  # DEBUG __n => 9
  __builtin_memcpy (&MEM[(struct basic_string *)&D.58377].D.11539._M_local_buf, &D.46206.D.11539._M_local_buf, 9);
  # DEBUG this => &D.58377.first
  # DEBUG __n => 9
  # DEBUG D#10 => &D.58377.first
  # DEBUG __length => 9
  # DEBUG this => D#10
  MEM[(size_type *)&D.58377 + 8B] = 9;
  # DEBUG D#5 => &D.58377.first
  # DEBUG this => D#5
  # DEBUG __c1 => &MEM[(void *)&D.58377 + 25B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.58377 + 25] = 0;
  # DEBUG D#490 => {CLOBBER}
  # DEBUG __dnew => D#490
  D.58377.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_199
  # DEBUG __x => &D.58377
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_199;
  # DEBUG __x => &D.58377
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#306 => &__an
  D.58375 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.86.constprop (&gRoutingFunctionMap._M_t, __pos, &D.58377);

  <bb 22>:
  __i$_M_node_91 = MEM[(struct _Rb_tree_iterator *)&D.58375];
  # DEBUG __i$_M_node => __i$_M_node_91
  # DEBUG this => &D.58377
  # DEBUG D#70 => &D.58377.first
  # DEBUG this => D#70
  # DEBUG this => D#70
  # DEBUG this => D#70
  _92 = MEM[(char * *)&D.58377];
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  if (&MEM[(const struct basic_string *)&D.58377].D.11539._M_local_buf != _92)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#70].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#70
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  # DEBUG D#65 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _92
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _92
  # DEBUG this => D#59
  # DEBUG D.58331 => D#60
  operator delete (_92);

  <bb 24>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.58377 ={v} {CLOBBER};
  pretmp_456 = MEM[(char * *)&D.46206];

  <bb 25>:
  # __i$_M_node_93 = PHI <__i$_M_node_576(17), __i$_M_node_91(24), __i$_M_node_576(20)>
  # prephitmp_457 = PHI <&D.46206.D.11539._M_local_buf(17), pretmp_456(24), &D.46206.D.11539._M_local_buf(20)>
  # DEBUG __i$_M_node => __i$_M_node_93
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_93
  # DEBUG D#308 => &MEM[(struct _Rb_tree_node *)__i$_M_node_93]._M_value_field
  # DEBUG __r => D#308
  # DEBUG D#310 => {CLOBBER}
  # DEBUG __i$_M_node => D#310
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_93 + 64] = dor_cmesh;
  # DEBUG this => &D.46206
  # DEBUG this => &D.46206
  # DEBUG this => &D.46206
  # DEBUG D#546 => MEM[(char * *)&D.46206]
  # DEBUG D#5 => &D.46206
  # DEBUG this => D#5
  # DEBUG this => &D.46206
  if (&D.46206.D.11539._M_local_buf != prephitmp_457)
    goto <bb 29>;
  else
    goto <bb 30>;

<L8>:
  # DEBUG this => &D.58377
  # DEBUG D#70 => &D.58377.first
  # DEBUG this => D#70
  # DEBUG this => D#70
  # DEBUG this => D#70
  _95 = MEM[(char * *)&D.58377];
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  if (&MEM[(const struct basic_string *)&D.58377].D.11539._M_local_buf != _95)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#70].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#70
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  # DEBUG D#65 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _95
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _95
  # DEBUG this => D#59
  # DEBUG D.58315 => D#60
  operator delete (_95);

  <bb 28>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.58377 ={v} {CLOBBER};
  resx 17

  <bb 29>:
  # DEBUG D#68 => D.46206.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46206
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46206
  # DEBUG this => D#5
  # DEBUG this => &D.46206
  # DEBUG D#65 => &D.46206._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => D#546
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => D#546
  # DEBUG this => D#59
  # DEBUG D.56383 => D#60
  operator delete (prephitmp_457);

  <bb 30>:
  # DEBUG D#69 => &D.46206._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46206 ={v} {CLOBBER};
  # DEBUG this => &D.46205
  # DEBUG this => &D.46205
  # DEBUG D#37 => &D.46208
  # DEBUG this => D#37
  # DEBUG D#36 => D#37
  # DEBUG this => D#36
  # DEBUG D#109 => &D.46208
  # DEBUG this => &D.46209
  # DEBUG __s => "dor_no_express_cmesh"
  # DEBUG __a => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => &D.46209
  # DEBUG D#106 => &D.46209._M_dataplus
  # DEBUG D#53 => D#108
  # DEBUG this => D#106
  # DEBUG __dat => &D.46209.D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#106
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.46209]._M_p = &D.46209.D.11539._M_local_buf;
  # DEBUG __s => "dor_no_express_cmesh"
  # DEBUG this => &D.46209
  # DEBUG __beg => "dor_no_express_cmesh"
  # DEBUG __end => &MEM[(void *)"dor_no_express_cmesh" + 20B]
  # DEBUG this => &D.46209
  # DEBUG __beg => "dor_no_express_cmesh"
  # DEBUG __end => &MEM[(void *)"dor_no_express_cmesh" + 20B]
  # DEBUG this => &D.46209
  # DEBUG __beg => "dor_no_express_cmesh"
  # DEBUG __end => &MEM[(void *)"dor_no_express_cmesh" + 20B]
  # DEBUG __ptr => "dor_no_express_cmesh"
  # DEBUG __first => "dor_no_express_cmesh"
  # DEBUG __last => &MEM[(void *)"dor_no_express_cmesh" + 20B]
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => "dor_no_express_cmesh"
  # DEBUG __last => &MEM[(void *)"dor_no_express_cmesh" + 20B]
  __dnew = 20;
  _179 = std::__cxx11::basic_string<char>::_M_create (&D.46209, &__dnew, 0);
  # DEBUG D#8 => &D.46209
  # DEBUG __p => _179
  # DEBUG this => D#8
  MEM[(char * *)&D.46209] = _179;
  __dnew.23_180 = __dnew;
  # DEBUG D#9 => &D.46209
  # DEBUG __capacity => __dnew.23_180
  # DEBUG this => D#9
  MEM[(size_type *)&D.46209 + 16B] = __dnew.23_180;
  # DEBUG D#5 => &D.46209
  # DEBUG this => D#5
  # DEBUG __p => _179
  # DEBUG __k1 => "dor_no_express_cmesh"
  # DEBUG __k2 => &MEM[(void *)"dor_no_express_cmesh" + 20B]
  # DEBUG __d => _179
  # DEBUG __s => "dor_no_express_cmesh"
  # DEBUG __n => 20
  # DEBUG __s1 => _179
  # DEBUG __s2 => "dor_no_express_cmesh"
  # DEBUG __n => 20
  __builtin_memcpy (_179, "dor_no_express_cmesh", 20);
  __dnew.23_183 = __dnew;
  # DEBUG this => &D.46209
  # DEBUG __n => __dnew.23_183
  # DEBUG D#10 => &D.46209
  # DEBUG __length => __dnew.23_183
  # DEBUG this => D#10
  MEM[(size_type *)&D.46209 + 8B] = __dnew.23_183;
  _184 = MEM[(char * *)&D.46209];
  # DEBUG D#5 => &D.46209
  # DEBUG this => D#5
  _185 = _184 + __dnew.23_183;
  # DEBUG __c1 => _185
  # DEBUG __c2 => D#11
  MEM[(char_type &)_185] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.46209
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.46209
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.46209
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_187 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#57 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#57
  # DEBUG D#159 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.46209
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_187
  if (__i$_M_node_187 == 0B)
    goto <bb 140>;
  else
    goto <bb 31>;

  <bb 31>:
  pretmp_479 = MEM[(long unsigned int *)&D.46209 + 8B];
  pretmp_328 = MEM[(char * *)&D.46209];
  goto <bb 34>;

  <bb 32>:
  # __i$_M_node_207 = PHI <__i$_M_node_191(39), __i$_M_node_192(40)>
  # __i$_M_node_219 = PHI <__i$_M_node_327(39), __i$_M_node_12(40)>
  # DEBUG __y => __i$_M_node_219
  # DEBUG __x => __i$_M_node_207
  if (__i$_M_node_207 == 0B)
    goto <bb 41>;
  else
    goto <bb 33>;

  <bb 33>:

  <bb 34>:
  # __i$_M_node_327 = PHI <__i$_M_node_187(31), __i$_M_node_207(33)>
  # __i$_M_node_12 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(31), __i$_M_node_219(33)>
  # DEBUG __y => __i$_M_node_12
  # DEBUG __x => __i$_M_node_327
  # DEBUG __x => __i$_M_node_327
  # DEBUG __x => __i$_M_node_327
  # DEBUG this => __i$_M_node_327
  # DEBUG D#156 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_327]._M_value_field
  # DEBUG __r => D#156
  # DEBUG __x => D#156
  # DEBUG this => D#80
  # DEBUG D#471 => &MEM[(const struct pair &)__i$_M_node_327 + 32].first
  # DEBUG D#157 => &D#158->_M_impl._M_key_compare
  # DEBUG D#79 => D#157
  # DEBUG __x => D#471
  # DEBUG __y => &D.46209
  # DEBUG this => D#79
  # DEBUG __lhs => D#471
  # DEBUG __rhs => &D.46209
  # DEBUG this => D#471
  # DEBUG __str => &D.46209
  _196 = MEM[(long unsigned int *)__i$_M_node_327 + 40B];
  # DEBUG D#7 => D#471
  # DEBUG this => D#7
  # DEBUG __size => _196
  # DEBUG D#545 => MEM[(long unsigned int *)&D.46209 + 8B]
  # DEBUG D#7 => &D.46209
  # DEBUG this => D#7
  # DEBUG __osize => D#545
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_397 = MIN_EXPR <_196, pretmp_479>;
  # DEBUG __len => D#463
  # DEBUG this => &D.46209
  # DEBUG D#544 => MEM[(char * *)&D.46209]
  # DEBUG D#5 => &D.46209
  # DEBUG this => D#5
  _201 = MEM[(char * *)__i$_M_node_327 + 32B];
  # DEBUG D#5 => D#471
  # DEBUG this => D#5
  # DEBUG __s1 => _201
  # DEBUG __s2 => D#544
  # DEBUG __n => D#463
  __r_202 = __builtin_memcmp (_201, pretmp_328, __len_397);
  # DEBUG __r => NULL
  if (__r_202 == 0)
    goto <bb 35>;
  else
    goto <bb 38>;

  <bb 35>:
  # DEBUG __n1 => _196
  # DEBUG __n2 => D#545
  _203 = _196 - pretmp_479;
  __d_204 = (const difference_type) _203;
  # DEBUG __d => __d_204
  if (__d_204 > 2147483647)
    goto <bb 39>;
  else
    goto <bb 36>;

  <bb 36>:
  if (__d_204 < -2147483648)
    goto <bb 40>;
  else
    goto <bb 37>;

  <bb 37>:
  __r_205 = (int) _203;

  <bb 38>:
  # __r_206 = PHI <__r_202(34), __r_205(37)>
  # DEBUG __r => __r_206
  # DEBUG D#495 => {CLOBBER}
  # DEBUG __size => D#495
  # DEBUG D#496 => {CLOBBER}
  # DEBUG __osize => D#496
  if (__r_206 >= 0)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_327
  __i$_M_node_191 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_327 + 16B];
  # DEBUG D#77 => __i$_M_node_327
  # DEBUG __x => D#77
  # DEBUG __x => NULL
  goto <bb 32>;

  <bb 40>:
  # DEBUG __r => NULL
  __i$_M_node_192 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_327 + 24B];
  # DEBUG D#78 => __i$_M_node_327
  # DEBUG __x => D#78
  # DEBUG __x => NULL
  goto <bb 32>;

  <bb 41>:
  # __i$_M_node_582 = PHI <__i$_M_node_219(32)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_582
  # DEBUG __i$_M_node => __i$_M_node_582
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#58 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#58
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_582 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 141>;
  else
    goto <bb 42>;

  <bb 42>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_582
  # DEBUG D#307 => &MEM[(struct _Rb_tree_node *)__i$_M_node_582]._M_value_field
  # DEBUG __r => D#307
  # DEBUG D#472 => &MEM[(struct pair &)__i$_M_node_582 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.46209
  # DEBUG __y => D#472
  # DEBUG this => D#79
  # DEBUG __lhs => &D.46209
  # DEBUG __rhs => D#472
  # DEBUG this => &D.46209
  # DEBUG __str => D#472
  # DEBUG D#543 => MEM[(long unsigned int *)&D.46209 + 8B]
  # DEBUG D#7 => &D.46209
  # DEBUG this => D#7
  # DEBUG __size => D#543
  _209 = MEM[(long unsigned int *)__i$_M_node_582 + 40B];
  # DEBUG D#7 => D#472
  # DEBUG this => D#7
  # DEBUG __osize => _209
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_150 = MIN_EXPR <_209, pretmp_479>;
  # DEBUG __len => D#464
  # DEBUG this => D#472
  _212 = MEM[(char * *)__i$_M_node_582 + 32B];
  # DEBUG D#5 => D#472
  # DEBUG this => D#5
  # DEBUG D#542 => MEM[(char * *)&D.46209]
  # DEBUG D#5 => &D.46209
  # DEBUG this => D#5
  # DEBUG __s1 => D#542
  # DEBUG __s2 => _212
  # DEBUG __n => D#464
  __r_214 = __builtin_memcmp (pretmp_328, _212, __len_150);
  # DEBUG __r => NULL
  if (__r_214 == 0)
    goto <bb 43>;
  else
    goto <bb 46>;

  <bb 43>:
  # DEBUG __n1 => D#543
  # DEBUG __n2 => _209
  _215 = pretmp_479 - _209;
  __d_216 = (const difference_type) _215;
  # DEBUG __d => __d_216
  if (__d_216 > 2147483647)
    goto <bb 57>;
  else
    goto <bb 44>;

  <bb 44>:
  if (__d_216 < -2147483648)
    goto <bb 47>;
  else
    goto <bb 45>;

  <bb 45>:
  __r_217 = (int) _215;

  <bb 46>:
  # __r_218 = PHI <__r_214(42), __r_217(45)>
  # DEBUG __r => __r_218
  # DEBUG D#501 => {CLOBBER}
  # DEBUG __size => D#501
  # DEBUG D#502 => {CLOBBER}
  # DEBUG __osize => D#502
  if (__r_218 < 0)
    goto <bb 141>;
  else
    goto <bb 57>;

  <bb 47>:
  # __i$_M_node_390 = PHI <__i$_M_node_582(44), __i$_M_node_268(141)>
  # prephitmp_44 = PHI <pretmp_479(44), prephitmp_79(141)>
  # prephitmp_45 = PHI <pretmp_328(44), prephitmp_81(141)>
  # DEBUG this => &D.58573
  # DEBUG __a => &D.46209
  # DEBUG __b => NULL
  # DEBUG this => &D.58573.first
  # DEBUG __str => &D.46209
  # DEBUG this => &D.46209
  # DEBUG D#138 => &D.46209._M_dataplus
  # DEBUG this => &D.58573.first
  # DEBUG D#139 => &MEM[(struct basic_string *)&D.58573]._M_dataplus
  # DEBUG D#53 => D#138
  # DEBUG this => D#139
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58573].D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#139
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.58573]._M_p = &MEM[(struct basic_string *)&D.58573].D.11539._M_local_buf;
  # DEBUG D#541 => MEM[(char * *)&D.46209]
  # DEBUG D#5 => &D.46209
  # DEBUG this => D#5
  # DEBUG D#540 => MEM[(long unsigned int *)&D.46209 + 8B]
  # DEBUG D#6 => &D.46209
  # DEBUG this => D#6
  _165 = prephitmp_45 + prephitmp_44;
  # DEBUG D#5 => &D.46209
  # DEBUG this => D#5
  # DEBUG this => &D.58573.first
  # DEBUG __beg => D#541
  # DEBUG __end => _165
  # DEBUG this => &D.58573.first
  # DEBUG __beg => D#541
  # DEBUG __end => _165
  # DEBUG this => &D.58573.first
  # DEBUG __beg => D#541
  # DEBUG __end => _165
  # DEBUG __ptr => D#541
  _345 = _165 != 0B;
  _344 = prephitmp_45 == 0B;
  _357 = _344 & _345;
  if (_357 != 0)
    goto <bb 142>;
  else
    goto <bb 144>;

  <bb 48>:
  _225 = std::__cxx11::basic_string<char>::_M_create (&D.58573.first, &__dnew, 0);

  <bb 49>:
  # DEBUG D#8 => &D.58573.first
  # DEBUG __p => _225
  # DEBUG this => D#8
  MEM[(char * *)&D.58573] = _225;
  __dnew.23_226 = __dnew;
  # DEBUG D#9 => &D.58573.first
  # DEBUG __capacity => __dnew.23_226
  # DEBUG this => D#9
  MEM[(size_type *)&D.58573 + 16B] = __dnew.23_226;
  # DEBUG D#5 => &D.58573.first
  # DEBUG this => D#5
  # DEBUG __p => _225
  # DEBUG __k1 => D#541
  # DEBUG __k2 => _165
  # DEBUG __d => _225
  # DEBUG __s => D#541
  # DEBUG __n => D#540
  goto <bb 52>;

  <bb 50>:
  # DEBUG D#5 => &D.58573.first
  # DEBUG this => D#5
  # DEBUG __p => &MEM[(struct basic_string *)&D.58573].D.11539._M_local_buf
  # DEBUG __k1 => D#541
  # DEBUG __k2 => _165
  # DEBUG __d => &MEM[(struct basic_string *)&D.58573].D.11539._M_local_buf
  # DEBUG __s => D#541
  # DEBUG __n => D#540
  if (prephitmp_44 == 1)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  _228 = MEM[(const char_type &)prephitmp_45];
  # DEBUG D#11 => D#541
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.58573].D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.58573 + 16] = _228;
  goto <bb 53>;

  <bb 52>:
  # _115 = PHI <&MEM[(struct basic_string *)&D.58573].D.11539._M_local_buf(50), _225(49)>
  # DEBUG D#5 => &D.58573.first
  # DEBUG this => D#5
  # DEBUG __p => _115
  # DEBUG __k1 => D#541
  # DEBUG __k2 => _165
  # DEBUG __d => _115
  # DEBUG __s => D#541
  # DEBUG __n => D#540
  # DEBUG __s1 => _115
  # DEBUG __s2 => D#541
  # DEBUG __n => D#540
  __builtin_memcpy (_115, prephitmp_45, prephitmp_44);
  pretmp_46 = __dnew;
  pretmp_474 = MEM[(char * *)&D.58573];

  <bb 53>:
  # prephitmp_473 = PHI <prephitmp_44(51), pretmp_46(52)>
  # prephitmp_478 = PHI <&MEM[(struct basic_string *)&D.58573].D.11539._M_local_buf(51), pretmp_474(52)>
  # DEBUG D#539 => __dnew
  # DEBUG this => &D.58573.first
  # DEBUG __n => D#539
  # DEBUG D#10 => &D.58573.first
  # DEBUG __length => D#539
  # DEBUG this => D#10
  MEM[(size_type *)&D.58573 + 8B] = prephitmp_473;
  # DEBUG D#5 => &D.58573.first
  # DEBUG this => D#5
  _231 = prephitmp_478 + prephitmp_473;
  # DEBUG __c1 => _231
  # DEBUG __c2 => D#11
  MEM[(char_type &)_231] = 0;
  __dnew ={v} {CLOBBER};
  D.58573.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_390
  # DEBUG __x => &D.58573
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_390;
  # DEBUG __x => &D.58573
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#306 => &__an
  D.58571 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.86.constprop (&gRoutingFunctionMap._M_t, __pos, &D.58573);

  <bb 54>:
  __i$_M_node_166 = MEM[(struct _Rb_tree_iterator *)&D.58571];
  # DEBUG __i$_M_node => __i$_M_node_166
  # DEBUG this => &D.58573
  # DEBUG D#70 => &D.58573.first
  # DEBUG this => D#70
  # DEBUG this => D#70
  # DEBUG this => D#70
  _167 = MEM[(char * *)&D.58573];
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  if (&MEM[(const struct basic_string *)&D.58573].D.11539._M_local_buf != _167)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#70].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#70
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  # DEBUG D#65 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _167
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _167
  # DEBUG this => D#59
  # DEBUG D.58527 => D#60
  operator delete (_167);

  <bb 56>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.58573 ={v} {CLOBBER};
  pretmp_599 = MEM[(char * *)&D.46209];

  <bb 57>:
  # __i$_M_node_168 = PHI <__i$_M_node_582(43), __i$_M_node_166(56), __i$_M_node_582(46)>
  # prephitmp_600 = PHI <pretmp_328(43), pretmp_599(56), pretmp_328(46)>
  # DEBUG __i$_M_node => __i$_M_node_168
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_168
  # DEBUG D#308 => &MEM[(struct _Rb_tree_node *)__i$_M_node_168]._M_value_field
  # DEBUG __r => D#308
  # DEBUG D#310 => {CLOBBER}
  # DEBUG __i$_M_node => D#310
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_168 + 64] = dor_no_express_cmesh;
  # DEBUG this => &D.46209
  # DEBUG this => &D.46209
  # DEBUG this => &D.46209
  # DEBUG D#538 => MEM[(char * *)&D.46209]
  # DEBUG D#5 => &D.46209
  # DEBUG this => D#5
  # DEBUG this => &D.46209
  if (&D.46209.D.11539._M_local_buf != prephitmp_600)
    goto <bb 62>;
  else
    goto <bb 63>;

<L9>:
  # DEBUG this => &D.58573
  # DEBUG D#70 => &D.58573.first
  # DEBUG this => D#70
  # DEBUG this => D#70
  # DEBUG this => D#70
  _170 = MEM[(char * *)&D.58573];
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  if (&MEM[(const struct basic_string *)&D.58573].D.11539._M_local_buf != _170)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#70].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#70
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  # DEBUG D#65 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _170
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _170
  # DEBUG this => D#59
  # DEBUG D.58511 => D#60
  operator delete (_170);

  <bb 60>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.58573 ={v} {CLOBBER};
  resx 18

<L13>:
  goto <bb 129> (<L2>);

  <bb 62>:
  # DEBUG D#68 => D.46209.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46209
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46209
  # DEBUG this => D#5
  # DEBUG this => &D.46209
  # DEBUG D#65 => &D.46209._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => D#538
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => D#538
  # DEBUG this => D#59
  # DEBUG D.56401 => D#60
  operator delete (prephitmp_600);

  <bb 63>:
  # DEBUG D#69 => &D.46209._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46209 ={v} {CLOBBER};
  # DEBUG this => &D.46208
  # DEBUG this => &D.46208
  # DEBUG D#37 => &D.46211
  # DEBUG this => D#37
  # DEBUG D#36 => D#37
  # DEBUG this => D#36
  # DEBUG D#109 => &D.46211
  # DEBUG this => &D.46212
  # DEBUG __s => "xy_yx_cmesh"
  # DEBUG __a => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => &D.46212
  # DEBUG D#106 => &D.46212._M_dataplus
  # DEBUG D#53 => D#108
  # DEBUG this => D#106
  # DEBUG __dat => &D.46212.D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#106
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.46212]._M_p = &D.46212.D.11539._M_local_buf;
  # DEBUG __s => "xy_yx_cmesh"
  # DEBUG this => &D.46212
  # DEBUG __beg => "xy_yx_cmesh"
  # DEBUG __end => &MEM[(void *)"xy_yx_cmesh" + 11B]
  # DEBUG this => &D.46212
  # DEBUG __beg => "xy_yx_cmesh"
  # DEBUG __end => &MEM[(void *)"xy_yx_cmesh" + 11B]
  # DEBUG this => &D.46212
  # DEBUG __beg => "xy_yx_cmesh"
  # DEBUG __end => &MEM[(void *)"xy_yx_cmesh" + 11B]
  # DEBUG __ptr => "xy_yx_cmesh"
  # DEBUG __first => "xy_yx_cmesh"
  # DEBUG __last => &MEM[(void *)"xy_yx_cmesh" + 11B]
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => "xy_yx_cmesh"
  # DEBUG __last => &MEM[(void *)"xy_yx_cmesh" + 11B]
  # DEBUG __dnew => 11
  # DEBUG D#5 => &D.46212
  # DEBUG this => D#5
  # DEBUG __p => &D.46212.D.11539._M_local_buf
  # DEBUG __k1 => "xy_yx_cmesh"
  # DEBUG __k2 => &MEM[(void *)"xy_yx_cmesh" + 11B]
  # DEBUG __d => &D.46212.D.11539._M_local_buf
  # DEBUG __s => "xy_yx_cmesh"
  # DEBUG __n => 11
  # DEBUG __s1 => &D.46212.D.11539._M_local_buf
  # DEBUG __s2 => "xy_yx_cmesh"
  # DEBUG __n => 11
  __builtin_memcpy (&D.46212.D.11539._M_local_buf, "xy_yx_cmesh", 11);
  # DEBUG this => &D.46212
  # DEBUG __n => 11
  # DEBUG D#10 => &D.46212
  # DEBUG __length => 11
  # DEBUG this => D#10
  MEM[(size_type *)&D.46212 + 8B] = 11;
  # DEBUG D#5 => &D.46212
  # DEBUG this => D#5
  # DEBUG __c1 => &MEM[(void *)&D.46212 + 27B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.46212 + 27] = 0;
  # DEBUG D#503 => {CLOBBER}
  # DEBUG __dnew => D#503
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.46212
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.46212
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.46212
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_262 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#57 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#57
  # DEBUG D#159 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.46212
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_262
  if (__i$_M_node_262 == 0B)
    goto <bb 145>;
  else
    goto <bb 66>;

  <bb 64>:
  # __i$_M_node_144 = PHI <__i$_M_node_266(72), __i$_M_node_267(73)>
  # __i$_M_node_195 = PHI <__i$_M_node_161(72), __i$_M_node_94(73)>
  # DEBUG __y => __i$_M_node_195
  # DEBUG __x => __i$_M_node_144
  if (__i$_M_node_144 == 0B)
    goto <bb 74>;
  else
    goto <bb 65>;

  <bb 65>:
  goto <bb 67>;

  <bb 66>:

  <bb 67>:
  # __i$_M_node_161 = PHI <__i$_M_node_262(66), __i$_M_node_144(65)>
  # __i$_M_node_94 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(66), __i$_M_node_195(65)>
  # DEBUG __y => __i$_M_node_94
  # DEBUG __x => __i$_M_node_161
  # DEBUG __x => __i$_M_node_161
  # DEBUG __x => __i$_M_node_161
  # DEBUG this => __i$_M_node_161
  # DEBUG D#156 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_161]._M_value_field
  # DEBUG __r => D#156
  # DEBUG __x => D#156
  # DEBUG this => D#80
  # DEBUG D#473 => &MEM[(const struct pair &)__i$_M_node_161 + 32].first
  # DEBUG D#157 => &D#158->_M_impl._M_key_compare
  # DEBUG D#79 => D#157
  # DEBUG __x => D#473
  # DEBUG __y => &D.46212
  # DEBUG this => D#79
  # DEBUG __lhs => D#473
  # DEBUG __rhs => &D.46212
  # DEBUG this => D#473
  # DEBUG __str => &D.46212
  _271 = MEM[(long unsigned int *)__i$_M_node_161 + 40B];
  # DEBUG D#7 => D#473
  # DEBUG this => D#7
  # DEBUG __size => _271
  # DEBUG D#7 => &D.46212
  # DEBUG this => D#7
  # DEBUG __osize => 11
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_435 = MIN_EXPR <_271, 11>;
  # DEBUG __len => D#465
  # DEBUG this => &D.46212
  # DEBUG D#5 => &D.46212
  # DEBUG this => D#5
  _276 = MEM[(char * *)__i$_M_node_161 + 32B];
  # DEBUG D#5 => D#473
  # DEBUG this => D#5
  # DEBUG __s1 => _276
  # DEBUG __s2 => &D.46212.D.11539._M_local_buf
  # DEBUG __n => D#465
  __r_277 = __builtin_memcmp (_276, &D.46212.D.11539._M_local_buf, __len_435);
  # DEBUG __r => NULL
  if (__r_277 == 0)
    goto <bb 68>;
  else
    goto <bb 71>;

  <bb 68>:
  # DEBUG __n1 => _271
  # DEBUG __n2 => 11
  _278 = _271 - 11;
  __d_279 = (const difference_type) _278;
  # DEBUG __d => __d_279
  if (__d_279 > 2147483647)
    goto <bb 72>;
  else
    goto <bb 69>;

  <bb 69>:
  if (__d_279 < -2147483648)
    goto <bb 73>;
  else
    goto <bb 70>;

  <bb 70>:
  __r_280 = (int) _278;

  <bb 71>:
  # __r_281 = PHI <__r_277(67), __r_280(70)>
  # DEBUG __r => __r_281
  # DEBUG D#508 => {CLOBBER}
  # DEBUG __size => D#508
  # DEBUG D#509 => {CLOBBER}
  # DEBUG __osize => D#509
  if (__r_281 >= 0)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_161
  __i$_M_node_266 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_161 + 16B];
  # DEBUG D#77 => __i$_M_node_161
  # DEBUG __x => D#77
  # DEBUG __x => NULL
  goto <bb 64>;

  <bb 73>:
  # DEBUG __r => NULL
  __i$_M_node_267 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_161 + 24B];
  # DEBUG D#78 => __i$_M_node_161
  # DEBUG __x => D#78
  # DEBUG __x => NULL
  goto <bb 64>;

  <bb 74>:
  # __i$_M_node_583 = PHI <__i$_M_node_195(64)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_583
  # DEBUG __i$_M_node => __i$_M_node_583
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#58 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#58
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_583 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 145>;
  else
    goto <bb 75>;

  <bb 75>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_583
  # DEBUG D#307 => &MEM[(struct _Rb_tree_node *)__i$_M_node_583]._M_value_field
  # DEBUG __r => D#307
  # DEBUG D#474 => &MEM[(struct pair &)__i$_M_node_583 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.46212
  # DEBUG __y => D#474
  # DEBUG this => D#79
  # DEBUG __lhs => &D.46212
  # DEBUG __rhs => D#474
  # DEBUG this => &D.46212
  # DEBUG __str => D#474
  # DEBUG D#7 => &D.46212
  # DEBUG this => D#7
  # DEBUG __size => 11
  _284 = MEM[(long unsigned int *)__i$_M_node_583 + 40B];
  # DEBUG D#7 => D#474
  # DEBUG this => D#7
  # DEBUG __osize => _284
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_284 <= 10)
    goto <bb 77>;
  else
    goto <bb 76>;

  <bb 76>:

  <bb 77>:
  # __len_286 = PHI <_284(75), 11(76)>
  # DEBUG __len => D#466
  # DEBUG this => D#474
  _287 = MEM[(char * *)__i$_M_node_583 + 32B];
  # DEBUG D#5 => D#474
  # DEBUG this => D#5
  # DEBUG D#5 => &D.46212
  # DEBUG this => D#5
  # DEBUG __s1 => &D.46212.D.11539._M_local_buf
  # DEBUG __s2 => _287
  # DEBUG __n => D#466
  __r_289 = __builtin_memcmp (&D.46212.D.11539._M_local_buf, _287, __len_286);
  # DEBUG __r => NULL
  if (__r_289 == 0)
    goto <bb 78>;
  else
    goto <bb 81>;

  <bb 78>:
  # DEBUG __n1 => 11
  # DEBUG __n2 => _284
  _290 = 11 - _284;
  __d_291 = (const difference_type) _290;
  # DEBUG __d => __d_291
  if (__d_291 > 2147483647)
    goto <bb 86>;
  else
    goto <bb 79>;

  <bb 79>:
  if (__d_291 < -2147483648)
    goto <bb 82>;
  else
    goto <bb 80>;

  <bb 80>:
  __r_292 = (int) _290;

  <bb 81>:
  # __r_293 = PHI <__r_289(77), __r_292(80)>
  # DEBUG __r => __r_293
  # DEBUG D#514 => {CLOBBER}
  # DEBUG __size => D#514
  # DEBUG D#515 => {CLOBBER}
  # DEBUG __osize => D#515
  if (__r_293 < 0)
    goto <bb 145>;
  else
    goto <bb 86>;

  <bb 82>:
  # __i$_M_node_263 = PHI <__i$_M_node_583(79), __i$_M_node_124(145)>
  # DEBUG this => &D.58769
  # DEBUG __a => &D.46212
  # DEBUG __b => NULL
  # DEBUG this => &D.58769.first
  # DEBUG __str => &D.46212
  # DEBUG this => &D.46212
  # DEBUG D#138 => &D.46212._M_dataplus
  # DEBUG this => &D.58769.first
  # DEBUG D#139 => &MEM[(struct basic_string *)&D.58769]._M_dataplus
  # DEBUG D#53 => D#138
  # DEBUG this => D#139
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58769].D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#139
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.58769]._M_p = &MEM[(struct basic_string *)&D.58769].D.11539._M_local_buf;
  # DEBUG D#5 => &D.46212
  # DEBUG this => D#5
  # DEBUG D#6 => &D.46212
  # DEBUG this => D#6
  # DEBUG D#5 => &D.46212
  # DEBUG this => D#5
  # DEBUG this => &D.58769.first
  # DEBUG __beg => &D.46212.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.46212 + 27B]
  # DEBUG this => &D.58769.first
  # DEBUG __beg => &D.46212.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.46212 + 27B]
  # DEBUG this => &D.58769.first
  # DEBUG __beg => &D.46212.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.46212 + 27B]
  # DEBUG __ptr => &D.46212.D.11539._M_local_buf
  # DEBUG __first => &D.46212.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.46212 + 27B]
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => &D.46212.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.46212 + 27B]
  # DEBUG __dnew => 11
  # DEBUG D#5 => &D.58769.first
  # DEBUG this => D#5
  # DEBUG __p => &MEM[(struct basic_string *)&D.58769].D.11539._M_local_buf
  # DEBUG __k1 => &D.46212.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.46212 + 27B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.58769].D.11539._M_local_buf
  # DEBUG __s => &D.46212.D.11539._M_local_buf
  # DEBUG __n => 11
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.58769].D.11539._M_local_buf
  # DEBUG __s2 => &D.46212.D.11539._M_local_buf
  # DEBUG __n => 11
  __builtin_memcpy (&MEM[(struct basic_string *)&D.58769].D.11539._M_local_buf, &D.46212.D.11539._M_local_buf, 11);
  # DEBUG this => &D.58769.first
  # DEBUG __n => 11
  # DEBUG D#10 => &D.58769.first
  # DEBUG __length => 11
  # DEBUG this => D#10
  MEM[(size_type *)&D.58769 + 8B] = 11;
  # DEBUG D#5 => &D.58769.first
  # DEBUG this => D#5
  # DEBUG __c1 => &MEM[(void *)&D.58769 + 27B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.58769 + 27] = 0;
  # DEBUG D#516 => {CLOBBER}
  # DEBUG __dnew => D#516
  D.58769.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_263
  # DEBUG __x => &D.58769
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_263;
  # DEBUG __x => &D.58769
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#306 => &__an
  D.58767 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.86.constprop (&gRoutingFunctionMap._M_t, __pos, &D.58769);

  <bb 83>:
  __i$_M_node_241 = MEM[(struct _Rb_tree_iterator *)&D.58767];
  # DEBUG __i$_M_node => __i$_M_node_241
  # DEBUG this => &D.58769
  # DEBUG D#70 => &D.58769.first
  # DEBUG this => D#70
  # DEBUG this => D#70
  # DEBUG this => D#70
  _242 = MEM[(char * *)&D.58769];
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  if (&MEM[(const struct basic_string *)&D.58769].D.11539._M_local_buf != _242)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#70].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#70
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  # DEBUG D#65 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _242
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _242
  # DEBUG this => D#59
  # DEBUG D.58723 => D#60
  operator delete (_242);

  <bb 85>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.58769 ={v} {CLOBBER};
  pretmp_603 = MEM[(char * *)&D.46212];

  <bb 86>:
  # __i$_M_node_243 = PHI <__i$_M_node_583(78), __i$_M_node_241(85), __i$_M_node_583(81)>
  # prephitmp_58 = PHI <&D.46212.D.11539._M_local_buf(78), pretmp_603(85), &D.46212.D.11539._M_local_buf(81)>
  # DEBUG __i$_M_node => __i$_M_node_243
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_243
  # DEBUG D#308 => &MEM[(struct _Rb_tree_node *)__i$_M_node_243]._M_value_field
  # DEBUG __r => D#308
  # DEBUG D#310 => {CLOBBER}
  # DEBUG __i$_M_node => D#310
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_243 + 64] = xy_yx_cmesh;
  # DEBUG this => &D.46212
  # DEBUG this => &D.46212
  # DEBUG this => &D.46212
  # DEBUG D#537 => MEM[(char * *)&D.46212]
  # DEBUG D#5 => &D.46212
  # DEBUG this => D#5
  # DEBUG this => &D.46212
  if (&D.46212.D.11539._M_local_buf != prephitmp_58)
    goto <bb 90>;
  else
    goto <bb 91>;

<L10>:
  # DEBUG this => &D.58769
  # DEBUG D#70 => &D.58769.first
  # DEBUG this => D#70
  # DEBUG this => D#70
  # DEBUG this => D#70
  _245 = MEM[(char * *)&D.58769];
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  if (&MEM[(const struct basic_string *)&D.58769].D.11539._M_local_buf != _245)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#70].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#70
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  # DEBUG D#65 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _245
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _245
  # DEBUG this => D#59
  # DEBUG D.58707 => D#60
  operator delete (_245);

  <bb 89>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.58769 ={v} {CLOBBER};
  resx 19

  <bb 90>:
  # DEBUG D#68 => D.46212.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46212
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46212
  # DEBUG this => D#5
  # DEBUG this => &D.46212
  # DEBUG D#65 => &D.46212._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => D#537
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => D#537
  # DEBUG this => D#59
  # DEBUG D.56419 => D#60
  operator delete (prephitmp_58);

  <bb 91>:
  # DEBUG D#69 => &D.46212._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46212 ={v} {CLOBBER};
  # DEBUG this => &D.46211
  # DEBUG this => &D.46211
  # DEBUG D#37 => &D.46214
  # DEBUG this => D#37
  # DEBUG D#36 => D#37
  # DEBUG this => D#36
  # DEBUG D#109 => &D.46214
  # DEBUG this => &D.46215
  # DEBUG __s => "xy_yx_no_express_cmesh"
  # DEBUG __a => D#109
  # DEBUG D#108 => D#109
  # DEBUG this => &D.46215
  # DEBUG D#106 => &D.46215._M_dataplus
  # DEBUG D#53 => D#108
  # DEBUG this => D#106
  # DEBUG __dat => &D.46215.D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#106
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.46215]._M_p = &D.46215.D.11539._M_local_buf;
  # DEBUG __s => "xy_yx_no_express_cmesh"
  # DEBUG this => &D.46215
  # DEBUG __beg => "xy_yx_no_express_cmesh"
  # DEBUG __end => &MEM[(void *)"xy_yx_no_express_cmesh" + 22B]
  # DEBUG this => &D.46215
  # DEBUG __beg => "xy_yx_no_express_cmesh"
  # DEBUG __end => &MEM[(void *)"xy_yx_no_express_cmesh" + 22B]
  # DEBUG this => &D.46215
  # DEBUG __beg => "xy_yx_no_express_cmesh"
  # DEBUG __end => &MEM[(void *)"xy_yx_no_express_cmesh" + 22B]
  # DEBUG __ptr => "xy_yx_no_express_cmesh"
  # DEBUG __first => "xy_yx_no_express_cmesh"
  # DEBUG __last => &MEM[(void *)"xy_yx_no_express_cmesh" + 22B]
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => "xy_yx_no_express_cmesh"
  # DEBUG __last => &MEM[(void *)"xy_yx_no_express_cmesh" + 22B]
  __dnew = 22;
  _329 = std::__cxx11::basic_string<char>::_M_create (&D.46215, &__dnew, 0);
  # DEBUG D#8 => &D.46215
  # DEBUG __p => _329
  # DEBUG this => D#8
  MEM[(char * *)&D.46215] = _329;
  __dnew.23_330 = __dnew;
  # DEBUG D#9 => &D.46215
  # DEBUG __capacity => __dnew.23_330
  # DEBUG this => D#9
  MEM[(size_type *)&D.46215 + 16B] = __dnew.23_330;
  # DEBUG D#5 => &D.46215
  # DEBUG this => D#5
  # DEBUG __p => _329
  # DEBUG __k1 => "xy_yx_no_express_cmesh"
  # DEBUG __k2 => &MEM[(void *)"xy_yx_no_express_cmesh" + 22B]
  # DEBUG __d => _329
  # DEBUG __s => "xy_yx_no_express_cmesh"
  # DEBUG __n => 22
  # DEBUG __s1 => _329
  # DEBUG __s2 => "xy_yx_no_express_cmesh"
  # DEBUG __n => 22
  __builtin_memcpy (_329, "xy_yx_no_express_cmesh", 22);
  __dnew.23_333 = __dnew;
  # DEBUG this => &D.46215
  # DEBUG __n => __dnew.23_333
  # DEBUG D#10 => &D.46215
  # DEBUG __length => __dnew.23_333
  # DEBUG this => D#10
  MEM[(size_type *)&D.46215 + 8B] = __dnew.23_333;
  _334 = MEM[(char * *)&D.46215];
  # DEBUG D#5 => &D.46215
  # DEBUG this => D#5
  _335 = _334 + __dnew.23_333;
  # DEBUG __c1 => _335
  # DEBUG __c2 => D#11
  MEM[(char_type &)_335] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __k => &D.46215
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.46215
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.46215
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_337 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#57 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#57
  # DEBUG D#159 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.46215
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_337
  if (__i$_M_node_337 == 0B)
    goto <bb 146>;
  else
    goto <bb 92>;

  <bb 92>:
  pretmp_497 = MEM[(long unsigned int *)&D.46215 + 8B];
  pretmp_499 = MEM[(char * *)&D.46215];
  goto <bb 95>;

  <bb 93>:
  # __i$_M_node_120 = PHI <__i$_M_node_341(100), __i$_M_node_342(101)>
  # __i$_M_node_119 = PHI <__i$_M_node_258(100), __i$_M_node_253(101)>
  # DEBUG __y => __i$_M_node_119
  # DEBUG __x => __i$_M_node_120
  if (__i$_M_node_120 == 0B)
    goto <bb 102>;
  else
    goto <bb 94>;

  <bb 94>:

  <bb 95>:
  # __i$_M_node_258 = PHI <__i$_M_node_337(92), __i$_M_node_120(94)>
  # __i$_M_node_253 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(92), __i$_M_node_119(94)>
  # DEBUG __y => __i$_M_node_253
  # DEBUG __x => __i$_M_node_258
  # DEBUG __x => __i$_M_node_258
  # DEBUG __x => __i$_M_node_258
  # DEBUG this => __i$_M_node_258
  # DEBUG D#156 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_258]._M_value_field
  # DEBUG __r => D#156
  # DEBUG __x => D#156
  # DEBUG this => D#80
  # DEBUG D#475 => &MEM[(const struct pair &)__i$_M_node_258 + 32].first
  # DEBUG D#157 => &D#158->_M_impl._M_key_compare
  # DEBUG D#79 => D#157
  # DEBUG __x => D#475
  # DEBUG __y => &D.46215
  # DEBUG this => D#79
  # DEBUG __lhs => D#475
  # DEBUG __rhs => &D.46215
  # DEBUG this => D#475
  # DEBUG __str => &D.46215
  _346 = MEM[(long unsigned int *)__i$_M_node_258 + 40B];
  # DEBUG D#7 => D#475
  # DEBUG this => D#7
  # DEBUG __size => _346
  # DEBUG D#536 => MEM[(long unsigned int *)&D.46215 + 8B]
  # DEBUG D#7 => &D.46215
  # DEBUG this => D#7
  # DEBUG __osize => D#536
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_436 = MIN_EXPR <_346, pretmp_497>;
  # DEBUG __len => D#467
  # DEBUG this => &D.46215
  # DEBUG D#535 => MEM[(char * *)&D.46215]
  # DEBUG D#5 => &D.46215
  # DEBUG this => D#5
  _351 = MEM[(char * *)__i$_M_node_258 + 32B];
  # DEBUG D#5 => D#475
  # DEBUG this => D#5
  # DEBUG __s1 => _351
  # DEBUG __s2 => D#535
  # DEBUG __n => D#467
  __r_352 = __builtin_memcmp (_351, pretmp_499, __len_436);
  # DEBUG __r => NULL
  if (__r_352 == 0)
    goto <bb 96>;
  else
    goto <bb 99>;

  <bb 96>:
  # DEBUG __n1 => _346
  # DEBUG __n2 => D#536
  _353 = _346 - pretmp_497;
  __d_354 = (const difference_type) _353;
  # DEBUG __d => __d_354
  if (__d_354 > 2147483647)
    goto <bb 100>;
  else
    goto <bb 97>;

  <bb 97>:
  if (__d_354 < -2147483648)
    goto <bb 101>;
  else
    goto <bb 98>;

  <bb 98>:
  __r_355 = (int) _353;

  <bb 99>:
  # __r_356 = PHI <__r_352(95), __r_355(98)>
  # DEBUG __r => __r_356
  # DEBUG D#521 => {CLOBBER}
  # DEBUG __size => D#521
  # DEBUG D#522 => {CLOBBER}
  # DEBUG __osize => D#522
  if (__r_356 >= 0)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_258
  __i$_M_node_341 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_258 + 16B];
  # DEBUG D#77 => __i$_M_node_258
  # DEBUG __x => D#77
  # DEBUG __x => NULL
  goto <bb 93>;

  <bb 101>:
  # DEBUG __r => NULL
  __i$_M_node_342 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_258 + 24B];
  # DEBUG D#78 => __i$_M_node_258
  # DEBUG __x => D#78
  # DEBUG __x => NULL
  goto <bb 93>;

  <bb 102>:
  # __i$_M_node_601 = PHI <__i$_M_node_119(93)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_601
  # DEBUG __i$_M_node => __i$_M_node_601
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#58 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#58
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_601 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 147>;
  else
    goto <bb 103>;

  <bb 103>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_601
  # DEBUG D#307 => &MEM[(struct _Rb_tree_node *)__i$_M_node_601]._M_value_field
  # DEBUG __r => D#307
  # DEBUG D#476 => &MEM[(struct pair &)__i$_M_node_601 + 32].first
  # DEBUG D#43 => &gRoutingFunctionMap
  # DEBUG this => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#41 => &D#42->_M_t
  # DEBUG D#40 => D#41
  # DEBUG this => D#40
  # DEBUG __x => &D.46215
  # DEBUG __y => D#476
  # DEBUG this => D#79
  # DEBUG __lhs => &D.46215
  # DEBUG __rhs => D#476
  # DEBUG this => &D.46215
  # DEBUG __str => D#476
  # DEBUG D#534 => MEM[(long unsigned int *)&D.46215 + 8B]
  # DEBUG D#7 => &D.46215
  # DEBUG this => D#7
  # DEBUG __size => D#534
  _359 = MEM[(long unsigned int *)__i$_M_node_601 + 40B];
  # DEBUG D#7 => D#476
  # DEBUG this => D#7
  # DEBUG __osize => _359
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_466 = MIN_EXPR <_359, pretmp_497>;
  # DEBUG __len => D#468
  # DEBUG this => D#476
  _362 = MEM[(char * *)__i$_M_node_601 + 32B];
  # DEBUG D#5 => D#476
  # DEBUG this => D#5
  # DEBUG D#533 => MEM[(char * *)&D.46215]
  # DEBUG D#5 => &D.46215
  # DEBUG this => D#5
  # DEBUG __s1 => D#533
  # DEBUG __s2 => _362
  # DEBUG __n => D#468
  __r_364 = __builtin_memcmp (pretmp_499, _362, __len_466);
  # DEBUG __r => NULL
  if (__r_364 == 0)
    goto <bb 104>;
  else
    goto <bb 107>;

  <bb 104>:
  # DEBUG __n1 => D#534
  # DEBUG __n2 => _359
  _365 = pretmp_497 - _359;
  __d_366 = (const difference_type) _365;
  # DEBUG __d => __d_366
  if (__d_366 > 2147483647)
    goto <bb 118>;
  else
    goto <bb 105>;

  <bb 105>:
  if (__d_366 < -2147483648)
    goto <bb 108>;
  else
    goto <bb 106>;

  <bb 106>:
  __r_367 = (int) _365;

  <bb 107>:
  # __r_368 = PHI <__r_364(103), __r_367(106)>
  # DEBUG __r => __r_368
  # DEBUG D#527 => {CLOBBER}
  # DEBUG __size => D#527
  # DEBUG D#528 => {CLOBBER}
  # DEBUG __osize => D#528
  if (__r_368 < 0)
    goto <bb 147>;
  else
    goto <bb 118>;

  <bb 108>:
  # __i$_M_node_349 = PHI <__i$_M_node_601(105), __i$_M_node_361(147)>
  # prephitmp_551 = PHI <pretmp_497(105), prephitmp_60(147)>
  # prephitmp_552 = PHI <pretmp_499(105), prephitmp_548(147)>
  # DEBUG this => &D.58965
  # DEBUG __a => &D.46215
  # DEBUG __b => NULL
  # DEBUG this => &D.58965.first
  # DEBUG __str => &D.46215
  # DEBUG this => &D.46215
  # DEBUG D#138 => &D.46215._M_dataplus
  # DEBUG this => &D.58965.first
  # DEBUG D#139 => &MEM[(struct basic_string *)&D.58965]._M_dataplus
  # DEBUG D#53 => D#138
  # DEBUG this => D#139
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58965].D.11539._M_local_buf
  # DEBUG __a => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#50 => D#139
  # DEBUG D#51 => D#52
  # DEBUG this => D#50
  # DEBUG __a => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG this => D#48
  # DEBUG D.52907 => D#49
  MEM[(struct _Alloc_hider *)&D.58965]._M_p = &MEM[(struct basic_string *)&D.58965].D.11539._M_local_buf;
  # DEBUG D#532 => MEM[(char * *)&D.46215]
  # DEBUG D#5 => &D.46215
  # DEBUG this => D#5
  # DEBUG D#531 => MEM[(long unsigned int *)&D.46215 + 8B]
  # DEBUG D#6 => &D.46215
  # DEBUG this => D#6
  _315 = prephitmp_552 + prephitmp_551;
  # DEBUG D#5 => &D.46215
  # DEBUG this => D#5
  # DEBUG this => &D.58965.first
  # DEBUG __beg => D#532
  # DEBUG __end => _315
  # DEBUG this => &D.58965.first
  # DEBUG __beg => D#532
  # DEBUG __end => _315
  # DEBUG this => &D.58965.first
  # DEBUG __beg => D#532
  # DEBUG __end => _315
  # DEBUG __ptr => D#532
  _369 = _315 != 0B;
  _516 = prephitmp_552 == 0B;
  _151 = _369 & _516;
  if (_151 != 0)
    goto <bb 148>;
  else
    goto <bb 150>;

  <bb 109>:
  _375 = std::__cxx11::basic_string<char>::_M_create (&D.58965.first, &__dnew, 0);

  <bb 110>:
  # DEBUG D#8 => &D.58965.first
  # DEBUG __p => _375
  # DEBUG this => D#8
  MEM[(char * *)&D.58965] = _375;
  __dnew.23_376 = __dnew;
  # DEBUG D#9 => &D.58965.first
  # DEBUG __capacity => __dnew.23_376
  # DEBUG this => D#9
  MEM[(size_type *)&D.58965 + 16B] = __dnew.23_376;
  # DEBUG D#5 => &D.58965.first
  # DEBUG this => D#5
  # DEBUG __p => _375
  # DEBUG __k1 => D#532
  # DEBUG __k2 => _315
  # DEBUG __d => _375
  # DEBUG __s => D#532
  # DEBUG __n => D#531
  goto <bb 113>;

  <bb 111>:
  # DEBUG D#5 => &D.58965.first
  # DEBUG this => D#5
  # DEBUG __p => &MEM[(struct basic_string *)&D.58965].D.11539._M_local_buf
  # DEBUG __k1 => D#532
  # DEBUG __k2 => _315
  # DEBUG __d => &MEM[(struct basic_string *)&D.58965].D.11539._M_local_buf
  # DEBUG __s => D#532
  # DEBUG __n => D#531
  if (prephitmp_551 == 1)
    goto <bb 112>;
  else
    goto <bb 113>;

  <bb 112>:
  _378 = MEM[(const char_type &)prephitmp_552];
  # DEBUG D#11 => D#532
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.58965].D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.58965 + 16] = _378;
  goto <bb 114>;

  <bb 113>:
  # _138 = PHI <&MEM[(struct basic_string *)&D.58965].D.11539._M_local_buf(111), _375(110)>
  # DEBUG D#5 => &D.58965.first
  # DEBUG this => D#5
  # DEBUG __p => _138
  # DEBUG __k1 => D#532
  # DEBUG __k2 => _315
  # DEBUG __d => _138
  # DEBUG __s => D#532
  # DEBUG __n => D#531
  # DEBUG __s1 => _138
  # DEBUG __s2 => D#532
  # DEBUG __n => D#531
  __builtin_memcpy (_138, prephitmp_552, prephitmp_551);
  pretmp_53 = __dnew;
  pretmp_55 = MEM[(char * *)&D.58965];

  <bb 114>:
  # prephitmp_54 = PHI <prephitmp_551(112), pretmp_53(113)>
  # prephitmp_56 = PHI <&MEM[(struct basic_string *)&D.58965].D.11539._M_local_buf(112), pretmp_55(113)>
  # DEBUG D#530 => __dnew
  # DEBUG this => &D.58965.first
  # DEBUG __n => D#530
  # DEBUG D#10 => &D.58965.first
  # DEBUG __length => D#530
  # DEBUG this => D#10
  MEM[(size_type *)&D.58965 + 8B] = prephitmp_54;
  # DEBUG D#5 => &D.58965.first
  # DEBUG this => D#5
  _381 = prephitmp_56 + prephitmp_54;
  # DEBUG __c1 => _381
  # DEBUG __c2 => D#11
  MEM[(char_type &)_381] = 0;
  __dnew ={v} {CLOBBER};
  D.58965.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_349
  # DEBUG __x => &D.58965
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_349;
  # DEBUG __x => &D.58965
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#306 => &__an
  D.58963 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.86.constprop (&gRoutingFunctionMap._M_t, __pos, &D.58965);

  <bb 115>:
  __i$_M_node_316 = MEM[(struct _Rb_tree_iterator *)&D.58963];
  # DEBUG __i$_M_node => __i$_M_node_316
  # DEBUG this => &D.58965
  # DEBUG D#70 => &D.58965.first
  # DEBUG this => D#70
  # DEBUG this => D#70
  # DEBUG this => D#70
  _317 = MEM[(char * *)&D.58965];
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  if (&MEM[(const struct basic_string *)&D.58965].D.11539._M_local_buf != _317)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#70].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#70
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  # DEBUG D#65 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _317
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _317
  # DEBUG this => D#59
  # DEBUG D.58919 => D#60
  operator delete (_317);

  <bb 117>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.58965 ={v} {CLOBBER};
  pretmp_549 = MEM[(char * *)&D.46215];

  <bb 118>:
  # __i$_M_node_318 = PHI <__i$_M_node_601(104), __i$_M_node_316(117), __i$_M_node_601(107)>
  # prephitmp_550 = PHI <pretmp_499(104), pretmp_549(117), pretmp_499(107)>
  # DEBUG __i$_M_node => __i$_M_node_318
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_318
  # DEBUG D#308 => &MEM[(struct _Rb_tree_node *)__i$_M_node_318]._M_value_field
  # DEBUG __r => D#308
  # DEBUG D#310 => {CLOBBER}
  # DEBUG __i$_M_node => D#310
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_318 + 64] = xy_yx_no_express_cmesh;
  # DEBUG this => &D.46215
  # DEBUG this => &D.46215
  # DEBUG this => &D.46215
  # DEBUG D#529 => MEM[(char * *)&D.46215]
  # DEBUG D#5 => &D.46215
  # DEBUG this => D#5
  # DEBUG this => &D.46215
  if (&D.46215.D.11539._M_local_buf != prephitmp_550)
    goto <bb 123>;
  else
    goto <bb 124>;

<L11>:
  # DEBUG this => &D.58965
  # DEBUG D#70 => &D.58965.first
  # DEBUG this => D#70
  # DEBUG this => D#70
  # DEBUG this => D#70
  _320 = MEM[(char * *)&D.58965];
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  if (&MEM[(const struct basic_string *)&D.58965].D.11539._M_local_buf != _320)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#70].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#70
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => D#70
  # DEBUG this => D#5
  # DEBUG this => D#70
  # DEBUG D#65 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _320
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _320
  # DEBUG this => D#59
  # DEBUG D.58903 => D#60
  operator delete (_320);

  <bb 121>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#70]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.58965 ={v} {CLOBBER};
  resx 20

<L15>:
  goto <bb 136> (<L6>);

  <bb 123>:
  # DEBUG D#68 => D.46215.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46215
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46215
  # DEBUG this => D#5
  # DEBUG this => &D.46215
  # DEBUG D#65 => &D.46215._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => D#529
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => D#529
  # DEBUG this => D#59
  # DEBUG D.56436 => D#60
  operator delete (prephitmp_550);

  <bb 124>:
  # DEBUG D#69 => &D.46215._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46215 ={v} {CLOBBER};
  # DEBUG this => &D.46214
  # DEBUG this => &D.46214
  return;

<L0>:
  # DEBUG this => &D.46206
  # DEBUG this => &D.46206
  # DEBUG this => &D.46206
  _26 = MEM[(char * *)&D.46206];
  # DEBUG D#5 => &D.46206
  # DEBUG this => D#5
  # DEBUG this => &D.46206
  if (&D.46206.D.11539._M_local_buf != _26)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  # DEBUG D#68 => D.46206.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46206
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46206
  # DEBUG this => D#5
  # DEBUG this => &D.46206
  # DEBUG D#65 => &D.46206._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _26
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _26
  # DEBUG this => D#59
  # DEBUG D.56451 => D#60
  operator delete (_26);

  <bb 127>:
  # DEBUG D#69 => &D.46206._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46206 ={v} {CLOBBER};
  resx 2

<L12>:

<L2>:
  # DEBUG this => &D.46209
  # DEBUG this => &D.46209
  # DEBUG this => &D.46209
  _37 = MEM[(char * *)&D.46209];
  # DEBUG D#5 => &D.46209
  # DEBUG this => D#5
  # DEBUG this => &D.46209
  if (&D.46209.D.11539._M_local_buf != _37)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # DEBUG D#68 => D.46209.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46209
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46209
  # DEBUG this => D#5
  # DEBUG this => &D.46209
  # DEBUG D#65 => &D.46209._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _37
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _37
  # DEBUG this => D#59
  # DEBUG D.56468 => D#60
  operator delete (_37);

  <bb 131>:
  # DEBUG D#69 => &D.46209._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46209 ={v} {CLOBBER};
  resx 6

<L4>:
  # DEBUG this => &D.46212
  # DEBUG this => &D.46212
  # DEBUG this => &D.46212
  _35 = MEM[(char * *)&D.46212];
  # DEBUG D#5 => &D.46212
  # DEBUG this => D#5
  # DEBUG this => &D.46212
  if (&D.46212.D.11539._M_local_buf != _35)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  # DEBUG D#68 => D.46212.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46212
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46212
  # DEBUG this => D#5
  # DEBUG this => &D.46212
  # DEBUG D#65 => &D.46212._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _35
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _35
  # DEBUG this => D#59
  # DEBUG D.56485 => D#60
  operator delete (_35);

  <bb 134>:
  # DEBUG D#69 => &D.46212._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46212 ={v} {CLOBBER};
  resx 10

<L14>:

<L6>:
  # DEBUG this => &D.46215
  # DEBUG this => &D.46215
  # DEBUG this => &D.46215
  _33 = MEM[(char * *)&D.46215];
  # DEBUG D#5 => &D.46215
  # DEBUG this => D#5
  # DEBUG this => &D.46215
  if (&D.46215.D.11539._M_local_buf != _33)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  # DEBUG D#68 => D.46215.D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => &D.46215
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#5 => &D.46215
  # DEBUG this => D#5
  # DEBUG this => &D.46215
  # DEBUG D#65 => &D.46215._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _33
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _33
  # DEBUG this => D#59
  # DEBUG D.56502 => D#60
  operator delete (_33);

  <bb 138>:
  # DEBUG D#69 => &D.46215._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.46215 ={v} {CLOBBER};
  resx 14

  <bb 139>:
  # __i$_M_node_211 = PHI <__i$_M_node_576(20), __i$_M_node_576(13), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(2)>
  goto <bb 21>;

  <bb 140>:
  pretmp_78 = MEM[(long unsigned int *)&D.46209 + 8B];
  pretmp_80 = MEM[(char * *)&D.46209];

  <bb 141>:
  # __i$_M_node_268 = PHI <__i$_M_node_582(46), __i$_M_node_582(41), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(140)>
  # prephitmp_79 = PHI <pretmp_479(46), pretmp_479(41), pretmp_78(140)>
  # prephitmp_81 = PHI <pretmp_328(46), pretmp_328(41), pretmp_80(140)>
  goto <bb 47>;

  <bb 142>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L16>:
  goto <bb 129> (<L2>);

  <bb 144>:
  # DEBUG __first => D#541
  # DEBUG __last => _165
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => D#541
  # DEBUG __last => _165
  __dnew = prephitmp_44;
  if (prephitmp_44 > 15)
    goto <bb 48>;
  else
    goto <bb 50>;

  <bb 145>:
  # __i$_M_node_124 = PHI <__i$_M_node_583(81), __i$_M_node_583(74), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(63)>
  goto <bb 82>;

  <bb 146>:
  pretmp_59 = MEM[(long unsigned int *)&D.46215 + 8B];
  pretmp_61 = MEM[(char * *)&D.46215];

  <bb 147>:
  # __i$_M_node_361 = PHI <__i$_M_node_601(107), __i$_M_node_601(102), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(146)>
  # prephitmp_60 = PHI <pretmp_497(107), pretmp_497(102), pretmp_59(146)>
  # prephitmp_548 = PHI <pretmp_499(107), pretmp_499(102), pretmp_61(146)>
  goto <bb 108>;

  <bb 148>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L17>:
  goto <bb 136> (<L6>);

  <bb 150>:
  # DEBUG __first => D#532
  # DEBUG __last => _315
  # DEBUG D#134 => &__first
  # DEBUG D.54027 => D#134
  # DEBUG __first => D#532
  # DEBUG __last => _315
  __dnew = prephitmp_551;
  if (prephitmp_551 > 15)
    goto <bb 109>;
  else
    goto <bb 111>;

}


