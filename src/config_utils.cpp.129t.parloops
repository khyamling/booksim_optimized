
;; Function bool ParseArgs(Configuration*, int, char**) (_Z9ParseArgsP13ConfigurationiPPc, funcdef_no=1749, decl_uid=35335, cgraph_uid=435, symbol_order=437)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
bool ParseArgs(Configuration*, int, char**) (struct Configuration * cf, int argc, char * * argv)
{
  size_type __dnew;
  char_type D.55822;
  char __c;
  char_type D.55819;
  char __c;
  char_type D.55816;
  struct basic_ostream & D.55810;
  char_type D.55793;
  char __c;
  char_type D.55790;
  char __c;
  char_type D.55787;
  struct basic_ostream & D.55781;
  struct basic_ostream & D.55769;
  char_type D.55765;
  char __c;
  char_type D.55762;
  char __c;
  char_type D.55759;
  struct basic_ostream & D.55753;
  struct basic_ostream & D.55741;
  size_type __dnew;
  size_type __dnew;
  char __c;
  char c;
  struct ifstream in;
  size_t pos;
  struct string arg;
  int i;
  bool rc;
  const struct string D.38416;
  const struct string D.38306;
  int pretmp_4;
  int prephitmp_5;
  long unsigned int _13;
  long unsigned int _14;
  char * * _16;
  char * _17;
  char * _21;
  char _22;
  bool _23;
  bool _24;
  bool _25;
  int _26;
  int pretmp_27;
  char * const _31;
  char * _32;
  char * * _33;
  char * _34;
  int (*__vtbl_ptr_type) () * _35;
  const iostate _37;
  int __a.135_38;
  char c.118_40;
  char * _43;
  int (*__vtbl_ptr_type) () * _44;
  char * const _50;
  const size_type _52;
  char * _53;
  char * const _56;
  char * const _58;
  char * const _60;
  char * const _64;
  long int _65;
  char * const _66;
  struct basic_ostream & _67;
  size_type prephitmp_74;
  char * const pretmp_75;
  char * const prephitmp_76;
  const struct __ctype_type * _79;
  const struct __ctype_type * _83;
  int (*__vtbl_ptr_type) () * iftmp.127_88;
  const struct __ctype_type * _91;
  int (*__vtbl_ptr_type) () * iftmp.127_93;
  int (*__vtbl_ptr_type) () * iftmp.127_94;
  int (*__vtbl_ptr_type) () * iftmp.125_95;
  int (*__vtbl_ptr_type) () * iftmp.125_96;
  int (*__vtbl_ptr_type) () * iftmp.125_98;
  int (*__vtbl_ptr_type) () * iftmp.127_99;
  int (*__vtbl_ptr_type) () * iftmp.127_100;
  int (*__vtbl_ptr_type) () * iftmp.127_101;
  int pretmp_103;
  int prephitmp_104;
  size_type pretmp_105;
  size_type prephitmp_106;
  int (*__vtbl_ptr_type) () * iftmp.127_108;
  int (*__vtbl_ptr_type) () * iftmp.127_109;
  int (*__vtbl_ptr_type) () * iftmp.127_110;
  int (*__vtbl_ptr_type) () * iftmp.127_111;
  size_t _113;
  int (*__vtbl_ptr_type) () * iftmp.125_120;
  char * _121;
  long unsigned int __dnew.111_122;
  const char_type _124;
  long unsigned int __dnew.111_125;
  char * const _126;
  char * _127;
  int pretmp_128;
  size_t _129;
  char * const _132;
  int (*__vtbl_ptr_type) () * iftmp.125_136;
  char * _137;
  long unsigned int __dnew.111_138;
  const char_type _140;
  char * _143;
  char * const _144;
  struct FILE * _145;
  struct FILE * _146;
  int (*__vtbl_ptr_type) () * iftmp.125_147;
  int (*__vtbl_ptr_type) () * iftmp.125_148;
  long int _149;
  sizetype iftmp.126_150;
  struct basic_ios * _151;
  int (*__vtbl_ptr_type) () * iftmp.127_152;
  long int _153;
  sizetype iftmp.128_154;
  struct basic_ios * _155;
  int _156;
  char * _158;
  long int _159;
  sizetype iftmp.133_160;
  struct basic_ios * _161;
  int prephitmp_162;
  struct __filebuf_type * _165;
  int (*__vtbl_ptr_type) () * _166;
  long int _167;
  sizetype _168;
  struct basic_ios * _169;
  int (*__vtbl_ptr_type) () * _170;
  long int _171;
  sizetype _172;
  struct basic_ios * _173;
  const iostate _174;
  int __a.104_175;
  int _176;
  _Ios_Iostate _177;
  size_t _178;
  long int _179;
  long int _180;
  sizetype _181;
  struct basic_ios * _182;
  const iostate _183;
  int __a.104_184;
  int _185;
  _Ios_Iostate _186;
  int (*__vtbl_ptr_type) () * _187;
  long int _188;
  sizetype _189;
  struct basic_ios * _190;
  struct basic_ostream & _193;
  char _195;
  char * const _196;
  char_type _198;
  int (*__vtbl_ptr_type) () * _203;
  int (*__vtbl_ptr_type) () _204;
  void * PROF_208;
  char_type _210;
  size_t _213;
  long int _214;
  long int _215;
  sizetype _216;
  struct basic_ios * _217;
  const iostate _218;
  int __a.104_219;
  int _220;
  _Ios_Iostate _221;
  int (*__vtbl_ptr_type) () * _222;
  long int _223;
  sizetype _224;
  struct basic_ios * _225;
  struct basic_ostream & _228;
  char _230;
  char_type _233;
  int (*__vtbl_ptr_type) () * _238;
  int (*__vtbl_ptr_type) () _239;
  int (*__vtbl_ptr_type) () * iftmp.125_241;
  void * PROF_243;
  int __a.135_244;
  char_type _245;
  int (*__vtbl_ptr_type) () * iftmp.125_246;
  int (*__vtbl_ptr_type) () * iftmp.125_247;
  const iostate _250;
  long int _251;
  sizetype iftmp.133_252;
  struct basic_ios * _253;
  int (*__vtbl_ptr_type) () * iftmp.125_254;
  char * * _257;
  long int _258;
  sizetype iftmp.133_259;
  struct basic_ios * _260;
  int (*__vtbl_ptr_type) () * _266;
  long int _267;
  sizetype _268;
  struct basic_ios * _269;
  struct basic_ostream & _272;
  char _274;
  char_type _277;
  int (*__vtbl_ptr_type) () * _282;
  int (*__vtbl_ptr_type) () _283;
  void * PROF_287;
  char_type _289;
  size_t _293;
  char * _301;
  long unsigned int __dnew.111_302;
  const char_type _304;
  char * _307;
  int pretmp_316;
  char * _375;
  char * const pretmp_398;
  char * const prephitmp_400;
  size_type pretmp_402;
  int pretmp_407;
  char * const _430;

  <bb 2>:
  # DEBUG rc => 0
  # DEBUG i => 1
  # DEBUG i => 1
  # DEBUG rc => 0
  if (argc_11(D) <= 1)
    goto <bb 149>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG D#42 => &D.38301
  # DEBUG this => D#42
  # DEBUG D#41 => D#42
  # DEBUG this => D#41
  _257 = argv_15(D) + 8;
  _375 = MEM[(char * *)argv_15(D) + 8B];
  # DEBUG D#400 => &D.38301
  # DEBUG this => &arg
  # DEBUG __s => _375
  # DEBUG __a => D#400
  # DEBUG D#399 => D#400
  # DEBUG this => &arg
  # DEBUG D#397 => &arg._M_dataplus
  # DEBUG D#147 => D#399
  # DEBUG this => D#397
  # DEBUG __dat => &arg.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#397
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&arg]._M_p = &arg.D.11539._M_local_buf;
  if (_375 != 0B)
    goto <bb 6>;
  else
    goto <bb 166>;

  <bb 4>:
  # DEBUG D#42 => &D.38301
  # DEBUG this => D#42
  # DEBUG D#41 => D#42
  # DEBUG this => D#41
  _13 = (long unsigned int) i_62;
  _14 = _13 * 8;
  _16 = argv_15(D) + _14;
  _17 = *_16;
  # DEBUG D#400 => &D.38301
  # DEBUG this => &arg
  # DEBUG __s => _17
  # DEBUG __a => D#400
  # DEBUG D#399 => D#400
  # DEBUG this => &arg
  # DEBUG D#397 => &arg._M_dataplus
  # DEBUG D#147 => D#399
  # DEBUG this => D#397
  # DEBUG __dat => &arg.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#397
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&arg]._M_p = &arg.D.11539._M_local_buf;
  if (_17 != 0B)
    goto <bb 5>;
  else
    goto <bb 166>;

  <bb 5>:
  goto <bb 7>;

  <bb 6>:

  <bb 7>:
  # rc_206 = PHI <0(6), rc_2(5)>
  # i_29 = PHI <1(6), i_62(5)>
  # _33 = PHI <_257(6), _16(5)>
  # _158 = PHI <_375(6), _17(5)>
  # DEBUG i => i_29
  # DEBUG rc => rc_206
  # DEBUG D#42 => &D.38301
  # DEBUG this => D#42
  # DEBUG D#41 => D#42
  # DEBUG this => D#41
  # DEBUG D#400 => &D.38301
  # DEBUG this => &arg
  # DEBUG __s => _158
  # DEBUG __a => D#400
  # DEBUG D#399 => D#400
  # DEBUG this => &arg
  # DEBUG D#397 => &arg._M_dataplus
  # DEBUG D#147 => D#399
  # DEBUG this => D#397
  # DEBUG __dat => &arg.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#397
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  # DEBUG __s => _158
  _113 = __builtin_strlen (_158);
  # DEBUG D#658 => _158 + _113
  # DEBUG this => &arg
  # DEBUG __beg => _158
  # DEBUG __end => D#658
  # DEBUG this => &arg
  # DEBUG __beg => _158
  # DEBUG __end => D#658
  # DEBUG this => &arg
  # DEBUG __beg => _158
  # DEBUG __end => D#658
  # DEBUG __ptr => _158
  # DEBUG __first => _158
  # DEBUG __last => D#658
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _158
  # DEBUG __last => D#658
  __dnew = _113;
  if (_113 > 15)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _121 = std::__cxx11::basic_string<char>::_M_create (&arg, &__dnew, 0);
  # DEBUG D#6 => &arg
  # DEBUG __p => _121
  # DEBUG this => D#6
  MEM[(char * *)&arg] = _121;
  __dnew.111_122 = __dnew;
  # DEBUG D#7 => &arg
  # DEBUG __capacity => __dnew.111_122
  # DEBUG this => D#7
  MEM[(size_type *)&arg + 16B] = __dnew.111_122;
  # DEBUG D#3 => &arg
  # DEBUG this => D#3
  # DEBUG __p => _121
  # DEBUG __k1 => _158
  # DEBUG __k2 => D#658
  # DEBUG __d => _121
  # DEBUG __s => _158
  # DEBUG __n => _113
  goto <bb 11>;

  <bb 9>:
  # DEBUG D#655 => MEM[(char * *)&arg]
  # DEBUG D#3 => &arg
  # DEBUG this => D#3
  # DEBUG __p => D#655
  # DEBUG __k1 => _158
  # DEBUG __k2 => D#658
  # DEBUG __d => D#655
  # DEBUG __s => _158
  # DEBUG __n => _113
  if (_113 == 1)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _124 = MEM[(const char_type &)_158];
  # DEBUG D#13 => _158
  # DEBUG __c1 => D#655
  # DEBUG __c2 => D#13
  MEM[(char_type &)&arg + 16] = _124;
  goto <bb 12>;

  <bb 11>:
  # _132 = PHI <&arg.D.11539._M_local_buf(9), _121(8)>
  # DEBUG D#3 => &arg
  # DEBUG this => D#3
  # DEBUG __p => _132
  # DEBUG __k1 => _158
  # DEBUG __k2 => D#658
  # DEBUG __d => _132
  # DEBUG __s => _158
  # DEBUG __n => _113
  # DEBUG __s1 => _132
  # DEBUG __s2 => _158
  # DEBUG __n => _113
  __builtin_memcpy (_132, _158, _113);

  <bb 12>:
  __dnew.111_125 = __dnew;
  # DEBUG this => &arg
  # DEBUG __n => __dnew.111_125
  # DEBUG D#5 => &arg
  # DEBUG __length => __dnew.111_125
  # DEBUG this => D#5
  MEM[(size_type *)&arg + 8B] = __dnew.111_125;
  _126 = MEM[(char * *)&arg];
  # DEBUG D#3 => &arg
  # DEBUG this => D#3
  _127 = _126 + __dnew.111_125;
  # DEBUG __c1 => _127
  # DEBUG __c2 => D#13
  MEM[(char_type &)_127] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.38301
  # DEBUG this => &D.38301
  pos_20 = std::__cxx11::basic_string<char>::find (&arg, 61, 0);

  <bb 13>:
  # DEBUG pos => pos_20
  _21 = *_33;
  _22 = *_21;
  # DEBUG dash => _22 == 45
  _23 = pos_20 == 18446744073709551615;
  _24 = _22 != 45;
  _25 = _23 & _24;
  if (_25 != 0)
    goto <bb 14>;
  else
    goto <bb 113>;

  <bb 14>:
  # DEBUG D#42 => &D.38305
  # DEBUG this => D#42
  # DEBUG D#41 => D#42
  # DEBUG this => D#41
  # DEBUG D#400 => &D.38305
  # DEBUG this => &D.38306
  # DEBUG __s => _21
  # DEBUG __a => D#400
  # DEBUG D#399 => D#400
  # DEBUG this => &D.38306
  # DEBUG D#397 => &D.38306._M_dataplus
  # DEBUG D#147 => D#399
  # DEBUG this => D#397
  # DEBUG __dat => &D.38306.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#397
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&D.38306]._M_p = &D.38306.D.11539._M_local_buf;
  # DEBUG __s => _21
  _129 = __builtin_strlen (_21);
  # DEBUG D#657 => _21 + _129
  # DEBUG this => &D.38306
  # DEBUG __beg => _21
  # DEBUG __end => D#657
  # DEBUG this => &D.38306
  # DEBUG __beg => _21
  # DEBUG __end => D#657
  # DEBUG this => &D.38306
  # DEBUG __beg => _21
  # DEBUG __end => D#657
  # DEBUG __ptr => _21
  # DEBUG __first => _21
  # DEBUG __last => D#657
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _21
  # DEBUG __last => D#657
  __dnew = _129;
  if (_129 > 15)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  _137 = std::__cxx11::basic_string<char>::_M_create (&D.38306, &__dnew, 0);
  goto <bb 17>;

<L31>:
  goto <bb 163> (<L21>);

  <bb 17>:
  # DEBUG D#6 => &D.38306
  # DEBUG __p => _137
  # DEBUG this => D#6
  MEM[(char * *)&D.38306] = _137;
  __dnew.111_138 = __dnew;
  # DEBUG D#7 => &D.38306
  # DEBUG __capacity => __dnew.111_138
  # DEBUG this => D#7
  MEM[(size_type *)&D.38306 + 16B] = __dnew.111_138;
  # DEBUG D#3 => &D.38306
  # DEBUG this => D#3
  # DEBUG __p => _137
  # DEBUG __k1 => _21
  # DEBUG __k2 => D#657
  # DEBUG __d => _137
  # DEBUG __s => _21
  # DEBUG __n => _129
  goto <bb 20>;

  <bb 18>:
  # DEBUG D#3 => &D.38306
  # DEBUG this => D#3
  # DEBUG __p => &D.38306.D.11539._M_local_buf
  # DEBUG __k1 => _21
  # DEBUG __k2 => D#657
  # DEBUG __d => &D.38306.D.11539._M_local_buf
  # DEBUG __s => _21
  # DEBUG __n => _129
  if (_129 == 1)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _140 = MEM[(const char_type &)_21];
  # DEBUG D#13 => _21
  # DEBUG __c1 => &D.38306.D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.38306 + 16] = _140;
  goto <bb 21>;

  <bb 20>:
  # _430 = PHI <&D.38306.D.11539._M_local_buf(18), _137(17)>
  # DEBUG D#3 => &D.38306
  # DEBUG this => D#3
  # DEBUG __p => _430
  # DEBUG __k1 => _21
  # DEBUG __k2 => D#657
  # DEBUG __d => _430
  # DEBUG __s => _21
  # DEBUG __n => _129
  # DEBUG __s1 => _430
  # DEBUG __s2 => _21
  # DEBUG __n => _129
  __builtin_memcpy (_430, _21, _129);
  pretmp_402 = __dnew;
  pretmp_75 = MEM[(char * *)&D.38306];

  <bb 21>:
  # prephitmp_74 = PHI <_129(19), pretmp_402(20)>
  # prephitmp_76 = PHI <&D.38306.D.11539._M_local_buf(19), pretmp_75(20)>
  # DEBUG D#654 => __dnew
  # DEBUG this => &D.38306
  # DEBUG __n => D#654
  # DEBUG D#5 => &D.38306
  # DEBUG __length => D#654
  # DEBUG this => D#5
  MEM[(size_type *)&D.38306 + 8B] = prephitmp_74;
  # DEBUG D#3 => &D.38306
  # DEBUG this => D#3
  _143 = prephitmp_76 + prephitmp_74;
  # DEBUG __c1 => _143
  # DEBUG __c2 => D#13
  MEM[(char_type &)_143] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => cf_28(D)
  # DEBUG filename => &D.38306
  # DEBUG this => &D.38306
  _144 = MEM[(char * *)&D.38306];
  # DEBUG D#3 => &D.38306
  # DEBUG this => D#3
  _145 = fopen (_144, "r");

  <bb 22>:
  cf_28(D)->_config_file = _145;
  if (_145 == 0B)
    goto <bb 23>;
  else
    goto <bb 25>;

  <bb 23>:
  # DEBUG D#31 => cf_28(D)
  Configuration::_ZN13Configuration9ParseFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.14 (&D.38306);

<L33>:
  goto <bb 151> (<L14>);

  <bb 25>:
  yyparse ();
  goto <bb 27>;

<L34>:
  goto <bb 151> (<L14>);

  <bb 27>:
  _146 = cf_28(D)->_config_file;
  fclose (_146);
  goto <bb 29>;

<L35>:
  goto <bb 151> (<L14>);

  <bb 29>:
  cf_28(D)->_config_file = 0B;
  # DEBUG this => &D.38306
  # DEBUG this => &D.38306
  # DEBUG this => &D.38306
  _31 = MEM[(char * *)&D.38306];
  # DEBUG D#3 => &D.38306
  # DEBUG this => D#3
  # DEBUG this => &D.38306
  if (&D.38306.D.11539._M_local_buf != _31)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#186 => D.38306.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.38306
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.38306
  # DEBUG this => D#3
  # DEBUG this => &D.38306
  # DEBUG D#183 => &D.38306._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _31
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _31
  # DEBUG this => D#177
  # DEBUG D.51334 => D#178
  operator delete (_31);

  <bb 31>:
  # DEBUG D#187 => &D.38306._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.38306 ={v} {CLOBBER};
  # DEBUG this => &D.38305
  # DEBUG this => &D.38305
  _32 = *_33;
  # DEBUG this => &in
  # DEBUG __s => _32
  # DEBUG __mode => 8
  # DEBUG D#24 => &in.D.27129
  # DEBUG this => D#24
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&in + 256B].D.21051);
  MEM[(struct basic_ios *)&in + 256B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&in + 256B]._M_tie = 0B;
  MEM[(struct basic_ios *)&in + 256B]._M_fill = 0;
  MEM[(struct basic_ios *)&in + 256B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&in + 256B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&in + 256B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&in + 256B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&in + 256B]._M_num_get = 0B;
  # DEBUG this => &in.D.27126
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B]
  iftmp.125_148 = MEM[(const void * *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B];
  MEM[(struct basic_istream *)&in]._vptr.basic_istream = iftmp.125_148;
  _149 = MEM[(long int *)iftmp.125_148 + -24B];
  iftmp.126_150 = (sizetype) _149;
  _151 = &in.D.27126 + iftmp.126_150;
  iftmp.127_152 = MEM[(const void * *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 16B];
  _151->D.21051._vptr.ios_base = iftmp.127_152;
  MEM[(struct basic_istream *)&in]._M_gcount = 0;
  _153 = MEM[(long int *)iftmp.125_148 + -24B];
  iftmp.128_154 = (sizetype) _153;
  _155 = &in.D.27126 + iftmp.128_154;
  std::basic_ios<char>::init (_155, 0B);

  <bb 32>:
  in.D.27126._vptr.basic_istream = &MEM[(void *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE + 24B];
  MEM[(struct basic_ios *)&in + 256B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE + 64B];
  std::basic_filebuf<char>::basic_filebuf (&in._M_filebuf);

  <bb 33>:
  std::basic_ios<char>::init (&MEM[(void *)&in + 256B], &in._M_filebuf.D.27035);

  <bb 34>:
  # DEBUG this => &in
  # DEBUG __s => _32
  # DEBUG __mode => 8
  # DEBUG __a => 8
  # DEBUG __b => 8
  _165 = std::basic_filebuf<char>::open (&in._M_filebuf, _32, 8);
  goto <bb 36>;

  # iftmp.125_254 = PHI <iftmp.125_148(34)>
  # iftmp.127_111 = PHI <iftmp.127_152(34)>
<L39>:
  goto <bb 42> (<L23>);

  <bb 36>:
  if (_165 == 0B)
    goto <bb 37>;
  else
    goto <bb 39>;

  <bb 37>:
  # DEBUG D#19 => _32
  # DEBUG D#20 => 8
  # DEBUG this => &in
  # DEBUG D#21 => D#20
  # DEBUG __mode => D#21
  # DEBUG D#22 => D#19
  # DEBUG __s => D#22
  _170 = in.D.27126._vptr.basic_istream;
  _171 = MEM[(long int *)_170 + -24B];
  _172 = (sizetype) _171;
  _173 = &in + _172;
  # DEBUG this => _173
  # DEBUG __state => 4
  _174 = MEM[(_Ios_Iostate *)_173 + 32B];
  # DEBUG D#4 => _173
  # DEBUG this => D#4
  # DEBUG __a => _174
  # DEBUG __b => 4
  __a.104_175 = (int) _174;
  _176 = __a.104_175 | 4;
  _177 = (_Ios_Iostate) _176;
  std::basic_ios<char>::clear (_173, _177);
  goto <bb 50>;

  # iftmp.125_247 = PHI <iftmp.125_148(37)>
  # iftmp.127_110 = PHI <iftmp.127_152(37)>
<L40>:
  goto <bb 42> (<L23>);

  <bb 39>:
  _166 = in.D.27126._vptr.basic_istream;
  _167 = MEM[(long int *)_166 + -24B];
  _168 = (sizetype) _167;
  _169 = &in + _168;
  std::basic_ios<char>::clear (_169, 0);
  goto <bb 50>;

  # iftmp.125_246 = PHI <iftmp.125_148(39)>
  # iftmp.127_109 = PHI <iftmp.127_152(39)>
<L41>:
  goto <bb 42> (<L23>);

  # iftmp.125_241 = PHI <iftmp.125_148(33)>
  # iftmp.127_108 = PHI <iftmp.127_152(33)>
<L38>:

  # iftmp.125_98 = PHI <iftmp.125_241(41), iftmp.125_246(40), iftmp.125_254(35), iftmp.125_247(38)>
  # iftmp.127_94 = PHI <iftmp.127_108(41), iftmp.127_109(40), iftmp.127_111(35), iftmp.127_110(38)>
<L23>:
  std::basic_filebuf<char>::~basic_filebuf (&in._M_filebuf);
  resx 24

<L42>:
  goto <bb 45> (<L24>);

  # iftmp.125_147 = PHI <iftmp.125_148(32)>
  # iftmp.127_101 = PHI <iftmp.127_152(32)>
<L37>:

  # iftmp.125_96 = PHI <iftmp.125_147(44), iftmp.125_98(43)>
  # iftmp.127_93 = PHI <iftmp.127_101(44), iftmp.127_94(43)>
<L24>:
  # DEBUG this => &in.D.27126
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B]
  _159 = MEM[(long int *)iftmp.125_96 + -24B];
  iftmp.133_160 = (sizetype) _159;
  _161 = &in.D.27126 + iftmp.133_160;
  _161->D.21051._vptr.ios_base = iftmp.127_93;
  MEM[(struct  &)&in] ={v} {CLOBBER};
  resx 23

<L43>:
  goto <bb 48> (<L25>);

<L36>:

<L25>:
  # DEBUG D#23 => &in.D.27129
  # DEBUG this => D#23
  MEM[(struct basic_ios *)&in + 256B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&in + 256B].D.21051);
  resx 22

<L44>:
  goto <bb 163> (<L21>);

  <bb 50>:
  _34 = *_33;
  # DEBUG __out => &cout
  # DEBUG __s => "BEGIN Configuration File: "
  # DEBUG __s => "BEGIN Configuration File: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "BEGIN Configuration File: ", 26);

  <bb 51>:
  # DEBUG __s => _34
  # DEBUG __out => &cout
  if (_34 == 0B)
    goto <bb 52>;
  else
    goto <bb 55>;

  <bb 52>:
  # DEBUG D#17 => 0B
  # DEBUG __out => &cout
  # DEBUG D#18 => D#17
  # DEBUG __s => D#18
  _35 = cout._vptr.basic_ostream;
  _180 = MEM[(long int *)_35 + -24B];
  _181 = (sizetype) _180;
  _182 = &cout + _181;
  # DEBUG this => _182
  # DEBUG __state => 1
  _183 = MEM[(_Ios_Iostate *)_182 + 32B];
  # DEBUG D#4 => _182
  # DEBUG this => D#4
  # DEBUG __a => _183
  # DEBUG __b => 1
  __a.104_184 = (int) _183;
  _185 = __a.104_184 | 1;
  _186 = (_Ios_Iostate) _185;
  std::basic_ios<char>::clear (_182, _186);
  goto <bb 54>;

<L46>:
  goto <bb 156> (<L17>);

  <bb 54>:
  # DEBUG this => NULL
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _187 = cout._vptr.basic_ostream;
  _188 = MEM[(long int *)_187 + -24B];
  _189 = (sizetype) _188;
  _190 = &cout + _189;
  # DEBUG this => _190
  # DEBUG __c => 10
  _79 = MEM[(const struct basic_ios *)_190]._M_ctype;
  # DEBUG __f => _79
  if (_79 == 0B)
    goto <bb 57>;
  else
    goto <bb 59>;

  <bb 55>:
  # DEBUG __s => _34
  _178 = __builtin_strlen (_34);
  _179 = (long int) _178;
  std::__ostream_insert<char, std::char_traits<char> > (&cout, _34, _179);
  goto <bb 54>;

<L47>:
  goto <bb 156> (<L17>);

  <bb 57>:
  std::__throw_bad_cast ();

<L48>:
  goto <bb 156> (<L17>);

  <bb 59>:
  # DEBUG this => _79
  # DEBUG __c => 10
  _195 = MEM[(const struct ctype *)_79]._M_widen_ok;
  if (_195 != 0)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  _198 = MEM[(const struct ctype *)_79]._M_widen[10];
  pretmp_128 = (int) _198;
  goto <bb 67>;

  <bb 61>:
  # DEBUG this => _79
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_79);
  goto <bb 63>;

<L49>:
  goto <bb 156> (<L17>);

  <bb 63>:
  _203 = MEM[(const struct ctype *)_79].D.18015._vptr.facet;
  _204 = MEM[(int (*__vtbl_ptr_type) () *)_203 + 48B];
  PROF_208 = [obj_type_ref] OBJ_TYPE_REF(_204;(const struct ctype)_79->6);
  if (PROF_208 == do_widen)
    goto <bb 67>;
  else
    goto <bb 64>;

  <bb 64>:
  _210 = OBJ_TYPE_REF(_204;(const struct ctype)_79->6) (_79, 10);
  goto <bb 66>;

<L50>:
  goto <bb 156> (<L17>);

  <bb 66>:
  pretmp_316 = (int) _210;

  <bb 67>:
  # prephitmp_5 = PHI <pretmp_128(60), 10(63), pretmp_316(66)>
  _193 = std::basic_ostream<char>::put (&cout, prephitmp_5);
  goto <bb 69>;

<L51>:
  goto <bb 156> (<L17>);

  <bb 69>:
  # DEBUG __os => _193
  std::basic_ostream<char>::flush (_193);
  goto <bb 71>;

<L52>:
  goto <bb 156> (<L17>);

  <bb 71>:
  # DEBUG this => &in.D.27129
  _250 = MEM[(_Ios_Iostate *)&in + 288B];
  # DEBUG D#4 => &in.D.27129
  # DEBUG this => D#4
  # DEBUG __a => _250
  # DEBUG __b => 2
  __a.135_244 = (int) _250;
  _156 = __a.135_244 & 2;
  if (_156 == 0)
    goto <bb 73>;
  else
    goto <bb 72>;

  <bb 72>:
  _43 = *_33;
  # DEBUG __out => &cout
  # DEBUG __s => "END Configuration File: "
  # DEBUG __s => "END Configuration File: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "END Configuration File: ", 24);
  goto <bb 81>;

  <bb 73>:

  <bb 74>:
  # DEBUG this => &in.D.27129
  # DEBUG D#4 => &in.D.27129
  # DEBUG this => D#4
  # DEBUG __a => _250
  # DEBUG __b => 2
  std::basic_istream<char>::get (&in.D.27126, &c);
  goto <bb 76>;

<L53>:
  goto <bb 156> (<L17>);

  <bb 76>:
  c.118_40 = c;
  # DEBUG __out => &cout
  __c = c.118_40;
  # DEBUG __c => __c
  std::__ostream_insert<char, std::char_traits<char> > (&cout, &__c, 1);
  goto <bb 78>;

<L54>:
  goto <bb 156> (<L17>);

  <bb 78>:
  c ={v} {CLOBBER};
  # DEBUG this => &in.D.27129
  _37 = MEM[(_Ios_Iostate *)&in + 288B];
  # DEBUG D#4 => &in.D.27129
  # DEBUG this => D#4
  # DEBUG __a => _37
  # DEBUG __b => 2
  __a.135_38 = (int) _37;
  _26 = __a.135_38 & 2;
  if (_26 == 0)
    goto <bb 79>;
  else
    goto <bb 72>;

  <bb 79>:
  goto <bb 74>;

<L55>:
  goto <bb 156> (<L17>);

  <bb 81>:
  # DEBUG __s => _43
  # DEBUG __out => &cout
  if (_43 == 0B)
    goto <bb 82>;
  else
    goto <bb 85>;

  <bb 82>:
  # DEBUG D#17 => 0B
  # DEBUG __out => &cout
  # DEBUG D#18 => D#17
  # DEBUG __s => D#18
  _44 = cout._vptr.basic_ostream;
  _215 = MEM[(long int *)_44 + -24B];
  _216 = (sizetype) _215;
  _217 = &cout + _216;
  # DEBUG this => _217
  # DEBUG __state => 1
  _218 = MEM[(_Ios_Iostate *)_217 + 32B];
  # DEBUG D#4 => _217
  # DEBUG this => D#4
  # DEBUG __a => _218
  # DEBUG __b => 1
  __a.104_219 = (int) _218;
  _220 = __a.104_219 | 1;
  _221 = (_Ios_Iostate) _220;
  std::basic_ios<char>::clear (_217, _221);
  goto <bb 84>;

<L56>:
  goto <bb 156> (<L17>);

  <bb 84>:
  # DEBUG this => NULL
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _222 = cout._vptr.basic_ostream;
  _223 = MEM[(long int *)_222 + -24B];
  _224 = (sizetype) _223;
  _225 = &cout + _224;
  # DEBUG this => _225
  # DEBUG __c => 10
  _83 = MEM[(const struct basic_ios *)_225]._M_ctype;
  # DEBUG __f => _83
  if (_83 == 0B)
    goto <bb 87>;
  else
    goto <bb 89>;

  <bb 85>:
  # DEBUG __s => _43
  _213 = __builtin_strlen (_43);
  _214 = (long int) _213;
  std::__ostream_insert<char, std::char_traits<char> > (&cout, _43, _214);
  goto <bb 84>;

<L57>:
  goto <bb 156> (<L17>);

  <bb 87>:
  std::__throw_bad_cast ();

<L58>:
  goto <bb 156> (<L17>);

  <bb 89>:
  # DEBUG this => _83
  # DEBUG __c => 10
  _230 = MEM[(const struct ctype *)_83]._M_widen_ok;
  if (_230 != 0)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  _233 = MEM[(const struct ctype *)_83]._M_widen[10];
  pretmp_4 = (int) _233;
  goto <bb 97>;

  <bb 91>:
  # DEBUG this => _83
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_83);
  goto <bb 93>;

<L59>:
  goto <bb 156> (<L17>);

  <bb 93>:
  _238 = MEM[(const struct ctype *)_83].D.18015._vptr.facet;
  _239 = MEM[(int (*__vtbl_ptr_type) () *)_238 + 48B];
  PROF_243 = [obj_type_ref] OBJ_TYPE_REF(_239;(const struct ctype)_83->6);
  if (PROF_243 == do_widen)
    goto <bb 97>;
  else
    goto <bb 94>;

  <bb 94>:
  _245 = OBJ_TYPE_REF(_239;(const struct ctype)_83->6) (_83, 10);
  goto <bb 96>;

<L60>:
  goto <bb 156> (<L17>);

  <bb 96>:
  pretmp_27 = (int) _245;

  <bb 97>:
  # prephitmp_162 = PHI <pretmp_4(90), 10(93), pretmp_27(96)>
  _228 = std::basic_ostream<char>::put (&cout, prephitmp_162);
  goto <bb 99>;

<L61>:
  goto <bb 156> (<L17>);

  <bb 99>:
  # DEBUG __os => _228
  std::basic_ostream<char>::flush (_228);
  goto <bb 101>;

<L62>:
  goto <bb 156> (<L17>);

  <bb 101>:
  # DEBUG rc => 1
  # DEBUG this => &in
  in.D.27126._vptr.basic_istream = &MEM[(void *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE + 24B];
  MEM[(struct basic_ios *)&in + 256B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE + 64B];
  # DEBUG this => &in._M_filebuf
  MEM[(struct basic_filebuf *)&in + 16B].D.27035._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt13basic_filebufIcSt11char_traitsIcEE + 16B];
  std::basic_filebuf<char>::close (&in._M_filebuf);

  <bb 102>:
  std::__basic_file<char>::~__basic_file (&MEM[(struct basic_filebuf *)&in + 16B]._M_file);

  <bb 103>:
  # DEBUG D#8 => &MEM[(struct basic_filebuf *)&in + 16B].D.27035
  # DEBUG this => D#8
  MEM[(struct basic_streambuf *)&in + 16B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&in + 16B]._M_buf_locale);
  MEM[(struct  &)&in + 16] ={v} {CLOBBER};
  # DEBUG this => &in.D.27126
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B]
  _251 = MEM[(long int *)iftmp.125_148 + -24B];
  iftmp.133_252 = (sizetype) _251;
  _253 = &in.D.27126 + iftmp.133_252;
  _253->D.21051._vptr.ios_base = iftmp.127_152;
  MEM[(struct  &)&in] ={v} {CLOBBER};
  # DEBUG D#11 => &in.D.27129
  # DEBUG this => D#11
  MEM[(struct basic_ios *)&in + 256B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&in + 256B].D.21051);
  goto <bb 109>;

<L64>:
  goto <bb 163> (<L21>);

  # iftmp.125_136 = PHI <iftmp.125_148(101)>
  # iftmp.127_100 = PHI <iftmp.127_152(101)>
<L28>:
  std::__basic_file<char>::~__basic_file (&MEM[(struct basic_filebuf *)&in + 16B]._M_file);
  resx 32

<L65>:
  goto <bb 108> (<L29>);

  # iftmp.125_120 = PHI <iftmp.125_148(102)>
  # iftmp.127_99 = PHI <iftmp.127_152(102)>
<L63>:

  # iftmp.125_95 = PHI <iftmp.125_120(107), iftmp.125_136(106)>
  # iftmp.127_88 = PHI <iftmp.127_99(107), iftmp.127_100(106)>
<L29>:
  # DEBUG D#9 => &MEM[(struct basic_filebuf *)&in + 16B].D.27035
  # DEBUG this => D#9
  MEM[(struct basic_streambuf *)&in + 16B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&in + 16B]._M_buf_locale);
  MEM[(struct  &)&in + 16] ={v} {CLOBBER};
  resx 30

  <bb 109>:
  in ={v} {CLOBBER};
  goto <bb 145>;

<L26>:
  # DEBUG this => &in.D.27126
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B]
  _258 = MEM[(long int *)iftmp.125_95 + -24B];
  iftmp.133_259 = (sizetype) _258;
  _260 = &in.D.27126 + iftmp.133_259;
  _260->D.21051._vptr.ios_base = iftmp.127_88;
  MEM[(struct  &)&in] ={v} {CLOBBER};
  resx 29

<L27>:
  # DEBUG D#10 => &in.D.27129
  # DEBUG this => D#10
  MEM[(struct basic_ios *)&in + 256B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&in + 256B].D.21051);
  resx 28

<L66>:
  goto <bb 163> (<L21>);

  <bb 113>:
  if (pos_20 != 18446744073709551615)
    goto <bb 114>;
  else
    goto <bb 145>;

  <bb 114>:
  # DEBUG __out => &cout
  # DEBUG __s => "OVERRIDE Parameter: "
  # DEBUG __s => "OVERRIDE Parameter: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "OVERRIDE Parameter: ", 20);
  goto <bb 116>;

<L67>:
  goto <bb 163> (<L21>);

  <bb 116>:
  # DEBUG __os => &cout
  # DEBUG __str => &arg
  _52 = MEM[(long unsigned int *)&arg + 8B];
  # DEBUG D#2 => &arg
  # DEBUG this => D#2
  _65 = (long int) _52;
  # DEBUG this => &arg
  _66 = MEM[(char * *)&arg];
  # DEBUG D#3 => &arg
  # DEBUG this => D#3
  _67 = std::__ostream_insert<char, std::char_traits<char> > (&cout, _66, _65);
  goto <bb 118>;

<L68>:
  goto <bb 163> (<L21>);

  <bb 118>:
  # DEBUG this => _67
  # DEBUG __pf => endl
  # DEBUG __os => _67
  _266 = _67->_vptr.basic_ostream;
  _267 = MEM[(long int *)_266 + -24B];
  _268 = (sizetype) _267;
  _269 = _67 + _268;
  # DEBUG this => _269
  # DEBUG __c => 10
  _91 = MEM[(const struct basic_ios *)_269]._M_ctype;
  # DEBUG __f => _91
  if (_91 == 0B)
    goto <bb 119>;
  else
    goto <bb 121>;

  <bb 119>:
  std::__throw_bad_cast ();

<L69>:
  goto <bb 163> (<L21>);

  <bb 121>:
  # DEBUG this => _91
  # DEBUG __c => 10
  _274 = MEM[(const struct ctype *)_91]._M_widen_ok;
  if (_274 != 0)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  _277 = MEM[(const struct ctype *)_91]._M_widen[10];
  pretmp_407 = (int) _277;
  goto <bb 129>;

  <bb 123>:
  # DEBUG this => _91
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_91);
  goto <bb 125>;

<L70>:
  goto <bb 163> (<L21>);

  <bb 125>:
  _282 = MEM[(const struct ctype *)_91].D.18015._vptr.facet;
  _283 = MEM[(int (*__vtbl_ptr_type) () *)_282 + 48B];
  PROF_287 = [obj_type_ref] OBJ_TYPE_REF(_283;(const struct ctype)_91->6);
  if (PROF_287 == do_widen)
    goto <bb 129>;
  else
    goto <bb 126>;

  <bb 126>:
  _289 = OBJ_TYPE_REF(_283;(const struct ctype)_91->6) (_91, 10);
  goto <bb 128>;

<L71>:
  goto <bb 163> (<L21>);

  <bb 128>:
  pretmp_103 = (int) _289;

  <bb 129>:
  # prephitmp_104 = PHI <pretmp_407(122), 10(125), pretmp_103(128)>
  _272 = std::basic_ostream<char>::put (_67, prephitmp_104);
  goto <bb 131>;

<L72>:
  goto <bb 163> (<L21>);

  <bb 131>:
  # DEBUG __os => _272
  std::basic_ostream<char>::flush (_272);
  goto <bb 133>;

<L73>:
  goto <bb 163> (<L21>);

  <bb 133>:
  # DEBUG D#42 => &D.38415
  # DEBUG this => D#42
  # DEBUG D#41 => D#42
  # DEBUG this => D#41
  _53 = *_33;
  # DEBUG D#400 => &D.38415
  # DEBUG this => &D.38416
  # DEBUG __s => _53
  # DEBUG __a => D#400
  # DEBUG D#399 => D#400
  # DEBUG this => &D.38416
  # DEBUG D#397 => &D.38416._M_dataplus
  # DEBUG D#147 => D#399
  # DEBUG this => D#397
  # DEBUG __dat => &D.38416.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#397
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&D.38416]._M_p = &D.38416.D.11539._M_local_buf;
  if (_53 != 0B)
    goto <bb 134>;
  else
    goto <bb 167>;

  <bb 134>:
  # DEBUG __s => _53
  _293 = __builtin_strlen (_53);
  # DEBUG D#656 => _53 + _293
  # DEBUG this => &D.38416
  # DEBUG __beg => _53
  # DEBUG __end => D#656
  # DEBUG this => &D.38416
  # DEBUG __beg => _53
  # DEBUG __end => D#656
  # DEBUG this => &D.38416
  # DEBUG __beg => _53
  # DEBUG __end => D#656
  # DEBUG __ptr => _53
  # DEBUG __first => _53
  # DEBUG __last => D#656
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _53
  # DEBUG __last => D#656
  __dnew = _293;
  if (_293 > 15)
    goto <bb 135>;
  else
    goto <bb 138>;

  <bb 135>:
  _301 = std::__cxx11::basic_string<char>::_M_create (&D.38416, &__dnew, 0);
  goto <bb 137>;

<L74>:
  goto <bb 163> (<L21>);

  <bb 137>:
  # DEBUG D#6 => &D.38416
  # DEBUG __p => _301
  # DEBUG this => D#6
  MEM[(char * *)&D.38416] = _301;
  __dnew.111_302 = __dnew;
  # DEBUG D#7 => &D.38416
  # DEBUG __capacity => __dnew.111_302
  # DEBUG this => D#7
  MEM[(size_type *)&D.38416 + 16B] = __dnew.111_302;
  # DEBUG D#3 => &D.38416
  # DEBUG this => D#3
  # DEBUG __p => _301
  # DEBUG __k1 => _53
  # DEBUG __k2 => D#656
  # DEBUG __d => _301
  # DEBUG __s => _53
  # DEBUG __n => _293
  goto <bb 140>;

  <bb 138>:
  # DEBUG D#3 => &D.38416
  # DEBUG this => D#3
  # DEBUG __p => &D.38416.D.11539._M_local_buf
  # DEBUG __k1 => _53
  # DEBUG __k2 => D#656
  # DEBUG __d => &D.38416.D.11539._M_local_buf
  # DEBUG __s => _53
  # DEBUG __n => _293
  if (_293 == 1)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 139>:
  _304 = MEM[(const char_type &)_53];
  # DEBUG D#13 => _53
  # DEBUG __c1 => &D.38416.D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.38416 + 16] = _304;
  goto <bb 141>;

  <bb 140>:
  # _196 = PHI <&D.38416.D.11539._M_local_buf(138), _301(137)>
  # DEBUG D#3 => &D.38416
  # DEBUG this => D#3
  # DEBUG __p => _196
  # DEBUG __k1 => _53
  # DEBUG __k2 => D#656
  # DEBUG __d => _196
  # DEBUG __s => _53
  # DEBUG __n => _293
  # DEBUG __s1 => _196
  # DEBUG __s2 => _53
  # DEBUG __n => _293
  __builtin_memcpy (_196, _53, _293);
  pretmp_105 = __dnew;
  pretmp_398 = MEM[(char * *)&D.38416];

  <bb 141>:
  # prephitmp_106 = PHI <_293(139), pretmp_105(140)>
  # prephitmp_400 = PHI <&D.38416.D.11539._M_local_buf(139), pretmp_398(140)>
  # DEBUG D#653 => __dnew
  # DEBUG this => &D.38416
  # DEBUG __n => D#653
  # DEBUG D#5 => &D.38416
  # DEBUG __length => D#653
  # DEBUG this => D#5
  MEM[(size_type *)&D.38416 + 8B] = prephitmp_106;
  # DEBUG D#3 => &D.38416
  # DEBUG this => D#3
  _307 = prephitmp_400 + prephitmp_106;
  # DEBUG __c1 => _307
  # DEBUG __c2 => D#13
  MEM[(char_type &)_307] = 0;
  __dnew ={v} {CLOBBER};
  Configuration::ParseString (cf_28(D), &D.38416);

  <bb 142>:
  # DEBUG this => &D.38416
  # DEBUG this => &D.38416
  # DEBUG this => &D.38416
  _58 = MEM[(char * *)&D.38416];
  # DEBUG D#3 => &D.38416
  # DEBUG this => D#3
  # DEBUG this => &D.38416
  if (&D.38416.D.11539._M_local_buf != _58)
    goto <bb 143>;
  else
    goto <bb 144>;

  <bb 143>:
  # DEBUG D#186 => D.38416.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.38416
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.38416
  # DEBUG this => D#3
  # DEBUG this => &D.38416
  # DEBUG D#183 => &D.38416._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _58
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _58
  # DEBUG this => D#177
  # DEBUG D.51383 => D#178
  operator delete (_58);

  <bb 144>:
  # DEBUG D#187 => &D.38416._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.38416 ={v} {CLOBBER};
  # DEBUG this => &D.38415
  # DEBUG this => &D.38415

  <bb 145>:
  # rc_2 = PHI <1(109), rc_206(113), rc_206(144)>
  # DEBUG rc => rc_2
  # DEBUG this => &arg
  # DEBUG this => &arg
  # DEBUG this => &arg
  _56 = MEM[(char * *)&arg];
  # DEBUG D#3 => &arg
  # DEBUG this => D#3
  # DEBUG this => &arg
  if (&arg.D.11539._M_local_buf != _56)
    goto <bb 146>;
  else
    goto <bb 147>;

  <bb 146>:
  # DEBUG D#186 => arg.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &arg
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &arg
  # DEBUG this => D#3
  # DEBUG this => &arg
  # DEBUG D#183 => &arg._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _56
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _56
  # DEBUG this => D#177
  # DEBUG D.51398 => D#178
  operator delete (_56);

  <bb 147>:
  # DEBUG D#187 => &arg._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  arg ={v} {CLOBBER};
  i_62 = i_29 + 1;
  # DEBUG i => i_62
  # DEBUG i => i_62
  # DEBUG rc => rc_2
  if (argc_11(D) <= i_62)
    goto <bb 148>;
  else
    goto <bb 4>;

  <bb 148>:
  # rc_300 = PHI <rc_2(147)>

  <bb 149>:
  # rc_438 = PHI <rc_300(148), 0(2)>
  return rc_438;

<L32>:

<L14>:
  # DEBUG this => &D.38306
  # DEBUG this => &D.38306
  # DEBUG this => &D.38306
  _64 = MEM[(char * *)&D.38306];
  # DEBUG D#3 => &D.38306
  # DEBUG this => D#3
  # DEBUG this => &D.38306
  if (&D.38306.D.11539._M_local_buf != _64)
    goto <bb 152>;
  else
    goto <bb 153>;

  <bb 152>:
  # DEBUG D#186 => D.38306.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.38306
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.38306
  # DEBUG this => D#3
  # DEBUG this => &D.38306
  # DEBUG D#183 => &D.38306._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _64
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _64
  # DEBUG this => D#177
  # DEBUG D.51415 => D#178
  operator delete (_64);

  <bb 153>:
  # DEBUG D#187 => &D.38306._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.38306 ={v} {CLOBBER};
  resx 8

<L75>:
  goto <bb 163> (<L21>);

<L45>:

<L17>:
  c ={v} {CLOBBER};
  std::basic_ifstream<char>::~basic_ifstream (&in);
  resx 11

<L76>:
  goto <bb 163> (<L21>);

<L19>:
  # DEBUG this => &D.38416
  # DEBUG this => &D.38416
  # DEBUG this => &D.38416
  _50 = MEM[(char * *)&D.38416];
  # DEBUG D#3 => &D.38416
  # DEBUG this => D#3
  # DEBUG this => &D.38416
  if (&D.38416.D.11539._M_local_buf != _50)
    goto <bb 159>;
  else
    goto <bb 160>;

  <bb 159>:
  # DEBUG D#186 => D.38416.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.38416
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.38416
  # DEBUG this => D#3
  # DEBUG this => &D.38416
  # DEBUG D#183 => &D.38416._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _50
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _50
  # DEBUG this => D#177
  # DEBUG D.51432 => D#178
  operator delete (_50);

  <bb 160>:
  # DEBUG D#187 => &D.38416._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.38416 ={v} {CLOBBER};
  resx 17

<L77>:
  goto <bb 163> (<L21>);

<L30>:

<L21>:
  in ={v} {CLOBBER};
  # DEBUG this => &arg
  # DEBUG this => &arg
  # DEBUG this => &arg
  _60 = MEM[(char * *)&arg];
  # DEBUG D#3 => &arg
  # DEBUG this => D#3
  # DEBUG this => &arg
  if (&arg.D.11539._M_local_buf != _60)
    goto <bb 164>;
  else
    goto <bb 165>;

  <bb 164>:
  # DEBUG D#186 => arg.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &arg
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &arg
  # DEBUG this => D#3
  # DEBUG this => &arg
  # DEBUG D#183 => &arg._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _60
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _60
  # DEBUG this => D#177
  # DEBUG D.51449 => D#178
  operator delete (_60);

  <bb 165>:
  # DEBUG D#187 => &arg._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  resx 5

  <bb 166>:
  # DEBUG this => &arg
  # DEBUG __beg => _375
  # DEBUG __end => -1B
  # DEBUG this => &arg
  # DEBUG __beg => _375
  # DEBUG __end => -1B
  # DEBUG this => &arg
  # DEBUG __beg => _375
  # DEBUG __end => -1B
  # DEBUG __ptr => _375
  # DEBUG this => &arg
  # DEBUG __beg => _375
  # DEBUG __end => -1B
  # DEBUG this => &arg
  # DEBUG __beg => _375
  # DEBUG __end => -1B
  # DEBUG this => &arg
  # DEBUG __beg => _375
  # DEBUG __end => -1B
  # DEBUG __ptr => _375
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 167>:
  # DEBUG this => &D.38416
  # DEBUG __beg => 0B
  # DEBUG __end => -1B
  # DEBUG this => &D.38416
  # DEBUG __beg => 0B
  # DEBUG __end => -1B
  # DEBUG this => &D.38416
  # DEBUG __beg => 0B
  # DEBUG __end => -1B
  # DEBUG __ptr => 0B
  # DEBUG this => &D.38416
  # DEBUG __beg => 0B
  # DEBUG __end => -1B
  # DEBUG this => &D.38416
  # DEBUG __beg => 0B
  # DEBUG __end => -1B
  # DEBUG this => &D.38416
  # DEBUG __beg => 0B
  # DEBUG __end => -1B
  # DEBUG __ptr => 0B
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L78>:
  goto <bb 163> (<L21>);

}



;; Function void Configuration::WriteFile(const string&) (_ZN13Configuration9WriteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1750, decl_uid=35308, cgraph_uid=436, symbol_order=438)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void Configuration::WriteFile(const string&) (struct Configuration * const this, const struct string & filename)
{
  char_type D.56040;
  char __c;
  char_type D.56037;
  char __c;
  char_type D.56034;
  struct basic_ostream & D.56028;
  char_type D.56025;
  char __c;
  char_type D.56022;
  char __c;
  char_type D.56019;
  struct basic_ostream & D.56013;
  char_type D.56010;
  char __c;
  char_type D.56007;
  char __c;
  char_type D.56004;
  struct basic_ostream & D.55998;
  const struct _Rb_tree_node_base * const i$_M_node;
  const struct _Rb_tree_node_base * const i$_M_node;
  const struct _Rb_tree_node_base * const i$_M_node;
  const size_type _8;
  void * _10;
  int pretmp_11;
  char * const _14;
  char _16;
  const size_type _17;
  const size_type _20;
  char * const _22;
  int _23;
  struct basic_ostream & _25;
  const size_type _28;
  double _30;
  struct __ostream_type & _31;
  int (*__vtbl_ptr_type) () * _34;
  int (*__vtbl_ptr_type) () _35;
  long int _38;
  char * const _39;
  struct basic_ostream & _40;
  long int _41;
  char * const _42;
  struct basic_ostream & _43;
  long int _45;
  char * const _46;
  struct basic_ostream & _47;
  long int _49;
  char * const _50;
  struct basic_ostream & _51;
  const struct __ctype_type * _58;
  const struct __ctype_type * _63;
  const struct __ctype_type * _69;
  struct ios_base * _70;
  struct basic_ostream * _71;
  int (*__vtbl_ptr_type) () * iftmp.155_72;
  long int _73;
  sizetype iftmp.156_74;
  struct basic_ios * _75;
  int (*__vtbl_ptr_type) () * iftmp.157_76;
  struct __filebuf_type * _77;
  struct basic_ios * _79;
  long int _80;
  sizetype iftmp.161_81;
  struct basic_ios * _82;
  int pretmp_83;
  int prephitmp_84;
  struct __filebuf_type * _86;
  int (*__vtbl_ptr_type) () * _87;
  long int _88;
  sizetype _89;
  struct basic_ios * _90;
  int (*__vtbl_ptr_type) () * _91;
  long int _92;
  sizetype _93;
  struct basic_ios * _94;
  const iostate _95;
  int __a.104_96;
  int _97;
  _Ios_Iostate _98;
  int (*__vtbl_ptr_type) () * _99;
  long int _100;
  sizetype _101;
  struct basic_ios * _102;
  struct _Rb_tree_node_base * _103;
  struct basic_ostream & _105;
  char _107;
  char_type _110;
  int (*__vtbl_ptr_type) () * _115;
  int (*__vtbl_ptr_type) () _116;
  void * PROF_120;
  char_type _122;
  int (*__vtbl_ptr_type) () * _125;
  long int _126;
  sizetype _127;
  struct basic_ios * _128;
  struct _Rb_tree_node_base * _129;
  struct basic_ostream & _131;
  char _133;
  char_type _136;
  int (*__vtbl_ptr_type) () * _141;
  int (*__vtbl_ptr_type) () _142;
  int pretmp_144;
  void * PROF_146;
  char_type _148;
  int (*__vtbl_ptr_type) () * _151;
  long int _152;
  sizetype _153;
  struct basic_ios * _154;
  struct basic_ostream & _157;
  struct _Rb_tree_node_base * _158;
  char _159;
  char_type _162;
  int pretmp_164;
  int (*__vtbl_ptr_type) () * _167;
  int (*__vtbl_ptr_type) () _168;
  void * PROF_172;
  char_type _174;
  int pretmp_180;
  int pretmp_182;
  int prephitmp_224;
  int prephitmp_225;

  <bb 2>:
  # DEBUG this => filename_7(D)
  _22 = MEM[(char * *)filename_7(D)];
  # DEBUG D#3 => filename_7(D)
  # DEBUG this => D#3
  # DEBUG __a => 16
  # DEBUG __b => 32
  _10 = operator new (512);
  # DEBUG this => _10
  # DEBUG __s => _22
  # DEBUG __mode => 48
  # DEBUG D#30 => &MEM[(struct basic_ofstream *)_10].D.27206
  # DEBUG this => D#30
  _70 = &MEM[(struct basic_ios *)_10 + 248B].D.21051;
  std::ios_base::ios_base (_70);
  MEM[(struct basic_ios *)_10 + 248B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)_10 + 248B]._M_tie = 0B;
  MEM[(struct basic_ios *)_10 + 248B]._M_fill = 0;
  MEM[(struct basic_ios *)_10 + 248B]._M_fill_init = 0;
  MEM[(struct basic_ios *)_10 + 248B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)_10 + 248B]._M_ctype = 0B;
  MEM[(struct basic_ios *)_10 + 248B]._M_num_put = 0B;
  MEM[(struct basic_ios *)_10 + 248B]._M_num_get = 0B;
  _71 = &MEM[(struct basic_ofstream *)_10].D.27203;
  # DEBUG this => _71
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE + 8B]
  iftmp.155_72 = MEM[(const void * *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE + 8B];
  MEM[(struct basic_ostream *)_10]._vptr.basic_ostream = iftmp.155_72;
  _73 = MEM[(long int *)iftmp.155_72 + -24B];
  iftmp.156_74 = (sizetype) _73;
  _75 = _71 + iftmp.156_74;
  iftmp.157_76 = MEM[(const void * *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE + 16B];
  _75->D.21051._vptr.ios_base = iftmp.157_76;
  std::basic_ios<char>::init (_75, 0B);

  <bb 3>:
  MEM[(struct basic_ofstream *)_10].D.27203._vptr.basic_ostream = &MEM[(void *)&_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE + 24B];
  MEM[(struct basic_ios *)_10 + 248B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE + 64B];
  _77 = &MEM[(struct basic_ofstream *)_10]._M_filebuf;
  std::basic_filebuf<char>::basic_filebuf (_77);

  <bb 4>:
  _79 = _10 + 248;
  std::basic_ios<char>::init (_79, _77);

  <bb 5>:
  # DEBUG this => _10
  # DEBUG __s => _22
  # DEBUG __mode => 48
  # DEBUG __a => 48
  # DEBUG __b => 16
  _86 = std::basic_filebuf<char>::open (_77, _22, 48);
  goto <bb 7>;

<L25>:
  goto <bb 13> (<L19>);

  <bb 7>:
  if (_86 == 0B)
    goto <bb 8>;
  else
    goto <bb 10>;

  <bb 8>:
  # DEBUG D#25 => _22
  # DEBUG D#26 => 48
  # DEBUG this => _10
  # DEBUG D#27 => D#26
  # DEBUG __mode => D#27
  # DEBUG D#28 => D#25
  # DEBUG __s => D#28
  _91 = MEM[(struct basic_ofstream *)_10].D.27203._vptr.basic_ostream;
  _92 = MEM[(long int *)_91 + -24B];
  _93 = (sizetype) _92;
  _94 = _10 + _93;
  # DEBUG this => _94
  # DEBUG __state => 4
  _95 = MEM[(_Ios_Iostate *)_94 + 32B];
  # DEBUG D#4 => _94
  # DEBUG this => D#4
  # DEBUG __a => _95
  # DEBUG __b => 4
  __a.104_96 = (int) _95;
  _97 = __a.104_96 | 4;
  _98 = (_Ios_Iostate) _97;
  std::basic_ios<char>::clear (_94, _98);
  goto <bb 20>;

<L26>:
  goto <bb 13> (<L19>);

  <bb 10>:
  _87 = MEM[(struct basic_ofstream *)_10].D.27203._vptr.basic_ostream;
  _88 = MEM[(long int *)_87 + -24B];
  _89 = (sizetype) _88;
  _90 = _10 + _89;
  std::basic_ios<char>::clear (_90, 0);
  goto <bb 20>;

<L27>:
  goto <bb 13> (<L19>);

<L24>:

<L19>:
  std::basic_filebuf<char>::~basic_filebuf (_77);
  resx 22

<L28>:
  goto <bb 16> (<L20>);

<L23>:

<L20>:
  # DEBUG this => _71
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE + 8B]
  _80 = MEM[(long int *)iftmp.155_72 + -24B];
  iftmp.161_81 = (sizetype) _80;
  _82 = _71 + iftmp.161_81;
  _82->D.21051._vptr.ios_base = iftmp.157_76;
  MEM[(struct  &)_10] ={v} {CLOBBER};
  resx 20

<L29>:
  goto <bb 19> (<L21>);

<L22>:

<L21>:
  # DEBUG D#29 => &MEM[(struct basic_ofstream *)_10].D.27206
  # DEBUG this => D#29
  MEM[(struct basic_ios *)_10 + 248B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (_70);
  MEM[(struct  &)_10 + 248] ={v} {CLOBBER};
  resx 19

  <bb 20>:
  # DEBUG config_out => _10
  # DEBUG D#82 => &this_12(D)->_str_map
  # DEBUG this => D#82
  # DEBUG D#55 => &D#82->_M_t
  i$_M_node_13 = MEM[(struct _Rb_tree_node_base * *)this_12(D) + 64B];
  # DEBUG D#54 => D#55
  # DEBUG this => D#54
  # DEBUG this => NULL
  # DEBUG __x => i$_M_node_13
  # DEBUG this => &i
  # DEBUG __it => &D.38460
  # DEBUG i$_M_node => i$_M_node_13
  # DEBUG i$_M_node => i$_M_node_13
  # DEBUG D#89 => &this_12(D)->_str_map
  # DEBUG this => D#89
  # DEBUG D#53 => &D#89->_M_t
  # DEBUG this => D#53
  _129 = &MEM[(struct _Rb_tree *)this_12(D) + 40B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _129
  # DEBUG this => &D.38463
  # DEBUG __it => &D.38462
  # DEBUG this => &i
  # DEBUG __x => &D.38463
  if (i$_M_node_13 != _129)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  # DEBUG D#101 => {CLOBBER}
  # DEBUG i$_M_node => D#101
  # DEBUG D#90 => &this_12(D)->_int_map
  # DEBUG this => D#90
  # DEBUG D#58 => &D#90->_M_t
  i$_M_node_19 = MEM[(struct _Rb_tree_node_base * *)this_12(D) + 112B];
  # DEBUG D#57 => D#58
  # DEBUG this => D#57
  # DEBUG this => NULL
  # DEBUG __x => i$_M_node_19
  # DEBUG this => &i
  # DEBUG __it => &D.38465
  # DEBUG i$_M_node => i$_M_node_19
  # DEBUG i$_M_node => i$_M_node_19
  # DEBUG D#94 => &this_12(D)->_int_map
  # DEBUG this => D#94
  # DEBUG D#56 => &D#94->_M_t
  # DEBUG this => D#56
  _103 = &MEM[(struct _Rb_tree *)this_12(D) + 88B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _103
  # DEBUG this => &D.38468
  # DEBUG __it => &D.38467
  # DEBUG this => &i
  # DEBUG __x => &D.38468
  if (i$_M_node_19 != _103)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # i$_M_node_118 = PHI <i$_M_node_13(22), i$_M_node_44(32)>
  # DEBUG i$_M_node => i$_M_node_118
  # DEBUG D#89 => &this_12(D)->_str_map
  # DEBUG this => D#89
  # DEBUG D#53 => &D#89->_M_t
  # DEBUG this => D#53
  # DEBUG this => NULL
  # DEBUG __x => _129
  # DEBUG this => &D.38463
  # DEBUG __it => &D.38462
  # DEBUG this => &i
  # DEBUG __x => &D.38463
  # DEBUG this => &i
  # DEBUG this => i$_M_node_118
  # DEBUG D#83 => &MEM[(const struct _Rb_tree_node *)i$_M_node_118]._M_value_field
  # DEBUG __r => D#83
  # DEBUG D#84 => &MEM[(const struct pair *)i$_M_node_118 + 32B].second
  # DEBUG this => D#84
  # DEBUG __pos => 0
  _14 = MEM[(char * *)i$_M_node_118 + 64B];
  # DEBUG D#3 => D#84
  # DEBUG this => D#3
  _16 = MEM[(const char &)_14];
  if (_16 != 0)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 24>:
  # DEBUG this => &i
  # DEBUG this => i$_M_node_118
  # DEBUG D#85 => &MEM[(const struct _Rb_tree_node *)i$_M_node_118]._M_value_field
  # DEBUG __r => D#85
  # DEBUG D#86 => &MEM[(const struct pair *)i$_M_node_118 + 32B].second
  # DEBUG this => &i
  # DEBUG this => i$_M_node_118
  # DEBUG D#87 => &MEM[(const struct _Rb_tree_node *)i$_M_node_118]._M_value_field
  # DEBUG __r => D#87
  # DEBUG D#88 => &MEM[(const struct pair *)i$_M_node_118 + 32B].first
  # DEBUG __os => _10
  # DEBUG __str => D#88
  _8 = MEM[(long unsigned int *)i$_M_node_118 + 40B];
  # DEBUG D#2 => D#88
  # DEBUG this => D#2
  _38 = (long int) _8;
  # DEBUG this => D#88
  _39 = MEM[(char * *)i$_M_node_118 + 32B];
  # DEBUG D#3 => D#88
  # DEBUG this => D#3
  _40 = std::__ostream_insert<char, std::char_traits<char> > (_10, _39, _38);
  # DEBUG __out => _40
  # DEBUG __s => " = "
  # DEBUG __s => " = "
  std::__ostream_insert<char, std::char_traits<char> > (_40, " = ", 3);
  # DEBUG __os => _40
  # DEBUG __str => D#86
  _17 = MEM[(long unsigned int *)i$_M_node_118 + 72B];
  # DEBUG D#2 => D#86
  # DEBUG this => D#2
  _41 = (long int) _17;
  # DEBUG this => D#86
  _42 = MEM[(char * *)i$_M_node_118 + 64B];
  # DEBUG D#3 => D#86
  # DEBUG this => D#3
  _43 = std::__ostream_insert<char, std::char_traits<char> > (_40, _42, _41);
  # DEBUG __out => _43
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_43, ";", 1);
  # DEBUG this => _43
  # DEBUG __pf => endl
  # DEBUG __os => _43
  _99 = _43->_vptr.basic_ostream;
  _100 = MEM[(long int *)_99 + -24B];
  _101 = (sizetype) _100;
  _102 = _43 + _101;
  # DEBUG this => _102
  # DEBUG __c => 10
  _58 = MEM[(const struct basic_ios *)_102]._M_ctype;
  # DEBUG __f => _58
  if (_58 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  std::__throw_bad_cast ();

  <bb 26>:
  # DEBUG this => _58
  # DEBUG __c => 10
  _107 = MEM[(const struct ctype *)_58]._M_widen_ok;
  if (_107 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _110 = MEM[(const struct ctype *)_58]._M_widen[10];
  pretmp_11 = (int) _110;
  goto <bb 30>;

  <bb 28>:
  # DEBUG this => _58
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_58);
  _115 = MEM[(const struct ctype *)_58].D.18015._vptr.facet;
  _116 = MEM[(int (*__vtbl_ptr_type) () *)_115 + 48B];
  PROF_120 = [obj_type_ref] OBJ_TYPE_REF(_116;(const struct ctype)_58->6);
  if (PROF_120 == do_widen)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  _122 = OBJ_TYPE_REF(_116;(const struct ctype)_58->6) (_58, 10);
  pretmp_83 = (int) _122;

  <bb 30>:
  # prephitmp_84 = PHI <pretmp_11(27), 10(28), pretmp_83(29)>
  _105 = std::basic_ostream<char>::put (_43, prephitmp_84);
  # DEBUG __os => _105
  std::basic_ostream<char>::flush (_105);

  <bb 31>:
  # DEBUG this => &i
  i$_M_node_44 = std::_Rb_tree_increment (i$_M_node_118);
  # DEBUG i$_M_node => i$_M_node_44
  # DEBUG i$_M_node => i$_M_node_44
  # DEBUG D#89 => &this_12(D)->_str_map
  # DEBUG this => D#89
  # DEBUG D#53 => &D#89->_M_t
  # DEBUG this => D#53
  # DEBUG this => NULL
  # DEBUG __x => _129
  # DEBUG this => &D.38463
  # DEBUG __it => &D.38462
  # DEBUG this => &i
  # DEBUG __x => &D.38463
  if (i$_M_node_44 != _129)
    goto <bb 32>;
  else
    goto <bb 21>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  # DEBUG D#103 => {CLOBBER}
  # DEBUG i$_M_node => D#103
  # DEBUG D#95 => &this_12(D)->_float_map
  # DEBUG this => D#95
  # DEBUG D#65 => &D#95->_M_t
  i$_M_node_27 = MEM[(struct _Rb_tree_node_base * *)this_12(D) + 160B];
  # DEBUG D#64 => D#65
  # DEBUG this => D#64
  # DEBUG this => NULL
  # DEBUG __x => i$_M_node_27
  # DEBUG this => &i
  # DEBUG __it => &D.38470
  # DEBUG i$_M_node => i$_M_node_27
  # DEBUG i$_M_node => i$_M_node_27
  # DEBUG D#99 => &this_12(D)->_float_map
  # DEBUG this => D#99
  # DEBUG D#63 => &D#99->_M_t
  # DEBUG this => D#63
  _158 = &MEM[(struct _Rb_tree *)this_12(D) + 136B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _158
  # DEBUG this => &D.38473
  # DEBUG __it => &D.38472
  # DEBUG this => &i
  # DEBUG __x => &D.38473
  if (i$_M_node_27 != _158)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 34>:

  <bb 35>:
  # i$_M_node_170 = PHI <i$_M_node_19(34), i$_M_node_48(41)>
  # DEBUG i$_M_node => i$_M_node_170
  # DEBUG D#94 => &this_12(D)->_int_map
  # DEBUG this => D#94
  # DEBUG D#56 => &D#94->_M_t
  # DEBUG this => D#56
  # DEBUG this => NULL
  # DEBUG __x => _103
  # DEBUG this => &D.38468
  # DEBUG __it => &D.38467
  # DEBUG this => &i
  # DEBUG __x => &D.38468
  # DEBUG this => &i
  # DEBUG this => i$_M_node_170
  # DEBUG D#91 => &MEM[(const struct _Rb_tree_node *)i$_M_node_170]._M_value_field
  # DEBUG __r => D#91
  _23 = MEM[(const struct pair *)i$_M_node_170 + 32B].second;
  # DEBUG this => &i
  # DEBUG this => i$_M_node_170
  # DEBUG D#92 => &MEM[(const struct _Rb_tree_node *)i$_M_node_170]._M_value_field
  # DEBUG __r => D#92
  # DEBUG D#93 => &MEM[(const struct pair *)i$_M_node_170 + 32B].first
  # DEBUG __os => _10
  # DEBUG __str => D#93
  _20 = MEM[(long unsigned int *)i$_M_node_170 + 40B];
  # DEBUG D#2 => D#93
  # DEBUG this => D#2
  _45 = (long int) _20;
  # DEBUG this => D#93
  _46 = MEM[(char * *)i$_M_node_170 + 32B];
  # DEBUG D#3 => D#93
  # DEBUG this => D#3
  _47 = std::__ostream_insert<char, std::char_traits<char> > (_10, _46, _45);
  # DEBUG __out => _47
  # DEBUG __s => " = "
  # DEBUG __s => " = "
  std::__ostream_insert<char, std::char_traits<char> > (_47, " = ", 3);
  _25 = std::basic_ostream<char>::operator<< (_47, _23);
  # DEBUG __out => _25
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_25, ";", 1);
  # DEBUG this => _25
  # DEBUG __pf => endl
  # DEBUG __os => _25
  _125 = _25->_vptr.basic_ostream;
  _126 = MEM[(long int *)_125 + -24B];
  _127 = (sizetype) _126;
  _128 = _25 + _127;
  # DEBUG this => _128
  # DEBUG __c => 10
  _63 = MEM[(const struct basic_ios *)_128]._M_ctype;
  # DEBUG __f => _63
  if (_63 == 0B)
    goto <bb 25>;
  else
    goto <bb 36>;

  <bb 36>:
  # DEBUG this => _63
  # DEBUG __c => 10
  _133 = MEM[(const struct ctype *)_63]._M_widen_ok;
  if (_133 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  _136 = MEM[(const struct ctype *)_63]._M_widen[10];
  pretmp_144 = (int) _136;
  goto <bb 40>;

  <bb 38>:
  # DEBUG this => _63
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_63);
  _141 = MEM[(const struct ctype *)_63].D.18015._vptr.facet;
  _142 = MEM[(int (*__vtbl_ptr_type) () *)_141 + 48B];
  PROF_146 = [obj_type_ref] OBJ_TYPE_REF(_142;(const struct ctype)_63->6);
  if (PROF_146 == do_widen)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:
  _148 = OBJ_TYPE_REF(_142;(const struct ctype)_63->6) (_63, 10);
  pretmp_164 = (int) _148;

  <bb 40>:
  # prephitmp_224 = PHI <pretmp_144(37), 10(38), pretmp_164(39)>
  _131 = std::basic_ostream<char>::put (_25, prephitmp_224);
  # DEBUG __os => _131
  std::basic_ostream<char>::flush (_131);
  # DEBUG this => &i
  i$_M_node_48 = std::_Rb_tree_increment (i$_M_node_170);
  # DEBUG i$_M_node => i$_M_node_48
  # DEBUG i$_M_node => i$_M_node_48
  # DEBUG D#94 => &this_12(D)->_int_map
  # DEBUG this => D#94
  # DEBUG D#56 => &D#94->_M_t
  # DEBUG this => D#56
  # DEBUG this => NULL
  # DEBUG __x => _103
  # DEBUG this => &D.38468
  # DEBUG __it => &D.38467
  # DEBUG this => &i
  # DEBUG __x => &D.38468
  if (i$_M_node_48 != _103)
    goto <bb 41>;
  else
    goto <bb 33>;

  <bb 41>:
  goto <bb 35>;

  <bb 42>:
  # DEBUG D#105 => {CLOBBER}
  # DEBUG i$_M_node => D#105
  std::basic_ostream<char>::flush (_10);
  _34 = MEM[(struct ostream *)_10]._vptr.basic_ostream;
  _35 = MEM[(int (*__vtbl_ptr_type) () *)_34 + 8B];
  OBJ_TYPE_REF(_35;(struct basic_ostream)_10->1) (_10);
  return;

  <bb 43>:

  <bb 44>:
  # i$_M_node_215 = PHI <i$_M_node_27(43), i$_M_node_52(50)>
  # DEBUG i$_M_node => i$_M_node_215
  # DEBUG D#99 => &this_12(D)->_float_map
  # DEBUG this => D#99
  # DEBUG D#63 => &D#99->_M_t
  # DEBUG this => D#63
  # DEBUG this => NULL
  # DEBUG __x => _158
  # DEBUG this => &D.38473
  # DEBUG __it => &D.38472
  # DEBUG this => &i
  # DEBUG __x => &D.38473
  # DEBUG this => &i
  # DEBUG this => i$_M_node_215
  # DEBUG D#96 => &MEM[(const struct _Rb_tree_node *)i$_M_node_215]._M_value_field
  # DEBUG __r => D#96
  _30 = MEM[(const struct pair *)i$_M_node_215 + 32B].second;
  # DEBUG this => &i
  # DEBUG this => i$_M_node_215
  # DEBUG D#97 => &MEM[(const struct _Rb_tree_node *)i$_M_node_215]._M_value_field
  # DEBUG __r => D#97
  # DEBUG D#98 => &MEM[(const struct pair *)i$_M_node_215 + 32B].first
  # DEBUG __os => _10
  # DEBUG __str => D#98
  _28 = MEM[(long unsigned int *)i$_M_node_215 + 40B];
  # DEBUG D#2 => D#98
  # DEBUG this => D#2
  _49 = (long int) _28;
  # DEBUG this => D#98
  _50 = MEM[(char * *)i$_M_node_215 + 32B];
  # DEBUG D#3 => D#98
  # DEBUG this => D#3
  _51 = std::__ostream_insert<char, std::char_traits<char> > (_10, _50, _49);
  # DEBUG __out => _51
  # DEBUG __s => " = "
  # DEBUG __s => " = "
  std::__ostream_insert<char, std::char_traits<char> > (_51, " = ", 3);
  # DEBUG this => _51
  # DEBUG __f => _30
  _31 = std::basic_ostream<char>::_M_insert<double> (_51, _30);
  # DEBUG __out => _31
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_31, ";", 1);
  # DEBUG this => _31
  # DEBUG __pf => endl
  # DEBUG __os => _31
  _151 = MEM[(struct basic_ostream *)_31]._vptr.basic_ostream;
  _152 = MEM[(long int *)_151 + -24B];
  _153 = (sizetype) _152;
  _154 = _31 + _153;
  # DEBUG this => _154
  # DEBUG __c => 10
  _69 = MEM[(const struct basic_ios *)_154]._M_ctype;
  # DEBUG __f => _69
  if (_69 == 0B)
    goto <bb 25>;
  else
    goto <bb 45>;

  <bb 45>:
  # DEBUG this => _69
  # DEBUG __c => 10
  _159 = MEM[(const struct ctype *)_69]._M_widen_ok;
  if (_159 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  _162 = MEM[(const struct ctype *)_69]._M_widen[10];
  pretmp_180 = (int) _162;
  goto <bb 49>;

  <bb 47>:
  # DEBUG this => _69
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_69);
  _167 = MEM[(const struct ctype *)_69].D.18015._vptr.facet;
  _168 = MEM[(int (*__vtbl_ptr_type) () *)_167 + 48B];
  PROF_172 = [obj_type_ref] OBJ_TYPE_REF(_168;(const struct ctype)_69->6);
  if (PROF_172 == do_widen)
    goto <bb 49>;
  else
    goto <bb 48>;

  <bb 48>:
  _174 = OBJ_TYPE_REF(_168;(const struct ctype)_69->6) (_69, 10);
  pretmp_182 = (int) _174;

  <bb 49>:
  # prephitmp_225 = PHI <pretmp_180(46), 10(47), pretmp_182(48)>
  _157 = std::basic_ostream<char>::put (_31, prephitmp_225);
  # DEBUG __os => _157
  std::basic_ostream<char>::flush (_157);
  # DEBUG this => &i
  i$_M_node_52 = std::_Rb_tree_increment (i$_M_node_215);
  # DEBUG i$_M_node => i$_M_node_52
  # DEBUG i$_M_node => i$_M_node_52
  # DEBUG D#99 => &this_12(D)->_float_map
  # DEBUG this => D#99
  # DEBUG D#63 => &D#99->_M_t
  # DEBUG this => D#63
  # DEBUG this => NULL
  # DEBUG __x => _158
  # DEBUG this => &D.38473
  # DEBUG __it => &D.38472
  # DEBUG this => &i
  # DEBUG __x => &D.38473
  if (i$_M_node_52 != _158)
    goto <bb 50>;
  else
    goto <bb 42>;

  <bb 50>:
  goto <bb 44>;

<L15>:
  operator delete (_10);
  resx 1

}



;; Function void Configuration::WriteMatlabFile(std::ostream*) const (_ZNK13Configuration15WriteMatlabFileEPSo, funcdef_no=1751, decl_uid=35311, cgraph_uid=437, symbol_order=439)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void Configuration::WriteMatlabFile(std::ostream*) const (const struct Configuration * const this, struct ostream * config_out)
{
  char_type D.56122;
  char __c;
  char_type D.56119;
  char __c;
  char_type D.56116;
  struct basic_ostream & D.56110;
  char_type D.56107;
  char __c;
  char_type D.56104;
  char __c;
  char_type D.56101;
  struct basic_ostream & D.56095;
  char_type D.56092;
  char __c;
  char_type D.56089;
  char __c;
  char_type D.56086;
  struct basic_ostream & D.56080;
  const struct _Rb_tree_node_base * const i$_M_node;
  const struct _Rb_tree_node_base * const i$_M_node;
  const struct _Rb_tree_node_base * const i$_M_node;
  int pretmp_1;
  int pretmp_3;
  char * const _7;
  char _8;
  const size_type _10;
  int pretmp_11;
  int _13;
  struct basic_ostream & _16;
  int pretmp_18;
  double _19;
  struct __ostream_type & _21;
  const size_type _25;
  long int _26;
  char * const _27;
  struct basic_ostream & _28;
  long int _29;
  char * const _30;
  struct basic_ostream & _31;
  const size_type _34;
  long int _35;
  char * const _36;
  struct basic_ostream & _37;
  const size_type _40;
  long int _41;
  char * const _42;
  struct basic_ostream & _43;
  const struct __ctype_type * _50;
  const struct __ctype_type * _56;
  const struct __ctype_type * _63;
  int (*__vtbl_ptr_type) () * _64;
  long int _65;
  sizetype _66;
  struct basic_ios * _67;
  struct basic_ostream & _70;
  int pretmp_71;
  char _72;
  char_type _75;
  int (*__vtbl_ptr_type) () * _80;
  int (*__vtbl_ptr_type) () _81;
  const struct _Rb_tree_node_base * _83;
  int prephitmp_84;
  void * PROF_85;
  char_type _87;
  int (*__vtbl_ptr_type) () * _90;
  long int _91;
  sizetype _92;
  struct basic_ios * _93;
  struct basic_ostream & _96;
  int prephitmp_97;
  char _98;
  char_type _101;
  int (*__vtbl_ptr_type) () * _106;
  int (*__vtbl_ptr_type) () _107;
  const struct _Rb_tree_node_base * _109;
  void * PROF_111;
  char_type _113;
  int (*__vtbl_ptr_type) () * _116;
  long int _117;
  sizetype _118;
  struct basic_ios * _119;
  struct basic_ostream & _122;
  const struct _Rb_tree_node_base * _123;
  char _124;
  char_type _127;
  int (*__vtbl_ptr_type) () * _132;
  int (*__vtbl_ptr_type) () _133;
  void * PROF_137;
  char_type _139;
  int prephitmp_148;
  int pretmp_157;

  <bb 2>:
  # DEBUG D#106 => &this_5(D)->_str_map
  # DEBUG this => D#106
  # DEBUG D#73 => &D#106->_M_t
  i$_M_node_20 = MEM[(struct _Rb_tree_node_base * *)this_5(D) + 64B];
  # DEBUG D#72 => D#73
  # DEBUG this => D#72
  # DEBUG this => NULL
  # DEBUG __x => i$_M_node_20
  # DEBUG i$_M_node => i$_M_node_20
  # DEBUG i$_M_node => i$_M_node_20
  # DEBUG D#113 => &this_5(D)->_str_map
  # DEBUG this => D#113
  # DEBUG D#71 => &D#113->_M_t
  # DEBUG this => D#71
  _109 = &MEM[(const struct _Rb_tree *)this_5(D) + 40B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _109
  # DEBUG this => &i
  # DEBUG __x => &D.38495
  if (i$_M_node_20 != _109)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG D#125 => {CLOBBER}
  # DEBUG i$_M_node => D#125
  # DEBUG D#114 => &this_5(D)->_int_map
  # DEBUG this => D#114
  # DEBUG D#77 => &D#114->_M_t
  i$_M_node_12 = MEM[(struct _Rb_tree_node_base * *)this_5(D) + 112B];
  # DEBUG D#76 => D#77
  # DEBUG this => D#76
  # DEBUG this => NULL
  # DEBUG __x => i$_M_node_12
  # DEBUG i$_M_node => i$_M_node_12
  # DEBUG i$_M_node => i$_M_node_12
  # DEBUG D#118 => &this_5(D)->_int_map
  # DEBUG this => D#118
  # DEBUG D#75 => &D#118->_M_t
  # DEBUG this => D#75
  _83 = &MEM[(const struct _Rb_tree *)this_5(D) + 88B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _83
  # DEBUG this => &i
  # DEBUG __x => &D.38507
  if (i$_M_node_12 != _83)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 4>:

  <bb 5>:
  # i$_M_node_94 = PHI <i$_M_node_20(4), i$_M_node_32(14)>
  # DEBUG i$_M_node => i$_M_node_94
  # DEBUG D#113 => &this_5(D)->_str_map
  # DEBUG this => D#113
  # DEBUG D#71 => &D#113->_M_t
  # DEBUG this => D#71
  # DEBUG this => NULL
  # DEBUG __x => _109
  # DEBUG this => &i
  # DEBUG __x => &D.38495
  # DEBUG this => &i
  # DEBUG this => i$_M_node_94
  # DEBUG D#107 => &MEM[(const struct _Rb_tree_node *)i$_M_node_94]._M_value_field
  # DEBUG __r => D#107
  # DEBUG D#108 => &MEM[(const struct pair *)i$_M_node_94 + 32B].second
  # DEBUG this => D#108
  # DEBUG __pos => 0
  _7 = MEM[(char * *)i$_M_node_94 + 64B];
  # DEBUG D#3 => D#108
  # DEBUG this => D#3
  _8 = MEM[(const char &)_7];
  if (_8 != 0)
    goto <bb 6>;
  else
    goto <bb 13>;

  <bb 6>:
  # DEBUG this => &i
  # DEBUG this => i$_M_node_94
  # DEBUG D#109 => &MEM[(const struct _Rb_tree_node *)i$_M_node_94]._M_value_field
  # DEBUG __r => D#109
  # DEBUG D#110 => &MEM[(const struct pair *)i$_M_node_94 + 32B].second
  # DEBUG this => &i
  # DEBUG this => i$_M_node_94
  # DEBUG D#111 => &MEM[(const struct _Rb_tree_node *)i$_M_node_94]._M_value_field
  # DEBUG __r => D#111
  # DEBUG D#112 => &MEM[(const struct pair *)i$_M_node_94 + 32B].first
  # DEBUG __out => config_out_9(D)
  # DEBUG __s => "%"
  # DEBUG __s => "%"
  std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), "%", 1);
  # DEBUG __os => config_out_9(D)
  # DEBUG __str => D#112
  _25 = MEM[(long unsigned int *)i$_M_node_94 + 40B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  _26 = (long int) _25;
  # DEBUG this => D#112
  _27 = MEM[(char * *)i$_M_node_94 + 32B];
  # DEBUG D#3 => D#112
  # DEBUG this => D#3
  _28 = std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), _27, _26);
  # DEBUG __out => _28
  # DEBUG __s => " = \'"
  # DEBUG __s => " = \'"
  std::__ostream_insert<char, std::char_traits<char> > (_28, " = \'", 4);
  # DEBUG __os => _28
  # DEBUG __str => D#110
  _10 = MEM[(long unsigned int *)i$_M_node_94 + 72B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  _29 = (long int) _10;
  # DEBUG this => D#110
  _30 = MEM[(char * *)i$_M_node_94 + 64B];
  # DEBUG D#3 => D#110
  # DEBUG this => D#3
  _31 = std::__ostream_insert<char, std::char_traits<char> > (_28, _30, _29);
  # DEBUG __out => _31
  # DEBUG __s => "\';"
  # DEBUG __s => "\';"
  std::__ostream_insert<char, std::char_traits<char> > (_31, "\';", 2);
  # DEBUG this => _31
  # DEBUG __pf => endl
  # DEBUG __os => _31
  _64 = _31->_vptr.basic_ostream;
  _65 = MEM[(long int *)_64 + -24B];
  _66 = (sizetype) _65;
  _67 = _31 + _66;
  # DEBUG this => _67
  # DEBUG __c => 10
  _50 = MEM[(const struct basic_ios *)_67]._M_ctype;
  # DEBUG __f => _50
  if (_50 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_cast ();

  <bb 8>:
  # DEBUG this => _50
  # DEBUG __c => 10
  _72 = MEM[(const struct ctype *)_50]._M_widen_ok;
  if (_72 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _75 = MEM[(const struct ctype *)_50]._M_widen[10];
  pretmp_1 = (int) _75;
  goto <bb 12>;

  <bb 10>:
  # DEBUG this => _50
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_50);
  _80 = MEM[(const struct ctype *)_50].D.18015._vptr.facet;
  _81 = MEM[(int (*__vtbl_ptr_type) () *)_80 + 48B];
  PROF_85 = [obj_type_ref] OBJ_TYPE_REF(_81;(const struct ctype)_50->6);
  if (PROF_85 == do_widen)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  _87 = OBJ_TYPE_REF(_81;(const struct ctype)_50->6) (_50, 10);
  pretmp_157 = (int) _87;

  <bb 12>:
  # prephitmp_84 = PHI <pretmp_1(9), 10(10), pretmp_157(11)>
  _70 = std::basic_ostream<char>::put (_31, prephitmp_84);
  # DEBUG __os => _70
  std::basic_ostream<char>::flush (_70);

  <bb 13>:
  # DEBUG this => &i
  i$_M_node_32 = std::_Rb_tree_increment (i$_M_node_94);
  # DEBUG i$_M_node => i$_M_node_32
  # DEBUG i$_M_node => i$_M_node_32
  # DEBUG D#113 => &this_5(D)->_str_map
  # DEBUG this => D#113
  # DEBUG D#71 => &D#113->_M_t
  # DEBUG this => D#71
  # DEBUG this => NULL
  # DEBUG __x => _109
  # DEBUG this => &i
  # DEBUG __x => &D.38495
  if (i$_M_node_32 != _109)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 14>:
  goto <bb 5>;

  <bb 15>:
  # DEBUG D#127 => {CLOBBER}
  # DEBUG i$_M_node => D#127
  # DEBUG D#119 => &this_5(D)->_float_map
  # DEBUG this => D#119
  # DEBUG D#81 => &D#119->_M_t
  i$_M_node_17 = MEM[(struct _Rb_tree_node_base * *)this_5(D) + 160B];
  # DEBUG D#80 => D#81
  # DEBUG this => D#80
  # DEBUG this => NULL
  # DEBUG __x => i$_M_node_17
  # DEBUG i$_M_node => i$_M_node_17
  # DEBUG i$_M_node => i$_M_node_17
  # DEBUG D#123 => &this_5(D)->_float_map
  # DEBUG this => D#123
  # DEBUG D#79 => &D#123->_M_t
  # DEBUG this => D#79
  _123 = &MEM[(const struct _Rb_tree *)this_5(D) + 136B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _123
  # DEBUG this => &i
  # DEBUG __x => &D.38519
  if (i$_M_node_17 != _123)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 16>:

  <bb 17>:
  # i$_M_node_158 = PHI <i$_M_node_12(16), i$_M_node_38(23)>
  # DEBUG i$_M_node => i$_M_node_158
  # DEBUG D#118 => &this_5(D)->_int_map
  # DEBUG this => D#118
  # DEBUG D#75 => &D#118->_M_t
  # DEBUG this => D#75
  # DEBUG this => NULL
  # DEBUG __x => _83
  # DEBUG this => &i
  # DEBUG __x => &D.38507
  # DEBUG this => &i
  # DEBUG this => i$_M_node_158
  # DEBUG D#115 => &MEM[(const struct _Rb_tree_node *)i$_M_node_158]._M_value_field
  # DEBUG __r => D#115
  _13 = MEM[(const struct pair *)i$_M_node_158 + 32B].second;
  # DEBUG this => &i
  # DEBUG this => i$_M_node_158
  # DEBUG D#116 => &MEM[(const struct _Rb_tree_node *)i$_M_node_158]._M_value_field
  # DEBUG __r => D#116
  # DEBUG D#117 => &MEM[(const struct pair *)i$_M_node_158 + 32B].first
  # DEBUG __out => config_out_9(D)
  # DEBUG __s => "%"
  # DEBUG __s => "%"
  std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), "%", 1);
  # DEBUG __os => config_out_9(D)
  # DEBUG __str => D#117
  _34 = MEM[(long unsigned int *)i$_M_node_158 + 40B];
  # DEBUG D#2 => D#117
  # DEBUG this => D#2
  _35 = (long int) _34;
  # DEBUG this => D#117
  _36 = MEM[(char * *)i$_M_node_158 + 32B];
  # DEBUG D#3 => D#117
  # DEBUG this => D#3
  _37 = std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), _36, _35);
  # DEBUG __out => _37
  # DEBUG __s => " = "
  # DEBUG __s => " = "
  std::__ostream_insert<char, std::char_traits<char> > (_37, " = ", 3);
  _16 = std::basic_ostream<char>::operator<< (_37, _13);
  # DEBUG __out => _16
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_16, ";", 1);
  # DEBUG this => _16
  # DEBUG __pf => endl
  # DEBUG __os => _16
  _90 = _16->_vptr.basic_ostream;
  _91 = MEM[(long int *)_90 + -24B];
  _92 = (sizetype) _91;
  _93 = _16 + _92;
  # DEBUG this => _93
  # DEBUG __c => 10
  _56 = MEM[(const struct basic_ios *)_93]._M_ctype;
  # DEBUG __f => _56
  if (_56 == 0B)
    goto <bb 7>;
  else
    goto <bb 18>;

  <bb 18>:
  # DEBUG this => _56
  # DEBUG __c => 10
  _98 = MEM[(const struct ctype *)_56]._M_widen_ok;
  if (_98 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _101 = MEM[(const struct ctype *)_56]._M_widen[10];
  pretmp_3 = (int) _101;
  goto <bb 22>;

  <bb 20>:
  # DEBUG this => _56
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_56);
  _106 = MEM[(const struct ctype *)_56].D.18015._vptr.facet;
  _107 = MEM[(int (*__vtbl_ptr_type) () *)_106 + 48B];
  PROF_111 = [obj_type_ref] OBJ_TYPE_REF(_107;(const struct ctype)_56->6);
  if (PROF_111 == do_widen)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  _113 = OBJ_TYPE_REF(_107;(const struct ctype)_56->6) (_56, 10);
  pretmp_18 = (int) _113;

  <bb 22>:
  # prephitmp_148 = PHI <pretmp_3(19), 10(20), pretmp_18(21)>
  _96 = std::basic_ostream<char>::put (_16, prephitmp_148);
  # DEBUG __os => _96
  std::basic_ostream<char>::flush (_96);
  # DEBUG this => &i
  i$_M_node_38 = std::_Rb_tree_increment (i$_M_node_158);
  # DEBUG i$_M_node => i$_M_node_38
  # DEBUG i$_M_node => i$_M_node_38
  # DEBUG D#118 => &this_5(D)->_int_map
  # DEBUG this => D#118
  # DEBUG D#75 => &D#118->_M_t
  # DEBUG this => D#75
  # DEBUG this => NULL
  # DEBUG __x => _83
  # DEBUG this => &i
  # DEBUG __x => &D.38507
  if (i$_M_node_38 != _83)
    goto <bb 23>;
  else
    goto <bb 15>;

  <bb 23>:
  goto <bb 17>;

  <bb 24>:
  # DEBUG D#129 => {CLOBBER}
  # DEBUG i$_M_node => D#129
  std::basic_ostream<char>::flush (config_out_9(D));
  return;

  <bb 25>:

  <bb 26>:
  # i$_M_node_136 = PHI <i$_M_node_17(25), i$_M_node_44(32)>
  # DEBUG i$_M_node => i$_M_node_136
  # DEBUG D#123 => &this_5(D)->_float_map
  # DEBUG this => D#123
  # DEBUG D#79 => &D#123->_M_t
  # DEBUG this => D#79
  # DEBUG this => NULL
  # DEBUG __x => _123
  # DEBUG this => &i
  # DEBUG __x => &D.38519
  # DEBUG this => &i
  # DEBUG this => i$_M_node_136
  # DEBUG D#120 => &MEM[(const struct _Rb_tree_node *)i$_M_node_136]._M_value_field
  # DEBUG __r => D#120
  _19 = MEM[(const struct pair *)i$_M_node_136 + 32B].second;
  # DEBUG this => &i
  # DEBUG this => i$_M_node_136
  # DEBUG D#121 => &MEM[(const struct _Rb_tree_node *)i$_M_node_136]._M_value_field
  # DEBUG __r => D#121
  # DEBUG D#122 => &MEM[(const struct pair *)i$_M_node_136 + 32B].first
  # DEBUG __out => config_out_9(D)
  # DEBUG __s => "%"
  # DEBUG __s => "%"
  std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), "%", 1);
  # DEBUG __os => config_out_9(D)
  # DEBUG __str => D#122
  _40 = MEM[(long unsigned int *)i$_M_node_136 + 40B];
  # DEBUG D#2 => D#122
  # DEBUG this => D#2
  _41 = (long int) _40;
  # DEBUG this => D#122
  _42 = MEM[(char * *)i$_M_node_136 + 32B];
  # DEBUG D#3 => D#122
  # DEBUG this => D#3
  _43 = std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), _42, _41);
  # DEBUG __out => _43
  # DEBUG __s => " = "
  # DEBUG __s => " = "
  std::__ostream_insert<char, std::char_traits<char> > (_43, " = ", 3);
  # DEBUG this => _43
  # DEBUG __f => _19
  _21 = std::basic_ostream<char>::_M_insert<double> (_43, _19);
  # DEBUG __out => _21
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_21, ";", 1);
  # DEBUG this => _21
  # DEBUG __pf => endl
  # DEBUG __os => _21
  _116 = MEM[(struct basic_ostream *)_21]._vptr.basic_ostream;
  _117 = MEM[(long int *)_116 + -24B];
  _118 = (sizetype) _117;
  _119 = _21 + _118;
  # DEBUG this => _119
  # DEBUG __c => 10
  _63 = MEM[(const struct basic_ios *)_119]._M_ctype;
  # DEBUG __f => _63
  if (_63 == 0B)
    goto <bb 7>;
  else
    goto <bb 27>;

  <bb 27>:
  # DEBUG this => _63
  # DEBUG __c => 10
  _124 = MEM[(const struct ctype *)_63]._M_widen_ok;
  if (_124 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _127 = MEM[(const struct ctype *)_63]._M_widen[10];
  pretmp_11 = (int) _127;
  goto <bb 31>;

  <bb 29>:
  # DEBUG this => _63
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_63);
  _132 = MEM[(const struct ctype *)_63].D.18015._vptr.facet;
  _133 = MEM[(int (*__vtbl_ptr_type) () *)_132 + 48B];
  PROF_137 = [obj_type_ref] OBJ_TYPE_REF(_133;(const struct ctype)_63->6);
  if (PROF_137 == do_widen)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  _139 = OBJ_TYPE_REF(_133;(const struct ctype)_63->6) (_63, 10);
  pretmp_71 = (int) _139;

  <bb 31>:
  # prephitmp_97 = PHI <pretmp_11(28), 10(29), pretmp_71(30)>
  _122 = std::basic_ostream<char>::put (_21, prephitmp_97);
  # DEBUG __os => _122
  std::basic_ostream<char>::flush (_122);
  # DEBUG this => &i
  i$_M_node_44 = std::_Rb_tree_increment (i$_M_node_136);
  # DEBUG i$_M_node => i$_M_node_44
  # DEBUG i$_M_node => i$_M_node_44
  # DEBUG D#123 => &this_5(D)->_float_map
  # DEBUG this => D#123
  # DEBUG D#79 => &D#123->_M_t
  # DEBUG this => D#79
  # DEBUG this => NULL
  # DEBUG __x => _123
  # DEBUG this => &i
  # DEBUG __x => &D.38519
  if (i$_M_node_44 != _123)
    goto <bb 32>;
  else
    goto <bb 24>;

  <bb 32>:
  goto <bb 26>;

}



;; Function int Configuration::GetInt(const string&) const (_ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1734, decl_uid=35273, cgraph_uid=420, symbol_order=422)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int Configuration::GetInt(const string&) const (const struct Configuration * const this, const struct string & field)
{
  const struct _Rb_tree_node_base * SR.1198;
  const struct _Rb_tree_node_base * SR.1197;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.56258;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.56243;
  struct const_iterator D.56228;
  const struct _Rb_tree_node * __y;
  const struct _Rb_tree_node_base * SR.822;
  struct const_iterator D.50213;
  struct basic_string D.35969;
  char * const _5;
  int _7;
  const size_type _13;
  const size_type pretmp_33;
  char * const _35;
  long unsigned int _37;
  const size_type _43;
  char * const _46;
  long unsigned int _49;
  char * const pretmp_85;

  <bb 2>:
  # DEBUG this => &match
  # DEBUG match$_M_node => 0B
  # DEBUG D#342 => &this_2(D)->_int_map
  # DEBUG this => D#342
  # DEBUG __x => field_3(D)
  # DEBUG D#673 => &MEM[(const struct map *)this_2(D) + 88B]._M_t
  # DEBUG this => D#673
  # DEBUG __k => field_3(D)
  # DEBUG this => D#673
  __y_19 = &MEM[(const struct _Rb_tree *)this_2(D) + 88B]._M_impl._M_header;
  __y_20 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 104B];
  # DEBUG D#74 => D#673
  # DEBUG this => D#74
  # DEBUG D#223 => D#673
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => field_3(D)
  # DEBUG __y => __y_19
  # DEBUG __x => __y_20
  if (__y_20 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_33 = MEM[(long unsigned int *)field_3(D) + 8B];
  pretmp_85 = MEM[(char * *)field_3(D)];
  goto <bb 7>;

  <bb 4>:
  # DEBUG this => D#673
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG D#224 => {CLOBBER}
  # DEBUG __j$_M_node => D#224
  # DEBUG match$_M_node => __y_19
  # DEBUG D#343 => &this_2(D)->_int_map
  # DEBUG this => D#343
  # DEBUG D#75 => &D#343->_M_t
  # DEBUG this => D#75
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG this => &match
  # DEBUG __x => &D.35968
  # DEBUG D#224 => {CLOBBER}
  # DEBUG __j$_M_node => D#224
  # DEBUG match$_M_node => __y_19
  # DEBUG D#343 => &this_2(D)->_int_map
  # DEBUG this => D#343
  # DEBUG D#75 => &D#343->_M_t
  # DEBUG this => D#75
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG this => &match
  # DEBUG __x => &D.35968
  D.35969 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown integer field: ", field_3(D)); [return slot optimization]
  Configuration::ParseError (this_2(D), &D.35969, 0);

  <bb 5>:
  # __y_30 = PHI <__y_24(26), __y_25(25)>
  # __y_29 = PHI <__y_88(26), __y_28(25)>
  # DEBUG __y => __y_29
  # DEBUG __x => __y_30
  if (__y_30 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __y_88 = PHI <__y_20(3), __y_30(6)>
  # __y_28 = PHI <__y_19(3), __y_29(6)>
  # DEBUG __y => __y_28
  # DEBUG __x => __y_88
  # DEBUG __x => __y_88
  # DEBUG __x => __y_88
  # DEBUG this => __y_88
  # DEBUG D#215 => &__y_88->_M_value_field
  # DEBUG __r => D#215
  # DEBUG __x => D#215
  # DEBUG this => D#151
  # DEBUG D#674 => &MEM[(const struct pair &)__y_88 + 32].first
  # DEBUG D#221 => &D#222->_M_impl._M_key_compare
  # DEBUG D#203 => D#221
  # DEBUG __x => D#674
  # DEBUG __y => field_3(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#674
  # DEBUG __rhs => field_3(D)
  # DEBUG this => D#674
  # DEBUG __str => field_3(D)
  _13 = MEM[(long unsigned int *)__y_88 + 40B];
  # DEBUG D#2 => D#674
  # DEBUG this => D#2
  # DEBUG __size => _13
  # DEBUG D#691 => MEM[(long unsigned int *)field_3(D) + 8B]
  # DEBUG D#2 => field_3(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#691
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_83 = MIN_EXPR <_13, pretmp_33>;
  # DEBUG __len => D#671
  # DEBUG this => field_3(D)
  # DEBUG D#690 => MEM[(char * *)field_3(D)]
  # DEBUG D#3 => field_3(D)
  # DEBUG this => D#3
  _35 = MEM[(char * *)__y_88 + 32B];
  # DEBUG D#3 => D#674
  # DEBUG this => D#3
  # DEBUG __s1 => _35
  # DEBUG __s2 => D#690
  # DEBUG __n => D#671
  __r_36 = __builtin_memcmp (_35, pretmp_85, __len_83);
  # DEBUG __r => NULL
  if (__r_36 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => _13
  # DEBUG __n2 => D#691
  _37 = _13 - pretmp_33;
  __d_38 = (const difference_type) _37;
  # DEBUG __d => __d_38
  if (__d_38 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_38 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_39 = (int) _37;

  <bb 11>:
  # __r_40 = PHI <__r_36(7), __r_39(10)>
  # DEBUG __r => __r_40
  # DEBUG D#680 => {CLOBBER}
  # DEBUG __size => D#680
  # DEBUG D#681 => {CLOBBER}
  # DEBUG __osize => D#681
  if (__r_40 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 26>:
  # DEBUG __r => NULL
  # DEBUG __y => __y_88
  __y_24 = MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B];
  # DEBUG D#157 => __y_88
  # DEBUG __x => D#157
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 13>:

  <bb 25>:
  # DEBUG __r => NULL
  __y_25 = MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B];
  # DEBUG D#158 => __y_88
  # DEBUG __x => D#158
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 14>:
  # __y_55 = PHI <__y_29(5)>

  <bb 24>:
  # DEBUG this => NULL
  # DEBUG __x => __y_55
  # DEBUG __j$_M_node => __y_55
  # DEBUG this => D#673
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_19 == __y_55)
    goto <bb 4>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __y_55
  # DEBUG __x => __y_55
  # DEBUG this => __y_55
  # DEBUG D#152 => &__y_55->_M_value_field
  # DEBUG __r => D#152
  # DEBUG __x => D#152
  # DEBUG this => D#151
  # DEBUG D#675 => &MEM[(const struct pair &)__y_55 + 32].first
  # DEBUG D#225 => &MEM[(const struct _Rb_tree *)D#673]._M_impl._M_key_compare
  # DEBUG D#203 => D#225
  # DEBUG __x => field_3(D)
  # DEBUG __y => D#675
  # DEBUG this => D#203
  # DEBUG __lhs => field_3(D)
  # DEBUG __rhs => D#675
  # DEBUG this => field_3(D)
  # DEBUG __str => D#675
  # DEBUG D#689 => MEM[(long unsigned int *)field_3(D) + 8B]
  # DEBUG D#2 => field_3(D)
  # DEBUG this => D#2
  # DEBUG __size => D#689
  _43 = MEM[(long unsigned int *)__y_55 + 40B];
  # DEBUG D#2 => D#675
  # DEBUG this => D#2
  # DEBUG __osize => _43
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_53 = MIN_EXPR <pretmp_33, _43>;
  # DEBUG __len => D#672
  # DEBUG this => D#675
  _46 = MEM[(char * *)__y_55 + 32B];
  # DEBUG D#3 => D#675
  # DEBUG this => D#3
  # DEBUG D#688 => MEM[(char * *)field_3(D)]
  # DEBUG D#3 => field_3(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#688
  # DEBUG __s2 => _46
  # DEBUG __n => D#672
  __r_48 = __builtin_memcmp (pretmp_85, _46, __len_53);
  # DEBUG __r => NULL
  if (__r_48 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;

  <bb 16>:
  # DEBUG __n1 => D#689
  # DEBUG __n2 => _43
  _49 = pretmp_33 - _43;
  __d_50 = (const difference_type) _49;
  # DEBUG __d => __d_50
  if (__d_50 > 2147483647)
    goto <bb 23>;
  else
    goto <bb 17>;

  <bb 17>:
  if (__d_50 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;

  <bb 18>:
  __r_51 = (int) _49;

  <bb 19>:
  # __r_52 = PHI <__r_48(15), __r_51(18)>
  # DEBUG __r => __r_52
  # DEBUG D#686 => {CLOBBER}
  # DEBUG __size => D#686
  # DEBUG D#687 => {CLOBBER}
  # DEBUG __osize => D#687
  if (__r_52 < 0)
    goto <bb 4>;
  else
    goto <bb 23>;

<L4>:
  # DEBUG this => &D.35969
  # DEBUG this => &D.35969
  # DEBUG this => &D.35969
  _5 = MEM[(char * *)&D.35969];
  # DEBUG D#3 => &D.35969
  # DEBUG this => D#3
  # DEBUG this => &D.35969
  if (&D.35969.D.11539._M_local_buf != _5)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#186 => D.35969.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.35969
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.35969
  # DEBUG this => D#3
  # DEBUG this => &D.35969
  # DEBUG D#183 => &D.35969._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _5
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _5
  # DEBUG this => D#177
  # DEBUG D.50226 => D#178
  operator delete (_5);

  <bb 22>:
  # DEBUG D#187 => &D.35969._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.35969 ={v} {CLOBBER};
  resx 3

  <bb 23>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG D#224 => {CLOBBER}
  # DEBUG __j$_M_node => D#224
  # DEBUG match$_M_node => __y_55
  # DEBUG D#343 => &this_2(D)->_int_map
  # DEBUG this => D#343
  # DEBUG D#75 => &D#343->_M_t
  # DEBUG this => D#75
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG this => &match
  # DEBUG __x => &D.35968
  # DEBUG D#224 => {CLOBBER}
  # DEBUG __j$_M_node => D#224
  # DEBUG match$_M_node => __y_55
  # DEBUG D#343 => &this_2(D)->_int_map
  # DEBUG this => D#343
  # DEBUG D#75 => &D#343->_M_t
  # DEBUG this => D#75
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG this => &match
  # DEBUG __x => &D.35968
  # DEBUG this => &match
  # DEBUG this => __y_55
  # DEBUG D#344 => &__y_55->_M_value_field
  # DEBUG __r => D#344
  _7 = MEM[(const struct pair *)__y_55 + 32B].second;
  # DEBUG D#345 => {CLOBBER}
  # DEBUG match$_M_node => D#345
  return _7;

}



;; Function double Configuration::GetFloat(const string&) const (_ZNK13Configuration8GetFloatERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1735, decl_uid=35276, cgraph_uid=421, symbol_order=423)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
double Configuration::GetFloat(const string&) const (const struct Configuration * const this, const struct string & field)
{
  const struct _Rb_tree_node_base * SR.1202;
  const struct _Rb_tree_node_base * SR.1201;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.56326;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.56311;
  struct const_iterator D.56296;
  const struct _Rb_tree_node * __y;
  const struct _Rb_tree_node_base * SR.828;
  struct const_iterator D.50249;
  struct basic_string D.35977;
  char * const _5;
  double _7;
  const size_type _13;
  const size_type pretmp_33;
  char * const _35;
  long unsigned int _37;
  const size_type _43;
  char * const _46;
  long unsigned int _49;
  char * const pretmp_85;

  <bb 2>:
  # DEBUG this => &match
  # DEBUG match$_M_node => 0B
  # DEBUG D#347 => &this_2(D)->_float_map
  # DEBUG this => D#347
  # DEBUG __x => field_3(D)
  # DEBUG D#698 => &MEM[(const struct map *)this_2(D) + 136B]._M_t
  # DEBUG this => D#698
  # DEBUG __k => field_3(D)
  # DEBUG this => D#698
  __y_19 = &MEM[(const struct _Rb_tree *)this_2(D) + 136B]._M_impl._M_header;
  __y_20 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#78 => D#698
  # DEBUG this => D#78
  # DEBUG D#234 => D#698
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => field_3(D)
  # DEBUG __y => __y_19
  # DEBUG __x => __y_20
  if (__y_20 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_33 = MEM[(long unsigned int *)field_3(D) + 8B];
  pretmp_85 = MEM[(char * *)field_3(D)];
  goto <bb 7>;

  <bb 4>:
  # DEBUG this => D#698
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG D#235 => {CLOBBER}
  # DEBUG __j$_M_node => D#235
  # DEBUG match$_M_node => __y_19
  # DEBUG D#348 => &this_2(D)->_float_map
  # DEBUG this => D#348
  # DEBUG D#79 => &D#348->_M_t
  # DEBUG this => D#79
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG this => &match
  # DEBUG __x => &D.35976
  # DEBUG D#235 => {CLOBBER}
  # DEBUG __j$_M_node => D#235
  # DEBUG match$_M_node => __y_19
  # DEBUG D#348 => &this_2(D)->_float_map
  # DEBUG this => D#348
  # DEBUG D#79 => &D#348->_M_t
  # DEBUG this => D#79
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG this => &match
  # DEBUG __x => &D.35976
  D.35977 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown double field: ", field_3(D)); [return slot optimization]
  Configuration::ParseError (this_2(D), &D.35977, 0);

  <bb 5>:
  # __y_30 = PHI <__y_24(26), __y_25(25)>
  # __y_29 = PHI <__y_88(26), __y_28(25)>
  # DEBUG __y => __y_29
  # DEBUG __x => __y_30
  if (__y_30 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __y_88 = PHI <__y_20(3), __y_30(6)>
  # __y_28 = PHI <__y_19(3), __y_29(6)>
  # DEBUG __y => __y_28
  # DEBUG __x => __y_88
  # DEBUG __x => __y_88
  # DEBUG __x => __y_88
  # DEBUG this => __y_88
  # DEBUG D#226 => &__y_88->_M_value_field
  # DEBUG __r => D#226
  # DEBUG __x => D#226
  # DEBUG this => D#153
  # DEBUG D#699 => &MEM[(const struct pair &)__y_88 + 32].first
  # DEBUG D#232 => &D#233->_M_impl._M_key_compare
  # DEBUG D#203 => D#232
  # DEBUG __x => D#699
  # DEBUG __y => field_3(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#699
  # DEBUG __rhs => field_3(D)
  # DEBUG this => D#699
  # DEBUG __str => field_3(D)
  _13 = MEM[(long unsigned int *)__y_88 + 40B];
  # DEBUG D#2 => D#699
  # DEBUG this => D#2
  # DEBUG __size => _13
  # DEBUG D#716 => MEM[(long unsigned int *)field_3(D) + 8B]
  # DEBUG D#2 => field_3(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#716
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_83 = MIN_EXPR <_13, pretmp_33>;
  # DEBUG __len => D#696
  # DEBUG this => field_3(D)
  # DEBUG D#715 => MEM[(char * *)field_3(D)]
  # DEBUG D#3 => field_3(D)
  # DEBUG this => D#3
  _35 = MEM[(char * *)__y_88 + 32B];
  # DEBUG D#3 => D#699
  # DEBUG this => D#3
  # DEBUG __s1 => _35
  # DEBUG __s2 => D#715
  # DEBUG __n => D#696
  __r_36 = __builtin_memcmp (_35, pretmp_85, __len_83);
  # DEBUG __r => NULL
  if (__r_36 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => _13
  # DEBUG __n2 => D#716
  _37 = _13 - pretmp_33;
  __d_38 = (const difference_type) _37;
  # DEBUG __d => __d_38
  if (__d_38 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_38 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_39 = (int) _37;

  <bb 11>:
  # __r_40 = PHI <__r_36(7), __r_39(10)>
  # DEBUG __r => __r_40
  # DEBUG D#705 => {CLOBBER}
  # DEBUG __size => D#705
  # DEBUG D#706 => {CLOBBER}
  # DEBUG __osize => D#706
  if (__r_40 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 26>:
  # DEBUG __r => NULL
  # DEBUG __y => __y_88
  __y_24 = MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B];
  # DEBUG D#159 => __y_88
  # DEBUG __x => D#159
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 13>:

  <bb 25>:
  # DEBUG __r => NULL
  __y_25 = MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B];
  # DEBUG D#160 => __y_88
  # DEBUG __x => D#160
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 14>:
  # __y_55 = PHI <__y_29(5)>

  <bb 24>:
  # DEBUG this => NULL
  # DEBUG __x => __y_55
  # DEBUG __j$_M_node => __y_55
  # DEBUG this => D#698
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_19 == __y_55)
    goto <bb 4>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __y_55
  # DEBUG __x => __y_55
  # DEBUG this => __y_55
  # DEBUG D#154 => &__y_55->_M_value_field
  # DEBUG __r => D#154
  # DEBUG __x => D#154
  # DEBUG this => D#153
  # DEBUG D#700 => &MEM[(const struct pair &)__y_55 + 32].first
  # DEBUG D#236 => &MEM[(const struct _Rb_tree *)D#698]._M_impl._M_key_compare
  # DEBUG D#203 => D#236
  # DEBUG __x => field_3(D)
  # DEBUG __y => D#700
  # DEBUG this => D#203
  # DEBUG __lhs => field_3(D)
  # DEBUG __rhs => D#700
  # DEBUG this => field_3(D)
  # DEBUG __str => D#700
  # DEBUG D#714 => MEM[(long unsigned int *)field_3(D) + 8B]
  # DEBUG D#2 => field_3(D)
  # DEBUG this => D#2
  # DEBUG __size => D#714
  _43 = MEM[(long unsigned int *)__y_55 + 40B];
  # DEBUG D#2 => D#700
  # DEBUG this => D#2
  # DEBUG __osize => _43
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_53 = MIN_EXPR <pretmp_33, _43>;
  # DEBUG __len => D#697
  # DEBUG this => D#700
  _46 = MEM[(char * *)__y_55 + 32B];
  # DEBUG D#3 => D#700
  # DEBUG this => D#3
  # DEBUG D#713 => MEM[(char * *)field_3(D)]
  # DEBUG D#3 => field_3(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#713
  # DEBUG __s2 => _46
  # DEBUG __n => D#697
  __r_48 = __builtin_memcmp (pretmp_85, _46, __len_53);
  # DEBUG __r => NULL
  if (__r_48 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;

  <bb 16>:
  # DEBUG __n1 => D#714
  # DEBUG __n2 => _43
  _49 = pretmp_33 - _43;
  __d_50 = (const difference_type) _49;
  # DEBUG __d => __d_50
  if (__d_50 > 2147483647)
    goto <bb 23>;
  else
    goto <bb 17>;

  <bb 17>:
  if (__d_50 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;

  <bb 18>:
  __r_51 = (int) _49;

  <bb 19>:
  # __r_52 = PHI <__r_48(15), __r_51(18)>
  # DEBUG __r => __r_52
  # DEBUG D#711 => {CLOBBER}
  # DEBUG __size => D#711
  # DEBUG D#712 => {CLOBBER}
  # DEBUG __osize => D#712
  if (__r_52 < 0)
    goto <bb 4>;
  else
    goto <bb 23>;

<L4>:
  # DEBUG this => &D.35977
  # DEBUG this => &D.35977
  # DEBUG this => &D.35977
  _5 = MEM[(char * *)&D.35977];
  # DEBUG D#3 => &D.35977
  # DEBUG this => D#3
  # DEBUG this => &D.35977
  if (&D.35977.D.11539._M_local_buf != _5)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#186 => D.35977.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.35977
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.35977
  # DEBUG this => D#3
  # DEBUG this => &D.35977
  # DEBUG D#183 => &D.35977._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _5
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _5
  # DEBUG this => D#177
  # DEBUG D.50262 => D#178
  operator delete (_5);

  <bb 22>:
  # DEBUG D#187 => &D.35977._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.35977 ={v} {CLOBBER};
  resx 3

  <bb 23>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG D#235 => {CLOBBER}
  # DEBUG __j$_M_node => D#235
  # DEBUG match$_M_node => __y_55
  # DEBUG D#348 => &this_2(D)->_float_map
  # DEBUG this => D#348
  # DEBUG D#79 => &D#348->_M_t
  # DEBUG this => D#79
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG this => &match
  # DEBUG __x => &D.35976
  # DEBUG D#235 => {CLOBBER}
  # DEBUG __j$_M_node => D#235
  # DEBUG match$_M_node => __y_55
  # DEBUG D#348 => &this_2(D)->_float_map
  # DEBUG this => D#348
  # DEBUG D#79 => &D#348->_M_t
  # DEBUG this => D#79
  # DEBUG this => NULL
  # DEBUG __x => __y_19
  # DEBUG this => &match
  # DEBUG __x => &D.35976
  # DEBUG this => &match
  # DEBUG this => __y_55
  # DEBUG D#349 => &__y_55->_M_value_field
  # DEBUG __r => D#349
  _7 = MEM[(const struct pair *)__y_55 + 32B].second;
  # DEBUG D#350 => {CLOBBER}
  # DEBUG match$_M_node => D#350
  return _7;

}



;; Function std::__cxx11::string Configuration::GetStr(const string&) const (_ZNK13Configuration6GetStrERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1733, decl_uid=35270, cgraph_uid=419, symbol_order=421)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::__cxx11::string Configuration::GetStr(const string&) const (const struct Configuration * const this, const struct string & field)
{
  const struct _Rb_tree_node_base * SR.1206;
  const struct _Rb_tree_node_base * SR.1205;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.56393;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.56378;
  struct const_iterator D.56363;
  const struct _Rb_tree_node * __y;
  const struct _Rb_tree_node_base * SR.926;
  struct const_iterator D.50919;
  struct basic_string D.35961;
  char * _2;
  char * const _5;
  const size_type _7;
  char * _15;
  char * const _16;
  const size_type _17;
  const size_type pretmp_27;
  char * const pretmp_38;
  char * const _41;
  long unsigned int _43;
  const size_type _49;
  char * const _52;
  long unsigned int _55;
  bool _59;
  char * _65;
  long unsigned int __dnew.111_66;
  const char_type _68;
  char * _71;
  char * const prephitmp_73;
  char * const pretmp_86;
  size_type prephitmp_87;
  size_type pretmp_88;
  bool _103;
  bool _126;
  char * const _127;

  <bb 2>:
  # DEBUG this => &match
  # DEBUG match$_M_node => 0B
  # DEBUG D#384 => &this_3(D)->_str_map
  # DEBUG this => D#384
  # DEBUG __x => field_4(D)
  # DEBUG D#723 => &MEM[(const struct map *)this_3(D) + 40B]._M_t
  # DEBUG this => D#723
  # DEBUG __k => field_4(D)
  # DEBUG this => D#723
  __y_25 = &MEM[(const struct _Rb_tree *)this_3(D) + 40B]._M_impl._M_header;
  __y_26 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 56B];
  # DEBUG D#70 => D#723
  # DEBUG this => D#70
  # DEBUG D#212 => D#723
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => field_4(D)
  # DEBUG __y => __y_25
  # DEBUG __x => __y_26
  if (__y_26 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_27 = MEM[(long unsigned int *)field_4(D) + 8B];
  pretmp_38 = MEM[(char * *)field_4(D)];
  goto <bb 7>;

  <bb 4>:
  # DEBUG this => D#723
  # DEBUG this => NULL
  # DEBUG __x => __y_25
  # DEBUG D#213 => {CLOBBER}
  # DEBUG __j$_M_node => D#213
  # DEBUG match$_M_node => __y_25
  # DEBUG D#385 => &this_3(D)->_str_map
  # DEBUG this => D#385
  # DEBUG D#71 => &D#385->_M_t
  # DEBUG this => D#71
  # DEBUG this => NULL
  # DEBUG __x => __y_25
  # DEBUG this => &match
  # DEBUG __x => &D.35959
  # DEBUG D#213 => {CLOBBER}
  # DEBUG __j$_M_node => D#213
  # DEBUG match$_M_node => __y_25
  # DEBUG D#385 => &this_3(D)->_str_map
  # DEBUG this => D#385
  # DEBUG D#71 => &D#385->_M_t
  # DEBUG this => D#71
  # DEBUG this => NULL
  # DEBUG __x => __y_25
  # DEBUG this => &match
  # DEBUG __x => &D.35959
  D.35961 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown string field: ", field_4(D)); [return slot optimization]
  Configuration::ParseError (this_3(D), &D.35961, 0);

  <bb 5>:
  # __y_36 = PHI <__y_30(33), __y_31(32)>
  # __y_35 = PHI <__y_74(33), __y_50(32)>
  # DEBUG __y => __y_35
  # DEBUG __x => __y_36
  if (__y_36 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __y_74 = PHI <__y_26(3), __y_36(6)>
  # __y_50 = PHI <__y_25(3), __y_35(6)>
  # DEBUG __y => __y_50
  # DEBUG __x => __y_74
  # DEBUG __x => __y_74
  # DEBUG __x => __y_74
  # DEBUG this => __y_74
  # DEBUG D#204 => &__y_74->_M_value_field
  # DEBUG __r => D#204
  # DEBUG __x => D#204
  # DEBUG this => D#149
  # DEBUG D#724 => &MEM[(const struct pair &)__y_74 + 32].first
  # DEBUG D#210 => &D#211->_M_impl._M_key_compare
  # DEBUG D#203 => D#210
  # DEBUG __x => D#724
  # DEBUG __y => field_4(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#724
  # DEBUG __rhs => field_4(D)
  # DEBUG this => D#724
  # DEBUG __str => field_4(D)
  _17 = MEM[(long unsigned int *)__y_74 + 40B];
  # DEBUG D#2 => D#724
  # DEBUG this => D#2
  # DEBUG __size => _17
  # DEBUG D#742 => MEM[(long unsigned int *)field_4(D) + 8B]
  # DEBUG D#2 => field_4(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#742
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_64 = MIN_EXPR <_17, pretmp_27>;
  # DEBUG __len => D#721
  # DEBUG this => field_4(D)
  # DEBUG D#741 => MEM[(char * *)field_4(D)]
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  _41 = MEM[(char * *)__y_74 + 32B];
  # DEBUG D#3 => D#724
  # DEBUG this => D#3
  # DEBUG __s1 => _41
  # DEBUG __s2 => D#741
  # DEBUG __n => D#721
  __r_42 = __builtin_memcmp (_41, pretmp_38, __len_64);
  # DEBUG __r => NULL
  if (__r_42 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => _17
  # DEBUG __n2 => D#742
  _43 = _17 - pretmp_27;
  __d_44 = (const difference_type) _43;
  # DEBUG __d => __d_44
  if (__d_44 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_44 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_45 = (int) _43;

  <bb 11>:
  # __r_46 = PHI <__r_42(7), __r_45(10)>
  # DEBUG __r => __r_46
  # DEBUG D#730 => {CLOBBER}
  # DEBUG __size => D#730
  # DEBUG D#731 => {CLOBBER}
  # DEBUG __osize => D#731
  if (__r_46 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 33>:
  # DEBUG __r => NULL
  # DEBUG __y => __y_74
  __y_30 = MEM[(struct _Rb_tree_node_base * *)__y_74 + 16B];
  # DEBUG D#155 => __y_74
  # DEBUG __x => D#155
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 13>:

  <bb 32>:
  # DEBUG __r => NULL
  __y_31 = MEM[(struct _Rb_tree_node_base * *)__y_74 + 24B];
  # DEBUG D#156 => __y_74
  # DEBUG __x => D#156
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 14>:
  # __y_72 = PHI <__y_35(5)>

  <bb 31>:
  # DEBUG this => NULL
  # DEBUG __x => __y_72
  # DEBUG __j$_M_node => __y_72
  # DEBUG this => D#723
  # DEBUG this => NULL
  # DEBUG __x => __y_25
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_25 == __y_72)
    goto <bb 4>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __y_72
  # DEBUG __x => __y_72
  # DEBUG this => __y_72
  # DEBUG D#150 => &__y_72->_M_value_field
  # DEBUG __r => D#150
  # DEBUG __x => D#150
  # DEBUG this => D#149
  # DEBUG D#725 => &MEM[(const struct pair &)__y_72 + 32].first
  # DEBUG D#214 => &MEM[(const struct _Rb_tree *)D#723]._M_impl._M_key_compare
  # DEBUG D#203 => D#214
  # DEBUG __x => field_4(D)
  # DEBUG __y => D#725
  # DEBUG this => D#203
  # DEBUG __lhs => field_4(D)
  # DEBUG __rhs => D#725
  # DEBUG this => field_4(D)
  # DEBUG __str => D#725
  # DEBUG D#740 => MEM[(long unsigned int *)field_4(D) + 8B]
  # DEBUG D#2 => field_4(D)
  # DEBUG this => D#2
  # DEBUG __size => D#740
  _49 = MEM[(long unsigned int *)__y_72 + 40B];
  # DEBUG D#2 => D#725
  # DEBUG this => D#2
  # DEBUG __osize => _49
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_100 = MIN_EXPR <pretmp_27, _49>;
  # DEBUG __len => D#722
  # DEBUG this => D#725
  _52 = MEM[(char * *)__y_72 + 32B];
  # DEBUG D#3 => D#725
  # DEBUG this => D#3
  # DEBUG D#739 => MEM[(char * *)field_4(D)]
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#739
  # DEBUG __s2 => _52
  # DEBUG __n => D#722
  __r_54 = __builtin_memcmp (pretmp_38, _52, __len_100);
  # DEBUG __r => NULL
  if (__r_54 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;

  <bb 16>:
  # DEBUG __n1 => D#740
  # DEBUG __n2 => _49
  _55 = pretmp_27 - _49;
  __d_56 = (const difference_type) _55;
  # DEBUG __d => __d_56
  if (__d_56 > 2147483647)
    goto <bb 30>;
  else
    goto <bb 17>;

  <bb 17>:
  if (__d_56 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;

  <bb 18>:
  __r_57 = (int) _55;

  <bb 19>:
  # __r_58 = PHI <__r_54(15), __r_57(18)>
  # DEBUG __r => __r_58
  # DEBUG D#736 => {CLOBBER}
  # DEBUG __size => D#736
  # DEBUG D#737 => {CLOBBER}
  # DEBUG __osize => D#737
  if (__r_58 < 0)
    goto <bb 4>;
  else
    goto <bb 30>;

  <bb 20>:
  _65 = std::__cxx11::basic_string<char>::_M_create (_9(D), &__dnew, 0);
  # DEBUG D#6 => _9(D)
  # DEBUG __p => _65
  # DEBUG this => D#6
  MEM[(char * *)_9(D)] = _65;
  __dnew.111_66 = __dnew;
  # DEBUG D#7 => _9(D)
  # DEBUG __capacity => __dnew.111_66
  # DEBUG this => D#7
  MEM[(size_type *)_9(D) + 16B] = __dnew.111_66;
  # DEBUG D#3 => _9(D)
  # DEBUG this => D#3
  # DEBUG __p => _65
  # DEBUG __k1 => _5
  # DEBUG __k2 => _15
  # DEBUG __d => _65
  # DEBUG __s => _5
  # DEBUG __n => _7
  goto <bb 23>;

  <bb 21>:
  # DEBUG D#3 => _9(D)
  # DEBUG this => D#3
  # DEBUG __p => _2
  # DEBUG __k1 => _5
  # DEBUG __k2 => _15
  # DEBUG __d => _2
  # DEBUG __s => _5
  # DEBUG __n => _7
  if (_7 == 1)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _68 = MEM[(const char_type &)_5];
  # DEBUG D#13 => _5
  # DEBUG __c1 => _2
  # DEBUG __c2 => D#13
  MEM[(char_type &)_2] = _68;
  goto <bb 24>;

  <bb 23>:
  # _127 = PHI <_2(21), _65(20)>
  # DEBUG D#3 => _9(D)
  # DEBUG this => D#3
  # DEBUG __p => _127
  # DEBUG __k1 => _5
  # DEBUG __k2 => _15
  # DEBUG __d => _127
  # DEBUG __s => _5
  # DEBUG __n => _7
  # DEBUG __s1 => _127
  # DEBUG __s2 => _5
  # DEBUG __n => _7
  __builtin_memcpy (_127, _5, _7);
  pretmp_88 = __dnew;
  pretmp_86 = MEM[(char * *)_9(D)];

  <bb 24>:
  # prephitmp_87 = PHI <_7(22), pretmp_88(23)>
  # prephitmp_73 = PHI <_2(22), pretmp_86(23)>
  # DEBUG D#738 => __dnew
  # DEBUG this => _9(D)
  # DEBUG __n => D#738
  # DEBUG D#5 => _9(D)
  # DEBUG __length => D#738
  # DEBUG this => D#5
  MEM[(size_type *)_9(D) + 8B] = prephitmp_87;
  # DEBUG D#3 => _9(D)
  # DEBUG this => D#3
  _71 = prephitmp_73 + prephitmp_87;
  # DEBUG __c1 => _71
  # DEBUG __c2 => D#13
  MEM[(char_type &)_71] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG D#388 => {CLOBBER}
  # DEBUG match$_M_node => D#388
  return _9(D);

<L4>:
  # DEBUG this => &D.35961
  # DEBUG this => &D.35961
  # DEBUG this => &D.35961
  _16 = MEM[(char * *)&D.35961];
  # DEBUG D#3 => &D.35961
  # DEBUG this => D#3
  # DEBUG this => &D.35961
  if (&D.35961.D.11539._M_local_buf != _16)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#186 => D.35961.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.35961
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.35961
  # DEBUG this => D#3
  # DEBUG this => &D.35961
  # DEBUG D#183 => &D.35961._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _16
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _16
  # DEBUG this => D#177
  # DEBUG D.50947 => D#178
  operator delete (_16);

  <bb 27>:
  # DEBUG D#187 => &D.35961._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.35961 ={v} {CLOBBER};
  resx 3

  <bb 28>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 29>:
  # DEBUG __first => _5
  # DEBUG __last => _15
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _5
  # DEBUG __last => _15
  __dnew = _7;
  if (_7 > 15)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG D#213 => {CLOBBER}
  # DEBUG __j$_M_node => D#213
  # DEBUG match$_M_node => __y_72
  # DEBUG D#385 => &this_3(D)->_str_map
  # DEBUG this => D#385
  # DEBUG D#71 => &D#385->_M_t
  # DEBUG this => D#71
  # DEBUG this => NULL
  # DEBUG __x => __y_25
  # DEBUG this => &match
  # DEBUG __x => &D.35959
  # DEBUG D#213 => {CLOBBER}
  # DEBUG __j$_M_node => D#213
  # DEBUG match$_M_node => __y_72
  # DEBUG D#385 => &this_3(D)->_str_map
  # DEBUG this => D#385
  # DEBUG D#71 => &D#385->_M_t
  # DEBUG this => D#71
  # DEBUG this => NULL
  # DEBUG __x => __y_25
  # DEBUG this => &match
  # DEBUG __x => &D.35959
  # DEBUG this => &match
  # DEBUG this => __y_72
  # DEBUG D#386 => &__y_72->_M_value_field
  # DEBUG __r => D#386
  # DEBUG D#387 => &MEM[(const struct pair *)__y_72 + 32B].second
  # DEBUG this => _9(D)
  # DEBUG __str => D#387
  # DEBUG this => D#387
  # DEBUG D#380 => &D#387->_M_dataplus
  # DEBUG this => _9(D)
  _2 = &MEM[(struct basic_string *)_9(D)].D.11539._M_local_buf;
  # DEBUG D#381 => &MEM[(struct basic_string *)_9(D)]._M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => _2
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)_9(D)]._M_p = _2;
  _5 = MEM[(char * *)__y_72 + 64B];
  # DEBUG D#3 => D#387
  # DEBUG this => D#3
  _7 = MEM[(long unsigned int *)__y_72 + 72B];
  # DEBUG D#1 => D#387
  # DEBUG this => D#1
  _15 = _5 + _7;
  # DEBUG D#3 => D#387
  # DEBUG this => D#3
  # DEBUG this => _9(D)
  # DEBUG __beg => _5
  # DEBUG __end => _15
  # DEBUG this => _9(D)
  # DEBUG __beg => _5
  # DEBUG __end => _15
  # DEBUG this => _9(D)
  # DEBUG __beg => _5
  # DEBUG __end => _15
  # DEBUG __ptr => _5
  _59 = _15 != 0B;
  _126 = _5 == 0B;
  _103 = _59 & _126;
  if (_103 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*] (_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_, funcdef_no=2101, decl_uid=36651, cgraph_uid=787, symbol_order=789)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*] (struct vector * const this, struct iterator __position, const struct basic_string & __x)
{
  size_type __dnew;
  struct basic_string * D.56664;
  struct basic_string * __first;
  struct basic_string * __result;
  size_type __dnew;
  struct basic_string * D.56590;
  struct basic_string * __first;
  struct basic_string * __result;
  size_type __dnew;
  const long unsigned int D.56519;
  const size_type __len;
  size_type D.56518;
  size_type __n;
  struct basic_string * D.56509;
  size_type __dnew;
  size_type __dnew;
  struct basic_string * const __position;
  struct basic_string * __first;
  difference_type __n;
  struct basic_string * __last;
  struct basic_string * __result;
  struct basic_string * __new_finish;
  struct basic_string __x_copy;
  struct basic_string * _8;
  struct basic_string * _9;
  size_type pretmp_10;
  struct basic_string * _12;
  long int __last.176_15;
  struct basic_string * _16;
  long int _19;
  long int __first.177_20;
  char * _21;
  char * const _23;
  bool _25;
  char * _27;
  struct basic_string * const _29;
  bool _30;
  long unsigned int _31;
  struct basic_string * _32;
  const size_type _33;
  char * const _34;
  char * _37;
  struct basic_string * _38;
  const size_type _39;
  char * const _40;
  struct basic_string * prephitmp_44;
  struct basic_string * _48;
  void * _50;
  char * _53;
  char * const _64;
  char * const _65;
  const size_type _66;
  char * _67;
  size_type pretmp_69;
  bool _71;
  char * const _73;
  const char * _74;
  char * const _76;
  char * const _78;
  const char * _79;
  struct basic_string * pretmp_100;
  struct basic_string * prephitmp_101;
  long unsigned int prephitmp_104;
  char[16] * pretmp_106;
  char[16] * pretmp_107;
  size_type prephitmp_109;
  char[16] * prephitmp_113;
  struct basic_string * pretmp_114;
  struct basic_string * prephitmp_115;
  long unsigned int prephitmp_133;
  char * _134;
  long unsigned int __dnew.111_135;
  const char_type _137;
  char * _140;
  char * const prephitmp_141;
  long int _144;
  char * _145;
  long unsigned int __dnew.111_146;
  const char_type _148;
  char * _151;
  struct basic_string * _152;
  bool _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  void * _160;
  bool _161;
  size_type prephitmp_162;
  bool _163;
  char * _170;
  long unsigned int __dnew.111_171;
  const char_type _173;
  char * _176;
  char * const pretmp_177;
  char * _178;
  char * const _179;
  const size_type _180;
  char * _181;
  void * _184;
  char * const pretmp_185;
  char * const _186;
  const char * _187;
  char * _193;
  long unsigned int __dnew.111_194;
  const char_type _196;
  char * _199;
  size_type pretmp_200;
  char * _202;
  char * const _203;
  const size_type _204;
  char * _205;
  void * _208;
  char * const pretmp_209;
  char * const _210;
  const char * _211;
  char * _217;
  long unsigned int __dnew.111_218;
  const char_type _220;
  char * _223;
  char * const prephitmp_226;
  size_type pretmp_229;
  void * _232;
  char * const prephitmp_236;
  size_type prephitmp_239;
  struct basic_string * pretmp_243;
  char * const _270;
  long int _271;
  char * const _322;
  size_type prephitmp_346;
  char * const prephitmp_358;
  bool _362;
  char * const prephitmp_364;
  long unsigned int pretmp_367;
  char * const _378;
  char * const _384;
  char * const _385;
  size_type pretmp_389;
  bool _393;
  bool _394;
  long int _395;
  bool _396;
  bool _397;
  char * const pretmp_398;
  bool _399;
  bool _400;
  bool _401;
  long int _402;
  char * const pretmp_403;
  size_type prephitmp_405;
  long int _406;
  long int _407;
  bool _408;

  <bb 2>:
  __position_28 = MEM[(struct __normal_iterator *)&__position];
  # DEBUG __position => __position_28
  _8 = this_7(D)->D.36723._M_impl._M_finish;
  _9 = this_7(D)->D.36723._M_impl._M_end_of_storage;
  if (_8 != _9)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 3>:
  # DEBUG D#420 => _8 + 18446744073709551584
  # DEBUG D#433 => &this_7(D)->D.36723._M_impl
  # DEBUG D#392 => D#433
  # DEBUG __p => _8
  # DEBUG __arg => D#420
  # DEBUG __a => D#392
  # DEBUG D#391 => D#392
  # DEBUG D#390 => D#391
  # DEBUG __p => _8
  # DEBUG __val => D#420
  # DEBUG this => D#390
  # DEBUG D#14 => 32
  # DEBUG __p => _8
  # DEBUG D.51035 => D#14
  if (_8 != 0B)
    goto <bb 4>;
  else
    goto <bb 10>;

  <bb 4>:
  # DEBUG this => _8
  # DEBUG __str => D#420
  # DEBUG this => D#420
  # DEBUG D#380 => &D#420->_M_dataplus
  # DEBUG this => _8
  _53 = &_8->D.11539._M_local_buf;
  # DEBUG D#381 => &_8->_M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => _53
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)_8]._M_p = _53;
  _40 = MEM[(char * *)_8 + -32B];
  # DEBUG D#3 => D#420
  # DEBUG this => D#3
  _39 = MEM[(long unsigned int *)_8 + -24B];
  # DEBUG D#1 => D#420
  # DEBUG this => D#1
  _37 = _40 + _39;
  # DEBUG D#3 => D#420
  # DEBUG this => D#3
  # DEBUG this => _8
  # DEBUG __beg => _40
  # DEBUG __end => _37
  # DEBUG this => _8
  # DEBUG __beg => _40
  # DEBUG __end => _37
  # DEBUG this => _8
  # DEBUG __beg => _40
  # DEBUG __end => _37
  # DEBUG __ptr => _40
  _163 = _37 != 0B;
  _362 = _40 == 0B;
  _401 = _163 & _362;
  if (_401 != 0)
    goto <bb 115>;
  else
    goto <bb 116>;

  <bb 5>:
  _134 = std::__cxx11::basic_string<char>::_M_create (_8, &__dnew, 0);
  # DEBUG D#6 => _8
  # DEBUG __p => _134
  # DEBUG this => D#6
  MEM[(char * *)_8] = _134;
  __dnew.111_135 = __dnew;
  # DEBUG D#7 => _8
  # DEBUG __capacity => __dnew.111_135
  # DEBUG this => D#7
  MEM[(size_type *)_8 + 16B] = __dnew.111_135;
  # DEBUG D#3 => _8
  # DEBUG this => D#3
  # DEBUG __p => _134
  # DEBUG __k1 => _40
  # DEBUG __k2 => _37
  # DEBUG __d => _134
  # DEBUG __s => _40
  # DEBUG __n => _39
  goto <bb 8>;

  <bb 6>:
  # DEBUG D#3 => _8
  # DEBUG this => D#3
  # DEBUG __p => _53
  # DEBUG __k1 => _40
  # DEBUG __k2 => _37
  # DEBUG __d => _53
  # DEBUG __s => _40
  # DEBUG __n => _39
  if (_39 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _137 = MEM[(const char_type &)_40];
  # DEBUG D#13 => _40
  # DEBUG __c1 => _53
  # DEBUG __c2 => D#13
  MEM[(char_type &)_53] = _137;
  goto <bb 9>;

  <bb 8>:
  # _270 = PHI <_53(6), _134(5)>
  # DEBUG D#3 => _8
  # DEBUG this => D#3
  # DEBUG __p => _270
  # DEBUG __k1 => _40
  # DEBUG __k2 => _37
  # DEBUG __d => _270
  # DEBUG __s => _40
  # DEBUG __n => _39
  # DEBUG __s1 => _270
  # DEBUG __s2 => _40
  # DEBUG __n => _39
  __builtin_memcpy (_270, _40, _39);
  pretmp_69 = __dnew;
  pretmp_403 = MEM[(char * *)_8];

  <bb 9>:
  # prephitmp_346 = PHI <_39(7), pretmp_69(8)>
  # prephitmp_358 = PHI <_53(7), pretmp_403(8)>
  # DEBUG D#756 => __dnew
  # DEBUG this => _8
  # DEBUG __n => D#756
  # DEBUG D#5 => _8
  # DEBUG __length => D#756
  # DEBUG this => D#5
  MEM[(size_type *)_8 + 8B] = prephitmp_346;
  # DEBUG D#3 => _8
  # DEBUG this => D#3
  _140 = prephitmp_358 + prephitmp_346;
  # DEBUG __c1 => _140
  # DEBUG __c2 => D#13
  MEM[(char_type &)_140] = 0;
  __dnew ={v} {CLOBBER};
  pretmp_243 = this_7(D)->D.36723._M_impl._M_finish;

  <bb 10>:
  # prephitmp_44 = PHI <pretmp_243(9), _8(3)>
  _12 = prephitmp_44 + 32;
  this_7(D)->D.36723._M_impl._M_finish = _12;
  # DEBUG this => &__x_copy
  # DEBUG __str => __x_14(D)
  # DEBUG this => __x_14(D)
  # DEBUG D#380 => &__x_14(D)->_M_dataplus
  # DEBUG this => &__x_copy
  # DEBUG D#381 => &__x_copy._M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => &__x_copy.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&__x_copy]._M_p = &__x_copy.D.11539._M_local_buf;
  _34 = MEM[(char * *)__x_14(D)];
  # DEBUG D#3 => __x_14(D)
  # DEBUG this => D#3
  _33 = MEM[(long unsigned int *)__x_14(D) + 8B];
  # DEBUG D#1 => __x_14(D)
  # DEBUG this => D#1
  _27 = _34 + _33;
  # DEBUG D#3 => __x_14(D)
  # DEBUG this => D#3
  # DEBUG this => &__x_copy
  # DEBUG __beg => _34
  # DEBUG __end => _27
  # DEBUG this => &__x_copy
  # DEBUG __beg => _34
  # DEBUG __end => _27
  # DEBUG this => &__x_copy
  # DEBUG __beg => _34
  # DEBUG __end => _27
  # DEBUG __ptr => _34
  _408 = _27 != 0B;
  _161 = _34 == 0B;
  _154 = _161 & _408;
  if (_154 != 0)
    goto <bb 115>;
  else
    goto <bb 117>;

  <bb 11>:
  _145 = std::__cxx11::basic_string<char>::_M_create (&__x_copy, &__dnew, 0);
  # DEBUG D#6 => &__x_copy
  # DEBUG __p => _145
  # DEBUG this => D#6
  MEM[(char * *)&__x_copy] = _145;
  __dnew.111_146 = __dnew;
  # DEBUG D#7 => &__x_copy
  # DEBUG __capacity => __dnew.111_146
  # DEBUG this => D#7
  MEM[(size_type *)&__x_copy + 16B] = __dnew.111_146;
  # DEBUG D#3 => &__x_copy
  # DEBUG this => D#3
  # DEBUG __p => _145
  # DEBUG __k1 => _34
  # DEBUG __k2 => _27
  # DEBUG __d => _145
  # DEBUG __s => _34
  # DEBUG __n => _33
  goto <bb 14>;

  <bb 12>:
  # DEBUG D#3 => &__x_copy
  # DEBUG this => D#3
  # DEBUG __p => &__x_copy.D.11539._M_local_buf
  # DEBUG __k1 => _34
  # DEBUG __k2 => _27
  # DEBUG __d => &__x_copy.D.11539._M_local_buf
  # DEBUG __s => _34
  # DEBUG __n => _33
  if (_33 == 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _148 = MEM[(const char_type &)_34];
  # DEBUG D#13 => _34
  # DEBUG __c1 => &__x_copy.D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&__x_copy + 16] = _148;
  goto <bb 15>;

  <bb 14>:
  # _322 = PHI <&__x_copy.D.11539._M_local_buf(12), _145(11)>
  # DEBUG D#3 => &__x_copy
  # DEBUG this => D#3
  # DEBUG __p => _322
  # DEBUG __k1 => _34
  # DEBUG __k2 => _27
  # DEBUG __d => _322
  # DEBUG __s => _34
  # DEBUG __n => _33
  # DEBUG __s1 => _322
  # DEBUG __s2 => _34
  # DEBUG __n => _33
  __builtin_memcpy (_322, _34, _33);
  pretmp_10 = __dnew;
  pretmp_398 = MEM[(char * *)&__x_copy];

  <bb 15>:
  # prephitmp_405 = PHI <_33(13), pretmp_10(14)>
  # prephitmp_226 = PHI <&__x_copy.D.11539._M_local_buf(13), pretmp_398(14)>
  # DEBUG D#755 => __dnew
  # DEBUG this => &__x_copy
  # DEBUG __n => D#755
  # DEBUG D#5 => &__x_copy
  # DEBUG __length => D#755
  # DEBUG this => D#5
  MEM[(size_type *)&__x_copy + 8B] = prephitmp_405;
  # DEBUG D#3 => &__x_copy
  # DEBUG this => D#3
  _151 = prephitmp_226 + prephitmp_405;
  # DEBUG __c1 => _151
  # DEBUG __c2 => D#13
  MEM[(char_type &)_151] = 0;
  __dnew ={v} {CLOBBER};
  _16 = this_7(D)->D.36723._M_impl._M_finish;
  __result_17 = _16 + 18446744073709551584;
  __last_18 = _16 + 18446744073709551552;
  # DEBUG this => &__position
  # DEBUG __first => __position_28
  # DEBUG __last => __last_18
  # DEBUG __result => __result_17
  # DEBUG __it => __last_18
  # DEBUG __it => __last_18
  # DEBUG __it => __position_28
  # DEBUG __it => __position_28
  # DEBUG __first => __position_28
  # DEBUG __last => __last_18
  # DEBUG __result => __result_17
  # DEBUG __it => __result_17
  # DEBUG __it => __result_17
  # DEBUG __it => __last_18
  # DEBUG __it => __last_18
  # DEBUG __it => __position_28
  # DEBUG __it => __position_28
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __last.176_15 = (long int) __last_18;
  __first.177_20 = (long int) __position_28;
  _19 = __last.176_15 - __first.177_20;
  __n_57 = _19 /[ex] 32;
  # DEBUG __n => __n_57
  # DEBUG __n => __n_57
  # DEBUG __result => __result_17
  # DEBUG __last => __last_18
  if (__n_57 <= 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG __str => &__x_copy
  # DEBUG this => NULL
  # DEBUG __str => &__x_copy
  std::__cxx11::basic_string<char>::_M_assign (__position_28, &__x_copy);
  goto <bb 22>;

  <bb 17>:

  <bb 18>:
  # __n_131 = PHI <__n_57(17), __n_63(20)>
  # __last_132 = PHI <__last_18(17), __last_60(20)>
  # __result_166 = PHI <__result_17(17), __result_62(20)>
  # DEBUG __n => __n_131
  # DEBUG __result => __result_166
  # DEBUG __last => __last_132
  __last_60 = __last_132 + 18446744073709551584;
  # DEBUG __last => __last_60
  __result_62 = __result_166 + 18446744073709551584;
  # DEBUG __result => __result_62
  # DEBUG this => __result_62
  # DEBUG __str => __last_60
  # DEBUG this => __result_62
  # DEBUG __str => __last_60
  std::__cxx11::basic_string<char>::_M_assign (__result_62, __last_60);

  <bb 19>:
  __n_63 = __n_131 + -1;
  # DEBUG __n => __n_63
  # DEBUG __n => __n_63
  # DEBUG __result => __result_62
  # DEBUG __last => __last_60
  if (__n_63 <= 0)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 18>;

<L20>:
  goto <bb 95> (<L3>);

  <bb 22>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  _64 = MEM[(char * *)&__x_copy];
  # DEBUG D#3 => &__x_copy
  # DEBUG this => D#3
  # DEBUG this => &__x_copy
  if (&__x_copy.D.11539._M_local_buf != _64)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#186 => __x_copy.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &__x_copy
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &__x_copy
  # DEBUG this => D#3
  # DEBUG this => &__x_copy
  # DEBUG D#183 => &__x_copy._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _64
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _64
  # DEBUG this => D#177
  # DEBUG D.51834 => D#178
  operator delete (_64);

  <bb 24>:
  # DEBUG D#187 => &__x_copy._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  __x_copy ={v} {CLOBBER};
  goto <bb 93>;

  <bb 25>:
  # DEBUG this => this_7(D)
  # DEBUG __n => 1
  # DEBUG __n => 1
  # DEBUG __s => "vector::_M_insert_aux"
  # DEBUG D#408 => this_7(D)
  # DEBUG this => D#408
  # DEBUG D#407 => D#408
  # DEBUG D#406 => &D#407->D.36723
  # DEBUG this => D#406
  # DEBUG __a => D#405
  # DEBUG D#404 => D#405
  # DEBUG D#403 => D#404
  # DEBUG this => D#403
  _29 = MEM[(struct basic_string * *)this_7(D)];
  # DEBUG D#38 => this_7(D)
  # DEBUG D#38 => this_7(D)
  # DEBUG this => D#38
  # DEBUG this => D#38
  _155 = (long int) _8;
  _156 = (long int) _29;
  _157 = _155 - _156;
  _158 = _157 /[ex] 32;
  _159 = (const long unsigned int) _158;
  # DEBUG D#38 => this_7(D)
  # DEBUG D#38 => this_7(D)
  # DEBUG this => D#38
  # DEBUG this => D#38
  # DEBUG D#38 => this_7(D)
  # DEBUG D#38 => this_7(D)
  # DEBUG this => D#38
  # DEBUG this => D#38
  # DEBUG __a => &D.56519
  # DEBUG __b => &__n
  if (_159 == 0)
    goto <bb 119>;
  else
    goto <bb 26>;

  <bb 26>:
  __len_164 = _159 + _159;
  # DEBUG __len => __len_164
  # DEBUG D#38 => this_7(D)
  # DEBUG D#38 => this_7(D)
  # DEBUG this => D#38
  # DEBUG this => D#38
  if (_159 > __len_164)
    goto <bb 118>;
  else
    goto <bb 27>;

  <bb 27>:
  # DEBUG __len => __len_164
  # DEBUG D#38 => this_7(D)
  # DEBUG this => D#38
  # DEBUG this => D#38
  # DEBUG D#408 => this_7(D)
  # DEBUG this => D#408
  # DEBUG D#407 => D#408
  # DEBUG D#406 => &D#407->D.36723
  # DEBUG this => D#406
  # DEBUG __a => D#405
  # DEBUG D#404 => D#405
  # DEBUG D#403 => D#404
  # DEBUG this => D#403
  if (__len_164 > 576460752303423487)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 28>:
  pretmp_367 = __len_59 * 32;

  <bb 29>:
  # _271 = PHI <_407(118), _402(28)>
  # prephitmp_133 = PHI <18446744073709551584(118), pretmp_367(28)>
  # DEBUG __len => NULL
  # DEBUG this => this_7(D)
  # DEBUG D#131 => &this_7(D)->D.36723._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#131
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.40492
  # DEBUG this => &__position
  # DEBUG this => &D.40492
  # DEBUG D#436 => _271 /[ex] 32
  # DEBUG __elems_before => (const size_type) D#436
  # DEBUG D#435 => &this_7(D)->D.36723
  # DEBUG D#416 => D#435
  # DEBUG __n => NULL
  # DEBUG this => D#416
  # DEBUG D#415 => D#416
  # DEBUG D#414 => &D#415->_M_impl
  # DEBUG D#413 => D#414
  # DEBUG __n => NULL
  # DEBUG __a => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#410 => D#412
  # DEBUG D#411 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#410
  # DEBUG D.56507 => D#411
  # DEBUG D#409 => D#410
  # DEBUG D#403 => D#409
  # DEBUG this => D#403
  _152 = operator new (prephitmp_133);

  <bb 30>:
  # __new_finish_153 = PHI <0B(119), _152(29)>
  # _144 = PHI <_402(119), _271(29)>
  # prephitmp_104 = PHI <0(119), prephitmp_133(29)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  _31 = (long unsigned int) _144;
  _32 = __new_finish_153 + _31;
  # DEBUG D#434 => &this_7(D)->D.36723._M_impl
  # DEBUG D#392 => D#434
  # DEBUG __p => _32
  # DEBUG __arg => __x_14(D)
  # DEBUG __a => D#392
  # DEBUG D#391 => D#392
  # DEBUG D#390 => D#391
  # DEBUG __p => _32
  # DEBUG __val => __x_14(D)
  # DEBUG this => D#390
  # DEBUG D#14 => 32
  # DEBUG __p => _32
  # DEBUG D.51035 => D#14
  if (_32 != 0B)
    goto <bb 31>;
  else
    goto <bb 38>;

  <bb 31>:
  # DEBUG this => _32
  # DEBUG __str => __x_14(D)
  # DEBUG this => __x_14(D)
  # DEBUG D#380 => &__x_14(D)->_M_dataplus
  # DEBUG this => _32
  _21 = &_32->D.11539._M_local_buf;
  # DEBUG D#381 => &_32->_M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => _21
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)_32]._M_p = _21;
  _65 = MEM[(char * *)__x_14(D)];
  # DEBUG D#3 => __x_14(D)
  # DEBUG this => D#3
  _66 = MEM[(long unsigned int *)__x_14(D) + 8B];
  # DEBUG D#1 => __x_14(D)
  # DEBUG this => D#1
  _67 = _65 + _66;
  # DEBUG D#3 => __x_14(D)
  # DEBUG this => D#3
  # DEBUG this => _32
  # DEBUG __beg => _65
  # DEBUG __end => _67
  # DEBUG this => _32
  # DEBUG __beg => _65
  # DEBUG __end => _67
  # DEBUG this => _32
  # DEBUG __beg => _65
  # DEBUG __end => _67
  # DEBUG __ptr => _65
  _71 = _67 != 0B;
  _30 = _65 == 0B;
  _25 = _30 & _71;
  if (_25 != 0)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 32>:
  _170 = std::__cxx11::basic_string<char>::_M_create (_32, &__dnew, 0);

  <bb 33>:
  # DEBUG D#6 => _32
  # DEBUG __p => _170
  # DEBUG this => D#6
  MEM[(char * *)_32] = _170;
  __dnew.111_171 = __dnew;
  # DEBUG D#7 => _32
  # DEBUG __capacity => __dnew.111_171
  # DEBUG this => D#7
  MEM[(size_type *)_32 + 16B] = __dnew.111_171;
  # DEBUG D#3 => _32
  # DEBUG this => D#3
  # DEBUG __p => _170
  # DEBUG __k1 => _65
  # DEBUG __k2 => _67
  # DEBUG __d => _170
  # DEBUG __s => _65
  # DEBUG __n => _66
  goto <bb 36>;

  <bb 34>:
  # DEBUG D#3 => _32
  # DEBUG this => D#3
  # DEBUG __p => _21
  # DEBUG __k1 => _65
  # DEBUG __k2 => _67
  # DEBUG __d => _21
  # DEBUG __s => _65
  # DEBUG __n => _66
  if (_66 == 1)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  _173 = MEM[(const char_type &)_65];
  # DEBUG D#13 => _65
  # DEBUG __c1 => _21
  # DEBUG __c2 => D#13
  MEM[(char_type &)_21] = _173;
  goto <bb 37>;

  <bb 36>:
  # _384 = PHI <_21(34), _170(33)>
  # DEBUG D#3 => _32
  # DEBUG this => D#3
  # DEBUG __p => _384
  # DEBUG __k1 => _65
  # DEBUG __k2 => _67
  # DEBUG __d => _384
  # DEBUG __s => _65
  # DEBUG __n => _66
  # DEBUG __s1 => _384
  # DEBUG __s2 => _65
  # DEBUG __n => _66
  __builtin_memcpy (_384, _65, _66);
  pretmp_200 = __dnew;
  pretmp_209 = MEM[(char * *)_32];

  <bb 37>:
  # prephitmp_239 = PHI <_66(35), pretmp_200(36)>
  # prephitmp_364 = PHI <_21(35), pretmp_209(36)>
  # DEBUG D#754 => __dnew
  # DEBUG this => _32
  # DEBUG __n => D#754
  # DEBUG D#5 => _32
  # DEBUG __length => D#754
  # DEBUG this => D#5
  MEM[(size_type *)_32 + 8B] = prephitmp_239;
  # DEBUG D#3 => _32
  # DEBUG this => D#3
  _176 = prephitmp_364 + prephitmp_239;
  # DEBUG __c1 => _176
  # DEBUG __c2 => D#13
  MEM[(char_type &)_176] = 0;
  __dnew ={v} {CLOBBER};

  <bb 38>:
  # DEBUG __new_finish => 0B
  # DEBUG D#421 => &this_7(D)->D.36723
  # DEBUG this => D#421
  # DEBUG this => &__position
  __first_35 = this_7(D)->D.36723._M_impl._M_start;
  # DEBUG __first => __first_35
  # DEBUG __last => __position_28
  # DEBUG __result => NULL
  # DEBUG __alloc => D#419
  # DEBUG D#418 => D#419
  # DEBUG D#417 => D#418
  # DEBUG __first => __first_35
  # DEBUG __last => __position_28
  # DEBUG __result => NULL
  # DEBUG D.51873 => D#417
  # DEBUG __first => __first_35
  # DEBUG __last => __position_28
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => __first_35
  # DEBUG __last => __position_28
  # DEBUG __result => __new_finish_153
  # DEBUG __cur => __new_finish_153
  # DEBUG __cur => __new_finish_153
  # DEBUG __first => __first_35
  if (__position_28 == __first_35)
    goto <bb 51>;
  else
    goto <bb 39>;

  <bb 39>:

  <bb 40>:
  # __first_213 = PHI <__first_35(39), __first_182(50)>
  # __new_finish_214 = PHI <__new_finish_153(39), __new_finish_183(50)>
  # DEBUG __cur => __new_finish_214
  # DEBUG __first => __first_213
  # DEBUG __r => __new_finish_214
  # DEBUG __p => NULL
  # DEBUG __value => __first_213
  # DEBUG D#14 => 32
  # DEBUG __p => NULL
  # DEBUG D.51121 => D#14
  if (__new_finish_214 != 0B)
    goto <bb 41>;
  else
    goto <bb 48>;

  <bb 41>:
  # DEBUG this => NULL
  # DEBUG __str => __first_213
  # DEBUG this => __first_213
  # DEBUG D#380 => &MEM[(const struct basic_string *)__first_213]._M_dataplus
  # DEBUG this => NULL
  _178 = &__new_finish_214->D.11539._M_local_buf;
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => _178
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)__new_finish_214]._M_p = _178;
  _179 = MEM[(char * *)__first_213];
  # DEBUG D#3 => __first_213
  # DEBUG this => D#3
  _180 = MEM[(long unsigned int *)__first_213 + 8B];
  # DEBUG D#1 => __first_213
  # DEBUG this => D#1
  _181 = _179 + _180;
  # DEBUG D#3 => __first_213
  # DEBUG this => D#3
  # DEBUG this => NULL
  # DEBUG __beg => _179
  # DEBUG __end => _181
  # DEBUG this => NULL
  # DEBUG __beg => _179
  # DEBUG __end => _181
  # DEBUG this => __new_finish_214
  # DEBUG __beg => _179
  # DEBUG __end => _181
  # DEBUG __ptr => _179
  _393 = _181 != 0B;
  _396 = _179 == 0B;
  _394 = _393 & _396;
  if (_394 != 0)
    goto <bb 122>;
  else
    goto <bb 124>;

  <bb 42>:
  _193 = std::__cxx11::basic_string<char>::_M_create (__new_finish_214, &__dnew, 0);

  <bb 43>:
  # DEBUG D#6 => __new_finish_214
  # DEBUG __p => _193
  # DEBUG this => D#6
  MEM[(char * *)__new_finish_214] = _193;
  __dnew.111_194 = __dnew;
  # DEBUG D#7 => __new_finish_214
  # DEBUG __capacity => __dnew.111_194
  # DEBUG this => D#7
  MEM[(size_type *)__new_finish_214 + 16B] = __dnew.111_194;
  # DEBUG D#3 => __new_finish_214
  # DEBUG this => D#3
  # DEBUG __p => _193
  # DEBUG __k1 => _179
  # DEBUG __k2 => _181
  # DEBUG __d => _193
  # DEBUG __s => _179
  # DEBUG __n => _180
  goto <bb 46>;

  <bb 44>:
  # DEBUG D#3 => __new_finish_214
  # DEBUG this => D#3
  # DEBUG __p => _178
  # DEBUG __k1 => _179
  # DEBUG __k2 => _181
  # DEBUG __d => _178
  # DEBUG __s => _179
  # DEBUG __n => _180
  if (_180 == 1)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  _196 = MEM[(const char_type &)_179];
  # DEBUG D#13 => _179
  # DEBUG __c1 => _178
  # DEBUG __c2 => D#13
  MEM[(char_type &)_178] = _196;
  goto <bb 47>;

  <bb 46>:
  # _378 = PHI <_178(44), _193(43)>
  # DEBUG D#3 => __new_finish_214
  # DEBUG this => D#3
  # DEBUG __p => _378
  # DEBUG __k1 => _179
  # DEBUG __k2 => _181
  # DEBUG __d => _378
  # DEBUG __s => _179
  # DEBUG __n => _180
  # DEBUG __s1 => _378
  # DEBUG __s2 => _179
  # DEBUG __n => _180
  __builtin_memcpy (_378, _179, _180);
  pretmp_229 = __dnew;
  pretmp_185 = MEM[(char * *)__new_finish_214];

  <bb 47>:
  # prephitmp_162 = PHI <_180(45), pretmp_229(46)>
  # prephitmp_236 = PHI <_178(45), pretmp_185(46)>
  # DEBUG D#753 => __dnew
  # DEBUG this => __new_finish_214
  # DEBUG __n => D#753
  # DEBUG D#5 => __new_finish_214
  # DEBUG __length => D#753
  # DEBUG this => D#5
  MEM[(size_type *)__new_finish_214 + 8B] = prephitmp_162;
  # DEBUG D#3 => __new_finish_214
  # DEBUG this => D#3
  _199 = prephitmp_236 + prephitmp_162;
  # DEBUG __c1 => _199
  # DEBUG __c2 => D#13
  MEM[(char_type &)_199] = 0;
  __dnew ={v} {CLOBBER};

  <bb 48>:
  __first_182 = __first_213 + 32;
  # DEBUG __first => __first_182
  __new_finish_183 = __new_finish_214 + 32;
  # DEBUG __cur => __new_finish_183
  # DEBUG __cur => __new_finish_183
  # DEBUG __first => __first_182
  if (__position_28 == __first_182)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # __new_finish_142 = PHI <__new_finish_183(48)>
  goto <bb 51>;

  <bb 50>:
  goto <bb 40>;

  <bb 51>:
  # __new_finish_215 = PHI <__new_finish_142(49), __new_finish_153(38)>
  # DEBUG __new_finish => NULL
  __new_finish_36 = __new_finish_215 + 32;
  # DEBUG __new_finish => __new_finish_36
  # DEBUG D#422 => &this_7(D)->D.36723
  # DEBUG this => D#422
  _38 = this_7(D)->D.36723._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => __position_28
  # DEBUG __last => _38
  # DEBUG __result => __new_finish_36
  # DEBUG __alloc => D#419
  # DEBUG D#418 => D#419
  # DEBUG D#417 => D#418
  # DEBUG __first => __position_28
  # DEBUG __last => _38
  # DEBUG __result => __new_finish_36
  # DEBUG D.51892 => D#417
  # DEBUG __first => __position_28
  # DEBUG __last => _38
  # DEBUG __result => __new_finish_36
  # DEBUG __assignable => 1
  # DEBUG __first => __position_28
  # DEBUG __last => _38
  # DEBUG __result => __new_finish_36
  # DEBUG __cur => __new_finish_36
  # DEBUG __first => __position_28
  if (__position_28 == _38)
    goto <bb 73>;
  else
    goto <bb 61>;

  # __new_finish_125 = PHI <__new_finish_214(42)>
<L22>:

  # __new_finish_120 = PHI <__new_finish_125(52), __new_finish_124(123)>
<L11>:
  _184 = __builtin_eh_pointer (11);
  __cxa_begin_catch (_184);
  # DEBUG __first => __new_finish_153
  # DEBUG __last => __new_finish_120
  # DEBUG __first => __new_finish_153
  # DEBUG __last => __new_finish_120
  # DEBUG __first => __new_finish_153
  if (__new_finish_153 == __new_finish_120)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  __cxa_rethrow ();

  <bb 55>:

  <bb 56>:
  # __new_finish_165 = PHI <__new_finish_153(55), __new_finish_188(59)>
  # DEBUG __first => __new_finish_165
  # DEBUG __r => __new_finish_165
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _186 = MEM[(char * *)__new_finish_165];
  # DEBUG this => D#3
  # DEBUG this => NULL
  _187 = &MEM[(const struct basic_string *)__new_finish_165].D.11539._M_local_buf;
  if (_186 != _187)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG D#185 => D#186
  # DEBUG this => NULL
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => D#3
  # DEBUG this => NULL
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _186
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _186
  # DEBUG this => D#177
  # DEBUG D.56567 => D#178
  operator delete (_186);

  <bb 58>:
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  MEM[(struct  &)__new_finish_165] ={v} {CLOBBER};
  __new_finish_188 = __new_finish_165 + 32;
  # DEBUG __first => __new_finish_188
  # DEBUG __first => __new_finish_188
  if (__new_finish_188 == __new_finish_120)
    goto <bb 54>;
  else
    goto <bb 59>;

  <bb 59>:
  goto <bb 56>;

<L13>:
  __cxa_end_catch ();
  resx 10

  <bb 61>:

  <bb 62>:
  # __position_129 = PHI <__position_28(61), __position_206(71)>
  # __new_finish_111 = PHI <__new_finish_36(61), __new_finish_207(71)>
  # DEBUG __cur => __new_finish_111
  # DEBUG __first => __position_129
  # DEBUG __r => __new_finish_111
  # DEBUG __p => NULL
  # DEBUG __value => __position_129
  # DEBUG D#14 => 32
  # DEBUG __p => NULL
  # DEBUG D.51121 => D#14
  if (__new_finish_111 != 0B)
    goto <bb 63>;
  else
    goto <bb 70>;

  <bb 63>:
  # DEBUG this => NULL
  # DEBUG __str => __position_129
  # DEBUG this => __position_129
  # DEBUG D#380 => &MEM[(const struct basic_string *)__position_129]._M_dataplus
  # DEBUG this => NULL
  _202 = &__new_finish_111->D.11539._M_local_buf;
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => _202
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)__new_finish_111]._M_p = _202;
  _203 = MEM[(char * *)__position_129];
  # DEBUG D#3 => __position_129
  # DEBUG this => D#3
  _204 = MEM[(long unsigned int *)__position_129 + 8B];
  # DEBUG D#1 => __position_129
  # DEBUG this => D#1
  _205 = _203 + _204;
  # DEBUG D#3 => __position_129
  # DEBUG this => D#3
  # DEBUG this => NULL
  # DEBUG __beg => _203
  # DEBUG __end => _205
  # DEBUG this => NULL
  # DEBUG __beg => _203
  # DEBUG __end => _205
  # DEBUG this => __new_finish_111
  # DEBUG __beg => _203
  # DEBUG __end => _205
  # DEBUG __ptr => _203
  _400 = _205 != 0B;
  _399 = _203 == 0B;
  _397 = _399 & _400;
  if (_397 != 0)
    goto <bb 125>;
  else
    goto <bb 127>;

  <bb 64>:
  _217 = std::__cxx11::basic_string<char>::_M_create (__new_finish_111, &__dnew, 0);

  <bb 65>:
  # DEBUG D#6 => __new_finish_111
  # DEBUG __p => _217
  # DEBUG this => D#6
  MEM[(char * *)__new_finish_111] = _217;
  __dnew.111_218 = __dnew;
  # DEBUG D#7 => __new_finish_111
  # DEBUG __capacity => __dnew.111_218
  # DEBUG this => D#7
  MEM[(size_type *)__new_finish_111 + 16B] = __dnew.111_218;
  # DEBUG D#3 => __new_finish_111
  # DEBUG this => D#3
  # DEBUG __p => _217
  # DEBUG __k1 => _203
  # DEBUG __k2 => _205
  # DEBUG __d => _217
  # DEBUG __s => _203
  # DEBUG __n => _204
  goto <bb 68>;

  <bb 66>:
  # DEBUG D#3 => __new_finish_111
  # DEBUG this => D#3
  # DEBUG __p => _202
  # DEBUG __k1 => _203
  # DEBUG __k2 => _205
  # DEBUG __d => _202
  # DEBUG __s => _203
  # DEBUG __n => _204
  if (_204 == 1)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  _220 = MEM[(const char_type &)_203];
  # DEBUG D#13 => _203
  # DEBUG __c1 => _202
  # DEBUG __c2 => D#13
  MEM[(char_type &)_202] = _220;
  goto <bb 69>;

  <bb 68>:
  # _385 = PHI <_202(66), _217(65)>
  # DEBUG D#3 => __new_finish_111
  # DEBUG this => D#3
  # DEBUG __p => _385
  # DEBUG __k1 => _203
  # DEBUG __k2 => _205
  # DEBUG __d => _385
  # DEBUG __s => _203
  # DEBUG __n => _204
  # DEBUG __s1 => _385
  # DEBUG __s2 => _203
  # DEBUG __n => _204
  __builtin_memcpy (_385, _203, _204);
  pretmp_389 = __dnew;
  pretmp_177 = MEM[(char * *)__new_finish_111];

  <bb 69>:
  # prephitmp_109 = PHI <_204(67), pretmp_389(68)>
  # prephitmp_141 = PHI <_202(67), pretmp_177(68)>
  # DEBUG D#752 => __dnew
  # DEBUG this => __new_finish_111
  # DEBUG __n => D#752
  # DEBUG D#5 => __new_finish_111
  # DEBUG __length => D#752
  # DEBUG this => D#5
  MEM[(size_type *)__new_finish_111 + 8B] = prephitmp_109;
  # DEBUG D#3 => __new_finish_111
  # DEBUG this => D#3
  _223 = prephitmp_141 + prephitmp_109;
  # DEBUG __c1 => _223
  # DEBUG __c2 => D#13
  MEM[(char_type &)_223] = 0;
  __dnew ={v} {CLOBBER};

  <bb 70>:
  __position_206 = __position_129 + 32;
  # DEBUG __first => __position_206
  __new_finish_207 = __new_finish_111 + 32;
  # DEBUG __cur => __new_finish_207
  # DEBUG __cur => __new_finish_207
  # DEBUG __first => __position_206
  if (_38 == __position_206)
    goto <bb 72>;
  else
    goto <bb 71>;

  <bb 71>:
  goto <bb 62>;

  <bb 72>:
  # __new_finish_126 = PHI <__new_finish_207(70)>
  pretmp_114 = this_7(D)->D.36723._M_impl._M_finish;

  <bb 73>:
  # __new_finish_110 = PHI <__new_finish_126(72), __new_finish_36(51)>
  # prephitmp_115 = PHI <pretmp_114(72), _38(51)>
  # DEBUG __new_finish => NULL
  # DEBUG D#423 => &this_7(D)->D.36723
  # DEBUG this => D#423
  # DEBUG D#751 => this_7(D)->D.36723._M_impl._M_finish
  __first_42 = this_7(D)->D.36723._M_impl._M_start;
  # DEBUG __first => __first_42
  # DEBUG __last => D#751
  # DEBUG __first => __first_42
  if (__first_42 == prephitmp_115)
    goto <bb 90>;
  else
    goto <bb 84>;

  # __new_finish_224 = PHI <__new_finish_111(64)>
<L23>:

  # __new_finish_121 = PHI <__new_finish_224(74), __new_finish_201(126)>
<L14>:
  _208 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_208);
  # DEBUG __first => __new_finish_36
  # DEBUG __last => __new_finish_121
  # DEBUG __first => __new_finish_36
  # DEBUG __last => __new_finish_121
  # DEBUG __first => __new_finish_36
  if (__new_finish_36 == __new_finish_121)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  __cxa_rethrow ();

  <bb 77>:

  <bb 78>:
  # __new_finish_93 = PHI <__new_finish_36(77), __new_finish_212(81)>
  # DEBUG __first => __new_finish_93
  # DEBUG __r => __new_finish_93
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _210 = MEM[(char * *)__new_finish_93];
  # DEBUG this => D#3
  # DEBUG this => NULL
  _211 = &MEM[(const struct basic_string *)__new_finish_93].D.11539._M_local_buf;
  if (_210 != _211)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  # DEBUG D#185 => D#186
  # DEBUG this => NULL
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => D#3
  # DEBUG this => NULL
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _210
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _210
  # DEBUG this => D#177
  # DEBUG D.56641 => D#178
  operator delete (_210);

  <bb 80>:
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  MEM[(struct  &)__new_finish_93] ={v} {CLOBBER};
  __new_finish_212 = __new_finish_93 + 32;
  # DEBUG __first => __new_finish_212
  # DEBUG __first => __new_finish_212
  if (__new_finish_121 == __new_finish_212)
    goto <bb 76>;
  else
    goto <bb 81>;

  <bb 81>:
  goto <bb 78>;

<L16>:
  __cxa_end_catch ();
  resx 13

<L24>:
  goto <bb 99> (<L5>);

  <bb 84>:

  <bb 85>:
  # __first_143 = PHI <__first_42(84), __first_75(88)>
  # DEBUG __first => __first_143
  # DEBUG __r => __first_143
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _73 = MEM[(char * *)__first_143];
  # DEBUG this => D#3
  # DEBUG this => NULL
  _74 = &MEM[(const struct basic_string *)__first_143].D.11539._M_local_buf;
  if (_73 != _74)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG D#185 => D#186
  # DEBUG this => NULL
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => D#3
  # DEBUG this => NULL
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _73
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _73
  # DEBUG this => D#177
  # DEBUG D.51934 => D#178
  operator delete (_73);

  <bb 87>:
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  MEM[(struct  &)__first_143] ={v} {CLOBBER};
  __first_75 = __first_143 + 32;
  # DEBUG __first => __first_75
  # DEBUG __first => __first_75
  if (__first_75 == prephitmp_115)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  goto <bb 85>;

  <bb 89>:
  pretmp_100 = this_7(D)->D.36723._M_impl._M_start;

  <bb 90>:
  # prephitmp_101 = PHI <pretmp_100(89), __first_42(73)>
  # DEBUG D#430 => this_7(D)->D.36723._M_impl._M_end_of_storage
  # DEBUG D#429 => (long int) D#430
  # DEBUG D#750 => this_7(D)->D.36723._M_impl._M_start
  # DEBUG D#428 => (long int) D#750
  # DEBUG D#427 => D#429 - D#428
  # DEBUG D#426 => D#427 /[ex] 32
  # DEBUG D#425 => &this_7(D)->D.36723
  # DEBUG D#246 => D#425
  # DEBUG D#247 => (long unsigned int) D#426
  # DEBUG __p => D#750
  # DEBUG this => D#246
  # DEBUG __n => D#247
  # DEBUG D#245 => D#247
  # DEBUG D#244 => D#246
  if (prephitmp_101 != 0B)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 91>:
  # DEBUG D#243 => &D#244->_M_impl
  # DEBUG D#241 => D#243
  # DEBUG D#242 => D#245
  # DEBUG __p => D#750
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => D#750
  # DEBUG this => D#237
  # DEBUG D.51915 => D#238
  operator delete (prephitmp_101);

  <bb 92>:
  this_7(D)->D.36723._M_impl._M_start = __new_finish_153;
  this_7(D)->D.36723._M_impl._M_finish = __new_finish_110;
  _48 = __new_finish_153 + prephitmp_104;
  this_7(D)->D.36723._M_impl._M_end_of_storage = _48;

  <bb 93>:
  return;

<L19>:

<L3>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  _76 = MEM[(char * *)&__x_copy];
  # DEBUG D#3 => &__x_copy
  # DEBUG this => D#3
  # DEBUG this => &__x_copy
  if (&__x_copy.D.11539._M_local_buf != _76)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  # DEBUG D#186 => __x_copy.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &__x_copy
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &__x_copy
  # DEBUG this => D#3
  # DEBUG this => &__x_copy
  # DEBUG D#183 => &__x_copy._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _76
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _76
  # DEBUG this => D#177
  # DEBUG D.51951 => D#178
  operator delete (_76);

  <bb 97>:
  # DEBUG D#187 => &__x_copy._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  resx 2

<L21>:

  # __new_finish_1 = PHI <__new_finish_153(98), __new_finish_36(83)>
<L5>:
  # DEBUG __new_finish => __new_finish_1
  _50 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_50);
  if (__new_finish_1 == 0B)
    goto <bb 102>;
  else
    goto <bb 100>;

  <bb 100>:
  # DEBUG __first => __new_finish_153
  if (__new_finish_1 == __new_finish_153)
    goto <bb 101>;
  else
    goto <bb 106>;

  <bb 101>:
  goto <bb 111>;

  <bb 102>:
  pretmp_106 = &_32->D.11539._M_local_buf;

  <bb 103>:
  # prephitmp_113 = PHI <pretmp_106(102), pretmp_107(128), _21(129)>
  # DEBUG __new_finish => 0B
  # DEBUG D#431 => &this_7(D)->D.36723._M_impl
  # DEBUG D#194 => D#431
  # DEBUG __p => _32
  # DEBUG __a => D#194
  # DEBUG D#193 => D#194
  # DEBUG D#192 => D#193
  # DEBUG __p => _32
  # DEBUG this => D#192
  # DEBUG this => _32
  # DEBUG this => _32
  # DEBUG this => _32
  _23 = MEM[(char * *)_32];
  # DEBUG D#3 => _32
  # DEBUG this => D#3
  # DEBUG this => _32
  if (_23 != prephitmp_113)
    goto <bb 104>;
  else
    goto <bb 105>;

  <bb 104>:
  # DEBUG D#186 => _32->D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => _32
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => _32
  # DEBUG this => D#3
  # DEBUG this => _32
  # DEBUG D#183 => &_32->_M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _23
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _23
  # DEBUG this => D#177
  # DEBUG D.51970 => D#178
  operator delete (_23);

  <bb 105>:
  # DEBUG D#187 => &_32->_M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  MEM[(struct  &)_32] ={v} {CLOBBER};
  goto <bb 111>;

  <bb 106>:

  <bb 107>:
  # __new_finish_130 = PHI <__new_finish_153(106), __new_finish_80(110)>
  # DEBUG __first => __new_finish_130
  # DEBUG __r => __new_finish_130
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _78 = MEM[(char * *)__new_finish_130];
  # DEBUG this => D#3
  # DEBUG this => NULL
  _79 = &MEM[(const struct basic_string *)__new_finish_130].D.11539._M_local_buf;
  if (_78 != _79)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  # DEBUG D#185 => D#186
  # DEBUG this => NULL
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => D#3
  # DEBUG this => NULL
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _78
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _78
  # DEBUG this => D#177
  # DEBUG D.51994 => D#178
  operator delete (_78);

  <bb 109>:
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  MEM[(struct  &)__new_finish_130] ={v} {CLOBBER};
  __new_finish_80 = __new_finish_130 + 32;
  # DEBUG __first => __new_finish_80
  # DEBUG __first => __new_finish_80
  if (__new_finish_1 == __new_finish_80)
    goto <bb 101>;
  else
    goto <bb 110>;

  <bb 110>:
  goto <bb 107>;

  <bb 111>:
  # DEBUG D#432 => &this_7(D)->D.36723
  # DEBUG D#246 => D#432
  # DEBUG __p => NULL
  # DEBUG this => D#246
  # DEBUG __n => D#247
  # DEBUG D#245 => D#247
  # DEBUG D#244 => D#246
  if (__new_finish_153 != 0B)
    goto <bb 112>;
  else
    goto <bb 113>;

  <bb 112>:
  # DEBUG D#243 => &D#244->_M_impl
  # DEBUG D#241 => D#243
  # DEBUG D#242 => D#245
  # DEBUG __p => NULL
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => NULL
  # DEBUG this => D#237
  # DEBUG D.52011 => D#238
  operator delete (__new_finish_153);

  <bb 113>:
  __cxa_rethrow ();

<L10>:
  __cxa_end_catch ();
  resx 7

  <bb 115>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 116>:
  # DEBUG __first => _40
  # DEBUG __last => _37
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _40
  # DEBUG __last => _37
  __dnew = _39;
  if (_39 > 15)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 117>:
  # DEBUG __first => _34
  # DEBUG __last => _27
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _34
  # DEBUG __last => _27
  __dnew = _33;
  if (_33 > 15)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 118>:
  # DEBUG __len => NULL
  # DEBUG this => this_7(D)
  # DEBUG D#131 => &this_7(D)->D.36723._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#131
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.40492
  # DEBUG this => &__position
  _406 = (long int) __position_28;
  # DEBUG this => &D.40492
  _407 = _406 - _156;
  # DEBUG D#436 => _407 /[ex] 32
  # DEBUG __elems_before => (const size_type) D#436
  # DEBUG D#435 => &this_7(D)->D.36723
  # DEBUG D#416 => D#435
  # DEBUG __n => NULL
  # DEBUG this => D#416
  # DEBUG D#415 => D#416
  goto <bb 29>;

  <bb 119>:
  # __len_59 = PHI <__len_164(27), 1(25)>
  # DEBUG __len => __len_59
  # DEBUG D#38 => this_7(D)
  # DEBUG this => D#38
  # DEBUG this => D#38
  # DEBUG D#408 => this_7(D)
  # DEBUG this => D#408
  # DEBUG D#407 => D#408
  # DEBUG D#406 => &D#407->D.36723
  # DEBUG this => D#406
  # DEBUG __a => D#405
  # DEBUG D#404 => D#405
  # DEBUG D#403 => D#404
  # DEBUG this => D#403
  # DEBUG __len => NULL
  # DEBUG this => this_7(D)
  # DEBUG D#131 => &this_7(D)->D.36723._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#131
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.40492
  # DEBUG this => &__position
  _395 = (long int) __position_28;
  # DEBUG this => &D.40492
  _402 = _395 - _156;
  # DEBUG D#436 => _402 /[ex] 32
  # DEBUG __elems_before => (const size_type) D#436
  # DEBUG D#435 => &this_7(D)->D.36723
  # DEBUG D#416 => D#435
  # DEBUG __n => NULL
  # DEBUG this => D#416
  # DEBUG D#415 => D#416
  if (__len_59 != 0)
    goto <bb 28>;
  else
    goto <bb 30>;

  <bb 120>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 121>:
  # DEBUG __first => _65
  # DEBUG __last => _67
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _65
  # DEBUG __last => _67
  __dnew = _66;
  if (_66 > 15)
    goto <bb 32>;
  else
    goto <bb 34>;

  <bb 122>:
  # __new_finish_124 = PHI <__new_finish_214(41)>
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L25>:
  goto <bb 53> (<L11>);

  <bb 124>:
  # DEBUG __first => _179
  # DEBUG __last => _181
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _179
  # DEBUG __last => _181
  __dnew = _180;
  if (_180 > 15)
    goto <bb 42>;
  else
    goto <bb 44>;

  <bb 125>:
  # __new_finish_201 = PHI <__new_finish_111(63)>
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L26>:
  goto <bb 75> (<L14>);

  <bb 127>:
  # DEBUG __first => _203
  # DEBUG __last => _205
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _203
  # DEBUG __last => _205
  __dnew = _204;
  if (_204 > 15)
    goto <bb 64>;
  else
    goto <bb 66>;

<L17>:
  # DEBUG __new_finish => 0B
  _232 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_232);
  pretmp_107 = &_32->D.11539._M_local_buf;
  goto <bb 103>;

<L18>:
  # DEBUG __new_finish => __new_finish_153
  _160 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_160);
  if (__new_finish_153 == 0B)
    goto <bb 103>;
  else
    goto <bb 101>;

}



;; Function std::vector<std::__cxx11::basic_string<char> > tokenize_str(const string&) (_Z12tokenize_strRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1752, decl_uid=35337, cgraph_uid=438, symbol_order=440)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::vector<std::__cxx11::basic_string<char> > tokenize_str(const string&) (const struct string & data)
{
  struct basic_string * __first;
  size_type __dnew;
  struct __normal_iterator D.56938;
  size_type __dnew;
  const char * __start;
  size_type __dnew;
  struct __normal_iterator D.56824;
  struct string token;
  static const char __PRETTY_FUNCTION__[75] = "std::vector<std::__cxx11::basic_string<char> > tokenize_str(const string&)";
  size_t curr;
  int nested;
  char * const _14;
  char _17;
  char * const _19;
  char _22;
  const size_type _24;
  long unsigned int _26;
  char * const pretmp_27;
  char * const _29;
  size_type _37;
  const char & _38;
  char * const _39;
  size_t pretmp_46;
  size_t pretmp_47;
  size_t prephitmp_48;
  size_type pretmp_49;
  struct basic_string * pretmp_52;
  struct basic_string * prephitmp_53;
  size_t pretmp_54;
  char * const _57;
  bool _58;
  char * const _60;
  const size_type _74;
  long unsigned int _78;
  size_type pretmp_79;
  const char * _80;
  char * const prephitmp_82;
  char * _86;
  long unsigned int __dnew.111_87;
  const char_type _89;
  const size_type _91;
  char * _92;
  struct basic_string * _93;
  struct basic_string * _94;
  char * _95;
  char * const _96;
  const size_type _97;
  char * _98;
  struct basic_string * _100;
  char * _105;
  long unsigned int __dnew.111_106;
  const char_type _108;
  char * _111;
  struct basic_string * _112;
  char * const pretmp_114;
  char * const _115;
  const char * _116;
  size_type prephitmp_120;
  struct basic_string * prephitmp_123;
  char * const prephitmp_128;
  size_type prephitmp_130;
  bool _133;
  struct basic_string * pretmp_141;
  bool _144;
  bool _179;
  bool _181;
  bool _186;
  bool _191;
  bool _192;
  bool _193;
  size_type iftmp.174_194;

  <bb 2>:
  # DEBUG this => values_13(D)
  # DEBUG D#294 => &values_13(D)->D.36723
  # DEBUG this => D#294
  # DEBUG D#293 => &D#294->_M_impl
  # DEBUG this => D#293
  # DEBUG this => D#293
  # DEBUG this => D#293
  MEM[(struct _Vector_impl *)values_13(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)values_13(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)values_13(D)]._M_end_of_storage = 0B;
  # DEBUG this => data_15(D)
  _24 = MEM[(long unsigned int *)data_15(D) + 8B];
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  if (_24 == 0)
    goto <bb 42>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG this => data_15(D)
  # DEBUG __pos => 0
  _14 = MEM[(char * *)data_15(D)];
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  _17 = MEM[(const char &)_14];
  if (_17 != 123)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:
  # DEBUG this => values_13(D)
  # DEBUG __x => data_15(D)
  # DEBUG this => values_13(D)
  # DEBUG D#130 => &values_13(D)->D.36723._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#130
  MEM[(struct __normal_iterator *)&D.56824] = 0B;
  std::vector<std::__cxx11::basic_string<char> >::_M_insert_aux (values_13(D), D.56824, data_15(D));
  goto <bb 42>;

  <bb 6>:
  # curr_1 = PHI <1(4), curr_2(71)>
  # nested_3 = PHI <0(4), nested_4(71)>
  # curr_5 = PHI <1(4), prephitmp_48(71)>
  # DEBUG curr => curr_5
  # DEBUG nested => nested_3
  # DEBUG start => curr_1
  # DEBUG this => data_15(D)
  # DEBUG __s => "{,}"
  # DEBUG __pos => curr_5
  # DEBUG __s => "{,}"
  _37 = std::__cxx11::basic_string<char>::find_first_of (data_15(D), "{,}", curr_5, 3);
  goto <bb 8>;

<L30>:
  goto <bb 49> (<L28>);

  <bb 8>:
  # DEBUG curr => _37
  if (_37 != 18446744073709551615)
    goto <bb 9>;
  else
    goto <bb 40>;

  <bb 9>:
  # DEBUG this => data_15(D)
  # DEBUG __pos => _37
  _19 = MEM[(char * *)data_15(D)];
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  _38 = _19 + _37;
  _22 = *_38;
  if (_22 == 123)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  nested_23 = nested_3 + 1;
  # DEBUG nested => nested_23
  pretmp_54 = _37 + 1;
  goto <bb 39>;

  <bb 11>:
  # DEBUG this => data_15(D)
  # DEBUG __pos => _37
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  _181 = nested_3 != 0;
  _186 = _22 == 125;
  _179 = _181 & _186;
  if (_179 != 0)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 12>:
  if (curr_1 < _37)
    goto <bb 13>;
  else
    goto <bb 38>;

  <bb 13>:
  _26 = _37 - curr_1;
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __n => _26
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __s => "basic_string::substr"
  _74 = MEM[(long unsigned int *)data_15(D) + 8B];
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  if (curr_1 > _74)
    goto <bb 14>;
  else
    goto <bb 16>;

  <bb 14>:
  # curr_88 = PHI <curr_1(13)>
  # _91 = PHI <_74(13)>
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  std::__throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_88, _91);

<L31>:
  goto <bb 49> (<L28>);

  <bb 16>:
  # DEBUG this => &token
  # DEBUG __str => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __n => _26
  # DEBUG this => D#42
  # DEBUG D#41 => D#42
  # DEBUG this => D#41
  # DEBUG this => &token
  # DEBUG D#401 => &token._M_dataplus
  # DEBUG this => D#401
  # DEBUG __dat => &token.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#401
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&token]._M_p = &token.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __s => "basic_string::basic_string"
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  __start_77 = _19 + curr_1;
  # DEBUG __start => __start_77
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __off => _26
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  _78 = _74 - curr_1;
  # DEBUG __testoff => _78 > _26
  iftmp.174_194 = MIN_EXPR <_26, _78>;
  _80 = __start_77 + iftmp.174_194;
  # DEBUG this => &token
  # DEBUG __beg => __start_77
  # DEBUG __end => _80
  # DEBUG this => &token
  # DEBUG __beg => __start_77
  # DEBUG __end => _80
  # DEBUG this => &token
  # DEBUG __beg => __start_77
  # DEBUG __end => _80
  # DEBUG __ptr => __start_77
  _144 = _80 != 0B;
  _58 = __start_77 == 0B;
  _133 = _58 & _144;
  if (_133 != 0)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 17>:
  _86 = std::__cxx11::basic_string<char>::_M_create (&token, &__dnew, 0);
  goto <bb 19>;

<L32>:
  goto <bb 49> (<L28>);

  <bb 19>:
  # DEBUG D#6 => &token
  # DEBUG __p => _86
  # DEBUG this => D#6
  MEM[(char * *)&token] = _86;
  __dnew.111_87 = __dnew;
  # DEBUG D#7 => &token
  # DEBUG __capacity => __dnew.111_87
  # DEBUG this => D#7
  MEM[(size_type *)&token + 16B] = __dnew.111_87;
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __p => _86
  # DEBUG __k1 => __start_77
  # DEBUG __k2 => _80
  # DEBUG __d => _86
  # DEBUG __s => __start_77
  # DEBUG __n => iftmp.174_194
  goto <bb 22>;

  <bb 20>:
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __p => &token.D.11539._M_local_buf
  # DEBUG __k1 => __start_77
  # DEBUG __k2 => _80
  # DEBUG __d => &token.D.11539._M_local_buf
  # DEBUG __s => __start_77
  # DEBUG __n => iftmp.174_194
  if (iftmp.174_194 == 1)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _89 = MEM[(const char_type &)__start_77];
  # DEBUG D#13 => __start_77
  # DEBUG __c1 => &token.D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&token + 16] = _89;
  goto <bb 23>;

  <bb 22>:
  # _60 = PHI <&token.D.11539._M_local_buf(20), _86(19)>
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __p => _60
  # DEBUG __k1 => __start_77
  # DEBUG __k2 => _80
  # DEBUG __d => _60
  # DEBUG __s => __start_77
  # DEBUG __n => iftmp.174_194
  # DEBUG __s1 => _60
  # DEBUG __s2 => __start_77
  # DEBUG __n => iftmp.174_194
  __builtin_memcpy (_60, __start_77, iftmp.174_194);
  pretmp_49 = __dnew;
  pretmp_114 = MEM[(char * *)&token];

  <bb 23>:
  # prephitmp_130 = PHI <iftmp.174_194(21), pretmp_49(22)>
  # prephitmp_128 = PHI <&token.D.11539._M_local_buf(21), pretmp_114(22)>
  # DEBUG D#780 => __dnew
  # DEBUG this => &token
  # DEBUG __n => D#780
  # DEBUG D#5 => &token
  # DEBUG __length => D#780
  # DEBUG this => D#5
  MEM[(size_type *)&token + 8B] = prephitmp_130;
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  _92 = prephitmp_128 + prephitmp_130;
  # DEBUG __c1 => _92
  # DEBUG __c2 => D#13
  MEM[(char_type &)_92] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => values_13(D)
  # DEBUG __x => &token
  _93 = values_13(D)->D.36723._M_impl._M_finish;
  _94 = values_13(D)->D.36723._M_impl._M_end_of_storage;
  if (_93 != _94)
    goto <bb 24>;
  else
    goto <bb 33>;

  <bb 24>:
  # DEBUG D#437 => &values_13(D)->D.36723._M_impl
  # DEBUG D#392 => D#437
  # DEBUG __p => _93
  # DEBUG __arg => &token
  # DEBUG __a => D#392
  # DEBUG D#391 => D#392
  # DEBUG D#390 => D#391
  # DEBUG __p => _93
  # DEBUG __val => &token
  # DEBUG this => D#390
  # DEBUG D#14 => 32
  # DEBUG __p => _93
  # DEBUG D.51035 => D#14
  if (_93 != 0B)
    goto <bb 25>;
  else
    goto <bb 32>;

  <bb 25>:
  # DEBUG this => _93
  # DEBUG __str => &token
  # DEBUG this => &token
  # DEBUG D#380 => &token._M_dataplus
  # DEBUG this => _93
  _95 = &_93->D.11539._M_local_buf;
  # DEBUG D#381 => &_93->_M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => _95
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)_93]._M_p = _95;
  _96 = MEM[(char * *)&token];
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  _97 = MEM[(long unsigned int *)&token + 8B];
  # DEBUG D#1 => &token
  # DEBUG this => D#1
  _98 = _96 + _97;
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => _93
  # DEBUG __beg => _96
  # DEBUG __end => _98
  # DEBUG this => _93
  # DEBUG __beg => _96
  # DEBUG __end => _98
  # DEBUG this => _93
  # DEBUG __beg => _96
  # DEBUG __end => _98
  # DEBUG __ptr => _96
  _192 = _98 != 0B;
  _191 = _96 == 0B;
  _193 = _191 & _192;
  if (_193 != 0)
    goto <bb 65>;
  else
    goto <bb 67>;

  <bb 26>:
  _105 = std::__cxx11::basic_string<char>::_M_create (_93, &__dnew, 0);

  <bb 27>:
  # DEBUG D#6 => _93
  # DEBUG __p => _105
  # DEBUG this => D#6
  MEM[(char * *)_93] = _105;
  __dnew.111_106 = __dnew;
  # DEBUG D#7 => _93
  # DEBUG __capacity => __dnew.111_106
  # DEBUG this => D#7
  MEM[(size_type *)_93 + 16B] = __dnew.111_106;
  # DEBUG D#3 => _93
  # DEBUG this => D#3
  # DEBUG __p => _105
  # DEBUG __k1 => _96
  # DEBUG __k2 => _98
  # DEBUG __d => _105
  # DEBUG __s => _96
  # DEBUG __n => _97
  goto <bb 30>;

  <bb 28>:
  # DEBUG D#3 => _93
  # DEBUG this => D#3
  # DEBUG __p => _95
  # DEBUG __k1 => _96
  # DEBUG __k2 => _98
  # DEBUG __d => _95
  # DEBUG __s => _96
  # DEBUG __n => _97
  if (_97 == 1)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _108 = MEM[(const char_type &)_96];
  # DEBUG D#13 => _96
  # DEBUG __c1 => _95
  # DEBUG __c2 => D#13
  MEM[(char_type &)_95] = _108;
  goto <bb 31>;

  <bb 30>:
  # _57 = PHI <_95(28), _105(27)>
  # DEBUG D#3 => _93
  # DEBUG this => D#3
  # DEBUG __p => _57
  # DEBUG __k1 => _96
  # DEBUG __k2 => _98
  # DEBUG __d => _57
  # DEBUG __s => _96
  # DEBUG __n => _97
  # DEBUG __s1 => _57
  # DEBUG __s2 => _96
  # DEBUG __n => _97
  __builtin_memcpy (_57, _96, _97);
  pretmp_79 = __dnew;
  pretmp_27 = MEM[(char * *)_93];

  <bb 31>:
  # prephitmp_120 = PHI <_97(29), pretmp_79(30)>
  # prephitmp_82 = PHI <_95(29), pretmp_27(30)>
  # DEBUG D#779 => __dnew
  # DEBUG this => _93
  # DEBUG __n => D#779
  # DEBUG D#5 => _93
  # DEBUG __length => D#779
  # DEBUG this => D#5
  MEM[(size_type *)_93 + 8B] = prephitmp_120;
  # DEBUG D#3 => _93
  # DEBUG this => D#3
  _111 = prephitmp_82 + prephitmp_120;
  # DEBUG __c1 => _111
  # DEBUG __c2 => D#13
  MEM[(char_type &)_111] = 0;
  __dnew ={v} {CLOBBER};
  pretmp_141 = values_13(D)->D.36723._M_impl._M_finish;

  <bb 32>:
  # prephitmp_123 = PHI <_93(24), pretmp_141(31)>

  <bb 69>:
  _100 = prephitmp_123 + 32;
  values_13(D)->D.36723._M_impl._M_finish = _100;
  goto <bb 35>;

  <bb 33>:
  # DEBUG this => values_13(D)
  # DEBUG D#130 => &values_13(D)->D.36723._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#130
  MEM[(struct __normal_iterator *)&D.56938] = _93;
  std::vector<std::__cxx11::basic_string<char> >::_M_insert_aux (values_13(D), D.56938, &token);
  goto <bb 35>;

<L34>:
  goto <bb 44> (<L26>);

  <bb 35>:
  # DEBUG this => &token
  # DEBUG this => &token
  # DEBUG this => &token
  _39 = MEM[(char * *)&token];
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  if (&token.D.11539._M_local_buf != _39)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG D#186 => token.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &token
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  # DEBUG D#183 => &token._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _39
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _39
  # DEBUG this => D#177
  # DEBUG D.52071 => D#178
  operator delete (_39);

  <bb 37>:
  # DEBUG D#187 => &token._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  token ={v} {CLOBBER};

  <bb 38>:

  <bb 70>:
  curr_33 = _37 + 1;
  # DEBUG start => curr_33

  <bb 39>:
  # curr_2 = PHI <curr_1(10), curr_1(59), curr_1(61), curr_33(70)>
  # nested_4 = PHI <nested_23(10), nested_25(59), nested_3(61), 0(70)>
  # prephitmp_48 = PHI <pretmp_54(10), pretmp_46(59), pretmp_47(61), curr_33(70)>

  <bb 71>:
  # DEBUG nested => nested_4
  # DEBUG start => curr_2
  # DEBUG curr => _37 + 1
  goto <bb 6>;

  <bb 40>:
  # nested_90 = PHI <nested_3(8)>
  if (nested_90 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  __assert_fail ("!nested", "config_utils.cpp", 362, &__PRETTY_FUNCTION__);

  <bb 42>:

  <bb 72>:
  return values_13(D);

<L33>:

<L26>:
  # DEBUG this => &token
  # DEBUG this => &token
  # DEBUG this => &token
  _29 = MEM[(char * *)&token];
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  if (&token.D.11539._M_local_buf != _29)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#186 => token.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &token
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  # DEBUG D#183 => &token._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _29
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _29
  # DEBUG this => D#177
  # DEBUG D.52086 => D#178
  operator delete (_29);

  <bb 46>:
  # DEBUG D#187 => &token._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  resx 3

<L35>:
  goto <bb 49> (<L28>);

<L29>:

<L28>:
  token ={v} {CLOBBER};
  # DEBUG this => values_13(D)
  # DEBUG D#255 => &values_13(D)->D.36723
  # DEBUG this => D#255
  _112 = values_13(D)->D.36723._M_impl._M_finish;
  __first_113 = values_13(D)->D.36723._M_impl._M_start;
  # DEBUG __first => __first_113
  # DEBUG __last => _112
  # DEBUG __first => __first_113
  if (_112 == __first_113)
    goto <bb 56>;
  else
    goto <bb 50>;

  <bb 50>:

  <bb 51>:
  # __first_121 = PHI <__first_113(50), __first_117(54)>
  # DEBUG __first => __first_121
  # DEBUG __r => __first_121
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _115 = MEM[(char * *)__first_121];
  # DEBUG this => D#3
  # DEBUG this => NULL
  _116 = &MEM[(const struct basic_string *)__first_121].D.11539._M_local_buf;
  if (_115 != _116)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  # DEBUG D#185 => D#186
  # DEBUG this => NULL
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => D#3
  # DEBUG this => NULL
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _115
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _115
  # DEBUG this => D#177
  # DEBUG D.56986 => D#178
  operator delete (_115);

  <bb 53>:
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  MEM[(struct  &)__first_121] ={v} {CLOBBER};
  __first_117 = __first_121 + 32;
  # DEBUG __first => __first_117
  # DEBUG __first => __first_117
  if (_112 == __first_117)
    goto <bb 55>;
  else
    goto <bb 54>;

  <bb 54>:
  goto <bb 51>;

  <bb 55>:

  <bb 68>:
  pretmp_52 = MEM[(struct _Vector_base *)values_13(D)]._M_impl._M_start;

  <bb 56>:
  # prephitmp_53 = PHI <pretmp_52(68), __first_113(49)>
  # DEBUG D#256 => &values_13(D)->D.36723
  # DEBUG this => D#256
  # DEBUG D#253 => D#256->_M_impl._M_end_of_storage
  # DEBUG D#252 => (long int) D#253
  # DEBUG D#778 => MEM[(struct _Vector_base *)values_13(D)]._M_impl._M_start
  # DEBUG D#251 => (long int) D#778
  # DEBUG D#250 => D#252 - D#251
  # DEBUG D#249 => D#250 /[ex] 32
  # DEBUG D#246 => D#256
  # DEBUG D#247 => (long unsigned int) D#249
  # DEBUG __p => D#778
  # DEBUG this => D#246
  # DEBUG __n => D#247
  # DEBUG D#245 => D#247
  # DEBUG D#244 => D#246
  if (prephitmp_53 != 0B)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG D#243 => &D#244->_M_impl
  # DEBUG D#241 => D#243
  # DEBUG D#242 => D#245
  # DEBUG __p => D#778
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => D#778
  # DEBUG this => D#237
  # DEBUG D.57002 => D#238
  operator delete (prephitmp_53);

  <bb 58>:
  # DEBUG D#248 => &D#256->_M_impl
  # DEBUG this => D#248
  # DEBUG this => D#248
  # DEBUG this => D#248
  resx 1

  <bb 59>:
  nested_25 = nested_3 + -1;
  # DEBUG nested => nested_25
  pretmp_46 = _37 + 1;
  goto <bb 39>;

  <bb 60>:
  if (nested_3 == 0)
    goto <bb 12>;
  else
    goto <bb 61>;

  <bb 61>:
  pretmp_47 = _37 + 1;
  goto <bb 39>;

  <bb 62>:
  # DEBUG __first => __start_77
  # DEBUG __last => _80
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => __start_77
  # DEBUG __last => _80
  __dnew = iftmp.174_194;
  if (iftmp.174_194 > 15)
    goto <bb 17>;
  else
    goto <bb 20>;

  <bb 63>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L36>:
  goto <bb 49> (<L28>);

  <bb 65>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L37>:
  goto <bb 44> (<L26>);

  <bb 67>:
  # DEBUG __first => _96
  # DEBUG __last => _98
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _96
  # DEBUG __last => _98
  __dnew = _97;
  if (_97 > 15)
    goto <bb 26>;
  else
    goto <bb 28>;

}



;; Function std::vector<int> tokenize_int(const string&) (_Z12tokenize_intRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1753, decl_uid=35339, cgraph_uid=439, symbol_order=441)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::vector<int> tokenize_int(const string&) (const struct string & data)
{
  struct __normal_iterator D.57191;
  size_type __dnew;
  const char * __start;
  struct __normal_iterator D.57120;
  struct string token;
  static const char __PRETTY_FUNCTION__[45] = "std::vector<int> tokenize_int(const string&)";
  size_t curr;
  int nested;
  const value_type D.38553;
  const value_type D.38546;
  char * const _14;
  const size_type _16;
  char _18;
  int _19;
  bool _20;
  const size_type _22;
  char * const _25;
  long int _26;
  char _27;
  int _29;
  long unsigned int _31;
  long int _33;
  char * const _37;
  int * _40;
  size_type _47;
  const char & _48;
  char * const _49;
  char * const _50;
  char * const prephitmp_52;
  size_t prephitmp_60;
  size_type pretmp_61;
  size_type prephitmp_62;
  char * const pretmp_63;
  size_t pretmp_66;
  size_t pretmp_67;
  size_t pretmp_68;
  int * _70;
  int * _71;
  int * _73;
  bool _75;
  long unsigned int _77;
  const size_type _78;
  const char * _79;
  bool _84;
  char * _85;
  long unsigned int __dnew.111_86;
  const char_type _88;
  char * _91;
  int * _92;
  int * _93;
  char * const _94;
  int * _95;
  size_type iftmp.174_142;
  bool _146;
  bool _162;
  bool _165;

  <bb 2>:
  # DEBUG this => values_13(D)
  # DEBUG D#296 => &values_13(D)->D.37474
  # DEBUG this => D#296
  # DEBUG D#295 => &D#296->_M_impl
  # DEBUG this => D#295
  # DEBUG this => D#295
  # DEBUG this => D#295
  MEM[(struct _Vector_impl *)values_13(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)values_13(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)values_13(D)]._M_end_of_storage = 0B;
  # DEBUG this => data_15(D)
  _16 = MEM[(long unsigned int *)data_15(D) + 8B];
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  if (_16 == 0)
    goto <bb 40>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG this => data_15(D)
  # DEBUG __pos => 0
  _14 = MEM[(char * *)data_15(D)];
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  _18 = MEM[(const char &)_14];
  if (_18 != 123)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 11>;

  <bb 5>:
  # DEBUG this => data_15(D)
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  # DEBUG __nptr => _14
  _33 = strtol (_14, 0B, 10);
  _29 = (int) _33;
  D.38546 = _29;
  # DEBUG this => values_13(D)
  # DEBUG __x => &D.38546
  _70 = values_13(D)->D.37474._M_impl._M_finish;
  _71 = values_13(D)->D.37474._M_impl._M_end_of_storage;
  if (_70 != _71)
    goto <bb 6>;
  else
    goto <bb 9>;

  <bb 6>:
  # DEBUG D#526 => &values_13(D)->D.37474._M_impl
  # DEBUG D#134 => D#526
  # DEBUG __p => _70
  # DEBUG __arg => &D.38546
  # DEBUG __a => D#134
  # DEBUG D#133 => D#134
  # DEBUG D#132 => D#133
  # DEBUG __p => _70
  # DEBUG __val => &D.38546
  # DEBUG this => D#132
  # DEBUG D#14 => 4
  # DEBUG __p => _70
  # DEBUG D.48025 => D#14
  if (_70 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  *_70 = _29;

  <bb 8>:

  <bb 56>:
  _73 = _70 + 4;
  values_13(D)->D.37474._M_impl._M_finish = _73;
  goto <bb 10>;

  <bb 9>:
  # DEBUG this => values_13(D)
  # DEBUG D#135 => &values_13(D)->D.37474._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#135
  MEM[(struct __normal_iterator *)&D.57120] = _70;
  std::vector<int>::_M_insert_aux (values_13(D), D.57120, &D.38546);

  <bb 10>:
  D.38546 ={v} {CLOBBER};
  goto <bb 41>;

  <bb 11>:
  # curr_1 = PHI <1(4), curr_2(59)>
  # nested_3 = PHI <0(4), nested_4(59)>
  # curr_5 = PHI <1(4), prephitmp_60(59)>
  # DEBUG curr => curr_5
  # DEBUG nested => nested_3
  # DEBUG start => curr_1
  # DEBUG this => data_15(D)
  # DEBUG __s => "{,}"
  # DEBUG __pos => curr_5
  # DEBUG __s => "{,}"
  _47 = std::__cxx11::basic_string<char>::find_first_of (data_15(D), "{,}", curr_5, 3);
  goto <bb 13>;

<L32>:
  goto <bb 47> (<L30>);

  <bb 13>:
  # DEBUG curr => _47
  if (_47 != 18446744073709551615)
    goto <bb 14>;
  else
    goto <bb 38>;

  <bb 14>:
  # DEBUG this => data_15(D)
  # DEBUG __pos => _47
  _25 = MEM[(char * *)data_15(D)];
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  _48 = _25 + _47;
  _27 = *_48;
  if (_27 == 123)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  nested_28 = nested_3 + 1;
  # DEBUG nested => nested_28
  pretmp_66 = _47 + 1;
  goto <bb 37>;

  <bb 16>:
  # DEBUG this => data_15(D)
  # DEBUG __pos => _47
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  _162 = nested_3 != 0;
  _165 = _27 == 125;
  _146 = _162 & _165;
  if (_146 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 17>:
  if (curr_1 < _47)
    goto <bb 18>;
  else
    goto <bb 36>;

  <bb 18>:
  _31 = _47 - curr_1;
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __n => _31
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __s => "basic_string::substr"
  _22 = MEM[(long unsigned int *)data_15(D) + 8B];
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  if (curr_1 > _22)
    goto <bb 19>;
  else
    goto <bb 21>;

  <bb 19>:
  # curr_43 = PHI <curr_1(18)>
  # _78 = PHI <_22(18)>
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  std::__throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_43, _78);

<L33>:
  goto <bb 47> (<L30>);

  <bb 21>:
  # DEBUG this => &token
  # DEBUG __str => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __n => _31
  # DEBUG this => D#42
  # DEBUG D#41 => D#42
  # DEBUG this => D#41
  # DEBUG this => &token
  # DEBUG D#401 => &token._M_dataplus
  # DEBUG this => D#401
  # DEBUG __dat => &token.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#401
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&token]._M_p = &token.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __s => "basic_string::basic_string"
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  __start_76 = _25 + curr_1;
  # DEBUG __start => __start_76
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __off => _31
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  _77 = _22 - curr_1;
  # DEBUG __testoff => _77 > _31
  iftmp.174_142 = MIN_EXPR <_31, _77>;
  _79 = __start_76 + iftmp.174_142;
  # DEBUG this => &token
  # DEBUG __beg => __start_76
  # DEBUG __end => _79
  # DEBUG this => &token
  # DEBUG __beg => __start_76
  # DEBUG __end => _79
  # DEBUG this => &token
  # DEBUG __beg => __start_76
  # DEBUG __end => _79
  # DEBUG __ptr => __start_76
  _20 = _79 != 0B;
  _84 = __start_76 == 0B;
  _75 = _20 & _84;
  if (_75 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;

  <bb 22>:
  _85 = std::__cxx11::basic_string<char>::_M_create (&token, &__dnew, 0);
  goto <bb 24>;

<L34>:
  goto <bb 47> (<L30>);

  <bb 24>:
  # DEBUG D#6 => &token
  # DEBUG __p => _85
  # DEBUG this => D#6
  MEM[(char * *)&token] = _85;
  __dnew.111_86 = __dnew;
  # DEBUG D#7 => &token
  # DEBUG __capacity => __dnew.111_86
  # DEBUG this => D#7
  MEM[(size_type *)&token + 16B] = __dnew.111_86;
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __p => _85
  # DEBUG __k1 => __start_76
  # DEBUG __k2 => _79
  # DEBUG __d => _85
  # DEBUG __s => __start_76
  # DEBUG __n => iftmp.174_142
  goto <bb 27>;

  <bb 25>:
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __p => &token.D.11539._M_local_buf
  # DEBUG __k1 => __start_76
  # DEBUG __k2 => _79
  # DEBUG __d => &token.D.11539._M_local_buf
  # DEBUG __s => __start_76
  # DEBUG __n => iftmp.174_142
  if (iftmp.174_142 == 1)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  _88 = MEM[(const char_type &)__start_76];
  # DEBUG D#13 => __start_76
  # DEBUG __c1 => &token.D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&token + 16] = _88;
  goto <bb 28>;

  <bb 27>:
  # _94 = PHI <&token.D.11539._M_local_buf(25), _85(24)>
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __p => _94
  # DEBUG __k1 => __start_76
  # DEBUG __k2 => _79
  # DEBUG __d => _94
  # DEBUG __s => __start_76
  # DEBUG __n => iftmp.174_142
  # DEBUG __s1 => _94
  # DEBUG __s2 => __start_76
  # DEBUG __n => iftmp.174_142
  __builtin_memcpy (_94, __start_76, iftmp.174_142);
  pretmp_61 = __dnew;
  pretmp_63 = MEM[(char * *)&token];

  <bb 28>:
  # prephitmp_62 = PHI <iftmp.174_142(26), pretmp_61(27)>
  # prephitmp_52 = PHI <&token.D.11539._M_local_buf(26), pretmp_63(27)>
  # DEBUG D#794 => __dnew
  # DEBUG this => &token
  # DEBUG __n => D#794
  # DEBUG D#5 => &token
  # DEBUG __length => D#794
  # DEBUG this => D#5
  MEM[(size_type *)&token + 8B] = prephitmp_62;
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  _91 = prephitmp_52 + prephitmp_62;
  # DEBUG __c1 => _91
  # DEBUG __c2 => D#13
  MEM[(char_type &)_91] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &token
  _49 = MEM[(char * *)&token];
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __nptr => _49
  _26 = strtol (_49, 0B, 10);
  _19 = (int) _26;
  D.38553 = _19;
  # DEBUG this => values_13(D)
  # DEBUG __x => &D.38553
  _92 = values_13(D)->D.37474._M_impl._M_finish;
  _93 = values_13(D)->D.37474._M_impl._M_end_of_storage;
  if (_92 != _93)
    goto <bb 29>;
  else
    goto <bb 32>;

  <bb 29>:
  # DEBUG D#526 => &values_13(D)->D.37474._M_impl
  # DEBUG D#134 => D#526
  # DEBUG __p => _92
  # DEBUG __arg => &D.38553
  # DEBUG __a => D#134
  # DEBUG D#133 => D#134
  # DEBUG D#132 => D#133
  # DEBUG __p => _92
  # DEBUG __val => &D.38553
  # DEBUG this => D#132
  # DEBUG D#14 => 4
  # DEBUG __p => _92
  # DEBUG D.48025 => D#14
  if (_92 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  *_92 = _19;

  <bb 31>:

  <bb 57>:
  _95 = _92 + 4;
  values_13(D)->D.37474._M_impl._M_finish = _95;
  goto <bb 33>;

  <bb 32>:
  # DEBUG this => values_13(D)
  # DEBUG D#135 => &values_13(D)->D.37474._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#135
  MEM[(struct __normal_iterator *)&D.57191] = _92;
  std::vector<int>::_M_insert_aux (values_13(D), D.57191, &D.38553);

  <bb 33>:
  D.38553 ={v} {CLOBBER};
  # DEBUG this => &token
  # DEBUG this => &token
  # DEBUG this => &token
  _50 = MEM[(char * *)&token];
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  if (&token.D.11539._M_local_buf != _50)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # DEBUG D#186 => token.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &token
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  # DEBUG D#183 => &token._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _50
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _50
  # DEBUG this => D#177
  # DEBUG D.53502 => D#178
  operator delete (_50);

  <bb 35>:
  # DEBUG D#187 => &token._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  token ={v} {CLOBBER};

  <bb 36>:

  <bb 58>:
  curr_42 = _47 + 1;
  # DEBUG start => curr_42

  <bb 37>:
  # curr_2 = PHI <curr_1(15), curr_1(50), curr_1(52), curr_42(58)>
  # nested_4 = PHI <nested_28(15), nested_30(50), nested_3(52), 0(58)>
  # prephitmp_60 = PHI <pretmp_66(15), pretmp_67(50), pretmp_68(52), curr_42(58)>

  <bb 59>:
  # DEBUG nested => nested_4
  # DEBUG start => curr_2
  # DEBUG curr => _47 + 1
  goto <bb 11>;

  <bb 38>:
  # nested_141 = PHI <nested_3(13)>
  if (nested_141 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  __assert_fail ("!nested", "config_utils.cpp", 403, &__PRETTY_FUNCTION__);

  <bb 40>:

  <bb 61>:

  <bb 41>:

  <bb 60>:
  return values_13(D);

<L28>:
  D.38553 ={v} {CLOBBER};
  # DEBUG this => &token
  # DEBUG this => &token
  # DEBUG this => &token
  _37 = MEM[(char * *)&token];
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  if (&token.D.11539._M_local_buf != _37)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # DEBUG D#186 => token.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &token
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  # DEBUG D#183 => &token._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _37
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _37
  # DEBUG this => D#177
  # DEBUG D.53517 => D#178
  operator delete (_37);

  <bb 44>:
  # DEBUG D#187 => &token._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  resx 5

<L35>:
  goto <bb 47> (<L30>);

<L31>:

<L30>:
  token ={v} {CLOBBER};
  D.38546 ={v} {CLOBBER};
  # DEBUG this => values_13(D)
  # DEBUG D#271 => &values_13(D)->D.37474
  # DEBUG this => D#271
  # DEBUG D#274 => values_13(D)->D.37474._M_impl._M_finish
  # DEBUG D#273 => values_13(D)->D.37474._M_impl._M_start
  # DEBUG __first => D#273
  # DEBUG __last => D#274
  # DEBUG D.49645 => NULL
  # DEBUG D#165 => D#273
  # DEBUG D#166 => D#274
  # DEBUG __first => D#165
  # DEBUG __last => D#166
  # DEBUG D#164 => D#166
  # DEBUG D#163 => D#165
  # DEBUG D#161 => D#163
  # DEBUG D#162 => D#164
  # DEBUG D.48287 => D#161
  # DEBUG D.48286 => D#162
  # DEBUG D#272 => &values_13(D)->D.37474
  # DEBUG this => D#272
  # DEBUG D#270 => D#272->_M_impl._M_end_of_storage
  # DEBUG D#269 => (long int) D#270
  _40 = MEM[(struct _Vector_base *)values_13(D)]._M_impl._M_start;
  # DEBUG D#268 => (long int) _40
  # DEBUG D#267 => D#269 - D#268
  # DEBUG D#266 => D#267 /[ex] 4
  # DEBUG D#265 => (long unsigned int) D#266
  # DEBUG this => D#272
  # DEBUG __p => _40
  # DEBUG __n => D#265
  if (_40 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#263 => &D#272->_M_impl
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#265
  # DEBUG __p => _40
  # DEBUG __a => D#261
  # DEBUG __n => D#262
  # DEBUG D#260 => D#262
  # DEBUG D#259 => D#261
  # DEBUG D#257 => D#259
  # DEBUG D#258 => D#260
  # DEBUG __p => _40
  # DEBUG this => D#257
  # DEBUG D.53534 => D#258
  operator delete (_40);

  <bb 49>:
  # DEBUG D#264 => &D#272->_M_impl
  # DEBUG this => D#264
  # DEBUG this => D#264
  # DEBUG this => D#264
  resx 1

  <bb 50>:
  nested_30 = nested_3 + -1;
  # DEBUG nested => nested_30
  pretmp_67 = _47 + 1;
  goto <bb 37>;

  <bb 51>:
  if (nested_3 == 0)
    goto <bb 17>;
  else
    goto <bb 52>;

  <bb 52>:
  pretmp_68 = _47 + 1;
  goto <bb 37>;

  <bb 53>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L36>:
  goto <bb 47> (<L30>);

  <bb 55>:
  # DEBUG __first => __start_76
  # DEBUG __last => _79
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => __start_76
  # DEBUG __last => _79
  __dnew = iftmp.174_142;
  if (iftmp.174_142 > 15)
    goto <bb 22>;
  else
    goto <bb 25>;

}



;; Function std::vector<double> tokenize_float(const string&) (_Z14tokenize_floatRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1754, decl_uid=35341, cgraph_uid=440, symbol_order=442)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::vector<double> tokenize_float(const string&) (const struct string & data)
{
  struct __normal_iterator D.57360;
  size_type __dnew;
  const char * __start;
  struct __normal_iterator D.57289;
  struct string token;
  static const char __PRETTY_FUNCTION__[50] = "std::vector<double> tokenize_float(const string&)";
  size_t curr;
  int nested;
  const value_type D.38570;
  const value_type D.38563;
  char * const _14;
  char _18;
  bool _19;
  const size_type _21;
  char * const _24;
  const size_type _25;
  char _26;
  double _28;
  long unsigned int _30;
  double _32;
  char * const _36;
  double * _39;
  size_type _45;
  const char & _46;
  char * const _47;
  char * const _48;
  char * const prephitmp_50;
  size_t prephitmp_58;
  size_type pretmp_59;
  size_type prephitmp_60;
  char * const pretmp_61;
  size_t pretmp_64;
  size_t pretmp_65;
  size_t pretmp_66;
  double * _68;
  double * _69;
  double * _71;
  bool _73;
  long unsigned int _75;
  const size_type _76;
  const char * _77;
  bool _82;
  char * _83;
  long unsigned int __dnew.111_84;
  const char_type _86;
  char * _89;
  double * _90;
  double * _91;
  char * const _92;
  double * _93;
  size_type iftmp.174_140;
  bool _144;
  bool _160;
  bool _163;

  <bb 2>:
  # DEBUG this => values_13(D)
  # DEBUG D#298 => &values_13(D)->D.38225
  # DEBUG this => D#298
  # DEBUG D#297 => &D#298->_M_impl
  # DEBUG this => D#297
  # DEBUG this => D#297
  # DEBUG this => D#297
  MEM[(struct _Vector_impl *)values_13(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)values_13(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)values_13(D)]._M_end_of_storage = 0B;
  # DEBUG this => data_15(D)
  _25 = MEM[(long unsigned int *)data_15(D) + 8B];
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  if (_25 == 0)
    goto <bb 40>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG this => data_15(D)
  # DEBUG __pos => 0
  _14 = MEM[(char * *)data_15(D)];
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  _18 = MEM[(const char &)_14];
  if (_18 != 123)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 11>;

  <bb 5>:
  # DEBUG this => data_15(D)
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  # DEBUG __nptr => _14
  _32 = strtod (_14, 0B);
  D.38563 = _32;
  # DEBUG this => values_13(D)
  # DEBUG __x => &D.38563
  _68 = values_13(D)->D.38225._M_impl._M_finish;
  _69 = values_13(D)->D.38225._M_impl._M_end_of_storage;
  if (_68 != _69)
    goto <bb 6>;
  else
    goto <bb 9>;

  <bb 6>:
  # DEBUG D#547 => &values_13(D)->D.38225._M_impl
  # DEBUG D#139 => D#547
  # DEBUG __p => _68
  # DEBUG __arg => &D.38563
  # DEBUG __a => D#139
  # DEBUG D#138 => D#139
  # DEBUG D#137 => D#138
  # DEBUG __p => _68
  # DEBUG __val => &D.38563
  # DEBUG this => D#137
  # DEBUG D#14 => 8
  # DEBUG __p => _68
  # DEBUG D.48067 => D#14
  if (_68 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  *_68 = _32;

  <bb 8>:

  <bb 56>:
  _71 = _68 + 8;
  values_13(D)->D.38225._M_impl._M_finish = _71;
  goto <bb 10>;

  <bb 9>:
  # DEBUG this => values_13(D)
  # DEBUG D#140 => &values_13(D)->D.38225._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#140
  MEM[(struct __normal_iterator *)&D.57289] = _68;
  std::vector<double>::_M_insert_aux (values_13(D), D.57289, &D.38563);

  <bb 10>:
  D.38563 ={v} {CLOBBER};
  goto <bb 41>;

  <bb 11>:
  # curr_1 = PHI <1(4), curr_2(59)>
  # nested_3 = PHI <0(4), nested_4(59)>
  # curr_5 = PHI <1(4), prephitmp_58(59)>
  # DEBUG curr => curr_5
  # DEBUG nested => nested_3
  # DEBUG start => curr_1
  # DEBUG this => data_15(D)
  # DEBUG __s => "{,}"
  # DEBUG __pos => curr_5
  # DEBUG __s => "{,}"
  _45 = std::__cxx11::basic_string<char>::find_first_of (data_15(D), "{,}", curr_5, 3);
  goto <bb 13>;

<L32>:
  goto <bb 47> (<L30>);

  <bb 13>:
  # DEBUG curr => _45
  if (_45 != 18446744073709551615)
    goto <bb 14>;
  else
    goto <bb 38>;

  <bb 14>:
  # DEBUG this => data_15(D)
  # DEBUG __pos => _45
  _24 = MEM[(char * *)data_15(D)];
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  _46 = _24 + _45;
  _26 = *_46;
  if (_26 == 123)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  nested_27 = nested_3 + 1;
  # DEBUG nested => nested_27
  pretmp_64 = _45 + 1;
  goto <bb 37>;

  <bb 16>:
  # DEBUG this => data_15(D)
  # DEBUG __pos => _45
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  _160 = nested_3 != 0;
  _163 = _26 == 125;
  _144 = _160 & _163;
  if (_144 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 17>:
  if (curr_1 < _45)
    goto <bb 18>;
  else
    goto <bb 36>;

  <bb 18>:
  _30 = _45 - curr_1;
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __n => _30
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __s => "basic_string::substr"
  _21 = MEM[(long unsigned int *)data_15(D) + 8B];
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  if (curr_1 > _21)
    goto <bb 19>;
  else
    goto <bb 21>;

  <bb 19>:
  # curr_42 = PHI <curr_1(18)>
  # _76 = PHI <_21(18)>
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  std::__throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_42, _76);

<L33>:
  goto <bb 47> (<L30>);

  <bb 21>:
  # DEBUG this => &token
  # DEBUG __str => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __n => _30
  # DEBUG this => D#42
  # DEBUG D#41 => D#42
  # DEBUG this => D#41
  # DEBUG this => &token
  # DEBUG D#401 => &token._M_dataplus
  # DEBUG this => D#401
  # DEBUG __dat => &token.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#401
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&token]._M_p = &token.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#3 => data_15(D)
  # DEBUG this => D#3
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __s => "basic_string::basic_string"
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  __start_74 = _24 + curr_1;
  # DEBUG __start => __start_74
  # DEBUG this => data_15(D)
  # DEBUG __pos => curr_1
  # DEBUG __off => _30
  # DEBUG D#2 => data_15(D)
  # DEBUG this => D#2
  _75 = _21 - curr_1;
  # DEBUG __testoff => _75 > _30
  iftmp.174_140 = MIN_EXPR <_30, _75>;
  _77 = __start_74 + iftmp.174_140;
  # DEBUG this => &token
  # DEBUG __beg => __start_74
  # DEBUG __end => _77
  # DEBUG this => &token
  # DEBUG __beg => __start_74
  # DEBUG __end => _77
  # DEBUG this => &token
  # DEBUG __beg => __start_74
  # DEBUG __end => _77
  # DEBUG __ptr => __start_74
  _19 = _77 != 0B;
  _82 = __start_74 == 0B;
  _73 = _19 & _82;
  if (_73 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;

  <bb 22>:
  _83 = std::__cxx11::basic_string<char>::_M_create (&token, &__dnew, 0);
  goto <bb 24>;

<L34>:
  goto <bb 47> (<L30>);

  <bb 24>:
  # DEBUG D#6 => &token
  # DEBUG __p => _83
  # DEBUG this => D#6
  MEM[(char * *)&token] = _83;
  __dnew.111_84 = __dnew;
  # DEBUG D#7 => &token
  # DEBUG __capacity => __dnew.111_84
  # DEBUG this => D#7
  MEM[(size_type *)&token + 16B] = __dnew.111_84;
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __p => _83
  # DEBUG __k1 => __start_74
  # DEBUG __k2 => _77
  # DEBUG __d => _83
  # DEBUG __s => __start_74
  # DEBUG __n => iftmp.174_140
  goto <bb 27>;

  <bb 25>:
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __p => &token.D.11539._M_local_buf
  # DEBUG __k1 => __start_74
  # DEBUG __k2 => _77
  # DEBUG __d => &token.D.11539._M_local_buf
  # DEBUG __s => __start_74
  # DEBUG __n => iftmp.174_140
  if (iftmp.174_140 == 1)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  _86 = MEM[(const char_type &)__start_74];
  # DEBUG D#13 => __start_74
  # DEBUG __c1 => &token.D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&token + 16] = _86;
  goto <bb 28>;

  <bb 27>:
  # _92 = PHI <&token.D.11539._M_local_buf(25), _83(24)>
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __p => _92
  # DEBUG __k1 => __start_74
  # DEBUG __k2 => _77
  # DEBUG __d => _92
  # DEBUG __s => __start_74
  # DEBUG __n => iftmp.174_140
  # DEBUG __s1 => _92
  # DEBUG __s2 => __start_74
  # DEBUG __n => iftmp.174_140
  __builtin_memcpy (_92, __start_74, iftmp.174_140);
  pretmp_59 = __dnew;
  pretmp_61 = MEM[(char * *)&token];

  <bb 28>:
  # prephitmp_60 = PHI <iftmp.174_140(26), pretmp_59(27)>
  # prephitmp_50 = PHI <&token.D.11539._M_local_buf(26), pretmp_61(27)>
  # DEBUG D#804 => __dnew
  # DEBUG this => &token
  # DEBUG __n => D#804
  # DEBUG D#5 => &token
  # DEBUG __length => D#804
  # DEBUG this => D#5
  MEM[(size_type *)&token + 8B] = prephitmp_60;
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  _89 = prephitmp_50 + prephitmp_60;
  # DEBUG __c1 => _89
  # DEBUG __c2 => D#13
  MEM[(char_type &)_89] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &token
  _47 = MEM[(char * *)&token];
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG __nptr => _47
  _28 = strtod (_47, 0B);
  D.38570 = _28;
  # DEBUG this => values_13(D)
  # DEBUG __x => &D.38570
  _90 = values_13(D)->D.38225._M_impl._M_finish;
  _91 = values_13(D)->D.38225._M_impl._M_end_of_storage;
  if (_90 != _91)
    goto <bb 29>;
  else
    goto <bb 32>;

  <bb 29>:
  # DEBUG D#547 => &values_13(D)->D.38225._M_impl
  # DEBUG D#139 => D#547
  # DEBUG __p => _90
  # DEBUG __arg => &D.38570
  # DEBUG __a => D#139
  # DEBUG D#138 => D#139
  # DEBUG D#137 => D#138
  # DEBUG __p => _90
  # DEBUG __val => &D.38570
  # DEBUG this => D#137
  # DEBUG D#14 => 8
  # DEBUG __p => _90
  # DEBUG D.48067 => D#14
  if (_90 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  *_90 = _28;

  <bb 31>:

  <bb 57>:
  _93 = _90 + 8;
  values_13(D)->D.38225._M_impl._M_finish = _93;
  goto <bb 33>;

  <bb 32>:
  # DEBUG this => values_13(D)
  # DEBUG D#140 => &values_13(D)->D.38225._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#140
  MEM[(struct __normal_iterator *)&D.57360] = _90;
  std::vector<double>::_M_insert_aux (values_13(D), D.57360, &D.38570);

  <bb 33>:
  D.38570 ={v} {CLOBBER};
  # DEBUG this => &token
  # DEBUG this => &token
  # DEBUG this => &token
  _48 = MEM[(char * *)&token];
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  if (&token.D.11539._M_local_buf != _48)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # DEBUG D#186 => token.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &token
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  # DEBUG D#183 => &token._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _48
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _48
  # DEBUG this => D#177
  # DEBUG D.53960 => D#178
  operator delete (_48);

  <bb 35>:
  # DEBUG D#187 => &token._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  token ={v} {CLOBBER};

  <bb 36>:

  <bb 58>:
  curr_41 = _45 + 1;
  # DEBUG start => curr_41

  <bb 37>:
  # curr_2 = PHI <curr_1(15), curr_1(50), curr_1(52), curr_41(58)>
  # nested_4 = PHI <nested_27(15), nested_29(50), nested_3(52), 0(58)>
  # prephitmp_58 = PHI <pretmp_64(15), pretmp_65(50), pretmp_66(52), curr_41(58)>

  <bb 59>:
  # DEBUG nested => nested_4
  # DEBUG start => curr_2
  # DEBUG curr => _45 + 1
  goto <bb 11>;

  <bb 38>:
  # nested_139 = PHI <nested_3(13)>
  if (nested_139 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  __assert_fail ("!nested", "config_utils.cpp", 444, &__PRETTY_FUNCTION__);

  <bb 40>:

  <bb 61>:

  <bb 41>:

  <bb 60>:
  return values_13(D);

<L28>:
  D.38570 ={v} {CLOBBER};
  # DEBUG this => &token
  # DEBUG this => &token
  # DEBUG this => &token
  _36 = MEM[(char * *)&token];
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  if (&token.D.11539._M_local_buf != _36)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # DEBUG D#186 => token.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &token
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &token
  # DEBUG this => D#3
  # DEBUG this => &token
  # DEBUG D#183 => &token._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _36
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _36
  # DEBUG this => D#177
  # DEBUG D.53975 => D#178
  operator delete (_36);

  <bb 44>:
  # DEBUG D#187 => &token._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  resx 5

<L35>:
  goto <bb 47> (<L30>);

<L31>:

<L30>:
  token ={v} {CLOBBER};
  D.38563 ={v} {CLOBBER};
  # DEBUG this => values_13(D)
  # DEBUG D#289 => &values_13(D)->D.38225
  # DEBUG this => D#289
  # DEBUG D#292 => values_13(D)->D.38225._M_impl._M_finish
  # DEBUG D#291 => values_13(D)->D.38225._M_impl._M_start
  # DEBUG __first => D#291
  # DEBUG __last => D#292
  # DEBUG D.49710 => NULL
  # DEBUG D#171 => D#291
  # DEBUG D#172 => D#292
  # DEBUG __first => D#171
  # DEBUG __last => D#172
  # DEBUG D#170 => D#172
  # DEBUG D#169 => D#171
  # DEBUG D#167 => D#169
  # DEBUG D#168 => D#170
  # DEBUG D.48316 => D#167
  # DEBUG D.48315 => D#168
  # DEBUG D#290 => &values_13(D)->D.38225
  # DEBUG this => D#290
  # DEBUG D#288 => D#290->_M_impl._M_end_of_storage
  # DEBUG D#287 => (long int) D#288
  _39 = MEM[(struct _Vector_base *)values_13(D)]._M_impl._M_start;
  # DEBUG D#286 => (long int) _39
  # DEBUG D#285 => D#287 - D#286
  # DEBUG D#284 => D#285 /[ex] 8
  # DEBUG D#283 => (long unsigned int) D#284
  # DEBUG this => D#290
  # DEBUG __p => _39
  # DEBUG __n => D#283
  if (_39 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#281 => &D#290->_M_impl
  # DEBUG D#279 => D#281
  # DEBUG D#280 => D#283
  # DEBUG __p => _39
  # DEBUG __a => D#279
  # DEBUG __n => D#280
  # DEBUG D#278 => D#280
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => D#278
  # DEBUG __p => _39
  # DEBUG this => D#275
  # DEBUG D.53992 => D#276
  operator delete (_39);

  <bb 49>:
  # DEBUG D#282 => &D#290->_M_impl
  # DEBUG this => D#282
  # DEBUG this => D#282
  # DEBUG this => D#282
  resx 1

  <bb 50>:
  nested_29 = nested_3 + -1;
  # DEBUG nested => nested_29
  pretmp_65 = _45 + 1;
  goto <bb 37>;

  <bb 51>:
  if (nested_3 == 0)
    goto <bb 17>;
  else
    goto <bb 52>;

  <bb 52>:
  pretmp_66 = _45 + 1;
  goto <bb 37>;

  <bb 53>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L36>:
  goto <bb 47> (<L30>);

  <bb 55>:
  # DEBUG __first => __start_74
  # DEBUG __last => _77
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => __start_74
  # DEBUG __last => _77
  __dnew = iftmp.174_140;
  if (iftmp.174_140 > 15)
    goto <bb 22>;
  else
    goto <bb 25>;

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_, funcdef_no=2554, decl_uid=32582, cgraph_uid=1240, symbol_order=1242)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_tree * const this, const struct key_type & __k)
{
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57426;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57411;
  struct _Rb_tree_node_base * const __j$_M_node;
  bool __comp;
  struct _Rb_tree_node_base * const D.42440;
  struct _Rb_tree_node_base * const D.42441;
  struct pair D.43295;
  const size_type pretmp_1;
  char * const prephitmp_13;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node_base * _24;
  const size_type _34;
  char * const _37;
  long unsigned int _40;
  char * const pretmp_44;
  long unsigned int _52;
  const size_type prephitmp_61;
  char * const pretmp_64;
  char * const prephitmp_65;
  const size_type pretmp_67;
  const size_type pretmp_76;
  const size_type prephitmp_77;
  const size_type prephitmp_78;
  const size_type pretmp_79;
  char * const pretmp_80;
  char * const _83;
  const size_type _84;

  <bb 2>:
  _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
  # DEBUG D#35 => this_9(D)
  # DEBUG this => D#35
  # DEBUG __x => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#831 => &this_9(D)->_M_impl._M_header
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => D#831
  # DEBUG __x => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = &this_9(D)->_M_impl._M_header;
  goto <bb 15>;

  <bb 4>:
  pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_44 = MEM[(char * *)__k_12(D)];
  goto <bb 7>;

  <bb 5>:
  # _6 = PHI <_22(27), _23(28)>
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __comp => __comp_56
  # DEBUG __y => _10
  # DEBUG __x => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # _10 = PHI <_21(4), _6(6)>
  # DEBUG __comp => 1
  # DEBUG __x => _10
  # DEBUG __y => _10
  # DEBUG __x => _10
  # DEBUG __x => _10
  # DEBUG this => _10
  # DEBUG D#204 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
  # DEBUG __r => D#204
  # DEBUG __x => D#204
  # DEBUG this => D#149
  # DEBUG D#811 => &MEM[(const struct pair &)_10 + 32].first
  # DEBUG D#326 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#203 => D#326
  # DEBUG __x => __k_12(D)
  # DEBUG __y => D#811
  # DEBUG this => D#203
  # DEBUG __lhs => __k_12(D)
  # DEBUG __rhs => D#811
  # DEBUG this => __k_12(D)
  # DEBUG __str => D#811
  # DEBUG D#830 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#2 => __k_12(D)
  # DEBUG this => D#2
  # DEBUG __size => D#830
  _34 = MEM[(long unsigned int *)_10 + 40B];
  # DEBUG D#2 => D#811
  # DEBUG this => D#2
  # DEBUG __osize => _34
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __len => D#809
  # DEBUG this => D#811
  _37 = MEM[(char * *)_10 + 32B];
  # DEBUG D#3 => D#811
  # DEBUG this => D#3
  # DEBUG D#829 => MEM[(char * *)__k_12(D)]
  # DEBUG D#3 => __k_12(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#829
  # DEBUG __s2 => _37
  # DEBUG __n => D#809
  __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
  # DEBUG __r => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => D#830
  # DEBUG __n2 => _34
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_type) _40;
  # DEBUG __d => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_42 = (int) _40;

  <bb 11>:
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __r => __r_43
  # DEBUG D#817 => {CLOBBER}
  # DEBUG __size => D#817
  # DEBUG D#818 => {CLOBBER}
  # DEBUG __osize => D#818
  # DEBUG __comp => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __comp => 1
  _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
  # DEBUG D#44 => _10
  # DEBUG __x => D#44
  goto <bb 5>;

  <bb 13>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG __comp => 0
  _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
  # DEBUG D#43 => _10
  # DEBUG __x => D#43
  goto <bb 5>;

  <bb 14>:
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # _83 = PHI <_37(5)>
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>

  <bb 26>:
  # DEBUG this => &__j
  # DEBUG __x => _85
  # DEBUG __j$_M_node => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG this => &__j
  # DEBUG __x => _57
  # DEBUG __j$_M_node => _57
  _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
  # DEBUG D#54 => this_9(D)
  # DEBUG this => D#54
  # DEBUG this => NULL
  # DEBUG __x => _24
  # DEBUG this => &__j
  # DEBUG __x => &D.42439
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &D.42442
  # DEBUG __a => &D.42440
  # DEBUG __b => &D.42441
  MEM[(struct pair *)&D.43295] = 0B;
  MEM[(struct pair *)&D.43295 + 8B] = _57;
  goto <bb 25>;

  <bb 17>:
  # DEBUG this => &__j
  __j$_M_node_25 = std::_Rb_tree_decrement (_57);
  # DEBUG __j$_M_node => __j$_M_node_25
  pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_80 = MEM[(char * *)__k_12(D)];
  pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
  pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  <bb 18>:
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_node => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG this => __j$_M_node_20
  # DEBUG D#150 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
  # DEBUG __r => D#150
  # DEBUG __x => D#150
  # DEBUG this => D#149
  # DEBUG D#812 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
  # DEBUG D#325 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#203 => D#325
  # DEBUG __x => D#812
  # DEBUG __y => __k_12(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#812
  # DEBUG __rhs => __k_12(D)
  # DEBUG this => D#812
  # DEBUG __str => __k_12(D)
  # DEBUG D#828 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
  # DEBUG D#2 => D#812
  # DEBUG this => D#2
  # DEBUG __size => D#828
  # DEBUG D#827 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#2 => __k_12(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#827
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#810
  # DEBUG this => __k_12(D)
  # DEBUG D#826 => MEM[(char * *)__k_12(D)]
  # DEBUG D#3 => __k_12(D)
  # DEBUG this => D#3
  # DEBUG D#825 => MEM[(char * *)__j$_M_node_20 + 32B]
  # DEBUG D#3 => D#812
  # DEBUG this => D#3
  # DEBUG __s1 => D#825
  # DEBUG __s2 => D#826
  # DEBUG __n => D#810
  __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __r => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG __n1 => D#828
  # DEBUG __n2 => D#827
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_type) _52;
  # DEBUG __d => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;

  <bb 20>:
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 21>:
  __r_54 = (int) _52;

  <bb 22>:
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __r => __r_55
  # DEBUG D#823 => {CLOBBER}
  # DEBUG __size => D#823
  # DEBUG D#824 => {CLOBBER}
  # DEBUG __osize => D#824
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:

  <bb 31>:
  # DEBUG __r => NULL
  # DEBUG this => &D.42445
  # DEBUG __a => &D.42443
  # DEBUG __b => &D.42444
  MEM[(struct pair *)&D.43295] = 0B;
  MEM[(struct pair *)&D.43295 + 8B] = _5;
  goto <bb 25>;

  <bb 24>:

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG this => &D.42447
  # DEBUG __a => &__j._M_node
  # DEBUG __b => &D.42446
  MEM[(struct pair *)&D.43295] = __j$_M_node_20;
  MEM[(struct pair *)&D.43295 + 8B] = 0B;

  <bb 25>:

  <bb 29>:
  # DEBUG D#324 => {CLOBBER}
  # DEBUG __j$_M_node => D#324
  return D.43295;

}



;; Function void Configuration::Assign(const string&, const string&) (_ZN13Configuration6AssignERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_, funcdef_no=1730, decl_uid=35259, cgraph_uid=416, symbol_order=418)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void Configuration::Assign(const string&, const string&) (struct Configuration * const this, const struct string & field, const struct string & value)
{
  struct _Rb_tree_node_base * SR.1300;
  struct _Rb_tree_node_base * SR.1299;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57959;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57944;
  struct iterator D.57929;
  struct _Rb_tree_node * __y;
  struct value_type D.57911;
  struct mapped_type D.57910;
  struct iterator D.57909;
  struct iterator D.57908;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.1072;
  struct _Rb_tree_node_base * SR.1075;
  struct mapped_type & D.57904;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57843;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57828;
  struct iterator D.57813;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.1085;
  struct iterator D.54369;
  struct basic_string D.35592;
  const size_type _5;
  char * const _12;
  char * const prephitmp_30;
  char * const _39;
  long unsigned int _41;
  const size_type _47;
  char * const prephitmp_49;
  char * const _50;
  long unsigned int _53;
  struct _Rep_type * _58;
  char * const _65;
  struct mapped_type & _67;
  char * const _68;
  size_type pretmp_70;
  char * const pretmp_75;
  const size_type _78;
  char * const pretmp_81;
  char * const _83;
  long unsigned int _85;
  bool _89;
  const size_type _91;
  size_type prephitmp_93;
  char * const _94;
  long unsigned int _97;
  bool _101;
  char * _106;
  char * const _109;
  const size_type _110;
  char * _111;
  char * const _112;
  char * _118;
  long unsigned int __dnew.111_119;
  const char_type _121;
  char * _124;
  char * _130;
  long unsigned int __dnew.111_131;
  const char_type _133;
  char * _136;
  char * const _137;
  char * const _139;
  size_type prephitmp_144;
  size_type pretmp_158;
  const size_type pretmp_237;
  char * const pretmp_239;
  bool _260;
  bool _261;
  bool _262;
  bool _268;
  char * const _269;
  char * const _270;

  <bb 2>:
  # DEBUG this => &match
  # DEBUG match$_M_node => 0B
  # DEBUG D#575 => &this_3(D)->_str_map
  # DEBUG this => D#575
  # DEBUG __x => field_4(D)
  # DEBUG D#899 => &MEM[(struct map *)this_3(D) + 40B]._M_t
  # DEBUG this => D#899
  # DEBUG __k => field_4(D)
  # DEBUG this => D#899
  __i$_M_node_23 = &MEM[(struct _Rb_tree *)this_3(D) + 40B]._M_impl._M_header;
  __i$_M_node_24 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 56B];
  # DEBUG D#35 => D#899
  # DEBUG this => D#35
  # DEBUG D#207 => D#899
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => field_4(D)
  # DEBUG __y => __i$_M_node_23
  # DEBUG __x => __i$_M_node_24
  if (__i$_M_node_24 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_237 = MEM[(long unsigned int *)field_4(D) + 8B];
  pretmp_239 = MEM[(char * *)field_4(D)];
  goto <bb 7>;

  <bb 4>:
  # DEBUG this => D#899
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_23
  # DEBUG D#208 => {CLOBBER}
  # DEBUG __j$_M_node => D#208
  # DEBUG this => &match.37
  # DEBUG __it => &D.35529
  # DEBUG match$_M_node => __i$_M_node_23
  # DEBUG D#576 => &this_3(D)->_str_map
  # DEBUG this => D#576
  # DEBUG D#53 => &D#576->_M_t
  # DEBUG this => D#53
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_23
  # DEBUG this => &D.35588
  # DEBUG __it => &D.35534
  # DEBUG this => &match
  # DEBUG __x => &D.35588
  # DEBUG D#208 => {CLOBBER}
  # DEBUG __j$_M_node => D#208
  # DEBUG this => &match.37
  # DEBUG __it => &D.35529
  # DEBUG match$_M_node => __i$_M_node_23
  # DEBUG D#576 => &this_3(D)->_str_map
  # DEBUG this => D#576
  # DEBUG D#53 => &D#576->_M_t
  # DEBUG this => D#53
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_23
  # DEBUG this => &D.35588
  # DEBUG __it => &D.35534
  # DEBUG this => &match
  # DEBUG __x => &D.35588
  D.35592 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown string field: ", field_4(D)); [return slot optimization]
  Configuration::ParseError (this_3(D), &D.35592, 0);

  <bb 5>:
  # __i$_M_node_57 = PHI <__i$_M_node_28(82), __i$_M_node_29(81)>
  # __i$_M_node_77 = PHI <__i$_M_node_279(82), __i$_M_node_275(81)>
  # DEBUG __y => __i$_M_node_77
  # DEBUG __x => __i$_M_node_57
  if (__i$_M_node_57 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __i$_M_node_279 = PHI <__i$_M_node_24(3), __i$_M_node_57(6)>
  # __i$_M_node_275 = PHI <__i$_M_node_23(3), __i$_M_node_77(6)>
  # DEBUG __y => __i$_M_node_275
  # DEBUG __x => __i$_M_node_279
  # DEBUG __x => __i$_M_node_279
  # DEBUG __x => __i$_M_node_279
  # DEBUG this => __i$_M_node_279
  # DEBUG D#204 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_279]._M_value_field
  # DEBUG __r => D#204
  # DEBUG __x => D#204
  # DEBUG this => D#149
  # DEBUG D#900 => &MEM[(const struct pair &)__i$_M_node_279 + 32].first
  # DEBUG D#205 => &D#206->_M_impl._M_key_compare
  # DEBUG D#203 => D#205
  # DEBUG __x => D#900
  # DEBUG __y => field_4(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#900
  # DEBUG __rhs => field_4(D)
  # DEBUG this => D#900
  # DEBUG __str => field_4(D)
  _5 = MEM[(long unsigned int *)__i$_M_node_279 + 40B];
  # DEBUG D#2 => D#900
  # DEBUG this => D#2
  # DEBUG __size => _5
  # DEBUG D#940 => MEM[(long unsigned int *)field_4(D) + 8B]
  # DEBUG D#2 => field_4(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#940
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_265 = MIN_EXPR <_5, pretmp_237>;
  # DEBUG __len => D#895
  # DEBUG this => field_4(D)
  # DEBUG D#939 => MEM[(char * *)field_4(D)]
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  _39 = MEM[(char * *)__i$_M_node_279 + 32B];
  # DEBUG D#3 => D#900
  # DEBUG this => D#3
  # DEBUG __s1 => _39
  # DEBUG __s2 => D#939
  # DEBUG __n => D#895
  __r_40 = __builtin_memcmp (_39, pretmp_239, __len_265);
  # DEBUG __r => NULL
  if (__r_40 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => _5
  # DEBUG __n2 => D#940
  _41 = _5 - pretmp_237;
  __d_42 = (const difference_type) _41;
  # DEBUG __d => __d_42
  if (__d_42 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_42 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_43 = (int) _41;

  <bb 11>:
  # __r_44 = PHI <__r_40(7), __r_43(10)>
  # DEBUG __r => __r_44
  # DEBUG D#909 => {CLOBBER}
  # DEBUG __size => D#909
  # DEBUG D#910 => {CLOBBER}
  # DEBUG __osize => D#910
  if (__r_44 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 82>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_279
  __i$_M_node_28 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 16B];
  # DEBUG D#44 => __i$_M_node_279
  # DEBUG __x => D#44
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 13>:

  <bb 81>:
  # DEBUG __r => NULL
  __i$_M_node_29 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 24B];
  # DEBUG D#43 => __i$_M_node_279
  # DEBUG __x => D#43
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 14>:
  # __i$_M_node_277 = PHI <__i$_M_node_77(5)>

  <bb 80>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_277
  # DEBUG __j$_M_node => __i$_M_node_277
  # DEBUG this => D#899
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_23
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__i$_M_node_23 == __i$_M_node_277)
    goto <bb 4>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __i$_M_node_277
  # DEBUG __x => __i$_M_node_277
  # DEBUG this => __i$_M_node_277
  # DEBUG D#150 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_277]._M_value_field
  # DEBUG __r => D#150
  # DEBUG __x => D#150
  # DEBUG this => D#149
  # DEBUG D#901 => &MEM[(const struct pair &)__i$_M_node_277 + 32].first
  # DEBUG D#209 => &MEM[(struct _Rb_tree *)D#899]._M_impl._M_key_compare
  # DEBUG D#203 => D#209
  # DEBUG __x => field_4(D)
  # DEBUG __y => D#901
  # DEBUG this => D#203
  # DEBUG __lhs => field_4(D)
  # DEBUG __rhs => D#901
  # DEBUG this => field_4(D)
  # DEBUG __str => D#901
  # DEBUG D#938 => MEM[(long unsigned int *)field_4(D) + 8B]
  # DEBUG D#2 => field_4(D)
  # DEBUG this => D#2
  # DEBUG __size => D#938
  _47 = MEM[(long unsigned int *)__i$_M_node_277 + 40B];
  # DEBUG D#2 => D#901
  # DEBUG this => D#2
  # DEBUG __osize => _47
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_267 = MIN_EXPR <_47, pretmp_237>;
  # DEBUG __len => D#896
  # DEBUG this => D#901
  _50 = MEM[(char * *)__i$_M_node_277 + 32B];
  # DEBUG D#3 => D#901
  # DEBUG this => D#3
  # DEBUG D#937 => MEM[(char * *)field_4(D)]
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#937
  # DEBUG __s2 => _50
  # DEBUG __n => D#896
  __r_52 = __builtin_memcmp (pretmp_239, _50, __len_267);
  # DEBUG __r => NULL
  if (__r_52 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;

  <bb 16>:
  # DEBUG __n1 => D#938
  # DEBUG __n2 => _47
  _53 = pretmp_237 - _47;
  __d_54 = (const difference_type) _53;
  # DEBUG __d => __d_54
  if (__d_54 > 2147483647)
    goto <bb 78>;
  else
    goto <bb 17>;

  <bb 17>:
  if (__d_54 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;

  <bb 18>:
  __r_55 = (int) _53;

  <bb 19>:
  # __r_56 = PHI <__r_52(15), __r_55(18)>
  # DEBUG __r => __r_56
  # DEBUG D#915 => {CLOBBER}
  # DEBUG __size => D#915
  # DEBUG D#916 => {CLOBBER}
  # DEBUG __osize => D#916
  if (__r_56 < 0)
    goto <bb 4>;
  else
    goto <bb 78>;

  <bb 20>:
  # __i$_M_node_34 = PHI <__i$_M_node_73(84), __i$_M_node_74(83)>
  # __i$_M_node_33 = PHI <__i$_M_node_288(84), __i$_M_node_284(83)>
  # DEBUG __y => __i$_M_node_33
  # DEBUG __x => __i$_M_node_34
  if (__i$_M_node_34 == 0B)
    goto <bb 30>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 23>;

  <bb 22>:

  <bb 23>:
  # __i$_M_node_288 = PHI <__i$_M_node_24(22), __i$_M_node_34(21)>
  # __i$_M_node_284 = PHI <__i$_M_node_23(22), __i$_M_node_33(21)>
  # DEBUG __y => __i$_M_node_284
  # DEBUG __x => __i$_M_node_288
  # DEBUG __x => __i$_M_node_288
  # DEBUG __x => __i$_M_node_288
  # DEBUG this => __i$_M_node_288
  # DEBUG D#204 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_288]._M_value_field
  # DEBUG __r => D#204
  # DEBUG __x => D#204
  # DEBUG this => D#149
  # DEBUG D#903 => &MEM[(const struct pair &)__i$_M_node_288 + 32].first
  # DEBUG D#205 => &D#206->_M_impl._M_key_compare
  # DEBUG D#203 => D#205
  # DEBUG __x => D#903
  # DEBUG __y => field_4(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#903
  # DEBUG __rhs => field_4(D)
  # DEBUG this => D#903
  # DEBUG __str => field_4(D)
  _78 = MEM[(long unsigned int *)__i$_M_node_288 + 40B];
  # DEBUG D#2 => D#903
  # DEBUG this => D#2
  # DEBUG __size => _78
  # DEBUG D#936 => MEM[(long unsigned int *)field_4(D) + 8B]
  # DEBUG D#2 => field_4(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#936
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_263 = MIN_EXPR <_78, pretmp_237>;
  # DEBUG __len => D#897
  # DEBUG this => field_4(D)
  # DEBUG D#935 => MEM[(char * *)field_4(D)]
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  _83 = MEM[(char * *)__i$_M_node_288 + 32B];
  # DEBUG D#3 => D#903
  # DEBUG this => D#3
  # DEBUG __s1 => _83
  # DEBUG __s2 => D#935
  # DEBUG __n => D#897
  __r_84 = __builtin_memcmp (_83, pretmp_239, __len_263);
  # DEBUG __r => NULL
  if (__r_84 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 24>:
  # DEBUG __n1 => _78
  # DEBUG __n2 => D#936
  _85 = _78 - pretmp_237;
  __d_86 = (const difference_type) _85;
  # DEBUG __d => __d_86
  if (__d_86 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 25>;

  <bb 25>:
  if (__d_86 < -2147483648)
    goto <bb 29>;
  else
    goto <bb 26>;

  <bb 26>:
  __r_87 = (int) _85;

  <bb 27>:
  # __r_88 = PHI <__r_84(23), __r_87(26)>
  # DEBUG __r => __r_88
  # DEBUG D#921 => {CLOBBER}
  # DEBUG __size => D#921
  # DEBUG D#922 => {CLOBBER}
  # DEBUG __osize => D#922
  if (__r_88 >= 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:

  <bb 84>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_288
  __i$_M_node_73 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 16B];
  # DEBUG D#44 => __i$_M_node_288
  # DEBUG __x => D#44
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 29>:

  <bb 83>:
  # DEBUG __r => NULL
  __i$_M_node_74 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 24B];
  # DEBUG D#43 => __i$_M_node_288
  # DEBUG __x => D#43
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 30>:
  # __i$_M_node_281 = PHI <__i$_M_node_33(20)>

  <bb 79>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_281
  # DEBUG __i$_M_node => __i$_M_node_281
  # DEBUG this => D#902
  # DEBUG D#53 => &D#902->_M_t
  # DEBUG this => D#53
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_23
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_23 == __i$_M_node_281)
    goto <bb 71>;
  else
    goto <bb 31>;

  <bb 31>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_281
  # DEBUG D#571 => &MEM[(struct _Rb_tree_node *)__i$_M_node_281]._M_value_field
  # DEBUG __r => D#571
  # DEBUG D#904 => &MEM[(struct pair &)__i$_M_node_281 + 32].first
  # DEBUG D#52 => D#902
  # DEBUG this => D#52
  # DEBUG D#51 => D#52
  # DEBUG D#50 => &D#51->_M_t
  # DEBUG D#49 => D#50
  # DEBUG this => D#49
  # DEBUG __x => field_4(D)
  # DEBUG __y => D#904
  # DEBUG this => D#203
  # DEBUG __lhs => field_4(D)
  # DEBUG __rhs => D#904
  # DEBUG this => field_4(D)
  # DEBUG __str => D#904
  # DEBUG D#934 => MEM[(long unsigned int *)field_4(D) + 8B]
  # DEBUG D#2 => field_4(D)
  # DEBUG this => D#2
  # DEBUG __size => D#934
  _91 = MEM[(long unsigned int *)__i$_M_node_281 + 40B];
  # DEBUG D#2 => D#904
  # DEBUG this => D#2
  # DEBUG __osize => _91
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_264 = MIN_EXPR <_91, pretmp_237>;
  # DEBUG __len => D#898
  # DEBUG this => D#904
  _94 = MEM[(char * *)__i$_M_node_281 + 32B];
  # DEBUG D#3 => D#904
  # DEBUG this => D#3
  # DEBUG D#933 => MEM[(char * *)field_4(D)]
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#933
  # DEBUG __s2 => _94
  # DEBUG __n => D#898
  __r_96 = __builtin_memcmp (pretmp_239, _94, __len_264);
  # DEBUG __r => NULL
  if (__r_96 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;

  <bb 32>:
  # DEBUG __n1 => D#934
  # DEBUG __n2 => _91
  _97 = pretmp_237 - _91;
  __d_98 = (const difference_type) _97;
  # DEBUG __d => __d_98
  if (__d_98 > 2147483647)
    goto <bb 61>;
  else
    goto <bb 33>;

  <bb 33>:
  if (__d_98 < -2147483648)
    goto <bb 36>;
  else
    goto <bb 34>;

  <bb 34>:
  __r_99 = (int) _97;

  <bb 35>:
  # __r_100 = PHI <__r_96(31), __r_99(34)>
  # DEBUG __r => __r_100
  # DEBUG D#927 => {CLOBBER}
  # DEBUG __size => D#927
  # DEBUG D#928 => {CLOBBER}
  # DEBUG __osize => D#928
  if (__r_100 < 0)
    goto <bb 71>;
  else
    goto <bb 61>;

  <bb 36>:
  # __i$_M_node_25 = PHI <__i$_M_node_281(33), __i$_M_node_271(85)>
  # DEBUG this => &D.57910
  # DEBUG this => D#42
  # DEBUG D#41 => D#42
  # DEBUG this => D#41
  # DEBUG this => &D.57910
  # DEBUG D#148 => &D.57910._M_dataplus
  # DEBUG this => D#148
  # DEBUG __dat => &D.57910.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#148
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&D.57910]._M_p = &D.57910.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.57910
  # DEBUG __n => 0
  # DEBUG D#5 => &D.57910
  # DEBUG __length => 0
  # DEBUG this => D#5
  MEM[(size_type *)&D.57910 + 8B] = 0;
  # DEBUG D#3 => &D.57910
  # DEBUG this => D#3
  # DEBUG __c1 => &D.57910.D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.57910 + 16] = 0;
  # DEBUG this => &D.57911
  # DEBUG __a => field_4(D)
  # DEBUG __b => &D.57910
  # DEBUG this => &D.57911.first
  # DEBUG __str => field_4(D)
  # DEBUG this => field_4(D)
  # DEBUG D#380 => &MEM[(const struct basic_string *)field_4(D)]._M_dataplus
  # DEBUG this => &D.57911.first
  # DEBUG D#381 => &MEM[(struct basic_string *)&D.57911]._M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => &MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&D.57911]._M_p = &MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf;
  # DEBUG D#932 => MEM[(char * *)field_4(D)]
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  # DEBUG D#931 => MEM[(long unsigned int *)field_4(D) + 8B]
  # DEBUG D#1 => field_4(D)
  # DEBUG this => D#1
  _106 = pretmp_239 + pretmp_237;
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  # DEBUG this => &D.57911.first
  # DEBUG __beg => D#932
  # DEBUG __end => _106
  # DEBUG this => &D.57911.first
  # DEBUG __beg => D#932
  # DEBUG __end => _106
  # DEBUG this => &D.57911.first
  # DEBUG __beg => D#932
  # DEBUG __end => _106
  # DEBUG __ptr => D#932
  _89 = _106 != 0B;
  _101 = pretmp_239 == 0B;
  _268 = _89 & _101;
  if (_268 != 0)
    goto <bb 73>;
  else
    goto <bb 72>;

  <bb 37>:
  _118 = std::__cxx11::basic_string<char>::_M_create (&D.57911.first, &__dnew, 0);

  <bb 38>:
  # DEBUG D#6 => &D.57911.first
  # DEBUG __p => _118
  # DEBUG this => D#6
  MEM[(char * *)&D.57911] = _118;
  __dnew.111_119 = __dnew;
  # DEBUG D#7 => &D.57911.first
  # DEBUG __capacity => __dnew.111_119
  # DEBUG this => D#7
  MEM[(size_type *)&D.57911 + 16B] = __dnew.111_119;
  # DEBUG D#3 => &D.57911.first
  # DEBUG this => D#3
  # DEBUG __p => _118
  # DEBUG __k1 => D#932
  # DEBUG __k2 => _106
  # DEBUG __d => _118
  # DEBUG __s => D#932
  # DEBUG __n => D#931
  goto <bb 41>;

  <bb 39>:
  # DEBUG D#3 => &D.57911.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf
  # DEBUG __k1 => D#932
  # DEBUG __k2 => _106
  # DEBUG __d => &MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf
  # DEBUG __s => D#932
  # DEBUG __n => D#931
  if (pretmp_237 == 1)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  _121 = MEM[(const char_type &)pretmp_239];
  # DEBUG D#13 => D#932
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.57911 + 16] = _121;
  goto <bb 42>;

  <bb 41>:
  # _270 = PHI <&MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf(39), _118(38)>
  # DEBUG D#3 => &D.57911.first
  # DEBUG this => D#3
  # DEBUG __p => _270
  # DEBUG __k1 => D#932
  # DEBUG __k2 => _106
  # DEBUG __d => _270
  # DEBUG __s => D#932
  # DEBUG __n => D#931
  # DEBUG __s1 => _270
  # DEBUG __s2 => D#932
  # DEBUG __n => D#931
  __builtin_memcpy (_270, pretmp_239, pretmp_237);
  pretmp_158 = __dnew;
  pretmp_75 = MEM[(char * *)&D.57911];

  <bb 42>:
  # prephitmp_144 = PHI <pretmp_237(40), pretmp_158(41)>
  # prephitmp_49 = PHI <&MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf(40), pretmp_75(41)>
  # DEBUG D#930 => __dnew
  # DEBUG this => &D.57911.first
  # DEBUG __n => D#930
  # DEBUG D#5 => &D.57911.first
  # DEBUG __length => D#930
  # DEBUG this => D#5
  MEM[(size_type *)&D.57911 + 8B] = prephitmp_144;
  # DEBUG D#3 => &D.57911.first
  # DEBUG this => D#3
  _124 = prephitmp_49 + prephitmp_144;
  # DEBUG __c1 => _124
  # DEBUG __c2 => D#13
  MEM[(char_type &)_124] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.57911.second
  # DEBUG __str => &D.57910
  # DEBUG this => &D.57910
  # DEBUG D#380 => &D.57910._M_dataplus
  # DEBUG this => &D.57911.second
  # DEBUG D#381 => &MEM[(struct basic_string *)&D.57911 + 32B]._M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => &MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&D.57911 + 32B]._M_p = &MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf;
  _109 = MEM[(char * *)&D.57910];
  # DEBUG D#3 => &D.57910
  # DEBUG this => D#3
  _110 = MEM[(long unsigned int *)&D.57910 + 8B];
  # DEBUG D#1 => &D.57910
  # DEBUG this => D#1
  _111 = _109 + _110;
  # DEBUG D#3 => &D.57910
  # DEBUG this => D#3
  # DEBUG this => &D.57911.second
  # DEBUG __beg => _109
  # DEBUG __end => _111
  # DEBUG this => &D.57911.second
  # DEBUG __beg => _109
  # DEBUG __end => _111
  # DEBUG this => &D.57911.second
  # DEBUG __beg => _109
  # DEBUG __end => _111
  # DEBUG __ptr => _109
  _260 = _111 != 0B;
  _262 = _109 == 0B;
  _261 = _260 & _262;
  if (_261 != 0)
    goto <bb 75>;
  else
    goto <bb 77>;

  <bb 43>:
  _130 = std::__cxx11::basic_string<char>::_M_create (&D.57911.second, &__dnew, 0);

  <bb 44>:
  # DEBUG D#6 => &D.57911.second
  # DEBUG __p => _130
  # DEBUG this => D#6
  MEM[(char * *)&D.57911 + 32B] = _130;
  __dnew.111_131 = __dnew;
  # DEBUG D#7 => &D.57911.second
  # DEBUG __capacity => __dnew.111_131
  # DEBUG this => D#7
  MEM[(size_type *)&D.57911 + 48B] = __dnew.111_131;
  # DEBUG D#3 => &D.57911.second
  # DEBUG this => D#3
  # DEBUG __p => _130
  # DEBUG __k1 => _109
  # DEBUG __k2 => _111
  # DEBUG __d => _130
  # DEBUG __s => _109
  # DEBUG __n => _110
  goto <bb 47>;

  <bb 45>:
  # DEBUG D#3 => &D.57911.second
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf
  # DEBUG __k1 => _109
  # DEBUG __k2 => _111
  # DEBUG __d => &MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf
  # DEBUG __s => _109
  # DEBUG __n => _110
  if (_110 == 1)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  _133 = MEM[(const char_type &)_109];
  # DEBUG D#13 => _109
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.57911 + 48] = _133;
  goto <bb 48>;

  <bb 47>:
  # _269 = PHI <&MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf(45), _130(44)>
  # DEBUG D#3 => &D.57911.second
  # DEBUG this => D#3
  # DEBUG __p => _269
  # DEBUG __k1 => _109
  # DEBUG __k2 => _111
  # DEBUG __d => _269
  # DEBUG __s => _109
  # DEBUG __n => _110
  # DEBUG __s1 => _269
  # DEBUG __s2 => _109
  # DEBUG __n => _110
  __builtin_memcpy (_269, _109, _110);
  pretmp_70 = __dnew;
  pretmp_81 = MEM[(char * *)&D.57911 + 32B];

  <bb 48>:
  # prephitmp_93 = PHI <_110(46), pretmp_70(47)>
  # prephitmp_30 = PHI <&MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf(46), pretmp_81(47)>
  # DEBUG D#929 => __dnew
  # DEBUG this => &D.57911.second
  # DEBUG __n => D#929
  # DEBUG D#5 => &D.57911.second
  # DEBUG __length => D#929
  # DEBUG this => D#5
  MEM[(size_type *)&D.57911 + 40B] = prephitmp_93;
  # DEBUG D#3 => &D.57911.second
  # DEBUG this => D#3
  _136 = prephitmp_30 + prephitmp_93;
  # DEBUG __c1 => _136
  # DEBUG __c2 => D#13
  MEM[(char_type &)_136] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => D#902
  # DEBUG __position$_M_node => __i$_M_node_25
  # DEBUG __x => &D.57911
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => D#941
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_25;
  # DEBUG __x => &D.57911
  # DEBUG this => &__an
  # DEBUG __t => D#941
  # DEBUG __an$_M_t => D#941
  # DEBUG D#570 => &__an
  _58 = &MEM[(struct map *)this_3(D) + 40B]._M_t;
  D.57908 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.157.constprop (_58, __pos, &D.57911);
  goto <bb 54>;

<L9>:

<L7>:
  # DEBUG D#383 => &D.57911.first
  # DEBUG this => D#383
  # DEBUG this => D#383
  # DEBUG this => D#383
  _112 = MEM[(char * *)&D.57911];
  # DEBUG D#3 => D#383
  # DEBUG this => D#3
  # DEBUG this => D#383
  if (&MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf != _112)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG D#186 => MEM[(struct basic_string *)D#383].D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => D#383
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => D#383
  # DEBUG this => D#3
  # DEBUG this => D#383
  # DEBUG D#183 => &MEM[(struct basic_string *)D#383]._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _112
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _112
  # DEBUG this => D#177
  # DEBUG D.57971 => D#178
  operator delete (_112);

  <bb 52>:
  # DEBUG D#187 => &MEM[(struct basic_string *)D#383]._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  MEM[(struct  &)&D.57911] ={v} {CLOBBER};
  resx 11

<L10>:
  goto <bb 65> (<L6>);

  <bb 54>:
  __i$_M_node_64 = MEM[(struct _Rb_tree_iterator *)&D.57908];
  # DEBUG __i$_M_node => __i$_M_node_64
  # DEBUG this => &D.57911
  # DEBUG D#190 => &D.57911.second
  # DEBUG this => D#190
  # DEBUG this => D#190
  # DEBUG this => D#190
  _137 = MEM[(char * *)&D.57911 + 32B];
  # DEBUG D#3 => D#190
  # DEBUG this => D#3
  # DEBUG this => D#190
  if (&MEM[(const struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf != _137)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  # DEBUG D#186 => D#190->D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => D#190
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => D#190
  # DEBUG this => D#3
  # DEBUG this => D#190
  # DEBUG D#183 => &D#190->_M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _137
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _137
  # DEBUG this => D#177
  # DEBUG D.58072 => D#178
  operator delete (_137);

  <bb 56>:
  # DEBUG D#187 => &D#190->_M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  MEM[(struct  &)&D.57911 + 32] ={v} {CLOBBER};
  # DEBUG D#189 => &D.57911.first
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  _139 = MEM[(char * *)&D.57911];
  # DEBUG D#3 => D#189
  # DEBUG this => D#3
  # DEBUG this => D#189
  if (&MEM[(const struct basic_string *)&D.57911].D.11539._M_local_buf != _139)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG D#186 => MEM[(struct basic_string *)D#189].D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => D#189
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => D#189
  # DEBUG this => D#3
  # DEBUG this => D#189
  # DEBUG D#183 => &MEM[(struct basic_string *)D#189]._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _139
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _139
  # DEBUG this => D#177
  # DEBUG D.58087 => D#178
  operator delete (_139);

  <bb 58>:
  # DEBUG D#187 => &MEM[(struct basic_string *)D#189]._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.57911 ={v} {CLOBBER};
  # DEBUG this => &D.57910
  # DEBUG this => &D.57910
  # DEBUG this => &D.57910
  _65 = MEM[(char * *)&D.57910];
  # DEBUG D#3 => &D.57910
  # DEBUG this => D#3
  # DEBUG this => &D.57910
  if (&D.57910.D.11539._M_local_buf != _65)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#186 => D.57910.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.57910
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.57910
  # DEBUG this => D#3
  # DEBUG this => &D.57910
  # DEBUG D#183 => &D.57910._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _65
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _65
  # DEBUG this => D#177
  # DEBUG D.57870 => D#178
  operator delete (_65);

  <bb 60>:
  # DEBUG D#187 => &D.57910._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.57910 ={v} {CLOBBER};

  <bb 61>:
  # __i$_M_node_66 = PHI <__i$_M_node_281(32), __i$_M_node_64(60), __i$_M_node_281(35)>
  # DEBUG __i$_M_node => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_66
  # DEBUG D#572 => &MEM[(struct _Rb_tree_node *)__i$_M_node_66]._M_value_field
  # DEBUG __r => D#572
  _67 = &MEM[(struct pair &)__i$_M_node_66 + 32].second;
  # DEBUG D#574 => {CLOBBER}
  # DEBUG __i$_M_node => D#574
  # DEBUG this => NULL
  # DEBUG __str => value_11(D)
  # DEBUG this => NULL
  # DEBUG __str => value_11(D)
  std::__cxx11::basic_string<char>::_M_assign (_67, value_11(D));
  # DEBUG D#577 => {CLOBBER}
  # DEBUG match$_M_node => D#577
  return;

<L5>:
  std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::~pair (&D.57911);
  D.57911 ={v} {CLOBBER};
  resx 10

<L11>:
  goto <bb 65> (<L6>);

<L8>:

<L6>:
  # DEBUG this => &D.57910
  # DEBUG this => &D.57910
  # DEBUG this => &D.57910
  _68 = MEM[(char * *)&D.57910];
  # DEBUG D#3 => &D.57910
  # DEBUG this => D#3
  # DEBUG this => &D.57910
  if (&D.57910.D.11539._M_local_buf != _68)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # DEBUG D#186 => D.57910.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.57910
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.57910
  # DEBUG this => D#3
  # DEBUG this => &D.57910
  # DEBUG D#183 => &D.57910._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _68
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _68
  # DEBUG this => D#177
  # DEBUG D.57855 => D#178
  operator delete (_68);

  <bb 67>:
  # DEBUG D#187 => &D.57910._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.57910 ={v} {CLOBBER};
  resx 9

<L3>:
  # DEBUG this => &D.35592
  # DEBUG this => &D.35592
  # DEBUG this => &D.35592
  _12 = MEM[(char * *)&D.35592];
  # DEBUG D#3 => &D.35592
  # DEBUG this => D#3
  # DEBUG this => &D.35592
  if (&D.35592.D.11539._M_local_buf != _12)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG D#186 => D.35592.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.35592
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.35592
  # DEBUG this => D#3
  # DEBUG this => &D.35592
  # DEBUG D#183 => &D.35592._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _12
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _12
  # DEBUG this => D#177
  # DEBUG D.54384 => D#178
  operator delete (_12);

  <bb 70>:
  # DEBUG D#187 => &D.35592._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.35592 ={v} {CLOBBER};
  resx 6

  <bb 71>:
  # __i$_M_node_271 = PHI <__i$_M_node_281(35), __i$_M_node_281(79), __i$_M_node_23(78)>

  <bb 85>:
  goto <bb 36>;

  <bb 72>:
  # DEBUG __first => D#932
  # DEBUG __last => _106
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => D#932
  # DEBUG __last => _106
  __dnew = pretmp_237;
  if (pretmp_237 > 15)
    goto <bb 37>;
  else
    goto <bb 39>;

  <bb 73>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L12>:
  goto <bb 65> (<L6>);

  <bb 75>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L13>:
  goto <bb 50> (<L7>);

  <bb 77>:
  # DEBUG __first => _109
  # DEBUG __last => _111
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _109
  # DEBUG __last => _111
  __dnew = _110;
  if (_110 > 15)
    goto <bb 43>;
  else
    goto <bb 45>;

  <bb 78>:
  # DEBUG __r => NULL
  # DEBUG D#208 => {CLOBBER}
  # DEBUG __j$_M_node => D#208
  # DEBUG this => &match.37
  # DEBUG __it => &D.35529
  # DEBUG match$_M_node => __i$_M_node_277
  # DEBUG D#576 => &this_3(D)->_str_map
  # DEBUG this => D#576
  # DEBUG D#53 => &D#576->_M_t
  # DEBUG this => D#53
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_23
  # DEBUG this => &D.35588
  # DEBUG __it => &D.35534
  # DEBUG this => &match
  # DEBUG __x => &D.35588
  # DEBUG D#208 => {CLOBBER}
  # DEBUG __j$_M_node => D#208
  # DEBUG this => &match.37
  # DEBUG __it => &D.35529
  # DEBUG match$_M_node => __i$_M_node_277
  # DEBUG D#576 => &this_3(D)->_str_map
  # DEBUG this => D#576
  # DEBUG D#53 => &D#576->_M_t
  # DEBUG this => D#53
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_23
  # DEBUG this => &D.35588
  # DEBUG __it => &D.35534
  # DEBUG this => &match
  # DEBUG __x => &D.35588
  # DEBUG D#902 => &this_3(D)->_str_map
  # DEBUG this => D#902
  # DEBUG __k => field_4(D)
  # DEBUG this => D#902
  # DEBUG __x => field_4(D)
  # DEBUG D#941 => &MEM[(struct map *)this_3(D) + 40B]._M_t
  # DEBUG this => D#941
  # DEBUG __k => field_4(D)
  # DEBUG this => D#941
  # DEBUG D#35 => D#941
  # DEBUG this => D#35
  # DEBUG D#207 => D#941
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => field_4(D)
  # DEBUG __y => __i$_M_node_23
  # DEBUG __x => __i$_M_node_24
  if (__i$_M_node_24 == 0B)
    goto <bb 71>;
  else
    goto <bb 22>;

}



;; Function void Configuration::AddStrField(const string&, const string&) (_ZN13Configuration11AddStrFieldERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_, funcdef_no=1729, decl_uid=35255, cgraph_uid=415, symbol_order=417)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void Configuration::AddStrField(const string&, const string&) (struct Configuration * const this, const struct string & field, const struct string & value)
{
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58349;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58334;
  struct iterator D.58319;
  struct _Rb_tree_node * __y;
  struct value_type D.58301;
  struct mapped_type D.58300;
  struct iterator D.58299;
  struct iterator D.58298;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.1072;
  struct _Rb_tree_node_base * SR.1075;
  struct mapped_type & D.58294;
  struct _Rep_type * _9;
  char * const _16;
  struct mapped_type & _18;
  char * const _19;
  const size_type _29;
  char * const _34;
  long unsigned int _36;
  const size_type _42;
  char * const _45;
  long unsigned int _48;
  bool _52;
  char * _57;
  char * const _60;
  const size_type _61;
  char * _62;
  char * const _63;
  char * _69;
  long unsigned int __dnew.111_70;
  const char_type _72;
  char * _75;
  char * _81;
  long unsigned int __dnew.111_82;
  const char_type _84;
  char * _87;
  char * const _88;
  char * const _90;
  char * const pretmp_108;
  char * const prephitmp_144;
  const size_type prephitmp_145;
  char * const prephitmp_146;
  size_type pretmp_149;
  size_type prephitmp_150;
  char * const pretmp_151;
  char * const prephitmp_152;
  size_type pretmp_153;
  size_type prephitmp_156;
  char * const pretmp_157;
  char * const prephitmp_158;
  const size_type pretmp_159;
  const size_type pretmp_172;
  const size_type prephitmp_173;
  char * const pretmp_174;
  char * const _180;
  char * const _182;
  bool _186;
  bool _187;
  bool _188;
  bool _189;
  bool _194;

  <bb 2>:
  # DEBUG D#959 => &this_1(D)->_str_map
  # DEBUG this => D#959
  # DEBUG __k => field_4(D)
  # DEBUG this => D#959
  # DEBUG __x => field_4(D)
  # DEBUG D#982 => &MEM[(struct map *)this_1(D) + 40B]._M_t
  # DEBUG this => D#982
  # DEBUG __k => field_4(D)
  # DEBUG this => D#982
  __i$_M_node_5 = &MEM[(struct _Rb_tree *)this_1(D) + 40B]._M_impl._M_header;
  __i$_M_node_20 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 56B];
  # DEBUG D#35 => D#982
  # DEBUG this => D#35
  # DEBUG D#207 => D#982
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => field_4(D)
  # DEBUG __y => __i$_M_node_5
  # DEBUG __x => __i$_M_node_20
  if (__i$_M_node_20 == 0B)
    goto <bb 51>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_159 = MEM[(long unsigned int *)field_4(D) + 8B];
  pretmp_108 = MEM[(char * *)field_4(D)];
  goto <bb 6>;

  <bb 4>:
  # __i$_M_node_28 = PHI <__i$_M_node_24(61), __i$_M_node_25(60)>
  # __i$_M_node_27 = PHI <__i$_M_node_197(61), __i$_M_node_196(60)>
  # DEBUG __y => __i$_M_node_27
  # DEBUG __x => __i$_M_node_28
  if (__i$_M_node_28 == 0B)
    goto <bb 13>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __i$_M_node_197 = PHI <__i$_M_node_20(3), __i$_M_node_28(5)>
  # __i$_M_node_196 = PHI <__i$_M_node_5(3), __i$_M_node_27(5)>
  # DEBUG __y => __i$_M_node_196
  # DEBUG __x => __i$_M_node_197
  # DEBUG __x => __i$_M_node_197
  # DEBUG __x => __i$_M_node_197
  # DEBUG this => __i$_M_node_197
  # DEBUG D#204 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_197]._M_value_field
  # DEBUG __r => D#204
  # DEBUG __x => D#204
  # DEBUG this => D#149
  # DEBUG D#960 => &MEM[(const struct pair &)__i$_M_node_197 + 32].first
  # DEBUG D#205 => &D#206->_M_impl._M_key_compare
  # DEBUG D#203 => D#205
  # DEBUG __x => D#960
  # DEBUG __y => field_4(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#960
  # DEBUG __rhs => field_4(D)
  # DEBUG this => D#960
  # DEBUG __str => field_4(D)
  _29 = MEM[(long unsigned int *)__i$_M_node_197 + 40B];
  # DEBUG D#2 => D#960
  # DEBUG this => D#2
  # DEBUG __size => _29
  # DEBUG D#981 => MEM[(long unsigned int *)field_4(D) + 8B]
  # DEBUG D#2 => field_4(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#981
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_190 = MIN_EXPR <_29, pretmp_159>;
  # DEBUG __len => D#957
  # DEBUG this => field_4(D)
  # DEBUG D#980 => MEM[(char * *)field_4(D)]
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  _34 = MEM[(char * *)__i$_M_node_197 + 32B];
  # DEBUG D#3 => D#960
  # DEBUG this => D#3
  # DEBUG __s1 => _34
  # DEBUG __s2 => D#980
  # DEBUG __n => D#957
  __r_35 = __builtin_memcmp (_34, pretmp_108, __len_190);
  # DEBUG __r => NULL
  if (__r_35 == 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  # DEBUG __n1 => _29
  # DEBUG __n2 => D#981
  _36 = _29 - pretmp_159;
  __d_37 = (const difference_type) _36;
  # DEBUG __d => __d_37
  if (__d_37 > 2147483647)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  if (__d_37 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  __r_38 = (int) _36;

  <bb 10>:
  # __r_39 = PHI <__r_35(6), __r_38(9)>
  # DEBUG __r => __r_39
  # DEBUG D#966 => {CLOBBER}
  # DEBUG __size => D#966
  # DEBUG D#967 => {CLOBBER}
  # DEBUG __osize => D#967
  if (__r_39 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:

  <bb 61>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_197
  __i$_M_node_24 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 16B];
  # DEBUG D#44 => __i$_M_node_197
  # DEBUG __x => D#44
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 12>:

  <bb 60>:
  # DEBUG __r => NULL
  __i$_M_node_25 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 24B];
  # DEBUG D#43 => __i$_M_node_197
  # DEBUG __x => D#43
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 13>:
  # __i$_M_node_204 = PHI <__i$_M_node_27(4)>

  <bb 59>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_204
  # DEBUG __i$_M_node => __i$_M_node_204
  # DEBUG this => D#959
  # DEBUG D#53 => &D#959->_M_t
  # DEBUG this => D#53
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_5
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_5 == __i$_M_node_204)
    goto <bb 52>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_204
  # DEBUG D#571 => &MEM[(struct _Rb_tree_node *)__i$_M_node_204]._M_value_field
  # DEBUG __r => D#571
  # DEBUG D#961 => &MEM[(struct pair &)__i$_M_node_204 + 32].first
  # DEBUG D#52 => D#959
  # DEBUG this => D#52
  # DEBUG D#51 => D#52
  # DEBUG D#50 => &D#51->_M_t
  # DEBUG D#49 => D#50
  # DEBUG this => D#49
  # DEBUG __x => field_4(D)
  # DEBUG __y => D#961
  # DEBUG this => D#203
  # DEBUG __lhs => field_4(D)
  # DEBUG __rhs => D#961
  # DEBUG this => field_4(D)
  # DEBUG __str => D#961
  # DEBUG D#979 => MEM[(long unsigned int *)field_4(D) + 8B]
  # DEBUG D#2 => field_4(D)
  # DEBUG this => D#2
  # DEBUG __size => D#979
  _42 = MEM[(long unsigned int *)__i$_M_node_204 + 40B];
  # DEBUG D#2 => D#961
  # DEBUG this => D#2
  # DEBUG __osize => _42
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_192 = MIN_EXPR <_42, pretmp_159>;
  # DEBUG __len => D#958
  # DEBUG this => D#961
  _45 = MEM[(char * *)__i$_M_node_204 + 32B];
  # DEBUG D#3 => D#961
  # DEBUG this => D#3
  # DEBUG D#978 => MEM[(char * *)field_4(D)]
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#978
  # DEBUG __s2 => _45
  # DEBUG __n => D#958
  __r_47 = __builtin_memcmp (pretmp_108, _45, __len_192);
  # DEBUG __r => NULL
  if (__r_47 == 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # DEBUG __n1 => D#979
  # DEBUG __n2 => _42
  _48 = pretmp_159 - _42;
  __d_49 = (const difference_type) _48;
  # DEBUG __d => __d_49
  if (__d_49 > 2147483647)
    goto <bb 44>;
  else
    goto <bb 16>;

  <bb 16>:
  if (__d_49 < -2147483648)
    goto <bb 19>;
  else
    goto <bb 17>;

  <bb 17>:
  __r_50 = (int) _48;

  <bb 18>:
  # __r_51 = PHI <__r_47(14), __r_50(17)>
  # DEBUG __r => __r_51
  # DEBUG D#972 => {CLOBBER}
  # DEBUG __size => D#972
  # DEBUG D#973 => {CLOBBER}
  # DEBUG __osize => D#973
  if (__r_51 < 0)
    goto <bb 52>;
  else
    goto <bb 44>;

  <bb 19>:
  # __i$_M_node_26 = PHI <__i$_M_node_204(16), __i$_M_node_21(62)>
  # prephitmp_145 = PHI <pretmp_159(16), prephitmp_173(62)>
  # prephitmp_146 = PHI <pretmp_108(16), prephitmp_144(62)>
  # DEBUG this => &D.58300
  # DEBUG this => D#42
  # DEBUG D#41 => D#42
  # DEBUG this => D#41
  # DEBUG this => &D.58300
  # DEBUG D#148 => &D.58300._M_dataplus
  # DEBUG this => D#148
  # DEBUG __dat => &D.58300.D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#148
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&D.58300]._M_p = &D.58300.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.58300
  # DEBUG __n => 0
  # DEBUG D#5 => &D.58300
  # DEBUG __length => 0
  # DEBUG this => D#5
  MEM[(size_type *)&D.58300 + 8B] = 0;
  # DEBUG D#3 => &D.58300
  # DEBUG this => D#3
  # DEBUG __c1 => &D.58300.D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.58300 + 16] = 0;
  # DEBUG this => &D.58301
  # DEBUG __a => field_4(D)
  # DEBUG __b => &D.58300
  # DEBUG this => &D.58301.first
  # DEBUG __str => field_4(D)
  # DEBUG this => field_4(D)
  # DEBUG D#380 => &MEM[(const struct basic_string *)field_4(D)]._M_dataplus
  # DEBUG this => &D.58301.first
  # DEBUG D#381 => &MEM[(struct basic_string *)&D.58301]._M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&D.58301]._M_p = &MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf;
  # DEBUG D#977 => MEM[(char * *)field_4(D)]
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  # DEBUG D#976 => MEM[(long unsigned int *)field_4(D) + 8B]
  # DEBUG D#1 => field_4(D)
  # DEBUG this => D#1
  _57 = prephitmp_146 + prephitmp_145;
  # DEBUG D#3 => field_4(D)
  # DEBUG this => D#3
  # DEBUG this => &D.58301.first
  # DEBUG __beg => D#977
  # DEBUG __end => _57
  # DEBUG this => &D.58301.first
  # DEBUG __beg => D#977
  # DEBUG __end => _57
  # DEBUG this => &D.58301.first
  # DEBUG __beg => D#977
  # DEBUG __end => _57
  # DEBUG __ptr => D#977
  _52 = _57 != 0B;
  _189 = prephitmp_146 == 0B;
  _188 = _52 & _189;
  if (_188 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;

  <bb 20>:
  _69 = std::__cxx11::basic_string<char>::_M_create (&D.58301.first, &__dnew, 0);

  <bb 21>:
  # DEBUG D#6 => &D.58301.first
  # DEBUG __p => _69
  # DEBUG this => D#6
  MEM[(char * *)&D.58301] = _69;
  __dnew.111_70 = __dnew;
  # DEBUG D#7 => &D.58301.first
  # DEBUG __capacity => __dnew.111_70
  # DEBUG this => D#7
  MEM[(size_type *)&D.58301 + 16B] = __dnew.111_70;
  # DEBUG D#3 => &D.58301.first
  # DEBUG this => D#3
  # DEBUG __p => _69
  # DEBUG __k1 => D#977
  # DEBUG __k2 => _57
  # DEBUG __d => _69
  # DEBUG __s => D#977
  # DEBUG __n => D#976
  goto <bb 24>;

  <bb 22>:
  # DEBUG D#3 => &D.58301.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf
  # DEBUG __k1 => D#977
  # DEBUG __k2 => _57
  # DEBUG __d => &MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf
  # DEBUG __s => D#977
  # DEBUG __n => D#976
  if (prephitmp_145 == 1)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  _72 = MEM[(const char_type &)prephitmp_146];
  # DEBUG D#13 => D#977
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.58301 + 16] = _72;
  goto <bb 25>;

  <bb 24>:
  # _180 = PHI <&MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf(22), _69(21)>
  # DEBUG D#3 => &D.58301.first
  # DEBUG this => D#3
  # DEBUG __p => _180
  # DEBUG __k1 => D#977
  # DEBUG __k2 => _57
  # DEBUG __d => _180
  # DEBUG __s => D#977
  # DEBUG __n => D#976
  # DEBUG __s1 => _180
  # DEBUG __s2 => D#977
  # DEBUG __n => D#976
  __builtin_memcpy (_180, prephitmp_146, prephitmp_145);
  pretmp_149 = __dnew;
  pretmp_151 = MEM[(char * *)&D.58301];

  <bb 25>:
  # prephitmp_150 = PHI <prephitmp_145(23), pretmp_149(24)>
  # prephitmp_152 = PHI <&MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf(23), pretmp_151(24)>
  # DEBUG D#975 => __dnew
  # DEBUG this => &D.58301.first
  # DEBUG __n => D#975
  # DEBUG D#5 => &D.58301.first
  # DEBUG __length => D#975
  # DEBUG this => D#5
  MEM[(size_type *)&D.58301 + 8B] = prephitmp_150;
  # DEBUG D#3 => &D.58301.first
  # DEBUG this => D#3
  _75 = prephitmp_152 + prephitmp_150;
  # DEBUG __c1 => _75
  # DEBUG __c2 => D#13
  MEM[(char_type &)_75] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.58301.second
  # DEBUG __str => &D.58300
  # DEBUG this => &D.58300
  # DEBUG D#380 => &D.58300._M_dataplus
  # DEBUG this => &D.58301.second
  # DEBUG D#381 => &MEM[(struct basic_string *)&D.58301 + 32B]._M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&D.58301 + 32B]._M_p = &MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf;
  _60 = MEM[(char * *)&D.58300];
  # DEBUG D#3 => &D.58300
  # DEBUG this => D#3
  _61 = MEM[(long unsigned int *)&D.58300 + 8B];
  # DEBUG D#1 => &D.58300
  # DEBUG this => D#1
  _62 = _60 + _61;
  # DEBUG D#3 => &D.58300
  # DEBUG this => D#3
  # DEBUG this => &D.58301.second
  # DEBUG __beg => _60
  # DEBUG __end => _62
  # DEBUG this => &D.58301.second
  # DEBUG __beg => _60
  # DEBUG __end => _62
  # DEBUG this => &D.58301.second
  # DEBUG __beg => _60
  # DEBUG __end => _62
  # DEBUG __ptr => _60
  _186 = _62 != 0B;
  _187 = _60 == 0B;
  _194 = _186 & _187;
  if (_194 != 0)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 26>:
  _81 = std::__cxx11::basic_string<char>::_M_create (&D.58301.second, &__dnew, 0);

  <bb 27>:
  # DEBUG D#6 => &D.58301.second
  # DEBUG __p => _81
  # DEBUG this => D#6
  MEM[(char * *)&D.58301 + 32B] = _81;
  __dnew.111_82 = __dnew;
  # DEBUG D#7 => &D.58301.second
  # DEBUG __capacity => __dnew.111_82
  # DEBUG this => D#7
  MEM[(size_type *)&D.58301 + 48B] = __dnew.111_82;
  # DEBUG D#3 => &D.58301.second
  # DEBUG this => D#3
  # DEBUG __p => _81
  # DEBUG __k1 => _60
  # DEBUG __k2 => _62
  # DEBUG __d => _81
  # DEBUG __s => _60
  # DEBUG __n => _61
  goto <bb 30>;

  <bb 28>:
  # DEBUG D#3 => &D.58301.second
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf
  # DEBUG __k1 => _60
  # DEBUG __k2 => _62
  # DEBUG __d => &MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf
  # DEBUG __s => _60
  # DEBUG __n => _61
  if (_61 == 1)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _84 = MEM[(const char_type &)_60];
  # DEBUG D#13 => _60
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.58301 + 48] = _84;
  goto <bb 31>;

  <bb 30>:
  # _182 = PHI <&MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf(28), _81(27)>
  # DEBUG D#3 => &D.58301.second
  # DEBUG this => D#3
  # DEBUG __p => _182
  # DEBUG __k1 => _60
  # DEBUG __k2 => _62
  # DEBUG __d => _182
  # DEBUG __s => _60
  # DEBUG __n => _61
  # DEBUG __s1 => _182
  # DEBUG __s2 => _60
  # DEBUG __n => _61
  __builtin_memcpy (_182, _60, _61);
  pretmp_153 = __dnew;
  pretmp_157 = MEM[(char * *)&D.58301 + 32B];

  <bb 31>:
  # prephitmp_156 = PHI <_61(29), pretmp_153(30)>
  # prephitmp_158 = PHI <&MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf(29), pretmp_157(30)>
  # DEBUG D#974 => __dnew
  # DEBUG this => &D.58301.second
  # DEBUG __n => D#974
  # DEBUG D#5 => &D.58301.second
  # DEBUG __length => D#974
  # DEBUG this => D#5
  MEM[(size_type *)&D.58301 + 40B] = prephitmp_156;
  # DEBUG D#3 => &D.58301.second
  # DEBUG this => D#3
  _87 = prephitmp_158 + prephitmp_156;
  # DEBUG __c1 => _87
  # DEBUG __c2 => D#13
  MEM[(char_type &)_87] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => D#959
  # DEBUG __position$_M_node => __i$_M_node_26
  # DEBUG __x => &D.58301
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => D#982
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_26;
  # DEBUG __x => &D.58301
  # DEBUG this => &__an
  # DEBUG __t => D#982
  # DEBUG __an$_M_t => D#982
  # DEBUG D#570 => &__an
  _9 = &MEM[(struct map *)this_1(D) + 40B]._M_t;
  D.58298 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.157.constprop (_9, __pos, &D.58301);
  goto <bb 37>;

<L4>:

<L2>:
  # DEBUG D#383 => &D.58301.first
  # DEBUG this => D#383
  # DEBUG this => D#383
  # DEBUG this => D#383
  _63 = MEM[(char * *)&D.58301];
  # DEBUG D#3 => D#383
  # DEBUG this => D#3
  # DEBUG this => D#383
  if (&MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf != _63)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # DEBUG D#186 => MEM[(struct basic_string *)D#383].D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => D#383
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => D#383
  # DEBUG this => D#3
  # DEBUG this => D#383
  # DEBUG D#183 => &MEM[(struct basic_string *)D#383]._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _63
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _63
  # DEBUG this => D#177
  # DEBUG D.58361 => D#178
  operator delete (_63);

  <bb 35>:
  # DEBUG D#187 => &MEM[(struct basic_string *)D#383]._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  MEM[(struct  &)&D.58301] ={v} {CLOBBER};
  resx 3

<L5>:
  goto <bb 48> (<L1>);

  <bb 37>:
  __i$_M_node_15 = MEM[(struct _Rb_tree_iterator *)&D.58298];
  # DEBUG __i$_M_node => __i$_M_node_15
  # DEBUG this => &D.58301
  # DEBUG D#190 => &D.58301.second
  # DEBUG this => D#190
  # DEBUG this => D#190
  # DEBUG this => D#190
  _88 = MEM[(char * *)&D.58301 + 32B];
  # DEBUG D#3 => D#190
  # DEBUG this => D#3
  # DEBUG this => D#190
  if (&MEM[(const struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf != _88)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#186 => D#190->D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => D#190
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => D#190
  # DEBUG this => D#3
  # DEBUG this => D#190
  # DEBUG D#183 => &D#190->_M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _88
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _88
  # DEBUG this => D#177
  # DEBUG D.58462 => D#178
  operator delete (_88);

  <bb 39>:
  # DEBUG D#187 => &D#190->_M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  MEM[(struct  &)&D.58301 + 32] ={v} {CLOBBER};
  # DEBUG D#189 => &D.58301.first
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  _90 = MEM[(char * *)&D.58301];
  # DEBUG D#3 => D#189
  # DEBUG this => D#3
  # DEBUG this => D#189
  if (&MEM[(const struct basic_string *)&D.58301].D.11539._M_local_buf != _90)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # DEBUG D#186 => MEM[(struct basic_string *)D#189].D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => D#189
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => D#189
  # DEBUG this => D#3
  # DEBUG this => D#189
  # DEBUG D#183 => &MEM[(struct basic_string *)D#189]._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _90
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _90
  # DEBUG this => D#177
  # DEBUG D.58477 => D#178
  operator delete (_90);

  <bb 41>:
  # DEBUG D#187 => &MEM[(struct basic_string *)D#189]._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.58301 ={v} {CLOBBER};
  # DEBUG this => &D.58300
  # DEBUG this => &D.58300
  # DEBUG this => &D.58300
  _16 = MEM[(char * *)&D.58300];
  # DEBUG D#3 => &D.58300
  # DEBUG this => D#3
  # DEBUG this => &D.58300
  if (&D.58300.D.11539._M_local_buf != _16)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#186 => D.58300.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.58300
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.58300
  # DEBUG this => D#3
  # DEBUG this => &D.58300
  # DEBUG D#183 => &D.58300._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _16
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _16
  # DEBUG this => D#177
  # DEBUG D.58260 => D#178
  operator delete (_16);

  <bb 43>:
  # DEBUG D#187 => &D.58300._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.58300 ={v} {CLOBBER};

  <bb 44>:
  # __i$_M_node_17 = PHI <__i$_M_node_204(15), __i$_M_node_15(43), __i$_M_node_204(18)>
  # DEBUG __i$_M_node => __i$_M_node_17
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_17
  # DEBUG D#572 => &MEM[(struct _Rb_tree_node *)__i$_M_node_17]._M_value_field
  # DEBUG __r => D#572
  _18 = &MEM[(struct pair &)__i$_M_node_17 + 32].second;
  # DEBUG D#574 => {CLOBBER}
  # DEBUG __i$_M_node => D#574
  # DEBUG this => NULL
  # DEBUG __str => value_7(D)
  # DEBUG this => NULL
  # DEBUG __str => value_7(D)
  std::__cxx11::basic_string<char>::_M_assign (_18, value_7(D));
  return;

<L0>:
  std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::~pair (&D.58301);
  D.58301 ={v} {CLOBBER};
  resx 2

<L6>:
  goto <bb 48> (<L1>);

<L3>:

<L1>:
  # DEBUG this => &D.58300
  # DEBUG this => &D.58300
  # DEBUG this => &D.58300
  _19 = MEM[(char * *)&D.58300];
  # DEBUG D#3 => &D.58300
  # DEBUG this => D#3
  # DEBUG this => &D.58300
  if (&D.58300.D.11539._M_local_buf != _19)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # DEBUG D#186 => D.58300.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.58300
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.58300
  # DEBUG this => D#3
  # DEBUG this => &D.58300
  # DEBUG D#183 => &D.58300._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _19
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _19
  # DEBUG this => D#177
  # DEBUG D.58245 => D#178
  operator delete (_19);

  <bb 50>:
  # DEBUG D#187 => &D.58300._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.58300 ={v} {CLOBBER};
  resx 1

  <bb 51>:
  pretmp_172 = MEM[(long unsigned int *)field_4(D) + 8B];
  pretmp_174 = MEM[(char * *)field_4(D)];

  <bb 52>:
  # __i$_M_node_21 = PHI <__i$_M_node_204(18), __i$_M_node_204(59), __i$_M_node_5(51)>
  # prephitmp_173 = PHI <pretmp_159(18), pretmp_159(59), pretmp_172(51)>
  # prephitmp_144 = PHI <pretmp_108(18), pretmp_108(59), pretmp_174(51)>

  <bb 62>:
  goto <bb 19>;

  <bb 53>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L7>:
  goto <bb 48> (<L1>);

  <bb 55>:
  # DEBUG __first => D#977
  # DEBUG __last => _57
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => D#977
  # DEBUG __last => _57
  __dnew = prephitmp_145;
  if (prephitmp_145 > 15)
    goto <bb 20>;
  else
    goto <bb 22>;

  <bb 56>:
  # DEBUG __first => _60
  # DEBUG __last => _62
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _60
  # DEBUG __last => _62
  __dnew = _61;
  if (_61 > 15)
    goto <bb 26>;
  else
    goto <bb 28>;

  <bb 57>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L8>:
  goto <bb 33> (<L2>);

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_, funcdef_no=2563, decl_uid=33649, cgraph_uid=1249, symbol_order=1251)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_tree * const this, const struct key_type & __k)
{
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58538;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58523;
  struct _Rb_tree_node_base * const __j$_M_node;
  bool __comp;
  struct _Rb_tree_node_base * const D.42467;
  struct _Rb_tree_node_base * const D.42468;
  struct pair D.43767;
  const size_type pretmp_1;
  char * const prephitmp_13;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node_base * _24;
  const size_type _34;
  char * const _37;
  long unsigned int _40;
  char * const pretmp_44;
  long unsigned int _52;
  const size_type prephitmp_61;
  char * const pretmp_64;
  char * const prephitmp_65;
  const size_type pretmp_67;
  const size_type pretmp_76;
  const size_type prephitmp_77;
  const size_type prephitmp_78;
  const size_type pretmp_79;
  char * const pretmp_80;
  char * const _83;
  const size_type _84;

  <bb 2>:
  _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
  # DEBUG D#36 => this_9(D)
  # DEBUG this => D#36
  # DEBUG __x => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#1010 => &this_9(D)->_M_impl._M_header
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => D#1010
  # DEBUG __x => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = &this_9(D)->_M_impl._M_header;
  goto <bb 15>;

  <bb 4>:
  pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_44 = MEM[(char * *)__k_12(D)];
  goto <bb 7>;

  <bb 5>:
  # _6 = PHI <_22(27), _23(28)>
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __comp => __comp_56
  # DEBUG __y => _10
  # DEBUG __x => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # _10 = PHI <_21(4), _6(6)>
  # DEBUG __comp => 1
  # DEBUG __x => _10
  # DEBUG __y => _10
  # DEBUG __x => _10
  # DEBUG __x => _10
  # DEBUG this => _10
  # DEBUG D#215 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
  # DEBUG __r => D#215
  # DEBUG __x => D#215
  # DEBUG this => D#151
  # DEBUG D#990 => &MEM[(const struct pair &)_10 + 32].first
  # DEBUG D#355 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#203 => D#355
  # DEBUG __x => __k_12(D)
  # DEBUG __y => D#990
  # DEBUG this => D#203
  # DEBUG __lhs => __k_12(D)
  # DEBUG __rhs => D#990
  # DEBUG this => __k_12(D)
  # DEBUG __str => D#990
  # DEBUG D#1009 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#2 => __k_12(D)
  # DEBUG this => D#2
  # DEBUG __size => D#1009
  _34 = MEM[(long unsigned int *)_10 + 40B];
  # DEBUG D#2 => D#990
  # DEBUG this => D#2
  # DEBUG __osize => _34
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __len => D#988
  # DEBUG this => D#990
  _37 = MEM[(char * *)_10 + 32B];
  # DEBUG D#3 => D#990
  # DEBUG this => D#3
  # DEBUG D#1008 => MEM[(char * *)__k_12(D)]
  # DEBUG D#3 => __k_12(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#1008
  # DEBUG __s2 => _37
  # DEBUG __n => D#988
  __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
  # DEBUG __r => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => D#1009
  # DEBUG __n2 => _34
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_type) _40;
  # DEBUG __d => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_42 = (int) _40;

  <bb 11>:
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __r => __r_43
  # DEBUG D#996 => {CLOBBER}
  # DEBUG __size => D#996
  # DEBUG D#997 => {CLOBBER}
  # DEBUG __osize => D#997
  # DEBUG __comp => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __comp => 1
  _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
  # DEBUG D#46 => _10
  # DEBUG __x => D#46
  goto <bb 5>;

  <bb 13>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG __comp => 0
  _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
  # DEBUG D#45 => _10
  # DEBUG __x => D#45
  goto <bb 5>;

  <bb 14>:
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # _83 = PHI <_37(5)>
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>

  <bb 26>:
  # DEBUG this => &__j
  # DEBUG __x => _85
  # DEBUG __j$_M_node => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG this => &__j
  # DEBUG __x => _57
  # DEBUG __j$_M_node => _57
  _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
  # DEBUG D#57 => this_9(D)
  # DEBUG this => D#57
  # DEBUG this => NULL
  # DEBUG __x => _24
  # DEBUG this => &__j
  # DEBUG __x => &D.42466
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &D.42469
  # DEBUG __a => &D.42467
  # DEBUG __b => &D.42468
  MEM[(struct pair *)&D.43767] = 0B;
  MEM[(struct pair *)&D.43767 + 8B] = _57;
  goto <bb 25>;

  <bb 17>:
  # DEBUG this => &__j
  __j$_M_node_25 = std::_Rb_tree_decrement (_57);
  # DEBUG __j$_M_node => __j$_M_node_25
  pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_80 = MEM[(char * *)__k_12(D)];
  pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
  pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  <bb 18>:
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_node => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG this => __j$_M_node_20
  # DEBUG D#152 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
  # DEBUG __r => D#152
  # DEBUG __x => D#152
  # DEBUG this => D#151
  # DEBUG D#991 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
  # DEBUG D#354 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#203 => D#354
  # DEBUG __x => D#991
  # DEBUG __y => __k_12(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#991
  # DEBUG __rhs => __k_12(D)
  # DEBUG this => D#991
  # DEBUG __str => __k_12(D)
  # DEBUG D#1007 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
  # DEBUG D#2 => D#991
  # DEBUG this => D#2
  # DEBUG __size => D#1007
  # DEBUG D#1006 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#2 => __k_12(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#1006
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#989
  # DEBUG this => __k_12(D)
  # DEBUG D#1005 => MEM[(char * *)__k_12(D)]
  # DEBUG D#3 => __k_12(D)
  # DEBUG this => D#3
  # DEBUG D#1004 => MEM[(char * *)__j$_M_node_20 + 32B]
  # DEBUG D#3 => D#991
  # DEBUG this => D#3
  # DEBUG __s1 => D#1004
  # DEBUG __s2 => D#1005
  # DEBUG __n => D#989
  __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __r => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG __n1 => D#1007
  # DEBUG __n2 => D#1006
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_type) _52;
  # DEBUG __d => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;

  <bb 20>:
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 21>:
  __r_54 = (int) _52;

  <bb 22>:
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __r => __r_55
  # DEBUG D#1002 => {CLOBBER}
  # DEBUG __size => D#1002
  # DEBUG D#1003 => {CLOBBER}
  # DEBUG __osize => D#1003
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:

  <bb 31>:
  # DEBUG __r => NULL
  # DEBUG this => &D.42472
  # DEBUG __a => &D.42470
  # DEBUG __b => &D.42471
  MEM[(struct pair *)&D.43767] = 0B;
  MEM[(struct pair *)&D.43767 + 8B] = _5;
  goto <bb 25>;

  <bb 24>:

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG this => &D.42474
  # DEBUG __a => &__j._M_node
  # DEBUG __b => &D.42473
  MEM[(struct pair *)&D.43767] = __j$_M_node_20;
  MEM[(struct pair *)&D.43767 + 8B] = 0B;

  <bb 25>:

  <bb 29>:
  # DEBUG D#353 => {CLOBBER}
  # DEBUG __j$_M_node => D#353
  return D.43767;

}



;; Function void Configuration::Assign(const string&, int) (_ZN13Configuration6AssignERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi, funcdef_no=1731, decl_uid=35263, cgraph_uid=417, symbol_order=419)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void Configuration::Assign(const string&, int) (struct Configuration * const this, const struct string & field, int value)
{
  struct _Rb_tree_node_base * SR.1316;
  struct _Rb_tree_node_base * SR.1315;
  struct _Rb_tree_node_base * SR.1314;
  const struct _Rb_tree_node_base * __pos;
  struct _Rb_tree_node_base * SR.1312;
  struct _Rb_tree_node_base * SR.1311;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58891;
  bool __insert_left;
  struct iterator D.58876;
  size_type __dnew;
  struct iterator D.58817;
  struct pair __res;
  struct _Rb_tree_node_base * __res$first;
  struct _Rb_tree_node_base * __res$second;
  struct const_iterator __position;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58807;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58792;
  struct iterator D.58777;
  struct _Rb_tree_node * __y;
  struct value_type D.58760;
  struct iterator D.58759;
  struct iterator D.58758;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.1107;
  struct _Rb_tree_node_base * SR.1110;
  mapped_type & D.58754;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58685;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58670;
  struct iterator D.58655;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.1119;
  struct iterator D.54812;
  struct basic_string D.35772;
  char * const _3;
  const size_type _17;
  const size_type pretmp_19;
  char * const pretmp_21;
  bool _27;
  char * const _39;
  long unsigned int _41;
  const size_type _47;
  char * const _50;
  long unsigned int _53;
  struct _Rep_type * _58;
  char * _66;
  char * const _68;
  char * const _71;
  size_type prephitmp_73;
  char * const pretmp_78;
  const size_type _81;
  char * const _86;
  long unsigned int _88;
  bool _92;
  const size_type _94;
  char * const prephitmp_96;
  char * const _97;
  long unsigned int _100;
  bool _104;
  char * _113;
  long unsigned int __dnew.111_114;
  const char_type _116;
  char * _119;
  struct _Rb_tree_node * _124;
  int _127;
  long unsigned int _128;
  long unsigned int _129;
  const size_type _130;
  const size_type _131;
  char * const _134;
  char * const _135;
  long unsigned int _137;
  struct pair * _142;
  char * _144;
  char * const _145;
  const size_type _146;
  char * _147;
  int _148;
  void * _149;
  char * _155;
  long unsigned int __dnew.111_156;
  const char_type _158;
  char * _161;
  char * const pretmp_165;
  size_type pretmp_169;
  char * const _173;
  char * const prephitmp_179;
  size_type prephitmp_180;
  size_type pretmp_181;
  bool _264;
  bool _268;
  bool _269;
  bool _272;
  char * const _292;
  bool _294;
  bool _296;

  <bb 2>:
  # DEBUG this => &match
  # DEBUG match$_M_node => 0B
  # DEBUG D#606 => &this_4(D)->_int_map
  # DEBUG this => D#606
  # DEBUG __x => field_5(D)
  # DEBUG D#1059 => &MEM[(struct map *)this_4(D) + 88B]._M_t
  # DEBUG this => D#1059
  # DEBUG __k => field_5(D)
  # DEBUG this => D#1059
  __pos_23 = &MEM[(struct _Rb_tree *)this_4(D) + 88B]._M_impl._M_header;
  __pos_24 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 104B];
  # DEBUG D#36 => D#1059
  # DEBUG this => D#36
  # DEBUG D#218 => D#1059
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => field_5(D)
  # DEBUG __y => __pos_23
  # DEBUG __x => __pos_24
  if (__pos_24 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_19 = MEM[(long unsigned int *)field_5(D) + 8B];
  pretmp_21 = MEM[(char * *)field_5(D)];
  goto <bb 7>;

  <bb 4>:
  # DEBUG this => D#1059
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG D#219 => {CLOBBER}
  # DEBUG __j$_M_node => D#219
  # DEBUG this => &match.41
  # DEBUG __it => &D.35712
  # DEBUG match$_M_node => __pos_23
  # DEBUG D#607 => &this_4(D)->_int_map
  # DEBUG this => D#607
  # DEBUG D#56 => &D#607->_M_t
  # DEBUG this => D#56
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &D.35771
  # DEBUG __it => &D.35717
  # DEBUG this => &match
  # DEBUG __x => &D.35771
  # DEBUG D#219 => {CLOBBER}
  # DEBUG __j$_M_node => D#219
  # DEBUG this => &match.41
  # DEBUG __it => &D.35712
  # DEBUG match$_M_node => __pos_23
  # DEBUG D#607 => &this_4(D)->_int_map
  # DEBUG this => D#607
  # DEBUG D#56 => &D#607->_M_t
  # DEBUG this => D#56
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &D.35771
  # DEBUG __it => &D.35717
  # DEBUG this => &match
  # DEBUG __x => &D.35771
  D.35772 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown integer field: ", field_5(D)); [return slot optimization]
  Configuration::ParseError (this_4(D), &D.35772, 0);

  <bb 5>:
  # __pos_57 = PHI <__pos_28(81), __pos_29(80)>
  # __pos_80 = PHI <__pos_318(81), __pos_322(80)>
  # DEBUG __y => __pos_80
  # DEBUG __x => __pos_57
  if (__pos_57 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __pos_318 = PHI <__pos_24(3), __pos_57(6)>
  # __pos_322 = PHI <__pos_23(3), __pos_80(6)>
  # DEBUG __y => __pos_322
  # DEBUG __x => __pos_318
  # DEBUG __x => __pos_318
  # DEBUG __x => __pos_318
  # DEBUG this => __pos_318
  # DEBUG D#215 => &MEM[(const struct _Rb_tree_node *)__pos_318]._M_value_field
  # DEBUG __r => D#215
  # DEBUG __x => D#215
  # DEBUG this => D#151
  # DEBUG D#1060 => &MEM[(const struct pair &)__pos_318 + 32].first
  # DEBUG D#216 => &D#217->_M_impl._M_key_compare
  # DEBUG D#203 => D#216
  # DEBUG __x => D#1060
  # DEBUG __y => field_5(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#1060
  # DEBUG __rhs => field_5(D)
  # DEBUG this => D#1060
  # DEBUG __str => field_5(D)
  _17 = MEM[(long unsigned int *)__pos_318 + 40B];
  # DEBUG D#2 => D#1060
  # DEBUG this => D#2
  # DEBUG __size => _17
  # DEBUG D#1107 => MEM[(long unsigned int *)field_5(D) + 8B]
  # DEBUG D#2 => field_5(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#1107
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_309 = MIN_EXPR <_17, pretmp_19>;
  # DEBUG __len => D#1054
  # DEBUG this => field_5(D)
  # DEBUG D#1106 => MEM[(char * *)field_5(D)]
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  _39 = MEM[(char * *)__pos_318 + 32B];
  # DEBUG D#3 => D#1060
  # DEBUG this => D#3
  # DEBUG __s1 => _39
  # DEBUG __s2 => D#1106
  # DEBUG __n => D#1054
  __r_40 = __builtin_memcmp (_39, pretmp_21, __len_309);
  # DEBUG __r => NULL
  if (__r_40 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => _17
  # DEBUG __n2 => D#1107
  _41 = _17 - pretmp_19;
  __d_42 = (const difference_type) _41;
  # DEBUG __d => __d_42
  if (__d_42 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_42 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_43 = (int) _41;

  <bb 11>:
  # __r_44 = PHI <__r_40(7), __r_43(10)>
  # DEBUG __r => __r_44
  # DEBUG D#1070 => {CLOBBER}
  # DEBUG __size => D#1070
  # DEBUG D#1071 => {CLOBBER}
  # DEBUG __osize => D#1071
  if (__r_44 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 81>:
  # DEBUG __r => NULL
  # DEBUG __y => __pos_318
  __pos_28 = MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B];
  # DEBUG D#46 => __pos_318
  # DEBUG __x => D#46
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 13>:

  <bb 80>:
  # DEBUG __r => NULL
  __pos_29 = MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B];
  # DEBUG D#45 => __pos_318
  # DEBUG __x => D#45
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 14>:
  # __pos_312 = PHI <__pos_80(5)>

  <bb 79>:
  # DEBUG this => NULL
  # DEBUG __x => __pos_312
  # DEBUG __j$_M_node => __pos_312
  # DEBUG this => D#1059
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__pos_23 == __pos_312)
    goto <bb 4>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __pos_312
  # DEBUG __x => __pos_312
  # DEBUG this => __pos_312
  # DEBUG D#152 => &MEM[(const struct _Rb_tree_node *)__pos_312]._M_value_field
  # DEBUG __r => D#152
  # DEBUG __x => D#152
  # DEBUG this => D#151
  # DEBUG D#1061 => &MEM[(const struct pair &)__pos_312 + 32].first
  # DEBUG D#220 => &MEM[(struct _Rb_tree *)D#1059]._M_impl._M_key_compare
  # DEBUG D#203 => D#220
  # DEBUG __x => field_5(D)
  # DEBUG __y => D#1061
  # DEBUG this => D#203
  # DEBUG __lhs => field_5(D)
  # DEBUG __rhs => D#1061
  # DEBUG this => field_5(D)
  # DEBUG __str => D#1061
  # DEBUG D#1105 => MEM[(long unsigned int *)field_5(D) + 8B]
  # DEBUG D#2 => field_5(D)
  # DEBUG this => D#2
  # DEBUG __size => D#1105
  _47 = MEM[(long unsigned int *)__pos_312 + 40B];
  # DEBUG D#2 => D#1061
  # DEBUG this => D#2
  # DEBUG __osize => _47
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_305 = MIN_EXPR <pretmp_19, _47>;
  # DEBUG __len => D#1055
  # DEBUG this => D#1061
  _50 = MEM[(char * *)__pos_312 + 32B];
  # DEBUG D#3 => D#1061
  # DEBUG this => D#3
  # DEBUG D#1104 => MEM[(char * *)field_5(D)]
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#1104
  # DEBUG __s2 => _50
  # DEBUG __n => D#1055
  __r_52 = __builtin_memcmp (pretmp_21, _50, __len_305);
  # DEBUG __r => NULL
  if (__r_52 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;

  <bb 16>:
  # DEBUG __n1 => D#1105
  # DEBUG __n2 => _47
  _53 = pretmp_19 - _47;
  __d_54 = (const difference_type) _53;
  # DEBUG __d => __d_54
  if (__d_54 > 2147483647)
    goto <bb 77>;
  else
    goto <bb 17>;

  <bb 17>:
  if (__d_54 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;

  <bb 18>:
  __r_55 = (int) _53;

  <bb 19>:
  # __r_56 = PHI <__r_52(15), __r_55(18)>
  # DEBUG __r => __r_56
  # DEBUG D#1076 => {CLOBBER}
  # DEBUG __size => D#1076
  # DEBUG D#1077 => {CLOBBER}
  # DEBUG __osize => D#1077
  if (__r_56 < 0)
    goto <bb 4>;
  else
    goto <bb 77>;

  <bb 20>:
  # __pos_34 = PHI <__pos_76(83), __pos_77(82)>
  # __pos_33 = PHI <__pos_319(83), __pos_141(82)>
  # DEBUG __y => __pos_33
  # DEBUG __x => __pos_34
  if (__pos_34 == 0B)
    goto <bb 30>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 23>;

  <bb 22>:

  <bb 23>:
  # __pos_319 = PHI <__pos_24(22), __pos_34(21)>
  # __pos_141 = PHI <__pos_23(22), __pos_33(21)>
  # DEBUG __y => __pos_141
  # DEBUG __x => __pos_319
  # DEBUG __x => __pos_319
  # DEBUG __x => __pos_319
  # DEBUG this => __pos_319
  # DEBUG D#215 => &MEM[(const struct _Rb_tree_node *)__pos_319]._M_value_field
  # DEBUG __r => D#215
  # DEBUG __x => D#215
  # DEBUG this => D#151
  # DEBUG D#1063 => &MEM[(const struct pair &)__pos_319 + 32].first
  # DEBUG D#216 => &D#217->_M_impl._M_key_compare
  # DEBUG D#203 => D#216
  # DEBUG __x => D#1063
  # DEBUG __y => field_5(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#1063
  # DEBUG __rhs => field_5(D)
  # DEBUG this => D#1063
  # DEBUG __str => field_5(D)
  _81 = MEM[(long unsigned int *)__pos_319 + 40B];
  # DEBUG D#2 => D#1063
  # DEBUG this => D#2
  # DEBUG __size => _81
  # DEBUG D#1103 => MEM[(long unsigned int *)field_5(D) + 8B]
  # DEBUG D#2 => field_5(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#1103
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_302 = MIN_EXPR <pretmp_19, _81>;
  # DEBUG __len => D#1056
  # DEBUG this => field_5(D)
  # DEBUG D#1102 => MEM[(char * *)field_5(D)]
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  _86 = MEM[(char * *)__pos_319 + 32B];
  # DEBUG D#3 => D#1063
  # DEBUG this => D#3
  # DEBUG __s1 => _86
  # DEBUG __s2 => D#1102
  # DEBUG __n => D#1056
  __r_87 = __builtin_memcmp (_86, pretmp_21, __len_302);
  # DEBUG __r => NULL
  if (__r_87 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 24>:
  # DEBUG __n1 => _81
  # DEBUG __n2 => D#1103
  _88 = _81 - pretmp_19;
  __d_89 = (const difference_type) _88;
  # DEBUG __d => __d_89
  if (__d_89 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 25>;

  <bb 25>:
  if (__d_89 < -2147483648)
    goto <bb 29>;
  else
    goto <bb 26>;

  <bb 26>:
  __r_90 = (int) _88;

  <bb 27>:
  # __r_91 = PHI <__r_87(23), __r_90(26)>
  # DEBUG __r => __r_91
  # DEBUG D#1082 => {CLOBBER}
  # DEBUG __size => D#1082
  # DEBUG D#1083 => {CLOBBER}
  # DEBUG __osize => D#1083
  if (__r_91 >= 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:

  <bb 83>:
  # DEBUG __r => NULL
  # DEBUG __y => __pos_319
  __pos_76 = MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B];
  # DEBUG D#46 => __pos_319
  # DEBUG __x => D#46
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 29>:

  <bb 82>:
  # DEBUG __r => NULL
  __pos_77 = MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B];
  # DEBUG D#45 => __pos_319
  # DEBUG __x => D#45
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 30>:
  # __pos_313 = PHI <__pos_33(20)>

  <bb 78>:
  # DEBUG this => NULL
  # DEBUG __x => __pos_313
  # DEBUG __i$_M_node => __pos_313
  # DEBUG this => D#1062
  # DEBUG D#56 => &D#1062->_M_t
  # DEBUG this => D#56
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__pos_23 == __pos_313)
    goto <bb 71>;
  else
    goto <bb 31>;

  <bb 31>:
  # DEBUG this => &__i
  # DEBUG this => __pos_313
  # DEBUG D#602 => &MEM[(struct _Rb_tree_node *)__pos_313]._M_value_field
  # DEBUG __r => D#602
  # DEBUG D#1064 => &MEM[(struct pair &)__pos_313 + 32].first
  # DEBUG D#62 => D#1062
  # DEBUG this => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#60 => &D#61->_M_t
  # DEBUG D#59 => D#60
  # DEBUG this => D#59
  # DEBUG __x => field_5(D)
  # DEBUG __y => D#1064
  # DEBUG this => D#203
  # DEBUG __lhs => field_5(D)
  # DEBUG __rhs => D#1064
  # DEBUG this => field_5(D)
  # DEBUG __str => D#1064
  # DEBUG D#1101 => MEM[(long unsigned int *)field_5(D) + 8B]
  # DEBUG D#2 => field_5(D)
  # DEBUG this => D#2
  # DEBUG __size => D#1101
  _94 = MEM[(long unsigned int *)__pos_313 + 40B];
  # DEBUG D#2 => D#1064
  # DEBUG this => D#2
  # DEBUG __osize => _94
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_301 = MIN_EXPR <pretmp_19, _94>;
  # DEBUG __len => D#1057
  # DEBUG this => D#1064
  _97 = MEM[(char * *)__pos_313 + 32B];
  # DEBUG D#3 => D#1064
  # DEBUG this => D#3
  # DEBUG D#1100 => MEM[(char * *)field_5(D)]
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#1100
  # DEBUG __s2 => _97
  # DEBUG __n => D#1057
  __r_99 = __builtin_memcmp (pretmp_21, _97, __len_301);
  # DEBUG __r => NULL
  if (__r_99 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;

  <bb 32>:
  # DEBUG __n1 => D#1101
  # DEBUG __n2 => _94
  _100 = pretmp_19 - _94;
  __d_101 = (const difference_type) _100;
  # DEBUG __d => __d_101
  if (__d_101 > 2147483647)
    goto <bb 63>;
  else
    goto <bb 33>;

  <bb 33>:
  if (__d_101 < -2147483648)
    goto <bb 36>;
  else
    goto <bb 34>;

  <bb 34>:
  __r_102 = (int) _100;

  <bb 35>:
  # __r_103 = PHI <__r_99(31), __r_102(34)>
  # DEBUG __r => __r_103
  # DEBUG D#1088 => {CLOBBER}
  # DEBUG __size => D#1088
  # DEBUG D#1089 => {CLOBBER}
  # DEBUG __osize => D#1089
  if (__r_103 < 0)
    goto <bb 71>;
  else
    goto <bb 63>;

  <bb 36>:
  # __pos_133 = PHI <__pos_313(33), __pos_162(84)>
  # DEBUG this => &D.58760
  # DEBUG __a => field_5(D)
  # DEBUG __b => NULL
  # DEBUG this => &D.58760.first
  # DEBUG __str => field_5(D)
  # DEBUG this => field_5(D)
  # DEBUG D#380 => &MEM[(const struct basic_string *)field_5(D)]._M_dataplus
  # DEBUG this => &D.58760.first
  # DEBUG D#381 => &MEM[(struct basic_string *)&D.58760]._M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&D.58760]._M_p = &MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf;
  # DEBUG D#1099 => MEM[(char * *)field_5(D)]
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  # DEBUG D#1098 => MEM[(long unsigned int *)field_5(D) + 8B]
  # DEBUG D#1 => field_5(D)
  # DEBUG this => D#1
  _66 = pretmp_21 + pretmp_19;
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  # DEBUG this => &D.58760.first
  # DEBUG __beg => D#1099
  # DEBUG __end => _66
  # DEBUG this => &D.58760.first
  # DEBUG __beg => D#1099
  # DEBUG __end => _66
  # DEBUG this => &D.58760.first
  # DEBUG __beg => D#1099
  # DEBUG __end => _66
  # DEBUG __ptr => D#1099
  _92 = _66 != 0B;
  _104 = pretmp_21 == 0B;
  _296 = _92 & _104;
  if (_296 != 0)
    goto <bb 73>;
  else
    goto <bb 72>;

  <bb 37>:
  _113 = std::__cxx11::basic_string<char>::_M_create (&D.58760.first, &__dnew, 0);
  # DEBUG D#6 => &D.58760.first
  # DEBUG __p => _113
  # DEBUG this => D#6
  MEM[(char * *)&D.58760] = _113;
  __dnew.111_114 = __dnew;
  # DEBUG D#7 => &D.58760.first
  # DEBUG __capacity => __dnew.111_114
  # DEBUG this => D#7
  MEM[(size_type *)&D.58760 + 16B] = __dnew.111_114;
  # DEBUG D#3 => &D.58760.first
  # DEBUG this => D#3
  # DEBUG __p => _113
  # DEBUG __k1 => D#1099
  # DEBUG __k2 => _66
  # DEBUG __d => _113
  # DEBUG __s => D#1099
  # DEBUG __n => D#1098
  goto <bb 40>;

  <bb 38>:
  # DEBUG D#3 => &D.58760.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf
  # DEBUG __k1 => D#1099
  # DEBUG __k2 => _66
  # DEBUG __d => &MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf
  # DEBUG __s => D#1099
  # DEBUG __n => D#1098
  if (pretmp_19 == 1)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  _116 = MEM[(const char_type &)pretmp_21];
  # DEBUG D#13 => D#1099
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.58760 + 16] = _116;
  goto <bb 41>;

  <bb 40>:
  # _173 = PHI <&MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf(38), _113(37)>
  # DEBUG D#3 => &D.58760.first
  # DEBUG this => D#3
  # DEBUG __p => _173
  # DEBUG __k1 => D#1099
  # DEBUG __k2 => _66
  # DEBUG __d => _173
  # DEBUG __s => D#1099
  # DEBUG __n => D#1098
  # DEBUG __s1 => _173
  # DEBUG __s2 => D#1099
  # DEBUG __n => D#1098
  __builtin_memcpy (_173, pretmp_21, pretmp_19);
  pretmp_181 = __dnew;
  pretmp_165 = MEM[(char * *)&D.58760];

  <bb 41>:
  # prephitmp_180 = PHI <pretmp_19(39), pretmp_181(40)>
  # prephitmp_179 = PHI <&MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf(39), pretmp_165(40)>
  # DEBUG D#1097 => __dnew
  # DEBUG this => &D.58760.first
  # DEBUG __n => D#1097
  # DEBUG D#5 => &D.58760.first
  # DEBUG __length => D#1097
  # DEBUG this => D#5
  MEM[(size_type *)&D.58760 + 8B] = prephitmp_180;
  # DEBUG D#3 => &D.58760.first
  # DEBUG this => D#3
  _119 = prephitmp_179 + prephitmp_180;
  # DEBUG __c1 => _119
  # DEBUG __c2 => D#13
  MEM[(char_type &)_119] = 0;
  __dnew ={v} {CLOBBER};
  D.58760.second = 0;
  # DEBUG this => D#1062
  # DEBUG __position$_M_node => __pos_133
  # DEBUG __x => &D.58760
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => D#1108
  # DEBUG __pos => __pos_133
  # DEBUG __x => &D.58760
  # DEBUG this => &__an
  # DEBUG __t => D#1108
  # DEBUG __an$_M_t => D#1108
  # DEBUG D#601 => &__an
  # DEBUG this => D#1108
  MEM[(struct _Rb_tree_const_iterator *)&__position] = __pos_133;
  # DEBUG __v => &D.58760
  # DEBUG __node_gen => D#601
  # DEBUG D#600 => D#601
  # DEBUG __x => &D.58760
  # DEBUG this => D#151
  _58 = &MEM[(struct map *)this_4(D) + 88B]._M_t;
  __res = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, int>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >::_M_get_insert_hint_unique_pos (_58, __position, &D.58760.first);
  __res$first_106 = MEM[(struct pair *)&__res];
  # DEBUG __res$first => __res$first_106
  __res$second_107 = MEM[(struct pair *)&__res + 8B];
  # DEBUG __res$second => __res$second_107
  if (__res$second_107 != 0B)
    goto <bb 42>;
  else
    goto <bb 60>;

  <bb 42>:
  # DEBUG D#595 => D#600
  # DEBUG this => D#1108
  # DEBUG __x => __res$first_106
  # DEBUG __p => __res$second_107
  # DEBUG __v => &D.58760
  # DEBUG __node_gen => D#595
  # DEBUG D#594 => D#595
  # DEBUG this => D#1108
  _294 = __pos_23 == __res$second_107;
  _27 = __res$first_106 != 0B;
  _264 = _27 | _294;
  if (_264 != 0)
    goto <bb 48>;
  else
    goto <bb 43>;

  <bb 43>:
  # DEBUG __x => __res$second_107
  # DEBUG __x => __res$second_107
  # DEBUG this => __res$second_107
  # DEBUG D#152 => &MEM[(const struct _Rb_tree_node *)__res$second_107]._M_value_field
  # DEBUG __r => D#152
  # DEBUG __x => D#152
  # DEBUG this => D#151
  # DEBUG D#1065 => &MEM[(const struct pair &)__res$second_107 + 32].first
  # DEBUG __x => &D.58760
  # DEBUG this => D#151
  # DEBUG D#593 => &MEM[(struct _Rb_tree *)D#1108]._M_impl._M_key_compare
  # DEBUG D#203 => D#593
  # DEBUG __x => NULL
  # DEBUG __y => D#1065
  # DEBUG this => D#203
  # DEBUG __lhs => NULL
  # DEBUG __rhs => D#1065
  # DEBUG this => &D.58760.first
  # DEBUG __str => D#1065
  _130 = MEM[(long unsigned int *)&D.58760 + 8B];
  # DEBUG D#2 => &D.58760.first
  # DEBUG this => D#2
  # DEBUG __size => _130
  _131 = MEM[(long unsigned int *)__res$second_107 + 40B];
  # DEBUG D#2 => D#1065
  # DEBUG this => D#2
  # DEBUG __osize => _131
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_59 = MIN_EXPR <_130, _131>;
  # DEBUG __len => D#1058
  # DEBUG this => D#1065
  _134 = MEM[(char * *)__res$second_107 + 32B];
  # DEBUG D#3 => D#1065
  # DEBUG this => D#3
  _135 = MEM[(char * *)&D.58760];
  # DEBUG D#3 => &D.58760.first
  # DEBUG this => D#3
  # DEBUG __s1 => _135
  # DEBUG __s2 => _134
  # DEBUG __n => D#1058
  __r_136 = __builtin_memcmp (_135, _134, __len_59);
  # DEBUG __r => NULL
  if (__r_136 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;

  <bb 44>:
  # DEBUG __n1 => _130
  # DEBUG __n2 => _131
  _137 = _130 - _131;
  __d_138 = (const difference_type) _137;
  # DEBUG __d => __d_138
  if (__d_138 > 2147483647)
    goto <bb 48>;
  else
    goto <bb 45>;

  <bb 45>:
  if (__d_138 < -2147483648)
    goto <bb 48>;
  else
    goto <bb 46>;

  <bb 46>:
  __r_139 = (int) _137;

  <bb 47>:
  # __r_140 = PHI <__r_136(43), __r_139(46)>

  <bb 86>:
  # DEBUG __r => __r_140
  # DEBUG D#1094 => {CLOBBER}
  # DEBUG __size => D#1094
  # DEBUG D#1095 => {CLOBBER}
  # DEBUG __osize => D#1095
  __insert_left_300 = __r_140 < 0;

  <bb 48>:
  # __insert_left_126 = PHI <0(44), 1(45), __insert_left_300(86), 1(42)>
  # DEBUG __insert_left => __insert_left_126
  # DEBUG D#592 => D#594
  # DEBUG __arg => &D.58760
  # DEBUG this => D#592
  # DEBUG D#591 => D#592
  # DEBUG D#590 => D#591->_M_t
  # DEBUG D#589 => D#590
  # DEBUG __x => &D.58760
  # DEBUG this => D#589
  # DEBUG D#588 => D#589
  # DEBUG D#587 => D#589
  # DEBUG D#586 => D#587
  # DEBUG this => D#586
  # DEBUG D#585 => D#586
  # DEBUG this => D#585
  # DEBUG __n => 1
  # DEBUG __a => D#584
  # DEBUG D#583 => D#584
  # DEBUG D#581 => D#583
  # DEBUG D#582 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#581
  # DEBUG D.58863 => D#582
  # DEBUG D#580 => D#581
  # DEBUG D#579 => D#580
  # DEBUG this => D#579
  _124 = operator new (72);

  <bb 49>:
  # DEBUG __tmp => _124
  # DEBUG D#500 => D#588
  # DEBUG __node => _124
  # DEBUG __x => &D.58760
  # DEBUG this => D#500
  # DEBUG D#499 => D#500
  # DEBUG D#498 => D#500
  # DEBUG this => _124
  # DEBUG D#1109 => &_124->_M_value_field
  # DEBUG __r => D#1109
  # DEBUG D#475 => D#498
  # DEBUG this => D#475
  # DEBUG D#474 => D#475
  # DEBUG this => D#474
  # DEBUG this => NULL
  # DEBUG D.52539 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1109
  # DEBUG __val => &D.58760
  # DEBUG this => D#497
  # DEBUG D#14 => 40
  # DEBUG __p => D#1109
  # DEBUG D.52850 => D#14
  # DEBUG this => D#1109
  # DEBUG D.58907 => &D.58760
  # DEBUG D#496 => &D.58760.first
  # DEBUG this => D#1109
  # DEBUG __str => D#496
  # DEBUG this => D#496
  # DEBUG D#380 => &D#496->_M_dataplus
  # DEBUG this => D#1109
  _144 = &MEM[(struct basic_string *)_124 + 32B].D.11539._M_local_buf;
  # DEBUG D#381 => &MEM[(struct basic_string *)D#1109]._M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => _144
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)_124 + 32B]._M_p = _144;
  _145 = MEM[(char * *)&D.58760];
  # DEBUG D#3 => D#496
  # DEBUG this => D#3
  _146 = MEM[(long unsigned int *)&D.58760 + 8B];
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  _147 = _145 + _146;
  # DEBUG D#3 => D#496
  # DEBUG this => D#3
  # DEBUG this => D#1109
  # DEBUG __beg => _145
  # DEBUG __end => _147
  # DEBUG this => D#1109
  # DEBUG __beg => _145
  # DEBUG __end => _147
  # DEBUG this => D#1109
  # DEBUG __beg => _145
  # DEBUG __end => _147
  # DEBUG __ptr => _145
  _272 = _147 != 0B;
  _269 = _145 == 0B;
  _268 = _269 & _272;
  if (_268 != 0)
    goto <bb 74>;
  else
    goto <bb 76>;

  <bb 50>:
  _142 = &_124->_M_value_field;
  _155 = std::__cxx11::basic_string<char>::_M_create (_142, &__dnew, 0);

  <bb 51>:
  # DEBUG D#6 => D#1109
  # DEBUG __p => _155
  # DEBUG this => D#6
  MEM[(char * *)_124 + 32B] = _155;
  __dnew.111_156 = __dnew;
  # DEBUG D#7 => D#1109
  # DEBUG __capacity => __dnew.111_156
  # DEBUG this => D#7
  MEM[(size_type *)_124 + 48B] = __dnew.111_156;
  # DEBUG D#3 => D#1109
  # DEBUG this => D#3
  # DEBUG __p => _155
  # DEBUG __k1 => _145
  # DEBUG __k2 => _147
  # DEBUG __d => _155
  # DEBUG __s => _145
  # DEBUG __n => _146
  goto <bb 54>;

  <bb 52>:
  # DEBUG D#3 => D#1109
  # DEBUG this => D#3
  # DEBUG __p => _144
  # DEBUG __k1 => _145
  # DEBUG __k2 => _147
  # DEBUG __d => _144
  # DEBUG __s => _145
  # DEBUG __n => _146
  if (_146 == 1)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  _158 = MEM[(const char_type &)_145];
  # DEBUG D#13 => _145
  # DEBUG __c1 => _144
  # DEBUG __c2 => D#13
  MEM[(char_type &)_144] = _158;
  goto <bb 55>;

  <bb 54>:
  # _292 = PHI <_144(52), _155(51)>
  # DEBUG D#3 => D#1109
  # DEBUG this => D#3
  # DEBUG __p => _292
  # DEBUG __k1 => _145
  # DEBUG __k2 => _147
  # DEBUG __d => _292
  # DEBUG __s => _145
  # DEBUG __n => _146
  # DEBUG __s1 => _292
  # DEBUG __s2 => _145
  # DEBUG __n => _146
  __builtin_memcpy (_292, _145, _146);
  pretmp_169 = __dnew;
  pretmp_78 = MEM[(char * *)_124 + 32B];

  <bb 55>:
  # prephitmp_73 = PHI <_146(53), pretmp_169(54)>
  # prephitmp_96 = PHI <_144(53), pretmp_78(54)>
  # DEBUG D#1096 => __dnew
  # DEBUG this => D#1109
  # DEBUG __n => D#1096
  # DEBUG D#5 => D#1109
  # DEBUG __length => D#1096
  # DEBUG this => D#5
  MEM[(size_type *)_124 + 40B] = prephitmp_73;
  # DEBUG D#3 => D#1109
  # DEBUG this => D#3
  _161 = prephitmp_96 + prephitmp_73;
  # DEBUG __c1 => _161
  # DEBUG __c2 => D#13
  MEM[(char_type &)_161] = 0;
  __dnew ={v} {CLOBBER};
  _148 = D.58760.second;
  MEM[(struct pair *)_124 + 32B].second = _148;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _124
  _127 = (int) __insert_left_126;
  std::_Rb_tree_insert_and_rebalance (_127, _124, __res$second_107, __pos_23);
  _128 = MEM[(struct _Rb_tree *)this_4(D) + 88B]._M_impl._M_node_count;
  _129 = _128 + 1;
  MEM[(struct _Rb_tree *)this_4(D) + 88B]._M_impl._M_node_count = _129;
  # DEBUG this => NULL
  # DEBUG __x => _124
  goto <bb 60>;

<L10>:

<L6>:
  _149 = __builtin_eh_pointer (10);
  __cxa_begin_catch (_149);
  # DEBUG D#314 => D#499
  # DEBUG __p => _124
  # DEBUG this => D#314
  # DEBUG D#313 => D#314
  # DEBUG this => D#313
  # DEBUG D#312 => 1
  # DEBUG __p => _124
  # DEBUG __a => D#311
  # DEBUG __n => D#312
  # DEBUG D#310 => D#312
  # DEBUG D#309 => D#311
  # DEBUG D#307 => D#309
  # DEBUG D#308 => D#310
  # DEBUG __p => _124
  # DEBUG this => D#307
  # DEBUG D.58901 => D#308
  operator delete (_124);
  __cxa_rethrow ();

<L8>:
  __cxa_end_catch ();
  resx 11

<L11>:
  goto <bb 65> (<L5>);

  <bb 60>:
  # SR.1315_252 = PHI <_124(55), __res$first_106(41)>
  # DEBUG D#598 => {CLOBBER}
  # DEBUG __res$first => D#598
  # DEBUG D#599 => {CLOBBER}
  # DEBUG __res$second => D#599
  # DEBUG __i$_M_node => SR.1315_252
  # DEBUG this => &D.58760
  # DEBUG D#188 => &D.58760.first
  # DEBUG this => D#188
  # DEBUG this => D#188
  # DEBUG this => D#188
  _68 = MEM[(char * *)&D.58760];
  # DEBUG D#3 => D#188
  # DEBUG this => D#3
  # DEBUG this => D#188
  if (&MEM[(const struct basic_string *)&D.58760].D.11539._M_local_buf != _68)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  # DEBUG D#186 => MEM[(struct basic_string *)D#188].D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => D#188
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => D#188
  # DEBUG this => D#3
  # DEBUG this => D#188
  # DEBUG D#183 => &MEM[(struct basic_string *)D#188]._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _68
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _68
  # DEBUG this => D#177
  # DEBUG D.58714 => D#178
  operator delete (_68);

  <bb 62>:
  # DEBUG D#187 => &MEM[(struct basic_string *)D#188]._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.58760 ={v} {CLOBBER};

  <bb 63>:
  # __pos_69 = PHI <__pos_313(32), SR.1315_252(62), __pos_313(35)>

  <bb 85>:
  # DEBUG __i$_M_node => __pos_69
  # DEBUG this => &__i
  # DEBUG this => __pos_69
  # DEBUG D#603 => &MEM[(struct _Rb_tree_node *)__pos_69]._M_value_field
  # DEBUG __r => D#603
  # DEBUG D#605 => {CLOBBER}
  # DEBUG __i$_M_node => D#605
  MEM[(mapped_type &)__pos_69 + 64] = value_11(D);
  # DEBUG D#608 => {CLOBBER}
  # DEBUG match$_M_node => D#608
  return;

<L9>:

<L5>:
  # DEBUG this => &D.58760
  # DEBUG D#188 => &D.58760.first
  # DEBUG this => D#188
  # DEBUG this => D#188
  # DEBUG this => D#188
  _71 = MEM[(char * *)&D.58760];
  # DEBUG D#3 => D#188
  # DEBUG this => D#3
  # DEBUG this => D#188
  if (&MEM[(const struct basic_string *)&D.58760].D.11539._M_local_buf != _71)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # DEBUG D#186 => MEM[(struct basic_string *)D#188].D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => D#188
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => D#188
  # DEBUG this => D#3
  # DEBUG this => D#188
  # DEBUG D#183 => &MEM[(struct basic_string *)D#188]._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _71
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _71
  # DEBUG this => D#177
  # DEBUG D.58698 => D#178
  operator delete (_71);

  <bb 67>:
  # DEBUG D#187 => &MEM[(struct basic_string *)D#188]._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.58760 ={v} {CLOBBER};
  resx 9

<L3>:
  # DEBUG this => &D.35772
  # DEBUG this => &D.35772
  # DEBUG this => &D.35772
  _3 = MEM[(char * *)&D.35772];
  # DEBUG D#3 => &D.35772
  # DEBUG this => D#3
  # DEBUG this => &D.35772
  if (&D.35772.D.11539._M_local_buf != _3)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG D#186 => D.35772.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.35772
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.35772
  # DEBUG this => D#3
  # DEBUG this => &D.35772
  # DEBUG D#183 => &D.35772._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _3
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _3
  # DEBUG this => D#177
  # DEBUG D.54822 => D#178
  operator delete (_3);

  <bb 70>:
  # DEBUG D#187 => &D.35772._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.35772 ={v} {CLOBBER};
  resx 6

  <bb 71>:
  # __pos_162 = PHI <__pos_313(35), __pos_313(78), __pos_23(77)>

  <bb 84>:
  goto <bb 36>;

  <bb 72>:
  # DEBUG __first => D#1099
  # DEBUG __last => _66
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => D#1099
  # DEBUG __last => _66
  __dnew = pretmp_19;
  if (pretmp_19 > 15)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 73>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 74>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L12>:
  goto <bb 57> (<L6>);

  <bb 76>:
  # DEBUG __first => _145
  # DEBUG __last => _147
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _145
  # DEBUG __last => _147
  __dnew = _146;
  if (_146 > 15)
    goto <bb 50>;
  else
    goto <bb 52>;

  <bb 77>:
  # DEBUG __r => NULL
  # DEBUG D#219 => {CLOBBER}
  # DEBUG __j$_M_node => D#219
  # DEBUG this => &match.41
  # DEBUG __it => &D.35712
  # DEBUG match$_M_node => __pos_312
  # DEBUG D#607 => &this_4(D)->_int_map
  # DEBUG this => D#607
  # DEBUG D#56 => &D#607->_M_t
  # DEBUG this => D#56
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &D.35771
  # DEBUG __it => &D.35717
  # DEBUG this => &match
  # DEBUG __x => &D.35771
  # DEBUG D#219 => {CLOBBER}
  # DEBUG __j$_M_node => D#219
  # DEBUG this => &match.41
  # DEBUG __it => &D.35712
  # DEBUG match$_M_node => __pos_312
  # DEBUG D#607 => &this_4(D)->_int_map
  # DEBUG this => D#607
  # DEBUG D#56 => &D#607->_M_t
  # DEBUG this => D#56
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &D.35771
  # DEBUG __it => &D.35717
  # DEBUG this => &match
  # DEBUG __x => &D.35771
  # DEBUG D#1062 => &this_4(D)->_int_map
  # DEBUG this => D#1062
  # DEBUG __k => field_5(D)
  # DEBUG this => D#1062
  # DEBUG __x => field_5(D)
  # DEBUG D#1108 => &MEM[(struct map *)this_4(D) + 88B]._M_t
  # DEBUG this => D#1108
  # DEBUG __k => field_5(D)
  # DEBUG this => D#1108
  # DEBUG D#36 => D#1108
  # DEBUG this => D#36
  # DEBUG D#218 => D#1108
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => field_5(D)
  # DEBUG __y => __pos_23
  # DEBUG __x => __pos_24
  if (__pos_24 == 0B)
    goto <bb 71>;
  else
    goto <bb 22>;

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_, funcdef_no=2571, decl_uid=34716, cgraph_uid=1257, symbol_order=1259)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_tree * const this, const struct key_type & __k)
{
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.59080;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.59065;
  struct _Rb_tree_node_base * const __j$_M_node;
  bool __comp;
  struct _Rb_tree_node_base * const D.42493;
  struct _Rb_tree_node_base * const D.42494;
  struct pair D.44154;
  const size_type pretmp_1;
  char * const prephitmp_13;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node_base * _24;
  const size_type _34;
  char * const _37;
  long unsigned int _40;
  char * const pretmp_44;
  long unsigned int _52;
  const size_type prephitmp_61;
  char * const pretmp_64;
  char * const prephitmp_65;
  const size_type pretmp_67;
  const size_type pretmp_76;
  const size_type prephitmp_77;
  const size_type prephitmp_78;
  const size_type pretmp_79;
  char * const pretmp_80;
  char * const _83;
  const size_type _84;

  <bb 2>:
  _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
  # DEBUG D#37 => this_9(D)
  # DEBUG this => D#37
  # DEBUG __x => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#1145 => &this_9(D)->_M_impl._M_header
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => D#1145
  # DEBUG __x => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = &this_9(D)->_M_impl._M_header;
  goto <bb 15>;

  <bb 4>:
  pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_44 = MEM[(char * *)__k_12(D)];
  goto <bb 7>;

  <bb 5>:
  # _6 = PHI <_22(27), _23(28)>
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __comp => __comp_56
  # DEBUG __y => _10
  # DEBUG __x => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # _10 = PHI <_21(4), _6(6)>
  # DEBUG __comp => 1
  # DEBUG __x => _10
  # DEBUG __y => _10
  # DEBUG __x => _10
  # DEBUG __x => _10
  # DEBUG this => _10
  # DEBUG D#226 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
  # DEBUG __r => D#226
  # DEBUG __x => D#226
  # DEBUG this => D#153
  # DEBUG D#1125 => &MEM[(const struct pair &)_10 + 32].first
  # DEBUG D#367 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#203 => D#367
  # DEBUG __x => __k_12(D)
  # DEBUG __y => D#1125
  # DEBUG this => D#203
  # DEBUG __lhs => __k_12(D)
  # DEBUG __rhs => D#1125
  # DEBUG this => __k_12(D)
  # DEBUG __str => D#1125
  # DEBUG D#1144 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#2 => __k_12(D)
  # DEBUG this => D#2
  # DEBUG __size => D#1144
  _34 = MEM[(long unsigned int *)_10 + 40B];
  # DEBUG D#2 => D#1125
  # DEBUG this => D#2
  # DEBUG __osize => _34
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __len => D#1123
  # DEBUG this => D#1125
  _37 = MEM[(char * *)_10 + 32B];
  # DEBUG D#3 => D#1125
  # DEBUG this => D#3
  # DEBUG D#1143 => MEM[(char * *)__k_12(D)]
  # DEBUG D#3 => __k_12(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#1143
  # DEBUG __s2 => _37
  # DEBUG __n => D#1123
  __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
  # DEBUG __r => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => D#1144
  # DEBUG __n2 => _34
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_type) _40;
  # DEBUG __d => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_42 = (int) _40;

  <bb 11>:
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __r => __r_43
  # DEBUG D#1131 => {CLOBBER}
  # DEBUG __size => D#1131
  # DEBUG D#1132 => {CLOBBER}
  # DEBUG __osize => D#1132
  # DEBUG __comp => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __comp => 1
  _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
  # DEBUG D#48 => _10
  # DEBUG __x => D#48
  goto <bb 5>;

  <bb 13>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG __comp => 0
  _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
  # DEBUG D#47 => _10
  # DEBUG __x => D#47
  goto <bb 5>;

  <bb 14>:
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # _83 = PHI <_37(5)>
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>

  <bb 26>:
  # DEBUG this => &__j
  # DEBUG __x => _85
  # DEBUG __j$_M_node => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG this => &__j
  # DEBUG __x => _57
  # DEBUG __j$_M_node => _57
  _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
  # DEBUG D#64 => this_9(D)
  # DEBUG this => D#64
  # DEBUG this => NULL
  # DEBUG __x => _24
  # DEBUG this => &__j
  # DEBUG __x => &D.42492
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &D.42495
  # DEBUG __a => &D.42493
  # DEBUG __b => &D.42494
  MEM[(struct pair *)&D.44154] = 0B;
  MEM[(struct pair *)&D.44154 + 8B] = _57;
  goto <bb 25>;

  <bb 17>:
  # DEBUG this => &__j
  __j$_M_node_25 = std::_Rb_tree_decrement (_57);
  # DEBUG __j$_M_node => __j$_M_node_25
  pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_80 = MEM[(char * *)__k_12(D)];
  pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
  pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  <bb 18>:
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_node => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG this => __j$_M_node_20
  # DEBUG D#154 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
  # DEBUG __r => D#154
  # DEBUG __x => D#154
  # DEBUG this => D#153
  # DEBUG D#1126 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
  # DEBUG D#366 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#203 => D#366
  # DEBUG __x => D#1126
  # DEBUG __y => __k_12(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#1126
  # DEBUG __rhs => __k_12(D)
  # DEBUG this => D#1126
  # DEBUG __str => __k_12(D)
  # DEBUG D#1142 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
  # DEBUG D#2 => D#1126
  # DEBUG this => D#2
  # DEBUG __size => D#1142
  # DEBUG D#1141 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#2 => __k_12(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#1141
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#1124
  # DEBUG this => __k_12(D)
  # DEBUG D#1140 => MEM[(char * *)__k_12(D)]
  # DEBUG D#3 => __k_12(D)
  # DEBUG this => D#3
  # DEBUG D#1139 => MEM[(char * *)__j$_M_node_20 + 32B]
  # DEBUG D#3 => D#1126
  # DEBUG this => D#3
  # DEBUG __s1 => D#1139
  # DEBUG __s2 => D#1140
  # DEBUG __n => D#1124
  __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __r => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG __n1 => D#1142
  # DEBUG __n2 => D#1141
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_type) _52;
  # DEBUG __d => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;

  <bb 20>:
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 21>:
  __r_54 = (int) _52;

  <bb 22>:
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __r => __r_55
  # DEBUG D#1137 => {CLOBBER}
  # DEBUG __size => D#1137
  # DEBUG D#1138 => {CLOBBER}
  # DEBUG __osize => D#1138
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:

  <bb 31>:
  # DEBUG __r => NULL
  # DEBUG this => &D.42498
  # DEBUG __a => &D.42496
  # DEBUG __b => &D.42497
  MEM[(struct pair *)&D.44154] = 0B;
  MEM[(struct pair *)&D.44154 + 8B] = _5;
  goto <bb 25>;

  <bb 24>:

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG this => &D.42500
  # DEBUG __a => &__j._M_node
  # DEBUG __b => &D.42499
  MEM[(struct pair *)&D.44154] = __j$_M_node_20;
  MEM[(struct pair *)&D.44154 + 8B] = 0B;

  <bb 25>:

  <bb 29>:
  # DEBUG D#365 => {CLOBBER}
  # DEBUG __j$_M_node => D#365
  return D.44154;

}



;; Function void Configuration::Assign(const string&, double) (_ZN13Configuration6AssignERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd, funcdef_no=1732, decl_uid=35267, cgraph_uid=418, symbol_order=420)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void Configuration::Assign(const string&, double) (struct Configuration * const this, const struct string & field, double value)
{
  struct _Rb_tree_node_base * SR.1330;
  struct _Rb_tree_node_base * SR.1329;
  struct _Rb_tree_node_base * SR.1328;
  const struct _Rb_tree_node_base * __pos;
  struct _Rb_tree_node_base * SR.1326;
  struct _Rb_tree_node_base * SR.1325;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.59433;
  bool __insert_left;
  struct iterator D.59418;
  size_type __dnew;
  struct iterator D.59359;
  struct pair __res;
  struct _Rb_tree_node_base * __res$first;
  struct _Rb_tree_node_base * __res$second;
  struct const_iterator __position;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.59349;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.59334;
  struct iterator D.59319;
  struct _Rb_tree_node * __y;
  struct value_type D.59302;
  struct iterator D.59301;
  struct iterator D.59300;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.1141;
  struct _Rb_tree_node_base * SR.1144;
  mapped_type & D.59296;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.59227;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.59212;
  struct iterator D.59197;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.1153;
  struct iterator D.55215;
  struct basic_string D.35952;
  char * const _3;
  const size_type _17;
  const size_type pretmp_19;
  char * const pretmp_21;
  bool _27;
  char * const _39;
  long unsigned int _41;
  const size_type _47;
  char * const _50;
  long unsigned int _53;
  struct _Rep_type * _58;
  char * _66;
  char * const _68;
  char * const _71;
  size_type prephitmp_73;
  char * const pretmp_78;
  const size_type _81;
  char * const _86;
  long unsigned int _88;
  bool _92;
  const size_type _94;
  char * const prephitmp_96;
  char * const _97;
  long unsigned int _100;
  bool _104;
  char * _113;
  long unsigned int __dnew.111_114;
  const char_type _116;
  char * _119;
  struct _Rb_tree_node * _124;
  int _127;
  long unsigned int _128;
  long unsigned int _129;
  const size_type _130;
  const size_type _131;
  char * const _134;
  char * const _135;
  long unsigned int _137;
  struct pair * _142;
  char * _144;
  char * const _145;
  const size_type _146;
  char * _147;
  double _148;
  void * _149;
  char * _155;
  long unsigned int __dnew.111_156;
  const char_type _158;
  char * _161;
  char * const pretmp_165;
  size_type pretmp_169;
  char * const _173;
  char * const prephitmp_179;
  size_type prephitmp_180;
  size_type pretmp_181;
  bool _264;
  bool _268;
  bool _269;
  bool _272;
  char * const _292;
  bool _294;
  bool _296;

  <bb 2>:
  # DEBUG this => &match
  # DEBUG match$_M_node => 0B
  # DEBUG D#637 => &this_4(D)->_float_map
  # DEBUG this => D#637
  # DEBUG __x => field_5(D)
  # DEBUG D#1194 => &MEM[(struct map *)this_4(D) + 136B]._M_t
  # DEBUG this => D#1194
  # DEBUG __k => field_5(D)
  # DEBUG this => D#1194
  __pos_23 = &MEM[(struct _Rb_tree *)this_4(D) + 136B]._M_impl._M_header;
  __pos_24 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 152B];
  # DEBUG D#37 => D#1194
  # DEBUG this => D#37
  # DEBUG D#229 => D#1194
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => field_5(D)
  # DEBUG __y => __pos_23
  # DEBUG __x => __pos_24
  if (__pos_24 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_19 = MEM[(long unsigned int *)field_5(D) + 8B];
  pretmp_21 = MEM[(char * *)field_5(D)];
  goto <bb 7>;

  <bb 4>:
  # DEBUG this => D#1194
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG D#230 => {CLOBBER}
  # DEBUG __j$_M_node => D#230
  # DEBUG this => &match.67
  # DEBUG __it => &D.35892
  # DEBUG match$_M_node => __pos_23
  # DEBUG D#638 => &this_4(D)->_float_map
  # DEBUG this => D#638
  # DEBUG D#63 => &D#638->_M_t
  # DEBUG this => D#63
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &D.35951
  # DEBUG __it => &D.35897
  # DEBUG this => &match
  # DEBUG __x => &D.35951
  # DEBUG D#230 => {CLOBBER}
  # DEBUG __j$_M_node => D#230
  # DEBUG this => &match.67
  # DEBUG __it => &D.35892
  # DEBUG match$_M_node => __pos_23
  # DEBUG D#638 => &this_4(D)->_float_map
  # DEBUG this => D#638
  # DEBUG D#63 => &D#638->_M_t
  # DEBUG this => D#63
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &D.35951
  # DEBUG __it => &D.35897
  # DEBUG this => &match
  # DEBUG __x => &D.35951
  D.35952 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown double field: ", field_5(D)); [return slot optimization]
  Configuration::ParseError (this_4(D), &D.35952, 0);

  <bb 5>:
  # __pos_57 = PHI <__pos_28(81), __pos_29(80)>
  # __pos_80 = PHI <__pos_318(81), __pos_322(80)>
  # DEBUG __y => __pos_80
  # DEBUG __x => __pos_57
  if (__pos_57 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __pos_318 = PHI <__pos_24(3), __pos_57(6)>
  # __pos_322 = PHI <__pos_23(3), __pos_80(6)>
  # DEBUG __y => __pos_322
  # DEBUG __x => __pos_318
  # DEBUG __x => __pos_318
  # DEBUG __x => __pos_318
  # DEBUG this => __pos_318
  # DEBUG D#226 => &MEM[(const struct _Rb_tree_node *)__pos_318]._M_value_field
  # DEBUG __r => D#226
  # DEBUG __x => D#226
  # DEBUG this => D#153
  # DEBUG D#1195 => &MEM[(const struct pair &)__pos_318 + 32].first
  # DEBUG D#227 => &D#228->_M_impl._M_key_compare
  # DEBUG D#203 => D#227
  # DEBUG __x => D#1195
  # DEBUG __y => field_5(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#1195
  # DEBUG __rhs => field_5(D)
  # DEBUG this => D#1195
  # DEBUG __str => field_5(D)
  _17 = MEM[(long unsigned int *)__pos_318 + 40B];
  # DEBUG D#2 => D#1195
  # DEBUG this => D#2
  # DEBUG __size => _17
  # DEBUG D#1242 => MEM[(long unsigned int *)field_5(D) + 8B]
  # DEBUG D#2 => field_5(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#1242
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_309 = MIN_EXPR <_17, pretmp_19>;
  # DEBUG __len => D#1189
  # DEBUG this => field_5(D)
  # DEBUG D#1241 => MEM[(char * *)field_5(D)]
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  _39 = MEM[(char * *)__pos_318 + 32B];
  # DEBUG D#3 => D#1195
  # DEBUG this => D#3
  # DEBUG __s1 => _39
  # DEBUG __s2 => D#1241
  # DEBUG __n => D#1189
  __r_40 = __builtin_memcmp (_39, pretmp_21, __len_309);
  # DEBUG __r => NULL
  if (__r_40 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => _17
  # DEBUG __n2 => D#1242
  _41 = _17 - pretmp_19;
  __d_42 = (const difference_type) _41;
  # DEBUG __d => __d_42
  if (__d_42 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_42 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_43 = (int) _41;

  <bb 11>:
  # __r_44 = PHI <__r_40(7), __r_43(10)>
  # DEBUG __r => __r_44
  # DEBUG D#1205 => {CLOBBER}
  # DEBUG __size => D#1205
  # DEBUG D#1206 => {CLOBBER}
  # DEBUG __osize => D#1206
  if (__r_44 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 81>:
  # DEBUG __r => NULL
  # DEBUG __y => __pos_318
  __pos_28 = MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B];
  # DEBUG D#48 => __pos_318
  # DEBUG __x => D#48
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 13>:

  <bb 80>:
  # DEBUG __r => NULL
  __pos_29 = MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B];
  # DEBUG D#47 => __pos_318
  # DEBUG __x => D#47
  # DEBUG __x => NULL
  goto <bb 5>;

  <bb 14>:
  # __pos_312 = PHI <__pos_80(5)>

  <bb 79>:
  # DEBUG this => NULL
  # DEBUG __x => __pos_312
  # DEBUG __j$_M_node => __pos_312
  # DEBUG this => D#1194
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__pos_23 == __pos_312)
    goto <bb 4>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __pos_312
  # DEBUG __x => __pos_312
  # DEBUG this => __pos_312
  # DEBUG D#154 => &MEM[(const struct _Rb_tree_node *)__pos_312]._M_value_field
  # DEBUG __r => D#154
  # DEBUG __x => D#154
  # DEBUG this => D#153
  # DEBUG D#1196 => &MEM[(const struct pair &)__pos_312 + 32].first
  # DEBUG D#231 => &MEM[(struct _Rb_tree *)D#1194]._M_impl._M_key_compare
  # DEBUG D#203 => D#231
  # DEBUG __x => field_5(D)
  # DEBUG __y => D#1196
  # DEBUG this => D#203
  # DEBUG __lhs => field_5(D)
  # DEBUG __rhs => D#1196
  # DEBUG this => field_5(D)
  # DEBUG __str => D#1196
  # DEBUG D#1240 => MEM[(long unsigned int *)field_5(D) + 8B]
  # DEBUG D#2 => field_5(D)
  # DEBUG this => D#2
  # DEBUG __size => D#1240
  _47 = MEM[(long unsigned int *)__pos_312 + 40B];
  # DEBUG D#2 => D#1196
  # DEBUG this => D#2
  # DEBUG __osize => _47
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_305 = MIN_EXPR <pretmp_19, _47>;
  # DEBUG __len => D#1190
  # DEBUG this => D#1196
  _50 = MEM[(char * *)__pos_312 + 32B];
  # DEBUG D#3 => D#1196
  # DEBUG this => D#3
  # DEBUG D#1239 => MEM[(char * *)field_5(D)]
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#1239
  # DEBUG __s2 => _50
  # DEBUG __n => D#1190
  __r_52 = __builtin_memcmp (pretmp_21, _50, __len_305);
  # DEBUG __r => NULL
  if (__r_52 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;

  <bb 16>:
  # DEBUG __n1 => D#1240
  # DEBUG __n2 => _47
  _53 = pretmp_19 - _47;
  __d_54 = (const difference_type) _53;
  # DEBUG __d => __d_54
  if (__d_54 > 2147483647)
    goto <bb 77>;
  else
    goto <bb 17>;

  <bb 17>:
  if (__d_54 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;

  <bb 18>:
  __r_55 = (int) _53;

  <bb 19>:
  # __r_56 = PHI <__r_52(15), __r_55(18)>
  # DEBUG __r => __r_56
  # DEBUG D#1211 => {CLOBBER}
  # DEBUG __size => D#1211
  # DEBUG D#1212 => {CLOBBER}
  # DEBUG __osize => D#1212
  if (__r_56 < 0)
    goto <bb 4>;
  else
    goto <bb 77>;

  <bb 20>:
  # __pos_34 = PHI <__pos_76(83), __pos_77(82)>
  # __pos_33 = PHI <__pos_319(83), __pos_141(82)>
  # DEBUG __y => __pos_33
  # DEBUG __x => __pos_34
  if (__pos_34 == 0B)
    goto <bb 30>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 23>;

  <bb 22>:

  <bb 23>:
  # __pos_319 = PHI <__pos_24(22), __pos_34(21)>
  # __pos_141 = PHI <__pos_23(22), __pos_33(21)>
  # DEBUG __y => __pos_141
  # DEBUG __x => __pos_319
  # DEBUG __x => __pos_319
  # DEBUG __x => __pos_319
  # DEBUG this => __pos_319
  # DEBUG D#226 => &MEM[(const struct _Rb_tree_node *)__pos_319]._M_value_field
  # DEBUG __r => D#226
  # DEBUG __x => D#226
  # DEBUG this => D#153
  # DEBUG D#1198 => &MEM[(const struct pair &)__pos_319 + 32].first
  # DEBUG D#227 => &D#228->_M_impl._M_key_compare
  # DEBUG D#203 => D#227
  # DEBUG __x => D#1198
  # DEBUG __y => field_5(D)
  # DEBUG this => D#203
  # DEBUG __lhs => D#1198
  # DEBUG __rhs => field_5(D)
  # DEBUG this => D#1198
  # DEBUG __str => field_5(D)
  _81 = MEM[(long unsigned int *)__pos_319 + 40B];
  # DEBUG D#2 => D#1198
  # DEBUG this => D#2
  # DEBUG __size => _81
  # DEBUG D#1238 => MEM[(long unsigned int *)field_5(D) + 8B]
  # DEBUG D#2 => field_5(D)
  # DEBUG this => D#2
  # DEBUG __osize => D#1238
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_302 = MIN_EXPR <pretmp_19, _81>;
  # DEBUG __len => D#1191
  # DEBUG this => field_5(D)
  # DEBUG D#1237 => MEM[(char * *)field_5(D)]
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  _86 = MEM[(char * *)__pos_319 + 32B];
  # DEBUG D#3 => D#1198
  # DEBUG this => D#3
  # DEBUG __s1 => _86
  # DEBUG __s2 => D#1237
  # DEBUG __n => D#1191
  __r_87 = __builtin_memcmp (_86, pretmp_21, __len_302);
  # DEBUG __r => NULL
  if (__r_87 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 24>:
  # DEBUG __n1 => _81
  # DEBUG __n2 => D#1238
  _88 = _81 - pretmp_19;
  __d_89 = (const difference_type) _88;
  # DEBUG __d => __d_89
  if (__d_89 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 25>;

  <bb 25>:
  if (__d_89 < -2147483648)
    goto <bb 29>;
  else
    goto <bb 26>;

  <bb 26>:
  __r_90 = (int) _88;

  <bb 27>:
  # __r_91 = PHI <__r_87(23), __r_90(26)>
  # DEBUG __r => __r_91
  # DEBUG D#1217 => {CLOBBER}
  # DEBUG __size => D#1217
  # DEBUG D#1218 => {CLOBBER}
  # DEBUG __osize => D#1218
  if (__r_91 >= 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:

  <bb 83>:
  # DEBUG __r => NULL
  # DEBUG __y => __pos_319
  __pos_76 = MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B];
  # DEBUG D#48 => __pos_319
  # DEBUG __x => D#48
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 29>:

  <bb 82>:
  # DEBUG __r => NULL
  __pos_77 = MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B];
  # DEBUG D#47 => __pos_319
  # DEBUG __x => D#47
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 30>:
  # __pos_313 = PHI <__pos_33(20)>

  <bb 78>:
  # DEBUG this => NULL
  # DEBUG __x => __pos_313
  # DEBUG __i$_M_node => __pos_313
  # DEBUG this => D#1197
  # DEBUG D#63 => &D#1197->_M_t
  # DEBUG this => D#63
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__pos_23 == __pos_313)
    goto <bb 71>;
  else
    goto <bb 31>;

  <bb 31>:
  # DEBUG this => &__i
  # DEBUG this => __pos_313
  # DEBUG D#633 => &MEM[(struct _Rb_tree_node *)__pos_313]._M_value_field
  # DEBUG __r => D#633
  # DEBUG D#1199 => &MEM[(struct pair &)__pos_313 + 32].first
  # DEBUG D#69 => D#1197
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG D#67 => &D#68->_M_t
  # DEBUG D#66 => D#67
  # DEBUG this => D#66
  # DEBUG __x => field_5(D)
  # DEBUG __y => D#1199
  # DEBUG this => D#203
  # DEBUG __lhs => field_5(D)
  # DEBUG __rhs => D#1199
  # DEBUG this => field_5(D)
  # DEBUG __str => D#1199
  # DEBUG D#1236 => MEM[(long unsigned int *)field_5(D) + 8B]
  # DEBUG D#2 => field_5(D)
  # DEBUG this => D#2
  # DEBUG __size => D#1236
  _94 = MEM[(long unsigned int *)__pos_313 + 40B];
  # DEBUG D#2 => D#1199
  # DEBUG this => D#2
  # DEBUG __osize => _94
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_301 = MIN_EXPR <pretmp_19, _94>;
  # DEBUG __len => D#1192
  # DEBUG this => D#1199
  _97 = MEM[(char * *)__pos_313 + 32B];
  # DEBUG D#3 => D#1199
  # DEBUG this => D#3
  # DEBUG D#1235 => MEM[(char * *)field_5(D)]
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#1235
  # DEBUG __s2 => _97
  # DEBUG __n => D#1192
  __r_99 = __builtin_memcmp (pretmp_21, _97, __len_301);
  # DEBUG __r => NULL
  if (__r_99 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;

  <bb 32>:
  # DEBUG __n1 => D#1236
  # DEBUG __n2 => _94
  _100 = pretmp_19 - _94;
  __d_101 = (const difference_type) _100;
  # DEBUG __d => __d_101
  if (__d_101 > 2147483647)
    goto <bb 63>;
  else
    goto <bb 33>;

  <bb 33>:
  if (__d_101 < -2147483648)
    goto <bb 36>;
  else
    goto <bb 34>;

  <bb 34>:
  __r_102 = (int) _100;

  <bb 35>:
  # __r_103 = PHI <__r_99(31), __r_102(34)>
  # DEBUG __r => __r_103
  # DEBUG D#1223 => {CLOBBER}
  # DEBUG __size => D#1223
  # DEBUG D#1224 => {CLOBBER}
  # DEBUG __osize => D#1224
  if (__r_103 < 0)
    goto <bb 71>;
  else
    goto <bb 63>;

  <bb 36>:
  # __pos_133 = PHI <__pos_313(33), __pos_162(84)>
  # DEBUG this => &D.59302
  # DEBUG __a => field_5(D)
  # DEBUG __b => NULL
  # DEBUG this => &D.59302.first
  # DEBUG __str => field_5(D)
  # DEBUG this => field_5(D)
  # DEBUG D#380 => &MEM[(const struct basic_string *)field_5(D)]._M_dataplus
  # DEBUG this => &D.59302.first
  # DEBUG D#381 => &MEM[(struct basic_string *)&D.59302]._M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => &MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)&D.59302]._M_p = &MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf;
  # DEBUG D#1234 => MEM[(char * *)field_5(D)]
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  # DEBUG D#1233 => MEM[(long unsigned int *)field_5(D) + 8B]
  # DEBUG D#1 => field_5(D)
  # DEBUG this => D#1
  _66 = pretmp_21 + pretmp_19;
  # DEBUG D#3 => field_5(D)
  # DEBUG this => D#3
  # DEBUG this => &D.59302.first
  # DEBUG __beg => D#1234
  # DEBUG __end => _66
  # DEBUG this => &D.59302.first
  # DEBUG __beg => D#1234
  # DEBUG __end => _66
  # DEBUG this => &D.59302.first
  # DEBUG __beg => D#1234
  # DEBUG __end => _66
  # DEBUG __ptr => D#1234
  _92 = _66 != 0B;
  _104 = pretmp_21 == 0B;
  _296 = _92 & _104;
  if (_296 != 0)
    goto <bb 73>;
  else
    goto <bb 72>;

  <bb 37>:
  _113 = std::__cxx11::basic_string<char>::_M_create (&D.59302.first, &__dnew, 0);
  # DEBUG D#6 => &D.59302.first
  # DEBUG __p => _113
  # DEBUG this => D#6
  MEM[(char * *)&D.59302] = _113;
  __dnew.111_114 = __dnew;
  # DEBUG D#7 => &D.59302.first
  # DEBUG __capacity => __dnew.111_114
  # DEBUG this => D#7
  MEM[(size_type *)&D.59302 + 16B] = __dnew.111_114;
  # DEBUG D#3 => &D.59302.first
  # DEBUG this => D#3
  # DEBUG __p => _113
  # DEBUG __k1 => D#1234
  # DEBUG __k2 => _66
  # DEBUG __d => _113
  # DEBUG __s => D#1234
  # DEBUG __n => D#1233
  goto <bb 40>;

  <bb 38>:
  # DEBUG D#3 => &D.59302.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf
  # DEBUG __k1 => D#1234
  # DEBUG __k2 => _66
  # DEBUG __d => &MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf
  # DEBUG __s => D#1234
  # DEBUG __n => D#1233
  if (pretmp_19 == 1)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  _116 = MEM[(const char_type &)pretmp_21];
  # DEBUG D#13 => D#1234
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.59302 + 16] = _116;
  goto <bb 41>;

  <bb 40>:
  # _173 = PHI <&MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf(38), _113(37)>
  # DEBUG D#3 => &D.59302.first
  # DEBUG this => D#3
  # DEBUG __p => _173
  # DEBUG __k1 => D#1234
  # DEBUG __k2 => _66
  # DEBUG __d => _173
  # DEBUG __s => D#1234
  # DEBUG __n => D#1233
  # DEBUG __s1 => _173
  # DEBUG __s2 => D#1234
  # DEBUG __n => D#1233
  __builtin_memcpy (_173, pretmp_21, pretmp_19);
  pretmp_181 = __dnew;
  pretmp_165 = MEM[(char * *)&D.59302];

  <bb 41>:
  # prephitmp_180 = PHI <pretmp_19(39), pretmp_181(40)>
  # prephitmp_179 = PHI <&MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf(39), pretmp_165(40)>
  # DEBUG D#1232 => __dnew
  # DEBUG this => &D.59302.first
  # DEBUG __n => D#1232
  # DEBUG D#5 => &D.59302.first
  # DEBUG __length => D#1232
  # DEBUG this => D#5
  MEM[(size_type *)&D.59302 + 8B] = prephitmp_180;
  # DEBUG D#3 => &D.59302.first
  # DEBUG this => D#3
  _119 = prephitmp_179 + prephitmp_180;
  # DEBUG __c1 => _119
  # DEBUG __c2 => D#13
  MEM[(char_type &)_119] = 0;
  __dnew ={v} {CLOBBER};
  D.59302.second = 0.0;
  # DEBUG this => D#1197
  # DEBUG __position$_M_node => __pos_133
  # DEBUG __x => &D.59302
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => D#1243
  # DEBUG __pos => __pos_133
  # DEBUG __x => &D.59302
  # DEBUG this => &__an
  # DEBUG __t => D#1243
  # DEBUG __an$_M_t => D#1243
  # DEBUG D#632 => &__an
  # DEBUG this => D#1243
  MEM[(struct _Rb_tree_const_iterator *)&__position] = __pos_133;
  # DEBUG __v => &D.59302
  # DEBUG __node_gen => D#632
  # DEBUG D#631 => D#632
  # DEBUG __x => &D.59302
  # DEBUG this => D#153
  _58 = &MEM[(struct map *)this_4(D) + 136B]._M_t;
  __res = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_M_get_insert_hint_unique_pos (_58, __position, &D.59302.first);
  __res$first_106 = MEM[(struct pair *)&__res];
  # DEBUG __res$first => __res$first_106
  __res$second_107 = MEM[(struct pair *)&__res + 8B];
  # DEBUG __res$second => __res$second_107
  if (__res$second_107 != 0B)
    goto <bb 42>;
  else
    goto <bb 60>;

  <bb 42>:
  # DEBUG D#626 => D#631
  # DEBUG this => D#1243
  # DEBUG __x => __res$first_106
  # DEBUG __p => __res$second_107
  # DEBUG __v => &D.59302
  # DEBUG __node_gen => D#626
  # DEBUG D#625 => D#626
  # DEBUG this => D#1243
  _294 = __pos_23 == __res$second_107;
  _27 = __res$first_106 != 0B;
  _264 = _27 | _294;
  if (_264 != 0)
    goto <bb 48>;
  else
    goto <bb 43>;

  <bb 43>:
  # DEBUG __x => __res$second_107
  # DEBUG __x => __res$second_107
  # DEBUG this => __res$second_107
  # DEBUG D#154 => &MEM[(const struct _Rb_tree_node *)__res$second_107]._M_value_field
  # DEBUG __r => D#154
  # DEBUG __x => D#154
  # DEBUG this => D#153
  # DEBUG D#1200 => &MEM[(const struct pair &)__res$second_107 + 32].first
  # DEBUG __x => &D.59302
  # DEBUG this => D#153
  # DEBUG D#624 => &MEM[(struct _Rb_tree *)D#1243]._M_impl._M_key_compare
  # DEBUG D#203 => D#624
  # DEBUG __x => NULL
  # DEBUG __y => D#1200
  # DEBUG this => D#203
  # DEBUG __lhs => NULL
  # DEBUG __rhs => D#1200
  # DEBUG this => &D.59302.first
  # DEBUG __str => D#1200
  _130 = MEM[(long unsigned int *)&D.59302 + 8B];
  # DEBUG D#2 => &D.59302.first
  # DEBUG this => D#2
  # DEBUG __size => _130
  _131 = MEM[(long unsigned int *)__res$second_107 + 40B];
  # DEBUG D#2 => D#1200
  # DEBUG this => D#2
  # DEBUG __osize => _131
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_59 = MIN_EXPR <_130, _131>;
  # DEBUG __len => D#1193
  # DEBUG this => D#1200
  _134 = MEM[(char * *)__res$second_107 + 32B];
  # DEBUG D#3 => D#1200
  # DEBUG this => D#3
  _135 = MEM[(char * *)&D.59302];
  # DEBUG D#3 => &D.59302.first
  # DEBUG this => D#3
  # DEBUG __s1 => _135
  # DEBUG __s2 => _134
  # DEBUG __n => D#1193
  __r_136 = __builtin_memcmp (_135, _134, __len_59);
  # DEBUG __r => NULL
  if (__r_136 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;

  <bb 44>:
  # DEBUG __n1 => _130
  # DEBUG __n2 => _131
  _137 = _130 - _131;
  __d_138 = (const difference_type) _137;
  # DEBUG __d => __d_138
  if (__d_138 > 2147483647)
    goto <bb 48>;
  else
    goto <bb 45>;

  <bb 45>:
  if (__d_138 < -2147483648)
    goto <bb 48>;
  else
    goto <bb 46>;

  <bb 46>:
  __r_139 = (int) _137;

  <bb 47>:
  # __r_140 = PHI <__r_136(43), __r_139(46)>

  <bb 86>:
  # DEBUG __r => __r_140
  # DEBUG D#1229 => {CLOBBER}
  # DEBUG __size => D#1229
  # DEBUG D#1230 => {CLOBBER}
  # DEBUG __osize => D#1230
  __insert_left_300 = __r_140 < 0;

  <bb 48>:
  # __insert_left_126 = PHI <0(44), 1(45), __insert_left_300(86), 1(42)>
  # DEBUG __insert_left => __insert_left_126
  # DEBUG D#623 => D#625
  # DEBUG __arg => &D.59302
  # DEBUG this => D#623
  # DEBUG D#622 => D#623
  # DEBUG D#621 => D#622->_M_t
  # DEBUG D#620 => D#621
  # DEBUG __x => &D.59302
  # DEBUG this => D#620
  # DEBUG D#619 => D#620
  # DEBUG D#618 => D#620
  # DEBUG D#617 => D#618
  # DEBUG this => D#617
  # DEBUG D#616 => D#617
  # DEBUG this => D#616
  # DEBUG __n => 1
  # DEBUG __a => D#615
  # DEBUG D#614 => D#615
  # DEBUG D#612 => D#614
  # DEBUG D#613 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#612
  # DEBUG D.59405 => D#613
  # DEBUG D#611 => D#612
  # DEBUG D#610 => D#611
  # DEBUG this => D#610
  _124 = operator new (72);

  <bb 49>:
  # DEBUG __tmp => _124
  # DEBUG D#505 => D#619
  # DEBUG __node => _124
  # DEBUG __x => &D.59302
  # DEBUG this => D#505
  # DEBUG D#504 => D#505
  # DEBUG D#503 => D#505
  # DEBUG this => _124
  # DEBUG D#1244 => &_124->_M_value_field
  # DEBUG __r => D#1244
  # DEBUG D#488 => D#503
  # DEBUG this => D#488
  # DEBUG D#487 => D#488
  # DEBUG this => D#487
  # DEBUG this => NULL
  # DEBUG D.52714 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1244
  # DEBUG __val => &D.59302
  # DEBUG this => D#502
  # DEBUG D#14 => 40
  # DEBUG __p => D#1244
  # DEBUG D.52990 => D#14
  # DEBUG this => D#1244
  # DEBUG D.59449 => &D.59302
  # DEBUG D#501 => &D.59302.first
  # DEBUG this => D#1244
  # DEBUG __str => D#501
  # DEBUG this => D#501
  # DEBUG D#380 => &D#501->_M_dataplus
  # DEBUG this => D#1244
  _144 = &MEM[(struct basic_string *)_124 + 32B].D.11539._M_local_buf;
  # DEBUG D#381 => &MEM[(struct basic_string *)D#1244]._M_dataplus
  # DEBUG D#147 => D#380
  # DEBUG this => D#381
  # DEBUG __dat => _144
  # DEBUG __a => D#147
  # DEBUG D#146 => D#147
  # DEBUG D#144 => D#381
  # DEBUG D#145 => D#146
  # DEBUG this => D#144
  # DEBUG __a => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG this => D#142
  # DEBUG D.48110 => D#143
  MEM[(struct _Alloc_hider *)_124 + 32B]._M_p = _144;
  _145 = MEM[(char * *)&D.59302];
  # DEBUG D#3 => D#501
  # DEBUG this => D#3
  _146 = MEM[(long unsigned int *)&D.59302 + 8B];
  # DEBUG D#1 => D#501
  # DEBUG this => D#1
  _147 = _145 + _146;
  # DEBUG D#3 => D#501
  # DEBUG this => D#3
  # DEBUG this => D#1244
  # DEBUG __beg => _145
  # DEBUG __end => _147
  # DEBUG this => D#1244
  # DEBUG __beg => _145
  # DEBUG __end => _147
  # DEBUG this => D#1244
  # DEBUG __beg => _145
  # DEBUG __end => _147
  # DEBUG __ptr => _145
  _272 = _147 != 0B;
  _269 = _145 == 0B;
  _268 = _269 & _272;
  if (_268 != 0)
    goto <bb 74>;
  else
    goto <bb 76>;

  <bb 50>:
  _142 = &_124->_M_value_field;
  _155 = std::__cxx11::basic_string<char>::_M_create (_142, &__dnew, 0);

  <bb 51>:
  # DEBUG D#6 => D#1244
  # DEBUG __p => _155
  # DEBUG this => D#6
  MEM[(char * *)_124 + 32B] = _155;
  __dnew.111_156 = __dnew;
  # DEBUG D#7 => D#1244
  # DEBUG __capacity => __dnew.111_156
  # DEBUG this => D#7
  MEM[(size_type *)_124 + 48B] = __dnew.111_156;
  # DEBUG D#3 => D#1244
  # DEBUG this => D#3
  # DEBUG __p => _155
  # DEBUG __k1 => _145
  # DEBUG __k2 => _147
  # DEBUG __d => _155
  # DEBUG __s => _145
  # DEBUG __n => _146
  goto <bb 54>;

  <bb 52>:
  # DEBUG D#3 => D#1244
  # DEBUG this => D#3
  # DEBUG __p => _144
  # DEBUG __k1 => _145
  # DEBUG __k2 => _147
  # DEBUG __d => _144
  # DEBUG __s => _145
  # DEBUG __n => _146
  if (_146 == 1)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  _158 = MEM[(const char_type &)_145];
  # DEBUG D#13 => _145
  # DEBUG __c1 => _144
  # DEBUG __c2 => D#13
  MEM[(char_type &)_144] = _158;
  goto <bb 55>;

  <bb 54>:
  # _292 = PHI <_144(52), _155(51)>
  # DEBUG D#3 => D#1244
  # DEBUG this => D#3
  # DEBUG __p => _292
  # DEBUG __k1 => _145
  # DEBUG __k2 => _147
  # DEBUG __d => _292
  # DEBUG __s => _145
  # DEBUG __n => _146
  # DEBUG __s1 => _292
  # DEBUG __s2 => _145
  # DEBUG __n => _146
  __builtin_memcpy (_292, _145, _146);
  pretmp_169 = __dnew;
  pretmp_78 = MEM[(char * *)_124 + 32B];

  <bb 55>:
  # prephitmp_73 = PHI <_146(53), pretmp_169(54)>
  # prephitmp_96 = PHI <_144(53), pretmp_78(54)>
  # DEBUG D#1231 => __dnew
  # DEBUG this => D#1244
  # DEBUG __n => D#1231
  # DEBUG D#5 => D#1244
  # DEBUG __length => D#1231
  # DEBUG this => D#5
  MEM[(size_type *)_124 + 40B] = prephitmp_73;
  # DEBUG D#3 => D#1244
  # DEBUG this => D#3
  _161 = prephitmp_96 + prephitmp_73;
  # DEBUG __c1 => _161
  # DEBUG __c2 => D#13
  MEM[(char_type &)_161] = 0;
  __dnew ={v} {CLOBBER};
  _148 = D.59302.second;
  MEM[(struct pair *)_124 + 32B].second = _148;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _124
  _127 = (int) __insert_left_126;
  std::_Rb_tree_insert_and_rebalance (_127, _124, __res$second_107, __pos_23);
  _128 = MEM[(struct _Rb_tree *)this_4(D) + 136B]._M_impl._M_node_count;
  _129 = _128 + 1;
  MEM[(struct _Rb_tree *)this_4(D) + 136B]._M_impl._M_node_count = _129;
  # DEBUG this => NULL
  # DEBUG __x => _124
  goto <bb 60>;

<L10>:

<L6>:
  _149 = __builtin_eh_pointer (10);
  __cxa_begin_catch (_149);
  # DEBUG D#322 => D#504
  # DEBUG __p => _124
  # DEBUG this => D#322
  # DEBUG D#321 => D#322
  # DEBUG this => D#321
  # DEBUG D#320 => 1
  # DEBUG __p => _124
  # DEBUG __a => D#319
  # DEBUG __n => D#320
  # DEBUG D#318 => D#320
  # DEBUG D#317 => D#319
  # DEBUG D#315 => D#317
  # DEBUG D#316 => D#318
  # DEBUG __p => _124
  # DEBUG this => D#315
  # DEBUG D.59443 => D#316
  operator delete (_124);
  __cxa_rethrow ();

<L8>:
  __cxa_end_catch ();
  resx 11

<L11>:
  goto <bb 65> (<L5>);

  <bb 60>:
  # SR.1329_252 = PHI <_124(55), __res$first_106(41)>
  # DEBUG D#629 => {CLOBBER}
  # DEBUG __res$first => D#629
  # DEBUG D#630 => {CLOBBER}
  # DEBUG __res$second => D#630
  # DEBUG __i$_M_node => SR.1329_252
  # DEBUG this => &D.59302
  # DEBUG D#191 => &D.59302.first
  # DEBUG this => D#191
  # DEBUG this => D#191
  # DEBUG this => D#191
  _68 = MEM[(char * *)&D.59302];
  # DEBUG D#3 => D#191
  # DEBUG this => D#3
  # DEBUG this => D#191
  if (&MEM[(const struct basic_string *)&D.59302].D.11539._M_local_buf != _68)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  # DEBUG D#186 => MEM[(struct basic_string *)D#191].D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => D#191
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => D#191
  # DEBUG this => D#3
  # DEBUG this => D#191
  # DEBUG D#183 => &MEM[(struct basic_string *)D#191]._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _68
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _68
  # DEBUG this => D#177
  # DEBUG D.59256 => D#178
  operator delete (_68);

  <bb 62>:
  # DEBUG D#187 => &MEM[(struct basic_string *)D#191]._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.59302 ={v} {CLOBBER};

  <bb 63>:
  # __pos_69 = PHI <__pos_313(32), SR.1329_252(62), __pos_313(35)>

  <bb 85>:
  # DEBUG __i$_M_node => __pos_69
  # DEBUG this => &__i
  # DEBUG this => __pos_69
  # DEBUG D#634 => &MEM[(struct _Rb_tree_node *)__pos_69]._M_value_field
  # DEBUG __r => D#634
  # DEBUG D#636 => {CLOBBER}
  # DEBUG __i$_M_node => D#636
  MEM[(mapped_type &)__pos_69 + 64] = value_11(D);
  # DEBUG D#639 => {CLOBBER}
  # DEBUG match$_M_node => D#639
  return;

<L9>:

<L5>:
  # DEBUG this => &D.59302
  # DEBUG D#191 => &D.59302.first
  # DEBUG this => D#191
  # DEBUG this => D#191
  # DEBUG this => D#191
  _71 = MEM[(char * *)&D.59302];
  # DEBUG D#3 => D#191
  # DEBUG this => D#3
  # DEBUG this => D#191
  if (&MEM[(const struct basic_string *)&D.59302].D.11539._M_local_buf != _71)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # DEBUG D#186 => MEM[(struct basic_string *)D#191].D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => D#191
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => D#191
  # DEBUG this => D#3
  # DEBUG this => D#191
  # DEBUG D#183 => &MEM[(struct basic_string *)D#191]._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _71
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _71
  # DEBUG this => D#177
  # DEBUG D.59240 => D#178
  operator delete (_71);

  <bb 67>:
  # DEBUG D#187 => &MEM[(struct basic_string *)D#191]._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.59302 ={v} {CLOBBER};
  resx 9

<L3>:
  # DEBUG this => &D.35952
  # DEBUG this => &D.35952
  # DEBUG this => &D.35952
  _3 = MEM[(char * *)&D.35952];
  # DEBUG D#3 => &D.35952
  # DEBUG this => D#3
  # DEBUG this => &D.35952
  if (&D.35952.D.11539._M_local_buf != _3)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG D#186 => D.35952.D.11539._M_allocated_capacity
  # DEBUG D#185 => D#186
  # DEBUG this => &D.35952
  # DEBUG __size => D#185
  # DEBUG D#184 => D#185
  # DEBUG D#3 => &D.35952
  # DEBUG this => D#3
  # DEBUG this => &D.35952
  # DEBUG D#183 => &D.35952._M_dataplus
  # DEBUG D#181 => D#183
  # DEBUG D#182 => D#184 + 1
  # DEBUG __p => _3
  # DEBUG __a => D#181
  # DEBUG __n => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG D#177 => D#179
  # DEBUG D#178 => D#180
  # DEBUG __p => _3
  # DEBUG this => D#177
  # DEBUG D.55225 => D#178
  operator delete (_3);

  <bb 70>:
  # DEBUG D#187 => &D.35952._M_dataplus
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  D.35952 ={v} {CLOBBER};
  resx 6

  <bb 71>:
  # __pos_162 = PHI <__pos_313(35), __pos_313(78), __pos_23(77)>

  <bb 84>:
  goto <bb 36>;

  <bb 72>:
  # DEBUG __first => D#1234
  # DEBUG __last => _66
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => D#1234
  # DEBUG __last => _66
  __dnew = pretmp_19;
  if (pretmp_19 > 15)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 73>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 74>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L12>:
  goto <bb 57> (<L6>);

  <bb 76>:
  # DEBUG __first => _145
  # DEBUG __last => _147
  # DEBUG D#393 => &__first
  # DEBUG D.51158 => D#393
  # DEBUG __first => _145
  # DEBUG __last => _147
  __dnew = _146;
  if (_146 > 15)
    goto <bb 50>;
  else
    goto <bb 52>;

  <bb 77>:
  # DEBUG __r => NULL
  # DEBUG D#230 => {CLOBBER}
  # DEBUG __j$_M_node => D#230
  # DEBUG this => &match.67
  # DEBUG __it => &D.35892
  # DEBUG match$_M_node => __pos_312
  # DEBUG D#638 => &this_4(D)->_float_map
  # DEBUG this => D#638
  # DEBUG D#63 => &D#638->_M_t
  # DEBUG this => D#63
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &D.35951
  # DEBUG __it => &D.35897
  # DEBUG this => &match
  # DEBUG __x => &D.35951
  # DEBUG D#230 => {CLOBBER}
  # DEBUG __j$_M_node => D#230
  # DEBUG this => &match.67
  # DEBUG __it => &D.35892
  # DEBUG match$_M_node => __pos_312
  # DEBUG D#638 => &this_4(D)->_float_map
  # DEBUG this => D#638
  # DEBUG D#63 => &D#638->_M_t
  # DEBUG this => D#63
  # DEBUG this => NULL
  # DEBUG __x => __pos_23
  # DEBUG this => &D.35951
  # DEBUG __it => &D.35897
  # DEBUG this => &match
  # DEBUG __x => &D.35951
  # DEBUG D#1197 => &this_4(D)->_float_map
  # DEBUG this => D#1197
  # DEBUG __k => field_5(D)
  # DEBUG this => D#1197
  # DEBUG __x => field_5(D)
  # DEBUG D#1243 => &MEM[(struct map *)this_4(D) + 136B]._M_t
  # DEBUG this => D#1243
  # DEBUG __k => field_5(D)
  # DEBUG this => D#1243
  # DEBUG D#37 => D#1243
  # DEBUG this => D#37
  # DEBUG D#229 => D#1243
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => field_5(D)
  # DEBUG __y => __pos_23
  # DEBUG __x => __pos_24
  if (__pos_24 == 0B)
    goto <bb 71>;
  else
    goto <bb 22>;

}


