
;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >*] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E, funcdef_no=2421, decl_uid=40054, cgraph_uid=711, symbol_order=720)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  char * const _7;
  char * const _13;
  const char * _14;
  char * const _15;
  const char * _16;
  const char * _21;
  char * const _22;
  const char * _23;
  char * const _29;
  const char * _30;
  char * const _31;
  const char * _32;
  char * const _38;
  const char * _39;
  char * const _40;
  const char * _41;
  char * const _47;
  const char * _48;
  char * const _49;
  const char * _50;
  char * const _56;
  const char * _57;
  char * const _58;
  const char * _59;
  char * const _65;
  const char * _66;
  char * const _67;
  const char * _68;
  char * const _74;
  const char * _75;
  char * const _76;
  const char * _77;
  struct _Rb_tree_node_base * _79;
  char * const _83;
  const char * _84;
  char * const _85;
  const char * _86;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_225 = PHI <__x_3(D)(4), __x_10(74)>
  # DEBUG __x => __x_225
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_225 + 24B];
  # DEBUG D#38 => __x_225
  # DEBUG __x => D#38
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_10 = MEM[(struct _Rb_tree_node_base * *)__x_225 + 16B];
  # DEBUG D#39 => __x_225
  # DEBUG __x => D#39
  # DEBUG __y => NULL
  # DEBUG D#188 => this_6(D)
  # DEBUG __p => __x_225
  # DEBUG this => D#188
  # DEBUG D#187 => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#186
  # DEBUG __p => __x_225
  # DEBUG this => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => __x_225
  # DEBUG D#317 => &__x_225->_M_value_field
  # DEBUG __r => D#317
  # DEBUG D#183 => D#184
  # DEBUG this => D#183
  # DEBUG D#182 => D#183
  # DEBUG this => D#182
  # DEBUG this => NULL
  # DEBUG D.71717 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#317
  # DEBUG this => D#111
  # DEBUG this => D#317
  # DEBUG D#110 => &D#317->second
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#110
  _13 = MEM[(char * *)__x_225 + 64B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  _14 = &MEM[(const struct basic_string *)__x_225 + 64B].D.11612._M_local_buf;
  if (_13 != _14)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 7>:

  <bb 8>:
  # __x_232 = PHI <__x_9(7), __x_18(69)>
  # DEBUG __x => __x_232
  __x_17 = MEM[(struct _Rb_tree_node_base * *)__x_232 + 24B];
  # DEBUG D#38 => __x_232
  # DEBUG __x => D#38
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_17
  # DEBUG __x => __x_17
  if (__x_17 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_18 = MEM[(struct _Rb_tree_node_base * *)__x_232 + 16B];
  # DEBUG D#39 => __x_232
  # DEBUG __x => D#39
  # DEBUG __y => NULL
  # DEBUG D#188 => this_6(D)
  # DEBUG __p => __x_232
  # DEBUG this => D#188
  # DEBUG D#187 => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#186
  # DEBUG __p => __x_232
  # DEBUG this => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => __x_232
  # DEBUG D#316 => &__x_232->_M_value_field
  # DEBUG __r => D#316
  # DEBUG D#183 => D#184
  # DEBUG this => D#183
  # DEBUG D#182 => D#183
  # DEBUG this => D#182
  # DEBUG this => NULL
  # DEBUG D.71717 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#316
  # DEBUG this => D#111
  # DEBUG this => D#316
  # DEBUG D#110 => &D#316->second
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#110
  _7 = MEM[(char * *)__x_232 + 64B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  _21 = &MEM[(const struct basic_string *)__x_232 + 64B].D.11612._M_local_buf;
  if (_7 != _21)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 10>:

  <bb 11>:
  # __x_234 = PHI <__x_17(10), __x_26(64)>
  # DEBUG __x => __x_234
  __x_25 = MEM[(struct _Rb_tree_node_base * *)__x_234 + 24B];
  # DEBUG D#38 => __x_234
  # DEBUG __x => D#38
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_25
  # DEBUG __x => __x_25
  if (__x_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_26 = MEM[(struct _Rb_tree_node_base * *)__x_234 + 16B];
  # DEBUG D#39 => __x_234
  # DEBUG __x => D#39
  # DEBUG __y => NULL
  # DEBUG D#188 => this_6(D)
  # DEBUG __p => __x_234
  # DEBUG this => D#188
  # DEBUG D#187 => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#186
  # DEBUG __p => __x_234
  # DEBUG this => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => __x_234
  # DEBUG D#315 => &__x_234->_M_value_field
  # DEBUG __r => D#315
  # DEBUG D#183 => D#184
  # DEBUG this => D#183
  # DEBUG D#182 => D#183
  # DEBUG this => D#182
  # DEBUG this => NULL
  # DEBUG D.71717 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#315
  # DEBUG this => D#111
  # DEBUG this => D#315
  # DEBUG D#110 => &D#315->second
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#110
  _29 = MEM[(char * *)__x_234 + 64B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  _30 = &MEM[(const struct basic_string *)__x_234 + 64B].D.11612._M_local_buf;
  if (_29 != _30)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 13>:

  <bb 14>:
  # __x_236 = PHI <__x_25(13), __x_35(59)>
  # DEBUG __x => __x_236
  __x_34 = MEM[(struct _Rb_tree_node_base * *)__x_236 + 24B];
  # DEBUG D#38 => __x_236
  # DEBUG __x => D#38
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_34
  # DEBUG __x => __x_34
  if (__x_34 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_236 + 16B];
  # DEBUG D#39 => __x_236
  # DEBUG __x => D#39
  # DEBUG __y => NULL
  # DEBUG D#188 => this_6(D)
  # DEBUG __p => __x_236
  # DEBUG this => D#188
  # DEBUG D#187 => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#186
  # DEBUG __p => __x_236
  # DEBUG this => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => __x_236
  # DEBUG D#314 => &__x_236->_M_value_field
  # DEBUG __r => D#314
  # DEBUG D#183 => D#184
  # DEBUG this => D#183
  # DEBUG D#182 => D#183
  # DEBUG this => D#182
  # DEBUG this => NULL
  # DEBUG D.71717 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#314
  # DEBUG this => D#111
  # DEBUG this => D#314
  # DEBUG D#110 => &D#314->second
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#110
  _38 = MEM[(char * *)__x_236 + 64B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  _39 = &MEM[(const struct basic_string *)__x_236 + 64B].D.11612._M_local_buf;
  if (_38 != _39)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 16>:

  <bb 17>:
  # __x_227 = PHI <__x_34(16), __x_44(54)>
  # DEBUG __x => __x_227
  __x_43 = MEM[(struct _Rb_tree_node_base * *)__x_227 + 24B];
  # DEBUG D#38 => __x_227
  # DEBUG __x => D#38
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_43
  # DEBUG __x => __x_43
  if (__x_43 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_44 = MEM[(struct _Rb_tree_node_base * *)__x_227 + 16B];
  # DEBUG D#39 => __x_227
  # DEBUG __x => D#39
  # DEBUG __y => NULL
  # DEBUG D#188 => this_6(D)
  # DEBUG __p => __x_227
  # DEBUG this => D#188
  # DEBUG D#187 => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#186
  # DEBUG __p => __x_227
  # DEBUG this => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => __x_227
  # DEBUG D#313 => &__x_227->_M_value_field
  # DEBUG __r => D#313
  # DEBUG D#183 => D#184
  # DEBUG this => D#183
  # DEBUG D#182 => D#183
  # DEBUG this => D#182
  # DEBUG this => NULL
  # DEBUG D.71717 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#313
  # DEBUG this => D#111
  # DEBUG this => D#313
  # DEBUG D#110 => &D#313->second
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#110
  _47 = MEM[(char * *)__x_227 + 64B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  _48 = &MEM[(const struct basic_string *)__x_227 + 64B].D.11612._M_local_buf;
  if (_47 != _48)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 19>:

  <bb 20>:
  # __x_218 = PHI <__x_43(19), __x_53(49)>
  # DEBUG __x => __x_218
  __x_52 = MEM[(struct _Rb_tree_node_base * *)__x_218 + 24B];
  # DEBUG D#38 => __x_218
  # DEBUG __x => D#38
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_52
  # DEBUG __x => __x_52
  if (__x_52 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_53 = MEM[(struct _Rb_tree_node_base * *)__x_218 + 16B];
  # DEBUG D#39 => __x_218
  # DEBUG __x => D#39
  # DEBUG __y => NULL
  # DEBUG D#188 => this_6(D)
  # DEBUG __p => __x_218
  # DEBUG this => D#188
  # DEBUG D#187 => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#186
  # DEBUG __p => __x_218
  # DEBUG this => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => __x_218
  # DEBUG D#312 => &__x_218->_M_value_field
  # DEBUG __r => D#312
  # DEBUG D#183 => D#184
  # DEBUG this => D#183
  # DEBUG D#182 => D#183
  # DEBUG this => D#182
  # DEBUG this => NULL
  # DEBUG D.71717 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#312
  # DEBUG this => D#111
  # DEBUG this => D#312
  # DEBUG D#110 => &D#312->second
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#110
  _56 = MEM[(char * *)__x_218 + 64B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  _57 = &MEM[(const struct basic_string *)__x_218 + 64B].D.11612._M_local_buf;
  if (_56 != _57)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 22>:

  <bb 23>:
  # __x_239 = PHI <__x_52(22), __x_62(44)>
  # DEBUG __x => __x_239
  __x_61 = MEM[(struct _Rb_tree_node_base * *)__x_239 + 24B];
  # DEBUG D#38 => __x_239
  # DEBUG __x => D#38
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_61
  # DEBUG __x => __x_61
  if (__x_61 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_62 = MEM[(struct _Rb_tree_node_base * *)__x_239 + 16B];
  # DEBUG D#39 => __x_239
  # DEBUG __x => D#39
  # DEBUG __y => NULL
  # DEBUG D#188 => this_6(D)
  # DEBUG __p => __x_239
  # DEBUG this => D#188
  # DEBUG D#187 => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#186
  # DEBUG __p => __x_239
  # DEBUG this => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => __x_239
  # DEBUG D#311 => &__x_239->_M_value_field
  # DEBUG __r => D#311
  # DEBUG D#183 => D#184
  # DEBUG this => D#183
  # DEBUG D#182 => D#183
  # DEBUG this => D#182
  # DEBUG this => NULL
  # DEBUG D.71717 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#311
  # DEBUG this => D#111
  # DEBUG this => D#311
  # DEBUG D#110 => &D#311->second
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#110
  _65 = MEM[(char * *)__x_239 + 64B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  _66 = &MEM[(const struct basic_string *)__x_239 + 64B].D.11612._M_local_buf;
  if (_65 != _66)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 25>:

  <bb 26>:
  # __x_242 = PHI <__x_61(25), __x_71(39)>
  # DEBUG __x => __x_242
  __x_70 = MEM[(struct _Rb_tree_node_base * *)__x_242 + 24B];
  # DEBUG D#38 => __x_242
  # DEBUG __x => D#38
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_70
  # DEBUG __x => __x_70
  if (__x_70 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_71 = MEM[(struct _Rb_tree_node_base * *)__x_242 + 16B];
  # DEBUG D#39 => __x_242
  # DEBUG __x => D#39
  # DEBUG __y => NULL
  # DEBUG D#188 => this_6(D)
  # DEBUG __p => __x_242
  # DEBUG this => D#188
  # DEBUG D#187 => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#186
  # DEBUG __p => __x_242
  # DEBUG this => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => __x_242
  # DEBUG D#310 => &__x_242->_M_value_field
  # DEBUG __r => D#310
  # DEBUG D#183 => D#184
  # DEBUG this => D#183
  # DEBUG D#182 => D#183
  # DEBUG this => D#182
  # DEBUG this => NULL
  # DEBUG D.71717 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#310
  # DEBUG this => D#111
  # DEBUG this => D#310
  # DEBUG D#110 => &D#310->second
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#110
  _74 = MEM[(char * *)__x_242 + 64B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  _75 = &MEM[(const struct basic_string *)__x_242 + 64B].D.11612._M_local_buf;
  if (_74 != _75)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 28>:

  <bb 29>:
  # __x_245 = PHI <__x_70(28), __x_80(34)>
  # DEBUG __x => __x_245
  _79 = MEM[(struct _Rb_tree_node_base * *)__x_245 + 24B];
  # DEBUG D#38 => __x_245
  # DEBUG __x => D#38
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_M_erase (this_6(D), _79);
  __x_80 = MEM[(struct _Rb_tree_node_base * *)__x_245 + 16B];
  # DEBUG D#39 => __x_245
  # DEBUG __x => D#39
  # DEBUG __y => NULL
  # DEBUG D#188 => this_6(D)
  # DEBUG __p => __x_245
  # DEBUG this => D#188
  # DEBUG D#187 => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#186
  # DEBUG __p => __x_245
  # DEBUG this => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => __x_245
  # DEBUG D#309 => &__x_245->_M_value_field
  # DEBUG __r => D#309
  # DEBUG D#183 => D#184
  # DEBUG this => D#183
  # DEBUG D#182 => D#183
  # DEBUG this => D#182
  # DEBUG this => NULL
  # DEBUG D.71717 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#309
  # DEBUG this => D#111
  # DEBUG this => D#309
  # DEBUG D#110 => &D#309->second
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#110
  _83 = MEM[(char * *)__x_245 + 64B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  _84 = &MEM[(const struct basic_string *)__x_245 + 64B].D.11612._M_local_buf;
  if (_83 != _84)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#75 => D#110->D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#110
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  # DEBUG D#72 => &D#110->_M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _83
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _83
  # DEBUG this => D#66
  # DEBUG D.74613 => D#67
  operator delete (_83);

  <bb 31>:
  # DEBUG D#76 => &D#110->_M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_245 + 64] ={v} {CLOBBER};
  # DEBUG D#109 => &D#309->first
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  _85 = MEM[(char * *)__x_245 + 32B];
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  _86 = &MEM[(const struct basic_string *)__x_245 + 32B].D.11612._M_local_buf;
  if (_85 != _86)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#109].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#109
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  # DEBUG D#72 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _85
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _85
  # DEBUG this => D#66
  # DEBUG D.74628 => D#67
  operator delete (_85);

  <bb 33>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_245 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#134 => D#187
  # DEBUG __p => __x_245
  # DEBUG this => D#134
  # DEBUG D#133 => D#134
  # DEBUG this => D#133
  # DEBUG D#132 => 1
  # DEBUG __p => __x_245
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => __x_245
  # DEBUG this => D#127
  # DEBUG D.74602 => D#128
  operator delete (__x_245);
  # DEBUG __x => __x_80
  # DEBUG __x => __x_80
  if (__x_80 == 0B)
    goto <bb 27>;
  else
    goto <bb 34>;

  <bb 34>:
  goto <bb 29>;

  <bb 35>:
  # DEBUG D#75 => D#110->D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#110
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  # DEBUG D#72 => &D#110->_M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _74
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _74
  # DEBUG this => D#66
  # DEBUG D.74564 => D#67
  operator delete (_74);

  <bb 36>:
  # DEBUG D#76 => &D#110->_M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_242 + 64] ={v} {CLOBBER};
  # DEBUG D#109 => &D#310->first
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  _76 = MEM[(char * *)__x_242 + 32B];
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  _77 = &MEM[(const struct basic_string *)__x_242 + 32B].D.11612._M_local_buf;
  if (_76 != _77)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#109].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#109
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  # DEBUG D#72 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _76
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _76
  # DEBUG this => D#66
  # DEBUG D.74579 => D#67
  operator delete (_76);

  <bb 38>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_242 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#134 => D#187
  # DEBUG __p => __x_242
  # DEBUG this => D#134
  # DEBUG D#133 => D#134
  # DEBUG this => D#133
  # DEBUG D#132 => 1
  # DEBUG __p => __x_242
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => __x_242
  # DEBUG this => D#127
  # DEBUG D.74553 => D#128
  operator delete (__x_242);
  # DEBUG __x => __x_71
  # DEBUG __x => __x_71
  if (__x_71 == 0B)
    goto <bb 24>;
  else
    goto <bb 39>;

  <bb 39>:
  goto <bb 26>;

  <bb 40>:
  # DEBUG D#75 => D#110->D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#110
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  # DEBUG D#72 => &D#110->_M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _65
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _65
  # DEBUG this => D#66
  # DEBUG D.74515 => D#67
  operator delete (_65);

  <bb 41>:
  # DEBUG D#76 => &D#110->_M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_239 + 64] ={v} {CLOBBER};
  # DEBUG D#109 => &D#311->first
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  _67 = MEM[(char * *)__x_239 + 32B];
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  _68 = &MEM[(const struct basic_string *)__x_239 + 32B].D.11612._M_local_buf;
  if (_67 != _68)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#109].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#109
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  # DEBUG D#72 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _67
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _67
  # DEBUG this => D#66
  # DEBUG D.74530 => D#67
  operator delete (_67);

  <bb 43>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_239 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#134 => D#187
  # DEBUG __p => __x_239
  # DEBUG this => D#134
  # DEBUG D#133 => D#134
  # DEBUG this => D#133
  # DEBUG D#132 => 1
  # DEBUG __p => __x_239
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => __x_239
  # DEBUG this => D#127
  # DEBUG D.74504 => D#128
  operator delete (__x_239);
  # DEBUG __x => __x_62
  # DEBUG __x => __x_62
  if (__x_62 == 0B)
    goto <bb 21>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 23>;

  <bb 45>:
  # DEBUG D#75 => D#110->D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#110
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  # DEBUG D#72 => &D#110->_M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _56
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _56
  # DEBUG this => D#66
  # DEBUG D.74466 => D#67
  operator delete (_56);

  <bb 46>:
  # DEBUG D#76 => &D#110->_M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_218 + 64] ={v} {CLOBBER};
  # DEBUG D#109 => &D#312->first
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  _58 = MEM[(char * *)__x_218 + 32B];
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  _59 = &MEM[(const struct basic_string *)__x_218 + 32B].D.11612._M_local_buf;
  if (_58 != _59)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#109].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#109
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  # DEBUG D#72 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _58
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _58
  # DEBUG this => D#66
  # DEBUG D.74481 => D#67
  operator delete (_58);

  <bb 48>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_218 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#134 => D#187
  # DEBUG __p => __x_218
  # DEBUG this => D#134
  # DEBUG D#133 => D#134
  # DEBUG this => D#133
  # DEBUG D#132 => 1
  # DEBUG __p => __x_218
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => __x_218
  # DEBUG this => D#127
  # DEBUG D.74455 => D#128
  operator delete (__x_218);
  # DEBUG __x => __x_53
  # DEBUG __x => __x_53
  if (__x_53 == 0B)
    goto <bb 18>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 20>;

  <bb 50>:
  # DEBUG D#75 => D#110->D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#110
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  # DEBUG D#72 => &D#110->_M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _47
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _47
  # DEBUG this => D#66
  # DEBUG D.74417 => D#67
  operator delete (_47);

  <bb 51>:
  # DEBUG D#76 => &D#110->_M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_227 + 64] ={v} {CLOBBER};
  # DEBUG D#109 => &D#313->first
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  _49 = MEM[(char * *)__x_227 + 32B];
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  _50 = &MEM[(const struct basic_string *)__x_227 + 32B].D.11612._M_local_buf;
  if (_49 != _50)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#109].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#109
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  # DEBUG D#72 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _49
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _49
  # DEBUG this => D#66
  # DEBUG D.74432 => D#67
  operator delete (_49);

  <bb 53>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_227 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#134 => D#187
  # DEBUG __p => __x_227
  # DEBUG this => D#134
  # DEBUG D#133 => D#134
  # DEBUG this => D#133
  # DEBUG D#132 => 1
  # DEBUG __p => __x_227
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => __x_227
  # DEBUG this => D#127
  # DEBUG D.74406 => D#128
  operator delete (__x_227);
  # DEBUG __x => __x_44
  # DEBUG __x => __x_44
  if (__x_44 == 0B)
    goto <bb 15>;
  else
    goto <bb 54>;

  <bb 54>:
  goto <bb 17>;

  <bb 55>:
  # DEBUG D#75 => D#110->D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#110
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  # DEBUG D#72 => &D#110->_M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _38
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _38
  # DEBUG this => D#66
  # DEBUG D.74368 => D#67
  operator delete (_38);

  <bb 56>:
  # DEBUG D#76 => &D#110->_M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_236 + 64] ={v} {CLOBBER};
  # DEBUG D#109 => &D#314->first
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  _40 = MEM[(char * *)__x_236 + 32B];
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  _41 = &MEM[(const struct basic_string *)__x_236 + 32B].D.11612._M_local_buf;
  if (_40 != _41)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#109].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#109
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  # DEBUG D#72 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _40
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _40
  # DEBUG this => D#66
  # DEBUG D.74383 => D#67
  operator delete (_40);

  <bb 58>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_236 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#134 => D#187
  # DEBUG __p => __x_236
  # DEBUG this => D#134
  # DEBUG D#133 => D#134
  # DEBUG this => D#133
  # DEBUG D#132 => 1
  # DEBUG __p => __x_236
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => __x_236
  # DEBUG this => D#127
  # DEBUG D.74357 => D#128
  operator delete (__x_236);
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 12>;
  else
    goto <bb 59>;

  <bb 59>:
  goto <bb 14>;

  <bb 60>:
  # DEBUG D#75 => D#110->D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#110
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  # DEBUG D#72 => &D#110->_M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _29
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _29
  # DEBUG this => D#66
  # DEBUG D.74319 => D#67
  operator delete (_29);

  <bb 61>:
  # DEBUG D#76 => &D#110->_M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_234 + 64] ={v} {CLOBBER};
  # DEBUG D#109 => &D#315->first
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  _31 = MEM[(char * *)__x_234 + 32B];
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  _32 = &MEM[(const struct basic_string *)__x_234 + 32B].D.11612._M_local_buf;
  if (_31 != _32)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#109].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#109
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  # DEBUG D#72 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _31
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _31
  # DEBUG this => D#66
  # DEBUG D.74334 => D#67
  operator delete (_31);

  <bb 63>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_234 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#134 => D#187
  # DEBUG __p => __x_234
  # DEBUG this => D#134
  # DEBUG D#133 => D#134
  # DEBUG this => D#133
  # DEBUG D#132 => 1
  # DEBUG __p => __x_234
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => __x_234
  # DEBUG this => D#127
  # DEBUG D.74308 => D#128
  operator delete (__x_234);
  # DEBUG __x => __x_26
  # DEBUG __x => __x_26
  if (__x_26 == 0B)
    goto <bb 9>;
  else
    goto <bb 64>;

  <bb 64>:
  goto <bb 11>;

  <bb 65>:
  # DEBUG D#75 => D#110->D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#110
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  # DEBUG D#72 => &D#110->_M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _7
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _7
  # DEBUG this => D#66
  # DEBUG D.74270 => D#67
  operator delete (_7);

  <bb 66>:
  # DEBUG D#76 => &D#110->_M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_232 + 64] ={v} {CLOBBER};
  # DEBUG D#109 => &D#316->first
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  _22 = MEM[(char * *)__x_232 + 32B];
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  _23 = &MEM[(const struct basic_string *)__x_232 + 32B].D.11612._M_local_buf;
  if (_22 != _23)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#109].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#109
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  # DEBUG D#72 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _22
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _22
  # DEBUG this => D#66
  # DEBUG D.74285 => D#67
  operator delete (_22);

  <bb 68>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_232 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#134 => D#187
  # DEBUG __p => __x_232
  # DEBUG this => D#134
  # DEBUG D#133 => D#134
  # DEBUG this => D#133
  # DEBUG D#132 => 1
  # DEBUG __p => __x_232
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => __x_232
  # DEBUG this => D#127
  # DEBUG D.74259 => D#128
  operator delete (__x_232);
  # DEBUG __x => __x_18
  # DEBUG __x => __x_18
  if (__x_18 == 0B)
    goto <bb 6>;
  else
    goto <bb 69>;

  <bb 69>:
  goto <bb 8>;

  <bb 70>:
  # DEBUG D#75 => D#110->D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#110
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  # DEBUG D#72 => &D#110->_M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _13
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _13
  # DEBUG this => D#66
  # DEBUG D.74221 => D#67
  operator delete (_13);

  <bb 71>:
  # DEBUG D#76 => &D#110->_M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_225 + 64] ={v} {CLOBBER};
  # DEBUG D#109 => &D#317->first
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  _15 = MEM[(char * *)__x_225 + 32B];
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  _16 = &MEM[(const struct basic_string *)__x_225 + 32B].D.11612._M_local_buf;
  if (_15 != _16)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#109].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#109
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  # DEBUG D#72 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _15
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _15
  # DEBUG this => D#66
  # DEBUG D.74236 => D#67
  operator delete (_15);

  <bb 73>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_225 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#134 => D#187
  # DEBUG __p => __x_225
  # DEBUG this => D#134
  # DEBUG D#133 => D#134
  # DEBUG this => D#133
  # DEBUG D#132 => 1
  # DEBUG __p => __x_225
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => __x_225
  # DEBUG this => D#127
  # DEBUG D.71794 => D#128
  operator delete (__x_225);
  # DEBUG __x => __x_10
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 3>;
  else
    goto <bb 74>;

  <bb 74>:
  goto <bb 5>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, int> >*] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E, funcdef_no=2426, decl_uid=41121, cgraph_uid=716, symbol_order=725)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, int> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  char * const _7;
  char * const _11;
  const char * _12;
  const char * _16;
  char * const _21;
  const char * _22;
  char * const _27;
  const char * _28;
  char * const _33;
  const char * _34;
  char * const _39;
  const char * _40;
  char * const _45;
  const char * _46;
  char * const _51;
  const char * _52;
  struct _Rb_tree_node_base * _54;
  char * const _57;
  const char * _58;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_149 = PHI <__x_3(D)(4), __x_10(56)>
  # DEBUG __x => __x_149
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 24B];
  # DEBUG D#40 => __x_149
  # DEBUG __x => D#40
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_10 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 16B];
  # DEBUG D#41 => __x_149
  # DEBUG __x => D#41
  # DEBUG __y => NULL
  # DEBUG D#197 => this_6(D)
  # DEBUG __p => __x_149
  # DEBUG this => D#197
  # DEBUG D#196 => D#197
  # DEBUG D#195 => D#197
  # DEBUG D#194 => D#195
  # DEBUG __p => __x_149
  # DEBUG this => D#194
  # DEBUG D#193 => D#194
  # DEBUG this => __x_149
  # DEBUG D#192 => &__x_149->_M_value_field
  # DEBUG __r => D#192
  # DEBUG D#191 => D#193
  # DEBUG this => D#191
  # DEBUG D#190 => D#191
  # DEBUG this => D#190
  # DEBUG this => NULL
  # DEBUG D.71819 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#192
  # DEBUG this => D#113
  # DEBUG this => D#192
  # DEBUG D#112 => &D#192->first
  # DEBUG this => D#112
  # DEBUG this => D#112
  # DEBUG this => D#112
  _11 = MEM[(char * *)__x_149 + 32B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  _12 = &MEM[(const struct basic_string *)__x_149 + 32B].D.11612._M_local_buf;
  if (_11 != _12)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 7>:

  <bb 8>:
  # __x_152 = PHI <__x_9(7), __x_14(53)>
  # DEBUG __x => __x_152
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 24B];
  # DEBUG D#40 => __x_152
  # DEBUG __x => D#40
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_14 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 16B];
  # DEBUG D#41 => __x_152
  # DEBUG __x => D#41
  # DEBUG __y => NULL
  # DEBUG D#197 => this_6(D)
  # DEBUG __p => __x_152
  # DEBUG this => D#197
  # DEBUG D#196 => D#197
  # DEBUG D#195 => D#197
  # DEBUG D#194 => D#195
  # DEBUG __p => __x_152
  # DEBUG this => D#194
  # DEBUG D#193 => D#194
  # DEBUG this => __x_152
  # DEBUG D#192 => &__x_152->_M_value_field
  # DEBUG __r => D#192
  # DEBUG D#191 => D#193
  # DEBUG this => D#191
  # DEBUG D#190 => D#191
  # DEBUG this => D#190
  # DEBUG this => NULL
  # DEBUG D.71819 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#192
  # DEBUG this => D#113
  # DEBUG this => D#192
  # DEBUG D#112 => &D#192->first
  # DEBUG this => D#112
  # DEBUG this => D#112
  # DEBUG this => D#112
  _7 = MEM[(char * *)__x_152 + 32B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  _16 = &MEM[(const struct basic_string *)__x_152 + 32B].D.11612._M_local_buf;
  if (_7 != _16)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 10>:

  <bb 11>:
  # __x_155 = PHI <__x_13(10), __x_19(50)>
  # DEBUG __x => __x_155
  __x_18 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 24B];
  # DEBUG D#40 => __x_155
  # DEBUG __x => D#40
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_18
  # DEBUG __x => __x_18
  if (__x_18 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 16B];
  # DEBUG D#41 => __x_155
  # DEBUG __x => D#41
  # DEBUG __y => NULL
  # DEBUG D#197 => this_6(D)
  # DEBUG __p => __x_155
  # DEBUG this => D#197
  # DEBUG D#196 => D#197
  # DEBUG D#195 => D#197
  # DEBUG D#194 => D#195
  # DEBUG __p => __x_155
  # DEBUG this => D#194
  # DEBUG D#193 => D#194
  # DEBUG this => __x_155
  # DEBUG D#192 => &__x_155->_M_value_field
  # DEBUG __r => D#192
  # DEBUG D#191 => D#193
  # DEBUG this => D#191
  # DEBUG D#190 => D#191
  # DEBUG this => D#190
  # DEBUG this => NULL
  # DEBUG D.71819 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#192
  # DEBUG this => D#113
  # DEBUG this => D#192
  # DEBUG D#112 => &D#192->first
  # DEBUG this => D#112
  # DEBUG this => D#112
  # DEBUG this => D#112
  _21 = MEM[(char * *)__x_155 + 32B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  _22 = &MEM[(const struct basic_string *)__x_155 + 32B].D.11612._M_local_buf;
  if (_21 != _22)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 13>:

  <bb 14>:
  # __x_158 = PHI <__x_18(13), __x_25(47)>
  # DEBUG __x => __x_158
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 24B];
  # DEBUG D#40 => __x_158
  # DEBUG __x => D#40
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_25 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 16B];
  # DEBUG D#41 => __x_158
  # DEBUG __x => D#41
  # DEBUG __y => NULL
  # DEBUG D#197 => this_6(D)
  # DEBUG __p => __x_158
  # DEBUG this => D#197
  # DEBUG D#196 => D#197
  # DEBUG D#195 => D#197
  # DEBUG D#194 => D#195
  # DEBUG __p => __x_158
  # DEBUG this => D#194
  # DEBUG D#193 => D#194
  # DEBUG this => __x_158
  # DEBUG D#192 => &__x_158->_M_value_field
  # DEBUG __r => D#192
  # DEBUG D#191 => D#193
  # DEBUG this => D#191
  # DEBUG D#190 => D#191
  # DEBUG this => D#190
  # DEBUG this => NULL
  # DEBUG D.71819 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#192
  # DEBUG this => D#113
  # DEBUG this => D#192
  # DEBUG D#112 => &D#192->first
  # DEBUG this => D#112
  # DEBUG this => D#112
  # DEBUG this => D#112
  _27 = MEM[(char * *)__x_158 + 32B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  _28 = &MEM[(const struct basic_string *)__x_158 + 32B].D.11612._M_local_buf;
  if (_27 != _28)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 16>:

  <bb 17>:
  # __x_161 = PHI <__x_24(16), __x_31(44)>
  # DEBUG __x => __x_161
  __x_30 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 24B];
  # DEBUG D#40 => __x_161
  # DEBUG __x => D#40
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_30
  # DEBUG __x => __x_30
  if (__x_30 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 16B];
  # DEBUG D#41 => __x_161
  # DEBUG __x => D#41
  # DEBUG __y => NULL
  # DEBUG D#197 => this_6(D)
  # DEBUG __p => __x_161
  # DEBUG this => D#197
  # DEBUG D#196 => D#197
  # DEBUG D#195 => D#197
  # DEBUG D#194 => D#195
  # DEBUG __p => __x_161
  # DEBUG this => D#194
  # DEBUG D#193 => D#194
  # DEBUG this => __x_161
  # DEBUG D#192 => &__x_161->_M_value_field
  # DEBUG __r => D#192
  # DEBUG D#191 => D#193
  # DEBUG this => D#191
  # DEBUG D#190 => D#191
  # DEBUG this => D#190
  # DEBUG this => NULL
  # DEBUG D.71819 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#192
  # DEBUG this => D#113
  # DEBUG this => D#192
  # DEBUG D#112 => &D#192->first
  # DEBUG this => D#112
  # DEBUG this => D#112
  # DEBUG this => D#112
  _33 = MEM[(char * *)__x_161 + 32B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  _34 = &MEM[(const struct basic_string *)__x_161 + 32B].D.11612._M_local_buf;
  if (_33 != _34)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 19>:

  <bb 20>:
  # __x_164 = PHI <__x_30(19), __x_37(41)>
  # DEBUG __x => __x_164
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 24B];
  # DEBUG D#40 => __x_164
  # DEBUG __x => D#40
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_37 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 16B];
  # DEBUG D#41 => __x_164
  # DEBUG __x => D#41
  # DEBUG __y => NULL
  # DEBUG D#197 => this_6(D)
  # DEBUG __p => __x_164
  # DEBUG this => D#197
  # DEBUG D#196 => D#197
  # DEBUG D#195 => D#197
  # DEBUG D#194 => D#195
  # DEBUG __p => __x_164
  # DEBUG this => D#194
  # DEBUG D#193 => D#194
  # DEBUG this => __x_164
  # DEBUG D#192 => &__x_164->_M_value_field
  # DEBUG __r => D#192
  # DEBUG D#191 => D#193
  # DEBUG this => D#191
  # DEBUG D#190 => D#191
  # DEBUG this => D#190
  # DEBUG this => NULL
  # DEBUG D.71819 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#192
  # DEBUG this => D#113
  # DEBUG this => D#192
  # DEBUG D#112 => &D#192->first
  # DEBUG this => D#112
  # DEBUG this => D#112
  # DEBUG this => D#112
  _39 = MEM[(char * *)__x_164 + 32B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  _40 = &MEM[(const struct basic_string *)__x_164 + 32B].D.11612._M_local_buf;
  if (_39 != _40)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 22>:

  <bb 23>:
  # __x_167 = PHI <__x_36(22), __x_43(38)>
  # DEBUG __x => __x_167
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 24B];
  # DEBUG D#40 => __x_167
  # DEBUG __x => D#40
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_42
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_43 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 16B];
  # DEBUG D#41 => __x_167
  # DEBUG __x => D#41
  # DEBUG __y => NULL
  # DEBUG D#197 => this_6(D)
  # DEBUG __p => __x_167
  # DEBUG this => D#197
  # DEBUG D#196 => D#197
  # DEBUG D#195 => D#197
  # DEBUG D#194 => D#195
  # DEBUG __p => __x_167
  # DEBUG this => D#194
  # DEBUG D#193 => D#194
  # DEBUG this => __x_167
  # DEBUG D#192 => &__x_167->_M_value_field
  # DEBUG __r => D#192
  # DEBUG D#191 => D#193
  # DEBUG this => D#191
  # DEBUG D#190 => D#191
  # DEBUG this => D#190
  # DEBUG this => NULL
  # DEBUG D.71819 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#192
  # DEBUG this => D#113
  # DEBUG this => D#192
  # DEBUG D#112 => &D#192->first
  # DEBUG this => D#112
  # DEBUG this => D#112
  # DEBUG this => D#112
  _45 = MEM[(char * *)__x_167 + 32B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  _46 = &MEM[(const struct basic_string *)__x_167 + 32B].D.11612._M_local_buf;
  if (_45 != _46)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 25>:

  <bb 26>:
  # __x_170 = PHI <__x_42(25), __x_49(35)>
  # DEBUG __x => __x_170
  __x_48 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 24B];
  # DEBUG D#40 => __x_170
  # DEBUG __x => D#40
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_48
  # DEBUG __x => __x_48
  if (__x_48 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_49 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 16B];
  # DEBUG D#41 => __x_170
  # DEBUG __x => D#41
  # DEBUG __y => NULL
  # DEBUG D#197 => this_6(D)
  # DEBUG __p => __x_170
  # DEBUG this => D#197
  # DEBUG D#196 => D#197
  # DEBUG D#195 => D#197
  # DEBUG D#194 => D#195
  # DEBUG __p => __x_170
  # DEBUG this => D#194
  # DEBUG D#193 => D#194
  # DEBUG this => __x_170
  # DEBUG D#192 => &__x_170->_M_value_field
  # DEBUG __r => D#192
  # DEBUG D#191 => D#193
  # DEBUG this => D#191
  # DEBUG D#190 => D#191
  # DEBUG this => D#190
  # DEBUG this => NULL
  # DEBUG D.71819 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#192
  # DEBUG this => D#113
  # DEBUG this => D#192
  # DEBUG D#112 => &D#192->first
  # DEBUG this => D#112
  # DEBUG this => D#112
  # DEBUG this => D#112
  _51 = MEM[(char * *)__x_170 + 32B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  _52 = &MEM[(const struct basic_string *)__x_170 + 32B].D.11612._M_local_buf;
  if (_51 != _52)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 28>:

  <bb 29>:
  # __x_173 = PHI <__x_48(28), __x_55(32)>
  # DEBUG __x => __x_173
  _54 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 24B];
  # DEBUG D#40 => __x_173
  # DEBUG __x => D#40
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, int>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >::_M_erase (this_6(D), _54);
  __x_55 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 16B];
  # DEBUG D#41 => __x_173
  # DEBUG __x => D#41
  # DEBUG __y => NULL
  # DEBUG D#197 => this_6(D)
  # DEBUG __p => __x_173
  # DEBUG this => D#197
  # DEBUG D#196 => D#197
  # DEBUG D#195 => D#197
  # DEBUG D#194 => D#195
  # DEBUG __p => __x_173
  # DEBUG this => D#194
  # DEBUG D#193 => D#194
  # DEBUG this => __x_173
  # DEBUG D#192 => &__x_173->_M_value_field
  # DEBUG __r => D#192
  # DEBUG D#191 => D#193
  # DEBUG this => D#191
  # DEBUG D#190 => D#191
  # DEBUG this => D#190
  # DEBUG this => NULL
  # DEBUG D.71819 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#192
  # DEBUG this => D#113
  # DEBUG this => D#192
  # DEBUG D#112 => &D#192->first
  # DEBUG this => D#112
  # DEBUG this => D#112
  # DEBUG this => D#112
  _57 = MEM[(char * *)__x_173 + 32B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  _58 = &MEM[(const struct basic_string *)__x_173 + 32B].D.11612._M_local_buf;
  if (_57 != _58)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#112].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#112
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  # DEBUG D#72 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _57
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _57
  # DEBUG this => D#66
  # DEBUG D.74926 => D#67
  operator delete (_57);

  <bb 31>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_173 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#142 => D#196
  # DEBUG __p => __x_173
  # DEBUG this => D#142
  # DEBUG D#141 => D#142
  # DEBUG this => D#141
  # DEBUG D#140 => 1
  # DEBUG __p => __x_173
  # DEBUG __a => D#139
  # DEBUG __n => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG __p => __x_173
  # DEBUG this => D#135
  # DEBUG D.74939 => D#136
  operator delete (__x_173);
  # DEBUG __x => __x_55
  if (__x_55 == 0B)
    goto <bb 27>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 29>;

  <bb 33>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#112].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#112
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  # DEBUG D#72 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _51
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _51
  # DEBUG this => D#66
  # DEBUG D.74893 => D#67
  operator delete (_51);

  <bb 34>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_170 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#142 => D#196
  # DEBUG __p => __x_170
  # DEBUG this => D#142
  # DEBUG D#141 => D#142
  # DEBUG this => D#141
  # DEBUG D#140 => 1
  # DEBUG __p => __x_170
  # DEBUG __a => D#139
  # DEBUG __n => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG __p => __x_170
  # DEBUG this => D#135
  # DEBUG D.74906 => D#136
  operator delete (__x_170);
  # DEBUG __x => __x_49
  if (__x_49 == 0B)
    goto <bb 24>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 26>;

  <bb 36>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#112].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#112
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  # DEBUG D#72 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _45
  # DEBUG this => D#66
  # DEBUG D.74860 => D#67
  operator delete (_45);

  <bb 37>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_167 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#142 => D#196
  # DEBUG __p => __x_167
  # DEBUG this => D#142
  # DEBUG D#141 => D#142
  # DEBUG this => D#141
  # DEBUG D#140 => 1
  # DEBUG __p => __x_167
  # DEBUG __a => D#139
  # DEBUG __n => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG __p => __x_167
  # DEBUG this => D#135
  # DEBUG D.74873 => D#136
  operator delete (__x_167);
  # DEBUG __x => __x_43
  if (__x_43 == 0B)
    goto <bb 21>;
  else
    goto <bb 38>;

  <bb 38>:
  goto <bb 23>;

  <bb 39>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#112].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#112
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  # DEBUG D#72 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _39
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _39
  # DEBUG this => D#66
  # DEBUG D.74827 => D#67
  operator delete (_39);

  <bb 40>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_164 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#142 => D#196
  # DEBUG __p => __x_164
  # DEBUG this => D#142
  # DEBUG D#141 => D#142
  # DEBUG this => D#141
  # DEBUG D#140 => 1
  # DEBUG __p => __x_164
  # DEBUG __a => D#139
  # DEBUG __n => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG __p => __x_164
  # DEBUG this => D#135
  # DEBUG D.74840 => D#136
  operator delete (__x_164);
  # DEBUG __x => __x_37
  if (__x_37 == 0B)
    goto <bb 18>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 20>;

  <bb 42>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#112].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#112
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  # DEBUG D#72 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _33
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _33
  # DEBUG this => D#66
  # DEBUG D.74794 => D#67
  operator delete (_33);

  <bb 43>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_161 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#142 => D#196
  # DEBUG __p => __x_161
  # DEBUG this => D#142
  # DEBUG D#141 => D#142
  # DEBUG this => D#141
  # DEBUG D#140 => 1
  # DEBUG __p => __x_161
  # DEBUG __a => D#139
  # DEBUG __n => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG __p => __x_161
  # DEBUG this => D#135
  # DEBUG D.74807 => D#136
  operator delete (__x_161);
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 15>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 17>;

  <bb 45>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#112].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#112
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  # DEBUG D#72 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _27
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _27
  # DEBUG this => D#66
  # DEBUG D.74761 => D#67
  operator delete (_27);

  <bb 46>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_158 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#142 => D#196
  # DEBUG __p => __x_158
  # DEBUG this => D#142
  # DEBUG D#141 => D#142
  # DEBUG this => D#141
  # DEBUG D#140 => 1
  # DEBUG __p => __x_158
  # DEBUG __a => D#139
  # DEBUG __n => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG __p => __x_158
  # DEBUG this => D#135
  # DEBUG D.74774 => D#136
  operator delete (__x_158);
  # DEBUG __x => __x_25
  if (__x_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 47>;

  <bb 47>:
  goto <bb 14>;

  <bb 48>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#112].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#112
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  # DEBUG D#72 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _21
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _21
  # DEBUG this => D#66
  # DEBUG D.74728 => D#67
  operator delete (_21);

  <bb 49>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_155 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#142 => D#196
  # DEBUG __p => __x_155
  # DEBUG this => D#142
  # DEBUG D#141 => D#142
  # DEBUG this => D#141
  # DEBUG D#140 => 1
  # DEBUG __p => __x_155
  # DEBUG __a => D#139
  # DEBUG __n => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG __p => __x_155
  # DEBUG this => D#135
  # DEBUG D.74741 => D#136
  operator delete (__x_155);
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 9>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 11>;

  <bb 51>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#112].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#112
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  # DEBUG D#72 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _7
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _7
  # DEBUG this => D#66
  # DEBUG D.74695 => D#67
  operator delete (_7);

  <bb 52>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_152 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#142 => D#196
  # DEBUG __p => __x_152
  # DEBUG this => D#142
  # DEBUG D#141 => D#142
  # DEBUG this => D#141
  # DEBUG D#140 => 1
  # DEBUG __p => __x_152
  # DEBUG __a => D#139
  # DEBUG __n => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG __p => __x_152
  # DEBUG this => D#135
  # DEBUG D.74708 => D#136
  operator delete (__x_152);
  # DEBUG __x => __x_14
  if (__x_14 == 0B)
    goto <bb 6>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 8>;

  <bb 54>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#112].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#112
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  # DEBUG D#72 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _11
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _11
  # DEBUG this => D#66
  # DEBUG D.74662 => D#67
  operator delete (_11);

  <bb 55>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_149 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#142 => D#196
  # DEBUG __p => __x_149
  # DEBUG this => D#142
  # DEBUG D#141 => D#142
  # DEBUG this => D#141
  # DEBUG D#140 => 1
  # DEBUG __p => __x_149
  # DEBUG __a => D#139
  # DEBUG __n => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG __p => __x_149
  # DEBUG this => D#135
  # DEBUG D.74675 => D#136
  operator delete (__x_149);
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 3>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 5>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, double> >*] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E, funcdef_no=2431, decl_uid=42188, cgraph_uid=721, symbol_order=730)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, double> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  char * const _7;
  char * const _11;
  const char * _12;
  const char * _16;
  char * const _21;
  const char * _22;
  char * const _27;
  const char * _28;
  char * const _33;
  const char * _34;
  char * const _39;
  const char * _40;
  char * const _45;
  const char * _46;
  char * const _51;
  const char * _52;
  struct _Rb_tree_node_base * _54;
  char * const _57;
  const char * _58;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_149 = PHI <__x_3(D)(4), __x_10(56)>
  # DEBUG __x => __x_149
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 24B];
  # DEBUG D#42 => __x_149
  # DEBUG __x => D#42
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_10 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 16B];
  # DEBUG D#43 => __x_149
  # DEBUG __x => D#43
  # DEBUG __y => NULL
  # DEBUG D#206 => this_6(D)
  # DEBUG __p => __x_149
  # DEBUG this => D#206
  # DEBUG D#205 => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#204
  # DEBUG __p => __x_149
  # DEBUG this => D#203
  # DEBUG D#202 => D#203
  # DEBUG this => __x_149
  # DEBUG D#201 => &__x_149->_M_value_field
  # DEBUG __r => D#201
  # DEBUG D#200 => D#202
  # DEBUG this => D#200
  # DEBUG D#199 => D#200
  # DEBUG this => D#199
  # DEBUG this => NULL
  # DEBUG D.71968 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#201
  # DEBUG this => D#115
  # DEBUG this => D#201
  # DEBUG D#114 => &D#201->first
  # DEBUG this => D#114
  # DEBUG this => D#114
  # DEBUG this => D#114
  _11 = MEM[(char * *)__x_149 + 32B];
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  _12 = &MEM[(const struct basic_string *)__x_149 + 32B].D.11612._M_local_buf;
  if (_11 != _12)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 7>:

  <bb 8>:
  # __x_152 = PHI <__x_9(7), __x_14(53)>
  # DEBUG __x => __x_152
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 24B];
  # DEBUG D#42 => __x_152
  # DEBUG __x => D#42
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_14 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 16B];
  # DEBUG D#43 => __x_152
  # DEBUG __x => D#43
  # DEBUG __y => NULL
  # DEBUG D#206 => this_6(D)
  # DEBUG __p => __x_152
  # DEBUG this => D#206
  # DEBUG D#205 => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#204
  # DEBUG __p => __x_152
  # DEBUG this => D#203
  # DEBUG D#202 => D#203
  # DEBUG this => __x_152
  # DEBUG D#201 => &__x_152->_M_value_field
  # DEBUG __r => D#201
  # DEBUG D#200 => D#202
  # DEBUG this => D#200
  # DEBUG D#199 => D#200
  # DEBUG this => D#199
  # DEBUG this => NULL
  # DEBUG D.71968 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#201
  # DEBUG this => D#115
  # DEBUG this => D#201
  # DEBUG D#114 => &D#201->first
  # DEBUG this => D#114
  # DEBUG this => D#114
  # DEBUG this => D#114
  _7 = MEM[(char * *)__x_152 + 32B];
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  _16 = &MEM[(const struct basic_string *)__x_152 + 32B].D.11612._M_local_buf;
  if (_7 != _16)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 10>:

  <bb 11>:
  # __x_155 = PHI <__x_13(10), __x_19(50)>
  # DEBUG __x => __x_155
  __x_18 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 24B];
  # DEBUG D#42 => __x_155
  # DEBUG __x => D#42
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_18
  # DEBUG __x => __x_18
  if (__x_18 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 16B];
  # DEBUG D#43 => __x_155
  # DEBUG __x => D#43
  # DEBUG __y => NULL
  # DEBUG D#206 => this_6(D)
  # DEBUG __p => __x_155
  # DEBUG this => D#206
  # DEBUG D#205 => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#204
  # DEBUG __p => __x_155
  # DEBUG this => D#203
  # DEBUG D#202 => D#203
  # DEBUG this => __x_155
  # DEBUG D#201 => &__x_155->_M_value_field
  # DEBUG __r => D#201
  # DEBUG D#200 => D#202
  # DEBUG this => D#200
  # DEBUG D#199 => D#200
  # DEBUG this => D#199
  # DEBUG this => NULL
  # DEBUG D.71968 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#201
  # DEBUG this => D#115
  # DEBUG this => D#201
  # DEBUG D#114 => &D#201->first
  # DEBUG this => D#114
  # DEBUG this => D#114
  # DEBUG this => D#114
  _21 = MEM[(char * *)__x_155 + 32B];
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  _22 = &MEM[(const struct basic_string *)__x_155 + 32B].D.11612._M_local_buf;
  if (_21 != _22)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 13>:

  <bb 14>:
  # __x_158 = PHI <__x_18(13), __x_25(47)>
  # DEBUG __x => __x_158
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 24B];
  # DEBUG D#42 => __x_158
  # DEBUG __x => D#42
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_25 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 16B];
  # DEBUG D#43 => __x_158
  # DEBUG __x => D#43
  # DEBUG __y => NULL
  # DEBUG D#206 => this_6(D)
  # DEBUG __p => __x_158
  # DEBUG this => D#206
  # DEBUG D#205 => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#204
  # DEBUG __p => __x_158
  # DEBUG this => D#203
  # DEBUG D#202 => D#203
  # DEBUG this => __x_158
  # DEBUG D#201 => &__x_158->_M_value_field
  # DEBUG __r => D#201
  # DEBUG D#200 => D#202
  # DEBUG this => D#200
  # DEBUG D#199 => D#200
  # DEBUG this => D#199
  # DEBUG this => NULL
  # DEBUG D.71968 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#201
  # DEBUG this => D#115
  # DEBUG this => D#201
  # DEBUG D#114 => &D#201->first
  # DEBUG this => D#114
  # DEBUG this => D#114
  # DEBUG this => D#114
  _27 = MEM[(char * *)__x_158 + 32B];
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  _28 = &MEM[(const struct basic_string *)__x_158 + 32B].D.11612._M_local_buf;
  if (_27 != _28)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 16>:

  <bb 17>:
  # __x_161 = PHI <__x_24(16), __x_31(44)>
  # DEBUG __x => __x_161
  __x_30 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 24B];
  # DEBUG D#42 => __x_161
  # DEBUG __x => D#42
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_30
  # DEBUG __x => __x_30
  if (__x_30 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 16B];
  # DEBUG D#43 => __x_161
  # DEBUG __x => D#43
  # DEBUG __y => NULL
  # DEBUG D#206 => this_6(D)
  # DEBUG __p => __x_161
  # DEBUG this => D#206
  # DEBUG D#205 => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#204
  # DEBUG __p => __x_161
  # DEBUG this => D#203
  # DEBUG D#202 => D#203
  # DEBUG this => __x_161
  # DEBUG D#201 => &__x_161->_M_value_field
  # DEBUG __r => D#201
  # DEBUG D#200 => D#202
  # DEBUG this => D#200
  # DEBUG D#199 => D#200
  # DEBUG this => D#199
  # DEBUG this => NULL
  # DEBUG D.71968 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#201
  # DEBUG this => D#115
  # DEBUG this => D#201
  # DEBUG D#114 => &D#201->first
  # DEBUG this => D#114
  # DEBUG this => D#114
  # DEBUG this => D#114
  _33 = MEM[(char * *)__x_161 + 32B];
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  _34 = &MEM[(const struct basic_string *)__x_161 + 32B].D.11612._M_local_buf;
  if (_33 != _34)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 19>:

  <bb 20>:
  # __x_164 = PHI <__x_30(19), __x_37(41)>
  # DEBUG __x => __x_164
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 24B];
  # DEBUG D#42 => __x_164
  # DEBUG __x => D#42
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_37 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 16B];
  # DEBUG D#43 => __x_164
  # DEBUG __x => D#43
  # DEBUG __y => NULL
  # DEBUG D#206 => this_6(D)
  # DEBUG __p => __x_164
  # DEBUG this => D#206
  # DEBUG D#205 => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#204
  # DEBUG __p => __x_164
  # DEBUG this => D#203
  # DEBUG D#202 => D#203
  # DEBUG this => __x_164
  # DEBUG D#201 => &__x_164->_M_value_field
  # DEBUG __r => D#201
  # DEBUG D#200 => D#202
  # DEBUG this => D#200
  # DEBUG D#199 => D#200
  # DEBUG this => D#199
  # DEBUG this => NULL
  # DEBUG D.71968 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#201
  # DEBUG this => D#115
  # DEBUG this => D#201
  # DEBUG D#114 => &D#201->first
  # DEBUG this => D#114
  # DEBUG this => D#114
  # DEBUG this => D#114
  _39 = MEM[(char * *)__x_164 + 32B];
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  _40 = &MEM[(const struct basic_string *)__x_164 + 32B].D.11612._M_local_buf;
  if (_39 != _40)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 22>:

  <bb 23>:
  # __x_167 = PHI <__x_36(22), __x_43(38)>
  # DEBUG __x => __x_167
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 24B];
  # DEBUG D#42 => __x_167
  # DEBUG __x => D#42
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_42
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_43 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 16B];
  # DEBUG D#43 => __x_167
  # DEBUG __x => D#43
  # DEBUG __y => NULL
  # DEBUG D#206 => this_6(D)
  # DEBUG __p => __x_167
  # DEBUG this => D#206
  # DEBUG D#205 => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#204
  # DEBUG __p => __x_167
  # DEBUG this => D#203
  # DEBUG D#202 => D#203
  # DEBUG this => __x_167
  # DEBUG D#201 => &__x_167->_M_value_field
  # DEBUG __r => D#201
  # DEBUG D#200 => D#202
  # DEBUG this => D#200
  # DEBUG D#199 => D#200
  # DEBUG this => D#199
  # DEBUG this => NULL
  # DEBUG D.71968 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#201
  # DEBUG this => D#115
  # DEBUG this => D#201
  # DEBUG D#114 => &D#201->first
  # DEBUG this => D#114
  # DEBUG this => D#114
  # DEBUG this => D#114
  _45 = MEM[(char * *)__x_167 + 32B];
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  _46 = &MEM[(const struct basic_string *)__x_167 + 32B].D.11612._M_local_buf;
  if (_45 != _46)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 25>:

  <bb 26>:
  # __x_170 = PHI <__x_42(25), __x_49(35)>
  # DEBUG __x => __x_170
  __x_48 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 24B];
  # DEBUG D#42 => __x_170
  # DEBUG __x => D#42
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_48
  # DEBUG __x => __x_48
  if (__x_48 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_49 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 16B];
  # DEBUG D#43 => __x_170
  # DEBUG __x => D#43
  # DEBUG __y => NULL
  # DEBUG D#206 => this_6(D)
  # DEBUG __p => __x_170
  # DEBUG this => D#206
  # DEBUG D#205 => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#204
  # DEBUG __p => __x_170
  # DEBUG this => D#203
  # DEBUG D#202 => D#203
  # DEBUG this => __x_170
  # DEBUG D#201 => &__x_170->_M_value_field
  # DEBUG __r => D#201
  # DEBUG D#200 => D#202
  # DEBUG this => D#200
  # DEBUG D#199 => D#200
  # DEBUG this => D#199
  # DEBUG this => NULL
  # DEBUG D.71968 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#201
  # DEBUG this => D#115
  # DEBUG this => D#201
  # DEBUG D#114 => &D#201->first
  # DEBUG this => D#114
  # DEBUG this => D#114
  # DEBUG this => D#114
  _51 = MEM[(char * *)__x_170 + 32B];
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  _52 = &MEM[(const struct basic_string *)__x_170 + 32B].D.11612._M_local_buf;
  if (_51 != _52)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 28>:

  <bb 29>:
  # __x_173 = PHI <__x_48(28), __x_55(32)>
  # DEBUG __x => __x_173
  _54 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 24B];
  # DEBUG D#42 => __x_173
  # DEBUG __x => D#42
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_M_erase (this_6(D), _54);
  __x_55 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 16B];
  # DEBUG D#43 => __x_173
  # DEBUG __x => D#43
  # DEBUG __y => NULL
  # DEBUG D#206 => this_6(D)
  # DEBUG __p => __x_173
  # DEBUG this => D#206
  # DEBUG D#205 => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#204
  # DEBUG __p => __x_173
  # DEBUG this => D#203
  # DEBUG D#202 => D#203
  # DEBUG this => __x_173
  # DEBUG D#201 => &__x_173->_M_value_field
  # DEBUG __r => D#201
  # DEBUG D#200 => D#202
  # DEBUG this => D#200
  # DEBUG D#199 => D#200
  # DEBUG this => D#199
  # DEBUG this => NULL
  # DEBUG D.71968 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#201
  # DEBUG this => D#115
  # DEBUG this => D#201
  # DEBUG D#114 => &D#201->first
  # DEBUG this => D#114
  # DEBUG this => D#114
  # DEBUG this => D#114
  _57 = MEM[(char * *)__x_173 + 32B];
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  _58 = &MEM[(const struct basic_string *)__x_173 + 32B].D.11612._M_local_buf;
  if (_57 != _58)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#114].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#114
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  # DEBUG D#72 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _57
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _57
  # DEBUG this => D#66
  # DEBUG D.75231 => D#67
  operator delete (_57);

  <bb 31>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_173 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#205
  # DEBUG __p => __x_173
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_173
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_173
  # DEBUG this => D#143
  # DEBUG D.75244 => D#144
  operator delete (__x_173);
  # DEBUG __x => __x_55
  if (__x_55 == 0B)
    goto <bb 27>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 29>;

  <bb 33>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#114].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#114
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  # DEBUG D#72 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _51
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _51
  # DEBUG this => D#66
  # DEBUG D.75198 => D#67
  operator delete (_51);

  <bb 34>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_170 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#205
  # DEBUG __p => __x_170
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_170
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_170
  # DEBUG this => D#143
  # DEBUG D.75211 => D#144
  operator delete (__x_170);
  # DEBUG __x => __x_49
  if (__x_49 == 0B)
    goto <bb 24>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 26>;

  <bb 36>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#114].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#114
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  # DEBUG D#72 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _45
  # DEBUG this => D#66
  # DEBUG D.75165 => D#67
  operator delete (_45);

  <bb 37>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_167 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#205
  # DEBUG __p => __x_167
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_167
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_167
  # DEBUG this => D#143
  # DEBUG D.75178 => D#144
  operator delete (__x_167);
  # DEBUG __x => __x_43
  if (__x_43 == 0B)
    goto <bb 21>;
  else
    goto <bb 38>;

  <bb 38>:
  goto <bb 23>;

  <bb 39>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#114].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#114
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  # DEBUG D#72 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _39
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _39
  # DEBUG this => D#66
  # DEBUG D.75132 => D#67
  operator delete (_39);

  <bb 40>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_164 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#205
  # DEBUG __p => __x_164
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_164
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_164
  # DEBUG this => D#143
  # DEBUG D.75145 => D#144
  operator delete (__x_164);
  # DEBUG __x => __x_37
  if (__x_37 == 0B)
    goto <bb 18>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 20>;

  <bb 42>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#114].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#114
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  # DEBUG D#72 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _33
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _33
  # DEBUG this => D#66
  # DEBUG D.75099 => D#67
  operator delete (_33);

  <bb 43>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_161 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#205
  # DEBUG __p => __x_161
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_161
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_161
  # DEBUG this => D#143
  # DEBUG D.75112 => D#144
  operator delete (__x_161);
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 15>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 17>;

  <bb 45>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#114].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#114
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  # DEBUG D#72 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _27
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _27
  # DEBUG this => D#66
  # DEBUG D.75066 => D#67
  operator delete (_27);

  <bb 46>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_158 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#205
  # DEBUG __p => __x_158
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_158
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_158
  # DEBUG this => D#143
  # DEBUG D.75079 => D#144
  operator delete (__x_158);
  # DEBUG __x => __x_25
  if (__x_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 47>;

  <bb 47>:
  goto <bb 14>;

  <bb 48>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#114].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#114
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  # DEBUG D#72 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _21
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _21
  # DEBUG this => D#66
  # DEBUG D.75033 => D#67
  operator delete (_21);

  <bb 49>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_155 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#205
  # DEBUG __p => __x_155
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_155
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_155
  # DEBUG this => D#143
  # DEBUG D.75046 => D#144
  operator delete (__x_155);
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 9>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 11>;

  <bb 51>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#114].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#114
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  # DEBUG D#72 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _7
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _7
  # DEBUG this => D#66
  # DEBUG D.75000 => D#67
  operator delete (_7);

  <bb 52>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_152 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#205
  # DEBUG __p => __x_152
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_152
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_152
  # DEBUG this => D#143
  # DEBUG D.75013 => D#144
  operator delete (__x_152);
  # DEBUG __x => __x_14
  if (__x_14 == 0B)
    goto <bb 6>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 8>;

  <bb 54>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#114].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#114
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  # DEBUG D#72 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _11
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _11
  # DEBUG this => D#66
  # DEBUG D.74967 => D#67
  operator delete (_11);

  <bb 55>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_149 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#205
  # DEBUG __p => __x_149
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_149
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_149
  # DEBUG this => D#143
  # DEBUG D.74980 => D#144
  operator delete (__x_149);
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 3>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 5>;

}



;; Function Configuration::~Configuration() (_ZN13ConfigurationD2Ev, funcdef_no=2221, decl_uid=64724, cgraph_uid=509, symbol_order=518)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Configuration::~Configuration() (struct Configuration * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rep_type * _4;
  struct _Rep_type * _5;
  struct _Rep_type * _6;
  char * const _8;
  const char * _9;
  char * const _13;
  struct _Rb_tree_node_base * _37;
  struct _Rb_tree_node_base * _41;
  struct _Rb_tree_node_base * _44;
  const char * _47;
  char * const _48;
  const char * _49;
  char * const _50;
  const char * _51;
  char * const _52;
  const char * _53;

  <bb 2>:
  # DEBUG D#211 => &this_1(D)->_float_map
  # DEBUG this => D#211
  _4 = &MEM[(struct map *)this_1(D) + 136B]._M_t;
  # DEBUG this => _4
  __x_12 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 152B];
  # DEBUG D#32 => _4
  # DEBUG this => D#32
  # DEBUG this => _4
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#207 => &MEM[(struct _Rb_tree *)_4]._M_impl
  # DEBUG this => D#207
  # DEBUG this => D#207
  # DEBUG this => D#207
  MEM[(struct  &)this_1(D) + 136] ={v} {CLOBBER};
  # DEBUG D#210 => &this_1(D)->_int_map
  # DEBUG this => D#210
  _5 = &MEM[(struct map *)this_1(D) + 88B]._M_t;
  # DEBUG this => _5
  __x_11 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 104B];
  # DEBUG D#31 => _5
  # DEBUG this => D#31
  # DEBUG this => _5
  # DEBUG __x => __x_11
  # DEBUG __x => __x_11
  if (__x_11 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 4>:

  <bb 5>:
  # __x_91 = PHI <__x_12(4), __x_45(8)>
  # DEBUG __x => __x_91
  _44 = MEM[(struct _Rb_tree_node_base * *)__x_91 + 24B];
  # DEBUG D#42 => __x_91
  # DEBUG __x => D#42
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_M_erase (_4, _44);
  __x_45 = MEM[(struct _Rb_tree_node_base * *)__x_91 + 16B];
  # DEBUG D#43 => __x_91
  # DEBUG __x => D#43
  # DEBUG __y => NULL
  # DEBUG D#206 => _4
  # DEBUG __p => __x_91
  # DEBUG this => D#206
  # DEBUG D#205 => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#204
  # DEBUG __p => __x_91
  # DEBUG this => D#203
  # DEBUG D#202 => D#203
  # DEBUG this => __x_91
  # DEBUG D#201 => &__x_91->_M_value_field
  # DEBUG __r => D#201
  # DEBUG D#200 => D#202
  # DEBUG this => D#200
  # DEBUG D#199 => D#200
  # DEBUG this => D#199
  # DEBUG this => NULL
  # DEBUG D.71968 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#201
  # DEBUG this => D#115
  # DEBUG this => D#201
  # DEBUG D#114 => &D#201->first
  # DEBUG this => D#114
  # DEBUG this => D#114
  # DEBUG this => D#114
  _13 = MEM[(char * *)__x_91 + 32B];
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  _47 = &MEM[(const struct basic_string *)__x_91 + 32B].D.11612._M_local_buf;
  if (_13 != _47)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#114].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#114
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#114
  # DEBUG this => D#2
  # DEBUG this => D#114
  # DEBUG D#72 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _13
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _13
  # DEBUG this => D#66
  # DEBUG D.75290 => D#67
  operator delete (_13);

  <bb 7>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#114]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_91 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#205
  # DEBUG __p => __x_91
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_91
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_91
  # DEBUG this => D#143
  # DEBUG D.75303 => D#144
  operator delete (__x_91);
  # DEBUG __x => __x_45
  if (__x_45 == 0B)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 5>;

  <bb 9>:
  # DEBUG D#198 => &MEM[(struct _Rb_tree *)_5]._M_impl
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  MEM[(struct  &)this_1(D) + 88] ={v} {CLOBBER};
  # DEBUG D#209 => &this_1(D)->_str_map
  # DEBUG this => D#209
  _6 = &MEM[(struct map *)this_1(D) + 40B]._M_t;
  # DEBUG this => _6
  __x_10 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 56B];
  # DEBUG D#30 => _6
  # DEBUG this => D#30
  # DEBUG this => _6
  # DEBUG __x => __x_10
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 10>:

  <bb 11>:
  # __x_89 = PHI <__x_11(10), __x_42(14)>
  # DEBUG __x => __x_89
  _41 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#40 => __x_89
  # DEBUG __x => D#40
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, int>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >::_M_erase (_5, _41);
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#41 => __x_89
  # DEBUG __x => D#41
  # DEBUG __y => NULL
  # DEBUG D#197 => _5
  # DEBUG __p => __x_89
  # DEBUG this => D#197
  # DEBUG D#196 => D#197
  # DEBUG D#195 => D#197
  # DEBUG D#194 => D#195
  # DEBUG __p => __x_89
  # DEBUG this => D#194
  # DEBUG D#193 => D#194
  # DEBUG this => __x_89
  # DEBUG D#192 => &__x_89->_M_value_field
  # DEBUG __r => D#192
  # DEBUG D#191 => D#193
  # DEBUG this => D#191
  # DEBUG D#190 => D#191
  # DEBUG this => D#190
  # DEBUG this => NULL
  # DEBUG D.71819 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#192
  # DEBUG this => D#113
  # DEBUG this => D#192
  # DEBUG D#112 => &D#192->first
  # DEBUG this => D#112
  # DEBUG this => D#112
  # DEBUG this => D#112
  _48 = MEM[(char * *)__x_89 + 32B];
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  _49 = &MEM[(const struct basic_string *)__x_89 + 32B].D.11612._M_local_buf;
  if (_48 != _49)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#112].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#112
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#112
  # DEBUG this => D#2
  # DEBUG this => D#112
  # DEBUG D#72 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _48
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _48
  # DEBUG this => D#66
  # DEBUG D.75320 => D#67
  operator delete (_48);

  <bb 13>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#112]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_89 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#142 => D#196
  # DEBUG __p => __x_89
  # DEBUG this => D#142
  # DEBUG D#141 => D#142
  # DEBUG this => D#141
  # DEBUG D#140 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#139
  # DEBUG __n => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG __p => __x_89
  # DEBUG this => D#135
  # DEBUG D.75333 => D#136
  operator delete (__x_89);
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 9>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 11>;

  <bb 15>:
  # DEBUG D#189 => &MEM[(struct _Rb_tree *)_6]._M_impl
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)this_1(D) + 40] ={v} {CLOBBER};
  # DEBUG D#208 => &this_1(D)->_config_string
  # DEBUG this => D#208
  # DEBUG this => D#208
  # DEBUG this => D#208
  _8 = MEM[(char * *)this_1(D) + 8B];
  # DEBUG D#2 => D#208
  # DEBUG this => D#2
  # DEBUG this => D#208
  _9 = &MEM[(const struct basic_string *)this_1(D) + 8B].D.11612._M_local_buf;
  if (_8 != _9)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 16>:

  <bb 17>:
  # __x_90 = PHI <__x_10(16), __x_38(22)>
  # DEBUG __x => __x_90
  _37 = MEM[(struct _Rb_tree_node_base * *)__x_90 + 24B];
  # DEBUG D#38 => __x_90
  # DEBUG __x => D#38
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_M_erase (_6, _37);
  __x_38 = MEM[(struct _Rb_tree_node_base * *)__x_90 + 16B];
  # DEBUG D#39 => __x_90
  # DEBUG __x => D#39
  # DEBUG __y => NULL
  # DEBUG D#188 => _6
  # DEBUG __p => __x_90
  # DEBUG this => D#188
  # DEBUG D#187 => D#188
  # DEBUG D#186 => D#188
  # DEBUG D#185 => D#186
  # DEBUG __p => __x_90
  # DEBUG this => D#185
  # DEBUG D#184 => D#185
  # DEBUG this => __x_90
  # DEBUG D#318 => &__x_90->_M_value_field
  # DEBUG __r => D#318
  # DEBUG D#183 => D#184
  # DEBUG this => D#183
  # DEBUG D#182 => D#183
  # DEBUG this => D#182
  # DEBUG this => NULL
  # DEBUG D.71717 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#318
  # DEBUG this => D#111
  # DEBUG this => D#318
  # DEBUG D#110 => &D#318->second
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#110
  _50 = MEM[(char * *)__x_90 + 64B];
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  _51 = &MEM[(const struct basic_string *)__x_90 + 64B].D.11612._M_local_buf;
  if (_50 != _51)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#75 => D#110->D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#110
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#110
  # DEBUG this => D#2
  # DEBUG this => D#110
  # DEBUG D#72 => &D#110->_M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _50
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _50
  # DEBUG this => D#66
  # DEBUG D.75344 => D#67
  operator delete (_50);

  <bb 19>:
  # DEBUG D#76 => &D#110->_M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_90 + 64] ={v} {CLOBBER};
  # DEBUG D#109 => &D#318->first
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  _52 = MEM[(char * *)__x_90 + 32B];
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  _53 = &MEM[(const struct basic_string *)__x_90 + 32B].D.11612._M_local_buf;
  if (_52 != _53)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#109].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#109
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#109
  # DEBUG this => D#2
  # DEBUG this => D#109
  # DEBUG D#72 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _52
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _52
  # DEBUG this => D#66
  # DEBUG D.75359 => D#67
  operator delete (_52);

  <bb 21>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#109]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)__x_90 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#134 => D#187
  # DEBUG __p => __x_90
  # DEBUG this => D#134
  # DEBUG D#133 => D#134
  # DEBUG this => D#133
  # DEBUG D#132 => 1
  # DEBUG __p => __x_90
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => __x_90
  # DEBUG this => D#127
  # DEBUG D.75267 => D#128
  operator delete (__x_90);
  # DEBUG __x => __x_38
  # DEBUG __x => __x_38
  if (__x_38 == 0B)
    goto <bb 15>;
  else
    goto <bb 22>;

  <bb 22>:
  goto <bb 17>;

  <bb 23>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#208].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#208
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#208
  # DEBUG this => D#2
  # DEBUG this => D#208
  # DEBUG D#72 => &MEM[(struct basic_string *)D#208]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _8
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _8
  # DEBUG this => D#66
  # DEBUG D.72121 => D#67
  operator delete (_8);

  <bb 24>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#208]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Network*; _Alloc = std::allocator<Network*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Network**, std::vector<Network*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Network**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Network*] (_ZNSt6vectorIP7NetworkSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=2496, decl_uid=51723, cgraph_uid=786, symbol_order=795)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Network*; _Alloc = std::allocator<Network*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Network**, std::vector<Network*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Network**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Network*] (struct vector * const this, struct iterator __position, size_type __n, struct Network * const & __x)
{
  const long unsigned int D.75410;
  const size_type __len;
  size_type D.75409;
  size_type __n;
  struct Network * * D.75400;
  const ptrdiff_t _Num;
  struct Network * * D.75391;
  struct Network * * const __position;
  struct Network * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct Network * * __first;
  long unsigned int __n;
  struct Network * * __first;
  const ptrdiff_t _Num;
  struct Network * * __first;
  struct Network * * __new_finish;
  const size_type __elems_after;
  struct Network * __x_copy;
  struct Network * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Network * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct Network * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct Network * * _41;
  struct Network * * _43;
  long int _47;
  struct Network * * _48;
  long int __first.52_49;
  struct Network * * _53;
  struct Network * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct Network * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct Network * * _108;
  struct Network * * _112;
  struct Network * * iftmp.57_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct Network * * prephitmp_146;
  struct Network * * pretmp_147;
  struct Network * * prephitmp_148;
  struct Network * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct Network * * pretmp_166;
  struct Network * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct Network * * pretmp_173;
  struct Network * * prephitmp_174;

  <bb 2>:
  # DEBUG D#327 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#327
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.51800._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.51800._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#37 => &this_4(D)->D.51800._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#37
  # DEBUG __lhs => &D.66405
  # DEBUG __rhs => &__position
  # DEBUG this => &D.66405
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#290 => &this_4(D)->D.51800
  # DEBUG this => D#290
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#282
  # DEBUG D#281 => D#282
  # DEBUG D#280 => D#281
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.73445 => D#280
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.52_49 = (long int) _41;
  _47 = _8 - __first.52_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.51800._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.51800._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#327
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#327
  # DEBUG __it => D#327
  # DEBUG __first => D#327
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#327
  # DEBUG __it => D#327
  # DEBUG __first => D#327
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#327
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.52_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#126 => &__x_copy
  # DEBUG __first => D#327
  # DEBUG __last => _48
  # DEBUG D#125 => D#126
  # DEBUG __value => D#125
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#327
  # DEBUG __it => D#327
  # DEBUG D#108 => D#125
  # DEBUG __first => D#327
  # DEBUG __last => _48
  # DEBUG __value => D#108
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#327
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#291 => &this_4(D)->D.51800
  # DEBUG this => D#291
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#236 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#235 => D#236
  # DEBUG __x => D#235
  # DEBUG D.73530 => D#237
  # DEBUG D#234 => D#235
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#233 => D#234
  # DEBUG __x => D#233
  # DEBUG __assignable => 1
  # DEBUG D#232 => D#233
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#231 => D#232
  # DEBUG __x => D#231
  # DEBUG D#230 => D#231
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#229 => D#230
  # DEBUG __value => D#229
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#228 => D#229
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#228
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.51800._M_impl._M_finish = __first_125;
  # DEBUG D#292 => &this_4(D)->D.51800
  # DEBUG this => D#292
  # DEBUG this => &__position
  # DEBUG __first => D#327
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#282
  # DEBUG D#281 => D#282
  # DEBUG D#280 => D#281
  # DEBUG __first => D#327
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.73492 => D#280
  # DEBUG __first => D#327
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#327
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#327
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#327
  # DEBUG __it => D#327
  # DEBUG __first => D#327
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#327
  # DEBUG __it => D#327
  # DEBUG __first => D#327
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#327
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.51800._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.51800._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#126 => &__x_copy
  # DEBUG __first => D#327
  # DEBUG __last => __first_7
  # DEBUG D#125 => D#126
  # DEBUG __value => D#125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#327
  # DEBUG __it => D#327
  # DEBUG D#108 => D#125
  # DEBUG __first => D#327
  # DEBUG __last => __first_7
  # DEBUG __value => D#108
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#327
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#173 => this_4(D)
  # DEBUG this => D#173
  # DEBUG D#172 => D#173
  # DEBUG D#171 => &D#172->D.51800
  # DEBUG this => D#171
  # DEBUG __a => D#170
  # DEBUG D#169 => D#170
  # DEBUG D#168 => D#169
  # DEBUG this => D#168
  _17 = MEM[(struct Network * * *)this_4(D)];
  # DEBUG D#29 => this_4(D)
  # DEBUG D#29 => this_4(D)
  # DEBUG this => D#29
  # DEBUG this => D#29
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#29 => this_4(D)
  # DEBUG D#29 => this_4(D)
  # DEBUG this => D#29
  # DEBUG this => D#29
  # DEBUG D#29 => this_4(D)
  # DEBUG D#29 => this_4(D)
  # DEBUG this => D#29
  # DEBUG this => D#29
  # DEBUG __a => &D.75410
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#29 => this_4(D)
  # DEBUG D#29 => this_4(D)
  # DEBUG this => D#29
  # DEBUG this => D#29
  # DEBUG D#173 => this_4(D)
  # DEBUG this => D#173
  # DEBUG D#172 => D#173
  # DEBUG D#171 => &D#172->D.51800
  # DEBUG this => D#171
  # DEBUG __a => D#170
  # DEBUG D#169 => D#170
  # DEBUG D#168 => D#169
  # DEBUG this => D#168
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#65 => &this_4(D)->D.51800._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#65
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.66438
  # DEBUG this => &__position
  # DEBUG this => &D.66438
  # DEBUG D#303 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#303
  # DEBUG D#302 => &this_4(D)->D.51800
  # DEBUG D#181 => D#302
  # DEBUG __n => NULL
  # DEBUG this => D#181
  # DEBUG D#180 => D#181
  # DEBUG D#179 => &D#180->_M_impl
  # DEBUG D#178 => D#179
  # DEBUG __n => NULL
  # DEBUG __a => D#178
  # DEBUG D#177 => D#178
  # DEBUG D#175 => D#177
  # DEBUG D#176 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#175
  # DEBUG D.75398 => D#176
  # DEBUG D#174 => D#175
  # DEBUG D#168 => D#174
  # DEBUG this => D#168
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.51800._M_impl._M_start;
  pretmp_147 = this_4(D)->D.51800._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.57_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#286 => &this_4(D)->D.51800
  # DEBUG this => D#286
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.57_113 + _19;
  _56 = MEM[(struct Network * const &)__x_21(D)];
  # DEBUG D#236 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#235 => D#236
  # DEBUG __x => D#235
  # DEBUG D.73647 => D#237
  # DEBUG D#234 => D#235
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#233 => D#234
  # DEBUG __x => D#233
  # DEBUG __assignable => 1
  # DEBUG D#232 => D#233
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#231 => D#232
  # DEBUG __x => D#231
  # DEBUG D#230 => D#231
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#229 => D#230
  # DEBUG __value => D#229
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#228 => D#229
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#228
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#287 => &this_4(D)->D.51800
  # DEBUG this => D#287
  # DEBUG this => &__position
  # DEBUG D#326 => this_4(D)->D.51800._M_impl._M_start
  # DEBUG __first => D#326
  # DEBUG __last => D#327
  # DEBUG __result => NULL
  # DEBUG __alloc => D#284
  # DEBUG D#283 => D#284
  # DEBUG D#280 => D#283
  # DEBUG __first => D#326
  # DEBUG __last => D#327
  # DEBUG __result => NULL
  # DEBUG D.73609 => D#280
  # DEBUG __first => D#326
  # DEBUG __last => D#327
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#326
  # DEBUG __last => D#327
  # DEBUG __result => NULL
  # DEBUG __first => D#326
  # DEBUG __last => D#327
  # DEBUG __result => NULL
  # DEBUG __it => D#327
  # DEBUG __it => D#327
  # DEBUG __it => D#326
  # DEBUG __it => D#326
  # DEBUG __first => D#326
  # DEBUG __last => D#327
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#327
  # DEBUG __it => D#327
  # DEBUG __it => D#326
  # DEBUG __it => D#326
  # DEBUG __first => D#326
  # DEBUG __last => D#327
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#326
  # DEBUG __last => D#327
  # DEBUG __result => NULL
  # DEBUG D#325 => (long int) D#326
  # DEBUG D#324 => _158 - D#325
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.57_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#323 => (long unsigned int) D#324
  # DEBUG __new_finish => iftmp.57_113 + D#323
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.57_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#288 => &this_4(D)->D.51800
  # DEBUG this => D#288
  # DEBUG D#322 => this_4(D)->D.51800._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#327
  # DEBUG __last => D#322
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#284
  # DEBUG D#283 => D#284
  # DEBUG D#280 => D#283
  # DEBUG __first => D#327
  # DEBUG __last => D#322
  # DEBUG __result => __new_finish_26
  # DEBUG D.73570 => D#280
  # DEBUG __first => D#327
  # DEBUG __last => D#322
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#327
  # DEBUG __last => D#322
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#327
  # DEBUG __last => D#322
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#322
  # DEBUG __it => D#322
  # DEBUG __it => D#327
  # DEBUG __it => D#327
  # DEBUG __first => D#327
  # DEBUG __last => D#322
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#322
  # DEBUG __it => D#322
  # DEBUG __it => D#327
  # DEBUG __it => D#327
  # DEBUG __first => D#327
  # DEBUG __last => D#322
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#327
  # DEBUG __last => D#322
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#289 => &this_4(D)->D.51800
  # DEBUG this => D#289
  # DEBUG D#301 => this_4(D)->D.51800._M_impl._M_finish
  # DEBUG D#300 => this_4(D)->D.51800._M_impl._M_start
  # DEBUG __first => D#300
  # DEBUG __last => D#301
  # DEBUG D.73563 => NULL
  # DEBUG D#50 => D#300
  # DEBUG D#51 => D#301
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.70290 => D#46
  # DEBUG D.70289 => D#47
  # DEBUG D#299 => this_4(D)->D.51800._M_impl._M_end_of_storage
  # DEBUG D#298 => (long int) D#299
  # DEBUG D#297 => (long int) D#326
  # DEBUG D#296 => D#298 - D#297
  # DEBUG D#295 => D#296 /[ex] 8
  # DEBUG D#294 => (long unsigned int) D#295
  # DEBUG D#293 => &this_4(D)->D.51800
  # DEBUG this => D#293
  # DEBUG __p => D#326
  # DEBUG __n => D#294
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#96 => &D#293->_M_impl
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#294
  # DEBUG __p => D#326
  # DEBUG __a => D#94
  # DEBUG __n => D#95
  # DEBUG D#93 => D#95
  # DEBUG D#92 => D#94
  # DEBUG D#90 => D#92
  # DEBUG D#91 => D#93
  # DEBUG __p => D#326
  # DEBUG this => D#90
  # DEBUG D.73559 => D#91
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.51800._M_impl._M_start = iftmp.57_113;
  this_4(D)->D.51800._M_impl._M_finish = _70;
  this_4(D)->D.51800._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#65 => &this_4(D)->D.51800._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#65
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.66438
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.66438
  _143 = _144 - _116;
  # DEBUG D#303 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#303
  # DEBUG D#302 => &this_4(D)->D.51800
  # DEBUG D#181 => D#302
  # DEBUG __n => NULL
  # DEBUG this => D#181
  # DEBUG D#180 => D#181
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#65 => &this_4(D)->D.51800._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#65
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.66438
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.66438
  _150 = _151 - _116;
  # DEBUG D#303 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#303
  # DEBUG D#302 => &this_4(D)->D.51800
  # DEBUG D#181 => D#302
  # DEBUG __n => NULL
  # DEBUG this => D#181
  # DEBUG D#180 => D#181
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, Stats*>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P5StatsESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_, funcdef_no=2703, decl_uid=62122, cgraph_uid=993, symbol_order=1002)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, Stats*>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_tree * const this, const struct key_type & __k)
{
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.75533;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.75518;
  struct _Rb_tree_node_base * const __j$_M_node;
  bool __comp;
  struct _Rb_tree_node_base * const D.67560;
  struct _Rb_tree_node_base * const D.67561;
  struct pair D.68431;
  const size_type pretmp_1;
  char * const prephitmp_13;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node_base * _24;
  const size_type _34;
  char * const _37;
  long unsigned int _40;
  char * const pretmp_44;
  long unsigned int _52;
  const size_type prephitmp_61;
  char * const pretmp_64;
  char * const prephitmp_65;
  const size_type pretmp_67;
  const size_type pretmp_76;
  const size_type prephitmp_77;
  const size_type prephitmp_78;
  const size_type pretmp_79;
  char * const pretmp_80;
  char * const _83;
  const size_type _84;

  <bb 2>:
  _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
  # DEBUG D#44 => this_9(D)
  # DEBUG this => D#44
  # DEBUG __x => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#384 => &this_9(D)->_M_impl._M_header
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => D#384
  # DEBUG __x => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = &this_9(D)->_M_impl._M_header;
  goto <bb 15>;

  <bb 4>:
  pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_44 = MEM[(char * *)__k_12(D)];
  goto <bb 7>;

  <bb 5>:
  # _6 = PHI <_23(27), _22(28)>
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __comp => __comp_56
  # DEBUG __y => _10
  # DEBUG __x => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # _10 = PHI <_21(4), _6(6)>
  # DEBUG __comp => 1
  # DEBUG __x => _10
  # DEBUG __y => _10
  # DEBUG __x => _10
  # DEBUG __x => _10
  # DEBUG this => _10
  # DEBUG D#212 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
  # DEBUG __r => D#212
  # DEBUG __x => D#212
  # DEBUG this => D#87
  # DEBUG D#364 => &MEM[(const struct pair &)_10 + 32].first
  # DEBUG D#219 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#86 => D#219
  # DEBUG __x => __k_12(D)
  # DEBUG __y => D#364
  # DEBUG this => D#86
  # DEBUG __lhs => __k_12(D)
  # DEBUG __rhs => D#364
  # DEBUG this => __k_12(D)
  # DEBUG __str => D#364
  # DEBUG D#383 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG __size => D#383
  _34 = MEM[(long unsigned int *)_10 + 40B];
  # DEBUG D#1 => D#364
  # DEBUG this => D#1
  # DEBUG __osize => _34
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __len => D#362
  # DEBUG this => D#364
  _37 = MEM[(char * *)_10 + 32B];
  # DEBUG D#2 => D#364
  # DEBUG this => D#2
  # DEBUG D#382 => MEM[(char * *)__k_12(D)]
  # DEBUG D#2 => __k_12(D)
  # DEBUG this => D#2
  # DEBUG __s1 => D#382
  # DEBUG __s2 => _37
  # DEBUG __n => D#362
  __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
  # DEBUG __r => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => D#383
  # DEBUG __n2 => _34
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_type) _40;
  # DEBUG __d => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_42 = (int) _40;

  <bb 11>:
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __r => __r_43
  # DEBUG D#370 => {CLOBBER}
  # DEBUG __size => D#370
  # DEBUG D#371 => {CLOBBER}
  # DEBUG __osize => D#371
  # DEBUG __comp => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __comp => 1
  _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
  # DEBUG D#84 => _10
  # DEBUG __x => D#84
  goto <bb 5>;

  <bb 13>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG __comp => 0
  _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
  # DEBUG D#85 => _10
  # DEBUG __x => D#85
  goto <bb 5>;

  <bb 14>:
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # _83 = PHI <_37(5)>
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>

  <bb 26>:
  # DEBUG this => &__j
  # DEBUG __x => _85
  # DEBUG __j$_M_node => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG this => &__j
  # DEBUG __x => _57
  # DEBUG __j$_M_node => _57
  _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
  # DEBUG D#167 => this_9(D)
  # DEBUG this => D#167
  # DEBUG this => NULL
  # DEBUG __x => _24
  # DEBUG this => &__j
  # DEBUG __x => &D.67559
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &D.67562
  # DEBUG __a => &D.67560
  # DEBUG __b => &D.67561
  MEM[(struct pair *)&D.68431] = 0B;
  MEM[(struct pair *)&D.68431 + 8B] = _57;
  goto <bb 25>;

  <bb 17>:
  # DEBUG this => &__j
  __j$_M_node_25 = std::_Rb_tree_decrement (_57);
  # DEBUG __j$_M_node => __j$_M_node_25
  pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_80 = MEM[(char * *)__k_12(D)];
  pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
  pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  <bb 18>:
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_node => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG this => __j$_M_node_20
  # DEBUG D#216 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
  # DEBUG __r => D#216
  # DEBUG __x => D#216
  # DEBUG this => D#87
  # DEBUG D#365 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
  # DEBUG D#218 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#86 => D#218
  # DEBUG __x => D#365
  # DEBUG __y => __k_12(D)
  # DEBUG this => D#86
  # DEBUG __lhs => D#365
  # DEBUG __rhs => __k_12(D)
  # DEBUG this => D#365
  # DEBUG __str => __k_12(D)
  # DEBUG D#381 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
  # DEBUG D#1 => D#365
  # DEBUG this => D#1
  # DEBUG __size => D#381
  # DEBUG D#380 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG __osize => D#380
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#363
  # DEBUG this => __k_12(D)
  # DEBUG D#379 => MEM[(char * *)__k_12(D)]
  # DEBUG D#2 => __k_12(D)
  # DEBUG this => D#2
  # DEBUG D#378 => MEM[(char * *)__j$_M_node_20 + 32B]
  # DEBUG D#2 => D#365
  # DEBUG this => D#2
  # DEBUG __s1 => D#378
  # DEBUG __s2 => D#379
  # DEBUG __n => D#363
  __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __r => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG __n1 => D#381
  # DEBUG __n2 => D#380
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_type) _52;
  # DEBUG __d => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;

  <bb 20>:
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 21>:
  __r_54 = (int) _52;

  <bb 22>:
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __r => __r_55
  # DEBUG D#376 => {CLOBBER}
  # DEBUG __size => D#376
  # DEBUG D#377 => {CLOBBER}
  # DEBUG __osize => D#377
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:

  <bb 31>:
  # DEBUG __r => NULL
  # DEBUG this => &D.67565
  # DEBUG __a => &D.67563
  # DEBUG __b => &D.67564
  MEM[(struct pair *)&D.68431] = 0B;
  MEM[(struct pair *)&D.68431 + 8B] = _5;
  goto <bb 25>;

  <bb 24>:

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG this => &D.67567
  # DEBUG __a => &__j._M_node
  # DEBUG __b => &D.67566
  MEM[(struct pair *)&D.68431] = __j$_M_node_20;
  MEM[(struct pair *)&D.68431 + 8B] = 0B;

  <bb 25>:

  <bb 29>:
  # DEBUG D#217 => {CLOBBER}
  # DEBUG __j$_M_node => D#217
  return D.68431;

}



;; Function Stats* GetStats(const string&) (_Z8GetStatsRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2207, decl_uid=36992, cgraph_uid=497, symbol_order=499)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Stats* GetStats(const string&) (const struct string & name)
{
  struct _Rb_tree_node_base * SR.602;
  struct _Rb_tree_node_base * SR.601;
  struct _Rb_tree_node_base * SR.600;
  const struct _Rb_tree_node_base * __pos;
  char_type D.75909;
  char __c;
  char_type D.75906;
  char __c;
  char_type D.75903;
  struct basic_ostream & D.75897;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.75831;
  bool __insert_left;
  struct iterator D.75816;
  size_type __dnew;
  struct iterator D.75757;
  struct pair __res;
  struct _Rb_tree_node_base * __res$first;
  struct _Rb_tree_node_base * __res$second;
  struct const_iterator __position;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.75747;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.75732;
  struct iterator D.75717;
  struct _Rb_tree_node * __y;
  struct value_type D.75700;
  struct iterator D.75699;
  struct iterator D.75698;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.476;
  struct _Rb_tree_node_base * SR.479;
  struct Stats * & D.75694;
  struct TrafficManager * trafficManager.1_3;
  const size_type _6;
  struct Stats * _9;
  long int _10;
  char * const _11;
  struct basic_ostream & _12;
  const struct __ctype_type * _16;
  struct _Rep_type * _17;
  char * const prephitmp_19;
  char * _25;
  char * const _27;
  char * const _30;
  const size_type _40;
  char * const _45;
  long unsigned int _47;
  char * const pretmp_51;
  const size_type _53;
  char * const _56;
  long unsigned int _59;
  bool _63;
  char * _72;
  long unsigned int __dnew.15_73;
  const char_type _75;
  char * _78;
  struct _Rb_tree_node * _83;
  int _86;
  long unsigned int _87;
  long unsigned int _88;
  const size_type _89;
  const size_type _90;
  const size_type pretmp_91;
  char * const _93;
  char * const _94;
  long unsigned int _96;
  struct pair * _101;
  char * _103;
  char * const _104;
  const size_type _105;
  char * _106;
  struct Stats * _107;
  void * _108;
  char * _114;
  long unsigned int __dnew.15_115;
  const char_type _117;
  char * _120;
  int (*__vtbl_ptr_type) () * _121;
  long int _122;
  sizetype _123;
  struct basic_ios * _124;
  struct basic_ostream & _127;
  char _129;
  char_type _132;
  int (*__vtbl_ptr_type) () * _137;
  int (*__vtbl_ptr_type) () _138;
  void * PROF_142;
  char_type _144;
  char * const _154;
  size_type prephitmp_164;
  char * const pretmp_165;
  char * const prephitmp_169;
  char * const pretmp_212;
  const size_type prephitmp_213;
  int pretmp_215;
  int pretmp_216;
  int prephitmp_217;
  const size_type prephitmp_218;
  char * const prephitmp_219;
  size_type pretmp_224;
  size_type prephitmp_225;
  char * const pretmp_226;
  char * const prephitmp_227;
  size_type pretmp_228;
  const size_type pretmp_235;
  char * const _250;
  bool _251;
  bool _252;
  bool _255;
  bool _257;
  bool _259;
  bool _262;
  bool _263;
  bool _267;

  <bb 2>:
  trafficManager.1_3 = trafficManager;
  # DEBUG this => trafficManager.1_3
  # DEBUG name => name_4(D)
  # DEBUG D#431 => &trafficManager.1_3->_stats
  # DEBUG this => D#431
  # DEBUG __k => name_4(D)
  # DEBUG this => D#431
  # DEBUG __x => name_4(D)
  # DEBUG D#462 => &MEM[(struct map *)trafficManager.1_3 + 1792B]._M_t
  # DEBUG this => D#462
  # DEBUG __k => name_4(D)
  # DEBUG this => D#462
  __pos_5 = &MEM[(struct _Rb_tree *)trafficManager.1_3 + 1792B]._M_impl._M_header;
  __pos_31 = MEM[(struct _Rb_tree_node_base * *)trafficManager.1_3 + 1808B];
  # DEBUG D#44 => D#462
  # DEBUG this => D#44
  # DEBUG D#215 => D#462
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => name_4(D)
  # DEBUG __y => __pos_5
  # DEBUG __x => __pos_31
  if (__pos_31 == 0B)
    goto <bb 59>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_91 = MEM[(long unsigned int *)name_4(D) + 8B];
  pretmp_51 = MEM[(char * *)name_4(D)];
  goto <bb 6>;

  <bb 4>:
  # __pos_39 = PHI <__pos_35(68), __pos_36(67)>
  # __pos_38 = PHI <__pos_8(68), __pos_71(67)>
  # DEBUG __y => __pos_38
  # DEBUG __x => __pos_39
  if (__pos_39 == 0B)
    goto <bb 13>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __pos_8 = PHI <__pos_31(3), __pos_39(5)>
  # __pos_71 = PHI <__pos_5(3), __pos_38(5)>
  # DEBUG __y => __pos_71
  # DEBUG __x => __pos_8
  # DEBUG __x => __pos_8
  # DEBUG __x => __pos_8
  # DEBUG this => __pos_8
  # DEBUG D#212 => &MEM[(const struct _Rb_tree_node *)__pos_8]._M_value_field
  # DEBUG __r => D#212
  # DEBUG __x => D#212
  # DEBUG this => D#87
  # DEBUG D#432 => &MEM[(const struct pair &)__pos_8 + 32].first
  # DEBUG D#213 => &D#214->_M_impl._M_key_compare
  # DEBUG D#86 => D#213
  # DEBUG __x => D#432
  # DEBUG __y => name_4(D)
  # DEBUG this => D#86
  # DEBUG __lhs => D#432
  # DEBUG __rhs => name_4(D)
  # DEBUG this => D#432
  # DEBUG __str => name_4(D)
  _40 = MEM[(long unsigned int *)__pos_8 + 40B];
  # DEBUG D#1 => D#432
  # DEBUG this => D#1
  # DEBUG __size => _40
  # DEBUG D#460 => MEM[(long unsigned int *)name_4(D) + 8B]
  # DEBUG D#1 => name_4(D)
  # DEBUG this => D#1
  # DEBUG __osize => D#460
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_269 = MIN_EXPR <_40, pretmp_91>;
  # DEBUG __len => D#428
  # DEBUG this => name_4(D)
  # DEBUG D#459 => MEM[(char * *)name_4(D)]
  # DEBUG D#2 => name_4(D)
  # DEBUG this => D#2
  _45 = MEM[(char * *)__pos_8 + 32B];
  # DEBUG D#2 => D#432
  # DEBUG this => D#2
  # DEBUG __s1 => _45
  # DEBUG __s2 => D#459
  # DEBUG __n => D#428
  __r_46 = __builtin_memcmp (_45, pretmp_51, __len_269);
  # DEBUG __r => NULL
  if (__r_46 == 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  # DEBUG __n1 => _40
  # DEBUG __n2 => D#460
  _47 = _40 - pretmp_91;
  __d_48 = (const difference_type) _47;
  # DEBUG __d => __d_48
  if (__d_48 > 2147483647)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  if (__d_48 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  __r_49 = (int) _47;

  <bb 10>:
  # __r_50 = PHI <__r_46(6), __r_49(9)>
  # DEBUG __r => __r_50
  # DEBUG D#439 => {CLOBBER}
  # DEBUG __size => D#439
  # DEBUG D#440 => {CLOBBER}
  # DEBUG __osize => D#440
  if (__r_50 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:

  <bb 68>:
  # DEBUG __r => NULL
  # DEBUG __y => __pos_8
  __pos_35 = MEM[(struct _Rb_tree_node_base * *)__pos_8 + 16B];
  # DEBUG D#84 => __pos_8
  # DEBUG __x => D#84
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 12>:

  <bb 67>:
  # DEBUG __r => NULL
  __pos_36 = MEM[(struct _Rb_tree_node_base * *)__pos_8 + 24B];
  # DEBUG D#85 => __pos_8
  # DEBUG __x => D#85
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 13>:
  # __pos_272 = PHI <__pos_38(4)>

  <bb 66>:
  # DEBUG this => NULL
  # DEBUG __x => __pos_272
  # DEBUG __i$_M_node => __pos_272
  # DEBUG this => D#431
  # DEBUG D#45 => &D#431->_M_t
  # DEBUG this => D#45
  # DEBUG this => NULL
  # DEBUG __x => __pos_5
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__pos_5 == __pos_272)
    goto <bb 60>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => &__i
  # DEBUG this => __pos_272
  # DEBUG D#276 => &MEM[(struct _Rb_tree_node *)__pos_272]._M_value_field
  # DEBUG __r => D#276
  # DEBUG D#433 => &MEM[(struct pair &)__pos_272 + 32].first
  # DEBUG D#36 => D#431
  # DEBUG this => D#36
  # DEBUG D#35 => D#36
  # DEBUG D#34 => &D#35->_M_t
  # DEBUG D#33 => D#34
  # DEBUG this => D#33
  # DEBUG __x => name_4(D)
  # DEBUG __y => D#433
  # DEBUG this => D#86
  # DEBUG __lhs => name_4(D)
  # DEBUG __rhs => D#433
  # DEBUG this => name_4(D)
  # DEBUG __str => D#433
  # DEBUG D#458 => MEM[(long unsigned int *)name_4(D) + 8B]
  # DEBUG D#1 => name_4(D)
  # DEBUG this => D#1
  # DEBUG __size => D#458
  _53 = MEM[(long unsigned int *)__pos_272 + 40B];
  # DEBUG D#1 => D#433
  # DEBUG this => D#1
  # DEBUG __osize => _53
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_265 = MIN_EXPR <_53, pretmp_91>;
  # DEBUG __len => D#429
  # DEBUG this => D#433
  _56 = MEM[(char * *)__pos_272 + 32B];
  # DEBUG D#2 => D#433
  # DEBUG this => D#2
  # DEBUG D#457 => MEM[(char * *)name_4(D)]
  # DEBUG D#2 => name_4(D)
  # DEBUG this => D#2
  # DEBUG __s1 => D#457
  # DEBUG __s2 => _56
  # DEBUG __n => D#429
  __r_58 = __builtin_memcmp (pretmp_51, _56, __len_265);
  # DEBUG __r => NULL
  if (__r_58 == 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # DEBUG __n1 => D#458
  # DEBUG __n2 => _53
  _59 = pretmp_91 - _53;
  __d_60 = (const difference_type) _59;
  # DEBUG __d => __d_60
  if (__d_60 > 2147483647)
    goto <bb 46>;
  else
    goto <bb 16>;

  <bb 16>:
  if (__d_60 < -2147483648)
    goto <bb 19>;
  else
    goto <bb 17>;

  <bb 17>:
  __r_61 = (int) _59;

  <bb 18>:
  # __r_62 = PHI <__r_58(14), __r_61(17)>
  # DEBUG __r => __r_62
  # DEBUG D#445 => {CLOBBER}
  # DEBUG __size => D#445
  # DEBUG D#446 => {CLOBBER}
  # DEBUG __osize => D#446
  if (__r_62 < 0)
    goto <bb 60>;
  else
    goto <bb 46>;

  <bb 19>:
  # __pos_163 = PHI <__pos_272(16), __pos_162(69)>
  # prephitmp_218 = PHI <pretmp_91(16), prephitmp_213(69)>
  # prephitmp_219 = PHI <pretmp_51(16), prephitmp_19(69)>
  # DEBUG this => &D.75700
  # DEBUG __a => name_4(D)
  # DEBUG __b => NULL
  # DEBUG this => &D.75700.first
  # DEBUG __str => name_4(D)
  # DEBUG this => name_4(D)
  # DEBUG D#155 => &MEM[(const struct basic_string *)name_4(D)]._M_dataplus
  # DEBUG this => &D.75700.first
  # DEBUG D#156 => &MEM[(struct basic_string *)&D.75700]._M_dataplus
  # DEBUG D#61 => D#155
  # DEBUG this => D#156
  # DEBUG __dat => &MEM[(struct basic_string *)&D.75700].D.11612._M_local_buf
  # DEBUG __a => D#61
  # DEBUG D#60 => D#61
  # DEBUG D#58 => D#156
  # DEBUG D#59 => D#60
  # DEBUG this => D#58
  # DEBUG __a => D#59
  # DEBUG D#57 => D#59
  # DEBUG D#56 => D#58
  # DEBUG this => D#56
  # DEBUG D.70321 => D#57
  MEM[(struct _Alloc_hider *)&D.75700]._M_p = &MEM[(struct basic_string *)&D.75700].D.11612._M_local_buf;
  # DEBUG D#456 => MEM[(char * *)name_4(D)]
  # DEBUG D#2 => name_4(D)
  # DEBUG this => D#2
  # DEBUG D#455 => MEM[(long unsigned int *)name_4(D) + 8B]
  # DEBUG D#3 => name_4(D)
  # DEBUG this => D#3
  _25 = prephitmp_219 + prephitmp_218;
  # DEBUG D#2 => name_4(D)
  # DEBUG this => D#2
  # DEBUG this => &D.75700.first
  # DEBUG __beg => D#456
  # DEBUG __end => _25
  # DEBUG this => &D.75700.first
  # DEBUG __beg => D#456
  # DEBUG __end => _25
  # DEBUG this => &D.75700.first
  # DEBUG __beg => D#456
  # DEBUG __end => _25
  # DEBUG __ptr => D#456
  _63 = _25 != 0B;
  _251 = prephitmp_219 == 0B;
  _255 = _63 & _251;
  if (_255 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 20>:
  _72 = std::__cxx11::basic_string<char>::_M_create (&D.75700.first, &__dnew, 0);
  # DEBUG D#8 => &D.75700.first
  # DEBUG __p => _72
  # DEBUG this => D#8
  MEM[(char * *)&D.75700] = _72;
  __dnew.15_73 = __dnew;
  # DEBUG D#9 => &D.75700.first
  # DEBUG __capacity => __dnew.15_73
  # DEBUG this => D#9
  MEM[(size_type *)&D.75700 + 16B] = __dnew.15_73;
  # DEBUG D#2 => &D.75700.first
  # DEBUG this => D#2
  # DEBUG __p => _72
  # DEBUG __k1 => D#456
  # DEBUG __k2 => _25
  # DEBUG __d => _72
  # DEBUG __s => D#456
  # DEBUG __n => D#455
  goto <bb 23>;

  <bb 21>:
  # DEBUG D#2 => &D.75700.first
  # DEBUG this => D#2
  # DEBUG __p => &MEM[(struct basic_string *)&D.75700].D.11612._M_local_buf
  # DEBUG __k1 => D#456
  # DEBUG __k2 => _25
  # DEBUG __d => &MEM[(struct basic_string *)&D.75700].D.11612._M_local_buf
  # DEBUG __s => D#456
  # DEBUG __n => D#455
  if (prephitmp_218 == 1)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _75 = MEM[(const char_type &)prephitmp_219];
  # DEBUG D#13 => D#456
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.75700].D.11612._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.75700 + 16] = _75;
  goto <bb 24>;

  <bb 23>:
  # _154 = PHI <&MEM[(struct basic_string *)&D.75700].D.11612._M_local_buf(21), _72(20)>
  # DEBUG D#2 => &D.75700.first
  # DEBUG this => D#2
  # DEBUG __p => _154
  # DEBUG __k1 => D#456
  # DEBUG __k2 => _25
  # DEBUG __d => _154
  # DEBUG __s => D#456
  # DEBUG __n => D#455
  # DEBUG __s1 => _154
  # DEBUG __s2 => D#456
  # DEBUG __n => D#455
  __builtin_memcpy (_154, prephitmp_219, prephitmp_218);
  pretmp_224 = __dnew;
  pretmp_226 = MEM[(char * *)&D.75700];

  <bb 24>:
  # prephitmp_225 = PHI <prephitmp_218(22), pretmp_224(23)>
  # prephitmp_227 = PHI <&MEM[(struct basic_string *)&D.75700].D.11612._M_local_buf(22), pretmp_226(23)>
  # DEBUG D#454 => __dnew
  # DEBUG this => &D.75700.first
  # DEBUG __n => D#454
  # DEBUG D#10 => &D.75700.first
  # DEBUG __length => D#454
  # DEBUG this => D#10
  MEM[(size_type *)&D.75700 + 8B] = prephitmp_225;
  # DEBUG D#2 => &D.75700.first
  # DEBUG this => D#2
  _78 = prephitmp_227 + prephitmp_225;
  # DEBUG __c1 => _78
  # DEBUG __c2 => D#13
  MEM[(char_type &)_78] = 0;
  __dnew ={v} {CLOBBER};
  D.75700.second = 0B;
  # DEBUG this => D#431
  # DEBUG __position$_M_node => __pos_163
  # DEBUG __x => &D.75700
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => D#462
  # DEBUG __pos => __pos_163
  # DEBUG __x => &D.75700
  # DEBUG this => &__an
  # DEBUG __t => D#462
  # DEBUG __an$_M_t => D#462
  # DEBUG D#275 => &__an
  # DEBUG this => D#462
  MEM[(struct _Rb_tree_const_iterator *)&__position] = __pos_163;
  # DEBUG __v => &D.75700
  # DEBUG __node_gen => D#275
  # DEBUG D#274 => D#275
  # DEBUG __x => &D.75700
  # DEBUG this => D#87
  _17 = &MEM[(struct map *)trafficManager.1_3 + 1792B]._M_t;
  __res = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, Stats*>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> > >::_M_get_insert_hint_unique_pos (_17, __position, &D.75700.first);
  __res$first_65 = MEM[(struct pair *)&__res];
  # DEBUG __res$first => __res$first_65
  __res$second_66 = MEM[(struct pair *)&__res + 8B];
  # DEBUG __res$second => __res$second_66
  if (__res$second_66 != 0B)
    goto <bb 25>;
  else
    goto <bb 43>;

  <bb 25>:
  # DEBUG D#269 => D#274
  # DEBUG this => D#462
  # DEBUG __x => __res$first_65
  # DEBUG __p => __res$second_66
  # DEBUG __v => &D.75700
  # DEBUG __node_gen => D#269
  # DEBUG D#268 => D#269
  # DEBUG this => D#462
  _257 = __pos_5 == __res$second_66;
  _259 = __res$first_65 != 0B;
  _262 = _257 | _259;
  if (_262 != 0)
    goto <bb 31>;
  else
    goto <bb 26>;

  <bb 26>:
  # DEBUG __x => __res$second_66
  # DEBUG __x => __res$second_66
  # DEBUG this => __res$second_66
  # DEBUG D#216 => &MEM[(const struct _Rb_tree_node *)__res$second_66]._M_value_field
  # DEBUG __r => D#216
  # DEBUG __x => D#216
  # DEBUG this => D#87
  # DEBUG D#434 => &MEM[(const struct pair &)__res$second_66 + 32].first
  # DEBUG __x => &D.75700
  # DEBUG this => D#87
  # DEBUG D#267 => &MEM[(struct _Rb_tree *)D#462]._M_impl._M_key_compare
  # DEBUG D#86 => D#267
  # DEBUG __x => NULL
  # DEBUG __y => D#434
  # DEBUG this => D#86
  # DEBUG __lhs => NULL
  # DEBUG __rhs => D#434
  # DEBUG this => &D.75700.first
  # DEBUG __str => D#434
  _89 = MEM[(long unsigned int *)&D.75700 + 8B];
  # DEBUG D#1 => &D.75700.first
  # DEBUG this => D#1
  # DEBUG __size => _89
  _90 = MEM[(long unsigned int *)__res$second_66 + 40B];
  # DEBUG D#1 => D#434
  # DEBUG this => D#1
  # DEBUG __osize => _90
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_264 = MIN_EXPR <_89, _90>;
  # DEBUG __len => D#430
  # DEBUG this => D#434
  _93 = MEM[(char * *)__res$second_66 + 32B];
  # DEBUG D#2 => D#434
  # DEBUG this => D#2
  _94 = MEM[(char * *)&D.75700];
  # DEBUG D#2 => &D.75700.first
  # DEBUG this => D#2
  # DEBUG __s1 => _94
  # DEBUG __s2 => _93
  # DEBUG __n => D#430
  __r_95 = __builtin_memcmp (_94, _93, __len_264);
  # DEBUG __r => NULL
  if (__r_95 == 0)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 27>:
  # DEBUG __n1 => _89
  # DEBUG __n2 => _90
  _96 = _89 - _90;
  __d_97 = (const difference_type) _96;
  # DEBUG __d => __d_97
  if (__d_97 > 2147483647)
    goto <bb 31>;
  else
    goto <bb 28>;

  <bb 28>:
  if (__d_97 < -2147483648)
    goto <bb 31>;
  else
    goto <bb 29>;

  <bb 29>:
  __r_98 = (int) _96;

  <bb 30>:
  # __r_99 = PHI <__r_95(26), __r_98(29)>

  <bb 71>:
  # DEBUG __r => __r_99
  # DEBUG D#451 => {CLOBBER}
  # DEBUG __size => D#451
  # DEBUG D#452 => {CLOBBER}
  # DEBUG __osize => D#452
  __insert_left_266 = __r_99 < 0;

  <bb 31>:
  # __insert_left_85 = PHI <0(27), 1(28), __insert_left_266(71), 1(25)>
  # DEBUG __insert_left => __insert_left_85
  # DEBUG D#266 => D#268
  # DEBUG __arg => &D.75700
  # DEBUG this => D#266
  # DEBUG D#265 => D#266
  # DEBUG D#264 => D#265->_M_t
  # DEBUG D#263 => D#264
  # DEBUG __x => &D.75700
  # DEBUG this => D#263
  # DEBUG D#262 => D#263
  # DEBUG D#261 => D#263
  # DEBUG D#247 => D#261
  # DEBUG this => D#247
  # DEBUG D#246 => D#247
  # DEBUG this => D#246
  # DEBUG __n => 1
  # DEBUG __a => D#245
  # DEBUG D#244 => D#245
  # DEBUG D#242 => D#244
  # DEBUG D#243 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#242
  # DEBUG D.75803 => D#243
  # DEBUG D#241 => D#242
  # DEBUG D#240 => D#241
  # DEBUG this => D#240
  _83 = operator new (72);

  <bb 32>:
  # DEBUG __tmp => _83
  # DEBUG D#260 => D#262
  # DEBUG __node => _83
  # DEBUG __x => &D.75700
  # DEBUG this => D#260
  # DEBUG D#259 => D#260
  # DEBUG D#258 => D#260
  # DEBUG this => _83
  # DEBUG D#461 => &_83->_M_value_field
  # DEBUG __r => D#461
  # DEBUG D#249 => D#258
  # DEBUG this => D#249
  # DEBUG D#248 => D#249
  # DEBUG this => D#248
  # DEBUG this => NULL
  # DEBUG D.72705 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#461
  # DEBUG __val => &D.75700
  # DEBUG this => D#239
  # DEBUG D#14 => 40
  # DEBUG __p => D#461
  # DEBUG D.72593 => D#14
  # DEBUG this => D#461
  # DEBUG D.75847 => &D.75700
  # DEBUG D#238 => &D.75700.first
  # DEBUG this => D#461
  # DEBUG __str => D#238
  # DEBUG this => D#238
  # DEBUG D#155 => &D#238->_M_dataplus
  # DEBUG this => D#461
  _103 = &MEM[(struct basic_string *)_83 + 32B].D.11612._M_local_buf;
  # DEBUG D#156 => &MEM[(struct basic_string *)D#461]._M_dataplus
  # DEBUG D#61 => D#155
  # DEBUG this => D#156
  # DEBUG __dat => _103
  # DEBUG __a => D#61
  # DEBUG D#60 => D#61
  # DEBUG D#58 => D#156
  # DEBUG D#59 => D#60
  # DEBUG this => D#58
  # DEBUG __a => D#59
  # DEBUG D#57 => D#59
  # DEBUG D#56 => D#58
  # DEBUG this => D#56
  # DEBUG D.70321 => D#57
  MEM[(struct _Alloc_hider *)_83 + 32B]._M_p = _103;
  _104 = MEM[(char * *)&D.75700];
  # DEBUG D#2 => D#238
  # DEBUG this => D#2
  _105 = MEM[(long unsigned int *)&D.75700 + 8B];
  # DEBUG D#3 => D#238
  # DEBUG this => D#3
  _106 = _104 + _105;
  # DEBUG D#2 => D#238
  # DEBUG this => D#2
  # DEBUG this => D#461
  # DEBUG __beg => _104
  # DEBUG __end => _106
  # DEBUG this => D#461
  # DEBUG __beg => _104
  # DEBUG __end => _106
  # DEBUG this => D#461
  # DEBUG __beg => _104
  # DEBUG __end => _106
  # DEBUG __ptr => _104
  _263 = _106 != 0B;
  _252 = _104 == 0B;
  _267 = _252 & _263;
  if (_267 != 0)
    goto <bb 63>;
  else
    goto <bb 65>;

  <bb 33>:
  _101 = &_83->_M_value_field;
  _114 = std::__cxx11::basic_string<char>::_M_create (_101, &__dnew, 0);

  <bb 34>:
  # DEBUG D#8 => D#461
  # DEBUG __p => _114
  # DEBUG this => D#8
  MEM[(char * *)_83 + 32B] = _114;
  __dnew.15_115 = __dnew;
  # DEBUG D#9 => D#461
  # DEBUG __capacity => __dnew.15_115
  # DEBUG this => D#9
  MEM[(size_type *)_83 + 48B] = __dnew.15_115;
  # DEBUG D#2 => D#461
  # DEBUG this => D#2
  # DEBUG __p => _114
  # DEBUG __k1 => _104
  # DEBUG __k2 => _106
  # DEBUG __d => _114
  # DEBUG __s => _104
  # DEBUG __n => _105
  goto <bb 37>;

  <bb 35>:
  # DEBUG D#2 => D#461
  # DEBUG this => D#2
  # DEBUG __p => _103
  # DEBUG __k1 => _104
  # DEBUG __k2 => _106
  # DEBUG __d => _103
  # DEBUG __s => _104
  # DEBUG __n => _105
  if (_105 == 1)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  _117 = MEM[(const char_type &)_104];
  # DEBUG D#13 => _104
  # DEBUG __c1 => _103
  # DEBUG __c2 => D#13
  MEM[(char_type &)_103] = _117;
  goto <bb 38>;

  <bb 37>:
  # _250 = PHI <_103(35), _114(34)>
  # DEBUG D#2 => D#461
  # DEBUG this => D#2
  # DEBUG __p => _250
  # DEBUG __k1 => _104
  # DEBUG __k2 => _106
  # DEBUG __d => _250
  # DEBUG __s => _104
  # DEBUG __n => _105
  # DEBUG __s1 => _250
  # DEBUG __s2 => _104
  # DEBUG __n => _105
  __builtin_memcpy (_250, _104, _105);
  pretmp_228 = __dnew;
  pretmp_165 = MEM[(char * *)_83 + 32B];

  <bb 38>:
  # prephitmp_164 = PHI <_105(36), pretmp_228(37)>
  # prephitmp_169 = PHI <_103(36), pretmp_165(37)>
  # DEBUG D#453 => __dnew
  # DEBUG this => D#461
  # DEBUG __n => D#453
  # DEBUG D#10 => D#461
  # DEBUG __length => D#453
  # DEBUG this => D#10
  MEM[(size_type *)_83 + 40B] = prephitmp_164;
  # DEBUG D#2 => D#461
  # DEBUG this => D#2
  _120 = prephitmp_169 + prephitmp_164;
  # DEBUG __c1 => _120
  # DEBUG __c2 => D#13
  MEM[(char_type &)_120] = 0;
  __dnew ={v} {CLOBBER};
  _107 = D.75700.second;
  MEM[(struct pair *)_83 + 32B].second = _107;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _83
  _86 = (int) __insert_left_85;
  std::_Rb_tree_insert_and_rebalance (_86, _83, __res$second_66, __pos_5);
  _87 = MEM[(struct _Rb_tree *)trafficManager.1_3 + 1792B]._M_impl._M_node_count;
  _88 = _87 + 1;
  MEM[(struct _Rb_tree *)trafficManager.1_3 + 1792B]._M_impl._M_node_count = _88;
  # DEBUG this => NULL
  # DEBUG __x => _83
  goto <bb 43>;

<L9>:

<L5>:
  _108 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_108);
  # DEBUG D#257 => D#259
  # DEBUG __p => _83
  # DEBUG this => D#257
  # DEBUG D#256 => D#257
  # DEBUG this => D#256
  # DEBUG D#255 => 1
  # DEBUG __p => _83
  # DEBUG __a => D#254
  # DEBUG __n => D#255
  # DEBUG D#253 => D#255
  # DEBUG D#252 => D#254
  # DEBUG D#250 => D#252
  # DEBUG D#251 => D#253
  # DEBUG __p => _83
  # DEBUG this => D#250
  # DEBUG D.75841 => D#251
  operator delete (_83);
  __cxa_rethrow ();

<L7>:
  __cxa_end_catch ();
  resx 3

<L10>:
  goto <bb 48> (<L4>);

  <bb 43>:
  # SR.601_222 = PHI <_83(38), __res$first_65(24)>
  # DEBUG D#272 => {CLOBBER}
  # DEBUG __res$first => D#272
  # DEBUG D#273 => {CLOBBER}
  # DEBUG __res$second => D#273
  # DEBUG __i$_M_node => SR.601_222
  # DEBUG this => &D.75700
  # DEBUG D#77 => &D.75700.first
  # DEBUG this => D#77
  # DEBUG this => D#77
  # DEBUG this => D#77
  _27 = MEM[(char * *)&D.75700];
  # DEBUG D#2 => D#77
  # DEBUG this => D#2
  # DEBUG this => D#77
  if (&MEM[(const struct basic_string *)&D.75700].D.11612._M_local_buf != _27)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#77].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#77
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#77
  # DEBUG this => D#2
  # DEBUG this => D#77
  # DEBUG D#72 => &MEM[(struct basic_string *)D#77]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _27
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _27
  # DEBUG this => D#66
  # DEBUG D.75654 => D#67
  operator delete (_27);

  <bb 45>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#77]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.75700 ={v} {CLOBBER};

  <bb 46>:
  # __pos_28 = PHI <__pos_272(15), SR.601_222(45), __pos_272(18)>
  # DEBUG __i$_M_node => __pos_28
  # DEBUG this => &__i
  # DEBUG this => __pos_28
  # DEBUG D#277 => &MEM[(struct _Rb_tree_node *)__pos_28]._M_value_field
  # DEBUG __r => D#277
  # DEBUG D#279 => {CLOBBER}
  # DEBUG __i$_M_node => D#279
  _9 = MEM[(struct Stats * &)__pos_28 + 64];
  # DEBUG test => _9
  if (_9 == 0B)
    goto <bb 51>;
  else
    goto <bb 58>;

<L8>:

<L4>:
  # DEBUG this => &D.75700
  # DEBUG D#77 => &D.75700.first
  # DEBUG this => D#77
  # DEBUG this => D#77
  # DEBUG this => D#77
  _30 = MEM[(char * *)&D.75700];
  # DEBUG D#2 => D#77
  # DEBUG this => D#2
  # DEBUG this => D#77
  if (&MEM[(const struct basic_string *)&D.75700].D.11612._M_local_buf != _30)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#77].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#77
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#77
  # DEBUG this => D#2
  # DEBUG this => D#77
  # DEBUG D#72 => &MEM[(struct basic_string *)D#77]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _30
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _30
  # DEBUG this => D#66
  # DEBUG D.75638 => D#67
  operator delete (_30);

  <bb 50>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#77]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.75700 ={v} {CLOBBER};
  resx 1

  <bb 51>:
  # DEBUG __out => &cout
  # DEBUG __s => "warning statistics "
  # DEBUG __s => "warning statistics "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "warning statistics ", 19);
  # DEBUG __os => &cout
  # DEBUG __str => name_4(D)
  _6 = MEM[(long unsigned int *)name_4(D) + 8B];
  # DEBUG D#1 => name_4(D)
  # DEBUG this => D#1
  _10 = (long int) _6;
  # DEBUG this => name_4(D)
  _11 = MEM[(char * *)name_4(D)];
  # DEBUG D#2 => name_4(D)
  # DEBUG this => D#2
  _12 = std::__ostream_insert<char, std::char_traits<char> > (&cout, _11, _10);
  # DEBUG __out => _12
  # DEBUG __s => " not found"
  # DEBUG __s => " not found"
  std::__ostream_insert<char, std::char_traits<char> > (_12, " not found", 10);
  # DEBUG this => _12
  # DEBUG __pf => endl
  # DEBUG __os => _12
  _121 = _12->_vptr.basic_ostream;
  _122 = MEM[(long int *)_121 + -24B];
  _123 = (sizetype) _122;
  _124 = _12 + _123;
  # DEBUG this => _124
  # DEBUG __c => 10
  _16 = MEM[(const struct basic_ios *)_124]._M_ctype;
  # DEBUG __f => _16
  if (_16 == 0B)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  std::__throw_bad_cast ();

  <bb 53>:
  # DEBUG this => _16
  # DEBUG __c => 10
  _129 = MEM[(const struct ctype *)_16]._M_widen_ok;
  if (_129 != 0)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  _132 = MEM[(const struct ctype *)_16]._M_widen[10];
  pretmp_215 = (int) _132;
  goto <bb 57>;

  <bb 55>:
  # DEBUG this => _16
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_16);
  _137 = MEM[(const struct ctype *)_16].D.17655._vptr.facet;
  _138 = MEM[(int (*__vtbl_ptr_type) () *)_137 + 48B];
  PROF_142 = [obj_type_ref] OBJ_TYPE_REF(_138;(const struct ctype)_16->6);
  if (PROF_142 == do_widen)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  _144 = OBJ_TYPE_REF(_138;(const struct ctype)_16->6) (_16, 10);
  pretmp_216 = (int) _144;

  <bb 57>:
  # prephitmp_217 = PHI <pretmp_215(54), 10(55), pretmp_216(56)>
  _127 = std::basic_ostream<char>::put (_12, prephitmp_217);
  # DEBUG __os => _127
  std::basic_ostream<char>::flush (_127);

  <bb 58>:

  <bb 70>:
  return _9;

  <bb 59>:
  pretmp_235 = MEM[(long unsigned int *)name_4(D) + 8B];
  pretmp_212 = MEM[(char * *)name_4(D)];

  <bb 60>:
  # __pos_162 = PHI <__pos_272(18), __pos_272(66), __pos_5(59)>
  # prephitmp_213 = PHI <pretmp_91(18), pretmp_91(66), pretmp_235(59)>
  # prephitmp_19 = PHI <pretmp_51(18), pretmp_51(66), pretmp_212(59)>

  <bb 69>:
  goto <bb 19>;

  <bb 61>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 62>:
  # DEBUG __first => D#456
  # DEBUG __last => _25
  # DEBUG D#151 => &__first
  # DEBUG D.71216 => D#151
  # DEBUG __first => D#456
  # DEBUG __last => _25
  __dnew = prephitmp_218;
  if (prephitmp_218 > 15)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 63>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L11>:
  goto <bb 40> (<L5>);

  <bb 65>:
  # DEBUG __first => _104
  # DEBUG __last => _106
  # DEBUG D#151 => &__first
  # DEBUG D.71216 => D#151
  # DEBUG __first => _104
  # DEBUG __last => _106
  __dnew = _105;
  if (_105 > 15)
    goto <bb 33>;
  else
    goto <bb 35>;

}



;; Function bool Simulate(const BookSimConfig&) (_Z8SimulateRK13BookSimConfig, funcdef_no=2208, decl_uid=64587, cgraph_uid=498, symbol_order=507)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
bool Simulate(const BookSimConfig&) (const struct BookSimConfig & config)
{
  size_type __dnew;
  char_type D.76291;
  char __c;
  char_type D.76288;
  char __c;
  char_type D.76285;
  struct basic_ostream & D.76279;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.76194;
  struct __string_type D.76193;
  struct iterator __position;
  struct Network * __x;
  size_type __dnew;
  struct Power_Module pnet;
  int i;
  struct ostringstream name;
  int i;
  bool result;
  struct timeval end_time;
  struct timeval start_time;
  double total_time;
  static const char __PRETTY_FUNCTION__[36] = "bool Simulate(const BookSimConfig&)";
  int subnets;
  struct vector net;
  const struct string D.64653;
  struct __string_type D.64644;
  const struct string D.64593;
  const struct Configuration * _15;
  char * const _20;
  long unsigned int _21;
  char * const _23;
  long unsigned int _25;
  char * const _26;
  struct Network * _28;
  char * const _31;
  char * const _34;
  struct TrafficManager * trafficManager.42_38;
  struct TrafficManager * _40;
  struct TrafficManager * trafficManager.42_43;
  long int _47;
  double _48;
  long int _49;
  double _50;
  double _51;
  double _52;
  long int _53;
  double _54;
  long int _55;
  double _56;
  double _57;
  double _58;
  struct __ostream_type & _60;
  struct Network * & _61;
  int _64;
  char * const _66;
  long unsigned int _67;
  long unsigned int _68;
  struct Network * _69;
  struct Network * _77;
  int (*__vtbl_ptr_type) () * _78;
  int (*__vtbl_ptr_type) () _79;
  struct Network * * _84;
  struct TrafficManager * trafficManager.42_85;
  int (*__vtbl_ptr_type) () * _86;
  int (*__vtbl_ptr_type) () _87;
  char * const _90;
  char * const _96;
  struct Network * * _98;
  struct Network * * _99;
  struct Network * * _100;
  long unsigned int _101;
  struct Network * & _102;
  struct Network * & _104;
  struct Network * * _105;
  const struct __ctype_type * _134;
  char * const pretmp_136;
  char * const prephitmp_137;
  size_type prephitmp_146;
  char * const pretmp_147;
  char * const prephitmp_148;
  size_type pretmp_149;
  size_type prephitmp_150;
  int prephitmp_152;
  const void * prephitmp_157;
  const void * pretmp_158;
  const void * prephitmp_159;
  size_type pretmp_161;
  const void * prephitmp_168;
  bool _175;
  bool _176;
  char * const _177;
  struct Network * * const _178;
  struct Network * * const _179;
  long int _180;
  long int _181;
  long int _182;
  long int _183;
  size_type _184;
  long unsigned int _185;
  long unsigned int _186;
  struct Network * * _187;
  long int _190;
  sizetype iftmp.66_191;
  struct basic_ios * _192;
  long int _202;
  sizetype iftmp.72_203;
  struct basic_ios * _204;
  char_type * const _208;
  char_type * const _209;
  char_type * const _210;
  char * const _211;
  char_type * const _212;
  char * const _213;
  char * const _215;
  char * const _216;
  char * const _217;
  long int __last.17_218;
  long int __first.18_219;
  difference_type _220;
  long unsigned int __dnew.14_221;
  char * _222;
  long unsigned int __dnew.15_223;
  const char_type _225;
  char * _228;
  long int __last.17_230;
  long int __first.18_231;
  difference_type _232;
  long unsigned int __dnew.14_233;
  char * _234;
  long unsigned int __dnew.15_235;
  const char_type _237;
  char * _240;
  int (*__vtbl_ptr_type) () * iftmp.71_243;
  long int _244;
  sizetype iftmp.72_245;
  struct basic_ios * _246;
  int (*__vtbl_ptr_type) () * iftmp.73_247;
  int (*__vtbl_ptr_type) () * _251;
  long int _252;
  sizetype _253;
  struct basic_ios * _254;
  struct basic_ostream & _257;
  char _259;
  char_type _262;
  int (*__vtbl_ptr_type) () * _267;
  int (*__vtbl_ptr_type) () _268;
  void * PROF_272;
  char_type _274;
  const void * prephitmp_282;
  bool _307;
  char * const _308;
  int pretmp_394;
  int pretmp_395;
  long unsigned int pretmp_421;
  long unsigned int pretmp_423;
  long unsigned int prephitmp_427;
  const void * pretmp_434;

  <bb 2>:
  # DEBUG this => &net
  # DEBUG D#89 => &net.D.51800
  # DEBUG this => D#89
  # DEBUG D#88 => &D#89->_M_impl
  # DEBUG this => D#88
  # DEBUG this => D#88
  # DEBUG this => D#88
  MEM[(struct _Vector_impl *)&net]._M_start = 0B;
  MEM[(struct _Vector_impl *)&net]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&net]._M_end_of_storage = 0B;
  # DEBUG D#28 => &D.64592
  # DEBUG this => D#28
  # DEBUG D#27 => D#28
  # DEBUG this => D#27
  # DEBUG D#124 => &D.64592
  # DEBUG this => &D.64593
  # DEBUG __s => "subnets"
  # DEBUG __a => D#124
  # DEBUG D#123 => D#124
  # DEBUG this => &D.64593
  # DEBUG D#121 => &D.64593._M_dataplus
  # DEBUG D#61 => D#123
  # DEBUG this => D#121
  # DEBUG __dat => &D.64593.D.11612._M_local_buf
  # DEBUG __a => D#61
  # DEBUG D#60 => D#61
  # DEBUG D#58 => D#121
  # DEBUG D#59 => D#60
  # DEBUG this => D#58
  # DEBUG __a => D#59
  # DEBUG D#57 => D#59
  # DEBUG D#56 => D#58
  # DEBUG this => D#56
  # DEBUG D.70321 => D#57
  MEM[(struct _Alloc_hider *)&D.64593]._M_p = &D.64593.D.11612._M_local_buf;
  # DEBUG __s => "subnets"
  # DEBUG this => &D.64593
  # DEBUG __beg => "subnets"
  # DEBUG __end => &MEM[(void *)"subnets" + 7B]
  # DEBUG this => &D.64593
  # DEBUG __beg => "subnets"
  # DEBUG __end => &MEM[(void *)"subnets" + 7B]
  # DEBUG this => &D.64593
  # DEBUG __beg => "subnets"
  # DEBUG __end => &MEM[(void *)"subnets" + 7B]
  # DEBUG __ptr => "subnets"
  # DEBUG __first => "subnets"
  # DEBUG __last => &MEM[(void *)"subnets" + 7B]
  # DEBUG D#151 => &__first
  # DEBUG D.71216 => D#151
  # DEBUG __first => "subnets"
  # DEBUG __last => &MEM[(void *)"subnets" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#2 => &D.64593
  # DEBUG this => D#2
  # DEBUG __p => &D.64593.D.11612._M_local_buf
  # DEBUG __k1 => "subnets"
  # DEBUG __k2 => &MEM[(void *)"subnets" + 7B]
  # DEBUG __d => &D.64593.D.11612._M_local_buf
  # DEBUG __s => "subnets"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.64593.D.11612._M_local_buf
  # DEBUG __s2 => "subnets"
  # DEBUG __n => 7
  __builtin_memcpy (&D.64593.D.11612._M_local_buf, "subnets", 7);
  # DEBUG this => &D.64593
  # DEBUG __n => 7
  # DEBUG D#10 => &D.64593
  # DEBUG __length => 7
  # DEBUG this => D#10
  MEM[(size_type *)&D.64593 + 8B] = 7;
  # DEBUG D#2 => &D.64593
  # DEBUG this => D#2
  # DEBUG __c1 => &MEM[(void *)&D.64593 + 23B]
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.64593 + 23] = 0;
  # DEBUG D#467 => {CLOBBER}
  # DEBUG __dnew => D#467
  _15 = &config_14(D)->D.46005;
  subnets_17 = Configuration::GetInt (_15, &D.64593);

  <bb 3>:
  # DEBUG subnets => subnets_17
  # DEBUG this => &D.64593
  # DEBUG this => &D.64593
  # DEBUG this => &D.64593
  _20 = MEM[(char * *)&D.64593];
  # DEBUG D#2 => &D.64593
  # DEBUG this => D#2
  # DEBUG this => &D.64593
  if (&D.64593.D.11612._M_local_buf != _20)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  # DEBUG D#75 => D.64593.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.64593
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.64593
  # DEBUG this => D#2
  # DEBUG this => &D.64593
  # DEBUG D#72 => &D.64593._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _20
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _20
  # DEBUG this => D#66
  # DEBUG D.73731 => D#67
  operator delete (_20);

  <bb 5>:
  # DEBUG D#76 => &D.64593._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.64593 ={v} {CLOBBER};
  # DEBUG this => &D.64592
  # DEBUG this => &D.64592
  _21 = (long unsigned int) subnets_17;
  # DEBUG this => &net
  # DEBUG __new_size => _21
  __x = 0B;
  # DEBUG __x => __x
  _178 = MEM[(struct Network * * *)&net];
  # DEBUG D#29 => &net
  _179 = MEM[(struct Network * * *)&net + 8B];
  # DEBUG D#29 => &net
  # DEBUG this => D#29
  # DEBUG this => D#29
  _180 = (long int) _179;
  _181 = (long int) _178;
  _182 = _180 - _181;
  _183 = _182 /[ex] 8;
  _184 = (size_type) _183;
  if (_21 > _184)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  # DEBUG D#29 => &net
  # DEBUG D#29 => &net
  # DEBUG this => D#29
  # DEBUG this => D#29
  _185 = _21 - _184;
  # DEBUG this => &net
  # DEBUG D#37 => &net.D.51800._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#37
  # DEBUG this => &net
  MEM[(struct __normal_iterator *)&__position] = _179;
  # DEBUG __n => _185
  # DEBUG __x => &__x
  std::vector<Network*>::_M_fill_insert (&net, __position, _185, &__x);

  <bb 7>:
  goto <bb 10>;

  <bb 8>:
  # DEBUG D#29 => &net
  # DEBUG D#29 => &net
  # DEBUG this => D#29
  # DEBUG this => D#29
  if (_21 < _184)
    goto <bb 9>;
  else
    goto <bb 7>;

  <bb 9>:
  _186 = _21 * 8;
  _187 = _178 + _186;
  # DEBUG D#55 => &net
  # DEBUG __pos => _187
  # DEBUG D#54 => D#55
  # DEBUG this => D#54
  # DEBUG D#52 => &D#54->D.51800
  # DEBUG this => D#52
  # DEBUG D#53 => D#54->D.51800._M_impl._M_finish
  # DEBUG __first => _187
  # DEBUG __last => D#53
  # DEBUG D.70306 => NULL
  # DEBUG D#50 => _187
  # DEBUG D#51 => D#53
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.70290 => D#46
  # DEBUG D.70289 => D#47
  MEM[(struct Network * * *)&net + 8B] = _187;

  <bb 10>:
  # DEBUG i => 0
  if (subnets_17 <= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  trafficManager.42_38 = trafficManager;
  if (trafficManager.42_38 != 0B)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 12>:
  pretmp_434 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_158 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 13>:
  # i_271 = PHI <0(12), i_33(72)>
  # prephitmp_157 = PHI <pretmp_434(12), iftmp.71_243(72)>
  # prephitmp_159 = PHI <pretmp_158(12), iftmp.73_247(72)>
  # DEBUG i => i_271
  # DEBUG this => &name
  # DEBUG __mode => 16
  # DEBUG D#82 => &name.D.26895
  # DEBUG this => D#82
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&name + 112B].D.20691);
  MEM[(struct basic_ios *)&name + 112B].D.20691._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&name + 112B]._M_num_get = 0B;
  # DEBUG this => &name.D.26892
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&name]._vptr.basic_ostream = prephitmp_157;
  _190 = MEM[(long int *)prephitmp_157 + -24B];
  iftmp.66_191 = (sizetype) _190;
  _192 = &name.D.26892 + iftmp.66_191;
  _192->D.20691._vptr.ios_base = prephitmp_159;
  std::basic_ios<char>::init (_192, 0B);

  <bb 14>:
  name.D.26892._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&name + 112B].D.20691._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#80 => &name._M_stringbuf
  # DEBUG this => D#80
  # DEBUG __mode => NULL
  # DEBUG D#64 => &MEM[(struct basic_stringbuf *)D#80].D.26742
  # DEBUG this => D#64
  MEM[(struct basic_streambuf *)&name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&name + 8B].D.26742._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&name + 8B]._M_mode = 16;
  # DEBUG D#63 => &MEM[(struct basic_stringbuf *)D#80]._M_string
  # DEBUG this => D#63
  # DEBUG this => D#28
  # DEBUG D#27 => D#28
  # DEBUG this => D#27
  # DEBUG this => D#63
  # DEBUG D#62 => &MEM[(struct basic_string *)D#63]._M_dataplus
  # DEBUG this => D#62
  # DEBUG __dat => &MEM[(struct basic_string *)&name + 80B].D.11612._M_local_buf
  # DEBUG __a => D#61
  # DEBUG D#60 => D#61
  # DEBUG D#58 => D#62
  # DEBUG D#59 => D#60
  # DEBUG this => D#58
  # DEBUG __a => D#59
  # DEBUG D#57 => D#59
  # DEBUG D#56 => D#58
  # DEBUG this => D#56
  # DEBUG D.70321 => D#57
  MEM[(struct _Alloc_hider *)&name + 80B]._M_p = &MEM[(struct basic_string *)&name + 80B].D.11612._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#63
  # DEBUG __n => 0
  # DEBUG D#10 => D#63
  # DEBUG __length => 0
  # DEBUG this => D#10
  MEM[(size_type *)&name + 88B] = 0;
  # DEBUG D#2 => D#63
  # DEBUG this => D#2
  # DEBUG __c1 => &MEM[(struct basic_string *)&name + 80B].D.11612._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&name + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&name + 112B], &name._M_stringbuf.D.26742);
  goto <bb 23>;

  # prephitmp_282 = PHI <prephitmp_157(14)>
  # prephitmp_168 = PHI <prephitmp_159(14)>
<L31>:
  # DEBUG this => &name._M_stringbuf
  MEM[(struct basic_stringbuf *)&name + 8B].D.26742._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#79 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#79
  # DEBUG this => D#79
  # DEBUG this => D#79
  _23 = MEM[(char * *)&name + 80B];
  # DEBUG D#2 => D#79
  # DEBUG this => D#2
  # DEBUG this => D#79
  if (&MEM[(const struct basic_string *)&name + 80B].D.11612._M_local_buf != _23)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#79].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#79
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#79
  # DEBUG this => D#2
  # DEBUG this => D#79
  # DEBUG D#72 => &MEM[(struct basic_string *)D#79]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _23
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _23
  # DEBUG this => D#66
  # DEBUG D.76051 => D#67
  operator delete (_23);

  <bb 17>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#79]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)&name + 80] ={v} {CLOBBER};
  # DEBUG D#78 => &MEM[(struct basic_stringbuf *)&name + 8B].D.26742
  # DEBUG this => D#78
  MEM[(struct basic_streambuf *)&name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&name + 8B]._M_buf_locale);
  MEM[(struct  &)&name + 8] ={v} {CLOBBER};
  resx 25

<L32>:
  # DEBUG this => &name.D.26892
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _202 = MEM[(long int *)prephitmp_282 + -24B];
  iftmp.72_203 = (sizetype) _202;
  _204 = &name.D.26892 + iftmp.72_203;
  _204->D.20691._vptr.ios_base = prephitmp_168;
  MEM[(struct  &)&name] ={v} {CLOBBER};
  resx 24

<L39>:
  goto <bb 21> (<L33>);

<L38>:

<L33>:
  # DEBUG D#81 => &name.D.26895
  # DEBUG this => D#81
  MEM[(struct basic_ios *)&name + 112B].D.20691._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&name + 112B].D.20691);
  resx 23

<L40>:
  goto <bb 139> (<L29>);

  <bb 23>:
  # DEBUG __out => &name.D.26892
  # DEBUG __s => "network_"
  # DEBUG __s => "network_"
  std::__ostream_insert<char, std::char_traits<char> > (&name.D.26892, "network_", 8);

  <bb 24>:
  std::basic_ostream<char>::operator<< (&name.D.26892, i_271);
  goto <bb 26>;

<L42>:
  goto <bb 130> (<L23>);

  <bb 26>:
  _25 = (long unsigned int) i_271;
  _98 = MEM[(struct Network * * *)&net];
  # DEBUG D#26 => &net
  # DEBUG __n => _25
  # DEBUG this => D#26
  _68 = _25 * 8;
  _61 = _98 + _68;
  # DEBUG this => &name
  # DEBUG this => &name._M_stringbuf
  # DEBUG this => &D.64644
  # DEBUG this => D#28
  # DEBUG D#27 => D#28
  # DEBUG this => D#27
  # DEBUG this => &D.64644
  # DEBUG D#62 => &D.64644._M_dataplus
  # DEBUG this => D#62
  # DEBUG __dat => &D.64644.D.11612._M_local_buf
  # DEBUG __a => D#61
  # DEBUG D#60 => D#61
  # DEBUG D#58 => D#62
  # DEBUG D#59 => D#60
  # DEBUG this => D#58
  # DEBUG __a => D#59
  # DEBUG D#57 => D#59
  # DEBUG D#56 => D#58
  # DEBUG this => D#56
  # DEBUG D.70321 => D#57
  MEM[(struct _Alloc_hider *)&D.64644]._M_p = &D.64644.D.11612._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.64644
  # DEBUG __n => 0
  # DEBUG D#10 => &D.64644
  # DEBUG __length => 0
  # DEBUG this => D#10
  MEM[(size_type *)&D.64644 + 8B] = 0;
  # DEBUG D#2 => &D.64644
  # DEBUG this => D#2
  # DEBUG __c1 => &D.64644.D.11612._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.64644 + 16] = 0;
  # DEBUG D#160 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26742
  _208 = MEM[(char_type * *)&name + 48B];
  # DEBUG D#5 => D#160
  # DEBUG this => D#5
  if (_208 != 0B)
    goto <bb 27>;
  else
    goto <bb 49>;

  <bb 27>:
  # DEBUG D#161 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26742
  # DEBUG D#5 => D#161
  # DEBUG this => D#5
  # DEBUG D#162 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26742
  _209 = MEM[(char_type * *)&name + 32B];
  # DEBUG D#6 => D#162
  # DEBUG this => D#6
  if (_208 > _209)
    goto <bb 28>;
  else
    goto <bb 38>;

  <bb 28>:
  # DEBUG this => D#28
  # DEBUG D#27 => D#28
  # DEBUG this => D#27
  # DEBUG D#165 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26742
  # DEBUG D#5 => D#165
  # DEBUG this => D#5
  # DEBUG D#166 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26742
  _210 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#7 => D#166
  # DEBUG this => D#7
  # DEBUG this => &D.76194
  # DEBUG __beg => _210
  # DEBUG __end => _208
  # DEBUG __a => NULL
  # DEBUG this => &D.76194
  # DEBUG D#158 => &D.76194._M_dataplus
  # DEBUG this => D#158
  # DEBUG __dat => &D.76194.D.11612._M_local_buf
  # DEBUG __a => D#61
  # DEBUG D#60 => D#61
  # DEBUG D#58 => D#158
  # DEBUG D#59 => D#60
  # DEBUG this => D#58
  # DEBUG __a => D#59
  # DEBUG D#57 => D#59
  # DEBUG D#56 => D#58
  # DEBUG this => D#56
  # DEBUG D.70321 => D#57
  MEM[(struct _Alloc_hider *)&D.76194]._M_p = &D.76194.D.11612._M_local_buf;
  # DEBUG this => &D.76194
  # DEBUG __beg => _210
  # DEBUG __end => _208
  # DEBUG this => &D.76194
  # DEBUG __beg => _210
  # DEBUG __end => _208
  # DEBUG this => &D.76194
  # DEBUG __beg => _210
  # DEBUG __end => _208
  # DEBUG __ptr => _210
  if (_210 == 0B)
    goto <bb 142>;
  else
    goto <bb 144>;

  <bb 29>:
  _222 = std::__cxx11::basic_string<char>::_M_create (&D.76194, &__dnew, 0);

  <bb 30>:
  # DEBUG D#8 => &D.76194
  # DEBUG __p => _222
  # DEBUG this => D#8
  MEM[(char * *)&D.76194] = _222;
  __dnew.15_223 = __dnew;
  # DEBUG D#9 => &D.76194
  # DEBUG __capacity => __dnew.15_223
  # DEBUG this => D#9
  MEM[(size_type *)&D.76194 + 16B] = __dnew.15_223;
  # DEBUG D#2 => &D.76194
  # DEBUG this => D#2
  # DEBUG __p => _222
  # DEBUG __k1 => _210
  # DEBUG __k2 => _208
  # DEBUG __d => _222
  # DEBUG __s => _210
  # DEBUG __n => __dnew.14_221
  goto <bb 33>;

  <bb 31>:
  # DEBUG D#2 => &D.76194
  # DEBUG this => D#2
  # DEBUG __p => &D.76194.D.11612._M_local_buf
  # DEBUG __k1 => _210
  # DEBUG __k2 => _208
  # DEBUG __d => &D.76194.D.11612._M_local_buf
  # DEBUG __s => _210
  # DEBUG __n => __dnew.14_221
  if (__dnew.14_221 == 1)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  _225 = MEM[(const char_type &)_210];
  # DEBUG D#13 => _210
  # DEBUG __c1 => &D.76194.D.11612._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.76194 + 16] = _225;
  goto <bb 34>;

  <bb 33>:
  # _177 = PHI <&D.76194.D.11612._M_local_buf(31), _222(30)>
  # DEBUG D#2 => &D.76194
  # DEBUG this => D#2
  # DEBUG __p => _177
  # DEBUG __k1 => _210
  # DEBUG __k2 => _208
  # DEBUG __d => _177
  # DEBUG __s => _210
  # DEBUG __n => __dnew.14_221
  # DEBUG __s1 => _177
  # DEBUG __s2 => _210
  # DEBUG __n => __dnew.14_221
  __builtin_memcpy (_177, _210, __dnew.14_221);
  pretmp_149 = __dnew;
  pretmp_136 = MEM[(char * *)&D.76194];

  <bb 34>:
  # prephitmp_150 = PHI <__dnew.14_221(32), pretmp_149(33)>
  # prephitmp_137 = PHI <&D.76194.D.11612._M_local_buf(32), pretmp_136(33)>
  # DEBUG D#469 => __dnew
  # DEBUG this => &D.76194
  # DEBUG __n => D#469
  # DEBUG D#10 => &D.76194
  # DEBUG __length => D#469
  # DEBUG this => D#10
  MEM[(size_type *)&D.76194 + 8B] = prephitmp_150;
  # DEBUG D#2 => &D.76194
  # DEBUG this => D#2
  _228 = prephitmp_137 + prephitmp_150;
  # DEBUG __c1 => _228
  # DEBUG __c2 => D#13
  MEM[(char_type &)_228] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.64644
  # DEBUG __str => &D.76194
  # DEBUG this => &D.64644
  # DEBUG __str => &D.76194
  std::__cxx11::basic_string<char>::_M_assign (&D.64644, &D.76194);

  <bb 35>:
  # DEBUG this => &D.76194
  # DEBUG this => &D.76194
  # DEBUG this => &D.76194
  _211 = MEM[(char * *)&D.76194];
  # DEBUG D#2 => &D.76194
  # DEBUG this => D#2
  # DEBUG this => &D.76194
  if (&D.76194.D.11612._M_local_buf != _211)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG D#75 => D.76194.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.76194
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.76194
  # DEBUG this => D#2
  # DEBUG this => &D.76194
  # DEBUG D#72 => &D.76194._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _211
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _211
  # DEBUG this => D#66
  # DEBUG D.76153 => D#67
  operator delete (_211);

  <bb 37>:
  # DEBUG D#76 => &D.76194._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.76194 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 64>;

  <bb 38>:
  # DEBUG this => D#28
  # DEBUG D#27 => D#28
  # DEBUG this => D#27
  # DEBUG D#163 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26742
  # DEBUG D#6 => D#163
  # DEBUG this => D#6
  # DEBUG D#164 => &MEM[(const struct basic_stringbuf *)&name + 8B].D.26742
  _212 = MEM[(char_type * *)&name + 40B];
  # DEBUG D#7 => D#164
  # DEBUG this => D#7
  # DEBUG this => &D.76193
  # DEBUG __beg => _212
  # DEBUG __end => _209
  # DEBUG __a => NULL
  # DEBUG this => &D.76193
  # DEBUG D#158 => &D.76193._M_dataplus
  # DEBUG this => D#158
  # DEBUG __dat => &D.76193.D.11612._M_local_buf
  # DEBUG __a => D#61
  # DEBUG D#60 => D#61
  # DEBUG D#58 => D#158
  # DEBUG D#59 => D#60
  # DEBUG this => D#58
  # DEBUG __a => D#59
  # DEBUG D#57 => D#59
  # DEBUG D#56 => D#58
  # DEBUG this => D#56
  # DEBUG D.70321 => D#57
  MEM[(struct _Alloc_hider *)&D.76193]._M_p = &D.76193.D.11612._M_local_buf;
  # DEBUG this => &D.76193
  # DEBUG __beg => _212
  # DEBUG __end => _209
  # DEBUG this => &D.76193
  # DEBUG __beg => _212
  # DEBUG __end => _209
  # DEBUG this => &D.76193
  # DEBUG __beg => _212
  # DEBUG __end => _209
  # DEBUG __ptr => _212
  _176 = _209 != 0B;
  _175 = _212 == 0B;
  _307 = _175 & _176;
  if (_307 != 0)
    goto <bb 146>;
  else
    goto <bb 145>;

  <bb 39>:
  _234 = std::__cxx11::basic_string<char>::_M_create (&D.76193, &__dnew, 0);
  goto <bb 41>;

<L44>:
  goto <bb 60> (<L36>);

  <bb 41>:
  # DEBUG D#8 => &D.76193
  # DEBUG __p => _234
  # DEBUG this => D#8
  MEM[(char * *)&D.76193] = _234;
  __dnew.15_235 = __dnew;
  # DEBUG D#9 => &D.76193
  # DEBUG __capacity => __dnew.15_235
  # DEBUG this => D#9
  MEM[(size_type *)&D.76193 + 16B] = __dnew.15_235;
  # DEBUG D#2 => &D.76193
  # DEBUG this => D#2
  # DEBUG __p => _234
  # DEBUG __k1 => _212
  # DEBUG __k2 => _209
  # DEBUG __d => _234
  # DEBUG __s => _212
  # DEBUG __n => __dnew.14_233
  goto <bb 44>;

  <bb 42>:
  # DEBUG D#2 => &D.76193
  # DEBUG this => D#2
  # DEBUG __p => &D.76193.D.11612._M_local_buf
  # DEBUG __k1 => _212
  # DEBUG __k2 => _209
  # DEBUG __d => &D.76193.D.11612._M_local_buf
  # DEBUG __s => _212
  # DEBUG __n => __dnew.14_233
  if (__dnew.14_233 == 1)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  _237 = MEM[(const char_type &)_212];
  # DEBUG D#13 => _212
  # DEBUG __c1 => &D.76193.D.11612._M_local_buf
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.76193 + 16] = _237;
  goto <bb 45>;

  <bb 44>:
  # _308 = PHI <&D.76193.D.11612._M_local_buf(42), _234(41)>
  # DEBUG D#2 => &D.76193
  # DEBUG this => D#2
  # DEBUG __p => _308
  # DEBUG __k1 => _212
  # DEBUG __k2 => _209
  # DEBUG __d => _308
  # DEBUG __s => _212
  # DEBUG __n => __dnew.14_233
  # DEBUG __s1 => _308
  # DEBUG __s2 => _212
  # DEBUG __n => __dnew.14_233
  __builtin_memcpy (_308, _212, __dnew.14_233);
  pretmp_161 = __dnew;
  pretmp_147 = MEM[(char * *)&D.76193];

  <bb 45>:
  # prephitmp_146 = PHI <__dnew.14_233(43), pretmp_161(44)>
  # prephitmp_148 = PHI <&D.76193.D.11612._M_local_buf(43), pretmp_147(44)>
  # DEBUG D#470 => __dnew
  # DEBUG this => &D.76193
  # DEBUG __n => D#470
  # DEBUG D#10 => &D.76193
  # DEBUG __length => D#470
  # DEBUG this => D#10
  MEM[(size_type *)&D.76193 + 8B] = prephitmp_146;
  # DEBUG D#2 => &D.76193
  # DEBUG this => D#2
  _240 = prephitmp_148 + prephitmp_146;
  # DEBUG __c1 => _240
  # DEBUG __c2 => D#13
  MEM[(char_type &)_240] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.64644
  # DEBUG __str => &D.76193
  # DEBUG this => &D.64644
  # DEBUG __str => &D.76193
  std::__cxx11::basic_string<char>::_M_assign (&D.64644, &D.76193);

  <bb 46>:
  # DEBUG this => &D.76193
  # DEBUG this => &D.76193
  # DEBUG this => &D.76193
  _213 = MEM[(char * *)&D.76193];
  # DEBUG D#2 => &D.76193
  # DEBUG this => D#2
  # DEBUG this => &D.76193
  if (&D.76193.D.11612._M_local_buf != _213)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#75 => D.76193.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.76193
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.76193
  # DEBUG this => D#2
  # DEBUG this => &D.76193
  # DEBUG D#72 => &D.76193._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _213
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _213
  # DEBUG this => D#66
  # DEBUG D.76116 => D#67
  operator delete (_213);

  <bb 48>:
  # DEBUG D#76 => &D.76193._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.76193 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 64>;

  <bb 49>:
  # DEBUG this => &D.64644
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => &D.64644
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.64644, &MEM[(const struct basic_stringbuf *)&name + 8B]._M_string);
  goto <bb 64>;

<L45>:
  goto <bb 60> (<L36>);

<L34>:
  # DEBUG this => &D.76194
  # DEBUG this => &D.76194
  # DEBUG this => &D.76194
  _215 = MEM[(char * *)&D.76194];
  # DEBUG D#2 => &D.76194
  # DEBUG this => D#2
  # DEBUG this => &D.76194
  if (&D.76194.D.11612._M_local_buf != _215)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  # DEBUG D#75 => D.76194.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.76194
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.76194
  # DEBUG this => D#2
  # DEBUG this => &D.76194
  # DEBUG D#72 => &D.76194._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _215
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _215
  # DEBUG this => D#66
  # DEBUG D.76097 => D#67
  operator delete (_215);

  <bb 53>:
  # DEBUG D#76 => &D.76194._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.76194 ={v} {CLOBBER};
  resx 29

<L46>:
  goto <bb 60> (<L36>);

<L35>:
  # DEBUG this => &D.76193
  # DEBUG this => &D.76193
  # DEBUG this => &D.76193
  _216 = MEM[(char * *)&D.76193];
  # DEBUG D#2 => &D.76193
  # DEBUG this => D#2
  # DEBUG this => &D.76193
  if (&D.76193.D.11612._M_local_buf != _216)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # DEBUG D#75 => D.76193.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.76193
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.76193
  # DEBUG this => D#2
  # DEBUG this => &D.76193
  # DEBUG D#72 => &D.76193._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _216
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _216
  # DEBUG this => D#66
  # DEBUG D.76081 => D#67
  operator delete (_216);

  <bb 57>:
  # DEBUG D#76 => &D.76193._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.76193 ={v} {CLOBBER};
  resx 28

<L47>:
  goto <bb 60> (<L36>);

<L43>:

<L36>:
  # DEBUG this => &D.64644
  # DEBUG this => &D.64644
  # DEBUG this => &D.64644
  _217 = MEM[(char * *)&D.64644];
  # DEBUG D#2 => &D.64644
  # DEBUG this => D#2
  # DEBUG this => &D.64644
  if (&D.64644.D.11612._M_local_buf != _217)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  # DEBUG D#75 => D.64644.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.64644
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.64644
  # DEBUG this => D#2
  # DEBUG this => &D.64644
  # DEBUG D#72 => &D.64644._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _217
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _217
  # DEBUG this => D#66
  # DEBUG D.76070 => D#67
  operator delete (_217);

  <bb 62>:
  # DEBUG D#76 => &D.64644._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  resx 27

<L48>:
  goto <bb 130> (<L23>);

  <bb 64>:
  _28 = Network::New (_15, &D.64644);

  <bb 65>:
  *_61 = _28;
  # DEBUG this => &D.64644
  # DEBUG this => &D.64644
  # DEBUG this => &D.64644
  _26 = MEM[(char * *)&D.64644];
  # DEBUG D#2 => &D.64644
  # DEBUG this => D#2
  # DEBUG this => &D.64644
  if (&D.64644.D.11612._M_local_buf != _26)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # DEBUG D#75 => D.64644.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.64644
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.64644
  # DEBUG this => D#2
  # DEBUG this => &D.64644
  # DEBUG D#72 => &D.64644._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _26
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _26
  # DEBUG this => D#66
  # DEBUG D.73755 => D#67
  operator delete (_26);

  <bb 67>:
  # DEBUG D#76 => &D.64644._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.64644 ={v} {CLOBBER};
  # DEBUG this => &name
  name.D.26892._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&name + 112B].D.20691._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &name._M_stringbuf
  MEM[(struct basic_stringbuf *)&name + 8B].D.26742._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#79 => &MEM[(struct basic_stringbuf *)&name + 8B]._M_string
  # DEBUG this => D#79
  # DEBUG this => D#79
  # DEBUG this => D#79
  _31 = MEM[(char * *)&name + 80B];
  # DEBUG D#2 => D#79
  # DEBUG this => D#2
  # DEBUG this => D#79
  if (&MEM[(const struct basic_string *)&name + 80B].D.11612._M_local_buf != _31)
    goto <bb 68>;
  else
    goto <bb 69>;

  <bb 68>:
  # DEBUG D#75 => MEM[(struct basic_string *)D#79].D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => D#79
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => D#79
  # DEBUG this => D#2
  # DEBUG this => D#79
  # DEBUG D#72 => &MEM[(struct basic_string *)D#79]._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _31
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _31
  # DEBUG this => D#66
  # DEBUG D.76269 => D#67
  operator delete (_31);

  <bb 69>:
  # DEBUG D#76 => &MEM[(struct basic_string *)D#79]._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  MEM[(struct  &)&name + 80] ={v} {CLOBBER};
  # DEBUG D#78 => &MEM[(struct basic_stringbuf *)&name + 8B].D.26742
  # DEBUG this => D#78
  MEM[(struct basic_streambuf *)&name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&name + 8B]._M_buf_locale);
  MEM[(struct  &)&name + 8] ={v} {CLOBBER};
  # DEBUG this => &name.D.26892
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.71_243 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  _244 = MEM[(long int *)iftmp.71_243 + -24B];
  iftmp.72_245 = (sizetype) _244;
  _246 = &name.D.26892 + iftmp.72_245;
  iftmp.73_247 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _246->D.20691._vptr.ios_base = iftmp.73_247;
  MEM[(struct  &)&name] ={v} {CLOBBER};
  # DEBUG D#83 => &name.D.26895
  # DEBUG this => D#83
  MEM[(struct basic_ios *)&name + 112B].D.20691._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&name + 112B].D.20691);
  goto <bb 71>;

<L49>:
  goto <bb 139> (<L29>);

  <bb 71>:
  name ={v} {CLOBBER};
  i_33 = i_271 + 1;
  # DEBUG i => i_33
  # DEBUG i => i_33
  if (subnets_17 <= i_33)
    goto <bb 11>;
  else
    goto <bb 72>;

  <bb 72>:
  goto <bb 13>;

  <bb 73>:
  __assert_fail ("trafficManager == __null", "main.cpp", 117, &__PRETTY_FUNCTION__);

  <bb 74>:
  _40 = TrafficManager::New (_15, &net);
  goto <bb 76>;

<L50>:
  goto <bb 139> (<L29>);

  <bb 76>:
  trafficManager = _40;
  # DEBUG total_time => 0.0
  gettimeofday (&start_time, 0B);
  trafficManager.42_43 = trafficManager;
  result_45 = TrafficManager::Run (trafficManager.42_43);
  goto <bb 78>;

<L51>:
  goto <bb 139> (<L29>);

  <bb 78>:
  # DEBUG result => result_45
  gettimeofday (&end_time, 0B);
  _47 = end_time.tv_sec;
  _48 = (double) _47;
  _49 = end_time.tv_usec;
  _50 = (double) _49;
  _51 = _50 / 1.0e+6;
  _52 = _48 + _51;
  _53 = start_time.tv_sec;
  _54 = (double) _53;
  _55 = start_time.tv_usec;
  _56 = (double) _55;
  _57 = _56 / 1.0e+6;
  _58 = _54 + _57;
  total_time_59 = _52 - _58;
  # DEBUG total_time => total_time_59
  # DEBUG __out => &cout
  # DEBUG __s => "Total run time "
  # DEBUG __s => "Total run time "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Total run time ", 15);
  goto <bb 80>;

<L52>:
  goto <bb 139> (<L29>);

  <bb 80>:
  # DEBUG this => &cout
  # DEBUG __f => total_time_59
  _60 = std::basic_ostream<char>::_M_insert<double> (&cout, total_time_59);
  goto <bb 82>;

<L53>:
  goto <bb 139> (<L29>);

  <bb 82>:
  # DEBUG this => _60
  # DEBUG __pf => endl
  # DEBUG __os => _60
  _251 = MEM[(struct basic_ostream *)_60]._vptr.basic_ostream;
  _252 = MEM[(long int *)_251 + -24B];
  _253 = (sizetype) _252;
  _254 = _60 + _253;
  # DEBUG this => _254
  # DEBUG __c => 10
  _134 = MEM[(const struct basic_ios *)_254]._M_ctype;
  # DEBUG __f => _134
  if (_134 == 0B)
    goto <bb 83>;
  else
    goto <bb 85>;

  <bb 83>:
  std::__throw_bad_cast ();

<L54>:
  goto <bb 139> (<L29>);

  <bb 85>:
  # DEBUG this => _134
  # DEBUG __c => 10
  _259 = MEM[(const struct ctype *)_134]._M_widen_ok;
  if (_259 != 0)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  _262 = MEM[(const struct ctype *)_134]._M_widen[10];
  pretmp_394 = (int) _262;
  goto <bb 93>;

  <bb 87>:
  # DEBUG this => _134
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_134);
  goto <bb 89>;

<L55>:
  goto <bb 139> (<L29>);

  <bb 89>:
  _267 = MEM[(const struct ctype *)_134].D.17655._vptr.facet;
  _268 = MEM[(int (*__vtbl_ptr_type) () *)_267 + 48B];
  PROF_272 = [obj_type_ref] OBJ_TYPE_REF(_268;(const struct ctype)_134->6);
  if (PROF_272 == do_widen)
    goto <bb 93>;
  else
    goto <bb 90>;

  <bb 90>:
  _274 = OBJ_TYPE_REF(_268;(const struct ctype)_134->6) (_134, 10);
  goto <bb 92>;

<L56>:
  goto <bb 139> (<L29>);

  <bb 92>:
  pretmp_395 = (int) _274;

  <bb 93>:
  # prephitmp_152 = PHI <pretmp_394(86), 10(89), pretmp_395(92)>
  _257 = std::basic_ostream<char>::put (_60, prephitmp_152);
  goto <bb 95>;

<L57>:
  goto <bb 139> (<L29>);

  <bb 95>:
  # DEBUG __os => _257
  std::basic_ostream<char>::flush (_257);
  goto <bb 97>;

<L58>:
  goto <bb 139> (<L29>);

  <bb 97>:
  # DEBUG i => 0
  if (subnets_17 <= 0)
    goto <bb 98>;
  else
    goto <bb 99>;

  <bb 98>:
  trafficManager.42_85 = trafficManager;
  if (trafficManager.42_85 != 0B)
    goto <bb 117>;
  else
    goto <bb 116>;

  <bb 99>:

  <bb 100>:
  # i_270 = PHI <0(99), i_81(113)>
  # DEBUG i => i_270
  # DEBUG D#28 => &D.64652
  # DEBUG this => D#28
  # DEBUG D#27 => D#28
  # DEBUG this => D#27
  # DEBUG D#124 => &D.64652
  # DEBUG this => &D.64653
  # DEBUG __s => "sim_power"
  # DEBUG __a => D#124
  # DEBUG D#123 => D#124
  # DEBUG this => &D.64653
  # DEBUG D#121 => &D.64653._M_dataplus
  # DEBUG D#61 => D#123
  # DEBUG this => D#121
  # DEBUG __dat => &D.64653.D.11612._M_local_buf
  # DEBUG __a => D#61
  # DEBUG D#60 => D#61
  # DEBUG D#58 => D#121
  # DEBUG D#59 => D#60
  # DEBUG this => D#58
  # DEBUG __a => D#59
  # DEBUG D#57 => D#59
  # DEBUG D#56 => D#58
  # DEBUG this => D#56
  # DEBUG D.70321 => D#57
  MEM[(struct _Alloc_hider *)&D.64653]._M_p = &D.64653.D.11612._M_local_buf;
  # DEBUG __s => "sim_power"
  # DEBUG this => &D.64653
  # DEBUG __beg => "sim_power"
  # DEBUG __end => &MEM[(void *)"sim_power" + 9B]
  # DEBUG this => &D.64653
  # DEBUG __beg => "sim_power"
  # DEBUG __end => &MEM[(void *)"sim_power" + 9B]
  # DEBUG this => &D.64653
  # DEBUG __beg => "sim_power"
  # DEBUG __end => &MEM[(void *)"sim_power" + 9B]
  # DEBUG __ptr => "sim_power"
  # DEBUG __first => "sim_power"
  # DEBUG __last => &MEM[(void *)"sim_power" + 9B]
  # DEBUG D#151 => &__first
  # DEBUG D.71216 => D#151
  # DEBUG __first => "sim_power"
  # DEBUG __last => &MEM[(void *)"sim_power" + 9B]
  # DEBUG __dnew => 9
  # DEBUG D#2 => &D.64653
  # DEBUG this => D#2
  # DEBUG __p => &D.64653.D.11612._M_local_buf
  # DEBUG __k1 => "sim_power"
  # DEBUG __k2 => &MEM[(void *)"sim_power" + 9B]
  # DEBUG __d => &D.64653.D.11612._M_local_buf
  # DEBUG __s => "sim_power"
  # DEBUG __n => 9
  # DEBUG __s1 => &D.64653.D.11612._M_local_buf
  # DEBUG __s2 => "sim_power"
  # DEBUG __n => 9
  __builtin_memcpy (&D.64653.D.11612._M_local_buf, "sim_power", 9);
  # DEBUG this => &D.64653
  # DEBUG __n => 9
  # DEBUG D#10 => &D.64653
  # DEBUG __length => 9
  # DEBUG this => D#10
  MEM[(size_type *)&D.64653 + 8B] = 9;
  # DEBUG D#2 => &D.64653
  # DEBUG this => D#2
  # DEBUG __c1 => &MEM[(void *)&D.64653 + 25B]
  # DEBUG __c2 => D#13
  MEM[(char_type &)&D.64653 + 25] = 0;
  # DEBUG D#468 => {CLOBBER}
  # DEBUG __dnew => D#468
  _64 = Configuration::GetInt (_15, &D.64653);

  <bb 101>:
  # DEBUG this => &D.64653
  # DEBUG this => &D.64653
  # DEBUG this => &D.64653
  _66 = MEM[(char * *)&D.64653];
  # DEBUG D#2 => &D.64653
  # DEBUG this => D#2
  # DEBUG this => &D.64653
  if (&D.64653.D.11612._M_local_buf != _66)
    goto <bb 102>;
  else
    goto <bb 103>;

  <bb 102>:
  # DEBUG D#75 => D.64653.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.64653
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.64653
  # DEBUG this => D#2
  # DEBUG this => &D.64653
  # DEBUG D#72 => &D.64653._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _66
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _66
  # DEBUG this => D#66
  # DEBUG D.73783 => D#67
  operator delete (_66);

  <bb 103>:
  # DEBUG D#76 => &D.64653._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.64653 ={v} {CLOBBER};
  # DEBUG this => &D.64652
  # DEBUG this => &D.64652
  if (_64 > 0)
    goto <bb 105>;
  else
    goto <bb 104>;

  <bb 104>:
  pretmp_421 = (long unsigned int) i_270;
  pretmp_423 = pretmp_421 * 8;
  goto <bb 111>;

  <bb 105>:
  _67 = (long unsigned int) i_270;
  _99 = MEM[(struct Network * * *)&net];
  # DEBUG D#26 => &net
  # DEBUG __n => _67
  # DEBUG this => D#26
  _101 = _67 * 8;
  _102 = _99 + _101;
  _69 = *_102;
  Power_Module::Power_Module (&pnet, _69, _15);
  goto <bb 107>;

<L59>:
  goto <bb 139> (<L29>);

  <bb 107>:
  Power_Module::run (&pnet);

  <bb 108>:
  Power_Module::~Power_Module (&pnet);
  goto <bb 110>;

<L60>:
  goto <bb 139> (<L29>);

  <bb 110>:
  pnet ={v} {CLOBBER};

  <bb 111>:
  # prephitmp_427 = PHI <pretmp_423(104), _101(110)>
  _100 = MEM[(struct Network * * *)&net];
  # DEBUG D#26 => &net
  # DEBUG __n => (long unsigned int) i_270
  # DEBUG this => D#26
  _104 = _100 + prephitmp_427;
  _77 = *_104;
  if (_77 != 0B)
    goto <bb 114>;
  else
    goto <bb 112>;

  <bb 112>:
  i_81 = i_270 + 1;
  # DEBUG i => i_81
  # DEBUG i => i_81
  if (subnets_17 <= i_81)
    goto <bb 98>;
  else
    goto <bb 113>;

  <bb 113>:
  goto <bb 100>;

  <bb 114>:
  _78 = _77->D.48754.D.35494._vptr.Module;
  _79 = MEM[(int (*__vtbl_ptr_type) () *)_78 + 8B];
  OBJ_TYPE_REF(_79;(struct Network)_77->1) (_77);
  goto <bb 112>;

<L61>:
  goto <bb 139> (<L29>);

  <bb 116>:
  trafficManager = 0B;
  # DEBUG this => &net
  # DEBUG D#104 => &net.D.51800
  # DEBUG this => D#104
  # DEBUG D#107 => net.D.51800._M_impl._M_finish
  # DEBUG D#106 => net.D.51800._M_impl._M_start
  # DEBUG __first => D#106
  # DEBUG __last => D#107
  # DEBUG D.70659 => NULL
  # DEBUG D#50 => D#106
  # DEBUG D#51 => D#107
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.70290 => D#46
  # DEBUG D.70289 => D#47
  # DEBUG D#105 => &net.D.51800
  # DEBUG this => D#105
  # DEBUG D#103 => D#105->_M_impl._M_end_of_storage
  # DEBUG D#102 => (long int) D#103
  _105 = MEM[(struct _Vector_base *)&net]._M_impl._M_start;
  # DEBUG D#101 => (long int) _105
  # DEBUG D#100 => D#102 - D#101
  # DEBUG D#99 => D#100 /[ex] 8
  # DEBUG D#98 => (long unsigned int) D#99
  # DEBUG this => D#105
  # DEBUG __p => _105
  # DEBUG __n => D#98
  if (_105 != 0B)
    goto <bb 119>;
  else
    goto <bb 120>;

  <bb 117>:
  _86 = trafficManager.42_85->D.62782._vptr.Module;
  _87 = MEM[(int (*__vtbl_ptr_type) () *)_86 + 8B];
  OBJ_TYPE_REF(_87;(struct TrafficManager)trafficManager.42_85->1) (trafficManager.42_85);
  goto <bb 116>;

<L62>:
  goto <bb 139> (<L29>);

  <bb 119>:
  # DEBUG D#96 => &D#105->_M_impl
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#98
  # DEBUG __p => _105
  # DEBUG __a => D#94
  # DEBUG __n => D#95
  # DEBUG D#93 => D#95
  # DEBUG D#92 => D#94
  # DEBUG D#90 => D#92
  # DEBUG D#91 => D#93
  # DEBUG __p => _105
  # DEBUG this => D#90
  # DEBUG D.73808 => D#91
  operator delete (_105);

  <bb 120>:
  # DEBUG D#97 => &D#105->_M_impl
  # DEBUG this => D#97
  # DEBUG this => D#97
  # DEBUG this => D#97
  net ={v} {CLOBBER};
  start_time ={v} {CLOBBER};
  end_time ={v} {CLOBBER};
  return result_45;

<L20>:
  # DEBUG this => &D.64593
  # DEBUG this => &D.64593
  # DEBUG this => &D.64593
  _90 = MEM[(char * *)&D.64593];
  # DEBUG D#2 => &D.64593
  # DEBUG this => D#2
  # DEBUG this => &D.64593
  if (&D.64593.D.11612._M_local_buf != _90)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  # DEBUG D#75 => D.64593.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.64593
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.64593
  # DEBUG this => D#2
  # DEBUG this => &D.64593
  # DEBUG D#72 => &D.64593._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _90
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _90
  # DEBUG this => D#66
  # DEBUG D.73821 => D#67
  operator delete (_90);

  <bb 123>:
  # DEBUG D#76 => &D.64593._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.64593 ={v} {CLOBBER};
  resx 4

<L63>:
  goto <bb 139> (<L29>);

<L22>:
  # DEBUG this => &D.64644
  # DEBUG this => &D.64644
  # DEBUG this => &D.64644
  _96 = MEM[(char * *)&D.64644];
  # DEBUG D#2 => &D.64644
  # DEBUG this => D#2
  # DEBUG this => &D.64644
  if (&D.64644.D.11612._M_local_buf != _96)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  # DEBUG D#75 => D.64644.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.64644
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.64644
  # DEBUG this => D#2
  # DEBUG this => &D.64644
  # DEBUG D#72 => &D.64644._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _96
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _96
  # DEBUG this => D#66
  # DEBUG D.73838 => D#67
  operator delete (_96);

  <bb 127>:
  # DEBUG D#76 => &D.64644._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.64644 ={v} {CLOBBER};
  resx 9

<L64>:
  goto <bb 130> (<L23>);

<L41>:

<L23>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&name);
  resx 8

<L65>:
  goto <bb 139> (<L29>);

<L25>:
  # DEBUG this => &D.64653
  # DEBUG this => &D.64653
  # DEBUG this => &D.64653
  _34 = MEM[(char * *)&D.64653];
  # DEBUG D#2 => &D.64653
  # DEBUG this => D#2
  # DEBUG this => &D.64653
  if (&D.64653.D.11612._M_local_buf != _34)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  # DEBUG D#75 => D.64653.D.11612._M_allocated_capacity
  # DEBUG D#74 => D#75
  # DEBUG this => &D.64653
  # DEBUG __size => D#74
  # DEBUG D#73 => D#74
  # DEBUG D#2 => &D.64653
  # DEBUG this => D#2
  # DEBUG this => &D.64653
  # DEBUG D#72 => &D.64653._M_dataplus
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73 + 1
  # DEBUG __p => _34
  # DEBUG __a => D#70
  # DEBUG __n => D#71
  # DEBUG D#69 => D#71
  # DEBUG D#68 => D#70
  # DEBUG D#66 => D#68
  # DEBUG D#67 => D#69
  # DEBUG __p => _34
  # DEBUG this => D#66
  # DEBUG D.73853 => D#67
  operator delete (_34);

  <bb 134>:
  # DEBUG D#76 => &D.64653._M_dataplus
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  D.64653 ={v} {CLOBBER};
  resx 14

<L66>:
  goto <bb 139> (<L29>);

<L27>:
  Power_Module::~Power_Module (&pnet);
  resx 18

<L67>:
  goto <bb 139> (<L29>);

<L37>:

<L29>:
  pnet ={v} {CLOBBER};
  name ={v} {CLOBBER};
  # DEBUG this => &net
  # DEBUG D#104 => &net.D.51800
  # DEBUG this => D#104
  # DEBUG D#107 => net.D.51800._M_impl._M_finish
  # DEBUG D#106 => net.D.51800._M_impl._M_start
  # DEBUG __first => D#106
  # DEBUG __last => D#107
  # DEBUG D.70659 => NULL
  # DEBUG D#50 => D#106
  # DEBUG D#51 => D#107
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.70290 => D#46
  # DEBUG D.70289 => D#47
  # DEBUG D#105 => &net.D.51800
  # DEBUG this => D#105
  # DEBUG D#103 => D#105->_M_impl._M_end_of_storage
  # DEBUG D#102 => (long int) D#103
  _84 = MEM[(struct _Vector_base *)&net]._M_impl._M_start;
  # DEBUG D#101 => (long int) _84
  # DEBUG D#100 => D#102 - D#101
  # DEBUG D#99 => D#100 /[ex] 8
  # DEBUG D#98 => (long unsigned int) D#99
  # DEBUG this => D#105
  # DEBUG __p => _84
  # DEBUG __n => D#98
  if (_84 != 0B)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  # DEBUG D#96 => &D#105->_M_impl
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#98
  # DEBUG __p => _84
  # DEBUG __a => D#94
  # DEBUG __n => D#95
  # DEBUG D#93 => D#95
  # DEBUG D#92 => D#94
  # DEBUG D#90 => D#92
  # DEBUG D#91 => D#93
  # DEBUG __p => _84
  # DEBUG this => D#90
  # DEBUG D.73872 => D#91
  operator delete (_84);

  <bb 141>:
  # DEBUG D#97 => &D#105->_M_impl
  # DEBUG this => D#97
  # DEBUG this => D#97
  # DEBUG this => D#97
  resx 2

  <bb 142>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L68>:
  goto <bb 60> (<L36>);

  <bb 144>:
  # DEBUG __first => _210
  # DEBUG __last => _208
  # DEBUG D#151 => &__first
  # DEBUG D.71216 => D#151
  # DEBUG __first => _210
  # DEBUG __last => _208
  __last.17_218 = (long int) _208;
  __first.18_219 = (long int) _210;
  _220 = __last.17_218 - __first.18_219;
  __dnew.14_221 = (long unsigned int) _220;
  __dnew = __dnew.14_221;
  if (__dnew.14_221 > 15)
    goto <bb 29>;
  else
    goto <bb 31>;

  <bb 145>:
  # DEBUG __first => _212
  # DEBUG __last => _209
  # DEBUG D#151 => &__first
  # DEBUG D.71216 => D#151
  # DEBUG __first => _212
  # DEBUG __last => _209
  __last.17_230 = (long int) _209;
  __first.18_231 = (long int) _212;
  _232 = __last.17_230 - __first.18_231;
  __dnew.14_233 = (long unsigned int) _232;
  __dnew = __dnew.14_233;
  if (__dnew.14_233 > 15)
    goto <bb 39>;
  else
    goto <bb 42>;

  <bb 146>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L69>:
  goto <bb 60> (<L36>);

}


