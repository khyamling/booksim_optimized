
;; Function yyparse (yyparse, funcdef_no=1, decl_uid=2260, symbol_order=14)


Pass statistics:
----------------

yyparse ()
{
  long unsigned intD.10 yynewbytesD.2313;
  union yyalloc * yyptrD.2312;
  long unsigned intD.10 yysizeD.2309;
  intD.6 yylenD.2306;
  union YYSTYPED.2254 yyvalD.2305;
  intD.6 yytokenD.2304;
  intD.6 yyresultD.2303;
  intD.6 yynD.2302;
  long unsigned intD.10 yystacksizeD.2301;
  union YYSTYPED.2254 * yyvspD.2300;
  union YYSTYPED.2254 yyvsaD.2298[200];
  yytype_int16D.2264 * yysspD.2297;
  yytype_int16D.2264 yyssaD.2295[200];
  intD.6 yyerrstatusD.2294;
  intD.6 yystateD.2293;
  short intD.15 _44;
  sizetype _47;
  yytype_int16D.2264 * _48;
  long intD.8 yyssp.0_49;
  long intD.8 yyss.1_50;
  long intD.8 _51;
  long intD.8 _52;
  long intD.8 _53;
  long unsigned intD.10 _55;
  long unsigned intD.10 _56;
  long unsigned intD.10 _59;
  long unsigned intD.10 _62;
  long unsigned intD.10 _64;
  long unsigned intD.10 _65;
  long unsigned intD.10 _67;
  sizetype _71;
  sizetype _73;
  sizetype _75;
  yytype_int16D.2264 * _76;
  signed charD.17 _78;
  intD.6 yychar.2_80;
  intD.6 yychar.3_82;
  unsigned charD.18 _87;
  unsigned int yyn.6_90;
  signed charD.17 _91;
  intD.6 _92;
  unsigned charD.18 _93;
  unsigned charD.18 _100;
  intD.6 yynerrs.10_102;
  intD.6 yynerrs.11_103;
  intD.6 yychar.2_106;
  short intD.15 _112;
  unsigned int yyn.6_115;
  signed charD.17 _116;
  unsigned charD.18 _117;
  unsigned charD.18 _122;
  intD.6 _124;
  long unsigned intD.10 _125;
  long unsigned intD.10 _126;
  union YYSTYPED.2254 * _127;
  charD.7 * _129;
  charD.7 * _130;
  intD.6 _134;
  charD.7 * _135;
  doubleD.32 _138;
  charD.7 * _139;
  unsigned charD.18 _151;
  intD.6 _153;
  signed charD.17 _154;
  intD.6 _155;
  short intD.15 _156;
  intD.6 _157;
  unsigned int yystate.7_159;
  signed charD.17 _160;
  short intD.15 _161;
  unsigned charD.18 _162;
  signed charD.17 _164;
  long unsigned intD.10 pretmp_246;
  long unsigned intD.10 pretmp_247;
  long unsigned intD.10 pretmp_248;
  long unsigned intD.10 pretmp_249;
  long unsigned intD.10 pretmp_251;
  long unsigned intD.10 pretmp_252;
  long unsigned intD.10 pretmp_253;
  long unsigned intD.10 pretmp_254;
  sizetype pretmp_256;
  sizetype pretmp_257;
  sizetype pretmp_258;
  sizetype pretmp_259;
  sizetype prephitmp_260;
  long unsigned intD.10 pretmp_261;
  long unsigned intD.10 pretmp_262;
  long unsigned intD.10 pretmp_263;
  long unsigned intD.10 pretmp_264;
  sizetype pretmp_266;
  sizetype pretmp_267;
  sizetype pretmp_268;
  sizetype pretmp_269;
  sizetype prephitmp_270;
  const yytype_int8D.2262 pretmp_276;
  const yytype_int8D.2262 prephitmp_277;
  intD.6 prephitmp_282;

;;   basic block 2, loop depth 0, count 0, freq 505, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG yytokenD.2304 => 0
  # DEBUG yylenD.2306 => 0
  # DEBUG yyssD.2296 => &yyssaD.2295
  # DEBUG yysspD.2297 => &yyssaD.2295
  # DEBUG yyvsD.2299 => &yyvsaD.2298
  # DEBUG yyvspD.2300 => &yyvsaD.2298
  # DEBUG yystacksizeD.2301 => 200
  # DEBUG yystateD.2293 => 0
  # DEBUG yyerrstatusD.2294 => 0
  # .MEM_42 = VDEF <.MEM_41(D)>
  yynerrsD.2289 = 0;
  # .MEM_43 = VDEF <.MEM_42>
  yycharD.2287 = -2;
  goto <bb 4> (yysetstate);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 3, loop depth 1, count 0, freq 650, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-128, 255]
  # yystate_1 = PHI <yystate_94(26), yystate_165(36), yystate_274(52), yystate_163(35)>
  # RANGE [0, 2147483647] NONZERO 0x0000000007fffffff
  # yyerrstatus_4 = PHI <yyerrstatus_6(26), yyerrstatus_5(36), 3(52), yyerrstatus_5(35)>
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  # yyssp_10 = PHI <yyssp_12(26), yyssp_148(36), yyssp_280(52), yyssp_148(35)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_16 = PHI <yyvsp_97(26), yyvsp_149(36), yyvsp_119(52), yyvsp_149(35)>
  # .MEM_27 = PHI <.MEM_98(26), .MEM_150(36), .MEM_120(52), .MEM_150(35)>
yynewstateL.0:
  # DEBUG yylenD.2306 => 0
  # DEBUG yyvspD.2300 => yyvsp_16
  # DEBUG yysspD.2297 => yyssp_10
  # DEBUG yyerrstatusD.2294 => yyerrstatus_4
  # DEBUG yystateD.2293 => yystate_1
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  yyssp_166 = yyssp_10 + 2;
  # DEBUG yysspD.2297 => yyssp_166
;;    succ:       4 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 1155, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [-128, 255]
  # yystate_2 = PHI <0(2), yystate_1(3)>
  # RANGE [0, 2147483647] NONZERO 0x0000000007fffffff
  # yyerrstatus_5 = PHI <0(2), yyerrstatus_4(3)>
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_7 = PHI <&yyssaD.2295(2), yyssp_8(3)>
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  # yyssp_11 = PHI <&yyssaD.2295(2), yyssp_166(3)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_14 = PHI <&yyvsaD.2298(2), yyvsp_15(3)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_17 = PHI <&yyvsaD.2298(2), yyvsp_16(3)>
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff8
  # yystacksize_20 = PHI <200(2), yystacksize_22(3)>
  # .MEM_28 = PHI <.MEM_43(2), .MEM_27(3)>
yysetstateL.1:
  # DEBUG yylenD.2306 => 0
  # DEBUG yystacksizeD.2301 => yystacksize_20
  # DEBUG yyvspD.2300 => yyvsp_17
  # DEBUG yyvsD.2299 => yyvsp_14
  # DEBUG yysspD.2297 => yyssp_11
  # DEBUG yyssD.2296 => yyssp_7
  # DEBUG yyerrstatusD.2294 => yyerrstatus_5
  # DEBUG yystateD.2293 => yystate_2
  # RANGE [-128, 255]
  _44 = (short intD.15) yystate_2;
  # .MEM_45 = VDEF <.MEM_28>
  *yyssp_11 = _44;
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff0
  yystacksize_46 = yystacksize_20 * 2;
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffffe
  _47 = yystacksize_46 + 18446744073709551614;
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 6
  _48 = yyssp_7 + _47;
  if (yyssp_11 >= _48)
    goto <bb 5>;
  else
    goto <bb 12>;
;;    succ:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 578, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 0x0fffffffffffffffe
  yyssp.0_49 = (long intD.8) yyssp_11;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 0x0fffffffffffffff8
  yyss.1_50 = (long intD.8) yyssp_7;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 0x0fffffffffffffffe
  _51 = yyssp.0_49 - yyss.1_50;
  # RANGE [-4611686018427387904, 4611686018427387903]
  _52 = _51 /[ex] 2;
  # RANGE [-4611686018427387903, 4611686018427387904]
  _53 = _52 + 1;
  # RANGE ~[4611686018427387905, 13835058055282163712]
  yysize_54 = (long unsigned intD.10) _53;
  # DEBUG yysizeD.2309 => yysize_54
  if (yystacksize_20 > 9999)
    goto <bb 53>;
  else
    goto <bb 6>;
;;    succ:       53 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 566, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [98.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG yystacksizeD.2301 => yystacksize_46
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff0
  yystacksize_176 = MIN_EXPR <yystacksize_46, 10000>;
  # DEBUG yystacksizeD.2301 => yystacksize_176
  # DEBUG yyss1D.2311 => yyssp_7
  # RANGE [0, 18446744073709551615] NONZERO 0x0ffffffffffffffe0
  _55 = yystacksize_176 * 10;
  # RANGE [0, 18446744073709551615] NONZERO 0x0ffffffffffffffe7
  _56 = _55 + 7;
  # .MEM_57 = VDEF <.MEM_45>
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # USE = nonlocal null 
  # CLB = nonlocal null 
  yyptr_58 = mallocD.978 (_56);
  # DEBUG yyptrD.2312 => yyptr_58
  if (yyptr_58 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_285 = PHI <yyssp_7(6)>
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 555, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [98.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551614] NONZERO 0x0fffffffffffffffe
  _59 = yysize_54 * 2;
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyssp_60 = &yyptr_58->yyss_allocD.2270;
  # .MEM_61 = VDEF <.MEM_57>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  memcpyD.687 (yyssp_60, yyssp_7, _59);
  # DEBUG yyssD.2296 => yyssp_60
  # RANGE [0, 18446744073709551615] NONZERO 0x0ffffffffffffffe0
  _62 = yystacksize_176 * 2;
  # RANGE [0, 18446744073709551615] NONZERO 0x0ffffffffffffffe7
  yynewbytes_63 = _62 + 7;
  # DEBUG yynewbytesD.2313 => yynewbytes_63
  # RANGE [0, 2305843009213693951] NONZERO 0x01ffffffffffffffc
  _64 = yynewbytes_63 >> 3;
  # RANGE [0, 18446744073709551608] NONZERO 0x0ffffffffffffffe0
  _65 = _64 * 8;
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyptr_66 = yyptr_58 + _65;
  # DEBUG yyptrD.2312 => yyptr_66
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff8
  _67 = yysize_54 * 8;
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_68 = &yyptr_66->yyvs_allocD.2271;
  # .MEM_69 = VDEF <.MEM_61>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  memcpyD.687 (yyvsp_68, yyvsp_14, _67);
  # DEBUG yyvsD.2299 => yyvsp_68
  # DEBUG D#7ptD.0 => yystacksize_176 * 8
  # DEBUG D#6ptD.0 => D#7ptD.0 + 7
  # DEBUG yynewbytesD.2314 => D#6ptD.0
  # DEBUG D#5ptD.0 => D#6ptD.0 / 8
  # DEBUG D#4ptD.0 => D#5ptD.0 * 8
  # DEBUG yyptrD.2312 => yyptr_66 + D#4ptD.0
  if (&yyssaD.2295 != yyssp_7)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 387, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_70 = VDEF <.MEM_69>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (yyssp_7);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 555, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_69(8), .MEM_70(9)>
  # RANGE ~[18446744073709551613, 18446744073709551613] NONZERO 0x0fffffffffffffffe
  _71 = _59 + 18446744073709551614;
  # PT = { D.2500 }
  # ALIGN = 2, MISALIGN = 0
  yyssp_72 = yyssp_60 + _71;
  # DEBUG yysspD.2297 => yyssp_72
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff8
  _73 = _67 + 18446744073709551608;
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_74 = yyvsp_68 + _73;
  # DEBUG yyvspD.2300 => yyvsp_74
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffffe
  _75 = _62 + 18446744073709551614;
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 6
  _76 = yyssp_60 + _75;
  if (yyssp_72 >= _76)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_275 = PHI <yyssp_60(10)>
  goto <bb 55> (yyacceptlab);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 1121, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [98.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_8 = PHI <yyssp_7(4), yyssp_60(10)>
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  # yyssp_12 = PHI <yyssp_11(4), yyssp_72(10)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_15 = PHI <yyvsp_14(4), yyvsp_68(10)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_18 = PHI <yyvsp_17(4), yyvsp_74(10)>
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff8
  # yystacksize_22 = PHI <yystacksize_20(4), yystacksize_176(10)>
  # .MEM_30 = PHI <.MEM_45(4), .MEM_29(10)>
  # DEBUG yystacksizeD.2301 => yystacksize_22
  # DEBUG yyvspD.2300 => yyvsp_18
  # DEBUG yyvsD.2299 => yyvsp_15
  # DEBUG yysspD.2297 => yyssp_12
  # DEBUG yyssD.2296 => yyssp_8
  if (yystate_2 == 5)
    goto <bb 13>;
  else
    goto <bb 14> (yybackup);
;;    succ:       13 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_284 = PHI <yyssp_8(12)>
  goto <bb 55> (yyacceptlab);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 1099, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [98.0%]  (FALSE_VALUE,EXECUTABLE)
yybackupL.12:
  # VUSE <.MEM_30>
  _78 = yypactD.2273[yystate_2];
  # RANGE [-128, 127]
  yyn_79 = (intD.6) _78;
  # DEBUG yynD.2302 => yyn_79
  if (yyn_79 == -5)
    goto <bb 27>;
  else
    goto <bb 15>;
;;    succ:       27 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 791, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_30>
  yychar.2_80 = yycharD.2287;
  if (yychar.2_80 == -2)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [13.7%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [86.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 108, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [13.7%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_81 = VDEF <.MEM_30>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  yychar.3_82 = yylexD.2237 ();
  # .MEM_83 = VDEF <.MEM_81>
  yycharD.2287 = yychar.3_82;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 791, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [86.3%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_31 = PHI <.MEM_30(15), .MEM_83(16)>
  # prephitmp_282 = PHI <yychar.2_80(15), yychar.3_82(16)>
  if (prephitmp_282 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 214, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG yytokenD.2304 => 0
  # .MEM_85 = VDEF <.MEM_31>
  yycharD.2287 = 0;
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 578, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  if (prephitmp_282 <= 260)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 289, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_31>
  _87 = yytranslateD.2272[prephitmp_282];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yytoken_88 = (intD.6) _87;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 791, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  # yytoken_25 = PHI <0(18), 2(19), yytoken_88(20)>
  # .MEM_32 = PHI <.MEM_85(18), .MEM_31(19), .MEM_31(20)>
  # DEBUG yytokenD.2304 => yytoken_25
  # RANGE [-128, 382]
  yyn_89 = yyn_79 + yytoken_25;
  # DEBUG yynD.2302 => yyn_89
  # RANGE ~[383, 4294967167]
  yyn.6_90 = (unsigned int) yyn_89;
  if (yyn.6_90 > 11)
    goto <bb 27>;
  else
    goto <bb 22>;
;;    succ:       27 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 396, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_32>
  _91 = yycheckD.2278[yyn_89];
  # RANGE [-128, 127]
  _92 = (intD.6) _91;
  if (_92 != yytoken_25)
    goto <bb 27>;
  else
    goto <bb 23>;
;;    succ:       27 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 111, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [28.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_32>
  _93 = yytableD.2277[yyn_89];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yystate_94 = (intD.6) _93;
  # DEBUG yynD.2302 => yystate_94
  if (yystate_94 == 0)
    goto <bb 58>;
  else
    goto <bb 24>;
;;    succ:       58 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 81, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  if (yyerrstatus_5 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 40, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 0x0000000007fffffff
  yyerrstatus_95 = yyerrstatus_5 + -1;
  # DEBUG yyerrstatusD.2294 => yyerrstatus_95
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 81, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 0x0000000007fffffff
  # yyerrstatus_6 = PHI <0(24), yyerrstatus_95(25)>
  # DEBUG yyerrstatusD.2294 => yyerrstatus_6
  # .MEM_96 = VDEF <.MEM_32>
  yycharD.2287 = -2;
  # DEBUG yystateD.2293 => yystate_94
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_97 = yyvsp_18 + 8;
  # DEBUG yyvspD.2300 => yyvsp_97
  # .MEM_98 = VDEF <.MEM_96>
  MEM[(union YYSTYPED.2254 *)yyvsp_18 + 8B] = yylvalD.2258;
  goto <bb 3> (yynewstate);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 989, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       14 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_287 = PHI <.MEM_30(14), .MEM_32(21), .MEM_32(22)>
  # DEBUG yydefaultL.29 => NULL
  # VUSE <.MEM_287>
  _100 = yydefactD.2274[yystate_2];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yyn_101 = (intD.6) _100;
  # DEBUG yynD.2302 => yyn_101
  if (yyn_101 == 0)
    goto <bb 37> (yyerrlab);
  else
    goto <bb 28> (yyreduce);
;;    succ:       37 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 494, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [50.0%]  (FALSE_VALUE,EXECUTABLE)
yyreduceL.31:
  # DEBUG yynD.2302 => yyn_101
  # VUSE <.MEM_287>
  _122 = yyr2D.2281[yyn_101];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yylen_123 = (intD.6) _122;
  # DEBUG yylenD.2306 => yylen_123
  # RANGE [-254, 1]
  _124 = 1 - yylen_123;
  # RANGE ~[2, 18446744073709551361]
  _125 = (long unsigned intD.10) _124;
  # RANGE [0, 18446744073709551608] NONZERO 0x0fffffffffffffff8
  _126 = _125 * 8;
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  _127 = yyvsp_18 + _126;
  # .MEM_128 = VDEF <.MEM_287>
  yyvalD.2305 = *_127;
  switch (_100) <default: <L86>, case 4: <L32>, case 5: <L33>, case 6: <L34>>
;;    succ:       29 [20.4%]  (EXECUTABLE)
;;                30 [26.5%]  (EXECUTABLE)
;;                31 [26.5%]  (EXECUTABLE)
;;                32 [26.5%]  (EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 101, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       28 [20.4%]  (EXECUTABLE)
<L86>:
  pretmp_249 = (long unsigned intD.10) _122;
  pretmp_254 = pretmp_249 * 8;
  pretmp_259 = -pretmp_254;
  pretmp_264 = pretmp_249 * 2;
  pretmp_269 = -pretmp_264;
  goto <bb 33> (<L85>);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 131, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [26.5%]  (EXECUTABLE)
<L32>:
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null 
  _129 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -8B].nameD.2255;
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null 
  _130 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -24B].nameD.2255;
  # .MEM_131 = VDEF <.MEM_128>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  config_assign_stringD.2242 (_130, _129);
  # .MEM_132 = VDEF <.MEM_131>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (_130);
  # .MEM_133 = VDEF <.MEM_132>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (_129);
  pretmp_246 = (long unsigned intD.10) _122;
  pretmp_251 = pretmp_246 * 8;
  pretmp_256 = -pretmp_251;
  pretmp_261 = pretmp_246 * 2;
  pretmp_266 = -pretmp_261;
  goto <bb 33> (<L85>);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 131, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       28 [26.5%]  (EXECUTABLE)
<L33>:
  # VUSE <.MEM_128>
  _134 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -8B].numD.2256;
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null 
  _135 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -24B].nameD.2255;
  # .MEM_136 = VDEF <.MEM_128>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  config_assign_intD.2245 (_135, _134);
  # .MEM_137 = VDEF <.MEM_136>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (_135);
  pretmp_247 = (long unsigned intD.10) _122;
  pretmp_252 = pretmp_247 * 8;
  pretmp_257 = -pretmp_252;
  pretmp_262 = pretmp_247 * 2;
  pretmp_267 = -pretmp_262;
  goto <bb 33> (<L85>);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 131, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       28 [26.5%]  (EXECUTABLE)
<L34>:
  # VUSE <.MEM_128>
  _138 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -8B].fnumD.2257;
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null 
  _139 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -24B].nameD.2255;
  # .MEM_140 = VDEF <.MEM_128>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  config_assign_floatD.2248 (_139, _138);
  # .MEM_141 = VDEF <.MEM_140>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (_139);
  pretmp_248 = (long unsigned intD.10) _122;
  pretmp_253 = pretmp_248 * 8;
  pretmp_258 = -pretmp_253;
  pretmp_263 = pretmp_248 * 2;
  pretmp_268 = -pretmp_263;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 524, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_133(30), .MEM_137(31), .MEM_141(32), .MEM_128(29), .MEM_175(58)>
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  # yyn_177 = PHI <yyn_101(30), yyn_101(31), yyn_101(32), yyn_101(29), 0(58)>
  # RANGE ~[1, 18446744073709549575] NONZERO 0x0fffffffffffffff8
  # prephitmp_260 = PHI <pretmp_256(30), pretmp_257(31), pretmp_258(32), pretmp_259(29), 0(58)>
  # RANGE ~[1, 18446744073709551105] NONZERO 0x0fffffffffffffffe
  # prephitmp_270 = PHI <pretmp_266(30), pretmp_267(31), pretmp_268(32), pretmp_269(29), 0(58)>
<L85>:
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_145 = yyvsp_18 + prephitmp_260;
  # DEBUG yyvspD.2300 => yyvsp_145
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  yyssp_148 = yyssp_12 + prephitmp_270;
  # DEBUG yysspD.2297 => yyssp_148
  # DEBUG yylenD.2306 => 0
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_149 = yyvsp_145 + 8;
  # DEBUG yyvspD.2300 => yyvsp_149
  # .MEM_150 = VDEF <.MEM_35>
  MEM[(union YYSTYPED.2254 *)yyvsp_145 + 8B] = yyvalD.2305;
  # VUSE <.MEM_150>
  _151 = yyr1D.2280[yyn_177];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yyn_152 = (intD.6) _151;
  # DEBUG yynD.2302 => yyn_152
  # RANGE [-8, 247]
  _153 = yyn_152 + -8;
  # VUSE <.MEM_150>
  _154 = yypgotoD.2275[_153];
  # RANGE [-128, 127]
  _155 = (intD.6) _154;
  # VUSE <.MEM_150>
  _156 = *yyssp_148;
  # RANGE [-32768, 32767]
  _157 = (intD.6) _156;
  # RANGE [-32896, 32894]
  yystate_158 = _155 + _157;
  # DEBUG yystateD.2293 => yystate_158
  # RANGE ~[32895, 4294934399]
  yystate.7_159 = (unsigned int) yystate_158;
  if (yystate.7_159 <= 11)
    goto <bb 34>;
  else
    goto <bb 36>;
;;    succ:       34 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 262, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_150>
  _160 = yycheckD.2278[yystate_158];
  # RANGE [-128, 127]
  _161 = (short intD.15) _160;
  if (_156 == _161)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 73, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_150>
  _162 = yytableD.2277[yystate_158];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yystate_163 = (intD.6) _162;
  # DEBUG yystateD.2293 => yystate_163
  goto <bb 3> (yynewstate);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [72.0%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_150>
  _164 = yydefgotoD.2276[_153];
  # RANGE [-128, 127]
  yystate_165 = (intD.6) _164;
  # DEBUG yystateD.2293 => yystate_165
  goto <bb 3> (yynewstate);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 494, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       27 [50.0%]  (TRUE_VALUE,EXECUTABLE)
yyerrlabL.41:
  # DEBUG yytokenD.2304 => -2
  if (yyerrstatus_5 == 0)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 143, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_287>
  yynerrs.10_102 = yynerrsD.2289;
  yynerrs.11_103 = yynerrs.10_102 + 1;
  # .MEM_104 = VDEF <.MEM_287>
  yynerrsD.2289 = yynerrs.11_103;
  # .MEM_105 = VDEF <.MEM_104>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  yyerrorD.2239 ("syntax error");
  goto <bb 44> (yyerrlab1);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 351, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  if (yyerrstatus_5 == 3)
    goto <bb 40>;
  else
    goto <bb 44> (yyerrlab1);
;;    succ:       40 [39.4%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [60.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 138, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [39.4%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_287>
  yychar.2_106 = yycharD.2287;
  if (yychar.2_106 <= 0)
    goto <bb 41>;
  else
    goto <bb 43>;
;;    succ:       41 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 37, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  if (yychar.2_106 == 0)
    goto <bb 42>;
  else
    goto <bb 44> (yyerrlab1);
;;    succ:       42 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_283 = PHI <yyssp_8(41)>
  goto <bb 55> (yyacceptlab);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 101, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       40 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#1ptD.0 => "Error: discarding"
  # DEBUG D#3ptD.0 => &yylvalD.2258
  # DEBUG yymsgD.2485 => D#1ptD.0
  # DEBUG yytypeD.2484 => D#2ptD.0
  # DEBUG yyvaluepD.2483 => D#3ptD.0
  # .MEM_107 = VDEF <.MEM_287>
  yycharD.2287 = -2;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 493, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       41 [98.0%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [60.6%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_287(41), .MEM_105(38), .MEM_107(43), .MEM_287(39)>
yyerrlab1L.58:
  # DEBUG yyerrstatusD.2294 => 3
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 2, count 0, freq 10000, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  # yyssp_13 = PHI <yyssp_12(44), yyssp_111(51)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_19 = PHI <yyvsp_18(44), yyvsp_110(51)>
  # prephitmp_277 = PHI <_78(44), pretmp_276(51)>
  # DEBUG yyvspD.2300 => yyvsp_19
  # DEBUG yysspD.2297 => yyssp_13
  # DEBUG yystateD.2293 => NULL
  # RANGE [-128, 127]
  yyn_109 = (intD.6) prephitmp_277;
  # DEBUG yynD.2302 => yyn_109
  if (yyn_109 != -5)
    goto <bb 46>;
  else
    goto <bb 49>;
;;    succ:       46 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 2, count 0, freq 7200, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [-127, 128]
  yyn_114 = yyn_109 + 1;
  # DEBUG yynD.2302 => yyn_114
  # RANGE ~[129, 4294967168]
  yyn.6_115 = (unsigned int) yyn_114;
  if (yyn.6_115 <= 11)
    goto <bb 47>;
  else
    goto <bb 49>;
;;    succ:       47 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 47, loop depth 2, count 0, freq 3600, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       46 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_37>
  _116 = yycheckD.2278[yyn_114];
  if (_116 == 1)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 2, count 0, freq 1008, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_37>
  _117 = yytableD.2277[yyn_114];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yystate_118 = (intD.6) _117;
  # DEBUG yynD.2302 => yystate_118
  if (yystate_118 != 0)
    goto <bb 52>;
  else
    goto <bb 49>;
;;    succ:       52 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 2, count 0, freq 9955, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       46 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                45 [28.0%]  (FALSE_VALUE,EXECUTABLE)
;;                48 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;                47 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  if (yyssp_13 == yyssp_8)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 448, maybe hot
;;    prev block 49, next block 51, flags: (NEW)
;;    pred:       49 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_281 = PHI <yyssp_8(49)>
  goto <bb 55> (yyacceptlab);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 2, count 0, freq 9507, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       49 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#8ptD.0 => NULL
  # DEBUG D#1ptD.0 => "Error: popping"
  # DEBUG D#2ptD.0 => (intD.6) D#8ptD.0
  # DEBUG D#3ptD.0 => yyvsp_19
  # DEBUG yymsgD.2488 => D#1ptD.0
  # DEBUG yytypeD.2487 => D#2ptD.0
  # DEBUG yyvaluepD.2486 => D#3ptD.0
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_110 = yyvsp_19 + 18446744073709551608;
  # DEBUG yyvspD.2300 => yyvsp_110
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  yyssp_111 = yyssp_13 + 18446744073709551614;
  # DEBUG yysspD.2297 => yyssp_111
  # VUSE <.MEM_37>
  _112 = *yyssp_111;
  # RANGE [-32768, 32767]
  yystate_113 = (intD.6) _112;
  # DEBUG yystateD.2293 => yystate_113
  # VUSE <.MEM_37>
  pretmp_276 = yypactD.2273[yystate_113];
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 45, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       48 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  # yyssp_280 = PHI <yyssp_13(48)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_279 = PHI <yyvsp_19(48)>
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  # yystate_274 = PHI <yystate_118(48)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_119 = yyvsp_279 + 8;
  # DEBUG yyvspD.2300 => yyvsp_119
  # .MEM_120 = VDEF <.MEM_37>
  MEM[(union YYSTYPED.2254 *)yyvsp_279 + 8B] = yylvalD.2258;
  # DEBUG yystateD.2293 => yystate_274
  goto <bb 3> (yynewstate);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       5 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_286 = PHI <yyssp_7(5)>
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 23, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_288 = PHI <.MEM_45(53), .MEM_57(7)>
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_273 = PHI <yyssp_286(53), yyssp_285(7)>
  # DEBUG yyexhaustedlabL.71 => NULL
  # .MEM_77 = VDEF <.MEM_288>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  yyerrorD.2239 ("memory exhausted");
  # DEBUG yyresultD.2303 => 2
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 505, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_9 = PHI <yyssp_284(13), yyssp_283(42), yyssp_273(54), yyssp_275(11), yyssp_281(50)>
  # RANGE [0, 2] NONZERO 0x00000000000000003
  # yyresult_24 = PHI <0(13), 1(42), 2(54), 1(11), 1(50)>
  # .MEM_39 = PHI <.MEM_30(13), .MEM_287(42), .MEM_77(54), .MEM_29(11), .MEM_37(50)>
yyacceptlabL.69:
yyreturnL.72:
  # DEBUG yyresultD.2303 => yyresult_24
  # DEBUG yyvspD.2300 => NULL
  # DEBUG yysspD.2297 => NULL
  # DEBUG yyssD.2296 => yyssp_9
  # DEBUG yyvspD.2300 => NULL
  # DEBUG yysspD.2297 => NULL
  # DEBUG yyvspD.2300 => NULL
  # DEBUG yysspD.2297 => NULL
  if (&yyssaD.2295 != yyssp_9)
    goto <bb 56>;
  else
    goto <bb 57>;
;;    succ:       56 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                57 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 396, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       55 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_167 = VDEF <.MEM_39>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (yyssp_9);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 505, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       55 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_39(55), .MEM_167(56)>
  # .MEM_168 = VDEF <.MEM_40>
  yyssaD.2295 ={v} {CLOBBER};
  # .MEM_169 = VDEF <.MEM_168>
  yyvsaD.2298 ={v} {CLOBBER};
  # .MEM_170 = VDEF <.MEM_169>
  yyvalD.2305 ={v} {CLOBBER};
  # VUSE <.MEM_170>
  return yyresult_24;
;;    succ:       EXIT [100.0%] 

;;   basic block 58, loop depth 1, count 0, freq 30, maybe hot
;;    prev block 57, next block 1, flags: (NEW, REACHABLE)
;;    pred:       23 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG yynD.2302 => 0
  # DEBUG yynD.2302 => 0
  # DEBUG yylenD.2306 => 0
  # .MEM_175 = VDEF <.MEM_32>
  yyvalD.2305 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + 8B];
  goto <bb 33> (<L85>);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

}


Creating dr for yynerrs
analyze_innermost: success.
	base_address: &yynerrs
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yynerrs
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for *yyssp_11
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *yyssp_11
Creating dr for *yyssp_11
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *yyssp_11
Creating dr for *yyssp_11
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *yyssp_11
Creating dr for *yyssp_11
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *yyssp_11
Creating dr for yypact[yystate_2]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_int8[13] *)&yypact]
	Access function 0: scev_not_known;
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for yytranslate[prephitmp_282]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_uint8[261] *)&yytranslate]
	Access function 0: scev_not_known;
Creating dr for yycheck[yyn_89]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_int8[12] *)&yycheck]
	Access function 0: scev_not_known;
Creating dr for yytable[yyn_89]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_uint8[12] *)&yytable]
	Access function 0: scev_not_known;
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + 8B]
Creating dr for yyval
analyze_innermost: success.
	base_address: &yyval
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(union YYSTYPE *)&yyval]
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + 8B]
Creating dr for yyval
analyze_innermost: success.
	base_address: &yyval
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(union YYSTYPE *)&yyval]
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for yylval
analyze_innermost: success.
	base_address: &yylval
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(union YYSTYPE *)&yylval]
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + 8B]
Creating dr for yylval
analyze_innermost: success.
	base_address: &yylval
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(union YYSTYPE *)&yylval]
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + 8B]
Creating dr for yyval
analyze_innermost: success.
	base_address: &yyval
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(union YYSTYPE *)&yyval]
Creating dr for MEM[(union YYSTYPE *)yyvsp_145 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_145 + 8B]
Creating dr for yyval
analyze_innermost: success.
	base_address: &yyval
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(union YYSTYPE *)&yyval]
Creating dr for MEM[(union YYSTYPE *)yyvsp_145 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_145 + 8B]
Creating dr for yyr1[yyn_177]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_uint8[7] *)&yyr1]
	Access function 0: scev_not_known;
Creating dr for yycheck[yystate_158]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_int8[12] *)&yycheck]
	Access function 0: scev_not_known;
Creating dr for yytable[yystate_158]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_uint8[12] *)&yytable]
	Access function 0: scev_not_known;
Creating dr for yydefgoto[_153]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_int8[3] *)&yydefgoto]
	Access function 0: scev_not_known;
Creating dr for yydefact[yystate_2]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_uint8[13] *)&yydefact]
	Access function 0: scev_not_known;
Creating dr for yynerrs
analyze_innermost: success.
	base_address: &yynerrs
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yynerrs
Creating dr for yynerrs
analyze_innermost: success.
	base_address: &yynerrs
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yynerrs
Creating dr for yynerrs
analyze_innermost: success.
	base_address: &yynerrs
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yynerrs
Creating dr for yynerrs
analyze_innermost: success.
	base_address: &yynerrs
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yynerrs
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for yychar
analyze_innermost: success.
	base_address: &yychar
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: yychar
Creating dr for yycheck[yyn_114]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_int8[12] *)&yycheck]
	Access function 0: scev_not_known;
Creating dr for yytable[yyn_114]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_uint8[12] *)&yytable]
	Access function 0: scev_not_known;
Creating dr for *yyssp_111
analyze_innermost: success.
	base_address: yyssp_12
	offset from base address: 0
	constant offset from base address: -2(OVF)
	step: -2(OVF)
	aligned to: 256
	base_object: *yyssp_12
	Access function 0: {-2B, +, 18446744073709551614}_2
Creating dr for *yyssp_111
analyze_innermost: success.
	base_address: yyssp_12
	offset from base address: 0
	constant offset from base address: -2(OVF)
	step: -2(OVF)
	aligned to: 256
	base_object: *yyssp_111
Creating dr for *yyssp_111
analyze_innermost: success.
	base_address: yyssp_12
	offset from base address: 0
	constant offset from base address: -2(OVF)
	step: -2(OVF)
	aligned to: 256
	base_object: *yyssp_111
Creating dr for yypact[yystate_113]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_int8[13] *)&yypact]
	Access function 0: scev_not_known;
Creating dr for yylval
analyze_innermost: success.
	base_address: &yylval
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(union YYSTYPE *)&yylval]
Creating dr for MEM[(union YYSTYPE *)yyvsp_279 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_279 + 8B]
Creating dr for yylval
analyze_innermost: success.
	base_address: &yylval
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(union YYSTYPE *)&yylval]
Creating dr for MEM[(union YYSTYPE *)yyvsp_279 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_279 + 8B]
Creating dr for yyr2[yyn_101]
analyze_innermost: failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(yytype_uint8[7] *)&yyr2]
	Access function 0: scev_not_known;
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -8B].name
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -8B].name
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -8B].name
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -8B].name
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -8B].num
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -8B].num
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -8B].num
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -8B].num
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -8B].fnum
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -8B].fnum
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -8B].fnum
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -8B].fnum
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
Creating dr for MEM[(union YYSTYPE *)yyvsp_18 + -24B].name
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(union YYSTYPE *)yyvsp_18 + -24B].name

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:7)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:11)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:62, LOOPS:2, CONDITIONS:28, STMTS:286)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 })
  {
    <bb 2>:
    # DEBUG yytoken => 0
    # DEBUG yylen => 0
    # DEBUG yyss => &yyssa
    # DEBUG yyssp => &yyssa
    # DEBUG yyvs => &yyvsa
    # DEBUG yyvsp => &yyvsa
    # DEBUG yystacksize => 200
    # DEBUG yystate => 0
    # DEBUG yyerrstatus => 0
    # .MEM_42 = VDEF <.MEM_41(D)>
    yynerrs = 0;
    # .MEM_43 = VDEF <.MEM_42>
    yychar = -2;
    goto <bb 4> (yysetstate);

  }
  bb_7 (preds = {bb_6 }, succs = {bb_54 })
  {
    <bb 7>:
    # yyssp_285 = PHI <yyssp_7(6)>
    goto <bb 54>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_55 })
  {
    <bb 11>:
    # yyssp_275 = PHI <yyssp_60(10)>
    goto <bb 55> (yyacceptlab);

  }
  bb_13 (preds = {bb_12 }, succs = {bb_55 })
  {
    <bb 13>:
    # yyssp_284 = PHI <yyssp_8(12)>
    goto <bb 55> (yyacceptlab);

  }
  bb_42 (preds = {bb_41 }, succs = {bb_55 })
  {
    <bb 42>:
    # yyssp_283 = PHI <yyssp_8(41)>
    goto <bb 55> (yyacceptlab);

  }
  bb_50 (preds = {bb_49 }, succs = {bb_55 })
  {
    <bb 50>:
    # yyssp_281 = PHI <yyssp_8(49)>
    goto <bb 55> (yyacceptlab);

  }
  bb_53 (preds = {bb_5 }, succs = {bb_54 })
  {
    <bb 53>:
    # yyssp_286 = PHI <yyssp_7(5)>

  }
  bb_54 (preds = {bb_53 bb_7 }, succs = {bb_55 })
  {
    <bb 54>:
    # .MEM_288 = PHI <.MEM_45(53), .MEM_57(7)>
    # yyssp_273 = PHI <yyssp_286(53), yyssp_285(7)>
    # DEBUG yyexhaustedlab => NULL
    # .MEM_77 = VDEF <.MEM_288>
    yyerror ("memory exhausted");
    # DEBUG yyresult => 2

  }
  bb_55 (preds = {bb_13 bb_42 bb_54 bb_11 bb_50 }, succs = {bb_56 bb_57 })
  {
    # yyssp_9 = PHI <yyssp_284(13), yyssp_283(42), yyssp_273(54), yyssp_275(11), yyssp_281(50)>
    # yyresult_24 = PHI <0(13), 1(42), 2(54), 1(11), 1(50)>
    # .MEM_39 = PHI <.MEM_30(13), .MEM_287(42), .MEM_77(54), .MEM_29(11), .MEM_37(50)>
  yyacceptlab:
  yyreturn:
    # DEBUG yyresult => yyresult_24
    # DEBUG yyvsp => NULL
    # DEBUG yyssp => NULL
    # DEBUG yyss => yyssp_9
    # DEBUG yyvsp => NULL
    # DEBUG yyssp => NULL
    # DEBUG yyvsp => NULL
    # DEBUG yyssp => NULL
    if (&yyssa != yyssp_9)
      goto <bb 56>;
    else
      goto <bb 57>;

  }
  bb_56 (preds = {bb_55 }, succs = {bb_57 })
  {
    <bb 56>:
    # .MEM_167 = VDEF <.MEM_39>
    free (yyssp_9);

  }
  bb_57 (preds = {bb_55 bb_56 }, succs = {bb_1 })
  {
    <bb 57>:
    # .MEM_40 = PHI <.MEM_39(55), .MEM_167(56)>
    # .MEM_168 = VDEF <.MEM_40>
    yyssa ={v} {CLOBBER};
    # .MEM_169 = VDEF <.MEM_168>
    yyvsa ={v} {CLOBBER};
    # .MEM_170 = VDEF <.MEM_169>
    yyval ={v} {CLOBBER};
    # VUSE <.MEM_170>
    return yyresult_24;

  }
  loop_1 (header = 4, latch = 61, niter = )
  {
    bb_3 (preds = {bb_59 bb_36 bb_52 bb_35 }, succs = {bb_61 })
    {
      # yystate_1 = PHI <yystate_94(59), yystate_165(36), yystate_274(52), yystate_163(35)>
      # yyerrstatus_4 = PHI <yyerrstatus_6(59), yyerrstatus_5(36), 3(52), yyerrstatus_5(35)>
      # yyssp_10 = PHI <yyssp_12(59), yyssp_148(36), yyssp_280(52), yyssp_148(35)>
      # yyvsp_16 = PHI <yyvsp_97(59), yyvsp_149(36), yyvsp_119(52), yyvsp_149(35)>
      # .MEM_27 = PHI <.MEM_98(59), .MEM_150(36), .MEM_120(52), .MEM_150(35)>
    yynewstate:

    }
    bb_61 (preds = {bb_3 }, succs = {bb_4 })
    {
      <bb 61>:
      # DEBUG yylen => 0
      # DEBUG yyvsp => yyvsp_16
      # DEBUG yyssp => yyssp_10
      # DEBUG yyerrstatus => yyerrstatus_4
      # DEBUG yystate => yystate_1
      yyssp_166 = yyssp_10 + 2;
      # DEBUG yyssp => yyssp_166

    }
    bb_4 (preds = {bb_2 bb_61 }, succs = {bb_5 bb_12 })
    {
      # yystate_2 = PHI <0(2), yystate_1(61)>
      # yyerrstatus_5 = PHI <0(2), yyerrstatus_4(61)>
      # yyssp_7 = PHI <&yyssa(2), yyssp_8(61)>
      # yyssp_11 = PHI <&yyssa(2), yyssp_166(61)>
      # yyvsp_14 = PHI <&yyvsa(2), yyvsp_15(61)>
      # yyvsp_17 = PHI <&yyvsa(2), yyvsp_16(61)>
      # yystacksize_20 = PHI <200(2), yystacksize_22(61)>
      # .MEM_28 = PHI <.MEM_43(2), .MEM_27(61)>
    yysetstate:
      # DEBUG yylen => 0
      # DEBUG yystacksize => yystacksize_20
      # DEBUG yyvsp => yyvsp_17
      # DEBUG yyvs => yyvsp_14
      # DEBUG yyssp => yyssp_11
      # DEBUG yyss => yyssp_7
      # DEBUG yyerrstatus => yyerrstatus_5
      # DEBUG yystate => yystate_2
      _44 = (short int) yystate_2;
      # .MEM_45 = VDEF <.MEM_28>
      *yyssp_11 = _44;
      yystacksize_46 = yystacksize_20 * 2;
      _47 = yystacksize_46 + 18446744073709551614;
      _48 = yyssp_7 + _47;
      if (yyssp_11 >= _48)
        goto <bb 5>;
      else
        goto <bb 12>;

    }
    bb_5 (preds = {bb_4 }, succs = {bb_53 bb_6 })
    {
      <bb 5>:
      yyssp.0_49 = (long int) yyssp_11;
      yyss.1_50 = (long int) yyssp_7;
      _51 = yyssp.0_49 - yyss.1_50;
      _52 = _51 /[ex] 2;
      _53 = _52 + 1;
      yysize_54 = (long unsigned int) _53;
      # DEBUG yysize => yysize_54
      if (yystacksize_20 > 9999)
        goto <bb 53>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
    {
      <bb 6>:
      # DEBUG yystacksize => yystacksize_46
      yystacksize_176 = MIN_EXPR <yystacksize_46, 10000>;
      # DEBUG yystacksize => yystacksize_176
      # DEBUG yyss1 => yyssp_7
      _55 = yystacksize_176 * 10;
      _56 = _55 + 7;
      # .MEM_57 = VDEF <.MEM_45>
      yyptr_58 = malloc (_56);
      # DEBUG yyptr => yyptr_58
      if (yyptr_58 == 0B)
        goto <bb 7>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_6 }, succs = {bb_9 bb_10 })
    {
      <bb 8>:
      _59 = yysize_54 * 2;
      yyssp_60 = &yyptr_58->yyss_alloc;
      # .MEM_61 = VDEF <.MEM_57>
      __builtin_memcpy (yyssp_60, yyssp_7, _59);
      # DEBUG yyss => yyssp_60
      _62 = yystacksize_176 * 2;
      yynewbytes_63 = _62 + 7;
      # DEBUG yynewbytes => yynewbytes_63
      _64 = yynewbytes_63 >> 3;
      _65 = _64 * 8;
      yyptr_66 = yyptr_58 + _65;
      # DEBUG yyptr => yyptr_66
      _67 = yysize_54 * 8;
      yyvsp_68 = &yyptr_66->yyvs_alloc;
      # .MEM_69 = VDEF <.MEM_61>
      __builtin_memcpy (yyvsp_68, yyvsp_14, _67);
      # DEBUG yyvs => yyvsp_68
      # DEBUG D#7 => yystacksize_176 * 8
      # DEBUG D#6 => D#7 + 7
      # DEBUG yynewbytes => D#6
      # DEBUG D#5 => D#6 / 8
      # DEBUG D#4 => D#5 * 8
      # DEBUG yyptr => yyptr_66 + D#4
      if (&yyssa != yyssp_7)
        goto <bb 9>;
      else
        goto <bb 10>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_10 })
    {
      <bb 9>:
      # .MEM_70 = VDEF <.MEM_69>
      free (yyssp_7);

    }
    bb_10 (preds = {bb_8 bb_9 }, succs = {bb_11 bb_12 })
    {
      <bb 10>:
      # .MEM_29 = PHI <.MEM_69(8), .MEM_70(9)>
      _71 = _59 + 18446744073709551614;
      yyssp_72 = yyssp_60 + _71;
      # DEBUG yyssp => yyssp_72
      _73 = _67 + 18446744073709551608;
      yyvsp_74 = yyvsp_68 + _73;
      # DEBUG yyvsp => yyvsp_74
      _75 = _62 + 18446744073709551614;
      _76 = yyssp_60 + _75;
      if (yyssp_72 >= _76)
        goto <bb 11>;
      else
        goto <bb 12>;

    }
    bb_12 (preds = {bb_4 bb_10 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # yyssp_8 = PHI <yyssp_7(4), yyssp_60(10)>
      # yyssp_12 = PHI <yyssp_11(4), yyssp_72(10)>
      # yyvsp_15 = PHI <yyvsp_14(4), yyvsp_68(10)>
      # yyvsp_18 = PHI <yyvsp_17(4), yyvsp_74(10)>
      # yystacksize_22 = PHI <yystacksize_20(4), yystacksize_176(10)>
      # .MEM_30 = PHI <.MEM_45(4), .MEM_29(10)>
      # DEBUG yystacksize => yystacksize_22
      # DEBUG yyvsp => yyvsp_18
      # DEBUG yyvs => yyvsp_15
      # DEBUG yyssp => yyssp_12
      # DEBUG yyss => yyssp_8
      if (yystate_2 == 5)
        goto <bb 13>;
      else
        goto <bb 14> (yybackup);

    }
    bb_14 (preds = {bb_12 }, succs = {bb_27 bb_15 })
    {
    yybackup:
      # VUSE <.MEM_30>
      _78 = yypact[yystate_2];
      yyn_79 = (int) _78;
      # DEBUG yyn => yyn_79
      if (yyn_79 == -5)
        goto <bb 27>;
      else
        goto <bb 15>;

    }
    bb_15 (preds = {bb_14 }, succs = {bb_16 bb_17 })
    {
      <bb 15>:
      # VUSE <.MEM_30>
      yychar.2_80 = yychar;
      if (yychar.2_80 == -2)
        goto <bb 16>;
      else
        goto <bb 17>;

    }
    bb_16 (preds = {bb_15 }, succs = {bb_17 })
    {
      <bb 16>:
      # .MEM_81 = VDEF <.MEM_30>
      yychar.3_82 = yylex ();
      # .MEM_83 = VDEF <.MEM_81>
      yychar = yychar.3_82;

    }
    bb_17 (preds = {bb_15 bb_16 }, succs = {bb_18 bb_19 })
    {
      <bb 17>:
      # .MEM_31 = PHI <.MEM_30(15), .MEM_83(16)>
      # prephitmp_282 = PHI <yychar.2_80(15), yychar.3_82(16)>
      if (prephitmp_282 <= 0)
        goto <bb 18>;
      else
        goto <bb 19>;

    }
    bb_18 (preds = {bb_17 }, succs = {bb_21 })
    {
      <bb 18>:
      # DEBUG yytoken => 0
      # .MEM_85 = VDEF <.MEM_31>
      yychar = 0;
      goto <bb 21>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_20 bb_21 })
    {
      <bb 19>:
      if (prephitmp_282 <= 260)
        goto <bb 20>;
      else
        goto <bb 21>;

    }
    bb_20 (preds = {bb_19 }, succs = {bb_21 })
    {
      <bb 20>:
      # VUSE <.MEM_31>
      _87 = yytranslate[prephitmp_282];
      yytoken_88 = (int) _87;

    }
    bb_21 (preds = {bb_18 bb_19 bb_20 }, succs = {bb_27 bb_22 })
    {
      <bb 21>:
      # yytoken_25 = PHI <0(18), 2(19), yytoken_88(20)>
      # .MEM_32 = PHI <.MEM_85(18), .MEM_31(19), .MEM_31(20)>
      # DEBUG yytoken => yytoken_25
      yyn_89 = yyn_79 + yytoken_25;
      # DEBUG yyn => yyn_89
      yyn.6_90 = (unsigned int) yyn_89;
      if (yyn.6_90 > 11)
        goto <bb 27>;
      else
        goto <bb 22>;

    }
    bb_22 (preds = {bb_21 }, succs = {bb_27 bb_23 })
    {
      <bb 22>:
      # VUSE <.MEM_32>
      _91 = yycheck[yyn_89];
      _92 = (int) _91;
      if (_92 != yytoken_25)
        goto <bb 27>;
      else
        goto <bb 23>;

    }
    bb_23 (preds = {bb_22 }, succs = {bb_58 bb_24 })
    {
      <bb 23>:
      # VUSE <.MEM_32>
      _93 = yytable[yyn_89];
      yystate_94 = (int) _93;
      # DEBUG yyn => yystate_94
      if (yystate_94 == 0)
        goto <bb 58>;
      else
        goto <bb 24>;

    }
    bb_24 (preds = {bb_23 }, succs = {bb_25 bb_26 })
    {
      <bb 24>:
      if (yyerrstatus_5 != 0)
        goto <bb 25>;
      else
        goto <bb 26>;

    }
    bb_25 (preds = {bb_24 }, succs = {bb_26 })
    {
      <bb 25>:
      yyerrstatus_95 = yyerrstatus_5 + -1;
      # DEBUG yyerrstatus => yyerrstatus_95

    }
    bb_26 (preds = {bb_24 bb_25 }, succs = {bb_59 })
    {
      <bb 26>:
      # yyerrstatus_6 = PHI <0(24), yyerrstatus_95(25)>

    }
    bb_59 (preds = {bb_26 }, succs = {bb_3 })
    {
      <bb 59>:
      # DEBUG yyerrstatus => yyerrstatus_6
      # .MEM_96 = VDEF <.MEM_32>
      yychar = -2;
      # DEBUG yystate => yystate_94
      yyvsp_97 = yyvsp_18 + 8;
      # DEBUG yyvsp => yyvsp_97
      # .MEM_98 = VDEF <.MEM_96>
      MEM[(union YYSTYPE *)yyvsp_18 + 8B] = yylval;
      goto <bb 3> (yynewstate);

    }
    bb_27 (preds = {bb_14 bb_21 bb_22 }, succs = {bb_37 bb_28 })
    {
      <bb 27>:
      # .MEM_287 = PHI <.MEM_30(14), .MEM_32(21), .MEM_32(22)>
      # DEBUG yydefault => NULL
      # VUSE <.MEM_287>
      _100 = yydefact[yystate_2];
      yyn_101 = (int) _100;
      # DEBUG yyn => yyn_101
      if (yyn_101 == 0)
        goto <bb 37> (yyerrlab);
      else
        goto <bb 28> (yyreduce);

    }
    bb_28 (preds = {bb_27 }, succs = {bb_29 bb_30 bb_31 bb_32 })
    {
    yyreduce:
      # DEBUG yyn => yyn_101
      # VUSE <.MEM_287>
      _122 = yyr2[yyn_101];
      yylen_123 = (int) _122;
      # DEBUG yylen => yylen_123
      _124 = 1 - yylen_123;
      _125 = (long unsigned int) _124;
      _126 = _125 * 8;
      _127 = yyvsp_18 + _126;
      # .MEM_128 = VDEF <.MEM_287>
      yyval = *_127;
      switch (_100) <default: <L86>, case 4: <L32>, case 5: <L33>, case 6: <L34>>

    }
    bb_29 (preds = {bb_28 }, succs = {bb_33 })
    {
    <L86>:
      pretmp_249 = (long unsigned int) _122;
      pretmp_254 = pretmp_249 * 8;
      pretmp_259 = -pretmp_254;
      pretmp_264 = pretmp_249 * 2;
      pretmp_269 = -pretmp_264;
      goto <bb 33> (<L85>);

    }
    bb_30 (preds = {bb_28 }, succs = {bb_33 })
    {
    <L32>:
      # VUSE <.MEM_128>
      _129 = MEM[(union YYSTYPE *)yyvsp_18 + -8B].name;
      # VUSE <.MEM_128>
      _130 = MEM[(union YYSTYPE *)yyvsp_18 + -24B].name;
      # .MEM_131 = VDEF <.MEM_128>
      config_assign_string (_130, _129);
      # .MEM_132 = VDEF <.MEM_131>
      free (_130);
      # .MEM_133 = VDEF <.MEM_132>
      free (_129);
      pretmp_246 = (long unsigned int) _122;
      pretmp_251 = pretmp_246 * 8;
      pretmp_256 = -pretmp_251;
      pretmp_261 = pretmp_246 * 2;
      pretmp_266 = -pretmp_261;
      goto <bb 33> (<L85>);

    }
    bb_31 (preds = {bb_28 }, succs = {bb_33 })
    {
    <L33>:
      # VUSE <.MEM_128>
      _134 = MEM[(union YYSTYPE *)yyvsp_18 + -8B].num;
      # VUSE <.MEM_128>
      _135 = MEM[(union YYSTYPE *)yyvsp_18 + -24B].name;
      # .MEM_136 = VDEF <.MEM_128>
      config_assign_int (_135, _134);
      # .MEM_137 = VDEF <.MEM_136>
      free (_135);
      pretmp_247 = (long unsigned int) _122;
      pretmp_252 = pretmp_247 * 8;
      pretmp_257 = -pretmp_252;
      pretmp_262 = pretmp_247 * 2;
      pretmp_267 = -pretmp_262;
      goto <bb 33> (<L85>);

    }
    bb_32 (preds = {bb_28 }, succs = {bb_33 })
    {
    <L34>:
      # VUSE <.MEM_128>
      _138 = MEM[(union YYSTYPE *)yyvsp_18 + -8B].fnum;
      # VUSE <.MEM_128>
      _139 = MEM[(union YYSTYPE *)yyvsp_18 + -24B].name;
      # .MEM_140 = VDEF <.MEM_128>
      config_assign_float (_139, _138);
      # .MEM_141 = VDEF <.MEM_140>
      free (_139);
      pretmp_248 = (long unsigned int) _122;
      pretmp_253 = pretmp_248 * 8;
      pretmp_258 = -pretmp_253;
      pretmp_263 = pretmp_248 * 2;
      pretmp_268 = -pretmp_263;

    }
    bb_33 (preds = {bb_30 bb_31 bb_32 bb_29 bb_58 }, succs = {bb_34 bb_36 })
    {
      # .MEM_35 = PHI <.MEM_133(30), .MEM_137(31), .MEM_141(32), .MEM_128(29), .MEM_175(58)>
      # yyn_177 = PHI <yyn_101(30), yyn_101(31), yyn_101(32), yyn_101(29), 0(58)>
      # prephitmp_260 = PHI <pretmp_256(30), pretmp_257(31), pretmp_258(32), pretmp_259(29), 0(58)>
      # prephitmp_270 = PHI <pretmp_266(30), pretmp_267(31), pretmp_268(32), pretmp_269(29), 0(58)>
    <L85>:
      yyvsp_145 = yyvsp_18 + prephitmp_260;
      # DEBUG yyvsp => yyvsp_145
      yyssp_148 = yyssp_12 + prephitmp_270;
      # DEBUG yyssp => yyssp_148
      # DEBUG yylen => 0
      yyvsp_149 = yyvsp_145 + 8;
      # DEBUG yyvsp => yyvsp_149
      # .MEM_150 = VDEF <.MEM_35>
      MEM[(union YYSTYPE *)yyvsp_145 + 8B] = yyval;
      # VUSE <.MEM_150>
      _151 = yyr1[yyn_177];
      yyn_152 = (int) _151;
      # DEBUG yyn => yyn_152
      _153 = yyn_152 + -8;
      # VUSE <.MEM_150>
      _154 = yypgoto[_153];
      _155 = (int) _154;
      # VUSE <.MEM_150>
      _156 = *yyssp_148;
      _157 = (int) _156;
      yystate_158 = _155 + _157;
      # DEBUG yystate => yystate_158
      yystate.7_159 = (unsigned int) yystate_158;
      if (yystate.7_159 <= 11)
        goto <bb 34>;
      else
        goto <bb 36>;

    }
    bb_34 (preds = {bb_33 }, succs = {bb_35 bb_36 })
    {
      <bb 34>:
      # VUSE <.MEM_150>
      _160 = yycheck[yystate_158];
      _161 = (short int) _160;
      if (_156 == _161)
        goto <bb 35>;
      else
        goto <bb 36>;

    }
    bb_35 (preds = {bb_34 }, succs = {bb_3 })
    {
      <bb 35>:
      # VUSE <.MEM_150>
      _162 = yytable[yystate_158];
      yystate_163 = (int) _162;
      # DEBUG yystate => yystate_163
      goto <bb 3> (yynewstate);

    }
    bb_36 (preds = {bb_34 bb_33 }, succs = {bb_3 })
    {
      <bb 36>:
      # VUSE <.MEM_150>
      _164 = yydefgoto[_153];
      yystate_165 = (int) _164;
      # DEBUG yystate => yystate_165
      goto <bb 3> (yynewstate);

    }
    bb_37 (preds = {bb_27 }, succs = {bb_38 bb_39 })
    {
    yyerrlab:
      # DEBUG yytoken => -2
      if (yyerrstatus_5 == 0)
        goto <bb 38>;
      else
        goto <bb 39>;

    }
    bb_38 (preds = {bb_37 }, succs = {bb_44 })
    {
      <bb 38>:
      # VUSE <.MEM_287>
      yynerrs.10_102 = yynerrs;
      yynerrs.11_103 = yynerrs.10_102 + 1;
      # .MEM_104 = VDEF <.MEM_287>
      yynerrs = yynerrs.11_103;
      # .MEM_105 = VDEF <.MEM_104>
      yyerror ("syntax error");
      goto <bb 44> (yyerrlab1);

    }
    bb_39 (preds = {bb_37 }, succs = {bb_40 bb_44 })
    {
      <bb 39>:
      if (yyerrstatus_5 == 3)
        goto <bb 40>;
      else
        goto <bb 44> (yyerrlab1);

    }
    bb_40 (preds = {bb_39 }, succs = {bb_41 bb_43 })
    {
      <bb 40>:
      # VUSE <.MEM_287>
      yychar.2_106 = yychar;
      if (yychar.2_106 <= 0)
        goto <bb 41>;
      else
        goto <bb 43>;

    }
    bb_41 (preds = {bb_40 }, succs = {bb_42 bb_44 })
    {
      <bb 41>:
      if (yychar.2_106 == 0)
        goto <bb 42>;
      else
        goto <bb 44> (yyerrlab1);

    }
    bb_43 (preds = {bb_40 }, succs = {bb_44 })
    {
      <bb 43>:
      # DEBUG D#1 => "Error: discarding"
      # DEBUG D#3 => &yylval
      # DEBUG yymsg => D#1
      # DEBUG yytype => D#2
      # DEBUG yyvaluep => D#3
      # .MEM_107 = VDEF <.MEM_287>
      yychar = -2;

    }
    bb_44 (preds = {bb_41 bb_38 bb_43 bb_39 }, succs = {bb_60 })
    {
      # .MEM_37 = PHI <.MEM_287(41), .MEM_105(38), .MEM_107(43), .MEM_287(39)>
    yyerrlab1:

    }
    bb_60 (preds = {bb_44 }, succs = {bb_45 })
    {
      <bb 60>:
      # DEBUG yyerrstatus => 3

    }
    bb_52 (preds = {bb_48 }, succs = {bb_3 })
    {
      <bb 52>:
      # yyssp_280 = PHI <yyssp_13(48)>
      # yyvsp_279 = PHI <yyvsp_19(48)>
      # yystate_274 = PHI <yystate_118(48)>
      yyvsp_119 = yyvsp_279 + 8;
      # DEBUG yyvsp => yyvsp_119
      # .MEM_120 = VDEF <.MEM_37>
      MEM[(union YYSTYPE *)yyvsp_279 + 8B] = yylval;
      # DEBUG yystate => yystate_274
      goto <bb 3> (yynewstate);

    }
    bb_58 (preds = {bb_23 }, succs = {bb_33 })
    {
      <bb 58>:
      # DEBUG yyn => 0
      # DEBUG yyn => 0
      # DEBUG yylen => 0
      # .MEM_175 = VDEF <.MEM_32>
      yyval = MEM[(union YYSTYPE *)yyvsp_18 + 8B];
      goto <bb 33> (<L85>);

    }
    loop_2 (header = 45, latch = 51, niter = scev_not_known)
    {
      bb_45 (preds = {bb_60 bb_51 }, succs = {bb_46 bb_49 })
      {
        <bb 45>:
        # yyssp_13 = PHI <yyssp_12(60), yyssp_111(51)>
        # yyvsp_19 = PHI <yyvsp_18(60), yyvsp_110(51)>
        # prephitmp_277 = PHI <_78(60), pretmp_276(51)>
        # DEBUG yyvsp => yyvsp_19
        # DEBUG yyssp => yyssp_13
        # DEBUG yystate => NULL
        yyn_109 = (int) prephitmp_277;
        # DEBUG yyn => yyn_109
        if (yyn_109 != -5)
          goto <bb 46>;
        else
          goto <bb 49>;

      }
      bb_46 (preds = {bb_45 }, succs = {bb_47 bb_49 })
      {
        <bb 46>:
        yyn_114 = yyn_109 + 1;
        # DEBUG yyn => yyn_114
        yyn.6_115 = (unsigned int) yyn_114;
        if (yyn.6_115 <= 11)
          goto <bb 47>;
        else
          goto <bb 49>;

      }
      bb_47 (preds = {bb_46 }, succs = {bb_48 bb_49 })
      {
        <bb 47>:
        # VUSE <.MEM_37>
        _116 = yycheck[yyn_114];
        if (_116 == 1)
          goto <bb 48>;
        else
          goto <bb 49>;

      }
      bb_48 (preds = {bb_47 }, succs = {bb_52 bb_49 })
      {
        <bb 48>:
        # VUSE <.MEM_37>
        _117 = yytable[yyn_114];
        yystate_118 = (int) _117;
        # DEBUG yyn => yystate_118
        if (yystate_118 != 0)
          goto <bb 52>;
        else
          goto <bb 49>;

      }
      bb_49 (preds = {bb_46 bb_45 bb_48 bb_47 }, succs = {bb_50 bb_51 })
      {
        <bb 49>:
        if (yyssp_13 == yyssp_8)
          goto <bb 50>;
        else
          goto <bb 51>;

      }
      bb_51 (preds = {bb_49 }, succs = {bb_45 })
      {
        <bb 51>:
        # DEBUG D#8 => NULL
        # DEBUG D#1 => "Error: popping"
        # DEBUG D#2 => (int) D#8
        # DEBUG D#3 => yyvsp_19
        # DEBUG yymsg => D#1
        # DEBUG yytype => D#2
        # DEBUG yyvaluep => D#3
        yyvsp_110 = yyvsp_19 + 18446744073709551608;
        # DEBUG yyvsp => yyvsp_110
        yyssp_111 = yyssp_13 + 18446744073709551614;
        # DEBUG yyssp => yyssp_111
        # VUSE <.MEM_37>
        _112 = *yyssp_111;
        yystate_113 = (int) _112;
        # DEBUG yystate => yystate_113
        # VUSE <.MEM_37>
        pretmp_276 = yypact[yystate_113];
        goto <bb 45>;

      }
    }
  }
}

Pass statistics:
----------------

yyparse ()
{
  long unsigned intD.10 yynewbytesD.2313;
  union yyalloc * yyptrD.2312;
  long unsigned intD.10 yysizeD.2309;
  intD.6 yylenD.2306;
  union YYSTYPED.2254 yyvalD.2305;
  intD.6 yytokenD.2304;
  intD.6 yyresultD.2303;
  intD.6 yynD.2302;
  long unsigned intD.10 yystacksizeD.2301;
  union YYSTYPED.2254 * yyvspD.2300;
  union YYSTYPED.2254 yyvsaD.2298[200];
  yytype_int16D.2264 * yysspD.2297;
  yytype_int16D.2264 yyssaD.2295[200];
  intD.6 yyerrstatusD.2294;
  intD.6 yystateD.2293;
  short intD.15 _44;
  sizetype _47;
  yytype_int16D.2264 * _48;
  long intD.8 yyssp.0_49;
  long intD.8 yyss.1_50;
  long intD.8 _51;
  long intD.8 _52;
  long intD.8 _53;
  long unsigned intD.10 _55;
  long unsigned intD.10 _56;
  long unsigned intD.10 _59;
  long unsigned intD.10 _62;
  long unsigned intD.10 _64;
  long unsigned intD.10 _65;
  long unsigned intD.10 _67;
  sizetype _71;
  sizetype _73;
  sizetype _75;
  yytype_int16D.2264 * _76;
  signed charD.17 _78;
  intD.6 yychar.2_80;
  intD.6 yychar.3_82;
  unsigned charD.18 _87;
  unsigned int yyn.6_90;
  signed charD.17 _91;
  intD.6 _92;
  unsigned charD.18 _93;
  unsigned charD.18 _100;
  intD.6 yynerrs.10_102;
  intD.6 yynerrs.11_103;
  intD.6 yychar.2_106;
  short intD.15 _112;
  unsigned int yyn.6_115;
  signed charD.17 _116;
  unsigned charD.18 _117;
  unsigned charD.18 _122;
  intD.6 _124;
  long unsigned intD.10 _125;
  long unsigned intD.10 _126;
  union YYSTYPED.2254 * _127;
  charD.7 * _129;
  charD.7 * _130;
  intD.6 _134;
  charD.7 * _135;
  doubleD.32 _138;
  charD.7 * _139;
  unsigned charD.18 _151;
  intD.6 _153;
  signed charD.17 _154;
  intD.6 _155;
  short intD.15 _156;
  intD.6 _157;
  unsigned int yystate.7_159;
  signed charD.17 _160;
  short intD.15 _161;
  unsigned charD.18 _162;
  signed charD.17 _164;
  long unsigned intD.10 pretmp_246;
  long unsigned intD.10 pretmp_247;
  long unsigned intD.10 pretmp_248;
  long unsigned intD.10 pretmp_249;
  long unsigned intD.10 pretmp_251;
  long unsigned intD.10 pretmp_252;
  long unsigned intD.10 pretmp_253;
  long unsigned intD.10 pretmp_254;
  sizetype pretmp_256;
  sizetype pretmp_257;
  sizetype pretmp_258;
  sizetype pretmp_259;
  sizetype prephitmp_260;
  long unsigned intD.10 pretmp_261;
  long unsigned intD.10 pretmp_262;
  long unsigned intD.10 pretmp_263;
  long unsigned intD.10 pretmp_264;
  sizetype pretmp_266;
  sizetype pretmp_267;
  sizetype pretmp_268;
  sizetype pretmp_269;
  sizetype prephitmp_270;
  const yytype_int8D.2262 pretmp_276;
  const yytype_int8D.2262 prephitmp_277;
  intD.6 prephitmp_282;

;;   basic block 2, loop depth 0, count 0, freq 505, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG yytokenD.2304 => 0
  # DEBUG yylenD.2306 => 0
  # DEBUG yyssD.2296 => &yyssaD.2295
  # DEBUG yysspD.2297 => &yyssaD.2295
  # DEBUG yyvsD.2299 => &yyvsaD.2298
  # DEBUG yyvspD.2300 => &yyvsaD.2298
  # DEBUG yystacksizeD.2301 => 200
  # DEBUG yystateD.2293 => 0
  # DEBUG yyerrstatusD.2294 => 0
  # .MEM_42 = VDEF <.MEM_41(D)>
  yynerrsD.2289 = 0;
  # .MEM_43 = VDEF <.MEM_42>
  yycharD.2287 = -2;
  goto <bb 4> (yysetstate);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 3, loop depth 1, count 0, freq 650, maybe hot
;;    prev block 2, next block 61, flags: (NEW, REACHABLE)
;;    pred:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-128, 255]
  # yystate_1 = PHI <yystate_94(59), yystate_165(36), yystate_274(52), yystate_163(35)>
  # RANGE [0, 2147483647] NONZERO 0x0000000007fffffff
  # yyerrstatus_4 = PHI <yyerrstatus_6(59), yyerrstatus_5(36), 3(52), yyerrstatus_5(35)>
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  # yyssp_10 = PHI <yyssp_12(59), yyssp_148(36), yyssp_280(52), yyssp_148(35)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_16 = PHI <yyvsp_97(59), yyvsp_149(36), yyvsp_119(52), yyvsp_149(35)>
  # .MEM_27 = PHI <.MEM_98(59), .MEM_150(36), .MEM_120(52), .MEM_150(35)>
yynewstateL.0:
;;    succ:       61 [100.0%]  (FALLTHRU)

;;   basic block 61, loop depth 1, count 0, freq 650, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  # DEBUG yylenD.2306 => 0
  # DEBUG yyvspD.2300 => yyvsp_16
  # DEBUG yysspD.2297 => yyssp_10
  # DEBUG yyerrstatusD.2294 => yyerrstatus_4
  # DEBUG yystateD.2293 => yystate_1
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  yyssp_166 = yyssp_10 + 2;
  # DEBUG yysspD.2297 => yyssp_166
;;    succ:       4 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 1155, maybe hot
;;    prev block 61, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                61 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [-128, 255]
  # yystate_2 = PHI <0(2), yystate_1(61)>
  # RANGE [0, 2147483647] NONZERO 0x0000000007fffffff
  # yyerrstatus_5 = PHI <0(2), yyerrstatus_4(61)>
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_7 = PHI <&yyssaD.2295(2), yyssp_8(61)>
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  # yyssp_11 = PHI <&yyssaD.2295(2), yyssp_166(61)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_14 = PHI <&yyvsaD.2298(2), yyvsp_15(61)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_17 = PHI <&yyvsaD.2298(2), yyvsp_16(61)>
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff8
  # yystacksize_20 = PHI <200(2), yystacksize_22(61)>
  # .MEM_28 = PHI <.MEM_43(2), .MEM_27(61)>
yysetstateL.1:
  # DEBUG yylenD.2306 => 0
  # DEBUG yystacksizeD.2301 => yystacksize_20
  # DEBUG yyvspD.2300 => yyvsp_17
  # DEBUG yyvsD.2299 => yyvsp_14
  # DEBUG yysspD.2297 => yyssp_11
  # DEBUG yyssD.2296 => yyssp_7
  # DEBUG yyerrstatusD.2294 => yyerrstatus_5
  # DEBUG yystateD.2293 => yystate_2
  # RANGE [-128, 255]
  _44 = (short intD.15) yystate_2;
  # .MEM_45 = VDEF <.MEM_28>
  *yyssp_11 = _44;
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff0
  yystacksize_46 = yystacksize_20 * 2;
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffffe
  _47 = yystacksize_46 + 18446744073709551614;
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 6
  _48 = yyssp_7 + _47;
  if (yyssp_11 >= _48)
    goto <bb 5>;
  else
    goto <bb 12>;
;;    succ:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 578, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 0x0fffffffffffffffe
  yyssp.0_49 = (long intD.8) yyssp_11;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 0x0fffffffffffffff8
  yyss.1_50 = (long intD.8) yyssp_7;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 0x0fffffffffffffffe
  _51 = yyssp.0_49 - yyss.1_50;
  # RANGE [-4611686018427387904, 4611686018427387903]
  _52 = _51 /[ex] 2;
  # RANGE [-4611686018427387903, 4611686018427387904]
  _53 = _52 + 1;
  # RANGE ~[4611686018427387905, 13835058055282163712]
  yysize_54 = (long unsigned intD.10) _53;
  # DEBUG yysizeD.2309 => yysize_54
  if (yystacksize_20 > 9999)
    goto <bb 53>;
  else
    goto <bb 6>;
;;    succ:       53 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 566, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [98.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG yystacksizeD.2301 => yystacksize_46
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff0
  yystacksize_176 = MIN_EXPR <yystacksize_46, 10000>;
  # DEBUG yystacksizeD.2301 => yystacksize_176
  # DEBUG yyss1D.2311 => yyssp_7
  # RANGE [0, 18446744073709551615] NONZERO 0x0ffffffffffffffe0
  _55 = yystacksize_176 * 10;
  # RANGE [0, 18446744073709551615] NONZERO 0x0ffffffffffffffe7
  _56 = _55 + 7;
  # .MEM_57 = VDEF <.MEM_45>
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # USE = nonlocal null 
  # CLB = nonlocal null 
  yyptr_58 = mallocD.978 (_56);
  # DEBUG yyptrD.2312 => yyptr_58
  if (yyptr_58 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_285 = PHI <yyssp_7(6)>
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 555, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [98.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551614] NONZERO 0x0fffffffffffffffe
  _59 = yysize_54 * 2;
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyssp_60 = &yyptr_58->yyss_allocD.2270;
  # .MEM_61 = VDEF <.MEM_57>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  memcpyD.687 (yyssp_60, yyssp_7, _59);
  # DEBUG yyssD.2296 => yyssp_60
  # RANGE [0, 18446744073709551615] NONZERO 0x0ffffffffffffffe0
  _62 = yystacksize_176 * 2;
  # RANGE [0, 18446744073709551615] NONZERO 0x0ffffffffffffffe7
  yynewbytes_63 = _62 + 7;
  # DEBUG yynewbytesD.2313 => yynewbytes_63
  # RANGE [0, 2305843009213693951] NONZERO 0x01ffffffffffffffc
  _64 = yynewbytes_63 >> 3;
  # RANGE [0, 18446744073709551608] NONZERO 0x0ffffffffffffffe0
  _65 = _64 * 8;
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyptr_66 = yyptr_58 + _65;
  # DEBUG yyptrD.2312 => yyptr_66
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff8
  _67 = yysize_54 * 8;
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_68 = &yyptr_66->yyvs_allocD.2271;
  # .MEM_69 = VDEF <.MEM_61>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  memcpyD.687 (yyvsp_68, yyvsp_14, _67);
  # DEBUG yyvsD.2299 => yyvsp_68
  # DEBUG D#7ptD.0 => yystacksize_176 * 8
  # DEBUG D#6ptD.0 => D#7ptD.0 + 7
  # DEBUG yynewbytesD.2314 => D#6ptD.0
  # DEBUG D#5ptD.0 => D#6ptD.0 / 8
  # DEBUG D#4ptD.0 => D#5ptD.0 * 8
  # DEBUG yyptrD.2312 => yyptr_66 + D#4ptD.0
  if (&yyssaD.2295 != yyssp_7)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 387, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_70 = VDEF <.MEM_69>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (yyssp_7);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 555, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_69(8), .MEM_70(9)>
  # RANGE ~[18446744073709551613, 18446744073709551613] NONZERO 0x0fffffffffffffffe
  _71 = _59 + 18446744073709551614;
  # PT = { D.2500 }
  # ALIGN = 2, MISALIGN = 0
  yyssp_72 = yyssp_60 + _71;
  # DEBUG yysspD.2297 => yyssp_72
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff8
  _73 = _67 + 18446744073709551608;
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_74 = yyvsp_68 + _73;
  # DEBUG yyvspD.2300 => yyvsp_74
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffffe
  _75 = _62 + 18446744073709551614;
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 6
  _76 = yyssp_60 + _75;
  if (yyssp_72 >= _76)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_275 = PHI <yyssp_60(10)>
  goto <bb 55> (yyacceptlab);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 1121, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [98.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_8 = PHI <yyssp_7(4), yyssp_60(10)>
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  # yyssp_12 = PHI <yyssp_11(4), yyssp_72(10)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_15 = PHI <yyvsp_14(4), yyvsp_68(10)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_18 = PHI <yyvsp_17(4), yyvsp_74(10)>
  # RANGE [0, 18446744073709551615] NONZERO 0x0fffffffffffffff8
  # yystacksize_22 = PHI <yystacksize_20(4), yystacksize_176(10)>
  # .MEM_30 = PHI <.MEM_45(4), .MEM_29(10)>
  # DEBUG yystacksizeD.2301 => yystacksize_22
  # DEBUG yyvspD.2300 => yyvsp_18
  # DEBUG yyvsD.2299 => yyvsp_15
  # DEBUG yysspD.2297 => yyssp_12
  # DEBUG yyssD.2296 => yyssp_8
  if (yystate_2 == 5)
    goto <bb 13>;
  else
    goto <bb 14> (yybackup);
;;    succ:       13 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_284 = PHI <yyssp_8(12)>
  goto <bb 55> (yyacceptlab);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 1099, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [98.0%]  (FALSE_VALUE,EXECUTABLE)
yybackupL.12:
  # VUSE <.MEM_30>
  _78 = yypactD.2273[yystate_2];
  # RANGE [-128, 127]
  yyn_79 = (intD.6) _78;
  # DEBUG yynD.2302 => yyn_79
  if (yyn_79 == -5)
    goto <bb 27>;
  else
    goto <bb 15>;
;;    succ:       27 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 791, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_30>
  yychar.2_80 = yycharD.2287;
  if (yychar.2_80 == -2)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [13.7%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [86.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 108, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [13.7%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_81 = VDEF <.MEM_30>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  yychar.3_82 = yylexD.2237 ();
  # .MEM_83 = VDEF <.MEM_81>
  yycharD.2287 = yychar.3_82;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 791, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [86.3%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_31 = PHI <.MEM_30(15), .MEM_83(16)>
  # prephitmp_282 = PHI <yychar.2_80(15), yychar.3_82(16)>
  if (prephitmp_282 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 214, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG yytokenD.2304 => 0
  # .MEM_85 = VDEF <.MEM_31>
  yycharD.2287 = 0;
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 578, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  if (prephitmp_282 <= 260)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 289, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_31>
  _87 = yytranslateD.2272[prephitmp_282];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yytoken_88 = (intD.6) _87;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 791, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  # yytoken_25 = PHI <0(18), 2(19), yytoken_88(20)>
  # .MEM_32 = PHI <.MEM_85(18), .MEM_31(19), .MEM_31(20)>
  # DEBUG yytokenD.2304 => yytoken_25
  # RANGE [-128, 382]
  yyn_89 = yyn_79 + yytoken_25;
  # DEBUG yynD.2302 => yyn_89
  # RANGE ~[383, 4294967167]
  yyn.6_90 = (unsigned int) yyn_89;
  if (yyn.6_90 > 11)
    goto <bb 27>;
  else
    goto <bb 22>;
;;    succ:       27 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 396, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_32>
  _91 = yycheckD.2278[yyn_89];
  # RANGE [-128, 127]
  _92 = (intD.6) _91;
  if (_92 != yytoken_25)
    goto <bb 27>;
  else
    goto <bb 23>;
;;    succ:       27 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 111, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [28.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_32>
  _93 = yytableD.2277[yyn_89];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yystate_94 = (intD.6) _93;
  # DEBUG yynD.2302 => yystate_94
  if (yystate_94 == 0)
    goto <bb 58>;
  else
    goto <bb 24>;
;;    succ:       58 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 81, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  if (yyerrstatus_5 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 40, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 0x0000000007fffffff
  yyerrstatus_95 = yyerrstatus_5 + -1;
  # DEBUG yyerrstatusD.2294 => yyerrstatus_95
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 81, maybe hot
;;    prev block 25, next block 59, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 0x0000000007fffffff
  # yyerrstatus_6 = PHI <0(24), yyerrstatus_95(25)>
;;    succ:       59 [100.0%]  (FALLTHRU)

;;   basic block 59, loop depth 1, count 0, freq 81, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
  # DEBUG yyerrstatusD.2294 => yyerrstatus_6
  # .MEM_96 = VDEF <.MEM_32>
  yycharD.2287 = -2;
  # DEBUG yystateD.2293 => yystate_94
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_97 = yyvsp_18 + 8;
  # DEBUG yyvspD.2300 => yyvsp_97
  # .MEM_98 = VDEF <.MEM_96>
  MEM[(union YYSTYPED.2254 *)yyvsp_18 + 8B] = yylvalD.2258;
  goto <bb 3> (yynewstate);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 989, maybe hot
;;    prev block 59, next block 28, flags: (NEW, REACHABLE)
;;    pred:       14 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_287 = PHI <.MEM_30(14), .MEM_32(21), .MEM_32(22)>
  # DEBUG yydefaultL.29 => NULL
  # VUSE <.MEM_287>
  _100 = yydefactD.2274[yystate_2];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yyn_101 = (intD.6) _100;
  # DEBUG yynD.2302 => yyn_101
  if (yyn_101 == 0)
    goto <bb 37> (yyerrlab);
  else
    goto <bb 28> (yyreduce);
;;    succ:       37 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 494, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [50.0%]  (FALSE_VALUE,EXECUTABLE)
yyreduceL.31:
  # DEBUG yynD.2302 => yyn_101
  # VUSE <.MEM_287>
  _122 = yyr2D.2281[yyn_101];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yylen_123 = (intD.6) _122;
  # DEBUG yylenD.2306 => yylen_123
  # RANGE [-254, 1]
  _124 = 1 - yylen_123;
  # RANGE ~[2, 18446744073709551361]
  _125 = (long unsigned intD.10) _124;
  # RANGE [0, 18446744073709551608] NONZERO 0x0fffffffffffffff8
  _126 = _125 * 8;
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  _127 = yyvsp_18 + _126;
  # .MEM_128 = VDEF <.MEM_287>
  yyvalD.2305 = *_127;
  switch (_100) <default: <L86>, case 4: <L32>, case 5: <L33>, case 6: <L34>>
;;    succ:       29 [20.4%]  (EXECUTABLE)
;;                30 [26.5%]  (EXECUTABLE)
;;                31 [26.5%]  (EXECUTABLE)
;;                32 [26.5%]  (EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 101, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       28 [20.4%]  (EXECUTABLE)
<L86>:
  pretmp_249 = (long unsigned intD.10) _122;
  pretmp_254 = pretmp_249 * 8;
  pretmp_259 = -pretmp_254;
  pretmp_264 = pretmp_249 * 2;
  pretmp_269 = -pretmp_264;
  goto <bb 33> (<L85>);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 131, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [26.5%]  (EXECUTABLE)
<L32>:
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null 
  _129 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -8B].nameD.2255;
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null 
  _130 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -24B].nameD.2255;
  # .MEM_131 = VDEF <.MEM_128>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  config_assign_stringD.2242 (_130, _129);
  # .MEM_132 = VDEF <.MEM_131>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (_130);
  # .MEM_133 = VDEF <.MEM_132>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (_129);
  pretmp_246 = (long unsigned intD.10) _122;
  pretmp_251 = pretmp_246 * 8;
  pretmp_256 = -pretmp_251;
  pretmp_261 = pretmp_246 * 2;
  pretmp_266 = -pretmp_261;
  goto <bb 33> (<L85>);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 131, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       28 [26.5%]  (EXECUTABLE)
<L33>:
  # VUSE <.MEM_128>
  _134 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -8B].numD.2256;
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null 
  _135 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -24B].nameD.2255;
  # .MEM_136 = VDEF <.MEM_128>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  config_assign_intD.2245 (_135, _134);
  # .MEM_137 = VDEF <.MEM_136>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (_135);
  pretmp_247 = (long unsigned intD.10) _122;
  pretmp_252 = pretmp_247 * 8;
  pretmp_257 = -pretmp_252;
  pretmp_262 = pretmp_247 * 2;
  pretmp_267 = -pretmp_262;
  goto <bb 33> (<L85>);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 131, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       28 [26.5%]  (EXECUTABLE)
<L34>:
  # VUSE <.MEM_128>
  _138 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -8B].fnumD.2257;
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null 
  _139 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + -24B].nameD.2255;
  # .MEM_140 = VDEF <.MEM_128>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  config_assign_floatD.2248 (_139, _138);
  # .MEM_141 = VDEF <.MEM_140>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (_139);
  pretmp_248 = (long unsigned intD.10) _122;
  pretmp_253 = pretmp_248 * 8;
  pretmp_258 = -pretmp_253;
  pretmp_263 = pretmp_248 * 2;
  pretmp_268 = -pretmp_263;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 524, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_133(30), .MEM_137(31), .MEM_141(32), .MEM_128(29), .MEM_175(58)>
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  # yyn_177 = PHI <yyn_101(30), yyn_101(31), yyn_101(32), yyn_101(29), 0(58)>
  # RANGE ~[1, 18446744073709549575] NONZERO 0x0fffffffffffffff8
  # prephitmp_260 = PHI <pretmp_256(30), pretmp_257(31), pretmp_258(32), pretmp_259(29), 0(58)>
  # RANGE ~[1, 18446744073709551105] NONZERO 0x0fffffffffffffffe
  # prephitmp_270 = PHI <pretmp_266(30), pretmp_267(31), pretmp_268(32), pretmp_269(29), 0(58)>
<L85>:
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_145 = yyvsp_18 + prephitmp_260;
  # DEBUG yyvspD.2300 => yyvsp_145
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  yyssp_148 = yyssp_12 + prephitmp_270;
  # DEBUG yysspD.2297 => yyssp_148
  # DEBUG yylenD.2306 => 0
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_149 = yyvsp_145 + 8;
  # DEBUG yyvspD.2300 => yyvsp_149
  # .MEM_150 = VDEF <.MEM_35>
  MEM[(union YYSTYPED.2254 *)yyvsp_145 + 8B] = yyvalD.2305;
  # VUSE <.MEM_150>
  _151 = yyr1D.2280[yyn_177];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yyn_152 = (intD.6) _151;
  # DEBUG yynD.2302 => yyn_152
  # RANGE [-8, 247]
  _153 = yyn_152 + -8;
  # VUSE <.MEM_150>
  _154 = yypgotoD.2275[_153];
  # RANGE [-128, 127]
  _155 = (intD.6) _154;
  # VUSE <.MEM_150>
  _156 = *yyssp_148;
  # RANGE [-32768, 32767]
  _157 = (intD.6) _156;
  # RANGE [-32896, 32894]
  yystate_158 = _155 + _157;
  # DEBUG yystateD.2293 => yystate_158
  # RANGE ~[32895, 4294934399]
  yystate.7_159 = (unsigned int) yystate_158;
  if (yystate.7_159 <= 11)
    goto <bb 34>;
  else
    goto <bb 36>;
;;    succ:       34 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 262, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_150>
  _160 = yycheckD.2278[yystate_158];
  # RANGE [-128, 127]
  _161 = (short intD.15) _160;
  if (_156 == _161)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 73, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_150>
  _162 = yytableD.2277[yystate_158];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yystate_163 = (intD.6) _162;
  # DEBUG yystateD.2293 => yystate_163
  goto <bb 3> (yynewstate);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [72.0%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_150>
  _164 = yydefgotoD.2276[_153];
  # RANGE [-128, 127]
  yystate_165 = (intD.6) _164;
  # DEBUG yystateD.2293 => yystate_165
  goto <bb 3> (yynewstate);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 494, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       27 [50.0%]  (TRUE_VALUE,EXECUTABLE)
yyerrlabL.41:
  # DEBUG yytokenD.2304 => -2
  if (yyerrstatus_5 == 0)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 143, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_287>
  yynerrs.10_102 = yynerrsD.2289;
  yynerrs.11_103 = yynerrs.10_102 + 1;
  # .MEM_104 = VDEF <.MEM_287>
  yynerrsD.2289 = yynerrs.11_103;
  # .MEM_105 = VDEF <.MEM_104>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  yyerrorD.2239 ("syntax error");
  goto <bb 44> (yyerrlab1);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 351, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  if (yyerrstatus_5 == 3)
    goto <bb 40>;
  else
    goto <bb 44> (yyerrlab1);
;;    succ:       40 [39.4%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [60.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 138, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [39.4%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_287>
  yychar.2_106 = yycharD.2287;
  if (yychar.2_106 <= 0)
    goto <bb 41>;
  else
    goto <bb 43>;
;;    succ:       41 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 37, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  if (yychar.2_106 == 0)
    goto <bb 42>;
  else
    goto <bb 44> (yyerrlab1);
;;    succ:       42 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_283 = PHI <yyssp_8(41)>
  goto <bb 55> (yyacceptlab);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 101, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       40 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#1ptD.0 => "Error: discarding"
  # DEBUG D#3ptD.0 => &yylvalD.2258
  # DEBUG yymsgD.2485 => D#1ptD.0
  # DEBUG yytypeD.2484 => D#2ptD.0
  # DEBUG yyvaluepD.2483 => D#3ptD.0
  # .MEM_107 = VDEF <.MEM_287>
  yycharD.2287 = -2;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 493, maybe hot
;;    prev block 43, next block 60, flags: (NEW, REACHABLE)
;;    pred:       41 [98.0%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [60.6%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_287(41), .MEM_105(38), .MEM_107(43), .MEM_287(39)>
yyerrlab1L.58:
;;    succ:       60 [100.0%]  (FALLTHRU)

;;   basic block 60, loop depth 1, count 0, freq 493, maybe hot
;;    prev block 44, next block 45, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU)
  # DEBUG yyerrstatusD.2294 => 3
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 2, count 0, freq 10000, maybe hot
;;    prev block 60, next block 46, flags: (NEW, REACHABLE)
;;    pred:       60 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  # yyssp_13 = PHI <yyssp_12(60), yyssp_111(51)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_19 = PHI <yyvsp_18(60), yyvsp_110(51)>
  # prephitmp_277 = PHI <_78(60), pretmp_276(51)>
  # DEBUG yyvspD.2300 => yyvsp_19
  # DEBUG yysspD.2297 => yyssp_13
  # DEBUG yystateD.2293 => NULL
  # RANGE [-128, 127]
  yyn_109 = (intD.6) prephitmp_277;
  # DEBUG yynD.2302 => yyn_109
  if (yyn_109 != -5)
    goto <bb 46>;
  else
    goto <bb 49>;
;;    succ:       46 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 2, count 0, freq 7200, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [-127, 128]
  yyn_114 = yyn_109 + 1;
  # DEBUG yynD.2302 => yyn_114
  # RANGE ~[129, 4294967168]
  yyn.6_115 = (unsigned int) yyn_114;
  if (yyn.6_115 <= 11)
    goto <bb 47>;
  else
    goto <bb 49>;
;;    succ:       47 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 47, loop depth 2, count 0, freq 3600, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       46 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_37>
  _116 = yycheckD.2278[yyn_114];
  if (_116 == 1)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 2, count 0, freq 1008, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_37>
  _117 = yytableD.2277[yyn_114];
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  yystate_118 = (intD.6) _117;
  # DEBUG yynD.2302 => yystate_118
  if (yystate_118 != 0)
    goto <bb 52>;
  else
    goto <bb 49>;
;;    succ:       52 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 2, count 0, freq 9955, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       46 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                45 [28.0%]  (FALSE_VALUE,EXECUTABLE)
;;                48 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;                47 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  if (yyssp_13 == yyssp_8)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 448, maybe hot
;;    prev block 49, next block 51, flags: (NEW)
;;    pred:       49 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_281 = PHI <yyssp_8(49)>
  goto <bb 55> (yyacceptlab);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 2, count 0, freq 9507, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       49 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#8ptD.0 => NULL
  # DEBUG D#1ptD.0 => "Error: popping"
  # DEBUG D#2ptD.0 => (intD.6) D#8ptD.0
  # DEBUG D#3ptD.0 => yyvsp_19
  # DEBUG yymsgD.2488 => D#1ptD.0
  # DEBUG yytypeD.2487 => D#2ptD.0
  # DEBUG yyvaluepD.2486 => D#3ptD.0
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_110 = yyvsp_19 + 18446744073709551608;
  # DEBUG yyvspD.2300 => yyvsp_110
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  yyssp_111 = yyssp_13 + 18446744073709551614;
  # DEBUG yysspD.2297 => yyssp_111
  # VUSE <.MEM_37>
  _112 = *yyssp_111;
  # RANGE [-32768, 32767]
  yystate_113 = (intD.6) _112;
  # DEBUG yystateD.2293 => yystate_113
  # VUSE <.MEM_37>
  pretmp_276 = yypactD.2273[yystate_113];
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 45, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       48 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 2, MISALIGN = 0
  # yyssp_280 = PHI <yyssp_13(48)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyvsp_279 = PHI <yyvsp_19(48)>
  # RANGE [0, 255] NONZERO 0x000000000000000ff
  # yystate_274 = PHI <yystate_118(48)>
  # PT = { D.2298 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  yyvsp_119 = yyvsp_279 + 8;
  # DEBUG yyvspD.2300 => yyvsp_119
  # .MEM_120 = VDEF <.MEM_37>
  MEM[(union YYSTYPED.2254 *)yyvsp_279 + 8B] = yylvalD.2258;
  # DEBUG yystateD.2293 => yystate_274
  goto <bb 3> (yynewstate);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       5 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_286 = PHI <yyssp_7(5)>
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 23, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_288 = PHI <.MEM_45(53), .MEM_57(7)>
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_273 = PHI <yyssp_286(53), yyssp_285(7)>
  # DEBUG yyexhaustedlabL.71 => NULL
  # .MEM_77 = VDEF <.MEM_288>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  yyerrorD.2239 ("memory exhausted");
  # DEBUG yyresultD.2303 => 2
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 505, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.2295 D.2500 }
  # ALIGN = 8, MISALIGN = 0
  # yyssp_9 = PHI <yyssp_284(13), yyssp_283(42), yyssp_273(54), yyssp_275(11), yyssp_281(50)>
  # RANGE [0, 2] NONZERO 0x00000000000000003
  # yyresult_24 = PHI <0(13), 1(42), 2(54), 1(11), 1(50)>
  # .MEM_39 = PHI <.MEM_30(13), .MEM_287(42), .MEM_77(54), .MEM_29(11), .MEM_37(50)>
yyacceptlabL.69:
yyreturnL.72:
  # DEBUG yyresultD.2303 => yyresult_24
  # DEBUG yyvspD.2300 => NULL
  # DEBUG yysspD.2297 => NULL
  # DEBUG yyssD.2296 => yyssp_9
  # DEBUG yyvspD.2300 => NULL
  # DEBUG yysspD.2297 => NULL
  # DEBUG yyvspD.2300 => NULL
  # DEBUG yysspD.2297 => NULL
  if (&yyssaD.2295 != yyssp_9)
    goto <bb 56>;
  else
    goto <bb 57>;
;;    succ:       56 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                57 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 396, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       55 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_167 = VDEF <.MEM_39>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  freeD.919 (yyssp_9);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 505, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       55 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_39(55), .MEM_167(56)>
  # .MEM_168 = VDEF <.MEM_40>
  yyssaD.2295 ={v} {CLOBBER};
  # .MEM_169 = VDEF <.MEM_168>
  yyvsaD.2298 ={v} {CLOBBER};
  # .MEM_170 = VDEF <.MEM_169>
  yyvalD.2305 ={v} {CLOBBER};
  # VUSE <.MEM_170>
  return yyresult_24;
;;    succ:       EXIT [100.0%] 

;;   basic block 58, loop depth 1, count 0, freq 30, maybe hot
;;    prev block 57, next block 1, flags: (NEW, REACHABLE)
;;    pred:       23 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG yynD.2302 => 0
  # DEBUG yynD.2302 => 0
  # DEBUG yylenD.2306 => 0
  # .MEM_175 = VDEF <.MEM_32>
  yyvalD.2305 = MEM[(union YYSTYPED.2254 *)yyvsp_18 + 8B];
  goto <bb 33> (<L85>);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

}


