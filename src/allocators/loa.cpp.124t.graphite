
;; Function virtual void LOA::Allocate() (_ZN3LOA8AllocateEv, funcdef_no=1722, decl_uid=36931, cgraph_uid=425, symbol_order=426)


Pass statistics:
----------------

virtual void LOA::Allocate() (struct LOAD.36919 * const thisD.37056)
{
  intD.9 iD.37812;
  intD.9 oD.37811;
  intD.9 iD.37065;
  intD.9 jD.37064;
  intD.9 lonely_cntD.37063;
  intD.9 lonelyD.37062;
  intD.9 output_offsetD.37061;
  intD.9 input_offsetD.37060;
  intD.9 outputD.37059;
  intD.9 inputD.37058;
  intD.9 _7;
  intD.9 _14;
  boolD.2757 _17;
  intD.9 _23;
  long unsigned intD.14 _24;
  struct sRequestD.34315 & _25;
  intD.9 _28;
  long unsigned intD.14 _29;
  long unsigned intD.14 _30;
  intD.9 _31;
  intD.9 & _32;
  intD.9 _34;
  intD.9 _38;
  long unsigned intD.14 _39;
  long unsigned intD.14 _40;
  intD.9 _44;
  long unsigned intD.14 _46;
  intD.9 _47;
  intD.9 _48;
  struct vectorD.34419 & _51;
  long unsigned intD.14 _55;
  long unsigned intD.14 _56;
  intD.9 _59;
  long unsigned intD.14 _61;
  intD.9 _62;
  struct sRequestD.34315 & _64;
  intD.9 & _68;
  intD.9 _69;
  intD.9 _70;
  intD.9 _71;
  intD.9 _72;
  long unsigned intD.14 _74;
  intD.9 _75;
  intD.9 _76;
  intD.9 _77;
  intD.9 _78;
  intD.9 * _83;
  intD.9 * _88;
  intD.9 * _89;
  intD.9 * _90;
  struct sRequestD.34315 * _93;
  long unsigned intD.14 _97;
  intD.9 & _98;
  intD.9 & _101;
  long unsigned intD.14 _102;
  intD.9 & _103;
  long unsigned intD.14 _104;
  intD.9 & _105;
  intD.9 & _106;
  intD.9 & _107;
  intD.9 & _108;
  intD.9 _111;
  long unsigned intD.14 _116;
  intD.9 _117;
  intD.9 & _118;
  intD.9 * pretmp_119;
  long unsigned intD.14 _122;
  intD.9 * _130;
  intD.9 _132;
  const intD.9 prephitmp_133;
  intD.9 _135;
  intD.9 _155;
  long unsigned intD.14 _158;
  intD.9 * pretmp_160;
  const intD.9 pretmp_162;
  const intD.9 prephitmp_163;
  struct vectorD.34419 * pretmp_171;
  long unsigned intD.14 pretmp_173;
  struct vectorD.34419 & pretmp_174;
  struct sRequestD.34315 * pretmp_175;
  const intD.9 pretmp_179;
  const intD.9 prephitmp_180;
  const intD.9 prephitmp_183;
  intD.9 * pretmp_186;
  const intD.9 pretmp_189;
  const intD.9 prephitmp_190;
  const intD.9 prephitmp_196;
  const intD.9 prephitmp_199;
  long unsigned intD.14 _200;
  intD.9 _202;
  intD.9 * pretmp_206;
  intD.9 _208;
  const intD.9 prephitmp_209;
  intD.9 prephitmp_211;
  long unsigned intD.14 pretmp_214;
  struct vectorD.34419 * pretmp_215;
  intD.9 _217;
  const intD.9 pretmp_220;
  const intD.9 prephitmp_221;

;;   basic block 2, loop depth 0, count 0, freq 87, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG jD.37064 => 0
  # DEBUG jD.37064 => 0
  # VUSE <.MEM_21(D)>
  _132 = this_22(D)->D.36957.D.35235._outputsD.33567;
  if (_132 <= 0)
    goto <bb 37>;
  else
    goto <bb 4>;
;;    succ:       37 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _217 = PHI <_23(10)>
  # prephitmp_199 = PHI <prephitmp_209(10)>
  # DEBUG inputD.37058 => 0
  if (prephitmp_199 <= 0)
    goto <bb 12>;
  else
    goto <bb 14>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_21(D)>
  # PT = nonlocal escaped 
  pretmp_206 = MEM[(intD.9 * *)this_22(D) + 184B];
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # j_141 = PHI <0(4), j_37(11)>
  # .MEM_145 = PHI <.MEM_21(D)(4), .MEM_147(11)>
  # DEBUG jD.37064 => j_141
  # RANGE [0, 18446744073709551615]
  _24 = (long unsigned intD.14) j_141;
  # DEBUG D#5ptD.0 => &this_22(D)->_countsD.36921
  # DEBUG D#2ptD.0 => D#5ptD.0
  # DEBUG __nD.39454 => _24
  # DEBUG thisD.39455 => D#2ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _74 = _24 * 4;
  # PT = nonlocal escaped 
  _68 = pretmp_206 + _74;
  # .MEM_27 = VDEF <.MEM_145>
  *_68 = 0;
  # DEBUG iD.37065 => 0
  # DEBUG iD.37065 => 0
  # VUSE <.MEM_27>
  _135 = this_22(D)->D.36957.D.35235._inputsD.33566;
  if (_135 <= 0)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_214 = _24 * 16;
  # VUSE <.MEM_27>
  # PT = nonlocal escaped 
  pretmp_215 = MEM[(struct vectorD.34419 * *)this_22(D) + 160B];
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 8895, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_142 = PHI <0(6), i_36(9)>
  # .MEM_146 = PHI <.MEM_27(6), .MEM_35(9)>
  # prephitmp_211 = PHI <0(6), _34(9)>
  # DEBUG iD.37065 => i_142
  # RANGE [0, 18446744073709551615]
  _29 = (long unsigned intD.14) i_142;
  # DEBUG D#6ptD.0 => &this_22(D)->D.36957._requestD.35166
  # DEBUG D#3ptD.0 => D#6ptD.0
  # DEBUG __nD.39462 => _29
  # DEBUG thisD.39463 => D#3ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _56 = _29 * 24;
  # PT = nonlocal escaped 
  _51 = pretmp_215 + _56;
  # VUSE <.MEM_146>
  # PT = nonlocal escaped null 
  _93 = MEM[(struct sRequestD.34315 * *)_51];
  # DEBUG __nD.39458 => _24
  # DEBUG thisD.39459 => D#4ptD.0
  # PT = nonlocal escaped null 
  _64 = _93 + pretmp_214;
  # VUSE <.MEM_146>
  _31 = _64->labelD.34318;
  # RANGE [0, 1]
  _17 = _31 != -1;
  # RANGE [-2147483648, 2147483647] NONZERO 1
  _111 = (intD.9) _17;
  # DEBUG D#7ptD.0 => &this_22(D)->_countsD.36921
  # DEBUG D#2ptD.0 => D#7ptD.0
  # DEBUG __nD.39466 => _24
  # DEBUG thisD.39467 => D#2ptD.0
  _34 = _111 + prephitmp_211;
  # .MEM_35 = VDEF <.MEM_146>
  *_68 = _34;
  i_36 = i_142 + 1;
  # DEBUG iD.37065 => i_36
  # DEBUG iD.37065 => i_36
  # VUSE <.MEM_35>
  _28 = this_22(D)->D.36957.D.35235._inputsD.33566;
  if (_28 <= i_36)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _208 = PHI <_28(7)>
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 8094, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_147 = PHI <.MEM_35(8), .MEM_27(5)>
  # prephitmp_209 = PHI <_208(8), _135(5)>
  j_37 = j_141 + 1;
  # DEBUG jD.37064 => j_37
  # DEBUG jD.37064 => j_37
  # VUSE <.MEM_147>
  _23 = this_22(D)->D.36957.D.35235._outputsD.33567;
  if (_23 <= j_37)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 86, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_131 = PHI <.MEM_52(25), .MEM_147(3)>
  # prephitmp_180 = PHI <pretmp_179(25), _217(3)>
  # prephitmp_183 = PHI <_202(25), prephitmp_199(3)>
  # DEBUG outputD.37059 => 0
  if (prephitmp_180 <= 0)
    goto <bb 13>;
  else
    goto <bb 26>;
;;    succ:       13 [8.3%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [91.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 87, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [8.3%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_219 = PHI <.MEM_131(12), .MEM_20(35), .MEM_21(D)(37)>
  # VUSE <.MEM_219>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 14, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       3 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;                37 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_113 = PHI <.MEM_147(3), .MEM_21(D)(37)>
  # _14 = PHI <prephitmp_199(3), _7(37)>
  # prephitmp_133 = PHI <_217(3), _132(37)>
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  pretmp_119 = MEM[(intD.9 * *)this_22(D) + 232B];
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  pretmp_160 = MEM[(intD.9 * *)this_22(D) + 208B];
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # input_136 = PHI <0(14), input_53(24)>
  # .MEM_148 = PHI <.MEM_113(14), .MEM_52(24)>
  # _155 = PHI <_14(14), _38(24)>
  # prephitmp_163 = PHI <prephitmp_133(14), pretmp_162(24)>
  # DEBUG inputD.37058 => input_136
  # RANGE [0, 18446744073709551615]
  _39 = (long unsigned intD.14) input_136;
  # DEBUG D#8ptD.0 => &this_22(D)->_rptrD.36923
  # DEBUG D#2ptD.0 => D#8ptD.0
  # DEBUG __nD.39470 => _39
  # DEBUG thisD.39471 => D#2ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = _39 * 4;
  # PT = nonlocal escaped 
  _32 = pretmp_119 + _40;
  # VUSE <.MEM_148>
  output_offset_41 = *_32;
  # DEBUG output_offsetD.37061 => output_offset_41
  # DEBUG lonelyD.37062 => -1
  lonely_cnt_42 = _155 + 1;
  # DEBUG lonely_cntD.37063 => lonely_cnt_42
  # DEBUG oD.37811 => 0
  # DEBUG oD.37811 => 0
  # DEBUG lonely_cntD.37063 => lonely_cnt_42
  # DEBUG lonelyD.37062 => -1
  if (prephitmp_163 <= 0)
    goto <bb 23>;
  else
    goto <bb 16>;
;;    succ:       23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_148>
  # PT = nonlocal escaped 
  pretmp_171 = MEM[(struct vectorD.34419 * *)this_22(D) + 160B];
  pretmp_173 = _39 * 24;
  # PT = nonlocal escaped 
  pretmp_174 = pretmp_171 + pretmp_173;
  # VUSE <.MEM_148>
  # PT = nonlocal escaped null 
  pretmp_175 = MEM[(struct sRequestD.34315 * *)pretmp_174];
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 2, count 0, freq 8895, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # lonely_138 = PHI <-1(16), lonely_4(22)>
  # lonely_cnt_140 = PHI <lonely_cnt_42(16), lonely_cnt_6(22)>
  # o_143 = PHI <0(16), o_50(22)>
  # DEBUG oD.37811 => o_143
  # DEBUG lonely_cntD.37063 => lonely_cnt_140
  # DEBUG lonelyD.37062 => lonely_138
  _44 = output_offset_41 + o_143;
  lonely_45 = _44 % prephitmp_163;
  # DEBUG outputD.37059 => lonely_45
  # RANGE ~[2147483648, 18446744071562067967]
  _46 = (long unsigned intD.14) lonely_45;
  # DEBUG D#9ptD.0 => &this_22(D)->D.36957._requestD.35166
  # DEBUG D#3ptD.0 => D#9ptD.0
  # DEBUG __nD.39478 => _39
  # DEBUG thisD.39479 => D#3ptD.0
  # DEBUG __nD.39474 => _46
  # DEBUG thisD.39475 => D#4ptD.0
  # RANGE [0, 18446744073709551600] NONZERO 18446744073709551600
  _30 = _46 * 16;
  # PT = nonlocal escaped null 
  _25 = pretmp_175 + _30;
  # VUSE <.MEM_148>
  _47 = _25->labelD.34318;
  if (_47 != -1)
    goto <bb 18>;
  else
    goto <bb 20>;
;;    succ:       18 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 2, count 0, freq 6405, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#10ptD.0 => &this_22(D)->_countsD.36921
  # VUSE <.MEM_148>
  # PT = nonlocal escaped 
  _83 = MEM[(intD.9 * *)this_22(D) + 184B];
  # DEBUG D#2ptD.0 => D#10ptD.0
  # DEBUG __nD.39482 => _46
  # DEBUG thisD.39483 => D#2ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _97 = _46 * 4;
  # PT = nonlocal escaped 
  _98 = _83 + _97;
  # VUSE <.MEM_148>
  _48 = *_98;
  if (_48 < lonely_cnt_140)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 2, count 0, freq 3203, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 2, count 0, freq 8895, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [28.0%]  (FALSE_VALUE,EXECUTABLE)
  # lonely_4 = PHI <lonely_138(18), lonely_45(19), lonely_138(17)>
  # lonely_cnt_6 = PHI <lonely_cnt_140(18), _48(19), lonely_cnt_140(17)>
  # DEBUG lonely_cntD.37063 => lonely_cnt_6
  # DEBUG lonelyD.37062 => lonely_4
  o_50 = o_143 + 1;
  # DEBUG oD.37811 => o_50
  # DEBUG oD.37811 => o_50
  # DEBUG lonely_cntD.37063 => lonely_cnt_6
  # DEBUG lonelyD.37062 => lonely_4
  if (o_50 >= prephitmp_163)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # lonely_218 = PHI <lonely_4(20)>
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 2, count 0, freq 8094, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # lonely_139 = PHI <lonely_218(21), -1(15)>
  # DEBUG D#12ptD.0 => &this_22(D)->_reqD.36922
  # DEBUG D#2ptD.0 => D#12ptD.0
  # DEBUG __nD.39490 => _39
  # DEBUG thisD.39491 => D#2ptD.0
  # PT = nonlocal escaped 
  _101 = pretmp_160 + _40;
  # .MEM_52 = VDEF <.MEM_148>
  *_101 = lonely_139;
  input_53 = input_136 + 1;
  # DEBUG inputD.37058 => input_53
  # DEBUG inputD.37058 => input_53
  # VUSE <.MEM_52>
  _38 = this_22(D)->D.36957.D.35235._inputsD.33566;
  if (_38 <= input_53)
    goto <bb 25>;
  else
    goto <bb 24>;
;;    succ:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_52>
  pretmp_162 = this_22(D)->D.36957.D.35235._outputsD.33567;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _202 = PHI <_38(23)>
  # VUSE <.MEM_52>
  pretmp_179 = this_22(D)->D.36957.D.35235._outputsD.33567;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       12 [91.7%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_131>
  # PT = nonlocal escaped 
  pretmp_186 = MEM[(intD.9 * *)this_22(D) + 256B];
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # output_137 = PHI <0(26), output_80(36)>
  # .MEM_151 = PHI <.MEM_131(26), .MEM_20(36)>
  # prephitmp_190 = PHI <prephitmp_183(26), pretmp_189(36)>
  # prephitmp_196 = PHI <prephitmp_180(26), prephitmp_221(36)>
  # DEBUG outputD.37059 => output_137
  # RANGE [0, 18446744073709551615]
  _55 = (long unsigned intD.14) output_137;
  # DEBUG D#13ptD.0 => &this_22(D)->_gptrD.36924
  # DEBUG D#2ptD.0 => D#13ptD.0
  # DEBUG __nD.39494 => _55
  # DEBUG thisD.39495 => D#2ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _102 = _55 * 4;
  # PT = nonlocal escaped 
  _103 = pretmp_186 + _102;
  # VUSE <.MEM_151>
  input_offset_57 = *_103;
  # DEBUG input_offsetD.37060 => input_offset_57
  # DEBUG iD.37812 => 0
  # DEBUG iD.37812 => 0
  if (prephitmp_190 <= 0)
    goto <bb 35>;
  else
    goto <bb 28>;
;;    succ:       35 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 840, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  input_128 = input_offset_57 % prephitmp_190;
  # DEBUG inputD.37058 => input_128
  # RANGE ~[2147483648, 18446744071562067967]
  _122 = (long unsigned intD.14) input_128;
  # DEBUG D#14ptD.0 => &this_22(D)->_reqD.36922
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _130 = MEM[(intD.9 * *)this_22(D) + 208B];
  # DEBUG D#2ptD.0 => D#14ptD.0
  # DEBUG __nD.39498 => _122
  # DEBUG thisD.39499 => D#2ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _116 = _122 * 4;
  # PT = nonlocal escaped 
  _118 = _130 + _116;
  # VUSE <.MEM_151>
  _117 = *_118;
  if (_117 == output_137)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 2, count 0, freq 8710, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       34 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  _59 = input_offset_57 + i_63;
  input_60 = _59 % prephitmp_190;
  # DEBUG inputD.37058 => input_60
  # RANGE ~[2147483648, 18446744071562067967]
  _61 = (long unsigned intD.14) input_60;
  # DEBUG D#14ptD.0 => &this_22(D)->_reqD.36922
  # DEBUG D#2ptD.0 => D#14ptD.0
  # DEBUG __nD.39498 => _61
  # DEBUG thisD.39499 => D#2ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _104 = _61 * 4;
  # PT = nonlocal escaped 
  _105 = _130 + _104;
  # VUSE <.MEM_151>
  _62 = *_105;
  if (_62 == output_137)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 392, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       29 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # input_201 = PHI <input_60(29)>
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  # _200 = PHI <_104(29)>
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 2, count 0, freq 8318, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       29 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 430, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # input_157 = PHI <input_201(30), input_128(28)>
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  # _158 = PHI <_200(30), _116(28)>
  # DEBUG D#15ptD.0 => &this_22(D)->D.36957.D.35235._inmatchD.34313
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _88 = MEM[(intD.9 * *)this_22(D) + 112B];
  # DEBUG D#2ptD.0 => D#15ptD.0
  # DEBUG __nD.39522 => _122
  # DEBUG thisD.39523 => D#2ptD.0
  # PT = nonlocal escaped 
  _108 = _88 + _158;
  # .MEM_65 = VDEF <.MEM_151>
  *_108 = output_137;
  # DEBUG D#16ptD.0 => &this_22(D)->D.36957.D.35235._outmatchD.34314
  # VUSE <.MEM_65>
  # PT = nonlocal escaped 
  _89 = MEM[(intD.9 * *)this_22(D) + 136B];
  # DEBUG D#2ptD.0 => D#16ptD.0
  # DEBUG __nD.39518 => _55
  # DEBUG thisD.39519 => D#2ptD.0
  # PT = nonlocal escaped 
  _107 = _89 + _102;
  # .MEM_67 = VDEF <.MEM_65>
  *_107 = input_157;
  # DEBUG D#17ptD.0 => &this_22(D)->_rptrD.36923
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  _90 = MEM[(intD.9 * *)this_22(D) + 232B];
  # DEBUG D#2ptD.0 => D#17ptD.0
  # DEBUG __nD.39514 => _122
  # DEBUG thisD.39515 => D#2ptD.0
  # PT = nonlocal escaped 
  _106 = _90 + _158;
  # DEBUG D#18ptD.0 => &this_22(D)->_rptrD.36923
  # DEBUG D#2ptD.0 => D#18ptD.0
  # DEBUG __nD.39510 => _122
  # DEBUG thisD.39511 => D#2ptD.0
  # VUSE <.MEM_67>
  _69 = *_106;
  _70 = _69 + 1;
  # VUSE <.MEM_67>
  _71 = this_22(D)->D.36957.D.35235._outputsD.33567;
  _72 = _70 % _71;
  # .MEM_73 = VDEF <.MEM_67>
  *_106 = _72;
  # DEBUG D#19ptD.0 => &this_22(D)->_gptrD.36924
  # DEBUG D#2ptD.0 => D#19ptD.0
  # DEBUG __nD.39506 => _55
  # DEBUG thisD.39507 => D#2ptD.0
  # DEBUG D#20ptD.0 => &this_22(D)->_gptrD.36924
  # DEBUG D#2ptD.0 => D#20ptD.0
  # DEBUG __nD.39502 => _55
  # DEBUG thisD.39503 => D#2ptD.0
  # VUSE <.MEM_73>
  _75 = *_103;
  _76 = _75 + 1;
  # VUSE <.MEM_73>
  _77 = this_22(D)->D.36957.D.35235._inputsD.33566;
  _78 = _76 % _77;
  # .MEM_79 = VDEF <.MEM_73>
  *_103 = _78;
  # VUSE <.MEM_79>
  pretmp_220 = this_22(D)->D.36957.D.35235._outputsD.33567;
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 802, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       28 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 2, count 0, freq 9120, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_144 = PHI <0(33), i_63(31)>
  # DEBUG iD.37812 => i_144
  # DEBUG inputD.37058 => input_128
  # DEBUG D#14ptD.0 => &this_22(D)->_reqD.36922
  # DEBUG D#2ptD.0 => D#14ptD.0
  # DEBUG __nD.39498 => _122
  # DEBUG thisD.39499 => D#2ptD.0
  i_63 = i_144 + 1;
  # DEBUG iD.37812 => i_63
  # DEBUG iD.37812 => i_63
  if (i_63 >= prephitmp_190)
    goto <bb 35>;
  else
    goto <bb 29>;
;;    succ:       35 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_20 = PHI <.MEM_151(34), .MEM_79(32), .MEM_151(27)>
  # prephitmp_221 = PHI <prephitmp_196(34), pretmp_220(32), prephitmp_196(27)>
  output_80 = output_137 + 1;
  # DEBUG outputD.37059 => output_80
  # DEBUG outputD.37059 => output_80
  if (output_80 >= prephitmp_221)
    goto <bb 13>;
  else
    goto <bb 36>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 35, next block 37, flags: (NEW)
;;    pred:       35 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_20>
  pretmp_189 = this_22(D)->D.36957.D.35235._inputsD.33566;
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 36, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG inputD.37058 => 0
  # VUSE <.MEM_21(D)>
  _7 = this_22(D)->D.36957.D.35235._inputsD.33566;
  if (_7 <= 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

}



Updating SSA:
Registering new PHI nodes in block #27
Registering new PHI nodes in block #28
Registering new PHI nodes in block #33
Registering new PHI nodes in block #34
Registering new PHI nodes in block #29
Registering new PHI nodes in block #31
Registering new PHI nodes in block #30
Registering new PHI nodes in block #32
Registering new PHI nodes in block #35
Registering new PHI nodes in block #36
Updating SSA information for statement pretmp_189 = this_22(D)->D.36957.D.35235._inputs;
Registering new PHI nodes in block #38

DFA Statistics for virtual void LOA::Allocate()

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                            213       1704b
DEF operands                             84        672b
VUSE operands                            42        336b
VDEF operands                             7         56b
PHI nodes                                41       4264b
PHI arguments                            79       3792b
---------------------------------------------------------
Total memory used by DFA/SSA data                   10k
---------------------------------------------------------

Average number of arguments per PHI node: 1.9 (max: 3)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_152 -> { .MEM_20 }
Incremental SSA update started at block: 27
Number of blocks in CFG: 43
Number of blocks to update: 4 (  9%)
Affected blocks: 27 35 36 38


Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int * *)this_22(D) + 184B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 184B]
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector * *)this_22(D) + 160B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_22(D) + 160B]
Creating dr for MEM[(struct vector * *)this_22(D) + 160B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_22(D) + 160B]
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)pretmp_215]
	Access function 0: {0B, +, 24}_2
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_68
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)pretmp_215]
	Access function 0: {0B, +, 24}_2
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_68
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector * *)this_22(D) + 160B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_22(D) + 160B]
Creating dr for MEM[(struct vector * *)this_22(D) + 160B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_22(D) + 160B]
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)pretmp_215]
	Access function 0: {0B, +, 24}_2
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_68
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)pretmp_215]
	Access function 0: {0B, +, 24}_2
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_68
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)pretmp_215]
	Access function 0: {0B, +, 24}_2
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_68
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)pretmp_215]
	Access function 0: {0B, +, 24}_2
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for MEM[(struct sRequest * *)_51]
analyze_innermost: success.
	base_address: pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct sRequest * *)_51]
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for _64->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_64
	Access function 0: 32
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_68
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for *_68
analyze_innermost: success.
	base_address: pretmp_206 + (long unsigned int) j_141 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *pretmp_206
	Access function 0: {0B, +, 4}_1
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int * *)this_22(D) + 232B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 232
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 232B]
Creating dr for MEM[(int * *)this_22(D) + 208B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 208B]
Creating dr for *_32
analyze_innermost: success.
	base_address: pretmp_119
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_119
	Access function 0: {0B, +, 4}_3
Creating dr for *_32
analyze_innermost: success.
	base_address: pretmp_119
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_119
	Access function 0: {0B, +, 4}_3
Creating dr for *_32
analyze_innermost: success.
	base_address: pretmp_119
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_119
	Access function 0: {0B, +, 4}_3
Creating dr for *_32
analyze_innermost: success.
	base_address: pretmp_119
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_119
	Access function 0: {0B, +, 4}_3
Creating dr for MEM[(struct vector * *)this_22(D) + 160B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_22(D) + 160B]
Creating dr for MEM[(struct vector * *)this_22(D) + 160B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_22(D) + 160B]
Creating dr for MEM[(struct sRequest * *)pretmp_174]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)pretmp_174]
Creating dr for MEM[(struct sRequest * *)pretmp_174]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)pretmp_174]
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for MEM[(int * *)this_22(D) + 184B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 184B]
Creating dr for MEM[(int * *)this_22(D) + 184B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 184B]
Creating dr for MEM[(int * *)this_22(D) + 184B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 184B]
Creating dr for *_98
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_98
Creating dr for *_98
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_98
Creating dr for *_98
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_98
Analyzing # of iterations of loop 4
  exit condition [1, + , 1](no_overflow) < prephitmp_163
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) prephitmp_163 + 4294967295, bounded by 2147483646
Analyzing # of iterations of loop 4
  exit condition [1, + , 1](no_overflow) < prephitmp_163
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) prephitmp_163 + 4294967295, bounded by 2147483646
Creating dr for *_101
analyze_innermost: success.
	base_address: pretmp_160
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_160
	Access function 0: {0B, +, 4}_3
Creating dr for *_101
analyze_innermost: success.
	base_address: pretmp_160
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_160
	Access function 0: {0B, +, 4}_3
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for *_32
analyze_innermost: success.
	base_address: pretmp_119
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_119
	Access function 0: {0B, +, 4}_3
Creating dr for *_32
analyze_innermost: success.
	base_address: pretmp_119
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_119
	Access function 0: {0B, +, 4}_3
Creating dr for *_32
analyze_innermost: success.
	base_address: pretmp_119
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_119
	Access function 0: {0B, +, 4}_3
Creating dr for *_32
analyze_innermost: success.
	base_address: pretmp_119
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_119
	Access function 0: {0B, +, 4}_3
Creating dr for MEM[(struct vector * *)this_22(D) + 160B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_22(D) + 160B]
Creating dr for MEM[(struct vector * *)this_22(D) + 160B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_22(D) + 160B]
Creating dr for MEM[(struct sRequest * *)pretmp_174]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)pretmp_174]
Creating dr for MEM[(struct sRequest * *)pretmp_174]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)pretmp_174]
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for MEM[(int * *)this_22(D) + 184B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 184B]
Creating dr for MEM[(int * *)this_22(D) + 184B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 184B]
Creating dr for MEM[(int * *)this_22(D) + 184B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 184B]
Creating dr for *_98
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_98
Creating dr for *_98
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_98
Creating dr for *_98
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_98
Analyzing # of iterations of loop 4
  exit condition [1, + , 1](no_overflow) < prephitmp_163
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) prephitmp_163 + 4294967295, bounded by 2147483646
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for _25->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
	Access function 0: 32
Creating dr for MEM[(int * *)this_22(D) + 184B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 184B]
Creating dr for MEM[(int * *)this_22(D) + 184B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 184B]
Creating dr for MEM[(int * *)this_22(D) + 184B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 184B]
Creating dr for *_98
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_98
Creating dr for *_98
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_98
Creating dr for *_98
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_98
Analyzing # of iterations of loop 4
  exit condition [1, + , 1](no_overflow) < prephitmp_163
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) prephitmp_163 + 4294967295, bounded by 2147483646
Creating dr for *_101
analyze_innermost: success.
	base_address: pretmp_160
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_160
	Access function 0: {0B, +, 4}_3
Creating dr for *_101
analyze_innermost: success.
	base_address: pretmp_160
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_160
	Access function 0: {0B, +, 4}_3
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int * *)this_22(D) + 256B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 256
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 256B]
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for MEM[(int * *)this_22(D) + 208B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 208B]
Creating dr for MEM[(int * *)this_22(D) + 208B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 208B]
Creating dr for *_118
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_118
Creating dr for *_118
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_118
Creating dr for *_105
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_105
Creating dr for *_105
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_105
Creating dr for *_105
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_105
Creating dr for MEM[(int * *)this_22(D) + 112B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 112B]
Creating dr for MEM[(int * *)this_22(D) + 112B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 112B]
Creating dr for *_108
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_108
Creating dr for *_108
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_108
Creating dr for MEM[(int * *)this_22(D) + 136B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 136B]
Creating dr for MEM[(int * *)this_22(D) + 136B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 136B]
Creating dr for *_107
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_107
Creating dr for *_107
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_107
Creating dr for MEM[(int * *)this_22(D) + 232B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 232
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 232B]
Creating dr for MEM[(int * *)this_22(D) + 232B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 232
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 232B]
Creating dr for *_106
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_106
Creating dr for *_106
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_106
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for *_106
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_106
Creating dr for *_106
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_106
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for MEM[(int * *)this_22(D) + 208B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 208B]
Creating dr for MEM[(int * *)this_22(D) + 208B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 208B]
Creating dr for *_118
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_118
Creating dr for *_118
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_118
Creating dr for *_105
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_105
Creating dr for *_105
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_105
Creating dr for *_105
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_105
Creating dr for MEM[(int * *)this_22(D) + 112B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 112B]
Creating dr for MEM[(int * *)this_22(D) + 112B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 112B]
Creating dr for *_108
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_108
Creating dr for *_108
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_108
Creating dr for MEM[(int * *)this_22(D) + 136B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 136B]
Creating dr for MEM[(int * *)this_22(D) + 136B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 136B]
Creating dr for *_107
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_107
Creating dr for *_107
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_107
Creating dr for MEM[(int * *)this_22(D) + 232B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 232
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 232B]
Creating dr for MEM[(int * *)this_22(D) + 232B]
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 232
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_22(D) + 232B]
Creating dr for *_106
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_106
Creating dr for *_106
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_106
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for *_106
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_106
Creating dr for *_106
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_106
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for *_103
analyze_innermost: success.
	base_address: pretmp_186
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_186
	Access function 0: {0B, +, 4}_5
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_22(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_22(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_22(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:43)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:46, LOOPS:6, CONDITIONS:17, STMTS:226)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_37 bb_4 })
  {
    <bb 2>:
    # DEBUG j => 0
    # DEBUG j => 0
    # VUSE <.MEM_21(D)>
    _132 = this_22(D)->D.36957.D.35235._outputs;
    if (_132 <= 0)
      goto <bb 37>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_10 }, succs = {bb_41 })
  {
    <bb 3>:
    # _217 = PHI <_23(10)>
    # prephitmp_199 = PHI <prephitmp_209(10)>

  }
  bb_41 (preds = {bb_3 }, succs = {bb_12 bb_14 })
  {
    <bb 41>:
    # DEBUG input => 0
    if (prephitmp_199 <= 0)
      goto <bb 12>;
    else
      goto <bb 14>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:
    # VUSE <.MEM_21(D)>
    pretmp_206 = MEM[(int * *)this_22(D) + 184B];

  }
  bb_12 (preds = {bb_39 bb_41 }, succs = {bb_13 bb_26 })
  {
    <bb 12>:
    # .MEM_131 = PHI <.MEM_52(39), .MEM_147(41)>
    # prephitmp_180 = PHI <pretmp_179(39), _217(41)>
    # prephitmp_183 = PHI <_202(39), prephitmp_199(41)>
    # DEBUG output => 0
    if (prephitmp_180 <= 0)
      goto <bb 13>;
    else
      goto <bb 26>;

  }
  bb_13 (preds = {bb_12 bb_38 bb_37 }, succs = {bb_44 })
  {
    <bb 13>:
    # .MEM_219 = PHI <.MEM_131(12), .MEM_152(38), .MEM_21(D)(37)>

  }
  bb_44 (preds = {bb_13 }, succs = {bb_1 })
  {
    <bb 44>:
    # VUSE <.MEM_219>
    return;

  }
  bb_14 (preds = {bb_41 bb_37 }, succs = {bb_43 })
  {
    <bb 14>:
    # .MEM_113 = PHI <.MEM_147(41), .MEM_21(D)(37)>
    # _14 = PHI <prephitmp_199(41), _7(37)>
    # prephitmp_133 = PHI <_217(41), _132(37)>

  }
  bb_43 (preds = {bb_14 }, succs = {bb_15 })
  {
    <bb 43>:
    # VUSE <.MEM_113>
    pretmp_119 = MEM[(int * *)this_22(D) + 232B];
    # VUSE <.MEM_113>
    pretmp_160 = MEM[(int * *)this_22(D) + 208B];

  }
  bb_25 (preds = {bb_23 }, succs = {bb_39 })
  {
    <bb 25>:
    # _202 = PHI <_38(23)>

  }
  bb_39 (preds = {bb_25 }, succs = {bb_12 })
  {
    <bb 39>:
    # VUSE <.MEM_52>
    pretmp_179 = this_22(D)->D.36957.D.35235._outputs;
    goto <bb 12>;

  }
  bb_26 (preds = {bb_12 }, succs = {bb_27 })
  {
    <bb 26>:
    # VUSE <.MEM_131>
    pretmp_186 = MEM[(int * *)this_22(D) + 256B];

  }
  bb_38 (preds = {bb_35 }, succs = {bb_13 })
  {
    <bb 38>:
    # .MEM_152 = PHI <.MEM_20(35)>
    goto <bb 13>;

  }
  bb_37 (preds = {bb_2 }, succs = {bb_13 bb_14 })
  {
    <bb 37>:
    # DEBUG input => 0
    # VUSE <.MEM_21(D)>
    _7 = this_22(D)->D.36957.D.35235._inputs;
    if (_7 <= 0)
      goto <bb 13>;
    else
      goto <bb 14>;

  }
  loop_5 (header = 27, latch = 36, niter = , upper_bound = 2147483646)
  {
    bb_27 (preds = {bb_26 bb_36 }, succs = {bb_35 bb_28 })
    {
      <bb 27>:
      # output_137 = PHI <0(26), output_80(36)>
      # .MEM_151 = PHI <.MEM_131(26), .MEM_20(36)>
      # prephitmp_190 = PHI <prephitmp_183(26), pretmp_189(36)>
      # prephitmp_196 = PHI <prephitmp_180(26), prephitmp_221(36)>
      # DEBUG output => output_137
      _55 = (long unsigned int) output_137;
      # DEBUG D#13 => &this_22(D)->_gptr
      # DEBUG D#2 => D#13
      # DEBUG __n => _55
      # DEBUG this => D#2
      _102 = _55 * 4;
      _103 = pretmp_186 + _102;
      # VUSE <.MEM_151>
      input_offset_57 = *_103;
      # DEBUG input_offset => input_offset_57
      # DEBUG i => 0
      # DEBUG i => 0
      if (prephitmp_190 <= 0)
        goto <bb 35>;
      else
        goto <bb 28>;

    }
    bb_28 (preds = {bb_27 }, succs = {bb_32 bb_33 })
    {
      <bb 28>:
      input_128 = input_offset_57 % prephitmp_190;
      # DEBUG input => input_128
      _122 = (long unsigned int) input_128;
      # DEBUG D#14 => &this_22(D)->_req
      # VUSE <.MEM_151>
      _130 = MEM[(int * *)this_22(D) + 208B];
      # DEBUG D#2 => D#14
      # DEBUG __n => _122
      # DEBUG this => D#2
      _116 = _122 * 4;
      _118 = _130 + _116;
      # VUSE <.MEM_151>
      _117 = *_118;
      if (_117 == output_137)
        goto <bb 32>;
      else
        goto <bb 33>;

    }
    bb_30 (preds = {bb_29 }, succs = {bb_32 })
    {
      <bb 30>:
      # input_201 = PHI <input_60(29)>
      # _200 = PHI <_104(29)>
      goto <bb 32>;

    }
    bb_32 (preds = {bb_30 bb_28 }, succs = {bb_45 })
    {
      <bb 32>:
      # input_157 = PHI <input_201(30), input_128(28)>
      # _158 = PHI <_200(30), _116(28)>

    }
    bb_45 (preds = {bb_32 }, succs = {bb_35 })
    {
      <bb 45>:
      # DEBUG D#15 => &this_22(D)->D.36957.D.35235._inmatch
      # VUSE <.MEM_151>
      _88 = MEM[(int * *)this_22(D) + 112B];
      # DEBUG D#2 => D#15
      # DEBUG __n => _122
      # DEBUG this => D#2
      _108 = _88 + _158;
      # .MEM_65 = VDEF <.MEM_151>
      *_108 = output_137;
      # DEBUG D#16 => &this_22(D)->D.36957.D.35235._outmatch
      # VUSE <.MEM_65>
      _89 = MEM[(int * *)this_22(D) + 136B];
      # DEBUG D#2 => D#16
      # DEBUG __n => _55
      # DEBUG this => D#2
      _107 = _89 + _102;
      # .MEM_67 = VDEF <.MEM_65>
      *_107 = input_157;
      # DEBUG D#17 => &this_22(D)->_rptr
      # VUSE <.MEM_67>
      _90 = MEM[(int * *)this_22(D) + 232B];
      # DEBUG D#2 => D#17
      # DEBUG __n => _122
      # DEBUG this => D#2
      _106 = _90 + _158;
      # DEBUG D#18 => &this_22(D)->_rptr
      # DEBUG D#2 => D#18
      # DEBUG __n => _122
      # DEBUG this => D#2
      # VUSE <.MEM_67>
      _69 = *_106;
      _70 = _69 + 1;
      # VUSE <.MEM_67>
      _71 = this_22(D)->D.36957.D.35235._outputs;
      _72 = _70 % _71;
      # .MEM_73 = VDEF <.MEM_67>
      *_106 = _72;
      # DEBUG D#19 => &this_22(D)->_gptr
      # DEBUG D#2 => D#19
      # DEBUG __n => _55
      # DEBUG this => D#2
      # DEBUG D#20 => &this_22(D)->_gptr
      # DEBUG D#2 => D#20
      # DEBUG __n => _55
      # DEBUG this => D#2
      # VUSE <.MEM_73>
      _75 = *_103;
      _76 = _75 + 1;
      # VUSE <.MEM_73>
      _77 = this_22(D)->D.36957.D.35235._inputs;
      _78 = _76 % _77;
      # .MEM_79 = VDEF <.MEM_73>
      *_103 = _78;
      # VUSE <.MEM_79>
      pretmp_220 = this_22(D)->D.36957.D.35235._outputs;
      goto <bb 35>;

    }
    bb_33 (preds = {bb_28 }, succs = {bb_34 })
    {
      <bb 33>:

    }
    bb_35 (preds = {bb_34 bb_45 bb_27 }, succs = {bb_38 bb_36 })
    {
      <bb 35>:
      # .MEM_20 = PHI <.MEM_151(34), .MEM_79(45), .MEM_151(27)>
      # prephitmp_221 = PHI <prephitmp_196(34), pretmp_220(45), prephitmp_196(27)>
      output_80 = output_137 + 1;
      # DEBUG output => output_80
      # DEBUG output => output_80
      if (output_80 >= prephitmp_221)
        goto <bb 38>;
      else
        goto <bb 36>;

    }
    bb_36 (preds = {bb_35 }, succs = {bb_27 })
    {
      <bb 36>:
      # VUSE <.MEM_20>
      pretmp_189 = this_22(D)->D.36957.D.35235._inputs;
      goto <bb 27>;

    }
    loop_6 (header = 34, latch = 31, niter = , upper_bound = 2147483646)
    {
      bb_29 (preds = {bb_34 }, succs = {bb_30 bb_31 })
      {
        <bb 29>:
        _59 = input_offset_57 + i_63;
        input_60 = _59 % prephitmp_190;
        # DEBUG input => input_60
        _61 = (long unsigned int) input_60;
        # DEBUG D#14 => &this_22(D)->_req
        # DEBUG D#2 => D#14
        # DEBUG __n => _61
        # DEBUG this => D#2
        _104 = _61 * 4;
        _105 = _130 + _104;
        # VUSE <.MEM_151>
        _62 = *_105;
        if (_62 == output_137)
          goto <bb 30>;
        else
          goto <bb 31>;

      }
      bb_31 (preds = {bb_29 }, succs = {bb_34 })
      {
        <bb 31>:
        goto <bb 34>;

      }
      bb_34 (preds = {bb_33 bb_31 }, succs = {bb_35 bb_29 })
      {
        <bb 34>:
        # i_144 = PHI <0(33), i_63(31)>
        # DEBUG i => i_144
        # DEBUG input => input_128
        # DEBUG D#14 => &this_22(D)->_req
        # DEBUG D#2 => D#14
        # DEBUG __n => _122
        # DEBUG this => D#2
        i_63 = i_144 + 1;
        # DEBUG i => i_63
        # DEBUG i => i_63
        if (i_63 >= prephitmp_190)
          goto <bb 35>;
        else
          goto <bb 29>;

      }
    }
  }
  loop_3 (header = 15, latch = 24, niter = , upper_bound = 2147483646)
  {
    bb_15 (preds = {bb_43 bb_24 }, succs = {bb_23 bb_16 })
    {
      <bb 15>:
      # input_136 = PHI <0(43), input_53(24)>
      # .MEM_148 = PHI <.MEM_113(43), .MEM_52(24)>
      # _155 = PHI <_14(43), _38(24)>
      # prephitmp_163 = PHI <prephitmp_133(43), pretmp_162(24)>
      # DEBUG input => input_136
      _39 = (long unsigned int) input_136;
      # DEBUG D#8 => &this_22(D)->_rptr
      # DEBUG D#2 => D#8
      # DEBUG __n => _39
      # DEBUG this => D#2
      _40 = _39 * 4;
      _32 = pretmp_119 + _40;
      # VUSE <.MEM_148>
      output_offset_41 = *_32;
      # DEBUG output_offset => output_offset_41
      # DEBUG lonely => -1
      lonely_cnt_42 = _155 + 1;
      # DEBUG lonely_cnt => lonely_cnt_42
      # DEBUG o => 0
      # DEBUG o => 0
      # DEBUG lonely_cnt => lonely_cnt_42
      # DEBUG lonely => -1
      if (prephitmp_163 <= 0)
        goto <bb 23>;
      else
        goto <bb 16>;

    }
    bb_16 (preds = {bb_15 }, succs = {bb_17 })
    {
      <bb 16>:
      # VUSE <.MEM_148>
      pretmp_171 = MEM[(struct vector * *)this_22(D) + 160B];
      pretmp_173 = _39 * 24;
      pretmp_174 = pretmp_171 + pretmp_173;
      # VUSE <.MEM_148>
      pretmp_175 = MEM[(struct sRequest * *)pretmp_174];

    }
    bb_21 (preds = {bb_20 }, succs = {bb_40 })
    {
      <bb 21>:
      # lonely_218 = PHI <lonely_4(20)>

    }
    bb_40 (preds = {bb_21 }, succs = {bb_23 })
    {
      <bb 40>:
      goto <bb 23>;

    }
    bb_23 (preds = {bb_40 bb_15 }, succs = {bb_25 bb_24 })
    {
      <bb 23>:
      # lonely_139 = PHI <lonely_218(40), -1(15)>
      # DEBUG D#12 => &this_22(D)->_req
      # DEBUG D#2 => D#12
      # DEBUG __n => _39
      # DEBUG this => D#2
      _101 = pretmp_160 + _40;
      # .MEM_52 = VDEF <.MEM_148>
      *_101 = lonely_139;
      input_53 = input_136 + 1;
      # DEBUG input => input_53
      # DEBUG input => input_53
      # VUSE <.MEM_52>
      _38 = this_22(D)->D.36957.D.35235._inputs;
      if (_38 <= input_53)
        goto <bb 25>;
      else
        goto <bb 24>;

    }
    bb_24 (preds = {bb_23 }, succs = {bb_15 })
    {
      <bb 24>:
      # VUSE <.MEM_52>
      pretmp_162 = this_22(D)->D.36957.D.35235._outputs;
      goto <bb 15>;

    }
    loop_4 (header = 17, latch = 22, niter = (unsigned int) prephitmp_163 + 4294967295, upper_bound = 2147483646)
    {
      bb_17 (preds = {bb_16 bb_22 }, succs = {bb_18 bb_20 })
      {
        <bb 17>:
        # lonely_138 = PHI <-1(16), lonely_4(22)>
        # lonely_cnt_140 = PHI <lonely_cnt_42(16), lonely_cnt_6(22)>
        # o_143 = PHI <0(16), o_50(22)>
        # DEBUG o => o_143
        # DEBUG lonely_cnt => lonely_cnt_140
        # DEBUG lonely => lonely_138
        _44 = output_offset_41 + o_143;
        lonely_45 = _44 % prephitmp_163;
        # DEBUG output => lonely_45
        _46 = (long unsigned int) lonely_45;
        # DEBUG D#9 => &this_22(D)->D.36957._request
        # DEBUG D#3 => D#9
        # DEBUG __n => _39
        # DEBUG this => D#3
        # DEBUG __n => _46
        # DEBUG this => D#4
        _30 = _46 * 16;
        _25 = pretmp_175 + _30;
        # VUSE <.MEM_148>
        _47 = _25->label;
        if (_47 != -1)
          goto <bb 18>;
        else
          goto <bb 20>;

      }
      bb_18 (preds = {bb_17 }, succs = {bb_19 bb_20 })
      {
        <bb 18>:
        # DEBUG D#10 => &this_22(D)->_counts
        # VUSE <.MEM_148>
        _83 = MEM[(int * *)this_22(D) + 184B];
        # DEBUG D#2 => D#10
        # DEBUG __n => _46
        # DEBUG this => D#2
        _97 = _46 * 4;
        _98 = _83 + _97;
        # VUSE <.MEM_148>
        _48 = *_98;
        if (_48 < lonely_cnt_140)
          goto <bb 19>;
        else
          goto <bb 20>;

      }
      bb_19 (preds = {bb_18 }, succs = {bb_20 })
      {
        <bb 19>:

      }
      bb_20 (preds = {bb_18 bb_19 bb_17 }, succs = {bb_21 bb_22 })
      {
        <bb 20>:
        # lonely_4 = PHI <lonely_138(18), lonely_45(19), lonely_138(17)>
        # lonely_cnt_6 = PHI <lonely_cnt_140(18), _48(19), lonely_cnt_140(17)>
        # DEBUG lonely_cnt => lonely_cnt_6
        # DEBUG lonely => lonely_4
        o_50 = o_143 + 1;
        # DEBUG o => o_50
        # DEBUG o => o_50
        # DEBUG lonely_cnt => lonely_cnt_6
        # DEBUG lonely => lonely_4
        if (o_50 >= prephitmp_163)
          goto <bb 21>;
        else
          goto <bb 22>;

      }
      bb_22 (preds = {bb_20 }, succs = {bb_17 })
      {
        <bb 22>:
        goto <bb 17>;

      }
    }
  }
  loop_1 (header = 5, latch = 11, niter = , upper_bound = 2147483646)
  {
    bb_5 (preds = {bb_4 bb_11 }, succs = {bb_10 bb_6 })
    {
      <bb 5>:
      # j_141 = PHI <0(4), j_37(11)>
      # .MEM_145 = PHI <.MEM_21(D)(4), .MEM_147(11)>
      # DEBUG j => j_141
      _24 = (long unsigned int) j_141;
      # DEBUG D#5 => &this_22(D)->_counts
      # DEBUG D#2 => D#5
      # DEBUG __n => _24
      # DEBUG this => D#2
      _74 = _24 * 4;
      _68 = pretmp_206 + _74;
      # .MEM_27 = VDEF <.MEM_145>
      *_68 = 0;
      # DEBUG i => 0
      # DEBUG i => 0
      # VUSE <.MEM_27>
      _135 = this_22(D)->D.36957.D.35235._inputs;
      if (_135 <= 0)
        goto <bb 10>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:
      pretmp_214 = _24 * 16;
      # VUSE <.MEM_27>
      pretmp_215 = MEM[(struct vector * *)this_22(D) + 160B];

    }
    bb_8 (preds = {bb_7 }, succs = {bb_42 })
    {
      <bb 8>:
      # _208 = PHI <_28(7)>

    }
    bb_42 (preds = {bb_8 }, succs = {bb_10 })
    {
      <bb 42>:
      goto <bb 10>;

    }
    bb_10 (preds = {bb_42 bb_5 }, succs = {bb_3 bb_11 })
    {
      <bb 10>:
      # .MEM_147 = PHI <.MEM_35(42), .MEM_27(5)>
      # prephitmp_209 = PHI <_208(42), _135(5)>
      j_37 = j_141 + 1;
      # DEBUG j => j_37
      # DEBUG j => j_37
      # VUSE <.MEM_147>
      _23 = this_22(D)->D.36957.D.35235._outputs;
      if (_23 <= j_37)
        goto <bb 3>;
      else
        goto <bb 11>;

    }
    bb_11 (preds = {bb_10 }, succs = {bb_5 })
    {
      <bb 11>:
      goto <bb 5>;

    }
    loop_2 (header = 7, latch = 9, niter = , upper_bound = 2147483646)
    {
      bb_7 (preds = {bb_6 bb_9 }, succs = {bb_8 bb_9 })
      {
        <bb 7>:
        # i_142 = PHI <0(6), i_36(9)>
        # .MEM_146 = PHI <.MEM_27(6), .MEM_35(9)>
        # prephitmp_211 = PHI <0(6), _34(9)>
        # DEBUG i => i_142
        _29 = (long unsigned int) i_142;
        # DEBUG D#6 => &this_22(D)->D.36957._request
        # DEBUG D#3 => D#6
        # DEBUG __n => _29
        # DEBUG this => D#3
        _56 = _29 * 24;
        _51 = pretmp_215 + _56;
        # VUSE <.MEM_146>
        _93 = MEM[(struct sRequest * *)_51];
        # DEBUG __n => _24
        # DEBUG this => D#4
        _64 = _93 + pretmp_214;
        # VUSE <.MEM_146>
        _31 = _64->label;
        _17 = _31 != -1;
        _111 = (int) _17;
        # DEBUG D#7 => &this_22(D)->_counts
        # DEBUG D#2 => D#7
        # DEBUG __n => _24
        # DEBUG this => D#2
        _34 = _111 + prephitmp_211;
        # .MEM_35 = VDEF <.MEM_146>
        *_68 = _34;
        i_36 = i_142 + 1;
        # DEBUG i => i_36
        # DEBUG i => i_36
        # VUSE <.MEM_35>
        _28 = this_22(D)->D.36957.D.35235._inputs;
        if (_28 <= i_36)
          goto <bb 8>;
        else
          goto <bb 9>;

      }
      bb_9 (preds = {bb_7 }, succs = {bb_7 })
      {
        <bb 9>:
        goto <bb 7>;

      }
    }
  }
}

Pass statistics:
----------------

virtual void LOA::Allocate() (struct LOAD.36919 * const thisD.37056)
{
  intD.9 iD.37812;
  intD.9 oD.37811;
  intD.9 iD.37065;
  intD.9 jD.37064;
  intD.9 lonely_cntD.37063;
  intD.9 lonelyD.37062;
  intD.9 output_offsetD.37061;
  intD.9 input_offsetD.37060;
  intD.9 outputD.37059;
  intD.9 inputD.37058;
  intD.9 _7;
  intD.9 _14;
  boolD.2757 _17;
  intD.9 _23;
  long unsigned intD.14 _24;
  struct sRequestD.34315 & _25;
  intD.9 _28;
  long unsigned intD.14 _29;
  long unsigned intD.14 _30;
  intD.9 _31;
  intD.9 & _32;
  intD.9 _34;
  intD.9 _38;
  long unsigned intD.14 _39;
  long unsigned intD.14 _40;
  intD.9 _44;
  long unsigned intD.14 _46;
  intD.9 _47;
  intD.9 _48;
  struct vectorD.34419 & _51;
  long unsigned intD.14 _55;
  long unsigned intD.14 _56;
  intD.9 _59;
  long unsigned intD.14 _61;
  intD.9 _62;
  struct sRequestD.34315 & _64;
  intD.9 & _68;
  intD.9 _69;
  intD.9 _70;
  intD.9 _71;
  intD.9 _72;
  long unsigned intD.14 _74;
  intD.9 _75;
  intD.9 _76;
  intD.9 _77;
  intD.9 _78;
  intD.9 * _83;
  intD.9 * _88;
  intD.9 * _89;
  intD.9 * _90;
  struct sRequestD.34315 * _93;
  long unsigned intD.14 _97;
  intD.9 & _98;
  intD.9 & _101;
  long unsigned intD.14 _102;
  intD.9 & _103;
  long unsigned intD.14 _104;
  intD.9 & _105;
  intD.9 & _106;
  intD.9 & _107;
  intD.9 & _108;
  intD.9 _111;
  long unsigned intD.14 _116;
  intD.9 _117;
  intD.9 & _118;
  intD.9 * pretmp_119;
  long unsigned intD.14 _122;
  intD.9 * _130;
  intD.9 _132;
  const intD.9 prephitmp_133;
  intD.9 _135;
  intD.9 _155;
  long unsigned intD.14 _158;
  intD.9 * pretmp_160;
  const intD.9 pretmp_162;
  const intD.9 prephitmp_163;
  struct vectorD.34419 * pretmp_171;
  long unsigned intD.14 pretmp_173;
  struct vectorD.34419 & pretmp_174;
  struct sRequestD.34315 * pretmp_175;
  const intD.9 pretmp_179;
  const intD.9 prephitmp_180;
  const intD.9 prephitmp_183;
  intD.9 * pretmp_186;
  const intD.9 pretmp_189;
  const intD.9 prephitmp_190;
  const intD.9 prephitmp_196;
  const intD.9 prephitmp_199;
  long unsigned intD.14 _200;
  intD.9 _202;
  intD.9 * pretmp_206;
  intD.9 _208;
  const intD.9 prephitmp_209;
  intD.9 prephitmp_211;
  long unsigned intD.14 pretmp_214;
  struct vectorD.34419 * pretmp_215;
  intD.9 _217;
  const intD.9 pretmp_220;
  const intD.9 prephitmp_221;

;;   basic block 2, loop depth 0, count 0, freq 87, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG jD.37064 => 0
  # DEBUG jD.37064 => 0
  # VUSE <.MEM_21(D)>
  _132 = this_22(D)->D.36957.D.35235._outputsD.33567;
  if (_132 <= 0)
    goto <bb 37>;
  else
    goto <bb 4>;
;;    succ:       37 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 2, next block 41, flags: (NEW, REACHABLE)
;;    pred:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _217 = PHI <_23(10)>
  # prephitmp_199 = PHI <prephitmp_209(10)>
;;    succ:       41 [100.0%]  (FALLTHRU)

;;   basic block 41, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  # DEBUG inputD.37058 => 0
  if (prephitmp_199 <= 0)
    goto <bb 12>;
  else
    goto <bb 14>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 41, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_21(D)>
  # PT = nonlocal escaped 
  pretmp_206 = MEM[(intD.9 * *)this_22(D) + 184B];
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # j_141 = PHI <0(4), j_37(11)>
  # .MEM_145 = PHI <.MEM_21(D)(4), .MEM_147(11)>
  # DEBUG jD.37064 => j_141
  # RANGE [0, 18446744073709551615]
  _24 = (long unsigned intD.14) j_141;
  # DEBUG D#5ptD.0 => &this_22(D)->_countsD.36921
  # DEBUG D#2ptD.0 => D#5ptD.0
  # DEBUG __nD.39454 => _24
  # DEBUG thisD.39455 => D#2ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _74 = _24 * 4;
  # PT = nonlocal escaped 
  _68 = pretmp_206 + _74;
  # .MEM_27 = VDEF <.MEM_145>
  *_68 = 0;
  # DEBUG iD.37065 => 0
  # DEBUG iD.37065 => 0
  # VUSE <.MEM_27>
  _135 = this_22(D)->D.36957.D.35235._inputsD.33566;
  if (_135 <= 0)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_214 = _24 * 16;
  # VUSE <.MEM_27>
  # PT = nonlocal escaped 
  pretmp_215 = MEM[(struct vectorD.34419 * *)this_22(D) + 160B];
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 8895, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_142 = PHI <0(6), i_36(9)>
  # .MEM_146 = PHI <.MEM_27(6), .MEM_35(9)>
  # prephitmp_211 = PHI <0(6), _34(9)>
  # DEBUG iD.37065 => i_142
  # RANGE [0, 18446744073709551615]
  _29 = (long unsigned intD.14) i_142;
  # DEBUG D#6ptD.0 => &this_22(D)->D.36957._requestD.35166
  # DEBUG D#3ptD.0 => D#6ptD.0
  # DEBUG __nD.39462 => _29
  # DEBUG thisD.39463 => D#3ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _56 = _29 * 24;
  # PT = nonlocal escaped 
  _51 = pretmp_215 + _56;
  # VUSE <.MEM_146>
  # PT = nonlocal escaped null 
  _93 = MEM[(struct sRequestD.34315 * *)_51];
  # DEBUG __nD.39458 => _24
  # DEBUG thisD.39459 => D#4ptD.0
  # PT = nonlocal escaped null 
  _64 = _93 + pretmp_214;
  # VUSE <.MEM_146>
  _31 = _64->labelD.34318;
  # RANGE [0, 1]
  _17 = _31 != -1;
  # RANGE [-2147483648, 2147483647] NONZERO 1
  _111 = (intD.9) _17;
  # DEBUG D#7ptD.0 => &this_22(D)->_countsD.36921
  # DEBUG D#2ptD.0 => D#7ptD.0
  # DEBUG __nD.39466 => _24
  # DEBUG thisD.39467 => D#2ptD.0
  _34 = _111 + prephitmp_211;
  # .MEM_35 = VDEF <.MEM_146>
  *_68 = _34;
  i_36 = i_142 + 1;
  # DEBUG iD.37065 => i_36
  # DEBUG iD.37065 => i_36
  # VUSE <.MEM_35>
  _28 = this_22(D)->D.36957.D.35235._inputsD.33566;
  if (_28 <= i_36)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 7, next block 42, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _208 = PHI <_28(7)>
;;    succ:       42 [100.0%]  (FALLTHRU)

;;   basic block 42, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 8094, maybe hot
;;    prev block 42, next block 10, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_147 = PHI <.MEM_35(42), .MEM_27(5)>
  # prephitmp_209 = PHI <_208(42), _135(5)>
  j_37 = j_141 + 1;
  # DEBUG jD.37064 => j_37
  # DEBUG jD.37064 => j_37
  # VUSE <.MEM_147>
  _23 = this_22(D)->D.36957.D.35235._outputsD.33567;
  if (_23 <= j_37)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 86, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_131 = PHI <.MEM_52(39), .MEM_147(41)>
  # prephitmp_180 = PHI <pretmp_179(39), _217(41)>
  # prephitmp_183 = PHI <_202(39), prephitmp_199(41)>
  # DEBUG outputD.37059 => 0
  if (prephitmp_180 <= 0)
    goto <bb 13>;
  else
    goto <bb 26>;
;;    succ:       13 [8.3%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [91.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 87, maybe hot
;;    prev block 12, next block 44, flags: (NEW, REACHABLE)
;;    pred:       12 [8.3%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU)
;;                37 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_219 = PHI <.MEM_131(12), .MEM_152(38), .MEM_21(D)(37)>
;;    succ:       44 [100.0%]  (FALLTHRU)

;;   basic block 44, loop depth 0, count 0, freq 87, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_219>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 14, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 44, next block 43, flags: (NEW, REACHABLE)
;;    pred:       41 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;                37 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_113 = PHI <.MEM_147(41), .MEM_21(D)(37)>
  # _14 = PHI <prephitmp_199(41), _7(37)>
  # prephitmp_133 = PHI <_217(41), _132(37)>
;;    succ:       43 [100.0%]  (FALLTHRU)

;;   basic block 43, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  pretmp_119 = MEM[(intD.9 * *)this_22(D) + 232B];
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  pretmp_160 = MEM[(intD.9 * *)this_22(D) + 208B];
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 43, next block 16, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # input_136 = PHI <0(43), input_53(24)>
  # .MEM_148 = PHI <.MEM_113(43), .MEM_52(24)>
  # _155 = PHI <_14(43), _38(24)>
  # prephitmp_163 = PHI <prephitmp_133(43), pretmp_162(24)>
  # DEBUG inputD.37058 => input_136
  # RANGE [0, 18446744073709551615]
  _39 = (long unsigned intD.14) input_136;
  # DEBUG D#8ptD.0 => &this_22(D)->_rptrD.36923
  # DEBUG D#2ptD.0 => D#8ptD.0
  # DEBUG __nD.39470 => _39
  # DEBUG thisD.39471 => D#2ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = _39 * 4;
  # PT = nonlocal escaped 
  _32 = pretmp_119 + _40;
  # VUSE <.MEM_148>
  output_offset_41 = *_32;
  # DEBUG output_offsetD.37061 => output_offset_41
  # DEBUG lonelyD.37062 => -1
  lonely_cnt_42 = _155 + 1;
  # DEBUG lonely_cntD.37063 => lonely_cnt_42
  # DEBUG oD.37811 => 0
  # DEBUG oD.37811 => 0
  # DEBUG lonely_cntD.37063 => lonely_cnt_42
  # DEBUG lonelyD.37062 => -1
  if (prephitmp_163 <= 0)
    goto <bb 23>;
  else
    goto <bb 16>;
;;    succ:       23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_148>
  # PT = nonlocal escaped 
  pretmp_171 = MEM[(struct vectorD.34419 * *)this_22(D) + 160B];
  pretmp_173 = _39 * 24;
  # PT = nonlocal escaped 
  pretmp_174 = pretmp_171 + pretmp_173;
  # VUSE <.MEM_148>
  # PT = nonlocal escaped null 
  pretmp_175 = MEM[(struct sRequestD.34315 * *)pretmp_174];
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 2, count 0, freq 8895, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # lonely_138 = PHI <-1(16), lonely_4(22)>
  # lonely_cnt_140 = PHI <lonely_cnt_42(16), lonely_cnt_6(22)>
  # o_143 = PHI <0(16), o_50(22)>
  # DEBUG oD.37811 => o_143
  # DEBUG lonely_cntD.37063 => lonely_cnt_140
  # DEBUG lonelyD.37062 => lonely_138
  _44 = output_offset_41 + o_143;
  lonely_45 = _44 % prephitmp_163;
  # DEBUG outputD.37059 => lonely_45
  # RANGE ~[2147483648, 18446744071562067967]
  _46 = (long unsigned intD.14) lonely_45;
  # DEBUG D#9ptD.0 => &this_22(D)->D.36957._requestD.35166
  # DEBUG D#3ptD.0 => D#9ptD.0
  # DEBUG __nD.39478 => _39
  # DEBUG thisD.39479 => D#3ptD.0
  # DEBUG __nD.39474 => _46
  # DEBUG thisD.39475 => D#4ptD.0
  # RANGE [0, 18446744073709551600] NONZERO 18446744073709551600
  _30 = _46 * 16;
  # PT = nonlocal escaped null 
  _25 = pretmp_175 + _30;
  # VUSE <.MEM_148>
  _47 = _25->labelD.34318;
  if (_47 != -1)
    goto <bb 18>;
  else
    goto <bb 20>;
;;    succ:       18 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 2, count 0, freq 6405, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#10ptD.0 => &this_22(D)->_countsD.36921
  # VUSE <.MEM_148>
  # PT = nonlocal escaped 
  _83 = MEM[(intD.9 * *)this_22(D) + 184B];
  # DEBUG D#2ptD.0 => D#10ptD.0
  # DEBUG __nD.39482 => _46
  # DEBUG thisD.39483 => D#2ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _97 = _46 * 4;
  # PT = nonlocal escaped 
  _98 = _83 + _97;
  # VUSE <.MEM_148>
  _48 = *_98;
  if (_48 < lonely_cnt_140)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 2, count 0, freq 3203, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 2, count 0, freq 8895, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [28.0%]  (FALSE_VALUE,EXECUTABLE)
  # lonely_4 = PHI <lonely_138(18), lonely_45(19), lonely_138(17)>
  # lonely_cnt_6 = PHI <lonely_cnt_140(18), _48(19), lonely_cnt_140(17)>
  # DEBUG lonely_cntD.37063 => lonely_cnt_6
  # DEBUG lonelyD.37062 => lonely_4
  o_50 = o_143 + 1;
  # DEBUG oD.37811 => o_50
  # DEBUG oD.37811 => o_50
  # DEBUG lonely_cntD.37063 => lonely_cnt_6
  # DEBUG lonelyD.37062 => lonely_4
  if (o_50 >= prephitmp_163)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 20, next block 40, flags: (NEW)
;;    pred:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # lonely_218 = PHI <lonely_4(20)>
;;    succ:       40 [100.0%]  (FALLTHRU)

;;   basic block 40, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 21, next block 22, flags: (NEW)
;;    pred:       21 [100.0%]  (FALLTHRU)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 2, count 0, freq 8094, maybe hot
;;    prev block 40, next block 23, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # lonely_139 = PHI <lonely_218(40), -1(15)>
  # DEBUG D#12ptD.0 => &this_22(D)->_reqD.36922
  # DEBUG D#2ptD.0 => D#12ptD.0
  # DEBUG __nD.39490 => _39
  # DEBUG thisD.39491 => D#2ptD.0
  # PT = nonlocal escaped 
  _101 = pretmp_160 + _40;
  # .MEM_52 = VDEF <.MEM_148>
  *_101 = lonely_139;
  input_53 = input_136 + 1;
  # DEBUG inputD.37058 => input_53
  # DEBUG inputD.37058 => input_53
  # VUSE <.MEM_52>
  _38 = this_22(D)->D.36957.D.35235._inputsD.33566;
  if (_38 <= input_53)
    goto <bb 25>;
  else
    goto <bb 24>;
;;    succ:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_52>
  pretmp_162 = this_22(D)->D.36957.D.35235._outputsD.33567;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 24, next block 39, flags: (NEW)
;;    pred:       23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _202 = PHI <_38(23)>
;;    succ:       39 [100.0%]  (FALLTHRU)

;;   basic block 39, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 25, next block 26, flags: (NEW)
;;    pred:       25 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_52>
  pretmp_179 = this_22(D)->D.36957.D.35235._outputsD.33567;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 39, next block 27, flags: (NEW)
;;    pred:       12 [91.7%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_131>
  # PT = nonlocal escaped 
  pretmp_186 = MEM[(intD.9 * *)this_22(D) + 256B];
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # output_137 = PHI <0(26), output_80(36)>
  # .MEM_151 = PHI <.MEM_131(26), .MEM_20(36)>
  # prephitmp_190 = PHI <prephitmp_183(26), pretmp_189(36)>
  # prephitmp_196 = PHI <prephitmp_180(26), prephitmp_221(36)>
  # DEBUG outputD.37059 => output_137
  # RANGE [0, 18446744073709551615]
  _55 = (long unsigned intD.14) output_137;
  # DEBUG D#13ptD.0 => &this_22(D)->_gptrD.36924
  # DEBUG D#2ptD.0 => D#13ptD.0
  # DEBUG __nD.39494 => _55
  # DEBUG thisD.39495 => D#2ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _102 = _55 * 4;
  # PT = nonlocal escaped 
  _103 = pretmp_186 + _102;
  # VUSE <.MEM_151>
  input_offset_57 = *_103;
  # DEBUG input_offsetD.37060 => input_offset_57
  # DEBUG iD.37812 => 0
  # DEBUG iD.37812 => 0
  if (prephitmp_190 <= 0)
    goto <bb 35>;
  else
    goto <bb 28>;
;;    succ:       35 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 840, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  input_128 = input_offset_57 % prephitmp_190;
  # DEBUG inputD.37058 => input_128
  # RANGE ~[2147483648, 18446744071562067967]
  _122 = (long unsigned intD.14) input_128;
  # DEBUG D#14ptD.0 => &this_22(D)->_reqD.36922
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _130 = MEM[(intD.9 * *)this_22(D) + 208B];
  # DEBUG D#2ptD.0 => D#14ptD.0
  # DEBUG __nD.39498 => _122
  # DEBUG thisD.39499 => D#2ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _116 = _122 * 4;
  # PT = nonlocal escaped 
  _118 = _130 + _116;
  # VUSE <.MEM_151>
  _117 = *_118;
  if (_117 == output_137)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 2, count 0, freq 8710, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       34 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  _59 = input_offset_57 + i_63;
  input_60 = _59 % prephitmp_190;
  # DEBUG inputD.37058 => input_60
  # RANGE ~[2147483648, 18446744071562067967]
  _61 = (long unsigned intD.14) input_60;
  # DEBUG D#14ptD.0 => &this_22(D)->_reqD.36922
  # DEBUG D#2ptD.0 => D#14ptD.0
  # DEBUG __nD.39498 => _61
  # DEBUG thisD.39499 => D#2ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _104 = _61 * 4;
  # PT = nonlocal escaped 
  _105 = _130 + _104;
  # VUSE <.MEM_151>
  _62 = *_105;
  if (_62 == output_137)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 392, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       29 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # input_201 = PHI <input_60(29)>
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  # _200 = PHI <_104(29)>
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 2, count 0, freq 8318, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       29 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 430, maybe hot
;;    prev block 31, next block 45, flags: (NEW, REACHABLE)
;;    pred:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # input_157 = PHI <input_201(30), input_128(28)>
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  # _158 = PHI <_200(30), _116(28)>
;;    succ:       45 [100.0%]  (FALLTHRU)

;;   basic block 45, loop depth 1, count 0, freq 430, maybe hot
;;    prev block 32, next block 33, flags: (NEW)
;;    pred:       32 [100.0%]  (FALLTHRU)
  # DEBUG D#15ptD.0 => &this_22(D)->D.36957.D.35235._inmatchD.34313
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _88 = MEM[(intD.9 * *)this_22(D) + 112B];
  # DEBUG D#2ptD.0 => D#15ptD.0
  # DEBUG __nD.39522 => _122
  # DEBUG thisD.39523 => D#2ptD.0
  # PT = nonlocal escaped 
  _108 = _88 + _158;
  # .MEM_65 = VDEF <.MEM_151>
  *_108 = output_137;
  # DEBUG D#16ptD.0 => &this_22(D)->D.36957.D.35235._outmatchD.34314
  # VUSE <.MEM_65>
  # PT = nonlocal escaped 
  _89 = MEM[(intD.9 * *)this_22(D) + 136B];
  # DEBUG D#2ptD.0 => D#16ptD.0
  # DEBUG __nD.39518 => _55
  # DEBUG thisD.39519 => D#2ptD.0
  # PT = nonlocal escaped 
  _107 = _89 + _102;
  # .MEM_67 = VDEF <.MEM_65>
  *_107 = input_157;
  # DEBUG D#17ptD.0 => &this_22(D)->_rptrD.36923
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  _90 = MEM[(intD.9 * *)this_22(D) + 232B];
  # DEBUG D#2ptD.0 => D#17ptD.0
  # DEBUG __nD.39514 => _122
  # DEBUG thisD.39515 => D#2ptD.0
  # PT = nonlocal escaped 
  _106 = _90 + _158;
  # DEBUG D#18ptD.0 => &this_22(D)->_rptrD.36923
  # DEBUG D#2ptD.0 => D#18ptD.0
  # DEBUG __nD.39510 => _122
  # DEBUG thisD.39511 => D#2ptD.0
  # VUSE <.MEM_67>
  _69 = *_106;
  _70 = _69 + 1;
  # VUSE <.MEM_67>
  _71 = this_22(D)->D.36957.D.35235._outputsD.33567;
  _72 = _70 % _71;
  # .MEM_73 = VDEF <.MEM_67>
  *_106 = _72;
  # DEBUG D#19ptD.0 => &this_22(D)->_gptrD.36924
  # DEBUG D#2ptD.0 => D#19ptD.0
  # DEBUG __nD.39506 => _55
  # DEBUG thisD.39507 => D#2ptD.0
  # DEBUG D#20ptD.0 => &this_22(D)->_gptrD.36924
  # DEBUG D#2ptD.0 => D#20ptD.0
  # DEBUG __nD.39502 => _55
  # DEBUG thisD.39503 => D#2ptD.0
  # VUSE <.MEM_73>
  _75 = *_103;
  _76 = _75 + 1;
  # VUSE <.MEM_73>
  _77 = this_22(D)->D.36957.D.35235._inputsD.33566;
  _78 = _76 % _77;
  # .MEM_79 = VDEF <.MEM_73>
  *_103 = _78;
  # VUSE <.MEM_79>
  pretmp_220 = this_22(D)->D.36957.D.35235._outputsD.33567;
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 802, maybe hot
;;    prev block 45, next block 34, flags: (NEW, REACHABLE)
;;    pred:       28 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 2, count 0, freq 9120, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_144 = PHI <0(33), i_63(31)>
  # DEBUG iD.37812 => i_144
  # DEBUG inputD.37058 => input_128
  # DEBUG D#14ptD.0 => &this_22(D)->_reqD.36922
  # DEBUG D#2ptD.0 => D#14ptD.0
  # DEBUG __nD.39498 => _122
  # DEBUG thisD.39499 => D#2ptD.0
  i_63 = i_144 + 1;
  # DEBUG iD.37812 => i_63
  # DEBUG iD.37812 => i_63
  if (i_63 >= prephitmp_190)
    goto <bb 35>;
  else
    goto <bb 29>;
;;    succ:       35 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 34, next block 38, flags: (NEW, REACHABLE)
;;    pred:       34 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_20 = PHI <.MEM_151(34), .MEM_79(45), .MEM_151(27)>
  # prephitmp_221 = PHI <prephitmp_196(34), pretmp_220(45), prephitmp_196(27)>
  output_80 = output_137 + 1;
  # DEBUG outputD.37059 => output_80
  # DEBUG outputD.37059 => output_80
  if (output_80 >= prephitmp_221)
    goto <bb 38>;
  else
    goto <bb 36>;
;;    succ:       38 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 79, maybe hot
;;    prev block 35, next block 36, flags: (NEW)
;;    pred:       35 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_152 = PHI <.MEM_20(35)>
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU)

;;   basic block 36, loop depth 1, count 0, freq 801, maybe hot
;;    prev block 38, next block 37, flags: (NEW)
;;    pred:       35 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_20>
  pretmp_189 = this_22(D)->D.36957.D.35235._inputsD.33566;
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 36, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG inputD.37058 => 0
  # VUSE <.MEM_21(D)>
  _7 = this_22(D)->D.36957.D.35235._inputsD.33566;
  if (_7 <= 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function LOA::~LOA() (_ZN3LOAD2Ev, funcdef_no=1900, decl_uid=36942, cgraph_uid=603, symbol_order=605)


Pass statistics:
----------------

LOA::~LOA() (struct LOAD.36919 * const thisD.36943)
{
  struct vectorD.34419 * __firstD.41518;
  intD.9 * _5;
  intD.9 * _6;
  intD.9 * _7;
  intD.9 * _8;
  struct ModuleD.28688 * * _40;
  struct vectorD.34419 * _41;
  intD.9 * _43;
  intD.9 * _44;
  struct sRequestD.34315 * _48;
  charD.10 * const _51;
  const charD.10 * _52;
  charD.10 * const _53;
  const charD.10 * _54;
  struct vectorD.34419 * pretmp_65;
  struct vectorD.34419 * prephitmp_66;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.36957.D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV3LOAD.36963 + 16B];
  # DEBUG D#185ptD.0 => &this_2(D)->_gptrD.36924
  # DEBUG thisD.40679 => D#185ptD.0
  # DEBUG D#94ptD.0 => &D#185ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#185ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#185ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#185ptD.0->D.34311
  # DEBUG thisD.40680 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 256B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _5
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.40683 => D#95ptD.0
  # DEBUG __pD.40682 => _5
  # DEBUG __nD.40681 => D#88ptD.0
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.40687 => _5
  # DEBUG __aD.40685 => D#84ptD.0
  # DEBUG __nD.40686 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.40690 => _5
  # DEBUG thisD.40688 => D#80ptD.0
  # DEBUG D.40689 => D#81ptD.0
  # .MEM_15 = VDEF <.MEM_3>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_3(2), .MEM_15(3)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.40691 => D#87ptD.0
  # DEBUG thisD.40692 => D#87ptD.0
  # DEBUG thisD.40693 => D#87ptD.0
  # .MEM_20 = VDEF <.MEM_4>
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  # DEBUG D#184ptD.0 => &this_2(D)->_rptrD.36923
  # DEBUG thisD.40664 => D#184ptD.0
  # DEBUG D#94ptD.0 => &D#184ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#184ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#184ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#184ptD.0->D.34311
  # DEBUG thisD.40665 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_20>
  # PT = nonlocal escaped 
  _6 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 232B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _6
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.40668 => D#95ptD.0
  # DEBUG __pD.40667 => _6
  # DEBUG __nD.40666 => D#88ptD.0
  if (_6 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.40672 => _6
  # DEBUG __aD.40670 => D#84ptD.0
  # DEBUG __nD.40671 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.40675 => _6
  # DEBUG thisD.40673 => D#80ptD.0
  # DEBUG D.40674 => D#81ptD.0
  # .MEM_21 = VDEF <.MEM_20>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_6);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_20(4), .MEM_21(5)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.40676 => D#87ptD.0
  # DEBUG thisD.40677 => D#87ptD.0
  # DEBUG thisD.40678 => D#87ptD.0
  # .MEM_26 = VDEF <.MEM_12>
  MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
  # DEBUG D#183ptD.0 => &this_2(D)->_reqD.36922
  # DEBUG thisD.40649 => D#183ptD.0
  # DEBUG D#94ptD.0 => &D#183ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#183ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#183ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#183ptD.0->D.34311
  # DEBUG thisD.40650 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_26>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 208B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _7
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.40653 => D#95ptD.0
  # DEBUG __pD.40652 => _7
  # DEBUG __nD.40651 => D#88ptD.0
  if (_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.40657 => _7
  # DEBUG __aD.40655 => D#84ptD.0
  # DEBUG __nD.40656 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.40660 => _7
  # DEBUG thisD.40658 => D#80ptD.0
  # DEBUG D.40659 => D#81ptD.0
  # .MEM_27 = VDEF <.MEM_26>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_26(6), .MEM_27(7)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.40661 => D#87ptD.0
  # DEBUG thisD.40662 => D#87ptD.0
  # DEBUG thisD.40663 => D#87ptD.0
  # .MEM_32 = VDEF <.MEM_13>
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  # DEBUG D#182ptD.0 => &this_2(D)->_countsD.36921
  # DEBUG thisD.40634 => D#182ptD.0
  # DEBUG D#94ptD.0 => &D#182ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#182ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#182ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#182ptD.0->D.34311
  # DEBUG thisD.40635 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 184B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _8
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.40638 => D#95ptD.0
  # DEBUG __pD.40637 => _8
  # DEBUG __nD.40636 => D#88ptD.0
  if (_8 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.40642 => _8
  # DEBUG __aD.40640 => D#84ptD.0
  # DEBUG __nD.40641 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.40645 => _8
  # DEBUG thisD.40643 => D#80ptD.0
  # DEBUG D.40644 => D#81ptD.0
  # .MEM_33 = VDEF <.MEM_32>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_32(8), .MEM_33(9)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.40646 => D#87ptD.0
  # DEBUG thisD.40647 => D#87ptD.0
  # DEBUG thisD.40648 => D#87ptD.0
  # .MEM_38 = VDEF <.MEM_14>
  MEM[(struct  &)this_2(D) + 184] ={v} {CLOBBER};
  # DEBUG D#181ptD.0 => &this_2(D)->D.36957
  # DEBUG thisD.40633 => D#181ptD.0
  # .MEM_39 = VDEF <.MEM_38>
  MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#230ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)]._requestD.35166
  # DEBUG thisD.41515 => D#230ptD.0
  # DEBUG D#179ptD.0 => &D#230ptD.0->D.35164
  # DEBUG thisD.40627 => D#179ptD.0
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  _41 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  __first_46 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.41518 => __first_46
  # DEBUG __lastD.41517 => _41
  # DEBUG __firstD.41523 => __first_46
  if (_41 == __first_46)
    goto <bb 17>;
  else
    goto <bb 11>;
;;    succ:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_45 = PHI <__first_46(11), __first_49(15)>
  # .MEM_120 = PHI <.MEM_39(11), .MEM_68(15)>
  # DEBUG __firstD.41523 => __first_45
  # DEBUG __rD.40517 => __first_45
  # DEBUG __pointerD.41524 => NULL
  # DEBUG thisD.41525 => NULL
  # DEBUG thisD.40482 => D#174ptD.0
  # DEBUG D#154ptD.0 => D#176ptD.0
  # DEBUG D#155ptD.0 => D#177ptD.0
  # DEBUG __firstD.40481 => D#154ptD.0
  # DEBUG __lastD.40480 => D#155ptD.0
  # DEBUG D.40479 => D#156ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#150ptD.0 => D#152ptD.0
  # DEBUG D#151ptD.0 => D#153ptD.0
  # DEBUG __firstD.40393 => D#150ptD.0
  # DEBUG __lastD.40392 => D#151ptD.0
  # DEBUG D#149ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D.40382 => D#146ptD.0
  # DEBUG D.40381 => D#147ptD.0
  # DEBUG thisD.41526 => D#175ptD.0
  # DEBUG D#173ptD.0 => D#175ptD.0->_M_implD.37299._M_end_of_storageD.37303
  # DEBUG D#172ptD.0 => (long intD.12) D#173ptD.0
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _48 = MEM[(struct _Vector_baseD.37066 *)__first_45]._M_implD.37299._M_startD.37301;
  # DEBUG D#171ptD.0 => (long intD.12) _48
  # DEBUG D#170ptD.0 => D#172ptD.0 - D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0 /[ex] 16
  # DEBUG D#166ptD.0 => D#175ptD.0
  # DEBUG D#167ptD.0 => (long unsigned intD.14) D#169ptD.0
  # DEBUG __pD.41529 => _48
  # DEBUG thisD.41527 => D#166ptD.0
  # DEBUG __nD.41528 => D#167ptD.0
  # DEBUG D#165ptD.0 => D#167ptD.0
  # DEBUG D#164ptD.0 => D#166ptD.0
  if (_48 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#163ptD.0 => &D#164ptD.0->_M_implD.37299
  # DEBUG D#161ptD.0 => D#163ptD.0
  # DEBUG D#162ptD.0 => D#165ptD.0
  # DEBUG __pD.41533 => _48
  # DEBUG __aD.41531 => D#161ptD.0
  # DEBUG __nD.41532 => D#162ptD.0
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG __pD.41536 => _48
  # DEBUG thisD.41534 => D#157ptD.0
  # DEBUG D.41535 => D#158ptD.0
  # .MEM_63 = VDEF <.MEM_120>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_48);
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_56 = PHI <.MEM_120(12), .MEM_63(13)>
  # DEBUG D#168ptD.0 => &D#175ptD.0->_M_implD.37299
  # DEBUG thisD.41537 => D#168ptD.0
  # DEBUG thisD.41538 => D#168ptD.0
  # DEBUG thisD.41539 => D#168ptD.0
  # .MEM_68 = VDEF <.MEM_56>
  MEM[(struct  &)__first_45] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_49 = __first_45 + 24;
  # DEBUG __firstD.41523 => __first_49
  # DEBUG __firstD.41523 => __first_49
  if (_41 == __first_49)
    goto <bb 16>;
  else
    goto <bb 15>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_68>
  pretmp_65 = MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_119 = PHI <.MEM_68(16), .MEM_39(10)>
  # PT = nonlocal escaped 
  # prephitmp_66 = PHI <pretmp_65(16), __first_46(10)>
  # DEBUG D#180ptD.0 => &D#230ptD.0->D.35164
  # DEBUG thisD.41540 => D#180ptD.0
  # DEBUG D#116ptD.0 => D#180ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#115ptD.0 => (long intD.12) D#116ptD.0
  # DEBUG D#231ptD.0 => MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657
  # DEBUG D#114ptD.0 => (long intD.12) D#231ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0 - D#114ptD.0
  # DEBUG D#112ptD.0 => D#113ptD.0 /[ex] 24
  # DEBUG D#109ptD.0 => D#180ptD.0
  # DEBUG D#110ptD.0 => (long unsigned intD.14) D#112ptD.0
  # DEBUG __pD.41543 => D#231ptD.0
  # DEBUG thisD.41541 => D#109ptD.0
  # DEBUG __nD.41542 => D#110ptD.0
  # DEBUG D#108ptD.0 => D#110ptD.0
  # DEBUG D#107ptD.0 => D#109ptD.0
  if (prephitmp_66 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#106ptD.0 => &D#107ptD.0->_M_implD.34655
  # DEBUG D#104ptD.0 => D#106ptD.0
  # DEBUG D#105ptD.0 => D#108ptD.0
  # DEBUG __pD.41547 => D#231ptD.0
  # DEBUG __aD.41545 => D#104ptD.0
  # DEBUG __nD.41546 => D#105ptD.0
  # DEBUG D#103ptD.0 => D#105ptD.0
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG __pD.41550 => D#231ptD.0
  # DEBUG thisD.41548 => D#100ptD.0
  # DEBUG D.41549 => D#101ptD.0
  # .MEM_69 = VDEF <.MEM_119>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_66);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_57 = PHI <.MEM_119(17), .MEM_69(18)>
  # DEBUG D#111ptD.0 => &D#180ptD.0->_M_implD.34655
  # DEBUG thisD.41551 => D#111ptD.0
  # DEBUG thisD.41552 => D#111ptD.0
  # DEBUG thisD.41553 => D#111ptD.0
  # .MEM_74 = VDEF <.MEM_57>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#229ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235
  # DEBUG thisD.41484 => D#229ptD.0
  # .MEM_75 = VDEF <.MEM_74>
  MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#99ptD.0 => &D#229ptD.0->_outmatchD.34314
  # DEBUG thisD.41485 => D#99ptD.0
  # DEBUG D#94ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.41486 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  _43 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _43
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41489 => D#95ptD.0
  # DEBUG __pD.41488 => _43
  # DEBUG __nD.41487 => D#88ptD.0
  if (_43 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41493 => _43
  # DEBUG __aD.41491 => D#84ptD.0
  # DEBUG __nD.41492 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41496 => _43
  # DEBUG thisD.41494 => D#80ptD.0
  # DEBUG D.41495 => D#81ptD.0
  # .MEM_76 = VDEF <.MEM_75>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_43);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_75(19), .MEM_76(20)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41497 => D#87ptD.0
  # DEBUG thisD.41498 => D#87ptD.0
  # DEBUG thisD.41499 => D#87ptD.0
  # .MEM_81 = VDEF <.MEM_58>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#98ptD.0 => &D#229ptD.0->_inmatchD.34313
  # DEBUG thisD.41500 => D#98ptD.0
  # DEBUG D#94ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.41501 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_81>
  # PT = nonlocal escaped 
  _44 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _44
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41504 => D#95ptD.0
  # DEBUG __pD.41503 => _44
  # DEBUG __nD.41502 => D#88ptD.0
  if (_44 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41508 => _44
  # DEBUG __aD.41506 => D#84ptD.0
  # DEBUG __nD.41507 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41511 => _44
  # DEBUG thisD.41509 => D#80ptD.0
  # DEBUG D.41510 => D#81ptD.0
  # .MEM_82 = VDEF <.MEM_81>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_44);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_81(21), .MEM_82(22)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41512 => D#87ptD.0
  # DEBUG thisD.41513 => D#87ptD.0
  # DEBUG thisD.41514 => D#87ptD.0
  # .MEM_87 = VDEF <.MEM_59>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#228ptD.0 => &MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407
  # DEBUG thisD.41554 => D#228ptD.0
  # .MEM_88 = VDEF <.MEM_87>
  MEM[(struct ModuleD.28688 *)this_2(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#79ptD.0 => &D#228ptD.0->_childrenD.29438
  # DEBUG thisD.41555 => D#79ptD.0
  # DEBUG D#73ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.39805 => D#73ptD.0
  # DEBUG D#76ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#75ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#31ptD.0 => D#75ptD.0
  # DEBUG D#32ptD.0 => D#76ptD.0
  # DEBUG __firstD.39804 => D#31ptD.0
  # DEBUG __lastD.39803 => D#32ptD.0
  # DEBUG D.39802 => D#33ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __firstD.39575 => D#27ptD.0
  # DEBUG __lastD.39574 => D#28ptD.0
  # DEBUG D#26ptD.0 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D.39564 => D#23ptD.0
  # DEBUG D.39563 => D#24ptD.0
  # DEBUG D#74ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.41556 => D#74ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#71ptD.0 => (long intD.12) D#72ptD.0
  # VUSE <.MEM_88>
  # PT = nonlocal escaped 
  _40 = MEM[(struct _Vector_baseD.28694 *)this_2(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#70ptD.0 => (long intD.12) _40
  # DEBUG D#69ptD.0 => D#71ptD.0 - D#70ptD.0
  # DEBUG D#68ptD.0 => D#69ptD.0 /[ex] 8
  # DEBUG D#65ptD.0 => D#74ptD.0
  # DEBUG D#66ptD.0 => (long unsigned intD.14) D#68ptD.0
  # DEBUG __pD.41559 => _40
  # DEBUG thisD.41557 => D#65ptD.0
  # DEBUG __nD.41558 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  if (_40 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => &D#63ptD.0->_M_implD.28927
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#64ptD.0
  # DEBUG __pD.41563 => _40
  # DEBUG __aD.41561 => D#60ptD.0
  # DEBUG __nD.41562 => D#61ptD.0
  # DEBUG D#59ptD.0 => D#61ptD.0
  # DEBUG D#58ptD.0 => D#60ptD.0
  # DEBUG D#56ptD.0 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#59ptD.0
  # DEBUG __pD.41566 => _40
  # DEBUG thisD.41564 => D#56ptD.0
  # DEBUG D.41565 => D#57ptD.0
  # .MEM_89 = VDEF <.MEM_88>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_88(23), .MEM_89(24)>
  # DEBUG D#67ptD.0 => &D#74ptD.0->_M_implD.28927
  # DEBUG thisD.41567 => D#67ptD.0
  # DEBUG thisD.41568 => D#67ptD.0
  # DEBUG thisD.41569 => D#67ptD.0
  # .MEM_94 = VDEF <.MEM_60>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#78ptD.0 => &D#228ptD.0->_fullnameD.28691
  # DEBUG thisD.41570 => D#78ptD.0
  # DEBUG thisD.41571 => D#78ptD.0
  # DEBUG thisD.41580 => D#78ptD.0
  # VUSE <.MEM_94>
  # PT = nonlocal escaped 
  _51 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.41581 => D#78ptD.0
  # PT = nonlocal 
  _52 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_51 != _52)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#78ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.41573 => D#78ptD.0
  # DEBUG __sizeD.41572 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#78ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.41576 => _51
  # DEBUG __aD.41574 => D#49ptD.0
  # DEBUG __nD.41575 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.41579 => _51
  # DEBUG thisD.41577 => D#45ptD.0
  # DEBUG D.41578 => D#46ptD.0
  # .MEM_95 = VDEF <.MEM_94>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_51);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_94(25), .MEM_95(26)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41582 => D#55ptD.0
  # DEBUG thisD.41583 => D#55ptD.0
  # DEBUG thisD.41584 => D#55ptD.0
  # .MEM_99 = VDEF <.MEM_61>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#77ptD.0 => &D#228ptD.0->_nameD.28690
  # DEBUG thisD.41585 => D#77ptD.0
  # DEBUG thisD.41586 => D#77ptD.0
  # DEBUG thisD.41595 => D#77ptD.0
  # VUSE <.MEM_99>
  # PT = nonlocal escaped 
  _53 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.41596 => D#77ptD.0
  # PT = nonlocal 
  _54 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_53 != _54)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#77ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.41588 => D#77ptD.0
  # DEBUG __sizeD.41587 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#77ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.41591 => _53
  # DEBUG __aD.41589 => D#49ptD.0
  # DEBUG __nD.41590 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.41594 => _53
  # DEBUG thisD.41592 => D#45ptD.0
  # DEBUG D.41593 => D#46ptD.0
  # .MEM_100 = VDEF <.MEM_99>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_53);
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 28, next block 1, flags: (NEW, REACHABLE)
;;    pred:       27 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_62 = PHI <.MEM_99(27), .MEM_100(28)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41597 => D#55ptD.0
  # DEBUG thisD.41598 => D#55ptD.0
  # DEBUG thisD.41599 => D#55ptD.0
  # .MEM_9 = VDEF <.MEM_62>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_9>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.36957.D.35235.D.34407._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 256
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 256B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)__first_45]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_46
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_46]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_45]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_46
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_46]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_45]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_46
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_46]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_45]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_46
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_46]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_46 + 24, + , 24](no_overflow) != _41
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _41 - (unsigned long) (__first_46 + 24) & 7) == 0
    # of iterations (((unsigned long) _41 - (unsigned long) (__first_46 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)__first_45]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_46
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_46]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_45]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_46
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_46]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_45]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_46
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_46]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_45]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_46
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_46]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_46 + 24, + , 24](no_overflow) != _41
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _41 - (unsigned long) (__first_46 + 24) & 7) == 0
    # of iterations (((unsigned long) _41 - (unsigned long) (__first_46 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 160B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:31, LOOPS:1, CONDITIONS:13, STMTS:555)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->D.36957.D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV3LOA + 16B];
    # DEBUG D#185 => &this_2(D)->_gptr
    # DEBUG this => D#185
    # DEBUG D#94 => &D#185->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#185->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#185->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#185->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_3>
    _5 = MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _5
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _5
    # DEBUG __n => D#88
    if (_5 != 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _5
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _5
    # DEBUG this => D#80
    # DEBUG D.40689 => D#81
    # .MEM_15 = VDEF <.MEM_3>
    operator delete (_5);

  }
  bb_4 (preds = {bb_2 bb_3 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # .MEM_4 = PHI <.MEM_3(2), .MEM_15(3)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_20 = VDEF <.MEM_4>
    MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
    # DEBUG D#184 => &this_2(D)->_rptr
    # DEBUG this => D#184
    # DEBUG D#94 => &D#184->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#184->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#184->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#184->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_20>
    _6 = MEM[(struct _Vector_base *)this_2(D) + 232B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _6
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _6
    # DEBUG __n => D#88
    if (_6 != 0B)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 })
  {
    <bb 5>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _6
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _6
    # DEBUG this => D#80
    # DEBUG D.40674 => D#81
    # .MEM_21 = VDEF <.MEM_20>
    operator delete (_6);

  }
  bb_6 (preds = {bb_4 bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # .MEM_12 = PHI <.MEM_20(4), .MEM_21(5)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_26 = VDEF <.MEM_12>
    MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
    # DEBUG D#183 => &this_2(D)->_req
    # DEBUG this => D#183
    # DEBUG D#94 => &D#183->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#183->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#183->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#183->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_26>
    _7 = MEM[(struct _Vector_base *)this_2(D) + 208B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _7
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _7
    # DEBUG __n => D#88
    if (_7 != 0B)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _7
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _7
    # DEBUG this => D#80
    # DEBUG D.40659 => D#81
    # .MEM_27 = VDEF <.MEM_26>
    operator delete (_7);

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_13 = PHI <.MEM_26(6), .MEM_27(7)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_32 = VDEF <.MEM_13>
    MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
    # DEBUG D#182 => &this_2(D)->_counts
    # DEBUG this => D#182
    # DEBUG D#94 => &D#182->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#182->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#182->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#182->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_32>
    _8 = MEM[(struct _Vector_base *)this_2(D) + 184B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _8
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _8
    # DEBUG __n => D#88
    if (_8 != 0B)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _8
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _8
    # DEBUG this => D#80
    # DEBUG D.40644 => D#81
    # .MEM_33 = VDEF <.MEM_32>
    operator delete (_8);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_17 bb_11 })
  {
    <bb 10>:
    # .MEM_14 = PHI <.MEM_32(8), .MEM_33(9)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_38 = VDEF <.MEM_14>
    MEM[(struct  &)this_2(D) + 184] ={v} {CLOBBER};
    # DEBUG D#181 => &this_2(D)->D.36957
    # DEBUG this => D#181
    # .MEM_39 = VDEF <.MEM_38>
    MEM[(struct DenseAllocator *)this_2(D)].D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV14DenseAllocator + 16B];
    # DEBUG D#230 => &MEM[(struct DenseAllocator *)this_2(D)]._request
    # DEBUG this => D#230
    # DEBUG D#179 => &D#230->D.35164
    # DEBUG this => D#179
    # VUSE <.MEM_39>
    _41 = MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_finish;
    # VUSE <.MEM_39>
    __first_46 = MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_start;
    # DEBUG __first => __first_46
    # DEBUG __last => _41
    # DEBUG __first => __first_46
    if (_41 == __first_46)
      goto <bb 17>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:

  }
  bb_16 (preds = {bb_14 }, succs = {bb_30 })
  {
    <bb 16>:

  }
  bb_30 (preds = {bb_16 }, succs = {bb_17 })
  {
    <bb 30>:
    # VUSE <.MEM_68>
    pretmp_65 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;

  }
  bb_17 (preds = {bb_30 bb_10 }, succs = {bb_18 bb_19 })
  {
    <bb 17>:
    # .MEM_119 = PHI <.MEM_68(30), .MEM_39(10)>
    # prephitmp_66 = PHI <pretmp_65(30), __first_46(10)>
    # DEBUG D#180 => &D#230->D.35164
    # DEBUG this => D#180
    # DEBUG D#116 => D#180->_M_impl._M_end_of_storage
    # DEBUG D#115 => (long int) D#116
    # DEBUG D#231 => MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start
    # DEBUG D#114 => (long int) D#231
    # DEBUG D#113 => D#115 - D#114
    # DEBUG D#112 => D#113 /[ex] 24
    # DEBUG D#109 => D#180
    # DEBUG D#110 => (long unsigned int) D#112
    # DEBUG __p => D#231
    # DEBUG this => D#109
    # DEBUG __n => D#110
    # DEBUG D#108 => D#110
    # DEBUG D#107 => D#109
    if (prephitmp_66 != 0B)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#106 => &D#107->_M_impl
    # DEBUG D#104 => D#106
    # DEBUG D#105 => D#108
    # DEBUG __p => D#231
    # DEBUG __a => D#104
    # DEBUG __n => D#105
    # DEBUG D#103 => D#105
    # DEBUG D#102 => D#104
    # DEBUG D#100 => D#102
    # DEBUG D#101 => D#103
    # DEBUG __p => D#231
    # DEBUG this => D#100
    # DEBUG D.41549 => D#101
    # .MEM_69 = VDEF <.MEM_119>
    operator delete (prephitmp_66);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {bb_20 bb_21 })
  {
    <bb 19>:
    # .MEM_57 = PHI <.MEM_119(17), .MEM_69(18)>
    # DEBUG D#111 => &D#180->_M_impl
    # DEBUG this => D#111
    # DEBUG this => D#111
    # DEBUG this => D#111
    # .MEM_74 = VDEF <.MEM_57>
    MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
    # DEBUG D#229 => &MEM[(struct DenseAllocator *)this_2(D)].D.35235
    # DEBUG this => D#229
    # .MEM_75 = VDEF <.MEM_74>
    MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
    # DEBUG D#99 => &D#229->_outmatch
    # DEBUG this => D#99
    # DEBUG D#94 => &D#99->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#99->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#99->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#99->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_75>
    _43 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _43
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _43
    # DEBUG __n => D#88
    if (_43 != 0B)
      goto <bb 20>;
    else
      goto <bb 21>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_21 })
  {
    <bb 20>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _43
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _43
    # DEBUG this => D#80
    # DEBUG D.41495 => D#81
    # .MEM_76 = VDEF <.MEM_75>
    operator delete (_43);

  }
  bb_21 (preds = {bb_19 bb_20 }, succs = {bb_22 bb_23 })
  {
    <bb 21>:
    # .MEM_58 = PHI <.MEM_75(19), .MEM_76(20)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_81 = VDEF <.MEM_58>
    MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
    # DEBUG D#98 => &D#229->_inmatch
    # DEBUG this => D#98
    # DEBUG D#94 => &D#98->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#98->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#98->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#98->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_81>
    _44 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _44
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _44
    # DEBUG __n => D#88
    if (_44 != 0B)
      goto <bb 22>;
    else
      goto <bb 23>;

  }
  bb_22 (preds = {bb_21 }, succs = {bb_23 })
  {
    <bb 22>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _44
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _44
    # DEBUG this => D#80
    # DEBUG D.41510 => D#81
    # .MEM_82 = VDEF <.MEM_81>
    operator delete (_44);

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # .MEM_59 = PHI <.MEM_81(21), .MEM_82(22)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_87 = VDEF <.MEM_59>
    MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
    # DEBUG D#228 => &MEM[(struct Allocator *)this_2(D)].D.34407
    # DEBUG this => D#228
    # .MEM_88 = VDEF <.MEM_87>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#79 => &D#228->_children
    # DEBUG this => D#79
    # DEBUG D#73 => &D#79->D.29436
    # DEBUG this => D#73
    # DEBUG D#76 => D#79->D.29436._M_impl._M_finish
    # DEBUG D#75 => D#79->D.29436._M_impl._M_start
    # DEBUG D#31 => D#75
    # DEBUG D#32 => D#76
    # DEBUG __first => D#31
    # DEBUG __last => D#32
    # DEBUG D.39802 => D#33
    # DEBUG D#30 => D#32
    # DEBUG D#29 => D#31
    # DEBUG D#27 => D#29
    # DEBUG D#28 => D#30
    # DEBUG __first => D#27
    # DEBUG __last => D#28
    # DEBUG D#26 => D#28
    # DEBUG D#25 => D#27
    # DEBUG D#23 => D#25
    # DEBUG D#24 => D#26
    # DEBUG D.39564 => D#23
    # DEBUG D.39563 => D#24
    # DEBUG D#74 => &D#79->D.29436
    # DEBUG this => D#74
    # DEBUG D#72 => D#74->_M_impl._M_end_of_storage
    # DEBUG D#71 => (long int) D#72
    # VUSE <.MEM_88>
    _40 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#70 => (long int) _40
    # DEBUG D#69 => D#71 - D#70
    # DEBUG D#68 => D#69 /[ex] 8
    # DEBUG D#65 => D#74
    # DEBUG D#66 => (long unsigned int) D#68
    # DEBUG __p => _40
    # DEBUG this => D#65
    # DEBUG __n => D#66
    # DEBUG D#64 => D#66
    # DEBUG D#63 => D#65
    if (_40 != 0B)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    # DEBUG D#62 => &D#63->_M_impl
    # DEBUG D#60 => D#62
    # DEBUG D#61 => D#64
    # DEBUG __p => _40
    # DEBUG __a => D#60
    # DEBUG __n => D#61
    # DEBUG D#59 => D#61
    # DEBUG D#58 => D#60
    # DEBUG D#56 => D#58
    # DEBUG D#57 => D#59
    # DEBUG __p => _40
    # DEBUG this => D#56
    # DEBUG D.41565 => D#57
    # .MEM_89 = VDEF <.MEM_88>
    operator delete (_40);

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {bb_26 bb_27 })
  {
    <bb 25>:
    # .MEM_60 = PHI <.MEM_88(23), .MEM_89(24)>
    # DEBUG D#67 => &D#74->_M_impl
    # DEBUG this => D#67
    # DEBUG this => D#67
    # DEBUG this => D#67
    # .MEM_94 = VDEF <.MEM_60>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#78 => &D#228->_fullname
    # DEBUG this => D#78
    # DEBUG this => D#78
    # DEBUG this => D#78
    # VUSE <.MEM_94>
    _51 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#1 => D#78
    # DEBUG this => D#1
    # DEBUG this => D#78
    _52 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
    if (_51 != _52)
      goto <bb 26>;
    else
      goto <bb 27>;

  }
  bb_26 (preds = {bb_25 }, succs = {bb_27 })
  {
    <bb 26>:
    # DEBUG D#54 => MEM[(struct basic_string *)D#78].D.11539._M_allocated_capacity
    # DEBUG D#53 => D#54
    # DEBUG this => D#78
    # DEBUG __size => D#53
    # DEBUG D#52 => D#53
    # DEBUG D#1 => D#78
    # DEBUG this => D#1
    # DEBUG this => D#78
    # DEBUG D#51 => &MEM[(struct basic_string *)D#78]._M_dataplus
    # DEBUG D#49 => D#51
    # DEBUG D#50 => D#52 + 1
    # DEBUG __p => _51
    # DEBUG __a => D#49
    # DEBUG __n => D#50
    # DEBUG D#48 => D#50
    # DEBUG D#47 => D#49
    # DEBUG D#45 => D#47
    # DEBUG D#46 => D#48
    # DEBUG __p => _51
    # DEBUG this => D#45
    # DEBUG D.41578 => D#46
    # .MEM_95 = VDEF <.MEM_94>
    operator delete (_51);

  }
  bb_27 (preds = {bb_25 bb_26 }, succs = {bb_28 bb_29 })
  {
    <bb 27>:
    # .MEM_61 = PHI <.MEM_94(25), .MEM_95(26)>
    # DEBUG D#55 => &MEM[(struct basic_string *)D#78]._M_dataplus
    # DEBUG this => D#55
    # DEBUG this => D#55
    # DEBUG this => D#55
    # .MEM_99 = VDEF <.MEM_61>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#77 => &D#228->_name
    # DEBUG this => D#77
    # DEBUG this => D#77
    # DEBUG this => D#77
    # VUSE <.MEM_99>
    _53 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#1 => D#77
    # DEBUG this => D#1
    # DEBUG this => D#77
    _54 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
    if (_53 != _54)
      goto <bb 28>;
    else
      goto <bb 29>;

  }
  bb_28 (preds = {bb_27 }, succs = {bb_29 })
  {
    <bb 28>:
    # DEBUG D#54 => MEM[(struct basic_string *)D#77].D.11539._M_allocated_capacity
    # DEBUG D#53 => D#54
    # DEBUG this => D#77
    # DEBUG __size => D#53
    # DEBUG D#52 => D#53
    # DEBUG D#1 => D#77
    # DEBUG this => D#1
    # DEBUG this => D#77
    # DEBUG D#51 => &MEM[(struct basic_string *)D#77]._M_dataplus
    # DEBUG D#49 => D#51
    # DEBUG D#50 => D#52 + 1
    # DEBUG __p => _53
    # DEBUG __a => D#49
    # DEBUG __n => D#50
    # DEBUG D#48 => D#50
    # DEBUG D#47 => D#49
    # DEBUG D#45 => D#47
    # DEBUG D#46 => D#48
    # DEBUG __p => _53
    # DEBUG this => D#45
    # DEBUG D.41593 => D#46
    # .MEM_100 = VDEF <.MEM_99>
    operator delete (_53);

  }
  bb_29 (preds = {bb_27 bb_28 }, succs = {bb_1 })
  {
    <bb 29>:
    # .MEM_62 = PHI <.MEM_99(27), .MEM_100(28)>
    # DEBUG D#55 => &MEM[(struct basic_string *)D#77]._M_dataplus
    # DEBUG this => D#55
    # DEBUG this => D#55
    # DEBUG this => D#55
    # .MEM_9 = VDEF <.MEM_62>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # VUSE <.MEM_9>
    return;

  }
  loop_1 (header = 12, latch = 15, niter = )
  {
    bb_12 (preds = {bb_11 bb_15 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # __first_45 = PHI <__first_46(11), __first_49(15)>
      # .MEM_120 = PHI <.MEM_39(11), .MEM_68(15)>
      # DEBUG __first => __first_45
      # DEBUG __r => __first_45
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#174
      # DEBUG D#154 => D#176
      # DEBUG D#155 => D#177
      # DEBUG __first => D#154
      # DEBUG __last => D#155
      # DEBUG D.40479 => D#156
      # DEBUG D#153 => D#155
      # DEBUG D#152 => D#154
      # DEBUG D#150 => D#152
      # DEBUG D#151 => D#153
      # DEBUG __first => D#150
      # DEBUG __last => D#151
      # DEBUG D#149 => D#151
      # DEBUG D#148 => D#150
      # DEBUG D#146 => D#148
      # DEBUG D#147 => D#149
      # DEBUG D.40382 => D#146
      # DEBUG D.40381 => D#147
      # DEBUG this => D#175
      # DEBUG D#173 => D#175->_M_impl._M_end_of_storage
      # DEBUG D#172 => (long int) D#173
      # VUSE <.MEM_120>
      _48 = MEM[(struct _Vector_base *)__first_45]._M_impl._M_start;
      # DEBUG D#171 => (long int) _48
      # DEBUG D#170 => D#172 - D#171
      # DEBUG D#169 => D#170 /[ex] 16
      # DEBUG D#166 => D#175
      # DEBUG D#167 => (long unsigned int) D#169
      # DEBUG __p => _48
      # DEBUG this => D#166
      # DEBUG __n => D#167
      # DEBUG D#165 => D#167
      # DEBUG D#164 => D#166
      if (_48 != 0B)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
    bb_13 (preds = {bb_12 }, succs = {bb_14 })
    {
      <bb 13>:
      # DEBUG D#163 => &D#164->_M_impl
      # DEBUG D#161 => D#163
      # DEBUG D#162 => D#165
      # DEBUG __p => _48
      # DEBUG __a => D#161
      # DEBUG __n => D#162
      # DEBUG D#160 => D#162
      # DEBUG D#159 => D#161
      # DEBUG D#157 => D#159
      # DEBUG D#158 => D#160
      # DEBUG __p => _48
      # DEBUG this => D#157
      # DEBUG D.41535 => D#158
      # .MEM_63 = VDEF <.MEM_120>
      operator delete (_48);

    }
    bb_14 (preds = {bb_12 bb_13 }, succs = {bb_16 bb_15 })
    {
      <bb 14>:
      # .MEM_56 = PHI <.MEM_120(12), .MEM_63(13)>
      # DEBUG D#168 => &D#175->_M_impl
      # DEBUG this => D#168
      # DEBUG this => D#168
      # DEBUG this => D#168
      # .MEM_68 = VDEF <.MEM_56>
      MEM[(struct  &)__first_45] ={v} {CLOBBER};
      __first_49 = __first_45 + 24;
      # DEBUG __first => __first_49
      # DEBUG __first => __first_49
      if (_41 == __first_49)
        goto <bb 16>;
      else
        goto <bb 15>;

    }
    bb_15 (preds = {bb_14 }, succs = {bb_12 })
    {
      <bb 15>:
      goto <bb 12>;

    }
  }
}

Pass statistics:
----------------

LOA::~LOA() (struct LOAD.36919 * const thisD.36943)
{
  struct vectorD.34419 * __firstD.41518;
  intD.9 * _5;
  intD.9 * _6;
  intD.9 * _7;
  intD.9 * _8;
  struct ModuleD.28688 * * _40;
  struct vectorD.34419 * _41;
  intD.9 * _43;
  intD.9 * _44;
  struct sRequestD.34315 * _48;
  charD.10 * const _51;
  const charD.10 * _52;
  charD.10 * const _53;
  const charD.10 * _54;
  struct vectorD.34419 * pretmp_65;
  struct vectorD.34419 * prephitmp_66;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.36957.D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV3LOAD.36963 + 16B];
  # DEBUG D#185ptD.0 => &this_2(D)->_gptrD.36924
  # DEBUG thisD.40679 => D#185ptD.0
  # DEBUG D#94ptD.0 => &D#185ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#185ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#185ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#185ptD.0->D.34311
  # DEBUG thisD.40680 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 256B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _5
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.40683 => D#95ptD.0
  # DEBUG __pD.40682 => _5
  # DEBUG __nD.40681 => D#88ptD.0
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.40687 => _5
  # DEBUG __aD.40685 => D#84ptD.0
  # DEBUG __nD.40686 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.40690 => _5
  # DEBUG thisD.40688 => D#80ptD.0
  # DEBUG D.40689 => D#81ptD.0
  # .MEM_15 = VDEF <.MEM_3>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_3(2), .MEM_15(3)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.40691 => D#87ptD.0
  # DEBUG thisD.40692 => D#87ptD.0
  # DEBUG thisD.40693 => D#87ptD.0
  # .MEM_20 = VDEF <.MEM_4>
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  # DEBUG D#184ptD.0 => &this_2(D)->_rptrD.36923
  # DEBUG thisD.40664 => D#184ptD.0
  # DEBUG D#94ptD.0 => &D#184ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#184ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#184ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#184ptD.0->D.34311
  # DEBUG thisD.40665 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_20>
  # PT = nonlocal escaped 
  _6 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 232B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _6
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.40668 => D#95ptD.0
  # DEBUG __pD.40667 => _6
  # DEBUG __nD.40666 => D#88ptD.0
  if (_6 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.40672 => _6
  # DEBUG __aD.40670 => D#84ptD.0
  # DEBUG __nD.40671 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.40675 => _6
  # DEBUG thisD.40673 => D#80ptD.0
  # DEBUG D.40674 => D#81ptD.0
  # .MEM_21 = VDEF <.MEM_20>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_6);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_20(4), .MEM_21(5)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.40676 => D#87ptD.0
  # DEBUG thisD.40677 => D#87ptD.0
  # DEBUG thisD.40678 => D#87ptD.0
  # .MEM_26 = VDEF <.MEM_12>
  MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
  # DEBUG D#183ptD.0 => &this_2(D)->_reqD.36922
  # DEBUG thisD.40649 => D#183ptD.0
  # DEBUG D#94ptD.0 => &D#183ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#183ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#183ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#183ptD.0->D.34311
  # DEBUG thisD.40650 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_26>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 208B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _7
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.40653 => D#95ptD.0
  # DEBUG __pD.40652 => _7
  # DEBUG __nD.40651 => D#88ptD.0
  if (_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.40657 => _7
  # DEBUG __aD.40655 => D#84ptD.0
  # DEBUG __nD.40656 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.40660 => _7
  # DEBUG thisD.40658 => D#80ptD.0
  # DEBUG D.40659 => D#81ptD.0
  # .MEM_27 = VDEF <.MEM_26>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_26(6), .MEM_27(7)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.40661 => D#87ptD.0
  # DEBUG thisD.40662 => D#87ptD.0
  # DEBUG thisD.40663 => D#87ptD.0
  # .MEM_32 = VDEF <.MEM_13>
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  # DEBUG D#182ptD.0 => &this_2(D)->_countsD.36921
  # DEBUG thisD.40634 => D#182ptD.0
  # DEBUG D#94ptD.0 => &D#182ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#182ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#182ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#182ptD.0->D.34311
  # DEBUG thisD.40635 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 184B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _8
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.40638 => D#95ptD.0
  # DEBUG __pD.40637 => _8
  # DEBUG __nD.40636 => D#88ptD.0
  if (_8 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.40642 => _8
  # DEBUG __aD.40640 => D#84ptD.0
  # DEBUG __nD.40641 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.40645 => _8
  # DEBUG thisD.40643 => D#80ptD.0
  # DEBUG D.40644 => D#81ptD.0
  # .MEM_33 = VDEF <.MEM_32>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_32(8), .MEM_33(9)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.40646 => D#87ptD.0
  # DEBUG thisD.40647 => D#87ptD.0
  # DEBUG thisD.40648 => D#87ptD.0
  # .MEM_38 = VDEF <.MEM_14>
  MEM[(struct  &)this_2(D) + 184] ={v} {CLOBBER};
  # DEBUG D#181ptD.0 => &this_2(D)->D.36957
  # DEBUG thisD.40633 => D#181ptD.0
  # .MEM_39 = VDEF <.MEM_38>
  MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#230ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)]._requestD.35166
  # DEBUG thisD.41515 => D#230ptD.0
  # DEBUG D#179ptD.0 => &D#230ptD.0->D.35164
  # DEBUG thisD.40627 => D#179ptD.0
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  _41 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  __first_46 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.41518 => __first_46
  # DEBUG __lastD.41517 => _41
  # DEBUG __firstD.41523 => __first_46
  if (_41 == __first_46)
    goto <bb 17>;
  else
    goto <bb 11>;
;;    succ:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_45 = PHI <__first_46(11), __first_49(15)>
  # .MEM_120 = PHI <.MEM_39(11), .MEM_68(15)>
  # DEBUG __firstD.41523 => __first_45
  # DEBUG __rD.40517 => __first_45
  # DEBUG __pointerD.41524 => NULL
  # DEBUG thisD.41525 => NULL
  # DEBUG thisD.40482 => D#174ptD.0
  # DEBUG D#154ptD.0 => D#176ptD.0
  # DEBUG D#155ptD.0 => D#177ptD.0
  # DEBUG __firstD.40481 => D#154ptD.0
  # DEBUG __lastD.40480 => D#155ptD.0
  # DEBUG D.40479 => D#156ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#150ptD.0 => D#152ptD.0
  # DEBUG D#151ptD.0 => D#153ptD.0
  # DEBUG __firstD.40393 => D#150ptD.0
  # DEBUG __lastD.40392 => D#151ptD.0
  # DEBUG D#149ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D.40382 => D#146ptD.0
  # DEBUG D.40381 => D#147ptD.0
  # DEBUG thisD.41526 => D#175ptD.0
  # DEBUG D#173ptD.0 => D#175ptD.0->_M_implD.37299._M_end_of_storageD.37303
  # DEBUG D#172ptD.0 => (long intD.12) D#173ptD.0
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _48 = MEM[(struct _Vector_baseD.37066 *)__first_45]._M_implD.37299._M_startD.37301;
  # DEBUG D#171ptD.0 => (long intD.12) _48
  # DEBUG D#170ptD.0 => D#172ptD.0 - D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0 /[ex] 16
  # DEBUG D#166ptD.0 => D#175ptD.0
  # DEBUG D#167ptD.0 => (long unsigned intD.14) D#169ptD.0
  # DEBUG __pD.41529 => _48
  # DEBUG thisD.41527 => D#166ptD.0
  # DEBUG __nD.41528 => D#167ptD.0
  # DEBUG D#165ptD.0 => D#167ptD.0
  # DEBUG D#164ptD.0 => D#166ptD.0
  if (_48 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#163ptD.0 => &D#164ptD.0->_M_implD.37299
  # DEBUG D#161ptD.0 => D#163ptD.0
  # DEBUG D#162ptD.0 => D#165ptD.0
  # DEBUG __pD.41533 => _48
  # DEBUG __aD.41531 => D#161ptD.0
  # DEBUG __nD.41532 => D#162ptD.0
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG __pD.41536 => _48
  # DEBUG thisD.41534 => D#157ptD.0
  # DEBUG D.41535 => D#158ptD.0
  # .MEM_63 = VDEF <.MEM_120>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_48);
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_56 = PHI <.MEM_120(12), .MEM_63(13)>
  # DEBUG D#168ptD.0 => &D#175ptD.0->_M_implD.37299
  # DEBUG thisD.41537 => D#168ptD.0
  # DEBUG thisD.41538 => D#168ptD.0
  # DEBUG thisD.41539 => D#168ptD.0
  # .MEM_68 = VDEF <.MEM_56>
  MEM[(struct  &)__first_45] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_49 = __first_45 + 24;
  # DEBUG __firstD.41523 => __first_49
  # DEBUG __firstD.41523 => __first_49
  if (_41 == __first_49)
    goto <bb 16>;
  else
    goto <bb 15>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 30, flags: (NEW)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       30 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 16, next block 17, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_68>
  pretmp_65 = MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 30, next block 18, flags: (NEW, REACHABLE)
;;    pred:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_119 = PHI <.MEM_68(30), .MEM_39(10)>
  # PT = nonlocal escaped 
  # prephitmp_66 = PHI <pretmp_65(30), __first_46(10)>
  # DEBUG D#180ptD.0 => &D#230ptD.0->D.35164
  # DEBUG thisD.41540 => D#180ptD.0
  # DEBUG D#116ptD.0 => D#180ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#115ptD.0 => (long intD.12) D#116ptD.0
  # DEBUG D#231ptD.0 => MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657
  # DEBUG D#114ptD.0 => (long intD.12) D#231ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0 - D#114ptD.0
  # DEBUG D#112ptD.0 => D#113ptD.0 /[ex] 24
  # DEBUG D#109ptD.0 => D#180ptD.0
  # DEBUG D#110ptD.0 => (long unsigned intD.14) D#112ptD.0
  # DEBUG __pD.41543 => D#231ptD.0
  # DEBUG thisD.41541 => D#109ptD.0
  # DEBUG __nD.41542 => D#110ptD.0
  # DEBUG D#108ptD.0 => D#110ptD.0
  # DEBUG D#107ptD.0 => D#109ptD.0
  if (prephitmp_66 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#106ptD.0 => &D#107ptD.0->_M_implD.34655
  # DEBUG D#104ptD.0 => D#106ptD.0
  # DEBUG D#105ptD.0 => D#108ptD.0
  # DEBUG __pD.41547 => D#231ptD.0
  # DEBUG __aD.41545 => D#104ptD.0
  # DEBUG __nD.41546 => D#105ptD.0
  # DEBUG D#103ptD.0 => D#105ptD.0
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG __pD.41550 => D#231ptD.0
  # DEBUG thisD.41548 => D#100ptD.0
  # DEBUG D.41549 => D#101ptD.0
  # .MEM_69 = VDEF <.MEM_119>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_66);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_57 = PHI <.MEM_119(17), .MEM_69(18)>
  # DEBUG D#111ptD.0 => &D#180ptD.0->_M_implD.34655
  # DEBUG thisD.41551 => D#111ptD.0
  # DEBUG thisD.41552 => D#111ptD.0
  # DEBUG thisD.41553 => D#111ptD.0
  # .MEM_74 = VDEF <.MEM_57>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#229ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235
  # DEBUG thisD.41484 => D#229ptD.0
  # .MEM_75 = VDEF <.MEM_74>
  MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#99ptD.0 => &D#229ptD.0->_outmatchD.34314
  # DEBUG thisD.41485 => D#99ptD.0
  # DEBUG D#94ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.41486 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  _43 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _43
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41489 => D#95ptD.0
  # DEBUG __pD.41488 => _43
  # DEBUG __nD.41487 => D#88ptD.0
  if (_43 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41493 => _43
  # DEBUG __aD.41491 => D#84ptD.0
  # DEBUG __nD.41492 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41496 => _43
  # DEBUG thisD.41494 => D#80ptD.0
  # DEBUG D.41495 => D#81ptD.0
  # .MEM_76 = VDEF <.MEM_75>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_43);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_75(19), .MEM_76(20)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41497 => D#87ptD.0
  # DEBUG thisD.41498 => D#87ptD.0
  # DEBUG thisD.41499 => D#87ptD.0
  # .MEM_81 = VDEF <.MEM_58>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#98ptD.0 => &D#229ptD.0->_inmatchD.34313
  # DEBUG thisD.41500 => D#98ptD.0
  # DEBUG D#94ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.41501 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_81>
  # PT = nonlocal escaped 
  _44 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _44
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41504 => D#95ptD.0
  # DEBUG __pD.41503 => _44
  # DEBUG __nD.41502 => D#88ptD.0
  if (_44 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41508 => _44
  # DEBUG __aD.41506 => D#84ptD.0
  # DEBUG __nD.41507 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41511 => _44
  # DEBUG thisD.41509 => D#80ptD.0
  # DEBUG D.41510 => D#81ptD.0
  # .MEM_82 = VDEF <.MEM_81>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_44);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_81(21), .MEM_82(22)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41512 => D#87ptD.0
  # DEBUG thisD.41513 => D#87ptD.0
  # DEBUG thisD.41514 => D#87ptD.0
  # .MEM_87 = VDEF <.MEM_59>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#228ptD.0 => &MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407
  # DEBUG thisD.41554 => D#228ptD.0
  # .MEM_88 = VDEF <.MEM_87>
  MEM[(struct ModuleD.28688 *)this_2(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#79ptD.0 => &D#228ptD.0->_childrenD.29438
  # DEBUG thisD.41555 => D#79ptD.0
  # DEBUG D#73ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.39805 => D#73ptD.0
  # DEBUG D#76ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#75ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#31ptD.0 => D#75ptD.0
  # DEBUG D#32ptD.0 => D#76ptD.0
  # DEBUG __firstD.39804 => D#31ptD.0
  # DEBUG __lastD.39803 => D#32ptD.0
  # DEBUG D.39802 => D#33ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __firstD.39575 => D#27ptD.0
  # DEBUG __lastD.39574 => D#28ptD.0
  # DEBUG D#26ptD.0 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D.39564 => D#23ptD.0
  # DEBUG D.39563 => D#24ptD.0
  # DEBUG D#74ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.41556 => D#74ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#71ptD.0 => (long intD.12) D#72ptD.0
  # VUSE <.MEM_88>
  # PT = nonlocal escaped 
  _40 = MEM[(struct _Vector_baseD.28694 *)this_2(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#70ptD.0 => (long intD.12) _40
  # DEBUG D#69ptD.0 => D#71ptD.0 - D#70ptD.0
  # DEBUG D#68ptD.0 => D#69ptD.0 /[ex] 8
  # DEBUG D#65ptD.0 => D#74ptD.0
  # DEBUG D#66ptD.0 => (long unsigned intD.14) D#68ptD.0
  # DEBUG __pD.41559 => _40
  # DEBUG thisD.41557 => D#65ptD.0
  # DEBUG __nD.41558 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  if (_40 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => &D#63ptD.0->_M_implD.28927
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#64ptD.0
  # DEBUG __pD.41563 => _40
  # DEBUG __aD.41561 => D#60ptD.0
  # DEBUG __nD.41562 => D#61ptD.0
  # DEBUG D#59ptD.0 => D#61ptD.0
  # DEBUG D#58ptD.0 => D#60ptD.0
  # DEBUG D#56ptD.0 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#59ptD.0
  # DEBUG __pD.41566 => _40
  # DEBUG thisD.41564 => D#56ptD.0
  # DEBUG D.41565 => D#57ptD.0
  # .MEM_89 = VDEF <.MEM_88>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_88(23), .MEM_89(24)>
  # DEBUG D#67ptD.0 => &D#74ptD.0->_M_implD.28927
  # DEBUG thisD.41567 => D#67ptD.0
  # DEBUG thisD.41568 => D#67ptD.0
  # DEBUG thisD.41569 => D#67ptD.0
  # .MEM_94 = VDEF <.MEM_60>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#78ptD.0 => &D#228ptD.0->_fullnameD.28691
  # DEBUG thisD.41570 => D#78ptD.0
  # DEBUG thisD.41571 => D#78ptD.0
  # DEBUG thisD.41580 => D#78ptD.0
  # VUSE <.MEM_94>
  # PT = nonlocal escaped 
  _51 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.41581 => D#78ptD.0
  # PT = nonlocal 
  _52 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_51 != _52)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#78ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.41573 => D#78ptD.0
  # DEBUG __sizeD.41572 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#78ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.41576 => _51
  # DEBUG __aD.41574 => D#49ptD.0
  # DEBUG __nD.41575 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.41579 => _51
  # DEBUG thisD.41577 => D#45ptD.0
  # DEBUG D.41578 => D#46ptD.0
  # .MEM_95 = VDEF <.MEM_94>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_51);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_94(25), .MEM_95(26)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41582 => D#55ptD.0
  # DEBUG thisD.41583 => D#55ptD.0
  # DEBUG thisD.41584 => D#55ptD.0
  # .MEM_99 = VDEF <.MEM_61>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#77ptD.0 => &D#228ptD.0->_nameD.28690
  # DEBUG thisD.41585 => D#77ptD.0
  # DEBUG thisD.41586 => D#77ptD.0
  # DEBUG thisD.41595 => D#77ptD.0
  # VUSE <.MEM_99>
  # PT = nonlocal escaped 
  _53 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.41596 => D#77ptD.0
  # PT = nonlocal 
  _54 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_53 != _54)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#77ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.41588 => D#77ptD.0
  # DEBUG __sizeD.41587 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#77ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.41591 => _53
  # DEBUG __aD.41589 => D#49ptD.0
  # DEBUG __nD.41590 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.41594 => _53
  # DEBUG thisD.41592 => D#45ptD.0
  # DEBUG D.41593 => D#46ptD.0
  # .MEM_100 = VDEF <.MEM_99>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_53);
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 28, next block 1, flags: (NEW, REACHABLE)
;;    pred:       27 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_62 = PHI <.MEM_99(27), .MEM_100(28)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41597 => D#55ptD.0
  # DEBUG thisD.41598 => D#55ptD.0
  # DEBUG thisD.41599 => D#55ptD.0
  # .MEM_9 = VDEF <.MEM_62>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_9>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual LOA::~LOA() (_ZN3LOAD0Ev, funcdef_no=1902, decl_uid=36936, cgraph_uid=605, symbol_order=607)


Pass statistics:
----------------

virtual LOA::~LOA() (struct LOAD.36919 * const thisD.36937)
{
  struct vectorD.34419 * __firstD.41709;
  intD.9 * _3;
  intD.9 * _5;
  intD.9 * _6;
  intD.9 * _7;
  intD.9 * _8;
  intD.9 * _11;
  struct vectorD.34419 * _13;
  struct sRequestD.34315 * _16;
  struct ModuleD.28688 * * _19;
  charD.10 * const _20;
  const charD.10 * _21;
  charD.10 * const _22;
  const charD.10 * _23;
  struct vectorD.34419 * pretmp_64;
  struct vectorD.34419 * prephitmp_65;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.41613 => this_2(D)
  # .MEM_36 = VDEF <.MEM_1(D)>
  this_2(D)->D.36957.D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV3LOAD.36963 + 16B];
  # DEBUG D#185ptD.0 => &this_2(D)->_gptrD.36924
  # DEBUG thisD.41614 => D#185ptD.0
  # DEBUG D#94ptD.0 => &D#185ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#185ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#185ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#185ptD.0->D.34311
  # DEBUG thisD.41615 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_36>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 256B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _5
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41618 => D#95ptD.0
  # DEBUG __pD.41617 => _5
  # DEBUG __nD.41616 => D#88ptD.0
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41622 => _5
  # DEBUG __aD.41620 => D#84ptD.0
  # DEBUG __nD.41621 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41625 => _5
  # DEBUG thisD.41623 => D#80ptD.0
  # DEBUG D.41624 => D#81ptD.0
  # .MEM_37 = VDEF <.MEM_36>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_36(2), .MEM_37(3)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41626 => D#87ptD.0
  # DEBUG thisD.41627 => D#87ptD.0
  # DEBUG thisD.41628 => D#87ptD.0
  # .MEM_42 = VDEF <.MEM_24>
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  # DEBUG D#184ptD.0 => &this_2(D)->_rptrD.36923
  # DEBUG thisD.41629 => D#184ptD.0
  # DEBUG D#94ptD.0 => &D#184ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#184ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#184ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#184ptD.0->D.34311
  # DEBUG thisD.41630 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_42>
  # PT = nonlocal escaped 
  _6 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 232B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _6
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41633 => D#95ptD.0
  # DEBUG __pD.41632 => _6
  # DEBUG __nD.41631 => D#88ptD.0
  if (_6 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41637 => _6
  # DEBUG __aD.41635 => D#84ptD.0
  # DEBUG __nD.41636 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41640 => _6
  # DEBUG thisD.41638 => D#80ptD.0
  # DEBUG D.41639 => D#81ptD.0
  # .MEM_43 = VDEF <.MEM_42>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_6);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_42(4), .MEM_43(5)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41641 => D#87ptD.0
  # DEBUG thisD.41642 => D#87ptD.0
  # DEBUG thisD.41643 => D#87ptD.0
  # .MEM_48 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
  # DEBUG D#183ptD.0 => &this_2(D)->_reqD.36922
  # DEBUG thisD.41644 => D#183ptD.0
  # DEBUG D#94ptD.0 => &D#183ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#183ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#183ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#183ptD.0->D.34311
  # DEBUG thisD.41645 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_48>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 208B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _7
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41648 => D#95ptD.0
  # DEBUG __pD.41647 => _7
  # DEBUG __nD.41646 => D#88ptD.0
  if (_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41652 => _7
  # DEBUG __aD.41650 => D#84ptD.0
  # DEBUG __nD.41651 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41655 => _7
  # DEBUG thisD.41653 => D#80ptD.0
  # DEBUG D.41654 => D#81ptD.0
  # .MEM_49 = VDEF <.MEM_48>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_48(6), .MEM_49(7)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41656 => D#87ptD.0
  # DEBUG thisD.41657 => D#87ptD.0
  # DEBUG thisD.41658 => D#87ptD.0
  # .MEM_54 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  # DEBUG D#182ptD.0 => &this_2(D)->_countsD.36921
  # DEBUG thisD.41659 => D#182ptD.0
  # DEBUG D#94ptD.0 => &D#182ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#182ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#182ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#182ptD.0->D.34311
  # DEBUG thisD.41660 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_54>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 184B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _8
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41663 => D#95ptD.0
  # DEBUG __pD.41662 => _8
  # DEBUG __nD.41661 => D#88ptD.0
  if (_8 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41667 => _8
  # DEBUG __aD.41665 => D#84ptD.0
  # DEBUG __nD.41666 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41670 => _8
  # DEBUG thisD.41668 => D#80ptD.0
  # DEBUG D.41669 => D#81ptD.0
  # .MEM_55 = VDEF <.MEM_54>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_54(8), .MEM_55(9)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41671 => D#87ptD.0
  # DEBUG thisD.41672 => D#87ptD.0
  # DEBUG thisD.41673 => D#87ptD.0
  # .MEM_60 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D) + 184] ={v} {CLOBBER};
  # DEBUG D#181ptD.0 => &this_2(D)->D.36957
  # DEBUG thisD.41674 => D#181ptD.0
  # .MEM_61 = VDEF <.MEM_60>
  MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#234ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)]._requestD.35166
  # DEBUG thisD.41706 => D#234ptD.0
  # DEBUG D#179ptD.0 => &D#234ptD.0->D.35164
  # DEBUG thisD.40627 => D#179ptD.0
  # VUSE <.MEM_61>
  # PT = nonlocal escaped 
  _13 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_61>
  # PT = nonlocal escaped 
  __first_14 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.41709 => __first_14
  # DEBUG __lastD.41708 => _13
  # DEBUG __firstD.41714 => __first_14
  if (_13 == __first_14)
    goto <bb 17>;
  else
    goto <bb 11>;
;;    succ:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_12 = PHI <__first_14(11), __first_17(15)>
  # .MEM_121 = PHI <.MEM_61(11), .MEM_67(15)>
  # DEBUG __firstD.41714 => __first_12
  # DEBUG __rD.40517 => __first_12
  # DEBUG __pointerD.41715 => NULL
  # DEBUG thisD.41716 => NULL
  # DEBUG thisD.40482 => D#174ptD.0
  # DEBUG D#154ptD.0 => D#176ptD.0
  # DEBUG D#155ptD.0 => D#177ptD.0
  # DEBUG __firstD.40481 => D#154ptD.0
  # DEBUG __lastD.40480 => D#155ptD.0
  # DEBUG D.40479 => D#156ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#150ptD.0 => D#152ptD.0
  # DEBUG D#151ptD.0 => D#153ptD.0
  # DEBUG __firstD.40393 => D#150ptD.0
  # DEBUG __lastD.40392 => D#151ptD.0
  # DEBUG D#149ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D.40382 => D#146ptD.0
  # DEBUG D.40381 => D#147ptD.0
  # DEBUG thisD.41717 => D#175ptD.0
  # DEBUG D#173ptD.0 => D#175ptD.0->_M_implD.37299._M_end_of_storageD.37303
  # DEBUG D#172ptD.0 => (long intD.12) D#173ptD.0
  # VUSE <.MEM_121>
  # PT = nonlocal escaped 
  _16 = MEM[(struct _Vector_baseD.37066 *)__first_12]._M_implD.37299._M_startD.37301;
  # DEBUG D#171ptD.0 => (long intD.12) _16
  # DEBUG D#170ptD.0 => D#172ptD.0 - D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0 /[ex] 16
  # DEBUG D#166ptD.0 => D#175ptD.0
  # DEBUG D#167ptD.0 => (long unsigned intD.14) D#169ptD.0
  # DEBUG __pD.41720 => _16
  # DEBUG thisD.41718 => D#166ptD.0
  # DEBUG __nD.41719 => D#167ptD.0
  # DEBUG D#165ptD.0 => D#167ptD.0
  # DEBUG D#164ptD.0 => D#166ptD.0
  if (_16 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#163ptD.0 => &D#164ptD.0->_M_implD.37299
  # DEBUG D#161ptD.0 => D#163ptD.0
  # DEBUG D#162ptD.0 => D#165ptD.0
  # DEBUG __pD.41724 => _16
  # DEBUG __aD.41722 => D#161ptD.0
  # DEBUG __nD.41723 => D#162ptD.0
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG __pD.41727 => _16
  # DEBUG thisD.41725 => D#157ptD.0
  # DEBUG D.41726 => D#158ptD.0
  # .MEM_62 = VDEF <.MEM_121>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_121(12), .MEM_62(13)>
  # DEBUG D#168ptD.0 => &D#175ptD.0->_M_implD.37299
  # DEBUG thisD.41728 => D#168ptD.0
  # DEBUG thisD.41729 => D#168ptD.0
  # DEBUG thisD.41730 => D#168ptD.0
  # .MEM_67 = VDEF <.MEM_29>
  MEM[(struct  &)__first_12] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_17 = __first_12 + 24;
  # DEBUG __firstD.41714 => __first_17
  # DEBUG __firstD.41714 => __first_17
  if (_13 == __first_17)
    goto <bb 16>;
  else
    goto <bb 15>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_67>
  pretmp_64 = MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_120 = PHI <.MEM_67(16), .MEM_61(10)>
  # PT = nonlocal escaped 
  # prephitmp_65 = PHI <pretmp_64(16), __first_14(10)>
  # DEBUG D#180ptD.0 => &D#234ptD.0->D.35164
  # DEBUG thisD.41731 => D#180ptD.0
  # DEBUG D#116ptD.0 => D#180ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#115ptD.0 => (long intD.12) D#116ptD.0
  # DEBUG D#235ptD.0 => MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657
  # DEBUG D#114ptD.0 => (long intD.12) D#235ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0 - D#114ptD.0
  # DEBUG D#112ptD.0 => D#113ptD.0 /[ex] 24
  # DEBUG D#109ptD.0 => D#180ptD.0
  # DEBUG D#110ptD.0 => (long unsigned intD.14) D#112ptD.0
  # DEBUG __pD.41734 => D#235ptD.0
  # DEBUG thisD.41732 => D#109ptD.0
  # DEBUG __nD.41733 => D#110ptD.0
  # DEBUG D#108ptD.0 => D#110ptD.0
  # DEBUG D#107ptD.0 => D#109ptD.0
  if (prephitmp_65 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#106ptD.0 => &D#107ptD.0->_M_implD.34655
  # DEBUG D#104ptD.0 => D#106ptD.0
  # DEBUG D#105ptD.0 => D#108ptD.0
  # DEBUG __pD.41738 => D#235ptD.0
  # DEBUG __aD.41736 => D#104ptD.0
  # DEBUG __nD.41737 => D#105ptD.0
  # DEBUG D#103ptD.0 => D#105ptD.0
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG __pD.41741 => D#235ptD.0
  # DEBUG thisD.41739 => D#100ptD.0
  # DEBUG D.41740 => D#101ptD.0
  # .MEM_68 = VDEF <.MEM_120>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_65);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_120(17), .MEM_68(18)>
  # DEBUG D#111ptD.0 => &D#180ptD.0->_M_implD.34655
  # DEBUG thisD.41742 => D#111ptD.0
  # DEBUG thisD.41743 => D#111ptD.0
  # DEBUG thisD.41744 => D#111ptD.0
  # .MEM_73 = VDEF <.MEM_30>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#233ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235
  # DEBUG thisD.41675 => D#233ptD.0
  # .MEM_74 = VDEF <.MEM_73>
  MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#99ptD.0 => &D#233ptD.0->_outmatchD.34314
  # DEBUG thisD.41676 => D#99ptD.0
  # DEBUG D#94ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.41677 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_74>
  # PT = nonlocal escaped 
  _3 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _3
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41680 => D#95ptD.0
  # DEBUG __pD.41679 => _3
  # DEBUG __nD.41678 => D#88ptD.0
  if (_3 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41684 => _3
  # DEBUG __aD.41682 => D#84ptD.0
  # DEBUG __nD.41683 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41687 => _3
  # DEBUG thisD.41685 => D#80ptD.0
  # DEBUG D.41686 => D#81ptD.0
  # .MEM_75 = VDEF <.MEM_74>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_3);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_31 = PHI <.MEM_74(19), .MEM_75(20)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41688 => D#87ptD.0
  # DEBUG thisD.41689 => D#87ptD.0
  # DEBUG thisD.41690 => D#87ptD.0
  # .MEM_80 = VDEF <.MEM_31>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#98ptD.0 => &D#233ptD.0->_inmatchD.34313
  # DEBUG thisD.41691 => D#98ptD.0
  # DEBUG D#94ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.41692 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_80>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _11
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41695 => D#95ptD.0
  # DEBUG __pD.41694 => _11
  # DEBUG __nD.41693 => D#88ptD.0
  if (_11 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41699 => _11
  # DEBUG __aD.41697 => D#84ptD.0
  # DEBUG __nD.41698 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41702 => _11
  # DEBUG thisD.41700 => D#80ptD.0
  # DEBUG D.41701 => D#81ptD.0
  # .MEM_81 = VDEF <.MEM_80>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_11);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_32 = PHI <.MEM_80(21), .MEM_81(22)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41703 => D#87ptD.0
  # DEBUG thisD.41704 => D#87ptD.0
  # DEBUG thisD.41705 => D#87ptD.0
  # .MEM_86 = VDEF <.MEM_32>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#232ptD.0 => &MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407
  # DEBUG thisD.41745 => D#232ptD.0
  # .MEM_87 = VDEF <.MEM_86>
  MEM[(struct ModuleD.28688 *)this_2(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#79ptD.0 => &D#232ptD.0->_childrenD.29438
  # DEBUG thisD.41746 => D#79ptD.0
  # DEBUG D#73ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.39805 => D#73ptD.0
  # DEBUG D#76ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#75ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#31ptD.0 => D#75ptD.0
  # DEBUG D#32ptD.0 => D#76ptD.0
  # DEBUG __firstD.39804 => D#31ptD.0
  # DEBUG __lastD.39803 => D#32ptD.0
  # DEBUG D.39802 => D#33ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __firstD.39575 => D#27ptD.0
  # DEBUG __lastD.39574 => D#28ptD.0
  # DEBUG D#26ptD.0 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D.39564 => D#23ptD.0
  # DEBUG D.39563 => D#24ptD.0
  # DEBUG D#74ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.41747 => D#74ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#71ptD.0 => (long intD.12) D#72ptD.0
  # VUSE <.MEM_87>
  # PT = nonlocal escaped 
  _19 = MEM[(struct _Vector_baseD.28694 *)this_2(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#70ptD.0 => (long intD.12) _19
  # DEBUG D#69ptD.0 => D#71ptD.0 - D#70ptD.0
  # DEBUG D#68ptD.0 => D#69ptD.0 /[ex] 8
  # DEBUG D#65ptD.0 => D#74ptD.0
  # DEBUG D#66ptD.0 => (long unsigned intD.14) D#68ptD.0
  # DEBUG __pD.41750 => _19
  # DEBUG thisD.41748 => D#65ptD.0
  # DEBUG __nD.41749 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  if (_19 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => &D#63ptD.0->_M_implD.28927
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#64ptD.0
  # DEBUG __pD.41754 => _19
  # DEBUG __aD.41752 => D#60ptD.0
  # DEBUG __nD.41753 => D#61ptD.0
  # DEBUG D#59ptD.0 => D#61ptD.0
  # DEBUG D#58ptD.0 => D#60ptD.0
  # DEBUG D#56ptD.0 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#59ptD.0
  # DEBUG __pD.41757 => _19
  # DEBUG thisD.41755 => D#56ptD.0
  # DEBUG D.41756 => D#57ptD.0
  # .MEM_88 = VDEF <.MEM_87>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_19);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_33 = PHI <.MEM_87(23), .MEM_88(24)>
  # DEBUG D#67ptD.0 => &D#74ptD.0->_M_implD.28927
  # DEBUG thisD.41758 => D#67ptD.0
  # DEBUG thisD.41759 => D#67ptD.0
  # DEBUG thisD.41760 => D#67ptD.0
  # .MEM_93 = VDEF <.MEM_33>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#78ptD.0 => &D#232ptD.0->_fullnameD.28691
  # DEBUG thisD.41761 => D#78ptD.0
  # DEBUG thisD.41762 => D#78ptD.0
  # DEBUG thisD.41771 => D#78ptD.0
  # VUSE <.MEM_93>
  # PT = nonlocal escaped 
  _20 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.41772 => D#78ptD.0
  # PT = nonlocal 
  _21 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_20 != _21)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#78ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.41764 => D#78ptD.0
  # DEBUG __sizeD.41763 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#78ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.41767 => _20
  # DEBUG __aD.41765 => D#49ptD.0
  # DEBUG __nD.41766 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.41770 => _20
  # DEBUG thisD.41768 => D#45ptD.0
  # DEBUG D.41769 => D#46ptD.0
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_20);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_93(25), .MEM_94(26)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41773 => D#55ptD.0
  # DEBUG thisD.41774 => D#55ptD.0
  # DEBUG thisD.41775 => D#55ptD.0
  # .MEM_98 = VDEF <.MEM_34>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#77ptD.0 => &D#232ptD.0->_nameD.28690
  # DEBUG thisD.41776 => D#77ptD.0
  # DEBUG thisD.41777 => D#77ptD.0
  # DEBUG thisD.41786 => D#77ptD.0
  # VUSE <.MEM_98>
  # PT = nonlocal escaped 
  _22 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.41787 => D#77ptD.0
  # PT = nonlocal 
  _23 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_22 != _23)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#77ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.41779 => D#77ptD.0
  # DEBUG __sizeD.41778 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#77ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.41782 => _22
  # DEBUG __aD.41780 => D#49ptD.0
  # DEBUG __nD.41781 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.41785 => _22
  # DEBUG thisD.41783 => D#45ptD.0
  # DEBUG D.41784 => D#46ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 28, next block 1, flags: (NEW, REACHABLE)
;;    pred:       27 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_98(27), .MEM_99(28)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41788 => D#55ptD.0
  # DEBUG thisD.41789 => D#55ptD.0
  # DEBUG thisD.41790 => D#55ptD.0
  # .MEM_107 = VDEF <.MEM_35>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_107>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.36957.D.35235.D.34407._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 256
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 256B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)__first_12]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_12]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_12]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_12]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_14 + 24, + , 24](no_overflow) != _13
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _13 - (unsigned long) (__first_14 + 24) & 7) == 0
    # of iterations (((unsigned long) _13 - (unsigned long) (__first_14 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)__first_12]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_12]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_12]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_12]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_14 + 24, + , 24](no_overflow) != _13
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _13 - (unsigned long) (__first_14 + 24) & 7) == 0
    # of iterations (((unsigned long) _13 - (unsigned long) (__first_14 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 160B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:31, LOOPS:1, CONDITIONS:13, STMTS:557)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG this => this_2(D)
    # .MEM_36 = VDEF <.MEM_1(D)>
    this_2(D)->D.36957.D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV3LOA + 16B];
    # DEBUG D#185 => &this_2(D)->_gptr
    # DEBUG this => D#185
    # DEBUG D#94 => &D#185->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#185->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#185->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#185->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_36>
    _5 = MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _5
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _5
    # DEBUG __n => D#88
    if (_5 != 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _5
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _5
    # DEBUG this => D#80
    # DEBUG D.41624 => D#81
    # .MEM_37 = VDEF <.MEM_36>
    operator delete (_5);

  }
  bb_4 (preds = {bb_2 bb_3 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # .MEM_24 = PHI <.MEM_36(2), .MEM_37(3)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_42 = VDEF <.MEM_24>
    MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
    # DEBUG D#184 => &this_2(D)->_rptr
    # DEBUG this => D#184
    # DEBUG D#94 => &D#184->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#184->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#184->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#184->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_42>
    _6 = MEM[(struct _Vector_base *)this_2(D) + 232B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _6
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _6
    # DEBUG __n => D#88
    if (_6 != 0B)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 })
  {
    <bb 5>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _6
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _6
    # DEBUG this => D#80
    # DEBUG D.41639 => D#81
    # .MEM_43 = VDEF <.MEM_42>
    operator delete (_6);

  }
  bb_6 (preds = {bb_4 bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # .MEM_25 = PHI <.MEM_42(4), .MEM_43(5)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_48 = VDEF <.MEM_25>
    MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
    # DEBUG D#183 => &this_2(D)->_req
    # DEBUG this => D#183
    # DEBUG D#94 => &D#183->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#183->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#183->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#183->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_48>
    _7 = MEM[(struct _Vector_base *)this_2(D) + 208B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _7
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _7
    # DEBUG __n => D#88
    if (_7 != 0B)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _7
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _7
    # DEBUG this => D#80
    # DEBUG D.41654 => D#81
    # .MEM_49 = VDEF <.MEM_48>
    operator delete (_7);

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_26 = PHI <.MEM_48(6), .MEM_49(7)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_54 = VDEF <.MEM_26>
    MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
    # DEBUG D#182 => &this_2(D)->_counts
    # DEBUG this => D#182
    # DEBUG D#94 => &D#182->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#182->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#182->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#182->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_54>
    _8 = MEM[(struct _Vector_base *)this_2(D) + 184B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _8
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _8
    # DEBUG __n => D#88
    if (_8 != 0B)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _8
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _8
    # DEBUG this => D#80
    # DEBUG D.41669 => D#81
    # .MEM_55 = VDEF <.MEM_54>
    operator delete (_8);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_17 bb_11 })
  {
    <bb 10>:
    # .MEM_27 = PHI <.MEM_54(8), .MEM_55(9)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_60 = VDEF <.MEM_27>
    MEM[(struct  &)this_2(D) + 184] ={v} {CLOBBER};
    # DEBUG D#181 => &this_2(D)->D.36957
    # DEBUG this => D#181
    # .MEM_61 = VDEF <.MEM_60>
    MEM[(struct DenseAllocator *)this_2(D)].D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV14DenseAllocator + 16B];
    # DEBUG D#234 => &MEM[(struct DenseAllocator *)this_2(D)]._request
    # DEBUG this => D#234
    # DEBUG D#179 => &D#234->D.35164
    # DEBUG this => D#179
    # VUSE <.MEM_61>
    _13 = MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_finish;
    # VUSE <.MEM_61>
    __first_14 = MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_start;
    # DEBUG __first => __first_14
    # DEBUG __last => _13
    # DEBUG __first => __first_14
    if (_13 == __first_14)
      goto <bb 17>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:

  }
  bb_16 (preds = {bb_14 }, succs = {bb_30 })
  {
    <bb 16>:

  }
  bb_30 (preds = {bb_16 }, succs = {bb_17 })
  {
    <bb 30>:
    # VUSE <.MEM_67>
    pretmp_64 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;

  }
  bb_17 (preds = {bb_30 bb_10 }, succs = {bb_18 bb_19 })
  {
    <bb 17>:
    # .MEM_120 = PHI <.MEM_67(30), .MEM_61(10)>
    # prephitmp_65 = PHI <pretmp_64(30), __first_14(10)>
    # DEBUG D#180 => &D#234->D.35164
    # DEBUG this => D#180
    # DEBUG D#116 => D#180->_M_impl._M_end_of_storage
    # DEBUG D#115 => (long int) D#116
    # DEBUG D#235 => MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start
    # DEBUG D#114 => (long int) D#235
    # DEBUG D#113 => D#115 - D#114
    # DEBUG D#112 => D#113 /[ex] 24
    # DEBUG D#109 => D#180
    # DEBUG D#110 => (long unsigned int) D#112
    # DEBUG __p => D#235
    # DEBUG this => D#109
    # DEBUG __n => D#110
    # DEBUG D#108 => D#110
    # DEBUG D#107 => D#109
    if (prephitmp_65 != 0B)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#106 => &D#107->_M_impl
    # DEBUG D#104 => D#106
    # DEBUG D#105 => D#108
    # DEBUG __p => D#235
    # DEBUG __a => D#104
    # DEBUG __n => D#105
    # DEBUG D#103 => D#105
    # DEBUG D#102 => D#104
    # DEBUG D#100 => D#102
    # DEBUG D#101 => D#103
    # DEBUG __p => D#235
    # DEBUG this => D#100
    # DEBUG D.41740 => D#101
    # .MEM_68 = VDEF <.MEM_120>
    operator delete (prephitmp_65);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {bb_20 bb_21 })
  {
    <bb 19>:
    # .MEM_30 = PHI <.MEM_120(17), .MEM_68(18)>
    # DEBUG D#111 => &D#180->_M_impl
    # DEBUG this => D#111
    # DEBUG this => D#111
    # DEBUG this => D#111
    # .MEM_73 = VDEF <.MEM_30>
    MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
    # DEBUG D#233 => &MEM[(struct DenseAllocator *)this_2(D)].D.35235
    # DEBUG this => D#233
    # .MEM_74 = VDEF <.MEM_73>
    MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
    # DEBUG D#99 => &D#233->_outmatch
    # DEBUG this => D#99
    # DEBUG D#94 => &D#99->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#99->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#99->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#99->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_74>
    _3 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _3
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _3
    # DEBUG __n => D#88
    if (_3 != 0B)
      goto <bb 20>;
    else
      goto <bb 21>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_21 })
  {
    <bb 20>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _3
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _3
    # DEBUG this => D#80
    # DEBUG D.41686 => D#81
    # .MEM_75 = VDEF <.MEM_74>
    operator delete (_3);

  }
  bb_21 (preds = {bb_19 bb_20 }, succs = {bb_22 bb_23 })
  {
    <bb 21>:
    # .MEM_31 = PHI <.MEM_74(19), .MEM_75(20)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_80 = VDEF <.MEM_31>
    MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
    # DEBUG D#98 => &D#233->_inmatch
    # DEBUG this => D#98
    # DEBUG D#94 => &D#98->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#98->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#98->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#98->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_80>
    _11 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _11
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _11
    # DEBUG __n => D#88
    if (_11 != 0B)
      goto <bb 22>;
    else
      goto <bb 23>;

  }
  bb_22 (preds = {bb_21 }, succs = {bb_23 })
  {
    <bb 22>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _11
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _11
    # DEBUG this => D#80
    # DEBUG D.41701 => D#81
    # .MEM_81 = VDEF <.MEM_80>
    operator delete (_11);

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # .MEM_32 = PHI <.MEM_80(21), .MEM_81(22)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_86 = VDEF <.MEM_32>
    MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
    # DEBUG D#232 => &MEM[(struct Allocator *)this_2(D)].D.34407
    # DEBUG this => D#232
    # .MEM_87 = VDEF <.MEM_86>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#79 => &D#232->_children
    # DEBUG this => D#79
    # DEBUG D#73 => &D#79->D.29436
    # DEBUG this => D#73
    # DEBUG D#76 => D#79->D.29436._M_impl._M_finish
    # DEBUG D#75 => D#79->D.29436._M_impl._M_start
    # DEBUG D#31 => D#75
    # DEBUG D#32 => D#76
    # DEBUG __first => D#31
    # DEBUG __last => D#32
    # DEBUG D.39802 => D#33
    # DEBUG D#30 => D#32
    # DEBUG D#29 => D#31
    # DEBUG D#27 => D#29
    # DEBUG D#28 => D#30
    # DEBUG __first => D#27
    # DEBUG __last => D#28
    # DEBUG D#26 => D#28
    # DEBUG D#25 => D#27
    # DEBUG D#23 => D#25
    # DEBUG D#24 => D#26
    # DEBUG D.39564 => D#23
    # DEBUG D.39563 => D#24
    # DEBUG D#74 => &D#79->D.29436
    # DEBUG this => D#74
    # DEBUG D#72 => D#74->_M_impl._M_end_of_storage
    # DEBUG D#71 => (long int) D#72
    # VUSE <.MEM_87>
    _19 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#70 => (long int) _19
    # DEBUG D#69 => D#71 - D#70
    # DEBUG D#68 => D#69 /[ex] 8
    # DEBUG D#65 => D#74
    # DEBUG D#66 => (long unsigned int) D#68
    # DEBUG __p => _19
    # DEBUG this => D#65
    # DEBUG __n => D#66
    # DEBUG D#64 => D#66
    # DEBUG D#63 => D#65
    if (_19 != 0B)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    # DEBUG D#62 => &D#63->_M_impl
    # DEBUG D#60 => D#62
    # DEBUG D#61 => D#64
    # DEBUG __p => _19
    # DEBUG __a => D#60
    # DEBUG __n => D#61
    # DEBUG D#59 => D#61
    # DEBUG D#58 => D#60
    # DEBUG D#56 => D#58
    # DEBUG D#57 => D#59
    # DEBUG __p => _19
    # DEBUG this => D#56
    # DEBUG D.41756 => D#57
    # .MEM_88 = VDEF <.MEM_87>
    operator delete (_19);

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {bb_26 bb_27 })
  {
    <bb 25>:
    # .MEM_33 = PHI <.MEM_87(23), .MEM_88(24)>
    # DEBUG D#67 => &D#74->_M_impl
    # DEBUG this => D#67
    # DEBUG this => D#67
    # DEBUG this => D#67
    # .MEM_93 = VDEF <.MEM_33>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#78 => &D#232->_fullname
    # DEBUG this => D#78
    # DEBUG this => D#78
    # DEBUG this => D#78
    # VUSE <.MEM_93>
    _20 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#1 => D#78
    # DEBUG this => D#1
    # DEBUG this => D#78
    _21 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
    if (_20 != _21)
      goto <bb 26>;
    else
      goto <bb 27>;

  }
  bb_26 (preds = {bb_25 }, succs = {bb_27 })
  {
    <bb 26>:
    # DEBUG D#54 => MEM[(struct basic_string *)D#78].D.11539._M_allocated_capacity
    # DEBUG D#53 => D#54
    # DEBUG this => D#78
    # DEBUG __size => D#53
    # DEBUG D#52 => D#53
    # DEBUG D#1 => D#78
    # DEBUG this => D#1
    # DEBUG this => D#78
    # DEBUG D#51 => &MEM[(struct basic_string *)D#78]._M_dataplus
    # DEBUG D#49 => D#51
    # DEBUG D#50 => D#52 + 1
    # DEBUG __p => _20
    # DEBUG __a => D#49
    # DEBUG __n => D#50
    # DEBUG D#48 => D#50
    # DEBUG D#47 => D#49
    # DEBUG D#45 => D#47
    # DEBUG D#46 => D#48
    # DEBUG __p => _20
    # DEBUG this => D#45
    # DEBUG D.41769 => D#46
    # .MEM_94 = VDEF <.MEM_93>
    operator delete (_20);

  }
  bb_27 (preds = {bb_25 bb_26 }, succs = {bb_28 bb_29 })
  {
    <bb 27>:
    # .MEM_34 = PHI <.MEM_93(25), .MEM_94(26)>
    # DEBUG D#55 => &MEM[(struct basic_string *)D#78]._M_dataplus
    # DEBUG this => D#55
    # DEBUG this => D#55
    # DEBUG this => D#55
    # .MEM_98 = VDEF <.MEM_34>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#77 => &D#232->_name
    # DEBUG this => D#77
    # DEBUG this => D#77
    # DEBUG this => D#77
    # VUSE <.MEM_98>
    _22 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#1 => D#77
    # DEBUG this => D#1
    # DEBUG this => D#77
    _23 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
    if (_22 != _23)
      goto <bb 28>;
    else
      goto <bb 29>;

  }
  bb_28 (preds = {bb_27 }, succs = {bb_29 })
  {
    <bb 28>:
    # DEBUG D#54 => MEM[(struct basic_string *)D#77].D.11539._M_allocated_capacity
    # DEBUG D#53 => D#54
    # DEBUG this => D#77
    # DEBUG __size => D#53
    # DEBUG D#52 => D#53
    # DEBUG D#1 => D#77
    # DEBUG this => D#1
    # DEBUG this => D#77
    # DEBUG D#51 => &MEM[(struct basic_string *)D#77]._M_dataplus
    # DEBUG D#49 => D#51
    # DEBUG D#50 => D#52 + 1
    # DEBUG __p => _22
    # DEBUG __a => D#49
    # DEBUG __n => D#50
    # DEBUG D#48 => D#50
    # DEBUG D#47 => D#49
    # DEBUG D#45 => D#47
    # DEBUG D#46 => D#48
    # DEBUG __p => _22
    # DEBUG this => D#45
    # DEBUG D.41784 => D#46
    # .MEM_99 = VDEF <.MEM_98>
    operator delete (_22);

  }
  bb_29 (preds = {bb_27 bb_28 }, succs = {bb_1 })
  {
    <bb 29>:
    # .MEM_35 = PHI <.MEM_98(27), .MEM_99(28)>
    # DEBUG D#55 => &MEM[(struct basic_string *)D#77]._M_dataplus
    # DEBUG this => D#55
    # DEBUG this => D#55
    # DEBUG this => D#55
    # .MEM_107 = VDEF <.MEM_35>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # .MEM_4 = VDEF <.MEM_107>
    operator delete (this_2(D));
    # VUSE <.MEM_4>
    return;

  }
  loop_1 (header = 12, latch = 15, niter = )
  {
    bb_12 (preds = {bb_11 bb_15 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # __first_12 = PHI <__first_14(11), __first_17(15)>
      # .MEM_121 = PHI <.MEM_61(11), .MEM_67(15)>
      # DEBUG __first => __first_12
      # DEBUG __r => __first_12
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#174
      # DEBUG D#154 => D#176
      # DEBUG D#155 => D#177
      # DEBUG __first => D#154
      # DEBUG __last => D#155
      # DEBUG D.40479 => D#156
      # DEBUG D#153 => D#155
      # DEBUG D#152 => D#154
      # DEBUG D#150 => D#152
      # DEBUG D#151 => D#153
      # DEBUG __first => D#150
      # DEBUG __last => D#151
      # DEBUG D#149 => D#151
      # DEBUG D#148 => D#150
      # DEBUG D#146 => D#148
      # DEBUG D#147 => D#149
      # DEBUG D.40382 => D#146
      # DEBUG D.40381 => D#147
      # DEBUG this => D#175
      # DEBUG D#173 => D#175->_M_impl._M_end_of_storage
      # DEBUG D#172 => (long int) D#173
      # VUSE <.MEM_121>
      _16 = MEM[(struct _Vector_base *)__first_12]._M_impl._M_start;
      # DEBUG D#171 => (long int) _16
      # DEBUG D#170 => D#172 - D#171
      # DEBUG D#169 => D#170 /[ex] 16
      # DEBUG D#166 => D#175
      # DEBUG D#167 => (long unsigned int) D#169
      # DEBUG __p => _16
      # DEBUG this => D#166
      # DEBUG __n => D#167
      # DEBUG D#165 => D#167
      # DEBUG D#164 => D#166
      if (_16 != 0B)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
    bb_13 (preds = {bb_12 }, succs = {bb_14 })
    {
      <bb 13>:
      # DEBUG D#163 => &D#164->_M_impl
      # DEBUG D#161 => D#163
      # DEBUG D#162 => D#165
      # DEBUG __p => _16
      # DEBUG __a => D#161
      # DEBUG __n => D#162
      # DEBUG D#160 => D#162
      # DEBUG D#159 => D#161
      # DEBUG D#157 => D#159
      # DEBUG D#158 => D#160
      # DEBUG __p => _16
      # DEBUG this => D#157
      # DEBUG D.41726 => D#158
      # .MEM_62 = VDEF <.MEM_121>
      operator delete (_16);

    }
    bb_14 (preds = {bb_12 bb_13 }, succs = {bb_16 bb_15 })
    {
      <bb 14>:
      # .MEM_29 = PHI <.MEM_121(12), .MEM_62(13)>
      # DEBUG D#168 => &D#175->_M_impl
      # DEBUG this => D#168
      # DEBUG this => D#168
      # DEBUG this => D#168
      # .MEM_67 = VDEF <.MEM_29>
      MEM[(struct  &)__first_12] ={v} {CLOBBER};
      __first_17 = __first_12 + 24;
      # DEBUG __first => __first_17
      # DEBUG __first => __first_17
      if (_13 == __first_17)
        goto <bb 16>;
      else
        goto <bb 15>;

    }
    bb_15 (preds = {bb_14 }, succs = {bb_12 })
    {
      <bb 15>:
      goto <bb 12>;

    }
  }
}

Pass statistics:
----------------

virtual LOA::~LOA() (struct LOAD.36919 * const thisD.36937)
{
  struct vectorD.34419 * __firstD.41709;
  intD.9 * _3;
  intD.9 * _5;
  intD.9 * _6;
  intD.9 * _7;
  intD.9 * _8;
  intD.9 * _11;
  struct vectorD.34419 * _13;
  struct sRequestD.34315 * _16;
  struct ModuleD.28688 * * _19;
  charD.10 * const _20;
  const charD.10 * _21;
  charD.10 * const _22;
  const charD.10 * _23;
  struct vectorD.34419 * pretmp_64;
  struct vectorD.34419 * prephitmp_65;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.41613 => this_2(D)
  # .MEM_36 = VDEF <.MEM_1(D)>
  this_2(D)->D.36957.D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV3LOAD.36963 + 16B];
  # DEBUG D#185ptD.0 => &this_2(D)->_gptrD.36924
  # DEBUG thisD.41614 => D#185ptD.0
  # DEBUG D#94ptD.0 => &D#185ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#185ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#185ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#185ptD.0->D.34311
  # DEBUG thisD.41615 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_36>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 256B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _5
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41618 => D#95ptD.0
  # DEBUG __pD.41617 => _5
  # DEBUG __nD.41616 => D#88ptD.0
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41622 => _5
  # DEBUG __aD.41620 => D#84ptD.0
  # DEBUG __nD.41621 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41625 => _5
  # DEBUG thisD.41623 => D#80ptD.0
  # DEBUG D.41624 => D#81ptD.0
  # .MEM_37 = VDEF <.MEM_36>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_36(2), .MEM_37(3)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41626 => D#87ptD.0
  # DEBUG thisD.41627 => D#87ptD.0
  # DEBUG thisD.41628 => D#87ptD.0
  # .MEM_42 = VDEF <.MEM_24>
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  # DEBUG D#184ptD.0 => &this_2(D)->_rptrD.36923
  # DEBUG thisD.41629 => D#184ptD.0
  # DEBUG D#94ptD.0 => &D#184ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#184ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#184ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#184ptD.0->D.34311
  # DEBUG thisD.41630 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_42>
  # PT = nonlocal escaped 
  _6 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 232B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _6
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41633 => D#95ptD.0
  # DEBUG __pD.41632 => _6
  # DEBUG __nD.41631 => D#88ptD.0
  if (_6 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41637 => _6
  # DEBUG __aD.41635 => D#84ptD.0
  # DEBUG __nD.41636 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41640 => _6
  # DEBUG thisD.41638 => D#80ptD.0
  # DEBUG D.41639 => D#81ptD.0
  # .MEM_43 = VDEF <.MEM_42>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_6);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_42(4), .MEM_43(5)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41641 => D#87ptD.0
  # DEBUG thisD.41642 => D#87ptD.0
  # DEBUG thisD.41643 => D#87ptD.0
  # .MEM_48 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
  # DEBUG D#183ptD.0 => &this_2(D)->_reqD.36922
  # DEBUG thisD.41644 => D#183ptD.0
  # DEBUG D#94ptD.0 => &D#183ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#183ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#183ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#183ptD.0->D.34311
  # DEBUG thisD.41645 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_48>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 208B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _7
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41648 => D#95ptD.0
  # DEBUG __pD.41647 => _7
  # DEBUG __nD.41646 => D#88ptD.0
  if (_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41652 => _7
  # DEBUG __aD.41650 => D#84ptD.0
  # DEBUG __nD.41651 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41655 => _7
  # DEBUG thisD.41653 => D#80ptD.0
  # DEBUG D.41654 => D#81ptD.0
  # .MEM_49 = VDEF <.MEM_48>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_48(6), .MEM_49(7)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41656 => D#87ptD.0
  # DEBUG thisD.41657 => D#87ptD.0
  # DEBUG thisD.41658 => D#87ptD.0
  # .MEM_54 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  # DEBUG D#182ptD.0 => &this_2(D)->_countsD.36921
  # DEBUG thisD.41659 => D#182ptD.0
  # DEBUG D#94ptD.0 => &D#182ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#182ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#182ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#182ptD.0->D.34311
  # DEBUG thisD.41660 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_54>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 184B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _8
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41663 => D#95ptD.0
  # DEBUG __pD.41662 => _8
  # DEBUG __nD.41661 => D#88ptD.0
  if (_8 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41667 => _8
  # DEBUG __aD.41665 => D#84ptD.0
  # DEBUG __nD.41666 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41670 => _8
  # DEBUG thisD.41668 => D#80ptD.0
  # DEBUG D.41669 => D#81ptD.0
  # .MEM_55 = VDEF <.MEM_54>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_54(8), .MEM_55(9)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41671 => D#87ptD.0
  # DEBUG thisD.41672 => D#87ptD.0
  # DEBUG thisD.41673 => D#87ptD.0
  # .MEM_60 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D) + 184] ={v} {CLOBBER};
  # DEBUG D#181ptD.0 => &this_2(D)->D.36957
  # DEBUG thisD.41674 => D#181ptD.0
  # .MEM_61 = VDEF <.MEM_60>
  MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#234ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)]._requestD.35166
  # DEBUG thisD.41706 => D#234ptD.0
  # DEBUG D#179ptD.0 => &D#234ptD.0->D.35164
  # DEBUG thisD.40627 => D#179ptD.0
  # VUSE <.MEM_61>
  # PT = nonlocal escaped 
  _13 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_61>
  # PT = nonlocal escaped 
  __first_14 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.41709 => __first_14
  # DEBUG __lastD.41708 => _13
  # DEBUG __firstD.41714 => __first_14
  if (_13 == __first_14)
    goto <bb 17>;
  else
    goto <bb 11>;
;;    succ:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_12 = PHI <__first_14(11), __first_17(15)>
  # .MEM_121 = PHI <.MEM_61(11), .MEM_67(15)>
  # DEBUG __firstD.41714 => __first_12
  # DEBUG __rD.40517 => __first_12
  # DEBUG __pointerD.41715 => NULL
  # DEBUG thisD.41716 => NULL
  # DEBUG thisD.40482 => D#174ptD.0
  # DEBUG D#154ptD.0 => D#176ptD.0
  # DEBUG D#155ptD.0 => D#177ptD.0
  # DEBUG __firstD.40481 => D#154ptD.0
  # DEBUG __lastD.40480 => D#155ptD.0
  # DEBUG D.40479 => D#156ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#150ptD.0 => D#152ptD.0
  # DEBUG D#151ptD.0 => D#153ptD.0
  # DEBUG __firstD.40393 => D#150ptD.0
  # DEBUG __lastD.40392 => D#151ptD.0
  # DEBUG D#149ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D.40382 => D#146ptD.0
  # DEBUG D.40381 => D#147ptD.0
  # DEBUG thisD.41717 => D#175ptD.0
  # DEBUG D#173ptD.0 => D#175ptD.0->_M_implD.37299._M_end_of_storageD.37303
  # DEBUG D#172ptD.0 => (long intD.12) D#173ptD.0
  # VUSE <.MEM_121>
  # PT = nonlocal escaped 
  _16 = MEM[(struct _Vector_baseD.37066 *)__first_12]._M_implD.37299._M_startD.37301;
  # DEBUG D#171ptD.0 => (long intD.12) _16
  # DEBUG D#170ptD.0 => D#172ptD.0 - D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0 /[ex] 16
  # DEBUG D#166ptD.0 => D#175ptD.0
  # DEBUG D#167ptD.0 => (long unsigned intD.14) D#169ptD.0
  # DEBUG __pD.41720 => _16
  # DEBUG thisD.41718 => D#166ptD.0
  # DEBUG __nD.41719 => D#167ptD.0
  # DEBUG D#165ptD.0 => D#167ptD.0
  # DEBUG D#164ptD.0 => D#166ptD.0
  if (_16 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#163ptD.0 => &D#164ptD.0->_M_implD.37299
  # DEBUG D#161ptD.0 => D#163ptD.0
  # DEBUG D#162ptD.0 => D#165ptD.0
  # DEBUG __pD.41724 => _16
  # DEBUG __aD.41722 => D#161ptD.0
  # DEBUG __nD.41723 => D#162ptD.0
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG __pD.41727 => _16
  # DEBUG thisD.41725 => D#157ptD.0
  # DEBUG D.41726 => D#158ptD.0
  # .MEM_62 = VDEF <.MEM_121>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_121(12), .MEM_62(13)>
  # DEBUG D#168ptD.0 => &D#175ptD.0->_M_implD.37299
  # DEBUG thisD.41728 => D#168ptD.0
  # DEBUG thisD.41729 => D#168ptD.0
  # DEBUG thisD.41730 => D#168ptD.0
  # .MEM_67 = VDEF <.MEM_29>
  MEM[(struct  &)__first_12] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_17 = __first_12 + 24;
  # DEBUG __firstD.41714 => __first_17
  # DEBUG __firstD.41714 => __first_17
  if (_13 == __first_17)
    goto <bb 16>;
  else
    goto <bb 15>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 30, flags: (NEW)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       30 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 16, next block 17, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_67>
  pretmp_64 = MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 30, next block 18, flags: (NEW, REACHABLE)
;;    pred:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_120 = PHI <.MEM_67(30), .MEM_61(10)>
  # PT = nonlocal escaped 
  # prephitmp_65 = PHI <pretmp_64(30), __first_14(10)>
  # DEBUG D#180ptD.0 => &D#234ptD.0->D.35164
  # DEBUG thisD.41731 => D#180ptD.0
  # DEBUG D#116ptD.0 => D#180ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#115ptD.0 => (long intD.12) D#116ptD.0
  # DEBUG D#235ptD.0 => MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657
  # DEBUG D#114ptD.0 => (long intD.12) D#235ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0 - D#114ptD.0
  # DEBUG D#112ptD.0 => D#113ptD.0 /[ex] 24
  # DEBUG D#109ptD.0 => D#180ptD.0
  # DEBUG D#110ptD.0 => (long unsigned intD.14) D#112ptD.0
  # DEBUG __pD.41734 => D#235ptD.0
  # DEBUG thisD.41732 => D#109ptD.0
  # DEBUG __nD.41733 => D#110ptD.0
  # DEBUG D#108ptD.0 => D#110ptD.0
  # DEBUG D#107ptD.0 => D#109ptD.0
  if (prephitmp_65 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#106ptD.0 => &D#107ptD.0->_M_implD.34655
  # DEBUG D#104ptD.0 => D#106ptD.0
  # DEBUG D#105ptD.0 => D#108ptD.0
  # DEBUG __pD.41738 => D#235ptD.0
  # DEBUG __aD.41736 => D#104ptD.0
  # DEBUG __nD.41737 => D#105ptD.0
  # DEBUG D#103ptD.0 => D#105ptD.0
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG __pD.41741 => D#235ptD.0
  # DEBUG thisD.41739 => D#100ptD.0
  # DEBUG D.41740 => D#101ptD.0
  # .MEM_68 = VDEF <.MEM_120>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_65);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_120(17), .MEM_68(18)>
  # DEBUG D#111ptD.0 => &D#180ptD.0->_M_implD.34655
  # DEBUG thisD.41742 => D#111ptD.0
  # DEBUG thisD.41743 => D#111ptD.0
  # DEBUG thisD.41744 => D#111ptD.0
  # .MEM_73 = VDEF <.MEM_30>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#233ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235
  # DEBUG thisD.41675 => D#233ptD.0
  # .MEM_74 = VDEF <.MEM_73>
  MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#99ptD.0 => &D#233ptD.0->_outmatchD.34314
  # DEBUG thisD.41676 => D#99ptD.0
  # DEBUG D#94ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.41677 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_74>
  # PT = nonlocal escaped 
  _3 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _3
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41680 => D#95ptD.0
  # DEBUG __pD.41679 => _3
  # DEBUG __nD.41678 => D#88ptD.0
  if (_3 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41684 => _3
  # DEBUG __aD.41682 => D#84ptD.0
  # DEBUG __nD.41683 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41687 => _3
  # DEBUG thisD.41685 => D#80ptD.0
  # DEBUG D.41686 => D#81ptD.0
  # .MEM_75 = VDEF <.MEM_74>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_3);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_31 = PHI <.MEM_74(19), .MEM_75(20)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41688 => D#87ptD.0
  # DEBUG thisD.41689 => D#87ptD.0
  # DEBUG thisD.41690 => D#87ptD.0
  # .MEM_80 = VDEF <.MEM_31>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#98ptD.0 => &D#233ptD.0->_inmatchD.34313
  # DEBUG thisD.41691 => D#98ptD.0
  # DEBUG D#94ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.41692 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_80>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _11
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41695 => D#95ptD.0
  # DEBUG __pD.41694 => _11
  # DEBUG __nD.41693 => D#88ptD.0
  if (_11 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41699 => _11
  # DEBUG __aD.41697 => D#84ptD.0
  # DEBUG __nD.41698 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41702 => _11
  # DEBUG thisD.41700 => D#80ptD.0
  # DEBUG D.41701 => D#81ptD.0
  # .MEM_81 = VDEF <.MEM_80>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_11);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_32 = PHI <.MEM_80(21), .MEM_81(22)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41703 => D#87ptD.0
  # DEBUG thisD.41704 => D#87ptD.0
  # DEBUG thisD.41705 => D#87ptD.0
  # .MEM_86 = VDEF <.MEM_32>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#232ptD.0 => &MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407
  # DEBUG thisD.41745 => D#232ptD.0
  # .MEM_87 = VDEF <.MEM_86>
  MEM[(struct ModuleD.28688 *)this_2(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#79ptD.0 => &D#232ptD.0->_childrenD.29438
  # DEBUG thisD.41746 => D#79ptD.0
  # DEBUG D#73ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.39805 => D#73ptD.0
  # DEBUG D#76ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#75ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#31ptD.0 => D#75ptD.0
  # DEBUG D#32ptD.0 => D#76ptD.0
  # DEBUG __firstD.39804 => D#31ptD.0
  # DEBUG __lastD.39803 => D#32ptD.0
  # DEBUG D.39802 => D#33ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __firstD.39575 => D#27ptD.0
  # DEBUG __lastD.39574 => D#28ptD.0
  # DEBUG D#26ptD.0 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D.39564 => D#23ptD.0
  # DEBUG D.39563 => D#24ptD.0
  # DEBUG D#74ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.41747 => D#74ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#71ptD.0 => (long intD.12) D#72ptD.0
  # VUSE <.MEM_87>
  # PT = nonlocal escaped 
  _19 = MEM[(struct _Vector_baseD.28694 *)this_2(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#70ptD.0 => (long intD.12) _19
  # DEBUG D#69ptD.0 => D#71ptD.0 - D#70ptD.0
  # DEBUG D#68ptD.0 => D#69ptD.0 /[ex] 8
  # DEBUG D#65ptD.0 => D#74ptD.0
  # DEBUG D#66ptD.0 => (long unsigned intD.14) D#68ptD.0
  # DEBUG __pD.41750 => _19
  # DEBUG thisD.41748 => D#65ptD.0
  # DEBUG __nD.41749 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  if (_19 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => &D#63ptD.0->_M_implD.28927
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#64ptD.0
  # DEBUG __pD.41754 => _19
  # DEBUG __aD.41752 => D#60ptD.0
  # DEBUG __nD.41753 => D#61ptD.0
  # DEBUG D#59ptD.0 => D#61ptD.0
  # DEBUG D#58ptD.0 => D#60ptD.0
  # DEBUG D#56ptD.0 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#59ptD.0
  # DEBUG __pD.41757 => _19
  # DEBUG thisD.41755 => D#56ptD.0
  # DEBUG D.41756 => D#57ptD.0
  # .MEM_88 = VDEF <.MEM_87>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_19);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_33 = PHI <.MEM_87(23), .MEM_88(24)>
  # DEBUG D#67ptD.0 => &D#74ptD.0->_M_implD.28927
  # DEBUG thisD.41758 => D#67ptD.0
  # DEBUG thisD.41759 => D#67ptD.0
  # DEBUG thisD.41760 => D#67ptD.0
  # .MEM_93 = VDEF <.MEM_33>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#78ptD.0 => &D#232ptD.0->_fullnameD.28691
  # DEBUG thisD.41761 => D#78ptD.0
  # DEBUG thisD.41762 => D#78ptD.0
  # DEBUG thisD.41771 => D#78ptD.0
  # VUSE <.MEM_93>
  # PT = nonlocal escaped 
  _20 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.41772 => D#78ptD.0
  # PT = nonlocal 
  _21 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_20 != _21)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#78ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.41764 => D#78ptD.0
  # DEBUG __sizeD.41763 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#78ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.41767 => _20
  # DEBUG __aD.41765 => D#49ptD.0
  # DEBUG __nD.41766 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.41770 => _20
  # DEBUG thisD.41768 => D#45ptD.0
  # DEBUG D.41769 => D#46ptD.0
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_20);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_93(25), .MEM_94(26)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41773 => D#55ptD.0
  # DEBUG thisD.41774 => D#55ptD.0
  # DEBUG thisD.41775 => D#55ptD.0
  # .MEM_98 = VDEF <.MEM_34>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#77ptD.0 => &D#232ptD.0->_nameD.28690
  # DEBUG thisD.41776 => D#77ptD.0
  # DEBUG thisD.41777 => D#77ptD.0
  # DEBUG thisD.41786 => D#77ptD.0
  # VUSE <.MEM_98>
  # PT = nonlocal escaped 
  _22 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.41787 => D#77ptD.0
  # PT = nonlocal 
  _23 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_22 != _23)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#77ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.41779 => D#77ptD.0
  # DEBUG __sizeD.41778 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#77ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.41782 => _22
  # DEBUG __aD.41780 => D#49ptD.0
  # DEBUG __nD.41781 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.41785 => _22
  # DEBUG thisD.41783 => D#45ptD.0
  # DEBUG D.41784 => D#46ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 28, next block 1, flags: (NEW, REACHABLE)
;;    pred:       27 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_98(27), .MEM_99(28)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41788 => D#55ptD.0
  # DEBUG thisD.41789 => D#55ptD.0
  # DEBUG thisD.41790 => D#55ptD.0
  # .MEM_107 = VDEF <.MEM_35>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_107>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36963 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=1810, decl_uid=34234, cgraph_uid=513, symbol_order=514)


Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.33506 * const thisD.34235, struct iteratorD.33879 __positionD.34236, size_typeD.33887 __nD.34237, const value_typeD.33874 & __xD.34238)
{
  const long unsigned intD.14 D.41840;
  const size_typeD.33887 __lenD.41834;
  size_typeD.33887 D.41839;
  size_typeD.33887 __nD.41832;
  intD.9 * D.41830;
  const ptrdiff_tD.2819 _NumD.41820;
  intD.9 * D.41821;
  intD.9 * const __positionD.41245;
  intD.9 * __firstD.41213;
  const ptrdiff_tD.2819 _NumD.41207;
  const ptrdiff_tD.2819 _NumD.41168;
  intD.9 * __firstD.41096;
  long unsigned intD.14 __nD.41097;
  intD.9 * __firstD.41047;
  const ptrdiff_tD.2819 _NumD.41043;
  intD.9 * __firstD.40996;
  intD.9 * __new_finishD.38340;
  const size_typeD.33887 __elems_afterD.38304;
  value_typeD.33874 __x_copyD.38303;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.38004 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.7_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.12_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#241ptD.0 => MEM[(struct __normal_iteratorD.33880 *)&__positionD.34236]
  # DEBUG __positionD.41245 => D#241ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(13), .MEM_54(23), .MEM_154(26)>
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.33880 *)&__positionD.34236];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.38303 => __x_copy_35
  # DEBUG thisD.40991 => this_4(D)
  # DEBUG D#22ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.40993 => NULL
  # DEBUG __iD.40992 => D#22ptD.0
  # DEBUG __lhsD.40988 => &D.38305
  # DEBUG __rhsD.40989 => &__positionD.34236
  # DEBUG thisD.39640 => &D.38305
  # DEBUG thisD.39638 => &__positionD.34236
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.33887) _22;
  # DEBUG __elems_afterD.38304 => __elems_after_37
  # DEBUG __old_finishD.38312 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#196ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41045 => D#196ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.41010 => _41
  # DEBUG __lastD.41011 => __first_7
  # DEBUG __resultD.41012 => __first_7
  # DEBUG __allocD.41013 => D#188ptD.0
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG __firstD.41017 => _41
  # DEBUG __lastD.41016 => __first_7
  # DEBUG __resultD.41015 => __first_7
  # DEBUG D.41014 => D#186ptD.0
  # DEBUG __firstD.41020 => _41
  # DEBUG __lastD.41019 => __first_7
  # DEBUG __resultD.41018 => __first_7
  # DEBUG __assignableD.41023 => 1
  # DEBUG __firstD.41026 => _41
  # DEBUG __lastD.41025 => __first_7
  # DEBUG __resultD.41024 => __first_7
  # DEBUG __firstD.41029 => _41
  # DEBUG __lastD.41028 => __first_7
  # DEBUG __resultD.41027 => __first_7
  # DEBUG __itD.40739 => __first_7
  # DEBUG __itD.40035 => __first_7
  # DEBUG __itD.40737 => _41
  # DEBUG __itD.40035 => _41
  # DEBUG __firstD.41032 => _41
  # DEBUG __lastD.41031 => __first_7
  # DEBUG __resultD.41030 => __first_7
  # DEBUG __itD.40719 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG __itD.40717 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG __itD.40715 => _41
  # DEBUG __itD.40038 => _41
  # DEBUG __firstD.41035 => _41
  # DEBUG __lastD.41034 => __first_7
  # DEBUG __resultD.41033 => __first_7
  # DEBUG __simpleD.41039 => 1
  # DEBUG __firstD.41042 => _41
  # DEBUG __lastD.41041 => __first_7
  # DEBUG __resultD.41040 => __first_7
  __first.7_49 = (long intD.12) _41;
  _47 = _8 - __first.7_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.41043 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _43;
  # DEBUG thisD.41008 => &__positionD.34236
  # DEBUG __firstD.41804 => D#241ptD.0
  # DEBUG __lastD.41805 => _41
  # DEBUG __resultD.41806 => __first_7
  # DEBUG __itD.40110 => _41
  # DEBUG __itD.40035 => _41
  # DEBUG __itD.40108 => D#241ptD.0
  # DEBUG __itD.40035 => D#241ptD.0
  # DEBUG __firstD.41809 => D#241ptD.0
  # DEBUG __lastD.41808 => _41
  # DEBUG __resultD.41807 => __first_7
  # DEBUG __itD.40090 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG __itD.40088 => _41
  # DEBUG __itD.40038 => _41
  # DEBUG __itD.40086 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG __firstD.41812 => D#241ptD.0
  # DEBUG __lastD.41811 => _41
  # DEBUG __resultD.41810 => __first_7
  # DEBUG __simpleD.41816 => 1
  # DEBUG __firstD.41819 => D#241ptD.0
  # DEBUG __lastD.41818 => _41
  # DEBUG __resultD.41817 => __first_7
  _104 = __first.7_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.41820 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.41006 => &__positionD.34236
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.41004 => &__positionD.34236
  # DEBUG D#121ptD.0 => &__x_copyD.38303
  # DEBUG __firstD.40996 => D#241ptD.0
  # DEBUG __lastD.40997 => _48
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __valueD.40999 => D#120ptD.0
  # DEBUG __itD.40048 => _48
  # DEBUG __itD.40038 => _48
  # DEBUG __itD.40046 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.41002 => D#241ptD.0
  # DEBUG __lastD.41001 => _48
  # DEBUG __valueD.41000 => D#119ptD.0
  # DEBUG __tmpD.41003 => __x_copy_35
  # DEBUG __firstD.41002 => D#241ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.41002 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.41002 => __position_55
  # DEBUG __firstD.41002 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#197ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41118 => D#197ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#144ptD.0 => &__x_copyD.38303
  # DEBUG __firstD.41096 => __first_7
  # DEBUG __nD.41097 => __n_50
  # DEBUG D#143ptD.0 => D#144ptD.0
  # DEBUG __xD.41100 => D#143ptD.0
  # DEBUG D.41099 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  # DEBUG __firstD.41103 => __first_7
  # DEBUG __nD.41102 => __n_50
  # DEBUG D#141ptD.0 => D#142ptD.0
  # DEBUG __xD.41101 => D#141ptD.0
  # DEBUG __assignableD.41105 => 1
  # DEBUG D#140ptD.0 => D#141ptD.0
  # DEBUG __firstD.41108 => __first_7
  # DEBUG __nD.41107 => __n_50
  # DEBUG D#139ptD.0 => D#140ptD.0
  # DEBUG __xD.41106 => D#139ptD.0
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG __firstD.41111 => __first_7
  # DEBUG __nD.41110 => __n_50
  # DEBUG D#137ptD.0 => D#138ptD.0
  # DEBUG __valueD.41109 => D#137ptD.0
  # DEBUG __itD.40239 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG D#136ptD.0 => D#137ptD.0
  # DEBUG __firstD.41114 => __first_7
  # DEBUG __nD.41113 => __n_50
  # DEBUG __valueD.41112 => D#136ptD.0
  # DEBUG __tmpD.41115 => __x_copy_35
  # DEBUG __niterD.41116 => __n_50
  # DEBUG __niterD.41116 => __n_50
  # DEBUG __firstD.41114 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.41116 => __n_111
  # DEBUG __firstD.41114 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.41116 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.41114 => __first_64
  # DEBUG __niterD.41116 => __n_63
  # DEBUG __firstD.41114 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(18), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(18), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = __first_125;
  # DEBUG D#198ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41094 => D#198ptD.0
  # DEBUG thisD.41092 => &__positionD.34236
  # DEBUG __firstD.41057 => D#241ptD.0
  # DEBUG __lastD.41058 => __first_7
  # DEBUG __resultD.41059 => __first_125
  # DEBUG __allocD.41060 => D#188ptD.0
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG __firstD.41064 => D#241ptD.0
  # DEBUG __lastD.41063 => __first_7
  # DEBUG __resultD.41062 => __first_125
  # DEBUG D.41061 => D#186ptD.0
  # DEBUG __firstD.41067 => D#241ptD.0
  # DEBUG __lastD.41066 => __first_7
  # DEBUG __resultD.41065 => __first_125
  # DEBUG __assignableD.41070 => 1
  # DEBUG __firstD.41073 => D#241ptD.0
  # DEBUG __lastD.41072 => __first_7
  # DEBUG __resultD.41071 => __first_125
  # DEBUG __firstD.41076 => D#241ptD.0
  # DEBUG __lastD.41075 => __first_7
  # DEBUG __resultD.41074 => __first_125
  # DEBUG __itD.40739 => __first_7
  # DEBUG __itD.40035 => __first_7
  # DEBUG __itD.40737 => D#241ptD.0
  # DEBUG __itD.40035 => D#241ptD.0
  # DEBUG __firstD.41079 => D#241ptD.0
  # DEBUG __lastD.41078 => __first_7
  # DEBUG __resultD.41077 => __first_125
  # DEBUG __itD.40719 => __first_125
  # DEBUG __itD.40038 => __first_125
  # DEBUG __itD.40717 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG __itD.40715 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG __firstD.41082 => D#241ptD.0
  # DEBUG __lastD.41081 => __first_7
  # DEBUG __resultD.41080 => __first_125
  # DEBUG __simpleD.41086 => 1
  # DEBUG __firstD.41089 => D#241ptD.0
  # DEBUG __lastD.41088 => __first_7
  # DEBUG __resultD.41087 => __first_125
  # DEBUG _NumD.41090 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _53;
  # DEBUG thisD.41055 => &__positionD.34236
  # DEBUG D#121ptD.0 => &__x_copyD.38303
  # DEBUG __firstD.41047 => D#241ptD.0
  # DEBUG __lastD.41048 => __first_7
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __valueD.41050 => D#120ptD.0
  # DEBUG __itD.40048 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG __itD.40046 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.41053 => D#241ptD.0
  # DEBUG __lastD.41052 => __first_7
  # DEBUG __valueD.41051 => D#119ptD.0
  # DEBUG __tmpD.41054 => __x_copy_35
  # DEBUG __firstD.41053 => D#241ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.41053 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.41053 => __position_58
  # DEBUG __firstD.41053 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.41831 => this_4(D)
  # DEBUG __nD.41832 => __n_2(D)
  # DEBUG __nD.41832 => __n_2(D)
  # DEBUG __sD.41833 => "vector::_M_fill_insert"
  # DEBUG D#127ptD.0 => this_4(D)
  # DEBUG thisD.40146 => D#127ptD.0
  # DEBUG D#126ptD.0 => D#127ptD.0
  # DEBUG D#125ptD.0 => &D#126ptD.0->D.34311
  # DEBUG thisD.40136 => D#125ptD.0
  # DEBUG __aD.40128 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#123ptD.0
  # DEBUG thisD.40119 => D#122ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG thisD.41837 => D#21ptD.0
  # DEBUG thisD.41838 => D#21ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2860 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG thisD.40164 => D#21ptD.0
  # DEBUG thisD.40163 => D#21ptD.0
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG thisD.40159 => D#21ptD.0
  # DEBUG thisD.40158 => D#21ptD.0
  # DEBUG __aD.41836 => &D.41840
  # DEBUG __bD.41835 => &__nD.41832
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.41834 => __len_124
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG thisD.40151 => D#21ptD.0
  # DEBUG thisD.40150 => D#21ptD.0
  # DEBUG D#127ptD.0 => this_4(D)
  # DEBUG thisD.40166 => D#127ptD.0
  # DEBUG D#126ptD.0 => D#127ptD.0
  # DEBUG D#125ptD.0 => &D#126ptD.0->D.34311
  # DEBUG thisD.40136 => D#125ptD.0
  # DEBUG __aD.40128 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#123ptD.0
  # DEBUG thisD.40119 => D#122ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.38336 => NULL
  # DEBUG thisD.41240 => this_4(D)
  # DEBUG D#44ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41242 => NULL
  # DEBUG __iD.41241 => D#44ptD.0
  # DEBUG __lhsD.41237 => &__positionD.34236
  # DEBUG __rhsD.41238 => &D.38338
  # DEBUG thisD.39640 => &__positionD.34236
  # DEBUG thisD.39638 => &D.38338
  # DEBUG D#209ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.38337 => (const size_typeD.33887) D#209ptD.0
  # DEBUG D#208ptD.0 => &this_4(D)->D.34311
  # DEBUG D#135ptD.0 => D#208ptD.0
  # DEBUG __nD.41822 => NULL
  # DEBUG thisD.41823 => D#135ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0
  # DEBUG D#133ptD.0 => &D#134ptD.0->_M_implD.33802
  # DEBUG D#132ptD.0 => D#133ptD.0
  # DEBUG __nD.41826 => NULL
  # DEBUG __aD.41825 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => 0B
  # DEBUG __nD.41829 => NULL
  # DEBUG thisD.41827 => D#129ptD.0
  # DEBUG D.41828 => D#130ptD.0
  # DEBUG D#128ptD.0 => D#129ptD.0
  # DEBUG D#122ptD.0 => D#128ptD.0
  # DEBUG thisD.40171 => D#122ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.41843 } (escaped heap)
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.34311._M_implD.33802._M_startD.33804;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.41843 } (escaped heap)
  # iftmp.12_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.41843 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
  # DEBUG __new_startD.38339 => NULL
  # DEBUG __new_finishD.38340 => NULL
  # DEBUG D#192ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41235 => D#192ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.41843 } (escaped heap)
  __first_20 = iftmp.12_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#144ptD.0 => __x_21(D)
  # DEBUG __firstD.41213 => __first_20
  # DEBUG __nD.41214 => __n_2(D)
  # DEBUG D#143ptD.0 => D#144ptD.0
  # DEBUG __xD.41217 => D#143ptD.0
  # DEBUG D.41216 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  # DEBUG __firstD.41220 => __first_20
  # DEBUG __nD.41219 => __n_2(D)
  # DEBUG D#141ptD.0 => D#142ptD.0
  # DEBUG __xD.41218 => D#141ptD.0
  # DEBUG __assignableD.41222 => 1
  # DEBUG D#140ptD.0 => D#141ptD.0
  # DEBUG __firstD.41225 => __first_20
  # DEBUG __nD.41224 => __n_2(D)
  # DEBUG D#139ptD.0 => D#140ptD.0
  # DEBUG __xD.41223 => D#139ptD.0
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG __firstD.41228 => __first_20
  # DEBUG __nD.41227 => __n_2(D)
  # DEBUG D#137ptD.0 => D#138ptD.0
  # DEBUG __valueD.41226 => D#137ptD.0
  # DEBUG __itD.40239 => __first_20
  # DEBUG __itD.40038 => __first_20
  # DEBUG D#136ptD.0 => D#137ptD.0
  # DEBUG __firstD.41231 => __first_20
  # DEBUG __nD.41230 => __n_2(D)
  # DEBUG __valueD.41229 => D#136ptD.0
  # DEBUG __tmpD.41232 => _56
  # DEBUG __niterD.41233 => __n_2(D)
  # DEBUG __niterD.41233 => __n_2(D)
  # DEBUG __firstD.41231 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(33)>
  # PT = null { D.41843 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(33)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(33)>
  # DEBUG __niterD.41233 => __n_132
  # DEBUG __firstD.41231 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.41233 => __n_79
  # PT = null { D.41843 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.41231 => __first_80
  # DEBUG __niterD.41233 => __n_79
  # DEBUG __firstD.41231 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.38340 => 0B
  # DEBUG D#193ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41211 => D#193ptD.0
  # DEBUG thisD.41209 => &__positionD.34236
  # DEBUG D#240ptD.0 => this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.41174 => D#240ptD.0
  # DEBUG __lastD.41175 => D#241ptD.0
  # DEBUG __resultD.41176 => NULL
  # DEBUG __allocD.41177 => D#190ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0
  # DEBUG D#186ptD.0 => D#189ptD.0
  # DEBUG __firstD.41181 => D#240ptD.0
  # DEBUG __lastD.41180 => D#241ptD.0
  # DEBUG __resultD.41179 => NULL
  # DEBUG D.41178 => D#186ptD.0
  # DEBUG __firstD.41184 => D#240ptD.0
  # DEBUG __lastD.41183 => D#241ptD.0
  # DEBUG __resultD.41182 => NULL
  # DEBUG __assignableD.41187 => 1
  # DEBUG __firstD.41190 => D#240ptD.0
  # DEBUG __lastD.41189 => D#241ptD.0
  # DEBUG __resultD.41188 => NULL
  # DEBUG __firstD.41193 => D#240ptD.0
  # DEBUG __lastD.41192 => D#241ptD.0
  # DEBUG __resultD.41191 => NULL
  # DEBUG __itD.40739 => D#241ptD.0
  # DEBUG __itD.40035 => D#241ptD.0
  # DEBUG __itD.40737 => D#240ptD.0
  # DEBUG __itD.40035 => D#240ptD.0
  # DEBUG __firstD.41196 => D#240ptD.0
  # DEBUG __lastD.41195 => D#241ptD.0
  # DEBUG __resultD.41194 => NULL
  # DEBUG __itD.40719 => NULL
  # DEBUG __itD.40038 => NULL
  # DEBUG __itD.40717 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG __itD.40715 => D#240ptD.0
  # DEBUG __itD.40038 => D#240ptD.0
  # DEBUG __firstD.41199 => D#240ptD.0
  # DEBUG __lastD.41198 => D#241ptD.0
  # DEBUG __resultD.41197 => NULL
  # DEBUG __simpleD.41203 => 1
  # DEBUG __firstD.41206 => D#240ptD.0
  # DEBUG __lastD.41205 => D#241ptD.0
  # DEBUG __resultD.41204 => NULL
  # DEBUG D#239ptD.0 => (long intD.12) D#240ptD.0
  # DEBUG D#238ptD.0 => _158 - D#239ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.41207 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  memmoveD.995 (iftmp.12_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#237ptD.0 => (long unsigned intD.14) D#238ptD.0
  # DEBUG __new_finishD.38340 => iftmp.12_113 + D#237ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.41843 } (escaped heap)
  __new_finish_26 = iftmp.12_113 + _133;
  # DEBUG __new_finishD.38340 => __new_finish_26
  # DEBUG D#194ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41172 => D#194ptD.0
  # DEBUG D#236ptD.0 => this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41170 => &__positionD.34236
  # DEBUG __firstD.41135 => D#241ptD.0
  # DEBUG __lastD.41136 => D#236ptD.0
  # DEBUG __resultD.41137 => __new_finish_26
  # DEBUG __allocD.41138 => D#190ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0
  # DEBUG D#186ptD.0 => D#189ptD.0
  # DEBUG __firstD.41142 => D#241ptD.0
  # DEBUG __lastD.41141 => D#236ptD.0
  # DEBUG __resultD.41140 => __new_finish_26
  # DEBUG D.41139 => D#186ptD.0
  # DEBUG __firstD.41145 => D#241ptD.0
  # DEBUG __lastD.41144 => D#236ptD.0
  # DEBUG __resultD.41143 => __new_finish_26
  # DEBUG __assignableD.41148 => 1
  # DEBUG __firstD.41151 => D#241ptD.0
  # DEBUG __lastD.41150 => D#236ptD.0
  # DEBUG __resultD.41149 => __new_finish_26
  # DEBUG __firstD.41154 => D#241ptD.0
  # DEBUG __lastD.41153 => D#236ptD.0
  # DEBUG __resultD.41152 => __new_finish_26
  # DEBUG __itD.40739 => D#236ptD.0
  # DEBUG __itD.40035 => D#236ptD.0
  # DEBUG __itD.40737 => D#241ptD.0
  # DEBUG __itD.40035 => D#241ptD.0
  # DEBUG __firstD.41157 => D#241ptD.0
  # DEBUG __lastD.41156 => D#236ptD.0
  # DEBUG __resultD.41155 => __new_finish_26
  # DEBUG __itD.40719 => __new_finish_26
  # DEBUG __itD.40038 => __new_finish_26
  # DEBUG __itD.40717 => D#236ptD.0
  # DEBUG __itD.40038 => D#236ptD.0
  # DEBUG __itD.40715 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG __firstD.41160 => D#241ptD.0
  # DEBUG __lastD.41159 => D#236ptD.0
  # DEBUG __resultD.41158 => __new_finish_26
  # DEBUG __simpleD.41164 => 1
  # DEBUG __firstD.41167 => D#241ptD.0
  # DEBUG __lastD.41166 => D#236ptD.0
  # DEBUG __resultD.41165 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.41168 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.41843 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.38340 => _70
  # DEBUG D#195ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41133 => D#195ptD.0
  # DEBUG D#207ptD.0 => this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#206ptD.0 => this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.41130 => D#206ptD.0
  # DEBUG __lastD.41131 => D#207ptD.0
  # DEBUG D.41132 => NULL
  # DEBUG D#38ptD.0 => D#206ptD.0
  # DEBUG D#39ptD.0 => D#207ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#205ptD.0 => this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#204ptD.0 => (long intD.12) D#205ptD.0
  # DEBUG D#203ptD.0 => (long intD.12) D#240ptD.0
  # DEBUG D#202ptD.0 => D#204ptD.0 - D#203ptD.0
  # DEBUG D#201ptD.0 => D#202ptD.0 /[ex] 4
  # DEBUG D#200ptD.0 => (long unsigned intD.14) D#201ptD.0
  # DEBUG D#199ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41120 => D#199ptD.0
  # DEBUG __pD.41121 => D#240ptD.0
  # DEBUG __nD.41122 => D#200ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#199ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#200ptD.0
  # DEBUG __pD.41126 => D#240ptD.0
  # DEBUG __aD.41124 => D#84ptD.0
  # DEBUG __nD.41125 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41129 => D#240ptD.0
  # DEBUG thisD.41127 => D#80ptD.0
  # DEBUG D.41128 => D#81ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.34311._M_implD.33802._M_startD.33804 = iftmp.12_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(3), .MEM_34(44)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.38336 => NULL
  # DEBUG thisD.41240 => this_4(D)
  # DEBUG D#44ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41242 => NULL
  # DEBUG __iD.41241 => D#44ptD.0
  # DEBUG __lhsD.41237 => &__positionD.34236
  # DEBUG __rhsD.41238 => &D.38338
  # DEBUG thisD.39640 => &__positionD.34236
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.39638 => &D.38338
  _143 = _144 - _116;
  # DEBUG D#209ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.38337 => (const size_typeD.33887) D#209ptD.0
  # DEBUG D#208ptD.0 => &this_4(D)->D.34311
  # DEBUG D#135ptD.0 => D#208ptD.0
  # DEBUG __nD.41822 => NULL
  # DEBUG thisD.41823 => D#135ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.38336 => NULL
  # DEBUG thisD.41240 => this_4(D)
  # DEBUG D#44ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41242 => NULL
  # DEBUG __iD.41241 => D#44ptD.0
  # DEBUG __lhsD.41237 => &__positionD.34236
  # DEBUG __rhsD.41238 => &D.38338
  # DEBUG thisD.39640 => &__positionD.34236
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.39638 => &D.38338
  _150 = _151 - _116;
  # DEBUG D#209ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.38337 => (const size_typeD.33887) D#209ptD.0
  # DEBUG D#208ptD.0 => &this_4(D)->D.34311
  # DEBUG D#135ptD.0 => D#208ptD.0
  # DEBUG __nD.41822 => NULL
  # DEBUG thisD.41823 => D#135ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for this_4(D)->D.34311._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__x_21(D)
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__x_21(D)
Creating dr for this_4(D)->D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for MEM[(int * *)this_4(D)]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D)]
Applying pattern match.pd:725, generic-match.c:1428
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for MEM[(const int &)__x_21(D)]
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const int &)__x_21(D)]
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.34311._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34311._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:18)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:39)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:56, LOOPS:4, CONDITIONS:19, STMTS:600)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG D#241 => MEM[(struct __normal_iterator *)&__position]
    # DEBUG __position => D#241
    if (__n_2(D) != 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_10 bb_48 bb_23 bb_49 }, succs = {bb_55 })
  {
    <bb 3>:
    # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>

  }
  bb_55 (preds = {bb_3 }, succs = {bb_45 })
  {
    <bb 55>:
    goto <bb 45>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_28 })
  {
    <bb 4>:
    # VUSE <.MEM_3(D)>
    __position_16 = MEM[(struct __normal_iterator *)&__position];
    # VUSE <.MEM_3(D)>
    _5 = this_4(D)->D.34311._M_impl._M_end_of_storage;
    _6 = (long int) _5;
    # VUSE <.MEM_3(D)>
    __first_7 = this_4(D)->D.34311._M_impl._M_finish;
    _8 = (long int) __first_7;
    _9 = _6 - _8;
    _10 = _9 /[ex] 4;
    _11 = (long unsigned int) _10;
    if (__n_2(D) <= _11)
      goto <bb 5>;
    else
      goto <bb 28>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 bb_15 })
  {
    <bb 5>:
    # VUSE <.MEM_3(D)>
    __x_copy_35 = *__x_21(D);
    # DEBUG __x_copy => __x_copy_35
    # DEBUG this => this_4(D)
    # DEBUG D#22 => &this_4(D)->D.34311._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#22
    # DEBUG __lhs => &D.38305
    # DEBUG __rhs => &__position
    # DEBUG this => &D.38305
    # DEBUG this => &__position
    _27 = (long int) __position_16;
    _23 = _8 - _27;
    _22 = _23 /[ex] 4;
    __elems_after_37 = (const size_type) _22;
    # DEBUG __elems_after => __elems_after_37
    # DEBUG __old_finish => __first_7
    if (__n_2(D) < __elems_after_37)
      goto <bb 6>;
    else
      goto <bb 15>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#196 => &this_4(D)->D.34311
    # DEBUG this => D#196
    _39 = __n_2(D) * 4;
    _40 = -_39;
    _41 = __first_7 + _40;
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __alloc => D#188
    # DEBUG D#187 => D#188
    # DEBUG D#186 => D#187
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG D.41014 => D#186
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __assignable => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    __first.7_49 = (long int) _41;
    _47 = _8 - __first.7_49;
    _Num_45 = _47 /[ex] 4;
    # DEBUG _Num => _Num_45
    if (_Num_45 != 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    _38 = (long unsigned int) _47;
    # .MEM_97 = VDEF <.MEM_3(D)>
    __builtin_memmove (__first_7, _41, _38);
    # VUSE <.MEM_97>
    pretmp_173 = this_4(D)->D.34311._M_impl._M_finish;

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
    # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
    _43 = prephitmp_174 + _39;
    # .MEM_44 = VDEF <.MEM_14>
    this_4(D)->D.34311._M_impl._M_finish = _43;
    # DEBUG this => &__position
    # DEBUG __first => D#241
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#241
    # DEBUG __it => D#241
    # DEBUG __first => D#241
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#241
    # DEBUG __it => D#241
    # DEBUG __first => D#241
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => D#241
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    _104 = __first.7_49 - _27;
    _Num_105 = _104 /[ex] 4;
    # DEBUG _Num => _Num_105
    if (_Num_105 != 0)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    _106 = (long unsigned int) _104;
    _107 = -_106;
    _108 = __first_7 + _107;
    # .MEM_135 = VDEF <.MEM_44>
    __builtin_memmove (_108, __position_16, _106);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_3 bb_11 })
  {
    <bb 10>:
    # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
    # DEBUG this => &__position
    _48 = __position_16 + _39;
    # DEBUG this => &__position
    # DEBUG D#121 => &__x_copy
    # DEBUG __first => D#241
    # DEBUG __last => _48
    # DEBUG D#120 => D#121
    # DEBUG __value => D#120
    # DEBUG __it => _48
    # DEBUG __it => _48
    # DEBUG __it => D#241
    # DEBUG __it => D#241
    # DEBUG D#119 => D#120
    # DEBUG __first => D#241
    # DEBUG __last => _48
    # DEBUG __value => D#119
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#241
    if (__position_16 == _48)
      goto <bb 3>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:

  }
  bb_13 (preds = {bb_12 }, succs = {bb_48 })
  {
    <bb 13>:
    # .MEM_13 = PHI <.MEM_98(12)>

  }
  bb_48 (preds = {bb_13 }, succs = {bb_3 })
  {
    <bb 48>:
    goto <bb 3>;

  }
  bb_15 (preds = {bb_5 }, succs = {bb_20 bb_16 })
  {
    <bb 15>:
    # DEBUG D#197 => &this_4(D)->D.34311
    # DEBUG this => D#197
    __n_50 = __n_2(D) - __elems_after_37;
    # DEBUG D#144 => &__x_copy
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#143 => D#144
    # DEBUG __x => D#143
    # DEBUG D.41099 => D#145
    # DEBUG D#142 => D#143
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#141 => D#142
    # DEBUG __x => D#141
    # DEBUG __assignable => 1
    # DEBUG D#140 => D#141
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#139 => D#140
    # DEBUG __x => D#139
    # DEBUG D#138 => D#139
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#137 => D#138
    # DEBUG __value => D#137
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG D#136 => D#137
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG __value => D#136
    # DEBUG __tmp => __x_copy_35
    # DEBUG __niter => __n_50
    # DEBUG __niter => __n_50
    # DEBUG __first => __first_7
    if (__n_50 == 0)
      goto <bb 20>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:

  }
  bb_18 (preds = {bb_17 }, succs = {bb_50 })
  {
    <bb 18>:

  }
  bb_50 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 50>:
    _160 = __n_50 * 4;
    __first_123 = __first_7 + _160;
    goto <bb 20>;

  }
  bb_20 (preds = {bb_50 bb_15 }, succs = {bb_22 bb_21 })
  {
    <bb 20>:
    # __first_125 = PHI <__first_123(50), __first_7(15)>
    # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
    # .MEM_51 = VDEF <.MEM_84>
    this_4(D)->D.34311._M_impl._M_finish = __first_125;
    # DEBUG D#198 => &this_4(D)->D.34311
    # DEBUG this => D#198
    # DEBUG this => &__position
    # DEBUG __first => D#241
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __alloc => D#188
    # DEBUG D#187 => D#188
    # DEBUG D#186 => D#187
    # DEBUG __first => D#241
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG D.41061 => D#186
    # DEBUG __first => D#241
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __assignable => 1
    # DEBUG __first => D#241
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __first => D#241
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#241
    # DEBUG __it => D#241
    # DEBUG __first => D#241
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#241
    # DEBUG __it => D#241
    # DEBUG __first => D#241
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __simple => 1
    # DEBUG __first => D#241
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG _Num => _22
    if (_22 != 0)
      goto <bb 22>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 21>:
    pretmp_168 = (long unsigned int) _23;
    goto <bb 23>;

  }
  bb_22 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 22>:
    _59 = (long unsigned int) _23;
    # .MEM_100 = VDEF <.MEM_51>
    __builtin_memmove (__first_125, __position_16, _59);
    # VUSE <.MEM_100>
    pretmp_166 = this_4(D)->D.34311._M_impl._M_finish;

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_3 bb_24 })
  {
    <bb 23>:
    # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
    # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
    # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
    _53 = prephitmp_167 + prephitmp_169;
    # .MEM_54 = VDEF <.MEM_87>
    this_4(D)->D.34311._M_impl._M_finish = _53;
    # DEBUG this => &__position
    # DEBUG D#121 => &__x_copy
    # DEBUG __first => D#241
    # DEBUG __last => __first_7
    # DEBUG D#120 => D#121
    # DEBUG __value => D#120
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#241
    # DEBUG __it => D#241
    # DEBUG D#119 => D#120
    # DEBUG __first => D#241
    # DEBUG __last => __first_7
    # DEBUG __value => D#119
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#241
    if (__first_7 == __position_16)
      goto <bb 3>;
    else
      goto <bb 24>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:

  }
  bb_26 (preds = {bb_25 }, succs = {bb_49 })
  {
    <bb 26>:
    # .MEM_154 = PHI <.MEM_101(25)>

  }
  bb_49 (preds = {bb_26 }, succs = {bb_3 })
  {
    <bb 49>:
    goto <bb 3>;

  }
  bb_28 (preds = {bb_4 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # DEBUG this => this_4(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __s => "vector::_M_fill_insert"
    # DEBUG D#127 => this_4(D)
    # DEBUG this => D#127
    # DEBUG D#126 => D#127
    # DEBUG D#125 => &D#126->D.34311
    # DEBUG this => D#125
    # DEBUG __a => D#124
    # DEBUG D#123 => D#124
    # DEBUG D#122 => D#123
    # DEBUG this => D#122
    # VUSE <.MEM_3(D)>
    _17 = MEM[(int * *)this_4(D)];
    # DEBUG D#21 => this_4(D)
    # DEBUG D#21 => this_4(D)
    # DEBUG this => D#21
    # DEBUG this => D#21
    _116 = (long int) _17;
    _117 = _8 - _116;
    _118 = _117 /[ex] 4;
    _119 = (const long unsigned int) _118;
    _120 = 4611686018427387903 - _119;
    if (__n_2(D) > _120)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {})
  {
    <bb 29>:
    # .MEM_134 = VDEF <.MEM_3(D)>
    std::__throw_length_error ("vector::_M_fill_insert");

  }
  bb_30 (preds = {bb_28 }, succs = {bb_46 bb_47 })
  {
    <bb 30>:
    # DEBUG D#21 => this_4(D)
    # DEBUG D#21 => this_4(D)
    # DEBUG this => D#21
    # DEBUG this => D#21
    # DEBUG D#21 => this_4(D)
    # DEBUG D#21 => this_4(D)
    # DEBUG this => D#21
    # DEBUG this => D#21
    # DEBUG __a => &D.41840
    # DEBUG __b => &__n
    _77 = MAX_EXPR <__n_2(D), _119>;
    __len_124 = _77 + _119;
    # DEBUG __len => __len_124
    # DEBUG D#21 => this_4(D)
    # DEBUG D#21 => this_4(D)
    # DEBUG this => D#21
    # DEBUG this => D#21
    # DEBUG D#127 => this_4(D)
    # DEBUG this => D#127
    # DEBUG D#126 => D#127
    # DEBUG D#125 => &D#126->D.34311
    # DEBUG this => D#125
    # DEBUG __a => D#124
    # DEBUG D#123 => D#124
    # DEBUG D#122 => D#123
    # DEBUG this => D#122
    _152 = __len_124 > 4611686018427387903;
    _142 = _119 > __len_124;
    _114 = _142 | _152;
    if (_114 != 0)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_31 (preds = {bb_47 }, succs = {bb_32 })
  {
    <bb 31>:
    pretmp_164 = __len_124 * 4;

  }
  bb_32 (preds = {bb_46 bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    # _156 = PHI <_144(46), _151(31)>
    # _157 = PHI <_143(46), _150(31)>
    # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#44 => &this_4(D)->D.34311._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#44
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.38338
    # DEBUG this => &__position
    # DEBUG this => &D.38338
    # DEBUG D#209 => _157 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#209
    # DEBUG D#208 => &this_4(D)->D.34311
    # DEBUG D#135 => D#208
    # DEBUG __n => NULL
    # DEBUG this => D#135
    # DEBUG D#134 => D#135
    # DEBUG D#133 => &D#134->_M_impl
    # DEBUG D#132 => D#133
    # DEBUG __n => NULL
    # DEBUG __a => D#132
    # DEBUG D#131 => D#132
    # DEBUG D#129 => D#131
    # DEBUG D#130 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#129
    # DEBUG D.41828 => D#130
    # DEBUG D#128 => D#129
    # DEBUG D#122 => D#128
    # DEBUG this => D#122
    # .MEM_131 = VDEF <.MEM_3(D)>
    _112 = operator new (prephitmp_165);
    # VUSE <.MEM_131>
    pretmp_29 = this_4(D)->D.34311._M_impl._M_start;
    # VUSE <.MEM_131>
    pretmp_147 = this_4(D)->D.34311._M_impl._M_finish;
    pretmp_149 = _112 + prephitmp_165;
    pretmp_145 = (long int) pretmp_147;
    pretmp_138 = (long int) pretmp_29;
    pretmp_140 = _156 - pretmp_138;

  }
  bb_33 (preds = {bb_47 bb_32 }, succs = {bb_52 })
  {
    <bb 33>:
    # iftmp.12_113 = PHI <0B(47), _112(32)>
    # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
    # _158 = PHI <_151(47), _156(32)>
    # _153 = PHI <_150(47), _157(32)>
    # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
    # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
    # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
    # prephitmp_137 = PHI <_150(47), pretmp_140(32)>

  }
  bb_52 (preds = {bb_33 }, succs = {bb_34 })
  {
    <bb 52>:
    # DEBUG __new_start => NULL
    # DEBUG __new_finish => NULL
    # DEBUG D#192 => &this_4(D)->D.34311
    # DEBUG this => D#192
    _19 = (long unsigned int) _153;
    __first_20 = iftmp.12_113 + _19;
    # VUSE <.MEM_126>
    _56 = MEM[(const int &)__x_21(D)];
    # DEBUG D#144 => __x_21(D)
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#143 => D#144
    # DEBUG __x => D#143
    # DEBUG D.41216 => D#145
    # DEBUG D#142 => D#143
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#141 => D#142
    # DEBUG __x => D#141
    # DEBUG __assignable => 1
    # DEBUG D#140 => D#141
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#139 => D#140
    # DEBUG __x => D#139
    # DEBUG D#138 => D#139
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#137 => D#138
    # DEBUG __value => D#137
    # DEBUG __it => __first_20
    # DEBUG __it => __first_20
    # DEBUG D#136 => D#137
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG __value => D#136
    # DEBUG __tmp => _56
    # DEBUG __niter => __n_2(D)
    # DEBUG __niter => __n_2(D)
    # DEBUG __first => __first_20

  }
  bb_36 (preds = {bb_34 }, succs = {bb_51 })
  {
    <bb 36>:

  }
  bb_51 (preds = {bb_36 }, succs = {bb_38 bb_37 })
  {
    <bb 51>:
    # DEBUG __new_finish => 0B
    # DEBUG D#193 => &this_4(D)->D.34311
    # DEBUG this => D#193
    # DEBUG this => &__position
    # DEBUG D#240 => this_4(D)->D.34311._M_impl._M_start
    # DEBUG __first => D#240
    # DEBUG __last => D#241
    # DEBUG __result => NULL
    # DEBUG __alloc => D#190
    # DEBUG D#189 => D#190
    # DEBUG D#186 => D#189
    # DEBUG __first => D#240
    # DEBUG __last => D#241
    # DEBUG __result => NULL
    # DEBUG D.41178 => D#186
    # DEBUG __first => D#240
    # DEBUG __last => D#241
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => D#240
    # DEBUG __last => D#241
    # DEBUG __result => NULL
    # DEBUG __first => D#240
    # DEBUG __last => D#241
    # DEBUG __result => NULL
    # DEBUG __it => D#241
    # DEBUG __it => D#241
    # DEBUG __it => D#240
    # DEBUG __it => D#240
    # DEBUG __first => D#240
    # DEBUG __last => D#241
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => D#241
    # DEBUG __it => D#241
    # DEBUG __it => D#240
    # DEBUG __it => D#240
    # DEBUG __first => D#240
    # DEBUG __last => D#241
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => D#240
    # DEBUG __last => D#241
    # DEBUG __result => NULL
    # DEBUG D#239 => (long int) D#240
    # DEBUG D#238 => _158 - D#239
    _Num_73 = prephitmp_137 /[ex] 4;
    # DEBUG _Num => _Num_73
    if (_Num_73 != 0)
      goto <bb 38>;
    else
      goto <bb 37>;

  }
  bb_37 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 37>:
    pretmp_103 = (long unsigned int) prephitmp_137;
    goto <bb 39>;

  }
  bb_38 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 38>:
    _74 = (long unsigned int) prephitmp_137;
    # .MEM_94 = VDEF <.MEM_93>
    __builtin_memmove (iftmp.12_113, prephitmp_146, _74);

  }
  bb_39 (preds = {bb_37 bb_38 }, succs = {bb_41 bb_40 })
  {
    <bb 39>:
    # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
    # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
    # DEBUG D#237 => (long unsigned int) D#238
    # DEBUG __new_finish => iftmp.12_113 + D#237
    _25 = __n_2(D) * 4;
    _133 = _25 + prephitmp_102;
    __new_finish_26 = iftmp.12_113 + _133;
    # DEBUG __new_finish => __new_finish_26
    # DEBUG D#194 => &this_4(D)->D.34311
    # DEBUG this => D#194
    # DEBUG D#236 => this_4(D)->D.34311._M_impl._M_finish
    # DEBUG this => &__position
    # DEBUG __first => D#241
    # DEBUG __last => D#236
    # DEBUG __result => __new_finish_26
    # DEBUG __alloc => D#190
    # DEBUG D#189 => D#190
    # DEBUG D#186 => D#189
    # DEBUG __first => D#241
    # DEBUG __last => D#236
    # DEBUG __result => __new_finish_26
    # DEBUG D.41139 => D#186
    # DEBUG __first => D#241
    # DEBUG __last => D#236
    # DEBUG __result => __new_finish_26
    # DEBUG __assignable => 1
    # DEBUG __first => D#241
    # DEBUG __last => D#236
    # DEBUG __result => __new_finish_26
    # DEBUG __first => D#241
    # DEBUG __last => D#236
    # DEBUG __result => __new_finish_26
    # DEBUG __it => D#236
    # DEBUG __it => D#236
    # DEBUG __it => D#241
    # DEBUG __it => D#241
    # DEBUG __first => D#241
    # DEBUG __last => D#236
    # DEBUG __result => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => D#236
    # DEBUG __it => D#236
    # DEBUG __it => D#241
    # DEBUG __it => D#241
    # DEBUG __first => D#241
    # DEBUG __last => D#236
    # DEBUG __result => __new_finish_26
    # DEBUG __simple => 1
    # DEBUG __first => D#241
    # DEBUG __last => D#236
    # DEBUG __result => __new_finish_26
    _66 = prephitmp_121 - _158;
    _Num_67 = _66 /[ex] 4;
    # DEBUG _Num => _Num_67
    if (_Num_67 != 0)
      goto <bb 41>;
    else
      goto <bb 40>;

  }
  bb_40 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 40>:
    pretmp_162 = (long unsigned int) _66;
    goto <bb 42>;

  }
  bb_41 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 41>:
    _68 = (long unsigned int) _66;
    # .MEM_95 = VDEF <.MEM_90>
    __builtin_memcpy (__new_finish_26, __position_16, _68);

  }
  bb_42 (preds = {bb_40 bb_41 }, succs = {bb_43 bb_44 })
  {
    <bb 42>:
    # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
    # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
    _70 = __new_finish_26 + prephitmp_163;
    # DEBUG __new_finish => _70
    # DEBUG D#195 => &this_4(D)->D.34311
    # DEBUG this => D#195
    # DEBUG D#207 => this_4(D)->D.34311._M_impl._M_finish
    # DEBUG D#206 => this_4(D)->D.34311._M_impl._M_start
    # DEBUG __first => D#206
    # DEBUG __last => D#207
    # DEBUG D.41132 => NULL
    # DEBUG D#38 => D#206
    # DEBUG D#39 => D#207
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#205 => this_4(D)->D.34311._M_impl._M_end_of_storage
    # DEBUG D#204 => (long int) D#205
    # DEBUG D#203 => (long int) D#240
    # DEBUG D#202 => D#204 - D#203
    # DEBUG D#201 => D#202 /[ex] 4
    # DEBUG D#200 => (long unsigned int) D#201
    # DEBUG D#199 => &this_4(D)->D.34311
    # DEBUG this => D#199
    # DEBUG __p => D#240
    # DEBUG __n => D#200
    if (prephitmp_146 != 0B)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#86 => &D#199->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#200
    # DEBUG __p => D#240
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => D#240
    # DEBUG this => D#80
    # DEBUG D.41128 => D#81
    # .MEM_96 = VDEF <.MEM_91>
    operator delete (prephitmp_146);

  }
  bb_44 (preds = {bb_43 bb_42 }, succs = {bb_53 })
  {
    <bb 44>:
    # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>

  }
  bb_53 (preds = {bb_44 }, succs = {bb_45 })
  {
    <bb 53>:
    # .MEM_30 = VDEF <.MEM_92>
    this_4(D)->D.34311._M_impl._M_start = iftmp.12_113;
    # .MEM_31 = VDEF <.MEM_30>
    this_4(D)->D.34311._M_impl._M_finish = _70;
    # .MEM_34 = VDEF <.MEM_31>
    this_4(D)->D.34311._M_impl._M_end_of_storage = prephitmp_148;

  }
  bb_45 (preds = {bb_55 bb_53 }, succs = {bb_54 })
  {
    <bb 45>:
    # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>

  }
  bb_54 (preds = {bb_45 }, succs = {bb_1 })
  {
    <bb 54>:
    # VUSE <.MEM_1>
    return;

  }
  bb_46 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 46>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#44 => &this_4(D)->D.34311._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#44
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.38338
    # DEBUG this => &__position
    _144 = (long int) __position_16;
    # DEBUG this => &D.38338
    _143 = _144 - _116;
    # DEBUG D#209 => _143 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#209
    # DEBUG D#208 => &this_4(D)->D.34311
    # DEBUG D#135 => D#208
    # DEBUG __n => NULL
    # DEBUG this => D#135
    # DEBUG D#134 => D#135
    goto <bb 32>;

  }
  bb_47 (preds = {bb_30 }, succs = {bb_31 bb_33 })
  {
    <bb 47>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#44 => &this_4(D)->D.34311._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#44
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.38338
    # DEBUG this => &__position
    _151 = (long int) __position_16;
    # DEBUG this => &D.38338
    _150 = _151 - _116;
    # DEBUG D#209 => _150 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#209
    # DEBUG D#208 => &this_4(D)->D.34311
    # DEBUG D#135 => D#208
    # DEBUG __n => NULL
    # DEBUG this => D#135
    # DEBUG D#134 => D#135
    if (__len_124 != 0)
      goto <bb 31>;
    else
      goto <bb 33>;

  }
  loop_1 (header = 12, latch = 14, niter = ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_12 (preds = {bb_11 bb_14 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # __position_109 = PHI <__position_16(11), __position_55(14)>
      # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
      # DEBUG __first => __position_109
      # .MEM_98 = VDEF <.MEM_83>
      *__position_109 = __x_copy_35;
      __position_55 = __position_109 + 4;
      # DEBUG __first => __position_55
      # DEBUG __first => __position_55
      if (_48 == __position_55)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_12 }, succs = {bb_12 })
    {
      <bb 14>:
      goto <bb 12>;

    }
  }
  loop_2 (header = 25, latch = 27, niter = ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_25 (preds = {bb_24 bb_27 }, succs = {bb_26 bb_27 })
    {
      <bb 25>:
      # __position_110 = PHI <__position_16(24), __position_58(27)>
      # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
      # DEBUG __first => __position_110
      # .MEM_101 = VDEF <.MEM_136>
      *__position_110 = __x_copy_35;
      __position_58 = __position_110 + 4;
      # DEBUG __first => __position_58
      # DEBUG __first => __position_58
      if (__first_7 == __position_58)
        goto <bb 26>;
      else
        goto <bb 27>;

    }
    bb_27 (preds = {bb_25 }, succs = {bb_25 })
    {
      <bb 27>:
      goto <bb 25>;

    }
  }
  loop_3 (header = 17, latch = 19, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_17 (preds = {bb_16 bb_19 }, succs = {bb_18 bb_19 })
    {
      <bb 17>:
      # __n_111 = PHI <__n_50(16), __n_63(19)>
      # __first_76 = PHI <__first_7(16), __first_64(19)>
      # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
      # DEBUG __niter => __n_111
      # DEBUG __first => __first_76
      # .MEM_99 = VDEF <.MEM_81>
      *__first_76 = __x_copy_35;
      __n_63 = __n_111 + 18446744073709551615;
      # DEBUG __niter => __n_63
      __first_64 = __first_76 + 4;
      # DEBUG __first => __first_64
      # DEBUG __niter => __n_63
      # DEBUG __first => __first_64
      if (__n_63 == 0)
        goto <bb 18>;
      else
        goto <bb 19>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_17 })
    {
      <bb 19>:
      goto <bb 17>;

    }
  }
  loop_4 (header = 34, latch = 35, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_34 (preds = {bb_35 bb_52 }, succs = {bb_36 bb_35 })
    {
      <bb 34>:
      # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
      # __first_155 = PHI <__first_80(35), __first_20(52)>
      # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
      # DEBUG __niter => __n_132
      # DEBUG __first => __first_155
      # .MEM_93 = VDEF <.MEM_130>
      *__first_155 = _56;
      __n_79 = __n_132 + 18446744073709551615;
      # DEBUG __niter => __n_79
      __first_80 = __first_155 + 4;
      # DEBUG __first => __first_80
      # DEBUG __niter => __n_79
      # DEBUG __first => __first_80
      if (__n_79 == 0)
        goto <bb 36>;
      else
        goto <bb 35>;

    }
    bb_35 (preds = {bb_34 }, succs = {bb_34 })
    {
      <bb 35>:
      goto <bb 34>;

    }
  }
}

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.33506 * const thisD.34235, struct iteratorD.33879 __positionD.34236, size_typeD.33887 __nD.34237, const value_typeD.33874 & __xD.34238)
{
  const long unsigned intD.14 D.41840;
  const size_typeD.33887 __lenD.41834;
  size_typeD.33887 D.41839;
  size_typeD.33887 __nD.41832;
  intD.9 * D.41830;
  const ptrdiff_tD.2819 _NumD.41820;
  intD.9 * D.41821;
  intD.9 * const __positionD.41245;
  intD.9 * __firstD.41213;
  const ptrdiff_tD.2819 _NumD.41207;
  const ptrdiff_tD.2819 _NumD.41168;
  intD.9 * __firstD.41096;
  long unsigned intD.14 __nD.41097;
  intD.9 * __firstD.41047;
  const ptrdiff_tD.2819 _NumD.41043;
  intD.9 * __firstD.40996;
  intD.9 * __new_finishD.38340;
  const size_typeD.33887 __elems_afterD.38304;
  value_typeD.33874 __x_copyD.38303;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.38004 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.7_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.12_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#241ptD.0 => MEM[(struct __normal_iteratorD.33880 *)&__positionD.34236]
  # DEBUG __positionD.41245 => D#241ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 55, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 55, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.33880 *)&__positionD.34236];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.38303 => __x_copy_35
  # DEBUG thisD.40991 => this_4(D)
  # DEBUG D#22ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.40993 => NULL
  # DEBUG __iD.40992 => D#22ptD.0
  # DEBUG __lhsD.40988 => &D.38305
  # DEBUG __rhsD.40989 => &__positionD.34236
  # DEBUG thisD.39640 => &D.38305
  # DEBUG thisD.39638 => &__positionD.34236
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.33887) _22;
  # DEBUG __elems_afterD.38304 => __elems_after_37
  # DEBUG __old_finishD.38312 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#196ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41045 => D#196ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.41010 => _41
  # DEBUG __lastD.41011 => __first_7
  # DEBUG __resultD.41012 => __first_7
  # DEBUG __allocD.41013 => D#188ptD.0
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG __firstD.41017 => _41
  # DEBUG __lastD.41016 => __first_7
  # DEBUG __resultD.41015 => __first_7
  # DEBUG D.41014 => D#186ptD.0
  # DEBUG __firstD.41020 => _41
  # DEBUG __lastD.41019 => __first_7
  # DEBUG __resultD.41018 => __first_7
  # DEBUG __assignableD.41023 => 1
  # DEBUG __firstD.41026 => _41
  # DEBUG __lastD.41025 => __first_7
  # DEBUG __resultD.41024 => __first_7
  # DEBUG __firstD.41029 => _41
  # DEBUG __lastD.41028 => __first_7
  # DEBUG __resultD.41027 => __first_7
  # DEBUG __itD.40739 => __first_7
  # DEBUG __itD.40035 => __first_7
  # DEBUG __itD.40737 => _41
  # DEBUG __itD.40035 => _41
  # DEBUG __firstD.41032 => _41
  # DEBUG __lastD.41031 => __first_7
  # DEBUG __resultD.41030 => __first_7
  # DEBUG __itD.40719 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG __itD.40717 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG __itD.40715 => _41
  # DEBUG __itD.40038 => _41
  # DEBUG __firstD.41035 => _41
  # DEBUG __lastD.41034 => __first_7
  # DEBUG __resultD.41033 => __first_7
  # DEBUG __simpleD.41039 => 1
  # DEBUG __firstD.41042 => _41
  # DEBUG __lastD.41041 => __first_7
  # DEBUG __resultD.41040 => __first_7
  __first.7_49 = (long intD.12) _41;
  _47 = _8 - __first.7_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.41043 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _43;
  # DEBUG thisD.41008 => &__positionD.34236
  # DEBUG __firstD.41804 => D#241ptD.0
  # DEBUG __lastD.41805 => _41
  # DEBUG __resultD.41806 => __first_7
  # DEBUG __itD.40110 => _41
  # DEBUG __itD.40035 => _41
  # DEBUG __itD.40108 => D#241ptD.0
  # DEBUG __itD.40035 => D#241ptD.0
  # DEBUG __firstD.41809 => D#241ptD.0
  # DEBUG __lastD.41808 => _41
  # DEBUG __resultD.41807 => __first_7
  # DEBUG __itD.40090 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG __itD.40088 => _41
  # DEBUG __itD.40038 => _41
  # DEBUG __itD.40086 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG __firstD.41812 => D#241ptD.0
  # DEBUG __lastD.41811 => _41
  # DEBUG __resultD.41810 => __first_7
  # DEBUG __simpleD.41816 => 1
  # DEBUG __firstD.41819 => D#241ptD.0
  # DEBUG __lastD.41818 => _41
  # DEBUG __resultD.41817 => __first_7
  _104 = __first.7_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.41820 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.41006 => &__positionD.34236
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.41004 => &__positionD.34236
  # DEBUG D#121ptD.0 => &__x_copyD.38303
  # DEBUG __firstD.40996 => D#241ptD.0
  # DEBUG __lastD.40997 => _48
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __valueD.40999 => D#120ptD.0
  # DEBUG __itD.40048 => _48
  # DEBUG __itD.40038 => _48
  # DEBUG __itD.40046 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.41002 => D#241ptD.0
  # DEBUG __lastD.41001 => _48
  # DEBUG __valueD.41000 => D#119ptD.0
  # DEBUG __tmpD.41003 => __x_copy_35
  # DEBUG __firstD.41002 => D#241ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.41002 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.41002 => __position_55
  # DEBUG __firstD.41002 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 48, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
;;    succ:       48 [100.0%]  (FALLTHRU)

;;   basic block 48, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 48, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#197ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41118 => D#197ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#144ptD.0 => &__x_copyD.38303
  # DEBUG __firstD.41096 => __first_7
  # DEBUG __nD.41097 => __n_50
  # DEBUG D#143ptD.0 => D#144ptD.0
  # DEBUG __xD.41100 => D#143ptD.0
  # DEBUG D.41099 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  # DEBUG __firstD.41103 => __first_7
  # DEBUG __nD.41102 => __n_50
  # DEBUG D#141ptD.0 => D#142ptD.0
  # DEBUG __xD.41101 => D#141ptD.0
  # DEBUG __assignableD.41105 => 1
  # DEBUG D#140ptD.0 => D#141ptD.0
  # DEBUG __firstD.41108 => __first_7
  # DEBUG __nD.41107 => __n_50
  # DEBUG D#139ptD.0 => D#140ptD.0
  # DEBUG __xD.41106 => D#139ptD.0
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG __firstD.41111 => __first_7
  # DEBUG __nD.41110 => __n_50
  # DEBUG D#137ptD.0 => D#138ptD.0
  # DEBUG __valueD.41109 => D#137ptD.0
  # DEBUG __itD.40239 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG D#136ptD.0 => D#137ptD.0
  # DEBUG __firstD.41114 => __first_7
  # DEBUG __nD.41113 => __n_50
  # DEBUG __valueD.41112 => D#136ptD.0
  # DEBUG __tmpD.41115 => __x_copy_35
  # DEBUG __niterD.41116 => __n_50
  # DEBUG __niterD.41116 => __n_50
  # DEBUG __firstD.41114 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.41116 => __n_111
  # DEBUG __firstD.41114 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.41116 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.41114 => __first_64
  # DEBUG __niterD.41116 => __n_63
  # DEBUG __firstD.41114 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 50, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       50 [100.0%]  (FALLTHRU)

;;   basic block 50, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 50, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(50), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = __first_125;
  # DEBUG D#198ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41094 => D#198ptD.0
  # DEBUG thisD.41092 => &__positionD.34236
  # DEBUG __firstD.41057 => D#241ptD.0
  # DEBUG __lastD.41058 => __first_7
  # DEBUG __resultD.41059 => __first_125
  # DEBUG __allocD.41060 => D#188ptD.0
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG __firstD.41064 => D#241ptD.0
  # DEBUG __lastD.41063 => __first_7
  # DEBUG __resultD.41062 => __first_125
  # DEBUG D.41061 => D#186ptD.0
  # DEBUG __firstD.41067 => D#241ptD.0
  # DEBUG __lastD.41066 => __first_7
  # DEBUG __resultD.41065 => __first_125
  # DEBUG __assignableD.41070 => 1
  # DEBUG __firstD.41073 => D#241ptD.0
  # DEBUG __lastD.41072 => __first_7
  # DEBUG __resultD.41071 => __first_125
  # DEBUG __firstD.41076 => D#241ptD.0
  # DEBUG __lastD.41075 => __first_7
  # DEBUG __resultD.41074 => __first_125
  # DEBUG __itD.40739 => __first_7
  # DEBUG __itD.40035 => __first_7
  # DEBUG __itD.40737 => D#241ptD.0
  # DEBUG __itD.40035 => D#241ptD.0
  # DEBUG __firstD.41079 => D#241ptD.0
  # DEBUG __lastD.41078 => __first_7
  # DEBUG __resultD.41077 => __first_125
  # DEBUG __itD.40719 => __first_125
  # DEBUG __itD.40038 => __first_125
  # DEBUG __itD.40717 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG __itD.40715 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG __firstD.41082 => D#241ptD.0
  # DEBUG __lastD.41081 => __first_7
  # DEBUG __resultD.41080 => __first_125
  # DEBUG __simpleD.41086 => 1
  # DEBUG __firstD.41089 => D#241ptD.0
  # DEBUG __lastD.41088 => __first_7
  # DEBUG __resultD.41087 => __first_125
  # DEBUG _NumD.41090 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _53;
  # DEBUG thisD.41055 => &__positionD.34236
  # DEBUG D#121ptD.0 => &__x_copyD.38303
  # DEBUG __firstD.41047 => D#241ptD.0
  # DEBUG __lastD.41048 => __first_7
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __valueD.41050 => D#120ptD.0
  # DEBUG __itD.40048 => __first_7
  # DEBUG __itD.40038 => __first_7
  # DEBUG __itD.40046 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.41053 => D#241ptD.0
  # DEBUG __lastD.41052 => __first_7
  # DEBUG __valueD.41051 => D#119ptD.0
  # DEBUG __tmpD.41054 => __x_copy_35
  # DEBUG __firstD.41053 => D#241ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.41053 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.41053 => __position_58
  # DEBUG __firstD.41053 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 49, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
;;    succ:       49 [100.0%]  (FALLTHRU)

;;   basic block 49, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 49, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.41831 => this_4(D)
  # DEBUG __nD.41832 => __n_2(D)
  # DEBUG __nD.41832 => __n_2(D)
  # DEBUG __sD.41833 => "vector::_M_fill_insert"
  # DEBUG D#127ptD.0 => this_4(D)
  # DEBUG thisD.40146 => D#127ptD.0
  # DEBUG D#126ptD.0 => D#127ptD.0
  # DEBUG D#125ptD.0 => &D#126ptD.0->D.34311
  # DEBUG thisD.40136 => D#125ptD.0
  # DEBUG __aD.40128 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#123ptD.0
  # DEBUG thisD.40119 => D#122ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG thisD.41837 => D#21ptD.0
  # DEBUG thisD.41838 => D#21ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2860 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG thisD.40164 => D#21ptD.0
  # DEBUG thisD.40163 => D#21ptD.0
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG thisD.40159 => D#21ptD.0
  # DEBUG thisD.40158 => D#21ptD.0
  # DEBUG __aD.41836 => &D.41840
  # DEBUG __bD.41835 => &__nD.41832
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.41834 => __len_124
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG D#21ptD.0 => this_4(D)
  # DEBUG thisD.40151 => D#21ptD.0
  # DEBUG thisD.40150 => D#21ptD.0
  # DEBUG D#127ptD.0 => this_4(D)
  # DEBUG thisD.40166 => D#127ptD.0
  # DEBUG D#126ptD.0 => D#127ptD.0
  # DEBUG D#125ptD.0 => &D#126ptD.0->D.34311
  # DEBUG thisD.40136 => D#125ptD.0
  # DEBUG __aD.40128 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#123ptD.0
  # DEBUG thisD.40119 => D#122ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.38336 => NULL
  # DEBUG thisD.41240 => this_4(D)
  # DEBUG D#44ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41242 => NULL
  # DEBUG __iD.41241 => D#44ptD.0
  # DEBUG __lhsD.41237 => &__positionD.34236
  # DEBUG __rhsD.41238 => &D.38338
  # DEBUG thisD.39640 => &__positionD.34236
  # DEBUG thisD.39638 => &D.38338
  # DEBUG D#209ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.38337 => (const size_typeD.33887) D#209ptD.0
  # DEBUG D#208ptD.0 => &this_4(D)->D.34311
  # DEBUG D#135ptD.0 => D#208ptD.0
  # DEBUG __nD.41822 => NULL
  # DEBUG thisD.41823 => D#135ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0
  # DEBUG D#133ptD.0 => &D#134ptD.0->_M_implD.33802
  # DEBUG D#132ptD.0 => D#133ptD.0
  # DEBUG __nD.41826 => NULL
  # DEBUG __aD.41825 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  # DEBUG D#130ptD.0 => 0B
  # DEBUG __nD.41829 => NULL
  # DEBUG thisD.41827 => D#129ptD.0
  # DEBUG D.41828 => D#130ptD.0
  # DEBUG D#128ptD.0 => D#129ptD.0
  # DEBUG D#122ptD.0 => D#128ptD.0
  # DEBUG thisD.40171 => D#122ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.41843 } (escaped heap)
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.34311._M_implD.33802._M_startD.33804;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 52, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.41843 } (escaped heap)
  # iftmp.12_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.41843 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
;;    succ:       52 [100.0%]  (FALLTHRU)

;;   basic block 52, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 33, next block 34, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # DEBUG __new_startD.38339 => NULL
  # DEBUG __new_finishD.38340 => NULL
  # DEBUG D#192ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41235 => D#192ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.41843 } (escaped heap)
  __first_20 = iftmp.12_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#144ptD.0 => __x_21(D)
  # DEBUG __firstD.41213 => __first_20
  # DEBUG __nD.41214 => __n_2(D)
  # DEBUG D#143ptD.0 => D#144ptD.0
  # DEBUG __xD.41217 => D#143ptD.0
  # DEBUG D.41216 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  # DEBUG __firstD.41220 => __first_20
  # DEBUG __nD.41219 => __n_2(D)
  # DEBUG D#141ptD.0 => D#142ptD.0
  # DEBUG __xD.41218 => D#141ptD.0
  # DEBUG __assignableD.41222 => 1
  # DEBUG D#140ptD.0 => D#141ptD.0
  # DEBUG __firstD.41225 => __first_20
  # DEBUG __nD.41224 => __n_2(D)
  # DEBUG D#139ptD.0 => D#140ptD.0
  # DEBUG __xD.41223 => D#139ptD.0
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG __firstD.41228 => __first_20
  # DEBUG __nD.41227 => __n_2(D)
  # DEBUG D#137ptD.0 => D#138ptD.0
  # DEBUG __valueD.41226 => D#137ptD.0
  # DEBUG __itD.40239 => __first_20
  # DEBUG __itD.40038 => __first_20
  # DEBUG D#136ptD.0 => D#137ptD.0
  # DEBUG __firstD.41231 => __first_20
  # DEBUG __nD.41230 => __n_2(D)
  # DEBUG __valueD.41229 => D#136ptD.0
  # DEBUG __tmpD.41232 => _56
  # DEBUG __niterD.41233 => __n_2(D)
  # DEBUG __niterD.41233 => __n_2(D)
  # DEBUG __firstD.41231 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 52, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
  # PT = null { D.41843 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(52)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
  # DEBUG __niterD.41233 => __n_132
  # DEBUG __firstD.41231 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.41233 => __n_79
  # PT = null { D.41843 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.41231 => __first_80
  # DEBUG __niterD.41233 => __n_79
  # DEBUG __firstD.41231 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 51, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU)

;;   basic block 51, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 36, next block 37, flags: (NEW)
;;    pred:       36 [100.0%]  (FALLTHRU)
  # DEBUG __new_finishD.38340 => 0B
  # DEBUG D#193ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41211 => D#193ptD.0
  # DEBUG thisD.41209 => &__positionD.34236
  # DEBUG D#240ptD.0 => this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.41174 => D#240ptD.0
  # DEBUG __lastD.41175 => D#241ptD.0
  # DEBUG __resultD.41176 => NULL
  # DEBUG __allocD.41177 => D#190ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0
  # DEBUG D#186ptD.0 => D#189ptD.0
  # DEBUG __firstD.41181 => D#240ptD.0
  # DEBUG __lastD.41180 => D#241ptD.0
  # DEBUG __resultD.41179 => NULL
  # DEBUG D.41178 => D#186ptD.0
  # DEBUG __firstD.41184 => D#240ptD.0
  # DEBUG __lastD.41183 => D#241ptD.0
  # DEBUG __resultD.41182 => NULL
  # DEBUG __assignableD.41187 => 1
  # DEBUG __firstD.41190 => D#240ptD.0
  # DEBUG __lastD.41189 => D#241ptD.0
  # DEBUG __resultD.41188 => NULL
  # DEBUG __firstD.41193 => D#240ptD.0
  # DEBUG __lastD.41192 => D#241ptD.0
  # DEBUG __resultD.41191 => NULL
  # DEBUG __itD.40739 => D#241ptD.0
  # DEBUG __itD.40035 => D#241ptD.0
  # DEBUG __itD.40737 => D#240ptD.0
  # DEBUG __itD.40035 => D#240ptD.0
  # DEBUG __firstD.41196 => D#240ptD.0
  # DEBUG __lastD.41195 => D#241ptD.0
  # DEBUG __resultD.41194 => NULL
  # DEBUG __itD.40719 => NULL
  # DEBUG __itD.40038 => NULL
  # DEBUG __itD.40717 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG __itD.40715 => D#240ptD.0
  # DEBUG __itD.40038 => D#240ptD.0
  # DEBUG __firstD.41199 => D#240ptD.0
  # DEBUG __lastD.41198 => D#241ptD.0
  # DEBUG __resultD.41197 => NULL
  # DEBUG __simpleD.41203 => 1
  # DEBUG __firstD.41206 => D#240ptD.0
  # DEBUG __lastD.41205 => D#241ptD.0
  # DEBUG __resultD.41204 => NULL
  # DEBUG D#239ptD.0 => (long intD.12) D#240ptD.0
  # DEBUG D#238ptD.0 => _158 - D#239ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.41207 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 51, next block 38, flags: (NEW)
;;    pred:       51 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       51 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  memmoveD.995 (iftmp.12_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#237ptD.0 => (long unsigned intD.14) D#238ptD.0
  # DEBUG __new_finishD.38340 => iftmp.12_113 + D#237ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.41843 } (escaped heap)
  __new_finish_26 = iftmp.12_113 + _133;
  # DEBUG __new_finishD.38340 => __new_finish_26
  # DEBUG D#194ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41172 => D#194ptD.0
  # DEBUG D#236ptD.0 => this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41170 => &__positionD.34236
  # DEBUG __firstD.41135 => D#241ptD.0
  # DEBUG __lastD.41136 => D#236ptD.0
  # DEBUG __resultD.41137 => __new_finish_26
  # DEBUG __allocD.41138 => D#190ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0
  # DEBUG D#186ptD.0 => D#189ptD.0
  # DEBUG __firstD.41142 => D#241ptD.0
  # DEBUG __lastD.41141 => D#236ptD.0
  # DEBUG __resultD.41140 => __new_finish_26
  # DEBUG D.41139 => D#186ptD.0
  # DEBUG __firstD.41145 => D#241ptD.0
  # DEBUG __lastD.41144 => D#236ptD.0
  # DEBUG __resultD.41143 => __new_finish_26
  # DEBUG __assignableD.41148 => 1
  # DEBUG __firstD.41151 => D#241ptD.0
  # DEBUG __lastD.41150 => D#236ptD.0
  # DEBUG __resultD.41149 => __new_finish_26
  # DEBUG __firstD.41154 => D#241ptD.0
  # DEBUG __lastD.41153 => D#236ptD.0
  # DEBUG __resultD.41152 => __new_finish_26
  # DEBUG __itD.40739 => D#236ptD.0
  # DEBUG __itD.40035 => D#236ptD.0
  # DEBUG __itD.40737 => D#241ptD.0
  # DEBUG __itD.40035 => D#241ptD.0
  # DEBUG __firstD.41157 => D#241ptD.0
  # DEBUG __lastD.41156 => D#236ptD.0
  # DEBUG __resultD.41155 => __new_finish_26
  # DEBUG __itD.40719 => __new_finish_26
  # DEBUG __itD.40038 => __new_finish_26
  # DEBUG __itD.40717 => D#236ptD.0
  # DEBUG __itD.40038 => D#236ptD.0
  # DEBUG __itD.40715 => D#241ptD.0
  # DEBUG __itD.40038 => D#241ptD.0
  # DEBUG __firstD.41160 => D#241ptD.0
  # DEBUG __lastD.41159 => D#236ptD.0
  # DEBUG __resultD.41158 => __new_finish_26
  # DEBUG __simpleD.41164 => 1
  # DEBUG __firstD.41167 => D#241ptD.0
  # DEBUG __lastD.41166 => D#236ptD.0
  # DEBUG __resultD.41165 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.41168 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.41843 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.38340 => _70
  # DEBUG D#195ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41133 => D#195ptD.0
  # DEBUG D#207ptD.0 => this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#206ptD.0 => this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.41130 => D#206ptD.0
  # DEBUG __lastD.41131 => D#207ptD.0
  # DEBUG D.41132 => NULL
  # DEBUG D#38ptD.0 => D#206ptD.0
  # DEBUG D#39ptD.0 => D#207ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#205ptD.0 => this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#204ptD.0 => (long intD.12) D#205ptD.0
  # DEBUG D#203ptD.0 => (long intD.12) D#240ptD.0
  # DEBUG D#202ptD.0 => D#204ptD.0 - D#203ptD.0
  # DEBUG D#201ptD.0 => D#202ptD.0 /[ex] 4
  # DEBUG D#200ptD.0 => (long unsigned intD.14) D#201ptD.0
  # DEBUG D#199ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41120 => D#199ptD.0
  # DEBUG __pD.41121 => D#240ptD.0
  # DEBUG __nD.41122 => D#200ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#199ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#200ptD.0
  # DEBUG __pD.41126 => D#240ptD.0
  # DEBUG __aD.41124 => D#84ptD.0
  # DEBUG __nD.41125 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41129 => D#240ptD.0
  # DEBUG thisD.41127 => D#80ptD.0
  # DEBUG D.41128 => D#81ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.41843 } (escaped heap)
  # CLB = nonlocal null { D.41843 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 53, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
;;    succ:       53 [100.0%]  (FALLTHRU)

;;   basic block 53, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 44, next block 45, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU)
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.34311._M_implD.33802._M_startD.33804 = iftmp.12_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 53, next block 54, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>
;;    succ:       54 [100.0%]  (FALLTHRU)

;;   basic block 54, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 45, next block 46, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 54, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.38336 => NULL
  # DEBUG thisD.41240 => this_4(D)
  # DEBUG D#44ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41242 => NULL
  # DEBUG __iD.41241 => D#44ptD.0
  # DEBUG __lhsD.41237 => &__positionD.34236
  # DEBUG __rhsD.41238 => &D.38338
  # DEBUG thisD.39640 => &__positionD.34236
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.39638 => &D.38338
  _143 = _144 - _116;
  # DEBUG D#209ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.38337 => (const size_typeD.33887) D#209ptD.0
  # DEBUG D#208ptD.0 => &this_4(D)->D.34311
  # DEBUG D#135ptD.0 => D#208ptD.0
  # DEBUG __nD.41822 => NULL
  # DEBUG thisD.41823 => D#135ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.38336 => NULL
  # DEBUG thisD.41240 => this_4(D)
  # DEBUG D#44ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41242 => NULL
  # DEBUG __iD.41241 => D#44ptD.0
  # DEBUG __lhsD.41237 => &__positionD.34236
  # DEBUG __rhsD.41238 => &D.38338
  # DEBUG thisD.39640 => &__positionD.34236
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.39638 => &D.38338
  _150 = _151 - _116;
  # DEBUG D#209ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.38337 => (const size_typeD.33887) D#209ptD.0
  # DEBUG D#208ptD.0 => &this_4(D)->D.34311
  # DEBUG D#135ptD.0 => D#208ptD.0
  # DEBUG __nD.41822 => NULL
  # DEBUG thisD.41823 => D#135ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function LOA::LOA(Module*, const string&, int, int) (_ZN3LOAC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii, funcdef_no=1720, decl_uid=36951, cgraph_uid=423, symbol_order=424)


Pass statistics:
----------------

LOA::LOA(Module*, const string&, int, int) (struct LOAD.36919 * const thisD.36952, struct ModuleD.28688 * parentD.36953, const struct stringD.2845 & nameD.36954, intD.9 inputsD.36955, intD.9 outputsD.36956)
Eh tree:
   1 cleanup land:{1,<L4>}
     2 cleanup land:{2,<L3>}
       3 cleanup land:{3,<L2>}
         4 cleanup land:{4,<L1>}
           5 cleanup land:{8,<L7>},{7,<L6>},{6,<L5>},{5,<L8>}
{
  struct vectorD.34419 * __firstD.42013;
  struct iteratorD.33879 __positionD.41975;
  value_typeD.33874 __xD.41970;
  struct iteratorD.33879 __positionD.41964;
  value_typeD.33874 __xD.41959;
  struct iteratorD.33879 __positionD.41953;
  value_typeD.33874 __xD.41948;
  struct iteratorD.33879 __positionD.41942;
  value_typeD.33874 __xD.41937;
  struct DenseAllocatorD.34416 * _3;
  intD.9 * _11;
  long intD.12 pretmp_12;
  long unsigned intD.14 _15;
  struct vectorD.33506 * _16;
  long unsigned intD.14 _18;
  struct vectorD.33506 * _19;
  intD.9 * const _20;
  struct vectorD.33506 * _21;
  intD.9 * const _22;
  struct vectorD.33506 * _23;
  intD.9 * _24;
  intD.9 * _25;
  intD.9 * _26;
  intD.9 * _27;
  intD.9 * const prephitmp_28;
  struct ModuleD.28688 * * _68;
  struct vectorD.34419 * _69;
  long unsigned intD.14 _87;
  long unsigned intD.14 _88;
  intD.9 * _89;
  intD.9 * const _90;
  long intD.12 _91;
  long intD.12 _92;
  long intD.12 _93;
  long intD.12 _94;
  size_typeD.33887 _95;
  long unsigned intD.14 _96;
  long unsigned intD.14 _97;
  intD.9 * _98;
  intD.9 * const _99;
  long intD.12 _100;
  long intD.12 _101;
  long intD.12 _102;
  long intD.12 _103;
  size_typeD.33887 _104;
  long unsigned intD.14 _105;
  long unsigned intD.14 _106;
  intD.9 * _107;
  intD.9 * _108;
  struct sRequestD.34315 * _112;
  struct vectorD.34419 * _114;
  charD.10 * const _115;
  const charD.10 * _116;
  charD.10 * const _117;
  const charD.10 * _118;
  intD.9 * const pretmp_188;
  intD.9 * const prephitmp_189;
  intD.9 * const pretmp_190;
  long intD.12 pretmp_197;
  long intD.12 pretmp_201;
  size_typeD.33887 prephitmp_209;
  size_typeD.33887 pretmp_211;
  long intD.12 pretmp_214;

;;   basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _3 = &this_2(D)->D.36957;
  # .MEM_9 = VDEF <.MEM_4(D)>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZN14DenseAllocatorC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiD.35229 (_3, parent_5(D), name_6(D), inputs_7(D), outputs_8(D));
  # .MEM_10 = VDEF <.MEM_9>
  this_2(D)->D.36957.D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV3LOAD.36963 + 16B];
  # DEBUG D#218ptD.0 => &this_2(D)->_countsD.36921
  # DEBUG thisD.41292 => D#218ptD.0
  # DEBUG D#118ptD.0 => &D#218ptD.0->D.34311
  # DEBUG thisD.41293 => D#118ptD.0
  # DEBUG D#117ptD.0 => &D#118ptD.0->_M_implD.33802
  # DEBUG thisD.41294 => D#117ptD.0
  # DEBUG thisD.40016 => D#117ptD.0
  # DEBUG thisD.40014 => D#117ptD.0
  # .MEM_31 = VDEF <.MEM_10>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 184B]._M_startD.33804 = 0B;
  # .MEM_32 = VDEF <.MEM_31>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 184B]._M_finishD.33805 = 0B;
  # .MEM_33 = VDEF <.MEM_32>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 184B]._M_end_of_storageD.33806 = 0B;
  # DEBUG D#217ptD.0 => &this_2(D)->_reqD.36922
  # DEBUG thisD.41289 => D#217ptD.0
  # DEBUG D#118ptD.0 => &D#217ptD.0->D.34311
  # DEBUG thisD.41290 => D#118ptD.0
  # DEBUG D#117ptD.0 => &D#118ptD.0->_M_implD.33802
  # DEBUG thisD.41291 => D#117ptD.0
  # DEBUG thisD.40016 => D#117ptD.0
  # DEBUG thisD.40014 => D#117ptD.0
  # .MEM_34 = VDEF <.MEM_33>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 208B]._M_startD.33804 = 0B;
  # .MEM_35 = VDEF <.MEM_34>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 208B]._M_finishD.33805 = 0B;
  # .MEM_36 = VDEF <.MEM_35>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 208B]._M_end_of_storageD.33806 = 0B;
  # DEBUG D#216ptD.0 => &this_2(D)->_rptrD.36923
  # DEBUG thisD.41286 => D#216ptD.0
  # DEBUG D#118ptD.0 => &D#216ptD.0->D.34311
  # DEBUG thisD.41287 => D#118ptD.0
  # DEBUG D#117ptD.0 => &D#118ptD.0->_M_implD.33802
  # DEBUG thisD.41288 => D#117ptD.0
  # DEBUG thisD.40016 => D#117ptD.0
  # DEBUG thisD.40014 => D#117ptD.0
  # .MEM_37 = VDEF <.MEM_36>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 232B]._M_startD.33804 = 0B;
  # .MEM_38 = VDEF <.MEM_37>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 232B]._M_finishD.33805 = 0B;
  # .MEM_39 = VDEF <.MEM_38>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 232B]._M_end_of_storageD.33806 = 0B;
  # DEBUG D#215ptD.0 => &this_2(D)->_gptrD.36924
  # DEBUG thisD.41283 => D#215ptD.0
  # DEBUG D#118ptD.0 => &D#215ptD.0->D.34311
  # DEBUG thisD.41284 => D#118ptD.0
  # DEBUG D#117ptD.0 => &D#118ptD.0->_M_implD.33802
  # DEBUG thisD.41285 => D#117ptD.0
  # DEBUG thisD.40016 => D#117ptD.0
  # DEBUG thisD.40014 => D#117ptD.0
  # .MEM_40 = VDEF <.MEM_39>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 256B]._M_startD.33804 = 0B;
  # .MEM_41 = VDEF <.MEM_40>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 256B]._M_finishD.33805 = 0B;
  # .MEM_42 = VDEF <.MEM_41>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 256B]._M_end_of_storageD.33806 = 0B;
  # RANGE ~[2147483648, 18446744071562067967]
  _15 = (long unsigned intD.14) inputs_7(D);
  # DEBUG D#310ptD.0 => &this_2(D)->_reqD.36922
  # DEBUG thisD.41935 => D#310ptD.0
  # DEBUG __new_sizeD.41936 => _15
  # .MEM_131 = VDEF <.MEM_42>
  __xD.41937 = 0;
  # DEBUG __xD.41937 => __xD.41937
  # DEBUG D#21ptD.0 => D#310ptD.0
  # DEBUG D#21ptD.0 => D#310ptD.0
  # DEBUG thisD.41944 => D#21ptD.0
  # DEBUG thisD.41945 => D#21ptD.0
  if (_15 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#310ptD.0
  # DEBUG D#21ptD.0 => D#310ptD.0
  # DEBUG thisD.41270 => D#21ptD.0
  # DEBUG thisD.41269 => D#21ptD.0
  # DEBUG thisD.41263 => D#310ptD.0
  # DEBUG D#22ptD.0 => &D#310ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41265 => NULL
  # DEBUG __iD.41264 => D#22ptD.0
  # DEBUG thisD.41943 => D#310ptD.0
  # .MEM_133 = VDEF <.MEM_131>
  MEM[(struct __normal_iteratorD.33880 *)&__positionD.41942] = 0B;
  # DEBUG __nD.41941 => _15
  # DEBUG __xD.41940 => &__xD.41937
  # PT = nonlocal 
  _16 = &this_2(D)->_reqD.36922;
  [LP 6] # .MEM_134 = VDEF <.MEM_133>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34234 (_16, __positionD.41942, _15, &__xD.41937);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 (EH,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_134>
  pretmp_188 = MEM[(intD.9 * *)this_2(D) + 184B];
  # VUSE <.MEM_134>
  pretmp_190 = MEM[(intD.9 * *)this_2(D) + 192B];
  pretmp_12 = (long intD.12) pretmp_190;
  pretmp_214 = (long intD.12) pretmp_188;
  pretmp_201 = pretmp_12 - pretmp_214;
  pretmp_197 = pretmp_201 /[ex] 4;
  pretmp_211 = (size_typeD.33887) pretmp_197;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       2 [79.3%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_119 = PHI <.MEM_131(2), .MEM_134(4)>
  # PT = nonlocal escaped 
  # prephitmp_189 = PHI <0B(2), pretmp_188(4)>
  # PT = nonlocal escaped 
  # prephitmp_28 = PHI <0B(2), pretmp_190(4)>
  # RANGE ~[2305843009213693952, 16140901064495857663]
  # prephitmp_209 = PHI <0(2), pretmp_211(4)>
  # RANGE ~[2147483648, 18446744071562067967]
  _18 = (long unsigned intD.14) outputs_8(D);
  # DEBUG D#309ptD.0 => &this_2(D)->_countsD.36921
  # DEBUG thisD.41946 => D#309ptD.0
  # DEBUG __new_sizeD.41947 => _18
  # .MEM_135 = VDEF <.MEM_119>
  __xD.41948 = 0;
  # DEBUG __xD.41948 => __xD.41948
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG thisD.41955 => D#21ptD.0
  # DEBUG thisD.41956 => D#21ptD.0
  if (_18 > prephitmp_209)
    goto <bb 6>;
  else
    goto <bb 9>;
;;    succ:       6 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG thisD.41270 => D#21ptD.0
  # DEBUG thisD.41269 => D#21ptD.0
  # RANGE [1, 18446744073709551615]
  _87 = _18 - prephitmp_209;
  # DEBUG thisD.41263 => D#309ptD.0
  # DEBUG D#22ptD.0 => &D#309ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41265 => NULL
  # DEBUG __iD.41264 => D#22ptD.0
  # DEBUG thisD.41954 => D#309ptD.0
  # .MEM_137 = VDEF <.MEM_135>
  MEM[(struct __normal_iteratorD.33880 *)&__positionD.41953] = prephitmp_28;
  # DEBUG __nD.41952 => _87
  # DEBUG __xD.41951 => &__xD.41948
  # PT = nonlocal 
  _19 = &this_2(D)->_countsD.36921;
  [LP 7] # .MEM_138 = VDEF <.MEM_137>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34234 (_19, __positionD.41953, _87, &__xD.41948);
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 (EH,EXECUTABLE)
<L6>: [LP 7]
  goto <bb 25> (<L0>);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 5163, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_210 = PHI <.MEM_138(6), .MEM_135(9)>
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 7929, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       5 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG thisD.41275 => D#21ptD.0
  # DEBUG thisD.41274 => D#21ptD.0
  if (_18 < prephitmp_209)
    goto <bb 10>;
  else
    goto <bb 8>;
;;    succ:       10 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 4837, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _88 = _18 * 4;
  # PT = nonlocal escaped 
  _89 = prephitmp_189 + _88;
  # DEBUG D#43ptD.0 => D#309ptD.0
  # DEBUG __posD.41950 => _89
  # DEBUG D#42ptD.0 => D#43ptD.0
  # DEBUG thisD.41949 => D#42ptD.0
  # DEBUG D#40ptD.0 => &D#42ptD.0->D.34311
  # DEBUG thisD.39626 => D#40ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG __firstD.39616 => _89
  # DEBUG __lastD.39617 => D#41ptD.0
  # DEBUG D.39618 => NULL
  # DEBUG D#38ptD.0 => _89
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # .MEM_136 = VDEF <.MEM_135>
  MEM[(intD.9 * *)this_2(D) + 192B] = _89;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_120 = PHI <.MEM_136(10), .MEM_210(8)>
  # DEBUG D#308ptD.0 => &this_2(D)->_rptrD.36923
  # DEBUG thisD.41957 => D#308ptD.0
  # DEBUG __new_sizeD.41958 => _15
  # .MEM_139 = VDEF <.MEM_120>
  __xD.41959 = 0;
  # DEBUG __xD.41959 => __xD.41959
  # VUSE <.MEM_139>
  # PT = nonlocal escaped 
  _20 = MEM[(intD.9 * *)this_2(D) + 232B];
  # DEBUG D#21ptD.0 => D#308ptD.0
  # VUSE <.MEM_139>
  # PT = nonlocal escaped 
  _90 = MEM[(intD.9 * *)this_2(D) + 240B];
  # DEBUG D#21ptD.0 => D#308ptD.0
  # DEBUG thisD.41966 => D#21ptD.0
  # DEBUG thisD.41967 => D#21ptD.0
  _91 = (long intD.12) _90;
  _92 = (long intD.12) _20;
  _93 = _91 - _92;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _94 = _93 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _95 = (size_typeD.33887) _94;
  if (_15 > _95)
    goto <bb 12>;
  else
    goto <bb 15>;
;;    succ:       12 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#308ptD.0
  # DEBUG D#21ptD.0 => D#308ptD.0
  # DEBUG thisD.41270 => D#21ptD.0
  # DEBUG thisD.41269 => D#21ptD.0
  # RANGE [1, 18446744073709551615]
  _96 = _15 - _95;
  # DEBUG thisD.41263 => D#308ptD.0
  # DEBUG D#22ptD.0 => &D#308ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41265 => NULL
  # DEBUG __iD.41264 => D#22ptD.0
  # DEBUG thisD.41965 => D#308ptD.0
  # .MEM_141 = VDEF <.MEM_139>
  MEM[(struct __normal_iteratorD.33880 *)&__positionD.41964] = _90;
  # DEBUG __nD.41963 => _96
  # DEBUG __xD.41962 => &__xD.41959
  # PT = nonlocal 
  _21 = &this_2(D)->_rptrD.36923;
  [LP 8] # .MEM_142 = VDEF <.MEM_141>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34234 (_21, __positionD.41964, _96, &__xD.41959);
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 (EH,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 (EH,EXECUTABLE)
<L7>: [LP 8]
  goto <bb 25> (<L0>);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 5163, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_207 = PHI <.MEM_142(12), .MEM_139(15)>
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 7929, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       11 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#308ptD.0
  # DEBUG D#21ptD.0 => D#308ptD.0
  # DEBUG thisD.41275 => D#21ptD.0
  # DEBUG thisD.41274 => D#21ptD.0
  if (_15 < _95)
    goto <bb 16>;
  else
    goto <bb 14>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 4837, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _97 = _15 * 4;
  # PT = nonlocal escaped 
  _98 = _20 + _97;
  # DEBUG D#43ptD.0 => D#308ptD.0
  # DEBUG __posD.41961 => _98
  # DEBUG D#42ptD.0 => D#43ptD.0
  # DEBUG thisD.41960 => D#42ptD.0
  # DEBUG D#40ptD.0 => &D#42ptD.0->D.34311
  # DEBUG thisD.39626 => D#40ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG __firstD.39616 => _98
  # DEBUG __lastD.39617 => D#41ptD.0
  # DEBUG D.39618 => NULL
  # DEBUG D#38ptD.0 => _98
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # .MEM_140 = VDEF <.MEM_139>
  MEM[(intD.9 * *)this_2(D) + 240B] = _98;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_121 = PHI <.MEM_140(16), .MEM_207(14)>
  # DEBUG D#307ptD.0 => &this_2(D)->_gptrD.36924
  # DEBUG thisD.41968 => D#307ptD.0
  # DEBUG __new_sizeD.41969 => _18
  # .MEM_143 = VDEF <.MEM_121>
  __xD.41970 = 0;
  # DEBUG __xD.41970 => __xD.41970
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _22 = MEM[(intD.9 * *)this_2(D) + 256B];
  # DEBUG D#21ptD.0 => D#307ptD.0
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _99 = MEM[(intD.9 * *)this_2(D) + 264B];
  # DEBUG D#21ptD.0 => D#307ptD.0
  # DEBUG thisD.41977 => D#21ptD.0
  # DEBUG thisD.41978 => D#21ptD.0
  _100 = (long intD.12) _99;
  _101 = (long intD.12) _22;
  _102 = _100 - _101;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _103 = _102 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _104 = (size_typeD.33887) _103;
  if (_18 > _104)
    goto <bb 18>;
  else
    goto <bb 21>;
;;    succ:       18 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#307ptD.0
  # DEBUG D#21ptD.0 => D#307ptD.0
  # DEBUG thisD.41270 => D#21ptD.0
  # DEBUG thisD.41269 => D#21ptD.0
  # RANGE [1, 18446744073709551615]
  _105 = _18 - _104;
  # DEBUG thisD.41263 => D#307ptD.0
  # DEBUG D#22ptD.0 => &D#307ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41265 => NULL
  # DEBUG __iD.41264 => D#22ptD.0
  # DEBUG thisD.41976 => D#307ptD.0
  # .MEM_145 = VDEF <.MEM_143>
  MEM[(struct __normal_iteratorD.33880 *)&__positionD.41975] = _99;
  # DEBUG __nD.41974 => _105
  # DEBUG __xD.41973 => &__xD.41970
  # PT = nonlocal 
  _23 = &this_2(D)->_gptrD.36924;
  [LP 5] # .MEM_146 = VDEF <.MEM_145>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34234 (_23, __positionD.41975, _105, &__xD.41970);
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 (EH,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 (EH,EXECUTABLE)
<L8>: [LP 5]
  goto <bb 25> (<L0>);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 5163, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_206 = PHI <.MEM_146(18), .MEM_143(21)>
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 7929, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       17 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#307ptD.0
  # DEBUG D#21ptD.0 => D#307ptD.0
  # DEBUG thisD.41275 => D#21ptD.0
  # DEBUG thisD.41274 => D#21ptD.0
  if (_18 < _104)
    goto <bb 22>;
  else
    goto <bb 20>;
;;    succ:       22 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 4837, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _106 = _18 * 4;
  # PT = nonlocal escaped 
  _107 = _22 + _106;
  # DEBUG D#43ptD.0 => D#307ptD.0
  # DEBUG __posD.41972 => _107
  # DEBUG D#42ptD.0 => D#43ptD.0
  # DEBUG thisD.41971 => D#42ptD.0
  # DEBUG D#40ptD.0 => &D#42ptD.0->D.34311
  # DEBUG thisD.39626 => D#40ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG __firstD.39616 => _107
  # DEBUG __lastD.39617 => D#41ptD.0
  # DEBUG D.39618 => NULL
  # DEBUG D#38ptD.0 => _107
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # .MEM_144 = VDEF <.MEM_143>
  MEM[(intD.9 * *)this_2(D) + 264B] = _107;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_122 = PHI <.MEM_144(22), .MEM_206(20)>
  # VUSE <.MEM_122>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 24, loop depth 0, count 0, freq 0
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       3 (EH,EXECUTABLE)
<L5>: [LP 6]
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_134(24), .MEM_138(7), .MEM_142(13), .MEM_146(19)>
<L0>:
  # DEBUG D#214ptD.0 => &this_2(D)->_gptrD.36924
  # DEBUG thisD.41295 => D#214ptD.0
  # DEBUG D#94ptD.0 => &D#214ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#214ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#214ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#214ptD.0->D.34311
  # DEBUG thisD.41296 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_1>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 256B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _11
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41299 => D#95ptD.0
  # DEBUG __pD.41298 => _11
  # DEBUG __nD.41297 => D#88ptD.0
  if (_11 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41303 => _11
  # DEBUG __aD.41301 => D#84ptD.0
  # DEBUG __nD.41302 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41306 => _11
  # DEBUG thisD.41304 => D#80ptD.0
  # DEBUG D.41305 => D#81ptD.0
  # .MEM_43 = VDEF <.MEM_1>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_11);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_1(25), .MEM_43(26)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41307 => D#87ptD.0
  # DEBUG thisD.41308 => D#87ptD.0
  # DEBUG thisD.41309 => D#87ptD.0
  # .MEM_48 = VDEF <.MEM_29>
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  [LP 4] resx 5
;;    succ:       28 (EH,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 (EH,EXECUTABLE)
<L1>: [LP 4]
  # DEBUG D#213ptD.0 => &this_2(D)->_rptrD.36923
  # DEBUG thisD.41310 => D#213ptD.0
  # DEBUG D#94ptD.0 => &D#213ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#213ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#213ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#213ptD.0->D.34311
  # DEBUG thisD.41311 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_48>
  # PT = nonlocal escaped 
  _25 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 232B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _25
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41314 => D#95ptD.0
  # DEBUG __pD.41313 => _25
  # DEBUG __nD.41312 => D#88ptD.0
  if (_25 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41318 => _25
  # DEBUG __aD.41316 => D#84ptD.0
  # DEBUG __nD.41317 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41321 => _25
  # DEBUG thisD.41319 => D#80ptD.0
  # DEBUG D.41320 => D#81ptD.0
  # .MEM_49 = VDEF <.MEM_48>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_48(28), .MEM_49(29)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41322 => D#87ptD.0
  # DEBUG thisD.41323 => D#87ptD.0
  # DEBUG thisD.41324 => D#87ptD.0
  # .MEM_54 = VDEF <.MEM_13>
  MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
  [LP 3] resx 4
;;    succ:       31 (EH,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 0
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 (EH,EXECUTABLE)
<L2>: [LP 3]
  # DEBUG D#212ptD.0 => &this_2(D)->_reqD.36922
  # DEBUG thisD.41325 => D#212ptD.0
  # DEBUG D#94ptD.0 => &D#212ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#212ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#212ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#212ptD.0->D.34311
  # DEBUG thisD.41326 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_54>
  # PT = nonlocal escaped 
  _26 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 208B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _26
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41329 => D#95ptD.0
  # DEBUG __pD.41328 => _26
  # DEBUG __nD.41327 => D#88ptD.0
  if (_26 != 0B)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 0
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41333 => _26
  # DEBUG __aD.41331 => D#84ptD.0
  # DEBUG __nD.41332 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41336 => _26
  # DEBUG thisD.41334 => D#80ptD.0
  # DEBUG D.41335 => D#81ptD.0
  # .MEM_55 = VDEF <.MEM_54>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       31 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_54(31), .MEM_55(32)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41337 => D#87ptD.0
  # DEBUG thisD.41338 => D#87ptD.0
  # DEBUG thisD.41339 => D#87ptD.0
  # .MEM_60 = VDEF <.MEM_14>
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  [LP 2] resx 3
;;    succ:       34 (EH,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 (EH,EXECUTABLE)
<L3>: [LP 2]
  # DEBUG D#211ptD.0 => &this_2(D)->_countsD.36921
  # DEBUG thisD.41340 => D#211ptD.0
  # DEBUG D#94ptD.0 => &D#211ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#211ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#211ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#211ptD.0->D.34311
  # DEBUG thisD.41341 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_60>
  # PT = nonlocal escaped 
  _27 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 184B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _27
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41344 => D#95ptD.0
  # DEBUG __pD.41343 => _27
  # DEBUG __nD.41342 => D#88ptD.0
  if (_27 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41348 => _27
  # DEBUG __aD.41346 => D#84ptD.0
  # DEBUG __nD.41347 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41351 => _27
  # DEBUG thisD.41349 => D#80ptD.0
  # DEBUG D.41350 => D#81ptD.0
  # .MEM_61 = VDEF <.MEM_60>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_27);
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_60(34), .MEM_61(35)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41352 => D#87ptD.0
  # DEBUG thisD.41353 => D#87ptD.0
  # DEBUG thisD.41354 => D#87ptD.0
  # .MEM_66 = VDEF <.MEM_30>
  MEM[(struct  &)this_2(D) + 184] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       37 (EH,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 0
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 (EH,EXECUTABLE)
<L4>: [LP 1]
  # DEBUG D#210ptD.0 => &this_2(D)->D.36957
  # DEBUG thisD.41355 => D#210ptD.0
  # .MEM_67 = VDEF <.MEM_66>
  MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#306ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)]._requestD.35166
  # DEBUG thisD.42010 => D#306ptD.0
  # DEBUG D#179ptD.0 => &D#306ptD.0->D.35164
  # DEBUG thisD.40627 => D#179ptD.0
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  _69 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  __first_110 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.42013 => __first_110
  # DEBUG __lastD.42012 => _69
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 0
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_111 = PHI <__first_110(37), __first_113(41)>
  # .MEM_123 = PHI <.MEM_67(37), .MEM_152(41)>
  # DEBUG __firstD.42018 => __first_111
  if (_69 == __first_111)
    goto <bb 42>;
  else
    goto <bb 39>;
;;    succ:       42 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 0
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.40517 => __first_111
  # DEBUG __pointerD.42019 => NULL
  # DEBUG thisD.42020 => NULL
  # DEBUG thisD.40482 => D#174ptD.0
  # DEBUG D#154ptD.0 => D#176ptD.0
  # DEBUG D#155ptD.0 => D#177ptD.0
  # DEBUG __firstD.40481 => D#154ptD.0
  # DEBUG __lastD.40480 => D#155ptD.0
  # DEBUG D.40479 => D#156ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#150ptD.0 => D#152ptD.0
  # DEBUG D#151ptD.0 => D#153ptD.0
  # DEBUG __firstD.40393 => D#150ptD.0
  # DEBUG __lastD.40392 => D#151ptD.0
  # DEBUG D#149ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D.40382 => D#146ptD.0
  # DEBUG D.40381 => D#147ptD.0
  # DEBUG thisD.42021 => D#175ptD.0
  # DEBUG D#173ptD.0 => D#175ptD.0->_M_implD.37299._M_end_of_storageD.37303
  # DEBUG D#172ptD.0 => (long intD.12) D#173ptD.0
  # VUSE <.MEM_123>
  # PT = nonlocal escaped 
  _112 = MEM[(struct _Vector_baseD.37066 *)__first_111]._M_implD.37299._M_startD.37301;
  # DEBUG D#171ptD.0 => (long intD.12) _112
  # DEBUG D#170ptD.0 => D#172ptD.0 - D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0 /[ex] 16
  # DEBUG D#166ptD.0 => D#175ptD.0
  # DEBUG D#167ptD.0 => (long unsigned intD.14) D#169ptD.0
  # DEBUG __pD.42024 => _112
  # DEBUG thisD.42022 => D#166ptD.0
  # DEBUG __nD.42023 => D#167ptD.0
  # DEBUG D#165ptD.0 => D#167ptD.0
  # DEBUG D#164ptD.0 => D#166ptD.0
  if (_112 != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 0
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#163ptD.0 => &D#164ptD.0->_M_implD.37299
  # DEBUG D#161ptD.0 => D#163ptD.0
  # DEBUG D#162ptD.0 => D#165ptD.0
  # DEBUG __pD.42028 => _112
  # DEBUG __aD.42026 => D#161ptD.0
  # DEBUG __nD.42027 => D#162ptD.0
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG __pD.42031 => _112
  # DEBUG thisD.42029 => D#157ptD.0
  # DEBUG D.42030 => D#158ptD.0
  # .MEM_147 = VDEF <.MEM_123>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_112);
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 0
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_124 = PHI <.MEM_123(39), .MEM_147(40)>
  # DEBUG D#168ptD.0 => &D#175ptD.0->_M_implD.37299
  # DEBUG thisD.42032 => D#168ptD.0
  # DEBUG thisD.42033 => D#168ptD.0
  # DEBUG thisD.42034 => D#168ptD.0
  # .MEM_152 = VDEF <.MEM_124>
  MEM[(struct  &)__first_111] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_113 = __first_111 + 24;
  # DEBUG __firstD.42018 => __first_113
  goto <bb 38>;
;;    succ:       38 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 0
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       38 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#180ptD.0 => &D#306ptD.0->D.35164
  # DEBUG thisD.42035 => D#180ptD.0
  # DEBUG D#116ptD.0 => D#180ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#115ptD.0 => (long intD.12) D#116ptD.0
  # VUSE <.MEM_123>
  # PT = nonlocal escaped 
  _114 = MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657;
  # DEBUG D#114ptD.0 => (long intD.12) _114
  # DEBUG D#113ptD.0 => D#115ptD.0 - D#114ptD.0
  # DEBUG D#112ptD.0 => D#113ptD.0 /[ex] 24
  # DEBUG D#109ptD.0 => D#180ptD.0
  # DEBUG D#110ptD.0 => (long unsigned intD.14) D#112ptD.0
  # DEBUG __pD.42038 => _114
  # DEBUG thisD.42036 => D#109ptD.0
  # DEBUG __nD.42037 => D#110ptD.0
  # DEBUG D#108ptD.0 => D#110ptD.0
  # DEBUG D#107ptD.0 => D#109ptD.0
  if (_114 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 0
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#106ptD.0 => &D#107ptD.0->_M_implD.34655
  # DEBUG D#104ptD.0 => D#106ptD.0
  # DEBUG D#105ptD.0 => D#108ptD.0
  # DEBUG __pD.42042 => _114
  # DEBUG __aD.42040 => D#104ptD.0
  # DEBUG __nD.42041 => D#105ptD.0
  # DEBUG D#103ptD.0 => D#105ptD.0
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG __pD.42045 => _114
  # DEBUG thisD.42043 => D#100ptD.0
  # DEBUG D.42044 => D#101ptD.0
  # .MEM_153 = VDEF <.MEM_123>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_114);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       42 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_125 = PHI <.MEM_123(42), .MEM_153(43)>
  # DEBUG D#111ptD.0 => &D#180ptD.0->_M_implD.34655
  # DEBUG thisD.42046 => D#111ptD.0
  # DEBUG thisD.42047 => D#111ptD.0
  # DEBUG thisD.42048 => D#111ptD.0
  # .MEM_158 = VDEF <.MEM_125>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#305ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235
  # DEBUG thisD.41979 => D#305ptD.0
  # .MEM_159 = VDEF <.MEM_158>
  MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#99ptD.0 => &D#305ptD.0->_outmatchD.34314
  # DEBUG thisD.41980 => D#99ptD.0
  # DEBUG D#94ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.41981 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_159>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _24
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41984 => D#95ptD.0
  # DEBUG __pD.41983 => _24
  # DEBUG __nD.41982 => D#88ptD.0
  if (_24 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41988 => _24
  # DEBUG __aD.41986 => D#84ptD.0
  # DEBUG __nD.41987 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41991 => _24
  # DEBUG thisD.41989 => D#80ptD.0
  # DEBUG D.41990 => D#81ptD.0
  # .MEM_160 = VDEF <.MEM_159>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       44 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_126 = PHI <.MEM_159(44), .MEM_160(45)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41992 => D#87ptD.0
  # DEBUG thisD.41993 => D#87ptD.0
  # DEBUG thisD.41994 => D#87ptD.0
  # .MEM_165 = VDEF <.MEM_126>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#98ptD.0 => &D#305ptD.0->_inmatchD.34313
  # DEBUG thisD.41995 => D#98ptD.0
  # DEBUG D#94ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.41996 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_165>
  # PT = nonlocal escaped 
  _108 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _108
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41999 => D#95ptD.0
  # DEBUG __pD.41998 => _108
  # DEBUG __nD.41997 => D#88ptD.0
  if (_108 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;
;;    succ:       47 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       46 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.42003 => _108
  # DEBUG __aD.42001 => D#84ptD.0
  # DEBUG __nD.42002 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.42006 => _108
  # DEBUG thisD.42004 => D#80ptD.0
  # DEBUG D.42005 => D#81ptD.0
  # .MEM_166 = VDEF <.MEM_165>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_108);
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       46 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_127 = PHI <.MEM_165(46), .MEM_166(47)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.42007 => D#87ptD.0
  # DEBUG thisD.42008 => D#87ptD.0
  # DEBUG thisD.42009 => D#87ptD.0
  # .MEM_171 = VDEF <.MEM_127>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#304ptD.0 => &MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407
  # DEBUG thisD.42049 => D#304ptD.0
  # .MEM_172 = VDEF <.MEM_171>
  MEM[(struct ModuleD.28688 *)this_2(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#79ptD.0 => &D#304ptD.0->_childrenD.29438
  # DEBUG thisD.42050 => D#79ptD.0
  # DEBUG D#73ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.39805 => D#73ptD.0
  # DEBUG D#76ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#75ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#31ptD.0 => D#75ptD.0
  # DEBUG D#32ptD.0 => D#76ptD.0
  # DEBUG __firstD.39804 => D#31ptD.0
  # DEBUG __lastD.39803 => D#32ptD.0
  # DEBUG D.39802 => D#33ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __firstD.39575 => D#27ptD.0
  # DEBUG __lastD.39574 => D#28ptD.0
  # DEBUG D#26ptD.0 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D.39564 => D#23ptD.0
  # DEBUG D.39563 => D#24ptD.0
  # DEBUG D#74ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.42051 => D#74ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#71ptD.0 => (long intD.12) D#72ptD.0
  # VUSE <.MEM_172>
  # PT = nonlocal escaped 
  _68 = MEM[(struct _Vector_baseD.28694 *)this_2(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#70ptD.0 => (long intD.12) _68
  # DEBUG D#69ptD.0 => D#71ptD.0 - D#70ptD.0
  # DEBUG D#68ptD.0 => D#69ptD.0 /[ex] 8
  # DEBUG D#65ptD.0 => D#74ptD.0
  # DEBUG D#66ptD.0 => (long unsigned intD.14) D#68ptD.0
  # DEBUG __pD.42054 => _68
  # DEBUG thisD.42052 => D#65ptD.0
  # DEBUG __nD.42053 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  if (_68 != 0B)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => &D#63ptD.0->_M_implD.28927
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#64ptD.0
  # DEBUG __pD.42058 => _68
  # DEBUG __aD.42056 => D#60ptD.0
  # DEBUG __nD.42057 => D#61ptD.0
  # DEBUG D#59ptD.0 => D#61ptD.0
  # DEBUG D#58ptD.0 => D#60ptD.0
  # DEBUG D#56ptD.0 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#59ptD.0
  # DEBUG __pD.42061 => _68
  # DEBUG thisD.42059 => D#56ptD.0
  # DEBUG D.42060 => D#57ptD.0
  # .MEM_173 = VDEF <.MEM_172>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_68);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       48 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_128 = PHI <.MEM_172(48), .MEM_173(49)>
  # DEBUG D#67ptD.0 => &D#74ptD.0->_M_implD.28927
  # DEBUG thisD.42062 => D#67ptD.0
  # DEBUG thisD.42063 => D#67ptD.0
  # DEBUG thisD.42064 => D#67ptD.0
  # .MEM_178 = VDEF <.MEM_128>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#78ptD.0 => &D#304ptD.0->_fullnameD.28691
  # DEBUG thisD.42065 => D#78ptD.0
  # DEBUG thisD.42066 => D#78ptD.0
  # DEBUG thisD.42075 => D#78ptD.0
  # VUSE <.MEM_178>
  # PT = nonlocal escaped 
  _115 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.42076 => D#78ptD.0
  # PT = nonlocal 
  _116 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_115 != _116)
    goto <bb 51>;
  else
    goto <bb 52>;
;;    succ:       51 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#78ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.42068 => D#78ptD.0
  # DEBUG __sizeD.42067 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#78ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.42071 => _115
  # DEBUG __aD.42069 => D#49ptD.0
  # DEBUG __nD.42070 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.42074 => _115
  # DEBUG thisD.42072 => D#45ptD.0
  # DEBUG D.42073 => D#46ptD.0
  # .MEM_179 = VDEF <.MEM_178>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_115);
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       50 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_129 = PHI <.MEM_178(50), .MEM_179(51)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG thisD.42077 => D#55ptD.0
  # DEBUG thisD.42078 => D#55ptD.0
  # DEBUG thisD.42079 => D#55ptD.0
  # .MEM_183 = VDEF <.MEM_129>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#77ptD.0 => &D#304ptD.0->_nameD.28690
  # DEBUG thisD.42080 => D#77ptD.0
  # DEBUG thisD.42081 => D#77ptD.0
  # DEBUG thisD.42090 => D#77ptD.0
  # VUSE <.MEM_183>
  # PT = nonlocal escaped 
  _117 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.42091 => D#77ptD.0
  # PT = nonlocal 
  _118 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_117 != _118)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#77ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.42083 => D#77ptD.0
  # DEBUG __sizeD.42082 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#77ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.42086 => _117
  # DEBUG __aD.42084 => D#49ptD.0
  # DEBUG __nD.42085 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.42089 => _117
  # DEBUG thisD.42087 => D#45ptD.0
  # DEBUG D.42088 => D#46ptD.0
  # .MEM_184 = VDEF <.MEM_183>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_117);
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0
;;    prev block 53, next block 1, flags: (NEW, REACHABLE)
;;    pred:       52 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_130 = PHI <.MEM_183(52), .MEM_184(53)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG thisD.42092 => D#55ptD.0
  # DEBUG thisD.42093 => D#55ptD.0
  # DEBUG thisD.42094 => D#55ptD.0
  # .MEM_70 = VDEF <.MEM_130>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for MEM[(int * *)this_2(D) + 184B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 184B]
Creating dr for MEM[(int * *)this_2(D) + 192B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 192B]
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 256
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 256B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 232B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 232
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 232B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 208B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 208B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 184B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 184B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct DenseAllocator *)this_2(D)].D.35235.D.34407._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct DenseAllocator *)this_2(D)]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 168
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 160B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 160B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Vector_base *)__first_111]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_110
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_110]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_111]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_110
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_110]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_110, + , 24](no_overflow) != _69
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551615
  result:
    under assumptions ((unsigned long) _69 - (unsigned long) __first_110 & 7) == 0
    # of iterations (((unsigned long) _69 - (unsigned long) __first_110) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)__first_111]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_110
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_110]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_111]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_110
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_110]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_110, + , 24](no_overflow) != _69
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551615
  result:
    under assumptions ((unsigned long) _69 - (unsigned long) __first_110 & 7) == 0
    # of iterations (((unsigned long) _69 - (unsigned long) __first_110) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 160B]
	Access function 0: 0
	Access function 1: 0
Creating dr for __x
analyze_innermost: success.
	base_address: &__x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int *)&__x]
Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for MEM[(int * *)this_2(D) + 192B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 192B]
Creating dr for __x
analyze_innermost: success.
	base_address: &__x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int *)&__x]
Creating dr for MEM[(int * *)this_2(D) + 232B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 232
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 232B]
Creating dr for MEM[(int * *)this_2(D) + 240B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 240
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 240B]
Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for MEM[(int * *)this_2(D) + 240B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 240
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 240B]
Creating dr for __x
analyze_innermost: success.
	base_address: &__x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int *)&__x]
Creating dr for MEM[(int * *)this_2(D) + 256B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 256
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 256B]
Creating dr for MEM[(int * *)this_2(D) + 264B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 264
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 264B]
Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for MEM[(int * *)this_2(D) + 264B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 264
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 264B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:7)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:12)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:23)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:23)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:23)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:60, LOOPS:1, CONDITIONS:23, STMTS:817)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_5 })
  {
    <bb 2>:
    _3 = &this_2(D)->D.36957;
    # .MEM_9 = VDEF <.MEM_4(D)>
    DenseAllocator::DenseAllocator (_3, parent_5(D), name_6(D), inputs_7(D), outputs_8(D));
    # .MEM_10 = VDEF <.MEM_9>
    this_2(D)->D.36957.D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV3LOA + 16B];
    # DEBUG D#218 => &this_2(D)->_counts
    # DEBUG this => D#218
    # DEBUG D#118 => &D#218->D.34311
    # DEBUG this => D#118
    # DEBUG D#117 => &D#118->_M_impl
    # DEBUG this => D#117
    # DEBUG this => D#117
    # DEBUG this => D#117
    # .MEM_31 = VDEF <.MEM_10>
    MEM[(struct _Vector_impl *)this_2(D) + 184B]._M_start = 0B;
    # .MEM_32 = VDEF <.MEM_31>
    MEM[(struct _Vector_impl *)this_2(D) + 184B]._M_finish = 0B;
    # .MEM_33 = VDEF <.MEM_32>
    MEM[(struct _Vector_impl *)this_2(D) + 184B]._M_end_of_storage = 0B;
    # DEBUG D#217 => &this_2(D)->_req
    # DEBUG this => D#217
    # DEBUG D#118 => &D#217->D.34311
    # DEBUG this => D#118
    # DEBUG D#117 => &D#118->_M_impl
    # DEBUG this => D#117
    # DEBUG this => D#117
    # DEBUG this => D#117
    # .MEM_34 = VDEF <.MEM_33>
    MEM[(struct _Vector_impl *)this_2(D) + 208B]._M_start = 0B;
    # .MEM_35 = VDEF <.MEM_34>
    MEM[(struct _Vector_impl *)this_2(D) + 208B]._M_finish = 0B;
    # .MEM_36 = VDEF <.MEM_35>
    MEM[(struct _Vector_impl *)this_2(D) + 208B]._M_end_of_storage = 0B;
    # DEBUG D#216 => &this_2(D)->_rptr
    # DEBUG this => D#216
    # DEBUG D#118 => &D#216->D.34311
    # DEBUG this => D#118
    # DEBUG D#117 => &D#118->_M_impl
    # DEBUG this => D#117
    # DEBUG this => D#117
    # DEBUG this => D#117
    # .MEM_37 = VDEF <.MEM_36>
    MEM[(struct _Vector_impl *)this_2(D) + 232B]._M_start = 0B;
    # .MEM_38 = VDEF <.MEM_37>
    MEM[(struct _Vector_impl *)this_2(D) + 232B]._M_finish = 0B;
    # .MEM_39 = VDEF <.MEM_38>
    MEM[(struct _Vector_impl *)this_2(D) + 232B]._M_end_of_storage = 0B;
    # DEBUG D#215 => &this_2(D)->_gptr
    # DEBUG this => D#215
    # DEBUG D#118 => &D#215->D.34311
    # DEBUG this => D#118
    # DEBUG D#117 => &D#118->_M_impl
    # DEBUG this => D#117
    # DEBUG this => D#117
    # DEBUG this => D#117
    # .MEM_40 = VDEF <.MEM_39>
    MEM[(struct _Vector_impl *)this_2(D) + 256B]._M_start = 0B;
    # .MEM_41 = VDEF <.MEM_40>
    MEM[(struct _Vector_impl *)this_2(D) + 256B]._M_finish = 0B;
    # .MEM_42 = VDEF <.MEM_41>
    MEM[(struct _Vector_impl *)this_2(D) + 256B]._M_end_of_storage = 0B;
    _15 = (long unsigned int) inputs_7(D);
    # DEBUG D#310 => &this_2(D)->_req
    # DEBUG this => D#310
    # DEBUG __new_size => _15
    # .MEM_131 = VDEF <.MEM_42>
    __x = 0;
    # DEBUG __x => __x
    # DEBUG D#21 => D#310
    # DEBUG D#21 => D#310
    # DEBUG this => D#21
    # DEBUG this => D#21
    if (_15 != 0)
      goto <bb 3>;
    else
      goto <bb 5>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 bb_24 })
  {
    <bb 3>:
    # DEBUG D#21 => D#310
    # DEBUG D#21 => D#310
    # DEBUG this => D#21
    # DEBUG this => D#21
    # DEBUG this => D#310
    # DEBUG D#22 => &D#310->D.34311._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#22
    # DEBUG this => D#310
    # .MEM_133 = VDEF <.MEM_131>
    MEM[(struct __normal_iterator *)&__position] = 0B;
    # DEBUG __n => _15
    # DEBUG __x => &__x
    _16 = &this_2(D)->_req;
    # .MEM_134 = VDEF <.MEM_133>
    std::vector<int>::_M_fill_insert (_16, __position, _15, &__x);

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 })
  {
    <bb 4>:
    # VUSE <.MEM_134>
    pretmp_188 = MEM[(int * *)this_2(D) + 184B];
    # VUSE <.MEM_134>
    pretmp_190 = MEM[(int * *)this_2(D) + 192B];
    pretmp_12 = (long int) pretmp_190;
    pretmp_214 = (long int) pretmp_188;
    pretmp_201 = pretmp_12 - pretmp_214;
    pretmp_197 = pretmp_201 /[ex] 4;
    pretmp_211 = (size_type) pretmp_197;

  }
  bb_5 (preds = {bb_2 bb_4 }, succs = {bb_6 bb_9 })
  {
    <bb 5>:
    # .MEM_119 = PHI <.MEM_131(2), .MEM_134(4)>
    # prephitmp_189 = PHI <0B(2), pretmp_188(4)>
    # prephitmp_28 = PHI <0B(2), pretmp_190(4)>
    # prephitmp_209 = PHI <0(2), pretmp_211(4)>
    _18 = (long unsigned int) outputs_8(D);
    # DEBUG D#309 => &this_2(D)->_counts
    # DEBUG this => D#309
    # DEBUG __new_size => _18
    # .MEM_135 = VDEF <.MEM_119>
    __x = 0;
    # DEBUG __x => __x
    # DEBUG D#21 => D#309
    # DEBUG D#21 => D#309
    # DEBUG this => D#21
    # DEBUG this => D#21
    if (_18 > prephitmp_209)
      goto <bb 6>;
    else
      goto <bb 9>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_8 bb_7 })
  {
    <bb 6>:
    # DEBUG D#21 => D#309
    # DEBUG D#21 => D#309
    # DEBUG this => D#21
    # DEBUG this => D#21
    _87 = _18 - prephitmp_209;
    # DEBUG this => D#309
    # DEBUG D#22 => &D#309->D.34311._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#22
    # DEBUG this => D#309
    # .MEM_137 = VDEF <.MEM_135>
    MEM[(struct __normal_iterator *)&__position] = prephitmp_28;
    # DEBUG __n => _87
    # DEBUG __x => &__x
    _19 = &this_2(D)->_counts;
    # .MEM_138 = VDEF <.MEM_137>
    std::vector<int>::_M_fill_insert (_19, __position, _87, &__x);
    goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_25 })
  {
  <L6>:
    goto <bb 25> (<L0>);

  }
  bb_8 (preds = {bb_6 bb_9 }, succs = {bb_59 })
  {
    <bb 8>:
    # .MEM_210 = PHI <.MEM_138(6), .MEM_135(9)>

  }
  bb_59 (preds = {bb_8 }, succs = {bb_11 })
  {
    <bb 59>:
    goto <bb 11>;

  }
  bb_9 (preds = {bb_5 }, succs = {bb_10 bb_8 })
  {
    <bb 9>:
    # DEBUG D#21 => D#309
    # DEBUG D#21 => D#309
    # DEBUG this => D#21
    # DEBUG this => D#21
    if (_18 < prephitmp_209)
      goto <bb 10>;
    else
      goto <bb 8>;

  }
  bb_10 (preds = {bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    _88 = _18 * 4;
    _89 = prephitmp_189 + _88;
    # DEBUG D#43 => D#309
    # DEBUG __pos => _89
    # DEBUG D#42 => D#43
    # DEBUG this => D#42
    # DEBUG D#40 => &D#42->D.34311
    # DEBUG this => D#40
    # DEBUG D#41 => D#42->D.34311._M_impl._M_finish
    # DEBUG __first => _89
    # DEBUG __last => D#41
    # DEBUG D.39618 => NULL
    # DEBUG D#38 => _89
    # DEBUG D#39 => D#41
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # .MEM_136 = VDEF <.MEM_135>
    MEM[(int * *)this_2(D) + 192B] = _89;

  }
  bb_11 (preds = {bb_10 bb_59 }, succs = {bb_12 bb_15 })
  {
    <bb 11>:
    # .MEM_120 = PHI <.MEM_136(10), .MEM_210(59)>
    # DEBUG D#308 => &this_2(D)->_rptr
    # DEBUG this => D#308
    # DEBUG __new_size => _15
    # .MEM_139 = VDEF <.MEM_120>
    __x = 0;
    # DEBUG __x => __x
    # VUSE <.MEM_139>
    _20 = MEM[(int * *)this_2(D) + 232B];
    # DEBUG D#21 => D#308
    # VUSE <.MEM_139>
    _90 = MEM[(int * *)this_2(D) + 240B];
    # DEBUG D#21 => D#308
    # DEBUG this => D#21
    # DEBUG this => D#21
    _91 = (long int) _90;
    _92 = (long int) _20;
    _93 = _91 - _92;
    _94 = _93 /[ex] 4;
    _95 = (size_type) _94;
    if (_15 > _95)
      goto <bb 12>;
    else
      goto <bb 15>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_14 bb_13 })
  {
    <bb 12>:
    # DEBUG D#21 => D#308
    # DEBUG D#21 => D#308
    # DEBUG this => D#21
    # DEBUG this => D#21
    _96 = _15 - _95;
    # DEBUG this => D#308
    # DEBUG D#22 => &D#308->D.34311._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#22
    # DEBUG this => D#308
    # .MEM_141 = VDEF <.MEM_139>
    MEM[(struct __normal_iterator *)&__position] = _90;
    # DEBUG __n => _96
    # DEBUG __x => &__x
    _21 = &this_2(D)->_rptr;
    # .MEM_142 = VDEF <.MEM_141>
    std::vector<int>::_M_fill_insert (_21, __position, _96, &__x);
    goto <bb 14>;

  }
  bb_13 (preds = {bb_12 }, succs = {bb_25 })
  {
  <L7>:
    goto <bb 25> (<L0>);

  }
  bb_14 (preds = {bb_12 bb_15 }, succs = {bb_58 })
  {
    <bb 14>:
    # .MEM_207 = PHI <.MEM_142(12), .MEM_139(15)>

  }
  bb_58 (preds = {bb_14 }, succs = {bb_17 })
  {
    <bb 58>:
    goto <bb 17>;

  }
  bb_15 (preds = {bb_11 }, succs = {bb_16 bb_14 })
  {
    <bb 15>:
    # DEBUG D#21 => D#308
    # DEBUG D#21 => D#308
    # DEBUG this => D#21
    # DEBUG this => D#21
    if (_15 < _95)
      goto <bb 16>;
    else
      goto <bb 14>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    _97 = _15 * 4;
    _98 = _20 + _97;
    # DEBUG D#43 => D#308
    # DEBUG __pos => _98
    # DEBUG D#42 => D#43
    # DEBUG this => D#42
    # DEBUG D#40 => &D#42->D.34311
    # DEBUG this => D#40
    # DEBUG D#41 => D#42->D.34311._M_impl._M_finish
    # DEBUG __first => _98
    # DEBUG __last => D#41
    # DEBUG D.39618 => NULL
    # DEBUG D#38 => _98
    # DEBUG D#39 => D#41
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # .MEM_140 = VDEF <.MEM_139>
    MEM[(int * *)this_2(D) + 240B] = _98;

  }
  bb_17 (preds = {bb_16 bb_58 }, succs = {bb_18 bb_21 })
  {
    <bb 17>:
    # .MEM_121 = PHI <.MEM_140(16), .MEM_207(58)>
    # DEBUG D#307 => &this_2(D)->_gptr
    # DEBUG this => D#307
    # DEBUG __new_size => _18
    # .MEM_143 = VDEF <.MEM_121>
    __x = 0;
    # DEBUG __x => __x
    # VUSE <.MEM_143>
    _22 = MEM[(int * *)this_2(D) + 256B];
    # DEBUG D#21 => D#307
    # VUSE <.MEM_143>
    _99 = MEM[(int * *)this_2(D) + 264B];
    # DEBUG D#21 => D#307
    # DEBUG this => D#21
    # DEBUG this => D#21
    _100 = (long int) _99;
    _101 = (long int) _22;
    _102 = _100 - _101;
    _103 = _102 /[ex] 4;
    _104 = (size_type) _103;
    if (_18 > _104)
      goto <bb 18>;
    else
      goto <bb 21>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_20 bb_19 })
  {
    <bb 18>:
    # DEBUG D#21 => D#307
    # DEBUG D#21 => D#307
    # DEBUG this => D#21
    # DEBUG this => D#21
    _105 = _18 - _104;
    # DEBUG this => D#307
    # DEBUG D#22 => &D#307->D.34311._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#22
    # DEBUG this => D#307
    # .MEM_145 = VDEF <.MEM_143>
    MEM[(struct __normal_iterator *)&__position] = _99;
    # DEBUG __n => _105
    # DEBUG __x => &__x
    _23 = &this_2(D)->_gptr;
    # .MEM_146 = VDEF <.MEM_145>
    std::vector<int>::_M_fill_insert (_23, __position, _105, &__x);
    goto <bb 20>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_25 })
  {
  <L8>:
    goto <bb 25> (<L0>);

  }
  bb_20 (preds = {bb_18 bb_21 }, succs = {bb_57 })
  {
    <bb 20>:
    # .MEM_206 = PHI <.MEM_146(18), .MEM_143(21)>

  }
  bb_57 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 57>:
    goto <bb 23>;

  }
  bb_21 (preds = {bb_17 }, succs = {bb_22 bb_20 })
  {
    <bb 21>:
    # DEBUG D#21 => D#307
    # DEBUG D#21 => D#307
    # DEBUG this => D#21
    # DEBUG this => D#21
    if (_18 < _104)
      goto <bb 22>;
    else
      goto <bb 20>;

  }
  bb_22 (preds = {bb_21 }, succs = {bb_23 })
  {
    <bb 22>:
    _106 = _18 * 4;
    _107 = _22 + _106;
    # DEBUG D#43 => D#307
    # DEBUG __pos => _107
    # DEBUG D#42 => D#43
    # DEBUG this => D#42
    # DEBUG D#40 => &D#42->D.34311
    # DEBUG this => D#40
    # DEBUG D#41 => D#42->D.34311._M_impl._M_finish
    # DEBUG __first => _107
    # DEBUG __last => D#41
    # DEBUG D.39618 => NULL
    # DEBUG D#38 => _107
    # DEBUG D#39 => D#41
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # .MEM_144 = VDEF <.MEM_143>
    MEM[(int * *)this_2(D) + 264B] = _107;

  }
  bb_23 (preds = {bb_22 bb_57 }, succs = {bb_56 })
  {
    <bb 23>:
    # .MEM_122 = PHI <.MEM_144(22), .MEM_206(57)>

  }
  bb_56 (preds = {bb_23 }, succs = {bb_1 })
  {
    <bb 56>:
    # VUSE <.MEM_122>
    return;

  }
  bb_24 (preds = {bb_3 }, succs = {bb_25 })
  {
  <L5>:

  }
  bb_25 (preds = {bb_24 bb_7 bb_13 bb_19 }, succs = {bb_26 bb_27 })
  {
    # .MEM_1 = PHI <.MEM_134(24), .MEM_138(7), .MEM_142(13), .MEM_146(19)>
  <L0>:
    # DEBUG D#214 => &this_2(D)->_gptr
    # DEBUG this => D#214
    # DEBUG D#94 => &D#214->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#214->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#214->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#214->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_1>
    _11 = MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _11
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _11
    # DEBUG __n => D#88
    if (_11 != 0B)
      goto <bb 26>;
    else
      goto <bb 27>;

  }
  bb_26 (preds = {bb_25 }, succs = {bb_27 })
  {
    <bb 26>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _11
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _11
    # DEBUG this => D#80
    # DEBUG D.41305 => D#81
    # .MEM_43 = VDEF <.MEM_1>
    operator delete (_11);

  }
  bb_27 (preds = {bb_25 bb_26 }, succs = {bb_28 })
  {
    <bb 27>:
    # .MEM_29 = PHI <.MEM_1(25), .MEM_43(26)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_48 = VDEF <.MEM_29>
    MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
    resx 5

  }
  bb_28 (preds = {bb_27 }, succs = {bb_29 bb_30 })
  {
  <L1>:
    # DEBUG D#213 => &this_2(D)->_rptr
    # DEBUG this => D#213
    # DEBUG D#94 => &D#213->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#213->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#213->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#213->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_48>
    _25 = MEM[(struct _Vector_base *)this_2(D) + 232B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _25
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _25
    # DEBUG __n => D#88
    if (_25 != 0B)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {bb_30 })
  {
    <bb 29>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _25
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _25
    # DEBUG this => D#80
    # DEBUG D.41320 => D#81
    # .MEM_49 = VDEF <.MEM_48>
    operator delete (_25);

  }
  bb_30 (preds = {bb_28 bb_29 }, succs = {bb_31 })
  {
    <bb 30>:
    # .MEM_13 = PHI <.MEM_48(28), .MEM_49(29)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_54 = VDEF <.MEM_13>
    MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
    resx 4

  }
  bb_31 (preds = {bb_30 }, succs = {bb_32 bb_33 })
  {
  <L2>:
    # DEBUG D#212 => &this_2(D)->_req
    # DEBUG this => D#212
    # DEBUG D#94 => &D#212->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#212->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#212->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#212->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_54>
    _26 = MEM[(struct _Vector_base *)this_2(D) + 208B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _26
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _26
    # DEBUG __n => D#88
    if (_26 != 0B)
      goto <bb 32>;
    else
      goto <bb 33>;

  }
  bb_32 (preds = {bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _26
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _26
    # DEBUG this => D#80
    # DEBUG D.41335 => D#81
    # .MEM_55 = VDEF <.MEM_54>
    operator delete (_26);

  }
  bb_33 (preds = {bb_31 bb_32 }, succs = {bb_34 })
  {
    <bb 33>:
    # .MEM_14 = PHI <.MEM_54(31), .MEM_55(32)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_60 = VDEF <.MEM_14>
    MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
    resx 3

  }
  bb_34 (preds = {bb_33 }, succs = {bb_35 bb_36 })
  {
  <L3>:
    # DEBUG D#211 => &this_2(D)->_counts
    # DEBUG this => D#211
    # DEBUG D#94 => &D#211->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#211->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#211->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#211->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_60>
    _27 = MEM[(struct _Vector_base *)this_2(D) + 184B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _27
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _27
    # DEBUG __n => D#88
    if (_27 != 0B)
      goto <bb 35>;
    else
      goto <bb 36>;

  }
  bb_35 (preds = {bb_34 }, succs = {bb_36 })
  {
    <bb 35>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _27
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _27
    # DEBUG this => D#80
    # DEBUG D.41350 => D#81
    # .MEM_61 = VDEF <.MEM_60>
    operator delete (_27);

  }
  bb_36 (preds = {bb_34 bb_35 }, succs = {bb_37 })
  {
    <bb 36>:
    # .MEM_30 = PHI <.MEM_60(34), .MEM_61(35)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_66 = VDEF <.MEM_30>
    MEM[(struct  &)this_2(D) + 184] ={v} {CLOBBER};
    resx 2

  }
  bb_37 (preds = {bb_36 }, succs = {bb_38 })
  {
  <L4>:
    # DEBUG D#210 => &this_2(D)->D.36957
    # DEBUG this => D#210
    # .MEM_67 = VDEF <.MEM_66>
    MEM[(struct DenseAllocator *)this_2(D)].D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV14DenseAllocator + 16B];
    # DEBUG D#306 => &MEM[(struct DenseAllocator *)this_2(D)]._request
    # DEBUG this => D#306
    # DEBUG D#179 => &D#306->D.35164
    # DEBUG this => D#179
    # VUSE <.MEM_67>
    _69 = MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_finish;
    # VUSE <.MEM_67>
    __first_110 = MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_start;
    # DEBUG __first => __first_110
    # DEBUG __last => _69

  }
  bb_42 (preds = {bb_38 }, succs = {bb_55 })
  {
    <bb 42>:

  }
  bb_55 (preds = {bb_42 }, succs = {bb_43 bb_44 })
  {
    <bb 55>:
    # DEBUG D#180 => &D#306->D.35164
    # DEBUG this => D#180
    # DEBUG D#116 => D#180->_M_impl._M_end_of_storage
    # DEBUG D#115 => (long int) D#116
    # VUSE <.MEM_123>
    _114 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;
    # DEBUG D#114 => (long int) _114
    # DEBUG D#113 => D#115 - D#114
    # DEBUG D#112 => D#113 /[ex] 24
    # DEBUG D#109 => D#180
    # DEBUG D#110 => (long unsigned int) D#112
    # DEBUG __p => _114
    # DEBUG this => D#109
    # DEBUG __n => D#110
    # DEBUG D#108 => D#110
    # DEBUG D#107 => D#109
    if (_114 != 0B)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_55 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#106 => &D#107->_M_impl
    # DEBUG D#104 => D#106
    # DEBUG D#105 => D#108
    # DEBUG __p => _114
    # DEBUG __a => D#104
    # DEBUG __n => D#105
    # DEBUG D#103 => D#105
    # DEBUG D#102 => D#104
    # DEBUG D#100 => D#102
    # DEBUG D#101 => D#103
    # DEBUG __p => _114
    # DEBUG this => D#100
    # DEBUG D.42044 => D#101
    # .MEM_153 = VDEF <.MEM_123>
    operator delete (_114);

  }
  bb_44 (preds = {bb_55 bb_43 }, succs = {bb_45 bb_46 })
  {
    <bb 44>:
    # .MEM_125 = PHI <.MEM_123(55), .MEM_153(43)>
    # DEBUG D#111 => &D#180->_M_impl
    # DEBUG this => D#111
    # DEBUG this => D#111
    # DEBUG this => D#111
    # .MEM_158 = VDEF <.MEM_125>
    MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
    # DEBUG D#305 => &MEM[(struct DenseAllocator *)this_2(D)].D.35235
    # DEBUG this => D#305
    # .MEM_159 = VDEF <.MEM_158>
    MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
    # DEBUG D#99 => &D#305->_outmatch
    # DEBUG this => D#99
    # DEBUG D#94 => &D#99->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#99->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#99->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#99->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_159>
    _24 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _24
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _24
    # DEBUG __n => D#88
    if (_24 != 0B)
      goto <bb 45>;
    else
      goto <bb 46>;

  }
  bb_45 (preds = {bb_44 }, succs = {bb_46 })
  {
    <bb 45>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _24
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _24
    # DEBUG this => D#80
    # DEBUG D.41990 => D#81
    # .MEM_160 = VDEF <.MEM_159>
    operator delete (_24);

  }
  bb_46 (preds = {bb_44 bb_45 }, succs = {bb_47 bb_48 })
  {
    <bb 46>:
    # .MEM_126 = PHI <.MEM_159(44), .MEM_160(45)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_165 = VDEF <.MEM_126>
    MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
    # DEBUG D#98 => &D#305->_inmatch
    # DEBUG this => D#98
    # DEBUG D#94 => &D#98->D.34311
    # DEBUG this => D#94
    # DEBUG D#97 => D#98->D.34311._M_impl._M_finish
    # DEBUG D#96 => D#98->D.34311._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.39916 => NULL
    # DEBUG D#38 => D#96
    # DEBUG D#39 => D#97
    # DEBUG __first => D#38
    # DEBUG __last => D#39
    # DEBUG D#37 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37
    # DEBUG D.39602 => D#34
    # DEBUG D.39601 => D#35
    # DEBUG D#95 => &D#98->D.34311
    # DEBUG this => D#95
    # DEBUG D#93 => D#95->_M_impl._M_end_of_storage
    # DEBUG D#92 => (long int) D#93
    # VUSE <.MEM_165>
    _108 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
    # DEBUG D#91 => (long int) _108
    # DEBUG D#90 => D#92 - D#91
    # DEBUG D#89 => D#90 /[ex] 4
    # DEBUG D#88 => (long unsigned int) D#89
    # DEBUG this => D#95
    # DEBUG __p => _108
    # DEBUG __n => D#88
    if (_108 != 0B)
      goto <bb 47>;
    else
      goto <bb 48>;

  }
  bb_47 (preds = {bb_46 }, succs = {bb_48 })
  {
    <bb 47>:
    # DEBUG D#86 => &D#95->_M_impl
    # DEBUG D#84 => D#86
    # DEBUG D#85 => D#88
    # DEBUG __p => _108
    # DEBUG __a => D#84
    # DEBUG __n => D#85
    # DEBUG D#83 => D#85
    # DEBUG D#82 => D#84
    # DEBUG D#80 => D#82
    # DEBUG D#81 => D#83
    # DEBUG __p => _108
    # DEBUG this => D#80
    # DEBUG D.42005 => D#81
    # .MEM_166 = VDEF <.MEM_165>
    operator delete (_108);

  }
  bb_48 (preds = {bb_46 bb_47 }, succs = {bb_49 bb_50 })
  {
    <bb 48>:
    # .MEM_127 = PHI <.MEM_165(46), .MEM_166(47)>
    # DEBUG D#87 => &D#95->_M_impl
    # DEBUG this => D#87
    # DEBUG this => D#87
    # DEBUG this => D#87
    # .MEM_171 = VDEF <.MEM_127>
    MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
    # DEBUG D#304 => &MEM[(struct Allocator *)this_2(D)].D.34407
    # DEBUG this => D#304
    # .MEM_172 = VDEF <.MEM_171>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#79 => &D#304->_children
    # DEBUG this => D#79
    # DEBUG D#73 => &D#79->D.29436
    # DEBUG this => D#73
    # DEBUG D#76 => D#79->D.29436._M_impl._M_finish
    # DEBUG D#75 => D#79->D.29436._M_impl._M_start
    # DEBUG D#31 => D#75
    # DEBUG D#32 => D#76
    # DEBUG __first => D#31
    # DEBUG __last => D#32
    # DEBUG D.39802 => D#33
    # DEBUG D#30 => D#32
    # DEBUG D#29 => D#31
    # DEBUG D#27 => D#29
    # DEBUG D#28 => D#30
    # DEBUG __first => D#27
    # DEBUG __last => D#28
    # DEBUG D#26 => D#28
    # DEBUG D#25 => D#27
    # DEBUG D#23 => D#25
    # DEBUG D#24 => D#26
    # DEBUG D.39564 => D#23
    # DEBUG D.39563 => D#24
    # DEBUG D#74 => &D#79->D.29436
    # DEBUG this => D#74
    # DEBUG D#72 => D#74->_M_impl._M_end_of_storage
    # DEBUG D#71 => (long int) D#72
    # VUSE <.MEM_172>
    _68 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#70 => (long int) _68
    # DEBUG D#69 => D#71 - D#70
    # DEBUG D#68 => D#69 /[ex] 8
    # DEBUG D#65 => D#74
    # DEBUG D#66 => (long unsigned int) D#68
    # DEBUG __p => _68
    # DEBUG this => D#65
    # DEBUG __n => D#66
    # DEBUG D#64 => D#66
    # DEBUG D#63 => D#65
    if (_68 != 0B)
      goto <bb 49>;
    else
      goto <bb 50>;

  }
  bb_49 (preds = {bb_48 }, succs = {bb_50 })
  {
    <bb 49>:
    # DEBUG D#62 => &D#63->_M_impl
    # DEBUG D#60 => D#62
    # DEBUG D#61 => D#64
    # DEBUG __p => _68
    # DEBUG __a => D#60
    # DEBUG __n => D#61
    # DEBUG D#59 => D#61
    # DEBUG D#58 => D#60
    # DEBUG D#56 => D#58
    # DEBUG D#57 => D#59
    # DEBUG __p => _68
    # DEBUG this => D#56
    # DEBUG D.42060 => D#57
    # .MEM_173 = VDEF <.MEM_172>
    operator delete (_68);

  }
  bb_50 (preds = {bb_48 bb_49 }, succs = {bb_51 bb_52 })
  {
    <bb 50>:
    # .MEM_128 = PHI <.MEM_172(48), .MEM_173(49)>
    # DEBUG D#67 => &D#74->_M_impl
    # DEBUG this => D#67
    # DEBUG this => D#67
    # DEBUG this => D#67
    # .MEM_178 = VDEF <.MEM_128>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#78 => &D#304->_fullname
    # DEBUG this => D#78
    # DEBUG this => D#78
    # DEBUG this => D#78
    # VUSE <.MEM_178>
    _115 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#1 => D#78
    # DEBUG this => D#1
    # DEBUG this => D#78
    _116 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
    if (_115 != _116)
      goto <bb 51>;
    else
      goto <bb 52>;

  }
  bb_51 (preds = {bb_50 }, succs = {bb_52 })
  {
    <bb 51>:
    # DEBUG D#54 => MEM[(struct basic_string *)D#78].D.11539._M_allocated_capacity
    # DEBUG D#53 => D#54
    # DEBUG this => D#78
    # DEBUG __size => D#53
    # DEBUG D#52 => D#53
    # DEBUG D#1 => D#78
    # DEBUG this => D#1
    # DEBUG this => D#78
    # DEBUG D#51 => &MEM[(struct basic_string *)D#78]._M_dataplus
    # DEBUG D#49 => D#51
    # DEBUG D#50 => D#52 + 1
    # DEBUG __p => _115
    # DEBUG __a => D#49
    # DEBUG __n => D#50
    # DEBUG D#48 => D#50
    # DEBUG D#47 => D#49
    # DEBUG D#45 => D#47
    # DEBUG D#46 => D#48
    # DEBUG __p => _115
    # DEBUG this => D#45
    # DEBUG D.42073 => D#46
    # .MEM_179 = VDEF <.MEM_178>
    operator delete (_115);

  }
  bb_52 (preds = {bb_50 bb_51 }, succs = {bb_53 bb_54 })
  {
    <bb 52>:
    # .MEM_129 = PHI <.MEM_178(50), .MEM_179(51)>
    # DEBUG D#55 => &MEM[(struct basic_string *)D#78]._M_dataplus
    # DEBUG this => D#55
    # DEBUG this => D#55
    # DEBUG this => D#55
    # .MEM_183 = VDEF <.MEM_129>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#77 => &D#304->_name
    # DEBUG this => D#77
    # DEBUG this => D#77
    # DEBUG this => D#77
    # VUSE <.MEM_183>
    _117 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#1 => D#77
    # DEBUG this => D#1
    # DEBUG this => D#77
    _118 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
    if (_117 != _118)
      goto <bb 53>;
    else
      goto <bb 54>;

  }
  bb_53 (preds = {bb_52 }, succs = {bb_54 })
  {
    <bb 53>:
    # DEBUG D#54 => MEM[(struct basic_string *)D#77].D.11539._M_allocated_capacity
    # DEBUG D#53 => D#54
    # DEBUG this => D#77
    # DEBUG __size => D#53
    # DEBUG D#52 => D#53
    # DEBUG D#1 => D#77
    # DEBUG this => D#1
    # DEBUG this => D#77
    # DEBUG D#51 => &MEM[(struct basic_string *)D#77]._M_dataplus
    # DEBUG D#49 => D#51
    # DEBUG D#50 => D#52 + 1
    # DEBUG __p => _117
    # DEBUG __a => D#49
    # DEBUG __n => D#50
    # DEBUG D#48 => D#50
    # DEBUG D#47 => D#49
    # DEBUG D#45 => D#47
    # DEBUG D#46 => D#48
    # DEBUG __p => _117
    # DEBUG this => D#45
    # DEBUG D.42088 => D#46
    # .MEM_184 = VDEF <.MEM_183>
    operator delete (_117);

  }
  bb_54 (preds = {bb_52 bb_53 }, succs = {})
  {
    <bb 54>:
    # .MEM_130 = PHI <.MEM_183(52), .MEM_184(53)>
    # DEBUG D#55 => &MEM[(struct basic_string *)D#77]._M_dataplus
    # DEBUG this => D#55
    # DEBUG this => D#55
    # DEBUG this => D#55
    # .MEM_70 = VDEF <.MEM_130>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    resx 1

  }
  loop_1 (header = 38, latch = 41, niter = )
  {
    bb_38 (preds = {bb_37 bb_41 }, succs = {bb_42 bb_39 })
    {
      <bb 38>:
      # __first_111 = PHI <__first_110(37), __first_113(41)>
      # .MEM_123 = PHI <.MEM_67(37), .MEM_152(41)>
      # DEBUG __first => __first_111
      if (_69 == __first_111)
        goto <bb 42>;
      else
        goto <bb 39>;

    }
    bb_39 (preds = {bb_38 }, succs = {bb_40 bb_41 })
    {
      <bb 39>:
      # DEBUG __r => __first_111
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#174
      # DEBUG D#154 => D#176
      # DEBUG D#155 => D#177
      # DEBUG __first => D#154
      # DEBUG __last => D#155
      # DEBUG D.40479 => D#156
      # DEBUG D#153 => D#155
      # DEBUG D#152 => D#154
      # DEBUG D#150 => D#152
      # DEBUG D#151 => D#153
      # DEBUG __first => D#150
      # DEBUG __last => D#151
      # DEBUG D#149 => D#151
      # DEBUG D#148 => D#150
      # DEBUG D#146 => D#148
      # DEBUG D#147 => D#149
      # DEBUG D.40382 => D#146
      # DEBUG D.40381 => D#147
      # DEBUG this => D#175
      # DEBUG D#173 => D#175->_M_impl._M_end_of_storage
      # DEBUG D#172 => (long int) D#173
      # VUSE <.MEM_123>
      _112 = MEM[(struct _Vector_base *)__first_111]._M_impl._M_start;
      # DEBUG D#171 => (long int) _112
      # DEBUG D#170 => D#172 - D#171
      # DEBUG D#169 => D#170 /[ex] 16
      # DEBUG D#166 => D#175
      # DEBUG D#167 => (long unsigned int) D#169
      # DEBUG __p => _112
      # DEBUG this => D#166
      # DEBUG __n => D#167
      # DEBUG D#165 => D#167
      # DEBUG D#164 => D#166
      if (_112 != 0B)
        goto <bb 40>;
      else
        goto <bb 41>;

    }
    bb_40 (preds = {bb_39 }, succs = {bb_41 })
    {
      <bb 40>:
      # DEBUG D#163 => &D#164->_M_impl
      # DEBUG D#161 => D#163
      # DEBUG D#162 => D#165
      # DEBUG __p => _112
      # DEBUG __a => D#161
      # DEBUG __n => D#162
      # DEBUG D#160 => D#162
      # DEBUG D#159 => D#161
      # DEBUG D#157 => D#159
      # DEBUG D#158 => D#160
      # DEBUG __p => _112
      # DEBUG this => D#157
      # DEBUG D.42030 => D#158
      # .MEM_147 = VDEF <.MEM_123>
      operator delete (_112);

    }
    bb_41 (preds = {bb_39 bb_40 }, succs = {bb_38 })
    {
      <bb 41>:
      # .MEM_124 = PHI <.MEM_123(39), .MEM_147(40)>
      # DEBUG D#168 => &D#175->_M_impl
      # DEBUG this => D#168
      # DEBUG this => D#168
      # DEBUG this => D#168
      # .MEM_152 = VDEF <.MEM_124>
      MEM[(struct  &)__first_111] ={v} {CLOBBER};
      __first_113 = __first_111 + 24;
      # DEBUG __first => __first_113
      goto <bb 38>;

    }
  }
}

Pass statistics:
----------------

LOA::LOA(Module*, const string&, int, int) (struct LOAD.36919 * const thisD.36952, struct ModuleD.28688 * parentD.36953, const struct stringD.2845 & nameD.36954, intD.9 inputsD.36955, intD.9 outputsD.36956)
Eh tree:
   1 cleanup land:{1,<L4>}
     2 cleanup land:{2,<L3>}
       3 cleanup land:{3,<L2>}
         4 cleanup land:{4,<L1>}
           5 cleanup land:{8,<L7>},{7,<L6>},{6,<L5>},{5,<L8>}
{
  struct vectorD.34419 * __firstD.42013;
  struct iteratorD.33879 __positionD.41975;
  value_typeD.33874 __xD.41970;
  struct iteratorD.33879 __positionD.41964;
  value_typeD.33874 __xD.41959;
  struct iteratorD.33879 __positionD.41953;
  value_typeD.33874 __xD.41948;
  struct iteratorD.33879 __positionD.41942;
  value_typeD.33874 __xD.41937;
  struct DenseAllocatorD.34416 * _3;
  intD.9 * _11;
  long intD.12 pretmp_12;
  long unsigned intD.14 _15;
  struct vectorD.33506 * _16;
  long unsigned intD.14 _18;
  struct vectorD.33506 * _19;
  intD.9 * const _20;
  struct vectorD.33506 * _21;
  intD.9 * const _22;
  struct vectorD.33506 * _23;
  intD.9 * _24;
  intD.9 * _25;
  intD.9 * _26;
  intD.9 * _27;
  intD.9 * const prephitmp_28;
  struct ModuleD.28688 * * _68;
  struct vectorD.34419 * _69;
  long unsigned intD.14 _87;
  long unsigned intD.14 _88;
  intD.9 * _89;
  intD.9 * const _90;
  long intD.12 _91;
  long intD.12 _92;
  long intD.12 _93;
  long intD.12 _94;
  size_typeD.33887 _95;
  long unsigned intD.14 _96;
  long unsigned intD.14 _97;
  intD.9 * _98;
  intD.9 * const _99;
  long intD.12 _100;
  long intD.12 _101;
  long intD.12 _102;
  long intD.12 _103;
  size_typeD.33887 _104;
  long unsigned intD.14 _105;
  long unsigned intD.14 _106;
  intD.9 * _107;
  intD.9 * _108;
  struct sRequestD.34315 * _112;
  struct vectorD.34419 * _114;
  charD.10 * const _115;
  const charD.10 * _116;
  charD.10 * const _117;
  const charD.10 * _118;
  intD.9 * const pretmp_188;
  intD.9 * const prephitmp_189;
  intD.9 * const pretmp_190;
  long intD.12 pretmp_197;
  long intD.12 pretmp_201;
  size_typeD.33887 prephitmp_209;
  size_typeD.33887 pretmp_211;
  long intD.12 pretmp_214;

;;   basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _3 = &this_2(D)->D.36957;
  # .MEM_9 = VDEF <.MEM_4(D)>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZN14DenseAllocatorC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiD.35229 (_3, parent_5(D), name_6(D), inputs_7(D), outputs_8(D));
  # .MEM_10 = VDEF <.MEM_9>
  this_2(D)->D.36957.D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV3LOAD.36963 + 16B];
  # DEBUG D#218ptD.0 => &this_2(D)->_countsD.36921
  # DEBUG thisD.41292 => D#218ptD.0
  # DEBUG D#118ptD.0 => &D#218ptD.0->D.34311
  # DEBUG thisD.41293 => D#118ptD.0
  # DEBUG D#117ptD.0 => &D#118ptD.0->_M_implD.33802
  # DEBUG thisD.41294 => D#117ptD.0
  # DEBUG thisD.40016 => D#117ptD.0
  # DEBUG thisD.40014 => D#117ptD.0
  # .MEM_31 = VDEF <.MEM_10>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 184B]._M_startD.33804 = 0B;
  # .MEM_32 = VDEF <.MEM_31>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 184B]._M_finishD.33805 = 0B;
  # .MEM_33 = VDEF <.MEM_32>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 184B]._M_end_of_storageD.33806 = 0B;
  # DEBUG D#217ptD.0 => &this_2(D)->_reqD.36922
  # DEBUG thisD.41289 => D#217ptD.0
  # DEBUG D#118ptD.0 => &D#217ptD.0->D.34311
  # DEBUG thisD.41290 => D#118ptD.0
  # DEBUG D#117ptD.0 => &D#118ptD.0->_M_implD.33802
  # DEBUG thisD.41291 => D#117ptD.0
  # DEBUG thisD.40016 => D#117ptD.0
  # DEBUG thisD.40014 => D#117ptD.0
  # .MEM_34 = VDEF <.MEM_33>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 208B]._M_startD.33804 = 0B;
  # .MEM_35 = VDEF <.MEM_34>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 208B]._M_finishD.33805 = 0B;
  # .MEM_36 = VDEF <.MEM_35>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 208B]._M_end_of_storageD.33806 = 0B;
  # DEBUG D#216ptD.0 => &this_2(D)->_rptrD.36923
  # DEBUG thisD.41286 => D#216ptD.0
  # DEBUG D#118ptD.0 => &D#216ptD.0->D.34311
  # DEBUG thisD.41287 => D#118ptD.0
  # DEBUG D#117ptD.0 => &D#118ptD.0->_M_implD.33802
  # DEBUG thisD.41288 => D#117ptD.0
  # DEBUG thisD.40016 => D#117ptD.0
  # DEBUG thisD.40014 => D#117ptD.0
  # .MEM_37 = VDEF <.MEM_36>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 232B]._M_startD.33804 = 0B;
  # .MEM_38 = VDEF <.MEM_37>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 232B]._M_finishD.33805 = 0B;
  # .MEM_39 = VDEF <.MEM_38>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 232B]._M_end_of_storageD.33806 = 0B;
  # DEBUG D#215ptD.0 => &this_2(D)->_gptrD.36924
  # DEBUG thisD.41283 => D#215ptD.0
  # DEBUG D#118ptD.0 => &D#215ptD.0->D.34311
  # DEBUG thisD.41284 => D#118ptD.0
  # DEBUG D#117ptD.0 => &D#118ptD.0->_M_implD.33802
  # DEBUG thisD.41285 => D#117ptD.0
  # DEBUG thisD.40016 => D#117ptD.0
  # DEBUG thisD.40014 => D#117ptD.0
  # .MEM_40 = VDEF <.MEM_39>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 256B]._M_startD.33804 = 0B;
  # .MEM_41 = VDEF <.MEM_40>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 256B]._M_finishD.33805 = 0B;
  # .MEM_42 = VDEF <.MEM_41>
  MEM[(struct _Vector_implD.33779 *)this_2(D) + 256B]._M_end_of_storageD.33806 = 0B;
  # RANGE ~[2147483648, 18446744071562067967]
  _15 = (long unsigned intD.14) inputs_7(D);
  # DEBUG D#310ptD.0 => &this_2(D)->_reqD.36922
  # DEBUG thisD.41935 => D#310ptD.0
  # DEBUG __new_sizeD.41936 => _15
  # .MEM_131 = VDEF <.MEM_42>
  __xD.41937 = 0;
  # DEBUG __xD.41937 => __xD.41937
  # DEBUG D#21ptD.0 => D#310ptD.0
  # DEBUG D#21ptD.0 => D#310ptD.0
  # DEBUG thisD.41944 => D#21ptD.0
  # DEBUG thisD.41945 => D#21ptD.0
  if (_15 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#310ptD.0
  # DEBUG D#21ptD.0 => D#310ptD.0
  # DEBUG thisD.41270 => D#21ptD.0
  # DEBUG thisD.41269 => D#21ptD.0
  # DEBUG thisD.41263 => D#310ptD.0
  # DEBUG D#22ptD.0 => &D#310ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41265 => NULL
  # DEBUG __iD.41264 => D#22ptD.0
  # DEBUG thisD.41943 => D#310ptD.0
  # .MEM_133 = VDEF <.MEM_131>
  MEM[(struct __normal_iteratorD.33880 *)&__positionD.41942] = 0B;
  # DEBUG __nD.41941 => _15
  # DEBUG __xD.41940 => &__xD.41937
  # PT = nonlocal 
  _16 = &this_2(D)->_reqD.36922;
  [LP 6] # .MEM_134 = VDEF <.MEM_133>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34234 (_16, __positionD.41942, _15, &__xD.41937);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 (EH,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_134>
  pretmp_188 = MEM[(intD.9 * *)this_2(D) + 184B];
  # VUSE <.MEM_134>
  pretmp_190 = MEM[(intD.9 * *)this_2(D) + 192B];
  pretmp_12 = (long intD.12) pretmp_190;
  pretmp_214 = (long intD.12) pretmp_188;
  pretmp_201 = pretmp_12 - pretmp_214;
  pretmp_197 = pretmp_201 /[ex] 4;
  pretmp_211 = (size_typeD.33887) pretmp_197;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       2 [79.3%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_119 = PHI <.MEM_131(2), .MEM_134(4)>
  # PT = nonlocal escaped 
  # prephitmp_189 = PHI <0B(2), pretmp_188(4)>
  # PT = nonlocal escaped 
  # prephitmp_28 = PHI <0B(2), pretmp_190(4)>
  # RANGE ~[2305843009213693952, 16140901064495857663]
  # prephitmp_209 = PHI <0(2), pretmp_211(4)>
  # RANGE ~[2147483648, 18446744071562067967]
  _18 = (long unsigned intD.14) outputs_8(D);
  # DEBUG D#309ptD.0 => &this_2(D)->_countsD.36921
  # DEBUG thisD.41946 => D#309ptD.0
  # DEBUG __new_sizeD.41947 => _18
  # .MEM_135 = VDEF <.MEM_119>
  __xD.41948 = 0;
  # DEBUG __xD.41948 => __xD.41948
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG thisD.41955 => D#21ptD.0
  # DEBUG thisD.41956 => D#21ptD.0
  if (_18 > prephitmp_209)
    goto <bb 6>;
  else
    goto <bb 9>;
;;    succ:       6 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG thisD.41270 => D#21ptD.0
  # DEBUG thisD.41269 => D#21ptD.0
  # RANGE [1, 18446744073709551615]
  _87 = _18 - prephitmp_209;
  # DEBUG thisD.41263 => D#309ptD.0
  # DEBUG D#22ptD.0 => &D#309ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41265 => NULL
  # DEBUG __iD.41264 => D#22ptD.0
  # DEBUG thisD.41954 => D#309ptD.0
  # .MEM_137 = VDEF <.MEM_135>
  MEM[(struct __normal_iteratorD.33880 *)&__positionD.41953] = prephitmp_28;
  # DEBUG __nD.41952 => _87
  # DEBUG __xD.41951 => &__xD.41948
  # PT = nonlocal 
  _19 = &this_2(D)->_countsD.36921;
  [LP 7] # .MEM_138 = VDEF <.MEM_137>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34234 (_19, __positionD.41953, _87, &__xD.41948);
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 (EH,EXECUTABLE)
<L6>: [LP 7]
  goto <bb 25> (<L0>);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 5163, maybe hot
;;    prev block 7, next block 59, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_210 = PHI <.MEM_138(6), .MEM_135(9)>
;;    succ:       59 [100.0%]  (FALLTHRU)

;;   basic block 59, loop depth 0, count 0, freq 5163, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 7929, maybe hot
;;    prev block 59, next block 10, flags: (NEW, REACHABLE)
;;    pred:       5 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG D#21ptD.0 => D#309ptD.0
  # DEBUG thisD.41275 => D#21ptD.0
  # DEBUG thisD.41274 => D#21ptD.0
  if (_18 < prephitmp_209)
    goto <bb 10>;
  else
    goto <bb 8>;
;;    succ:       10 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 4837, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _88 = _18 * 4;
  # PT = nonlocal escaped 
  _89 = prephitmp_189 + _88;
  # DEBUG D#43ptD.0 => D#309ptD.0
  # DEBUG __posD.41950 => _89
  # DEBUG D#42ptD.0 => D#43ptD.0
  # DEBUG thisD.41949 => D#42ptD.0
  # DEBUG D#40ptD.0 => &D#42ptD.0->D.34311
  # DEBUG thisD.39626 => D#40ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG __firstD.39616 => _89
  # DEBUG __lastD.39617 => D#41ptD.0
  # DEBUG D.39618 => NULL
  # DEBUG D#38ptD.0 => _89
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # .MEM_136 = VDEF <.MEM_135>
  MEM[(intD.9 * *)this_2(D) + 192B] = _89;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_120 = PHI <.MEM_136(10), .MEM_210(59)>
  # DEBUG D#308ptD.0 => &this_2(D)->_rptrD.36923
  # DEBUG thisD.41957 => D#308ptD.0
  # DEBUG __new_sizeD.41958 => _15
  # .MEM_139 = VDEF <.MEM_120>
  __xD.41959 = 0;
  # DEBUG __xD.41959 => __xD.41959
  # VUSE <.MEM_139>
  # PT = nonlocal escaped 
  _20 = MEM[(intD.9 * *)this_2(D) + 232B];
  # DEBUG D#21ptD.0 => D#308ptD.0
  # VUSE <.MEM_139>
  # PT = nonlocal escaped 
  _90 = MEM[(intD.9 * *)this_2(D) + 240B];
  # DEBUG D#21ptD.0 => D#308ptD.0
  # DEBUG thisD.41966 => D#21ptD.0
  # DEBUG thisD.41967 => D#21ptD.0
  _91 = (long intD.12) _90;
  _92 = (long intD.12) _20;
  _93 = _91 - _92;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _94 = _93 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _95 = (size_typeD.33887) _94;
  if (_15 > _95)
    goto <bb 12>;
  else
    goto <bb 15>;
;;    succ:       12 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#308ptD.0
  # DEBUG D#21ptD.0 => D#308ptD.0
  # DEBUG thisD.41270 => D#21ptD.0
  # DEBUG thisD.41269 => D#21ptD.0
  # RANGE [1, 18446744073709551615]
  _96 = _15 - _95;
  # DEBUG thisD.41263 => D#308ptD.0
  # DEBUG D#22ptD.0 => &D#308ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41265 => NULL
  # DEBUG __iD.41264 => D#22ptD.0
  # DEBUG thisD.41965 => D#308ptD.0
  # .MEM_141 = VDEF <.MEM_139>
  MEM[(struct __normal_iteratorD.33880 *)&__positionD.41964] = _90;
  # DEBUG __nD.41963 => _96
  # DEBUG __xD.41962 => &__xD.41959
  # PT = nonlocal 
  _21 = &this_2(D)->_rptrD.36923;
  [LP 8] # .MEM_142 = VDEF <.MEM_141>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34234 (_21, __positionD.41964, _96, &__xD.41959);
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 (EH,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 (EH,EXECUTABLE)
<L7>: [LP 8]
  goto <bb 25> (<L0>);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 5163, maybe hot
;;    prev block 13, next block 58, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_207 = PHI <.MEM_142(12), .MEM_139(15)>
;;    succ:       58 [100.0%]  (FALLTHRU)

;;   basic block 58, loop depth 0, count 0, freq 5163, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 7929, maybe hot
;;    prev block 58, next block 16, flags: (NEW, REACHABLE)
;;    pred:       11 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#308ptD.0
  # DEBUG D#21ptD.0 => D#308ptD.0
  # DEBUG thisD.41275 => D#21ptD.0
  # DEBUG thisD.41274 => D#21ptD.0
  if (_15 < _95)
    goto <bb 16>;
  else
    goto <bb 14>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 4837, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _97 = _15 * 4;
  # PT = nonlocal escaped 
  _98 = _20 + _97;
  # DEBUG D#43ptD.0 => D#308ptD.0
  # DEBUG __posD.41961 => _98
  # DEBUG D#42ptD.0 => D#43ptD.0
  # DEBUG thisD.41960 => D#42ptD.0
  # DEBUG D#40ptD.0 => &D#42ptD.0->D.34311
  # DEBUG thisD.39626 => D#40ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG __firstD.39616 => _98
  # DEBUG __lastD.39617 => D#41ptD.0
  # DEBUG D.39618 => NULL
  # DEBUG D#38ptD.0 => _98
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # .MEM_140 = VDEF <.MEM_139>
  MEM[(intD.9 * *)this_2(D) + 240B] = _98;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_121 = PHI <.MEM_140(16), .MEM_207(58)>
  # DEBUG D#307ptD.0 => &this_2(D)->_gptrD.36924
  # DEBUG thisD.41968 => D#307ptD.0
  # DEBUG __new_sizeD.41969 => _18
  # .MEM_143 = VDEF <.MEM_121>
  __xD.41970 = 0;
  # DEBUG __xD.41970 => __xD.41970
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _22 = MEM[(intD.9 * *)this_2(D) + 256B];
  # DEBUG D#21ptD.0 => D#307ptD.0
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _99 = MEM[(intD.9 * *)this_2(D) + 264B];
  # DEBUG D#21ptD.0 => D#307ptD.0
  # DEBUG thisD.41977 => D#21ptD.0
  # DEBUG thisD.41978 => D#21ptD.0
  _100 = (long intD.12) _99;
  _101 = (long intD.12) _22;
  _102 = _100 - _101;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _103 = _102 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _104 = (size_typeD.33887) _103;
  if (_18 > _104)
    goto <bb 18>;
  else
    goto <bb 21>;
;;    succ:       18 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#307ptD.0
  # DEBUG D#21ptD.0 => D#307ptD.0
  # DEBUG thisD.41270 => D#21ptD.0
  # DEBUG thisD.41269 => D#21ptD.0
  # RANGE [1, 18446744073709551615]
  _105 = _18 - _104;
  # DEBUG thisD.41263 => D#307ptD.0
  # DEBUG D#22ptD.0 => &D#307ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41265 => NULL
  # DEBUG __iD.41264 => D#22ptD.0
  # DEBUG thisD.41976 => D#307ptD.0
  # .MEM_145 = VDEF <.MEM_143>
  MEM[(struct __normal_iteratorD.33880 *)&__positionD.41975] = _99;
  # DEBUG __nD.41974 => _105
  # DEBUG __xD.41973 => &__xD.41970
  # PT = nonlocal 
  _23 = &this_2(D)->_gptrD.36924;
  [LP 5] # .MEM_146 = VDEF <.MEM_145>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34234 (_23, __positionD.41975, _105, &__xD.41970);
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 (EH,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 (EH,EXECUTABLE)
<L8>: [LP 5]
  goto <bb 25> (<L0>);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 5163, maybe hot
;;    prev block 19, next block 57, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_206 = PHI <.MEM_146(18), .MEM_143(21)>
;;    succ:       57 [100.0%]  (FALLTHRU)

;;   basic block 57, loop depth 0, count 0, freq 5163, maybe hot
;;    prev block 20, next block 21, flags: (NEW)
;;    pred:       20 [100.0%]  (FALLTHRU)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 7929, maybe hot
;;    prev block 57, next block 22, flags: (NEW, REACHABLE)
;;    pred:       17 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => D#307ptD.0
  # DEBUG D#21ptD.0 => D#307ptD.0
  # DEBUG thisD.41275 => D#21ptD.0
  # DEBUG thisD.41274 => D#21ptD.0
  if (_18 < _104)
    goto <bb 22>;
  else
    goto <bb 20>;
;;    succ:       22 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 4837, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _106 = _18 * 4;
  # PT = nonlocal escaped 
  _107 = _22 + _106;
  # DEBUG D#43ptD.0 => D#307ptD.0
  # DEBUG __posD.41972 => _107
  # DEBUG D#42ptD.0 => D#43ptD.0
  # DEBUG thisD.41971 => D#42ptD.0
  # DEBUG D#40ptD.0 => &D#42ptD.0->D.34311
  # DEBUG thisD.39626 => D#40ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG __firstD.39616 => _107
  # DEBUG __lastD.39617 => D#41ptD.0
  # DEBUG D.39618 => NULL
  # DEBUG D#38ptD.0 => _107
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # .MEM_144 = VDEF <.MEM_143>
  MEM[(intD.9 * *)this_2(D) + 264B] = _107;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 22, next block 56, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_122 = PHI <.MEM_144(22), .MEM_206(57)>
;;    succ:       56 [100.0%]  (FALLTHRU)

;;   basic block 56, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 23, next block 24, flags: (NEW)
;;    pred:       23 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_122>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 24, loop depth 0, count 0, freq 0
;;    prev block 56, next block 25, flags: (NEW)
;;    pred:       3 (EH,EXECUTABLE)
<L5>: [LP 6]
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_134(24), .MEM_138(7), .MEM_142(13), .MEM_146(19)>
<L0>:
  # DEBUG D#214ptD.0 => &this_2(D)->_gptrD.36924
  # DEBUG thisD.41295 => D#214ptD.0
  # DEBUG D#94ptD.0 => &D#214ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#214ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#214ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#214ptD.0->D.34311
  # DEBUG thisD.41296 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_1>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 256B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _11
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41299 => D#95ptD.0
  # DEBUG __pD.41298 => _11
  # DEBUG __nD.41297 => D#88ptD.0
  if (_11 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41303 => _11
  # DEBUG __aD.41301 => D#84ptD.0
  # DEBUG __nD.41302 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41306 => _11
  # DEBUG thisD.41304 => D#80ptD.0
  # DEBUG D.41305 => D#81ptD.0
  # .MEM_43 = VDEF <.MEM_1>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_11);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_1(25), .MEM_43(26)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41307 => D#87ptD.0
  # DEBUG thisD.41308 => D#87ptD.0
  # DEBUG thisD.41309 => D#87ptD.0
  # .MEM_48 = VDEF <.MEM_29>
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  [LP 4] resx 5
;;    succ:       28 (EH,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 (EH,EXECUTABLE)
<L1>: [LP 4]
  # DEBUG D#213ptD.0 => &this_2(D)->_rptrD.36923
  # DEBUG thisD.41310 => D#213ptD.0
  # DEBUG D#94ptD.0 => &D#213ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#213ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#213ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#213ptD.0->D.34311
  # DEBUG thisD.41311 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_48>
  # PT = nonlocal escaped 
  _25 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 232B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _25
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41314 => D#95ptD.0
  # DEBUG __pD.41313 => _25
  # DEBUG __nD.41312 => D#88ptD.0
  if (_25 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41318 => _25
  # DEBUG __aD.41316 => D#84ptD.0
  # DEBUG __nD.41317 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41321 => _25
  # DEBUG thisD.41319 => D#80ptD.0
  # DEBUG D.41320 => D#81ptD.0
  # .MEM_49 = VDEF <.MEM_48>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_48(28), .MEM_49(29)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41322 => D#87ptD.0
  # DEBUG thisD.41323 => D#87ptD.0
  # DEBUG thisD.41324 => D#87ptD.0
  # .MEM_54 = VDEF <.MEM_13>
  MEM[(struct  &)this_2(D) + 232] ={v} {CLOBBER};
  [LP 3] resx 4
;;    succ:       31 (EH,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 0
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 (EH,EXECUTABLE)
<L2>: [LP 3]
  # DEBUG D#212ptD.0 => &this_2(D)->_reqD.36922
  # DEBUG thisD.41325 => D#212ptD.0
  # DEBUG D#94ptD.0 => &D#212ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#212ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#212ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#212ptD.0->D.34311
  # DEBUG thisD.41326 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_54>
  # PT = nonlocal escaped 
  _26 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 208B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _26
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41329 => D#95ptD.0
  # DEBUG __pD.41328 => _26
  # DEBUG __nD.41327 => D#88ptD.0
  if (_26 != 0B)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 0
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41333 => _26
  # DEBUG __aD.41331 => D#84ptD.0
  # DEBUG __nD.41332 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41336 => _26
  # DEBUG thisD.41334 => D#80ptD.0
  # DEBUG D.41335 => D#81ptD.0
  # .MEM_55 = VDEF <.MEM_54>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       31 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_54(31), .MEM_55(32)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41337 => D#87ptD.0
  # DEBUG thisD.41338 => D#87ptD.0
  # DEBUG thisD.41339 => D#87ptD.0
  # .MEM_60 = VDEF <.MEM_14>
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  [LP 2] resx 3
;;    succ:       34 (EH,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 (EH,EXECUTABLE)
<L3>: [LP 2]
  # DEBUG D#211ptD.0 => &this_2(D)->_countsD.36921
  # DEBUG thisD.41340 => D#211ptD.0
  # DEBUG D#94ptD.0 => &D#211ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#211ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#211ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#211ptD.0->D.34311
  # DEBUG thisD.41341 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_60>
  # PT = nonlocal escaped 
  _27 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 184B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _27
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41344 => D#95ptD.0
  # DEBUG __pD.41343 => _27
  # DEBUG __nD.41342 => D#88ptD.0
  if (_27 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41348 => _27
  # DEBUG __aD.41346 => D#84ptD.0
  # DEBUG __nD.41347 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41351 => _27
  # DEBUG thisD.41349 => D#80ptD.0
  # DEBUG D.41350 => D#81ptD.0
  # .MEM_61 = VDEF <.MEM_60>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_27);
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_60(34), .MEM_61(35)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41352 => D#87ptD.0
  # DEBUG thisD.41353 => D#87ptD.0
  # DEBUG thisD.41354 => D#87ptD.0
  # .MEM_66 = VDEF <.MEM_30>
  MEM[(struct  &)this_2(D) + 184] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       37 (EH,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 0
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 (EH,EXECUTABLE)
<L4>: [LP 1]
  # DEBUG D#210ptD.0 => &this_2(D)->D.36957
  # DEBUG thisD.41355 => D#210ptD.0
  # .MEM_67 = VDEF <.MEM_66>
  MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#306ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)]._requestD.35166
  # DEBUG thisD.42010 => D#306ptD.0
  # DEBUG D#179ptD.0 => &D#306ptD.0->D.35164
  # DEBUG thisD.40627 => D#179ptD.0
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  _69 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  __first_110 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.42013 => __first_110
  # DEBUG __lastD.42012 => _69
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 0
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_111 = PHI <__first_110(37), __first_113(41)>
  # .MEM_123 = PHI <.MEM_67(37), .MEM_152(41)>
  # DEBUG __firstD.42018 => __first_111
  if (_69 == __first_111)
    goto <bb 42>;
  else
    goto <bb 39>;
;;    succ:       42 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 0
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.40517 => __first_111
  # DEBUG __pointerD.42019 => NULL
  # DEBUG thisD.42020 => NULL
  # DEBUG thisD.40482 => D#174ptD.0
  # DEBUG D#154ptD.0 => D#176ptD.0
  # DEBUG D#155ptD.0 => D#177ptD.0
  # DEBUG __firstD.40481 => D#154ptD.0
  # DEBUG __lastD.40480 => D#155ptD.0
  # DEBUG D.40479 => D#156ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#152ptD.0 => D#154ptD.0
  # DEBUG D#150ptD.0 => D#152ptD.0
  # DEBUG D#151ptD.0 => D#153ptD.0
  # DEBUG __firstD.40393 => D#150ptD.0
  # DEBUG __lastD.40392 => D#151ptD.0
  # DEBUG D#149ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D.40382 => D#146ptD.0
  # DEBUG D.40381 => D#147ptD.0
  # DEBUG thisD.42021 => D#175ptD.0
  # DEBUG D#173ptD.0 => D#175ptD.0->_M_implD.37299._M_end_of_storageD.37303
  # DEBUG D#172ptD.0 => (long intD.12) D#173ptD.0
  # VUSE <.MEM_123>
  # PT = nonlocal escaped 
  _112 = MEM[(struct _Vector_baseD.37066 *)__first_111]._M_implD.37299._M_startD.37301;
  # DEBUG D#171ptD.0 => (long intD.12) _112
  # DEBUG D#170ptD.0 => D#172ptD.0 - D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0 /[ex] 16
  # DEBUG D#166ptD.0 => D#175ptD.0
  # DEBUG D#167ptD.0 => (long unsigned intD.14) D#169ptD.0
  # DEBUG __pD.42024 => _112
  # DEBUG thisD.42022 => D#166ptD.0
  # DEBUG __nD.42023 => D#167ptD.0
  # DEBUG D#165ptD.0 => D#167ptD.0
  # DEBUG D#164ptD.0 => D#166ptD.0
  if (_112 != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 0
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#163ptD.0 => &D#164ptD.0->_M_implD.37299
  # DEBUG D#161ptD.0 => D#163ptD.0
  # DEBUG D#162ptD.0 => D#165ptD.0
  # DEBUG __pD.42028 => _112
  # DEBUG __aD.42026 => D#161ptD.0
  # DEBUG __nD.42027 => D#162ptD.0
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG __pD.42031 => _112
  # DEBUG thisD.42029 => D#157ptD.0
  # DEBUG D.42030 => D#158ptD.0
  # .MEM_147 = VDEF <.MEM_123>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_112);
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 0
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_124 = PHI <.MEM_123(39), .MEM_147(40)>
  # DEBUG D#168ptD.0 => &D#175ptD.0->_M_implD.37299
  # DEBUG thisD.42032 => D#168ptD.0
  # DEBUG thisD.42033 => D#168ptD.0
  # DEBUG thisD.42034 => D#168ptD.0
  # .MEM_152 = VDEF <.MEM_124>
  MEM[(struct  &)__first_111] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_113 = __first_111 + 24;
  # DEBUG __firstD.42018 => __first_113
  goto <bb 38>;
;;    succ:       38 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 0
;;    prev block 41, next block 55, flags: (NEW, REACHABLE)
;;    pred:       38 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 0, count 0, freq 0
;;    prev block 42, next block 43, flags: (NEW)
;;    pred:       42 [100.0%]  (FALLTHRU)
  # DEBUG D#180ptD.0 => &D#306ptD.0->D.35164
  # DEBUG thisD.42035 => D#180ptD.0
  # DEBUG D#116ptD.0 => D#180ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#115ptD.0 => (long intD.12) D#116ptD.0
  # VUSE <.MEM_123>
  # PT = nonlocal escaped 
  _114 = MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657;
  # DEBUG D#114ptD.0 => (long intD.12) _114
  # DEBUG D#113ptD.0 => D#115ptD.0 - D#114ptD.0
  # DEBUG D#112ptD.0 => D#113ptD.0 /[ex] 24
  # DEBUG D#109ptD.0 => D#180ptD.0
  # DEBUG D#110ptD.0 => (long unsigned intD.14) D#112ptD.0
  # DEBUG __pD.42038 => _114
  # DEBUG thisD.42036 => D#109ptD.0
  # DEBUG __nD.42037 => D#110ptD.0
  # DEBUG D#108ptD.0 => D#110ptD.0
  # DEBUG D#107ptD.0 => D#109ptD.0
  if (_114 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 0
;;    prev block 55, next block 44, flags: (NEW, REACHABLE)
;;    pred:       55 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#106ptD.0 => &D#107ptD.0->_M_implD.34655
  # DEBUG D#104ptD.0 => D#106ptD.0
  # DEBUG D#105ptD.0 => D#108ptD.0
  # DEBUG __pD.42042 => _114
  # DEBUG __aD.42040 => D#104ptD.0
  # DEBUG __nD.42041 => D#105ptD.0
  # DEBUG D#103ptD.0 => D#105ptD.0
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG __pD.42045 => _114
  # DEBUG thisD.42043 => D#100ptD.0
  # DEBUG D.42044 => D#101ptD.0
  # .MEM_153 = VDEF <.MEM_123>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_114);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       55 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_125 = PHI <.MEM_123(55), .MEM_153(43)>
  # DEBUG D#111ptD.0 => &D#180ptD.0->_M_implD.34655
  # DEBUG thisD.42046 => D#111ptD.0
  # DEBUG thisD.42047 => D#111ptD.0
  # DEBUG thisD.42048 => D#111ptD.0
  # .MEM_158 = VDEF <.MEM_125>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#305ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235
  # DEBUG thisD.41979 => D#305ptD.0
  # .MEM_159 = VDEF <.MEM_158>
  MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#99ptD.0 => &D#305ptD.0->_outmatchD.34314
  # DEBUG thisD.41980 => D#99ptD.0
  # DEBUG D#94ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#99ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#99ptD.0->D.34311
  # DEBUG thisD.41981 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_159>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _24
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41984 => D#95ptD.0
  # DEBUG __pD.41983 => _24
  # DEBUG __nD.41982 => D#88ptD.0
  if (_24 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.41988 => _24
  # DEBUG __aD.41986 => D#84ptD.0
  # DEBUG __nD.41987 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.41991 => _24
  # DEBUG thisD.41989 => D#80ptD.0
  # DEBUG D.41990 => D#81ptD.0
  # .MEM_160 = VDEF <.MEM_159>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       44 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_126 = PHI <.MEM_159(44), .MEM_160(45)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.41992 => D#87ptD.0
  # DEBUG thisD.41993 => D#87ptD.0
  # DEBUG thisD.41994 => D#87ptD.0
  # .MEM_165 = VDEF <.MEM_126>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#98ptD.0 => &D#305ptD.0->_inmatchD.34313
  # DEBUG thisD.41995 => D#98ptD.0
  # DEBUG D#94ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.39917 => D#94ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#96ptD.0 => D#98ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.39914 => D#96ptD.0
  # DEBUG __lastD.39915 => D#97ptD.0
  # DEBUG D.39916 => NULL
  # DEBUG D#38ptD.0 => D#96ptD.0
  # DEBUG D#39ptD.0 => D#97ptD.0
  # DEBUG __firstD.39613 => D#38ptD.0
  # DEBUG __lastD.39612 => D#39ptD.0
  # DEBUG D#37ptD.0 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D.39602 => D#34ptD.0
  # DEBUG D.39601 => D#35ptD.0
  # DEBUG D#95ptD.0 => &D#98ptD.0->D.34311
  # DEBUG thisD.41996 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#92ptD.0 => (long intD.12) D#93ptD.0
  # VUSE <.MEM_165>
  # PT = nonlocal escaped 
  _108 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#91ptD.0 => (long intD.12) _108
  # DEBUG D#90ptD.0 => D#92ptD.0 - D#91ptD.0
  # DEBUG D#89ptD.0 => D#90ptD.0 /[ex] 4
  # DEBUG D#88ptD.0 => (long unsigned intD.14) D#89ptD.0
  # DEBUG thisD.41999 => D#95ptD.0
  # DEBUG __pD.41998 => _108
  # DEBUG __nD.41997 => D#88ptD.0
  if (_108 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;
;;    succ:       47 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       46 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#86ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG D#84ptD.0 => D#86ptD.0
  # DEBUG D#85ptD.0 => D#88ptD.0
  # DEBUG __pD.42003 => _108
  # DEBUG __aD.42001 => D#84ptD.0
  # DEBUG __nD.42002 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#80ptD.0 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  # DEBUG __pD.42006 => _108
  # DEBUG thisD.42004 => D#80ptD.0
  # DEBUG D.42005 => D#81ptD.0
  # .MEM_166 = VDEF <.MEM_165>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_108);
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       46 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_127 = PHI <.MEM_165(46), .MEM_166(47)>
  # DEBUG D#87ptD.0 => &D#95ptD.0->_M_implD.33802
  # DEBUG thisD.42007 => D#87ptD.0
  # DEBUG thisD.42008 => D#87ptD.0
  # DEBUG thisD.42009 => D#87ptD.0
  # .MEM_171 = VDEF <.MEM_127>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#304ptD.0 => &MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407
  # DEBUG thisD.42049 => D#304ptD.0
  # .MEM_172 = VDEF <.MEM_171>
  MEM[(struct ModuleD.28688 *)this_2(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#79ptD.0 => &D#304ptD.0->_childrenD.29438
  # DEBUG thisD.42050 => D#79ptD.0
  # DEBUG D#73ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.39805 => D#73ptD.0
  # DEBUG D#76ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#75ptD.0 => D#79ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#31ptD.0 => D#75ptD.0
  # DEBUG D#32ptD.0 => D#76ptD.0
  # DEBUG __firstD.39804 => D#31ptD.0
  # DEBUG __lastD.39803 => D#32ptD.0
  # DEBUG D.39802 => D#33ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __firstD.39575 => D#27ptD.0
  # DEBUG __lastD.39574 => D#28ptD.0
  # DEBUG D#26ptD.0 => D#28ptD.0
  # DEBUG D#25ptD.0 => D#27ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#24ptD.0 => D#26ptD.0
  # DEBUG D.39564 => D#23ptD.0
  # DEBUG D.39563 => D#24ptD.0
  # DEBUG D#74ptD.0 => &D#79ptD.0->D.29436
  # DEBUG thisD.42051 => D#74ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#71ptD.0 => (long intD.12) D#72ptD.0
  # VUSE <.MEM_172>
  # PT = nonlocal escaped 
  _68 = MEM[(struct _Vector_baseD.28694 *)this_2(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#70ptD.0 => (long intD.12) _68
  # DEBUG D#69ptD.0 => D#71ptD.0 - D#70ptD.0
  # DEBUG D#68ptD.0 => D#69ptD.0 /[ex] 8
  # DEBUG D#65ptD.0 => D#74ptD.0
  # DEBUG D#66ptD.0 => (long unsigned intD.14) D#68ptD.0
  # DEBUG __pD.42054 => _68
  # DEBUG thisD.42052 => D#65ptD.0
  # DEBUG __nD.42053 => D#66ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  if (_68 != 0B)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => &D#63ptD.0->_M_implD.28927
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#64ptD.0
  # DEBUG __pD.42058 => _68
  # DEBUG __aD.42056 => D#60ptD.0
  # DEBUG __nD.42057 => D#61ptD.0
  # DEBUG D#59ptD.0 => D#61ptD.0
  # DEBUG D#58ptD.0 => D#60ptD.0
  # DEBUG D#56ptD.0 => D#58ptD.0
  # DEBUG D#57ptD.0 => D#59ptD.0
  # DEBUG __pD.42061 => _68
  # DEBUG thisD.42059 => D#56ptD.0
  # DEBUG D.42060 => D#57ptD.0
  # .MEM_173 = VDEF <.MEM_172>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_68);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       48 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_128 = PHI <.MEM_172(48), .MEM_173(49)>
  # DEBUG D#67ptD.0 => &D#74ptD.0->_M_implD.28927
  # DEBUG thisD.42062 => D#67ptD.0
  # DEBUG thisD.42063 => D#67ptD.0
  # DEBUG thisD.42064 => D#67ptD.0
  # .MEM_178 = VDEF <.MEM_128>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#78ptD.0 => &D#304ptD.0->_fullnameD.28691
  # DEBUG thisD.42065 => D#78ptD.0
  # DEBUG thisD.42066 => D#78ptD.0
  # DEBUG thisD.42075 => D#78ptD.0
  # VUSE <.MEM_178>
  # PT = nonlocal escaped 
  _115 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.42076 => D#78ptD.0
  # PT = nonlocal 
  _116 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_115 != _116)
    goto <bb 51>;
  else
    goto <bb 52>;
;;    succ:       51 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#78ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.42068 => D#78ptD.0
  # DEBUG __sizeD.42067 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#78ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#78ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.42071 => _115
  # DEBUG __aD.42069 => D#49ptD.0
  # DEBUG __nD.42070 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.42074 => _115
  # DEBUG thisD.42072 => D#45ptD.0
  # DEBUG D.42073 => D#46ptD.0
  # .MEM_179 = VDEF <.MEM_178>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_115);
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       50 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_129 = PHI <.MEM_178(50), .MEM_179(51)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#78ptD.0]._M_dataplusD.11519
  # DEBUG thisD.42077 => D#55ptD.0
  # DEBUG thisD.42078 => D#55ptD.0
  # DEBUG thisD.42079 => D#55ptD.0
  # .MEM_183 = VDEF <.MEM_129>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#77ptD.0 => &D#304ptD.0->_nameD.28690
  # DEBUG thisD.42080 => D#77ptD.0
  # DEBUG thisD.42081 => D#77ptD.0
  # DEBUG thisD.42090 => D#77ptD.0
  # VUSE <.MEM_183>
  # PT = nonlocal escaped 
  _117 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39424 => D#1ptD.0
  # DEBUG thisD.42091 => D#77ptD.0
  # PT = nonlocal 
  _118 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_117 != _118)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#54ptD.0 => MEM[(struct basic_stringD.2844 *)D#77ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG thisD.42083 => D#77ptD.0
  # DEBUG __sizeD.42082 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG D#1ptD.0 => D#77ptD.0
  # DEBUG thisD.39687 => D#1ptD.0
  # DEBUG thisD.39688 => D#77ptD.0
  # DEBUG D#51ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0 + 1
  # DEBUG __pD.42086 => _117
  # DEBUG __aD.42084 => D#49ptD.0
  # DEBUG __nD.42085 => D#50ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG __pD.42089 => _117
  # DEBUG thisD.42087 => D#45ptD.0
  # DEBUG D.42088 => D#46ptD.0
  # .MEM_184 = VDEF <.MEM_183>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36963 D.41937 D.41948 D.41959 D.41970 } (nonlocal, escaped)
  _ZdlPvD.2766 (_117);
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0
;;    prev block 53, next block 1, flags: (NEW, REACHABLE)
;;    pred:       52 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_130 = PHI <.MEM_183(52), .MEM_184(53)>
  # DEBUG D#55ptD.0 => &MEM[(struct basic_stringD.2844 *)D#77ptD.0]._M_dataplusD.11519
  # DEBUG thisD.42092 => D#55ptD.0
  # DEBUG thisD.42093 => D#55ptD.0
  # DEBUG thisD.42094 => D#55ptD.0
  # .MEM_70 = VDEF <.MEM_130>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


