
;; Function virtual bool DenseAllocator::InputHasRequests(int) const (_ZNK14DenseAllocator16InputHasRequestsEi, funcdef_no=1759, decl_uid=36263, cgraph_uid=429, symbol_order=430)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual bool DenseAllocator::InputHasRequests(int) const (const struct DenseAllocator * const this, int in)
{
  int out;
  bool _2;
  long unsigned int _7;
  long unsigned int _10;
  int _11;
  const struct sRequest & _15;
  int _20;
  long unsigned int _22;
  struct vector * const _23;
  long unsigned int _24;
  const struct vector & _25;
  struct sRequest * const _26;
  int _29;

  <bb 2>:
  # DEBUG out => 0
  # DEBUG out => 0
  _20 = this_5(D)->D.36298._outputs;
  if (_20 <= 0)
    goto <bb 8>;
  else
    goto <bb 3>;

  <bb 3>:
  _22 = (long unsigned int) in_8(D);
  # DEBUG D#81 => &this_5(D)->_request
  _23 = MEM[(struct vector * *)this_5(D) + 160B];
  # DEBUG D#63 => D#81
  # DEBUG __n => _22
  # DEBUG this => D#63
  _24 = _22 * 24;
  _25 = _23 + _24;
  _26 = MEM[(struct sRequest * *)_25];
  # DEBUG __n => 0
  # DEBUG this => D#64
  _29 = MEM[(const struct sRequest &)_26].label;
  if (_29 >= 0)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 7>;

  <bb 5>:
  _7 = (long unsigned int) out_12;
  # DEBUG D#81 => &this_5(D)->_request
  # DEBUG D#63 => D#81
  # DEBUG __n => _22
  # DEBUG this => D#63
  # DEBUG __n => _7
  # DEBUG this => D#64
  _10 = _7 * 16;
  _15 = _26 + _10;
  _11 = _15->label;
  if (_11 >= 0)
    goto <bb 8>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # out_30 = PHI <0(4), out_12(6)>
  # DEBUG out => out_30
  # DEBUG D#81 => &this_5(D)->_request
  # DEBUG D#63 => D#81
  # DEBUG __n => _22
  # DEBUG this => D#63
  # DEBUG __n => 0
  # DEBUG this => D#64
  out_12 = out_30 + 1;
  # DEBUG out => out_12
  # DEBUG out => out_12
  if (out_12 >= _20)
    goto <bb 8>;
  else
    goto <bb 5>;

  <bb 8>:
  # _2 = PHI <0(7), 1(5), 0(2), 1(3)>

  <bb 9>:
  return _2;

}



;; Function virtual bool DenseAllocator::OutputHasRequests(int) const (_ZNK14DenseAllocator17OutputHasRequestsEi, funcdef_no=1760, decl_uid=36260, cgraph_uid=430, symbol_order=431)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual bool DenseAllocator::OutputHasRequests(int) const (const struct DenseAllocator * const this, int out)
{
  int in;
  bool _2;
  long unsigned int _9;
  int _11;
  struct sRequest * const _14;
  const struct sRequest & _15;
  long unsigned int _16;
  const struct vector & _17;
  int _20;
  long unsigned int _21;
  struct vector * const _23;
  struct sRequest * const _26;
  long unsigned int _27;
  const struct sRequest & _28;
  int _29;

  <bb 2>:
  # DEBUG in => 0
  # DEBUG in => 0
  _20 = this_5(D)->D.36298._inputs;
  if (_20 <= 0)
    goto <bb 8>;
  else
    goto <bb 3>;

  <bb 3>:
  _21 = (long unsigned int) out_7(D);
  # DEBUG D#82 => &this_5(D)->_request
  _23 = MEM[(struct vector * *)this_5(D) + 160B];
  # DEBUG D#63 => D#82
  # DEBUG __n => 0
  # DEBUG this => D#63
  _26 = MEM[(struct sRequest * *)_23];
  # DEBUG __n => _21
  # DEBUG this => D#64
  _27 = _21 * 16;
  _28 = _26 + _27;
  _29 = _28->label;
  if (_29 >= 0)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 7>;

  <bb 5>:
  _9 = (long unsigned int) in_12;
  # DEBUG D#82 => &this_5(D)->_request
  # DEBUG D#63 => D#82
  # DEBUG __n => _9
  # DEBUG this => D#63
  _16 = _9 * 24;
  _17 = _23 + _16;
  _14 = MEM[(struct sRequest * *)_17];
  # DEBUG __n => _21
  # DEBUG this => D#64
  _15 = _14 + _27;
  _11 = _15->label;
  if (_11 >= 0)
    goto <bb 8>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # in_30 = PHI <0(4), in_12(6)>
  # DEBUG in => in_30
  # DEBUG D#82 => &this_5(D)->_request
  # DEBUG D#63 => D#82
  # DEBUG __n => 0
  # DEBUG this => D#63
  # DEBUG __n => _21
  # DEBUG this => D#64
  in_12 = in_30 + 1;
  # DEBUG in => in_12
  # DEBUG in => in_12
  if (in_12 >= _20)
    goto <bb 8>;
  else
    goto <bb 5>;

  <bb 8>:
  # _2 = PHI <0(7), 1(5), 0(2), 1(3)>

  <bb 9>:
  return _2;

}



;; Function virtual int DenseAllocator::NumInputRequests(int) const (_ZNK14DenseAllocator16NumInputRequestsEi, funcdef_no=1761, decl_uid=36269, cgraph_uid=431, symbol_order=432)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual int DenseAllocator::NumInputRequests(int) const (const struct DenseAllocator * const this, int in)
{
  int out;
  int result;
  long unsigned int pretmp_4;
  long unsigned int _8;
  long unsigned int _11;
  int _12;
  const struct sRequest & _17;
  struct vector * const pretmp_20;
  int _23;
  long unsigned int pretmp_30;
  const struct vector & pretmp_31;
  struct sRequest * const pretmp_32;

  <bb 2>:
  # DEBUG result => 0
  # DEBUG out => 0
  # DEBUG out => 0
  # DEBUG result => 0
  _23 = this_6(D)->D.36298._outputs;
  if (_23 <= 0)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_4 = (long unsigned int) in_9(D);
  pretmp_20 = MEM[(struct vector * *)this_6(D) + 160B];
  pretmp_30 = pretmp_4 * 24;
  pretmp_31 = pretmp_20 + pretmp_30;
  pretmp_32 = MEM[(struct sRequest * *)pretmp_31];

  <bb 4>:
  # result_24 = PHI <0(3), result_2(8)>
  # out_26 = PHI <0(3), out_14(8)>
  # DEBUG out => out_26
  # DEBUG result => result_24
  _8 = (long unsigned int) out_26;
  # DEBUG D#83 => &this_6(D)->_request
  # DEBUG D#63 => D#83
  # DEBUG __n => (long unsigned int) in_9(D)
  # DEBUG this => D#63
  # DEBUG __n => _8
  # DEBUG this => D#64
  _11 = _8 * 16;
  _17 = pretmp_32 + _11;
  _12 = _17->label;
  if (_12 >= 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  result_13 = result_24 + 1;
  # DEBUG result => result_13

  <bb 6>:
  # result_2 = PHI <result_24(4), result_13(5)>
  # DEBUG result => result_2
  out_14 = out_26 + 1;
  # DEBUG out => out_14
  # DEBUG out => out_14
  # DEBUG result => result_2
  if (out_14 >= _23)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # result_28 = PHI <result_2(6)>

  <bb 10>:
  goto <bb 9>;

  <bb 8>:
  goto <bb 4>;

  <bb 9>:
  # result_25 = PHI <result_28(10), 0(2)>

  <bb 11>:
  return result_25;

}



;; Function virtual int DenseAllocator::NumOutputRequests(int) const (_ZNK14DenseAllocator17NumOutputRequestsEi, funcdef_no=1762, decl_uid=36266, cgraph_uid=432, symbol_order=433)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual int DenseAllocator::NumOutputRequests(int) const (const struct DenseAllocator * const this, int out)
{
  int in;
  int result;
  long unsigned int _10;
  int _12;
  struct sRequest * const _16;
  const struct sRequest & _17;
  long unsigned int _18;
  const struct vector & _19;
  long unsigned int pretmp_20;
  int _23;
  long unsigned int pretmp_30;
  struct vector * const pretmp_32;

  <bb 2>:
  # DEBUG result => 0
  # DEBUG in => 0
  # DEBUG in => 0
  # DEBUG result => 0
  _23 = this_6(D)->D.36298._inputs;
  if (_23 <= 0)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_20 = (long unsigned int) out_8(D);
  pretmp_30 = pretmp_20 * 16;
  pretmp_32 = MEM[(struct vector * *)this_6(D) + 160B];

  <bb 4>:
  # result_24 = PHI <0(3), result_2(8)>
  # in_26 = PHI <0(3), in_14(8)>
  # DEBUG in => in_26
  # DEBUG result => result_24
  _10 = (long unsigned int) in_26;
  # DEBUG D#84 => &this_6(D)->_request
  # DEBUG D#63 => D#84
  # DEBUG __n => _10
  # DEBUG this => D#63
  _18 = _10 * 24;
  _19 = pretmp_32 + _18;
  _16 = MEM[(struct sRequest * *)_19];
  # DEBUG __n => (long unsigned int) out_8(D)
  # DEBUG this => D#64
  _17 = _16 + pretmp_30;
  _12 = _17->label;
  if (_12 >= 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  result_13 = result_24 + 1;
  # DEBUG result => result_13

  <bb 6>:
  # result_2 = PHI <result_24(4), result_13(5)>
  # DEBUG result => result_2
  in_14 = in_26 + 1;
  # DEBUG in => in_14
  # DEBUG in => in_14
  # DEBUG result => result_2
  if (in_14 >= _23)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # result_28 = PHI <result_2(6)>

  <bb 10>:
  goto <bb 9>;

  <bb 8>:
  goto <bb 4>;

  <bb 9>:
  # result_25 = PHI <result_28(10), 0(2)>

  <bb 11>:
  return result_25;

}



;; Function virtual bool SparseAllocator::InputHasRequests(int) const (_ZNK15SparseAllocator16InputHasRequestsEi, funcdef_no=1778, decl_uid=37930, cgraph_uid=448, symbol_order=449)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual bool SparseAllocator::InputHasRequests(int) const (const struct SparseAllocator * const this, int in)
{
  const struct _Rb_tree_node * __y;
  const int _7;
  const int _11;
  size_type _19;
  bool pretmp_23;
  bool _24;
  bool prephitmp_26;

  <bb 2>:
  # DEBUG D#452 => &this_1(D)->_in_occ
  # DEBUG this => D#452
  # DEBUG __x => &in
  # DEBUG D#450 => &D#452->_M_t
  # DEBUG this => D#450
  __y_3 = &MEM[(const struct _Rb_tree *)this_1(D) + 160B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_3
  # DEBUG D#451 => &D#452->_M_t
  # DEBUG this => D#451
  # DEBUG __k => &in
  # DEBUG this => D#451
  __y_5 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 176B];
  # DEBUG D#134 => D#451
  # DEBUG this => D#134
  # DEBUG D#441 => D#451
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &in
  # DEBUG __y => __y_3
  # DEBUG __x => __y_5
  if (__y_5 == 0B)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 3>:
  # __y_14 = PHI <__y_9(8), __y_8(7)>
  # __y_15 = PHI <__y_20(8), __y_21(7)>
  # DEBUG __y => __y_15
  # DEBUG __x => __y_14
  if (__y_14 == 0B)
    goto <bb 9>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:

  <bb 6>:
  # __y_21 = PHI <__y_5(5), __y_14(4)>
  # __y_20 = PHI <__y_3(5), __y_15(4)>
  # DEBUG __y => __y_20
  # DEBUG __x => __y_21
  # DEBUG __x => __y_21
  # DEBUG __x => __y_21
  # DEBUG this => __y_21
  # DEBUG D#438 => &__y_21->_M_value_field
  # DEBUG __r => D#438
  # DEBUG __x => D#438
  # DEBUG this => D#127
  # DEBUG D#439 => &D#440->_M_impl._M_key_compare
  # DEBUG D#95 => D#439
  _7 = MEM[(const int &)__y_21 + 32];
  # DEBUG D#96 => D#438
  # DEBUG D#97 => &in
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_7 >= in_16(D))
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG __y => __y_21
  __y_8 = MEM[(struct _Rb_tree_node_base * *)__y_21 + 16B];
  # DEBUG D#177 => __y_21
  # DEBUG __x => D#177
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 8>:
  __y_9 = MEM[(struct _Rb_tree_node_base * *)__y_21 + 24B];
  # DEBUG D#178 => __y_21
  # DEBUG __x => D#178
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 9>:
  # __y_29 = PHI <__y_15(3)>

  <bb 12>:
  # DEBUG this => NULL
  # DEBUG __x => __y_29
  # DEBUG __j$_M_node => __y_29
  # DEBUG this => D#451
  # DEBUG this => NULL
  # DEBUG __x => __y_3
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_3 == __y_29)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  # DEBUG __x => __y_29
  # DEBUG __x => __y_29
  # DEBUG this => __y_29
  # DEBUG D#447 => &__y_29->_M_value_field
  # DEBUG __r => D#447
  # DEBUG __x => D#447
  # DEBUG this => D#127
  # DEBUG D#449 => &MEM[(const struct _Rb_tree *)D#451]._M_impl._M_key_compare
  # DEBUG D#95 => D#449
  # DEBUG D#96 => &in
  _11 = MEM[(const int &)__y_29 + 32];
  # DEBUG D#97 => D#447
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  # DEBUG D#448 => {CLOBBER}
  # DEBUG __j$_M_node => D#448
  # DEBUG this => NULL
  # DEBUG __x => NULL
  _24 = _11 <= in_16(D);
  _19 = (size_type) _24;
  pretmp_23 = (bool) _19;

  <bb 11>:
  # prephitmp_26 = PHI <pretmp_23(10), 0(12), 0(2)>

  <bb 13>:
  return prephitmp_26;

}



;; Function virtual bool SparseAllocator::OutputHasRequests(int) const (_ZNK15SparseAllocator17OutputHasRequestsEi, funcdef_no=1779, decl_uid=37927, cgraph_uid=449, symbol_order=450)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual bool SparseAllocator::OutputHasRequests(int) const (const struct SparseAllocator * const this, int out)
{
  const struct _Rb_tree_node * __y;
  const int _7;
  const int _11;
  size_type _19;
  bool pretmp_23;
  bool _24;
  bool prephitmp_26;

  <bb 2>:
  # DEBUG D#453 => &this_1(D)->_out_occ
  # DEBUG this => D#453
  # DEBUG __x => &out
  # DEBUG D#450 => &D#453->_M_t
  # DEBUG this => D#450
  __y_3 = &MEM[(const struct _Rb_tree *)this_1(D) + 208B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_3
  # DEBUG D#451 => &D#453->_M_t
  # DEBUG this => D#451
  # DEBUG __k => &out
  # DEBUG this => D#451
  __y_5 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 224B];
  # DEBUG D#134 => D#451
  # DEBUG this => D#134
  # DEBUG D#441 => D#451
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &out
  # DEBUG __y => __y_3
  # DEBUG __x => __y_5
  if (__y_5 == 0B)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 3>:
  # __y_14 = PHI <__y_9(8), __y_8(7)>
  # __y_15 = PHI <__y_20(8), __y_21(7)>
  # DEBUG __y => __y_15
  # DEBUG __x => __y_14
  if (__y_14 == 0B)
    goto <bb 9>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:

  <bb 6>:
  # __y_21 = PHI <__y_5(5), __y_14(4)>
  # __y_20 = PHI <__y_3(5), __y_15(4)>
  # DEBUG __y => __y_20
  # DEBUG __x => __y_21
  # DEBUG __x => __y_21
  # DEBUG __x => __y_21
  # DEBUG this => __y_21
  # DEBUG D#438 => &__y_21->_M_value_field
  # DEBUG __r => D#438
  # DEBUG __x => D#438
  # DEBUG this => D#127
  # DEBUG D#439 => &D#440->_M_impl._M_key_compare
  # DEBUG D#95 => D#439
  _7 = MEM[(const int &)__y_21 + 32];
  # DEBUG D#96 => D#438
  # DEBUG D#97 => &out
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_7 >= out_16(D))
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG __y => __y_21
  __y_8 = MEM[(struct _Rb_tree_node_base * *)__y_21 + 16B];
  # DEBUG D#177 => __y_21
  # DEBUG __x => D#177
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 8>:
  __y_9 = MEM[(struct _Rb_tree_node_base * *)__y_21 + 24B];
  # DEBUG D#178 => __y_21
  # DEBUG __x => D#178
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 9>:
  # __y_29 = PHI <__y_15(3)>

  <bb 12>:
  # DEBUG this => NULL
  # DEBUG __x => __y_29
  # DEBUG __j$_M_node => __y_29
  # DEBUG this => D#451
  # DEBUG this => NULL
  # DEBUG __x => __y_3
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_3 == __y_29)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  # DEBUG __x => __y_29
  # DEBUG __x => __y_29
  # DEBUG this => __y_29
  # DEBUG D#447 => &__y_29->_M_value_field
  # DEBUG __r => D#447
  # DEBUG __x => D#447
  # DEBUG this => D#127
  # DEBUG D#449 => &MEM[(const struct _Rb_tree *)D#451]._M_impl._M_key_compare
  # DEBUG D#95 => D#449
  # DEBUG D#96 => &out
  _11 = MEM[(const int &)__y_29 + 32];
  # DEBUG D#97 => D#447
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  # DEBUG D#448 => {CLOBBER}
  # DEBUG __j$_M_node => D#448
  # DEBUG this => NULL
  # DEBUG __x => NULL
  _24 = _11 <= out_16(D);
  _19 = (size_type) _24;
  pretmp_23 = (bool) _19;

  <bb 11>:
  # prephitmp_26 = PHI <pretmp_23(10), 0(12), 0(2)>

  <bb 13>:
  return prephitmp_26;

}



;; Function virtual int SparseAllocator::NumInputRequests(int) const (_ZNK15SparseAllocator16NumInputRequestsEi, funcdef_no=1780, decl_uid=37936, cgraph_uid=450, symbol_order=451)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual int SparseAllocator::NumInputRequests(int) const (const struct SparseAllocator * const this, int in)
{
  const struct _Rb_tree_node * __y;
  const int _7;
  const int _11;
  size_type _19;
  int pretmp_23;
  bool _24;
  int prephitmp_26;

  <bb 2>:
  # DEBUG D#454 => &this_1(D)->_in_occ
  # DEBUG this => D#454
  # DEBUG __x => &in
  # DEBUG D#450 => &D#454->_M_t
  # DEBUG this => D#450
  __y_3 = &MEM[(const struct _Rb_tree *)this_1(D) + 160B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_3
  # DEBUG D#451 => &D#454->_M_t
  # DEBUG this => D#451
  # DEBUG __k => &in
  # DEBUG this => D#451
  __y_5 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 176B];
  # DEBUG D#134 => D#451
  # DEBUG this => D#134
  # DEBUG D#441 => D#451
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &in
  # DEBUG __y => __y_3
  # DEBUG __x => __y_5
  if (__y_5 == 0B)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 3>:
  # __y_14 = PHI <__y_9(8), __y_8(7)>
  # __y_15 = PHI <__y_20(8), __y_21(7)>
  # DEBUG __y => __y_15
  # DEBUG __x => __y_14
  if (__y_14 == 0B)
    goto <bb 9>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:

  <bb 6>:
  # __y_21 = PHI <__y_5(5), __y_14(4)>
  # __y_20 = PHI <__y_3(5), __y_15(4)>
  # DEBUG __y => __y_20
  # DEBUG __x => __y_21
  # DEBUG __x => __y_21
  # DEBUG __x => __y_21
  # DEBUG this => __y_21
  # DEBUG D#438 => &__y_21->_M_value_field
  # DEBUG __r => D#438
  # DEBUG __x => D#438
  # DEBUG this => D#127
  # DEBUG D#439 => &D#440->_M_impl._M_key_compare
  # DEBUG D#95 => D#439
  _7 = MEM[(const int &)__y_21 + 32];
  # DEBUG D#96 => D#438
  # DEBUG D#97 => &in
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_7 >= in_16(D))
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG __y => __y_21
  __y_8 = MEM[(struct _Rb_tree_node_base * *)__y_21 + 16B];
  # DEBUG D#177 => __y_21
  # DEBUG __x => D#177
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 8>:
  __y_9 = MEM[(struct _Rb_tree_node_base * *)__y_21 + 24B];
  # DEBUG D#178 => __y_21
  # DEBUG __x => D#178
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 9>:
  # __y_29 = PHI <__y_15(3)>

  <bb 12>:
  # DEBUG this => NULL
  # DEBUG __x => __y_29
  # DEBUG __j$_M_node => __y_29
  # DEBUG this => D#451
  # DEBUG this => NULL
  # DEBUG __x => __y_3
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_3 == __y_29)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  # DEBUG __x => __y_29
  # DEBUG __x => __y_29
  # DEBUG this => __y_29
  # DEBUG D#447 => &__y_29->_M_value_field
  # DEBUG __r => D#447
  # DEBUG __x => D#447
  # DEBUG this => D#127
  # DEBUG D#449 => &MEM[(const struct _Rb_tree *)D#451]._M_impl._M_key_compare
  # DEBUG D#95 => D#449
  # DEBUG D#96 => &in
  _11 = MEM[(const int &)__y_29 + 32];
  # DEBUG D#97 => D#447
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  # DEBUG D#448 => {CLOBBER}
  # DEBUG __j$_M_node => D#448
  # DEBUG this => NULL
  # DEBUG __x => NULL
  _24 = _11 <= in_16(D);
  _19 = (size_type) _24;
  pretmp_23 = (int) _19;

  <bb 11>:
  # prephitmp_26 = PHI <pretmp_23(10), 0(12), 0(2)>

  <bb 13>:
  return prephitmp_26;

}



;; Function virtual int SparseAllocator::NumOutputRequests(int) const (_ZNK15SparseAllocator17NumOutputRequestsEi, funcdef_no=1781, decl_uid=37933, cgraph_uid=451, symbol_order=452)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual int SparseAllocator::NumOutputRequests(int) const (const struct SparseAllocator * const this, int out)
{
  const struct _Rb_tree_node * __y;
  const int _7;
  const int _11;
  size_type _19;
  int pretmp_23;
  bool _24;
  int prephitmp_26;

  <bb 2>:
  # DEBUG D#455 => &this_1(D)->_out_occ
  # DEBUG this => D#455
  # DEBUG __x => &out
  # DEBUG D#450 => &D#455->_M_t
  # DEBUG this => D#450
  __y_3 = &MEM[(const struct _Rb_tree *)this_1(D) + 208B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_3
  # DEBUG D#451 => &D#455->_M_t
  # DEBUG this => D#451
  # DEBUG __k => &out
  # DEBUG this => D#451
  __y_5 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 224B];
  # DEBUG D#134 => D#451
  # DEBUG this => D#134
  # DEBUG D#441 => D#451
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &out
  # DEBUG __y => __y_3
  # DEBUG __x => __y_5
  if (__y_5 == 0B)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 3>:
  # __y_14 = PHI <__y_9(8), __y_8(7)>
  # __y_15 = PHI <__y_20(8), __y_21(7)>
  # DEBUG __y => __y_15
  # DEBUG __x => __y_14
  if (__y_14 == 0B)
    goto <bb 9>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:

  <bb 6>:
  # __y_21 = PHI <__y_5(5), __y_14(4)>
  # __y_20 = PHI <__y_3(5), __y_15(4)>
  # DEBUG __y => __y_20
  # DEBUG __x => __y_21
  # DEBUG __x => __y_21
  # DEBUG __x => __y_21
  # DEBUG this => __y_21
  # DEBUG D#438 => &__y_21->_M_value_field
  # DEBUG __r => D#438
  # DEBUG __x => D#438
  # DEBUG this => D#127
  # DEBUG D#439 => &D#440->_M_impl._M_key_compare
  # DEBUG D#95 => D#439
  _7 = MEM[(const int &)__y_21 + 32];
  # DEBUG D#96 => D#438
  # DEBUG D#97 => &out
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_7 >= out_16(D))
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG __y => __y_21
  __y_8 = MEM[(struct _Rb_tree_node_base * *)__y_21 + 16B];
  # DEBUG D#177 => __y_21
  # DEBUG __x => D#177
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 8>:
  __y_9 = MEM[(struct _Rb_tree_node_base * *)__y_21 + 24B];
  # DEBUG D#178 => __y_21
  # DEBUG __x => D#178
  # DEBUG __x => NULL
  goto <bb 3>;

  <bb 9>:
  # __y_29 = PHI <__y_15(3)>

  <bb 12>:
  # DEBUG this => NULL
  # DEBUG __x => __y_29
  # DEBUG __j$_M_node => __y_29
  # DEBUG this => D#451
  # DEBUG this => NULL
  # DEBUG __x => __y_3
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_3 == __y_29)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  # DEBUG __x => __y_29
  # DEBUG __x => __y_29
  # DEBUG this => __y_29
  # DEBUG D#447 => &__y_29->_M_value_field
  # DEBUG __r => D#447
  # DEBUG __x => D#447
  # DEBUG this => D#127
  # DEBUG D#449 => &MEM[(const struct _Rb_tree *)D#451]._M_impl._M_key_compare
  # DEBUG D#95 => D#449
  # DEBUG D#96 => &out
  _11 = MEM[(const int &)__y_29 + 32];
  # DEBUG D#97 => D#447
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  # DEBUG D#448 => {CLOBBER}
  # DEBUG __j$_M_node => D#448
  # DEBUG this => NULL
  # DEBUG __x => NULL
  _24 = _11 <= out_16(D);
  _19 = (size_type) _24;
  pretmp_23 = (int) _19;

  <bb 11>:
  # prephitmp_26 = PHI <pretmp_23(10), 0(12), 0(2)>

  <bb 13>:
  return prephitmp_26;

}



;; Function virtual bool SparseAllocator::ReadRequest(Allocator::sRequest&, int, int) const (_ZNK15SparseAllocator11ReadRequestERN9Allocator8sRequestEii, funcdef_no=1775, decl_uid=37912, cgraph_uid=445, symbol_order=446)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual bool SparseAllocator::ReadRequest(Allocator::sRequest&, int, int) const (const struct SparseAllocator * const this, struct sRequest & req, int in, int out)
{
  const struct _Rb_tree_node * __y;
  static const char __PRETTY_FUNCTION__[80] = "virtual bool SparseAllocator::ReadRequest(Allocator::sRequest&, int, int) const";
  bool found;
  int _6;
  int _7;
  long unsigned int _8;
  struct map * const _13;
  const int _17;
  const int _21;
  long unsigned int _25;
  const struct map & _26;

  <bb 2>:
  if (in_3(D) < 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _6 = this_5(D)->D.37974._inputs;
  if (in_3(D) >= _6)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  __assert_fail ("( in >= 0 ) && ( in < _inputs )", "allocators/allocator.cpp", 303, &__PRETTY_FUNCTION__);

  <bb 5>:
  if (out_27(D) < 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  _7 = this_5(D)->D.37974._outputs;
  if (_7 <= out_27(D))
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("( out >= 0 ) && ( out < _outputs )", "allocators/allocator.cpp", 304, &__PRETTY_FUNCTION__);

  <bb 8>:
  _8 = (long unsigned int) in_3(D);
  # DEBUG D#340 => &this_5(D)->_in_req
  _13 = MEM[(struct map * *)this_5(D) + 256B];
  # DEBUG D#86 => D#340
  # DEBUG __n => _8
  # DEBUG this => D#86
  _25 = _8 * 48;
  _26 = _13 + _25;
  # DEBUG this => NULL
  # DEBUG __x => &out
  # DEBUG this => D#339
  # DEBUG __k => &out
  # DEBUG this => D#339
  __y_14 = &MEM[(const struct _Rb_tree *)_26]._M_impl._M_header;
  __y_15 = MEM[(struct _Rb_tree_node_base * *)_26 + 16B];
  # DEBUG D#110 => D#339
  # DEBUG this => D#110
  # DEBUG D#335 => D#339
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &out
  # DEBUG __y => __y_14
  # DEBUG __x => __y_15
  if (__y_15 == 0B)
    goto <bb 21>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 12>;

  <bb 10>:
  # __y_23 = PHI <__y_19(14), __y_18(13)>
  # __y_24 = PHI <__y_40(14), __y_33(13)>
  # DEBUG __y => __y_24
  # DEBUG __x => __y_23
  if (__y_23 == 0B)
    goto <bb 15>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __y_33 = PHI <__y_15(9), __y_23(11)>
  # __y_40 = PHI <__y_14(9), __y_24(11)>
  # DEBUG __y => __y_40
  # DEBUG __x => __y_33
  # DEBUG __x => __y_33
  # DEBUG __x => __y_33
  # DEBUG this => __y_33
  # DEBUG D#331 => &__y_33->_M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#332 => &MEM[(const struct pair &)__y_33 + 32].first
  # DEBUG D#333 => &D#334->_M_impl._M_key_compare
  # DEBUG D#95 => D#333
  _17 = MEM[(const int &)__y_33 + 32];
  # DEBUG D#96 => D#332
  # DEBUG D#97 => &out
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_17 >= out_27(D))
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # DEBUG __y => __y_33
  __y_18 = MEM[(struct _Rb_tree_node_base * *)__y_33 + 16B];
  # DEBUG D#171 => __y_33
  # DEBUG __x => D#171
  # DEBUG __x => NULL
  goto <bb 10>;

  <bb 14>:
  __y_19 = MEM[(struct _Rb_tree_node_base * *)__y_33 + 24B];
  # DEBUG D#172 => __y_33
  # DEBUG __x => D#172
  # DEBUG __x => NULL
  goto <bb 10>;

  <bb 15>:
  # __y_22 = PHI <__y_24(10)>

  <bb 19>:
  # DEBUG this => NULL
  # DEBUG __x => __y_22
  # DEBUG __j$_M_node => __y_22
  # DEBUG this => D#339
  # DEBUG this => NULL
  # DEBUG __x => __y_14
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_14 == __y_22)
    goto <bb 21>;
  else
    goto <bb 16>;

  <bb 16>:
  # DEBUG __x => __y_22
  # DEBUG __x => __y_22
  # DEBUG this => __y_22
  # DEBUG D#174 => &__y_22->_M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#336 => &MEM[(const struct pair &)__y_22 + 32].first
  # DEBUG D#338 => &MEM[(const struct _Rb_tree *)D#339]._M_impl._M_key_compare
  # DEBUG D#95 => D#338
  # DEBUG D#96 => &out
  _21 = MEM[(const int &)__y_22 + 32];
  # DEBUG D#97 => D#336
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  # DEBUG D#337 => {CLOBBER}
  # DEBUG __j$_M_node => D#337
  # DEBUG match$_M_node => __y_22
  # DEBUG D#341 => &this_5(D)->_in_req
  # DEBUG D#86 => D#341
  # DEBUG __n => _8
  # DEBUG this => D#86
  # DEBUG this => NULL
  # DEBUG this => D#112
  # DEBUG this => NULL
  # DEBUG __x => __y_14
  # DEBUG this => &match
  # DEBUG __x => &D.42479
  if (_21 <= out_27(D))
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG this => &match
  # DEBUG this => __y_22
  # DEBUG D#342 => &__y_22->_M_value_field
  # DEBUG __r => D#342
  *req_9(D) = MEM[(const struct pair *)__y_22 + 32B].second;
  # DEBUG found => 1

  <bb 18>:
  # found_28 = PHI <1(17), 0(16)>

  <bb 21>:
  # found_1 = PHI <found_28(18), 0(19), 0(8)>

  <bb 20>:
  # DEBUG found => found_1
  # DEBUG D#343 => {CLOBBER}
  # DEBUG match$_M_node => D#343
  return found_1;

}



;; Function virtual void SparseAllocator::PrintRequests(std::ostream*) const (_ZNK15SparseAllocator13PrintRequestsEPSo, funcdef_no=1782, decl_uid=37939, cgraph_uid=452, symbol_order=453)

Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual void SparseAllocator::PrintRequests(std::ostream*) const (const struct SparseAllocator * const this, struct ostream * os)
{
  char_type D.62613;
  char __c;
  char_type D.62610;
  char __c;
  char_type D.62607;
  struct basic_ostream & D.62601;
  struct basic_ostream & D.62598;
  struct basic_ostream & D.62594;
  struct basic_ostream & D.62590;
  struct basic_ostream & D.62586;
  struct basic_ostream & D.62582;
  struct basic_ostream & D.62578;
  struct basic_ostream & D.62574;
  struct basic_ostream & D.62570;
  struct basic_ostream & D.62566;
  const struct _Rb_tree_node_base * const iter$_M_node;
  int output;
  int input;
  int pretmp_2;
  int pretmp_4;
  const size_type _11;
  long unsigned int _16;
  const struct map & _17;
  struct basic_ostream & _19;
  const struct _Rb_tree_node_base * _21;
  int _22;
  int _23;
  struct basic_ostream & _25;
  struct basic_ostream & _27;
  const size_type _29;
  long unsigned int _34;
  const struct map & _35;
  struct basic_ostream & _37;
  const int prephitmp_38;
  const struct map & _41;
  long unsigned int _42;
  int _44;
  int _45;
  struct basic_ostream & _47;
  struct basic_ostream & _49;
  const int pretmp_50;
  int (*__vtbl_ptr_type) () * _51;
  int prephitmp_54;
  struct map * const _55;
  struct map * const _56;
  struct map * const _57;
  struct map * const _58;
  struct map * const _59;
  struct map * const _60;
  long unsigned int _62;
  const struct map & _63;
  const struct map & _65;
  const struct _Rb_tree_node_base * _66;
  const struct map & _67;
  const struct __ctype_type * _72;
  const int prephitmp_82;
  long int _83;
  sizetype _84;
  struct basic_ios * _85;
  const struct _Rb_tree_node_base * _86;
  struct basic_ostream & _88;
  char _90;
  const int pretmp_91;
  const int prephitmp_92;
  char_type _93;
  int (*__vtbl_ptr_type) () * _98;
  int (*__vtbl_ptr_type) () _99;
  const int prephitmp_101;
  int _102;
  void * PROF_103;
  char_type _105;
  int _116;
  const struct _Rb_tree_node_base * _126;

  <bb 2>:
  # DEBUG this => &iter
  # DEBUG iter$_M_node => 0B
  if (os_12(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # os_1 = PHI <os_12(D)(3), &cout(2)>
  # DEBUG os => os_1
  # DEBUG __out => os_1
  # DEBUG __s => "Input requests = [ "
  # DEBUG __s => "Input requests = [ "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "Input requests = [ ", 19);
  # DEBUG input => 0
  _116 = this_14(D)->D.37974._inputs;
  if (_116 <= 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG __out => os_1
  # DEBUG __s => "], output requests = [ "
  # DEBUG __s => "], output requests = [ "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "], output requests = [ ", 23);
  # DEBUG output => 0
  _102 = this_14(D)->D.37974._outputs;
  if (_102 <= 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 6>:

  <bb 7>:
  # input_134 = PHI <0(6), input_31(14)>
  # prephitmp_38 = PHI <_116(6), prephitmp_92(14)>
  # DEBUG input => input_134
  _16 = (long unsigned int) input_134;
  # DEBUG D#115 => &this_14(D)->_in_req
  _55 = MEM[(struct map * *)this_14(D) + 256B];
  # DEBUG D#86 => D#115
  # DEBUG __n => _16
  # DEBUG this => D#86
  _42 = _16 * 48;
  _41 = _55 + _42;
  # DEBUG this => NULL
  _11 = MEM[(long unsigned int *)_41 + 40B];
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  if (_11 != 0)
    goto <bb 8>;
  else
    goto <bb 13>;

  <bb 8>:
  _19 = std::basic_ostream<char>::operator<< (os_1, input_134);
  # DEBUG __out => _19
  # DEBUG __s => " -> [ "
  # DEBUG __s => " -> [ "
  std::__ostream_insert<char, std::char_traits<char> > (_19, " -> [ ", 6);
  # DEBUG D#116 => &this_14(D)->_in_req
  _56 = MEM[(struct map * *)this_14(D) + 256B];
  # DEBUG D#86 => D#116
  # DEBUG __n => _16
  # DEBUG this => D#86
  _35 = _56 + _42;
  # DEBUG this => NULL
  iter$_M_node_40 = MEM[(struct _Rb_tree_node_base * *)_35 + 24B];
  # DEBUG D#113 => D#114
  # DEBUG this => D#113
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_40
  # DEBUG iter$_M_node => iter$_M_node_40
  # DEBUG iter$_M_node => iter$_M_node_40
  # DEBUG D#119 => &this_14(D)->_in_req
  # DEBUG D#86 => D#119
  # DEBUG __n => _16
  # DEBUG this => D#86
  # DEBUG this => NULL
  # DEBUG this => D#112
  _86 = &MEM[(const struct _Rb_tree *)_35]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _86
  # DEBUG this => &iter
  # DEBUG __x => &D.42698
  if (iter$_M_node_40 != _86)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  # DEBUG __out => os_1
  # DEBUG __s => "]  "
  # DEBUG __s => "]  "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "]  ", 3);
  pretmp_91 = this_14(D)->D.37974._inputs;
  goto <bb 13>;

  <bb 10>:

  <bb 11>:
  # iter$_M_node_39 = PHI <iter$_M_node_40(10), iter$_M_node_61(12)>
  # DEBUG iter$_M_node => iter$_M_node_39
  # DEBUG D#119 => &this_14(D)->_in_req
  # DEBUG D#86 => D#119
  # DEBUG __n => _16
  # DEBUG this => D#86
  # DEBUG this => NULL
  # DEBUG this => D#112
  # DEBUG this => NULL
  # DEBUG __x => _86
  # DEBUG this => &iter
  # DEBUG __x => &D.42698
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_39
  # DEBUG D#117 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_39]._M_value_field
  # DEBUG __r => D#117
  _22 = MEM[(const struct pair *)iter$_M_node_39 + 32B].second.in_pri;
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_39
  # DEBUG D#118 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_39]._M_value_field
  # DEBUG __r => D#118
  _23 = MEM[(const struct pair *)iter$_M_node_39 + 32B].second.port;
  _25 = std::basic_ostream<char>::operator<< (os_1, _23);
  # DEBUG __out => _25
  # DEBUG __s => "@"
  # DEBUG __s => "@"
  std::__ostream_insert<char, std::char_traits<char> > (_25, "@", 1);
  _27 = std::basic_ostream<char>::operator<< (_25, _22);
  # DEBUG __out => _27
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_27, " ", 1);
  # DEBUG this => &iter
  iter$_M_node_61 = std::_Rb_tree_increment (iter$_M_node_39);
  # DEBUG iter$_M_node => iter$_M_node_61
  # DEBUG iter$_M_node => iter$_M_node_61
  # DEBUG D#119 => &this_14(D)->_in_req
  _57 = MEM[(struct map * *)this_14(D) + 256B];
  # DEBUG D#86 => D#119
  # DEBUG __n => _16
  # DEBUG this => D#86
  _17 = _57 + _42;
  # DEBUG this => NULL
  # DEBUG this => D#112
  _21 = &MEM[(const struct _Rb_tree *)_17]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _21
  # DEBUG this => &iter
  # DEBUG __x => &D.42698
  if (_21 != iter$_M_node_61)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 12>:
  goto <bb 11>;

  <bb 13>:
  # prephitmp_92 = PHI <prephitmp_38(7), pretmp_91(9)>
  input_31 = input_134 + 1;
  # DEBUG input => input_31
  # DEBUG input => input_31
  if (input_31 >= prephitmp_92)
    goto <bb 5>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 7>;

  <bb 15>:
  # DEBUG __out => os_1
  # DEBUG __s => "]."
  # DEBUG __s => "]."
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "].", 2);
  # DEBUG this => os_1
  # DEBUG __pf => endl
  # DEBUG __os => os_1
  _51 = MEM[(struct basic_ostream *)os_1]._vptr.basic_ostream;
  _83 = MEM[(long int *)_51 + -24B];
  _84 = (sizetype) _83;
  _85 = os_1 + _84;
  # DEBUG this => _85
  # DEBUG __c => 10
  _72 = MEM[(const struct basic_ios *)_85]._M_ctype;
  # DEBUG __f => _72
  if (_72 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 16>:

  <bb 17>:
  # output_73 = PHI <0(16), output_52(24)>
  # prephitmp_101 = PHI <_102(16), prephitmp_82(24)>
  # DEBUG output => output_73
  _34 = (long unsigned int) output_73;
  # DEBUG D#120 => &this_14(D)->_out_req
  _58 = MEM[(struct map * *)this_14(D) + 280B];
  # DEBUG D#86 => D#120
  # DEBUG __n => _34
  # DEBUG this => D#86
  _62 = _34 * 48;
  _63 = _58 + _62;
  # DEBUG this => NULL
  _29 = MEM[(long unsigned int *)_63 + 40B];
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  if (_29 != 0)
    goto <bb 18>;
  else
    goto <bb 23>;

  <bb 18>:
  _37 = std::basic_ostream<char>::operator<< (os_1, output_73);
  # DEBUG __out => _37
  # DEBUG __s => " -> "
  # DEBUG __s => " -> "
  std::__ostream_insert<char, std::char_traits<char> > (_37, " -> ", 4);
  # DEBUG __out => os_1
  # DEBUG __s => "[ "
  # DEBUG __s => "[ "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "[ ", 2);
  # DEBUG D#121 => &this_14(D)->_out_req
  _59 = MEM[(struct map * *)this_14(D) + 280B];
  # DEBUG D#86 => D#121
  # DEBUG __n => _34
  # DEBUG this => D#86
  _65 = _59 + _62;
  # DEBUG this => NULL
  iter$_M_node_64 = MEM[(struct _Rb_tree_node_base * *)_65 + 24B];
  # DEBUG D#113 => D#114
  # DEBUG this => D#113
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_64
  # DEBUG iter$_M_node => iter$_M_node_64
  # DEBUG iter$_M_node => iter$_M_node_64
  # DEBUG D#124 => &this_14(D)->_out_req
  # DEBUG D#86 => D#124
  # DEBUG __n => _34
  # DEBUG this => D#86
  # DEBUG this => NULL
  # DEBUG this => D#112
  _126 = &MEM[(const struct _Rb_tree *)_65]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _126
  # DEBUG this => &iter
  # DEBUG __x => &D.42701
  if (iter$_M_node_64 != _126)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  # DEBUG __out => os_1
  # DEBUG __s => "]  "
  # DEBUG __s => "]  "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "]  ", 3);
  pretmp_50 = this_14(D)->D.37974._outputs;
  goto <bb 23>;

  <bb 20>:

  <bb 21>:
  # iter$_M_node_78 = PHI <iter$_M_node_64(20), iter$_M_node_68(22)>
  # DEBUG iter$_M_node => iter$_M_node_78
  # DEBUG D#124 => &this_14(D)->_out_req
  # DEBUG D#86 => D#124
  # DEBUG __n => _34
  # DEBUG this => D#86
  # DEBUG this => NULL
  # DEBUG this => D#112
  # DEBUG this => NULL
  # DEBUG __x => _126
  # DEBUG this => &iter
  # DEBUG __x => &D.42701
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_78
  # DEBUG D#122 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_78]._M_value_field
  # DEBUG __r => D#122
  _44 = MEM[(const struct pair *)iter$_M_node_78 + 32B].second.out_pri;
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_78
  # DEBUG D#123 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_78]._M_value_field
  # DEBUG __r => D#123
  _45 = MEM[(const struct pair *)iter$_M_node_78 + 32B].second.port;
  _47 = std::basic_ostream<char>::operator<< (os_1, _45);
  # DEBUG __out => _47
  # DEBUG __s => "@"
  # DEBUG __s => "@"
  std::__ostream_insert<char, std::char_traits<char> > (_47, "@", 1);
  _49 = std::basic_ostream<char>::operator<< (_47, _44);
  # DEBUG __out => _49
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_49, " ", 1);
  # DEBUG this => &iter
  iter$_M_node_68 = std::_Rb_tree_increment (iter$_M_node_78);
  # DEBUG iter$_M_node => iter$_M_node_68
  # DEBUG iter$_M_node => iter$_M_node_68
  # DEBUG D#124 => &this_14(D)->_out_req
  _60 = MEM[(struct map * *)this_14(D) + 280B];
  # DEBUG D#86 => D#124
  # DEBUG __n => _34
  # DEBUG this => D#86
  _67 = _60 + _62;
  # DEBUG this => NULL
  # DEBUG this => D#112
  _66 = &MEM[(const struct _Rb_tree *)_67]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _66
  # DEBUG this => &iter
  # DEBUG __x => &D.42701
  if (_66 != iter$_M_node_68)
    goto <bb 22>;
  else
    goto <bb 19>;

  <bb 22>:
  goto <bb 21>;

  <bb 23>:
  # prephitmp_82 = PHI <prephitmp_101(17), pretmp_50(19)>
  output_52 = output_73 + 1;
  # DEBUG output => output_52
  # DEBUG output => output_52
  if (output_52 >= prephitmp_82)
    goto <bb 15>;
  else
    goto <bb 24>;

  <bb 24>:
  goto <bb 17>;

  <bb 25>:
  std::__throw_bad_cast ();

  <bb 26>:
  # DEBUG this => _72
  # DEBUG __c => 10
  _90 = MEM[(const struct ctype *)_72]._M_widen_ok;
  if (_90 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _93 = MEM[(const struct ctype *)_72]._M_widen[10];
  pretmp_4 = (int) _93;
  goto <bb 30>;

  <bb 28>:
  # DEBUG this => _72
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_72);
  _98 = MEM[(const struct ctype *)_72].D.18015._vptr.facet;
  _99 = MEM[(int (*__vtbl_ptr_type) () *)_98 + 48B];
  PROF_103 = [obj_type_ref] OBJ_TYPE_REF(_99;(const struct ctype)_72->6);
  if (PROF_103 == do_widen)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  _105 = OBJ_TYPE_REF(_99;(const struct ctype)_72->6) (_72, 10);
  pretmp_2 = (int) _105;

  <bb 30>:
  # prephitmp_54 = PHI <pretmp_4(27), 10(28), pretmp_2(29)>
  _88 = std::basic_ostream<char>::put (os_1, prephitmp_54);
  # DEBUG __os => _88
  std::basic_ostream<char>::flush (_88);
  # DEBUG D#125 => {CLOBBER}
  # DEBUG iter$_M_node => D#125
  return;

}



;; Function virtual int SparseAllocator::ReadRequest(int, int) const (_ZNK15SparseAllocator11ReadRequestEii, funcdef_no=1774, decl_uid=37907, cgraph_uid=444, symbol_order=445)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual int SparseAllocator::ReadRequest(int, int) const (const struct SparseAllocator * const this, int in, int out)
{
  const struct _Rb_tree_node * __y;
  bool found;
  bool D.62713;
  struct sRequest r;
  int (*__vtbl_ptr_type) () * _4;
  int (*__vtbl_ptr_type) () _5;
  bool _9;
  void * PROF_13;
  bool _15;
  int _17;
  int _18;
  long unsigned int _19;
  struct map * const _20;
  long unsigned int _21;
  const struct map & _22;
  const int _26;
  const int _30;
  int pretmp_35;
  int pretmp_48;
  int prephitmp_50;

  <bb 2>:
  _4 = this_3(D)->D.37974.D.35470._vptr.Module;
  _5 = MEM[(int (*__vtbl_ptr_type) () *)_4 + 40B];
  PROF_13 = [obj_type_ref] OBJ_TYPE_REF(_5;(const struct SparseAllocator)this_3(D)->5);
  if (PROF_13 == ReadRequest)
    goto <bb 3>;
  else
    goto <bb 20>;

  <bb 3>:
  # DEBUG this => this_3(D)
  # DEBUG req => &r
  # DEBUG in => in_6(D)
  # DEBUG out => out_7(D)
  if (in_6(D) < 0)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  _17 = this_3(D)->D.37974._inputs;
  if (in_6(D) >= _17)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __assert_fail ("( in >= 0 ) && ( in < _inputs )", "allocators/allocator.cpp", 303, &__PRETTY_FUNCTION__);

  <bb 6>:
  if (out_7(D) < 0)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _18 = this_3(D)->D.37974._outputs;
  if (out_7(D) >= _18)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __assert_fail ("( out >= 0 ) && ( out < _outputs )", "allocators/allocator.cpp", 304, &__PRETTY_FUNCTION__);

  <bb 9>:
  _19 = (long unsigned int) in_6(D);
  # DEBUG D#340 => &this_3(D)->_in_req
  _20 = MEM[(struct map * *)this_3(D) + 256B];
  # DEBUG D#86 => D#340
  # DEBUG __n => _19
  # DEBUG this => D#86
  _21 = _19 * 48;
  _22 = _20 + _21;
  # DEBUG this => NULL
  # DEBUG __x => &out
  # DEBUG this => D#339
  # DEBUG __k => &out
  # DEBUG this => D#339
  __y_23 = &MEM[(const struct _Rb_tree *)_22]._M_impl._M_header;
  __y_24 = MEM[(struct _Rb_tree_node_base * *)_22 + 16B];
  # DEBUG D#110 => D#339
  # DEBUG this => D#110
  # DEBUG D#335 => D#339
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &out
  # DEBUG __y => __y_23
  # DEBUG __x => __y_24
  if (__y_24 == 0B)
    goto <bb 21>;
  else
    goto <bb 12>;

  <bb 10>:
  # __y_34 = PHI <__y_27(14), __y_28(15)>
  # __y_33 = PHI <__y_49(14), __y_44(15)>
  # DEBUG __y => __y_33
  # DEBUG __x => __y_34
  if (__y_34 == 0B)
    goto <bb 16>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 13>;

  <bb 12>:

  <bb 13>:
  # __y_49 = PHI <__y_24(12), __y_34(11)>
  # __y_44 = PHI <__y_23(12), __y_33(11)>
  # DEBUG __y => __y_44
  # DEBUG __x => __y_49
  # DEBUG __x => __y_49
  # DEBUG __x => __y_49
  # DEBUG this => __y_49
  # DEBUG D#331 => &__y_49->_M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#332 => &MEM[(const struct pair &)__y_49 + 32].first
  # DEBUG D#333 => &D#334->_M_impl._M_key_compare
  # DEBUG D#95 => D#333
  _26 = MEM[(const int &)__y_49 + 32];
  # DEBUG D#96 => D#332
  # DEBUG D#97 => &out
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (out_7(D) <= _26)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG __y => __y_49
  __y_27 = MEM[(struct _Rb_tree_node_base * *)__y_49 + 16B];
  # DEBUG D#171 => __y_49
  # DEBUG __x => D#171
  # DEBUG __x => NULL
  goto <bb 10>;

  <bb 15>:
  __y_28 = MEM[(struct _Rb_tree_node_base * *)__y_49 + 24B];
  # DEBUG D#172 => __y_49
  # DEBUG __x => D#172
  # DEBUG __x => NULL
  goto <bb 10>;

  <bb 16>:
  # __y_29 = PHI <__y_33(10)>

  <bb 24>:
  # DEBUG this => NULL
  # DEBUG __x => __y_29
  # DEBUG __j$_M_node => __y_29
  # DEBUG this => D#339
  # DEBUG this => NULL
  # DEBUG __x => __y_23
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_23 == __y_29)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:

  <bb 25>:
  goto <bb 23>;

  <bb 18>:
  # DEBUG __x => __y_29
  # DEBUG __x => __y_29
  # DEBUG this => __y_29
  # DEBUG D#174 => &__y_29->_M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#336 => &MEM[(const struct pair &)__y_29 + 32].first
  # DEBUG D#338 => &MEM[(const struct _Rb_tree *)D#339]._M_impl._M_key_compare
  # DEBUG D#95 => D#338
  # DEBUG D#96 => &out
  _30 = MEM[(const int &)__y_29 + 32];
  # DEBUG D#97 => D#336
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (out_7(D) < _30)
    goto <bb 17>;
  else
    goto <bb 19>;

  <bb 19>:
  # DEBUG D#337 => {CLOBBER}
  # DEBUG __j$_M_node => D#337
  # DEBUG match$_M_node => __y_29
  # DEBUG D#341 => &this_3(D)->_in_req
  # DEBUG D#86 => D#341
  # DEBUG __n => _19
  # DEBUG this => D#86
  # DEBUG this => NULL
  # DEBUG this => D#112
  # DEBUG this => NULL
  # DEBUG __x => __y_23
  # DEBUG this => &match
  # DEBUG __x => NULL
  # DEBUG this => &match
  # DEBUG this => __y_29
  # DEBUG D#342 => &__y_29->_M_value_field
  # DEBUG __r => D#342
  r = MEM[(const struct pair *)__y_29 + 32B].second;
  # DEBUG found => 1
  pretmp_35 = r.label;
  goto <bb 23>;

  <bb 20>:
  _15 = OBJ_TYPE_REF(_5;(const struct SparseAllocator)this_3(D)->5) (this_3(D), &r, in_6(D), out_7(D));

  <bb 21>:
  # _9 = PHI <_15(20), 0(9)>
  if (_9 != 0)
    goto <bb 22>;
  else
    goto <bb 17>;

  <bb 22>:
  pretmp_48 = r.label;

  <bb 23>:
  # prephitmp_50 = PHI <pretmp_48(22), -1(25), pretmp_35(19)>
  r ={v} {CLOBBER};
  return prephitmp_50;

}



;; Function std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const _Val&, _NodeGen&) [with _NodeGen = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node; _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >] (_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE17_M_insert_unique_INSA_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_ERKS4_RT_.isra.197.constprop.200, funcdef_no=2846, decl_uid=62239, cgraph_uid=40, symbol_order=2498)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const _Val&, _NodeGen&) [with _NodeGen = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node; _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >] (struct _Rb_tree * const this, struct const_iterator __position, const struct pair & __v)
{
  struct _Rb_tree_node_base * SR.1336;
  struct _Rb_tree_node_base * SR.1335;
  struct _Rb_tree_node_base * SR.1334;
  struct _Rb_tree_node_base * SR.1333;
  struct _Rb_tree_node_base * SR.1332;
  struct _Rb_tree_node_base * SR.1331;
  struct _Rb_tree_node_base * SR.1330;
  struct _Rb_tree_node_base * SR.1329;
  struct _Rb_tree_node_base * SR.1328;
  const struct _Rb_tree_node_base * const __position$_M_node;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  struct _Rb_tree_node * D.62931;
  bool __insert_left;
  struct iterator D.62914;
  struct pair D.62903;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct pair D.62876;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct pair D.62849;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct pair D.62822;
  struct const_iterator __position;
  struct _Rb_tree_node_base * __res$second;
  struct _Rb_tree_node_base * __res$first;
  struct pair __res;
  struct iterator D.62292;
  const int pretmp_4;
  const int prephitmp_5;
  struct _Rb_tree_node_base * _8;
  struct _Rb_tree_node * _9;
  const int pretmp_11;
  const size_type _13;
  struct _Rb_tree_node_base * _14;
  const int _15;
  const int _16;
  const int pretmp_18;
  const int _19;
  const int _20;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  const int _23;
  struct _Rb_tree_node_base * _24;
  struct _Rb_tree_node_base * _25;
  struct _Rb_tree_node_base * _26;
  const int _27;
  struct _Rb_tree_node_base * _28;
  struct _Rb_tree_node_base * const _29;
  const int _32;
  struct _Rb_tree_node_base * _34;
  struct _Rb_tree_node_base * _35;
  struct _Rb_tree_node_base * _37;
  struct _Rb_tree_node_base * const _43;
  struct _Rb_tree_node_base * _46;
  const int prephitmp_48;
  const int _50;
  struct _Rb_tree_node_base * _52;
  struct _Rb_tree_node_base * _53;
  const int _54;
  struct _Rb_tree_node_base * const _55;
  bool _61;
  const int pretmp_62;
  const int _63;
  struct _Rb_tree_node_base * _64;
  const int _68;
  const int _69;
  struct _Rb_tree_node_base * _70;
  struct _Rb_tree_node_base * _71;
  struct _Rb_tree_node_base * _73;
  bool _78;
  bool _79;
  long unsigned int _89;
  long unsigned int _90;
  const int prephitmp_95;
  const int prephitmp_105;
  const int prephitmp_119;
  const int pretmp_121;
  const int pretmp_128;
  const int prephitmp_129;
  const int pretmp_161;
  int pretmp_168;
  int prephitmp_169;

  <bb 2>:
  # DEBUG __node_gen s=> __node_gen
  # DEBUG D#751 s=> __node_gen
  # DEBUG __x => __v_1(D)
  # DEBUG this => D#173
  # DEBUG D#875 => &__v_1(D)->first
  # DEBUG this => this_3(D)
  __position$_M_node_130 = MEM[(struct _Rb_tree_const_iterator *)&__position];
  # DEBUG __position$_M_node => __position$_M_node_130
  # DEBUG __k => D#875
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG __x => __position$_M_node_130
  # DEBUG __pos => __position$_M_node_130
  # DEBUG this => this_3(D)
  __j$_M_node_12 = &this_3(D)->_M_impl._M_header;
  if (__j$_M_node_12 == __position$_M_node_130)
    goto <bb 3>;
  else
    goto <bb 16>;

  <bb 3>:
  _13 = MEM[(long unsigned int *)this_3(D) + 40B];
  # DEBUG D#132 => this_3(D)
  # DEBUG this => D#132
  if (_13 != 0)
    goto <bb 4>;
  else
    goto <bb 59>;

  <bb 4>:
  # DEBUG this => this_3(D)
  _14 = MEM[(struct _Rb_tree_node_base * &)this_3(D) + 32];
  # DEBUG __x => _14
  # DEBUG __x => _14
  # DEBUG this => _14
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)_14]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#413 => &MEM[(const struct pair &)_14 + 32].first
  # DEBUG D#423 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#423
  _15 = MEM[(const int &)_14 + 32];
  # DEBUG D#96 => D#413
  _16 = MEM[(const int &)__v_1(D)];
  # DEBUG D#97 => D#875
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_15 < _16)
    goto <bb 52>;
  else
    goto <bb 59>;

  <bb 5>:
  # _43 = PHI <_34(8), _35(9)>
  # DEBUG __comp => D#877 < _32
  # DEBUG __y => __j$_M_node_143
  # DEBUG __x => _43
  if (_43 == 0B)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __j$_M_node_143 = PHI <_8(60), _43(6)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_143
  # DEBUG __y => __j$_M_node_143
  # DEBUG __x => __j$_M_node_143
  # DEBUG __x => __j$_M_node_143
  # DEBUG this => __j$_M_node_143
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_143]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#408 => &MEM[(const struct pair &)__j$_M_node_143 + 32].first
  # DEBUG D#412 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#412
  # DEBUG D#877 => MEM[(const int &)__v_1(D)]
  # DEBUG D#96 => D#875
  _32 = MEM[(const int &)__j$_M_node_143 + 32];
  # DEBUG D#97 => D#408
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  # DEBUG __comp => NULL
  if (_32 > pretmp_121)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _34 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_143 + 16B];
  # DEBUG D#108 => __j$_M_node_143
  # DEBUG __x => D#108
  goto <bb 5>;

  <bb 9>:
  _35 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_143 + 24B];
  # DEBUG D#107 => __j$_M_node_143
  # DEBUG __x => D#107
  goto <bb 5>;

  <bb 10>:
  # _69 = PHI <_32(5)>
  # __j$_M_node_33 = PHI <__j$_M_node_143(5)>

  <bb 61>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_33
  # DEBUG __j$_M_node => __j$_M_node_33
  if (_69 > pretmp_121)
    goto <bb 11>;
  else
    goto <bb 13>;

  <bb 11>:
  # __j$_M_node_179 = PHI <__j$_M_node_33(61), __j$_M_node_12(59)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_179
  # DEBUG __j$_M_node => __j$_M_node_179
  _37 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 24B];
  # DEBUG D#359 => this_3(D)
  # DEBUG this => D#359
  # DEBUG this => NULL
  # DEBUG __x => _37
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_37 == __j$_M_node_179)
    goto <bb 73>;
  else
    goto <bb 12>;

  <bb 12>:
  # DEBUG this => &__j
  __j$_M_node_39 = std::_Rb_tree_decrement (__j$_M_node_179);
  # DEBUG __j$_M_node => __j$_M_node_39
  pretmp_18 = MEM[(const int &)__v_1(D)];
  pretmp_128 = MEM[(const int &)__j$_M_node_39 + 32];

  <bb 13>:
  # __j$_M_node_40 = PHI <__j$_M_node_33(61), __j$_M_node_39(12)>
  # __j$_M_node_178 = PHI <__j$_M_node_33(61), __j$_M_node_179(12)>
  # prephitmp_129 = PHI <pretmp_121(61), pretmp_18(12)>
  # prephitmp_105 = PHI <_69(61), pretmp_128(12)>

  <bb 65>:
  # DEBUG __j$_M_node => __j$_M_node_40
  # DEBUG __x => __j$_M_node_40
  # DEBUG __x => __j$_M_node_40
  # DEBUG this => __j$_M_node_40
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_40]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#409 => &MEM[(const struct pair &)__j$_M_node_40 + 32].first
  # DEBUG D#411 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#411
  # DEBUG D#96 => D#409
  # DEBUG D#97 => D#875
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (prephitmp_105 < prephitmp_129)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:

  <bb 15>:
  # SR.1330_87 = PHI <__j$_M_node_40(14), 0B(65)>
  # SR.1331_118 = PHI <0B(14), __j$_M_node_178(65)>

  <bb 73>:
  # SR.1330_141 = PHI <SR.1330_87(15), 0B(11)>
  # SR.1331_135 = PHI <SR.1331_118(15), _37(11)>

  <bb 64>:
  # DEBUG D#410 => {CLOBBER}
  # DEBUG __j$_M_node => D#410
  goto <bb 52>;

  <bb 16>:
  # DEBUG __x => __position$_M_node_130
  # DEBUG __x => __position$_M_node_130
  # DEBUG this => __position$_M_node_130
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)__position$_M_node_130]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#414 => &MEM[(const struct pair &)__position$_M_node_130 + 32].first
  # DEBUG D#425 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#425
  _19 = MEM[(const int &)__v_1(D)];
  # DEBUG D#96 => D#875
  _20 = MEM[(const int &)__position$_M_node_130 + 32];
  # DEBUG D#97 => D#414
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_19 < _20)
    goto <bb 17>;
  else
    goto <bb 34>;

  <bb 17>:
  # DEBUG __before => __position$_M_node_130
  # DEBUG this => this_3(D)
  _21 = MEM[(struct _Rb_tree_node_base * &)this_3(D) + 24];
  if (_21 == __position$_M_node_130)
    goto <bb 52>;
  else
    goto <bb 18>;

  <bb 18>:
  # DEBUG this => &__before
  _22 = std::_Rb_tree_decrement (__position$_M_node_130);
  # DEBUG __before => _22
  # DEBUG __x => _22
  # DEBUG __x => _22
  # DEBUG this => _22
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)_22]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#415 => &MEM[(const struct pair &)_22 + 32].first
  # DEBUG D#422 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#422
  _23 = MEM[(const int &)_22 + 32];
  # DEBUG D#96 => D#415
  # DEBUG D#97 => D#875
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_19 > _23)
    goto <bb 19>;
  else
    goto <bb 21>;

  <bb 19>:
  _24 = MEM[(struct _Rb_tree_node_base * *)_22 + 24B];
  # DEBUG D#107 => _22
  # DEBUG __x => D#107
  if (_24 == 0B)
    goto <bb 52>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 52>;

  <bb 21>:
  # DEBUG this => this_3(D)
  # DEBUG __k => D#875
  _46 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 16B];
  # DEBUG D#91 => this_3(D)
  # DEBUG this => D#91
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_12
  # DEBUG __x => _46
  if (_46 == 0B)
    goto <bb 29>;
  else
    goto <bb 24>;

  <bb 22>:
  # _29 = PHI <_52(26), _53(27)>
  # DEBUG __comp => _19 < _50
  # DEBUG __y => __j$_M_node_67
  # DEBUG __x => _29
  if (_29 == 0B)
    goto <bb 28>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 25>;

  <bb 24>:

  <bb 25>:
  # __j$_M_node_67 = PHI <_46(24), _29(23)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_67
  # DEBUG __y => __j$_M_node_67
  # DEBUG __x => __j$_M_node_67
  # DEBUG __x => __j$_M_node_67
  # DEBUG this => __j$_M_node_67
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_67]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#408 => &MEM[(const struct pair &)__j$_M_node_67 + 32].first
  # DEBUG D#412 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#412
  # DEBUG D#96 => D#875
  _50 = MEM[(const int &)__j$_M_node_67 + 32];
  # DEBUG D#97 => D#408
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  # DEBUG __comp => NULL
  if (_19 < _50)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  _52 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_67 + 16B];
  # DEBUG D#108 => __j$_M_node_67
  # DEBUG __x => D#108
  goto <bb 22>;

  <bb 27>:
  _53 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_67 + 24B];
  # DEBUG D#107 => __j$_M_node_67
  # DEBUG __x => D#107
  goto <bb 22>;

  <bb 28>:
  # _63 = PHI <_50(22)>
  # __j$_M_node_56 = PHI <__j$_M_node_67(22)>

  <bb 62>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_56
  # DEBUG __j$_M_node => __j$_M_node_56
  if (_19 < _63)
    goto <bb 29>;
  else
    goto <bb 31>;

  <bb 29>:
  # __j$_M_node_176 = PHI <__j$_M_node_56(62), __j$_M_node_12(21)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_176
  # DEBUG __j$_M_node => __j$_M_node_176
  # DEBUG D#359 => this_3(D)
  # DEBUG this => D#359
  # DEBUG this => NULL
  # DEBUG __x => _21
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_21 == __j$_M_node_176)
    goto <bb 74>;
  else
    goto <bb 30>;

  <bb 30>:
  # DEBUG this => &__j
  __j$_M_node_57 = std::_Rb_tree_decrement (__j$_M_node_176);
  # DEBUG __j$_M_node => __j$_M_node_57
  pretmp_62 = MEM[(const int &)__j$_M_node_57 + 32];

  <bb 31>:
  # __j$_M_node_58 = PHI <__j$_M_node_56(62), __j$_M_node_57(30)>
  # __j$_M_node_180 = PHI <__j$_M_node_56(62), __j$_M_node_176(30)>
  # prephitmp_119 = PHI <_63(62), pretmp_62(30)>

  <bb 67>:
  # DEBUG __j$_M_node => __j$_M_node_58
  # DEBUG __x => __j$_M_node_58
  # DEBUG __x => __j$_M_node_58
  # DEBUG this => __j$_M_node_58
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_58]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#409 => &MEM[(const struct pair &)__j$_M_node_58 + 32].first
  # DEBUG D#411 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#411
  # DEBUG D#96 => D#409
  # DEBUG D#97 => D#875
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_19 > prephitmp_119)
    goto <bb 33>;
  else
    goto <bb 32>;

  <bb 32>:

  <bb 33>:
  # SR.1332_104 = PHI <__j$_M_node_58(32), 0B(67)>
  # SR.1333_120 = PHI <0B(32), __j$_M_node_180(67)>

  <bb 74>:
  # SR.1332_134 = PHI <SR.1332_104(33), 0B(29)>
  # SR.1333_133 = PHI <SR.1333_120(33), _21(29)>

  <bb 66>:
  # DEBUG D#410 => {CLOBBER}
  # DEBUG __j$_M_node => D#410
  goto <bb 52>;

  <bb 34>:
  # DEBUG __x => __position$_M_node_130
  # DEBUG __x => __position$_M_node_130
  # DEBUG this => __position$_M_node_130
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)__position$_M_node_130]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#416 => &MEM[(const struct pair &)__position$_M_node_130 + 32].first
  # DEBUG D#424 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#424
  # DEBUG D#96 => D#416
  # DEBUG D#97 => D#875
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_19 > _20)
    goto <bb 35>;
  else
    goto <bb 57>;

  <bb 35>:
  # DEBUG __after => __position$_M_node_130
  # DEBUG this => this_3(D)
  _25 = MEM[(struct _Rb_tree_node_base * &)this_3(D) + 32];
  if (_25 == __position$_M_node_130)
    goto <bb 52>;
  else
    goto <bb 36>;

  <bb 36>:
  # DEBUG this => &__after
  _26 = std::_Rb_tree_increment (__position$_M_node_130);
  # DEBUG __after => _26
  # DEBUG __x => _26
  # DEBUG __x => _26
  # DEBUG this => _26
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)_26]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#417 => &MEM[(const struct pair &)_26 + 32].first
  # DEBUG D#421 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#421
  # DEBUG D#96 => D#875
  _27 = MEM[(const int &)_26 + 32];
  # DEBUG D#97 => D#417
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_19 < _27)
    goto <bb 37>;
  else
    goto <bb 39>;

  <bb 37>:
  _28 = MEM[(struct _Rb_tree_node_base * *)__position$_M_node_130 + 24B];
  # DEBUG D#107 => __position$_M_node_130
  # DEBUG __x => D#107
  if (_28 == 0B)
    goto <bb 38>;
  else
    goto <bb 52>;

  <bb 38>:
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__pos._M_node
  # DEBUG D#420 => {CLOBBER}
  # DEBUG __pos => D#420
  # DEBUG __res => 0B
  # DEBUG __res$8 => __position$_M_node_130
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __position$_M_node_130
  if (__position$_M_node_130 != 0B)
    goto <bb 55>;
  else
    goto <bb 57>;

  <bb 39>:
  # DEBUG this => this_3(D)
  # DEBUG __k => D#875
  _64 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 16B];
  # DEBUG D#91 => this_3(D)
  # DEBUG this => D#91
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_12
  # DEBUG __x => _64
  if (_64 == 0B)
    goto <bb 47>;
  else
    goto <bb 42>;

  <bb 40>:
  # _55 = PHI <_70(44), _71(45)>
  # DEBUG __comp => _19 < _68
  # DEBUG __y => __j$_M_node_96
  # DEBUG __x => _55
  if (_55 == 0B)
    goto <bb 46>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 43>;

  <bb 42>:

  <bb 43>:
  # __j$_M_node_96 = PHI <_64(42), _55(41)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_96
  # DEBUG __y => __j$_M_node_96
  # DEBUG __x => __j$_M_node_96
  # DEBUG __x => __j$_M_node_96
  # DEBUG this => __j$_M_node_96
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_96]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#408 => &MEM[(const struct pair &)__j$_M_node_96 + 32].first
  # DEBUG D#412 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#412
  # DEBUG D#96 => D#875
  _68 = MEM[(const int &)__j$_M_node_96 + 32];
  # DEBUG D#97 => D#408
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  # DEBUG __comp => NULL
  if (_19 < _68)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  _70 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_96 + 16B];
  # DEBUG D#108 => __j$_M_node_96
  # DEBUG __x => D#108
  goto <bb 40>;

  <bb 45>:
  _71 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_96 + 24B];
  # DEBUG D#107 => __j$_M_node_96
  # DEBUG __x => D#107
  goto <bb 40>;

  <bb 46>:
  # _54 = PHI <_68(40)>
  # __j$_M_node_51 = PHI <__j$_M_node_96(40)>

  <bb 63>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_51
  # DEBUG __j$_M_node => __j$_M_node_51
  if (_19 < _54)
    goto <bb 47>;
  else
    goto <bb 49>;

  <bb 47>:
  # __j$_M_node_164 = PHI <__j$_M_node_51(63), __j$_M_node_12(39)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_164
  # DEBUG __j$_M_node => __j$_M_node_164
  _73 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 24B];
  # DEBUG D#359 => this_3(D)
  # DEBUG this => D#359
  # DEBUG this => NULL
  # DEBUG __x => _73
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_73 == __j$_M_node_164)
    goto <bb 75>;
  else
    goto <bb 48>;

  <bb 48>:
  # DEBUG this => &__j
  __j$_M_node_75 = std::_Rb_tree_decrement (__j$_M_node_164);
  # DEBUG __j$_M_node => __j$_M_node_75
  pretmp_4 = MEM[(const int &)__j$_M_node_75 + 32];

  <bb 49>:
  # __j$_M_node_76 = PHI <__j$_M_node_51(63), __j$_M_node_75(48)>
  # __j$_M_node_154 = PHI <__j$_M_node_51(63), __j$_M_node_164(48)>
  # prephitmp_5 = PHI <_54(63), pretmp_4(48)>

  <bb 69>:
  # DEBUG __j$_M_node => __j$_M_node_76
  # DEBUG __x => __j$_M_node_76
  # DEBUG __x => __j$_M_node_76
  # DEBUG this => __j$_M_node_76
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_76]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#409 => &MEM[(const struct pair &)__j$_M_node_76 + 32].first
  # DEBUG D#411 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#411
  # DEBUG D#96 => D#409
  # DEBUG D#97 => D#875
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (prephitmp_5 < _19)
    goto <bb 51>;
  else
    goto <bb 50>;

  <bb 50>:

  <bb 51>:
  # SR.1334_31 = PHI <__j$_M_node_76(50), 0B(69)>
  # SR.1335_41 = PHI <0B(50), __j$_M_node_154(69)>

  <bb 75>:
  # SR.1334_132 = PHI <SR.1334_31(51), 0B(47)>
  # SR.1335_131 = PHI <SR.1335_41(51), _73(47)>

  <bb 68>:
  # DEBUG D#410 => {CLOBBER}
  # DEBUG __j$_M_node => D#410

  <bb 52>:
  # __res_99 = PHI <0B(4), SR.1330_141(64), _21(17), 0B(19), __position$_M_node_130(20), SR.1332_134(66), 0B(35), SR.1334_132(68), _26(37)>
  # __res$8_98 = PHI <_14(4), SR.1331_135(64), _21(17), _22(19), __position$_M_node_130(20), SR.1333_133(66), _25(35), SR.1335_131(68), _26(37)>
  # DEBUG D#420 => {CLOBBER}
  # DEBUG __pos => D#420
  # DEBUG __res => __res_99
  # DEBUG __res$8 => __res$8_98
  # DEBUG __res$first => __res_99
  # DEBUG __res$second => __res$8_98
  if (__res$8_98 != 0B)
    goto <bb 53>;
  else
    goto <bb 57>;

  <bb 53>:
  # DEBUG D#746 => D#751
  # DEBUG this => this_3(D)
  # DEBUG __x => __res_99
  # DEBUG __p => __res$8_98
  # DEBUG __v => __v_1(D)
  # DEBUG __node_gen => D#746
  # DEBUG D#745 => D#746
  # DEBUG this => this_3(D)
  _61 = __j$_M_node_12 == __res$8_98;
  _79 = __res_99 != 0B;
  _78 = _61 | _79;
  if (_78 != 0)
    goto <bb 56>;
  else
    goto <bb 54>;

  <bb 54>:
  pretmp_161 = MEM[(const int &)__v_1(D)];
  pretmp_11 = MEM[(const int &)__res$8_98 + 32];

  <bb 55>:
  # __res$8_153 = PHI <__res$8_98(54), __position$_M_node_130(38)>
  # prephitmp_95 = PHI <pretmp_161(54), _19(38)>
  # prephitmp_48 = PHI <pretmp_11(54), _20(38)>

  <bb 72>:
  # DEBUG D#746 => D#751
  # DEBUG this => this_3(D)
  # DEBUG __x => NULL
  # DEBUG __p => __res$8_153
  # DEBUG __v => __v_1(D)
  # DEBUG __node_gen => D#746
  # DEBUG D#745 => D#746
  # DEBUG this => this_3(D)
  # DEBUG __x => __res$8_153
  # DEBUG __x => __res$8_153
  # DEBUG this => __res$8_153
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)__res$8_153]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#743 => &MEM[(const struct pair &)__res$8_153 + 32].first
  # DEBUG __x => __v_1(D)
  # DEBUG this => D#173
  # DEBUG D#744 => &this_3(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#744
  # DEBUG D#97 => D#743
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  __insert_left_82 = prephitmp_48 > prephitmp_95;
  pretmp_168 = (int) __insert_left_82;

  <bb 56>:
  # __res$8_167 = PHI <__res$8_153(72), __res$8_98(53)>
  # prephitmp_169 = PHI <pretmp_168(72), 1(53)>
  # DEBUG __insert_left => NULL
  # DEBUG D#730 => D#745
  # DEBUG __arg => __v_1(D)
  # DEBUG this => D#730
  # DEBUG D#729 => D#730
  # DEBUG D#728 => D#729->_M_t
  # DEBUG D#727 => D#728
  # DEBUG __x => __v_1(D)
  # DEBUG this => D#727
  # DEBUG D#726 => D#727
  # DEBUG D#725 => D#727
  # DEBUG D#724 => D#725
  # DEBUG this => D#724
  # DEBUG D#723 => D#724
  # DEBUG this => D#723
  # DEBUG __n => 1
  # DEBUG __a => D#722
  # DEBUG D#721 => D#722
  # DEBUG D#719 => D#721
  # DEBUG D#720 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#719
  # DEBUG D.62922 => D#720
  # DEBUG D#718 => D#719
  # DEBUG D#717 => D#718
  # DEBUG this => D#717
  _9 = operator new (56);
  # DEBUG __tmp => _9
  # DEBUG D#632 => D#726
  # DEBUG __node => _9
  # DEBUG __x => __v_1(D)
  # DEBUG this => D#632
  # DEBUG D#631 => D#632
  # DEBUG this => _9
  # DEBUG D#876 => &_9->_M_value_field
  # DEBUG __r => D#876
  # DEBUG D#538 => D#631
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#876
  # DEBUG __val => __v_1(D)
  # DEBUG this => D#630
  # DEBUG D#24 => 20
  # DEBUG __p => D#876
  # DEBUG D.59472 => D#24
  MEM[(struct pair *)_9 + 32B] = *__v_1(D);
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => NULL
  std::_Rb_tree_insert_and_rebalance (prephitmp_169, _9, __res$8_167, __j$_M_node_12);
  _89 = this_3(D)->_M_impl._M_node_count;
  _90 = _89 + 1;
  this_3(D)->_M_impl._M_node_count = _90;
  # DEBUG this => NULL
  # DEBUG __x => NULL
  MEM[(struct _Rb_tree_iterator *)&D.62292] = _9;
  goto <bb 58>;

  <bb 57>:
  # __res_147 = PHI <__res_99(52), __position$_M_node_130(34), 0B(38)>

  <bb 71>:
  # DEBUG D#420 => {CLOBBER}
  # DEBUG __pos => D#420
  # DEBUG __res => __res_147
  # DEBUG __res$8 => NULL
  # DEBUG __res$first => __res_147
  # DEBUG __res$second => NULL
  # DEBUG this => NULL
  # DEBUG __x => __res_147
  MEM[(struct _Rb_tree_iterator *)&D.62292] = __res_147;

  <bb 58>:

  <bb 70>:
  # DEBUG D#749 => {CLOBBER}
  # DEBUG __res$first => D#749
  # DEBUG D#750 => {CLOBBER}
  # DEBUG __res$second => D#750
  return D.62292;

  <bb 59>:
  # DEBUG this => this_3(D)
  # DEBUG __k => D#875
  _8 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 16B];
  # DEBUG D#91 => this_3(D)
  # DEBUG this => D#91
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_12
  # DEBUG __x => _8
  if (_8 == 0B)
    goto <bb 11>;
  else
    goto <bb 60>;

  <bb 60>:
  pretmp_121 = MEM[(const int &)__v_1(D)];
  goto <bb 7>;

}



;; Function void Allocator::PrintGrants(std::ostream*) const (_ZNK9Allocator11PrintGrantsEPSo, funcdef_no=1746, decl_uid=35437, cgraph_uid=416, symbol_order=417)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void Allocator::PrintGrants(std::ostream*) const (const struct Allocator * const this, struct ostream * os)
{
  char_type D.62998;
  char __c;
  char_type D.62995;
  char __c;
  char_type D.62992;
  struct basic_ostream & D.62986;
  struct basic_ostream & D.62983;
  struct basic_ostream & D.62979;
  struct basic_ostream & D.62975;
  struct basic_ostream & D.62971;
  int output;
  int input;
  long unsigned int _13;
  int _14;
  const int & _15;
  struct basic_ostream & _17;
  struct basic_ostream & _19;
  int pretmp_20;
  int prephitmp_22;
  long unsigned int _24;
  long unsigned int _25;
  int _26;
  struct basic_ostream & _28;
  struct basic_ostream & _30;
  int (*__vtbl_ptr_type) () * _31;
  int * const _33;
  int * const _34;
  long unsigned int _35;
  const int & _36;
  const struct __ctype_type * _40;
  int pretmp_44;
  long int _46;
  sizetype _47;
  struct basic_ios * _48;
  struct basic_ostream & _51;
  char _53;
  char_type _56;
  const int prephitmp_57;
  int (*__vtbl_ptr_type) () * _61;
  int (*__vtbl_ptr_type) () _62;
  int _65;
  void * PROF_66;
  char_type _68;
  const int prephitmp_82;
  int _83;
  const int pretmp_89;
  const int prephitmp_90;
  const int pretmp_91;
  const int prephitmp_92;

  <bb 2>:
  if (os_8(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # os_1 = PHI <os_8(D)(3), &cout(2)>
  # DEBUG os => os_1
  # DEBUG __out => os_1
  # DEBUG __s => "Input grants = [ "
  # DEBUG __s => "Input grants = [ "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "Input grants = [ ", 17);
  # DEBUG input => 0
  _83 = this_11(D)->_inputs;
  if (_83 <= 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG __out => os_1
  # DEBUG __s => "], output grants = [ "
  # DEBUG __s => "], output grants = [ "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "], output grants = [ ", 21);
  # DEBUG output => 0
  _65 = this_11(D)->_outputs;
  if (_65 <= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 6>:

  <bb 7>:
  # input_64 = PHI <0(6), input_21(10)>
  # prephitmp_82 = PHI <_83(6), prephitmp_92(10)>
  # DEBUG input => input_64
  _13 = (long unsigned int) input_64;
  # DEBUG D#32 => &this_11(D)->_inmatch
  _33 = MEM[(int * *)this_11(D) + 112B];
  # DEBUG D#29 => D#32
  # DEBUG __n => _13
  # DEBUG this => D#29
  _25 = _13 * 4;
  _15 = _33 + _25;
  _14 = *_15;
  if (_14 >= 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG D#33 => &this_11(D)->_inmatch
  # DEBUG D#29 => D#33
  # DEBUG __n => _13
  # DEBUG this => D#29
  _17 = std::basic_ostream<char>::operator<< (os_1, input_64);
  # DEBUG __out => _17
  # DEBUG __s => " -> "
  # DEBUG __s => " -> "
  std::__ostream_insert<char, std::char_traits<char> > (_17, " -> ", 4);
  _19 = std::basic_ostream<char>::operator<< (_17, _14);
  # DEBUG __out => _19
  # DEBUG __s => "  "
  # DEBUG __s => "  "
  std::__ostream_insert<char, std::char_traits<char> > (_19, "  ", 2);
  pretmp_91 = this_11(D)->_inputs;

  <bb 9>:
  # prephitmp_92 = PHI <prephitmp_82(7), pretmp_91(8)>
  input_21 = input_64 + 1;
  # DEBUG input => input_21
  # DEBUG input => input_21
  if (input_21 >= prephitmp_92)
    goto <bb 5>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 7>;

  <bb 11>:
  # DEBUG __out => os_1
  # DEBUG __s => "]."
  # DEBUG __s => "]."
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "].", 2);
  # DEBUG this => os_1
  # DEBUG __pf => endl
  # DEBUG __os => os_1
  _31 = MEM[(struct basic_ostream *)os_1]._vptr.basic_ostream;
  _46 = MEM[(long int *)_31 + -24B];
  _47 = (sizetype) _46;
  _48 = os_1 + _47;
  # DEBUG this => _48
  # DEBUG __c => 10
  _40 = MEM[(const struct basic_ios *)_48]._M_ctype;
  # DEBUG __f => _40
  if (_40 == 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 12>:

  <bb 13>:
  # output_79 = PHI <0(12), output_32(16)>
  # prephitmp_57 = PHI <_65(12), prephitmp_90(16)>
  # DEBUG output => output_79
  _24 = (long unsigned int) output_79;
  # DEBUG D#34 => &this_11(D)->_outmatch
  _34 = MEM[(int * *)this_11(D) + 136B];
  # DEBUG D#29 => D#34
  # DEBUG __n => _24
  # DEBUG this => D#29
  _35 = _24 * 4;
  _36 = _34 + _35;
  _26 = *_36;
  if (_26 >= 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#35 => &this_11(D)->_outmatch
  # DEBUG D#29 => D#35
  # DEBUG __n => _24
  # DEBUG this => D#29
  _28 = std::basic_ostream<char>::operator<< (os_1, output_79);
  # DEBUG __out => _28
  # DEBUG __s => " -> "
  # DEBUG __s => " -> "
  std::__ostream_insert<char, std::char_traits<char> > (_28, " -> ", 4);
  _30 = std::basic_ostream<char>::operator<< (_28, _26);
  # DEBUG __out => _30
  # DEBUG __s => "  "
  # DEBUG __s => "  "
  std::__ostream_insert<char, std::char_traits<char> > (_30, "  ", 2);
  pretmp_89 = this_11(D)->_outputs;

  <bb 15>:
  # prephitmp_90 = PHI <prephitmp_57(13), pretmp_89(14)>
  output_32 = output_79 + 1;
  # DEBUG output => output_32
  # DEBUG output => output_32
  if (output_32 >= prephitmp_90)
    goto <bb 11>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 13>;

  <bb 17>:
  std::__throw_bad_cast ();

  <bb 18>:
  # DEBUG this => _40
  # DEBUG __c => 10
  _53 = MEM[(const struct ctype *)_40]._M_widen_ok;
  if (_53 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _56 = MEM[(const struct ctype *)_40]._M_widen[10];
  pretmp_20 = (int) _56;
  goto <bb 22>;

  <bb 20>:
  # DEBUG this => _40
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_40);
  _61 = MEM[(const struct ctype *)_40].D.18015._vptr.facet;
  _62 = MEM[(int (*__vtbl_ptr_type) () *)_61 + 48B];
  PROF_66 = [obj_type_ref] OBJ_TYPE_REF(_62;(const struct ctype)_40->6);
  if (PROF_66 == do_widen)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  _68 = OBJ_TYPE_REF(_62;(const struct ctype)_40->6) (_40, 10);
  pretmp_44 = (int) _68;

  <bb 22>:
  # prephitmp_22 = PHI <pretmp_20(19), 10(20), pretmp_44(21)>
  _51 = std::basic_ostream<char>::put (os_1, prephitmp_22);
  # DEBUG __os => _51
  std::basic_ostream<char>::flush (_51);
  return;

}



;; Function virtual void DenseAllocator::PrintRequests(std::ostream*) const (_ZNK14DenseAllocator13PrintRequestsEPSo, funcdef_no=1763, decl_uid=36272, cgraph_uid=433, symbol_order=434)

Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual void DenseAllocator::PrintRequests(std::ostream*) const (const struct DenseAllocator * const this, struct ostream * os)
{
  char_type D.64146;
  char __c;
  char_type D.64143;
  char __c;
  char_type D.64140;
  struct basic_ostream & D.64134;
  struct basic_ostream & D.64110;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.64045;
  struct __string_type D.64044;
  struct basic_ostream & D.63909;
  struct basic_ostream & D.63878;
  struct basic_ostream & D.63853;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.63788;
  struct __string_type D.63787;
  struct basic_ostream & D.63652;
  struct basic_ostream & D.63621;
  int input;
  struct ostringstream ss;
  bool print;
  int output;
  int output;
  struct ostringstream ss;
  bool print;
  int input;
  struct __string_type D.41213;
  struct __string_type D.41207;
  long unsigned int pretmp_24;
  int _26;
  long unsigned int _29;
  const struct sRequest & _31;
  int _32;
  int _33;
  struct basic_ostream & _35;
  struct basic_ostream & _37;
  const void * prephitmp_38;
  struct basic_ostream & _41;
  const size_type _42;
  char * const _43;
  const void * pretmp_44;
  char * const _46;
  char * const _48;
  size_type pretmp_52;
  int _53;
  const void * pretmp_54;
  long unsigned int _57;
  long unsigned int _58;
  int _59;
  int _60;
  struct basic_ostream & _62;
  struct basic_ostream & _64;
  const void * prephitmp_65;
  struct basic_ostream & _68;
  const size_type _69;
  char * const _70;
  const void * pretmp_71;
  char * const _75;
  char * const _79;
  struct vector * const _80;
  struct vector * const _81;
  struct sRequest * const _82;
  struct sRequest * const _83;
  const struct vector & _85;
  long int _86;
  char * const _87;
  struct basic_ostream & _88;
  const struct sRequest & _90;
  long unsigned int _91;
  const struct vector & _92;
  long int _93;
  char * const _94;
  struct basic_ostream & _95;
  const struct __ctype_type * _128;
  long unsigned int pretmp_130;
  const void * prephitmp_131;
  long int _133;
  sizetype iftmp.58_134;
  struct basic_ios * _135;
  const void * pretmp_138;
  const void * prephitmp_140;
  bool _141;
  int _143;
  long unsigned int pretmp_144;
  long int _145;
  sizetype iftmp.64_146;
  struct basic_ios * _147;
  char_type * const _149;
  char_type * const _150;
  char_type * const _151;
  char * const _152;
  char_type * const _153;
  char * const _154;
  const void * pretmp_155;
  char * const _156;
  char * const _157;
  char * const _158;
  long int __last.73_159;
  long int __first.74_160;
  difference_type _161;
  long unsigned int __dnew.70_162;
  char * _163;
  long unsigned int __dnew.71_164;
  const char_type _166;
  char * _169;
  long int __last.73_171;
  long int __first.74_172;
  difference_type _173;
  long unsigned int __dnew.70_174;
  char * _175;
  long unsigned int __dnew.71_176;
  const char_type _178;
  char * _181;
  char * const prephitmp_182;
  size_type prephitmp_183;
  const void * prephitmp_184;
  long int _186;
  sizetype iftmp.64_187;
  struct basic_ios * _188;
  const int prephitmp_190;
  char * const pretmp_194;
  const void * pretmp_195;
  long int _197;
  sizetype iftmp.58_198;
  struct basic_ios * _199;
  const void * prephitmp_201;
  size_type pretmp_202;
  const void * prephitmp_207;
  int prephitmp_208;
  long int _209;
  sizetype iftmp.64_210;
  struct basic_ios * _211;
  char_type * const _213;
  char_type * const _214;
  char_type * const _215;
  char * const _216;
  char_type * const _217;
  char * const _218;
  size_type prephitmp_219;
  char * const _220;
  char * const _221;
  char * const _222;
  long int __last.73_223;
  long int __first.74_224;
  difference_type _225;
  long unsigned int __dnew.70_226;
  char * _227;
  long unsigned int __dnew.71_228;
  const char_type _230;
  char * _233;
  long int __last.73_235;
  long int __first.74_236;
  difference_type _237;
  long unsigned int __dnew.70_238;
  char * _239;
  long unsigned int __dnew.71_240;
  const char_type _242;
  char * _245;
  char * const pretmp_246;
  char * const prephitmp_247;
  const void * prephitmp_248;
  long int _250;
  sizetype iftmp.64_251;
  struct basic_ios * _252;
  long unsigned int pretmp_254;
  bool _256;
  int (*__vtbl_ptr_type) () * _257;
  long int _258;
  sizetype _259;
  struct basic_ios * _260;
  const void * pretmp_261;
  struct basic_ostream & _263;
  char _265;
  char_type _268;
  int (*__vtbl_ptr_type) () * _273;
  int (*__vtbl_ptr_type) () _274;
  int _276;
  void * PROF_278;
  char * const _279;
  char_type _280;
  bool _282;
  int _286;
  int _308;
  int pretmp_395;
  int pretmp_424;
  bool _454;
  bool _508;
  char * const _538;
  const void * pretmp_540;
  char * const _551;
  char * const _552;
  bool _556;
  const void * prephitmp_560;
  const void * prephitmp_561;
  const void * prephitmp_562;
  const int prephitmp_563;
  const void * prephitmp_564;
  size_type pretmp_567;
  size_type prephitmp_568;
  char * const pretmp_569;
  char * const prephitmp_570;
  size_type pretmp_571;
  size_type prephitmp_572;
  char * const pretmp_573;
  char * const prephitmp_574;
  const int pretmp_575;
  const int prephitmp_576;
  const int pretmp_577;
  const int prephitmp_578;

  <bb 2>:
  if (os_22(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # os_1 = PHI <os_22(D)(3), &cout(2)>
  # DEBUG os => os_1
  # DEBUG __out => os_1
  # DEBUG __s => "Input requests = [ "
  # DEBUG __s => "Input requests = [ "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "Input requests = [ ", 19);
  # DEBUG input => 0
  _286 = this_25(D)->D.36298._inputs;
  if (_286 <= 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG __out => os_1
  # DEBUG __s => "], output requests = [ "
  # DEBUG __s => "], output requests = [ "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "], output requests = [ ", 23);
  # DEBUG output => 0
  _143 = this_25(D)->D.36298._outputs;
  if (_143 <= 0)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 6>:
  pretmp_195 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_44 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 7>:
  # input_264 = PHI <0(6), input_50(79)>
  # prephitmp_201 = PHI <pretmp_195(6), prephitmp_131(79)>
  # prephitmp_184 = PHI <pretmp_44(6), prephitmp_38(79)>
  # DEBUG input => input_264
  # DEBUG print => 0
  # DEBUG this => &ss
  # DEBUG __mode => 16
  # DEBUG D#203 => &ss.D.24379
  # DEBUG this => D#203
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&ss + 112B].D.21051);
  MEM[(struct basic_ios *)&ss + 112B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&ss + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&ss + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&ss + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&ss + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&ss + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&ss + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&ss + 112B]._M_num_get = 0B;
  # DEBUG this => &ss.D.24376
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&ss]._vptr.basic_ostream = prephitmp_201;
  _133 = MEM[(long int *)prephitmp_201 + -24B];
  iftmp.58_134 = (sizetype) _133;
  _135 = &ss.D.24376 + iftmp.58_134;
  _135->D.21051._vptr.ios_base = prephitmp_184;
  std::basic_ios<char>::init (_135, 0B);

  <bb 8>:
  ss.D.24376._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&ss + 112B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#201 => &ss._M_stringbuf
  # DEBUG this => D#201
  # DEBUG __mode => NULL
  # DEBUG D#187 => &MEM[(struct basic_stringbuf *)D#201].D.24226
  # DEBUG this => D#187
  MEM[(struct basic_streambuf *)&ss + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&ss + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&ss + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&ss + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&ss + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&ss + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&ss + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&ss + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&ss + 8B].D.24226._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&ss + 8B]._M_mode = 16;
  # DEBUG D#186 => &MEM[(struct basic_stringbuf *)D#201]._M_string
  # DEBUG this => D#186
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG this => D#98
  # DEBUG this => D#186
  # DEBUG D#185 => &MEM[(struct basic_string *)D#186]._M_dataplus
  # DEBUG this => D#185
  # DEBUG __dat => &MEM[(struct basic_string *)&ss + 80B].D.11539._M_local_buf
  # DEBUG __a => D#184
  # DEBUG D#183 => D#184
  # DEBUG D#181 => D#185
  # DEBUG D#182 => D#183
  # DEBUG this => D#181
  # DEBUG __a => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG this => D#179
  # DEBUG D.53273 => D#180
  MEM[(struct _Alloc_hider *)&ss + 80B]._M_p = &MEM[(struct basic_string *)&ss + 80B].D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#186
  # DEBUG __n => 0
  # DEBUG D#8 => D#186
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&ss + 88B] = 0;
  # DEBUG D#2 => D#186
  # DEBUG this => D#2
  # DEBUG __c1 => &MEM[(struct basic_string *)&ss + 80B].D.11539._M_local_buf
  # DEBUG __c2 => D#23
  MEM[(char_type &)&ss + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&ss + 112B], &ss._M_stringbuf.D.24226);

  <bb 9>:
  # DEBUG output => 0
  # DEBUG print => 0
  _276 = this_25(D)->D.36298._outputs;
  if (_276 <= 0)
    goto <bb 76>;
  else
    goto <bb 15>;

  # prephitmp_561 = PHI <prephitmp_184(8)>
  # prephitmp_560 = PHI <prephitmp_201(8)>
<L33>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&ss._M_stringbuf);
  resx 15

<L34>:
  # DEBUG this => &ss.D.24376
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _145 = MEM[(long int *)prephitmp_560 + -24B];
  iftmp.64_146 = (sizetype) _145;
  _147 = &ss.D.24376 + iftmp.64_146;
  _147->D.21051._vptr.ios_base = prephitmp_561;
  MEM[(struct  &)&ss] ={v} {CLOBBER};
  resx 14

<L46>:
  goto <bb 14> (<L35>);

<L45>:

<L35>:
  # DEBUG D#202 => &ss.D.24379
  # DEBUG this => D#202
  MEM[(struct basic_ios *)&ss + 112B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&ss + 112B].D.21051);
  resx 13

  <bb 15>:
  pretmp_24 = (long unsigned int) input_264;
  pretmp_130 = pretmp_24 * 24;

  <bb 16>:
  # print_234 = PHI <0(15), print_4(26)>
  # output_114 = PHI <0(15), output_39(26)>
  # prephitmp_563 = PHI <_276(15), prephitmp_578(26)>
  # DEBUG output => output_114
  # DEBUG print => print_234
  _29 = (long unsigned int) output_114;
  # DEBUG D#479 => &this_25(D)->_request
  _80 = MEM[(struct vector * *)this_25(D) + 160B];
  # DEBUG D#63 => D#479
  # DEBUG __n => (long unsigned int) input_264
  # DEBUG this => D#63
  _85 = _80 + pretmp_130;
  _82 = MEM[(struct sRequest * *)_85];
  # DEBUG __n => _29
  # DEBUG this => D#64
  _58 = _29 * 16;
  _31 = _82 + _58;
  # DEBUG req => NULL
  _32 = _31->label;
  if (_32 >= 0)
    goto <bb 17>;
  else
    goto <bb 25>;

  <bb 17>:
  # DEBUG print => 1
  _33 = _31->in_pri;
  _35 = std::basic_ostream<char>::operator<< (&ss.D.24376, output_114);

  <bb 18>:
  # DEBUG __out => _35
  # DEBUG __s => "@"
  # DEBUG __s => "@"
  std::__ostream_insert<char, std::char_traits<char> > (_35, "@", 1);
  goto <bb 20>;

<L48>:
  goto <bb 167> (<L28>);

  <bb 20>:
  _37 = std::basic_ostream<char>::operator<< (_35, _33);
  goto <bb 22>;

<L49>:
  goto <bb 167> (<L28>);

  <bb 22>:
  # DEBUG __out => _37
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_37, " ", 1);
  goto <bb 24>;

<L50>:
  goto <bb 167> (<L28>);

  <bb 24>:
  pretmp_577 = this_25(D)->D.36298._outputs;

  <bb 25>:
  # print_4 = PHI <print_234(16), 1(24)>
  # prephitmp_578 = PHI <prephitmp_563(16), pretmp_577(24)>
  # DEBUG print => print_4
  output_39 = output_114 + 1;
  # DEBUG output => output_39
  # DEBUG output => output_39
  # DEBUG print => print_4
  if (output_39 >= prephitmp_578)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 16>;

  <bb 27>:
  # print_27 = PHI <print_4(25)>
  if (print_27 != 0)
    goto <bb 28>;
  else
    goto <bb 76>;

  <bb 28>:
  # DEBUG this => &ss
  # DEBUG this => &ss._M_stringbuf
  # DEBUG this => &D.41207
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG this => D#98
  # DEBUG this => &D.41207
  # DEBUG D#185 => &D.41207._M_dataplus
  # DEBUG this => D#185
  # DEBUG __dat => &D.41207.D.11539._M_local_buf
  # DEBUG __a => D#184
  # DEBUG D#183 => D#184
  # DEBUG D#181 => D#185
  # DEBUG D#182 => D#183
  # DEBUG this => D#181
  # DEBUG __a => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG this => D#179
  # DEBUG D.53273 => D#180
  MEM[(struct _Alloc_hider *)&D.41207]._M_p = &D.41207.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.41207
  # DEBUG __n => 0
  # DEBUG D#8 => &D.41207
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&D.41207 + 8B] = 0;
  # DEBUG D#2 => &D.41207
  # DEBUG this => D#2
  # DEBUG __c1 => &D.41207.D.11539._M_local_buf
  # DEBUG __c2 => D#23
  MEM[(char_type &)&D.41207 + 16] = 0;
  # DEBUG D#472 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  _149 = MEM[(char_type * *)&ss + 48B];
  # DEBUG D#5 => D#472
  # DEBUG this => D#5
  if (_149 != 0B)
    goto <bb 29>;
  else
    goto <bb 51>;

  <bb 29>:
  # DEBUG D#473 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  # DEBUG D#5 => D#473
  # DEBUG this => D#5
  # DEBUG D#474 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  _150 = MEM[(char_type * *)&ss + 32B];
  # DEBUG D#6 => D#474
  # DEBUG this => D#6
  if (_149 > _150)
    goto <bb 30>;
  else
    goto <bb 40>;

  <bb 30>:
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG this => D#98
  # DEBUG D#477 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  # DEBUG D#5 => D#477
  # DEBUG this => D#5
  # DEBUG D#478 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  _151 = MEM[(char_type * *)&ss + 40B];
  # DEBUG D#7 => D#478
  # DEBUG this => D#7
  # DEBUG this => &D.63788
  # DEBUG __beg => _151
  # DEBUG __end => _149
  # DEBUG __a => NULL
  # DEBUG this => &D.63788
  # DEBUG D#470 => &D.63788._M_dataplus
  # DEBUG this => D#470
  # DEBUG __dat => &D.63788.D.11539._M_local_buf
  # DEBUG __a => D#184
  # DEBUG D#183 => D#184
  # DEBUG D#181 => D#470
  # DEBUG D#182 => D#183
  # DEBUG this => D#181
  # DEBUG __a => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG this => D#179
  # DEBUG D.53273 => D#180
  MEM[(struct _Alloc_hider *)&D.63788]._M_p = &D.63788.D.11539._M_local_buf;
  # DEBUG this => &D.63788
  # DEBUG __beg => _151
  # DEBUG __end => _149
  # DEBUG this => &D.63788
  # DEBUG __beg => _151
  # DEBUG __end => _149
  # DEBUG this => &D.63788
  # DEBUG __beg => _151
  # DEBUG __end => _149
  # DEBUG __ptr => _151
  if (_151 == 0B)
    goto <bb 175>;
  else
    goto <bb 177>;

  <bb 31>:
  _163 = std::__cxx11::basic_string<char>::_M_create (&D.63788, &__dnew, 0);

  <bb 32>:
  # DEBUG D#9 => &D.63788
  # DEBUG __p => _163
  # DEBUG this => D#9
  MEM[(char * *)&D.63788] = _163;
  __dnew.71_164 = __dnew;
  # DEBUG D#10 => &D.63788
  # DEBUG __capacity => __dnew.71_164
  # DEBUG this => D#10
  MEM[(size_type *)&D.63788 + 16B] = __dnew.71_164;
  # DEBUG D#2 => &D.63788
  # DEBUG this => D#2
  # DEBUG __p => _163
  # DEBUG __k1 => _151
  # DEBUG __k2 => _149
  # DEBUG __d => _163
  # DEBUG __s => _151
  # DEBUG __n => __dnew.70_162
  goto <bb 35>;

  <bb 33>:
  # DEBUG D#2 => &D.63788
  # DEBUG this => D#2
  # DEBUG __p => &D.63788.D.11539._M_local_buf
  # DEBUG __k1 => _151
  # DEBUG __k2 => _149
  # DEBUG __d => &D.63788.D.11539._M_local_buf
  # DEBUG __s => _151
  # DEBUG __n => __dnew.70_162
  if (__dnew.70_162 == 1)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  _166 = MEM[(const char_type &)_151];
  # DEBUG D#23 => _151
  # DEBUG __c1 => &D.63788.D.11539._M_local_buf
  # DEBUG __c2 => D#23
  MEM[(char_type &)&D.63788 + 16] = _166;
  goto <bb 36>;

  <bb 35>:
  # _279 = PHI <&D.63788.D.11539._M_local_buf(33), _163(32)>
  # DEBUG D#2 => &D.63788
  # DEBUG this => D#2
  # DEBUG __p => _279
  # DEBUG __k1 => _151
  # DEBUG __k2 => _149
  # DEBUG __d => _279
  # DEBUG __s => _151
  # DEBUG __n => __dnew.70_162
  # DEBUG __s1 => _279
  # DEBUG __s2 => _151
  # DEBUG __n => __dnew.70_162
  __builtin_memcpy (_279, _151, __dnew.70_162);
  pretmp_571 = __dnew;
  pretmp_573 = MEM[(char * *)&D.63788];

  <bb 36>:
  # prephitmp_572 = PHI <__dnew.70_162(34), pretmp_571(35)>
  # prephitmp_574 = PHI <&D.63788.D.11539._M_local_buf(34), pretmp_573(35)>
  # DEBUG D#897 => __dnew
  # DEBUG this => &D.63788
  # DEBUG __n => D#897
  # DEBUG D#8 => &D.63788
  # DEBUG __length => D#897
  # DEBUG this => D#8
  MEM[(size_type *)&D.63788 + 8B] = prephitmp_572;
  # DEBUG D#2 => &D.63788
  # DEBUG this => D#2
  _169 = prephitmp_574 + prephitmp_572;
  # DEBUG __c1 => _169
  # DEBUG __c2 => D#23
  MEM[(char_type &)_169] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.41207
  # DEBUG __str => &D.63788
  # DEBUG this => &D.41207
  # DEBUG __str => &D.63788
  std::__cxx11::basic_string<char>::_M_assign (&D.41207, &D.63788);

  <bb 37>:
  # DEBUG this => &D.63788
  # DEBUG this => &D.63788
  # DEBUG this => &D.63788
  _152 = MEM[(char * *)&D.63788];
  # DEBUG D#2 => &D.63788
  # DEBUG this => D#2
  # DEBUG this => &D.63788
  if (&D.63788.D.11539._M_local_buf != _152)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#197 => D.63788.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.63788
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.63788
  # DEBUG this => D#2
  # DEBUG this => &D.63788
  # DEBUG D#194 => &D.63788._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _152
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _152
  # DEBUG this => D#188
  # DEBUG D.63747 => D#189
  operator delete (_152);

  <bb 39>:
  # DEBUG D#198 => &D.63788._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.63788 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 66>;

  <bb 40>:
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG this => D#98
  # DEBUG D#475 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  # DEBUG D#6 => D#475
  # DEBUG this => D#6
  # DEBUG D#476 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  _153 = MEM[(char_type * *)&ss + 40B];
  # DEBUG D#7 => D#476
  # DEBUG this => D#7
  # DEBUG this => &D.63787
  # DEBUG __beg => _153
  # DEBUG __end => _150
  # DEBUG __a => NULL
  # DEBUG this => &D.63787
  # DEBUG D#470 => &D.63787._M_dataplus
  # DEBUG this => D#470
  # DEBUG __dat => &D.63787.D.11539._M_local_buf
  # DEBUG __a => D#184
  # DEBUG D#183 => D#184
  # DEBUG D#181 => D#470
  # DEBUG D#182 => D#183
  # DEBUG this => D#181
  # DEBUG __a => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG this => D#179
  # DEBUG D.53273 => D#180
  MEM[(struct _Alloc_hider *)&D.63787]._M_p = &D.63787.D.11539._M_local_buf;
  # DEBUG this => &D.63787
  # DEBUG __beg => _153
  # DEBUG __end => _150
  # DEBUG this => &D.63787
  # DEBUG __beg => _153
  # DEBUG __end => _150
  # DEBUG this => &D.63787
  # DEBUG __beg => _153
  # DEBUG __end => _150
  # DEBUG __ptr => _153
  _454 = _150 != 0B;
  _508 = _153 == 0B;
  _282 = _454 & _508;
  if (_282 != 0)
    goto <bb 179>;
  else
    goto <bb 178>;

  <bb 41>:
  _175 = std::__cxx11::basic_string<char>::_M_create (&D.63787, &__dnew, 0);
  goto <bb 43>;

<L52>:
  goto <bb 62> (<L38>);

  <bb 43>:
  # DEBUG D#9 => &D.63787
  # DEBUG __p => _175
  # DEBUG this => D#9
  MEM[(char * *)&D.63787] = _175;
  __dnew.71_176 = __dnew;
  # DEBUG D#10 => &D.63787
  # DEBUG __capacity => __dnew.71_176
  # DEBUG this => D#10
  MEM[(size_type *)&D.63787 + 16B] = __dnew.71_176;
  # DEBUG D#2 => &D.63787
  # DEBUG this => D#2
  # DEBUG __p => _175
  # DEBUG __k1 => _153
  # DEBUG __k2 => _150
  # DEBUG __d => _175
  # DEBUG __s => _153
  # DEBUG __n => __dnew.70_174
  goto <bb 46>;

  <bb 44>:
  # DEBUG D#2 => &D.63787
  # DEBUG this => D#2
  # DEBUG __p => &D.63787.D.11539._M_local_buf
  # DEBUG __k1 => _153
  # DEBUG __k2 => _150
  # DEBUG __d => &D.63787.D.11539._M_local_buf
  # DEBUG __s => _153
  # DEBUG __n => __dnew.70_174
  if (__dnew.70_174 == 1)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  _178 = MEM[(const char_type &)_153];
  # DEBUG D#23 => _153
  # DEBUG __c1 => &D.63787.D.11539._M_local_buf
  # DEBUG __c2 => D#23
  MEM[(char_type &)&D.63787 + 16] = _178;
  goto <bb 47>;

  <bb 46>:
  # _551 = PHI <&D.63787.D.11539._M_local_buf(44), _175(43)>
  # DEBUG D#2 => &D.63787
  # DEBUG this => D#2
  # DEBUG __p => _551
  # DEBUG __k1 => _153
  # DEBUG __k2 => _150
  # DEBUG __d => _551
  # DEBUG __s => _153
  # DEBUG __n => __dnew.70_174
  # DEBUG __s1 => _551
  # DEBUG __s2 => _153
  # DEBUG __n => __dnew.70_174
  __builtin_memcpy (_551, _153, __dnew.70_174);
  pretmp_567 = __dnew;
  pretmp_569 = MEM[(char * *)&D.63787];

  <bb 47>:
  # prephitmp_568 = PHI <__dnew.70_174(45), pretmp_567(46)>
  # prephitmp_570 = PHI <&D.63787.D.11539._M_local_buf(45), pretmp_569(46)>
  # DEBUG D#898 => __dnew
  # DEBUG this => &D.63787
  # DEBUG __n => D#898
  # DEBUG D#8 => &D.63787
  # DEBUG __length => D#898
  # DEBUG this => D#8
  MEM[(size_type *)&D.63787 + 8B] = prephitmp_568;
  # DEBUG D#2 => &D.63787
  # DEBUG this => D#2
  _181 = prephitmp_570 + prephitmp_568;
  # DEBUG __c1 => _181
  # DEBUG __c2 => D#23
  MEM[(char_type &)_181] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.41207
  # DEBUG __str => &D.63787
  # DEBUG this => &D.41207
  # DEBUG __str => &D.63787
  std::__cxx11::basic_string<char>::_M_assign (&D.41207, &D.63787);

  <bb 48>:
  # DEBUG this => &D.63787
  # DEBUG this => &D.63787
  # DEBUG this => &D.63787
  _154 = MEM[(char * *)&D.63787];
  # DEBUG D#2 => &D.63787
  # DEBUG this => D#2
  # DEBUG this => &D.63787
  if (&D.63787.D.11539._M_local_buf != _154)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # DEBUG D#197 => D.63787.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.63787
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.63787
  # DEBUG this => D#2
  # DEBUG this => &D.63787
  # DEBUG D#194 => &D.63787._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _154
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _154
  # DEBUG this => D#188
  # DEBUG D.63710 => D#189
  operator delete (_154);

  <bb 50>:
  # DEBUG D#198 => &D.63787._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.63787 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 66>;

  <bb 51>:
  # DEBUG this => &D.41207
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&ss + 8B]._M_string
  # DEBUG this => &D.41207
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&ss + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.41207, &MEM[(const struct basic_stringbuf *)&ss + 8B]._M_string);
  goto <bb 66>;

<L53>:
  goto <bb 62> (<L38>);

<L36>:
  # DEBUG this => &D.63788
  # DEBUG this => &D.63788
  # DEBUG this => &D.63788
  _156 = MEM[(char * *)&D.63788];
  # DEBUG D#2 => &D.63788
  # DEBUG this => D#2
  # DEBUG this => &D.63788
  if (&D.63788.D.11539._M_local_buf != _156)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  # DEBUG D#197 => D.63788.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.63788
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.63788
  # DEBUG this => D#2
  # DEBUG this => &D.63788
  # DEBUG D#194 => &D.63788._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _156
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _156
  # DEBUG this => D#188
  # DEBUG D.63691 => D#189
  operator delete (_156);

  <bb 55>:
  # DEBUG D#198 => &D.63788._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.63788 ={v} {CLOBBER};
  resx 19

<L54>:
  goto <bb 62> (<L38>);

<L37>:
  # DEBUG this => &D.63787
  # DEBUG this => &D.63787
  # DEBUG this => &D.63787
  _157 = MEM[(char * *)&D.63787];
  # DEBUG D#2 => &D.63787
  # DEBUG this => D#2
  # DEBUG this => &D.63787
  if (&D.63787.D.11539._M_local_buf != _157)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#197 => D.63787.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.63787
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.63787
  # DEBUG this => D#2
  # DEBUG this => &D.63787
  # DEBUG D#194 => &D.63787._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _157
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _157
  # DEBUG this => D#188
  # DEBUG D.63675 => D#189
  operator delete (_157);

  <bb 59>:
  # DEBUG D#198 => &D.63787._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.63787 ={v} {CLOBBER};
  resx 18

<L55>:
  goto <bb 62> (<L38>);

<L51>:

<L38>:
  # DEBUG this => &D.41207
  # DEBUG this => &D.41207
  # DEBUG this => &D.41207
  _158 = MEM[(char * *)&D.41207];
  # DEBUG D#2 => &D.41207
  # DEBUG this => D#2
  # DEBUG this => &D.41207
  if (&D.41207.D.11539._M_local_buf != _158)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG D#197 => D.41207.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.41207
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.41207
  # DEBUG this => D#2
  # DEBUG this => &D.41207
  # DEBUG D#194 => &D.41207._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _158
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _158
  # DEBUG this => D#188
  # DEBUG D.63664 => D#189
  operator delete (_158);

  <bb 64>:
  # DEBUG D#198 => &D.41207._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  resx 17

<L56>:
  goto <bb 167> (<L28>);

  <bb 66>:
  _41 = std::basic_ostream<char>::operator<< (os_1, input_264);

  <bb 67>:
  # DEBUG __out => _41
  # DEBUG __s => " -> [ "
  # DEBUG __s => " -> [ "
  std::__ostream_insert<char, std::char_traits<char> > (_41, " -> [ ", 6);
  goto <bb 69>;

<L58>:
  goto <bb 162> (<L27>);

  <bb 69>:
  # DEBUG __os => _41
  # DEBUG __str => &D.41207
  _42 = MEM[(long unsigned int *)&D.41207 + 8B];
  # DEBUG D#1 => &D.41207
  # DEBUG this => D#1
  _86 = (long int) _42;
  # DEBUG this => &D.41207
  _87 = MEM[(char * *)&D.41207];
  # DEBUG D#2 => &D.41207
  # DEBUG this => D#2
  _88 = std::__ostream_insert<char, std::char_traits<char> > (_41, _87, _86);
  goto <bb 71>;

<L59>:
  goto <bb 162> (<L27>);

  <bb 71>:
  # DEBUG __out => _88
  # DEBUG __s => "]  "
  # DEBUG __s => "]  "
  std::__ostream_insert<char, std::char_traits<char> > (_88, "]  ", 3);
  goto <bb 73>;

<L60>:
  goto <bb 162> (<L27>);

  <bb 73>:
  # DEBUG this => &D.41207
  # DEBUG this => &D.41207
  # DEBUG this => &D.41207
  _43 = MEM[(char * *)&D.41207];
  # DEBUG D#2 => &D.41207
  # DEBUG this => D#2
  # DEBUG this => &D.41207
  if (&D.41207.D.11539._M_local_buf != _43)
    goto <bb 74>;
  else
    goto <bb 75>;

  <bb 74>:
  # DEBUG D#197 => D.41207.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.41207
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.41207
  # DEBUG this => D#2
  # DEBUG this => &D.41207
  # DEBUG D#194 => &D.41207._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _43
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _43
  # DEBUG this => D#188
  # DEBUG D.56337 => D#189
  operator delete (_43);

  <bb 75>:
  # DEBUG D#198 => &D.41207._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.41207 ={v} {CLOBBER};
  pretmp_540 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_155 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 76>:
  # prephitmp_131 = PHI <prephitmp_201(27), pretmp_540(75), prephitmp_201(9)>
  # prephitmp_38 = PHI <prephitmp_184(27), pretmp_155(75), prephitmp_184(9)>
  # DEBUG this => &ss
  ss.D.24376._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&ss + 112B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &ss._M_stringbuf
  MEM[(struct basic_stringbuf *)&ss + 8B].D.24226._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#200 => &MEM[(struct basic_stringbuf *)&ss + 8B]._M_string
  # DEBUG this => D#200
  # DEBUG this => D#200
  # DEBUG this => D#200
  _48 = MEM[(char * *)&ss + 80B];
  # DEBUG D#2 => D#200
  # DEBUG this => D#2
  # DEBUG this => D#200
  if (&MEM[(const struct basic_string *)&ss + 80B].D.11539._M_local_buf != _48)
    goto <bb 77>;
  else
    goto <bb 78>;

  <bb 77>:
  # DEBUG D#197 => MEM[(struct basic_string *)D#200].D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => D#200
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => D#200
  # DEBUG this => D#2
  # DEBUG this => D#200
  # DEBUG D#194 => &MEM[(struct basic_string *)D#200]._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _48
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _48
  # DEBUG this => D#188
  # DEBUG D.63867 => D#189
  operator delete (_48);

  <bb 78>:
  # DEBUG D#198 => &MEM[(struct basic_string *)D#200]._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  MEM[(struct  &)&ss + 80] ={v} {CLOBBER};
  # DEBUG D#199 => &MEM[(struct basic_stringbuf *)&ss + 8B].D.24226
  # DEBUG this => D#199
  MEM[(struct basic_streambuf *)&ss + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&ss + 8B]._M_buf_locale);
  MEM[(struct  &)&ss + 8] ={v} {CLOBBER};
  # DEBUG this => &ss.D.24376
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _186 = MEM[(long int *)prephitmp_131 + -24B];
  iftmp.64_187 = (sizetype) _186;
  _188 = &ss.D.24376 + iftmp.64_187;
  _188->D.21051._vptr.ios_base = prephitmp_38;
  MEM[(struct  &)&ss] ={v} {CLOBBER};
  # DEBUG D#204 => &ss.D.24379
  # DEBUG this => D#204
  MEM[(struct basic_ios *)&ss + 112B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&ss + 112B].D.21051);
  ss ={v} {CLOBBER};
  input_50 = input_264 + 1;
  # DEBUG input => input_50
  # DEBUG input => input_50
  _26 = this_25(D)->D.36298._inputs;
  if (_26 <= input_50)
    goto <bb 5>;
  else
    goto <bb 79>;

  <bb 79>:
  goto <bb 7>;

  <bb 80>:
  # DEBUG __out => os_1
  # DEBUG __s => "]."
  # DEBUG __s => "]."
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "].", 2);
  # DEBUG this => os_1
  # DEBUG __pf => endl
  # DEBUG __os => os_1
  _257 = MEM[(struct basic_ostream *)os_1]._vptr.basic_ostream;
  _258 = MEM[(long int *)_257 + -24B];
  _259 = (sizetype) _258;
  _260 = os_1 + _259;
  # DEBUG this => _260
  # DEBUG __c => 10
  _128 = MEM[(const struct basic_ios *)_260]._M_ctype;
  # DEBUG __f => _128
  if (_128 == 0B)
    goto <bb 155>;
  else
    goto <bb 156>;

  <bb 81>:
  pretmp_261 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_138 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 82>:
  # output_100 = PHI <0(81), output_77(154)>
  # prephitmp_140 = PHI <pretmp_261(81), prephitmp_207(154)>
  # prephitmp_65 = PHI <pretmp_138(81), prephitmp_248(154)>
  # DEBUG output => output_100
  # DEBUG print => 0
  # DEBUG this => &ss
  # DEBUG __mode => 16
  # DEBUG D#203 => &ss.D.24379
  # DEBUG this => D#203
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&ss + 112B].D.21051);
  MEM[(struct basic_ios *)&ss + 112B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&ss + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&ss + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&ss + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&ss + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&ss + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&ss + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&ss + 112B]._M_num_get = 0B;
  # DEBUG this => &ss.D.24376
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&ss]._vptr.basic_ostream = prephitmp_140;
  _197 = MEM[(long int *)prephitmp_140 + -24B];
  iftmp.58_198 = (sizetype) _197;
  _199 = &ss.D.24376 + iftmp.58_198;
  _199->D.21051._vptr.ios_base = prephitmp_65;
  std::basic_ios<char>::init (_199, 0B);

  <bb 83>:
  ss.D.24376._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&ss + 112B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#201 => &ss._M_stringbuf
  # DEBUG this => D#201
  # DEBUG __mode => NULL
  # DEBUG D#187 => &MEM[(struct basic_stringbuf *)D#201].D.24226
  # DEBUG this => D#187
  MEM[(struct basic_streambuf *)&ss + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&ss + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&ss + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&ss + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&ss + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&ss + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&ss + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&ss + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&ss + 8B].D.24226._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&ss + 8B]._M_mode = 16;
  # DEBUG D#186 => &MEM[(struct basic_stringbuf *)D#201]._M_string
  # DEBUG this => D#186
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG this => D#98
  # DEBUG this => D#186
  # DEBUG D#185 => &MEM[(struct basic_string *)D#186]._M_dataplus
  # DEBUG this => D#185
  # DEBUG __dat => &MEM[(struct basic_string *)&ss + 80B].D.11539._M_local_buf
  # DEBUG __a => D#184
  # DEBUG D#183 => D#184
  # DEBUG D#181 => D#185
  # DEBUG D#182 => D#183
  # DEBUG this => D#181
  # DEBUG __a => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG this => D#179
  # DEBUG D.53273 => D#180
  MEM[(struct _Alloc_hider *)&ss + 80B]._M_p = &MEM[(struct basic_string *)&ss + 80B].D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#186
  # DEBUG __n => 0
  # DEBUG D#8 => D#186
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&ss + 88B] = 0;
  # DEBUG D#2 => D#186
  # DEBUG this => D#2
  # DEBUG __c1 => &MEM[(struct basic_string *)&ss + 80B].D.11539._M_local_buf
  # DEBUG __c2 => D#23
  MEM[(char_type &)&ss + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&ss + 112B], &ss._M_stringbuf.D.24226);

  <bb 84>:
  # DEBUG input => 0
  # DEBUG print => 0
  _308 = this_25(D)->D.36298._inputs;
  if (_308 <= 0)
    goto <bb 151>;
  else
    goto <bb 90>;

  # prephitmp_564 = PHI <prephitmp_65(83)>
  # prephitmp_562 = PHI <prephitmp_140(83)>
<L39>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&ss._M_stringbuf);
  resx 22

<L40>:
  # DEBUG this => &ss.D.24376
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _209 = MEM[(long int *)prephitmp_562 + -24B];
  iftmp.64_210 = (sizetype) _209;
  _211 = &ss.D.24376 + iftmp.64_210;
  _211->D.21051._vptr.ios_base = prephitmp_564;
  MEM[(struct  &)&ss] ={v} {CLOBBER};
  resx 21

<L62>:
  goto <bb 89> (<L41>);

<L61>:

<L41>:
  # DEBUG D#202 => &ss.D.24379
  # DEBUG this => D#202
  MEM[(struct basic_ios *)&ss + 112B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&ss + 112B].D.21051);
  resx 20

  <bb 90>:
  pretmp_254 = (long unsigned int) output_100;
  pretmp_144 = pretmp_254 * 16;

  <bb 91>:
  # print_545 = PHI <0(90), print_8(101)>
  # input_281 = PHI <0(90), input_66(101)>
  # prephitmp_190 = PHI <_308(90), prephitmp_576(101)>
  # DEBUG input => input_281
  # DEBUG print => print_545
  _57 = (long unsigned int) input_281;
  # DEBUG D#480 => &this_25(D)->_request
  _81 = MEM[(struct vector * *)this_25(D) + 160B];
  # DEBUG D#63 => D#480
  # DEBUG __n => _57
  # DEBUG this => D#63
  _91 = _57 * 24;
  _92 = _81 + _91;
  _83 = MEM[(struct sRequest * *)_92];
  # DEBUG __n => (long unsigned int) output_100
  # DEBUG this => D#64
  _90 = _83 + pretmp_144;
  # DEBUG req => NULL
  _59 = _90->label;
  if (_59 >= 0)
    goto <bb 92>;
  else
    goto <bb 100>;

  <bb 92>:
  # DEBUG print => 1
  _60 = _90->out_pri;
  _62 = std::basic_ostream<char>::operator<< (&ss.D.24376, input_281);

  <bb 93>:
  # DEBUG __out => _62
  # DEBUG __s => "@"
  # DEBUG __s => "@"
  std::__ostream_insert<char, std::char_traits<char> > (_62, "@", 1);
  goto <bb 95>;

<L64>:
  goto <bb 174> (<L31>);

  <bb 95>:
  _64 = std::basic_ostream<char>::operator<< (_62, _60);
  goto <bb 97>;

<L65>:
  goto <bb 174> (<L31>);

  <bb 97>:
  # DEBUG __out => _64
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_64, " ", 1);
  goto <bb 99>;

<L66>:
  goto <bb 174> (<L31>);

  <bb 99>:
  pretmp_575 = this_25(D)->D.36298._inputs;

  <bb 100>:
  # print_8 = PHI <print_545(91), 1(99)>
  # prephitmp_576 = PHI <prephitmp_190(91), pretmp_575(99)>
  # DEBUG print => print_8
  input_66 = input_281 + 1;
  # DEBUG input => input_66
  # DEBUG input => input_66
  # DEBUG print => print_8
  if (input_66 >= prephitmp_576)
    goto <bb 102>;
  else
    goto <bb 101>;

  <bb 101>:
  goto <bb 91>;

  <bb 102>:
  # print_546 = PHI <print_8(100)>
  if (print_546 != 0)
    goto <bb 103>;
  else
    goto <bb 151>;

  <bb 103>:
  # DEBUG this => &ss
  # DEBUG this => &ss._M_stringbuf
  # DEBUG this => &D.41213
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG this => D#98
  # DEBUG this => &D.41213
  # DEBUG D#185 => &D.41213._M_dataplus
  # DEBUG this => D#185
  # DEBUG __dat => &D.41213.D.11539._M_local_buf
  # DEBUG __a => D#184
  # DEBUG D#183 => D#184
  # DEBUG D#181 => D#185
  # DEBUG D#182 => D#183
  # DEBUG this => D#181
  # DEBUG __a => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG this => D#179
  # DEBUG D.53273 => D#180
  MEM[(struct _Alloc_hider *)&D.41213]._M_p = &D.41213.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.41213
  # DEBUG __n => 0
  # DEBUG D#8 => &D.41213
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&D.41213 + 8B] = 0;
  # DEBUG D#2 => &D.41213
  # DEBUG this => D#2
  # DEBUG __c1 => &D.41213.D.11539._M_local_buf
  # DEBUG __c2 => D#23
  MEM[(char_type &)&D.41213 + 16] = 0;
  # DEBUG D#472 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  _213 = MEM[(char_type * *)&ss + 48B];
  # DEBUG D#5 => D#472
  # DEBUG this => D#5
  if (_213 != 0B)
    goto <bb 104>;
  else
    goto <bb 126>;

  <bb 104>:
  # DEBUG D#473 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  # DEBUG D#5 => D#473
  # DEBUG this => D#5
  # DEBUG D#474 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  _214 = MEM[(char_type * *)&ss + 32B];
  # DEBUG D#6 => D#474
  # DEBUG this => D#6
  if (_213 > _214)
    goto <bb 105>;
  else
    goto <bb 115>;

  <bb 105>:
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG this => D#98
  # DEBUG D#477 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  # DEBUG D#5 => D#477
  # DEBUG this => D#5
  # DEBUG D#478 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  _215 = MEM[(char_type * *)&ss + 40B];
  # DEBUG D#7 => D#478
  # DEBUG this => D#7
  # DEBUG this => &D.64045
  # DEBUG __beg => _215
  # DEBUG __end => _213
  # DEBUG __a => NULL
  # DEBUG this => &D.64045
  # DEBUG D#470 => &D.64045._M_dataplus
  # DEBUG this => D#470
  # DEBUG __dat => &D.64045.D.11539._M_local_buf
  # DEBUG __a => D#184
  # DEBUG D#183 => D#184
  # DEBUG D#181 => D#470
  # DEBUG D#182 => D#183
  # DEBUG this => D#181
  # DEBUG __a => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG this => D#179
  # DEBUG D.53273 => D#180
  MEM[(struct _Alloc_hider *)&D.64045]._M_p = &D.64045.D.11539._M_local_buf;
  # DEBUG this => &D.64045
  # DEBUG __beg => _215
  # DEBUG __end => _213
  # DEBUG this => &D.64045
  # DEBUG __beg => _215
  # DEBUG __end => _213
  # DEBUG this => &D.64045
  # DEBUG __beg => _215
  # DEBUG __end => _213
  # DEBUG __ptr => _215
  if (_215 == 0B)
    goto <bb 181>;
  else
    goto <bb 183>;

  <bb 106>:
  _227 = std::__cxx11::basic_string<char>::_M_create (&D.64045, &__dnew, 0);

  <bb 107>:
  # DEBUG D#9 => &D.64045
  # DEBUG __p => _227
  # DEBUG this => D#9
  MEM[(char * *)&D.64045] = _227;
  __dnew.71_228 = __dnew;
  # DEBUG D#10 => &D.64045
  # DEBUG __capacity => __dnew.71_228
  # DEBUG this => D#10
  MEM[(size_type *)&D.64045 + 16B] = __dnew.71_228;
  # DEBUG D#2 => &D.64045
  # DEBUG this => D#2
  # DEBUG __p => _227
  # DEBUG __k1 => _215
  # DEBUG __k2 => _213
  # DEBUG __d => _227
  # DEBUG __s => _215
  # DEBUG __n => __dnew.70_226
  goto <bb 110>;

  <bb 108>:
  # DEBUG D#2 => &D.64045
  # DEBUG this => D#2
  # DEBUG __p => &D.64045.D.11539._M_local_buf
  # DEBUG __k1 => _215
  # DEBUG __k2 => _213
  # DEBUG __d => &D.64045.D.11539._M_local_buf
  # DEBUG __s => _215
  # DEBUG __n => __dnew.70_226
  if (__dnew.70_226 == 1)
    goto <bb 109>;
  else
    goto <bb 110>;

  <bb 109>:
  _230 = MEM[(const char_type &)_215];
  # DEBUG D#23 => _215
  # DEBUG __c1 => &D.64045.D.11539._M_local_buf
  # DEBUG __c2 => D#23
  MEM[(char_type &)&D.64045 + 16] = _230;
  goto <bb 111>;

  <bb 110>:
  # _552 = PHI <&D.64045.D.11539._M_local_buf(108), _227(107)>
  # DEBUG D#2 => &D.64045
  # DEBUG this => D#2
  # DEBUG __p => _552
  # DEBUG __k1 => _215
  # DEBUG __k2 => _213
  # DEBUG __d => _552
  # DEBUG __s => _215
  # DEBUG __n => __dnew.70_226
  # DEBUG __s1 => _552
  # DEBUG __s2 => _215
  # DEBUG __n => __dnew.70_226
  __builtin_memcpy (_552, _215, __dnew.70_226);
  pretmp_52 = __dnew;
  pretmp_194 = MEM[(char * *)&D.64045];

  <bb 111>:
  # prephitmp_183 = PHI <__dnew.70_226(109), pretmp_52(110)>
  # prephitmp_182 = PHI <&D.64045.D.11539._M_local_buf(109), pretmp_194(110)>
  # DEBUG D#895 => __dnew
  # DEBUG this => &D.64045
  # DEBUG __n => D#895
  # DEBUG D#8 => &D.64045
  # DEBUG __length => D#895
  # DEBUG this => D#8
  MEM[(size_type *)&D.64045 + 8B] = prephitmp_183;
  # DEBUG D#2 => &D.64045
  # DEBUG this => D#2
  _233 = prephitmp_182 + prephitmp_183;
  # DEBUG __c1 => _233
  # DEBUG __c2 => D#23
  MEM[(char_type &)_233] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.41213
  # DEBUG __str => &D.64045
  # DEBUG this => &D.41213
  # DEBUG __str => &D.64045
  std::__cxx11::basic_string<char>::_M_assign (&D.41213, &D.64045);

  <bb 112>:
  # DEBUG this => &D.64045
  # DEBUG this => &D.64045
  # DEBUG this => &D.64045
  _216 = MEM[(char * *)&D.64045];
  # DEBUG D#2 => &D.64045
  # DEBUG this => D#2
  # DEBUG this => &D.64045
  if (&D.64045.D.11539._M_local_buf != _216)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  # DEBUG D#197 => D.64045.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.64045
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.64045
  # DEBUG this => D#2
  # DEBUG this => &D.64045
  # DEBUG D#194 => &D.64045._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _216
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _216
  # DEBUG this => D#188
  # DEBUG D.64004 => D#189
  operator delete (_216);

  <bb 114>:
  # DEBUG D#198 => &D.64045._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.64045 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 141>;

  <bb 115>:
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG this => D#98
  # DEBUG D#475 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  # DEBUG D#6 => D#475
  # DEBUG this => D#6
  # DEBUG D#476 => &MEM[(const struct basic_stringbuf *)&ss + 8B].D.24226
  _217 = MEM[(char_type * *)&ss + 40B];
  # DEBUG D#7 => D#476
  # DEBUG this => D#7
  # DEBUG this => &D.64044
  # DEBUG __beg => _217
  # DEBUG __end => _214
  # DEBUG __a => NULL
  # DEBUG this => &D.64044
  # DEBUG D#470 => &D.64044._M_dataplus
  # DEBUG this => D#470
  # DEBUG __dat => &D.64044.D.11539._M_local_buf
  # DEBUG __a => D#184
  # DEBUG D#183 => D#184
  # DEBUG D#181 => D#470
  # DEBUG D#182 => D#183
  # DEBUG this => D#181
  # DEBUG __a => D#182
  # DEBUG D#180 => D#182
  # DEBUG D#179 => D#181
  # DEBUG this => D#179
  # DEBUG D.53273 => D#180
  MEM[(struct _Alloc_hider *)&D.64044]._M_p = &D.64044.D.11539._M_local_buf;
  # DEBUG this => &D.64044
  # DEBUG __beg => _217
  # DEBUG __end => _214
  # DEBUG this => &D.64044
  # DEBUG __beg => _217
  # DEBUG __end => _214
  # DEBUG this => &D.64044
  # DEBUG __beg => _217
  # DEBUG __end => _214
  # DEBUG __ptr => _217
  _256 = _214 != 0B;
  _556 = _217 == 0B;
  _141 = _256 & _556;
  if (_141 != 0)
    goto <bb 184>;
  else
    goto <bb 186>;

  <bb 116>:
  _239 = std::__cxx11::basic_string<char>::_M_create (&D.64044, &__dnew, 0);
  goto <bb 118>;

<L68>:
  goto <bb 137> (<L44>);

  <bb 118>:
  # DEBUG D#9 => &D.64044
  # DEBUG __p => _239
  # DEBUG this => D#9
  MEM[(char * *)&D.64044] = _239;
  __dnew.71_240 = __dnew;
  # DEBUG D#10 => &D.64044
  # DEBUG __capacity => __dnew.71_240
  # DEBUG this => D#10
  MEM[(size_type *)&D.64044 + 16B] = __dnew.71_240;
  # DEBUG D#2 => &D.64044
  # DEBUG this => D#2
  # DEBUG __p => _239
  # DEBUG __k1 => _217
  # DEBUG __k2 => _214
  # DEBUG __d => _239
  # DEBUG __s => _217
  # DEBUG __n => __dnew.70_238
  goto <bb 121>;

  <bb 119>:
  # DEBUG D#2 => &D.64044
  # DEBUG this => D#2
  # DEBUG __p => &D.64044.D.11539._M_local_buf
  # DEBUG __k1 => _217
  # DEBUG __k2 => _214
  # DEBUG __d => &D.64044.D.11539._M_local_buf
  # DEBUG __s => _217
  # DEBUG __n => __dnew.70_238
  if (__dnew.70_238 == 1)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  _242 = MEM[(const char_type &)_217];
  # DEBUG D#23 => _217
  # DEBUG __c1 => &D.64044.D.11539._M_local_buf
  # DEBUG __c2 => D#23
  MEM[(char_type &)&D.64044 + 16] = _242;
  goto <bb 122>;

  <bb 121>:
  # _538 = PHI <&D.64044.D.11539._M_local_buf(119), _239(118)>
  # DEBUG D#2 => &D.64044
  # DEBUG this => D#2
  # DEBUG __p => _538
  # DEBUG __k1 => _217
  # DEBUG __k2 => _214
  # DEBUG __d => _538
  # DEBUG __s => _217
  # DEBUG __n => __dnew.70_238
  # DEBUG __s1 => _538
  # DEBUG __s2 => _217
  # DEBUG __n => __dnew.70_238
  __builtin_memcpy (_538, _217, __dnew.70_238);
  pretmp_202 = __dnew;
  pretmp_246 = MEM[(char * *)&D.64044];

  <bb 122>:
  # prephitmp_219 = PHI <__dnew.70_238(120), pretmp_202(121)>
  # prephitmp_247 = PHI <&D.64044.D.11539._M_local_buf(120), pretmp_246(121)>
  # DEBUG D#896 => __dnew
  # DEBUG this => &D.64044
  # DEBUG __n => D#896
  # DEBUG D#8 => &D.64044
  # DEBUG __length => D#896
  # DEBUG this => D#8
  MEM[(size_type *)&D.64044 + 8B] = prephitmp_219;
  # DEBUG D#2 => &D.64044
  # DEBUG this => D#2
  _245 = prephitmp_247 + prephitmp_219;
  # DEBUG __c1 => _245
  # DEBUG __c2 => D#23
  MEM[(char_type &)_245] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.41213
  # DEBUG __str => &D.64044
  # DEBUG this => &D.41213
  # DEBUG __str => &D.64044
  std::__cxx11::basic_string<char>::_M_assign (&D.41213, &D.64044);

  <bb 123>:
  # DEBUG this => &D.64044
  # DEBUG this => &D.64044
  # DEBUG this => &D.64044
  _218 = MEM[(char * *)&D.64044];
  # DEBUG D#2 => &D.64044
  # DEBUG this => D#2
  # DEBUG this => &D.64044
  if (&D.64044.D.11539._M_local_buf != _218)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  # DEBUG D#197 => D.64044.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.64044
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.64044
  # DEBUG this => D#2
  # DEBUG this => &D.64044
  # DEBUG D#194 => &D.64044._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _218
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _218
  # DEBUG this => D#188
  # DEBUG D.63967 => D#189
  operator delete (_218);

  <bb 125>:
  # DEBUG D#198 => &D.64044._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.64044 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 141>;

  <bb 126>:
  # DEBUG this => &D.41213
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&ss + 8B]._M_string
  # DEBUG this => &D.41213
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&ss + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.41213, &MEM[(const struct basic_stringbuf *)&ss + 8B]._M_string);
  goto <bb 141>;

<L69>:
  goto <bb 137> (<L44>);

<L42>:
  # DEBUG this => &D.64045
  # DEBUG this => &D.64045
  # DEBUG this => &D.64045
  _220 = MEM[(char * *)&D.64045];
  # DEBUG D#2 => &D.64045
  # DEBUG this => D#2
  # DEBUG this => &D.64045
  if (&D.64045.D.11539._M_local_buf != _220)
    goto <bb 129>;
  else
    goto <bb 130>;

  <bb 129>:
  # DEBUG D#197 => D.64045.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.64045
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.64045
  # DEBUG this => D#2
  # DEBUG this => &D.64045
  # DEBUG D#194 => &D.64045._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _220
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _220
  # DEBUG this => D#188
  # DEBUG D.63948 => D#189
  operator delete (_220);

  <bb 130>:
  # DEBUG D#198 => &D.64045._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.64045 ={v} {CLOBBER};
  resx 26

<L70>:
  goto <bb 137> (<L44>);

<L43>:
  # DEBUG this => &D.64044
  # DEBUG this => &D.64044
  # DEBUG this => &D.64044
  _221 = MEM[(char * *)&D.64044];
  # DEBUG D#2 => &D.64044
  # DEBUG this => D#2
  # DEBUG this => &D.64044
  if (&D.64044.D.11539._M_local_buf != _221)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  # DEBUG D#197 => D.64044.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.64044
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.64044
  # DEBUG this => D#2
  # DEBUG this => &D.64044
  # DEBUG D#194 => &D.64044._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _221
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _221
  # DEBUG this => D#188
  # DEBUG D.63932 => D#189
  operator delete (_221);

  <bb 134>:
  # DEBUG D#198 => &D.64044._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.64044 ={v} {CLOBBER};
  resx 25

<L71>:
  goto <bb 137> (<L44>);

<L67>:

<L44>:
  # DEBUG this => &D.41213
  # DEBUG this => &D.41213
  # DEBUG this => &D.41213
  _222 = MEM[(char * *)&D.41213];
  # DEBUG D#2 => &D.41213
  # DEBUG this => D#2
  # DEBUG this => &D.41213
  if (&D.41213.D.11539._M_local_buf != _222)
    goto <bb 138>;
  else
    goto <bb 139>;

  <bb 138>:
  # DEBUG D#197 => D.41213.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.41213
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.41213
  # DEBUG this => D#2
  # DEBUG this => &D.41213
  # DEBUG D#194 => &D.41213._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _222
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _222
  # DEBUG this => D#188
  # DEBUG D.63921 => D#189
  operator delete (_222);

  <bb 139>:
  # DEBUG D#198 => &D.41213._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  resx 24

<L72>:
  goto <bb 174> (<L31>);

  <bb 141>:
  _68 = std::basic_ostream<char>::operator<< (os_1, output_100);

  <bb 142>:
  # DEBUG __out => _68
  # DEBUG __s => " -> [ "
  # DEBUG __s => " -> [ "
  std::__ostream_insert<char, std::char_traits<char> > (_68, " -> [ ", 6);
  goto <bb 144>;

<L74>:
  goto <bb 169> (<L30>);

  <bb 144>:
  # DEBUG __os => _68
  # DEBUG __str => &D.41213
  _69 = MEM[(long unsigned int *)&D.41213 + 8B];
  # DEBUG D#1 => &D.41213
  # DEBUG this => D#1
  _93 = (long int) _69;
  # DEBUG this => &D.41213
  _94 = MEM[(char * *)&D.41213];
  # DEBUG D#2 => &D.41213
  # DEBUG this => D#2
  _95 = std::__ostream_insert<char, std::char_traits<char> > (_68, _94, _93);
  goto <bb 146>;

<L75>:
  goto <bb 169> (<L30>);

  <bb 146>:
  # DEBUG __out => _95
  # DEBUG __s => "]  "
  # DEBUG __s => "]  "
  std::__ostream_insert<char, std::char_traits<char> > (_95, "]  ", 3);
  goto <bb 148>;

<L76>:
  goto <bb 169> (<L30>);

  <bb 148>:
  # DEBUG this => &D.41213
  # DEBUG this => &D.41213
  # DEBUG this => &D.41213
  _70 = MEM[(char * *)&D.41213];
  # DEBUG D#2 => &D.41213
  # DEBUG this => D#2
  # DEBUG this => &D.41213
  if (&D.41213.D.11539._M_local_buf != _70)
    goto <bb 149>;
  else
    goto <bb 150>;

  <bb 149>:
  # DEBUG D#197 => D.41213.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.41213
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.41213
  # DEBUG this => D#2
  # DEBUG this => &D.41213
  # DEBUG D#194 => &D.41213._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _70
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _70
  # DEBUG this => D#188
  # DEBUG D.56372 => D#189
  operator delete (_70);

  <bb 150>:
  # DEBUG D#198 => &D.41213._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.41213 ={v} {CLOBBER};
  pretmp_54 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_71 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 151>:
  # prephitmp_207 = PHI <prephitmp_140(102), pretmp_54(150), prephitmp_140(84)>
  # prephitmp_248 = PHI <prephitmp_65(102), pretmp_71(150), prephitmp_65(84)>
  # DEBUG this => &ss
  ss.D.24376._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&ss + 112B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &ss._M_stringbuf
  MEM[(struct basic_stringbuf *)&ss + 8B].D.24226._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#200 => &MEM[(struct basic_stringbuf *)&ss + 8B]._M_string
  # DEBUG this => D#200
  # DEBUG this => D#200
  # DEBUG this => D#200
  _75 = MEM[(char * *)&ss + 80B];
  # DEBUG D#2 => D#200
  # DEBUG this => D#2
  # DEBUG this => D#200
  if (&MEM[(const struct basic_string *)&ss + 80B].D.11539._M_local_buf != _75)
    goto <bb 152>;
  else
    goto <bb 153>;

  <bb 152>:
  # DEBUG D#197 => MEM[(struct basic_string *)D#200].D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => D#200
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => D#200
  # DEBUG this => D#2
  # DEBUG this => D#200
  # DEBUG D#194 => &MEM[(struct basic_string *)D#200]._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _75
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _75
  # DEBUG this => D#188
  # DEBUG D.64124 => D#189
  operator delete (_75);

  <bb 153>:
  # DEBUG D#198 => &MEM[(struct basic_string *)D#200]._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  MEM[(struct  &)&ss + 80] ={v} {CLOBBER};
  # DEBUG D#199 => &MEM[(struct basic_stringbuf *)&ss + 8B].D.24226
  # DEBUG this => D#199
  MEM[(struct basic_streambuf *)&ss + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&ss + 8B]._M_buf_locale);
  MEM[(struct  &)&ss + 8] ={v} {CLOBBER};
  # DEBUG this => &ss.D.24376
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _250 = MEM[(long int *)prephitmp_207 + -24B];
  iftmp.64_251 = (sizetype) _250;
  _252 = &ss.D.24376 + iftmp.64_251;
  _252->D.21051._vptr.ios_base = prephitmp_248;
  MEM[(struct  &)&ss] ={v} {CLOBBER};
  # DEBUG D#204 => &ss.D.24379
  # DEBUG this => D#204
  MEM[(struct basic_ios *)&ss + 112B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&ss + 112B].D.21051);
  ss ={v} {CLOBBER};
  output_77 = output_100 + 1;
  # DEBUG output => output_77
  # DEBUG output => output_77
  _53 = this_25(D)->D.36298._outputs;
  if (_53 <= output_77)
    goto <bb 80>;
  else
    goto <bb 154>;

  <bb 154>:
  goto <bb 82>;

  <bb 155>:
  std::__throw_bad_cast ();

  <bb 156>:
  # DEBUG this => _128
  # DEBUG __c => 10
  _265 = MEM[(const struct ctype *)_128]._M_widen_ok;
  if (_265 != 0)
    goto <bb 157>;
  else
    goto <bb 158>;

  <bb 157>:
  _268 = MEM[(const struct ctype *)_128]._M_widen[10];
  pretmp_424 = (int) _268;
  goto <bb 160>;

  <bb 158>:
  # DEBUG this => _128
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_128);
  _273 = MEM[(const struct ctype *)_128].D.18015._vptr.facet;
  _274 = MEM[(int (*__vtbl_ptr_type) () *)_273 + 48B];
  PROF_278 = [obj_type_ref] OBJ_TYPE_REF(_274;(const struct ctype)_128->6);
  if (PROF_278 == do_widen)
    goto <bb 160>;
  else
    goto <bb 159>;

  <bb 159>:
  _280 = OBJ_TYPE_REF(_274;(const struct ctype)_128->6) (_128, 10);
  pretmp_395 = (int) _280;

  <bb 160>:
  # prephitmp_208 = PHI <pretmp_424(157), 10(158), pretmp_395(159)>
  _263 = std::basic_ostream<char>::put (os_1, prephitmp_208);
  # DEBUG __os => _263
  std::basic_ostream<char>::flush (_263);
  return;

<L57>:

<L27>:
  # DEBUG this => &D.41207
  # DEBUG this => &D.41207
  # DEBUG this => &D.41207
  _79 = MEM[(char * *)&D.41207];
  # DEBUG D#2 => &D.41207
  # DEBUG this => D#2
  # DEBUG this => &D.41207
  if (&D.41207.D.11539._M_local_buf != _79)
    goto <bb 163>;
  else
    goto <bb 164>;

  <bb 163>:
  # DEBUG D#197 => D.41207.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.41207
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.41207
  # DEBUG this => D#2
  # DEBUG this => &D.41207
  # DEBUG D#194 => &D.41207._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _79
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _79
  # DEBUG this => D#188
  # DEBUG D.56394 => D#189
  operator delete (_79);

  <bb 164>:
  # DEBUG D#198 => &D.41207._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.41207 ={v} {CLOBBER};
  resx 3

<L77>:
  goto <bb 167> (<L28>);

<L47>:

<L28>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&ss);
  resx 2

<L73>:

<L30>:
  # DEBUG this => &D.41213
  # DEBUG this => &D.41213
  # DEBUG this => &D.41213
  _46 = MEM[(char * *)&D.41213];
  # DEBUG D#2 => &D.41213
  # DEBUG this => D#2
  # DEBUG this => &D.41213
  if (&D.41213.D.11539._M_local_buf != _46)
    goto <bb 170>;
  else
    goto <bb 171>;

  <bb 170>:
  # DEBUG D#197 => D.41213.D.11539._M_allocated_capacity
  # DEBUG D#196 => D#197
  # DEBUG this => &D.41213
  # DEBUG __size => D#196
  # DEBUG D#195 => D#196
  # DEBUG D#2 => &D.41213
  # DEBUG this => D#2
  # DEBUG this => &D.41213
  # DEBUG D#194 => &D.41213._M_dataplus
  # DEBUG D#192 => D#194
  # DEBUG D#193 => D#195 + 1
  # DEBUG __p => _46
  # DEBUG __a => D#192
  # DEBUG __n => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG __p => _46
  # DEBUG this => D#188
  # DEBUG D.56409 => D#189
  operator delete (_46);

  <bb 171>:
  # DEBUG D#198 => &D.41213._M_dataplus
  # DEBUG this => D#198
  # DEBUG this => D#198
  # DEBUG this => D#198
  D.41213 ={v} {CLOBBER};
  resx 9

<L78>:
  goto <bb 174> (<L31>);

<L63>:

<L31>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&ss);
  resx 8

  <bb 175>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L79>:
  goto <bb 62> (<L38>);

  <bb 177>:
  # DEBUG __first => _151
  # DEBUG __last => _149
  # DEBUG D#466 => &__first
  # DEBUG D.56025 => D#466
  # DEBUG __first => _151
  # DEBUG __last => _149
  __last.73_159 = (long int) _149;
  __first.74_160 = (long int) _151;
  _161 = __last.73_159 - __first.74_160;
  __dnew.70_162 = (long unsigned int) _161;
  __dnew = __dnew.70_162;
  if (__dnew.70_162 > 15)
    goto <bb 31>;
  else
    goto <bb 33>;

  <bb 178>:
  # DEBUG __first => _153
  # DEBUG __last => _150
  # DEBUG D#466 => &__first
  # DEBUG D.56025 => D#466
  # DEBUG __first => _153
  # DEBUG __last => _150
  __last.73_171 = (long int) _150;
  __first.74_172 = (long int) _153;
  _173 = __last.73_171 - __first.74_172;
  __dnew.70_174 = (long unsigned int) _173;
  __dnew = __dnew.70_174;
  if (__dnew.70_174 > 15)
    goto <bb 41>;
  else
    goto <bb 44>;

  <bb 179>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L80>:
  goto <bb 62> (<L38>);

  <bb 181>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L81>:
  goto <bb 137> (<L44>);

  <bb 183>:
  # DEBUG __first => _215
  # DEBUG __last => _213
  # DEBUG D#466 => &__first
  # DEBUG D.56025 => D#466
  # DEBUG __first => _215
  # DEBUG __last => _213
  __last.73_223 = (long int) _213;
  __first.74_224 = (long int) _215;
  _225 = __last.73_223 - __first.74_224;
  __dnew.70_226 = (long unsigned int) _225;
  __dnew = __dnew.70_226;
  if (__dnew.70_226 > 15)
    goto <bb 106>;
  else
    goto <bb 108>;

  <bb 184>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L82>:
  goto <bb 137> (<L44>);

  <bb 186>:
  # DEBUG __first => _217
  # DEBUG __last => _214
  # DEBUG D#466 => &__first
  # DEBUG D.56025 => D#466
  # DEBUG __first => _217
  # DEBUG __last => _214
  __last.73_235 = (long int) _214;
  __first.74_236 = (long int) _217;
  _237 = __last.73_235 - __first.74_236;
  __dnew.70_238 = (long unsigned int) _237;
  __dnew = __dnew.70_238;
  if (__dnew.70_238 > 15)
    goto <bb 116>;
  else
    goto <bb 119>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE, funcdef_no=2008, decl_uid=36688, cgraph_uid=678, symbol_order=679)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#105 => __x_68
  # DEBUG __x => D#105
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#106 => __x_68
  # DEBUG __x => D#106
  # DEBUG __y => NULL
  # DEBUG D#399 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#397 => D#399
  # DEBUG D#396 => D#399
  # DEBUG D#388 => D#396
  # DEBUG D#389 => __x_68
  # DEBUG this => D#388
  # DEBUG __p => D#389
  # DEBUG D#387 => D#388
  # DEBUG D#386 => D#389
  # DEBUG D#385 => D#389
  # DEBUG this => D#385
  # DEBUG D#384 => &D#386->_M_value_field
  # DEBUG __r => D#384
  # DEBUG D#383 => D#387
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG D#307 => D#384
  # DEBUG this => D#306
  # DEBUG __p => D#307
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#397
  # DEBUG __p => __x_68
  # DEBUG this => D#398
  # DEBUG D#395 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#394
  # DEBUG __n => D#395
  # DEBUG D#393 => D#395
  # DEBUG D#392 => D#394
  # DEBUG D#390 => D#392
  # DEBUG D#391 => D#393
  # DEBUG __p => __x_68
  # DEBUG this => D#390
  # DEBUG D.54999 => D#391
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#105 => __x_72
  # DEBUG __x => D#105
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#106 => __x_72
  # DEBUG __x => D#106
  # DEBUG __y => NULL
  # DEBUG D#399 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#397 => D#399
  # DEBUG D#396 => D#399
  # DEBUG D#388 => D#396
  # DEBUG D#389 => __x_72
  # DEBUG this => D#388
  # DEBUG __p => D#389
  # DEBUG D#387 => D#388
  # DEBUG D#386 => D#389
  # DEBUG D#385 => D#389
  # DEBUG this => D#385
  # DEBUG D#384 => &D#386->_M_value_field
  # DEBUG __r => D#384
  # DEBUG D#383 => D#387
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG D#307 => D#384
  # DEBUG this => D#306
  # DEBUG __p => D#307
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#397
  # DEBUG __p => __x_72
  # DEBUG this => D#398
  # DEBUG D#395 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#394
  # DEBUG __n => D#395
  # DEBUG D#393 => D#395
  # DEBUG D#392 => D#394
  # DEBUG D#390 => D#392
  # DEBUG D#391 => D#393
  # DEBUG __p => __x_72
  # DEBUG this => D#390
  # DEBUG D.64297 => D#391
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#105 => __x_71
  # DEBUG __x => D#105
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#106 => __x_71
  # DEBUG __x => D#106
  # DEBUG __y => NULL
  # DEBUG D#399 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#397 => D#399
  # DEBUG D#396 => D#399
  # DEBUG D#388 => D#396
  # DEBUG D#389 => __x_71
  # DEBUG this => D#388
  # DEBUG __p => D#389
  # DEBUG D#387 => D#388
  # DEBUG D#386 => D#389
  # DEBUG D#385 => D#389
  # DEBUG this => D#385
  # DEBUG D#384 => &D#386->_M_value_field
  # DEBUG __r => D#384
  # DEBUG D#383 => D#387
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG D#307 => D#384
  # DEBUG this => D#306
  # DEBUG __p => D#307
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#397
  # DEBUG __p => __x_71
  # DEBUG this => D#398
  # DEBUG D#395 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#394
  # DEBUG __n => D#395
  # DEBUG D#393 => D#395
  # DEBUG D#392 => D#394
  # DEBUG D#390 => D#392
  # DEBUG D#391 => D#393
  # DEBUG __p => __x_71
  # DEBUG this => D#390
  # DEBUG D.64310 => D#391
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#105 => __x_77
  # DEBUG __x => D#105
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#106 => __x_77
  # DEBUG __x => D#106
  # DEBUG __y => NULL
  # DEBUG D#399 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#397 => D#399
  # DEBUG D#396 => D#399
  # DEBUG D#388 => D#396
  # DEBUG D#389 => __x_77
  # DEBUG this => D#388
  # DEBUG __p => D#389
  # DEBUG D#387 => D#388
  # DEBUG D#386 => D#389
  # DEBUG D#385 => D#389
  # DEBUG this => D#385
  # DEBUG D#384 => &D#386->_M_value_field
  # DEBUG __r => D#384
  # DEBUG D#383 => D#387
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG D#307 => D#384
  # DEBUG this => D#306
  # DEBUG __p => D#307
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#397
  # DEBUG __p => __x_77
  # DEBUG this => D#398
  # DEBUG D#395 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#394
  # DEBUG __n => D#395
  # DEBUG D#393 => D#395
  # DEBUG D#392 => D#394
  # DEBUG D#390 => D#392
  # DEBUG D#391 => D#393
  # DEBUG __p => __x_77
  # DEBUG this => D#390
  # DEBUG D.64323 => D#391
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#105 => __x_80
  # DEBUG __x => D#105
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#106 => __x_80
  # DEBUG __x => D#106
  # DEBUG __y => NULL
  # DEBUG D#399 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#397 => D#399
  # DEBUG D#396 => D#399
  # DEBUG D#388 => D#396
  # DEBUG D#389 => __x_80
  # DEBUG this => D#388
  # DEBUG __p => D#389
  # DEBUG D#387 => D#388
  # DEBUG D#386 => D#389
  # DEBUG D#385 => D#389
  # DEBUG this => D#385
  # DEBUG D#384 => &D#386->_M_value_field
  # DEBUG __r => D#384
  # DEBUG D#383 => D#387
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG D#307 => D#384
  # DEBUG this => D#306
  # DEBUG __p => D#307
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#397
  # DEBUG __p => __x_80
  # DEBUG this => D#398
  # DEBUG D#395 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#394
  # DEBUG __n => D#395
  # DEBUG D#393 => D#395
  # DEBUG D#392 => D#394
  # DEBUG D#390 => D#392
  # DEBUG D#391 => D#393
  # DEBUG __p => __x_80
  # DEBUG this => D#390
  # DEBUG D.64336 => D#391
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#105 => __x_83
  # DEBUG __x => D#105
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#106 => __x_83
  # DEBUG __x => D#106
  # DEBUG __y => NULL
  # DEBUG D#399 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#397 => D#399
  # DEBUG D#396 => D#399
  # DEBUG D#388 => D#396
  # DEBUG D#389 => __x_83
  # DEBUG this => D#388
  # DEBUG __p => D#389
  # DEBUG D#387 => D#388
  # DEBUG D#386 => D#389
  # DEBUG D#385 => D#389
  # DEBUG this => D#385
  # DEBUG D#384 => &D#386->_M_value_field
  # DEBUG __r => D#384
  # DEBUG D#383 => D#387
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG D#307 => D#384
  # DEBUG this => D#306
  # DEBUG __p => D#307
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#397
  # DEBUG __p => __x_83
  # DEBUG this => D#398
  # DEBUG D#395 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#394
  # DEBUG __n => D#395
  # DEBUG D#393 => D#395
  # DEBUG D#392 => D#394
  # DEBUG D#390 => D#392
  # DEBUG D#391 => D#393
  # DEBUG __p => __x_83
  # DEBUG this => D#390
  # DEBUG D.64349 => D#391
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#105 => __x_86
  # DEBUG __x => D#105
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#106 => __x_86
  # DEBUG __x => D#106
  # DEBUG __y => NULL
  # DEBUG D#399 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#397 => D#399
  # DEBUG D#396 => D#399
  # DEBUG D#388 => D#396
  # DEBUG D#389 => __x_86
  # DEBUG this => D#388
  # DEBUG __p => D#389
  # DEBUG D#387 => D#388
  # DEBUG D#386 => D#389
  # DEBUG D#385 => D#389
  # DEBUG this => D#385
  # DEBUG D#384 => &D#386->_M_value_field
  # DEBUG __r => D#384
  # DEBUG D#383 => D#387
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG D#307 => D#384
  # DEBUG this => D#306
  # DEBUG __p => D#307
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#397
  # DEBUG __p => __x_86
  # DEBUG this => D#398
  # DEBUG D#395 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#394
  # DEBUG __n => D#395
  # DEBUG D#393 => D#395
  # DEBUG D#392 => D#394
  # DEBUG D#390 => D#392
  # DEBUG D#391 => D#393
  # DEBUG __p => __x_86
  # DEBUG this => D#390
  # DEBUG D.64362 => D#391
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#105 => __x_89
  # DEBUG __x => D#105
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#106 => __x_89
  # DEBUG __x => D#106
  # DEBUG __y => NULL
  # DEBUG D#399 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#397 => D#399
  # DEBUG D#396 => D#399
  # DEBUG D#388 => D#396
  # DEBUG D#389 => __x_89
  # DEBUG this => D#388
  # DEBUG __p => D#389
  # DEBUG D#387 => D#388
  # DEBUG D#386 => D#389
  # DEBUG D#385 => D#389
  # DEBUG this => D#385
  # DEBUG D#384 => &D#386->_M_value_field
  # DEBUG __r => D#384
  # DEBUG D#383 => D#387
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG D#307 => D#384
  # DEBUG this => D#306
  # DEBUG __p => D#307
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#397
  # DEBUG __p => __x_89
  # DEBUG this => D#398
  # DEBUG D#395 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#394
  # DEBUG __n => D#395
  # DEBUG D#393 => D#395
  # DEBUG D#392 => D#394
  # DEBUG D#390 => D#392
  # DEBUG D#391 => D#393
  # DEBUG __p => __x_89
  # DEBUG this => D#390
  # DEBUG D.64375 => D#391
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#105 => __x_92
  # DEBUG __x => D#105
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#106 => __x_92
  # DEBUG __x => D#106
  # DEBUG __y => NULL
  # DEBUG D#399 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#397 => D#399
  # DEBUG D#396 => D#399
  # DEBUG D#388 => D#396
  # DEBUG D#389 => __x_92
  # DEBUG this => D#388
  # DEBUG __p => D#389
  # DEBUG D#387 => D#388
  # DEBUG D#386 => D#389
  # DEBUG D#385 => D#389
  # DEBUG this => D#385
  # DEBUG D#384 => &D#386->_M_value_field
  # DEBUG __r => D#384
  # DEBUG D#383 => D#387
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG D#307 => D#384
  # DEBUG this => D#306
  # DEBUG __p => D#307
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#397
  # DEBUG __p => __x_92
  # DEBUG this => D#398
  # DEBUG D#395 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#394
  # DEBUG __n => D#395
  # DEBUG D#393 => D#395
  # DEBUG D#392 => D#394
  # DEBUG D#390 => D#392
  # DEBUG D#391 => D#393
  # DEBUG __p => __x_92
  # DEBUG this => D#390
  # DEBUG D.64388 => D#391
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*] (_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E, funcdef_no=2027, decl_uid=41822, cgraph_uid=697, symbol_order=698)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#107 => __x_68
  # DEBUG __x => D#107
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#108 => __x_68
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_68
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_68
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_68
  # DEBUG this => D#402
  # DEBUG D.57808 => D#403
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#107 => __x_72
  # DEBUG __x => D#107
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#108 => __x_72
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_72
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_72
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_72
  # DEBUG this => D#402
  # DEBUG D.64420 => D#403
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#107 => __x_71
  # DEBUG __x => D#107
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#108 => __x_71
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_71
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_71
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_71
  # DEBUG this => D#402
  # DEBUG D.64433 => D#403
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#107 => __x_77
  # DEBUG __x => D#107
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#108 => __x_77
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_77
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_77
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_77
  # DEBUG this => D#402
  # DEBUG D.64446 => D#403
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#107 => __x_80
  # DEBUG __x => D#107
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#108 => __x_80
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_80
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_80
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_80
  # DEBUG this => D#402
  # DEBUG D.64459 => D#403
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#107 => __x_83
  # DEBUG __x => D#107
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#108 => __x_83
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_83
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_83
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_83
  # DEBUG this => D#402
  # DEBUG D.64472 => D#403
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#107 => __x_86
  # DEBUG __x => D#107
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#108 => __x_86
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_86
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_86
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_86
  # DEBUG this => D#402
  # DEBUG D.64485 => D#403
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#107 => __x_89
  # DEBUG __x => D#107
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#108 => __x_89
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_89
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_89
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_89
  # DEBUG this => D#402
  # DEBUG D.64498 => D#403
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#107 => __x_92
  # DEBUG __x => D#107
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#108 => __x_92
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_92
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_92
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_92
  # DEBUG this => D#402
  # DEBUG D.64511 => D#403
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::map<int, Allocator::sRequest>; _Alloc = std::allocator<std::map<int, Allocator::sRequest> >] (_ZNSt6vectorISt3mapIiN9Allocator8sRequestESt4lessIiESaISt4pairIKiS2_EEESaIS9_EED2Ev, funcdef_no=1853, decl_uid=37890, cgraph_uid=523, symbol_order=524)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::map<int, Allocator::sRequest>; _Alloc = std::allocator<std::map<int, Allocator::sRequest> >] (struct vector * const this)
{
  struct _Rb_tree_node * __x;
  struct map * __first;
  struct map * _4;
  struct _Rep_type * _8;
  struct map * pretmp_14;
  struct map * prephitmp_15;
  struct _Rb_tree_node_base * _25;

  <bb 2>:
  # DEBUG D#554 => &this_1(D)->D.37893
  # DEBUG this => D#554
  _4 = this_1(D)->D.37893._M_impl._M_finish;
  __first_5 = this_1(D)->D.37893._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_29 = PHI <__first_5(3), __first_10(6)>
  # DEBUG __first => __first_29
  # DEBUG __r => __first_29
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _8 = &__first_29->_M_t;
  # DEBUG this => _8
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__first_29 + 16B];
  # DEBUG D#91 => _8
  # DEBUG this => D#91
  # DEBUG this => _8
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_8]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__first_29] ={v} {CLOBBER};
  __first_10 = __first_29 + 48;
  # DEBUG __first => __first_10
  # DEBUG __first => __first_10
  if (_4 == __first_10)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  <bb 7>:

  <bb 8>:
  # __x_36 = PHI <__x_9(7), __x_26(9)>
  # DEBUG __x => __x_36
  _25 = MEM[(struct _Rb_tree_node_base * *)__x_36 + 24B];
  # DEBUG D#107 => __x_36
  # DEBUG __x => D#107
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_8, _25);
  __x_26 = MEM[(struct _Rb_tree_node_base * *)__x_36 + 16B];
  # DEBUG D#108 => __x_36
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => _8
  # DEBUG __p => __x_36
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_36
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_36
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_36
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_36
  # DEBUG this => D#402
  # DEBUG D.64527 => D#403
  operator delete (__x_36);
  # DEBUG __x => __x_26
  # DEBUG __x => __x_26
  if (__x_26 == 0B)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  pretmp_14 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 11>:
  # prephitmp_15 = PHI <pretmp_14(10), __first_5(2)>
  # DEBUG D#555 => &this_1(D)->D.37893
  # DEBUG this => D#555
  # DEBUG D#326 => D#555->_M_impl._M_end_of_storage
  # DEBUG D#325 => (long int) D#326
  # DEBUG D#909 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#324 => (long int) D#909
  # DEBUG D#323 => D#325 - D#324
  # DEBUG D#322 => D#323 /[ex] 48
  # DEBUG D#319 => D#555
  # DEBUG D#320 => (long unsigned int) D#322
  # DEBUG __p => D#909
  # DEBUG this => D#319
  # DEBUG __n => D#320
  # DEBUG D#318 => D#320
  # DEBUG D#317 => D#319
  if (prephitmp_15 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#316 => &D#317->_M_impl
  # DEBUG D#314 => D#316
  # DEBUG D#315 => D#318
  # DEBUG __p => D#909
  # DEBUG __a => D#314
  # DEBUG __n => D#315
  # DEBUG D#313 => D#315
  # DEBUG D#312 => D#314
  # DEBUG D#310 => D#312
  # DEBUG D#311 => D#313
  # DEBUG __p => D#909
  # DEBUG this => D#310
  # DEBUG D.57932 => D#311
  operator delete (prephitmp_15);

  <bb 13>:
  # DEBUG D#321 => &D#555->_M_impl
  # DEBUG this => D#321
  # DEBUG this => D#321
  # DEBUG this => D#321
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi, funcdef_no=2043, decl_uid=36754, cgraph_uid=713, symbol_order=714)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>] (struct _Rb_tree * const this, const int & __v)
{
  struct _Rb_tree_node_base * SR.1396;
  struct _Rb_tree_node_base * SR.1395;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  bool __insert_left;
  struct iterator D.64592;
  struct pair D.64565;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct _Rb_tree_node_base * SR.1066;
  struct _Rb_tree_node_base * __res$second;
  struct _Rb_tree_node_base * __res$first;
  struct pair __res;
  struct iterator D.44674;
  struct pair D.50241;
  const int pretmp_15;
  struct _Rb_tree_node_base * _18;
  int prephitmp_20;
  const int _22;
  struct _Rb_tree_node_base * _24;
  struct _Rb_tree_node_base * _25;
  const int pretmp_26;
  struct _Rb_tree_node_base * _27;
  struct _Rb_tree_node_base * const _33;
  const int _36;
  const int _37;
  struct _Rb_tree_node * _38;
  int _40;
  long unsigned int _44;
  long unsigned int _45;
  const int prephitmp_47;
  const int _48;
  const int prephitmp_49;
  const int pretmp_51;
  int pretmp_72;

  <bb 2>:
  # DEBUG D#127 => &D.44617
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#127
  # DEBUG this => this_4(D)
  # DEBUG __k => __v_3(D)
  _18 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 16B];
  # DEBUG D#90 => this_4(D)
  # DEBUG this => D#90
  # DEBUG __x => NULL
  # DEBUG this => this_4(D)
  __j$_M_node_19 = &this_4(D)->_M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_19
  # DEBUG __x => _18
  if (_18 == 0B)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_51 = *__v_3(D);
  goto <bb 6>;

  <bb 4>:
  # _33 = PHI <_24(7), _25(8)>
  # DEBUG __comp => D#912 < _22
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => _33
  if (_33 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __j$_M_node_59 = PHI <_18(3), _33(5)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_59
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG this => __j$_M_node_59
  # DEBUG D#442 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_59]._M_value_field
  # DEBUG __r => D#442
  # DEBUG __x => D#442
  # DEBUG this => D#127
  # DEBUG D#446 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#446
  # DEBUG D#912 => *__v_3(D)
  # DEBUG D#96 => __v_3(D)
  _22 = MEM[(const int &)__j$_M_node_59 + 32];
  # DEBUG D#97 => D#442
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  # DEBUG __comp => NULL
  if (_22 > pretmp_51)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _24 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 16B];
  # DEBUG D#106 => __j$_M_node_59
  # DEBUG __x => D#106
  goto <bb 4>;

  <bb 8>:
  _25 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 24B];
  # DEBUG D#105 => __j$_M_node_59
  # DEBUG __x => D#105
  goto <bb 4>;

  <bb 9>:
  # _48 = PHI <_22(4)>
  # __j$_M_node_23 = PHI <__j$_M_node_59(4)>

  <bb 19>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_23
  # DEBUG __j$_M_node => __j$_M_node_23
  if (_48 > pretmp_51)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  # __j$_M_node_73 = PHI <__j$_M_node_23(19), __j$_M_node_19(2)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_73
  # DEBUG __j$_M_node => __j$_M_node_73
  _27 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 24B];
  # DEBUG D#175 => this_4(D)
  # DEBUG this => D#175
  # DEBUG this => NULL
  # DEBUG __x => _27
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_27 == __j$_M_node_73)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 11>:
  # DEBUG this => &__j
  __j$_M_node_29 = std::_Rb_tree_decrement (__j$_M_node_73);
  # DEBUG __j$_M_node => __j$_M_node_29
  pretmp_15 = *__v_3(D);
  pretmp_26 = MEM[(const int &)__j$_M_node_29 + 32];

  <bb 12>:
  # __j$_M_node_30 = PHI <__j$_M_node_23(19), __j$_M_node_29(11)>
  # __j$_M_node_63 = PHI <__j$_M_node_23(19), __j$_M_node_73(11)>
  # prephitmp_47 = PHI <pretmp_51(19), pretmp_15(11)>
  # prephitmp_49 = PHI <_48(19), pretmp_26(11)>
  # DEBUG __j$_M_node => __j$_M_node_30
  # DEBUG __x => __j$_M_node_30
  # DEBUG __x => __j$_M_node_30
  # DEBUG this => __j$_M_node_30
  # DEBUG D#443 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_30]._M_value_field
  # DEBUG __r => D#443
  # DEBUG __x => D#443
  # DEBUG this => D#127
  # DEBUG D#445 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#445
  # DEBUG D#96 => D#443
  # DEBUG D#97 => __v_3(D)
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (prephitmp_47 > prephitmp_49)
    goto <bb 13>;
  else
    goto <bb 17>;

  <bb 13>:
  # __res$second_52 = PHI <_27(10), __j$_M_node_63(12)>
  # DEBUG D#444 => {CLOBBER}
  # DEBUG __j$_M_node => D#444
  # DEBUG __res => 0B
  # DEBUG __res$8 => __res$second_52
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __res$second_52
  if (__res$second_52 != 0B)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  # DEBUG this => &__an
  # DEBUG __t => this_4(D)
  # DEBUG __an$_M_t => this_4(D)
  # DEBUG D#650 => &__an
  # DEBUG this => this_4(D)
  # DEBUG __x => 0B
  # DEBUG __p => __res$second_52
  # DEBUG __v => __v_3(D)
  # DEBUG __node_gen => D#650
  # DEBUG D#649 => D#650
  # DEBUG this => this_4(D)
  if (__j$_M_node_19 == __res$second_52)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __res$second_52
  # DEBUG __x => __res$second_52
  # DEBUG this => __res$second_52
  # DEBUG D#647 => &MEM[(const struct _Rb_tree_node *)__res$second_52]._M_value_field
  # DEBUG __r => D#647
  # DEBUG __x => D#647
  # DEBUG this => D#127
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#127
  # DEBUG D#648 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#648
  _36 = *__v_3(D);
  _37 = MEM[(const int &)__res$second_52 + 32];
  # DEBUG D#97 => D#647
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  __insert_left_35 = _36 < _37;
  pretmp_72 = (int) __insert_left_35;

  <bb 16>:
  # prephitmp_20 = PHI <pretmp_72(15), 1(14)>
  # DEBUG __insert_left => NULL
  # DEBUG D#646 => D#649
  # DEBUG __arg => __v_3(D)
  # DEBUG this => D#646
  # DEBUG D#645 => D#646
  # DEBUG D#644 => D#645->_M_t
  # DEBUG D#643 => D#644
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#643
  # DEBUG D#642 => D#643
  # DEBUG D#641 => D#643
  # DEBUG D#640 => D#641
  # DEBUG this => D#640
  # DEBUG D#639 => D#640
  # DEBUG this => D#639
  # DEBUG __n => 1
  # DEBUG __a => D#638
  # DEBUG D#637 => D#638
  # DEBUG D#635 => D#637
  # DEBUG D#636 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#635
  # DEBUG D.64582 => D#636
  # DEBUG D#634 => D#635
  # DEBUG D#633 => D#634
  # DEBUG this => D#633
  _38 = operator new (40);
  # DEBUG __tmp => _38
  # DEBUG D#579 => D#642
  # DEBUG __node => _38
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#579
  # DEBUG D#578 => D#579
  # DEBUG this => _38
  # DEBUG D#911 => &_38->_M_value_field
  # DEBUG __r => D#911
  # DEBUG D#383 => D#578
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#911
  # DEBUG __val => __v_3(D)
  # DEBUG this => D#577
  # DEBUG D#24 => 4
  # DEBUG __p => D#911
  # DEBUG D.58238 => D#24
  _40 = *__v_3(D);
  MEM[(int *)_38 + 32B] = _40;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _38
  std::_Rb_tree_insert_and_rebalance (prephitmp_20, _38, __res$second_52, __j$_M_node_19);
  _44 = this_4(D)->_M_impl._M_node_count;
  _45 = _44 + 1;
  this_4(D)->_M_impl._M_node_count = _45;
  # DEBUG this => NULL
  # DEBUG __x => _38
  # DEBUG this => &D.44676
  # DEBUG __a => &D.44674
  # DEBUG __b => &D.44675
  MEM[(struct pair *)&D.50241] = _38;
  MEM[(struct pair *)&D.50241 + 8B] = 1;
  D.44674 ={v} {CLOBBER};
  goto <bb 18>;

  <bb 17>:
  # __res$first_74 = PHI <0B(13), __j$_M_node_30(12)>

  <bb 21>:
  # DEBUG D#444 => {CLOBBER}
  # DEBUG __j$_M_node => D#444
  # DEBUG __res => __res$first_74
  # DEBUG __res$8 => NULL
  # DEBUG __res$first => __res$first_74
  # DEBUG __res$second => NULL
  # DEBUG this => &D.44677
  # DEBUG __x => __res$first_74
  # DEBUG this => &D.44679
  # DEBUG __a => &D.44677
  # DEBUG __b => &D.44678
  MEM[(struct pair *)&D.50241] = __res$first_74;
  MEM[(struct pair *)&D.50241 + 8B] = 0;

  <bb 18>:

  <bb 20>:
  # DEBUG D#653 => {CLOBBER}
  # DEBUG __res$first => D#653
  # DEBUG D#654 => {CLOBBER}
  # DEBUG __res$second => D#654
  return D.50241;

}



;; Function virtual void SparseAllocator::AddRequest(int, int, int, int, int) (_ZN15SparseAllocator10AddRequestEiiiii, funcdef_no=1776, decl_uid=37919, cgraph_uid=446, symbol_order=447)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void SparseAllocator::AddRequest(int, int, int, int, int) (struct SparseAllocator * const this, int in, int out, int label, int in_pri, int out_pri)
{
  struct value_type D.64665;
  struct _Rb_tree_node * __y;
  struct iterator D.64664;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.1191;
  struct mapped_type & D.64661;
  struct value_type D.64638;
  struct _Rb_tree_node * __y;
  struct iterator D.64637;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.1191;
  struct mapped_type & D.64634;
  struct pair __p;
  struct pair __p;
  const struct _Rb_tree_node * __y;
  const struct _Rb_tree_node * __y;
  static const char __PRETTY_FUNCTION__[66] = "virtual void SparseAllocator::AddRequest(int, int, int, int, int)";
  int out.102_4;
  int in.103_5;
  bool _12;
  long unsigned int _13;
  const int _14;
  long unsigned int _17;
  size_type _21;
  const size_type _22;
  const int _25;
  int in.103_29;
  long unsigned int _30;
  int prephitmp_34;
  long unsigned int _37;
  int pretmp_41;
  struct map * _44;
  struct map * _45;
  struct map * _47;
  struct map * _48;
  size_type iftmp.106_50;
  long unsigned int _53;
  struct map & _54;
  const int _58;
  const int _62;
  long unsigned int _67;
  struct map & _68;
  const size_type _69;
  struct _Rep_type * _70;
  struct _Rep_type * _73;
  long unsigned int _74;
  struct map & _75;
  long unsigned int _76;
  struct map & _77;
  int _87;
  int _88;
  const int _91;
  int prephitmp_92;
  const int _97;
  struct _Rep_type * _100;
  const int _108;
  struct map * pretmp_109;
  const int _114;
  int pretmp_116;
  struct _Rep_type * _117;
  struct map * prephitmp_142;
  int pretmp_152;
  struct map * pretmp_153;
  long unsigned int pretmp_154;
  int prephitmp_156;
  int pretmp_163;
  int prephitmp_165;
  long unsigned int pretmp_166;

  <bb 2>:
  out.102_4 = out;
  in.103_5 = in;
  # DEBUG D#913 => &this_6(D)->D.37974
  # DEBUG this => D#913
  # DEBUG in => in.103_5
  # DEBUG out => out.102_4
  # DEBUG label => label_8(D)
  # DEBUG in_pri => in_pri_9(D)
  # DEBUG out_pri => out_pri_10(D)
  # DEBUG D#838 s=> out_pri
  # DEBUG D#837 s=> in_pri
  if (in.103_5 < 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _87 = MEM[(struct Allocator *)this_6(D)]._inputs;
  if (in.103_5 >= _87)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  __assert_fail ("( in >= 0 ) && ( in < _inputs )", "allocators/allocator.cpp", 71, &__PRETTY_FUNCTION__);

  <bb 5>:
  if (out.102_4 < 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  _88 = MEM[(struct Allocator *)this_6(D)]._outputs;
  if (out.102_4 >= _88)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("( out >= 0 ) && ( out < _outputs )", "allocators/allocator.cpp", 72, &__PRETTY_FUNCTION__);

  <bb 8>:
  if (label_8(D) < 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#11 => D#913
  # DEBUG D#12 => in.103_5
  # DEBUG D#13 => out.102_4
  # DEBUG D#14 => label_8(D)
  # DEBUG D#15 => D#837
  # DEBUG D#16 => D#838
  Allocator::_ZN9Allocator10AddRequestEiiiii.part.10 ();

  <bb 10>:
  MEM[(struct Allocator *)this_6(D)]._dirty = 1;
  _13 = (long unsigned int) in.103_5;
  # DEBUG D#758 => &this_6(D)->_in_req
  _44 = MEM[(struct map * *)this_6(D) + 256B];
  # DEBUG D#85 => D#758
  # DEBUG __n => _13
  # DEBUG this => D#85
  _53 = _13 * 48;
  _54 = _44 + _53;
  # DEBUG this => NULL
  # DEBUG __x => &out
  # DEBUG this => D#344
  __y_39 = &MEM[(const struct _Rb_tree *)_54]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_39
  # DEBUG this => D#345
  # DEBUG __k => &out
  # DEBUG this => D#345
  __y_32 = MEM[(struct _Rb_tree_node_base * *)_54 + 16B];
  # DEBUG D#110 => D#345
  # DEBUG this => D#110
  # DEBUG D#335 => D#345
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &out
  # DEBUG __y => __y_39
  # DEBUG __x => __y_32
  if (__y_32 == 0B)
    goto <bb 19>;
  else
    goto <bb 13>;

  <bb 11>:
  # __y_105 = PHI <__y_19(16), __y_20(15)>
  # __y_104 = PHI <__y_159(16), __y_7(15)>
  # DEBUG __y => __y_104
  # DEBUG __x => __y_105
  if (__y_105 == 0B)
    goto <bb 17>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 14>;

  <bb 13>:

  <bb 14>:
  # __y_159 = PHI <__y_39(13), __y_104(12)>
  # __y_7 = PHI <__y_32(13), __y_105(12)>
  # DEBUG __y => __y_159
  # DEBUG __x => __y_7
  # DEBUG __x => __y_7
  # DEBUG __x => __y_7
  # DEBUG this => __y_7
  # DEBUG D#331 => &__y_7->_M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#332 => &MEM[(const struct pair &)__y_7 + 32].first
  # DEBUG D#333 => &D#334->_M_impl._M_key_compare
  # DEBUG D#95 => D#333
  _25 = MEM[(const int &)__y_7 + 32];
  # DEBUG D#96 => D#332
  # DEBUG D#97 => &out
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (out.102_4 <= _25)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG __y => __y_7
  __y_20 = MEM[(struct _Rb_tree_node_base * *)__y_7 + 16B];
  # DEBUG D#171 => __y_7
  # DEBUG __x => D#171
  # DEBUG __x => NULL
  goto <bb 11>;

  <bb 16>:
  __y_19 = MEM[(struct _Rb_tree_node_base * *)__y_7 + 24B];
  # DEBUG D#172 => __y_7
  # DEBUG __x => D#172
  # DEBUG __x => NULL
  goto <bb 11>;

  <bb 17>:
  # __y_157 = PHI <__y_104(11)>

  <bb 59>:
  # DEBUG this => NULL
  # DEBUG __x => __y_157
  # DEBUG __j$_M_node => __y_157
  # DEBUG this => D#345
  # DEBUG this => NULL
  # DEBUG __x => __y_39
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_39 == __y_157)
    goto <bb 21>;
  else
    goto <bb 18>;

  <bb 18>:
  # DEBUG __x => __y_157
  # DEBUG __x => __y_157
  # DEBUG this => __y_157
  # DEBUG D#174 => &__y_157->_M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#336 => &MEM[(const struct pair &)__y_157 + 32].first
  # DEBUG D#338 => &MEM[(const struct _Rb_tree *)D#345]._M_impl._M_key_compare
  # DEBUG D#95 => D#338
  # DEBUG D#96 => &out
  _14 = MEM[(const int &)__y_157 + 32];
  # DEBUG D#97 => D#336
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  _12 = out.102_4 >= _14;
  _21 = (size_type) _12;

  <bb 19>:
  # iftmp.106_50 = PHI <_21(18), 0(10)>
  if (iftmp.106_50 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __assert_fail ("_in_req[in].count(out) == 0", "allocators/allocator.cpp", 321, &__PRETTY_FUNCTION__);

  <bb 21>:
  _17 = (long unsigned int) out.102_4;
  # DEBUG D#759 => &this_6(D)->_out_req
  _45 = MEM[(struct map * *)this_6(D) + 280B];
  # DEBUG D#85 => D#759
  # DEBUG __n => _17
  # DEBUG this => D#85
  _67 = _17 * 48;
  _68 = _45 + _67;
  # DEBUG this => NULL
  # DEBUG __x => &in
  # DEBUG this => D#344
  __y_55 = &MEM[(const struct _Rb_tree *)_68]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_55
  # DEBUG this => D#345
  # DEBUG __k => &in
  # DEBUG this => D#345
  __y_56 = MEM[(struct _Rb_tree_node_base * *)_68 + 16B];
  # DEBUG D#110 => D#345
  # DEBUG this => D#110
  # DEBUG D#335 => D#345
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &in
  # DEBUG __y => __y_55
  # DEBUG __x => __y_56
  if (__y_56 == 0B)
    goto <bb 31>;
  else
    goto <bb 24>;

  <bb 22>:
  # __y_122 = PHI <__y_60(27), __y_59(26)>
  # __y_121 = PHI <__y_103(27), __y_120(26)>
  # DEBUG __y => __y_121
  # DEBUG __x => __y_122
  if (__y_122 == 0B)
    goto <bb 28>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 25>;

  <bb 24>:

  <bb 25>:
  # __y_120 = PHI <__y_56(24), __y_122(23)>
  # __y_103 = PHI <__y_55(24), __y_121(23)>
  # DEBUG __y => __y_103
  # DEBUG __x => __y_120
  # DEBUG __x => __y_120
  # DEBUG __x => __y_120
  # DEBUG this => __y_120
  # DEBUG D#331 => &__y_120->_M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#332 => &MEM[(const struct pair &)__y_120 + 32].first
  # DEBUG D#333 => &D#334->_M_impl._M_key_compare
  # DEBUG D#95 => D#333
  _58 = MEM[(const int &)__y_120 + 32];
  # DEBUG D#96 => D#332
  # DEBUG D#97 => &in
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (in.103_5 <= _58)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG __y => __y_120
  __y_59 = MEM[(struct _Rb_tree_node_base * *)__y_120 + 16B];
  # DEBUG D#171 => __y_120
  # DEBUG __x => D#171
  # DEBUG __x => NULL
  goto <bb 22>;

  <bb 27>:
  __y_60 = MEM[(struct _Rb_tree_node_base * *)__y_120 + 24B];
  # DEBUG D#172 => __y_120
  # DEBUG __x => D#172
  # DEBUG __x => NULL
  goto <bb 22>;

  <bb 28>:
  # __y_155 = PHI <__y_121(22)>

  <bb 58>:
  # DEBUG this => NULL
  # DEBUG __x => __y_155
  # DEBUG __j$_M_node => __y_155
  # DEBUG this => D#345
  # DEBUG this => NULL
  # DEBUG __x => __y_55
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_55 == __y_155)
    goto <bb 31>;
  else
    goto <bb 29>;

  <bb 29>:
  # DEBUG __x => __y_155
  # DEBUG __x => __y_155
  # DEBUG this => __y_155
  # DEBUG D#174 => &__y_155->_M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#336 => &MEM[(const struct pair &)__y_155 + 32].first
  # DEBUG D#338 => &MEM[(const struct _Rb_tree *)D#345]._M_impl._M_key_compare
  # DEBUG D#95 => D#338
  # DEBUG D#96 => &in
  _62 = MEM[(const int &)__y_155 + 32];
  # DEBUG D#97 => D#336
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (in.103_5 < _62)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  __assert_fail ("_out_req[out].count(in) == 0", "allocators/allocator.cpp", 322, &__PRETTY_FUNCTION__);

  <bb 31>:
  # DEBUG D#760 => &this_6(D)->_in_req
  # DEBUG D#85 => D#760
  # DEBUG __n => _13
  # DEBUG this => D#85
  # DEBUG this => NULL
  _69 = MEM[(long unsigned int *)_54 + 40B];
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  if (_69 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # DEBUG D#761 => &this_6(D)->_in_occ
  # DEBUG this => D#761
  # DEBUG __x => &in
  _70 = &MEM[(struct set *)this_6(D) + 160B]._M_t;
  __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique (_70, &in);
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#779 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#778 => MEM[(const bool &)&__p + 8]
  # DEBUG D#777 => VIEW_CONVERT_EXPR<unsigned char>(D#778)
  __p ={v} {CLOBBER};
  # DEBUG D.61650 => D#779
  # DEBUG D.61651 => D#777
  pretmp_152 = out;
  pretmp_154 = (long unsigned int) pretmp_152;
  pretmp_153 = MEM[(struct map * *)this_6(D) + 280B];
  pretmp_166 = pretmp_154 * 48;
  pretmp_109 = pretmp_153 + pretmp_166;

  <bb 33>:
  # prephitmp_165 = PHI <out.102_4(31), pretmp_152(32)>
  # prephitmp_142 = PHI <_68(31), pretmp_109(32)>
  # DEBUG D#916 => out
  # DEBUG D#762 => &this_6(D)->_out_req
  # DEBUG D#85 => D#762
  # DEBUG __n => (long unsigned int) D#916
  # DEBUG this => D#85
  # DEBUG this => NULL
  _22 = MEM[(long unsigned int *)prephitmp_142 + 40B];
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  if (_22 == 0)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # DEBUG D#763 => &this_6(D)->_out_occ
  # DEBUG this => D#763
  # DEBUG __x => &out
  _73 = &MEM[(struct set *)this_6(D) + 208B]._M_t;
  __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique (_73, &out);
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#776 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#775 => MEM[(const bool &)&__p + 8]
  # DEBUG D#774 => VIEW_CONVERT_EXPR<unsigned char>(D#775)
  __p ={v} {CLOBBER};
  # DEBUG D.61652 => D#776
  # DEBUG D.61653 => D#774
  pretmp_41 = out;

  <bb 35>:
  # prephitmp_156 = PHI <prephitmp_165(33), pretmp_41(34)>
  # DEBUG D#915 => out
  # DEBUG req$port => D#915
  # DEBUG req$label => label_8(D)
  # DEBUG req$in_pri => in_pri_9(D)
  # DEBUG req$out_pri => out_pri_10(D)
  in.103_29 = in;
  _30 = (long unsigned int) in.103_29;
  # DEBUG D#764 => &this_6(D)->_in_req
  _47 = MEM[(struct map * *)this_6(D) + 256B];
  # DEBUG D#85 => D#764
  # DEBUG __n => _30
  # DEBUG this => D#85
  _74 = _30 * 48;
  _75 = _47 + _74;
  # DEBUG this => _75
  # DEBUG __k => &out
  # DEBUG this => _75
  # DEBUG __x => &out
  # DEBUG D#350 => &_75->_M_t
  # DEBUG this => D#350
  # DEBUG __k => &out
  # DEBUG this => D#350
  __i$_M_node_40 = &MEM[(struct _Rb_tree *)_75]._M_impl._M_header;
  __i$_M_node_106 = MEM[(struct _Rb_tree_node_base * *)_75 + 16B];
  # DEBUG D#91 => D#350
  # DEBUG this => D#91
  # DEBUG D#349 => D#350
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &out
  # DEBUG __y => __i$_M_node_40
  # DEBUG __x => __i$_M_node_106
  if (__i$_M_node_106 == 0B)
    goto <bb 54>;
  else
    goto <bb 38>;

  <bb 36>:
  # __i$_M_node_51 = PHI <__i$_M_node_110(40), __i$_M_node_111(41)>
  # __i$_M_node_52 = PHI <__i$_M_node_115(40), __i$_M_node_98(41)>
  # DEBUG __y => __i$_M_node_52
  # DEBUG __x => __i$_M_node_51
  if (__i$_M_node_51 == 0B)
    goto <bb 42>;
  else
    goto <bb 37>;

  <bb 37>:
  goto <bb 39>;

  <bb 38>:

  <bb 39>:
  # __i$_M_node_115 = PHI <__i$_M_node_106(38), __i$_M_node_51(37)>
  # __i$_M_node_98 = PHI <__i$_M_node_40(38), __i$_M_node_52(37)>
  # DEBUG __y => __i$_M_node_98
  # DEBUG __x => __i$_M_node_115
  # DEBUG __x => __i$_M_node_115
  # DEBUG __x => __i$_M_node_115
  # DEBUG this => __i$_M_node_115
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_115]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#346 => &MEM[(const struct pair &)__i$_M_node_115 + 32].first
  # DEBUG D#347 => &D#348->_M_impl._M_key_compare
  # DEBUG D#95 => D#347
  _108 = MEM[(const int &)__i$_M_node_115 + 32];
  # DEBUG D#96 => D#346
  # DEBUG D#97 => &out
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_108 >= prephitmp_156)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # DEBUG __y => __i$_M_node_115
  __i$_M_node_110 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_115 + 16B];
  # DEBUG D#108 => __i$_M_node_115
  # DEBUG __x => D#108
  # DEBUG __x => NULL
  goto <bb 36>;

  <bb 41>:
  __i$_M_node_111 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_115 + 24B];
  # DEBUG D#107 => __i$_M_node_115
  # DEBUG __x => D#107
  # DEBUG __x => NULL
  goto <bb 36>;

  <bb 42>:
  # __i$_M_node_161 = PHI <__i$_M_node_52(36)>

  <bb 57>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_161
  # DEBUG __i$_M_node => __i$_M_node_161
  # DEBUG this => _75
  # DEBUG D#176 => &_75->_M_t
  # DEBUG this => D#176
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_40
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_40 == __i$_M_node_161)
    goto <bb 54>;
  else
    goto <bb 43>;

  <bb 43>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_161
  # DEBUG D#753 => &MEM[(struct _Rb_tree_node *)__i$_M_node_161]._M_value_field
  # DEBUG __r => D#753
  # DEBUG D#754 => &MEM[(struct pair &)__i$_M_node_161 + 32].first
  # DEBUG D#131 => _75
  # DEBUG this => D#131
  # DEBUG D#130 => D#131
  # DEBUG D#129 => &D#130->_M_t
  # DEBUG D#128 => D#129
  # DEBUG this => D#128
  # DEBUG D#96 => &out
  _114 = MEM[(const int &)__i$_M_node_161 + 32];
  # DEBUG D#97 => D#754
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_114 > prephitmp_156)
    goto <bb 54>;
  else
    goto <bb 44>;

  <bb 44>:
  # __i$_M_node_119 = PHI <__i$_M_node_161(43), __i$_M_node_118(54)>
  # prephitmp_34 = PHI <in.103_29(43), pretmp_163(54)>
  # prephitmp_92 = PHI <prephitmp_156(43), pretmp_116(54)>
  # DEBUG __i$_M_node => __i$_M_node_119
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_119
  # DEBUG D#755 => &MEM[(struct _Rb_tree_node *)__i$_M_node_119]._M_value_field
  # DEBUG __r => D#755
  # DEBUG D#757 => {CLOBBER}
  # DEBUG __i$_M_node => D#757
  MEM[(struct mapped_type *)__i$_M_node_119 + 36B] = prephitmp_156;
  MEM[(struct mapped_type *)__i$_M_node_119 + 40B] = label_8(D);
  MEM[(struct mapped_type *)__i$_M_node_119 + 44B] = in_pri_9(D);
  MEM[(struct mapped_type *)__i$_M_node_119 + 48B] = out_pri_10(D);
  # DEBUG D#914 => in
  # DEBUG req$port => D#914
  _37 = (long unsigned int) prephitmp_92;
  # DEBUG D#765 => &this_6(D)->_out_req
  _48 = MEM[(struct map * *)this_6(D) + 280B];
  # DEBUG D#85 => D#765
  # DEBUG __n => _37
  # DEBUG this => D#85
  _76 = _37 * 48;
  _77 = _48 + _76;
  # DEBUG this => _77
  # DEBUG __k => &in
  # DEBUG this => _77
  # DEBUG __x => &in
  # DEBUG D#350 => &_77->_M_t
  # DEBUG this => D#350
  # DEBUG __k => &in
  # DEBUG this => D#350
  __i$_M_node_11 = &MEM[(struct _Rb_tree *)_77]._M_impl._M_header;
  __i$_M_node_89 = MEM[(struct _Rb_tree_node_base * *)_77 + 16B];
  # DEBUG D#91 => D#350
  # DEBUG this => D#91
  # DEBUG D#349 => D#350
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &in
  # DEBUG __y => __i$_M_node_11
  # DEBUG __x => __i$_M_node_89
  if (__i$_M_node_89 == 0B)
    goto <bb 55>;
  else
    goto <bb 47>;

  <bb 45>:
  # __i$_M_node_65 = PHI <__i$_M_node_93(49), __i$_M_node_94(50)>
  # __i$_M_node_66 = PHI <__i$_M_node_170(49), __i$_M_node_160(50)>
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_65
  if (__i$_M_node_65 == 0B)
    goto <bb 51>;
  else
    goto <bb 46>;

  <bb 46>:
  goto <bb 48>;

  <bb 47>:

  <bb 48>:
  # __i$_M_node_170 = PHI <__i$_M_node_89(47), __i$_M_node_65(46)>
  # __i$_M_node_160 = PHI <__i$_M_node_11(47), __i$_M_node_66(46)>
  # DEBUG __y => __i$_M_node_160
  # DEBUG __x => __i$_M_node_170
  # DEBUG __x => __i$_M_node_170
  # DEBUG __x => __i$_M_node_170
  # DEBUG this => __i$_M_node_170
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_170]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#346 => &MEM[(const struct pair &)__i$_M_node_170 + 32].first
  # DEBUG D#347 => &D#348->_M_impl._M_key_compare
  # DEBUG D#95 => D#347
  _91 = MEM[(const int &)__i$_M_node_170 + 32];
  # DEBUG D#96 => D#346
  # DEBUG D#97 => &in
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (prephitmp_34 <= _91)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # DEBUG __y => __i$_M_node_170
  __i$_M_node_93 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_170 + 16B];
  # DEBUG D#108 => __i$_M_node_170
  # DEBUG __x => D#108
  # DEBUG __x => NULL
  goto <bb 45>;

  <bb 50>:
  __i$_M_node_94 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_170 + 24B];
  # DEBUG D#107 => __i$_M_node_170
  # DEBUG __x => D#107
  # DEBUG __x => NULL
  goto <bb 45>;

  <bb 51>:
  # __i$_M_node_158 = PHI <__i$_M_node_66(45)>

  <bb 56>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_158
  # DEBUG __i$_M_node => __i$_M_node_158
  # DEBUG this => _77
  # DEBUG D#176 => &_77->_M_t
  # DEBUG this => D#176
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_11
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_11 == __i$_M_node_158)
    goto <bb 55>;
  else
    goto <bb 52>;

  <bb 52>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_158
  # DEBUG D#753 => &MEM[(struct _Rb_tree_node *)__i$_M_node_158]._M_value_field
  # DEBUG __r => D#753
  # DEBUG D#754 => &MEM[(struct pair &)__i$_M_node_158 + 32].first
  # DEBUG D#131 => _77
  # DEBUG this => D#131
  # DEBUG D#130 => D#131
  # DEBUG D#129 => &D#130->_M_t
  # DEBUG D#128 => D#129
  # DEBUG this => D#128
  # DEBUG D#96 => &in
  _97 = MEM[(const int &)__i$_M_node_158 + 32];
  # DEBUG D#97 => D#754
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (prephitmp_34 < _97)
    goto <bb 55>;
  else
    goto <bb 53>;

  <bb 53>:
  # __i$_M_node_102 = PHI <__i$_M_node_158(52), __i$_M_node_101(55)>

  <bb 60>:
  # DEBUG __i$_M_node => __i$_M_node_102
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_102
  # DEBUG D#755 => &MEM[(struct _Rb_tree_node *)__i$_M_node_102]._M_value_field
  # DEBUG __r => D#755
  # DEBUG D#757 => {CLOBBER}
  # DEBUG __i$_M_node => D#757
  MEM[(struct mapped_type *)__i$_M_node_102 + 36B] = prephitmp_34;
  MEM[(struct mapped_type *)__i$_M_node_102 + 40B] = label_8(D);
  MEM[(struct mapped_type *)__i$_M_node_102 + 44B] = in_pri_9(D);
  MEM[(struct mapped_type *)__i$_M_node_102 + 48B] = out_pri_10(D);
  # DEBUG D#766 => {CLOBBER}
  # DEBUG req$port => D#766
  # DEBUG D#767 => {CLOBBER}
  # DEBUG req$label => D#767
  # DEBUG D#768 => {CLOBBER}
  # DEBUG req$in_pri => D#768
  # DEBUG D#769 => {CLOBBER}
  # DEBUG req$out_pri => D#769
  return;

  <bb 54>:
  # __i$_M_node_147 = PHI <__i$_M_node_161(43), __i$_M_node_161(57), __i$_M_node_40(35)>
  # DEBUG this => &D.64665
  # DEBUG __a => &out
  # DEBUG __b => NULL
  D.64665.first = prephitmp_156;
  MEM[(struct pair *)&D.64665 + 4B] = 0;
  MEM[(struct pair *)&D.64665 + 8B] = 0;
  MEM[(struct pair *)&D.64665 + 12B] = 0;
  MEM[(struct pair *)&D.64665 + 16B] = 0;
  # DEBUG this => _75
  # DEBUG __position$_M_node => __i$_M_node_147
  # DEBUG __x => &D.64665
  # DEBUG this => NULL
  # DEBUG __it => &__position
  _117 = &_75->_M_t;
  # DEBUG this => _117
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_147;
  # DEBUG __x => &D.64665
  # DEBUG this => &__an
  # DEBUG __t => _117
  # DEBUG __an$_M_t => _117
  # DEBUG D#752 => &__an
  D.64664 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE17_M_insert_unique_INSA_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_ERKS4_RT_.isra.197.constprop (_117, __pos, &D.64665);
  __i$_M_node_118 = MEM[(struct _Rb_tree_iterator *)&D.64664];
  # DEBUG __i$_M_node => __i$_M_node_118
  D.64665 ={v} {CLOBBER};
  pretmp_163 = in;
  pretmp_116 = out;
  goto <bb 44>;

  <bb 55>:
  # __i$_M_node_49 = PHI <__i$_M_node_158(52), __i$_M_node_158(56), __i$_M_node_11(44)>
  # DEBUG this => &D.64638
  # DEBUG __a => &in
  # DEBUG __b => NULL
  D.64638.first = prephitmp_34;
  MEM[(struct pair *)&D.64638 + 4B] = 0;
  MEM[(struct pair *)&D.64638 + 8B] = 0;
  MEM[(struct pair *)&D.64638 + 12B] = 0;
  MEM[(struct pair *)&D.64638 + 16B] = 0;
  # DEBUG this => _77
  # DEBUG __position$_M_node => __i$_M_node_49
  # DEBUG __x => &D.64638
  # DEBUG this => NULL
  # DEBUG __it => &__position
  _100 = &_77->_M_t;
  # DEBUG this => _100
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_49;
  # DEBUG __x => &D.64638
  # DEBUG this => &__an
  # DEBUG __t => _100
  # DEBUG __an$_M_t => _100
  # DEBUG D#752 => &__an
  D.64637 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE17_M_insert_unique_INSA_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_ERKS4_RT_.isra.197.constprop (_100, __pos, &D.64638);
  __i$_M_node_101 = MEM[(struct _Rb_tree_iterator *)&D.64637];
  # DEBUG __i$_M_node => __i$_M_node_101
  D.64638 ={v} {CLOBBER};
  goto <bb 53>;

}



;; Function std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const _Key&) [with _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type = long unsigned int] (_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE5eraseERS1_, funcdef_no=2060, decl_uid=41961, cgraph_uid=730, symbol_order=731)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const _Key&) [with _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type = long unsigned int] (struct _Rb_tree * const this, const int & __x)
{
  struct _Rb_tree_node_base * SR.1410;
  struct _Rb_tree_node_base * SR.1409;
  struct _Rb_tree_node_base * const __p$8;
  struct _Rb_tree_node_base * const __p;
  struct _Rb_tree_node * __y;
  struct const_iterator __position;
  struct pair D.64726;
  struct _Rb_tree_node * __x;
  struct const_iterator __position;
  const struct _Rb_tree_node_base * const __first$_M_node;
  const struct _Rb_tree_node_base * const __last$_M_node;
  struct const_iterator __first;
  struct const_iterator __last;
  struct _Rb_tree_node_base * const __last$_M_node;
  struct _Rb_tree_node_base * const __first$_M_node;
  struct const_iterator D.58121;
  struct const_iterator D.58120;
  struct pair __p;
  const size_type _7;
  struct _Rb_tree_node_base * _18;
  bool _19;
  const int _26;
  bool prephitmp_32;
  const int _33;
  const int _37;
  size_type prephitmp_40;
  const int pretmp_41;
  long unsigned int _42;
  bool _53;
  long unsigned int _55;
  long unsigned int _56;
  size_type pretmp_57;
  bool pretmp_65;
  bool pretmp_77;
  bool prephitmp_96;

  <bb 2>:
  # DEBUG this => this_2(D)
  # DEBUG __k => __x_3(D)
  __p_13 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 16B];
  # DEBUG D#91 => this_2(D)
  # DEBUG this => D#91
  # DEBUG __x => NULL
  # DEBUG this => this_2(D)
  __p_24 = &this_2(D)->_M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __y => __p_24
  # DEBUG __x => __p_13
  if (__p_13 == 0B)
    goto <bb 28>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_41 = *__x_3(D);
  goto <bb 7>;

  <bb 4>:
  # __p_50 = PHI <__p_28(8), __p_29(10)>
  # __p_49 = PHI <__p_80(8), __p_68(10)>
  # DEBUG __y => __p_49
  # DEBUG __x => __p_50
  if (__p_50 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # __p_51 = PHI <__p_49(4)>
  pretmp_77 = __p_24 == __p_51;
  goto <bb 28>;

  <bb 6>:

  <bb 7>:
  # __p_68 = PHI <__p_13(3), __p_50(6)>
  # __p_80 = PHI <__p_24(3), __p_49(6)>
  # DEBUG __y => __p_80
  # DEBUG __x => __p_68
  # DEBUG __x => __p_68
  # DEBUG __x => __p_68
  # DEBUG this => __p_68
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__p_68]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#355 => &MEM[(const struct pair &)__p_68 + 32].first
  # DEBUG D#358 => &this_2(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#358
  _26 = MEM[(const int &)__p_68 + 32];
  # DEBUG D#96 => D#355
  # DEBUG D#97 => __x_3(D)
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_26 < pretmp_41)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __p_28 = MEM[(struct _Rb_tree_node_base * *)__p_68 + 24B];
  # DEBUG D#107 => __p_68
  # DEBUG __x => D#107
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 9>:
  # DEBUG __x => __p_68
  # DEBUG __x => __p_68
  # DEBUG this => __p_68
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__p_68]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#356 => &MEM[(const struct pair &)__p_68 + 32].first
  # DEBUG D#357 => &this_2(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#357
  # DEBUG D#96 => __x_3(D)
  # DEBUG D#97 => D#356
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_26 > pretmp_41)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG __y => __p_68
  __p_29 = MEM[(struct _Rb_tree_node_base * *)__p_68 + 16B];
  # DEBUG D#108 => __p_68
  # DEBUG __x => D#108
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 11>:
  # __p_25 = PHI <__p_68(9)>
  # __p_21 = PHI <__p_80(9)>
  # DEBUG __xu => __p_25
  # DEBUG __yu => __p_21
  # DEBUG __y => __p_25
  __p_30 = MEM[(struct _Rb_tree_node_base * *)__p_25 + 16B];
  # DEBUG D#108 => __p_25
  # DEBUG __x => D#108
  # DEBUG __x => NULL
  __p_31 = MEM[(struct _Rb_tree_node_base * *)__p_25 + 24B];
  # DEBUG D#107 => __p_25
  # DEBUG __x => D#107
  # DEBUG __xu => NULL
  # DEBUG D#354 => this_2(D)
  # DEBUG __x => NULL
  # DEBUG __y => __p_21
  # DEBUG __k => __x_3(D)
  # DEBUG __y => __p_21
  # DEBUG __x => __p_31
  if (__p_31 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 12>:
  # __p_46 = PHI <__p_34(18), __p_35(19)>
  # __p_45 = PHI <__p_20(18), __p_81(19)>
  # DEBUG __y => __p_45
  # DEBUG __x => __p_46
  if (__p_46 == 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # __p_58 = PHI <__p_45(12)>

  <bb 39>:
  goto <bb 15>;

  <bb 14>:
  goto <bb 17>;

  <bb 15>:
  # __p_86 = PHI <__p_58(39), __p_21(11)>
  # DEBUG __y => __p_25
  # DEBUG __x => __p_30
  if (__p_30 == 0B)
    goto <bb 27>;
  else
    goto <bb 23>;

  <bb 16>:

  <bb 17>:
  # __p_20 = PHI <__p_31(16), __p_46(14)>
  # __p_81 = PHI <__p_21(16), __p_45(14)>
  # DEBUG __y => __p_81
  # DEBUG __x => __p_20
  # DEBUG __x => __p_20
  # DEBUG __x => __p_20
  # DEBUG this => __p_20
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__p_20]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#351 => &MEM[(const struct pair &)__p_20 + 32].first
  # DEBUG D#352 => &D#353->_M_impl._M_key_compare
  # DEBUG D#95 => D#352
  # DEBUG D#96 => __x_3(D)
  _33 = MEM[(const int &)__p_20 + 32];
  # DEBUG D#97 => D#351
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_33 > pretmp_41)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG __y => __p_20
  __p_34 = MEM[(struct _Rb_tree_node_base * *)__p_20 + 16B];
  # DEBUG D#108 => __p_20
  # DEBUG __x => D#108
  # DEBUG __x => NULL
  goto <bb 12>;

  <bb 19>:
  __p_35 = MEM[(struct _Rb_tree_node_base * *)__p_20 + 24B];
  # DEBUG D#107 => __p_20
  # DEBUG __x => D#107
  # DEBUG __x => NULL
  goto <bb 12>;

  <bb 20>:
  # __p_44 = PHI <__p_38(25), __p_39(26)>
  # __p_43 = PHI <__p_23(25), __p_48(26)>
  # DEBUG __y => __p_43
  # DEBUG __x => __p_44
  if (__p_44 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # __p_60 = PHI <__p_43(20)>

  <bb 38>:
  goto <bb 27>;

  <bb 22>:
  goto <bb 24>;

  <bb 23>:

  <bb 24>:
  # __p_23 = PHI <__p_30(23), __p_44(22)>
  # __p_48 = PHI <__p_25(23), __p_43(22)>
  # DEBUG __y => __p_48
  # DEBUG __x => __p_23
  # DEBUG __x => __p_23
  # DEBUG __x => __p_23
  # DEBUG this => __p_23
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__p_23]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#346 => &MEM[(const struct pair &)__p_23 + 32].first
  # DEBUG D#347 => &D#348->_M_impl._M_key_compare
  # DEBUG D#95 => D#347
  _37 = MEM[(const int &)__p_23 + 32];
  # DEBUG D#96 => D#346
  # DEBUG D#97 => __x_3(D)
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_37 >= pretmp_41)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG __y => __p_23
  __p_38 = MEM[(struct _Rb_tree_node_base * *)__p_23 + 16B];
  # DEBUG D#108 => __p_23
  # DEBUG __x => D#108
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 26>:
  __p_39 = MEM[(struct _Rb_tree_node_base * *)__p_23 + 24B];
  # DEBUG D#107 => __p_23
  # DEBUG __x => D#107
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 27>:
  # __p_87 = PHI <__p_60(38), __p_25(15)>

  <bb 40>:
  # DEBUG this => NULL
  # DEBUG __x => __p_87
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => NULL
  pretmp_65 = __p_24 == __p_86;
  goto <bb 29>;

  <bb 28>:
  # __p_82 = PHI <__p_51(5), __p_24(2)>
  # prephitmp_32 = PHI <pretmp_77(5), 1(2)>

  <bb 41>:
  # DEBUG this => NULL
  # DEBUG __x => __p_82
  # DEBUG this => NULL
  # DEBUG __x => __p_82
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => NULL

  <bb 29>:
  # __p_6 = PHI <__p_87(40), __p_82(41)>
  # __p$8_64 = PHI <__p_86(40), __p_82(41)>
  # prephitmp_96 = PHI <pretmp_65(40), prephitmp_32(41)>
  # DEBUG __p => __p_6
  # DEBUG __p$8 => __p$8_64
  _7 = MEM[(long unsigned int *)this_2(D) + 40B];
  # DEBUG D#132 => this_2(D)
  # DEBUG this => D#132
  # DEBUG __old_size => NULL
  # DEBUG this => this_2(D)
  # DEBUG __first$_M_node => __p_6
  # DEBUG __last$_M_node => __p$8_64
  # DEBUG this => &D.58121
  # DEBUG __it => &__last
  # DEBUG this => &D.58120
  # DEBUG __it => &__first
  # DEBUG this => this_2(D)
  # DEBUG __first$_M_node => __p_6
  # DEBUG __last$_M_node => __p$8_64
  _18 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 24B];
  # DEBUG D#359 => this_2(D)
  # DEBUG this => D#359
  # DEBUG this => NULL
  # DEBUG __x => _18
  # DEBUG this => NULL
  # DEBUG __it => NULL
  # DEBUG this => &__first
  # DEBUG __x => NULL
  # DEBUG this => this_2(D)
  # DEBUG this => NULL
  # DEBUG __x => __p_24
  # DEBUG this => NULL
  # DEBUG __it => NULL
  # DEBUG this => &__last
  # DEBUG __x => NULL
  _19 = __p_6 == _18;
  _53 = _19 & prephitmp_96;
  if (_53 != 0)
    goto <bb 36>;
  else
    goto <bb 30>;

  <bb 30>:
  # DEBUG __first$_M_node => __p_6
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (__p_6 != __p$8_64)
    goto <bb 31>;
  else
    goto <bb 35>;

  <bb 31>:

  <bb 32>:
  # __p_67 = PHI <__p_6(31), __p_22(33)>
  # DEBUG __first$_M_node => __p_67
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG D#361 => 0
  # DEBUG this => &__first
  # DEBUG D.64689 => D#361
  # DEBUG __tmp$_M_node => __p_67
  __p_22 = std::_Rb_tree_increment (__p_67);
  # DEBUG __first$_M_node => __p_22
  # DEBUG D#360 => {CLOBBER}
  # DEBUG __tmp$_M_node => D#360
  # DEBUG this => this_2(D)
  # DEBUG this => this_2(D)
  __y_54 = std::_Rb_tree_rebalance_for_erase (__p_67, __p_24);
  # DEBUG __y => __y_54
  # DEBUG D#548 => this_2(D)
  # DEBUG __p => __y_54
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __y_54
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __y_54
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __y_54
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __y_54
  # DEBUG this => D#402
  # DEBUG D.64786 => D#403
  operator delete (__y_54);
  _55 = this_2(D)->_M_impl._M_node_count;
  _56 = _55 + 18446744073709551615;
  this_2(D)->_M_impl._M_node_count = _56;
  # DEBUG __first$_M_node => __p_22
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (__p_22 != __p$8_64)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # _42 = PHI <_56(32)>

  <bb 37>:
  pretmp_57 = _7 - _42;

  <bb 35>:
  # prephitmp_40 = PHI <pretmp_57(37), _7(36), 0(30)>
  D.58120 ={v} {CLOBBER};
  D.58121 ={v} {CLOBBER};
  # DEBUG D#132 => this_2(D)
  # DEBUG this => D#132
  # DEBUG D#928 => {CLOBBER}
  # DEBUG __p => D#928
  # DEBUG D#929 => {CLOBBER}
  # DEBUG __p$8 => D#929
  return prephitmp_40;

  <bb 36>:
  # DEBUG this => this_2(D)
  # DEBUG this => this_2(D)
  # DEBUG D#91 => this_2(D)
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (this_2(D), __p_13);
  # DEBUG D#556 => &this_2(D)->_M_impl
  # DEBUG this => D#556
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_header._M_left = __p_24;
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_header._M_right = __p_24;
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_node_count = 0;
  goto <bb 35>;

}



;; Function std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const _Key&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type = long unsigned int] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi, funcdef_no=2061, decl_uid=36827, cgraph_uid=731, symbol_order=732)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const _Key&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type = long unsigned int] (struct _Rb_tree * const this, const int & __x)
{
  struct _Rb_tree_node_base * SR.1416;
  struct _Rb_tree_node_base * SR.1415;
  struct _Rb_tree_node_base * const __p$8;
  struct _Rb_tree_node_base * const __p;
  struct _Rb_tree_node * __y;
  struct const_iterator __position;
  struct pair D.64840;
  struct _Rb_tree_node * __x;
  struct const_iterator __position;
  const struct _Rb_tree_node_base * const __first$_M_node;
  const struct _Rb_tree_node_base * const __last$_M_node;
  struct const_iterator __first;
  struct const_iterator __last;
  struct _Rb_tree_node_base * const __last$_M_node;
  struct _Rb_tree_node_base * const __first$_M_node;
  struct const_iterator D.55569;
  struct const_iterator D.55568;
  struct pair __p;
  const size_type _7;
  struct _Rb_tree_node_base * _18;
  bool _19;
  const int _26;
  bool prephitmp_32;
  const int _33;
  const int _37;
  size_type prephitmp_40;
  const int pretmp_41;
  long unsigned int _42;
  bool _53;
  long unsigned int _55;
  long unsigned int _56;
  size_type pretmp_57;
  bool pretmp_65;
  bool pretmp_77;
  bool prephitmp_96;

  <bb 2>:
  # DEBUG this => this_2(D)
  # DEBUG __k => __x_3(D)
  __p_13 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 16B];
  # DEBUG D#90 => this_2(D)
  # DEBUG this => D#90
  # DEBUG __x => NULL
  # DEBUG this => this_2(D)
  __p_24 = &this_2(D)->_M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __y => __p_24
  # DEBUG __x => __p_13
  if (__p_13 == 0B)
    goto <bb 28>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_41 = *__x_3(D);
  goto <bb 7>;

  <bb 4>:
  # __p_50 = PHI <__p_28(8), __p_29(10)>
  # __p_49 = PHI <__p_80(8), __p_68(10)>
  # DEBUG __y => __p_49
  # DEBUG __x => __p_50
  if (__p_50 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # __p_51 = PHI <__p_49(4)>
  pretmp_77 = __p_24 == __p_51;
  goto <bb 28>;

  <bb 6>:

  <bb 7>:
  # __p_68 = PHI <__p_13(3), __p_50(6)>
  # __p_80 = PHI <__p_24(3), __p_49(6)>
  # DEBUG __y => __p_80
  # DEBUG __x => __p_68
  # DEBUG __x => __p_68
  # DEBUG __x => __p_68
  # DEBUG this => __p_68
  # DEBUG D#434 => &MEM[(const struct _Rb_tree_node *)__p_68]._M_value_field
  # DEBUG __r => D#434
  # DEBUG __x => D#434
  # DEBUG this => D#127
  # DEBUG D#437 => &this_2(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#437
  _26 = MEM[(const int &)__p_68 + 32];
  # DEBUG D#96 => D#434
  # DEBUG D#97 => __x_3(D)
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_26 < pretmp_41)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __p_28 = MEM[(struct _Rb_tree_node_base * *)__p_68 + 24B];
  # DEBUG D#105 => __p_68
  # DEBUG __x => D#105
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 9>:
  # DEBUG __x => __p_68
  # DEBUG __x => __p_68
  # DEBUG this => __p_68
  # DEBUG D#435 => &MEM[(const struct _Rb_tree_node *)__p_68]._M_value_field
  # DEBUG __r => D#435
  # DEBUG __x => D#435
  # DEBUG this => D#127
  # DEBUG D#436 => &this_2(D)->_M_impl._M_key_compare
  # DEBUG D#95 => D#436
  # DEBUG D#96 => __x_3(D)
  # DEBUG D#97 => D#435
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_26 > pretmp_41)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG __y => __p_68
  __p_29 = MEM[(struct _Rb_tree_node_base * *)__p_68 + 16B];
  # DEBUG D#106 => __p_68
  # DEBUG __x => D#106
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 11>:
  # __p_25 = PHI <__p_68(9)>
  # __p_21 = PHI <__p_80(9)>
  # DEBUG __xu => __p_25
  # DEBUG __yu => __p_21
  # DEBUG __y => __p_25
  __p_30 = MEM[(struct _Rb_tree_node_base * *)__p_25 + 16B];
  # DEBUG D#106 => __p_25
  # DEBUG __x => D#106
  # DEBUG __x => NULL
  __p_31 = MEM[(struct _Rb_tree_node_base * *)__p_25 + 24B];
  # DEBUG D#105 => __p_25
  # DEBUG __x => D#105
  # DEBUG __xu => NULL
  # DEBUG D#429 => this_2(D)
  # DEBUG __x => NULL
  # DEBUG __y => __p_21
  # DEBUG __k => __x_3(D)
  # DEBUG __y => __p_21
  # DEBUG __x => __p_31
  if (__p_31 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 12>:
  # __p_46 = PHI <__p_34(18), __p_35(19)>
  # __p_45 = PHI <__p_20(18), __p_81(19)>
  # DEBUG __y => __p_45
  # DEBUG __x => __p_46
  if (__p_46 == 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # __p_58 = PHI <__p_45(12)>

  <bb 39>:
  goto <bb 15>;

  <bb 14>:
  goto <bb 17>;

  <bb 15>:
  # __p_86 = PHI <__p_58(39), __p_21(11)>
  # DEBUG __y => __p_25
  # DEBUG __x => __p_30
  if (__p_30 == 0B)
    goto <bb 27>;
  else
    goto <bb 23>;

  <bb 16>:

  <bb 17>:
  # __p_20 = PHI <__p_31(16), __p_46(14)>
  # __p_81 = PHI <__p_21(16), __p_45(14)>
  # DEBUG __y => __p_81
  # DEBUG __x => __p_20
  # DEBUG __x => __p_20
  # DEBUG __x => __p_20
  # DEBUG this => __p_20
  # DEBUG D#426 => &MEM[(const struct _Rb_tree_node *)__p_20]._M_value_field
  # DEBUG __r => D#426
  # DEBUG __x => D#426
  # DEBUG this => D#127
  # DEBUG D#427 => &D#428->_M_impl._M_key_compare
  # DEBUG D#95 => D#427
  # DEBUG D#96 => __x_3(D)
  _33 = MEM[(const int &)__p_20 + 32];
  # DEBUG D#97 => D#426
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_33 > pretmp_41)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG __y => __p_20
  __p_34 = MEM[(struct _Rb_tree_node_base * *)__p_20 + 16B];
  # DEBUG D#106 => __p_20
  # DEBUG __x => D#106
  # DEBUG __x => NULL
  goto <bb 12>;

  <bb 19>:
  __p_35 = MEM[(struct _Rb_tree_node_base * *)__p_20 + 24B];
  # DEBUG D#105 => __p_20
  # DEBUG __x => D#105
  # DEBUG __x => NULL
  goto <bb 12>;

  <bb 20>:
  # __p_44 = PHI <__p_38(25), __p_39(26)>
  # __p_43 = PHI <__p_23(25), __p_48(26)>
  # DEBUG __y => __p_43
  # DEBUG __x => __p_44
  if (__p_44 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # __p_60 = PHI <__p_43(20)>

  <bb 38>:
  goto <bb 27>;

  <bb 22>:
  goto <bb 24>;

  <bb 23>:

  <bb 24>:
  # __p_23 = PHI <__p_30(23), __p_44(22)>
  # __p_48 = PHI <__p_25(23), __p_43(22)>
  # DEBUG __y => __p_48
  # DEBUG __x => __p_23
  # DEBUG __x => __p_23
  # DEBUG __x => __p_23
  # DEBUG this => __p_23
  # DEBUG D#430 => &MEM[(const struct _Rb_tree_node *)__p_23]._M_value_field
  # DEBUG __r => D#430
  # DEBUG __x => D#430
  # DEBUG this => D#127
  # DEBUG D#431 => &D#432->_M_impl._M_key_compare
  # DEBUG D#95 => D#431
  _37 = MEM[(const int &)__p_23 + 32];
  # DEBUG D#96 => D#430
  # DEBUG D#97 => __x_3(D)
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (_37 >= pretmp_41)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG __y => __p_23
  __p_38 = MEM[(struct _Rb_tree_node_base * *)__p_23 + 16B];
  # DEBUG D#106 => __p_23
  # DEBUG __x => D#106
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 26>:
  __p_39 = MEM[(struct _Rb_tree_node_base * *)__p_23 + 24B];
  # DEBUG D#105 => __p_23
  # DEBUG __x => D#105
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 27>:
  # __p_87 = PHI <__p_60(38), __p_25(15)>

  <bb 40>:
  # DEBUG this => NULL
  # DEBUG __x => __p_87
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => NULL
  pretmp_65 = __p_24 == __p_86;
  goto <bb 29>;

  <bb 28>:
  # __p_82 = PHI <__p_51(5), __p_24(2)>
  # prephitmp_32 = PHI <pretmp_77(5), 1(2)>

  <bb 41>:
  # DEBUG this => NULL
  # DEBUG __x => __p_82
  # DEBUG this => NULL
  # DEBUG __x => __p_82
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => NULL

  <bb 29>:
  # __p_6 = PHI <__p_87(40), __p_82(41)>
  # __p$8_64 = PHI <__p_86(40), __p_82(41)>
  # prephitmp_96 = PHI <pretmp_65(40), prephitmp_32(41)>
  # DEBUG __p => __p_6
  # DEBUG __p$8 => __p$8_64
  _7 = MEM[(long unsigned int *)this_2(D) + 40B];
  # DEBUG D#133 => this_2(D)
  # DEBUG this => D#133
  # DEBUG __old_size => NULL
  # DEBUG this => this_2(D)
  # DEBUG __first$_M_node => __p_6
  # DEBUG __last$_M_node => __p$8_64
  # DEBUG this => &D.55569
  # DEBUG __it => &__last
  # DEBUG this => &D.55568
  # DEBUG __it => &__first
  # DEBUG this => this_2(D)
  # DEBUG __first$_M_node => __p_6
  # DEBUG __last$_M_node => __p$8_64
  _18 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 24B];
  # DEBUG D#175 => this_2(D)
  # DEBUG this => D#175
  # DEBUG this => NULL
  # DEBUG __x => _18
  # DEBUG this => NULL
  # DEBUG __it => NULL
  # DEBUG this => &__first
  # DEBUG __x => NULL
  # DEBUG this => this_2(D)
  # DEBUG this => NULL
  # DEBUG __x => __p_24
  # DEBUG this => NULL
  # DEBUG __it => NULL
  # DEBUG this => &__last
  # DEBUG __x => NULL
  _19 = __p_6 == _18;
  _53 = _19 & prephitmp_96;
  if (_53 != 0)
    goto <bb 36>;
  else
    goto <bb 30>;

  <bb 30>:
  # DEBUG __first$_M_node => __p_6
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (__p_6 != __p$8_64)
    goto <bb 31>;
  else
    goto <bb 35>;

  <bb 31>:

  <bb 32>:
  # __p_67 = PHI <__p_6(31), __p_22(33)>
  # DEBUG __first$_M_node => __p_67
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG D#363 => 0
  # DEBUG this => &__first
  # DEBUG D.64803 => D#363
  # DEBUG __tmp$_M_node => __p_67
  __p_22 = std::_Rb_tree_increment (__p_67);
  # DEBUG __first$_M_node => __p_22
  # DEBUG D#362 => {CLOBBER}
  # DEBUG __tmp$_M_node => D#362
  # DEBUG this => this_2(D)
  # DEBUG this => this_2(D)
  __y_54 = std::_Rb_tree_rebalance_for_erase (__p_67, __p_24);
  # DEBUG __y => __y_54
  # DEBUG D#399 => this_2(D)
  # DEBUG __p => __y_54
  # DEBUG this => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#397 => D#399
  # DEBUG D#396 => D#399
  # DEBUG D#388 => D#396
  # DEBUG D#389 => __y_54
  # DEBUG this => D#388
  # DEBUG __p => D#389
  # DEBUG D#387 => D#388
  # DEBUG D#386 => D#389
  # DEBUG D#385 => D#389
  # DEBUG this => D#385
  # DEBUG D#384 => &D#386->_M_value_field
  # DEBUG __r => D#384
  # DEBUG D#383 => D#387
  # DEBUG this => D#383
  # DEBUG D#382 => D#383
  # DEBUG this => D#382
  # DEBUG this => NULL
  # DEBUG D.54900 => NULL
  # DEBUG this => NULL
  # DEBUG D#307 => D#384
  # DEBUG this => D#306
  # DEBUG __p => D#307
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#397
  # DEBUG __p => __y_54
  # DEBUG this => D#398
  # DEBUG D#395 => 1
  # DEBUG __p => __y_54
  # DEBUG __a => D#394
  # DEBUG __n => D#395
  # DEBUG D#393 => D#395
  # DEBUG D#392 => D#394
  # DEBUG D#390 => D#392
  # DEBUG D#391 => D#393
  # DEBUG __p => __y_54
  # DEBUG this => D#390
  # DEBUG D.64900 => D#391
  operator delete (__y_54);
  _55 = this_2(D)->_M_impl._M_node_count;
  _56 = _55 + 18446744073709551615;
  this_2(D)->_M_impl._M_node_count = _56;
  # DEBUG __first$_M_node => __p_22
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (__p_22 != __p$8_64)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # _42 = PHI <_56(32)>

  <bb 37>:
  pretmp_57 = _7 - _42;

  <bb 35>:
  # prephitmp_40 = PHI <pretmp_57(37), _7(36), 0(30)>
  D.55568 ={v} {CLOBBER};
  D.55569 ={v} {CLOBBER};
  # DEBUG D#133 => this_2(D)
  # DEBUG this => D#133
  # DEBUG D#932 => {CLOBBER}
  # DEBUG __p => D#932
  # DEBUG D#933 => {CLOBBER}
  # DEBUG __p$8 => D#933
  return prephitmp_40;

  <bb 36>:
  # DEBUG this => this_2(D)
  # DEBUG this => this_2(D)
  # DEBUG D#90 => this_2(D)
  # DEBUG this => D#90
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (this_2(D), __p_13);
  # DEBUG D#401 => &this_2(D)->_M_impl
  # DEBUG this => D#401
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_header._M_left = __p_24;
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_header._M_right = __p_24;
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_node_count = 0;
  goto <bb 35>;

}



;; Function virtual void SparseAllocator::RemoveRequest(int, int, int) (_ZN15SparseAllocator13RemoveRequestEiii, funcdef_no=1777, decl_uid=37924, cgraph_uid=447, symbol_order=448)

Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void SparseAllocator::RemoveRequest(int, int, int) (struct SparseAllocator * const this, int in, int out, int label)
{
  struct value_type D.64967;
  struct _Rb_tree_node * __y;
  struct iterator D.64966;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.1191;
  struct mapped_type & D.64963;
  struct value_type D.64940;
  struct _Rb_tree_node * __y;
  struct iterator D.64939;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.1191;
  struct mapped_type & D.64936;
  const struct _Rb_tree_node * __y;
  const struct _Rb_tree_node * __y;
  static const char __PRETTY_FUNCTION__[59] = "virtual void SparseAllocator::RemoveRequest(int, int, int)";
  int in.135_4;
  int _6;
  int out.136_7;
  int _8;
  long unsigned int _9;
  const int _12;
  int pretmp_13;
  int _15;
  int in.135_17;
  long unsigned int _18;
  int in.135_19;
  long unsigned int _20;
  int out.136_24;
  long unsigned int _25;
  const int _27;
  int _30;
  int out.136_31;
  long unsigned int _32;
  int out.136_34;
  long unsigned int _35;
  struct map * _44;
  struct map * _45;
  struct map * _46;
  struct map * _47;
  struct map * _48;
  struct map * _49;
  long unsigned int _52;
  struct map & _53;
  const size_type _54;
  long unsigned int _55;
  struct map & _56;
  struct _Rep_type * _57;
  long unsigned int _58;
  struct map & _59;
  struct _Rep_type * _60;
  const int _63;
  const int _69;
  long unsigned int _74;
  struct map & _75;
  const size_type _76;
  long unsigned int _77;
  struct map & _78;
  struct _Rep_type * _79;
  long unsigned int _80;
  struct map & _81;
  struct _Rep_type * _82;
  const int _90;
  const int _96;
  struct _Rep_type * _99;
  const int _107;
  const int _113;
  struct _Rep_type * _116;

  <bb 2>:
  in.135_4 = in;
  if (in.135_4 < 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _6 = this_5(D)->D.37974._inputs;
  if (in.135_4 >= _6)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  __assert_fail ("( in >= 0 ) && ( in < _inputs )", "allocators/allocator.cpp", 350, &__PRETTY_FUNCTION__);

  <bb 5>:
  out.136_7 = out;
  if (out.136_7 < 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  _8 = this_5(D)->D.37974._outputs;
  if (out.136_7 >= _8)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("( out >= 0 ) && ( out < _outputs )", "allocators/allocator.cpp", 351, &__PRETTY_FUNCTION__);

  <bb 8>:
  _9 = (long unsigned int) in.135_4;
  # DEBUG D#780 => &this_5(D)->_in_req
  _44 = MEM[(struct map * *)this_5(D) + 256B];
  # DEBUG D#85 => D#780
  # DEBUG __n => _9
  # DEBUG this => D#85
  _52 = _9 * 48;
  _53 = _44 + _52;
  # DEBUG this => NULL
  # DEBUG __x => &out
  # DEBUG this => D#344
  __i$_M_node_37 = &MEM[(const struct _Rb_tree *)_53]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_37
  # DEBUG this => D#345
  # DEBUG __k => &out
  # DEBUG this => D#345
  __i$_M_node_36 = MEM[(struct _Rb_tree_node_base * *)_53 + 16B];
  # DEBUG D#110 => D#345
  # DEBUG this => D#110
  # DEBUG D#335 => D#345
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &out
  # DEBUG __y => __i$_M_node_37
  # DEBUG __x => __i$_M_node_36
  if (__i$_M_node_36 == 0B)
    goto <bb 53>;
  else
    goto <bb 11>;

  <bb 9>:
  # __i$_M_node_121 = PHI <__i$_M_node_22(14), __i$_M_node_26(13)>
  # __i$_M_node_120 = PHI <__i$_M_node_173(14), __i$_M_node_97(13)>
  # DEBUG __y => __i$_M_node_120
  # DEBUG __x => __i$_M_node_121
  if (__i$_M_node_121 == 0B)
    goto <bb 15>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 12>;

  <bb 11>:

  <bb 12>:
  # __i$_M_node_173 = PHI <__i$_M_node_37(11), __i$_M_node_120(10)>
  # __i$_M_node_97 = PHI <__i$_M_node_36(11), __i$_M_node_121(10)>
  # DEBUG __y => __i$_M_node_173
  # DEBUG __x => __i$_M_node_97
  # DEBUG __x => __i$_M_node_97
  # DEBUG __x => __i$_M_node_97
  # DEBUG this => __i$_M_node_97
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_97]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#332 => &MEM[(const struct pair &)__i$_M_node_97 + 32].first
  # DEBUG D#333 => &D#334->_M_impl._M_key_compare
  # DEBUG D#95 => D#333
  _27 = MEM[(const int &)__i$_M_node_97 + 32];
  # DEBUG D#96 => D#332
  # DEBUG D#97 => &out
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (out.136_7 <= _27)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # DEBUG __y => __i$_M_node_97
  __i$_M_node_26 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_97 + 16B];
  # DEBUG D#171 => __i$_M_node_97
  # DEBUG __x => D#171
  # DEBUG __x => NULL
  goto <bb 9>;

  <bb 14>:
  __i$_M_node_22 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_97 + 24B];
  # DEBUG D#172 => __i$_M_node_97
  # DEBUG __x => D#172
  # DEBUG __x => NULL
  goto <bb 9>;

  <bb 15>:
  # __i$_M_node_111 = PHI <__i$_M_node_120(9)>

  <bb 60>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_111
  # DEBUG __j$_M_node => __i$_M_node_111
  # DEBUG this => D#345
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_37
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__i$_M_node_37 == __i$_M_node_111)
    goto <bb 53>;
  else
    goto <bb 16>;

  <bb 16>:
  # DEBUG __x => __i$_M_node_111
  # DEBUG __x => __i$_M_node_111
  # DEBUG this => __i$_M_node_111
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_111]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#336 => &MEM[(const struct pair &)__i$_M_node_111 + 32].first
  # DEBUG D#338 => &MEM[(const struct _Rb_tree *)D#345]._M_impl._M_key_compare
  # DEBUG D#95 => D#338
  # DEBUG D#96 => &out
  _12 = MEM[(const int &)__i$_M_node_111 + 32];
  # DEBUG D#97 => D#336
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  # DEBUG D#337 => {CLOBBER}
  # DEBUG __j$_M_node => D#337
  # DEBUG this => NULL
  # DEBUG __x => NULL
  if (out.136_7 < _12)
    goto <bb 53>;
  else
    goto <bb 17>;

  <bb 17>:
  # DEBUG __y => __i$_M_node_37
  # DEBUG __x => __i$_M_node_36
  if (__i$_M_node_36 == 0B)
    goto <bb 54>;
  else
    goto <bb 20>;

  <bb 18>:
  # __i$_M_node_50 = PHI <__i$_M_node_92(22), __i$_M_node_93(23)>
  # __i$_M_node_51 = PHI <__i$_M_node_88(22), __i$_M_node_87(23)>
  # DEBUG __y => __i$_M_node_51
  # DEBUG __x => __i$_M_node_50
  if (__i$_M_node_50 == 0B)
    goto <bb 24>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 21>;

  <bb 20>:

  <bb 21>:
  # __i$_M_node_88 = PHI <__i$_M_node_36(20), __i$_M_node_50(19)>
  # __i$_M_node_87 = PHI <__i$_M_node_37(20), __i$_M_node_51(19)>
  # DEBUG __y => __i$_M_node_87
  # DEBUG __x => __i$_M_node_88
  # DEBUG __x => __i$_M_node_88
  # DEBUG __x => __i$_M_node_88
  # DEBUG this => __i$_M_node_88
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_88]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#346 => &MEM[(const struct pair &)__i$_M_node_88 + 32].first
  # DEBUG D#347 => &D#348->_M_impl._M_key_compare
  # DEBUG D#95 => D#347
  _90 = MEM[(const int &)__i$_M_node_88 + 32];
  # DEBUG D#96 => D#346
  # DEBUG D#97 => &out
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (out.136_7 <= _90)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG __y => __i$_M_node_88
  __i$_M_node_92 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_88 + 16B];
  # DEBUG D#108 => __i$_M_node_88
  # DEBUG __x => D#108
  # DEBUG __x => NULL
  goto <bb 18>;

  <bb 23>:
  __i$_M_node_93 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_88 + 24B];
  # DEBUG D#107 => __i$_M_node_88
  # DEBUG __x => D#107
  # DEBUG __x => NULL
  goto <bb 18>;

  <bb 24>:
  # __i$_M_node_119 = PHI <__i$_M_node_51(18)>

  <bb 59>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_119
  # DEBUG __i$_M_node => __i$_M_node_119
  # DEBUG this => _53
  # DEBUG D#176 => &_53->_M_t
  # DEBUG this => D#176
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_37
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_37 == __i$_M_node_119)
    goto <bb 54>;
  else
    goto <bb 25>;

  <bb 25>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_119
  # DEBUG D#753 => &MEM[(struct _Rb_tree_node *)__i$_M_node_119]._M_value_field
  # DEBUG __r => D#753
  # DEBUG D#754 => &MEM[(struct pair &)__i$_M_node_119 + 32].first
  # DEBUG D#131 => _53
  # DEBUG this => D#131
  # DEBUG D#130 => D#131
  # DEBUG D#129 => &D#130->_M_t
  # DEBUG D#128 => D#129
  # DEBUG this => D#128
  # DEBUG D#96 => &out
  _96 = MEM[(const int &)__i$_M_node_119 + 32];
  # DEBUG D#97 => D#754
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (out.136_7 < _96)
    goto <bb 54>;
  else
    goto <bb 26>;

  <bb 26>:
  # __i$_M_node_101 = PHI <__i$_M_node_119(25), __i$_M_node_100(54)>
  # DEBUG __i$_M_node => __i$_M_node_101
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_101
  # DEBUG D#755 => &MEM[(struct _Rb_tree_node *)__i$_M_node_101]._M_value_field
  # DEBUG __r => D#755
  # DEBUG D#757 => {CLOBBER}
  # DEBUG __i$_M_node => D#757
  _15 = MEM[(struct mapped_type &)__i$_M_node_101 + 36].label;
  if (_15 != label_16(D))
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __assert_fail ("_in_req[in][out].label == label", "allocators/allocator.cpp", 354, &__PRETTY_FUNCTION__);

  <bb 28>:
  in.135_17 = in;
  _18 = (long unsigned int) in.135_17;
  # DEBUG D#782 => &this_5(D)->_in_req
  _45 = MEM[(struct map * *)this_5(D) + 256B];
  # DEBUG D#85 => D#782
  # DEBUG __n => _18
  # DEBUG this => D#85
  _58 = _18 * 48;
  _59 = _45 + _58;
  # DEBUG this => NULL
  # DEBUG __x => &out
  _57 = &_59->_M_t;
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::erase (_57, &out);
  in.135_19 = in;
  _20 = (long unsigned int) in.135_19;
  # DEBUG D#783 => &this_5(D)->_in_req
  _46 = MEM[(struct map * *)this_5(D) + 256B];
  # DEBUG D#85 => D#783
  # DEBUG __n => _20
  # DEBUG this => D#85
  _55 = _20 * 48;
  _56 = _46 + _55;
  # DEBUG this => NULL
  _54 = MEM[(long unsigned int *)_56 + 40B];
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  if (_54 == 0)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#784 => &this_5(D)->_in_occ
  # DEBUG this => D#784
  # DEBUG __x => &in
  _60 = &MEM[(struct set *)this_5(D) + 160B]._M_t;
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::erase (_60, &in);

  <bb 30>:
  out.136_24 = out;
  _25 = (long unsigned int) out.136_24;
  # DEBUG D#785 => &this_5(D)->_out_req
  _47 = MEM[(struct map * *)this_5(D) + 280B];
  # DEBUG D#85 => D#785
  # DEBUG __n => _25
  # DEBUG this => D#85
  _74 = _25 * 48;
  _75 = _47 + _74;
  # DEBUG this => NULL
  # DEBUG __x => &in
  # DEBUG this => D#344
  __i$_M_node_23 = &MEM[(const struct _Rb_tree *)_75]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_23
  # DEBUG this => D#345
  # DEBUG __k => &in
  # DEBUG this => D#345
  __i$_M_node_61 = MEM[(struct _Rb_tree_node_base * *)_75 + 16B];
  # DEBUG D#110 => D#345
  # DEBUG this => D#110
  # DEBUG D#335 => D#345
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &in
  # DEBUG __y => __i$_M_node_23
  # DEBUG __x => __i$_M_node_61
  if (__i$_M_node_61 == 0B)
    goto <bb 55>;
  else
    goto <bb 31>;

  <bb 31>:
  pretmp_13 = in;
  goto <bb 34>;

  <bb 32>:
  # __i$_M_node_104 = PHI <__i$_M_node_66(36), __i$_M_node_65(35)>
  # __i$_M_node_103 = PHI <__i$_M_node_70(36), __i$_M_node_71(35)>
  # DEBUG __y => __i$_M_node_103
  # DEBUG __x => __i$_M_node_104
  if (__i$_M_node_104 == 0B)
    goto <bb 37>;
  else
    goto <bb 33>;

  <bb 33>:

  <bb 34>:
  # __i$_M_node_71 = PHI <__i$_M_node_61(31), __i$_M_node_104(33)>
  # __i$_M_node_70 = PHI <__i$_M_node_23(31), __i$_M_node_103(33)>
  # DEBUG __y => __i$_M_node_70
  # DEBUG __x => __i$_M_node_71
  # DEBUG __x => __i$_M_node_71
  # DEBUG __x => __i$_M_node_71
  # DEBUG this => __i$_M_node_71
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_71]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#332 => &MEM[(const struct pair &)__i$_M_node_71 + 32].first
  # DEBUG D#333 => &D#334->_M_impl._M_key_compare
  # DEBUG D#95 => D#333
  _63 = MEM[(const int &)__i$_M_node_71 + 32];
  # DEBUG D#96 => D#332
  # DEBUG D#97 => &in
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (pretmp_13 <= _63)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG __y => __i$_M_node_71
  __i$_M_node_65 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_71 + 16B];
  # DEBUG D#171 => __i$_M_node_71
  # DEBUG __x => D#171
  # DEBUG __x => NULL
  goto <bb 32>;

  <bb 36>:
  __i$_M_node_66 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_71 + 24B];
  # DEBUG D#172 => __i$_M_node_71
  # DEBUG __x => D#172
  # DEBUG __x => NULL
  goto <bb 32>;

  <bb 37>:
  # __i$_M_node_112 = PHI <__i$_M_node_103(32)>

  <bb 58>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_112
  # DEBUG __j$_M_node => __i$_M_node_112
  # DEBUG this => D#345
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_23
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__i$_M_node_23 == __i$_M_node_112)
    goto <bb 55>;
  else
    goto <bb 38>;

  <bb 38>:
  # DEBUG __x => __i$_M_node_112
  # DEBUG __x => __i$_M_node_112
  # DEBUG this => __i$_M_node_112
  # DEBUG D#174 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_112]._M_value_field
  # DEBUG __r => D#174
  # DEBUG __x => D#174
  # DEBUG this => D#173
  # DEBUG D#336 => &MEM[(const struct pair &)__i$_M_node_112 + 32].first
  # DEBUG D#338 => &MEM[(const struct _Rb_tree *)D#345]._M_impl._M_key_compare
  # DEBUG D#95 => D#338
  # DEBUG D#96 => &in
  _69 = MEM[(const int &)__i$_M_node_112 + 32];
  # DEBUG D#97 => D#336
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (pretmp_13 < _69)
    goto <bb 55>;
  else
    goto <bb 39>;

  <bb 39>:
  # DEBUG __y => __i$_M_node_23
  # DEBUG __x => __i$_M_node_61
  if (__i$_M_node_61 == 0B)
    goto <bb 56>;
  else
    goto <bb 42>;

  <bb 40>:
  # __i$_M_node_72 = PHI <__i$_M_node_109(44), __i$_M_node_110(45)>
  # __i$_M_node_73 = PHI <__i$_M_node_91(44), __i$_M_node_146(45)>
  # DEBUG __y => __i$_M_node_73
  # DEBUG __x => __i$_M_node_72
  if (__i$_M_node_72 == 0B)
    goto <bb 46>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 43>;

  <bb 42>:

  <bb 43>:
  # __i$_M_node_91 = PHI <__i$_M_node_61(42), __i$_M_node_72(41)>
  # __i$_M_node_146 = PHI <__i$_M_node_23(42), __i$_M_node_73(41)>
  # DEBUG __y => __i$_M_node_146
  # DEBUG __x => __i$_M_node_91
  # DEBUG __x => __i$_M_node_91
  # DEBUG __x => __i$_M_node_91
  # DEBUG this => __i$_M_node_91
  # DEBUG D#331 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_91]._M_value_field
  # DEBUG __r => D#331
  # DEBUG __x => D#331
  # DEBUG this => D#173
  # DEBUG D#346 => &MEM[(const struct pair &)__i$_M_node_91 + 32].first
  # DEBUG D#347 => &D#348->_M_impl._M_key_compare
  # DEBUG D#95 => D#347
  _107 = MEM[(const int &)__i$_M_node_91 + 32];
  # DEBUG D#96 => D#346
  # DEBUG D#97 => &in
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (pretmp_13 <= _107)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # DEBUG __y => __i$_M_node_91
  __i$_M_node_109 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_91 + 16B];
  # DEBUG D#108 => __i$_M_node_91
  # DEBUG __x => D#108
  # DEBUG __x => NULL
  goto <bb 40>;

  <bb 45>:
  __i$_M_node_110 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_91 + 24B];
  # DEBUG D#107 => __i$_M_node_91
  # DEBUG __x => D#107
  # DEBUG __x => NULL
  goto <bb 40>;

  <bb 46>:
  # __i$_M_node_115 = PHI <__i$_M_node_73(40)>

  <bb 57>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_115
  # DEBUG __i$_M_node => __i$_M_node_115
  # DEBUG this => _75
  # DEBUG D#176 => &_75->_M_t
  # DEBUG this => D#176
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_23
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_23 == __i$_M_node_115)
    goto <bb 56>;
  else
    goto <bb 47>;

  <bb 47>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_115
  # DEBUG D#753 => &MEM[(struct _Rb_tree_node *)__i$_M_node_115]._M_value_field
  # DEBUG __r => D#753
  # DEBUG D#754 => &MEM[(struct pair &)__i$_M_node_115 + 32].first
  # DEBUG D#131 => _75
  # DEBUG this => D#131
  # DEBUG D#130 => D#131
  # DEBUG D#129 => &D#130->_M_t
  # DEBUG D#128 => D#129
  # DEBUG this => D#128
  # DEBUG D#96 => &in
  _113 = MEM[(const int &)__i$_M_node_115 + 32];
  # DEBUG D#97 => D#754
  # DEBUG this => D#95
  # DEBUG __x => D#96
  # DEBUG __y => D#97
  if (pretmp_13 < _113)
    goto <bb 56>;
  else
    goto <bb 48>;

  <bb 48>:
  # __i$_M_node_118 = PHI <__i$_M_node_115(47), __i$_M_node_117(56)>
  # DEBUG __i$_M_node => __i$_M_node_118
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_118
  # DEBUG D#755 => &MEM[(struct _Rb_tree_node *)__i$_M_node_118]._M_value_field
  # DEBUG __r => D#755
  # DEBUG D#757 => {CLOBBER}
  # DEBUG __i$_M_node => D#757
  _30 = MEM[(struct mapped_type &)__i$_M_node_118 + 36].label;
  if (_15 != _30)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  __assert_fail ("_out_req[out][in].label == label", "allocators/allocator.cpp", 365, &__PRETTY_FUNCTION__);

  <bb 50>:
  out.136_31 = out;
  _32 = (long unsigned int) out.136_31;
  # DEBUG D#787 => &this_5(D)->_out_req
  _48 = MEM[(struct map * *)this_5(D) + 280B];
  # DEBUG D#85 => D#787
  # DEBUG __n => _32
  # DEBUG this => D#85
  _80 = _32 * 48;
  _81 = _48 + _80;
  # DEBUG this => NULL
  # DEBUG __x => &in
  _79 = &_81->_M_t;
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::erase (_79, &in);
  out.136_34 = out;
  _35 = (long unsigned int) out.136_34;
  # DEBUG D#788 => &this_5(D)->_out_req
  _49 = MEM[(struct map * *)this_5(D) + 280B];
  # DEBUG D#85 => D#788
  # DEBUG __n => _35
  # DEBUG this => D#85
  _77 = _35 * 48;
  _78 = _49 + _77;
  # DEBUG this => NULL
  _76 = MEM[(long unsigned int *)_78 + 40B];
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  if (_76 == 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG D#789 => &this_5(D)->_out_occ
  # DEBUG this => D#789
  # DEBUG __x => &out
  _82 = &MEM[(struct set *)this_5(D) + 208B]._M_t;
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::erase (_82, &out);

  <bb 52>:

  <bb 61>:
  return;

  <bb 53>:
  # DEBUG D#337 => {CLOBBER}
  # DEBUG __j$_M_node => D#337
  # DEBUG this => NULL
  # DEBUG __x => NULL
  __assert_fail ("_in_req[in].count( out ) > 0", "allocators/allocator.cpp", 353, &__PRETTY_FUNCTION__);

  <bb 54>:
  # __i$_M_node_21 = PHI <__i$_M_node_119(25), __i$_M_node_119(59), __i$_M_node_37(17)>
  # DEBUG this => &D.64940
  # DEBUG __a => &out
  # DEBUG __b => NULL
  D.64940.first = out.136_7;
  MEM[(struct pair *)&D.64940 + 4B] = 0;
  MEM[(struct pair *)&D.64940 + 8B] = 0;
  MEM[(struct pair *)&D.64940 + 12B] = 0;
  MEM[(struct pair *)&D.64940 + 16B] = 0;
  # DEBUG this => _53
  # DEBUG __position$_M_node => __i$_M_node_21
  # DEBUG __x => &D.64940
  # DEBUG this => NULL
  # DEBUG __it => &__position
  _99 = &_53->_M_t;
  # DEBUG this => _99
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_21;
  # DEBUG __x => &D.64940
  # DEBUG this => &__an
  # DEBUG __t => _99
  # DEBUG __an$_M_t => _99
  # DEBUG D#752 => &__an
  D.64939 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE17_M_insert_unique_INSA_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_ERKS4_RT_.isra.197.constprop (_99, __pos, &D.64940);
  __i$_M_node_100 = MEM[(struct _Rb_tree_iterator *)&D.64939];
  # DEBUG __i$_M_node => __i$_M_node_100
  D.64940 ={v} {CLOBBER};
  goto <bb 26>;

  <bb 55>:
  # DEBUG D#337 => {CLOBBER}
  # DEBUG __j$_M_node => D#337
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG D#337 => {CLOBBER}
  # DEBUG __j$_M_node => D#337
  # DEBUG this => NULL
  # DEBUG __x => NULL
  __assert_fail ("_out_req[out].count( in ) > 0", "allocators/allocator.cpp", 364, &__PRETTY_FUNCTION__);

  <bb 56>:
  # __i$_M_node_33 = PHI <__i$_M_node_115(47), __i$_M_node_115(57), __i$_M_node_23(39)>
  # DEBUG this => &D.64967
  # DEBUG __a => &in
  # DEBUG __b => NULL
  D.64967.first = pretmp_13;
  MEM[(struct pair *)&D.64967 + 4B] = 0;
  MEM[(struct pair *)&D.64967 + 8B] = 0;
  MEM[(struct pair *)&D.64967 + 12B] = 0;
  MEM[(struct pair *)&D.64967 + 16B] = 0;
  # DEBUG this => _75
  # DEBUG __position$_M_node => __i$_M_node_33
  # DEBUG __x => &D.64967
  # DEBUG this => NULL
  # DEBUG __it => &__position
  _116 = &_75->_M_t;
  # DEBUG this => _116
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_33;
  # DEBUG __x => &D.64967
  # DEBUG this => &__an
  # DEBUG __t => _116
  # DEBUG __an$_M_t => _116
  # DEBUG D#752 => &__an
  D.64966 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE17_M_insert_unique_INSA_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_ERKS4_RT_.isra.197.constprop (_116, __pos, &D.64967);
  __i$_M_node_117 = MEM[(struct _Rb_tree_iterator *)&D.64966];
  # DEBUG __i$_M_node => __i$_M_node_117
  D.64967 ={v} {CLOBBER};
  goto <bb 48>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=2106, decl_uid=35297, cgraph_uid=776, symbol_order=777)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.65020;
  const size_type __len;
  size_type D.65019;
  size_type __n;
  int * D.65010;
  const ptrdiff_t _Num;
  int * D.65001;
  int * const __position;
  int * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  int * __first;
  long unsigned int __n;
  int * __first;
  const ptrdiff_t _Num;
  int * __first;
  int * __new_finish;
  const size_type __elems_after;
  value_type __x_copy;
  int * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  int * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  int * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  int * _41;
  int * _43;
  long int _47;
  int * _48;
  long int __first.7_49;
  int * _53;
  const int _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  int * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  int * _108;
  int * _112;
  int * iftmp.12_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  int * prephitmp_146;
  int * pretmp_147;
  int * prephitmp_148;
  int * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  int * pretmp_166;
  int * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  int * pretmp_173;
  int * prephitmp_174;

  <bb 2>:
  # DEBUG D#941 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#941
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.35374._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.35374._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 4;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#100 => &this_4(D)->D.35374._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#100
  # DEBUG __lhs => &D.44972
  # DEBUG __rhs => &__position
  # DEBUG this => &D.44972
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 4;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#696 => &this_4(D)->D.35374
  # DEBUG this => D#696
  _39 = __n_2(D) * 4;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#688
  # DEBUG D#687 => D#688
  # DEBUG D#686 => D#687
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.60711 => D#686
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.7_49 = (long int) _41;
  _47 = _8 - __first.7_49;
  _Num_45 = _47 /[ex] 4;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.35374._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.35374._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#941
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG __first => D#941
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG __first => D#941
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#941
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.7_49 - _27;
  _Num_105 = _104 /[ex] 4;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#365 => &__x_copy
  # DEBUG __first => D#941
  # DEBUG __last => _48
  # DEBUG D#364 => D#365
  # DEBUG __value => D#364
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG D#251 => D#364
  # DEBUG __first => D#941
  # DEBUG __last => _48
  # DEBUG __value => D#251
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#941
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 4;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#697 => &this_4(D)->D.35374
  # DEBUG this => D#697
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#373 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#372 => D#373
  # DEBUG __x => D#372
  # DEBUG D.60796 => D#374
  # DEBUG D#371 => D#372
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#370 => D#371
  # DEBUG __x => D#370
  # DEBUG __assignable => 1
  # DEBUG D#369 => D#370
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#368 => D#369
  # DEBUG __x => D#368
  # DEBUG D#367 => D#368
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#258 => D#366
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#258
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 4;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 4;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.35374._M_impl._M_finish = __first_125;
  # DEBUG D#698 => &this_4(D)->D.35374
  # DEBUG this => D#698
  # DEBUG this => &__position
  # DEBUG __first => D#941
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#688
  # DEBUG D#687 => D#688
  # DEBUG D#686 => D#687
  # DEBUG __first => D#941
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.60758 => D#686
  # DEBUG __first => D#941
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#941
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#941
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG __first => D#941
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG __first => D#941
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#941
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.35374._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.35374._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#365 => &__x_copy
  # DEBUG __first => D#941
  # DEBUG __last => __first_7
  # DEBUG D#364 => D#365
  # DEBUG __value => D#364
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG D#251 => D#364
  # DEBUG __first => D#941
  # DEBUG __last => __first_7
  # DEBUG __value => D#251
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#941
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 4;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#489 => this_4(D)
  # DEBUG this => D#489
  # DEBUG D#488 => D#489
  # DEBUG D#487 => &D#488->D.35374
  # DEBUG this => D#487
  # DEBUG __a => D#486
  # DEBUG D#485 => D#486
  # DEBUG D#484 => D#485
  # DEBUG this => D#484
  _17 = MEM[(int * *)this_4(D)];
  # DEBUG D#87 => this_4(D)
  # DEBUG D#87 => this_4(D)
  # DEBUG this => D#87
  # DEBUG this => D#87
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 4;
  _119 = (const long unsigned int) _118;
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#87 => this_4(D)
  # DEBUG D#87 => this_4(D)
  # DEBUG this => D#87
  # DEBUG this => D#87
  # DEBUG D#87 => this_4(D)
  # DEBUG D#87 => this_4(D)
  # DEBUG this => D#87
  # DEBUG this => D#87
  # DEBUG __a => &D.65020
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#87 => this_4(D)
  # DEBUG D#87 => this_4(D)
  # DEBUG this => D#87
  # DEBUG this => D#87
  # DEBUG D#489 => this_4(D)
  # DEBUG this => D#489
  # DEBUG D#488 => D#489
  # DEBUG D#487 => &D#488->D.35374
  # DEBUG this => D#487
  # DEBUG __a => D#486
  # DEBUG D#485 => D#486
  # DEBUG D#484 => D#485
  # DEBUG this => D#484
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 4;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551612(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#156 => &this_4(D)->D.35374._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#156
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45005
  # DEBUG this => &__position
  # DEBUG this => &D.45005
  # DEBUG D#709 => _157 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#709
  # DEBUG D#708 => &this_4(D)->D.35374
  # DEBUG D#497 => D#708
  # DEBUG __n => NULL
  # DEBUG this => D#497
  # DEBUG D#496 => D#497
  # DEBUG D#495 => &D#496->_M_impl
  # DEBUG D#494 => D#495
  # DEBUG __n => NULL
  # DEBUG __a => D#494
  # DEBUG D#493 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#492 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#491
  # DEBUG D.65008 => D#492
  # DEBUG D#490 => D#491
  # DEBUG D#484 => D#490
  # DEBUG this => D#484
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.35374._M_impl._M_start;
  pretmp_147 = this_4(D)->D.35374._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.12_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#692 => &this_4(D)->D.35374
  # DEBUG this => D#692
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.12_113 + _19;
  _56 = MEM[(const int &)__x_21(D)];
  # DEBUG D#373 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#372 => D#373
  # DEBUG __x => D#372
  # DEBUG D.60913 => D#374
  # DEBUG D#371 => D#372
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#370 => D#371
  # DEBUG __x => D#370
  # DEBUG __assignable => 1
  # DEBUG D#369 => D#370
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#368 => D#369
  # DEBUG __x => D#368
  # DEBUG D#367 => D#368
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#258 => D#366
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#258
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 4;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#693 => &this_4(D)->D.35374
  # DEBUG this => D#693
  # DEBUG this => &__position
  # DEBUG D#940 => this_4(D)->D.35374._M_impl._M_start
  # DEBUG __first => D#940
  # DEBUG __last => D#941
  # DEBUG __result => NULL
  # DEBUG __alloc => D#690
  # DEBUG D#689 => D#690
  # DEBUG D#686 => D#689
  # DEBUG __first => D#940
  # DEBUG __last => D#941
  # DEBUG __result => NULL
  # DEBUG D.60875 => D#686
  # DEBUG __first => D#940
  # DEBUG __last => D#941
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#940
  # DEBUG __last => D#941
  # DEBUG __result => NULL
  # DEBUG __first => D#940
  # DEBUG __last => D#941
  # DEBUG __result => NULL
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG __it => D#940
  # DEBUG __it => D#940
  # DEBUG __first => D#940
  # DEBUG __last => D#941
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG __it => D#940
  # DEBUG __it => D#940
  # DEBUG __first => D#940
  # DEBUG __last => D#941
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#940
  # DEBUG __last => D#941
  # DEBUG __result => NULL
  # DEBUG D#939 => (long int) D#940
  # DEBUG D#938 => _158 - D#939
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.12_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#937 => (long unsigned int) D#938
  # DEBUG __new_finish => iftmp.12_113 + D#937
  _25 = __n_2(D) * 4;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.12_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#694 => &this_4(D)->D.35374
  # DEBUG this => D#694
  # DEBUG D#936 => this_4(D)->D.35374._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#941
  # DEBUG __last => D#936
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#690
  # DEBUG D#689 => D#690
  # DEBUG D#686 => D#689
  # DEBUG __first => D#941
  # DEBUG __last => D#936
  # DEBUG __result => __new_finish_26
  # DEBUG D.60836 => D#686
  # DEBUG __first => D#941
  # DEBUG __last => D#936
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#941
  # DEBUG __last => D#936
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#941
  # DEBUG __last => D#936
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#936
  # DEBUG __it => D#936
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG __first => D#941
  # DEBUG __last => D#936
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#936
  # DEBUG __it => D#936
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG __first => D#941
  # DEBUG __last => D#936
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#941
  # DEBUG __last => D#936
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 4;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#695 => &this_4(D)->D.35374
  # DEBUG this => D#695
  # DEBUG D#707 => this_4(D)->D.35374._M_impl._M_finish
  # DEBUG D#706 => this_4(D)->D.35374._M_impl._M_start
  # DEBUG __first => D#706
  # DEBUG __last => D#707
  # DEBUG D.60829 => NULL
  # DEBUG D#150 => D#706
  # DEBUG D#151 => D#707
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.53050 => D#146
  # DEBUG D.53049 => D#147
  # DEBUG D#705 => this_4(D)->D.35374._M_impl._M_end_of_storage
  # DEBUG D#704 => (long int) D#705
  # DEBUG D#703 => (long int) D#940
  # DEBUG D#702 => D#704 - D#703
  # DEBUG D#701 => D#702 /[ex] 4
  # DEBUG D#700 => (long unsigned int) D#701
  # DEBUG D#699 => &this_4(D)->D.35374
  # DEBUG this => D#699
  # DEBUG __p => D#940
  # DEBUG __n => D#700
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#237 => &D#699->_M_impl
  # DEBUG D#235 => D#237
  # DEBUG D#236 => D#700
  # DEBUG __p => D#940
  # DEBUG __a => D#235
  # DEBUG __n => D#236
  # DEBUG D#234 => D#236
  # DEBUG D#233 => D#235
  # DEBUG D#231 => D#233
  # DEBUG D#232 => D#234
  # DEBUG __p => D#940
  # DEBUG this => D#231
  # DEBUG D.60825 => D#232
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.35374._M_impl._M_start = iftmp.12_113;
  this_4(D)->D.35374._M_impl._M_finish = _70;
  this_4(D)->D.35374._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#156 => &this_4(D)->D.35374._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#156
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45005
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.45005
  _143 = _144 - _116;
  # DEBUG D#709 => _143 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#709
  # DEBUG D#708 => &this_4(D)->D.35374
  # DEBUG D#497 => D#708
  # DEBUG __n => NULL
  # DEBUG this => D#497
  # DEBUG D#496 => D#497
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#156 => &this_4(D)->D.35374._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#156
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45005
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.45005
  _150 = _151 - _116;
  # DEBUG D#709 => _150 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#709
  # DEBUG D#708 => &this_4(D)->D.35374
  # DEBUG D#497 => D#708
  # DEBUG __n => NULL
  # DEBUG this => D#497
  # DEBUG D#496 => D#497
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_assign(std::size_t, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi, funcdef_no=2107, decl_uid=35237, cgraph_uid=777, symbol_order=778)

Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_assign(std::size_t, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, size_t __n, const value_type & __val)
{
  int * D.65390;
  int * __first;
  size_type __n;
  int * __tmp;
  int * __tmp;
  int * __tmp;
  struct vector __tmp;
  int * __first;
  int * __first;
  int * __first;
  long unsigned int __n;
  long int _3;
  long int _5;
  long int _9;
  int * const _14;
  const int _15;
  const int _17;
  long int _18;
  size_type _19;
  long int _21;
  long int _22;
  long int _23;
  size_type _24;
  int * pretmp_25;
  int * prephitmp_26;
  int * _31;
  long unsigned int _42;
  long unsigned int _46;
  int * _51;
  const int _52;
  long unsigned int _55;
  int * _56;
  int * _76;
  const int pretmp_80;
  const int prephitmp_81;
  long unsigned int _83;
  long unsigned int _98;

  <bb 2>:
  __first_13 = MEM[(int * *)this_2(D)];
  # DEBUG D#157 => this_2(D)
  _14 = MEM[(int * *)this_2(D) + 16B];
  # DEBUG D#157 => this_2(D)
  # DEBUG this => D#157
  # DEBUG this => D#157
  _9 = (long int) _14;
  _5 = (long int) __first_13;
  _3 = _9 - _5;
  _18 = _3 /[ex] 4;
  _19 = (size_type) _18;
  if (__n_4(D) > _19)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 3>:
  # DEBUG this => this_2(D)
  # DEBUG __n => __n_4(D)
  # DEBUG __val => __val_6(D)
  # DEBUG D#532 => &this_2(D)->D.35374
  # DEBUG this => D#532
  # DEBUG D#1007 => &MEM[(struct _Vector_base *)this_2(D)]._M_impl
  # DEBUG this => &__tmp
  # DEBUG __n => __n_4(D)
  # DEBUG __value => __val_6(D)
  # DEBUG __a => D#1007
  # DEBUG D#531 => &__tmp.D.35374
  # DEBUG this => D#531
  # DEBUG __n => __n_4(D)
  # DEBUG __a => D#1007
  # DEBUG D#530 => &D#531->_M_impl
  # DEBUG this => D#530
  # DEBUG __a => D#1007
  # DEBUG this => D#530
  # DEBUG __a => D#1007
  # DEBUG this => D#530
  # DEBUG D.57426 => D#1007
  # DEBUG this => D#531
  # DEBUG __n => __n_4(D)
  # DEBUG D#497 => D#531
  # DEBUG __n => __n_4(D)
  # DEBUG this => D#497
  # DEBUG D#496 => D#497
  if (__n_4(D) != 0)
    goto <bb 4>;
  else
    goto <bb 30>;

  <bb 4>:
  # DEBUG D#495 => &D#496->_M_impl
  # DEBUG D#494 => D#495
  # DEBUG __n => __n_4(D)
  # DEBUG __a => D#494
  # DEBUG D#493 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#492 => 0B
  # DEBUG __n => __n_4(D)
  # DEBUG this => D#491
  # DEBUG D.65388 => D#492
  # DEBUG D#490 => D#491
  # DEBUG D#484 => D#490
  # DEBUG this => D#484
  if (__n_4(D) > 4611686018427387903)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::__throw_bad_alloc ();

  <bb 6>:
  _55 = __n_4(D) * 4;
  _56 = operator new (_55);
  _51 = _56 + _55;
  # DEBUG D#378 => &__tmp
  # DEBUG D#378 => &__tmp
  _52 = MEM[(const int &)__val_6(D)];
  # DEBUG D#379 => __val_6(D)
  # DEBUG __n => __n_4(D)
  # DEBUG D#376 => D#378
  # DEBUG this => D#376
  # DEBUG this => D#378
  # DEBUG D#377 => D#379
  # DEBUG __value => D#377
  # DEBUG D#375 => &D#376->D.35374
  # DEBUG this => D#375
  # DEBUG D#373 => D#377
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#372 => D#373
  # DEBUG __x => D#372
  # DEBUG D.65363 => D#374
  # DEBUG D#371 => D#372
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#370 => D#371
  # DEBUG __x => D#370
  # DEBUG __assignable => 1
  # DEBUG D#369 => D#370
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#368 => D#369
  # DEBUG __x => D#368
  # DEBUG D#367 => D#368
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#258 => D#366
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG __value => D#258
  # DEBUG __tmp => _52
  # DEBUG __niter => __n_4(D)
  # DEBUG __niter => __n_4(D)
  # DEBUG __first => _56
  # DEBUG D#378 => &__tmp
  # DEBUG D#379 => __val_6(D)
  # DEBUG __n => __n_4(D)
  # DEBUG D#376 => D#378
  # DEBUG this => D#376
  # DEBUG this => D#378
  # DEBUG D#377 => D#379
  # DEBUG __value => D#377
  # DEBUG D#375 => &D#376->D.35374
  # DEBUG this => D#375
  # DEBUG D#373 => D#377
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#372 => D#373
  # DEBUG __x => D#372
  # DEBUG D.65363 => D#374
  # DEBUG D#371 => D#372
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#370 => D#371
  # DEBUG __x => D#370
  # DEBUG __assignable => 1
  # DEBUG D#369 => D#370
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#368 => D#369
  # DEBUG __x => D#368
  # DEBUG D#367 => D#368
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#258 => D#366
  # DEBUG __n => __n_4(D)
  # DEBUG __value => D#258
  # DEBUG __tmp => _52
  # DEBUG __niter => __n_4(D)
  # DEBUG __first => _56

  <bb 7>:
  # __n_71 = PHI <__n_4(D)(6), __n_53(8)>
  # __first_72 = PHI <_56(6), __first_54(8)>
  # DEBUG __niter => __n_71
  # DEBUG __first => __first_72
  *__first_72 = _52;
  __n_53 = __n_71 + 18446744073709551615;
  # DEBUG __niter => __n_53
  __first_54 = __first_72 + 4;
  # DEBUG __first => __first_54
  # DEBUG __niter => __n_53
  # DEBUG __first => __first_54
  if (__n_53 == 0)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 31>:
  _42 = __n_4(D) * 4;
  __first_16 = _56 + _42;
  pretmp_25 = MEM[(int * &)this_2(D)];

  <bb 10>:
  # __first_45 = PHI <__first_16(31), 0B(30)>
  # _31 = PHI <_51(31), _76(30)>
  # __first_8 = PHI <_56(31), 0B(30)>
  # prephitmp_26 = PHI <pretmp_25(31), __first_13(30)>
  # DEBUG D#534 => &this_2(D)->D.35374._M_impl
  # DEBUG this => &__tmp.D.35374._M_impl
  # DEBUG __x => D#534
  # DEBUG D#257 => &D#534->_M_start
  # DEBUG D#256 => &MEM[(struct _Vector_impl *)&__tmp]._M_start
  # DEBUG __a => D#256
  # DEBUG __b => D#257
  # DEBUG __tmp => __first_8
  # DEBUG D#1010 => MEM[(int * &)this_2(D)]
  MEM[(int * &)this_2(D)] = __first_8;
  # DEBUG D#255 => &D#534->_M_finish
  # DEBUG D#254 => &MEM[(struct _Vector_impl *)&__tmp]._M_finish
  # DEBUG __a => D#254
  # DEBUG __b => D#255
  # DEBUG __tmp => __first_45
  MEM[(int * &)this_2(D) + 8] = __first_45;
  # DEBUG D#253 => &D#534->_M_end_of_storage
  # DEBUG D#252 => &MEM[(struct _Vector_impl *)&__tmp]._M_end_of_storage
  # DEBUG __a => D#252
  # DEBUG __b => D#253
  # DEBUG __tmp => _31
  MEM[(int * &)this_2(D) + 16] = _31;
  # DEBUG this => &__tmp
  # DEBUG D#245 => &__tmp.D.35374
  # DEBUG this => D#245
  # DEBUG D#248 => __tmp.D.35374._M_impl._M_finish
  # DEBUG D#247 => __tmp.D.35374._M_impl._M_start
  # DEBUG __first => D#247
  # DEBUG __last => D#248
  # DEBUG D.53652 => NULL
  # DEBUG D#150 => D#247
  # DEBUG D#151 => D#248
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.53050 => D#146
  # DEBUG D.53049 => D#147
  # DEBUG D#246 => &__tmp.D.35374
  # DEBUG this => D#246
  # DEBUG D#244 => D#246->_M_impl._M_end_of_storage
  # DEBUG D#243 => (long int) D#244
  # DEBUG D#242 => (long int) D#1010
  # DEBUG D#241 => D#243 - D#242
  # DEBUG D#240 => D#241 /[ex] 4
  # DEBUG D#239 => (long unsigned int) D#240
  # DEBUG this => D#246
  # DEBUG __p => D#1010
  # DEBUG __n => D#239
  if (prephitmp_26 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#237 => &D#246->_M_impl
  # DEBUG D#235 => D#237
  # DEBUG D#236 => D#239
  # DEBUG __p => D#1010
  # DEBUG __a => D#235
  # DEBUG __n => D#236
  # DEBUG D#234 => D#236
  # DEBUG D#233 => D#235
  # DEBUG D#231 => D#233
  # DEBUG D#232 => D#234
  # DEBUG __p => D#1010
  # DEBUG this => D#231
  # DEBUG D.65320 => D#232
  operator delete (prephitmp_26);

  <bb 12>:
  # DEBUG D#238 => &D#246->_M_impl
  # DEBUG this => D#238
  # DEBUG this => D#238
  # DEBUG this => D#238
  __tmp ={v} {CLOBBER};
  goto <bb 29>;

  <bb 13>:
  # DEBUG D#87 => this_2(D)
  __first_12 = MEM[(int * *)this_2(D) + 8B];
  # DEBUG D#87 => this_2(D)
  # DEBUG this => D#87
  # DEBUG this => D#87
  _21 = (long int) __first_12;
  _22 = _21 - _5;
  _23 = _22 /[ex] 4;
  _24 = (size_type) _23;
  if (__n_4(D) > _24)
    goto <bb 14>;
  else
    goto <bb 23>;

  <bb 14>:
  # DEBUG this => this_2(D)
  # DEBUG D#100 => &this_2(D)->D.35374._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#100
  # DEBUG this => this_2(D)
  # DEBUG D#156 => &this_2(D)->D.35374._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#156
  _17 = MEM[(const int &)__val_6(D)];
  # DEBUG D#381 => __val_6(D)
  # DEBUG __first => __first_13
  # DEBUG __last => __first_12
  # DEBUG D#380 => D#381
  # DEBUG __value => D#380
  # DEBUG __it => __first_12
  # DEBUG __it => __first_12
  # DEBUG this => NULL
  # DEBUG __it => __first_13
  # DEBUG __it => __first_13
  # DEBUG this => NULL
  # DEBUG D#251 => D#380
  # DEBUG __first => __first_13
  # DEBUG __last => __first_12
  # DEBUG __value => D#251
  # DEBUG __tmp => _17
  # DEBUG __first => __first_13
  if (__first_12 == __first_13)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __first_41 = PHI <__first_13(15), __first_30(17)>
  # DEBUG __first => __first_41
  *__first_41 = _17;
  __first_30 = __first_41 + 4;
  # DEBUG __first => __first_30
  # DEBUG __first => __first_30
  if (__first_12 == __first_30)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 16>;

  <bb 18>:

  <bb 33>:
  pretmp_80 = MEM[(const int &)__val_6(D)];

  <bb 19>:
  # prephitmp_81 = PHI <pretmp_80(33), _17(14)>

  <bb 35>:
  # DEBUG D#533 => &this_2(D)->D.35374
  # DEBUG this => D#533
  # DEBUG D#87 => this_2(D)
  # DEBUG D#87 => this_2(D)
  # DEBUG this => D#87
  # DEBUG this => D#87
  __n_10 = __n_4(D) - _24;
  # DEBUG D#1009 => MEM[(const int &)__val_6(D)]
  # DEBUG D#373 => __val_6(D)
  # DEBUG __first => __first_12
  # DEBUG __n => __n_10
  # DEBUG D#372 => D#373
  # DEBUG __x => D#372
  # DEBUG D.57516 => D#374
  # DEBUG D#371 => D#372
  # DEBUG __first => __first_12
  # DEBUG __n => __n_10
  # DEBUG D#370 => D#371
  # DEBUG __x => D#370
  # DEBUG __assignable => 1
  # DEBUG D#369 => D#370
  # DEBUG __first => __first_12
  # DEBUG __n => __n_10
  # DEBUG D#368 => D#369
  # DEBUG __x => D#368
  # DEBUG D#367 => D#368
  # DEBUG __first => __first_12
  # DEBUG __n => __n_10
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => __first_12
  # DEBUG __it => __first_12
  # DEBUG D#258 => D#366
  # DEBUG __first => __first_12
  # DEBUG __n => __n_10
  # DEBUG __value => D#258
  # DEBUG __tmp => D#1009
  # DEBUG __niter => __n_10
  # DEBUG __niter => __n_10
  # DEBUG __first => __first_12

  <bb 20>:
  # __n_97 = PHI <__n_27(21), __n_10(35)>
  # __first_96 = PHI <__first_28(21), __first_12(35)>
  # DEBUG __niter => __n_97
  # DEBUG __first => __first_96
  *__first_96 = prephitmp_81;
  __n_27 = __n_97 + 18446744073709551615;
  # DEBUG __niter => __n_27
  __first_28 = __first_96 + 4;
  # DEBUG __first => __first_28
  # DEBUG __niter => __n_27
  # DEBUG __first => __first_28
  if (__n_27 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 20>;

  <bb 22>:

  <bb 32>:
  _83 = __n_10 * 4;
  __first_59 = __first_12 + _83;
  this_2(D)->D.35374._M_impl._M_finish = __first_59;
  goto <bb 29>;

  <bb 23>:
  _15 = MEM[(const int &)__val_6(D)];
  # DEBUG D#367 => __val_6(D)
  # DEBUG __first => __first_13
  # DEBUG __n => __n_4(D)
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => __first_13
  # DEBUG __it => __first_13
  # DEBUG D#258 => D#366
  # DEBUG __first => __first_13
  # DEBUG __n => __n_4(D)
  # DEBUG __value => D#258
  # DEBUG __tmp => _15
  # DEBUG __niter => __n_4(D)
  # DEBUG __niter => __n_4(D)
  # DEBUG __first => __first_13
  if (__n_4(D) == 0)
    goto <bb 28>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __n_35 = PHI <__n_4(D)(24), __n_32(27)>
  # __first_61 = PHI <__first_13(24), __first_33(27)>
  # DEBUG __niter => __n_35
  # DEBUG __first => __first_61
  *__first_61 = _15;
  __n_32 = __n_35 + 18446744073709551615;
  # DEBUG __niter => __n_32
  __first_33 = __first_61 + 4;
  # DEBUG __first => __first_33
  # DEBUG __niter => __n_32
  # DEBUG __first => __first_33
  if (__n_32 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:

  <bb 34>:
  _98 = __n_4(D) * 4;
  __first_43 = __first_13 + _98;
  goto <bb 28>;

  <bb 27>:
  goto <bb 25>;

  <bb 28>:
  # __first_62 = PHI <__first_43(34), __first_13(23)>

  <bb 36>:
  # DEBUG D#155 => this_2(D)
  # DEBUG __pos => __first_62
  # DEBUG D#154 => D#155
  # DEBUG this => D#154
  # DEBUG D#152 => &D#154->D.35374
  # DEBUG this => D#152
  # DEBUG D#153 => D#154->D.35374._M_impl._M_finish
  # DEBUG __first => __first_62
  # DEBUG __last => D#153
  # DEBUG D.53066 => NULL
  # DEBUG D#150 => __first_62
  # DEBUG D#151 => D#153
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.53050 => D#146
  # DEBUG D.53049 => D#147
  MEM[(int * *)this_2(D) + 8B] = __first_62;

  <bb 29>:

  <bb 37>:
  return;

  <bb 30>:
  _46 = __n_4(D) * 4;
  _76 = (int *) _46;
  # DEBUG D#378 => &__tmp
  # DEBUG D#378 => &__tmp
  # DEBUG D#1008 => MEM[(const int &)__val_6(D)]
  # DEBUG D#379 => __val_6(D)
  # DEBUG __n => __n_4(D)
  # DEBUG D#376 => D#378
  # DEBUG this => D#376
  # DEBUG this => D#378
  # DEBUG D#377 => D#379
  # DEBUG __value => D#377
  # DEBUG D#375 => &D#376->D.35374
  # DEBUG this => D#375
  # DEBUG D#373 => D#377
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#372 => D#373
  # DEBUG __x => D#372
  # DEBUG D.65363 => D#374
  # DEBUG D#371 => D#372
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#370 => D#371
  # DEBUG __x => D#370
  # DEBUG __assignable => 1
  # DEBUG D#369 => D#370
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#368 => D#369
  # DEBUG __x => D#368
  # DEBUG D#367 => D#368
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#258 => D#366
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG __value => D#258
  # DEBUG __tmp => D#1008
  # DEBUG __niter => __n_4(D)
  # DEBUG __niter => __n_4(D)
  # DEBUG __first => 0B
  goto <bb 10>;

}



;; Function virtual void SparseAllocator::Clear() (_ZN15SparseAllocator5ClearEv, funcdef_no=1773, decl_uid=37903, cgraph_uid=443, symbol_order=444)

Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
virtual void SparseAllocator::Clear() (struct SparseAllocator * const this)
{
  int __val;
  int __val;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  int j;
  int i;
  long unsigned int _10;
  struct _Rep_type * _11;
  struct map & _12;
  long unsigned int _13;
  long unsigned int _16;
  const size_type _18;
  struct _Rep_type * _21;
  struct _Rep_type * _23;
  struct map * _24;
  struct map * _25;
  struct _Rb_tree_node_base * _27;
  const size_type _28;
  long unsigned int _29;
  struct map & _30;
  struct _Rep_type * _31;
  struct _Rb_tree_node_base * _33;
  bool _34;
  struct _Rb_tree_node_base * _35;
  struct _Rb_tree_node_base * _36;
  struct _Rb_tree_node_base * _37;
  struct _Rb_tree_node_base * _38;
  int _44;
  struct _Rb_tree_node_base * _61;
  struct _Rb_tree_node_base * _64;
  struct vector * _67;
  long unsigned int _68;
  int _69;
  struct vector * _70;
  long unsigned int _71;
  int _81;
  int _86;
  const int prephitmp_87;
  const int prephitmp_107;
  const int prephitmp_111;
  const int pretmp_112;
  const int prephitmp_113;
  const int prephitmp_115;
  const int pretmp_116;
  const int prephitmp_117;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0
  _81 = this_8(D)->D.37974._inputs;
  if (_81 <= 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG j => 0
  _86 = this_8(D)->D.37974._outputs;
  if (_86 <= 0)
    goto <bb 4>;
  else
    goto <bb 15>;

  <bb 4>:
  # DEBUG D#562 => &this_8(D)->_in_occ
  # DEBUG this => D#562
  _21 = &MEM[(struct set *)this_8(D) + 160B]._M_t;
  # DEBUG this => _21
  _37 = MEM[(struct _Rb_tree_node_base * *)this_8(D) + 176B];
  # DEBUG D#90 => _21
  # DEBUG this => D#90
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_21, _37);
  # DEBUG D#401 => &MEM[(struct _Rb_tree *)_21]._M_impl
  # DEBUG this => D#401
  MEM[(struct _Rb_tree_impl *)this_8(D) + 160B]._M_header._M_parent = 0B;
  _38 = &MEM[(struct _Rb_tree_impl *)this_8(D) + 160B]._M_header;
  MEM[(struct _Rb_tree_impl *)this_8(D) + 160B]._M_header._M_left = _38;
  MEM[(struct _Rb_tree_impl *)this_8(D) + 160B]._M_header._M_right = _38;
  MEM[(struct _Rb_tree_impl *)this_8(D) + 160B]._M_node_count = 0;
  # DEBUG D#561 => &this_8(D)->_out_occ
  # DEBUG this => D#561
  _23 = &MEM[(struct set *)this_8(D) + 208B]._M_t;
  # DEBUG this => _23
  _35 = MEM[(struct _Rb_tree_node_base * *)this_8(D) + 224B];
  # DEBUG D#90 => _23
  # DEBUG this => D#90
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_23, _35);
  # DEBUG D#401 => &MEM[(struct _Rb_tree *)_23]._M_impl
  # DEBUG this => D#401
  MEM[(struct _Rb_tree_impl *)this_8(D) + 208B]._M_header._M_parent = 0B;
  _36 = &MEM[(struct _Rb_tree_impl *)this_8(D) + 208B]._M_header;
  MEM[(struct _Rb_tree_impl *)this_8(D) + 208B]._M_header._M_left = _36;
  MEM[(struct _Rb_tree_impl *)this_8(D) + 208B]._M_header._M_right = _36;
  MEM[(struct _Rb_tree_impl *)this_8(D) + 208B]._M_node_count = 0;
  # DEBUG D#1074 => &this_8(D)->D.37974
  # DEBUG this => D#1074
  _34 = MEM[(struct Allocator *)this_8(D)]._dirty;
  if (_34 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 5>:

  <bb 6>:
  # i_89 = PHI <0(5), i_14(14)>
  # prephitmp_87 = PHI <_81(5), prephitmp_111(14)>
  # DEBUG i => i_89
  _10 = (long unsigned int) i_89;
  # DEBUG D#557 => &this_8(D)->_in_req
  _24 = MEM[(struct map * *)this_8(D) + 256B];
  # DEBUG D#85 => D#557
  # DEBUG __n => _10
  # DEBUG this => D#85
  _13 = _10 * 48;
  _12 = _24 + _13;
  # DEBUG this => NULL
  _18 = MEM[(long unsigned int *)_12 + 40B];
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  if (_18 != 0)
    goto <bb 7>;
  else
    goto <bb 13>;

  <bb 7>:
  # DEBUG D#558 => &this_8(D)->_in_req
  # DEBUG D#85 => D#558
  # DEBUG __n => _10
  # DEBUG this => D#85
  # DEBUG this => NULL
  _11 = &_12->_M_t;
  # DEBUG this => _11
  __x_26 = MEM[(struct _Rb_tree_node_base * *)_12 + 16B];
  # DEBUG D#91 => _11
  # DEBUG this => D#91
  # DEBUG this => _11
  # DEBUG __x => __x_26
  # DEBUG __x => __x_26
  if (__x_26 == 0B)
    goto <bb 12>;
  else
    goto <bb 8>;

  <bb 8>:

  <bb 9>:
  # __x_95 = PHI <__x_26(8), __x_62(10)>
  # DEBUG __x => __x_95
  _61 = MEM[(struct _Rb_tree_node_base * *)__x_95 + 24B];
  # DEBUG D#107 => __x_95
  # DEBUG __x => D#107
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_11, _61);
  __x_62 = MEM[(struct _Rb_tree_node_base * *)__x_95 + 16B];
  # DEBUG D#108 => __x_95
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => _11
  # DEBUG __p => __x_95
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_95
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_95
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_95
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_95
  # DEBUG this => D#402
  # DEBUG D.65486 => D#403
  operator delete (__x_95);
  # DEBUG __x => __x_62
  # DEBUG __x => __x_62
  if (__x_62 == 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:
  pretmp_112 = this_8(D)->D.37974._inputs;

  <bb 12>:
  # prephitmp_113 = PHI <pretmp_112(11), prephitmp_87(7)>
  # DEBUG D#556 => &MEM[(struct _Rb_tree *)_11]._M_impl
  # DEBUG this => D#556
  MEM[(struct _Rb_tree_impl *)_12]._M_header._M_parent = 0B;
  _27 = &MEM[(struct _Rb_tree_impl *)_12]._M_header;
  MEM[(struct _Rb_tree_impl *)_12]._M_header._M_left = _27;
  MEM[(struct _Rb_tree_impl *)_12]._M_header._M_right = _27;
  MEM[(struct _Rb_tree_impl *)_12]._M_node_count = 0;

  <bb 13>:
  # prephitmp_111 = PHI <prephitmp_87(6), prephitmp_113(12)>
  i_14 = i_89 + 1;
  # DEBUG i => i_14
  # DEBUG i => i_14
  if (i_14 >= prephitmp_111)
    goto <bb 3>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 6>;

  <bb 15>:

  <bb 16>:
  # j_90 = PHI <0(15), j_19(24)>
  # prephitmp_107 = PHI <_86(15), prephitmp_115(24)>
  # DEBUG j => j_90
  _16 = (long unsigned int) j_90;
  # DEBUG D#559 => &this_8(D)->_out_req
  _25 = MEM[(struct map * *)this_8(D) + 280B];
  # DEBUG D#85 => D#559
  # DEBUG __n => _16
  # DEBUG this => D#85
  _29 = _16 * 48;
  _30 = _25 + _29;
  # DEBUG this => NULL
  _28 = MEM[(long unsigned int *)_30 + 40B];
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  if (_28 != 0)
    goto <bb 17>;
  else
    goto <bb 23>;

  <bb 17>:
  # DEBUG D#560 => &this_8(D)->_out_req
  # DEBUG D#85 => D#560
  # DEBUG __n => _16
  # DEBUG this => D#85
  # DEBUG this => NULL
  _31 = &_30->_M_t;
  # DEBUG this => _31
  __x_32 = MEM[(struct _Rb_tree_node_base * *)_30 + 16B];
  # DEBUG D#91 => _31
  # DEBUG this => D#91
  # DEBUG this => _31
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 22>;
  else
    goto <bb 18>;

  <bb 18>:

  <bb 19>:
  # __x_94 = PHI <__x_32(18), __x_65(20)>
  # DEBUG __x => __x_94
  _64 = MEM[(struct _Rb_tree_node_base * *)__x_94 + 24B];
  # DEBUG D#107 => __x_94
  # DEBUG __x => D#107
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_31, _64);
  __x_65 = MEM[(struct _Rb_tree_node_base * *)__x_94 + 16B];
  # DEBUG D#108 => __x_94
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => _31
  # DEBUG __p => __x_94
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_94
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_94
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_94
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_94
  # DEBUG this => D#402
  # DEBUG D.65499 => D#403
  operator delete (__x_94);
  # DEBUG __x => __x_65
  # DEBUG __x => __x_65
  if (__x_65 == 0B)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 19>;

  <bb 21>:
  pretmp_116 = this_8(D)->D.37974._outputs;

  <bb 22>:
  # prephitmp_117 = PHI <pretmp_116(21), prephitmp_107(17)>
  # DEBUG D#556 => &MEM[(struct _Rb_tree *)_31]._M_impl
  # DEBUG this => D#556
  MEM[(struct _Rb_tree_impl *)_30]._M_header._M_parent = 0B;
  _33 = &MEM[(struct _Rb_tree_impl *)_30]._M_header;
  MEM[(struct _Rb_tree_impl *)_30]._M_header._M_left = _33;
  MEM[(struct _Rb_tree_impl *)_30]._M_header._M_right = _33;
  MEM[(struct _Rb_tree_impl *)_30]._M_node_count = 0;

  <bb 23>:
  # prephitmp_115 = PHI <prephitmp_107(16), prephitmp_117(22)>
  j_19 = j_90 + 1;
  # DEBUG j => j_19
  # DEBUG j => j_19
  if (j_19 >= prephitmp_115)
    goto <bb 4>;
  else
    goto <bb 24>;

  <bb 24>:
  goto <bb 16>;

  <bb 25>:
  # DEBUG this => D#1074
  _44 = MEM[(struct Allocator *)this_8(D)]._inputs;
  _67 = &MEM[(struct Allocator *)this_8(D)]._inmatch;
  # DEBUG this => _67
  # DEBUG __first => _44
  # DEBUG __last => -1
  # DEBUG this => _67
  # DEBUG __n => _44
  __val = -1;
  # DEBUG __val => __val
  _68 = (long unsigned int) _44;
  std::vector<int>::_M_fill_assign (_67, _68, &__val);
  _69 = MEM[(struct Allocator *)this_8(D)]._outputs;
  _70 = &MEM[(struct Allocator *)this_8(D)]._outmatch;
  # DEBUG this => _70
  # DEBUG __first => _69
  # DEBUG __last => -1
  # DEBUG this => _70
  # DEBUG __n => _69
  __val = -1;
  # DEBUG __val => __val
  _71 = (long unsigned int) _69;
  std::vector<int>::_M_fill_assign (_70, _71, &__val);
  MEM[(struct Allocator *)this_8(D)]._dirty = 0;

  <bb 26>:
  return;

}



;; Function virtual void Allocator::Clear() (_ZN9Allocator5ClearEv, funcdef_no=1742, decl_uid=35390, cgraph_uid=412, symbol_order=413)

virtual void Allocator::Clear() (struct Allocator * const this)
{
  int * D.65745;
  int * __first;
  size_type __n;
  int * __tmp;
  int * __tmp;
  int * __tmp;
  struct vector __tmp;
  int * __first;
  int * __first;
  int * __first;
  long unsigned int __n;
  size_t __n;
  int __val;
  int __val;
  bool _3;
  int _6;
  struct vector * _7;
  long unsigned int _8;
  int _9;
  int * const _12;
  long int _13;
  long int _14;
  long int _15;
  long int _16;
  size_type _17;
  long int _19;
  long int _20;
  long int _21;
  size_type _22;
  sizetype _23;
  sizetype _24;
  long unsigned int _28;
  unsigned long _30;
  sizetype _31;
  int * _34;
  sizetype _37;
  sizetype _41;
  int * _42;
  int * _48;
  long unsigned int _49;
  long unsigned int _52;
  int * _53;
  sizetype _58;
  unsigned long _66;
  sizetype _80;
  long unsigned int _81;
  long unsigned int _88;
  long unsigned int _89;
  long unsigned int _91;
  int * pretmp_92;
  unsigned long _103;
  int * _107;
  unsigned long _108;
  sizetype _109;
  int * prephitmp_110;

  <bb 2>:
  _3 = this_2(D)->_dirty;
  if (_3 != 0)
    goto <bb 3>;
  else
    goto <bb 19>;

  <bb 3>:
  # DEBUG this => this_2(D)
  _6 = this_2(D)->_inputs;
  _7 = &this_2(D)->_inmatch;
  # DEBUG this => _7
  # DEBUG __first => _6
  # DEBUG __last => -1
  # DEBUG this => _7
  # DEBUG __n => _6
  __val = -1;
  # DEBUG __val => __val
  _8 = (long unsigned int) _6;
  std::vector<int>::_M_fill_assign (_7, _8, &__val);
  _9 = this_2(D)->_outputs;
  # DEBUG D#1082 => &this_2(D)->_outmatch
  # DEBUG this => D#1082
  # DEBUG __first => _9
  # DEBUG __last => -1
  # DEBUG this => D#1082
  # DEBUG __n => _9
  # DEBUG __val => -1
  # DEBUG __val => -1
  __n_11 = (size_t) _9;
  # DEBUG this => D#1082
  # DEBUG __n => __n_11
  # DEBUG __val => &__val
  __first_5 = MEM[(int * *)this_2(D) + 136B];
  # DEBUG D#157 => D#1082
  _12 = MEM[(int * *)this_2(D) + 152B];
  # DEBUG D#157 => D#1082
  # DEBUG this => D#157
  # DEBUG this => D#157
  _13 = (long int) _12;
  _14 = (long int) __first_5;
  _15 = _13 - _14;
  _16 = _15 /[ex] 4;
  _17 = (size_type) _16;
  if (__n_11 > _17)
    goto <bb 4>;
  else
    goto <bb 11>;

  <bb 4>:
  # DEBUG this => D#1082
  # DEBUG __n => __n_11
  # DEBUG __val => &__val
  # DEBUG D#532 => &D#1082->D.35374
  # DEBUG this => D#532
  # DEBUG D#1081 => &MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl
  # DEBUG this => &__tmp
  # DEBUG __n => __n_11
  # DEBUG __value => &__val
  # DEBUG __a => D#1081
  # DEBUG D#531 => &__tmp.D.35374
  # DEBUG this => D#531
  # DEBUG __n => __n_11
  # DEBUG __a => D#1081
  # DEBUG D#530 => &D#531->_M_impl
  # DEBUG this => D#530
  # DEBUG __a => D#1081
  # DEBUG this => D#530
  # DEBUG __a => D#1081
  # DEBUG this => D#530
  # DEBUG D.57426 => D#1081
  # DEBUG this => D#531
  # DEBUG __n => __n_11
  # DEBUG D#497 => D#531
  # DEBUG __n => __n_11
  # DEBUG this => D#497
  # DEBUG D#496 => D#497
  if (__n_11 != 0)
    goto <bb 5>;
  else
    goto <bb 20>;

  <bb 5>:
  # DEBUG D#495 => &D#496->_M_impl
  # DEBUG D#494 => D#495
  # DEBUG __n => __n_11
  # DEBUG __a => D#494
  # DEBUG D#493 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#492 => 0B
  # DEBUG __n => __n_11
  # DEBUG this => D#491
  # DEBUG D.65743 => D#492
  # DEBUG D#490 => D#491
  # DEBUG D#484 => D#490
  # DEBUG this => D#484
  if (__n_11 > 4611686018427387903)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  std::__throw_bad_alloc ();

  <bb 7>:
  _52 = __n_11 * 4;
  _53 = operator new (_52);
  _48 = _53 + _52;
  # DEBUG D#378 => &__tmp
  # DEBUG D#378 => &__tmp
  # DEBUG D#379 => &__val
  # DEBUG __n => __n_11
  # DEBUG D#376 => D#378
  # DEBUG this => D#376
  # DEBUG this => D#378
  # DEBUG D#377 => D#379
  # DEBUG __value => D#377
  # DEBUG D#375 => &D#376->D.35374
  # DEBUG this => D#375
  # DEBUG D#373 => D#377
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#372 => D#373
  # DEBUG __x => D#372
  # DEBUG D.65718 => D#374
  # DEBUG D#371 => D#372
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#370 => D#371
  # DEBUG __x => D#370
  # DEBUG __assignable => 1
  # DEBUG D#369 => D#370
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#368 => D#369
  # DEBUG __x => D#368
  # DEBUG D#367 => D#368
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#258 => D#366
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG __value => D#258
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_11
  # DEBUG __niter => __n_11
  # DEBUG __first => _53
  # DEBUG D#378 => &__tmp
  # DEBUG D#379 => &__val
  # DEBUG __n => __n_11
  # DEBUG D#376 => D#378
  # DEBUG this => D#376
  # DEBUG this => D#378
  # DEBUG D#377 => D#379
  # DEBUG __value => D#377
  # DEBUG D#375 => &D#376->D.35374
  # DEBUG this => D#375
  # DEBUG D#373 => D#377
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#372 => D#373
  # DEBUG __x => D#372
  # DEBUG D.65718 => D#374
  # DEBUG D#371 => D#372
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#370 => D#371
  # DEBUG __x => D#370
  # DEBUG __assignable => 1
  # DEBUG D#369 => D#370
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#368 => D#369
  # DEBUG __x => D#368
  # DEBUG D#367 => D#368
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#258 => D#366
  # DEBUG __n => __n_11
  # DEBUG __value => D#258
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_11
  # DEBUG __first => _53
  _41 = (sizetype) _9;
  _37 = _41 * 4;
  __builtin_memset (_53, 255, _37);
  _88 = (long unsigned int) _9;
  _91 = _88 * 4;
  __first_29 = _53 + _91;
  pretmp_92 = MEM[(int * &)this_2(D) + 136];

  <bb 8>:
  # __first_76 = PHI <__first_29(7), 0B(20)>
  # _34 = PHI <_48(7), _42(20)>
  # __first_33 = PHI <_53(7), 0B(20)>
  # prephitmp_110 = PHI <pretmp_92(7), __first_5(20)>
  # DEBUG D#534 => &D#1082->D.35374._M_impl
  # DEBUG this => &__tmp.D.35374._M_impl
  # DEBUG __x => D#534
  # DEBUG D#257 => &D#534->_M_start
  # DEBUG D#256 => &MEM[(struct _Vector_impl *)&__tmp]._M_start
  # DEBUG __a => D#256
  # DEBUG __b => D#257
  # DEBUG __tmp => __first_33
  # DEBUG D#1083 => MEM[(int * &)this_2(D) + 136]
  MEM[(int * &)this_2(D) + 136] = __first_33;
  # DEBUG D#255 => &D#534->_M_finish
  # DEBUG D#254 => &MEM[(struct _Vector_impl *)&__tmp]._M_finish
  # DEBUG __a => D#254
  # DEBUG __b => D#255
  # DEBUG __tmp => __first_76
  MEM[(int * &)this_2(D) + 144] = __first_76;
  # DEBUG D#253 => &D#534->_M_end_of_storage
  # DEBUG D#252 => &MEM[(struct _Vector_impl *)&__tmp]._M_end_of_storage
  # DEBUG __a => D#252
  # DEBUG __b => D#253
  # DEBUG __tmp => _34
  MEM[(int * &)this_2(D) + 152] = _34;
  # DEBUG this => &__tmp
  # DEBUG D#245 => &__tmp.D.35374
  # DEBUG this => D#245
  # DEBUG D#248 => __tmp.D.35374._M_impl._M_finish
  # DEBUG D#247 => __tmp.D.35374._M_impl._M_start
  # DEBUG __first => D#247
  # DEBUG __last => D#248
  # DEBUG D.53652 => NULL
  # DEBUG D#150 => D#247
  # DEBUG D#151 => D#248
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.53050 => D#146
  # DEBUG D.53049 => D#147
  # DEBUG D#246 => &__tmp.D.35374
  # DEBUG this => D#246
  # DEBUG D#244 => D#246->_M_impl._M_end_of_storage
  # DEBUG D#243 => (long int) D#244
  # DEBUG D#242 => (long int) D#1083
  # DEBUG D#241 => D#243 - D#242
  # DEBUG D#240 => D#241 /[ex] 4
  # DEBUG D#239 => (long unsigned int) D#240
  # DEBUG this => D#246
  # DEBUG __p => D#1083
  # DEBUG __n => D#239
  if (prephitmp_110 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#237 => &D#246->_M_impl
  # DEBUG D#235 => D#237
  # DEBUG D#236 => D#239
  # DEBUG __p => D#1083
  # DEBUG __a => D#235
  # DEBUG __n => D#236
  # DEBUG D#234 => D#236
  # DEBUG D#233 => D#235
  # DEBUG D#231 => D#233
  # DEBUG D#232 => D#234
  # DEBUG __p => D#1083
  # DEBUG this => D#231
  # DEBUG D.65675 => D#232
  operator delete (prephitmp_110);

  <bb 10>:
  # DEBUG D#238 => &D#246->_M_impl
  # DEBUG this => D#238
  # DEBUG this => D#238
  # DEBUG this => D#238
  __tmp ={v} {CLOBBER};
  goto <bb 18>;

  <bb 11>:
  # DEBUG D#87 => D#1082
  __first_18 = MEM[(int * *)this_2(D) + 144B];
  # DEBUG D#87 => D#1082
  # DEBUG this => D#87
  # DEBUG this => D#87
  _19 = (long int) __first_18;
  _20 = _19 - _14;
  _21 = _20 /[ex] 4;
  _22 = (size_type) _21;
  if (__n_11 > _22)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  # DEBUG __niter => __n_11
  # DEBUG __first => __first_5
  if (__n_11 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 13>:
  # DEBUG __first => __first_5
  if (__first_5 == __first_18)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#533 => &D#1082->D.35374
  # DEBUG this => D#533
  # DEBUG D#87 => D#1082
  # DEBUG D#87 => D#1082
  # DEBUG this => D#87
  # DEBUG this => D#87
  __n_26 = __n_11 - _22;
  # DEBUG D#373 => &__val
  # DEBUG __first => __first_18
  # DEBUG __n => __n_26
  # DEBUG D#372 => D#373
  # DEBUG __x => D#372
  # DEBUG D.65575 => D#374
  # DEBUG D#371 => D#372
  # DEBUG __first => __first_18
  # DEBUG __n => __n_26
  # DEBUG D#370 => D#371
  # DEBUG __x => D#370
  # DEBUG __assignable => 1
  # DEBUG D#369 => D#370
  # DEBUG __first => __first_18
  # DEBUG __n => __n_26
  # DEBUG D#368 => D#369
  # DEBUG __x => D#368
  # DEBUG D#367 => D#368
  # DEBUG __first => __first_18
  # DEBUG __n => __n_26
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => __first_18
  # DEBUG __it => __first_18
  # DEBUG D#258 => D#366
  # DEBUG __first => __first_18
  # DEBUG __n => __n_26
  # DEBUG __value => D#258
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_26
  # DEBUG __niter => __n_26
  # DEBUG __first => __first_18
  _24 = __n_26 * 4;
  __builtin_memset (__first_18, 255, _24);
  _81 = __n_26 * 4;
  __first_56 = __first_18 + _81;
  MEM[(struct vector *)this_2(D) + 136B].D.35374._M_impl._M_finish = __first_56;
  goto <bb 18>;

  <bb 15>:
  _103 = (unsigned long) __first_18;
  _107 = __first_5 + 4;
  _108 = (unsigned long) _107;
  _66 = _103 - _108;
  _30 = _66 /[ex] 4;
  _31 = _30 & 4611686018427387903;
  _58 = _31 + 1;
  _109 = _58 * 4;
  __builtin_memset (__first_5, 255, _109);
  goto <bb 14>;

  <bb 16>:
  _80 = (sizetype) _9;
  _23 = _80 * 4;
  __builtin_memset (__first_5, 255, _23);
  _89 = (long unsigned int) _9;
  _49 = _89 * 4;
  __first_39 = __first_5 + _49;

  <bb 17>:
  # __first_70 = PHI <__first_39(16), __first_5(12)>
  # DEBUG D#155 => D#1082
  # DEBUG __pos => __first_70
  # DEBUG D#154 => D#155
  # DEBUG this => D#154
  # DEBUG D#152 => &D#154->D.35374
  # DEBUG this => D#152
  # DEBUG D#153 => D#154->D.35374._M_impl._M_finish
  # DEBUG __first => __first_70
  # DEBUG __last => D#153
  # DEBUG D.53066 => NULL
  # DEBUG D#150 => __first_70
  # DEBUG D#151 => D#153
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.53050 => D#146
  # DEBUG D.53049 => D#147
  MEM[(int * *)this_2(D) + 144B] = __first_70;

  <bb 18>:
  this_2(D)->_dirty = 0;

  <bb 19>:
  return;

  <bb 20>:
  _28 = __n_11 * 4;
  _42 = (int *) _28;
  # DEBUG D#378 => &__tmp
  # DEBUG D#378 => &__tmp
  # DEBUG D#379 => &__val
  # DEBUG __n => __n_11
  # DEBUG D#376 => D#378
  # DEBUG this => D#376
  # DEBUG this => D#378
  # DEBUG D#377 => D#379
  # DEBUG __value => D#377
  # DEBUG D#375 => &D#376->D.35374
  # DEBUG this => D#375
  # DEBUG D#373 => D#377
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#372 => D#373
  # DEBUG __x => D#372
  # DEBUG D.65718 => D#374
  # DEBUG D#371 => D#372
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#370 => D#371
  # DEBUG __x => D#370
  # DEBUG __assignable => 1
  # DEBUG D#369 => D#370
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#368 => D#369
  # DEBUG __x => D#368
  # DEBUG D#367 => D#368
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG D#366 => D#367
  # DEBUG __value => D#366
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#258 => D#366
  # DEBUG __first => NULL
  # DEBUG __n => __n_11
  # DEBUG __value => D#258
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_11
  # DEBUG __niter => __n_11
  # DEBUG __first => 0B
  goto <bb 8>;

}



;; Function virtual void DenseAllocator::Clear() (_ZN14DenseAllocator5ClearEv, funcdef_no=1754, decl_uid=36236, cgraph_uid=424, symbol_order=425)

Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
virtual void DenseAllocator::Clear() (struct DenseAllocator * const this)
{
  bool Cross_BB_scalar_dependence.1581_I_lsm.1585;
  struct sRequest * Cross_BB_scalar_dependence.1581_I_lsm.1584;
  signed long graphite_IV.1583;
  signed long graphite_IV.1582;
  struct sRequest & D.65783;
  struct sRequest * D.65782;
  struct sRequest * Cross_BB_scalar_dependence.1581[1];
  struct sRequest * D.65780;
  struct vector & D.65779;
  struct vector * D.65778;
  int __val;
  int __val;
  int j;
  int i;
  const int pretmp_2;
  bool _4;
  int _15;
  struct vector * pretmp_17;
  long unsigned int _18;
  struct vector & pretmp_21;
  long unsigned int _22;
  bool _23;
  struct vector * _26;
  long unsigned int _27;
  int _28;
  struct vector * _29;
  long unsigned int _30;
  signed long _39;
  signed long _47;
  struct sRequest * pretmp_53;
  bool _57;
  signed long _58;
  signed long _59;
  struct sRequest & _63;
  long unsigned int _64;
  long unsigned int _65;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0
  _15 = this_6(D)->D.36298._inputs;
  if (_15 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#1085 => &this_6(D)->D.36298
  # DEBUG this => D#1085
  _23 = MEM[(struct Allocator *)this_6(D)]._dirty;
  if (_23 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 4>:
  pretmp_2 = this_6(D)->D.36298._outputs;
  _4 = _15 > 0;
  if (_4 != 0)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  _39 = (signed long) _15;
  _47 = _39 + -1;
  pretmp_17 = MEM[(struct vector * *)this_6(D) + 160B];
  _57 = pretmp_2 > 0;

  <bb 6>:
  # graphite_IV.1582_51 = PHI <0(5), graphite_IV.1582_10(11)>
  _22 = (long unsigned int) graphite_IV.1582_51;
  _18 = _22 * 24;
  pretmp_21 = pretmp_17 + _18;
  pretmp_53 = MEM[(struct sRequest * *)pretmp_21];
  if (_57 != 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  _58 = (signed long) pretmp_2;
  _59 = _58 + -1;

  <bb 8>:
  # graphite_IV.1583_60 = PHI <0(7), graphite_IV.1583_61(9)>
  # DEBUG j => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _64 = (long unsigned int) graphite_IV.1583_60;
  _65 = _64 * 16;
  _63 = pretmp_53 + _65;
  _63->label = -1;
  # DEBUG j => NULL
  # DEBUG j => NULL
  graphite_IV.1583_61 = graphite_IV.1583_60 + 1;
  if (graphite_IV.1583_60 < _59)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  graphite_IV.1582_10 = graphite_IV.1582_51 + 1;
  if (graphite_IV.1582_51 < _47)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  goto <bb 6>;

  <bb 12>:
  goto <bb 3>;

  <bb 13>:
  # DEBUG this => D#1085
  _26 = &MEM[(struct Allocator *)this_6(D)]._inmatch;
  # DEBUG this => _26
  # DEBUG __first => _15
  # DEBUG __last => -1
  # DEBUG this => _26
  # DEBUG __n => _15
  __val = -1;
  # DEBUG __val => __val
  _27 = (long unsigned int) _15;
  std::vector<int>::_M_fill_assign (_26, _27, &__val);
  _28 = MEM[(struct Allocator *)this_6(D)]._outputs;
  _29 = &MEM[(struct Allocator *)this_6(D)]._outmatch;
  # DEBUG this => _29
  # DEBUG __first => _28
  # DEBUG __last => -1
  # DEBUG this => _29
  # DEBUG __n => _28
  __val = -1;
  # DEBUG __val => __val
  _30 = (long unsigned int) _28;
  std::vector<int>::_M_fill_assign (_29, _30, &__val);
  MEM[(struct Allocator *)this_6(D)]._dirty = 0;

  <bb 14>:
  return;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Allocator::sRequest; _Alloc = std::allocator<Allocator::sRequest>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Allocator::sRequest*, std::vector<Allocator::sRequest> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Allocator::sRequest*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Allocator::sRequest] (_ZNSt6vectorIN9Allocator8sRequestESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=2141, decl_uid=40967, cgraph_uid=811, symbol_order=812)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Allocator::sRequest; _Alloc = std::allocator<Allocator::sRequest>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Allocator::sRequest*, std::vector<Allocator::sRequest> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Allocator::sRequest*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Allocator::sRequest] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.65848;
  const size_type __len;
  size_type D.65847;
  size_type __n;
  struct sRequest * D.65838;
  const ptrdiff_t _Num;
  struct sRequest * D.65829;
  int __x_copy$out_pri;
  int __x_copy$in_pri;
  int __x_copy$label;
  int __x_copy$port;
  struct sRequest * const __position;
  struct sRequest * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct sRequest * __first;
  long unsigned int __n;
  struct sRequest * __first;
  const ptrdiff_t _Num;
  struct sRequest * __first;
  struct sRequest * __new_finish;
  const size_type __elems_after;
  struct sRequest * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct sRequest * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct sRequest * pretmp_31;
  long unsigned int _43;
  sizetype _44;
  struct sRequest * _45;
  struct sRequest * _48;
  long unsigned int _50;
  struct sRequest * _53;
  long int _54;
  long int __first.27_56;
  struct sRequest * _64;
  long unsigned int _68;
  long int _75;
  long unsigned int _77;
  struct sRequest * _79;
  long unsigned int _84;
  long unsigned int _87;
  long unsigned int pretmp_92;
  long unsigned int pretmp_116;
  long unsigned int prephitmp_117;
  long int _118;
  long unsigned int _120;
  sizetype _121;
  struct sRequest * _122;
  struct sRequest * _126;
  struct sRequest * iftmp.24_127;
  bool _128;
  long int _130;
  long int _131;
  long int _132;
  long unsigned int _134;
  long int prephitmp_135;
  long unsigned int _147;
  long int prephitmp_151;
  long int pretmp_152;
  bool _155;
  long int _156;
  long int _157;
  long int pretmp_158;
  long int pretmp_160;
  struct sRequest * prephitmp_161;
  struct sRequest * pretmp_162;
  struct sRequest * prephitmp_163;
  struct sRequest * pretmp_164;
  long int _165;
  long int _166;
  bool _167;
  long int _168;
  long int _171;
  long int _172;
  long int _173;
  long unsigned int _175;
  long unsigned int prephitmp_177;
  long unsigned int pretmp_178;
  long unsigned int prephitmp_179;
  struct sRequest * pretmp_180;
  struct sRequest * prephitmp_181;
  long unsigned int pretmp_182;
  long unsigned int prephitmp_183;
  struct sRequest * pretmp_187;
  struct sRequest * prephitmp_188;

  <bb 2>:
  # DEBUG D#1091 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#1091
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.41044._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.41044._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 16;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy$port_115 = MEM[(const struct sRequest &)__x_21(D)];
  # DEBUG __x_copy$port => __x_copy$port_115
  __x_copy$label_112 = MEM[(const struct sRequest &)__x_21(D) + 4];
  # DEBUG __x_copy$label => __x_copy$label_112
  __x_copy$in_pri_110 = MEM[(const struct sRequest &)__x_21(D) + 8];
  # DEBUG __x_copy$in_pri => __x_copy$in_pri_110
  __x_copy$out_pri_40 = MEM[(const struct sRequest &)__x_21(D) + 12];
  # DEBUG __x_copy$out_pri => __x_copy$out_pri_40
  # DEBUG this => this_4(D)
  # DEBUG D#104 => &this_4(D)->D.41044._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#104
  # DEBUG __lhs => &D.45156
  # DEBUG __rhs => &__position
  # DEBUG this => &D.45156
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 16;
  __elems_after_39 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_39
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_39)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#612 => &this_4(D)->D.41044
  # DEBUG this => D#612
  _43 = __n_2(D) * 16;
  _44 = -_43;
  _45 = __first_7 + _44;
  # DEBUG __first => _45
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#605
  # DEBUG D#604 => D#605
  # DEBUG D#603 => D#604
  # DEBUG __first => _45
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.59204 => D#603
  # DEBUG __first => _45
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _45
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _45
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _45
  # DEBUG __it => _45
  # DEBUG __first => _45
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _45
  # DEBUG __it => _45
  # DEBUG __first => _45
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _45
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.27_56 = (long int) _45;
  _54 = _8 - __first.27_56;
  _Num_52 = _54 /[ex] 16;
  # DEBUG _Num => _Num_52
  if (_Num_52 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _50 = (long unsigned int) _54;
  __builtin_memmove (__first_7, _45, _50);
  pretmp_187 = this_4(D)->D.41044._M_impl._M_finish;

  <bb 8>:
  # prephitmp_188 = PHI <__first_7(6), pretmp_187(7)>
  _48 = prephitmp_188 + _43;
  this_4(D)->D.41044._M_impl._M_finish = _48;
  # DEBUG this => &__position
  # DEBUG __first => D#1091
  # DEBUG __last => _45
  # DEBUG __result => __first_7
  # DEBUG __it => _45
  # DEBUG __it => _45
  # DEBUG __it => D#1091
  # DEBUG __it => D#1091
  # DEBUG __first => D#1091
  # DEBUG __last => _45
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _45
  # DEBUG __it => _45
  # DEBUG __it => D#1091
  # DEBUG __it => D#1091
  # DEBUG __first => D#1091
  # DEBUG __last => _45
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#1091
  # DEBUG __last => _45
  # DEBUG __result => __first_7
  _118 = __first.27_56 - _27;
  _Num_119 = _118 /[ex] 16;
  # DEBUG _Num => _Num_119
  if (_Num_119 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _120 = (long unsigned int) _118;
  _121 = -_120;
  _122 = __first_7 + _121;
  __builtin_memmove (_122, __position_16, _120);

  <bb 10>:
  # DEBUG this => &__position
  _53 = __position_16 + _43;
  # DEBUG this => &__position
  # DEBUG __first => D#1091
  # DEBUG __last => _53
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1091
  if (__position_16 == _53)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_123 = PHI <__position_16(11), __position_15(13)>
  # DEBUG __first => __position_123
  MEM[(struct sRequest *)__position_123] = __x_copy$port_115;
  MEM[(struct sRequest *)__position_123 + 4B] = __x_copy$label_112;
  MEM[(struct sRequest *)__position_123 + 8B] = __x_copy$in_pri_110;
  MEM[(struct sRequest *)__position_123 + 12B] = __x_copy$out_pri_40;
  __position_15 = __position_123 + 16;
  # DEBUG __first => __position_15
  # DEBUG __first => __position_15
  if (__position_15 == _53)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#613 => &this_4(D)->D.41044
  # DEBUG this => D#613
  __n_58 = __n_2(D) - __elems_after_39;
  # DEBUG __first => __first_7
  # DEBUG __n => __n_58
  # DEBUG __x => &__x_copy
  # DEBUG __niter => __n_58
  # DEBUG __first => __first_7
  if (__n_58 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_125 = PHI <__n_58(15), __n_72(18)>
  # __first_86 = PHI <__first_7(15), __first_73(18)>
  # DEBUG __niter => __n_125
  # DEBUG __first => __first_86
  MEM[(struct sRequest *)__first_86] = __x_copy$port_115;
  MEM[(struct sRequest *)__first_86 + 4B] = __x_copy$label_112;
  MEM[(struct sRequest *)__first_86 + 8B] = __x_copy$in_pri_110;
  MEM[(struct sRequest *)__first_86 + 12B] = __x_copy$out_pri_40;
  __n_72 = __n_125 + 18446744073709551615;
  # DEBUG __niter => __n_72
  __first_73 = __first_86 + 16;
  # DEBUG __first => __first_73
  # DEBUG __niter => __n_72
  # DEBUG __first => __first_73
  if (__n_72 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _175 = __n_58 * 16;
  __first_142 = __first_7 + _175;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_139 = PHI <__first_142(17), __first_7(14)>
  this_4(D)->D.41044._M_impl._M_finish = __first_139;
  # DEBUG D#614 => &this_4(D)->D.41044
  # DEBUG this => D#614
  # DEBUG this => &__position
  # DEBUG __first => D#1091
  # DEBUG __last => __first_7
  # DEBUG __result => __first_139
  # DEBUG __alloc => D#605
  # DEBUG D#604 => D#605
  # DEBUG D#603 => D#604
  # DEBUG __first => D#1091
  # DEBUG __last => __first_7
  # DEBUG __result => __first_139
  # DEBUG D.59249 => D#603
  # DEBUG __first => D#1091
  # DEBUG __last => __first_7
  # DEBUG __result => __first_139
  # DEBUG __assignable => 1
  # DEBUG __first => D#1091
  # DEBUG __last => __first_7
  # DEBUG __result => __first_139
  # DEBUG __first => D#1091
  # DEBUG __last => __first_7
  # DEBUG __result => __first_139
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#1091
  # DEBUG __it => D#1091
  # DEBUG __first => D#1091
  # DEBUG __last => __first_7
  # DEBUG __result => __first_139
  # DEBUG __it => __first_139
  # DEBUG __it => __first_139
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#1091
  # DEBUG __it => D#1091
  # DEBUG __first => D#1091
  # DEBUG __last => __first_7
  # DEBUG __result => __first_139
  # DEBUG __simple => 1
  # DEBUG __first => D#1091
  # DEBUG __last => __first_7
  # DEBUG __result => __first_139
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_182 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _68 = (long unsigned int) _23;
  __builtin_memmove (__first_139, __position_16, _68);
  pretmp_180 = this_4(D)->D.41044._M_impl._M_finish;

  <bb 22>:
  # prephitmp_181 = PHI <__first_139(20), pretmp_180(21)>
  # prephitmp_183 = PHI <pretmp_182(20), _68(21)>
  _64 = prephitmp_181 + prephitmp_183;
  this_4(D)->D.41044._M_impl._M_finish = _64;
  # DEBUG this => &__position
  # DEBUG __first => D#1091
  # DEBUG __last => __first_7
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1091
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_124 = PHI <__position_16(23), __position_67(25)>
  # DEBUG __first => __position_124
  MEM[(struct sRequest *)__position_124] = __x_copy$port_115;
  MEM[(struct sRequest *)__position_124 + 4B] = __x_copy$label_112;
  MEM[(struct sRequest *)__position_124 + 8B] = __x_copy$in_pri_110;
  MEM[(struct sRequest *)__position_124 + 12B] = __x_copy$out_pri_40;
  __position_67 = __position_124 + 16;
  # DEBUG __first => __position_67
  # DEBUG __first => __position_67
  if (__first_7 == __position_67)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#513 => this_4(D)
  # DEBUG this => D#513
  # DEBUG D#512 => D#513
  # DEBUG D#511 => &D#512->D.41044
  # DEBUG this => D#511
  # DEBUG __a => D#510
  # DEBUG D#509 => D#510
  # DEBUG D#498 => D#509
  # DEBUG this => D#498
  _17 = MEM[(struct sRequest * *)this_4(D)];
  # DEBUG D#88 => this_4(D)
  # DEBUG D#88 => this_4(D)
  # DEBUG this => D#88
  # DEBUG this => D#88
  _130 = (long int) _17;
  _131 = _8 - _130;
  _132 = _131 /[ex] 16;
  _133 = (const long unsigned int) _132;
  _134 = 1152921504606846975 - _133;
  if (__n_2(D) > _134)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#88 => this_4(D)
  # DEBUG D#88 => this_4(D)
  # DEBUG this => D#88
  # DEBUG this => D#88
  # DEBUG D#88 => this_4(D)
  # DEBUG D#88 => this_4(D)
  # DEBUG this => D#88
  # DEBUG this => D#88
  # DEBUG __a => &D.65848
  # DEBUG __b => &__n
  _87 = MAX_EXPR <__n_2(D), _133>;
  __len_138 = _87 + _133;
  # DEBUG __len => __len_138
  # DEBUG D#88 => this_4(D)
  # DEBUG D#88 => this_4(D)
  # DEBUG this => D#88
  # DEBUG this => D#88
  # DEBUG D#513 => this_4(D)
  # DEBUG this => D#513
  # DEBUG D#512 => D#513
  # DEBUG D#511 => &D#512->D.41044
  # DEBUG this => D#511
  # DEBUG __a => D#510
  # DEBUG D#509 => D#510
  # DEBUG D#498 => D#509
  # DEBUG this => D#498
  _167 = __len_138 > 1152921504606846975;
  _155 = _133 > __len_138;
  _128 = _155 | _167;
  if (_128 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_178 = __len_138 * 16;

  <bb 30>:
  # _171 = PHI <_157(44), _166(29)>
  # _172 = PHI <_156(44), _165(29)>
  # prephitmp_179 = PHI <18446744073709551600(44), pretmp_178(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#169 => &this_4(D)->D.41044._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#169
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45189
  # DEBUG this => &__position
  # DEBUG this => &D.45189
  # DEBUG D#629 => _172 /[ex] 16
  # DEBUG __elems_before => (const size_type) D#629
  # DEBUG D#628 => &this_4(D)->D.41044
  # DEBUG D#506 => D#628
  # DEBUG __n => NULL
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  # DEBUG D#504 => &D#505->_M_impl
  # DEBUG D#503 => D#504
  # DEBUG __n => NULL
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG D#500 => D#502
  # DEBUG D#501 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#500
  # DEBUG D.65836 => D#501
  # DEBUG D#499 => D#500
  # DEBUG D#498 => D#499
  # DEBUG this => D#498
  _126 = operator new (prephitmp_179);
  pretmp_31 = this_4(D)->D.41044._M_impl._M_start;
  pretmp_162 = this_4(D)->D.41044._M_impl._M_finish;
  pretmp_164 = _126 + prephitmp_179;
  pretmp_160 = (long int) pretmp_162;
  pretmp_158 = (long int) pretmp_31;
  pretmp_152 = _171 - pretmp_158;

  <bb 31>:
  # iftmp.24_127 = PHI <0B(45), _126(30)>
  # _173 = PHI <_166(45), _171(30)>
  # _168 = PHI <_165(45), _172(30)>
  # prephitmp_161 = PHI <_17(45), pretmp_31(30)>
  # prephitmp_163 = PHI <0B(45), pretmp_164(30)>
  # prephitmp_135 = PHI <_8(45), pretmp_160(30)>
  # prephitmp_151 = PHI <_165(45), pretmp_152(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#608 => &this_4(D)->D.41044
  # DEBUG this => D#608
  _19 = (long unsigned int) _168;
  __first_20 = iftmp.24_127 + _19;
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __x => __x_21(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_146 = PHI <__n_89(33), __n_2(D)(31)>
  # __first_170 = PHI <__first_90(33), __first_20(31)>
  # DEBUG __niter => __n_146
  # DEBUG __first => __first_170
  *__first_170 = MEM[(const struct sRequest &)__x_21(D)];
  __n_89 = __n_146 + 18446744073709551615;
  # DEBUG __niter => __n_89
  __first_90 = __first_170 + 16;
  # DEBUG __first => __first_90
  # DEBUG __niter => __n_89
  # DEBUG __first => __first_90
  if (__n_89 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#609 => &this_4(D)->D.41044
  # DEBUG this => D#609
  # DEBUG this => &__position
  # DEBUG D#1090 => this_4(D)->D.41044._M_impl._M_start
  # DEBUG __first => D#1090
  # DEBUG __last => D#1091
  # DEBUG __result => NULL
  # DEBUG __alloc => D#607
  # DEBUG D#606 => D#607
  # DEBUG D#603 => D#606
  # DEBUG __first => D#1090
  # DEBUG __last => D#1091
  # DEBUG __result => NULL
  # DEBUG D.59364 => D#603
  # DEBUG __first => D#1090
  # DEBUG __last => D#1091
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1090
  # DEBUG __last => D#1091
  # DEBUG __result => NULL
  # DEBUG __first => D#1090
  # DEBUG __last => D#1091
  # DEBUG __result => NULL
  # DEBUG __it => D#1091
  # DEBUG __it => D#1091
  # DEBUG __it => D#1090
  # DEBUG __it => D#1090
  # DEBUG __first => D#1090
  # DEBUG __last => D#1091
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#1091
  # DEBUG __it => D#1091
  # DEBUG __it => D#1090
  # DEBUG __it => D#1090
  # DEBUG __first => D#1090
  # DEBUG __last => D#1091
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#1090
  # DEBUG __last => D#1091
  # DEBUG __result => NULL
  # DEBUG D#1089 => (long int) D#1090
  # DEBUG D#1088 => _173 - D#1089
  _Num_83 = prephitmp_151 /[ex] 16;
  # DEBUG _Num => _Num_83
  if (_Num_83 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_92 = (long unsigned int) prephitmp_151;
  goto <bb 37>;

  <bb 36>:
  _84 = (long unsigned int) prephitmp_151;
  __builtin_memmove (iftmp.24_127, prephitmp_161, _84);

  <bb 37>:
  # prephitmp_117 = PHI <pretmp_92(35), _84(36)>
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG __new_finish => iftmp.24_127 + D#1087
  _25 = __n_2(D) * 16;
  _147 = _25 + prephitmp_117;
  __new_finish_26 = iftmp.24_127 + _147;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#610 => &this_4(D)->D.41044
  # DEBUG this => D#610
  # DEBUG D#1086 => this_4(D)->D.41044._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#1091
  # DEBUG __last => D#1086
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#607
  # DEBUG D#606 => D#607
  # DEBUG D#603 => D#606
  # DEBUG __first => D#1091
  # DEBUG __last => D#1086
  # DEBUG __result => __new_finish_26
  # DEBUG D.59325 => D#603
  # DEBUG __first => D#1091
  # DEBUG __last => D#1086
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#1091
  # DEBUG __last => D#1086
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#1091
  # DEBUG __last => D#1086
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#1086
  # DEBUG __it => D#1086
  # DEBUG __it => D#1091
  # DEBUG __it => D#1091
  # DEBUG __first => D#1091
  # DEBUG __last => D#1086
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#1086
  # DEBUG __it => D#1086
  # DEBUG __it => D#1091
  # DEBUG __it => D#1091
  # DEBUG __first => D#1091
  # DEBUG __last => D#1086
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#1091
  # DEBUG __last => D#1086
  # DEBUG __result => __new_finish_26
  _75 = prephitmp_135 - _173;
  _Num_76 = _75 /[ex] 16;
  # DEBUG _Num => _Num_76
  if (_Num_76 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_116 = (long unsigned int) _75;
  goto <bb 40>;

  <bb 39>:
  _77 = (long unsigned int) _75;
  __builtin_memcpy (__new_finish_26, __position_16, _77);

  <bb 40>:
  # prephitmp_177 = PHI <pretmp_116(38), _77(39)>
  _79 = __new_finish_26 + prephitmp_177;
  # DEBUG __new_finish => _79
  # DEBUG D#611 => &this_4(D)->D.41044
  # DEBUG this => D#611
  # DEBUG D#627 => this_4(D)->D.41044._M_impl._M_finish
  # DEBUG D#626 => this_4(D)->D.41044._M_impl._M_start
  # DEBUG __first => D#626
  # DEBUG __last => D#627
  # DEBUG D.59318 => NULL
  # DEBUG D#162 => D#626
  # DEBUG D#163 => D#627
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG D#625 => this_4(D)->D.41044._M_impl._M_end_of_storage
  # DEBUG D#624 => (long int) D#625
  # DEBUG D#623 => (long int) D#1090
  # DEBUG D#622 => D#624 - D#623
  # DEBUG D#621 => D#622 /[ex] 16
  # DEBUG D#620 => (long unsigned int) D#621
  # DEBUG D#619 => &this_4(D)->D.41044
  # DEBUG this => D#619
  # DEBUG __p => D#1090
  # DEBUG __n => D#620
  if (prephitmp_161 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#286 => &D#619->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#620
  # DEBUG __p => D#1090
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => D#1090
  # DEBUG this => D#280
  # DEBUG D.59314 => D#281
  operator delete (prephitmp_161);

  <bb 42>:
  this_4(D)->D.41044._M_impl._M_start = iftmp.24_127;
  this_4(D)->D.41044._M_impl._M_finish = _79;
  this_4(D)->D.41044._M_impl._M_end_of_storage = prephitmp_163;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#169 => &this_4(D)->D.41044._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#169
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45189
  # DEBUG this => &__position
  _157 = (long int) __position_16;
  # DEBUG this => &D.45189
  _156 = _157 - _130;
  # DEBUG D#629 => _156 /[ex] 16
  # DEBUG __elems_before => (const size_type) D#629
  # DEBUG D#628 => &this_4(D)->D.41044
  # DEBUG D#506 => D#628
  # DEBUG __n => NULL
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#169 => &this_4(D)->D.41044._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#169
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45189
  # DEBUG this => &__position
  _166 = (long int) __position_16;
  # DEBUG this => &D.45189
  _165 = _166 - _130;
  # DEBUG D#629 => _165 /[ex] 16
  # DEBUG __elems_before => (const size_type) D#629
  # DEBUG D#628 => &this_4(D)->D.41044
  # DEBUG D#506 => D#628
  # DEBUG __n => NULL
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  if (__len_138 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node; _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*] (_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE7_M_copyINSA_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS4_EPKSE_SF_RT_, funcdef_no=2343, decl_uid=45292, cgraph_uid=1013, symbol_order=1014)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node; _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*] (struct _Rb_tree * const this, const struct _Rb_tree_node * __x, struct _Rb_tree_node * __p, struct _Alloc_node & __node_gen)
{
  struct _Rb_tree_node * D.65956;
  struct _Rb_tree_node * D.65939;
  struct _Rb_tree_node_base * _13;
  struct _Rb_tree_node * _15;
  _Rb_tree_color _17;
  struct _Rb_tree_node_base * _20;
  struct _Rb_tree_node * _23;
  void * _26;
  _Rb_tree_color _36;

  <bb 2>:
  # DEBUG D#732 => this_8(D)
  # DEBUG D#733 => __node_gen_10(D)
  # DEBUG __x => __x_9(D)
  # DEBUG this => D#732
  # DEBUG __node_gen => D#733
  # DEBUG D#731 => D#733
  # DEBUG this => __x_9(D)
  # DEBUG D#1103 => &__x_9(D)->_M_value_field
  # DEBUG __r => D#1103
  # DEBUG D#730 => D#731
  # DEBUG __arg => D#1103
  # DEBUG this => D#730
  # DEBUG D#729 => D#730
  # DEBUG D#728 => D#729->_M_t
  # DEBUG D#727 => D#728
  # DEBUG __x => D#1103
  # DEBUG this => D#727
  # DEBUG D#726 => D#727
  # DEBUG D#725 => D#727
  # DEBUG D#724 => D#725
  # DEBUG this => D#724
  # DEBUG D#723 => D#724
  # DEBUG this => D#723
  # DEBUG __n => 1
  # DEBUG __a => D#722
  # DEBUG D#721 => D#722
  # DEBUG D#719 => D#721
  # DEBUG D#720 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#719
  # DEBUG D.65930 => D#720
  # DEBUG D#718 => D#719
  # DEBUG D#717 => D#718
  # DEBUG this => D#717
  __p_45 = operator new (56);
  # DEBUG __tmp => __p_45
  # DEBUG D#632 => D#726
  # DEBUG __node => __p_45
  # DEBUG __x => D#1103
  # DEBUG this => D#632
  # DEBUG D#631 => D#632
  # DEBUG this => __p_45
  # DEBUG D#1106 => &__p_45->_M_value_field
  # DEBUG __r => D#1106
  # DEBUG D#538 => D#631
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1106
  # DEBUG __val => D#1103
  # DEBUG this => D#630
  # DEBUG D#24 => 20
  # DEBUG __p => D#1106
  # DEBUG D.59472 => D#24
  MEM[(struct pair *)__p_45 + 32B] = MEM[(const struct pair &)__x_9(D) + 32];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => NULL
  _17 = __x_9(D)->D.43962._M_color;
  __p_45->D.43962._M_color = _17;
  __p_45->D.43962._M_left = 0B;
  __p_45->D.43962._M_right = 0B;
  # DEBUG __top => NULL
  __p_45->D.43962._M_parent = __p_11(D);
  _13 = __x_9(D)->D.43962._M_right;
  if (_13 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#172 => __x_9(D)
  # DEBUG __x => D#172
  _15 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node> (this_8(D), _13, __p_45, __node_gen_10(D));

  <bb 4>:
  __p_45->D.43962._M_right = _15;

  <bb 5>:
  # DEBUG __p => NULL
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_9(D) + 16B];
  # DEBUG D#171 => __x_9(D)
  # DEBUG __x => D#171
  # DEBUG __x => NULL
  # DEBUG __p => __p_45
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:

  <bb 19>:
  return __p_45;

  <bb 7>:

  <bb 8>:
  # __x_41 = PHI <__x_31(7), __x_32(15)>
  # __p_35 = PHI <__p_45(7), __p_37(15)>
  # DEBUG __p => __p_35
  # DEBUG __x => __x_41
  # DEBUG D#732 => this_8(D)
  # DEBUG D#733 => __node_gen_10(D)
  # DEBUG __x => __x_41
  # DEBUG this => D#732
  # DEBUG __node_gen => D#733
  # DEBUG D#731 => D#733
  # DEBUG this => __x_41
  # DEBUG D#1104 => &__x_41->_M_value_field
  # DEBUG __r => D#1104
  # DEBUG D#730 => D#731
  # DEBUG __arg => D#1104
  # DEBUG this => D#730
  # DEBUG D#729 => D#730
  # DEBUG D#728 => D#729->_M_t
  # DEBUG D#727 => D#728
  # DEBUG __x => D#1104
  # DEBUG this => D#727
  # DEBUG D#726 => D#727
  # DEBUG D#725 => D#727
  # DEBUG D#724 => D#725
  # DEBUG this => D#724
  # DEBUG D#723 => D#724
  # DEBUG this => D#723
  # DEBUG __n => 1
  # DEBUG __a => D#722
  # DEBUG D#721 => D#722
  # DEBUG D#719 => D#721
  # DEBUG D#720 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#719
  # DEBUG D.65947 => D#720
  # DEBUG D#718 => D#719
  # DEBUG D#717 => D#718
  # DEBUG this => D#717
  __p_37 = operator new (56);
  goto <bb 10>;

<L14>:
  goto <bb 17> (<L10>);

  <bb 10>:
  # DEBUG __tmp => __p_37
  # DEBUG D#632 => D#726
  # DEBUG __node => __p_37
  # DEBUG __x => D#1104
  # DEBUG this => D#632
  # DEBUG D#631 => D#632
  # DEBUG this => __p_37
  # DEBUG D#1105 => &__p_37->_M_value_field
  # DEBUG __r => D#1105
  # DEBUG D#538 => D#631
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1105
  # DEBUG __val => D#1104
  # DEBUG this => D#630
  # DEBUG D#24 => 20
  # DEBUG __p => D#1105
  # DEBUG D.59472 => D#24
  MEM[(struct pair *)__p_37 + 32B] = MEM[(const struct pair &)__x_41 + 32];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => NULL
  _36 = __x_41->D.43962._M_color;
  __p_37->D.43962._M_color = _36;
  __p_37->D.43962._M_left = 0B;
  __p_37->D.43962._M_right = 0B;
  # DEBUG __y => NULL
  __p_35->D.43962._M_left = __p_37;
  __p_37->D.43962._M_parent = __p_35;
  _20 = __x_41->D.43962._M_right;
  if (_20 != 0B)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 11>:
  # DEBUG D#172 => __x_41
  # DEBUG __x => D#172
  _23 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node> (this_8(D), _20, __p_37, __node_gen_10(D));
  goto <bb 13>;

<L15>:
  goto <bb 17> (<L10>);

  <bb 13>:
  __p_37->D.43962._M_right = _23;

  <bb 14>:
  # DEBUG __p => NULL
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_41 + 16B];
  # DEBUG D#171 => __x_41
  # DEBUG __x => D#171
  # DEBUG __x => NULL
  # DEBUG __p => __p_37
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 6>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 8>;

<L13>:

<L10>:
  _26 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_26);
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (this_8(D), __p_45);
  __cxa_rethrow ();

<L12>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Allocator::sRequest>; _Alloc = std::allocator<std::vector<Allocator::sRequest> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Allocator::sRequest>*, std::vector<std::vector<Allocator::sRequest> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Allocator::sRequest>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Allocator::sRequest>] (_ZNSt6vectorIS_IN9Allocator8sRequestESaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_, funcdef_no=2137, decl_uid=36150, cgraph_uid=807, symbol_order=808)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 18 as candidate
loop 18 is innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Allocator::sRequest>; _Alloc = std::allocator<std::vector<Allocator::sRequest> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Allocator::sRequest>*, std::vector<std::vector<Allocator::sRequest> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Allocator::sRequest>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Allocator::sRequest>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct sRequest * D.66583;
  const ptrdiff_t _Num;
  struct vector * D.66530;
  struct vector * __first;
  struct vector * __result;
  struct sRequest * D.66502;
  const ptrdiff_t _Num;
  struct vector * D.66449;
  struct vector * __first;
  struct vector * __result;
  struct sRequest * D.66421;
  const ptrdiff_t _Num;
  const long unsigned int D.66371;
  const size_type __len;
  size_type D.66370;
  size_type __n;
  struct vector * D.66361;
  struct vector * D.66349;
  struct vector * __first;
  long unsigned int __n;
  struct sRequest * D.66321;
  const ptrdiff_t _Num;
  struct vector * D.66268;
  struct vector * __first;
  struct vector * __result;
  struct sRequest * D.66240;
  const ptrdiff_t _Num;
  struct vector * D.66187;
  struct vector * __first;
  long unsigned int __n;
  struct sRequest * D.66159;
  const ptrdiff_t _Num;
  struct vector * D.66106;
  struct vector * __first;
  struct vector * __result;
  struct sRequest * D.66078;
  const ptrdiff_t _Num;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct sRequest * const _17;
  long unsigned int pretmp_20;
  struct vector * const _23;
  struct sRequest * const pretmp_24;
  long int __last.29_25;
  long unsigned int _26;
  difference_type _30;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * pretmp_40;
  struct vector * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long unsigned int _55;
  long unsigned int _59;
  sizetype _60;
  struct vector * _63;
  struct vector * _67;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  long unsigned int prephitmp_83;
  struct sRequest * _85;
  long int pretmp_91;
  struct sRequest * _92;
  struct sRequest * _94;
  struct sRequest * _95;
  struct sRequest * _98;
  void * _100;
  struct vector * pretmp_101;
  struct vector * prephitmp_103;
  struct sRequest * const _113;
  struct sRequest * const _114;
  struct sRequest * const _135;
  struct sRequest * const _138;
  struct sRequest * const _139;
  struct sRequest * const _153;
  struct sRequest * const _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  size_type _159;
  struct sRequest * _162;
  struct sRequest * _171;
  struct sRequest * _172;
  struct sRequest * iftmp.24_173;
  long unsigned int prephitmp_174;
  long unsigned int pretmp_175;
  void * _178;
  struct sRequest * _180;
  struct sRequest * const _182;
  long int _183;
  long int _184;
  long int _185;
  long int _186;
  size_type _187;
  struct sRequest * _190;
  struct sRequest * const _191;
  struct sRequest * const _192;
  long int __last.26_193;
  long int __first.27_194;
  long int _195;
  long unsigned int _197;
  struct sRequest * _199;
  long unsigned int _200;
  struct sRequest * _201;
  struct sRequest * iftmp.24_202;
  struct vector * _203;
  long unsigned int _204;
  void * _207;
  struct sRequest * _209;
  struct sRequest * const _211;
  long int _212;
  long int _213;
  long int _214;
  long int _215;
  size_type _216;
  long unsigned int prephitmp_217;
  struct sRequest * _219;
  struct sRequest * const _220;
  struct sRequest * const _221;
  long int __last.26_222;
  long int __first.27_223;
  long int _224;
  long unsigned int _226;
  struct sRequest * _228;
  long unsigned int _229;
  struct sRequest * _230;
  struct sRequest * iftmp.24_231;
  void * _236;
  struct sRequest * _238;
  struct sRequest * const _240;
  long int _241;
  long int _242;
  long int _243;
  long int _244;
  size_type _245;
  struct sRequest * _248;
  struct sRequest * const _249;
  struct sRequest * const _250;
  long int __last.26_251;
  long int __first.27_252;
  long int _253;
  long unsigned int _255;
  struct sRequest * _257;
  long unsigned int _258;
  struct sRequest * _259;
  struct sRequest * iftmp.24_260;
  const ptrdiff_t prephitmp_261;
  struct sRequest * const pretmp_262;
  void * _265;
  struct sRequest * _267;
  struct vector * _269;
  long int pretmp_271;
  long int _273;
  long int _274;
  long int _275;
  long unsigned int _277;
  long unsigned int prephitmp_278;
  struct sRequest * const prephitmp_279;
  struct sRequest * const _283;
  long int _284;
  long int _285;
  long int _286;
  long int _287;
  size_type _288;
  long unsigned int _289;
  struct sRequest * _291;
  struct sRequest * _300;
  long unsigned int _301;
  struct sRequest * _302;
  struct sRequest * iftmp.24_303;
  struct sRequest * const pretmp_305;
  void * _308;
  struct sRequest * _310;
  struct sRequest * const _312;
  long int _313;
  long int _314;
  long int _315;
  long int _316;
  size_type _317;
  long int pretmp_318;
  struct sRequest * _320;
  struct sRequest * const _321;
  struct sRequest * const _322;
  long int __last.26_323;
  long int __first.27_324;
  long int _325;
  long unsigned int _327;
  struct sRequest * _329;
  long unsigned int _330;
  struct sRequest * _331;
  struct sRequest * iftmp.24_332;
  void * _337;
  struct sRequest * _339;
  struct sRequest * const _341;
  long int _342;
  long int _343;
  long int _344;
  long int _345;
  size_type _346;
  long int _347;
  struct sRequest * _349;
  struct sRequest * _358;
  long unsigned int _359;
  struct sRequest * _360;
  struct sRequest * iftmp.24_361;
  long unsigned int prephitmp_364;
  const ptrdiff_t pretmp_378;
  struct sRequest * const pretmp_386;
  bool _428;
  long int pretmp_470;
  const ptrdiff_t pretmp_476;
  long unsigned int prephitmp_545;
  struct sRequest * const pretmp_551;
  struct sRequest * const prephitmp_553;
  long unsigned int pretmp_555;
  long int prephitmp_557;
  struct vector * const prephitmp_558;
  long unsigned int pretmp_559;
  bool _560;
  long int _561;
  difference_type _565;
  long int _567;
  difference_type _568;
  long int _569;
  long unsigned int pretmp_570;
  const ptrdiff_t prephitmp_571;
  long int pretmp_573;
  long int pretmp_574;
  struct sRequest * const pretmp_576;
  long unsigned int prephitmp_578;
  long int pretmp_579;
  struct sRequest * const prephitmp_580;
  struct vector * const pretmp_581;
  long unsigned int pretmp_582;
  long unsigned int prephitmp_583;
  const ptrdiff_t prephitmp_584;
  long unsigned int pretmp_585;
  const ptrdiff_t pretmp_586;
  long int pretmp_589;
  long int pretmp_592;
  long int pretmp_597;
  bool _604;
  struct vector * prephitmp_622;
  long int _629;
  long int _630;
  long unsigned int pretmp_638;
  long unsigned int prephitmp_639;
  long unsigned int pretmp_640;
  long unsigned int prephitmp_641;
  long unsigned int pretmp_642;
  long unsigned int prephitmp_643;
  long unsigned int pretmp_644;
  long unsigned int prephitmp_645;
  struct vector * pretmp_646;
  struct vector * prephitmp_647;
  long unsigned int pretmp_657;
  long unsigned int prephitmp_658;
  long unsigned int pretmp_659;
  long unsigned int prephitmp_660;
  long unsigned int pretmp_661;
  long unsigned int prephitmp_662;
  long unsigned int pretmp_663;
  long unsigned int prephitmp_664;

  <bb 2>:
  # DEBUG D#1131 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#1131
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 193>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.36227._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.36227._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 107>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#582 => &MEM[(const struct vector *)__x_28(D)].D.41044
  # DEBUG this => D#582
  # DEBUG __a => NULL
  _153 = MEM[(struct sRequest * *)__x_28(D)];
  # DEBUG D#88 => __x_28(D)
  _154 = MEM[(struct sRequest * *)__x_28(D) + 8B];
  # DEBUG D#88 => __x_28(D)
  # DEBUG this => D#88
  # DEBUG this => D#88
  _155 = (long int) _154;
  _156 = (long int) _153;
  _157 = _155 - _156;
  _158 = _157 /[ex] 16;
  _159 = (size_type) _158;
  # DEBUG D#584 => &__x_copy.D.41044
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#508 => &D#584->_M_impl
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG D.54074 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG D#506 => D#584
  # DEBUG __n => _159
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  if (_159 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_559 = (long unsigned int) _157;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#504 => &D#505->_M_impl
  # DEBUG D#503 => D#504
  # DEBUG __n => _159
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG D#500 => D#502
  # DEBUG D#501 => 0B
  # DEBUG __n => _159
  # DEBUG this => D#500
  # DEBUG D.66076 => D#501
  # DEBUG D#499 => D#500
  # DEBUG D#498 => D#499
  # DEBUG this => D#498
  if (_159 > 1152921504606846975)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _55 = (long unsigned int) _157;
  _172 = operator new (_55);
  pretmp_581 = MEM[(struct vector * const &)this_9(D) + 8];
  pretmp_91 = (long int) pretmp_581;
  pretmp_576 = MEM[(struct sRequest * *)__x_28(D) + 8B];
  pretmp_551 = MEM[(struct sRequest * *)__x_28(D)];
  pretmp_579 = (long int) pretmp_576;
  pretmp_574 = (long int) pretmp_551;
  pretmp_573 = pretmp_579 - pretmp_574;
  pretmp_476 = pretmp_573 /[ex] 16;
  pretmp_570 = (long unsigned int) pretmp_573;

  <bb 9>:
  # iftmp.24_173 = PHI <0B(5), _172(8)>
  # prephitmp_558 = PHI <_12(5), pretmp_581(8)>
  # prephitmp_557 = PHI <_13(5), pretmp_91(8)>
  # prephitmp_578 = PHI <pretmp_559(5), _55(8)>
  # prephitmp_580 = PHI <_153(5), pretmp_551(8)>
  # prephitmp_571 = PHI <_158(5), pretmp_476(8)>
  # prephitmp_545 = PHI <pretmp_559(5), pretmp_570(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = iftmp.24_173;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = iftmp.24_173;
  _162 = iftmp.24_173 + prephitmp_578;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _162;
  # DEBUG D#583 => &__x_copy.D.41044
  # DEBUG this => D#583
  # DEBUG D#1118 => MEM[(struct sRequest * *)__x_28(D) + 8B]
  # DEBUG D#101 => __x_28(D)
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#1117 => MEM[(struct sRequest * *)__x_28(D)]
  # DEBUG D#102 => __x_28(D)
  # DEBUG this => D#102
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#1117
  # DEBUG __last => D#1118
  # DEBUG __result => NULL
  # DEBUG D.66040 => D#581
  # DEBUG __first => D#1117
  # DEBUG __last => D#1118
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1117
  # DEBUG __last => D#1118
  # DEBUG __result => NULL
  # DEBUG __first => D#1117
  # DEBUG __last => D#1118
  # DEBUG __result => NULL
  # DEBUG __it => D#1118
  # DEBUG __it$_M_current => D#1118
  # DEBUG __it => D#1117
  # DEBUG __it$_M_current => D#1117
  # DEBUG __first => D#1117
  # DEBUG __last => D#1118
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#1118
  # DEBUG __it => D#1118
  # DEBUG this => NULL
  # DEBUG __it => D#1117
  # DEBUG __it => D#1117
  # DEBUG this => NULL
  # DEBUG __first => D#1117
  # DEBUG __last => D#1118
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#1117
  # DEBUG __last => D#1118
  # DEBUG __result => NULL
  # DEBUG D#1116 => (long int) D#1118
  # DEBUG D#1115 => (long int) D#1117
  # DEBUG D#1114 => D#1116 - D#1115
  # DEBUG _Num => D#1114 /[ex] 16
  if (prephitmp_571 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __builtin_memmove (iftmp.24_173, prephitmp_580, prephitmp_545);

  <bb 11>:
  _171 = iftmp.24_173 + prephitmp_545;
  __x_copy.D.41044._M_impl._M_finish = _171;
  # DEBUG this => this_9(D)
  # DEBUG D#103 => &this_9(D)->D.36227._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#103
  # DEBUG D#1113 => MEM[(struct vector * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.45108
  # DEBUG __rhs => &__position
  # DEBUG this => &D.45108
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_557 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#1113
  if (__n_7(D) < __elems_after_57)
    goto <bb 12>;
  else
    goto <bb 49>;

  <bb 12>:
  # DEBUG D#673 => &this_9(D)->D.36227
  # DEBUG this => D#673
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_558 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#1113
  # DEBUG __result => D#1113
  # DEBUG __alloc => D#587
  # DEBUG D#586 => D#587
  # DEBUG D#585 => D#586
  # DEBUG __first => __last_61
  # DEBUG __last => D#1113
  # DEBUG __result => D#1113
  # DEBUG D.60062 => D#585
  # DEBUG __first => __last_61
  # DEBUG __last => D#1113
  # DEBUG __result => D#1113
  # DEBUG __assignable => 1
  # DEBUG __first => __last_61
  # DEBUG __last => D#1113
  # DEBUG __result => D#1113
  # DEBUG __cur => D#1113
  # DEBUG __cur => D#1113
  # DEBUG __first => __last_61
  if (__last_61 == prephitmp_558)
    goto <bb 28>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # __last_246 = PHI <__last_61(13), __last_176(26)>
  # __old_finish_599 = PHI <prephitmp_558(13), __old_finish_177(26)>
  # DEBUG __cur => __old_finish_599
  # DEBUG __first => __last_246
  # DEBUG __r => __old_finish_599
  # DEBUG __p => NULL
  # DEBUG __value => __last_246
  # DEBUG D#24 => 24
  # DEBUG __p => NULL
  # DEBUG D.58615 => D#24
  if (__old_finish_599 != 0B)
    goto <bb 15>;
  else
    goto <bb 25>;

  <bb 15>:
  # DEBUG this => __old_finish_599
  # DEBUG __x => __last_246
  # DEBUG D#582 => &MEM[(const struct vector *)__last_246].D.41044
  # DEBUG this => D#582
  # DEBUG __a => NULL
  _135 = MEM[(struct sRequest * *)__last_246];
  # DEBUG D#88 => __last_246
  _182 = MEM[(struct sRequest * *)__last_246 + 8B];
  # DEBUG D#88 => __last_246
  # DEBUG this => D#88
  # DEBUG this => D#88
  _183 = (long int) _182;
  _184 = (long int) _135;
  _185 = _183 - _184;
  _186 = _185 /[ex] 16;
  _187 = (size_type) _186;
  # DEBUG D#584 => &__old_finish_599->D.41044
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#508 => &D#584->_M_impl
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG D.54074 => NULL
  MEM[(struct _Vector_impl *)__old_finish_599]._M_start = 0B;
  MEM[(struct _Vector_impl *)__old_finish_599]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__old_finish_599]._M_end_of_storage = 0B;
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG D#506 => D#584
  # DEBUG __n => _187
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  if (_187 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  pretmp_657 = (long unsigned int) _185;
  goto <bb 21>;

  <bb 17>:
  # DEBUG D#504 => &D#505->_M_impl
  # DEBUG D#503 => D#504
  # DEBUG __n => _187
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG D#500 => D#502
  # DEBUG D#501 => 0B
  # DEBUG __n => _187
  # DEBUG this => D#500
  # DEBUG D.66157 => D#501
  # DEBUG D#499 => D#500
  # DEBUG D#498 => D#499
  # DEBUG this => D#498
  if (_187 > 1152921504606846975)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # __old_finish_465 = PHI <__old_finish_599(17)>
  std::__throw_bad_alloc ();

  <bb 19>:
  _200 = (long unsigned int) _185;
  _201 = operator new (_200);
  goto <bb 21>;

  # __old_finish_464 = PHI <__old_finish_599(19)>
<L39>:
  goto <bb 31> (<L19>);

  <bb 21>:
  # iftmp.24_202 = PHI <0B(16), _201(19)>
  # prephitmp_658 = PHI <pretmp_657(16), _200(19)>
  MEM[(struct _Vector_base *)__old_finish_599]._M_impl._M_start = iftmp.24_202;
  MEM[(struct _Vector_base *)__old_finish_599]._M_impl._M_finish = iftmp.24_202;
  _190 = iftmp.24_202 + prephitmp_658;
  MEM[(struct _Vector_base *)__old_finish_599]._M_impl._M_end_of_storage = _190;
  # DEBUG D#583 => &__old_finish_599->D.41044
  # DEBUG this => D#583
  _191 = MEM[(struct sRequest * *)__last_246 + 8B];
  # DEBUG D#101 => __last_246
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _192 = MEM[(struct sRequest * *)__last_246];
  # DEBUG D#102 => __last_246
  # DEBUG this => D#102
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG D.66121 => D#581
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => _191
  # DEBUG __it$_M_current => _191
  # DEBUG __it => _192
  # DEBUG __it$_M_current => _192
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _191
  # DEBUG __it => _191
  # DEBUG this => NULL
  # DEBUG __it => _192
  # DEBUG __it => _192
  # DEBUG this => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  __last.26_193 = (long int) _191;
  __first.27_194 = (long int) _192;
  _195 = __last.26_193 - __first.27_194;
  _Num_196 = _195 /[ex] 16;
  # DEBUG _Num => _Num_196
  if (_Num_196 != 0)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  pretmp_659 = (long unsigned int) _195;
  goto <bb 24>;

  <bb 23>:
  _197 = (long unsigned int) _195;
  __builtin_memmove (iftmp.24_202, _192, _197);

  <bb 24>:
  # prephitmp_660 = PHI <pretmp_659(22), _197(23)>
  _199 = iftmp.24_202 + prephitmp_660;
  __old_finish_599->D.41044._M_impl._M_finish = _199;

  <bb 25>:
  __last_176 = __last_246 + 24;
  # DEBUG __first => __last_176
  __old_finish_177 = __old_finish_599 + 24;
  # DEBUG __cur => __old_finish_177
  # DEBUG __cur => __old_finish_177
  # DEBUG __first => __last_176
  if (__last_176 == prephitmp_558)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 14>;

  <bb 27>:
  pretmp_646 = this_9(D)->D.36227._M_impl._M_finish;

  <bb 28>:
  # prephitmp_647 = PHI <pretmp_646(27), prephitmp_558(12)>
  _63 = prephitmp_647 + _59;
  this_9(D)->D.36227._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#1131
  # DEBUG __last => __last_61
  # DEBUG __result => D#1113
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#1131
  # DEBUG __it => D#1131
  # DEBUG __first => D#1131
  # DEBUG __last => __last_61
  # DEBUG __result => D#1113
  # DEBUG __it => D#1113
  # DEBUG __it => D#1113
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#1131
  # DEBUG __it => D#1131
  # DEBUG __first => D#1131
  # DEBUG __last => __last_61
  # DEBUG __result => D#1113
  # DEBUG __simple => 0
  # DEBUG __first => D#1131
  # DEBUG __last => __last_61
  # DEBUG __result => D#1113
  __last.29_25 = (long int) __last_61;
  _78 = __last.29_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#1113
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 29>;
  else
    goto <bb 38>;

  <bb 29>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#1131
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1131
  if (__position_22 == _67)
    goto <bb 43>;
  else
    goto <bb 44>;

<L38>:

  # __old_finish_421 = PHI <__old_finish_464(20), __old_finish_465(30)>
<L19>:
  _178 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_178);
  # DEBUG __first => D#1113
  # DEBUG __last => __old_finish_421
  # DEBUG __first => D#1113
  # DEBUG __last => __old_finish_421

  <bb 32>:
  # __old_finish_179 = PHI <prephitmp_558(31), __old_finish_181(35)>
  # DEBUG __first => __old_finish_179
  if (__old_finish_179 == __old_finish_421)
    goto <bb 36>;
  else
    goto <bb 33>;

  <bb 33>:
  # DEBUG __r => __old_finish_179
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#294
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _180 = MEM[(struct _Vector_base *)__old_finish_179]._M_impl._M_start;
  # DEBUG D#291 => (long int) _180
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _180
  # DEBUG __n => D#288
  if (_180 != 0B)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _180
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _180
  # DEBUG this => D#280
  # DEBUG D.66099 => D#281
  operator delete (_180);

  <bb 35>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)__old_finish_179] ={v} {CLOBBER};
  __old_finish_181 = __old_finish_179 + 24;
  # DEBUG __first => __old_finish_181
  goto <bb 32>;

  <bb 36>:
  __cxa_rethrow ();

<L21>:
  __cxa_end_catch ();
  resx 13

  <bb 38>:

  <bb 39>:
  # __old_finish_618 = PHI <prephitmp_558(38), __old_finish_65(42)>
  # __last_619 = PHI <__last_61(38), __last_68(42)>
  # __n_617 = PHI <__n_73(38), __n_58(42)>
  # DEBUG __n => __n_617
  # DEBUG __result => __old_finish_618
  # DEBUG __last => __last_619
  __last_68 = __last_619 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_618 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<Allocator::sRequest>::operator= (__old_finish_65, __last_68);
  goto <bb 41>;

<L41>:
  goto <bb 195> (<L10>);

  <bb 41>:
  __n_58 = __n_617 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 29>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 39>;

  <bb 43>:
  goto <bb 104>;

  <bb 44>:

  <bb 45>:
  # __position_616 = PHI <__position_22(44), __position_81(48)>
  # DEBUG __first => __position_616
  std::vector<Allocator::sRequest>::operator= (__position_616, &__x_copy);
  goto <bb 47>;

<L42>:
  goto <bb 195> (<L10>);

  <bb 47>:
  __position_81 = __position_616 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 43>;
  else
    goto <bb 48>;

  <bb 48>:
  goto <bb 45>;

  <bb 49>:
  # DEBUG D#674 => &this_9(D)->D.36227
  # DEBUG this => D#674
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#1113
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.60108 => D#590
  # DEBUG __first => D#1113
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => D#1113
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => D#1113
  # DEBUG __cur => D#1113
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 65>;
  else
    goto <bb 50>;

  <bb 50>:

  <bb 51>:
  # __n_600 = PHI <__n_70(50), __n_205(64)>
  # __old_finish_598 = PHI <prephitmp_558(50), __old_finish_206(64)>
  # DEBUG __cur => __old_finish_598
  # DEBUG __n => __n_600
  # DEBUG __r => __old_finish_598
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#24 => 24
  # DEBUG __p => NULL
  # DEBUG D.58615 => D#24
  if (__old_finish_598 != 0B)
    goto <bb 52>;
  else
    goto <bb 62>;

  <bb 52>:
  # DEBUG this => __old_finish_598
  # DEBUG __x => &__x_copy
  # DEBUG D#582 => &__x_copy.D.41044
  # DEBUG this => D#582
  # DEBUG __a => NULL
  _138 = MEM[(struct sRequest * *)&__x_copy];
  # DEBUG D#88 => &__x_copy
  _211 = MEM[(struct sRequest * *)&__x_copy + 8B];
  # DEBUG D#88 => &__x_copy
  # DEBUG this => D#88
  # DEBUG this => D#88
  _212 = (long int) _211;
  _213 = (long int) _138;
  _214 = _212 - _213;
  _215 = _214 /[ex] 16;
  _216 = (size_type) _215;
  # DEBUG D#584 => &__old_finish_598->D.41044
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#508 => &D#584->_M_impl
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG D.54074 => NULL
  MEM[(struct _Vector_impl *)__old_finish_598]._M_start = 0B;
  MEM[(struct _Vector_impl *)__old_finish_598]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__old_finish_598]._M_end_of_storage = 0B;
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG D#506 => D#584
  # DEBUG __n => _216
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  if (_216 != 0)
    goto <bb 54>;
  else
    goto <bb 53>;

  <bb 53>:
  pretmp_642 = (long unsigned int) _214;
  goto <bb 58>;

  <bb 54>:
  # DEBUG D#504 => &D#505->_M_impl
  # DEBUG D#503 => D#504
  # DEBUG __n => _216
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG D#500 => D#502
  # DEBUG D#501 => 0B
  # DEBUG __n => _216
  # DEBUG this => D#500
  # DEBUG D.66238 => D#501
  # DEBUG D#499 => D#500
  # DEBUG D#498 => D#499
  # DEBUG this => D#498
  if (_216 > 1152921504606846975)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  # __old_finish_496 = PHI <__old_finish_598(54)>
  std::__throw_bad_alloc ();

  <bb 56>:
  _229 = (long unsigned int) _214;
  _230 = operator new (_229);
  goto <bb 58>;

  # __old_finish_466 = PHI <__old_finish_598(56)>
<L44>:
  goto <bb 67> (<L22>);

  <bb 58>:
  # iftmp.24_231 = PHI <0B(53), _230(56)>
  # prephitmp_643 = PHI <pretmp_642(53), _229(56)>
  MEM[(struct _Vector_base *)__old_finish_598]._M_impl._M_start = iftmp.24_231;
  MEM[(struct _Vector_base *)__old_finish_598]._M_impl._M_finish = iftmp.24_231;
  _219 = iftmp.24_231 + prephitmp_643;
  MEM[(struct _Vector_base *)__old_finish_598]._M_impl._M_end_of_storage = _219;
  # DEBUG D#583 => &__old_finish_598->D.41044
  # DEBUG this => D#583
  _220 = MEM[(struct sRequest * *)&__x_copy + 8B];
  # DEBUG D#101 => &__x_copy
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _221 = MEM[(struct sRequest * *)&__x_copy];
  # DEBUG D#102 => &__x_copy
  # DEBUG this => D#102
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _221
  # DEBUG __last => _220
  # DEBUG __result => NULL
  # DEBUG D.66202 => D#581
  # DEBUG __first => _221
  # DEBUG __last => _220
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _221
  # DEBUG __last => _220
  # DEBUG __result => NULL
  # DEBUG __first => _221
  # DEBUG __last => _220
  # DEBUG __result => NULL
  # DEBUG __it => _220
  # DEBUG __it$_M_current => _220
  # DEBUG __it => _221
  # DEBUG __it$_M_current => _221
  # DEBUG __first => _221
  # DEBUG __last => _220
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _220
  # DEBUG __it => _220
  # DEBUG this => NULL
  # DEBUG __it => _221
  # DEBUG __it => _221
  # DEBUG this => NULL
  # DEBUG __first => _221
  # DEBUG __last => _220
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _221
  # DEBUG __last => _220
  # DEBUG __result => NULL
  __last.26_222 = (long int) _220;
  __first.27_223 = (long int) _221;
  _224 = __last.26_222 - __first.27_223;
  _Num_225 = _224 /[ex] 16;
  # DEBUG _Num => _Num_225
  if (_Num_225 != 0)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  pretmp_644 = (long unsigned int) _224;
  goto <bb 61>;

  <bb 60>:
  _226 = (long unsigned int) _224;
  __builtin_memmove (iftmp.24_231, _221, _226);

  <bb 61>:
  # prephitmp_645 = PHI <pretmp_644(59), _226(60)>
  _228 = iftmp.24_231 + prephitmp_645;
  __old_finish_598->D.41044._M_impl._M_finish = _228;

  <bb 62>:
  __n_205 = __n_600 + 18446744073709551615;
  # DEBUG __n => __n_205
  __old_finish_206 = __old_finish_598 + 24;
  # DEBUG __cur => __old_finish_206
  # DEBUG __cur => __old_finish_206
  # DEBUG __n => __n_205
  if (__n_205 == 0)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # __old_finish_499 = PHI <__old_finish_206(62)>
  goto <bb 65>;

  <bb 64>:
  goto <bb 51>;

  <bb 65>:
  # __old_finish_611 = PHI <__old_finish_499(63), prephitmp_558(49)>
  this_9(D)->D.36227._M_impl._M_finish = __old_finish_611;
  # DEBUG D#675 => &this_9(D)->D.36227
  # DEBUG this => D#675
  # DEBUG this => &__position
  # DEBUG __first => D#1131
  # DEBUG __last => D#1113
  # DEBUG __result => NULL
  # DEBUG __alloc => D#587
  # DEBUG D#586 => D#587
  # DEBUG D#585 => D#586
  # DEBUG __first => D#1131
  # DEBUG __last => D#1113
  # DEBUG __result => NULL
  # DEBUG D.60121 => D#585
  # DEBUG __first => D#1131
  # DEBUG __last => D#1113
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1131
  # DEBUG __last => D#1113
  # DEBUG __result => __old_finish_611
  # DEBUG __cur => __old_finish_611
  # DEBUG __first => D#1131
  if (__position_22 == prephitmp_558)
    goto <bb 216>;
  else
    goto <bb 75>;

<L43>:

  # __old_finish_422 = PHI <__old_finish_466(57), __old_finish_496(66)>
<L22>:
  _207 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_207);
  # DEBUG __first => D#1113
  # DEBUG __last => __old_finish_422
  # DEBUG __first => D#1113
  # DEBUG __last => __old_finish_422

  <bb 68>:
  # __old_finish_208 = PHI <prephitmp_558(67), __old_finish_210(71)>
  # DEBUG __first => __old_finish_208
  if (__old_finish_208 == __old_finish_422)
    goto <bb 72>;
  else
    goto <bb 69>;

  <bb 69>:
  # DEBUG __r => __old_finish_208
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#294
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _209 = MEM[(struct _Vector_base *)__old_finish_208]._M_impl._M_start;
  # DEBUG D#291 => (long int) _209
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _209
  # DEBUG __n => D#288
  if (_209 != 0B)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _209
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _209
  # DEBUG this => D#280
  # DEBUG D.66180 => D#281
  operator delete (_209);

  <bb 71>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)__old_finish_208] ={v} {CLOBBER};
  __old_finish_210 = __old_finish_208 + 24;
  # DEBUG __first => __old_finish_210
  goto <bb 68>;

  <bb 72>:
  __cxa_rethrow ();

<L24>:
  __cxa_end_catch ();
  resx 16

<L45>:
  goto <bb 195> (<L10>);

  <bb 75>:

  <bb 76>:
  # __position_612 = PHI <__position_22(75), __position_234(88)>
  # __old_finish_613 = PHI <__old_finish_611(75), __old_finish_235(88)>
  # DEBUG __cur => __old_finish_613
  # DEBUG __first => __position_612
  # DEBUG __r => __old_finish_613
  # DEBUG __p => NULL
  # DEBUG __value => __position_612
  # DEBUG D#24 => 24
  # DEBUG __p => NULL
  # DEBUG D.58615 => D#24
  if (__old_finish_613 != 0B)
    goto <bb 77>;
  else
    goto <bb 87>;

  <bb 77>:
  # DEBUG this => __old_finish_613
  # DEBUG __x => __position_612
  # DEBUG D#582 => &MEM[(const struct vector *)__position_612].D.41044
  # DEBUG this => D#582
  # DEBUG __a => NULL
  _139 = MEM[(struct sRequest * *)__position_612];
  # DEBUG D#88 => __position_612
  _240 = MEM[(struct sRequest * *)__position_612 + 8B];
  # DEBUG D#88 => __position_612
  # DEBUG this => D#88
  # DEBUG this => D#88
  _241 = (long int) _240;
  _242 = (long int) _139;
  _243 = _241 - _242;
  _244 = _243 /[ex] 16;
  _245 = (size_type) _244;
  # DEBUG D#584 => &__old_finish_613->D.41044
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#508 => &D#584->_M_impl
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG D.54074 => NULL
  MEM[(struct _Vector_impl *)__old_finish_613]._M_start = 0B;
  MEM[(struct _Vector_impl *)__old_finish_613]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__old_finish_613]._M_end_of_storage = 0B;
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG D#506 => D#584
  # DEBUG __n => _245
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  if (_245 != 0)
    goto <bb 79>;
  else
    goto <bb 78>;

  <bb 78>:
  pretmp_638 = (long unsigned int) _243;
  goto <bb 83>;

  <bb 79>:
  # DEBUG D#504 => &D#505->_M_impl
  # DEBUG D#503 => D#504
  # DEBUG __n => _245
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG D#500 => D#502
  # DEBUG D#501 => 0B
  # DEBUG __n => _245
  # DEBUG this => D#500
  # DEBUG D.66319 => D#501
  # DEBUG D#499 => D#500
  # DEBUG D#498 => D#499
  # DEBUG this => D#498
  if (_245 > 1152921504606846975)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  # __old_finish_443 = PHI <__old_finish_613(79)>
  std::__throw_bad_alloc ();

  <bb 81>:
  _258 = (long unsigned int) _243;
  _259 = operator new (_258);
  goto <bb 83>;

  # __old_finish_442 = PHI <__old_finish_613(81)>
<L47>:
  goto <bb 91> (<L25>);

  <bb 83>:
  # iftmp.24_260 = PHI <0B(78), _259(81)>
  # prephitmp_639 = PHI <pretmp_638(78), _258(81)>
  MEM[(struct _Vector_base *)__old_finish_613]._M_impl._M_start = iftmp.24_260;
  MEM[(struct _Vector_base *)__old_finish_613]._M_impl._M_finish = iftmp.24_260;
  _248 = iftmp.24_260 + prephitmp_639;
  MEM[(struct _Vector_base *)__old_finish_613]._M_impl._M_end_of_storage = _248;
  # DEBUG D#583 => &__old_finish_613->D.41044
  # DEBUG this => D#583
  _249 = MEM[(struct sRequest * *)__position_612 + 8B];
  # DEBUG D#101 => __position_612
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _250 = MEM[(struct sRequest * *)__position_612];
  # DEBUG D#102 => __position_612
  # DEBUG this => D#102
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _250
  # DEBUG __last => _249
  # DEBUG __result => NULL
  # DEBUG D.66283 => D#581
  # DEBUG __first => _250
  # DEBUG __last => _249
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _250
  # DEBUG __last => _249
  # DEBUG __result => NULL
  # DEBUG __first => _250
  # DEBUG __last => _249
  # DEBUG __result => NULL
  # DEBUG __it => _249
  # DEBUG __it$_M_current => _249
  # DEBUG __it => _250
  # DEBUG __it$_M_current => _250
  # DEBUG __first => _250
  # DEBUG __last => _249
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _249
  # DEBUG __it => _249
  # DEBUG this => NULL
  # DEBUG __it => _250
  # DEBUG __it => _250
  # DEBUG this => NULL
  # DEBUG __first => _250
  # DEBUG __last => _249
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _250
  # DEBUG __last => _249
  # DEBUG __result => NULL
  __last.26_251 = (long int) _249;
  __first.27_252 = (long int) _250;
  _253 = __last.26_251 - __first.27_252;
  _Num_254 = _253 /[ex] 16;
  # DEBUG _Num => _Num_254
  if (_Num_254 != 0)
    goto <bb 85>;
  else
    goto <bb 84>;

  <bb 84>:
  pretmp_640 = (long unsigned int) _253;
  goto <bb 86>;

  <bb 85>:
  _255 = (long unsigned int) _253;
  __builtin_memmove (iftmp.24_260, _250, _255);

  <bb 86>:
  # prephitmp_641 = PHI <pretmp_640(84), _255(85)>
  _257 = iftmp.24_260 + prephitmp_641;
  __old_finish_613->D.41044._M_impl._M_finish = _257;

  <bb 87>:
  __position_234 = __position_612 + 24;
  # DEBUG __first => __position_234
  __old_finish_235 = __old_finish_613 + 24;
  # DEBUG __cur => __old_finish_235
  # DEBUG __cur => __old_finish_235
  # DEBUG __first => __position_234
  if (__position_234 == prephitmp_558)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  goto <bb 76>;

  <bb 89>:
  _74 = this_9(D)->D.36227._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.36227._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#1131
  # DEBUG __last => D#1113
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1131
  if (__position_22 == prephitmp_558)
    goto <bb 43>;
  else
    goto <bb 99>;

<L46>:

  # __old_finish_409 = PHI <__old_finish_442(82), __old_finish_443(90)>
<L25>:
  _236 = __builtin_eh_pointer (20);
  __cxa_begin_catch (_236);
  # DEBUG __first => __old_finish_611
  # DEBUG __last => __old_finish_409
  # DEBUG __first => __old_finish_611
  # DEBUG __last => __old_finish_409

  <bb 92>:
  # __old_finish_237 = PHI <__old_finish_611(91), __old_finish_239(95)>
  # DEBUG __first => __old_finish_237
  if (__old_finish_237 == __old_finish_409)
    goto <bb 96>;
  else
    goto <bb 93>;

  <bb 93>:
  # DEBUG __r => __old_finish_237
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#294
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _238 = MEM[(struct _Vector_base *)__old_finish_237]._M_impl._M_start;
  # DEBUG D#291 => (long int) _238
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _238
  # DEBUG __n => D#288
  if (_238 != 0B)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _238
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _238
  # DEBUG this => D#280
  # DEBUG D.66261 => D#281
  operator delete (_238);

  <bb 95>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)__old_finish_237] ={v} {CLOBBER};
  __old_finish_239 = __old_finish_237 + 24;
  # DEBUG __first => __old_finish_239
  goto <bb 92>;

  <bb 96>:
  __cxa_rethrow ();

<L27>:
  __cxa_end_catch ();
  resx 19

<L48>:
  goto <bb 195> (<L10>);

  <bb 99>:

  <bb 100>:
  # __position_603 = PHI <__position_22(99), __position_84(103)>
  # DEBUG __first => __position_603
  std::vector<Allocator::sRequest>::operator= (__position_603, &__x_copy);
  goto <bb 102>;

<L49>:
  goto <bb 195> (<L10>);

  <bb 102>:
  __position_84 = __position_603 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_558)
    goto <bb 43>;
  else
    goto <bb 103>;

  <bb 103>:
  goto <bb 100>;

  <bb 104>:
  # DEBUG this => &__x_copy
  # DEBUG D#294 => &__x_copy.D.41044
  # DEBUG this => D#294
  # DEBUG D#297 => __x_copy.D.41044._M_impl._M_finish
  # DEBUG D#296 => __x_copy.D.41044._M_impl._M_start
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG D#295 => &__x_copy.D.41044
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _85 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#291 => (long int) _85
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _85
  # DEBUG __n => D#288
  if (_85 != 0B)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _85
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _85
  # DEBUG this => D#280
  # DEBUG D.60154 => D#281
  operator delete (_85);

  <bb 106>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  __x_copy ={v} {CLOBBER};
  goto <bb 193>;

  <bb 107>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#520 => this_9(D)
  # DEBUG this => D#520
  # DEBUG D#519 => D#520
  # DEBUG D#518 => &D#519->D.36227
  # DEBUG this => D#518
  # DEBUG __a => D#517
  # DEBUG D#516 => D#517
  # DEBUG D#515 => D#516
  # DEBUG this => D#515
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#89 => this_9(D)
  # DEBUG D#89 => this_9(D)
  # DEBUG this => D#89
  # DEBUG this => D#89
  _273 = (long int) _23;
  _274 = _13 - _273;
  _275 = _274 /[ex] 24;
  _276 = (const long unsigned int) _275;
  _277 = 768614336404564650 - _276;
  if (__n_7(D) > _277)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 109>:
  # DEBUG D#89 => this_9(D)
  # DEBUG D#89 => this_9(D)
  # DEBUG this => D#89
  # DEBUG this => D#89
  # DEBUG D#89 => this_9(D)
  # DEBUG D#89 => this_9(D)
  # DEBUG this => D#89
  # DEBUG this => D#89
  # DEBUG __a => &D.66371
  # DEBUG __b => &__n
  _289 = MAX_EXPR <__n_7(D), _276>;
  __len_281 = _276 + _289;
  # DEBUG __len => __len_281
  # DEBUG D#89 => this_9(D)
  # DEBUG D#89 => this_9(D)
  # DEBUG this => D#89
  # DEBUG this => D#89
  # DEBUG D#520 => this_9(D)
  # DEBUG this => D#520
  # DEBUG D#519 => D#520
  # DEBUG D#518 => &D#519->D.36227
  # DEBUG this => D#518
  # DEBUG __a => D#517
  # DEBUG D#516 => D#517
  # DEBUG D#515 => D#516
  # DEBUG this => D#515
  _560 = __len_281 > 768614336404564650;
  _604 = _276 > __len_281;
  _428 = _560 | _604;
  if (_428 != 0)
    goto <bb 214>;
  else
    goto <bb 215>;

  <bb 110>:
  pretmp_582 = __len_281 * 24;

  <bb 111>:
  # __elems_before_412 = PHI <__elems_before_566(214), __elems_before_554(110)>
  # _629 = PHI <_567(214), _347(110)>
  # prephitmp_583 = PHI <18446744073709551600(214), pretmp_582(110)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#168 => &this_9(D)->D.36227._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#168
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45141
  # DEBUG this => &__position
  # DEBUG this => &D.45141
  # DEBUG __elems_before => __elems_before_412
  # DEBUG D#685 => &this_9(D)->D.36227
  # DEBUG D#528 => D#685
  # DEBUG __n => NULL
  # DEBUG this => D#528
  # DEBUG D#527 => D#528
  # DEBUG D#526 => &D#527->_M_impl
  # DEBUG D#525 => D#526
  # DEBUG __n => NULL
  # DEBUG __a => D#525
  # DEBUG D#524 => D#525
  # DEBUG D#522 => D#524
  # DEBUG D#523 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#522
  # DEBUG D.66359 => D#523
  # DEBUG D#521 => D#522
  # DEBUG D#515 => D#521
  # DEBUG this => D#515
  _269 = operator new (prephitmp_583);

  <bb 112>:
  # __new_finish_270 = PHI <0B(215), _269(111)>
  # __elems_before_631 = PHI <__elems_before_554(215), __elems_before_412(111)>
  # _630 = PHI <_347(215), _629(111)>
  # prephitmp_278 = PHI <0(215), prephitmp_583(111)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#669 => &this_9(D)->D.36227
  # DEBUG this => D#669
  _26 = (long unsigned int) _630;
  __first_27 = __new_finish_270 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.60162 => D#590
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 113>:
  # __n_633 = PHI <__n_263(125), __n_7(D)(112)>
  # __first_632 = PHI <__first_264(125), __first_27(112)>
  # DEBUG __cur => __first_632
  # DEBUG __n => __n_633
  # DEBUG __r => __first_632
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#24 => 24
  # DEBUG __p => NULL
  # DEBUG D.58615 => D#24
  if (__first_632 != 0B)
    goto <bb 114>;
  else
    goto <bb 124>;

  <bb 114>:
  # DEBUG this => __first_632
  # DEBUG __x => __x_28(D)
  # DEBUG D#582 => &MEM[(const struct vector *)__x_28(D)].D.41044
  # DEBUG this => D#582
  # DEBUG __a => NULL
  _17 = MEM[(struct sRequest * *)__x_28(D)];
  # DEBUG D#88 => __x_28(D)
  _283 = MEM[(struct sRequest * *)__x_28(D) + 8B];
  # DEBUG D#88 => __x_28(D)
  # DEBUG this => D#88
  # DEBUG this => D#88
  _284 = (long int) _283;
  _285 = (long int) _17;
  _286 = _284 - _285;
  _287 = _286 /[ex] 16;
  _288 = (size_type) _287;
  # DEBUG D#584 => &__first_632->D.41044
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#508 => &D#584->_M_impl
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG D.54074 => NULL
  MEM[(struct _Vector_impl *)__first_632]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_632]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_632]._M_end_of_storage = 0B;
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG D#506 => D#584
  # DEBUG __n => _288
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  if (_288 != 0)
    goto <bb 116>;
  else
    goto <bb 115>;

  <bb 115>:
  pretmp_585 = (long unsigned int) _286;
  goto <bb 121>;

  <bb 116>:
  # DEBUG D#504 => &D#505->_M_impl
  # DEBUG D#503 => D#504
  # DEBUG __n => _288
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG D#500 => D#502
  # DEBUG D#501 => 0B
  # DEBUG __n => _288
  # DEBUG this => D#500
  # DEBUG D.66419 => D#501
  # DEBUG D#499 => D#500
  # DEBUG D#498 => D#499
  # DEBUG this => D#498
  if (_288 > 1152921504606846975)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  # __first_424 = PHI <__first_632(116)>
  std::__throw_bad_alloc ();

  <bb 118>:
  _301 = (long unsigned int) _286;
  _302 = operator new (_301);
  goto <bb 120>;

  # __first_423 = PHI <__first_632(118)>
<L51>:
  goto <bb 128> (<L28>);

  <bb 120>:
  pretmp_262 = MEM[(struct sRequest * *)__x_28(D) + 8B];
  pretmp_24 = MEM[(struct sRequest * *)__x_28(D)];
  pretmp_597 = (long int) pretmp_262;
  pretmp_589 = (long int) pretmp_24;
  pretmp_592 = pretmp_597 - pretmp_589;
  pretmp_586 = pretmp_592 /[ex] 16;
  pretmp_663 = (long unsigned int) pretmp_592;

  <bb 121>:
  # iftmp.24_303 = PHI <0B(115), _302(120)>
  # prephitmp_553 = PHI <_17(115), pretmp_24(120)>
  # prephitmp_584 = PHI <_287(115), pretmp_586(120)>
  # prephitmp_217 = PHI <pretmp_585(115), _301(120)>
  # prephitmp_664 = PHI <pretmp_585(115), pretmp_663(120)>
  MEM[(struct _Vector_base *)__first_632]._M_impl._M_start = iftmp.24_303;
  MEM[(struct _Vector_base *)__first_632]._M_impl._M_finish = iftmp.24_303;
  _291 = iftmp.24_303 + prephitmp_217;
  MEM[(struct _Vector_base *)__first_632]._M_impl._M_end_of_storage = _291;
  # DEBUG D#583 => &__first_632->D.41044
  # DEBUG this => D#583
  # DEBUG D#1130 => MEM[(struct sRequest * *)__x_28(D) + 8B]
  # DEBUG D#101 => __x_28(D)
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#1129 => MEM[(struct sRequest * *)__x_28(D)]
  # DEBUG D#102 => __x_28(D)
  # DEBUG this => D#102
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#1129
  # DEBUG __last => D#1130
  # DEBUG __result => NULL
  # DEBUG D.66383 => D#581
  # DEBUG __first => D#1129
  # DEBUG __last => D#1130
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1129
  # DEBUG __last => D#1130
  # DEBUG __result => NULL
  # DEBUG __first => D#1129
  # DEBUG __last => D#1130
  # DEBUG __result => NULL
  # DEBUG __it => D#1130
  # DEBUG __it$_M_current => D#1130
  # DEBUG __it => D#1129
  # DEBUG __it$_M_current => D#1129
  # DEBUG __first => D#1129
  # DEBUG __last => D#1130
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#1130
  # DEBUG __it => D#1130
  # DEBUG this => NULL
  # DEBUG __it => D#1129
  # DEBUG __it => D#1129
  # DEBUG this => NULL
  # DEBUG __first => D#1129
  # DEBUG __last => D#1130
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#1129
  # DEBUG __last => D#1130
  # DEBUG __result => NULL
  # DEBUG D#1128 => (long int) D#1130
  # DEBUG D#1127 => (long int) D#1129
  # DEBUG D#1126 => D#1128 - D#1127
  # DEBUG _Num => D#1126 /[ex] 16
  if (prephitmp_584 != 0)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  __builtin_memmove (iftmp.24_303, prephitmp_553, prephitmp_664);

  <bb 123>:
  _300 = iftmp.24_303 + prephitmp_664;
  __first_632->D.41044._M_impl._M_finish = _300;

  <bb 124>:
  __n_263 = __n_633 + 18446744073709551615;
  # DEBUG __n => __n_263
  __first_264 = __first_632 + 24;
  # DEBUG __cur => __first_264
  # DEBUG __cur => __first_264
  # DEBUG __n => __n_263
  if (__n_263 == 0)
    goto <bb 126>;
  else
    goto <bb 125>;

  <bb 125>:
  goto <bb 113>;

  <bb 126>:
  # DEBUG __new_finish => 0B
  # DEBUG D#670 => &this_9(D)->D.36227
  # DEBUG this => D#670
  # DEBUG this => &__position
  __first_31 = this_9(D)->D.36227._M_impl._M_start;
  # DEBUG __first => __first_31
  # DEBUG __last => D#1131
  # DEBUG __result => NULL
  # DEBUG __alloc => D#589
  # DEBUG D#588 => D#589
  # DEBUG D#585 => D#588
  # DEBUG __first => __first_31
  # DEBUG __last => D#1131
  # DEBUG __result => NULL
  # DEBUG D.60183 => D#585
  # DEBUG __first => __first_31
  # DEBUG __last => D#1131
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => __first_31
  # DEBUG __last => D#1131
  # DEBUG __result => __new_finish_270
  # DEBUG __cur => __new_finish_270
  # DEBUG __first => __first_31
  if (__position_22 == __first_31)
    goto <bb 150>;
  else
    goto <bb 135>;

<L50>:

  # __first_408 = PHI <__first_423(119), __first_424(127)>
<L28>:
  _265 = __builtin_eh_pointer (23);
  __cxa_begin_catch (_265);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_408
  # DEBUG __first => __first_27
  # DEBUG __last => __first_408

  <bb 129>:
  # __first_266 = PHI <__first_27(128), __first_268(132)>
  # DEBUG __first => __first_266
  if (__first_266 == __first_408)
    goto <bb 133>;
  else
    goto <bb 130>;

  <bb 130>:
  # DEBUG __r => __first_266
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#294
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _267 = MEM[(struct _Vector_base *)__first_266]._M_impl._M_start;
  # DEBUG D#291 => (long int) _267
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _267
  # DEBUG __n => D#288
  if (_267 != 0B)
    goto <bb 131>;
  else
    goto <bb 132>;

  <bb 131>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _267
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _267
  # DEBUG this => D#280
  # DEBUG D.66342 => D#281
  operator delete (_267);

  <bb 132>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)__first_266] ={v} {CLOBBER};
  __first_268 = __first_266 + 24;
  # DEBUG __first => __first_268
  goto <bb 129>;

  <bb 133>:
  __cxa_rethrow ();

<L30>:
  __cxa_end_catch ();
  resx 22

  <bb 135>:

  <bb 136>:
  # __first_607 = PHI <__first_31(135), __first_306(149)>
  # __new_finish_608 = PHI <__new_finish_270(135), __new_finish_307(149)>
  # DEBUG __cur => __new_finish_608
  # DEBUG __first => __first_607
  # DEBUG __r => __new_finish_608
  # DEBUG __p => NULL
  # DEBUG __value => __first_607
  # DEBUG D#24 => 24
  # DEBUG __p => NULL
  # DEBUG D.58615 => D#24
  if (__new_finish_608 != 0B)
    goto <bb 137>;
  else
    goto <bb 147>;

  <bb 137>:
  # DEBUG this => __new_finish_608
  # DEBUG __x => __first_607
  # DEBUG D#582 => &MEM[(const struct vector *)__first_607].D.41044
  # DEBUG this => D#582
  # DEBUG __a => NULL
  _113 = MEM[(struct sRequest * *)__first_607];
  # DEBUG D#88 => __first_607
  _312 = MEM[(struct sRequest * *)__first_607 + 8B];
  # DEBUG D#88 => __first_607
  # DEBUG this => D#88
  # DEBUG this => D#88
  _313 = (long int) _312;
  _314 = (long int) _113;
  _315 = _313 - _314;
  _316 = _315 /[ex] 16;
  _317 = (size_type) _316;
  # DEBUG D#584 => &__new_finish_608->D.41044
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#508 => &D#584->_M_impl
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG D.54074 => NULL
  MEM[(struct _Vector_impl *)__new_finish_608]._M_start = 0B;
  MEM[(struct _Vector_impl *)__new_finish_608]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__new_finish_608]._M_end_of_storage = 0B;
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG D#506 => D#584
  # DEBUG __n => _317
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  if (_317 != 0)
    goto <bb 139>;
  else
    goto <bb 138>;

  <bb 138>:
  pretmp_20 = (long unsigned int) _315;
  goto <bb 143>;

  <bb 139>:
  # DEBUG D#504 => &D#505->_M_impl
  # DEBUG D#503 => D#504
  # DEBUG __n => _317
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG D#500 => D#502
  # DEBUG D#501 => 0B
  # DEBUG __n => _317
  # DEBUG this => D#500
  # DEBUG D.66500 => D#501
  # DEBUG D#499 => D#500
  # DEBUG D#498 => D#499
  # DEBUG this => D#498
  if (_317 > 1152921504606846975)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  # __new_finish_445 = PHI <__new_finish_608(139)>
  std::__throw_bad_alloc ();

  <bb 141>:
  _330 = (long unsigned int) _315;
  _331 = operator new (_330);
  goto <bb 143>;

  # __new_finish_444 = PHI <__new_finish_608(141)>
<L54>:
  goto <bb 152> (<L31>);

  <bb 143>:
  # iftmp.24_332 = PHI <0B(138), _331(141)>
  # prephitmp_364 = PHI <pretmp_20(138), _330(141)>
  MEM[(struct _Vector_base *)__new_finish_608]._M_impl._M_start = iftmp.24_332;
  MEM[(struct _Vector_base *)__new_finish_608]._M_impl._M_finish = iftmp.24_332;
  _320 = iftmp.24_332 + prephitmp_364;
  MEM[(struct _Vector_base *)__new_finish_608]._M_impl._M_end_of_storage = _320;
  # DEBUG D#583 => &__new_finish_608->D.41044
  # DEBUG this => D#583
  _321 = MEM[(struct sRequest * *)__first_607 + 8B];
  # DEBUG D#101 => __first_607
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _322 = MEM[(struct sRequest * *)__first_607];
  # DEBUG D#102 => __first_607
  # DEBUG this => D#102
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _322
  # DEBUG __last => _321
  # DEBUG __result => NULL
  # DEBUG D.66464 => D#581
  # DEBUG __first => _322
  # DEBUG __last => _321
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _322
  # DEBUG __last => _321
  # DEBUG __result => NULL
  # DEBUG __first => _322
  # DEBUG __last => _321
  # DEBUG __result => NULL
  # DEBUG __it => _321
  # DEBUG __it$_M_current => _321
  # DEBUG __it => _322
  # DEBUG __it$_M_current => _322
  # DEBUG __first => _322
  # DEBUG __last => _321
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _321
  # DEBUG __it => _321
  # DEBUG this => NULL
  # DEBUG __it => _322
  # DEBUG __it => _322
  # DEBUG this => NULL
  # DEBUG __first => _322
  # DEBUG __last => _321
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _322
  # DEBUG __last => _321
  # DEBUG __result => NULL
  __last.26_323 = (long int) _321;
  __first.27_324 = (long int) _322;
  _325 = __last.26_323 - __first.27_324;
  _Num_326 = _325 /[ex] 16;
  # DEBUG _Num => _Num_326
  if (_Num_326 != 0)
    goto <bb 145>;
  else
    goto <bb 144>;

  <bb 144>:
  pretmp_175 = (long unsigned int) _325;
  goto <bb 146>;

  <bb 145>:
  _327 = (long unsigned int) _325;
  __builtin_memmove (iftmp.24_332, _322, _327);

  <bb 146>:
  # prephitmp_174 = PHI <pretmp_175(144), _327(145)>
  _329 = iftmp.24_332 + prephitmp_174;
  __new_finish_608->D.41044._M_impl._M_finish = _329;

  <bb 147>:
  __first_306 = __first_607 + 24;
  # DEBUG __first => __first_306
  __new_finish_307 = __new_finish_608 + 24;
  # DEBUG __cur => __new_finish_307
  # DEBUG __cur => __new_finish_307
  # DEBUG __first => __first_306
  if (__position_22 == __first_306)
    goto <bb 148>;
  else
    goto <bb 149>;

  <bb 148>:
  # __new_finish_498 = PHI <__new_finish_307(147)>
  goto <bb 150>;

  <bb 149>:
  goto <bb 136>;

  <bb 150>:
  # __new_finish_610 = PHI <__new_finish_498(148), __new_finish_270(126)>
  # DEBUG __new_finish => NULL
  _32 = __n_7(D) * 24;
  __new_finish_33 = __new_finish_610 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#671 => &this_9(D)->D.36227
  # DEBUG this => D#671
  _35 = this_9(D)->D.36227._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#1131
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#589
  # DEBUG D#588 => D#589
  # DEBUG D#585 => D#588
  # DEBUG __first => D#1131
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.60202 => D#585
  # DEBUG __first => D#1131
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  # DEBUG __first => D#1131
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __cur => __new_finish_33
  # DEBUG __first => D#1131
  if (__position_22 == _35)
    goto <bb 174>;
  else
    goto <bb 159>;

<L53>:

  # __new_finish_410 = PHI <__new_finish_444(142), __new_finish_445(151)>
<L31>:
  _308 = __builtin_eh_pointer (26);
  __cxa_begin_catch (_308);
  # DEBUG __first => __new_finish_270
  # DEBUG __last => __new_finish_410
  # DEBUG __first => __new_finish_270
  # DEBUG __last => __new_finish_410

  <bb 153>:
  # __new_finish_309 = PHI <__new_finish_270(152), __new_finish_311(156)>
  # DEBUG __first => __new_finish_309
  if (__new_finish_309 == __new_finish_410)
    goto <bb 157>;
  else
    goto <bb 154>;

  <bb 154>:
  # DEBUG __r => __new_finish_309
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#294
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _310 = MEM[(struct _Vector_base *)__new_finish_309]._M_impl._M_start;
  # DEBUG D#291 => (long int) _310
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _310
  # DEBUG __n => D#288
  if (_310 != 0B)
    goto <bb 155>;
  else
    goto <bb 156>;

  <bb 155>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _310
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _310
  # DEBUG this => D#280
  # DEBUG D.66442 => D#281
  operator delete (_310);

  <bb 156>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)__new_finish_309] ={v} {CLOBBER};
  __new_finish_311 = __new_finish_309 + 24;
  # DEBUG __first => __new_finish_311
  goto <bb 153>;

  <bb 157>:
  __cxa_rethrow ();

<L33>:
  __cxa_end_catch ();
  resx 25

  <bb 159>:

  <bb 160>:
  # __position_609 = PHI <__position_22(159), __position_335(172)>
  # __new_finish_605 = PHI <__new_finish_33(159), __new_finish_336(172)>
  # DEBUG __cur => __new_finish_605
  # DEBUG __first => __position_609
  # DEBUG __r => __new_finish_605
  # DEBUG __p => NULL
  # DEBUG __value => __position_609
  # DEBUG D#24 => 24
  # DEBUG __p => NULL
  # DEBUG D.58615 => D#24
  if (__new_finish_605 != 0B)
    goto <bb 161>;
  else
    goto <bb 171>;

  <bb 161>:
  # DEBUG this => __new_finish_605
  # DEBUG __x => __position_609
  # DEBUG D#582 => &MEM[(const struct vector *)__position_609].D.41044
  # DEBUG this => D#582
  # DEBUG __a => NULL
  _114 = MEM[(struct sRequest * *)__position_609];
  # DEBUG D#88 => __position_609
  _341 = MEM[(struct sRequest * *)__position_609 + 8B];
  # DEBUG D#88 => __position_609
  # DEBUG this => D#88
  # DEBUG this => D#88
  _342 = (long int) _341;
  _343 = (long int) _114;
  _344 = _342 - _343;
  _345 = _344 /[ex] 16;
  _346 = (size_type) _345;
  # DEBUG D#584 => &__new_finish_605->D.41044
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#508 => &D#584->_M_impl
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG __a => NULL
  # DEBUG this => D#508
  # DEBUG D.54074 => NULL
  MEM[(struct _Vector_impl *)__new_finish_605]._M_start = 0B;
  MEM[(struct _Vector_impl *)__new_finish_605]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__new_finish_605]._M_end_of_storage = 0B;
  # DEBUG this => D#584
  # DEBUG __n => NULL
  # DEBUG D#506 => D#584
  # DEBUG __n => _346
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  if (_346 != 0)
    goto <bb 163>;
  else
    goto <bb 162>;

  <bb 162>:
  pretmp_555 = (long unsigned int) _344;
  goto <bb 168>;

  <bb 163>:
  # DEBUG D#504 => &D#505->_M_impl
  # DEBUG D#503 => D#504
  # DEBUG __n => _346
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG D#500 => D#502
  # DEBUG D#501 => 0B
  # DEBUG __n => _346
  # DEBUG this => D#500
  # DEBUG D.66581 => D#501
  # DEBUG D#499 => D#500
  # DEBUG D#498 => D#499
  # DEBUG this => D#498
  if (_346 > 1152921504606846975)
    goto <bb 164>;
  else
    goto <bb 165>;

  <bb 164>:
  # __new_finish_463 = PHI <__new_finish_605(163)>
  std::__throw_bad_alloc ();

  <bb 165>:
  _359 = (long unsigned int) _344;
  _360 = operator new (_359);
  goto <bb 167>;

  # __new_finish_449 = PHI <__new_finish_605(165)>
<L56>:
  goto <bb 176> (<L34>);

  <bb 167>:
  pretmp_305 = MEM[(struct sRequest * *)__position_609 + 8B];
  pretmp_386 = MEM[(struct sRequest * *)__position_609];
  pretmp_318 = (long int) pretmp_305;
  pretmp_271 = (long int) pretmp_386;
  pretmp_470 = pretmp_318 - pretmp_271;
  pretmp_378 = pretmp_470 /[ex] 16;
  pretmp_661 = (long unsigned int) pretmp_470;

  <bb 168>:
  # iftmp.24_361 = PHI <0B(162), _360(167)>
  # prephitmp_279 = PHI <_114(162), pretmp_386(167)>
  # prephitmp_261 = PHI <_345(162), pretmp_378(167)>
  # prephitmp_83 = PHI <pretmp_555(162), _359(167)>
  # prephitmp_662 = PHI <pretmp_555(162), pretmp_661(167)>
  MEM[(struct _Vector_base *)__new_finish_605]._M_impl._M_start = iftmp.24_361;
  MEM[(struct _Vector_base *)__new_finish_605]._M_impl._M_finish = iftmp.24_361;
  _349 = iftmp.24_361 + prephitmp_83;
  MEM[(struct _Vector_base *)__new_finish_605]._M_impl._M_end_of_storage = _349;
  # DEBUG D#583 => &__new_finish_605->D.41044
  # DEBUG this => D#583
  # DEBUG D#1125 => MEM[(struct sRequest * *)__position_609 + 8B]
  # DEBUG D#101 => __position_609
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#1124 => MEM[(struct sRequest * *)__position_609]
  # DEBUG D#102 => __position_609
  # DEBUG this => D#102
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#1124
  # DEBUG __last => D#1125
  # DEBUG __result => NULL
  # DEBUG D.66545 => D#581
  # DEBUG __first => D#1124
  # DEBUG __last => D#1125
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1124
  # DEBUG __last => D#1125
  # DEBUG __result => NULL
  # DEBUG __first => D#1124
  # DEBUG __last => D#1125
  # DEBUG __result => NULL
  # DEBUG __it => D#1125
  # DEBUG __it$_M_current => D#1125
  # DEBUG __it => D#1124
  # DEBUG __it$_M_current => D#1124
  # DEBUG __first => D#1124
  # DEBUG __last => D#1125
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#1125
  # DEBUG __it => D#1125
  # DEBUG this => NULL
  # DEBUG __it => D#1124
  # DEBUG __it => D#1124
  # DEBUG this => NULL
  # DEBUG __first => D#1124
  # DEBUG __last => D#1125
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#1124
  # DEBUG __last => D#1125
  # DEBUG __result => NULL
  # DEBUG D#1123 => (long int) D#1125
  # DEBUG D#1122 => (long int) D#1124
  # DEBUG D#1121 => D#1123 - D#1122
  # DEBUG _Num => D#1121 /[ex] 16
  if (prephitmp_261 != 0)
    goto <bb 169>;
  else
    goto <bb 170>;

  <bb 169>:
  __builtin_memmove (iftmp.24_361, prephitmp_279, prephitmp_662);

  <bb 170>:
  _358 = iftmp.24_361 + prephitmp_662;
  __new_finish_605->D.41044._M_impl._M_finish = _358;

  <bb 171>:
  __position_335 = __position_609 + 24;
  # DEBUG __first => __position_335
  __new_finish_336 = __new_finish_605 + 24;
  # DEBUG __cur => __new_finish_336
  # DEBUG __cur => __new_finish_336
  # DEBUG __first => __position_335
  if (_35 == __position_335)
    goto <bb 173>;
  else
    goto <bb 172>;

  <bb 172>:
  goto <bb 160>;

  <bb 173>:
  # __new_finish_497 = PHI <__new_finish_336(171)>
  pretmp_40 = this_9(D)->D.36227._M_impl._M_finish;

  <bb 174>:
  # __new_finish_19 = PHI <__new_finish_497(173), __new_finish_33(150)>
  # prephitmp_103 = PHI <pretmp_40(173), _35(150)>
  # DEBUG __new_finish => NULL
  # DEBUG D#672 => &this_9(D)->D.36227
  # DEBUG this => D#672
  # DEBUG D#1120 => this_9(D)->D.36227._M_impl._M_finish
  __first_38 = this_9(D)->D.36227._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => D#1120
  # DEBUG __first => __first_38
  if (__first_38 == prephitmp_103)
    goto <bb 190>;
  else
    goto <bb 184>;

<L55>:

  # __new_finish_413 = PHI <__new_finish_449(166), __new_finish_463(175)>
<L34>:
  _337 = __builtin_eh_pointer (29);
  __cxa_begin_catch (_337);
  # DEBUG __first => __new_finish_33
  # DEBUG __last => __new_finish_413
  # DEBUG __first => __new_finish_33
  # DEBUG __last => __new_finish_413

  <bb 177>:
  # __new_finish_338 = PHI <__new_finish_33(176), __new_finish_340(180)>
  # DEBUG __first => __new_finish_338
  if (__new_finish_338 == __new_finish_413)
    goto <bb 181>;
  else
    goto <bb 178>;

  <bb 178>:
  # DEBUG __r => __new_finish_338
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#294
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _339 = MEM[(struct _Vector_base *)__new_finish_338]._M_impl._M_start;
  # DEBUG D#291 => (long int) _339
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _339
  # DEBUG __n => D#288
  if (_339 != 0B)
    goto <bb 179>;
  else
    goto <bb 180>;

  <bb 179>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _339
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _339
  # DEBUG this => D#280
  # DEBUG D.66523 => D#281
  operator delete (_339);

  <bb 180>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)__new_finish_338] ={v} {CLOBBER};
  __new_finish_340 = __new_finish_338 + 24;
  # DEBUG __first => __new_finish_340
  goto <bb 177>;

  <bb 181>:
  __cxa_rethrow ();

<L36>:
  __cxa_end_catch ();
  resx 28

<L57>:
  goto <bb 199> (<L13>);

  <bb 184>:

  <bb 185>:
  # __first_82 = PHI <__first_38(184), __first_93(188)>
  # DEBUG __first => __first_82
  # DEBUG __r => __first_82
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#294
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _92 = MEM[(struct _Vector_base *)__first_82]._M_impl._M_start;
  # DEBUG D#291 => (long int) _92
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _92
  # DEBUG __n => D#288
  if (_92 != 0B)
    goto <bb 186>;
  else
    goto <bb 187>;

  <bb 186>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _92
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _92
  # DEBUG this => D#280
  # DEBUG D.60246 => D#281
  operator delete (_92);

  <bb 187>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)__first_82] ={v} {CLOBBER};
  __first_93 = __first_82 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (__first_93 == prephitmp_103)
    goto <bb 189>;
  else
    goto <bb 188>;

  <bb 188>:
  goto <bb 185>;

  <bb 189>:
  pretmp_101 = this_9(D)->D.36227._M_impl._M_start;

  <bb 190>:
  # prephitmp_622 = PHI <pretmp_101(189), __first_38(174)>
  # DEBUG D#683 => this_9(D)->D.36227._M_impl._M_end_of_storage
  # DEBUG D#682 => (long int) D#683
  # DEBUG D#1119 => this_9(D)->D.36227._M_impl._M_start
  # DEBUG D#681 => (long int) D#1119
  # DEBUG D#680 => D#682 - D#681
  # DEBUG D#679 => D#680 /[ex] 24
  # DEBUG D#678 => &this_9(D)->D.36227
  # DEBUG D#270 => D#678
  # DEBUG D#271 => (long unsigned int) D#679
  # DEBUG __p => D#1119
  # DEBUG this => D#270
  # DEBUG __n => D#271
  # DEBUG D#269 => D#271
  # DEBUG D#268 => D#270
  if (prephitmp_622 != 0B)
    goto <bb 191>;
  else
    goto <bb 192>;

  <bb 191>:
  # DEBUG D#267 => &D#268->_M_impl
  # DEBUG D#265 => D#267
  # DEBUG D#266 => D#269
  # DEBUG __p => D#1119
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#1119
  # DEBUG this => D#261
  # DEBUG D.60225 => D#262
  operator delete (prephitmp_622);

  <bb 192>:
  this_9(D)->D.36227._M_impl._M_start = __new_finish_270;
  this_9(D)->D.36227._M_impl._M_finish = __new_finish_19;
  _44 = __new_finish_270 + prephitmp_278;
  this_9(D)->D.36227._M_impl._M_end_of_storage = _44;

  <bb 193>:
  return;

<L40>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#294 => &__x_copy.D.41044
  # DEBUG this => D#294
  # DEBUG D#297 => __x_copy.D.41044._M_impl._M_finish
  # DEBUG D#296 => __x_copy.D.41044._M_impl._M_start
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG D#295 => &__x_copy.D.41044
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _94 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#291 => (long int) _94
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _94
  # DEBUG __n => D#288
  if (_94 != 0B)
    goto <bb 196>;
  else
    goto <bb 197>;

  <bb 196>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _94
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _94
  # DEBUG this => D#280
  # DEBUG D.60263 => D#281
  operator delete (_94);

  <bb 197>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  resx 2

<L52>:

  # __new_finish_1 = PHI <__new_finish_270(198), __new_finish_33(183)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 201>;
  else
    goto <bb 200>;

  <bb 200>:
  goto <bb 206>;

  <bb 201>:
  # DEBUG __new_finish => 0B
  # DEBUG D#676 => &this_9(D)->D.36227
  # DEBUG this => D#676
  _49 = __n_7(D) + __elems_before_631;
  _50 = _49 * 24;
  _51 = __new_finish_270 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 202>:
  # __first_80 = PHI <__first_27(201), __first_96(205)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 210>;
  else
    goto <bb 203>;

  <bb 203>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#294
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _95 = MEM[(struct _Vector_base *)__first_80]._M_impl._M_start;
  # DEBUG D#291 => (long int) _95
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _95
  # DEBUG __n => D#288
  if (_95 != 0B)
    goto <bb 204>;
  else
    goto <bb 205>;

  <bb 204>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _95
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _95
  # DEBUG this => D#280
  # DEBUG D.60287 => D#281
  operator delete (_95);

  <bb 205>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_96 = __first_80 + 24;
  # DEBUG __first => __first_96
  goto <bb 202>;

  <bb 206>:
  # __new_finish_97 = PHI <__new_finish_270(200), __new_finish_99(209)>
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 210>;
  else
    goto <bb 207>;

  <bb 207>:
  # DEBUG __r => __new_finish_97
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#294
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _98 = MEM[(struct _Vector_base *)__new_finish_97]._M_impl._M_start;
  # DEBUG D#291 => (long int) _98
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _98
  # DEBUG __n => D#288
  if (_98 != 0B)
    goto <bb 208>;
  else
    goto <bb 209>;

  <bb 208>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _98
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _98
  # DEBUG this => D#280
  # DEBUG D.60313 => D#281
  operator delete (_98);

  <bb 209>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __first => __new_finish_99
  goto <bb 206>;

  <bb 210>:
  # DEBUG D#684 => &this_9(D)->D.36227
  # DEBUG D#270 => D#684
  # DEBUG __p => NULL
  # DEBUG this => D#270
  # DEBUG __n => D#271
  # DEBUG D#269 => D#271
  # DEBUG D#268 => D#270
  if (__new_finish_270 != 0B)
    goto <bb 211>;
  else
    goto <bb 212>;

  <bb 211>:
  # DEBUG D#267 => &D#268->_M_impl
  # DEBUG D#265 => D#267
  # DEBUG D#266 => D#269
  # DEBUG __p => NULL
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => NULL
  # DEBUG this => D#261
  # DEBUG D.60328 => D#262
  operator delete (__new_finish_270);

  <bb 212>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 214>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#168 => &this_9(D)->D.36227._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#168
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45141
  # DEBUG this => &__position
  _569 = (long int) __position_22;
  # DEBUG this => &D.45141
  _567 = _569 - _273;
  _568 = _567 /[ex] 24;
  __elems_before_566 = (const size_type) _568;
  # DEBUG __elems_before => __elems_before_566
  # DEBUG D#685 => &this_9(D)->D.36227
  # DEBUG D#528 => D#685
  # DEBUG __n => NULL
  # DEBUG this => D#528
  # DEBUG D#527 => D#528
  goto <bb 111>;

  <bb 215>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#168 => &this_9(D)->D.36227._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#168
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45141
  # DEBUG this => &__position
  _561 = (long int) __position_22;
  # DEBUG this => &D.45141
  _347 = _561 - _273;
  _565 = _347 /[ex] 24;
  __elems_before_554 = (const size_type) _565;
  # DEBUG __elems_before => __elems_before_554
  # DEBUG D#685 => &this_9(D)->D.36227
  # DEBUG D#528 => D#685
  # DEBUG __n => NULL
  # DEBUG this => D#528
  # DEBUG D#527 => D#528
  if (__len_281 != 0)
    goto <bb 110>;
  else
    goto <bb 112>;

  <bb 216>:
  _204 = (long unsigned int) _34;
  _203 = __old_finish_611 + _204;
  this_9(D)->D.36227._M_impl._M_finish = _203;
  # DEBUG this => &__position
  # DEBUG __first => D#1131
  # DEBUG __last => D#1113
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1131
  goto <bb 104>;

<L37>:
  # DEBUG __new_finish => 0B
  _100 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_100);
  goto <bb 201>;

}



;; Function DenseAllocator::DenseAllocator(Module*, const string&, int, int) (_ZN14DenseAllocatorC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii, funcdef_no=1752, decl_uid=36292, cgraph_uid=422, symbol_order=423)

Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
DenseAllocator::DenseAllocator(Module*, const string&, int, int) (struct DenseAllocator * const this, struct Module * parent, const struct string & name, int inputs, int outputs)
{
  int SR.1791;
  int SR.1790;
  int SR.1789;
  int SR.1788;
  struct vector * __first;
  struct iterator __position;
  struct value_type __x;
  struct iterator __position;
  struct vector * __pos;
  int j;
  int i;
  struct sRequest D.48080;
  struct value_type D.41072;
  struct sRequest * pretmp_2;
  struct sRequest * prephitmp_4;
  struct Allocator * _7;
  long unsigned int _16;
  int _17;
  long unsigned int _18;
  struct vector * _19;
  struct sRequest * const _20;
  int _23;
  int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  struct vector * _32;
  long unsigned int _34;
  struct vector & _35;
  struct vector * _43;
  struct sRequest & _46;
  struct sRequest * _48;
  struct vector * pretmp_61;
  int _69;
  const int pretmp_72;
  const int prephitmp_73;
  struct sRequest * const _81;
  long int _82;
  long int _83;
  long int _84;
  long int _85;
  size_type _86;
  long unsigned int _87;
  long unsigned int _88;
  struct sRequest * _89;
  struct sRequest * _92;
  struct vector * prephitmp_106;
  struct vector * pretmp_130;
  struct vector & pretmp_132;
  struct sRequest * pretmp_133;

  <bb 2>:
  _7 = &this_6(D)->D.36298;
  Allocator::Allocator (_7, parent_9(D), name_10(D), inputs_11(D), outputs_12(D));
  this_6(D)->D.36298.D.35470._vptr.Module = &MEM[(void *)&_ZTV14DenseAllocator + 16B];
  # DEBUG D#716 => &this_6(D)->_request
  # DEBUG this => D#716
  # DEBUG D#260 => &D#716->D.36227
  # DEBUG this => D#260
  # DEBUG D#259 => &D#260->_M_impl
  # DEBUG this => D#259
  # DEBUG this => D#259
  # DEBUG this => D#259
  MEM[(struct _Vector_impl *)this_6(D) + 160B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_6(D) + 160B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_6(D) + 160B]._M_end_of_storage = 0B;
  # DEBUG this => &D.41072
  # DEBUG D#279 => &D.41072.D.41044
  # DEBUG this => D#279
  # DEBUG D#278 => &D#279->_M_impl
  # DEBUG this => D#278
  # DEBUG this => D#278
  # DEBUG this => D#278
  MEM[(struct _Vector_impl *)&D.41072]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.41072]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.41072]._M_end_of_storage = 0B;
  _17 = this_6(D)->D.36298._inputs;
  _18 = (long unsigned int) _17;
  # DEBUG D#1146 => &this_6(D)->_request
  # DEBUG this => D#1146
  # DEBUG __new_size => _18
  # DEBUG __x => &D.41072
  # DEBUG D#89 => D#1146
  # DEBUG D#89 => D#1146
  # DEBUG this => D#89
  # DEBUG this => D#89
  if (_18 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#89 => D#1146
  # DEBUG D#89 => D#1146
  # DEBUG this => D#89
  # DEBUG this => D#89
  # DEBUG this => D#1146
  # DEBUG D#103 => &D#1146->D.36227._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#103
  # DEBUG this => D#1146
  MEM[(struct __normal_iterator *)&__position] = 0B;
  # DEBUG __n => _18
  # DEBUG __x => &D.41072
  _19 = &this_6(D)->_request;
  std::vector<std::vector<Allocator::sRequest> >::_M_fill_insert (_19, __position, _18, &D.41072);

  <bb 4>:
  pretmp_2 = MEM[(struct _Vector_base *)&D.41072]._M_impl._M_start;

  <bb 5>:
  # prephitmp_4 = PHI <0B(2), pretmp_2(4)>
  # DEBUG this => &D.41072
  # DEBUG D#294 => &D.41072.D.41044
  # DEBUG this => D#294
  # DEBUG D#297 => D.41072.D.41044._M_impl._M_finish
  # DEBUG D#296 => D.41072.D.41044._M_impl._M_start
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG D#295 => &D.41072.D.41044
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  # DEBUG D#1145 => MEM[(struct _Vector_base *)&D.41072]._M_impl._M_start
  # DEBUG D#291 => (long int) D#1145
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => D#1145
  # DEBUG __n => D#288
  if (prephitmp_4 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => D#1145
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => D#1145
  # DEBUG this => D#280
  # DEBUG D.61033 => D#281
  operator delete (prephitmp_4);

  <bb 7>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  D.41072 ={v} {CLOBBER};
  # DEBUG i => 0
  # DEBUG i => 0
  _69 = this_6(D)->D.36298._inputs;
  if (_69 <= 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  return;

  <bb 9>:

  <bb 10>:
  # i_102 = PHI <0(9), i_38(17)>
  # DEBUG i => i_102
  _28 = this_6(D)->D.36298._outputs;
  _29 = (long unsigned int) _28;
  _30 = (long unsigned int) i_102;
  # DEBUG D#714 => &this_6(D)->_request
  _43 = MEM[(struct vector * *)this_6(D) + 160B];
  # DEBUG D#36 => D#714
  # DEBUG __n => _30
  # DEBUG this => D#36
  _16 = _30 * 24;
  _35 = _43 + _16;
  # DEBUG this => _35
  # DEBUG __new_size => _29
  MEM[(struct sRequest *)&__x] = 0;
  MEM[(struct sRequest *)&__x + 4B] = 0;
  MEM[(struct sRequest *)&__x + 8B] = 0;
  MEM[(struct sRequest *)&__x + 12B] = 0;
  _20 = MEM[(struct sRequest * *)_35];
  # DEBUG D#88 => _35
  _81 = MEM[(struct sRequest * *)_35 + 8B];
  # DEBUG D#88 => _35
  # DEBUG this => D#88
  # DEBUG this => D#88
  _82 = (long int) _81;
  _83 = (long int) _20;
  _84 = _82 - _83;
  _85 = _84 /[ex] 16;
  _86 = (size_type) _85;
  if (_29 > _86)
    goto <bb 11>;
  else
    goto <bb 13>;

  <bb 11>:
  # DEBUG D#88 => _35
  # DEBUG D#88 => _35
  # DEBUG this => D#88
  # DEBUG this => D#88
  _87 = _29 - _86;
  # DEBUG this => _35
  # DEBUG D#104 => &_35->D.41044._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#104
  # DEBUG this => _35
  MEM[(struct __normal_iterator *)&__position] = _81;
  # DEBUG __n => _87
  # DEBUG __x => &__x
  std::vector<Allocator::sRequest>::_M_fill_insert (_35, __position, _87, &__x);

  <bb 12>:
  pretmp_72 = this_6(D)->D.36298._outputs;
  goto <bb 15>;

  <bb 13>:
  # DEBUG D#88 => _35
  # DEBUG D#88 => _35
  # DEBUG this => D#88
  # DEBUG this => D#88
  if (_29 < _86)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _88 = _29 * 16;
  _89 = _20 + _88;
  # DEBUG D#167 => _35
  # DEBUG __pos => _89
  # DEBUG D#166 => D#167
  # DEBUG this => D#166
  # DEBUG D#164 => &D#166->D.41044
  # DEBUG this => D#164
  # DEBUG D#165 => D#166->D.41044._M_impl._M_finish
  # DEBUG __first => _89
  # DEBUG __last => D#165
  # DEBUG D.53135 => NULL
  # DEBUG D#162 => _89
  # DEBUG D#163 => D#165
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  MEM[(struct sRequest * *)_35 + 8B] = _89;

  <bb 15>:
  # prephitmp_73 = PHI <pretmp_72(12), _28(14), _28(13)>
  # DEBUG j => 0
  if (prephitmp_73 <= 0)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 16>:
  i_38 = i_102 + 1;
  # DEBUG i => i_38
  # DEBUG i => i_38
  _23 = this_6(D)->D.36298._inputs;
  if (_23 <= i_38)
    goto <bb 8>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 10>;

  <bb 18>:
  pretmp_130 = MEM[(struct vector * *)this_6(D) + 160B];
  pretmp_132 = pretmp_130 + _16;
  pretmp_133 = MEM[(struct sRequest * *)pretmp_132];

  <bb 19>:
  # j_101 = PHI <0(18), j_37(20)>
  # DEBUG j => j_101
  _34 = (long unsigned int) j_101;
  # DEBUG D#715 => &this_6(D)->_request
  # DEBUG D#36 => D#715
  # DEBUG __n => _30
  # DEBUG this => D#36
  # DEBUG __n => _34
  # DEBUG this => D#37
  _31 = _34 * 16;
  _46 = pretmp_133 + _31;
  _46->label = -1;
  j_37 = j_101 + 1;
  # DEBUG j => j_37
  # DEBUG j => j_37
  if (j_37 >= prephitmp_73)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 19>;

<L6>:
  # DEBUG this => &D.41072
  # DEBUG D#294 => &D.41072.D.41044
  # DEBUG this => D#294
  # DEBUG D#297 => D.41072.D.41044._M_impl._M_finish
  # DEBUG D#296 => D.41072.D.41044._M_impl._M_start
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG D#295 => &D.41072.D.41044
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _48 = MEM[(struct _Vector_base *)&D.41072]._M_impl._M_start;
  # DEBUG D#291 => (long int) _48
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _48
  # DEBUG __n => D#288
  if (_48 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _48
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _48
  # DEBUG this => D#280
  # DEBUG D.61060 => D#281
  operator delete (_48);

  <bb 23>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  D.41072 ={v} {CLOBBER};
  resx 3

<L10>:
  goto <bb 26> (<L7>);

<L9>:

<L7>:
  # DEBUG this => D#1146
  # DEBUG D#302 => &D#1146->D.36227
  # DEBUG this => D#302
  _32 = MEM[(struct vector *)this_6(D) + 160B].D.36227._M_impl._M_finish;
  __first_90 = MEM[(struct vector *)this_6(D) + 160B].D.36227._M_impl._M_start;
  # DEBUG __first => __first_90
  # DEBUG __last => _32
  # DEBUG __first => __first_90
  if (_32 == __first_90)
    goto <bb 33>;
  else
    goto <bb 27>;

  <bb 27>:

  <bb 28>:
  # __first_77 = PHI <__first_90(27), __first_93(31)>
  # DEBUG __first => __first_77
  # DEBUG __r => __first_77
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#294
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D.53863 => NULL
  # DEBUG D#162 => D#296
  # DEBUG D#163 => D#297
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D#161 => D#163
  # DEBUG D#160 => D#162
  # DEBUG D#158 => D#160
  # DEBUG D#159 => D#161
  # DEBUG D.53119 => D#158
  # DEBUG D.53118 => D#159
  # DEBUG this => D#295
  # DEBUG D#293 => D#295->_M_impl._M_end_of_storage
  # DEBUG D#292 => (long int) D#293
  _92 = MEM[(struct _Vector_base *)__first_77]._M_impl._M_start;
  # DEBUG D#291 => (long int) _92
  # DEBUG D#290 => D#292 - D#291
  # DEBUG D#289 => D#290 /[ex] 16
  # DEBUG D#288 => (long unsigned int) D#289
  # DEBUG this => D#295
  # DEBUG __p => _92
  # DEBUG __n => D#288
  if (_92 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#286 => &D#295->_M_impl
  # DEBUG D#284 => D#286
  # DEBUG D#285 => D#288
  # DEBUG __p => _92
  # DEBUG __a => D#284
  # DEBUG __n => D#285
  # DEBUG D#283 => D#285
  # DEBUG D#282 => D#284
  # DEBUG D#280 => D#282
  # DEBUG D#281 => D#283
  # DEBUG __p => _92
  # DEBUG this => D#280
  # DEBUG D.66831 => D#281
  operator delete (_92);

  <bb 30>:
  # DEBUG D#287 => &D#295->_M_impl
  # DEBUG this => D#287
  # DEBUG this => D#287
  # DEBUG this => D#287
  MEM[(struct  &)__first_77] ={v} {CLOBBER};
  __first_93 = __first_77 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (_32 == __first_93)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 28>;

  <bb 32>:
  pretmp_61 = MEM[(struct _Vector_base *)this_6(D) + 160B]._M_impl._M_start;

  <bb 33>:
  # prephitmp_106 = PHI <pretmp_61(32), __first_90(26)>
  # DEBUG D#303 => &D#1146->D.36227
  # DEBUG this => D#303
  # DEBUG D#277 => D#303->_M_impl._M_end_of_storage
  # DEBUG D#276 => (long int) D#277
  # DEBUG D#1144 => MEM[(struct _Vector_base *)this_6(D) + 160B]._M_impl._M_start
  # DEBUG D#275 => (long int) D#1144
  # DEBUG D#274 => D#276 - D#275
  # DEBUG D#273 => D#274 /[ex] 24
  # DEBUG D#270 => D#303
  # DEBUG D#271 => (long unsigned int) D#273
  # DEBUG __p => D#1144
  # DEBUG this => D#270
  # DEBUG __n => D#271
  # DEBUG D#269 => D#271
  # DEBUG D#268 => D#270
  if (prephitmp_106 != 0B)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # DEBUG D#267 => &D#268->_M_impl
  # DEBUG D#265 => D#267
  # DEBUG D#266 => D#269
  # DEBUG __p => D#1144
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#1144
  # DEBUG this => D#261
  # DEBUG D.66845 => D#262
  operator delete (prephitmp_106);

  <bb 35>:
  # DEBUG D#272 => &D#303->_M_impl
  # DEBUG this => D#272
  # DEBUG this => D#272
  # DEBUG this => D#272
  MEM[(struct  &)this_6(D) + 160] ={v} {CLOBBER};
  resx 2

<L8>:
  Allocator::~Allocator (_7);
  resx 1

}



;; Function std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Reuse_or_alloc_node; _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*] (_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE7_M_copyINSA_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS4_EPKSE_SF_RT_, funcdef_no=2623, decl_uid=47300, cgraph_uid=1293, symbol_order=1294)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Reuse_or_alloc_node; _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*] (struct _Rb_tree * const this, const struct _Rb_tree_node * __x, struct _Rb_tree_node * __p, struct _Reuse_or_alloc_node & __node_gen)
{
  bool __node_gen___M_nodes_lsm.1816;
  struct _Rb_tree_node_base * __node_gen___M_nodes_lsm.1815;
  bool __node_gen___M_nodes_lsm.1814;
  struct _Rb_tree_node_base * __node_gen___M_nodes_lsm.1813;
  struct _Rb_tree_node * D.66964;
  struct _Rb_tree_node_base * D.66944;
  struct _Rb_tree_node * __node;
  struct _Rb_tree_node * D.66941;
  struct _Rb_tree_node * D.66930;
  struct _Rb_tree_node_base * D.66910;
  struct _Rb_tree_node * __node;
  struct _Rb_tree_node * D.66907;
  struct _Rb_tree_node_base * _13;
  struct _Rb_tree_node * _15;
  _Rb_tree_color _17;
  struct _Rb_tree_node_base * _20;
  struct _Rb_tree_node * _23;
  void * _26;
  struct _Rb_tree_node_base * const _33;
  _Rb_tree_color _36;
  struct _Rb_tree_node_base * _37;
  struct _Rb_tree_node_base * _41;
  struct _Rb_tree_node_base * _45;
  struct _Rb_tree_node_base * _46;
  struct _Rb_tree_node_base * _49;
  struct _Rb_tree_node_base * _50;
  struct _Rb_tree_node_base * _51;
  struct _Rb_tree_node_base * _52;
  struct _Rb_tree_node_base * _53;
  struct _Rb_tree_node_base * _54;
  struct _Rb_tree_node * _55;
  struct _Rb_tree_node_base * _61;
  struct _Rb_tree_node_base * _62;
  struct _Rb_tree_node_base * _63;
  struct _Rb_tree_node_base * _65;
  struct _Rb_tree_node_base * _66;
  struct _Rb_tree_node * _67;
  struct _Rb_tree_node_base * _74;
  struct _Rb_tree_node_base * _97;
  struct _Rb_tree_node_base * _107;
  struct _Rb_tree_node_base * _110;
  struct _Rb_tree_node_base * _125;

  <bb 2>:
  # DEBUG D#793 => this_8(D)
  # DEBUG __x => __x_9(D)
  # DEBUG __node_gen => __node_gen_10(D)
  # DEBUG this => D#793
  # DEBUG this => __x_9(D)
  # DEBUG D#1150 => &__x_9(D)->_M_value_field
  # DEBUG __r => D#1150
  # DEBUG this => __node_gen_10(D)
  # DEBUG __arg => D#1150
  # DEBUG this => __node_gen_10(D)
  _37 = __node_gen_10(D)->_M_nodes;
  if (_37 == 0B)
    goto <bb 46>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG __node => _37
  _49 = _37->_M_parent;
  __node_gen_10(D)->_M_nodes = _49;
  if (_49 != 0B)
    goto <bb 4>;
  else
    goto <bb 14>;

  <bb 4>:
  _50 = _49->_M_right;
  if (_37 == _50)
    goto <bb 5>;
  else
    goto <bb 13>;

  <bb 5>:
  _49->_M_right = 0B;
  _51 = _49->_M_left;
  if (_51 != 0B)
    goto <bb 6>;
  else
    goto <bb 44>;

  <bb 6>:
  __node_gen_10(D)->_M_nodes = _51;
  # DEBUG this => __node_gen_10(D)
  _74 = _51->_M_right;
  if (_74 == 0B)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 7>:

  <bb 8>:
  # _97 = PHI <_74(7), _53(9)>
  _53 = _97->_M_right;
  if (_53 == 0B)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  # _52 = PHI <_97(8)>

  <bb 52>:
  __node_gen_10(D)->_M_nodes = _52;

  <bb 11>:
  # _107 = PHI <_52(52), _51(6)>
  _54 = _107->_M_left;
  if (_54 != 0B)
    goto <bb 12>;
  else
    goto <bb 44>;

  <bb 12>:
  __node_gen_10(D)->_M_nodes = _54;
  goto <bb 45>;

  <bb 13>:
  _49->_M_left = 0B;
  goto <bb 45>;

  <bb 14>:
  __node_gen_10(D)->_M_root = 0B;
  goto <bb 45>;

  <bb 15>:
  # __p_48 = PHI <_55(46), _37(54)>
  # DEBUG __tmp => NULL
  _17 = __x_9(D)->D.43962._M_color;
  __p_48->D.43962._M_color = _17;
  __p_48->D.43962._M_left = 0B;
  __p_48->D.43962._M_right = 0B;
  # DEBUG __top => NULL
  __p_48->D.43962._M_parent = __p_11(D);
  _13 = __x_9(D)->D.43962._M_right;
  if (_13 != 0B)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 16>:
  _33 = MEM[(struct _Rb_tree_node_base * *)__x_9(D) + 24B];
  # DEBUG D#172 => __x_9(D)
  # DEBUG __x => D#172
  _15 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Reuse_or_alloc_node> (this_8(D), _33, __p_48, __node_gen_10(D));

  <bb 17>:
  __p_48->D.43962._M_right = _15;

  <bb 18>:
  # DEBUG __p => NULL
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_9(D) + 16B];
  # DEBUG D#171 => __x_9(D)
  # DEBUG __x => D#171
  # DEBUG __x => NULL
  # DEBUG __p => __p_48
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:

  <bb 57>:
  return __p_48;

  <bb 20>:

  <bb 21>:
  # __x_70 = PHI <__x_31(20), __x_32(40)>
  # __p_126 = PHI <__p_48(20), __p_60(40)>
  # DEBUG __p => __p_126
  # DEBUG __x => __x_70
  # DEBUG D#793 => this_8(D)
  # DEBUG __x => __x_70
  # DEBUG __node_gen => __node_gen_10(D)
  # DEBUG this => D#793
  # DEBUG this => __x_70
  # DEBUG D#1151 => &__x_70->_M_value_field
  # DEBUG __r => D#1151
  # DEBUG this => __node_gen_10(D)
  # DEBUG __arg => D#1151
  # DEBUG this => __node_gen_10(D)
  _41 = __node_gen_10(D)->_M_nodes;
  if (_41 == 0B)
    goto <bb 49>;
  else
    goto <bb 22>;

  <bb 22>:
  # DEBUG __node => _41
  _61 = _41->_M_parent;
  __node_gen_10(D)->_M_nodes = _61;
  if (_61 != 0B)
    goto <bb 23>;
  else
    goto <bb 33>;

  <bb 23>:
  _62 = _61->_M_right;
  if (_41 == _62)
    goto <bb 24>;
  else
    goto <bb 32>;

  <bb 24>:
  _61->_M_right = 0B;
  _63 = _61->_M_left;
  if (_63 != 0B)
    goto <bb 25>;
  else
    goto <bb 47>;

  <bb 25>:
  __node_gen_10(D)->_M_nodes = _63;
  # DEBUG this => __node_gen_10(D)
  _46 = _63->_M_right;
  if (_46 == 0B)
    goto <bb 30>;
  else
    goto <bb 26>;

  <bb 26>:

  <bb 27>:
  # _125 = PHI <_46(26), _65(28)>
  _65 = _125->_M_right;
  if (_65 == 0B)
    goto <bb 29>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 27>;

  <bb 29>:
  # _45 = PHI <_125(27)>

  <bb 51>:
  __node_gen_10(D)->_M_nodes = _45;

  <bb 30>:
  # _110 = PHI <_45(51), _63(25)>
  _66 = _110->_M_left;
  if (_66 != 0B)
    goto <bb 31>;
  else
    goto <bb 47>;

  <bb 31>:
  __node_gen_10(D)->_M_nodes = _66;
  goto <bb 48>;

  <bb 32>:
  _61->_M_left = 0B;
  goto <bb 48>;

  <bb 33>:
  __node_gen_10(D)->_M_root = 0B;
  goto <bb 48>;

  <bb 34>:
  # DEBUG __tmp => _67
  # DEBUG D#632 => D#726
  # DEBUG __node => _67
  # DEBUG __x => D#1151
  # DEBUG this => D#632
  # DEBUG D#631 => D#632
  # DEBUG this => _67
  # DEBUG D#1153 => &_67->_M_value_field
  # DEBUG __r => D#1153
  # DEBUG D#538 => D#631
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1153
  # DEBUG __val => D#1151
  # DEBUG this => D#630
  # DEBUG D#24 => 20
  # DEBUG __p => D#1153
  # DEBUG D.59472 => D#24
  MEM[(struct pair *)_67 + 32B] = MEM[(const struct pair &)__x_70 + 32];

  <bb 35>:
  # __p_60 = PHI <_67(34), _41(56)>
  # DEBUG __tmp => NULL
  _36 = __x_70->D.43962._M_color;
  __p_60->D.43962._M_color = _36;
  __p_60->D.43962._M_left = 0B;
  __p_60->D.43962._M_right = 0B;
  # DEBUG __y => NULL
  __p_126->D.43962._M_left = __p_60;
  __p_60->D.43962._M_parent = __p_126;
  _20 = __x_70->D.43962._M_right;
  if (_20 != 0B)
    goto <bb 36>;
  else
    goto <bb 39>;

  <bb 36>:
  # DEBUG D#172 => __x_70
  # DEBUG __x => D#172
  _23 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Reuse_or_alloc_node> (this_8(D), _20, __p_60, __node_gen_10(D));
  goto <bb 38>;

<L14>:
  goto <bb 42> (<L10>);

  <bb 38>:
  __p_60->D.43962._M_right = _23;

  <bb 39>:
  # DEBUG __p => NULL
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_70 + 16B];
  # DEBUG D#171 => __x_70
  # DEBUG __x => D#171
  # DEBUG __x => NULL
  # DEBUG __p => __p_60
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 19>;
  else
    goto <bb 40>;

  <bb 40>:
  goto <bb 21>;

<L13>:

<L10>:
  _26 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_26);
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (this_8(D), __p_48);
  __cxa_rethrow ();

<L12>:
  __cxa_end_catch ();
  resx 2

  <bb 44>:

  <bb 53>:

  <bb 45>:

  <bb 54>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#791 => __node_gen_10(D)->_M_t
  # DEBUG D#543 => D#791
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#790 => __node_gen_10(D)->_M_t
  # DEBUG D#632 => D#790
  # DEBUG __node => NULL
  # DEBUG __x => D#1150
  # DEBUG this => D#632
  # DEBUG D#631 => D#632
  # DEBUG this => NULL
  # DEBUG D#1154 => &MEM[(struct _Rb_tree_node *)_37]._M_value_field
  # DEBUG __r => D#1154
  # DEBUG D#538 => D#631
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1154
  # DEBUG __val => D#1150
  # DEBUG this => D#630
  # DEBUG D#24 => 20
  # DEBUG __p => D#1154
  # DEBUG D.59472 => D#24
  MEM[(struct pair *)_37 + 32B] = MEM[(const struct pair &)__x_9(D) + 32];
  goto <bb 15>;

  <bb 46>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#792 => __node_gen_10(D)->_M_t
  # DEBUG D#727 => D#792
  # DEBUG __x => D#1150
  # DEBUG this => D#727
  # DEBUG D#726 => D#727
  # DEBUG D#725 => D#727
  # DEBUG D#724 => D#725
  # DEBUG this => D#724
  # DEBUG D#723 => D#724
  # DEBUG this => D#723
  # DEBUG __n => 1
  # DEBUG __a => D#722
  # DEBUG D#721 => D#722
  # DEBUG D#719 => D#721
  # DEBUG D#720 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#719
  # DEBUG D.66921 => D#720
  # DEBUG D#718 => D#719
  # DEBUG D#717 => D#718
  # DEBUG this => D#717
  _55 = operator new (56);
  # DEBUG __tmp => _55
  # DEBUG D#632 => D#726
  # DEBUG __node => _55
  # DEBUG __x => D#1150
  # DEBUG this => D#632
  # DEBUG D#631 => D#632
  # DEBUG this => _55
  # DEBUG D#1155 => &_55->_M_value_field
  # DEBUG __r => D#1155
  # DEBUG D#538 => D#631
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1155
  # DEBUG __val => D#1150
  # DEBUG this => D#630
  # DEBUG D#24 => 20
  # DEBUG __p => D#1155
  # DEBUG D.59472 => D#24
  MEM[(struct pair *)_55 + 32B] = MEM[(const struct pair &)__x_9(D) + 32];
  goto <bb 15>;

  <bb 47>:

  <bb 55>:

  <bb 48>:

  <bb 56>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#791 => __node_gen_10(D)->_M_t
  # DEBUG D#543 => D#791
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#790 => __node_gen_10(D)->_M_t
  # DEBUG D#632 => D#790
  # DEBUG __node => NULL
  # DEBUG __x => D#1151
  # DEBUG this => D#632
  # DEBUG D#631 => D#632
  # DEBUG this => NULL
  # DEBUG D#1152 => &MEM[(struct _Rb_tree_node *)_41]._M_value_field
  # DEBUG __r => D#1152
  # DEBUG D#538 => D#631
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1152
  # DEBUG __val => D#1151
  # DEBUG this => D#630
  # DEBUG D#24 => 20
  # DEBUG __p => D#1152
  # DEBUG D.59472 => D#24
  MEM[(struct pair *)_41 + 32B] = MEM[(const struct pair &)__x_70 + 32];
  goto <bb 35>;

  <bb 49>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#792 => __node_gen_10(D)->_M_t
  # DEBUG D#727 => D#792
  # DEBUG __x => D#1151
  # DEBUG this => D#727
  # DEBUG D#726 => D#727
  # DEBUG D#725 => D#727
  # DEBUG D#724 => D#725
  # DEBUG this => D#724
  # DEBUG D#723 => D#724
  # DEBUG this => D#723
  # DEBUG __n => 1
  # DEBUG __a => D#722
  # DEBUG D#721 => D#722
  # DEBUG D#719 => D#721
  # DEBUG D#720 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#719
  # DEBUG D.66955 => D#720
  # DEBUG D#718 => D#719
  # DEBUG D#717 => D#718
  # DEBUG this => D#717
  _67 = operator new (56);
  goto <bb 34>;

<L15>:
  goto <bb 42> (<L10>);

}



;; Function std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::operator=(const std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >] (_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EEaSERKSA_, funcdef_no=2603, decl_uid=41857, cgraph_uid=1273, symbol_order=1274)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::operator=(const std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >] (struct _Rb_tree * const this, const struct _Rb_tree & __x)
{
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  struct _Reuse_or_alloc_node __roan;
  struct _Rb_tree_node_base * _6;
  struct _Rb_tree & prephitmp_12;
  struct _Rb_tree_node_base * _13;
  struct _Rb_tree_node_base * _15;
  struct _Rb_tree_node_base * _16;
  long unsigned int _18;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * const _23;
  struct _Rb_tree & _28;
  struct _Rb_tree_node_base * pretmp_40;
  struct _Rb_tree_node_base * prephitmp_42;
  struct _Rb_tree & pretmp_43;

  <bb 2>:
  if (this_3(D) != __x_4(D))
    goto <bb 3>;
  else
    goto <bb 17>;

  <bb 3>:
  # DEBUG this => &__roan
  # DEBUG __t => this_3(D)
  # DEBUG this => this_3(D)
  _6 = MEM[(struct _Rb_tree_node_base * &)this_3(D) + 16];
  __roan._M_root = _6;
  # DEBUG this => this_3(D)
  _15 = MEM[(struct _Rb_tree_node_base * &)this_3(D) + 32];
  __roan._M_nodes = _15;
  __roan._M_t = this_3(D);
  if (_6 != 0B)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 4>:
  _6->_M_parent = 0B;
  _13 = _15->_M_left;
  if (_13 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  __roan._M_nodes = _13;
  goto <bb 7>;

  <bb 6>:
  __roan._M_nodes = 0B;

  <bb 7>:
  # DEBUG D#794 => &this_3(D)->_M_impl
  # DEBUG this => D#794
  MEM[(struct _Rb_tree_impl *)this_3(D)]._M_header._M_parent = 0B;
  _16 = &MEM[(struct _Rb_tree_impl *)this_3(D)]._M_header;
  MEM[(struct _Rb_tree_impl *)this_3(D)]._M_header._M_left = _16;
  MEM[(struct _Rb_tree_impl *)this_3(D)]._M_header._M_right = _16;
  MEM[(struct _Rb_tree_impl *)this_3(D)]._M_node_count = 0;
  _23 = MEM[(struct _Rb_tree_node_base * *)__x_4(D) + 16B];
  # DEBUG D#109 => __x_4(D)
  # DEBUG this => D#109
  if (_23 != 0B)
    goto <bb 8>;
  else
    goto <bb 16>;

  <bb 8>:
  # DEBUG this => this_3(D)
  # DEBUG this => this_3(D)
  # DEBUG D#110 => __x_4(D)
  # DEBUG this => D#110
  __x_10 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Reuse_or_alloc_node> (this_3(D), _23, _16, &__roan);

  <bb 9>:
  MEM[(struct _Rb_tree_node_base * &)this_3(D) + 16] = __x_10;
  # DEBUG this => this_3(D)
  # DEBUG this => this_3(D)
  # DEBUG __x => __x_10

  <bb 10>:
  # __x_24 = PHI <__x_10(9), __x_25(11)>
  # DEBUG __x => __x_24
  __x_25 = __x_24->_M_left;
  if (__x_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

  <bb 12>:
  # __x_50 = PHI <__x_24(10)>

  <bb 20>:
  MEM[(struct _Rb_tree_node_base * &)this_3(D) + 24] = __x_50;
  # DEBUG this => this_3(D)
  # DEBUG this => this_3(D)
  # DEBUG __x => __x_10

  <bb 13>:
  # __x_8 = PHI <__x_10(20), __x_7(14)>
  # DEBUG __x => __x_8
  __x_7 = __x_8->_M_right;
  if (__x_7 == 0B)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  # __x_51 = PHI <__x_8(13)>

  <bb 19>:
  MEM[(struct _Rb_tree_node_base * &)this_3(D) + 32] = __x_51;
  _18 = __x_4(D)->_M_impl._M_node_count;
  this_3(D)->_M_impl._M_node_count = _18;
  pretmp_40 = __roan._M_root;
  pretmp_43 = __roan._M_t;

  <bb 16>:
  # prephitmp_42 = PHI <_6(7), pretmp_40(19)>
  # prephitmp_12 = PHI <this_3(D)(7), pretmp_43(19)>
  # DEBUG this => &__roan
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (prephitmp_12, prephitmp_42);
  __roan ={v} {CLOBBER};

  <bb 17>:

  <bb 21>:
  return this_3(D);

<L7>:
  # DEBUG this => &__roan
  _21 = __roan._M_root;
  _28 = __roan._M_t;
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_28, _21);
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::map<int, Allocator::sRequest>; _Alloc = std::allocator<std::map<int, Allocator::sRequest> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::map<int, Allocator::sRequest>*, std::vector<std::map<int, Allocator::sRequest> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::map<int, Allocator::sRequest>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::map<int, Allocator::sRequest>] (_ZNSt6vectorISt3mapIiN9Allocator8sRequestESt4lessIiESaISt4pairIKiS2_EEESaIS9_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS9_SB_EEmRKS9_, funcdef_no=2194, decl_uid=37816, cgraph_uid=864, symbol_order=865)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is not innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 18 as candidate
loop 18 is not innermost
loop is not parallel according to graphite
Trying loop 19 as candidate
loop 19 is innermost
loop is not parallel according to graphite
Trying loop 20 as candidate
loop 20 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is not innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 29 as candidate
loop 29 is innermost
loop is not parallel according to graphite
Trying loop 30 as candidate
loop 30 is not innermost
loop is not parallel according to graphite
Trying loop 31 as candidate
loop 31 is innermost
loop is not parallel according to graphite
Trying loop 32 as candidate
loop 32 is innermost
loop is not parallel according to graphite
Trying loop 25 as candidate
loop 25 is innermost
loop is not parallel according to graphite
Trying loop 26 as candidate
loop 26 is not innermost
loop is not parallel according to graphite
Trying loop 27 as candidate
loop 27 is innermost
loop is not parallel according to graphite
Trying loop 28 as candidate
loop 28 is innermost
loop is not parallel according to graphite
Trying loop 21 as candidate
loop 21 is innermost
loop is not parallel according to graphite
Trying loop 22 as candidate
loop 22 is not innermost
loop is not parallel according to graphite
Trying loop 23 as candidate
loop 23 is innermost
loop is not parallel according to graphite
Trying loop 24 as candidate
loop 24 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::map<int, Allocator::sRequest>; _Alloc = std::allocator<std::map<int, Allocator::sRequest> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::map<int, Allocator::sRequest>*, std::vector<std::map<int, Allocator::sRequest> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::map<int, Allocator::sRequest>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::map<int, Allocator::sRequest>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  struct map * D.67254;
  struct map * __first;
  struct map * __result;
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  struct map * D.67213;
  struct map * __first;
  struct map * __result;
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  const long unsigned int D.67175;
  const size_type __len;
  size_type D.67174;
  size_type __n;
  struct map * D.67165;
  struct map * D.67153;
  struct map * __first;
  long unsigned int __n;
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  struct map * D.67112;
  struct map * __first;
  struct map * __result;
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  struct map * D.67071;
  struct map * __first;
  long unsigned int __n;
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  struct map * D.67030;
  struct map * __first;
  struct map * __result;
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  struct map * const __position;
  struct map * __first;
  struct map * __first;
  struct map * __first;
  struct map * __first;
  difference_type __n;
  struct map * __last;
  struct map * __new_finish;
  const size_type __elems_before;
  struct map * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct map * _10;
  long int _11;
  struct map * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct _Rb_tree_node_base * _17;
  long int __last.86_21;
  struct map * const _24;
  long unsigned int _25;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  long unsigned int _33;
  long int _35;
  struct map * _36;
  struct map * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct map * _51;
  const struct _Rep_type * _56;
  long unsigned int _59;
  sizetype _60;
  struct map * _63;
  struct map * _67;
  long int _73;
  struct map * _74;
  long unsigned int _75;
  struct map * _76;
  struct _Rep_type * _80;
  struct _Rep_type * _83;
  struct _Rep_type * _87;
  struct _Rb_tree_node_base * _89;
  bool _95;
  struct _Rep_type * _96;
  struct _Rb_tree_node_base * _97;
  struct _Rb_tree_node_base * _99;
  struct _Rep_type * _100;
  struct _Rb_tree_node_base * _101;
  struct _Rep_type * _104;
  struct _Rb_tree_node_base * _105;
  struct _Rb_tree_node_base * _115;
  struct _Rb_tree_node_base * _116;
  long unsigned int prephitmp_128;
  struct _Rb_tree_node_base * _138;
  struct _Rb_tree_node_base * _141;
  struct _Rb_tree_node_base * _142;
  struct map * const prephitmp_151;
  long int pretmp_152;
  long int prephitmp_153;
  struct _Rb_tree_node_base * const _157;
  long unsigned int _164;
  long unsigned int _166;
  struct _Rep_type * _167;
  void * _170;
  struct _Rep_type * _172;
  struct _Rb_tree_node_base * _173;
  struct _Rb_tree_node_base * const _175;
  long unsigned int _182;
  struct _Rep_type * _186;
  void * _189;
  void * _190;
  struct _Rep_type * _191;
  struct _Rb_tree_node_base * _192;
  struct _Rb_tree_node_base * const _194;
  long unsigned int _201;
  bool _204;
  struct _Rep_type * _205;
  void * _208;
  struct _Rep_type * _210;
  struct _Rb_tree_node_base * _211;
  struct _Rb_tree_node_base * const _213;
  long unsigned int _220;
  struct _Rep_type * _224;
  void * _227;
  struct _Rep_type * _229;
  struct _Rb_tree_node_base * _230;
  struct map * _232;
  long int _236;
  long int _237;
  long int _238;
  long unsigned int _240;
  struct _Rb_tree_node_base * const _246;
  long unsigned int _253;
  struct _Rep_type * _257;
  void * _260;
  struct _Rep_type * _262;
  struct _Rb_tree_node_base * _263;
  struct _Rb_tree_node_base * const _265;
  long unsigned int _272;
  struct _Rep_type * _276;
  void * _279;
  struct _Rep_type * _281;
  struct _Rb_tree_node_base * _282;
  struct _Rb_tree_node_base * const _284;
  long unsigned int _291;
  void * _296;
  struct map * _299;
  struct map * prephitmp_345;
  struct map * pretmp_362;
  struct map * pretmp_370;
  struct map * prephitmp_383;
  struct map * pretmp_385;
  struct map * prephitmp_386;
  long unsigned int pretmp_423;
  long unsigned int prephitmp_424;
  struct map * const pretmp_425;
  long int _487;
  long int _488;
  difference_type _489;
  difference_type _492;
  long int _496;
  long int _497;
  bool _540;
  long int _572;
  long int _573;

  <bb 2>:
  # DEBUG D#1166 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#1166
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 177>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.37893._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.37893._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 48;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 100>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_29(D)
  # DEBUG D#1160 => &MEM[(const struct map &)__x_29(D)]._M_t
  # DEBUG this => &__x_copy._M_t
  # DEBUG __x => D#1160
  # DEBUG this => D#1160
  # DEBUG __a => NULL
  # DEBUG D#736 => &MEM[(const struct _Rb_tree &)D#1160]._M_impl._M_key_compare
  # DEBUG D#735 => &MEM[(struct _Rb_tree *)&__x_copy]._M_impl
  # DEBUG this => D#735
  # DEBUG __comp => D#736
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG D.54197 => NULL
  MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&__x_copy]._M_node_count = 0;
  # DEBUG this => D#735
  MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header;
  MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header;
  _157 = MEM[(struct _Rb_tree_node_base * *)__x_29(D) + 16B];
  # DEBUG D#109 => D#1160
  # DEBUG this => D#109
  if (_157 != 0B)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  # DEBUG this => &__x_copy._M_t
  # DEBUG this => &__x_copy._M_t
  # DEBUG D#110 => D#1160
  # DEBUG this => D#110
  # DEBUG this => &__x_copy._M_t
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => &__x_copy._M_t
  __an._M_t = &__x_copy._M_t;
  __x_159 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node> (&__x_copy._M_t, _157, &MEM[(struct _Rb_tree *)&__x_copy]._M_impl._M_header, &__an);
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)&__x_copy + 16] = __x_159;
  # DEBUG this => &__x_copy._M_t
  # DEBUG this => &__x_copy._M_t
  # DEBUG __x => __x_159

  <bb 6>:
  # __x_160 = PHI <__x_159(5), __x_161(7)>
  # DEBUG __x => __x_160
  __x_161 = __x_160->_M_left;
  if (__x_161 == 0B)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  # __x_62 = PHI <__x_160(6)>
  MEM[(struct _Rb_tree_node_base * &)&__x_copy + 24] = __x_62;
  # DEBUG this => &__x_copy._M_t
  # DEBUG this => &__x_copy._M_t
  # DEBUG __x => __x_159

  <bb 9>:
  # __x_162 = PHI <__x_159(8), __x_163(10)>
  # DEBUG __x => __x_162
  __x_163 = __x_162->_M_right;
  if (__x_163 == 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:
  # __x_94 = PHI <__x_162(9)>
  MEM[(struct _Rb_tree_node_base * &)&__x_copy + 32] = __x_94;
  _164 = MEM[(const struct _Rb_tree &)__x_29(D)]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)&__x_copy]._M_impl._M_node_count = _164;
  pretmp_425 = MEM[(struct map * const &)this_9(D) + 8];
  pretmp_152 = (long int) pretmp_425;

  <bb 12>:
  # prephitmp_151 = PHI <pretmp_425(11), _12(4)>
  # prephitmp_153 = PHI <pretmp_152(11), _13(4)>
  # DEBUG this => this_9(D)
  # DEBUG D#111 => &this_9(D)->D.37893._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#111
  # DEBUG D#1163 => MEM[(struct map * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.45308
  # DEBUG __rhs => &__position
  # DEBUG this => &D.45308
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = prephitmp_153 - _35;
  _30 = _31 /[ex] 48;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#1163
  if (__n_7(D) < __elems_after_57)
    goto <bb 13>;
  else
    goto <bb 48>;

  <bb 13>:
  # DEBUG D#799 => &this_9(D)->D.37893
  # DEBUG this => D#799
  _59 = __n_7(D) * 48;
  _60 = -_59;
  __last_61 = prephitmp_151 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#1163
  # DEBUG __result => D#1163
  # DEBUG __alloc => D#739
  # DEBUG D#738 => D#739
  # DEBUG D#737 => D#738
  # DEBUG __first => __last_61
  # DEBUG __last => D#1163
  # DEBUG __result => D#1163
  # DEBUG D.61906 => D#737
  # DEBUG __first => __last_61
  # DEBUG __last => D#1163
  # DEBUG __result => D#1163
  # DEBUG __assignable => 1
  # DEBUG __first => __last_61
  # DEBUG __last => D#1163
  # DEBUG __result => D#1163
  # DEBUG __cur => D#1163
  # DEBUG __cur => D#1163
  # DEBUG __first => __last_61
  if (__last_61 == prephitmp_151)
    goto <bb 29>;
  else
    goto <bb 14>;

  <bb 14>:

  <bb 15>:
  # __last_548 = PHI <__last_61(14), __last_168(27)>
  # __old_finish_549 = PHI <prephitmp_151(14), __old_finish_169(27)>
  # DEBUG __cur => __old_finish_549
  # DEBUG __first => __last_548
  # DEBUG __r => __old_finish_549
  # DEBUG __p => NULL
  # DEBUG __value => __last_548
  # DEBUG D#24 => 48
  # DEBUG __p => NULL
  # DEBUG D.61265 => D#24
  if (__old_finish_549 != 0B)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 26>;

  <bb 17>:
  # DEBUG this => NULL
  # DEBUG __x => __last_548
  # DEBUG D#1161 => &MEM[(const struct map &)__last_548]._M_t
  _167 = &__old_finish_549->_M_t;
  # DEBUG this => _167
  # DEBUG __x => D#1161
  # DEBUG this => D#1161
  # DEBUG __a => NULL
  # DEBUG D#736 => &MEM[(const struct _Rb_tree &)D#1161]._M_impl._M_key_compare
  # DEBUG D#735 => &MEM[(struct _Rb_tree *)_167]._M_impl
  # DEBUG this => D#735
  # DEBUG __comp => D#736
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG D.54197 => NULL
  MEM[(struct _Rb_tree_impl *)__old_finish_549]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)__old_finish_549]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)__old_finish_549]._M_node_count = 0;
  # DEBUG this => D#735
  _138 = &MEM[(struct _Rb_tree_impl *)__old_finish_549]._M_header;
  MEM[(struct _Rb_tree_impl *)__old_finish_549]._M_header._M_left = _138;
  MEM[(struct _Rb_tree_impl *)__old_finish_549]._M_header._M_right = _138;
  _175 = MEM[(struct _Rb_tree_node_base * *)__last_548 + 16B];
  # DEBUG D#109 => D#1161
  # DEBUG this => D#109
  if (_175 != 0B)
    goto <bb 18>;
  else
    goto <bb 16>;

  <bb 18>:
  # DEBUG this => _167
  # DEBUG this => _167
  # DEBUG D#110 => D#1161
  # DEBUG this => D#110
  # DEBUG this => _167
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => _167
  __an._M_t = _167;
  __x_177 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node> (_167, _175, _138, &__an);

  <bb 19>:
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)__old_finish_549 + 16] = __x_177;
  # DEBUG this => _167
  # DEBUG this => _167
  # DEBUG __x => __x_177

  <bb 20>:
  # __x_178 = PHI <__x_177(19), __x_179(21)>
  # DEBUG __x => __x_178
  __x_179 = __x_178->_M_left;
  if (__x_179 == 0B)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 20>;

  <bb 22>:
  # __x_433 = PHI <__x_178(20)>
  MEM[(struct _Rb_tree_node_base * &)__old_finish_549 + 24] = __x_433;
  # DEBUG this => _167
  # DEBUG this => _167
  # DEBUG __x => __x_177

  <bb 23>:
  # __x_180 = PHI <__x_177(22), __x_181(24)>
  # DEBUG __x => __x_180
  __x_181 = __x_180->_M_right;
  if (__x_181 == 0B)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:
  goto <bb 23>;

  <bb 25>:
  # __x_408 = PHI <__x_180(23)>
  MEM[(struct _Rb_tree_node_base * &)__old_finish_549 + 32] = __x_408;
  _182 = MEM[(const struct _Rb_tree &)__last_548]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)__old_finish_549]._M_impl._M_node_count = _182;

  <bb 26>:
  __last_168 = __last_548 + 48;
  # DEBUG __first => __last_168
  __old_finish_169 = __old_finish_549 + 48;
  # DEBUG __cur => __old_finish_169
  # DEBUG __cur => __old_finish_169
  # DEBUG __first => __last_168
  if (prephitmp_151 == __last_168)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 15>;

  <bb 28>:
  pretmp_370 = this_9(D)->D.37893._M_impl._M_finish;

  <bb 29>:
  # prephitmp_345 = PHI <pretmp_370(28), prephitmp_151(13)>
  _63 = prephitmp_345 + _59;
  this_9(D)->D.37893._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#1166
  # DEBUG __last => __last_61
  # DEBUG __result => D#1163
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#1166
  # DEBUG __it => D#1166
  # DEBUG __first => D#1166
  # DEBUG __last => __last_61
  # DEBUG __result => D#1163
  # DEBUG __it => D#1163
  # DEBUG __it => D#1163
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#1166
  # DEBUG __it => D#1166
  # DEBUG __first => D#1166
  # DEBUG __last => __last_61
  # DEBUG __result => D#1163
  # DEBUG __simple => 0
  # DEBUG __first => D#1166
  # DEBUG __last => __last_61
  # DEBUG __result => D#1163
  __last.86_21 = (long int) __last_61;
  _73 = __last.86_21 - _35;
  __n_72 = _73 /[ex] 48;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => D#1163
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 30>;
  else
    goto <bb 37>;

  <bb 30>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#1166
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1166
  if (__position_23 == _67)
    goto <bb 42>;
  else
    goto <bb 43>;

  # __old_finish_560 = PHI <__old_finish_549(18)>
<L19>:
  _170 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_170);
  # DEBUG __first => D#1163
  # DEBUG __last => __old_finish_560
  # DEBUG __first => D#1163
  # DEBUG __last => __old_finish_560
  # DEBUG __first => D#1163
  if (prephitmp_151 == __old_finish_560)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  __cxa_rethrow ();

  <bb 33>:

  <bb 34>:
  # __old_finish_543 = PHI <prephitmp_151(33), __old_finish_174(35)>
  # DEBUG __first => __old_finish_543
  # DEBUG __r => __old_finish_543
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _172 = &__old_finish_543->_M_t;
  # DEBUG this => _172
  _173 = MEM[(struct _Rb_tree_node_base * *)__old_finish_543 + 16B];
  # DEBUG D#91 => _172
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_172, _173);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_172]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__old_finish_543] ={v} {CLOBBER};
  __old_finish_174 = __old_finish_543 + 48;
  # DEBUG __first => __old_finish_174
  # DEBUG __first => __old_finish_174
  if (__old_finish_174 == __old_finish_560)
    goto <bb 32>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 34>;

<L21>:
  __cxa_end_catch ();
  resx 13

  <bb 37>:

  <bb 38>:
  # __old_finish_556 = PHI <prephitmp_151(37), __old_finish_58(41)>
  # __last_538 = PHI <__last_61(37), __last_66(41)>
  # __n_539 = PHI <__n_72(37), __n_81(41)>
  # DEBUG __n => __n_539
  # DEBUG __result => __old_finish_556
  # DEBUG __last => __last_538
  __last_66 = __last_538 + 18446744073709551568;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_556 + 18446744073709551568;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG __x => __last_66
  _56 = &MEM[(const struct map &)__last_66]._M_t;
  _80 = &__old_finish_58->_M_t;
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::operator= (_80, _56);
  goto <bb 40>;

<L40>:
  goto <bb 179> (<L10>);

  <bb 40>:
  __n_81 = __n_539 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 30>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 38>;

  <bb 42>:
  goto <bb 99>;

  <bb 43>:

  <bb 44>:
  # __position_553 = PHI <__position_23(43), __position_84(47)>
  # DEBUG __first => __position_553
  # DEBUG this => __position_553
  # DEBUG __x => &__x_copy
  _83 = &__position_553->_M_t;
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::operator= (_83, &__x_copy._M_t);
  goto <bb 46>;

<L41>:
  goto <bb 179> (<L10>);

  <bb 46>:
  __position_84 = __position_553 + 48;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 42>;
  else
    goto <bb 47>;

  <bb 47>:
  goto <bb 44>;

  <bb 48>:
  # DEBUG D#800 => &this_9(D)->D.37893
  # DEBUG this => D#800
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#1163
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.61956 => D#742
  # DEBUG __first => D#1163
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => D#1163
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => D#1163
  # DEBUG __cur => D#1163
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 64>;
  else
    goto <bb 49>;

  <bb 49>:

  <bb 50>:
  # __n_544 = PHI <__n_70(49), __n_187(63)>
  # __old_finish_546 = PHI <prephitmp_151(49), __old_finish_188(63)>
  # DEBUG __cur => __old_finish_546
  # DEBUG __n => __n_544
  # DEBUG __r => __old_finish_546
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#24 => 48
  # DEBUG __p => NULL
  # DEBUG D.61265 => D#24
  if (__old_finish_546 != 0B)
    goto <bb 52>;
  else
    goto <bb 51>;

  <bb 51>:
  goto <bb 61>;

  <bb 52>:
  # DEBUG this => NULL
  # DEBUG __x => &__x_copy
  _186 = &__old_finish_546->_M_t;
  # DEBUG this => _186
  # DEBUG __x => &__x_copy._M_t
  # DEBUG this => &__x_copy._M_t
  # DEBUG __a => NULL
  # DEBUG D#736 => &MEM[(const struct _Rb_tree &)&__x_copy]._M_impl._M_key_compare
  # DEBUG D#735 => &MEM[(struct _Rb_tree *)_186]._M_impl
  # DEBUG this => D#735
  # DEBUG __comp => D#736
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG D.54197 => NULL
  MEM[(struct _Rb_tree_impl *)__old_finish_546]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)__old_finish_546]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)__old_finish_546]._M_node_count = 0;
  # DEBUG this => D#735
  _141 = &MEM[(struct _Rb_tree_impl *)__old_finish_546]._M_header;
  MEM[(struct _Rb_tree_impl *)__old_finish_546]._M_header._M_left = _141;
  MEM[(struct _Rb_tree_impl *)__old_finish_546]._M_header._M_right = _141;
  _194 = MEM[(struct _Rb_tree_node_base * *)&__x_copy + 16B];
  # DEBUG D#109 => &__x_copy._M_t
  # DEBUG this => D#109
  if (_194 != 0B)
    goto <bb 53>;
  else
    goto <bb 51>;

  <bb 53>:
  # DEBUG this => _186
  # DEBUG this => _186
  # DEBUG D#110 => &__x_copy._M_t
  # DEBUG this => D#110
  # DEBUG this => _186
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => _186
  __an._M_t = _186;
  __x_196 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node> (_186, _194, _141, &__an);

  <bb 54>:
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)__old_finish_546 + 16] = __x_196;
  # DEBUG this => _186
  # DEBUG this => _186
  # DEBUG __x => __x_196

  <bb 55>:
  # __x_197 = PHI <__x_196(54), __x_198(56)>
  # DEBUG __x => __x_197
  __x_198 = __x_197->_M_left;
  if (__x_198 == 0B)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 55>;

  <bb 57>:
  # __x_394 = PHI <__x_197(55)>
  MEM[(struct _Rb_tree_node_base * &)__old_finish_546 + 24] = __x_394;
  # DEBUG this => _186
  # DEBUG this => _186
  # DEBUG __x => __x_196

  <bb 58>:
  # __x_199 = PHI <__x_196(57), __x_200(59)>
  # DEBUG __x => __x_199
  __x_200 = __x_199->_M_right;
  if (__x_200 == 0B)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  goto <bb 58>;

  <bb 60>:
  # __x_395 = PHI <__x_199(58)>
  MEM[(struct _Rb_tree_node_base * &)__old_finish_546 + 32] = __x_395;
  _201 = MEM[(const struct _Rb_tree &)&__x_copy]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)__old_finish_546]._M_impl._M_node_count = _201;

  <bb 61>:
  __n_187 = __n_544 + 18446744073709551615;
  # DEBUG __n => __n_187
  __old_finish_188 = __old_finish_546 + 48;
  # DEBUG __cur => __old_finish_188
  # DEBUG __cur => __old_finish_188
  # DEBUG __n => __n_187
  if (__n_187 == 0)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # __old_finish_409 = PHI <__old_finish_188(61)>
  goto <bb 64>;

  <bb 63>:
  goto <bb 50>;

  <bb 64>:
  # __old_finish_545 = PHI <__old_finish_409(62), prephitmp_151(48)>
  this_9(D)->D.37893._M_impl._M_finish = __old_finish_545;
  # DEBUG D#801 => &this_9(D)->D.37893
  # DEBUG this => D#801
  # DEBUG this => &__position
  # DEBUG __first => D#1166
  # DEBUG __last => D#1163
  # DEBUG __result => NULL
  # DEBUG __alloc => D#739
  # DEBUG D#738 => D#739
  # DEBUG D#737 => D#738
  # DEBUG __first => D#1166
  # DEBUG __last => D#1163
  # DEBUG __result => NULL
  # DEBUG D.61969 => D#737
  # DEBUG __first => D#1166
  # DEBUG __last => D#1163
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1166
  # DEBUG __last => D#1163
  # DEBUG __result => __old_finish_545
  # DEBUG __cur => __old_finish_545
  # DEBUG __first => D#1166
  if (__position_23 == prephitmp_151)
    goto <bb 196>;
  else
    goto <bb 72>;

  # __old_finish_273 = PHI <__old_finish_546(53)>
<L22>:
  _189 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_189);
  # DEBUG __first => D#1163
  # DEBUG __last => __old_finish_273
  # DEBUG __first => D#1163
  # DEBUG __last => __old_finish_273
  # DEBUG __first => D#1163
  if (prephitmp_151 == __old_finish_273)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  __cxa_rethrow ();

  <bb 67>:

  <bb 68>:
  # __old_finish_541 = PHI <prephitmp_151(67), __old_finish_193(69)>
  # DEBUG __first => __old_finish_541
  # DEBUG __r => __old_finish_541
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _191 = &__old_finish_541->_M_t;
  # DEBUG this => _191
  _192 = MEM[(struct _Rb_tree_node_base * *)__old_finish_541 + 16B];
  # DEBUG D#91 => _191
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_191, _192);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_191]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__old_finish_541] ={v} {CLOBBER};
  __old_finish_193 = __old_finish_541 + 48;
  # DEBUG __first => __old_finish_193
  # DEBUG __first => __old_finish_193
  if (__old_finish_193 == __old_finish_273)
    goto <bb 66>;
  else
    goto <bb 69>;

  <bb 69>:
  goto <bb 68>;

<L24>:
  __cxa_end_catch ();
  resx 16

<L42>:
  goto <bb 179> (<L10>);

  <bb 72>:

  <bb 73>:
  # __position_453 = PHI <__position_23(72), __position_206(85)>
  # __old_finish_542 = PHI <__old_finish_545(72), __old_finish_207(85)>
  # DEBUG __cur => __old_finish_542
  # DEBUG __first => __position_453
  # DEBUG __r => __old_finish_542
  # DEBUG __p => NULL
  # DEBUG __value => __position_453
  # DEBUG D#24 => 48
  # DEBUG __p => NULL
  # DEBUG D.61265 => D#24
  if (__old_finish_542 != 0B)
    goto <bb 75>;
  else
    goto <bb 74>;

  <bb 74>:
  goto <bb 84>;

  <bb 75>:
  # DEBUG this => NULL
  # DEBUG __x => __position_453
  # DEBUG D#1162 => &MEM[(const struct map &)__position_453]._M_t
  _205 = &__old_finish_542->_M_t;
  # DEBUG this => _205
  # DEBUG __x => D#1162
  # DEBUG this => D#1162
  # DEBUG __a => NULL
  # DEBUG D#736 => &MEM[(const struct _Rb_tree &)D#1162]._M_impl._M_key_compare
  # DEBUG D#735 => &MEM[(struct _Rb_tree *)_205]._M_impl
  # DEBUG this => D#735
  # DEBUG __comp => D#736
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG D.54197 => NULL
  MEM[(struct _Rb_tree_impl *)__old_finish_542]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)__old_finish_542]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)__old_finish_542]._M_node_count = 0;
  # DEBUG this => D#735
  _142 = &MEM[(struct _Rb_tree_impl *)__old_finish_542]._M_header;
  MEM[(struct _Rb_tree_impl *)__old_finish_542]._M_header._M_left = _142;
  MEM[(struct _Rb_tree_impl *)__old_finish_542]._M_header._M_right = _142;
  _213 = MEM[(struct _Rb_tree_node_base * *)__position_453 + 16B];
  # DEBUG D#109 => D#1162
  # DEBUG this => D#109
  if (_213 != 0B)
    goto <bb 76>;
  else
    goto <bb 74>;

  <bb 76>:
  # DEBUG this => _205
  # DEBUG this => _205
  # DEBUG D#110 => D#1162
  # DEBUG this => D#110
  # DEBUG this => _205
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => _205
  __an._M_t = _205;
  __x_215 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node> (_205, _213, _142, &__an);

  <bb 77>:
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)__old_finish_542 + 16] = __x_215;
  # DEBUG this => _205
  # DEBUG this => _205
  # DEBUG __x => __x_215

  <bb 78>:
  # __x_216 = PHI <__x_215(77), __x_217(79)>
  # DEBUG __x => __x_216
  __x_217 = __x_216->_M_left;
  if (__x_217 == 0B)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:
  goto <bb 78>;

  <bb 80>:
  # __x_575 = PHI <__x_216(78)>
  MEM[(struct _Rb_tree_node_base * &)__old_finish_542 + 24] = __x_575;
  # DEBUG this => _205
  # DEBUG this => _205
  # DEBUG __x => __x_215

  <bb 81>:
  # __x_218 = PHI <__x_215(80), __x_219(82)>
  # DEBUG __x => __x_218
  __x_219 = __x_218->_M_right;
  if (__x_219 == 0B)
    goto <bb 83>;
  else
    goto <bb 82>;

  <bb 82>:
  goto <bb 81>;

  <bb 83>:
  # __x_234 = PHI <__x_218(81)>
  MEM[(struct _Rb_tree_node_base * &)__old_finish_542 + 32] = __x_234;
  _220 = MEM[(const struct _Rb_tree &)__position_453]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)__old_finish_542]._M_impl._M_node_count = _220;

  <bb 84>:
  __position_206 = __position_453 + 48;
  # DEBUG __first => __position_206
  __old_finish_207 = __old_finish_542 + 48;
  # DEBUG __cur => __old_finish_207
  # DEBUG __cur => __old_finish_207
  # DEBUG __first => __position_206
  if (prephitmp_151 == __position_206)
    goto <bb 86>;
  else
    goto <bb 85>;

  <bb 85>:
  goto <bb 73>;

  <bb 86>:
  _74 = this_9(D)->D.37893._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.37893._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#1166
  # DEBUG __last => D#1163
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1166
  if (__position_23 == prephitmp_151)
    goto <bb 42>;
  else
    goto <bb 94>;

  # __old_finish_308 = PHI <__old_finish_542(76)>
<L25>:
  _208 = __builtin_eh_pointer (20);
  __cxa_begin_catch (_208);
  # DEBUG __first => __old_finish_545
  # DEBUG __last => __old_finish_308
  # DEBUG __first => __old_finish_545
  # DEBUG __last => __old_finish_308
  # DEBUG __first => __old_finish_545
  if (__old_finish_308 == __old_finish_545)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  __cxa_rethrow ();

  <bb 89>:

  <bb 90>:
  # __old_finish_85 = PHI <__old_finish_545(89), __old_finish_212(91)>
  # DEBUG __first => __old_finish_85
  # DEBUG __r => __old_finish_85
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _210 = &__old_finish_85->_M_t;
  # DEBUG this => _210
  _211 = MEM[(struct _Rb_tree_node_base * *)__old_finish_85 + 16B];
  # DEBUG D#91 => _210
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_210, _211);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_210]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__old_finish_85] ={v} {CLOBBER};
  __old_finish_212 = __old_finish_85 + 48;
  # DEBUG __first => __old_finish_212
  # DEBUG __first => __old_finish_212
  if (__old_finish_212 == __old_finish_308)
    goto <bb 88>;
  else
    goto <bb 91>;

  <bb 91>:
  goto <bb 90>;

<L27>:
  __cxa_end_catch ();
  resx 19

<L43>:
  goto <bb 179> (<L10>);

  <bb 94>:

  <bb 95>:
  # __position_552 = PHI <__position_23(94), __position_88(98)>
  # DEBUG __first => __position_552
  # DEBUG this => __position_552
  # DEBUG __x => &__x_copy
  _87 = &__position_552->_M_t;
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::operator= (_87, &__x_copy._M_t);
  goto <bb 97>;

<L44>:
  goto <bb 179> (<L10>);

  <bb 97>:
  __position_88 = __position_552 + 48;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__position_88 == prephitmp_151)
    goto <bb 42>;
  else
    goto <bb 98>;

  <bb 98>:
  goto <bb 95>;

  <bb 99>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy._M_t
  _89 = MEM[(struct _Rb_tree_node_base * *)&__x_copy + 16B];
  # DEBUG D#91 => &__x_copy._M_t
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (&__x_copy._M_t, _89);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)&__x_copy]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  __x_copy ={v} {CLOBBER};
  goto <bb 177>;

  <bb 100>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#568 => this_9(D)
  # DEBUG this => D#568
  # DEBUG D#567 => D#568
  # DEBUG D#566 => &D#567->D.37893
  # DEBUG this => D#566
  # DEBUG __a => D#565
  # DEBUG D#564 => D#565
  # DEBUG D#563 => D#564
  # DEBUG this => D#563
  _24 = MEM[(struct map * *)this_9(D)];
  # DEBUG D#92 => this_9(D)
  # DEBUG D#92 => this_9(D)
  # DEBUG this => D#92
  # DEBUG this => D#92
  _236 = (long int) _24;
  _237 = _13 - _236;
  _238 = _237 /[ex] 48;
  _239 = (const long unsigned int) _238;
  _240 = 384307168202282325 - _239;
  if (__n_7(D) > _240)
    goto <bb 101>;
  else
    goto <bb 102>;

  <bb 101>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 102>:
  # DEBUG D#92 => this_9(D)
  # DEBUG D#92 => this_9(D)
  # DEBUG this => D#92
  # DEBUG this => D#92
  # DEBUG D#92 => this_9(D)
  # DEBUG D#92 => this_9(D)
  # DEBUG this => D#92
  # DEBUG this => D#92
  # DEBUG __a => &D.67175
  # DEBUG __b => &__n
  _166 = MAX_EXPR <__n_7(D), _239>;
  __len_244 = _166 + _239;
  # DEBUG __len => __len_244
  # DEBUG D#92 => this_9(D)
  # DEBUG D#92 => this_9(D)
  # DEBUG this => D#92
  # DEBUG this => D#92
  # DEBUG D#568 => this_9(D)
  # DEBUG this => D#568
  # DEBUG D#567 => D#568
  # DEBUG D#566 => &D#567->D.37893
  # DEBUG this => D#566
  # DEBUG __a => D#565
  # DEBUG D#564 => D#565
  # DEBUG D#563 => D#564
  # DEBUG this => D#563
  _95 = __len_244 > 384307168202282325;
  _540 = _239 > __len_244;
  _204 = _95 | _540;
  if (_204 != 0)
    goto <bb 194>;
  else
    goto <bb 195>;

  <bb 103>:
  pretmp_423 = __len_244 * 48;

  <bb 104>:
  # __elems_before_317 = PHI <__elems_before_493(194), __elems_before_570(103)>
  # _573 = PHI <_497(194), _488(103)>
  # prephitmp_424 = PHI <18446744073709551600(194), pretmp_423(103)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#170 => &this_9(D)->D.37893._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#170
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45341
  # DEBUG this => &__position
  # DEBUG this => &D.45341
  # DEBUG __elems_before => __elems_before_317
  # DEBUG D#811 => &this_9(D)->D.37893
  # DEBUG D#576 => D#811
  # DEBUG __n => NULL
  # DEBUG this => D#576
  # DEBUG D#575 => D#576
  # DEBUG D#574 => &D#575->_M_impl
  # DEBUG D#573 => D#574
  # DEBUG __n => NULL
  # DEBUG __a => D#573
  # DEBUG D#572 => D#573
  # DEBUG D#570 => D#572
  # DEBUG D#571 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#570
  # DEBUG D.67163 => D#571
  # DEBUG D#569 => D#570
  # DEBUG D#563 => D#569
  # DEBUG this => D#563
  _232 = operator new (prephitmp_424);

  <bb 105>:
  # __new_finish_233 = PHI <0B(195), _232(104)>
  # __elems_before_574 = PHI <__elems_before_570(195), __elems_before_317(104)>
  # _572 = PHI <_488(195), _573(104)>
  # prephitmp_128 = PHI <0(195), prephitmp_424(104)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#795 => &this_9(D)->D.37893
  # DEBUG this => D#795
  _27 = (long unsigned int) _572;
  __first_28 = __new_finish_233 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.62002 => D#742
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __cur => __first_28
  # DEBUG __n => __n_7(D)

  <bb 106>:
  # __n_566 = PHI <__n_225(118), __n_7(D)(105)>
  # __first_568 = PHI <__first_226(118), __first_28(105)>
  # DEBUG __cur => __first_568
  # DEBUG __n => __n_566
  # DEBUG __r => __first_568
  # DEBUG __p => NULL
  # DEBUG __value => __x_29(D)
  # DEBUG D#24 => 48
  # DEBUG __p => NULL
  # DEBUG D.61265 => D#24
  if (__first_568 != 0B)
    goto <bb 108>;
  else
    goto <bb 107>;

  <bb 107>:
  goto <bb 117>;

  <bb 108>:
  # DEBUG this => NULL
  # DEBUG __x => __x_29(D)
  # DEBUG D#1157 => &MEM[(const struct map &)__x_29(D)]._M_t
  _224 = &__first_568->_M_t;
  # DEBUG this => _224
  # DEBUG __x => D#1157
  # DEBUG this => D#1157
  # DEBUG __a => NULL
  # DEBUG D#736 => &MEM[(const struct _Rb_tree &)D#1157]._M_impl._M_key_compare
  # DEBUG D#735 => &MEM[(struct _Rb_tree *)_224]._M_impl
  # DEBUG this => D#735
  # DEBUG __comp => D#736
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG D.54197 => NULL
  MEM[(struct _Rb_tree_impl *)__first_568]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)__first_568]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)__first_568]._M_node_count = 0;
  # DEBUG this => D#735
  _17 = &MEM[(struct _Rb_tree_impl *)__first_568]._M_header;
  MEM[(struct _Rb_tree_impl *)__first_568]._M_header._M_left = _17;
  MEM[(struct _Rb_tree_impl *)__first_568]._M_header._M_right = _17;
  _246 = MEM[(struct _Rb_tree_node_base * *)__x_29(D) + 16B];
  # DEBUG D#109 => D#1157
  # DEBUG this => D#109
  if (_246 != 0B)
    goto <bb 109>;
  else
    goto <bb 107>;

  <bb 109>:
  # DEBUG this => _224
  # DEBUG this => _224
  # DEBUG D#110 => D#1157
  # DEBUG this => D#110
  # DEBUG this => _224
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => _224
  __an._M_t = _224;
  __x_248 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node> (_224, _246, _17, &__an);

  <bb 110>:
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)__first_568 + 16] = __x_248;
  # DEBUG this => _224
  # DEBUG this => _224
  # DEBUG __x => __x_248

  <bb 111>:
  # __x_249 = PHI <__x_248(110), __x_250(112)>
  # DEBUG __x => __x_249
  __x_250 = __x_249->_M_left;
  if (__x_250 == 0B)
    goto <bb 113>;
  else
    goto <bb 112>;

  <bb 112>:
  goto <bb 111>;

  <bb 113>:
  # __x_311 = PHI <__x_249(111)>
  MEM[(struct _Rb_tree_node_base * &)__first_568 + 24] = __x_311;
  # DEBUG this => _224
  # DEBUG this => _224
  # DEBUG __x => __x_248

  <bb 114>:
  # __x_251 = PHI <__x_248(113), __x_252(115)>
  # DEBUG __x => __x_251
  __x_252 = __x_251->_M_right;
  if (__x_252 == 0B)
    goto <bb 116>;
  else
    goto <bb 115>;

  <bb 115>:
  goto <bb 114>;

  <bb 116>:
  # __x_41 = PHI <__x_251(114)>
  MEM[(struct _Rb_tree_node_base * &)__first_568 + 32] = __x_41;
  _253 = MEM[(const struct _Rb_tree &)__x_29(D)]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)__first_568]._M_impl._M_node_count = _253;

  <bb 117>:
  __n_225 = __n_566 + 18446744073709551615;
  # DEBUG __n => __n_225
  __first_226 = __first_568 + 48;
  # DEBUG __cur => __first_226
  # DEBUG __cur => __first_226
  # DEBUG __n => __n_225
  if (__n_225 == 0)
    goto <bb 119>;
  else
    goto <bb 118>;

  <bb 118>:
  goto <bb 106>;

  <bb 119>:
  # DEBUG __new_finish => 0B
  # DEBUG D#796 => &this_9(D)->D.37893
  # DEBUG this => D#796
  # DEBUG this => &__position
  __first_32 = this_9(D)->D.37893._M_impl._M_start;
  # DEBUG __first => __first_32
  # DEBUG __last => D#1166
  # DEBUG __result => NULL
  # DEBUG __alloc => D#741
  # DEBUG D#740 => D#741
  # DEBUG D#737 => D#740
  # DEBUG __first => __first_32
  # DEBUG __last => D#1166
  # DEBUG __result => NULL
  # DEBUG D.62023 => D#737
  # DEBUG __first => __first_32
  # DEBUG __last => D#1166
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => __first_32
  # DEBUG __last => D#1166
  # DEBUG __result => __new_finish_233
  # DEBUG __cur => __new_finish_233
  # DEBUG __first => __first_32
  if (__position_23 == __first_32)
    goto <bb 141>;
  else
    goto <bb 126>;

  # __first_481 = PHI <__first_568(109)>
<L28>:
  _227 = __builtin_eh_pointer (23);
  __cxa_begin_catch (_227);
  # DEBUG __first => __first_28
  # DEBUG __last => __first_481
  # DEBUG __first => __first_28
  # DEBUG __last => __first_481
  # DEBUG __first => __first_28
  if (__first_28 == __first_481)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  __cxa_rethrow ();

  <bb 122>:

  <bb 123>:
  # __first_477 = PHI <__first_28(122), __first_231(124)>
  # DEBUG __first => __first_477
  # DEBUG __r => __first_477
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _229 = &__first_477->_M_t;
  # DEBUG this => _229
  _230 = MEM[(struct _Rb_tree_node_base * *)__first_477 + 16B];
  # DEBUG D#91 => _229
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_229, _230);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_229]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__first_477] ={v} {CLOBBER};
  __first_231 = __first_477 + 48;
  # DEBUG __first => __first_231
  # DEBUG __first => __first_231
  if (__first_231 == __first_481)
    goto <bb 121>;
  else
    goto <bb 124>;

  <bb 124>:
  goto <bb 123>;

<L30>:
  __cxa_end_catch ();
  resx 22

  <bb 126>:

  <bb 127>:
  # __first_480 = PHI <__first_32(126), __first_258(140)>
  # __new_finish_158 = PHI <__new_finish_233(126), __new_finish_259(140)>
  # DEBUG __cur => __new_finish_158
  # DEBUG __first => __first_480
  # DEBUG __r => __new_finish_158
  # DEBUG __p => NULL
  # DEBUG __value => __first_480
  # DEBUG D#24 => 48
  # DEBUG __p => NULL
  # DEBUG D.61265 => D#24
  if (__new_finish_158 != 0B)
    goto <bb 129>;
  else
    goto <bb 128>;

  <bb 128>:
  goto <bb 138>;

  <bb 129>:
  # DEBUG this => NULL
  # DEBUG __x => __first_480
  # DEBUG D#1158 => &MEM[(const struct map &)__first_480]._M_t
  _257 = &__new_finish_158->_M_t;
  # DEBUG this => _257
  # DEBUG __x => D#1158
  # DEBUG this => D#1158
  # DEBUG __a => NULL
  # DEBUG D#736 => &MEM[(const struct _Rb_tree &)D#1158]._M_impl._M_key_compare
  # DEBUG D#735 => &MEM[(struct _Rb_tree *)_257]._M_impl
  # DEBUG this => D#735
  # DEBUG __comp => D#736
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG D.54197 => NULL
  MEM[(struct _Rb_tree_impl *)__new_finish_158]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)__new_finish_158]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)__new_finish_158]._M_node_count = 0;
  # DEBUG this => D#735
  _115 = &MEM[(struct _Rb_tree_impl *)__new_finish_158]._M_header;
  MEM[(struct _Rb_tree_impl *)__new_finish_158]._M_header._M_left = _115;
  MEM[(struct _Rb_tree_impl *)__new_finish_158]._M_header._M_right = _115;
  _265 = MEM[(struct _Rb_tree_node_base * *)__first_480 + 16B];
  # DEBUG D#109 => D#1158
  # DEBUG this => D#109
  if (_265 != 0B)
    goto <bb 130>;
  else
    goto <bb 128>;

  <bb 130>:
  # DEBUG this => _257
  # DEBUG this => _257
  # DEBUG D#110 => D#1158
  # DEBUG this => D#110
  # DEBUG this => _257
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => _257
  __an._M_t = _257;
  __x_267 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node> (_257, _265, _115, &__an);

  <bb 131>:
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)__new_finish_158 + 16] = __x_267;
  # DEBUG this => _257
  # DEBUG this => _257
  # DEBUG __x => __x_267

  <bb 132>:
  # __x_268 = PHI <__x_267(131), __x_269(133)>
  # DEBUG __x => __x_268
  __x_269 = __x_268->_M_left;
  if (__x_269 == 0B)
    goto <bb 134>;
  else
    goto <bb 133>;

  <bb 133>:
  goto <bb 132>;

  <bb 134>:
  # __x_79 = PHI <__x_268(132)>
  MEM[(struct _Rb_tree_node_base * &)__new_finish_158 + 24] = __x_79;
  # DEBUG this => _257
  # DEBUG this => _257
  # DEBUG __x => __x_267

  <bb 135>:
  # __x_270 = PHI <__x_267(134), __x_271(136)>
  # DEBUG __x => __x_270
  __x_271 = __x_270->_M_right;
  if (__x_271 == 0B)
    goto <bb 137>;
  else
    goto <bb 136>;

  <bb 136>:
  goto <bb 135>;

  <bb 137>:
  # __x_111 = PHI <__x_270(135)>
  MEM[(struct _Rb_tree_node_base * &)__new_finish_158 + 32] = __x_111;
  _272 = MEM[(const struct _Rb_tree &)__first_480]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)__new_finish_158]._M_impl._M_node_count = _272;

  <bb 138>:
  __first_258 = __first_480 + 48;
  # DEBUG __first => __first_258
  __new_finish_259 = __new_finish_158 + 48;
  # DEBUG __cur => __new_finish_259
  # DEBUG __cur => __new_finish_259
  # DEBUG __first => __first_258
  if (__position_23 == __first_258)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 139>:
  # __new_finish_109 = PHI <__new_finish_259(138)>
  goto <bb 141>;

  <bb 140>:
  goto <bb 127>;

  <bb 141>:
  # __new_finish_495 = PHI <__new_finish_109(139), __new_finish_233(119)>
  # DEBUG __new_finish => NULL
  _33 = __n_7(D) * 48;
  __new_finish_34 = __new_finish_495 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#797 => &this_9(D)->D.37893
  # DEBUG this => D#797
  _36 = this_9(D)->D.37893._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#1166
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#741
  # DEBUG D#740 => D#741
  # DEBUG D#737 => D#740
  # DEBUG __first => D#1166
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.62042 => D#737
  # DEBUG __first => D#1166
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  # DEBUG __first => D#1166
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __cur => __new_finish_34
  # DEBUG __first => D#1166
  if (__position_23 == _36)
    goto <bb 163>;
  else
    goto <bb 148>;

  # __new_finish_37 = PHI <__new_finish_158(130)>
<L31>:
  _260 = __builtin_eh_pointer (26);
  __cxa_begin_catch (_260);
  # DEBUG __first => __new_finish_233
  # DEBUG __last => __new_finish_37
  # DEBUG __first => __new_finish_233
  # DEBUG __last => __new_finish_37
  # DEBUG __first => __new_finish_233
  if (__new_finish_37 == __new_finish_233)
    goto <bb 143>;
  else
    goto <bb 144>;

  <bb 143>:
  __cxa_rethrow ();

  <bb 144>:

  <bb 145>:
  # __new_finish_528 = PHI <__new_finish_233(144), __new_finish_264(146)>
  # DEBUG __first => __new_finish_528
  # DEBUG __r => __new_finish_528
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _262 = &__new_finish_528->_M_t;
  # DEBUG this => _262
  _263 = MEM[(struct _Rb_tree_node_base * *)__new_finish_528 + 16B];
  # DEBUG D#91 => _262
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_262, _263);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_262]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__new_finish_528] ={v} {CLOBBER};
  __new_finish_264 = __new_finish_528 + 48;
  # DEBUG __first => __new_finish_264
  # DEBUG __first => __new_finish_264
  if (__new_finish_37 == __new_finish_264)
    goto <bb 143>;
  else
    goto <bb 146>;

  <bb 146>:
  goto <bb 145>;

<L33>:
  __cxa_end_catch ();
  resx 25

  <bb 148>:

  <bb 149>:
  # __position_529 = PHI <__position_23(148), __position_277(161)>
  # __new_finish_484 = PHI <__new_finish_34(148), __new_finish_278(161)>
  # DEBUG __cur => __new_finish_484
  # DEBUG __first => __position_529
  # DEBUG __r => __new_finish_484
  # DEBUG __p => NULL
  # DEBUG __value => __position_529
  # DEBUG D#24 => 48
  # DEBUG __p => NULL
  # DEBUG D.61265 => D#24
  if (__new_finish_484 != 0B)
    goto <bb 151>;
  else
    goto <bb 150>;

  <bb 150>:
  goto <bb 160>;

  <bb 151>:
  # DEBUG this => NULL
  # DEBUG __x => __position_529
  # DEBUG D#1159 => &MEM[(const struct map &)__position_529]._M_t
  _276 = &__new_finish_484->_M_t;
  # DEBUG this => _276
  # DEBUG __x => D#1159
  # DEBUG this => D#1159
  # DEBUG __a => NULL
  # DEBUG D#736 => &MEM[(const struct _Rb_tree &)D#1159]._M_impl._M_key_compare
  # DEBUG D#735 => &MEM[(struct _Rb_tree *)_276]._M_impl
  # DEBUG this => D#735
  # DEBUG __comp => D#736
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG __a => NULL
  # DEBUG this => D#735
  # DEBUG D.54197 => NULL
  MEM[(struct _Rb_tree_impl *)__new_finish_484]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)__new_finish_484]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)__new_finish_484]._M_node_count = 0;
  # DEBUG this => D#735
  _116 = &MEM[(struct _Rb_tree_impl *)__new_finish_484]._M_header;
  MEM[(struct _Rb_tree_impl *)__new_finish_484]._M_header._M_left = _116;
  MEM[(struct _Rb_tree_impl *)__new_finish_484]._M_header._M_right = _116;
  _284 = MEM[(struct _Rb_tree_node_base * *)__position_529 + 16B];
  # DEBUG D#109 => D#1159
  # DEBUG this => D#109
  if (_284 != 0B)
    goto <bb 152>;
  else
    goto <bb 150>;

  <bb 152>:
  # DEBUG this => _276
  # DEBUG this => _276
  # DEBUG D#110 => D#1159
  # DEBUG this => D#110
  # DEBUG this => _276
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => _276
  __an._M_t = _276;
  __x_286 = std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_Alloc_node> (_276, _284, _116, &__an);

  <bb 153>:
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)__new_finish_484 + 16] = __x_286;
  # DEBUG this => _276
  # DEBUG this => _276
  # DEBUG __x => __x_286

  <bb 154>:
  # __x_287 = PHI <__x_286(153), __x_288(155)>
  # DEBUG __x => __x_287
  __x_288 = __x_287->_M_left;
  if (__x_288 == 0B)
    goto <bb 156>;
  else
    goto <bb 155>;

  <bb 155>:
  goto <bb 154>;

  <bb 156>:
  # __x_242 = PHI <__x_287(154)>
  MEM[(struct _Rb_tree_node_base * &)__new_finish_484 + 24] = __x_242;
  # DEBUG this => _276
  # DEBUG this => _276
  # DEBUG __x => __x_286

  <bb 157>:
  # __x_289 = PHI <__x_286(156), __x_290(158)>
  # DEBUG __x => __x_289
  __x_290 = __x_289->_M_right;
  if (__x_290 == 0B)
    goto <bb 159>;
  else
    goto <bb 158>;

  <bb 158>:
  goto <bb 157>;

  <bb 159>:
  # __x_103 = PHI <__x_289(157)>
  MEM[(struct _Rb_tree_node_base * &)__new_finish_484 + 32] = __x_103;
  _291 = MEM[(const struct _Rb_tree &)__position_529]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)__new_finish_484]._M_impl._M_node_count = _291;

  <bb 160>:
  __position_277 = __position_529 + 48;
  # DEBUG __first => __position_277
  __new_finish_278 = __new_finish_484 + 48;
  # DEBUG __cur => __new_finish_278
  # DEBUG __cur => __new_finish_278
  # DEBUG __first => __position_277
  if (_36 == __position_277)
    goto <bb 162>;
  else
    goto <bb 161>;

  <bb 161>:
  goto <bb 149>;

  <bb 162>:
  # __new_finish_303 = PHI <__new_finish_278(160)>
  pretmp_362 = this_9(D)->D.37893._M_impl._M_finish;

  <bb 163>:
  # __new_finish_534 = PHI <__new_finish_303(162), __new_finish_34(141)>
  # prephitmp_383 = PHI <pretmp_362(162), _36(141)>
  # DEBUG __new_finish => NULL
  # DEBUG D#798 => &this_9(D)->D.37893
  # DEBUG this => D#798
  # DEBUG D#1165 => this_9(D)->D.37893._M_impl._M_finish
  __first_39 = this_9(D)->D.37893._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => D#1165
  # DEBUG __first => __first_39
  if (__first_39 == prephitmp_383)
    goto <bb 174>;
  else
    goto <bb 170>;

  # __new_finish_112 = PHI <__new_finish_484(152)>
<L34>:
  _279 = __builtin_eh_pointer (29);
  __cxa_begin_catch (_279);
  # DEBUG __first => __new_finish_34
  # DEBUG __last => __new_finish_112
  # DEBUG __first => __new_finish_34
  # DEBUG __last => __new_finish_112
  # DEBUG __first => __new_finish_34
  if (__new_finish_34 == __new_finish_112)
    goto <bb 165>;
  else
    goto <bb 166>;

  <bb 165>:
  __cxa_rethrow ();

  <bb 166>:

  <bb 167>:
  # __new_finish_533 = PHI <__new_finish_34(166), __new_finish_283(168)>
  # DEBUG __first => __new_finish_533
  # DEBUG __r => __new_finish_533
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _281 = &__new_finish_533->_M_t;
  # DEBUG this => _281
  _282 = MEM[(struct _Rb_tree_node_base * *)__new_finish_533 + 16B];
  # DEBUG D#91 => _281
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_281, _282);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_281]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__new_finish_533] ={v} {CLOBBER};
  __new_finish_283 = __new_finish_533 + 48;
  # DEBUG __first => __new_finish_283
  # DEBUG __first => __new_finish_283
  if (__new_finish_283 == __new_finish_112)
    goto <bb 165>;
  else
    goto <bb 168>;

  <bb 168>:
  goto <bb 167>;

<L36>:
  __cxa_end_catch ();
  resx 28

  <bb 170>:

  <bb 171>:
  # __first_555 = PHI <__first_39(170), __first_98(172)>
  # DEBUG __first => __first_555
  # DEBUG __r => __first_555
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _96 = &__first_555->_M_t;
  # DEBUG this => _96
  _97 = MEM[(struct _Rb_tree_node_base * *)__first_555 + 16B];
  # DEBUG D#91 => _96
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_96, _97);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_96]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__first_555] ={v} {CLOBBER};
  __first_98 = __first_555 + 48;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (__first_98 == prephitmp_383)
    goto <bb 173>;
  else
    goto <bb 172>;

  <bb 172>:
  goto <bb 171>;

  <bb 173>:
  pretmp_385 = this_9(D)->D.37893._M_impl._M_start;

  <bb 174>:
  # prephitmp_386 = PHI <pretmp_385(173), __first_39(163)>
  # DEBUG D#809 => this_9(D)->D.37893._M_impl._M_end_of_storage
  # DEBUG D#808 => (long int) D#809
  # DEBUG D#1164 => this_9(D)->D.37893._M_impl._M_start
  # DEBUG D#807 => (long int) D#1164
  # DEBUG D#806 => D#808 - D#807
  # DEBUG D#805 => D#806 /[ex] 48
  # DEBUG D#804 => &this_9(D)->D.37893
  # DEBUG D#319 => D#804
  # DEBUG D#320 => (long unsigned int) D#805
  # DEBUG __p => D#1164
  # DEBUG this => D#319
  # DEBUG __n => D#320
  # DEBUG D#318 => D#320
  # DEBUG D#317 => D#319
  if (prephitmp_386 != 0B)
    goto <bb 175>;
  else
    goto <bb 176>;

  <bb 175>:
  # DEBUG D#316 => &D#317->_M_impl
  # DEBUG D#314 => D#316
  # DEBUG D#315 => D#318
  # DEBUG __p => D#1164
  # DEBUG __a => D#314
  # DEBUG __n => D#315
  # DEBUG D#313 => D#315
  # DEBUG D#312 => D#314
  # DEBUG D#310 => D#312
  # DEBUG D#311 => D#313
  # DEBUG __p => D#1164
  # DEBUG this => D#310
  # DEBUG D.62065 => D#311
  operator delete (prephitmp_386);

  <bb 176>:
  this_9(D)->D.37893._M_impl._M_start = __new_finish_233;
  this_9(D)->D.37893._M_impl._M_finish = __new_finish_534;
  _45 = __new_finish_233 + prephitmp_128;
  this_9(D)->D.37893._M_impl._M_end_of_storage = _45;

  <bb 177>:
  return;

<L39>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy._M_t
  _99 = MEM[(struct _Rb_tree_node_base * *)&__x_copy + 16B];
  # DEBUG D#91 => &__x_copy._M_t
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (&__x_copy._M_t, _99);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)&__x_copy]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  resx 2

<L13>:
  # DEBUG __new_finish => __new_finish_34
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_34 == 0B)
    goto <bb 183>;
  else
    goto <bb 181>;

  <bb 181>:
  # DEBUG __first => __new_finish_233
  if (__new_finish_34 == __new_finish_233)
    goto <bb 182>;
  else
    goto <bb 188>;

  <bb 182>:
  # DEBUG D#810 => &this_9(D)->D.37893
  # DEBUG D#319 => D#810
  # DEBUG __p => NULL
  # DEBUG this => D#319
  # DEBUG __n => D#320
  # DEBUG D#318 => D#320
  # DEBUG D#317 => D#319
  if (__new_finish_233 != 0B)
    goto <bb 191>;
  else
    goto <bb 192>;

  <bb 183>:

  <bb 184>:
  # DEBUG __new_finish => 0B
  # DEBUG D#802 => &this_9(D)->D.37893
  # DEBUG this => D#802
  _49 = __n_7(D) + __elems_before_574;
  _50 = _49 * 48;
  _51 = __new_finish_233 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51
  # DEBUG __first => __first_28
  if (__first_28 == _51)
    goto <bb 182>;
  else
    goto <bb 185>;

  <bb 185>:

  <bb 186>:
  # __first_554 = PHI <__first_28(185), __first_102(187)>
  # DEBUG __first => __first_554
  # DEBUG __r => __first_554
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _100 = &__first_554->_M_t;
  # DEBUG this => _100
  _101 = MEM[(struct _Rb_tree_node_base * *)__first_554 + 16B];
  # DEBUG D#91 => _100
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_100, _101);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_100]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__first_554] ={v} {CLOBBER};
  __first_102 = __first_554 + 48;
  # DEBUG __first => __first_102
  # DEBUG __first => __first_102
  if (_51 == __first_102)
    goto <bb 182>;
  else
    goto <bb 187>;

  <bb 187>:
  goto <bb 186>;

  <bb 188>:

  <bb 189>:
  # __new_finish_551 = PHI <__new_finish_233(188), __new_finish_106(190)>
  # DEBUG __first => __new_finish_551
  # DEBUG __r => __new_finish_551
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _104 = &__new_finish_551->_M_t;
  # DEBUG this => _104
  _105 = MEM[(struct _Rb_tree_node_base * *)__new_finish_551 + 16B];
  # DEBUG D#91 => _104
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_104, _105);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_104]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__new_finish_551] ={v} {CLOBBER};
  __new_finish_106 = __new_finish_551 + 48;
  # DEBUG __first => __new_finish_106
  # DEBUG __first => __new_finish_106
  if (__new_finish_34 == __new_finish_106)
    goto <bb 182>;
  else
    goto <bb 190>;

  <bb 190>:
  goto <bb 189>;

  <bb 191>:
  # DEBUG D#316 => &D#317->_M_impl
  # DEBUG D#314 => D#316
  # DEBUG D#315 => D#318
  # DEBUG __p => NULL
  # DEBUG __a => D#314
  # DEBUG __n => D#315
  # DEBUG D#313 => D#315
  # DEBUG D#312 => D#314
  # DEBUG D#310 => D#312
  # DEBUG D#311 => D#313
  # DEBUG __p => NULL
  # DEBUG this => D#310
  # DEBUG D.62128 => D#311
  operator delete (__new_finish_233);

  <bb 192>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 194>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#170 => &this_9(D)->D.37893._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#170
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45341
  # DEBUG this => &__position
  _496 = (long int) __position_23;
  # DEBUG this => &D.45341
  _497 = _496 - _236;
  _492 = _497 /[ex] 48;
  __elems_before_493 = (const size_type) _492;
  # DEBUG __elems_before => __elems_before_493
  # DEBUG D#811 => &this_9(D)->D.37893
  # DEBUG D#576 => D#811
  # DEBUG __n => NULL
  # DEBUG this => D#576
  # DEBUG D#575 => D#576
  goto <bb 104>;

  <bb 195>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#170 => &this_9(D)->D.37893._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#170
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45341
  # DEBUG this => &__position
  _487 = (long int) __position_23;
  # DEBUG this => &D.45341
  _488 = _487 - _236;
  _489 = _488 /[ex] 48;
  __elems_before_570 = (const size_type) _489;
  # DEBUG __elems_before => __elems_before_570
  # DEBUG D#811 => &this_9(D)->D.37893
  # DEBUG D#576 => D#811
  # DEBUG __n => NULL
  # DEBUG this => D#576
  # DEBUG D#575 => D#576
  if (__len_244 != 0)
    goto <bb 103>;
  else
    goto <bb 105>;

  <bb 196>:
  _25 = (long unsigned int) _31;
  _299 = __old_finish_545 + _25;
  this_9(D)->D.37893._M_impl._M_finish = _299;
  # DEBUG this => &__position
  # DEBUG __first => D#1166
  # DEBUG __last => D#1163
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1166
  goto <bb 99>;

<L37>:
  # DEBUG __new_finish => 0B
  _190 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_190);
  goto <bb 184>;

<L38>:
  # DEBUG __new_finish => __new_finish_233
  _296 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_296);
  if (__new_finish_233 == 0B)
    goto <bb 183>;
  else
    goto <bb 182>;

}



;; Function SparseAllocator::SparseAllocator(Module*, const string&, int, int) (_ZN15SparseAllocatorC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii, funcdef_no=1771, decl_uid=37968, cgraph_uid=441, symbol_order=442)

Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
SparseAllocator::SparseAllocator(Module*, const string&, int, int) (struct SparseAllocator * const this, struct Module * parent, const struct string & name, int inputs, int outputs)
{
  struct _Rb_tree_node * __x;
  struct iterator __position;
  struct map * __pos;
  struct _Rb_tree_node * __x;
  struct iterator __position;
  struct map * __pos;
  struct value_type D.42330;
  struct value_type D.42329;
  struct Allocator * _3;
  struct _Rb_tree_node_base * _11;
  struct _Rb_tree_node_base * _12;
  int _15;
  long unsigned int _16;
  struct vector * _17;
  int _20;
  long unsigned int _21;
  struct vector * _22;
  struct _Rep_type * _25;
  struct _Rep_type * _31;
  struct _Rb_tree_node_base * _34;
  struct _Rb_tree_node_base * _35;
  struct _Rb_tree_node_base * _36;
  struct _Rb_tree_node_base * _37;
  struct vector * pretmp_84;
  struct vector * prephitmp_85;
  struct _Rb_tree_node_base * pretmp_86;
  struct _Rb_tree_node_base * prephitmp_87;
  struct _Rb_tree_node_base * pretmp_88;
  struct _Rb_tree_node_base * prephitmp_91;
  struct _Rb_tree_node_base * pretmp_92;
  struct _Rb_tree_node_base * prephitmp_93;
  struct map * const _124;
  struct map * const _125;
  long int _126;
  long int _127;
  long int _128;
  long int _129;
  size_type _130;
  long unsigned int _131;
  long unsigned int _132;
  struct _Rep_type * _135;
  struct _Rb_tree_node_base * _138;

  <bb 2>:
  _3 = &this_2(D)->D.37974;
  Allocator::Allocator (_3, parent_5(D), name_6(D), inputs_7(D), outputs_8(D));
  this_2(D)->D.37974.D.35470._vptr.Module = &MEM[(void *)&_ZTV15SparseAllocator + 16B];
  # DEBUG D#817 => &this_2(D)->_in_occ
  # DEBUG this => D#817
  # DEBUG D#305 => &D#817->_M_t
  # DEBUG this => D#305
  # DEBUG D#304 => &MEM[(struct _Rb_tree *)D#305]._M_impl
  # DEBUG this => D#304
  # DEBUG this => D#304
  # DEBUG this => D#304
  MEM[(struct _Rb_tree_impl *)this_2(D) + 160B]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 160B]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 160B]._M_node_count = 0;
  # DEBUG this => D#304
  _11 = &MEM[(struct _Rb_tree_impl *)this_2(D) + 160B]._M_header;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 160B]._M_header._M_left = _11;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 160B]._M_header._M_right = _11;
  # DEBUG D#816 => &this_2(D)->_out_occ
  # DEBUG this => D#816
  # DEBUG D#305 => &D#816->_M_t
  # DEBUG this => D#305
  # DEBUG D#304 => &MEM[(struct _Rb_tree *)D#305]._M_impl
  # DEBUG this => D#304
  # DEBUG this => D#304
  # DEBUG this => D#304
  MEM[(struct _Rb_tree_impl *)this_2(D) + 208B]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 208B]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 208B]._M_node_count = 0;
  # DEBUG this => D#304
  _12 = &MEM[(struct _Rb_tree_impl *)this_2(D) + 208B]._M_header;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 208B]._M_header._M_left = _12;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 208B]._M_header._M_right = _12;
  # DEBUG D#815 => &this_2(D)->_in_req
  # DEBUG this => D#815
  # DEBUG D#309 => &D#815->D.37893
  # DEBUG this => D#309
  # DEBUG D#308 => &D#309->_M_impl
  # DEBUG this => D#308
  # DEBUG this => D#308
  # DEBUG this => D#308
  MEM[(struct _Vector_impl *)this_2(D) + 256B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 256B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 256B]._M_end_of_storage = 0B;
  # DEBUG D#814 => &this_2(D)->_out_req
  # DEBUG this => D#814
  # DEBUG D#309 => &D#814->D.37893
  # DEBUG this => D#309
  # DEBUG D#308 => &D#309->_M_impl
  # DEBUG this => D#308
  # DEBUG this => D#308
  # DEBUG this => D#308
  MEM[(struct _Vector_impl *)this_2(D) + 280B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 280B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 280B]._M_end_of_storage = 0B;
  # DEBUG this => &D.42329
  # DEBUG D#328 => &D.42329._M_t
  # DEBUG this => D#328
  # DEBUG D#327 => &MEM[(struct _Rb_tree *)D#328]._M_impl
  # DEBUG this => D#327
  # DEBUG this => D#327
  # DEBUG this => D#327
  MEM[(struct _Rb_tree_impl *)&D.42329]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&D.42329]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&D.42329]._M_node_count = 0;
  # DEBUG this => D#327
  MEM[(struct _Rb_tree_impl *)&D.42329]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&D.42329]._M_header;
  MEM[(struct _Rb_tree_impl *)&D.42329]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&D.42329]._M_header;
  _15 = this_2(D)->D.37974._inputs;
  _16 = (long unsigned int) _15;
  _17 = &this_2(D)->_in_req;
  # DEBUG this => _17
  # DEBUG __new_size => _16
  # DEBUG __x => &D.42329
  # DEBUG D#92 => _17
  # DEBUG D#92 => _17
  # DEBUG this => D#92
  # DEBUG this => D#92
  if (_16 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#92 => _17
  # DEBUG D#92 => _17
  # DEBUG this => D#92
  # DEBUG this => D#92
  # DEBUG this => _17
  # DEBUG D#111 => &_17->D.37893._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#111
  # DEBUG this => _17
  MEM[(struct __normal_iterator *)&__position] = 0B;
  # DEBUG __n => _16
  # DEBUG __x => &D.42329
  std::vector<std::map<int, Allocator::sRequest> >::_M_fill_insert (_17, __position, _16, &D.42329);

  <bb 4>:
  pretmp_86 = MEM[(struct _Rb_tree_node_base * *)&D.42329 + 16B];

  <bb 5>:
  # prephitmp_87 = PHI <0B(2), pretmp_86(4)>
  # DEBUG this => &D.42329
  # DEBUG this => &D.42329._M_t
  # DEBUG D#91 => &D.42329._M_t
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (&D.42329._M_t, prephitmp_87);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)&D.42329]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  D.42329 ={v} {CLOBBER};
  # DEBUG this => &D.42330
  # DEBUG D#328 => &D.42330._M_t
  # DEBUG this => D#328
  # DEBUG D#327 => &MEM[(struct _Rb_tree *)D#328]._M_impl
  # DEBUG this => D#327
  # DEBUG this => D#327
  # DEBUG this => D#327
  MEM[(struct _Rb_tree_impl *)&D.42330]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&D.42330]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&D.42330]._M_node_count = 0;
  # DEBUG this => D#327
  MEM[(struct _Rb_tree_impl *)&D.42330]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&D.42330]._M_header;
  MEM[(struct _Rb_tree_impl *)&D.42330]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&D.42330]._M_header;
  _20 = this_2(D)->D.37974._outputs;
  _21 = (long unsigned int) _20;
  # DEBUG D#1183 => &this_2(D)->_out_req
  # DEBUG this => D#1183
  # DEBUG __new_size => _21
  # DEBUG __x => &D.42330
  _124 = MEM[(struct map * *)this_2(D) + 280B];
  # DEBUG D#92 => D#1183
  _125 = MEM[(struct map * *)this_2(D) + 288B];
  # DEBUG D#92 => D#1183
  # DEBUG this => D#92
  # DEBUG this => D#92
  _126 = (long int) _125;
  _127 = (long int) _124;
  _128 = _126 - _127;
  _129 = _128 /[ex] 48;
  _130 = (size_type) _129;
  if (_21 > _130)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  _22 = &this_2(D)->_out_req;
  # DEBUG D#92 => D#1183
  # DEBUG D#92 => D#1183
  # DEBUG this => D#92
  # DEBUG this => D#92
  _131 = _21 - _130;
  # DEBUG this => D#1183
  # DEBUG D#111 => &D#1183->D.37893._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#111
  # DEBUG this => D#1183
  MEM[(struct __normal_iterator *)&__position] = _125;
  # DEBUG __n => _131
  # DEBUG __x => &D.42330
  std::vector<std::map<int, Allocator::sRequest> >::_M_fill_insert (_22, __position, _131, &D.42330);

  <bb 7>:
  pretmp_88 = MEM[(struct _Rb_tree_node_base * *)&D.42330 + 16B];
  goto <bb 19>;

  <bb 8>:
  # DEBUG D#92 => D#1183
  # DEBUG D#92 => D#1183
  # DEBUG this => D#92
  # DEBUG this => D#92
  if (_21 < _130)
    goto <bb 9>;
  else
    goto <bb 19>;

  <bb 9>:
  _132 = _21 * 48;
  __pos_133 = _124 + _132;
  # DEBUG D#553 => D#1183
  # DEBUG __pos => __pos_133
  # DEBUG D#552 => D#553
  # DEBUG this => D#552
  # DEBUG D#551 => &D#552->D.37893
  # DEBUG this => D#551
  # DEBUG __first => __pos_133
  # DEBUG __last => _125
  # DEBUG __first => __pos_133
  if (_125 == __pos_133)
    goto <bb 18>;
  else
    goto <bb 10>;

  <bb 10>:

  <bb 11>:
  # __pos_118 = PHI <__pos_133(10), __pos_137(13)>
  # DEBUG __first => __pos_118
  # DEBUG __r => __pos_118
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _135 = &__pos_118->_M_t;
  # DEBUG this => _135
  __x_136 = MEM[(struct _Rb_tree_node_base * *)__pos_118 + 16B];
  # DEBUG D#91 => _135
  # DEBUG this => D#91
  # DEBUG this => _135
  # DEBUG __x => __x_136
  # DEBUG __x => __x_136
  if (__x_136 == 0B)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)_135]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  MEM[(struct  &)__pos_118] ={v} {CLOBBER};
  __pos_137 = __pos_118 + 48;
  # DEBUG __first => __pos_137
  # DEBUG __first => __pos_137
  if (_125 == __pos_137)
    goto <bb 17>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 11>;

  <bb 14>:

  <bb 15>:
  # __x_18 = PHI <__x_136(14), __x_139(16)>
  # DEBUG __x => __x_18
  _138 = MEM[(struct _Rb_tree_node_base * *)__x_18 + 24B];
  # DEBUG D#107 => __x_18
  # DEBUG __x => D#107
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_135, _138);
  __x_139 = MEM[(struct _Rb_tree_node_base * *)__x_18 + 16B];
  # DEBUG D#108 => __x_18
  # DEBUG __x => D#108
  # DEBUG __y => NULL
  # DEBUG D#548 => _135
  # DEBUG __p => __x_18
  # DEBUG this => D#548
  # DEBUG D#547 => D#548
  # DEBUG D#546 => D#548
  # DEBUG D#545 => D#548
  # DEBUG D#543 => D#545
  # DEBUG D#544 => __x_18
  # DEBUG this => D#543
  # DEBUG __p => D#544
  # DEBUG D#542 => D#543
  # DEBUG D#541 => D#544
  # DEBUG D#540 => D#544
  # DEBUG this => D#540
  # DEBUG D#539 => &D#541->_M_value_field
  # DEBUG __r => D#539
  # DEBUG D#538 => D#542
  # DEBUG this => D#538
  # DEBUG D#537 => D#538
  # DEBUG this => D#537
  # DEBUG this => NULL
  # DEBUG D.57746 => NULL
  # DEBUG this => NULL
  # DEBUG D#330 => D#539
  # DEBUG this => D#329
  # DEBUG __p => D#330
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#546
  # DEBUG __p => __x_18
  # DEBUG this => D#547
  # DEBUG D#407 => 1
  # DEBUG __p => __x_18
  # DEBUG __a => D#406
  # DEBUG __n => D#407
  # DEBUG D#405 => D#407
  # DEBUG D#404 => D#406
  # DEBUG D#402 => D#404
  # DEBUG D#403 => D#405
  # DEBUG __p => __x_18
  # DEBUG this => D#402
  # DEBUG D.67535 => D#403
  operator delete (__x_18);
  # DEBUG __x => __x_139
  # DEBUG __x => __x_139
  if (__x_139 == 0B)
    goto <bb 12>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

  <bb 17>:
  pretmp_92 = MEM[(struct _Rb_tree_node_base * *)&D.42330 + 16B];

  <bb 18>:
  # prephitmp_93 = PHI <pretmp_92(17), 0B(9)>
  MEM[(struct map * *)this_2(D) + 288B] = __pos_133;

  <bb 19>:
  # prephitmp_91 = PHI <0B(8), pretmp_88(7), prephitmp_93(18)>
  # DEBUG this => &D.42330
  # DEBUG this => &D.42330._M_t
  # DEBUG D#91 => &D.42330._M_t
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (&D.42330._M_t, prephitmp_91);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)&D.42330]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  D.42330 ={v} {CLOBBER};
  return;

<L0>:
  # DEBUG this => &D.42329
  # DEBUG this => &D.42329._M_t
  _34 = MEM[(struct _Rb_tree_node_base * *)&D.42329 + 16B];
  # DEBUG D#91 => &D.42329._M_t
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (&D.42329._M_t, _34);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)&D.42329]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  D.42329 ={v} {CLOBBER};
  resx 6

<L1>:
  # DEBUG this => &D.42330
  # DEBUG this => &D.42330._M_t
  _35 = MEM[(struct _Rb_tree_node_base * *)&D.42330 + 16B];
  # DEBUG D#91 => &D.42330._M_t
  # DEBUG this => D#91
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (&D.42330._M_t, _35);
  # DEBUG D#549 => &MEM[(struct _Rb_tree *)&D.42330]._M_impl
  # DEBUG this => D#549
  # DEBUG this => D#549
  # DEBUG this => D#549
  D.42330 ={v} {CLOBBER};
  resx 8

<L8>:
  goto <bb 24> (<L2>);

<L7>:
  pretmp_84 = &this_2(D)->_out_req;

  # prephitmp_85 = PHI <_22(22), pretmp_84(23)>
<L2>:
  std::vector<std::map<int, Allocator::sRequest> >::~vector (prephitmp_85);
  resx 5

<L3>:
  std::vector<std::map<int, Allocator::sRequest> >::~vector (_17);
  resx 4

<L4>:
  # DEBUG D#813 => &this_2(D)->_out_occ
  # DEBUG this => D#813
  _25 = &MEM[(struct set *)this_2(D) + 208B]._M_t;
  # DEBUG this => _25
  _36 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 224B];
  # DEBUG D#90 => _25
  # DEBUG this => D#90
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_25, _36);
  # DEBUG D#400 => &MEM[(struct _Rb_tree *)_25]._M_impl
  # DEBUG this => D#400
  # DEBUG this => D#400
  # DEBUG this => D#400
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  resx 3

<L5>:
  # DEBUG D#812 => &this_2(D)->_in_occ
  # DEBUG this => D#812
  _31 = &MEM[(struct set *)this_2(D) + 160B]._M_t;
  # DEBUG this => _31
  _37 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 176B];
  # DEBUG D#90 => _31
  # DEBUG this => D#90
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_31, _37);
  # DEBUG D#400 => &MEM[(struct _Rb_tree *)_31]._M_impl
  # DEBUG this => D#400
  # DEBUG this => D#400
  # DEBUG this => D#400
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  resx 2

<L6>:
  Allocator::~Allocator (_3);
  resx 1

}


