
;; Function virtual void SeparableAllocator::Clear() (_ZN18SeparableAllocator5ClearEv, funcdef_no=1758, decl_uid=37680, cgraph_uid=428, symbol_order=429)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void SeparableAllocator::Clear() (struct SeparableAllocator * const this)
{
  int o;
  int i;
  long unsigned int _10;
  struct Arbiter * _11;
  int _12;
  struct Arbiter * & _13;
  int (*__vtbl_ptr_type) () * _14;
  int (*__vtbl_ptr_type) () _15;
  long unsigned int _19;
  long unsigned int _20;
  struct Arbiter * _21;
  int _22;
  int (*__vtbl_ptr_type) () * _24;
  int (*__vtbl_ptr_type) () _25;
  struct SparseAllocator * _28;
  struct Arbiter * * _30;
  struct Arbiter * * _31;
  long unsigned int _32;
  struct Arbiter * & _33;
  int _36;
  int _37;
  const int prephitmp_57;
  const int prephitmp_67;
  const int pretmp_70;
  const int prephitmp_71;
  const int pretmp_72;
  const int prephitmp_73;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0
  _37 = this_8(D)->D.37705.D.36911._inputs;
  if (_37 <= 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG o => 0
  _36 = this_8(D)->D.37705.D.36911._outputs;
  if (_36 <= 0)
    goto <bb 4>;
  else
    goto <bb 10>;

  <bb 4>:
  _28 = &this_8(D)->D.37705;
  SparseAllocator::Clear (_28);
  return;

  <bb 5>:

  <bb 6>:
  # i_40 = PHI <0(5), i_17(9)>
  # prephitmp_57 = PHI <_37(5), prephitmp_71(9)>
  # DEBUG i => i_40
  _10 = (long unsigned int) i_40;
  # DEBUG D#13 => &this_8(D)->_input_arb
  _30 = MEM[(struct Arbiter * * *)this_8(D) + 304B];
  # DEBUG D#12 => D#13
  # DEBUG __n => _10
  # DEBUG this => D#12
  _20 = _10 * 8;
  _13 = _30 + _20;
  _11 = *_13;
  _12 = _11->_num_reqs;
  if (_12 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#14 => &this_8(D)->_input_arb
  # DEBUG D#12 => D#14
  # DEBUG __n => _10
  # DEBUG this => D#12
  _14 = _11->D.39582._vptr.Module;
  _15 = MEM[(int (*__vtbl_ptr_type) () *)_14 + 56B];
  OBJ_TYPE_REF(_15;(struct Arbiter)_11->7) (_11);
  pretmp_70 = this_8(D)->D.37705.D.36911._inputs;

  <bb 8>:
  # prephitmp_71 = PHI <prephitmp_57(6), pretmp_70(7)>
  i_17 = i_40 + 1;
  # DEBUG i => i_17
  # DEBUG i => i_17
  if (i_17 >= prephitmp_71)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 6>;

  <bb 10>:

  <bb 11>:
  # o_41 = PHI <0(10), o_27(14)>
  # prephitmp_67 = PHI <_36(10), prephitmp_73(14)>
  # DEBUG o => o_41
  _19 = (long unsigned int) o_41;
  # DEBUG D#15 => &this_8(D)->_output_arb
  _31 = MEM[(struct Arbiter * * *)this_8(D) + 328B];
  # DEBUG D#12 => D#15
  # DEBUG __n => _19
  # DEBUG this => D#12
  _32 = _19 * 8;
  _33 = _31 + _32;
  _21 = *_33;
  _22 = _21->_num_reqs;
  if (_22 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#16 => &this_8(D)->_output_arb
  # DEBUG D#12 => D#16
  # DEBUG __n => _19
  # DEBUG this => D#12
  _24 = _21->D.39582._vptr.Module;
  _25 = MEM[(int (*__vtbl_ptr_type) () *)_24 + 56B];
  OBJ_TYPE_REF(_25;(struct Arbiter)_21->7) (_21);
  pretmp_72 = this_8(D)->D.37705.D.36911._outputs;

  <bb 13>:
  # prephitmp_73 = PHI <prephitmp_67(11), pretmp_72(12)>
  o_27 = o_41 + 1;
  # DEBUG o => o_27
  # DEBUG o => o_27
  if (o_27 >= prephitmp_73)
    goto <bb 4>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 11>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE, funcdef_no=1832, decl_uid=35625, cgraph_uid=502, symbol_order=503)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#21 => __x_68
  # DEBUG __x => D#21
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#22 => __x_68
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_68
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_68
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_68
  # DEBUG this => D#165
  # DEBUG D.45377 => D#166
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#21 => __x_72
  # DEBUG __x => D#21
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#22 => __x_72
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_72
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_72
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_72
  # DEBUG this => D#165
  # DEBUG D.47259 => D#166
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#21 => __x_71
  # DEBUG __x => D#21
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#22 => __x_71
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_71
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_71
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_71
  # DEBUG this => D#165
  # DEBUG D.47272 => D#166
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#21 => __x_77
  # DEBUG __x => D#21
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#22 => __x_77
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_77
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_77
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_77
  # DEBUG this => D#165
  # DEBUG D.47285 => D#166
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#21 => __x_80
  # DEBUG __x => D#21
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#22 => __x_80
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_80
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_80
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_80
  # DEBUG this => D#165
  # DEBUG D.47298 => D#166
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#21 => __x_83
  # DEBUG __x => D#21
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#22 => __x_83
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_83
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_83
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_83
  # DEBUG this => D#165
  # DEBUG D.47311 => D#166
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#21 => __x_86
  # DEBUG __x => D#21
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#22 => __x_86
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_86
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_86
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_86
  # DEBUG this => D#165
  # DEBUG D.47324 => D#166
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#21 => __x_89
  # DEBUG __x => D#21
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#22 => __x_89
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_89
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_89
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_89
  # DEBUG this => D#165
  # DEBUG D.47337 => D#166
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#21 => __x_92
  # DEBUG __x => D#21
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#22 => __x_92
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_92
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_92
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_92
  # DEBUG this => D#165
  # DEBUG D.47350 => D#166
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Arbiter*; _Alloc = std::allocator<Arbiter*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Arbiter**, std::vector<Arbiter*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Arbiter**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Arbiter*] (_ZNSt6vectorIP7ArbiterSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=1928, decl_uid=37589, cgraph_uid=598, symbol_order=599)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Arbiter*; _Alloc = std::allocator<Arbiter*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Arbiter**, std::vector<Arbiter*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Arbiter**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Arbiter*] (struct vector * const this, struct iterator __position, size_type __n, struct Arbiter * const & __x)
{
  const long unsigned int D.47392;
  const size_type __len;
  size_type D.47391;
  size_type __n;
  struct Arbiter * * D.47382;
  const ptrdiff_t _Num;
  struct Arbiter * * D.47373;
  struct Arbiter * * const __position;
  struct Arbiter * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct Arbiter * * __first;
  long unsigned int __n;
  struct Arbiter * * __first;
  const ptrdiff_t _Num;
  struct Arbiter * * __first;
  struct Arbiter * * __new_finish;
  const size_type __elems_after;
  struct Arbiter * __x_copy;
  struct Arbiter * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Arbiter * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct Arbiter * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct Arbiter * * _41;
  struct Arbiter * * _43;
  long int _47;
  struct Arbiter * * _48;
  long int __first.7_49;
  struct Arbiter * * _53;
  struct Arbiter * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct Arbiter * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct Arbiter * * _108;
  struct Arbiter * * _112;
  struct Arbiter * * iftmp.12_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct Arbiter * * prephitmp_146;
  struct Arbiter * * pretmp_147;
  struct Arbiter * * prephitmp_148;
  struct Arbiter * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct Arbiter * * pretmp_166;
  struct Arbiter * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct Arbiter * * pretmp_173;
  struct Arbiter * * prephitmp_174;

  <bb 2>:
  # DEBUG D#314 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#314
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.37666._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.37666._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#23 => &this_4(D)->D.37666._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#23
  # DEBUG __lhs => &D.41677
  # DEBUG __rhs => &__position
  # DEBUG this => &D.41677
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#264 => &this_4(D)->D.37666
  # DEBUG this => D#264
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#256
  # DEBUG D#255 => D#256
  # DEBUG D#254 => D#255
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.46408 => D#254
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.7_49 = (long int) _41;
  _47 = _8 - __first.7_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.37666._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.37666._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#314
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#314
  # DEBUG __it => D#314
  # DEBUG __first => D#314
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#314
  # DEBUG __it => D#314
  # DEBUG __first => D#314
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#314
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.7_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#174 => &__x_copy
  # DEBUG __first => D#314
  # DEBUG __last => _48
  # DEBUG D#173 => D#174
  # DEBUG __value => D#173
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#314
  # DEBUG __it => D#314
  # DEBUG D#164 => D#173
  # DEBUG __first => D#314
  # DEBUG __last => _48
  # DEBUG __value => D#164
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#314
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#265 => &this_4(D)->D.37666
  # DEBUG this => D#265
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#242 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#241 => D#242
  # DEBUG __x => D#241
  # DEBUG D.46493 => D#243
  # DEBUG D#240 => D#241
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#239 => D#240
  # DEBUG __x => D#239
  # DEBUG __assignable => 1
  # DEBUG D#238 => D#239
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#237 => D#238
  # DEBUG __x => D#237
  # DEBUG D#236 => D#237
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#235 => D#236
  # DEBUG __value => D#235
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#234 => D#235
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#234
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.37666._M_impl._M_finish = __first_125;
  # DEBUG D#266 => &this_4(D)->D.37666
  # DEBUG this => D#266
  # DEBUG this => &__position
  # DEBUG __first => D#314
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#256
  # DEBUG D#255 => D#256
  # DEBUG D#254 => D#255
  # DEBUG __first => D#314
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.46455 => D#254
  # DEBUG __first => D#314
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#314
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#314
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#314
  # DEBUG __it => D#314
  # DEBUG __first => D#314
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#314
  # DEBUG __it => D#314
  # DEBUG __first => D#314
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#314
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.37666._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.37666._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#174 => &__x_copy
  # DEBUG __first => D#314
  # DEBUG __last => __first_7
  # DEBUG D#173 => D#174
  # DEBUG __value => D#173
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#314
  # DEBUG __it => D#314
  # DEBUG D#164 => D#173
  # DEBUG __first => D#314
  # DEBUG __last => __first_7
  # DEBUG __value => D#164
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#314
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#210 => this_4(D)
  # DEBUG this => D#210
  # DEBUG D#209 => D#210
  # DEBUG D#208 => &D#209->D.37666
  # DEBUG this => D#208
  # DEBUG __a => D#207
  # DEBUG D#206 => D#207
  # DEBUG D#205 => D#206
  # DEBUG this => D#205
  _17 = MEM[(struct Arbiter * * *)this_4(D)];
  # DEBUG D#18 => this_4(D)
  # DEBUG D#18 => this_4(D)
  # DEBUG this => D#18
  # DEBUG this => D#18
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#18 => this_4(D)
  # DEBUG D#18 => this_4(D)
  # DEBUG this => D#18
  # DEBUG this => D#18
  # DEBUG D#18 => this_4(D)
  # DEBUG D#18 => this_4(D)
  # DEBUG this => D#18
  # DEBUG this => D#18
  # DEBUG __a => &D.47392
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#18 => this_4(D)
  # DEBUG D#18 => this_4(D)
  # DEBUG this => D#18
  # DEBUG this => D#18
  # DEBUG D#210 => this_4(D)
  # DEBUG this => D#210
  # DEBUG D#209 => D#210
  # DEBUG D#208 => &D#209->D.37666
  # DEBUG this => D#208
  # DEBUG __a => D#207
  # DEBUG D#206 => D#207
  # DEBUG D#205 => D#206
  # DEBUG this => D#205
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#56 => &this_4(D)->D.37666._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#56
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.41710
  # DEBUG this => &__position
  # DEBUG this => &D.41710
  # DEBUG D#277 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#277
  # DEBUG D#276 => &this_4(D)->D.37666
  # DEBUG D#218 => D#276
  # DEBUG __n => NULL
  # DEBUG this => D#218
  # DEBUG D#217 => D#218
  # DEBUG D#216 => &D#217->_M_impl
  # DEBUG D#215 => D#216
  # DEBUG __n => NULL
  # DEBUG __a => D#215
  # DEBUG D#214 => D#215
  # DEBUG D#212 => D#214
  # DEBUG D#213 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#212
  # DEBUG D.47380 => D#213
  # DEBUG D#211 => D#212
  # DEBUG D#205 => D#211
  # DEBUG this => D#205
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.37666._M_impl._M_start;
  pretmp_147 = this_4(D)->D.37666._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.12_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#260 => &this_4(D)->D.37666
  # DEBUG this => D#260
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.12_113 + _19;
  _56 = MEM[(struct Arbiter * const &)__x_21(D)];
  # DEBUG D#242 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#241 => D#242
  # DEBUG __x => D#241
  # DEBUG D.46610 => D#243
  # DEBUG D#240 => D#241
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#239 => D#240
  # DEBUG __x => D#239
  # DEBUG __assignable => 1
  # DEBUG D#238 => D#239
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#237 => D#238
  # DEBUG __x => D#237
  # DEBUG D#236 => D#237
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#235 => D#236
  # DEBUG __value => D#235
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#234 => D#235
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#234
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#261 => &this_4(D)->D.37666
  # DEBUG this => D#261
  # DEBUG this => &__position
  # DEBUG D#313 => this_4(D)->D.37666._M_impl._M_start
  # DEBUG __first => D#313
  # DEBUG __last => D#314
  # DEBUG __result => NULL
  # DEBUG __alloc => D#258
  # DEBUG D#257 => D#258
  # DEBUG D#254 => D#257
  # DEBUG __first => D#313
  # DEBUG __last => D#314
  # DEBUG __result => NULL
  # DEBUG D.46572 => D#254
  # DEBUG __first => D#313
  # DEBUG __last => D#314
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#313
  # DEBUG __last => D#314
  # DEBUG __result => NULL
  # DEBUG __first => D#313
  # DEBUG __last => D#314
  # DEBUG __result => NULL
  # DEBUG __it => D#314
  # DEBUG __it => D#314
  # DEBUG __it => D#313
  # DEBUG __it => D#313
  # DEBUG __first => D#313
  # DEBUG __last => D#314
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#314
  # DEBUG __it => D#314
  # DEBUG __it => D#313
  # DEBUG __it => D#313
  # DEBUG __first => D#313
  # DEBUG __last => D#314
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#313
  # DEBUG __last => D#314
  # DEBUG __result => NULL
  # DEBUG D#312 => (long int) D#313
  # DEBUG D#311 => _158 - D#312
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.12_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#310 => (long unsigned int) D#311
  # DEBUG __new_finish => iftmp.12_113 + D#310
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.12_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#262 => &this_4(D)->D.37666
  # DEBUG this => D#262
  # DEBUG D#309 => this_4(D)->D.37666._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#314
  # DEBUG __last => D#309
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#258
  # DEBUG D#257 => D#258
  # DEBUG D#254 => D#257
  # DEBUG __first => D#314
  # DEBUG __last => D#309
  # DEBUG __result => __new_finish_26
  # DEBUG D.46533 => D#254
  # DEBUG __first => D#314
  # DEBUG __last => D#309
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#314
  # DEBUG __last => D#309
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#314
  # DEBUG __last => D#309
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#309
  # DEBUG __it => D#309
  # DEBUG __it => D#314
  # DEBUG __it => D#314
  # DEBUG __first => D#314
  # DEBUG __last => D#309
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#309
  # DEBUG __it => D#309
  # DEBUG __it => D#314
  # DEBUG __it => D#314
  # DEBUG __first => D#314
  # DEBUG __last => D#309
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#314
  # DEBUG __last => D#309
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#263 => &this_4(D)->D.37666
  # DEBUG this => D#263
  # DEBUG D#275 => this_4(D)->D.37666._M_impl._M_finish
  # DEBUG D#274 => this_4(D)->D.37666._M_impl._M_start
  # DEBUG __first => D#274
  # DEBUG __last => D#275
  # DEBUG D.46526 => NULL
  # DEBUG D#50 => D#274
  # DEBUG D#51 => D#275
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.44387 => D#46
  # DEBUG D.44386 => D#47
  # DEBUG D#273 => this_4(D)->D.37666._M_impl._M_end_of_storage
  # DEBUG D#272 => (long int) D#273
  # DEBUG D#271 => (long int) D#313
  # DEBUG D#270 => D#272 - D#271
  # DEBUG D#269 => D#270 /[ex] 8
  # DEBUG D#268 => (long unsigned int) D#269
  # DEBUG D#267 => &this_4(D)->D.37666
  # DEBUG this => D#267
  # DEBUG __p => D#313
  # DEBUG __n => D#268
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#152 => &D#267->_M_impl
  # DEBUG D#150 => D#152
  # DEBUG D#151 => D#268
  # DEBUG __p => D#313
  # DEBUG __a => D#150
  # DEBUG __n => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG __p => D#313
  # DEBUG this => D#146
  # DEBUG D.46522 => D#147
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.37666._M_impl._M_start = iftmp.12_113;
  this_4(D)->D.37666._M_impl._M_finish = _70;
  this_4(D)->D.37666._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#56 => &this_4(D)->D.37666._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#56
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.41710
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.41710
  _143 = _144 - _116;
  # DEBUG D#277 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#277
  # DEBUG D#276 => &this_4(D)->D.37666
  # DEBUG D#218 => D#276
  # DEBUG __n => NULL
  # DEBUG this => D#218
  # DEBUG D#217 => D#218
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#56 => &this_4(D)->D.37666._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#56
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.41710
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.41710
  _150 = _151 - _116;
  # DEBUG D#277 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#277
  # DEBUG D#276 => &this_4(D)->D.37666
  # DEBUG D#218 => D#276
  # DEBUG __n => NULL
  # DEBUG this => D#218
  # DEBUG D#217 => D#218
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*] (_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E, funcdef_no=2072, decl_uid=40853, cgraph_uid=742, symbol_order=743)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#232 => __x_68
  # DEBUG __x => D#232
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#233 => __x_68
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_68
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_68
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_68
  # DEBUG this => D#246
  # DEBUG D.46743 => D#247
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#232 => __x_72
  # DEBUG __x => D#232
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#233 => __x_72
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_72
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_72
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_72
  # DEBUG this => D#246
  # DEBUG D.47513 => D#247
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#232 => __x_71
  # DEBUG __x => D#232
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#233 => __x_71
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_71
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_71
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_71
  # DEBUG this => D#246
  # DEBUG D.47526 => D#247
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#232 => __x_77
  # DEBUG __x => D#232
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#233 => __x_77
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_77
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_77
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_77
  # DEBUG this => D#246
  # DEBUG D.47539 => D#247
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#232 => __x_80
  # DEBUG __x => D#232
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#233 => __x_80
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_80
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_80
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_80
  # DEBUG this => D#246
  # DEBUG D.47552 => D#247
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#232 => __x_83
  # DEBUG __x => D#232
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#233 => __x_83
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_83
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_83
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_83
  # DEBUG this => D#246
  # DEBUG D.47565 => D#247
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#232 => __x_86
  # DEBUG __x => D#232
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#233 => __x_86
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_86
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_86
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_86
  # DEBUG this => D#246
  # DEBUG D.47578 => D#247
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#232 => __x_89
  # DEBUG __x => D#232
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#233 => __x_89
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_89
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_89
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_89
  # DEBUG this => D#246
  # DEBUG D.47591 => D#247
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#232 => __x_92
  # DEBUG __x => D#232
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#233 => __x_92
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_92
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_92
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_92
  # DEBUG this => D#246
  # DEBUG D.47604 => D#247
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function SparseAllocator::~SparseAllocator() (_ZN15SparseAllocatorD2Ev, funcdef_no=1749, decl_uid=36896, cgraph_uid=418, symbol_order=419)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
SparseAllocator::~SparseAllocator() (struct SparseAllocator * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct map * __first;
  struct map * __first;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct map * _7;
  struct map * _8;
  struct _Rep_type * _9;
  struct _Rep_type * _13;
  int * _27;
  int * _28;
  struct _Rb_tree_node_base * _30;
  struct _Rb_tree_node_base * _33;
  struct _Rep_type * _38;
  struct _Rep_type * _44;
  struct _Rb_tree_node_base * _48;
  struct _Rb_tree_node_base * _52;
  struct Module * * _55;
  char * const _56;
  const char * _57;
  char * const _58;
  const char * _59;
  struct map * prephitmp_71;
  struct map * pretmp_84;
  struct map * prephitmp_85;
  struct map * pretmp_87;

  <bb 2>:
  this_2(D)->D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV15SparseAllocator + 16B];
  # DEBUG D#352 => &this_2(D)->_out_req
  # DEBUG this => D#352
  # DEBUG D#291 => &D#352->D.36830
  # DEBUG this => D#291
  _7 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_finish;
  __first_42 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_42
  # DEBUG __last => _7
  # DEBUG __first => __first_42
  if (_7 == __first_42)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_147 = PHI <__first_42(3), __first_46(6)>
  # DEBUG __first => __first_147
  # DEBUG __r => __first_147
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _44 = &__first_147->_M_t;
  # DEBUG this => _44
  __x_45 = MEM[(struct _Rb_tree_node_base * *)__first_147 + 16B];
  # DEBUG D#204 => _44
  # DEBUG this => D#204
  # DEBUG this => _44
  # DEBUG __x => __x_45
  # DEBUG __x => __x_45
  if (__x_45 == 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  # DEBUG D#289 => &MEM[(struct _Rb_tree *)_44]._M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)__first_147] ={v} {CLOBBER};
  __first_46 = __first_147 + 48;
  # DEBUG __first => __first_46
  # DEBUG __first => __first_46
  if (_7 == __first_46)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  <bb 7>:

  <bb 8>:
  # __x_143 = PHI <__x_45(7), __x_49(9)>
  # DEBUG __x => __x_143
  _48 = MEM[(struct _Rb_tree_node_base * *)__x_143 + 24B];
  # DEBUG D#232 => __x_143
  # DEBUG __x => D#232
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_44, _48);
  __x_49 = MEM[(struct _Rb_tree_node_base * *)__x_143 + 16B];
  # DEBUG D#233 => __x_143
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => _44
  # DEBUG __p => __x_143
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_143
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_143
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_143
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_143
  # DEBUG this => D#246
  # DEBUG D.47749 => D#247
  operator delete (__x_143);
  # DEBUG __x => __x_49
  # DEBUG __x => __x_49
  if (__x_49 == 0B)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  pretmp_84 = MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start;

  <bb 11>:
  # prephitmp_85 = PHI <pretmp_84(10), __first_42(2)>
  # DEBUG D#292 => &D#352->D.36830
  # DEBUG this => D#292
  # DEBUG D#143 => D#292->_M_impl._M_end_of_storage
  # DEBUG D#142 => (long int) D#143
  # DEBUG D#354 => MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start
  # DEBUG D#141 => (long int) D#354
  # DEBUG D#140 => D#142 - D#141
  # DEBUG D#139 => D#140 /[ex] 48
  # DEBUG D#136 => D#292
  # DEBUG D#137 => (long unsigned int) D#139
  # DEBUG __p => D#354
  # DEBUG this => D#136
  # DEBUG __n => D#137
  # DEBUG D#135 => D#137
  # DEBUG D#134 => D#136
  if (prephitmp_85 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#133 => &D#134->_M_impl
  # DEBUG D#131 => D#133
  # DEBUG D#132 => D#135
  # DEBUG __p => D#354
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => D#354
  # DEBUG this => D#127
  # DEBUG D.47733 => D#128
  operator delete (prephitmp_85);

  <bb 13>:
  # DEBUG D#138 => &D#292->_M_impl
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG this => D#138
  MEM[(struct  &)this_2(D) + 280] ={v} {CLOBBER};
  # DEBUG D#351 => &this_2(D)->_in_req
  # DEBUG this => D#351
  # DEBUG D#291 => &D#351->D.36830
  # DEBUG this => D#291
  _8 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_finish;
  __first_36 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_36
  # DEBUG __last => _8
  # DEBUG __first => __first_36
  if (_8 == __first_36)
    goto <bb 22>;
  else
    goto <bb 14>;

  <bb 14>:

  <bb 15>:
  # __first_131 = PHI <__first_36(14), __first_40(17)>
  # DEBUG __first => __first_131
  # DEBUG __r => __first_131
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _38 = &__first_131->_M_t;
  # DEBUG this => _38
  __x_39 = MEM[(struct _Rb_tree_node_base * *)__first_131 + 16B];
  # DEBUG D#204 => _38
  # DEBUG this => D#204
  # DEBUG this => _38
  # DEBUG __x => __x_39
  # DEBUG __x => __x_39
  if (__x_39 == 0B)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 16>:
  # DEBUG D#289 => &MEM[(struct _Rb_tree *)_38]._M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)__first_131] ={v} {CLOBBER};
  __first_40 = __first_131 + 48;
  # DEBUG __first => __first_40
  # DEBUG __first => __first_40
  if (_8 == __first_40)
    goto <bb 21>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 15>;

  <bb 18>:

  <bb 19>:
  # __x_150 = PHI <__x_39(18), __x_53(20)>
  # DEBUG __x => __x_150
  _52 = MEM[(struct _Rb_tree_node_base * *)__x_150 + 24B];
  # DEBUG D#232 => __x_150
  # DEBUG __x => D#232
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_38, _52);
  __x_53 = MEM[(struct _Rb_tree_node_base * *)__x_150 + 16B];
  # DEBUG D#233 => __x_150
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => _38
  # DEBUG __p => __x_150
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_150
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_150
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_150
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_150
  # DEBUG this => D#246
  # DEBUG D.47762 => D#247
  operator delete (__x_150);
  # DEBUG __x => __x_53
  # DEBUG __x => __x_53
  if (__x_53 == 0B)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 19>;

  <bb 21>:
  pretmp_87 = MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start;

  <bb 22>:
  # prephitmp_71 = PHI <pretmp_87(21), __first_36(13)>
  # DEBUG D#292 => &D#351->D.36830
  # DEBUG this => D#292
  # DEBUG D#143 => D#292->_M_impl._M_end_of_storage
  # DEBUG D#142 => (long int) D#143
  # DEBUG D#353 => MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start
  # DEBUG D#141 => (long int) D#353
  # DEBUG D#140 => D#142 - D#141
  # DEBUG D#139 => D#140 /[ex] 48
  # DEBUG D#136 => D#292
  # DEBUG D#137 => (long unsigned int) D#139
  # DEBUG __p => D#353
  # DEBUG this => D#136
  # DEBUG __n => D#137
  # DEBUG D#135 => D#137
  # DEBUG D#134 => D#136
  if (prephitmp_71 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#133 => &D#134->_M_impl
  # DEBUG D#131 => D#133
  # DEBUG D#132 => D#135
  # DEBUG __p => D#353
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => D#353
  # DEBUG this => D#127
  # DEBUG D.47704 => D#128
  operator delete (prephitmp_71);

  <bb 24>:
  # DEBUG D#138 => &D#292->_M_impl
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG this => D#138
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  # DEBUG D#294 => &this_2(D)->_out_occ
  # DEBUG this => D#294
  _9 = &MEM[(struct set *)this_2(D) + 208B]._M_t;
  # DEBUG this => _9
  __x_15 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 224B];
  # DEBUG D#17 => _9
  # DEBUG this => D#17
  # DEBUG this => _9
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#203 => &MEM[(struct _Rb_tree *)_9]._M_impl
  # DEBUG this => D#203
  # DEBUG this => D#203
  # DEBUG this => D#203
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  # DEBUG D#293 => &this_2(D)->_in_occ
  # DEBUG this => D#293
  _13 = &MEM[(struct set *)this_2(D) + 160B]._M_t;
  # DEBUG this => _13
  __x_14 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 176B];
  # DEBUG D#17 => _13
  # DEBUG this => D#17
  # DEBUG this => _13
  # DEBUG __x => __x_14
  # DEBUG __x => __x_14
  if (__x_14 == 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 26>:

  <bb 27>:
  # __x_138 = PHI <__x_15(26), __x_34(28)>
  # DEBUG __x => __x_138
  _33 = MEM[(struct _Rb_tree_node_base * *)__x_138 + 24B];
  # DEBUG D#21 => __x_138
  # DEBUG __x => D#21
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_9, _33);
  __x_34 = MEM[(struct _Rb_tree_node_base * *)__x_138 + 16B];
  # DEBUG D#22 => __x_138
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => _9
  # DEBUG __p => __x_138
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_138
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_138
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_138
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_138
  # DEBUG this => D#165
  # DEBUG D.47678 => D#166
  operator delete (__x_138);
  # DEBUG __x => __x_34
  # DEBUG __x => __x_34
  if (__x_34 == 0B)
    goto <bb 25>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 27>;

  <bb 29>:
  # DEBUG D#203 => &MEM[(struct _Rb_tree *)_13]._M_impl
  # DEBUG this => D#203
  # DEBUG this => D#203
  # DEBUG this => D#203
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#350 => &this_2(D)->D.36911
  # DEBUG this => D#350
  MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
  # DEBUG D#124 => &D#350->_outmatch
  # DEBUG this => D#124
  # DEBUG D#119 => &D#124->D.34311
  # DEBUG this => D#119
  # DEBUG D#122 => D#124->D.34311._M_impl._M_finish
  # DEBUG D#121 => D#124->D.34311._M_impl._M_start
  # DEBUG D#43 => D#121
  # DEBUG D#44 => D#122
  # DEBUG __first => D#43
  # DEBUG __last => D#44
  # DEBUG D.44770 => D#45
  # DEBUG D#42 => D#44
  # DEBUG D#41 => D#43
  # DEBUG D#39 => D#41
  # DEBUG D#40 => D#42
  # DEBUG __first => D#39
  # DEBUG __last => D#40
  # DEBUG D#38 => D#40
  # DEBUG D#37 => D#39
  # DEBUG D#35 => D#37
  # DEBUG D#36 => D#38
  # DEBUG D.44343 => D#35
  # DEBUG D.44342 => D#36
  # DEBUG D#120 => &D#124->D.34311
  # DEBUG this => D#120
  # DEBUG D#118 => D#120->_M_impl._M_end_of_storage
  # DEBUG D#117 => (long int) D#118
  _27 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
  # DEBUG D#116 => (long int) _27
  # DEBUG D#115 => D#117 - D#116
  # DEBUG D#114 => D#115 /[ex] 4
  # DEBUG D#111 => D#120
  # DEBUG D#112 => (long unsigned int) D#114
  # DEBUG __p => _27
  # DEBUG this => D#111
  # DEBUG __n => D#112
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  if (_27 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 30>:

  <bb 31>:
  # __x_137 = PHI <__x_14(30), __x_31(32)>
  # DEBUG __x => __x_137
  _30 = MEM[(struct _Rb_tree_node_base * *)__x_137 + 24B];
  # DEBUG D#21 => __x_137
  # DEBUG __x => D#21
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_13, _30);
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_137 + 16B];
  # DEBUG D#22 => __x_137
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => _13
  # DEBUG __p => __x_137
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_137
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_137
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_137
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_137
  # DEBUG this => D#165
  # DEBUG D.47665 => D#166
  operator delete (__x_137);
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 29>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 31>;

  <bb 33>:
  # DEBUG D#108 => &D#109->_M_impl
  # DEBUG D#106 => D#108
  # DEBUG D#107 => D#110
  # DEBUG __p => _27
  # DEBUG __a => D#106
  # DEBUG __n => D#107
  # DEBUG D#105 => D#107
  # DEBUG D#104 => D#106
  # DEBUG D#102 => D#104
  # DEBUG D#103 => D#105
  # DEBUG __p => _27
  # DEBUG this => D#102
  # DEBUG D.47634 => D#103
  operator delete (_27);

  <bb 34>:
  # DEBUG D#113 => &D#120->_M_impl
  # DEBUG this => D#113
  # DEBUG this => D#113
  # DEBUG this => D#113
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#123 => &D#350->_inmatch
  # DEBUG this => D#123
  # DEBUG D#119 => &D#123->D.34311
  # DEBUG this => D#119
  # DEBUG D#122 => D#123->D.34311._M_impl._M_finish
  # DEBUG D#121 => D#123->D.34311._M_impl._M_start
  # DEBUG D#43 => D#121
  # DEBUG D#44 => D#122
  # DEBUG __first => D#43
  # DEBUG __last => D#44
  # DEBUG D.44770 => D#45
  # DEBUG D#42 => D#44
  # DEBUG D#41 => D#43
  # DEBUG D#39 => D#41
  # DEBUG D#40 => D#42
  # DEBUG __first => D#39
  # DEBUG __last => D#40
  # DEBUG D#38 => D#40
  # DEBUG D#37 => D#39
  # DEBUG D#35 => D#37
  # DEBUG D#36 => D#38
  # DEBUG D.44343 => D#35
  # DEBUG D.44342 => D#36
  # DEBUG D#120 => &D#123->D.34311
  # DEBUG this => D#120
  # DEBUG D#118 => D#120->_M_impl._M_end_of_storage
  # DEBUG D#117 => (long int) D#118
  _28 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
  # DEBUG D#116 => (long int) _28
  # DEBUG D#115 => D#117 - D#116
  # DEBUG D#114 => D#115 /[ex] 4
  # DEBUG D#111 => D#120
  # DEBUG D#112 => (long unsigned int) D#114
  # DEBUG __p => _28
  # DEBUG this => D#111
  # DEBUG __n => D#112
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  if (_28 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG D#108 => &D#109->_M_impl
  # DEBUG D#106 => D#108
  # DEBUG D#107 => D#110
  # DEBUG __p => _28
  # DEBUG __a => D#106
  # DEBUG __n => D#107
  # DEBUG D#105 => D#107
  # DEBUG D#104 => D#106
  # DEBUG D#102 => D#104
  # DEBUG D#103 => D#105
  # DEBUG __p => _28
  # DEBUG this => D#102
  # DEBUG D.47649 => D#103
  operator delete (_28);

  <bb 36>:
  # DEBUG D#113 => &D#120->_M_impl
  # DEBUG this => D#113
  # DEBUG this => D#113
  # DEBUG this => D#113
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#349 => &MEM[(struct Allocator *)this_2(D)].D.34407
  # DEBUG this => D#349
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#101 => &D#349->_children
  # DEBUG this => D#101
  # DEBUG D#95 => &D#101->D.29436
  # DEBUG this => D#95
  # DEBUG D#98 => D#101->D.29436._M_impl._M_finish
  # DEBUG D#97 => D#101->D.29436._M_impl._M_start
  # DEBUG D#32 => D#97
  # DEBUG D#33 => D#98
  # DEBUG __first => D#32
  # DEBUG __last => D#33
  # DEBUG D.44643 => D#34
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG D#28 => D#30
  # DEBUG D#29 => D#31
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG D.44305 => D#24
  # DEBUG D.44304 => D#25
  # DEBUG D#96 => &D#101->D.29436
  # DEBUG this => D#96
  # DEBUG D#94 => D#96->_M_impl._M_end_of_storage
  # DEBUG D#93 => (long int) D#94
  _55 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#92 => (long int) _55
  # DEBUG D#91 => D#93 - D#92
  # DEBUG D#90 => D#91 /[ex] 8
  # DEBUG D#87 => D#96
  # DEBUG D#88 => (long unsigned int) D#90
  # DEBUG __p => _55
  # DEBUG this => D#87
  # DEBUG __n => D#88
  # DEBUG D#86 => D#88
  # DEBUG D#85 => D#87
  if (_55 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # DEBUG D#84 => &D#85->_M_impl
  # DEBUG D#82 => D#84
  # DEBUG D#83 => D#86
  # DEBUG __p => _55
  # DEBUG __a => D#82
  # DEBUG __n => D#83
  # DEBUG D#81 => D#83
  # DEBUG D#80 => D#82
  # DEBUG D#78 => D#80
  # DEBUG D#79 => D#81
  # DEBUG __p => _55
  # DEBUG this => D#78
  # DEBUG D.47775 => D#79
  operator delete (_55);

  <bb 38>:
  # DEBUG D#89 => &D#96->_M_impl
  # DEBUG this => D#89
  # DEBUG this => D#89
  # DEBUG this => D#89
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#100 => &D#349->_fullname
  # DEBUG this => D#100
  # DEBUG this => D#100
  # DEBUG this => D#100
  _56 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#5 => D#100
  # DEBUG this => D#5
  # DEBUG this => D#100
  _57 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.13836._M_local_buf;
  if (_56 != _57)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#73 => MEM[(struct basic_string *)D#100].D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => D#100
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => D#100
  # DEBUG this => D#5
  # DEBUG this => D#100
  # DEBUG D#70 => &MEM[(struct basic_string *)D#100]._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _56
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _56
  # DEBUG this => D#64
  # DEBUG D.47788 => D#65
  operator delete (_56);

  <bb 40>:
  # DEBUG D#74 => &MEM[(struct basic_string *)D#100]._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#99 => &D#349->_name
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG this => D#99
  _58 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#5 => D#99
  # DEBUG this => D#5
  # DEBUG this => D#99
  _59 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.13836._M_local_buf;
  if (_58 != _59)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#73 => MEM[(struct basic_string *)D#99].D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => D#99
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => D#99
  # DEBUG this => D#5
  # DEBUG this => D#99
  # DEBUG D#70 => &MEM[(struct basic_string *)D#99]._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _58
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _58
  # DEBUG this => D#64
  # DEBUG D.47803 => D#65
  operator delete (_58);

  <bb 42>:
  # DEBUG D#74 => &MEM[(struct basic_string *)D#99]._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function SeparableAllocator::SeparableAllocator(Module*, const string&, int, int, const string&) (_ZN18SeparableAllocatorC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS9_, funcdef_no=1752, decl_uid=37689, cgraph_uid=422, symbol_order=423)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
SeparableAllocator::SeparableAllocator(Module*, const string&, int, int, const string&) (struct SeparableAllocator * const this, struct Module * parent, const struct string & name, int inputs, int outputs, const struct string & arb_type)
{
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.48470;
  struct __string_type D.48469;
  size_type __dnew;
  __size_type __len;
  size_type __dnew;
  struct iterator __position;
  struct Arbiter * __x;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.48109;
  struct __string_type D.48108;
  size_type __dnew;
  __size_type __len;
  size_type __dnew;
  struct iterator __position;
  struct Arbiter * __x;
  struct ostringstream arb_name;
  int i;
  struct ostringstream arb_name;
  int i;
  struct __string_type D.39738;
  const struct __string_type D.39736;
  struct __string_type D.39732;
  const struct __string_type D.39730;
  struct SparseAllocator * _9;
  long unsigned int _17;
  long unsigned int _18;
  struct vector * _19;
  long unsigned int _21;
  char * const _22;
  char * const _25;
  long unsigned int _27;
  struct Arbiter * _32;
  char * const _35;
  char * const _38;
  char * const _42;
  long unsigned int _44;
  struct vector * _45;
  char * const _47;
  char * const _51;
  long unsigned int _53;
  struct Arbiter * & _54;
  struct Arbiter * _58;
  char * const _60;
  char * const _62;
  struct Arbiter * * _65;
  char * const _69;
  struct Arbiter * * _71;
  struct Arbiter * * _74;
  struct Arbiter * * _75;
  struct Arbiter * & _76;
  char * const _77;
  char * const pretmp_110;
  char * const prephitmp_111;
  size_type pretmp_112;
  size_type prephitmp_113;
  char * const prephitmp_121;
  size_type pretmp_122;
  size_type prephitmp_123;
  char * const pretmp_124;
  char * const pretmp_136;
  char * const prephitmp_137;
  const void * pretmp_138;
  const void * prephitmp_139;
  const void * pretmp_142;
  const void * prephitmp_143;
  size_type pretmp_145;
  bool _147;
  bool _149;
  bool _156;
  bool _165;
  long int _175;
  sizetype iftmp.32_176;
  struct basic_ios * _177;
  long int _185;
  sizetype iftmp.41_186;
  struct basic_ios * _187;
  const size_type _188;
  char * const _189;
  const void * prephitmp_190;
  const char * _192;
  char * const _197;
  char * const _199;
  char * _205;
  long unsigned int __dnew.48_206;
  const char_type _208;
  char * _211;
  char_type * const _213;
  char_type * const _214;
  char_type * const _215;
  char * const _216;
  char_type * const _217;
  char * const _218;
  char * const _220;
  char * const _221;
  char * const _222;
  long int __last.50_223;
  long int __first.51_224;
  difference_type _225;
  long unsigned int __dnew.47_226;
  char * _227;
  long unsigned int __dnew.48_228;
  const char_type _230;
  char * _233;
  long int __last.50_235;
  long int __first.51_236;
  difference_type _237;
  long unsigned int __dnew.47_238;
  char * _239;
  long unsigned int __dnew.48_240;
  const char_type _242;
  char * _245;
  int (*__vtbl_ptr_type) () * iftmp.40_248;
  long int _249;
  sizetype iftmp.41_250;
  struct basic_ios * _251;
  int (*__vtbl_ptr_type) () * iftmp.42_252;
  struct Arbiter * * const _256;
  struct Arbiter * * const _257;
  long int _258;
  long int _259;
  long int _260;
  long int _261;
  size_type _262;
  long unsigned int _263;
  long unsigned int _264;
  struct Arbiter * * _265;
  char * const _269;
  bool _274;
  const void * prephitmp_275;
  long int _284;
  sizetype iftmp.32_285;
  struct basic_ios * _286;
  long int _294;
  sizetype iftmp.41_295;
  struct basic_ios * _296;
  const size_type _297;
  char * const _298;
  const char * _301;
  char * const _306;
  char * const _308;
  char * _314;
  long unsigned int __dnew.48_315;
  const char_type _317;
  char * _320;
  char_type * const _322;
  char_type * const _323;
  char_type * const _324;
  char * const _325;
  char_type * const _326;
  char * const _327;
  char * const _329;
  char * const _330;
  char * const _331;
  long int __last.50_332;
  long int __first.51_333;
  difference_type _334;
  long unsigned int __dnew.47_335;
  char * _336;
  long unsigned int __dnew.48_337;
  const char_type _339;
  char * _342;
  long int __last.50_344;
  long int __first.51_345;
  difference_type _346;
  long unsigned int __dnew.47_347;
  char * _348;
  long unsigned int __dnew.48_349;
  const char_type _351;
  char * _354;
  int (*__vtbl_ptr_type) () * iftmp.40_357;
  long int _358;
  sizetype iftmp.41_359;
  struct basic_ios * _360;
  int (*__vtbl_ptr_type) () * iftmp.42_361;
  const void * prephitmp_381;
  bool _402;
  const void * prephitmp_407;
  bool _408;
  bool _409;
  bool _410;
  const void * prephitmp_414;
  const void * prephitmp_473;
  const void * pretmp_474;
  const void * prephitmp_475;
  const void * pretmp_476;
  const void * prephitmp_497;
  const void * prephitmp_498;
  size_type pretmp_499;
  size_type prephitmp_500;
  char * const pretmp_526;
  char * const prephitmp_527;
  size_type pretmp_528;
  size_type prephitmp_534;
  char * const _546;
  const void * prephitmp_547;
  bool _548;
  const void * prephitmp_549;
  const void * prephitmp_553;
  const void * prephitmp_612;
  const void * prephitmp_613;
  const void * prephitmp_614;
  const void * prephitmp_615;
  const void * prephitmp_636;
  const void * prephitmp_637;
  const void * prephitmp_638;
  const void * prephitmp_639;
  char * const prephitmp_647;
  size_type pretmp_648;
  size_type prephitmp_649;
  char * const pretmp_653;
  char * const prephitmp_655;
  size_type prephitmp_660;
  char * const pretmp_661;
  const void * prephitmp_665;
  const void * prephitmp_666;
  const void * prephitmp_667;
  const void * prephitmp_673;
  bool _683;
  char * const _685;
  bool _688;
  const void * prephitmp_694;
  const void * prephitmp_696;
  char * const _698;
  char * const _699;

  <bb 2>:
  _9 = &this_8(D)->D.37705;
  SparseAllocator::SparseAllocator (_9, parent_11(D), name_12(D), inputs_13(D), outputs_14(D));
  this_8(D)->D.37705.D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV18SeparableAllocator + 16B];
  # DEBUG D#300 => &this_8(D)->_input_arb
  # DEBUG this => D#300
  # DEBUG D#145 => &D#300->D.37666
  # DEBUG this => D#145
  # DEBUG D#144 => &D#145->_M_impl
  # DEBUG this => D#144
  # DEBUG this => D#144
  # DEBUG this => D#144
  MEM[(struct _Vector_impl *)this_8(D) + 304B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_8(D) + 304B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_8(D) + 304B]._M_end_of_storage = 0B;
  # DEBUG D#299 => &this_8(D)->_output_arb
  # DEBUG this => D#299
  # DEBUG D#145 => &D#299->D.37666
  # DEBUG this => D#145
  # DEBUG D#144 => &D#145->_M_impl
  # DEBUG this => D#144
  # DEBUG this => D#144
  # DEBUG this => D#144
  MEM[(struct _Vector_impl *)this_8(D) + 328B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_8(D) + 328B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_8(D) + 328B]._M_end_of_storage = 0B;
  _18 = (long unsigned int) inputs_13(D);
  # DEBUG D#366 => &this_8(D)->_input_arb
  # DEBUG this => D#366
  # DEBUG __new_size => _18
  __x = 0B;
  # DEBUG __x => __x
  # DEBUG D#18 => D#366
  # DEBUG D#18 => D#366
  # DEBUG this => D#18
  # DEBUG this => D#18
  if (_18 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG i => 0
  if (inputs_13(D) <= 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 4>:
  # DEBUG D#18 => D#366
  # DEBUG D#18 => D#366
  # DEBUG this => D#18
  # DEBUG this => D#18
  # DEBUG this => D#366
  # DEBUG D#23 => &D#366->D.37666._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#23
  # DEBUG this => D#366
  MEM[(struct __normal_iterator *)&__position] = 0B;
  # DEBUG __n => _18
  # DEBUG __x => &__x
  _19 = &this_8(D)->_input_arb;
  std::vector<Arbiter*>::_M_fill_insert (_19, __position, _18, &__x);
  goto <bb 3>;

  <bb 5>:
  _44 = (long unsigned int) outputs_14(D);
  # DEBUG D#365 => &this_8(D)->_output_arb
  # DEBUG this => D#365
  # DEBUG __new_size => _44
  __x = 0B;
  # DEBUG __x => __x
  _256 = MEM[(struct Arbiter * * *)this_8(D) + 328B];
  # DEBUG D#18 => D#365
  _257 = MEM[(struct Arbiter * * *)this_8(D) + 336B];
  # DEBUG D#18 => D#365
  # DEBUG this => D#18
  # DEBUG this => D#18
  _258 = (long int) _257;
  _259 = (long int) _256;
  _260 = _258 - _259;
  _261 = _260 /[ex] 8;
  _262 = (size_type) _261;
  if (_44 > _262)
    goto <bb 79>;
  else
    goto <bb 82>;

  <bb 6>:
  pretmp_138 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_142 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 7>:
  # i_702 = PHI <0(6), i_37(78)>
  # prephitmp_139 = PHI <pretmp_138(6), iftmp.40_248(78)>
  # prephitmp_143 = PHI <pretmp_142(6), iftmp.42_252(78)>
  # DEBUG i => i_702
  # DEBUG D#20 => &D.39731
  # DEBUG this => D#20
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  # DEBUG D#182 => &D.39731
  # DEBUG this => &D.39730
  # DEBUG __s => "arb_i"
  # DEBUG __a => D#182
  # DEBUG D#181 => D#182
  # DEBUG this => &D.39730
  # DEBUG D#179 => &D.39730._M_dataplus
  # DEBUG D#62 => D#181
  # DEBUG this => D#179
  # DEBUG __dat => &D.39730.D.13836._M_local_buf
  # DEBUG __a => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#59 => D#179
  # DEBUG D#60 => D#61
  # DEBUG this => D#59
  # DEBUG __a => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG this => D#57
  # DEBUG D.44428 => D#58
  MEM[(struct _Alloc_hider *)&D.39730]._M_p = &D.39730.D.13836._M_local_buf;
  # DEBUG __s => "arb_i"
  # DEBUG this => &D.39730
  # DEBUG __beg => "arb_i"
  # DEBUG __end => &MEM[(void *)"arb_i" + 5B]
  # DEBUG this => &D.39730
  # DEBUG __beg => "arb_i"
  # DEBUG __end => &MEM[(void *)"arb_i" + 5B]
  # DEBUG this => &D.39730
  # DEBUG __beg => "arb_i"
  # DEBUG __end => &MEM[(void *)"arb_i" + 5B]
  # DEBUG __ptr => "arb_i"
  # DEBUG __first => "arb_i"
  # DEBUG __last => &MEM[(void *)"arb_i" + 5B]
  # DEBUG D#219 => &__first
  # DEBUG D.45576 => D#219
  # DEBUG __first => "arb_i"
  # DEBUG __last => &MEM[(void *)"arb_i" + 5B]
  # DEBUG __dnew => 5
  # DEBUG D#5 => &D.39730
  # DEBUG this => D#5
  # DEBUG __p => &D.39730.D.13836._M_local_buf
  # DEBUG __k1 => "arb_i"
  # DEBUG __k2 => &MEM[(void *)"arb_i" + 5B]
  # DEBUG __d => &D.39730.D.13836._M_local_buf
  # DEBUG __s => "arb_i"
  # DEBUG __n => 5
  # DEBUG __s1 => &D.39730.D.13836._M_local_buf
  # DEBUG __s2 => "arb_i"
  # DEBUG __n => 5
  __builtin_memcpy (&D.39730.D.13836._M_local_buf, "arb_i", 5);
  # DEBUG this => &D.39730
  # DEBUG __n => 5
  # DEBUG D#8 => &D.39730
  # DEBUG __length => 5
  # DEBUG this => D#8
  MEM[(size_type *)&D.39730 + 8B] = 5;
  # DEBUG D#5 => &D.39730
  # DEBUG this => D#5
  # DEBUG __c1 => &MEM[(void *)&D.39730 + 21B]
  # DEBUG __c2 => D#9
  MEM[(char_type &)&D.39730 + 21] = 0;
  # DEBUG D#357 => {CLOBBER}
  # DEBUG __dnew => D#357
  # DEBUG this => &arb_name
  # DEBUG __str => &D.39730
  # DEBUG __mode => 16
  # DEBUG D#191 => &arb_name.D.38356
  # DEBUG this => D#191
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&arb_name + 112B].D.26019);
  MEM[(struct basic_ios *)&arb_name + 112B].D.26019._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&arb_name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_num_get = 0B;
  # DEBUG this => &arb_name.D.38353
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&arb_name]._vptr.basic_ostream = prephitmp_139;
  _175 = MEM[(long int *)prephitmp_139 + -24B];
  iftmp.32_176 = (sizetype) _175;
  _177 = &arb_name.D.38353 + iftmp.32_176;
  _177->D.26019._vptr.ios_base = prephitmp_143;
  std::basic_ios<char>::init (_177, 0B);

  <bb 8>:
  arb_name.D.38353._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&arb_name + 112B].D.26019._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG this => &arb_name._M_stringbuf
  # DEBUG __str => &D.39730
  # DEBUG __mode => 16
  # DEBUG D#189 => &MEM[(struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG this => D#189
  MEM[(struct basic_streambuf *)&arb_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&arb_name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&arb_name + 8B].D.38203._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_mode = 0;
  # DEBUG this => D#20
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  _188 = MEM[(long unsigned int *)&D.39730 + 8B];
  # DEBUG D#1 => &D.39730
  # DEBUG this => D#1
  # DEBUG this => &D.39730
  _189 = MEM[(char * *)&D.39730];
  # DEBUG D#5 => &D.39730
  # DEBUG this => D#5
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __s => _189
  # DEBUG __n => _188
  # DEBUG __a => D#186
  # DEBUG D#185 => D#186
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG D#183 => &MEM[(struct basic_string *)&arb_name + 80B]._M_dataplus
  # DEBUG D#62 => D#185
  # DEBUG this => D#183
  # DEBUG __dat => &MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf
  # DEBUG __a => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#59 => D#183
  # DEBUG D#60 => D#61
  # DEBUG this => D#59
  # DEBUG __a => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG this => D#57
  # DEBUG D.44428 => D#58
  MEM[(struct _Alloc_hider *)&arb_name + 80B]._M_p = &MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf;
  _192 = _189 + _188;
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __beg => _189
  # DEBUG __end => _192
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __beg => _189
  # DEBUG __end => _192
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __beg => _189
  # DEBUG __end => _192
  # DEBUG __ptr => _189
  _274 = _192 != 0B;
  _548 = _189 == 0B;
  _410 = _274 & _548;
  if (_410 != 0)
    goto <bb 189>;
  else
    goto <bb 191>;

  <bb 9>:
  _205 = std::__cxx11::basic_string<char>::_M_create (&MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string, &__dnew, 0);

  <bb 10>:
  # DEBUG D#6 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __p => _205
  # DEBUG this => D#6
  MEM[(char * *)&arb_name + 80B] = _205;
  __dnew.48_206 = __dnew;
  # DEBUG D#7 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __capacity => __dnew.48_206
  # DEBUG this => D#7
  MEM[(size_type *)&arb_name + 96B] = __dnew.48_206;
  # DEBUG D#5 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#5
  # DEBUG __p => _205
  # DEBUG __k1 => _189
  # DEBUG __k2 => _192
  # DEBUG __d => _205
  # DEBUG __s => _189
  # DEBUG __n => _188
  goto <bb 13>;

  <bb 11>:
  # DEBUG D#5 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#5
  # DEBUG __p => &MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf
  # DEBUG __k1 => _189
  # DEBUG __k2 => _192
  # DEBUG __d => &MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf
  # DEBUG __s => _189
  # DEBUG __n => _188
  if (_188 == 1)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _208 = MEM[(const char_type &)_189];
  # DEBUG D#9 => _189
  # DEBUG __c1 => &MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf
  # DEBUG __c2 => D#9
  MEM[(char_type &)&arb_name + 96] = _208;
  goto <bb 14>;

  <bb 13>:
  # _269 = PHI <&MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf(11), _205(10)>
  # DEBUG D#5 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#5
  # DEBUG __p => _269
  # DEBUG __k1 => _189
  # DEBUG __k2 => _192
  # DEBUG __d => _269
  # DEBUG __s => _189
  # DEBUG __n => _188
  # DEBUG __s1 => _269
  # DEBUG __s2 => _189
  # DEBUG __n => _188
  __builtin_memcpy (_269, _189, _188);
  pretmp_145 = __dnew;
  pretmp_661 = MEM[(char * *)&arb_name + 80B];

  <bb 14>:
  # prephitmp_660 = PHI <_188(12), pretmp_145(13)>
  # prephitmp_121 = PHI <&MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf(12), pretmp_661(13)>
  # DEBUG D#364 => __dnew
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __n => D#364
  # DEBUG D#8 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __length => D#364
  # DEBUG this => D#8
  MEM[(size_type *)&arb_name + 88B] = prephitmp_660;
  # DEBUG D#5 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#5
  _211 = prephitmp_121 + prephitmp_660;
  # DEBUG __c1 => _211
  # DEBUG __c2 => D#9
  MEM[(char_type &)_211] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &arb_name._M_stringbuf
  # DEBUG __mode => 16
  MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_mode = 16;
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => 16
  # DEBUG __b => NULL
  # DEBUG __len => 0
  # DEBUG D#11 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#11
  _197 = MEM[(char * *)&arb_name + 80B];
  # DEBUG D#5 => D#11
  # DEBUG this => D#5
  std::__cxx11::basic_stringbuf<char>::_M_sync (&arb_name._M_stringbuf, _197, 0, 0);
  goto <bb 21>;

  # prephitmp_696 = PHI <prephitmp_139(14)>
  # prephitmp_667 = PHI <prephitmp_143(14)>
<L24>:
  # DEBUG D#187 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  _199 = MEM[(char * *)&arb_name + 80B];
  # DEBUG D#5 => D#187
  # DEBUG this => D#5
  # DEBUG this => D#187
  if (&MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf != _199)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#73 => MEM[(struct basic_string *)D#187].D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => D#187
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => D#187
  # DEBUG this => D#5
  # DEBUG this => D#187
  # DEBUG D#70 => &MEM[(struct basic_string *)D#187]._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _199
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _199
  # DEBUG this => D#64
  # DEBUG D.47913 => D#65
  operator delete (_199);

  <bb 17>:
  # DEBUG D#74 => &MEM[(struct basic_string *)D#187]._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  MEM[(struct  &)&arb_name + 80] ={v} {CLOBBER};
  resx 38

<L40>:
  goto <bb 20> (<L25>);

  # prephitmp_694 = PHI <prephitmp_139(9)>
  # prephitmp_666 = PHI <prephitmp_143(9)>
<L39>:

  # prephitmp_547 = PHI <prephitmp_694(19), prephitmp_696(18), prephitmp_673(190)>
  # prephitmp_473 = PHI <prephitmp_666(19), prephitmp_667(18), prephitmp_639(190)>
<L25>:
  # DEBUG D#188 => &MEM[(struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG this => D#188
  MEM[(struct basic_streambuf *)&arb_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&arb_name + 8B]._M_buf_locale);
  MEM[(struct  &)&arb_name + 8] ={v} {CLOBBER};
  resx 37

  <bb 21>:
  std::basic_ios<char>::init (&MEM[(void *)&arb_name + 112B], &arb_name._M_stringbuf.D.38203);
  goto <bb 29>;

  # prephitmp_549 = PHI <prephitmp_139(21)>
  # prephitmp_665 = PHI <prephitmp_143(21)>
<L21>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&arb_name._M_stringbuf);
  resx 35

<L42>:
  goto <bb 25> (<L22>);

<L41>:

  # prephitmp_498 = PHI <prephitmp_547(24), prephitmp_549(23)>
  # prephitmp_414 = PHI <prephitmp_473(24), prephitmp_665(23)>
<L22>:
  # DEBUG this => &arb_name.D.38353
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _185 = MEM[(long int *)prephitmp_498 + -24B];
  iftmp.41_186 = (sizetype) _185;
  _187 = &arb_name.D.38353 + iftmp.41_186;
  _187->D.26019._vptr.ios_base = prephitmp_414;
  MEM[(struct  &)&arb_name] ={v} {CLOBBER};
  resx 34

<L43>:
  goto <bb 28> (<L23>);

<L38>:

<L23>:
  # DEBUG D#190 => &arb_name.D.38356
  # DEBUG this => D#190
  MEM[(struct basic_ios *)&arb_name + 112B].D.26019._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&arb_name + 112B].D.26019);
  MEM[(struct  &)&arb_name + 112] ={v} {CLOBBER};
  resx 33

  <bb 29>:
  # DEBUG this => &D.39730
  # DEBUG this => &D.39730
  # DEBUG this => &D.39730
  _25 = MEM[(char * *)&D.39730];
  # DEBUG D#5 => &D.39730
  # DEBUG this => D#5
  # DEBUG this => &D.39730
  if (&D.39730.D.13836._M_local_buf != _25)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#73 => D.39730.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.39730
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.39730
  # DEBUG this => D#5
  # DEBUG this => &D.39730
  # DEBUG D#70 => &D.39730._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _25
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _25
  # DEBUG this => D#64
  # DEBUG D.46878 => D#65
  operator delete (_25);

  <bb 31>:
  # DEBUG D#74 => &D.39730._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.39730 ={v} {CLOBBER};
  # DEBUG this => &D.39731
  # DEBUG this => &D.39731
  std::basic_ostream<char>::operator<< (&arb_name.D.38353, i_702);

  <bb 32>:
  _27 = (long unsigned int) i_702;
  # DEBUG D#295 => &this_8(D)->_input_arb
  _74 = MEM[(struct Arbiter * * *)this_8(D) + 304B];
  # DEBUG D#12 => D#295
  # DEBUG __n => _27
  # DEBUG this => D#12
  _17 = _27 * 8;
  _54 = _74 + _17;
  # DEBUG this => &arb_name
  # DEBUG this => &arb_name._M_stringbuf
  # DEBUG this => &D.39732
  # DEBUG this => D#20
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  # DEBUG this => &D.39732
  # DEBUG D#63 => &D.39732._M_dataplus
  # DEBUG this => D#63
  # DEBUG __dat => &D.39732.D.13836._M_local_buf
  # DEBUG __a => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#59 => D#63
  # DEBUG D#60 => D#61
  # DEBUG this => D#59
  # DEBUG __a => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG this => D#57
  # DEBUG D.44428 => D#58
  MEM[(struct _Alloc_hider *)&D.39732]._M_p = &D.39732.D.13836._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.39732
  # DEBUG __n => 0
  # DEBUG D#8 => &D.39732
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&D.39732 + 8B] = 0;
  # DEBUG D#5 => &D.39732
  # DEBUG this => D#5
  # DEBUG __c1 => &D.39732.D.13836._M_local_buf
  # DEBUG __c2 => D#9
  MEM[(char_type &)&D.39732 + 16] = 0;
  # DEBUG D#225 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  _213 = MEM[(char_type * *)&arb_name + 48B];
  # DEBUG D#2 => D#225
  # DEBUG this => D#2
  if (_213 != 0B)
    goto <bb 33>;
  else
    goto <bb 55>;

  <bb 33>:
  # DEBUG D#226 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG D#2 => D#226
  # DEBUG this => D#2
  # DEBUG D#227 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  _214 = MEM[(char_type * *)&arb_name + 32B];
  # DEBUG D#3 => D#227
  # DEBUG this => D#3
  if (_213 > _214)
    goto <bb 34>;
  else
    goto <bb 44>;

  <bb 34>:
  # DEBUG this => D#20
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  # DEBUG D#230 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG D#2 => D#230
  # DEBUG this => D#2
  # DEBUG D#231 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  _215 = MEM[(char_type * *)&arb_name + 40B];
  # DEBUG D#4 => D#231
  # DEBUG this => D#4
  # DEBUG this => &D.48109
  # DEBUG __beg => _215
  # DEBUG __end => _213
  # DEBUG __a => NULL
  # DEBUG this => &D.48109
  # DEBUG D#223 => &D.48109._M_dataplus
  # DEBUG this => D#223
  # DEBUG __dat => &D.48109.D.13836._M_local_buf
  # DEBUG __a => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#59 => D#223
  # DEBUG D#60 => D#61
  # DEBUG this => D#59
  # DEBUG __a => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG this => D#57
  # DEBUG D.44428 => D#58
  MEM[(struct _Alloc_hider *)&D.48109]._M_p = &D.48109.D.13836._M_local_buf;
  # DEBUG this => &D.48109
  # DEBUG __beg => _215
  # DEBUG __end => _213
  # DEBUG this => &D.48109
  # DEBUG __beg => _215
  # DEBUG __end => _213
  # DEBUG this => &D.48109
  # DEBUG __beg => _215
  # DEBUG __end => _213
  # DEBUG __ptr => _215
  if (_215 == 0B)
    goto <bb 192>;
  else
    goto <bb 194>;

  <bb 35>:
  _227 = std::__cxx11::basic_string<char>::_M_create (&D.48109, &__dnew, 0);

  <bb 36>:
  # DEBUG D#6 => &D.48109
  # DEBUG __p => _227
  # DEBUG this => D#6
  MEM[(char * *)&D.48109] = _227;
  __dnew.48_228 = __dnew;
  # DEBUG D#7 => &D.48109
  # DEBUG __capacity => __dnew.48_228
  # DEBUG this => D#7
  MEM[(size_type *)&D.48109 + 16B] = __dnew.48_228;
  # DEBUG D#5 => &D.48109
  # DEBUG this => D#5
  # DEBUG __p => _227
  # DEBUG __k1 => _215
  # DEBUG __k2 => _213
  # DEBUG __d => _227
  # DEBUG __s => _215
  # DEBUG __n => __dnew.47_226
  goto <bb 39>;

  <bb 37>:
  # DEBUG D#5 => &D.48109
  # DEBUG this => D#5
  # DEBUG __p => &D.48109.D.13836._M_local_buf
  # DEBUG __k1 => _215
  # DEBUG __k2 => _213
  # DEBUG __d => &D.48109.D.13836._M_local_buf
  # DEBUG __s => _215
  # DEBUG __n => __dnew.47_226
  if (__dnew.47_226 == 1)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  _230 = MEM[(const char_type &)_215];
  # DEBUG D#9 => _215
  # DEBUG __c1 => &D.48109.D.13836._M_local_buf
  # DEBUG __c2 => D#9
  MEM[(char_type &)&D.48109 + 16] = _230;
  goto <bb 40>;

  <bb 39>:
  # _546 = PHI <&D.48109.D.13836._M_local_buf(37), _227(36)>
  # DEBUG D#5 => &D.48109
  # DEBUG this => D#5
  # DEBUG __p => _546
  # DEBUG __k1 => _215
  # DEBUG __k2 => _213
  # DEBUG __d => _546
  # DEBUG __s => _215
  # DEBUG __n => __dnew.47_226
  # DEBUG __s1 => _546
  # DEBUG __s2 => _215
  # DEBUG __n => __dnew.47_226
  __builtin_memcpy (_546, _215, __dnew.47_226);
  pretmp_648 = __dnew;
  pretmp_653 = MEM[(char * *)&D.48109];

  <bb 40>:
  # prephitmp_649 = PHI <__dnew.47_226(38), pretmp_648(39)>
  # prephitmp_655 = PHI <&D.48109.D.13836._M_local_buf(38), pretmp_653(39)>
  # DEBUG D#362 => __dnew
  # DEBUG this => &D.48109
  # DEBUG __n => D#362
  # DEBUG D#8 => &D.48109
  # DEBUG __length => D#362
  # DEBUG this => D#8
  MEM[(size_type *)&D.48109 + 8B] = prephitmp_649;
  # DEBUG D#5 => &D.48109
  # DEBUG this => D#5
  _233 = prephitmp_655 + prephitmp_649;
  # DEBUG __c1 => _233
  # DEBUG __c2 => D#9
  MEM[(char_type &)_233] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.39732
  # DEBUG __str => &D.48109
  # DEBUG this => &D.39732
  # DEBUG __str => &D.48109
  std::__cxx11::basic_string<char>::_M_assign (&D.39732, &D.48109);

  <bb 41>:
  # DEBUG this => &D.48109
  # DEBUG this => &D.48109
  # DEBUG this => &D.48109
  _216 = MEM[(char * *)&D.48109];
  # DEBUG D#5 => &D.48109
  # DEBUG this => D#5
  # DEBUG this => &D.48109
  if (&D.48109.D.13836._M_local_buf != _216)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#73 => D.48109.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.48109
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.48109
  # DEBUG this => D#5
  # DEBUG this => &D.48109
  # DEBUG D#70 => &D.48109._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _216
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _216
  # DEBUG this => D#64
  # DEBUG D.48068 => D#65
  operator delete (_216);

  <bb 43>:
  # DEBUG D#74 => &D.48109._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.48109 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 70>;

  <bb 44>:
  # DEBUG this => D#20
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  # DEBUG D#228 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG D#3 => D#228
  # DEBUG this => D#3
  # DEBUG D#229 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  _217 = MEM[(char_type * *)&arb_name + 40B];
  # DEBUG D#4 => D#229
  # DEBUG this => D#4
  # DEBUG this => &D.48108
  # DEBUG __beg => _217
  # DEBUG __end => _214
  # DEBUG __a => NULL
  # DEBUG this => &D.48108
  # DEBUG D#223 => &D.48108._M_dataplus
  # DEBUG this => D#223
  # DEBUG __dat => &D.48108.D.13836._M_local_buf
  # DEBUG __a => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#59 => D#223
  # DEBUG D#60 => D#61
  # DEBUG this => D#59
  # DEBUG __a => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG this => D#57
  # DEBUG D.44428 => D#58
  MEM[(struct _Alloc_hider *)&D.48108]._M_p = &D.48108.D.13836._M_local_buf;
  # DEBUG this => &D.48108
  # DEBUG __beg => _217
  # DEBUG __end => _214
  # DEBUG this => &D.48108
  # DEBUG __beg => _217
  # DEBUG __end => _214
  # DEBUG this => &D.48108
  # DEBUG __beg => _217
  # DEBUG __end => _214
  # DEBUG __ptr => _217
  _402 = _214 != 0B;
  _147 = _217 == 0B;
  _408 = _147 & _402;
  if (_408 != 0)
    goto <bb 195>;
  else
    goto <bb 197>;

  <bb 45>:
  _239 = std::__cxx11::basic_string<char>::_M_create (&D.48108, &__dnew, 0);
  goto <bb 47>;

<L46>:
  goto <bb 66> (<L28>);

  <bb 47>:
  # DEBUG D#6 => &D.48108
  # DEBUG __p => _239
  # DEBUG this => D#6
  MEM[(char * *)&D.48108] = _239;
  __dnew.48_240 = __dnew;
  # DEBUG D#7 => &D.48108
  # DEBUG __capacity => __dnew.48_240
  # DEBUG this => D#7
  MEM[(size_type *)&D.48108 + 16B] = __dnew.48_240;
  # DEBUG D#5 => &D.48108
  # DEBUG this => D#5
  # DEBUG __p => _239
  # DEBUG __k1 => _217
  # DEBUG __k2 => _214
  # DEBUG __d => _239
  # DEBUG __s => _217
  # DEBUG __n => __dnew.47_238
  goto <bb 50>;

  <bb 48>:
  # DEBUG D#5 => &D.48108
  # DEBUG this => D#5
  # DEBUG __p => &D.48108.D.13836._M_local_buf
  # DEBUG __k1 => _217
  # DEBUG __k2 => _214
  # DEBUG __d => &D.48108.D.13836._M_local_buf
  # DEBUG __s => _217
  # DEBUG __n => __dnew.47_238
  if (__dnew.47_238 == 1)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  _242 = MEM[(const char_type &)_217];
  # DEBUG D#9 => _217
  # DEBUG __c1 => &D.48108.D.13836._M_local_buf
  # DEBUG __c2 => D#9
  MEM[(char_type &)&D.48108 + 16] = _242;
  goto <bb 51>;

  <bb 50>:
  # _22 = PHI <&D.48108.D.13836._M_local_buf(48), _239(47)>
  # DEBUG D#5 => &D.48108
  # DEBUG this => D#5
  # DEBUG __p => _22
  # DEBUG __k1 => _217
  # DEBUG __k2 => _214
  # DEBUG __d => _22
  # DEBUG __s => _217
  # DEBUG __n => __dnew.47_238
  # DEBUG __s1 => _22
  # DEBUG __s2 => _217
  # DEBUG __n => __dnew.47_238
  __builtin_memcpy (_22, _217, __dnew.47_238);
  pretmp_122 = __dnew;
  pretmp_124 = MEM[(char * *)&D.48108];

  <bb 51>:
  # prephitmp_123 = PHI <__dnew.47_238(49), pretmp_122(50)>
  # prephitmp_647 = PHI <&D.48108.D.13836._M_local_buf(49), pretmp_124(50)>
  # DEBUG D#363 => __dnew
  # DEBUG this => &D.48108
  # DEBUG __n => D#363
  # DEBUG D#8 => &D.48108
  # DEBUG __length => D#363
  # DEBUG this => D#8
  MEM[(size_type *)&D.48108 + 8B] = prephitmp_123;
  # DEBUG D#5 => &D.48108
  # DEBUG this => D#5
  _245 = prephitmp_647 + prephitmp_123;
  # DEBUG __c1 => _245
  # DEBUG __c2 => D#9
  MEM[(char_type &)_245] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.39732
  # DEBUG __str => &D.48108
  # DEBUG this => &D.39732
  # DEBUG __str => &D.48108
  std::__cxx11::basic_string<char>::_M_assign (&D.39732, &D.48108);

  <bb 52>:
  # DEBUG this => &D.48108
  # DEBUG this => &D.48108
  # DEBUG this => &D.48108
  _218 = MEM[(char * *)&D.48108];
  # DEBUG D#5 => &D.48108
  # DEBUG this => D#5
  # DEBUG this => &D.48108
  if (&D.48108.D.13836._M_local_buf != _218)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG D#73 => D.48108.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.48108
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.48108
  # DEBUG this => D#5
  # DEBUG this => &D.48108
  # DEBUG D#70 => &D.48108._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _218
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _218
  # DEBUG this => D#64
  # DEBUG D.48031 => D#65
  operator delete (_218);

  <bb 54>:
  # DEBUG D#74 => &D.48108._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.48108 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 70>;

  <bb 55>:
  # DEBUG this => &D.39732
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => &D.39732
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&arb_name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.39732, &MEM[(const struct basic_stringbuf *)&arb_name + 8B]._M_string);
  goto <bb 70>;

<L47>:
  goto <bb 66> (<L28>);

<L26>:
  # DEBUG this => &D.48109
  # DEBUG this => &D.48109
  # DEBUG this => &D.48109
  _220 = MEM[(char * *)&D.48109];
  # DEBUG D#5 => &D.48109
  # DEBUG this => D#5
  # DEBUG this => &D.48109
  if (&D.48109.D.13836._M_local_buf != _220)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#73 => D.48109.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.48109
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.48109
  # DEBUG this => D#5
  # DEBUG this => &D.48109
  # DEBUG D#70 => &D.48109._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _220
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _220
  # DEBUG this => D#64
  # DEBUG D.48012 => D#65
  operator delete (_220);

  <bb 59>:
  # DEBUG D#74 => &D.48109._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.48109 ={v} {CLOBBER};
  resx 41

<L48>:
  goto <bb 66> (<L28>);

<L27>:
  # DEBUG this => &D.48108
  # DEBUG this => &D.48108
  # DEBUG this => &D.48108
  _221 = MEM[(char * *)&D.48108];
  # DEBUG D#5 => &D.48108
  # DEBUG this => D#5
  # DEBUG this => &D.48108
  if (&D.48108.D.13836._M_local_buf != _221)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # DEBUG D#73 => D.48108.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.48108
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.48108
  # DEBUG this => D#5
  # DEBUG this => &D.48108
  # DEBUG D#70 => &D.48108._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _221
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _221
  # DEBUG this => D#64
  # DEBUG D.47996 => D#65
  operator delete (_221);

  <bb 63>:
  # DEBUG D#74 => &D.48108._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.48108 ={v} {CLOBBER};
  resx 40

<L49>:
  goto <bb 66> (<L28>);

<L45>:

<L28>:
  # DEBUG this => &D.39732
  # DEBUG this => &D.39732
  # DEBUG this => &D.39732
  _222 = MEM[(char * *)&D.39732];
  # DEBUG D#5 => &D.39732
  # DEBUG this => D#5
  # DEBUG this => &D.39732
  if (&D.39732.D.13836._M_local_buf != _222)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  # DEBUG D#73 => D.39732.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.39732
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.39732
  # DEBUG this => D#5
  # DEBUG this => &D.39732
  # DEBUG D#70 => &D.39732._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _222
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _222
  # DEBUG this => D#64
  # DEBUG D.47985 => D#65
  operator delete (_222);

  <bb 68>:
  # DEBUG D#74 => &D.39732._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  resx 39

<L50>:
  goto <bb 168> (<L10>);

  <bb 70>:
  _32 = Arbiter::NewArbiter (_9, &D.39732, arb_type_30(D), outputs_14(D));

  <bb 71>:
  *_54 = _32;
  # DEBUG this => &D.39732
  # DEBUG this => &D.39732
  # DEBUG this => &D.39732
  _47 = MEM[(char * *)&D.39732];
  # DEBUG D#5 => &D.39732
  # DEBUG this => D#5
  # DEBUG this => &D.39732
  if (&D.39732.D.13836._M_local_buf != _47)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  # DEBUG D#73 => D.39732.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.39732
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.39732
  # DEBUG this => D#5
  # DEBUG this => &D.39732
  # DEBUG D#70 => &D.39732._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _47
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _47
  # DEBUG this => D#64
  # DEBUG D.46898 => D#65
  operator delete (_47);

  <bb 73>:
  # DEBUG D#74 => &D.39732._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.39732 ={v} {CLOBBER};
  # DEBUG this => &arb_name
  arb_name.D.38353._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&arb_name + 112B].D.26019._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &arb_name._M_stringbuf
  MEM[(struct basic_stringbuf *)&arb_name + 8B].D.38203._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#76 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  _35 = MEM[(char * *)&arb_name + 80B];
  # DEBUG D#5 => D#76
  # DEBUG this => D#5
  # DEBUG this => D#76
  if (&MEM[(const struct basic_string *)&arb_name + 80B].D.13836._M_local_buf != _35)
    goto <bb 74>;
  else
    goto <bb 75>;

  <bb 74>:
  # DEBUG D#73 => MEM[(struct basic_string *)D#76].D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => D#76
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => D#76
  # DEBUG this => D#5
  # DEBUG this => D#76
  # DEBUG D#70 => &MEM[(struct basic_string *)D#76]._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _35
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _35
  # DEBUG this => D#64
  # DEBUG D.48184 => D#65
  operator delete (_35);

  <bb 75>:
  # DEBUG D#74 => &MEM[(struct basic_string *)D#76]._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  MEM[(struct  &)&arb_name + 80] ={v} {CLOBBER};
  # DEBUG D#75 => &MEM[(struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG this => D#75
  MEM[(struct basic_streambuf *)&arb_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&arb_name + 8B]._M_buf_locale);
  MEM[(struct  &)&arb_name + 8] ={v} {CLOBBER};
  # DEBUG this => &arb_name.D.38353
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.40_248 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  _249 = MEM[(long int *)iftmp.40_248 + -24B];
  iftmp.41_250 = (sizetype) _249;
  _251 = &arb_name.D.38353 + iftmp.41_250;
  iftmp.42_252 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _251->D.26019._vptr.ios_base = iftmp.42_252;
  MEM[(struct  &)&arb_name] ={v} {CLOBBER};
  # DEBUG D#77 => &arb_name.D.38356
  # DEBUG this => D#77
  MEM[(struct basic_ios *)&arb_name + 112B].D.26019._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&arb_name + 112B].D.26019);
  goto <bb 77>;

<L51>:
  goto <bb 182> (<L18>);

  <bb 77>:
  arb_name ={v} {CLOBBER};
  i_37 = i_702 + 1;
  # DEBUG i => i_37
  # DEBUG i => i_37
  if (inputs_13(D) <= i_37)
    goto <bb 5>;
  else
    goto <bb 78>;

  <bb 78>:
  goto <bb 7>;

  <bb 79>:
  # DEBUG D#18 => D#365
  # DEBUG D#18 => D#365
  # DEBUG this => D#18
  # DEBUG this => D#18
  _263 = _44 - _262;
  # DEBUG this => D#365
  # DEBUG D#23 => &D#365->D.37666._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#23
  # DEBUG this => D#365
  MEM[(struct __normal_iterator *)&__position] = _257;
  # DEBUG __n => _263
  # DEBUG __x => &__x
  _45 = &this_8(D)->_output_arb;
  std::vector<Arbiter*>::_M_fill_insert (_45, __position, _263, &__x);
  goto <bb 81>;

<L52>:
  goto <bb 182> (<L18>);

  <bb 81>:
  goto <bb 84>;

  <bb 82>:
  # DEBUG D#18 => D#365
  # DEBUG D#18 => D#365
  # DEBUG this => D#18
  # DEBUG this => D#18
  if (_44 < _262)
    goto <bb 83>;
  else
    goto <bb 81>;

  <bb 83>:
  _264 = _44 * 8;
  _265 = _256 + _264;
  # DEBUG D#55 => D#365
  # DEBUG __pos => _265
  # DEBUG D#54 => D#55
  # DEBUG this => D#54
  # DEBUG D#52 => &D#54->D.37666
  # DEBUG this => D#52
  # DEBUG D#53 => D#54->D.37666._M_impl._M_finish
  # DEBUG __first => _265
  # DEBUG __last => D#53
  # DEBUG D.44403 => NULL
  # DEBUG D#50 => _265
  # DEBUG D#51 => D#53
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.44387 => D#46
  # DEBUG D.44386 => D#47
  MEM[(struct Arbiter * * *)this_8(D) + 336B] = _265;

  <bb 84>:
  # DEBUG i => 0
  if (outputs_14(D) <= 0)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  return;

  <bb 86>:
  pretmp_474 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_476 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 87>:
  # i_701 = PHI <0(86), i_64(158)>
  # prephitmp_475 = PHI <pretmp_474(86), iftmp.40_357(158)>
  # prephitmp_497 = PHI <pretmp_476(86), iftmp.42_361(158)>
  # DEBUG i => i_701
  # DEBUG D#20 => &D.39737
  # DEBUG this => D#20
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  # DEBUG D#182 => &D.39737
  # DEBUG this => &D.39736
  # DEBUG __s => "arb_o"
  # DEBUG __a => D#182
  # DEBUG D#181 => D#182
  # DEBUG this => &D.39736
  # DEBUG D#179 => &D.39736._M_dataplus
  # DEBUG D#62 => D#181
  # DEBUG this => D#179
  # DEBUG __dat => &D.39736.D.13836._M_local_buf
  # DEBUG __a => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#59 => D#179
  # DEBUG D#60 => D#61
  # DEBUG this => D#59
  # DEBUG __a => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG this => D#57
  # DEBUG D.44428 => D#58
  MEM[(struct _Alloc_hider *)&D.39736]._M_p = &D.39736.D.13836._M_local_buf;
  # DEBUG __s => "arb_o"
  # DEBUG this => &D.39736
  # DEBUG __beg => "arb_o"
  # DEBUG __end => &MEM[(void *)"arb_o" + 5B]
  # DEBUG this => &D.39736
  # DEBUG __beg => "arb_o"
  # DEBUG __end => &MEM[(void *)"arb_o" + 5B]
  # DEBUG this => &D.39736
  # DEBUG __beg => "arb_o"
  # DEBUG __end => &MEM[(void *)"arb_o" + 5B]
  # DEBUG __ptr => "arb_o"
  # DEBUG __first => "arb_o"
  # DEBUG __last => &MEM[(void *)"arb_o" + 5B]
  # DEBUG D#219 => &__first
  # DEBUG D.45576 => D#219
  # DEBUG __first => "arb_o"
  # DEBUG __last => &MEM[(void *)"arb_o" + 5B]
  # DEBUG __dnew => 5
  # DEBUG D#5 => &D.39736
  # DEBUG this => D#5
  # DEBUG __p => &D.39736.D.13836._M_local_buf
  # DEBUG __k1 => "arb_o"
  # DEBUG __k2 => &MEM[(void *)"arb_o" + 5B]
  # DEBUG __d => &D.39736.D.13836._M_local_buf
  # DEBUG __s => "arb_o"
  # DEBUG __n => 5
  # DEBUG __s1 => &D.39736.D.13836._M_local_buf
  # DEBUG __s2 => "arb_o"
  # DEBUG __n => 5
  __builtin_memcpy (&D.39736.D.13836._M_local_buf, "arb_o", 5);
  # DEBUG this => &D.39736
  # DEBUG __n => 5
  # DEBUG D#8 => &D.39736
  # DEBUG __length => 5
  # DEBUG this => D#8
  MEM[(size_type *)&D.39736 + 8B] = 5;
  # DEBUG D#5 => &D.39736
  # DEBUG this => D#5
  # DEBUG __c1 => &MEM[(void *)&D.39736 + 21B]
  # DEBUG __c2 => D#9
  MEM[(char_type &)&D.39736 + 21] = 0;
  # DEBUG D#358 => {CLOBBER}
  # DEBUG __dnew => D#358
  # DEBUG this => &arb_name
  # DEBUG __str => &D.39736
  # DEBUG __mode => 16
  # DEBUG D#191 => &arb_name.D.38356
  # DEBUG this => D#191
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&arb_name + 112B].D.26019);
  MEM[(struct basic_ios *)&arb_name + 112B].D.26019._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&arb_name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&arb_name + 112B]._M_num_get = 0B;
  # DEBUG this => &arb_name.D.38353
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&arb_name]._vptr.basic_ostream = prephitmp_475;
  _284 = MEM[(long int *)prephitmp_475 + -24B];
  iftmp.32_285 = (sizetype) _284;
  _286 = &arb_name.D.38353 + iftmp.32_285;
  _286->D.26019._vptr.ios_base = prephitmp_497;
  std::basic_ios<char>::init (_286, 0B);

  <bb 88>:
  arb_name.D.38353._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&arb_name + 112B].D.26019._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG this => &arb_name._M_stringbuf
  # DEBUG __str => &D.39736
  # DEBUG __mode => 16
  # DEBUG D#189 => &MEM[(struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG this => D#189
  MEM[(struct basic_streambuf *)&arb_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&arb_name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&arb_name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&arb_name + 8B].D.38203._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_mode = 0;
  # DEBUG this => D#20
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  _297 = MEM[(long unsigned int *)&D.39736 + 8B];
  # DEBUG D#1 => &D.39736
  # DEBUG this => D#1
  # DEBUG this => &D.39736
  _298 = MEM[(char * *)&D.39736];
  # DEBUG D#5 => &D.39736
  # DEBUG this => D#5
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __s => _298
  # DEBUG __n => _297
  # DEBUG __a => D#186
  # DEBUG D#185 => D#186
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG D#183 => &MEM[(struct basic_string *)&arb_name + 80B]._M_dataplus
  # DEBUG D#62 => D#185
  # DEBUG this => D#183
  # DEBUG __dat => &MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf
  # DEBUG __a => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#59 => D#183
  # DEBUG D#60 => D#61
  # DEBUG this => D#59
  # DEBUG __a => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG this => D#57
  # DEBUG D.44428 => D#58
  MEM[(struct _Alloc_hider *)&arb_name + 80B]._M_p = &MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf;
  _301 = _298 + _297;
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __beg => _298
  # DEBUG __end => _301
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __beg => _298
  # DEBUG __end => _301
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __beg => _298
  # DEBUG __end => _301
  # DEBUG __ptr => _298
  _156 = _301 != 0B;
  _165 = _298 == 0B;
  _409 = _156 & _165;
  if (_409 != 0)
    goto <bb 199>;
  else
    goto <bb 198>;

  <bb 89>:
  _314 = std::__cxx11::basic_string<char>::_M_create (&MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string, &__dnew, 0);

  <bb 90>:
  # DEBUG D#6 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __p => _314
  # DEBUG this => D#6
  MEM[(char * *)&arb_name + 80B] = _314;
  __dnew.48_315 = __dnew;
  # DEBUG D#7 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __capacity => __dnew.48_315
  # DEBUG this => D#7
  MEM[(size_type *)&arb_name + 96B] = __dnew.48_315;
  # DEBUG D#5 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#5
  # DEBUG __p => _314
  # DEBUG __k1 => _298
  # DEBUG __k2 => _301
  # DEBUG __d => _314
  # DEBUG __s => _298
  # DEBUG __n => _297
  goto <bb 93>;

  <bb 91>:
  # DEBUG D#5 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#5
  # DEBUG __p => &MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf
  # DEBUG __k1 => _298
  # DEBUG __k2 => _301
  # DEBUG __d => &MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf
  # DEBUG __s => _298
  # DEBUG __n => _297
  if (_297 == 1)
    goto <bb 92>;
  else
    goto <bb 93>;

  <bb 92>:
  _317 = MEM[(const char_type &)_298];
  # DEBUG D#9 => _298
  # DEBUG __c1 => &MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf
  # DEBUG __c2 => D#9
  MEM[(char_type &)&arb_name + 96] = _317;
  goto <bb 94>;

  <bb 93>:
  # _698 = PHI <&MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf(91), _314(90)>
  # DEBUG D#5 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#5
  # DEBUG __p => _698
  # DEBUG __k1 => _298
  # DEBUG __k2 => _301
  # DEBUG __d => _698
  # DEBUG __s => _298
  # DEBUG __n => _297
  # DEBUG __s1 => _698
  # DEBUG __s2 => _298
  # DEBUG __n => _297
  __builtin_memcpy (_698, _298, _297);
  pretmp_499 = __dnew;
  pretmp_526 = MEM[(char * *)&arb_name + 80B];

  <bb 94>:
  # prephitmp_500 = PHI <_297(92), pretmp_499(93)>
  # prephitmp_527 = PHI <&MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf(92), pretmp_526(93)>
  # DEBUG D#361 => __dnew
  # DEBUG this => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __n => D#361
  # DEBUG D#8 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG __length => D#361
  # DEBUG this => D#8
  MEM[(size_type *)&arb_name + 88B] = prephitmp_500;
  # DEBUG D#5 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#5
  _320 = prephitmp_527 + prephitmp_500;
  # DEBUG __c1 => _320
  # DEBUG __c2 => D#9
  MEM[(char_type &)_320] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &arb_name._M_stringbuf
  # DEBUG __mode => 16
  MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_mode = 16;
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => 16
  # DEBUG __b => NULL
  # DEBUG __len => 0
  # DEBUG D#11 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#11
  _306 = MEM[(char * *)&arb_name + 80B];
  # DEBUG D#5 => D#11
  # DEBUG this => D#5
  std::__cxx11::basic_stringbuf<char>::_M_sync (&arb_name._M_stringbuf, _306, 0, 0);
  goto <bb 101>;

  # prephitmp_638 = PHI <prephitmp_475(94)>
  # prephitmp_614 = PHI <prephitmp_497(94)>
<L32>:
  # DEBUG D#187 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#187
  # DEBUG this => D#187
  # DEBUG this => D#187
  _308 = MEM[(char * *)&arb_name + 80B];
  # DEBUG D#5 => D#187
  # DEBUG this => D#5
  # DEBUG this => D#187
  if (&MEM[(struct basic_string *)&arb_name + 80B].D.13836._M_local_buf != _308)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  # DEBUG D#73 => MEM[(struct basic_string *)D#187].D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => D#187
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => D#187
  # DEBUG this => D#5
  # DEBUG this => D#187
  # DEBUG D#70 => &MEM[(struct basic_string *)D#187]._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _308
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _308
  # DEBUG this => D#64
  # DEBUG D.48274 => D#65
  operator delete (_308);

  <bb 97>:
  # DEBUG D#74 => &MEM[(struct basic_string *)D#187]._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  MEM[(struct  &)&arb_name + 80] ={v} {CLOBBER};
  resx 47

<L55>:
  goto <bb 100> (<L33>);

  # prephitmp_637 = PHI <prephitmp_475(89)>
  # prephitmp_613 = PHI <prephitmp_497(89)>
<L54>:

  # prephitmp_407 = PHI <prephitmp_637(99), prephitmp_638(98), prephitmp_615(200)>
  # prephitmp_275 = PHI <prephitmp_613(99), prephitmp_614(98), prephitmp_553(200)>
<L33>:
  # DEBUG D#188 => &MEM[(struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG this => D#188
  MEM[(struct basic_streambuf *)&arb_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&arb_name + 8B]._M_buf_locale);
  MEM[(struct  &)&arb_name + 8] ={v} {CLOBBER};
  resx 46

  <bb 101>:
  std::basic_ios<char>::init (&MEM[(void *)&arb_name + 112B], &arb_name._M_stringbuf.D.38203);
  goto <bb 109>;

  # prephitmp_636 = PHI <prephitmp_475(101)>
  # prephitmp_612 = PHI <prephitmp_497(101)>
<L29>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&arb_name._M_stringbuf);
  resx 44

<L57>:
  goto <bb 105> (<L30>);

<L56>:

  # prephitmp_381 = PHI <prephitmp_407(104), prephitmp_636(103)>
  # prephitmp_190 = PHI <prephitmp_275(104), prephitmp_612(103)>
<L30>:
  # DEBUG this => &arb_name.D.38353
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _294 = MEM[(long int *)prephitmp_381 + -24B];
  iftmp.41_295 = (sizetype) _294;
  _296 = &arb_name.D.38353 + iftmp.41_295;
  _296->D.26019._vptr.ios_base = prephitmp_190;
  MEM[(struct  &)&arb_name] ={v} {CLOBBER};
  resx 43

<L58>:
  goto <bb 108> (<L31>);

<L53>:

<L31>:
  # DEBUG D#190 => &arb_name.D.38356
  # DEBUG this => D#190
  MEM[(struct basic_ios *)&arb_name + 112B].D.26019._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&arb_name + 112B].D.26019);
  MEM[(struct  &)&arb_name + 112] ={v} {CLOBBER};
  resx 42

  <bb 109>:
  # DEBUG this => &D.39736
  # DEBUG this => &D.39736
  # DEBUG this => &D.39736
  _51 = MEM[(char * *)&D.39736];
  # DEBUG D#5 => &D.39736
  # DEBUG this => D#5
  # DEBUG this => &D.39736
  if (&D.39736.D.13836._M_local_buf != _51)
    goto <bb 110>;
  else
    goto <bb 111>;

  <bb 110>:
  # DEBUG D#73 => D.39736.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.39736
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.39736
  # DEBUG this => D#5
  # DEBUG this => &D.39736
  # DEBUG D#70 => &D.39736._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _51
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _51
  # DEBUG this => D#64
  # DEBUG D.46916 => D#65
  operator delete (_51);

  <bb 111>:
  # DEBUG D#74 => &D.39736._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.39736 ={v} {CLOBBER};
  # DEBUG this => &D.39737
  # DEBUG this => &D.39737
  std::basic_ostream<char>::operator<< (&arb_name.D.38353, i_701);

  <bb 112>:
  _53 = (long unsigned int) i_701;
  # DEBUG D#296 => &this_8(D)->_output_arb
  _75 = MEM[(struct Arbiter * * *)this_8(D) + 328B];
  # DEBUG D#12 => D#296
  # DEBUG __n => _53
  # DEBUG this => D#12
  _21 = _53 * 8;
  _76 = _75 + _21;
  # DEBUG this => &arb_name
  # DEBUG this => &arb_name._M_stringbuf
  # DEBUG this => &D.39738
  # DEBUG this => D#20
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  # DEBUG this => &D.39738
  # DEBUG D#63 => &D.39738._M_dataplus
  # DEBUG this => D#63
  # DEBUG __dat => &D.39738.D.13836._M_local_buf
  # DEBUG __a => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#59 => D#63
  # DEBUG D#60 => D#61
  # DEBUG this => D#59
  # DEBUG __a => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG this => D#57
  # DEBUG D.44428 => D#58
  MEM[(struct _Alloc_hider *)&D.39738]._M_p = &D.39738.D.13836._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.39738
  # DEBUG __n => 0
  # DEBUG D#8 => &D.39738
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&D.39738 + 8B] = 0;
  # DEBUG D#5 => &D.39738
  # DEBUG this => D#5
  # DEBUG __c1 => &D.39738.D.13836._M_local_buf
  # DEBUG __c2 => D#9
  MEM[(char_type &)&D.39738 + 16] = 0;
  # DEBUG D#225 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  _322 = MEM[(char_type * *)&arb_name + 48B];
  # DEBUG D#2 => D#225
  # DEBUG this => D#2
  if (_322 != 0B)
    goto <bb 113>;
  else
    goto <bb 135>;

  <bb 113>:
  # DEBUG D#226 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG D#2 => D#226
  # DEBUG this => D#2
  # DEBUG D#227 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  _323 = MEM[(char_type * *)&arb_name + 32B];
  # DEBUG D#3 => D#227
  # DEBUG this => D#3
  if (_322 > _323)
    goto <bb 114>;
  else
    goto <bb 124>;

  <bb 114>:
  # DEBUG this => D#20
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  # DEBUG D#230 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG D#2 => D#230
  # DEBUG this => D#2
  # DEBUG D#231 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  _324 = MEM[(char_type * *)&arb_name + 40B];
  # DEBUG D#4 => D#231
  # DEBUG this => D#4
  # DEBUG this => &D.48470
  # DEBUG __beg => _324
  # DEBUG __end => _322
  # DEBUG __a => NULL
  # DEBUG this => &D.48470
  # DEBUG D#223 => &D.48470._M_dataplus
  # DEBUG this => D#223
  # DEBUG __dat => &D.48470.D.13836._M_local_buf
  # DEBUG __a => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#59 => D#223
  # DEBUG D#60 => D#61
  # DEBUG this => D#59
  # DEBUG __a => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG this => D#57
  # DEBUG D.44428 => D#58
  MEM[(struct _Alloc_hider *)&D.48470]._M_p = &D.48470.D.13836._M_local_buf;
  # DEBUG this => &D.48470
  # DEBUG __beg => _324
  # DEBUG __end => _322
  # DEBUG this => &D.48470
  # DEBUG __beg => _324
  # DEBUG __end => _322
  # DEBUG this => &D.48470
  # DEBUG __beg => _324
  # DEBUG __end => _322
  # DEBUG __ptr => _324
  if (_324 == 0B)
    goto <bb 201>;
  else
    goto <bb 203>;

  <bb 115>:
  _336 = std::__cxx11::basic_string<char>::_M_create (&D.48470, &__dnew, 0);

  <bb 116>:
  # DEBUG D#6 => &D.48470
  # DEBUG __p => _336
  # DEBUG this => D#6
  MEM[(char * *)&D.48470] = _336;
  __dnew.48_337 = __dnew;
  # DEBUG D#7 => &D.48470
  # DEBUG __capacity => __dnew.48_337
  # DEBUG this => D#7
  MEM[(size_type *)&D.48470 + 16B] = __dnew.48_337;
  # DEBUG D#5 => &D.48470
  # DEBUG this => D#5
  # DEBUG __p => _336
  # DEBUG __k1 => _324
  # DEBUG __k2 => _322
  # DEBUG __d => _336
  # DEBUG __s => _324
  # DEBUG __n => __dnew.47_335
  goto <bb 119>;

  <bb 117>:
  # DEBUG D#5 => &D.48470
  # DEBUG this => D#5
  # DEBUG __p => &D.48470.D.13836._M_local_buf
  # DEBUG __k1 => _324
  # DEBUG __k2 => _322
  # DEBUG __d => &D.48470.D.13836._M_local_buf
  # DEBUG __s => _324
  # DEBUG __n => __dnew.47_335
  if (__dnew.47_335 == 1)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  _339 = MEM[(const char_type &)_324];
  # DEBUG D#9 => _324
  # DEBUG __c1 => &D.48470.D.13836._M_local_buf
  # DEBUG __c2 => D#9
  MEM[(char_type &)&D.48470 + 16] = _339;
  goto <bb 120>;

  <bb 119>:
  # _699 = PHI <&D.48470.D.13836._M_local_buf(117), _336(116)>
  # DEBUG D#5 => &D.48470
  # DEBUG this => D#5
  # DEBUG __p => _699
  # DEBUG __k1 => _324
  # DEBUG __k2 => _322
  # DEBUG __d => _699
  # DEBUG __s => _324
  # DEBUG __n => __dnew.47_335
  # DEBUG __s1 => _699
  # DEBUG __s2 => _324
  # DEBUG __n => __dnew.47_335
  __builtin_memcpy (_699, _324, __dnew.47_335);
  pretmp_112 = __dnew;
  pretmp_136 = MEM[(char * *)&D.48470];

  <bb 120>:
  # prephitmp_113 = PHI <__dnew.47_335(118), pretmp_112(119)>
  # prephitmp_137 = PHI <&D.48470.D.13836._M_local_buf(118), pretmp_136(119)>
  # DEBUG D#359 => __dnew
  # DEBUG this => &D.48470
  # DEBUG __n => D#359
  # DEBUG D#8 => &D.48470
  # DEBUG __length => D#359
  # DEBUG this => D#8
  MEM[(size_type *)&D.48470 + 8B] = prephitmp_113;
  # DEBUG D#5 => &D.48470
  # DEBUG this => D#5
  _342 = prephitmp_137 + prephitmp_113;
  # DEBUG __c1 => _342
  # DEBUG __c2 => D#9
  MEM[(char_type &)_342] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.39738
  # DEBUG __str => &D.48470
  # DEBUG this => &D.39738
  # DEBUG __str => &D.48470
  std::__cxx11::basic_string<char>::_M_assign (&D.39738, &D.48470);

  <bb 121>:
  # DEBUG this => &D.48470
  # DEBUG this => &D.48470
  # DEBUG this => &D.48470
  _325 = MEM[(char * *)&D.48470];
  # DEBUG D#5 => &D.48470
  # DEBUG this => D#5
  # DEBUG this => &D.48470
  if (&D.48470.D.13836._M_local_buf != _325)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  # DEBUG D#73 => D.48470.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.48470
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.48470
  # DEBUG this => D#5
  # DEBUG this => &D.48470
  # DEBUG D#70 => &D.48470._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _325
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _325
  # DEBUG this => D#64
  # DEBUG D.48429 => D#65
  operator delete (_325);

  <bb 123>:
  # DEBUG D#74 => &D.48470._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.48470 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 150>;

  <bb 124>:
  # DEBUG this => D#20
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  # DEBUG D#228 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG D#3 => D#228
  # DEBUG this => D#3
  # DEBUG D#229 => &MEM[(const struct basic_stringbuf *)&arb_name + 8B].D.38203
  _326 = MEM[(char_type * *)&arb_name + 40B];
  # DEBUG D#4 => D#229
  # DEBUG this => D#4
  # DEBUG this => &D.48469
  # DEBUG __beg => _326
  # DEBUG __end => _323
  # DEBUG __a => NULL
  # DEBUG this => &D.48469
  # DEBUG D#223 => &D.48469._M_dataplus
  # DEBUG this => D#223
  # DEBUG __dat => &D.48469.D.13836._M_local_buf
  # DEBUG __a => D#62
  # DEBUG D#61 => D#62
  # DEBUG D#59 => D#223
  # DEBUG D#60 => D#61
  # DEBUG this => D#59
  # DEBUG __a => D#60
  # DEBUG D#58 => D#60
  # DEBUG D#57 => D#59
  # DEBUG this => D#57
  # DEBUG D.44428 => D#58
  MEM[(struct _Alloc_hider *)&D.48469]._M_p = &D.48469.D.13836._M_local_buf;
  # DEBUG this => &D.48469
  # DEBUG __beg => _326
  # DEBUG __end => _323
  # DEBUG this => &D.48469
  # DEBUG __beg => _326
  # DEBUG __end => _323
  # DEBUG this => &D.48469
  # DEBUG __beg => _326
  # DEBUG __end => _323
  # DEBUG __ptr => _326
  _149 = _323 != 0B;
  _688 = _326 == 0B;
  _683 = _149 & _688;
  if (_683 != 0)
    goto <bb 204>;
  else
    goto <bb 206>;

  <bb 125>:
  _348 = std::__cxx11::basic_string<char>::_M_create (&D.48469, &__dnew, 0);
  goto <bb 127>;

<L61>:
  goto <bb 146> (<L36>);

  <bb 127>:
  # DEBUG D#6 => &D.48469
  # DEBUG __p => _348
  # DEBUG this => D#6
  MEM[(char * *)&D.48469] = _348;
  __dnew.48_349 = __dnew;
  # DEBUG D#7 => &D.48469
  # DEBUG __capacity => __dnew.48_349
  # DEBUG this => D#7
  MEM[(size_type *)&D.48469 + 16B] = __dnew.48_349;
  # DEBUG D#5 => &D.48469
  # DEBUG this => D#5
  # DEBUG __p => _348
  # DEBUG __k1 => _326
  # DEBUG __k2 => _323
  # DEBUG __d => _348
  # DEBUG __s => _326
  # DEBUG __n => __dnew.47_347
  goto <bb 130>;

  <bb 128>:
  # DEBUG D#5 => &D.48469
  # DEBUG this => D#5
  # DEBUG __p => &D.48469.D.13836._M_local_buf
  # DEBUG __k1 => _326
  # DEBUG __k2 => _323
  # DEBUG __d => &D.48469.D.13836._M_local_buf
  # DEBUG __s => _326
  # DEBUG __n => __dnew.47_347
  if (__dnew.47_347 == 1)
    goto <bb 129>;
  else
    goto <bb 130>;

  <bb 129>:
  _351 = MEM[(const char_type &)_326];
  # DEBUG D#9 => _326
  # DEBUG __c1 => &D.48469.D.13836._M_local_buf
  # DEBUG __c2 => D#9
  MEM[(char_type &)&D.48469 + 16] = _351;
  goto <bb 131>;

  <bb 130>:
  # _685 = PHI <&D.48469.D.13836._M_local_buf(128), _348(127)>
  # DEBUG D#5 => &D.48469
  # DEBUG this => D#5
  # DEBUG __p => _685
  # DEBUG __k1 => _326
  # DEBUG __k2 => _323
  # DEBUG __d => _685
  # DEBUG __s => _326
  # DEBUG __n => __dnew.47_347
  # DEBUG __s1 => _685
  # DEBUG __s2 => _326
  # DEBUG __n => __dnew.47_347
  __builtin_memcpy (_685, _326, __dnew.47_347);
  pretmp_528 = __dnew;
  pretmp_110 = MEM[(char * *)&D.48469];

  <bb 131>:
  # prephitmp_534 = PHI <__dnew.47_347(129), pretmp_528(130)>
  # prephitmp_111 = PHI <&D.48469.D.13836._M_local_buf(129), pretmp_110(130)>
  # DEBUG D#360 => __dnew
  # DEBUG this => &D.48469
  # DEBUG __n => D#360
  # DEBUG D#8 => &D.48469
  # DEBUG __length => D#360
  # DEBUG this => D#8
  MEM[(size_type *)&D.48469 + 8B] = prephitmp_534;
  # DEBUG D#5 => &D.48469
  # DEBUG this => D#5
  _354 = prephitmp_111 + prephitmp_534;
  # DEBUG __c1 => _354
  # DEBUG __c2 => D#9
  MEM[(char_type &)_354] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.39738
  # DEBUG __str => &D.48469
  # DEBUG this => &D.39738
  # DEBUG __str => &D.48469
  std::__cxx11::basic_string<char>::_M_assign (&D.39738, &D.48469);

  <bb 132>:
  # DEBUG this => &D.48469
  # DEBUG this => &D.48469
  # DEBUG this => &D.48469
  _327 = MEM[(char * *)&D.48469];
  # DEBUG D#5 => &D.48469
  # DEBUG this => D#5
  # DEBUG this => &D.48469
  if (&D.48469.D.13836._M_local_buf != _327)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  # DEBUG D#73 => D.48469.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.48469
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.48469
  # DEBUG this => D#5
  # DEBUG this => &D.48469
  # DEBUG D#70 => &D.48469._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _327
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _327
  # DEBUG this => D#64
  # DEBUG D.48392 => D#65
  operator delete (_327);

  <bb 134>:
  # DEBUG D#74 => &D.48469._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.48469 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 150>;

  <bb 135>:
  # DEBUG this => &D.39738
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => &D.39738
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&arb_name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.39738, &MEM[(const struct basic_stringbuf *)&arb_name + 8B]._M_string);
  goto <bb 150>;

<L62>:
  goto <bb 146> (<L36>);

<L34>:
  # DEBUG this => &D.48470
  # DEBUG this => &D.48470
  # DEBUG this => &D.48470
  _329 = MEM[(char * *)&D.48470];
  # DEBUG D#5 => &D.48470
  # DEBUG this => D#5
  # DEBUG this => &D.48470
  if (&D.48470.D.13836._M_local_buf != _329)
    goto <bb 138>;
  else
    goto <bb 139>;

  <bb 138>:
  # DEBUG D#73 => D.48470.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.48470
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.48470
  # DEBUG this => D#5
  # DEBUG this => &D.48470
  # DEBUG D#70 => &D.48470._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _329
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _329
  # DEBUG this => D#64
  # DEBUG D.48373 => D#65
  operator delete (_329);

  <bb 139>:
  # DEBUG D#74 => &D.48470._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.48470 ={v} {CLOBBER};
  resx 50

<L63>:
  goto <bb 146> (<L36>);

<L35>:
  # DEBUG this => &D.48469
  # DEBUG this => &D.48469
  # DEBUG this => &D.48469
  _330 = MEM[(char * *)&D.48469];
  # DEBUG D#5 => &D.48469
  # DEBUG this => D#5
  # DEBUG this => &D.48469
  if (&D.48469.D.13836._M_local_buf != _330)
    goto <bb 142>;
  else
    goto <bb 143>;

  <bb 142>:
  # DEBUG D#73 => D.48469.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.48469
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.48469
  # DEBUG this => D#5
  # DEBUG this => &D.48469
  # DEBUG D#70 => &D.48469._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _330
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _330
  # DEBUG this => D#64
  # DEBUG D.48357 => D#65
  operator delete (_330);

  <bb 143>:
  # DEBUG D#74 => &D.48469._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.48469 ={v} {CLOBBER};
  resx 49

<L64>:
  goto <bb 146> (<L36>);

<L60>:

<L36>:
  # DEBUG this => &D.39738
  # DEBUG this => &D.39738
  # DEBUG this => &D.39738
  _331 = MEM[(char * *)&D.39738];
  # DEBUG D#5 => &D.39738
  # DEBUG this => D#5
  # DEBUG this => &D.39738
  if (&D.39738.D.13836._M_local_buf != _331)
    goto <bb 147>;
  else
    goto <bb 148>;

  <bb 147>:
  # DEBUG D#73 => D.39738.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.39738
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.39738
  # DEBUG this => D#5
  # DEBUG this => &D.39738
  # DEBUG D#70 => &D.39738._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _331
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _331
  # DEBUG this => D#64
  # DEBUG D.48346 => D#65
  operator delete (_331);

  <bb 148>:
  # DEBUG D#74 => &D.39738._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  resx 48

<L65>:
  goto <bb 179> (<L16>);

  <bb 150>:
  _58 = Arbiter::NewArbiter (_9, &D.39738, arb_type_30(D), inputs_13(D));

  <bb 151>:
  *_76 = _58;
  # DEBUG this => &D.39738
  # DEBUG this => &D.39738
  # DEBUG this => &D.39738
  _77 = MEM[(char * *)&D.39738];
  # DEBUG D#5 => &D.39738
  # DEBUG this => D#5
  # DEBUG this => &D.39738
  if (&D.39738.D.13836._M_local_buf != _77)
    goto <bb 152>;
  else
    goto <bb 153>;

  <bb 152>:
  # DEBUG D#73 => D.39738.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.39738
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.39738
  # DEBUG this => D#5
  # DEBUG this => &D.39738
  # DEBUG D#70 => &D.39738._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _77
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _77
  # DEBUG this => D#64
  # DEBUG D.46936 => D#65
  operator delete (_77);

  <bb 153>:
  # DEBUG D#74 => &D.39738._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.39738 ={v} {CLOBBER};
  # DEBUG this => &arb_name
  arb_name.D.38353._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&arb_name + 112B].D.26019._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &arb_name._M_stringbuf
  MEM[(struct basic_stringbuf *)&arb_name + 8B].D.38203._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#76 => &MEM[(struct basic_stringbuf *)&arb_name + 8B]._M_string
  # DEBUG this => D#76
  # DEBUG this => D#76
  # DEBUG this => D#76
  _62 = MEM[(char * *)&arb_name + 80B];
  # DEBUG D#5 => D#76
  # DEBUG this => D#5
  # DEBUG this => D#76
  if (&MEM[(const struct basic_string *)&arb_name + 80B].D.13836._M_local_buf != _62)
    goto <bb 154>;
  else
    goto <bb 155>;

  <bb 154>:
  # DEBUG D#73 => MEM[(struct basic_string *)D#76].D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => D#76
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => D#76
  # DEBUG this => D#5
  # DEBUG this => D#76
  # DEBUG D#70 => &MEM[(struct basic_string *)D#76]._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _62
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _62
  # DEBUG this => D#64
  # DEBUG D.48545 => D#65
  operator delete (_62);

  <bb 155>:
  # DEBUG D#74 => &MEM[(struct basic_string *)D#76]._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  MEM[(struct  &)&arb_name + 80] ={v} {CLOBBER};
  # DEBUG D#75 => &MEM[(struct basic_stringbuf *)&arb_name + 8B].D.38203
  # DEBUG this => D#75
  MEM[(struct basic_streambuf *)&arb_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&arb_name + 8B]._M_buf_locale);
  MEM[(struct  &)&arb_name + 8] ={v} {CLOBBER};
  # DEBUG this => &arb_name.D.38353
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.40_357 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  _358 = MEM[(long int *)iftmp.40_357 + -24B];
  iftmp.41_359 = (sizetype) _358;
  _360 = &arb_name.D.38353 + iftmp.41_359;
  iftmp.42_361 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _360->D.26019._vptr.ios_base = iftmp.42_361;
  MEM[(struct  &)&arb_name] ={v} {CLOBBER};
  # DEBUG D#77 => &arb_name.D.38356
  # DEBUG this => D#77
  MEM[(struct basic_ios *)&arb_name + 112B].D.26019._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&arb_name + 112B].D.26019);
  goto <bb 157>;

<L66>:
  goto <bb 182> (<L18>);

  <bb 157>:
  arb_name ={v} {CLOBBER};
  i_64 = i_701 + 1;
  # DEBUG i => i_64
  # DEBUG i => i_64
  if (outputs_14(D) <= i_64)
    goto <bb 85>;
  else
    goto <bb 158>;

  <bb 158>:
  goto <bb 87>;

<L6>:
  # DEBUG this => &D.39730
  # DEBUG this => &D.39730
  # DEBUG this => &D.39730
  _60 = MEM[(char * *)&D.39730];
  # DEBUG D#5 => &D.39730
  # DEBUG this => D#5
  # DEBUG this => &D.39730
  if (&D.39730.D.13836._M_local_buf != _60)
    goto <bb 160>;
  else
    goto <bb 161>;

  <bb 160>:
  # DEBUG D#73 => D.39730.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.39730
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.39730
  # DEBUG this => D#5
  # DEBUG this => &D.39730
  # DEBUG D#70 => &D.39730._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _60
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _60
  # DEBUG this => D#64
  # DEBUG D.46951 => D#65
  operator delete (_60);

  <bb 161>:
  # DEBUG D#74 => &D.39730._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.39730 ={v} {CLOBBER};
  resx 6

<L67>:
  goto <bb 182> (<L18>);

<L9>:
  # DEBUG this => &D.39732
  # DEBUG this => &D.39732
  # DEBUG this => &D.39732
  _42 = MEM[(char * *)&D.39732];
  # DEBUG D#5 => &D.39732
  # DEBUG this => D#5
  # DEBUG this => &D.39732
  if (&D.39732.D.13836._M_local_buf != _42)
    goto <bb 164>;
  else
    goto <bb 165>;

  <bb 164>:
  # DEBUG D#73 => D.39732.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.39732
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.39732
  # DEBUG this => D#5
  # DEBUG this => &D.39732
  # DEBUG D#70 => &D.39732._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _42
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _42
  # DEBUG this => D#64
  # DEBUG D.46968 => D#65
  operator delete (_42);

  <bb 165>:
  # DEBUG D#74 => &D.39732._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.39732 ={v} {CLOBBER};
  resx 13

<L68>:
  goto <bb 168> (<L10>);

<L44>:

<L10>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&arb_name);
  resx 12

<L69>:
  goto <bb 182> (<L18>);

<L12>:
  # DEBUG this => &D.39736
  # DEBUG this => &D.39736
  # DEBUG this => &D.39736
  _38 = MEM[(char * *)&D.39736];
  # DEBUG D#5 => &D.39736
  # DEBUG this => D#5
  # DEBUG this => &D.39736
  if (&D.39736.D.13836._M_local_buf != _38)
    goto <bb 171>;
  else
    goto <bb 172>;

  <bb 171>:
  # DEBUG D#73 => D.39736.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.39736
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.39736
  # DEBUG this => D#5
  # DEBUG this => &D.39736
  # DEBUG D#70 => &D.39736._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _38
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _38
  # DEBUG this => D#64
  # DEBUG D.46983 => D#65
  operator delete (_38);

  <bb 172>:
  # DEBUG D#74 => &D.39736._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.39736 ={v} {CLOBBER};
  resx 19

<L70>:
  goto <bb 182> (<L18>);

<L15>:
  # DEBUG this => &D.39738
  # DEBUG this => &D.39738
  # DEBUG this => &D.39738
  _69 = MEM[(char * *)&D.39738];
  # DEBUG D#5 => &D.39738
  # DEBUG this => D#5
  # DEBUG this => &D.39738
  if (&D.39738.D.13836._M_local_buf != _69)
    goto <bb 175>;
  else
    goto <bb 176>;

  <bb 175>:
  # DEBUG D#73 => D.39738.D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => &D.39738
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => &D.39738
  # DEBUG this => D#5
  # DEBUG this => &D.39738
  # DEBUG D#70 => &D.39738._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _69
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _69
  # DEBUG this => D#64
  # DEBUG D.47000 => D#65
  operator delete (_69);

  <bb 176>:
  # DEBUG D#74 => &D.39738._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  D.39738 ={v} {CLOBBER};
  resx 26

<L71>:
  goto <bb 179> (<L16>);

<L59>:

<L16>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&arb_name);
  resx 25

<L72>:
  goto <bb 182> (<L18>);

<L37>:

<L18>:
  arb_name ={v} {CLOBBER};
  arb_name ={v} {CLOBBER};
  # DEBUG D#298 => &this_8(D)->_output_arb
  # DEBUG this => D#298
  # DEBUG D#160 => &D#298->D.37666
  # DEBUG this => D#160
  # DEBUG D#163 => D#298->D.37666._M_impl._M_finish
  # DEBUG D#162 => D#298->D.37666._M_impl._M_start
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D.44949 => NULL
  # DEBUG D#50 => D#162
  # DEBUG D#51 => D#163
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.44387 => D#46
  # DEBUG D.44386 => D#47
  # DEBUG D#161 => &D#298->D.37666
  # DEBUG this => D#161
  # DEBUG D#159 => D#161->_M_impl._M_end_of_storage
  # DEBUG D#158 => (long int) D#159
  _65 = MEM[(struct _Vector_base *)this_8(D) + 328B]._M_impl._M_start;
  # DEBUG D#157 => (long int) _65
  # DEBUG D#156 => D#158 - D#157
  # DEBUG D#155 => D#156 /[ex] 8
  # DEBUG D#154 => (long unsigned int) D#155
  # DEBUG this => D#161
  # DEBUG __p => _65
  # DEBUG __n => D#154
  if (_65 != 0B)
    goto <bb 183>;
  else
    goto <bb 184>;

  <bb 183>:
  # DEBUG D#152 => &D#161->_M_impl
  # DEBUG D#150 => D#152
  # DEBUG D#151 => D#154
  # DEBUG __p => _65
  # DEBUG __a => D#150
  # DEBUG __n => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG __p => _65
  # DEBUG this => D#146
  # DEBUG D.47017 => D#147
  operator delete (_65);

  <bb 184>:
  # DEBUG D#153 => &D#161->_M_impl
  # DEBUG this => D#153
  # DEBUG this => D#153
  # DEBUG this => D#153
  MEM[(struct  &)this_8(D) + 328] ={v} {CLOBBER};
  resx 3

<L19>:
  # DEBUG D#297 => &this_8(D)->_input_arb
  # DEBUG this => D#297
  # DEBUG D#160 => &D#297->D.37666
  # DEBUG this => D#160
  # DEBUG D#163 => D#297->D.37666._M_impl._M_finish
  # DEBUG D#162 => D#297->D.37666._M_impl._M_start
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D.44949 => NULL
  # DEBUG D#50 => D#162
  # DEBUG D#51 => D#163
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.44387 => D#46
  # DEBUG D.44386 => D#47
  # DEBUG D#161 => &D#297->D.37666
  # DEBUG this => D#161
  # DEBUG D#159 => D#161->_M_impl._M_end_of_storage
  # DEBUG D#158 => (long int) D#159
  _71 = MEM[(struct _Vector_base *)this_8(D) + 304B]._M_impl._M_start;
  # DEBUG D#157 => (long int) _71
  # DEBUG D#156 => D#158 - D#157
  # DEBUG D#155 => D#156 /[ex] 8
  # DEBUG D#154 => (long unsigned int) D#155
  # DEBUG this => D#161
  # DEBUG __p => _71
  # DEBUG __n => D#154
  if (_71 != 0B)
    goto <bb 186>;
  else
    goto <bb 187>;

  <bb 186>:
  # DEBUG D#152 => &D#161->_M_impl
  # DEBUG D#150 => D#152
  # DEBUG D#151 => D#154
  # DEBUG __p => _71
  # DEBUG __a => D#150
  # DEBUG __n => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG __p => _71
  # DEBUG this => D#146
  # DEBUG D.47032 => D#147
  operator delete (_71);

  <bb 187>:
  # DEBUG D#153 => &D#161->_M_impl
  # DEBUG this => D#153
  # DEBUG this => D#153
  # DEBUG this => D#153
  MEM[(struct  &)this_8(D) + 304] ={v} {CLOBBER};
  resx 2

<L20>:
  SparseAllocator::~SparseAllocator (_9);
  resx 1

  <bb 189>:
  # prephitmp_673 = PHI <prephitmp_139(8)>
  # prephitmp_639 = PHI <prephitmp_143(8)>
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L73>:
  goto <bb 20> (<L25>);

  <bb 191>:
  # DEBUG __first => _189
  # DEBUG __last => _192
  # DEBUG D#219 => &__first
  # DEBUG D.45576 => D#219
  # DEBUG __first => _189
  # DEBUG __last => _192
  __dnew = _188;
  if (_188 > 15)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 192>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L74>:
  goto <bb 66> (<L28>);

  <bb 194>:
  # DEBUG __first => _215
  # DEBUG __last => _213
  # DEBUG D#219 => &__first
  # DEBUG D.45576 => D#219
  # DEBUG __first => _215
  # DEBUG __last => _213
  __last.50_223 = (long int) _213;
  __first.51_224 = (long int) _215;
  _225 = __last.50_223 - __first.51_224;
  __dnew.47_226 = (long unsigned int) _225;
  __dnew = __dnew.47_226;
  if (__dnew.47_226 > 15)
    goto <bb 35>;
  else
    goto <bb 37>;

  <bb 195>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L75>:
  goto <bb 66> (<L28>);

  <bb 197>:
  # DEBUG __first => _217
  # DEBUG __last => _214
  # DEBUG D#219 => &__first
  # DEBUG D.45576 => D#219
  # DEBUG __first => _217
  # DEBUG __last => _214
  __last.50_235 = (long int) _214;
  __first.51_236 = (long int) _217;
  _237 = __last.50_235 - __first.51_236;
  __dnew.47_238 = (long unsigned int) _237;
  __dnew = __dnew.47_238;
  if (__dnew.47_238 > 15)
    goto <bb 45>;
  else
    goto <bb 48>;

  <bb 198>:
  # DEBUG __first => _298
  # DEBUG __last => _301
  # DEBUG D#219 => &__first
  # DEBUG D.45576 => D#219
  # DEBUG __first => _298
  # DEBUG __last => _301
  __dnew = _297;
  if (_297 > 15)
    goto <bb 89>;
  else
    goto <bb 91>;

  <bb 199>:
  # prephitmp_615 = PHI <prephitmp_475(88)>
  # prephitmp_553 = PHI <prephitmp_497(88)>
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L76>:
  goto <bb 100> (<L33>);

  <bb 201>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L77>:
  goto <bb 146> (<L36>);

  <bb 203>:
  # DEBUG __first => _324
  # DEBUG __last => _322
  # DEBUG D#219 => &__first
  # DEBUG D.45576 => D#219
  # DEBUG __first => _324
  # DEBUG __last => _322
  __last.50_332 = (long int) _322;
  __first.51_333 = (long int) _324;
  _334 = __last.50_332 - __first.51_333;
  __dnew.47_335 = (long unsigned int) _334;
  __dnew = __dnew.47_335;
  if (__dnew.47_335 > 15)
    goto <bb 115>;
  else
    goto <bb 117>;

  <bb 204>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L78>:
  goto <bb 146> (<L36>);

  <bb 206>:
  # DEBUG __first => _326
  # DEBUG __last => _323
  # DEBUG D#219 => &__first
  # DEBUG D.45576 => D#219
  # DEBUG __first => _326
  # DEBUG __last => _323
  __last.50_344 = (long int) _323;
  __first.51_345 = (long int) _326;
  _346 = __last.50_344 - __first.51_345;
  __dnew.47_347 = (long unsigned int) _346;
  __dnew = __dnew.47_347;
  if (__dnew.47_347 > 15)
    goto <bb 125>;
  else
    goto <bb 128>;

}



;; Function virtual SparseAllocator::~SparseAllocator() (_ZN15SparseAllocatorD0Ev, funcdef_no=1751, decl_uid=36890, cgraph_uid=420, symbol_order=421)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
virtual SparseAllocator::~SparseAllocator() (struct SparseAllocator * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct map * __first;
  struct map * __first;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  int * _3;
  struct _Rep_type * _7;
  struct _Rep_type * _9;
  int * _12;
  struct _Rb_tree_node_base * _15;
  struct _Rb_tree_node_base * _19;
  struct map * _22;
  struct _Rep_type * _25;
  struct map * _29;
  struct _Rep_type * _32;
  struct _Rb_tree_node_base * _37;
  struct _Rb_tree_node_base * _41;
  struct Module * * _44;
  char * const _45;
  const char * _46;
  char * const _47;
  const char * _48;
  struct map * prephitmp_61;
  struct map * pretmp_74;
  struct map * prephitmp_75;
  struct map * pretmp_77;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV15SparseAllocator + 16B];
  # DEBUG D#386 => &this_2(D)->_out_req
  # DEBUG this => D#386
  # DEBUG D#291 => &D#386->D.36830
  # DEBUG this => D#291
  _29 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_finish;
  __first_30 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_30
  # DEBUG __last => _29
  # DEBUG __first => __first_30
  if (_29 == __first_30)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_132 = PHI <__first_30(3), __first_34(6)>
  # DEBUG __first => __first_132
  # DEBUG __r => __first_132
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _32 = &__first_132->_M_t;
  # DEBUG this => _32
  __x_33 = MEM[(struct _Rb_tree_node_base * *)__first_132 + 16B];
  # DEBUG D#204 => _32
  # DEBUG this => D#204
  # DEBUG this => _32
  # DEBUG __x => __x_33
  # DEBUG __x => __x_33
  if (__x_33 == 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  # DEBUG D#289 => &MEM[(struct _Rb_tree *)_32]._M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)__first_132] ={v} {CLOBBER};
  __first_34 = __first_132 + 48;
  # DEBUG __first => __first_34
  # DEBUG __first => __first_34
  if (_29 == __first_34)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  <bb 7>:

  <bb 8>:
  # __x_148 = PHI <__x_33(7), __x_38(9)>
  # DEBUG __x => __x_148
  _37 = MEM[(struct _Rb_tree_node_base * *)__x_148 + 24B];
  # DEBUG D#232 => __x_148
  # DEBUG __x => D#232
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_32, _37);
  __x_38 = MEM[(struct _Rb_tree_node_base * *)__x_148 + 16B];
  # DEBUG D#233 => __x_148
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => _32
  # DEBUG __p => __x_148
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_148
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_148
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_148
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_148
  # DEBUG this => D#246
  # DEBUG D.48791 => D#247
  operator delete (__x_148);
  # DEBUG __x => __x_38
  # DEBUG __x => __x_38
  if (__x_38 == 0B)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  pretmp_74 = MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start;

  <bb 11>:
  # prephitmp_75 = PHI <pretmp_74(10), __first_30(2)>
  # DEBUG D#292 => &D#386->D.36830
  # DEBUG this => D#292
  # DEBUG D#143 => D#292->_M_impl._M_end_of_storage
  # DEBUG D#142 => (long int) D#143
  # DEBUG D#388 => MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start
  # DEBUG D#141 => (long int) D#388
  # DEBUG D#140 => D#142 - D#141
  # DEBUG D#139 => D#140 /[ex] 48
  # DEBUG D#136 => D#292
  # DEBUG D#137 => (long unsigned int) D#139
  # DEBUG __p => D#388
  # DEBUG this => D#136
  # DEBUG __n => D#137
  # DEBUG D#135 => D#137
  # DEBUG D#134 => D#136
  if (prephitmp_75 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#133 => &D#134->_M_impl
  # DEBUG D#131 => D#133
  # DEBUG D#132 => D#135
  # DEBUG __p => D#388
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => D#388
  # DEBUG this => D#127
  # DEBUG D.48775 => D#128
  operator delete (prephitmp_75);

  <bb 13>:
  # DEBUG D#138 => &D#292->_M_impl
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG this => D#138
  MEM[(struct  &)this_2(D) + 280] ={v} {CLOBBER};
  # DEBUG D#385 => &this_2(D)->_in_req
  # DEBUG this => D#385
  # DEBUG D#291 => &D#385->D.36830
  # DEBUG this => D#291
  _22 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_finish;
  __first_23 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_23
  # DEBUG __last => _22
  # DEBUG __first => __first_23
  if (_22 == __first_23)
    goto <bb 22>;
  else
    goto <bb 14>;

  <bb 14>:

  <bb 15>:
  # __first_141 = PHI <__first_23(14), __first_27(17)>
  # DEBUG __first => __first_141
  # DEBUG __r => __first_141
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _25 = &__first_141->_M_t;
  # DEBUG this => _25
  __x_26 = MEM[(struct _Rb_tree_node_base * *)__first_141 + 16B];
  # DEBUG D#204 => _25
  # DEBUG this => D#204
  # DEBUG this => _25
  # DEBUG __x => __x_26
  # DEBUG __x => __x_26
  if (__x_26 == 0B)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 16>:
  # DEBUG D#289 => &MEM[(struct _Rb_tree *)_25]._M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)__first_141] ={v} {CLOBBER};
  __first_27 = __first_141 + 48;
  # DEBUG __first => __first_27
  # DEBUG __first => __first_27
  if (_22 == __first_27)
    goto <bb 21>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 15>;

  <bb 18>:

  <bb 19>:
  # __x_151 = PHI <__x_26(18), __x_42(20)>
  # DEBUG __x => __x_151
  _41 = MEM[(struct _Rb_tree_node_base * *)__x_151 + 24B];
  # DEBUG D#232 => __x_151
  # DEBUG __x => D#232
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_25, _41);
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_151 + 16B];
  # DEBUG D#233 => __x_151
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => _25
  # DEBUG __p => __x_151
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_151
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_151
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_151
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_151
  # DEBUG this => D#246
  # DEBUG D.48804 => D#247
  operator delete (__x_151);
  # DEBUG __x => __x_42
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 19>;

  <bb 21>:
  pretmp_77 = MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start;

  <bb 22>:
  # prephitmp_61 = PHI <pretmp_77(21), __first_23(13)>
  # DEBUG D#292 => &D#385->D.36830
  # DEBUG this => D#292
  # DEBUG D#143 => D#292->_M_impl._M_end_of_storage
  # DEBUG D#142 => (long int) D#143
  # DEBUG D#387 => MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start
  # DEBUG D#141 => (long int) D#387
  # DEBUG D#140 => D#142 - D#141
  # DEBUG D#139 => D#140 /[ex] 48
  # DEBUG D#136 => D#292
  # DEBUG D#137 => (long unsigned int) D#139
  # DEBUG __p => D#387
  # DEBUG this => D#136
  # DEBUG __n => D#137
  # DEBUG D#135 => D#137
  # DEBUG D#134 => D#136
  if (prephitmp_61 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#133 => &D#134->_M_impl
  # DEBUG D#131 => D#133
  # DEBUG D#132 => D#135
  # DEBUG __p => D#387
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => D#387
  # DEBUG this => D#127
  # DEBUG D.48746 => D#128
  operator delete (prephitmp_61);

  <bb 24>:
  # DEBUG D#138 => &D#292->_M_impl
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG this => D#138
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  # DEBUG D#294 => &this_2(D)->_out_occ
  # DEBUG this => D#294
  _7 = &MEM[(struct set *)this_2(D) + 208B]._M_t;
  # DEBUG this => _7
  __x_8 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 224B];
  # DEBUG D#17 => _7
  # DEBUG this => D#17
  # DEBUG this => _7
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#203 => &MEM[(struct _Rb_tree *)_7]._M_impl
  # DEBUG this => D#203
  # DEBUG this => D#203
  # DEBUG this => D#203
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  # DEBUG D#293 => &this_2(D)->_in_occ
  # DEBUG this => D#293
  _9 = &MEM[(struct set *)this_2(D) + 160B]._M_t;
  # DEBUG this => _9
  __x_10 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 176B];
  # DEBUG D#17 => _9
  # DEBUG this => D#17
  # DEBUG this => _9
  # DEBUG __x => __x_10
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 26>:

  <bb 27>:
  # __x_142 = PHI <__x_8(26), __x_20(28)>
  # DEBUG __x => __x_142
  _19 = MEM[(struct _Rb_tree_node_base * *)__x_142 + 24B];
  # DEBUG D#21 => __x_142
  # DEBUG __x => D#21
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_7, _19);
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_142 + 16B];
  # DEBUG D#22 => __x_142
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => _7
  # DEBUG __p => __x_142
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_142
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_142
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_142
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_142
  # DEBUG this => D#165
  # DEBUG D.48720 => D#166
  operator delete (__x_142);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 25>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 27>;

  <bb 29>:
  # DEBUG D#203 => &MEM[(struct _Rb_tree *)_9]._M_impl
  # DEBUG this => D#203
  # DEBUG this => D#203
  # DEBUG this => D#203
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#384 => &this_2(D)->D.36911
  # DEBUG this => D#384
  MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
  # DEBUG D#124 => &D#384->_outmatch
  # DEBUG this => D#124
  # DEBUG D#119 => &D#124->D.34311
  # DEBUG this => D#119
  # DEBUG D#122 => D#124->D.34311._M_impl._M_finish
  # DEBUG D#121 => D#124->D.34311._M_impl._M_start
  # DEBUG D#43 => D#121
  # DEBUG D#44 => D#122
  # DEBUG __first => D#43
  # DEBUG __last => D#44
  # DEBUG D.44770 => D#45
  # DEBUG D#42 => D#44
  # DEBUG D#41 => D#43
  # DEBUG D#39 => D#41
  # DEBUG D#40 => D#42
  # DEBUG __first => D#39
  # DEBUG __last => D#40
  # DEBUG D#38 => D#40
  # DEBUG D#37 => D#39
  # DEBUG D#35 => D#37
  # DEBUG D#36 => D#38
  # DEBUG D.44343 => D#35
  # DEBUG D.44342 => D#36
  # DEBUG D#120 => &D#124->D.34311
  # DEBUG this => D#120
  # DEBUG D#118 => D#120->_M_impl._M_end_of_storage
  # DEBUG D#117 => (long int) D#118
  _3 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
  # DEBUG D#116 => (long int) _3
  # DEBUG D#115 => D#117 - D#116
  # DEBUG D#114 => D#115 /[ex] 4
  # DEBUG D#111 => D#120
  # DEBUG D#112 => (long unsigned int) D#114
  # DEBUG __p => _3
  # DEBUG this => D#111
  # DEBUG __n => D#112
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  if (_3 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 30>:

  <bb 31>:
  # __x_144 = PHI <__x_10(30), __x_16(32)>
  # DEBUG __x => __x_144
  _15 = MEM[(struct _Rb_tree_node_base * *)__x_144 + 24B];
  # DEBUG D#21 => __x_144
  # DEBUG __x => D#21
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_9, _15);
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_144 + 16B];
  # DEBUG D#22 => __x_144
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => _9
  # DEBUG __p => __x_144
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_144
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_144
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_144
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_144
  # DEBUG this => D#165
  # DEBUG D.48707 => D#166
  operator delete (__x_144);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 29>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 31>;

  <bb 33>:
  # DEBUG D#108 => &D#109->_M_impl
  # DEBUG D#106 => D#108
  # DEBUG D#107 => D#110
  # DEBUG __p => _3
  # DEBUG __a => D#106
  # DEBUG __n => D#107
  # DEBUG D#105 => D#107
  # DEBUG D#104 => D#106
  # DEBUG D#102 => D#104
  # DEBUG D#103 => D#105
  # DEBUG __p => _3
  # DEBUG this => D#102
  # DEBUG D.48676 => D#103
  operator delete (_3);

  <bb 34>:
  # DEBUG D#113 => &D#120->_M_impl
  # DEBUG this => D#113
  # DEBUG this => D#113
  # DEBUG this => D#113
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#123 => &D#384->_inmatch
  # DEBUG this => D#123
  # DEBUG D#119 => &D#123->D.34311
  # DEBUG this => D#119
  # DEBUG D#122 => D#123->D.34311._M_impl._M_finish
  # DEBUG D#121 => D#123->D.34311._M_impl._M_start
  # DEBUG D#43 => D#121
  # DEBUG D#44 => D#122
  # DEBUG __first => D#43
  # DEBUG __last => D#44
  # DEBUG D.44770 => D#45
  # DEBUG D#42 => D#44
  # DEBUG D#41 => D#43
  # DEBUG D#39 => D#41
  # DEBUG D#40 => D#42
  # DEBUG __first => D#39
  # DEBUG __last => D#40
  # DEBUG D#38 => D#40
  # DEBUG D#37 => D#39
  # DEBUG D#35 => D#37
  # DEBUG D#36 => D#38
  # DEBUG D.44343 => D#35
  # DEBUG D.44342 => D#36
  # DEBUG D#120 => &D#123->D.34311
  # DEBUG this => D#120
  # DEBUG D#118 => D#120->_M_impl._M_end_of_storage
  # DEBUG D#117 => (long int) D#118
  _12 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
  # DEBUG D#116 => (long int) _12
  # DEBUG D#115 => D#117 - D#116
  # DEBUG D#114 => D#115 /[ex] 4
  # DEBUG D#111 => D#120
  # DEBUG D#112 => (long unsigned int) D#114
  # DEBUG __p => _12
  # DEBUG this => D#111
  # DEBUG __n => D#112
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  if (_12 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG D#108 => &D#109->_M_impl
  # DEBUG D#106 => D#108
  # DEBUG D#107 => D#110
  # DEBUG __p => _12
  # DEBUG __a => D#106
  # DEBUG __n => D#107
  # DEBUG D#105 => D#107
  # DEBUG D#104 => D#106
  # DEBUG D#102 => D#104
  # DEBUG D#103 => D#105
  # DEBUG __p => _12
  # DEBUG this => D#102
  # DEBUG D.48691 => D#103
  operator delete (_12);

  <bb 36>:
  # DEBUG D#113 => &D#120->_M_impl
  # DEBUG this => D#113
  # DEBUG this => D#113
  # DEBUG this => D#113
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#383 => &MEM[(struct Allocator *)this_2(D)].D.34407
  # DEBUG this => D#383
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#101 => &D#383->_children
  # DEBUG this => D#101
  # DEBUG D#95 => &D#101->D.29436
  # DEBUG this => D#95
  # DEBUG D#98 => D#101->D.29436._M_impl._M_finish
  # DEBUG D#97 => D#101->D.29436._M_impl._M_start
  # DEBUG D#32 => D#97
  # DEBUG D#33 => D#98
  # DEBUG __first => D#32
  # DEBUG __last => D#33
  # DEBUG D.44643 => D#34
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG D#28 => D#30
  # DEBUG D#29 => D#31
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG D.44305 => D#24
  # DEBUG D.44304 => D#25
  # DEBUG D#96 => &D#101->D.29436
  # DEBUG this => D#96
  # DEBUG D#94 => D#96->_M_impl._M_end_of_storage
  # DEBUG D#93 => (long int) D#94
  _44 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#92 => (long int) _44
  # DEBUG D#91 => D#93 - D#92
  # DEBUG D#90 => D#91 /[ex] 8
  # DEBUG D#87 => D#96
  # DEBUG D#88 => (long unsigned int) D#90
  # DEBUG __p => _44
  # DEBUG this => D#87
  # DEBUG __n => D#88
  # DEBUG D#86 => D#88
  # DEBUG D#85 => D#87
  if (_44 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # DEBUG D#84 => &D#85->_M_impl
  # DEBUG D#82 => D#84
  # DEBUG D#83 => D#86
  # DEBUG __p => _44
  # DEBUG __a => D#82
  # DEBUG __n => D#83
  # DEBUG D#81 => D#83
  # DEBUG D#80 => D#82
  # DEBUG D#78 => D#80
  # DEBUG D#79 => D#81
  # DEBUG __p => _44
  # DEBUG this => D#78
  # DEBUG D.48817 => D#79
  operator delete (_44);

  <bb 38>:
  # DEBUG D#89 => &D#96->_M_impl
  # DEBUG this => D#89
  # DEBUG this => D#89
  # DEBUG this => D#89
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#100 => &D#383->_fullname
  # DEBUG this => D#100
  # DEBUG this => D#100
  # DEBUG this => D#100
  _45 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#5 => D#100
  # DEBUG this => D#5
  # DEBUG this => D#100
  _46 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.13836._M_local_buf;
  if (_45 != _46)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#73 => MEM[(struct basic_string *)D#100].D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => D#100
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => D#100
  # DEBUG this => D#5
  # DEBUG this => D#100
  # DEBUG D#70 => &MEM[(struct basic_string *)D#100]._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _45
  # DEBUG this => D#64
  # DEBUG D.48830 => D#65
  operator delete (_45);

  <bb 40>:
  # DEBUG D#74 => &MEM[(struct basic_string *)D#100]._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#99 => &D#383->_name
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG this => D#99
  _47 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#5 => D#99
  # DEBUG this => D#5
  # DEBUG this => D#99
  _48 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.13836._M_local_buf;
  if (_47 != _48)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#73 => MEM[(struct basic_string *)D#99].D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => D#99
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => D#99
  # DEBUG this => D#5
  # DEBUG this => D#99
  # DEBUG D#70 => &MEM[(struct basic_string *)D#99]._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _47
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _47
  # DEBUG this => D#64
  # DEBUG D.48845 => D#65
  operator delete (_47);

  <bb 42>:
  # DEBUG D#74 => &MEM[(struct basic_string *)D#99]._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function SeparableAllocator::~SeparableAllocator() (_ZN18SeparableAllocatorD2Ev, funcdef_no=1755, decl_uid=37702, cgraph_uid=425, symbol_order=426)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
SeparableAllocator::~SeparableAllocator() (struct SeparableAllocator * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct map * __first;
  struct map * __first;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  int i;
  int i;
  long unsigned int _12;
  long unsigned int _13;
  struct Arbiter * _14;
  int (*__vtbl_ptr_type) () * _15;
  int (*__vtbl_ptr_type) () _16;
  long unsigned int _20;
  struct Arbiter * _22;
  int (*__vtbl_ptr_type) () * _23;
  int (*__vtbl_ptr_type) () _24;
  struct Arbiter * * _27;
  int * _30;
  struct Arbiter * * _32;
  struct SparseAllocator * _34;
  struct Arbiter * * _36;
  struct Arbiter * & _38;
  long unsigned int _39;
  struct Arbiter * & _40;
  struct Arbiter * * _41;
  const int prephitmp_46;
  struct map * pretmp_53;
  struct map * prephitmp_54;
  struct Arbiter * * prephitmp_61;
  struct _Rep_type * _71;
  struct _Rep_type * _73;
  int * _76;
  struct _Rb_tree_node_base * _79;
  struct _Rb_tree_node_base * _83;
  struct map * _86;
  struct _Rep_type * _89;
  struct map * _93;
  struct _Rep_type * _96;
  struct _Rb_tree_node_base * _101;
  struct _Rb_tree_node_base * _105;
  struct Module * * _108;
  char * const _109;
  const char * _110;
  char * const _111;
  const char * _112;
  struct map * pretmp_131;
  struct map * prephitmp_132;
  const int prephitmp_151;
  struct Arbiter * * pretmp_152;
  struct Arbiter * * prephitmp_153;
  const int pretmp_158;
  const int prephitmp_159;
  struct Arbiter * * pretmp_160;
  struct Arbiter * * prephitmp_161;
  struct Arbiter * * pretmp_165;
  struct Arbiter * * prephitmp_166;
  const int pretmp_167;
  const int prephitmp_168;
  int _211;
  int _220;

  <bb 2>:
  this_9(D)->D.37705.D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV18SeparableAllocator + 16B];
  # DEBUG i => 0
  # DEBUG i => 0
  _220 = this_9(D)->D.37705.D.36911._inputs;
  if (_220 <= 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG i => 0
  _211 = this_9(D)->D.37705.D.36911._outputs;
  if (_211 <= 0)
    goto <bb 4>;
  else
    goto <bb 11>;

  <bb 4>:
  pretmp_160 = MEM[(struct _Vector_base *)this_9(D) + 328B]._M_impl._M_start;
  goto <bb 19>;

  <bb 5>:

  <bb 6>:
  # i_213 = PHI <0(5), i_18(10)>
  # prephitmp_46 = PHI <_220(5), prephitmp_159(10)>
  # DEBUG i => i_213
  _12 = (long unsigned int) i_213;
  # DEBUG D#301 => &this_9(D)->_input_arb
  _36 = MEM[(struct Arbiter * * *)this_9(D) + 304B];
  # DEBUG D#12 => D#301
  # DEBUG __n => _12
  # DEBUG this => D#12
  _13 = _12 * 8;
  _38 = _36 + _13;
  _14 = *_38;
  if (_14 != 0B)
    goto <bb 7>;
  else
    goto <bb 9>;

  <bb 7>:
  _15 = _14->D.39582._vptr.Module;
  _16 = MEM[(int (*__vtbl_ptr_type) () *)_15 + 8B];
  OBJ_TYPE_REF(_16;(struct Arbiter)_14->1) (_14);

  <bb 8>:
  pretmp_158 = this_9(D)->D.37705.D.36911._inputs;

  <bb 9>:
  # prephitmp_159 = PHI <prephitmp_46(6), pretmp_158(8)>
  i_18 = i_213 + 1;
  # DEBUG i => i_18
  # DEBUG i => i_18
  if (i_18 >= prephitmp_159)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 6>;

  <bb 11>:
  pretmp_165 = MEM[(struct _Vector_base *)this_9(D) + 328B]._M_impl._M_start;

  <bb 12>:
  # i_214 = PHI <0(11), i_26(17)>
  # prephitmp_151 = PHI <_211(11), prephitmp_168(17)>
  # prephitmp_166 = PHI <pretmp_165(11), prephitmp_153(17)>
  # DEBUG i => i_214
  _20 = (long unsigned int) i_214;
  # DEBUG D#302 => &this_9(D)->_output_arb
  # DEBUG D#12 => D#302
  # DEBUG __n => _20
  # DEBUG this => D#12
  _39 = _20 * 8;
  _40 = prephitmp_166 + _39;
  _22 = *_40;
  if (_22 != 0B)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 13>:
  _23 = _22->D.39582._vptr.Module;
  _24 = MEM[(int (*__vtbl_ptr_type) () *)_23 + 8B];
  OBJ_TYPE_REF(_24;(struct Arbiter)_22->1) (_22);
  goto <bb 15>;

<L21>:
  goto <bb 65> (<L16>);

  <bb 15>:
  pretmp_152 = MEM[(struct _Vector_base *)this_9(D) + 328B]._M_impl._M_start;
  pretmp_167 = this_9(D)->D.37705.D.36911._outputs;

  <bb 16>:
  # prephitmp_153 = PHI <prephitmp_166(12), pretmp_152(15)>
  # prephitmp_168 = PHI <prephitmp_151(12), pretmp_167(15)>
  i_26 = i_214 + 1;
  # DEBUG i => i_26
  # DEBUG i => i_26
  if (i_26 >= prephitmp_168)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 12>;

  <bb 18>:
  # prephitmp_61 = PHI <prephitmp_153(16)>

  <bb 19>:
  # prephitmp_161 = PHI <prephitmp_61(18), pretmp_160(4)>
  # DEBUG D#305 => &this_9(D)->_output_arb
  # DEBUG this => D#305
  # DEBUG D#160 => &D#305->D.37666
  # DEBUG this => D#160
  # DEBUG D#163 => D#305->D.37666._M_impl._M_finish
  # DEBUG D#162 => D#305->D.37666._M_impl._M_start
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D.44949 => NULL
  # DEBUG D#50 => D#162
  # DEBUG D#51 => D#163
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.44387 => D#46
  # DEBUG D.44386 => D#47
  # DEBUG D#161 => &D#305->D.37666
  # DEBUG this => D#161
  # DEBUG D#159 => D#161->_M_impl._M_end_of_storage
  # DEBUG D#158 => (long int) D#159
  # DEBUG D#398 => MEM[(struct _Vector_base *)this_9(D) + 328B]._M_impl._M_start
  # DEBUG D#157 => (long int) D#398
  # DEBUG D#156 => D#158 - D#157
  # DEBUG D#155 => D#156 /[ex] 8
  # DEBUG D#154 => (long unsigned int) D#155
  # DEBUG this => D#161
  # DEBUG __p => D#398
  # DEBUG __n => D#154
  if (prephitmp_161 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#152 => &D#161->_M_impl
  # DEBUG D#150 => D#152
  # DEBUG D#151 => D#154
  # DEBUG __p => D#398
  # DEBUG __a => D#150
  # DEBUG __n => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG __p => D#398
  # DEBUG this => D#146
  # DEBUG D.47071 => D#147
  operator delete (prephitmp_161);

  <bb 21>:
  # DEBUG D#153 => &D#161->_M_impl
  # DEBUG this => D#153
  # DEBUG this => D#153
  # DEBUG this => D#153
  MEM[(struct  &)this_9(D) + 328] ={v} {CLOBBER};
  # DEBUG D#303 => &this_9(D)->_input_arb
  # DEBUG this => D#303
  # DEBUG D#160 => &D#303->D.37666
  # DEBUG this => D#160
  # DEBUG D#163 => D#303->D.37666._M_impl._M_finish
  # DEBUG D#162 => D#303->D.37666._M_impl._M_start
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D.44949 => NULL
  # DEBUG D#50 => D#162
  # DEBUG D#51 => D#163
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.44387 => D#46
  # DEBUG D.44386 => D#47
  # DEBUG D#161 => &D#303->D.37666
  # DEBUG this => D#161
  # DEBUG D#159 => D#161->_M_impl._M_end_of_storage
  # DEBUG D#158 => (long int) D#159
  _41 = MEM[(struct _Vector_base *)this_9(D) + 304B]._M_impl._M_start;
  # DEBUG D#157 => (long int) _41
  # DEBUG D#156 => D#158 - D#157
  # DEBUG D#155 => D#156 /[ex] 8
  # DEBUG D#154 => (long unsigned int) D#155
  # DEBUG this => D#161
  # DEBUG __p => _41
  # DEBUG __n => D#154
  if (_41 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG D#152 => &D#161->_M_impl
  # DEBUG D#150 => D#152
  # DEBUG D#151 => D#154
  # DEBUG __p => _41
  # DEBUG __a => D#150
  # DEBUG __n => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG __p => _41
  # DEBUG this => D#146
  # DEBUG D.47056 => D#147
  operator delete (_41);

  <bb 23>:
  # DEBUG D#153 => &D#161->_M_impl
  # DEBUG this => D#153
  # DEBUG this => D#153
  # DEBUG this => D#153
  MEM[(struct  &)this_9(D) + 304] ={v} {CLOBBER};
  # DEBUG D#395 => &this_9(D)->D.37705
  # DEBUG this => D#395
  MEM[(struct SparseAllocator *)this_9(D)].D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV15SparseAllocator + 16B];
  # DEBUG D#394 => &MEM[(struct SparseAllocator *)this_9(D)]._out_req
  # DEBUG this => D#394
  # DEBUG D#291 => &D#394->D.36830
  # DEBUG this => D#291
  _93 = MEM[(struct vector *)this_9(D) + 280B].D.36830._M_impl._M_finish;
  __first_94 = MEM[(struct vector *)this_9(D) + 280B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_94
  # DEBUG __last => _93
  # DEBUG __first => __first_94
  if (_93 == __first_94)
    goto <bb 32>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __first_202 = PHI <__first_94(24), __first_98(27)>
  # DEBUG __first => __first_202
  # DEBUG __r => __first_202
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _96 = &__first_202->_M_t;
  # DEBUG this => _96
  __x_97 = MEM[(struct _Rb_tree_node_base * *)__first_202 + 16B];
  # DEBUG D#204 => _96
  # DEBUG this => D#204
  # DEBUG this => _96
  # DEBUG __x => __x_97
  # DEBUG __x => __x_97
  if (__x_97 == 0B)
    goto <bb 26>;
  else
    goto <bb 28>;

  <bb 26>:
  # DEBUG D#289 => &MEM[(struct _Rb_tree *)_96]._M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)__first_202] ={v} {CLOBBER};
  __first_98 = __first_202 + 48;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (_93 == __first_98)
    goto <bb 31>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 25>;

  <bb 28>:

  <bb 29>:
  # __x_197 = PHI <__x_97(28), __x_102(30)>
  # DEBUG __x => __x_197
  _101 = MEM[(struct _Rb_tree_node_base * *)__x_197 + 24B];
  # DEBUG D#232 => __x_197
  # DEBUG __x => D#232
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_96, _101);
  __x_102 = MEM[(struct _Rb_tree_node_base * *)__x_197 + 16B];
  # DEBUG D#233 => __x_197
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => _96
  # DEBUG __p => __x_197
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_197
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_197
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_197
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_197
  # DEBUG this => D#246
  # DEBUG D.49010 => D#247
  operator delete (__x_197);
  # DEBUG __x => __x_102
  # DEBUG __x => __x_102
  if (__x_102 == 0B)
    goto <bb 26>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  pretmp_53 = MEM[(struct _Vector_base *)this_9(D) + 280B]._M_impl._M_start;

  <bb 32>:
  # prephitmp_54 = PHI <pretmp_53(31), __first_94(23)>
  # DEBUG D#292 => &D#394->D.36830
  # DEBUG this => D#292
  # DEBUG D#143 => D#292->_M_impl._M_end_of_storage
  # DEBUG D#142 => (long int) D#143
  # DEBUG D#397 => MEM[(struct _Vector_base *)this_9(D) + 280B]._M_impl._M_start
  # DEBUG D#141 => (long int) D#397
  # DEBUG D#140 => D#142 - D#141
  # DEBUG D#139 => D#140 /[ex] 48
  # DEBUG D#136 => D#292
  # DEBUG D#137 => (long unsigned int) D#139
  # DEBUG __p => D#397
  # DEBUG this => D#136
  # DEBUG __n => D#137
  # DEBUG D#135 => D#137
  # DEBUG D#134 => D#136
  if (prephitmp_54 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#133 => &D#134->_M_impl
  # DEBUG D#131 => D#133
  # DEBUG D#132 => D#135
  # DEBUG __p => D#397
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => D#397
  # DEBUG this => D#127
  # DEBUG D.48994 => D#128
  operator delete (prephitmp_54);

  <bb 34>:
  # DEBUG D#138 => &D#292->_M_impl
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG this => D#138
  MEM[(struct  &)this_9(D) + 280] ={v} {CLOBBER};
  # DEBUG D#393 => &MEM[(struct SparseAllocator *)this_9(D)]._in_req
  # DEBUG this => D#393
  # DEBUG D#291 => &D#393->D.36830
  # DEBUG this => D#291
  _86 = MEM[(struct vector *)this_9(D) + 256B].D.36830._M_impl._M_finish;
  __first_87 = MEM[(struct vector *)this_9(D) + 256B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_87
  # DEBUG __last => _86
  # DEBUG __first => __first_87
  if (_86 == __first_87)
    goto <bb 43>;
  else
    goto <bb 35>;

  <bb 35>:

  <bb 36>:
  # __first_203 = PHI <__first_87(35), __first_91(38)>
  # DEBUG __first => __first_203
  # DEBUG __r => __first_203
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _89 = &__first_203->_M_t;
  # DEBUG this => _89
  __x_90 = MEM[(struct _Rb_tree_node_base * *)__first_203 + 16B];
  # DEBUG D#204 => _89
  # DEBUG this => D#204
  # DEBUG this => _89
  # DEBUG __x => __x_90
  # DEBUG __x => __x_90
  if (__x_90 == 0B)
    goto <bb 37>;
  else
    goto <bb 39>;

  <bb 37>:
  # DEBUG D#289 => &MEM[(struct _Rb_tree *)_89]._M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)__first_203] ={v} {CLOBBER};
  __first_91 = __first_203 + 48;
  # DEBUG __first => __first_91
  # DEBUG __first => __first_91
  if (_86 == __first_91)
    goto <bb 42>;
  else
    goto <bb 38>;

  <bb 38>:
  goto <bb 36>;

  <bb 39>:

  <bb 40>:
  # __x_225 = PHI <__x_90(39), __x_106(41)>
  # DEBUG __x => __x_225
  _105 = MEM[(struct _Rb_tree_node_base * *)__x_225 + 24B];
  # DEBUG D#232 => __x_225
  # DEBUG __x => D#232
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_89, _105);
  __x_106 = MEM[(struct _Rb_tree_node_base * *)__x_225 + 16B];
  # DEBUG D#233 => __x_225
  # DEBUG __x => D#233
  # DEBUG __y => NULL
  # DEBUG D#288 => _89
  # DEBUG __p => __x_225
  # DEBUG this => D#288
  # DEBUG D#287 => D#288
  # DEBUG D#286 => D#288
  # DEBUG D#284 => D#286
  # DEBUG D#285 => __x_225
  # DEBUG this => D#284
  # DEBUG __p => D#285
  # DEBUG D#283 => D#284
  # DEBUG D#282 => D#285
  # DEBUG D#281 => D#285
  # DEBUG this => D#281
  # DEBUG D#280 => &D#282->_M_value_field
  # DEBUG __r => D#280
  # DEBUG D#279 => D#283
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG this => D#278
  # DEBUG this => NULL
  # DEBUG D.46681 => NULL
  # DEBUG this => NULL
  # DEBUG D#245 => D#280
  # DEBUG this => D#244
  # DEBUG __p => D#245
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#253 => D#287
  # DEBUG __p => __x_225
  # DEBUG this => D#253
  # DEBUG D#252 => D#253
  # DEBUG this => D#252
  # DEBUG D#251 => 1
  # DEBUG __p => __x_225
  # DEBUG __a => D#250
  # DEBUG __n => D#251
  # DEBUG D#249 => D#251
  # DEBUG D#248 => D#250
  # DEBUG D#246 => D#248
  # DEBUG D#247 => D#249
  # DEBUG __p => __x_225
  # DEBUG this => D#246
  # DEBUG D.49023 => D#247
  operator delete (__x_225);
  # DEBUG __x => __x_106
  # DEBUG __x => __x_106
  if (__x_106 == 0B)
    goto <bb 37>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 40>;

  <bb 42>:
  pretmp_131 = MEM[(struct _Vector_base *)this_9(D) + 256B]._M_impl._M_start;

  <bb 43>:
  # prephitmp_132 = PHI <pretmp_131(42), __first_87(34)>
  # DEBUG D#292 => &D#393->D.36830
  # DEBUG this => D#292
  # DEBUG D#143 => D#292->_M_impl._M_end_of_storage
  # DEBUG D#142 => (long int) D#143
  # DEBUG D#396 => MEM[(struct _Vector_base *)this_9(D) + 256B]._M_impl._M_start
  # DEBUG D#141 => (long int) D#396
  # DEBUG D#140 => D#142 - D#141
  # DEBUG D#139 => D#140 /[ex] 48
  # DEBUG D#136 => D#292
  # DEBUG D#137 => (long unsigned int) D#139
  # DEBUG __p => D#396
  # DEBUG this => D#136
  # DEBUG __n => D#137
  # DEBUG D#135 => D#137
  # DEBUG D#134 => D#136
  if (prephitmp_132 != 0B)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # DEBUG D#133 => &D#134->_M_impl
  # DEBUG D#131 => D#133
  # DEBUG D#132 => D#135
  # DEBUG __p => D#396
  # DEBUG __a => D#131
  # DEBUG __n => D#132
  # DEBUG D#130 => D#132
  # DEBUG D#129 => D#131
  # DEBUG D#127 => D#129
  # DEBUG D#128 => D#130
  # DEBUG __p => D#396
  # DEBUG this => D#127
  # DEBUG D.48965 => D#128
  operator delete (prephitmp_132);

  <bb 45>:
  # DEBUG D#138 => &D#292->_M_impl
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG this => D#138
  MEM[(struct  &)this_9(D) + 256] ={v} {CLOBBER};
  # DEBUG D#294 => &D#395->_out_occ
  # DEBUG this => D#294
  _71 = &MEM[(struct set *)this_9(D) + 208B]._M_t;
  # DEBUG this => _71
  __x_72 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 224B];
  # DEBUG D#17 => _71
  # DEBUG this => D#17
  # DEBUG this => _71
  # DEBUG __x => __x_72
  # DEBUG __x => __x_72
  if (__x_72 == 0B)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  # DEBUG D#203 => &MEM[(struct _Rb_tree *)_71]._M_impl
  # DEBUG this => D#203
  # DEBUG this => D#203
  # DEBUG this => D#203
  MEM[(struct  &)this_9(D) + 208] ={v} {CLOBBER};
  # DEBUG D#293 => &D#395->_in_occ
  # DEBUG this => D#293
  _73 = &MEM[(struct set *)this_9(D) + 160B]._M_t;
  # DEBUG this => _73
  __x_74 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 176B];
  # DEBUG D#17 => _73
  # DEBUG this => D#17
  # DEBUG this => _73
  # DEBUG __x => __x_74
  # DEBUG __x => __x_74
  if (__x_74 == 0B)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 47>:

  <bb 48>:
  # __x_204 = PHI <__x_72(47), __x_84(49)>
  # DEBUG __x => __x_204
  _83 = MEM[(struct _Rb_tree_node_base * *)__x_204 + 24B];
  # DEBUG D#21 => __x_204
  # DEBUG __x => D#21
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_71, _83);
  __x_84 = MEM[(struct _Rb_tree_node_base * *)__x_204 + 16B];
  # DEBUG D#22 => __x_204
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => _71
  # DEBUG __p => __x_204
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_204
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_204
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_204
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_204
  # DEBUG this => D#165
  # DEBUG D.48939 => D#166
  operator delete (__x_204);
  # DEBUG __x => __x_84
  # DEBUG __x => __x_84
  if (__x_84 == 0B)
    goto <bb 46>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 48>;

  <bb 50>:
  # DEBUG D#203 => &MEM[(struct _Rb_tree *)_73]._M_impl
  # DEBUG this => D#203
  # DEBUG this => D#203
  # DEBUG this => D#203
  MEM[(struct  &)this_9(D) + 160] ={v} {CLOBBER};
  # DEBUG D#392 => &MEM[(struct SparseAllocator *)this_9(D)].D.36911
  # DEBUG this => D#392
  MEM[(struct Allocator *)this_9(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
  # DEBUG D#124 => &D#392->_outmatch
  # DEBUG this => D#124
  # DEBUG D#119 => &D#124->D.34311
  # DEBUG this => D#119
  # DEBUG D#122 => D#124->D.34311._M_impl._M_finish
  # DEBUG D#121 => D#124->D.34311._M_impl._M_start
  # DEBUG D#43 => D#121
  # DEBUG D#44 => D#122
  # DEBUG __first => D#43
  # DEBUG __last => D#44
  # DEBUG D.44770 => D#45
  # DEBUG D#42 => D#44
  # DEBUG D#41 => D#43
  # DEBUG D#39 => D#41
  # DEBUG D#40 => D#42
  # DEBUG __first => D#39
  # DEBUG __last => D#40
  # DEBUG D#38 => D#40
  # DEBUG D#37 => D#39
  # DEBUG D#35 => D#37
  # DEBUG D#36 => D#38
  # DEBUG D.44343 => D#35
  # DEBUG D.44342 => D#36
  # DEBUG D#120 => &D#124->D.34311
  # DEBUG this => D#120
  # DEBUG D#118 => D#120->_M_impl._M_end_of_storage
  # DEBUG D#117 => (long int) D#118
  _30 = MEM[(struct _Vector_base *)this_9(D) + 136B]._M_impl._M_start;
  # DEBUG D#116 => (long int) _30
  # DEBUG D#115 => D#117 - D#116
  # DEBUG D#114 => D#115 /[ex] 4
  # DEBUG D#111 => D#120
  # DEBUG D#112 => (long unsigned int) D#114
  # DEBUG __p => _30
  # DEBUG this => D#111
  # DEBUG __n => D#112
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  if (_30 != 0B)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 51>:

  <bb 52>:
  # __x_217 = PHI <__x_74(51), __x_80(53)>
  # DEBUG __x => __x_217
  _79 = MEM[(struct _Rb_tree_node_base * *)__x_217 + 24B];
  # DEBUG D#21 => __x_217
  # DEBUG __x => D#21
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_73, _79);
  __x_80 = MEM[(struct _Rb_tree_node_base * *)__x_217 + 16B];
  # DEBUG D#22 => __x_217
  # DEBUG __x => D#22
  # DEBUG __y => NULL
  # DEBUG D#202 => _73
  # DEBUG __p => __x_217
  # DEBUG this => D#202
  # DEBUG D#201 => D#202
  # DEBUG D#200 => D#202
  # DEBUG D#198 => D#200
  # DEBUG D#199 => __x_217
  # DEBUG this => D#198
  # DEBUG __p => D#199
  # DEBUG D#197 => D#198
  # DEBUG D#196 => D#199
  # DEBUG D#195 => D#199
  # DEBUG this => D#195
  # DEBUG D#194 => &D#196->_M_value_field
  # DEBUG __r => D#194
  # DEBUG D#193 => D#197
  # DEBUG this => D#193
  # DEBUG D#192 => D#193
  # DEBUG this => D#192
  # DEBUG this => NULL
  # DEBUG D.45315 => NULL
  # DEBUG this => NULL
  # DEBUG D#126 => D#194
  # DEBUG this => D#125
  # DEBUG __p => D#126
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#172 => D#201
  # DEBUG __p => __x_217
  # DEBUG this => D#172
  # DEBUG D#171 => D#172
  # DEBUG this => D#171
  # DEBUG D#170 => 1
  # DEBUG __p => __x_217
  # DEBUG __a => D#169
  # DEBUG __n => D#170
  # DEBUG D#168 => D#170
  # DEBUG D#167 => D#169
  # DEBUG D#165 => D#167
  # DEBUG D#166 => D#168
  # DEBUG __p => __x_217
  # DEBUG this => D#165
  # DEBUG D.48926 => D#166
  operator delete (__x_217);
  # DEBUG __x => __x_80
  # DEBUG __x => __x_80
  if (__x_80 == 0B)
    goto <bb 50>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 52>;

  <bb 54>:
  # DEBUG D#108 => &D#109->_M_impl
  # DEBUG D#106 => D#108
  # DEBUG D#107 => D#110
  # DEBUG __p => _30
  # DEBUG __a => D#106
  # DEBUG __n => D#107
  # DEBUG D#105 => D#107
  # DEBUG D#104 => D#106
  # DEBUG D#102 => D#104
  # DEBUG D#103 => D#105
  # DEBUG __p => _30
  # DEBUG this => D#102
  # DEBUG D.48895 => D#103
  operator delete (_30);

  <bb 55>:
  # DEBUG D#113 => &D#120->_M_impl
  # DEBUG this => D#113
  # DEBUG this => D#113
  # DEBUG this => D#113
  MEM[(struct  &)this_9(D) + 136] ={v} {CLOBBER};
  # DEBUG D#123 => &D#392->_inmatch
  # DEBUG this => D#123
  # DEBUG D#119 => &D#123->D.34311
  # DEBUG this => D#119
  # DEBUG D#122 => D#123->D.34311._M_impl._M_finish
  # DEBUG D#121 => D#123->D.34311._M_impl._M_start
  # DEBUG D#43 => D#121
  # DEBUG D#44 => D#122
  # DEBUG __first => D#43
  # DEBUG __last => D#44
  # DEBUG D.44770 => D#45
  # DEBUG D#42 => D#44
  # DEBUG D#41 => D#43
  # DEBUG D#39 => D#41
  # DEBUG D#40 => D#42
  # DEBUG __first => D#39
  # DEBUG __last => D#40
  # DEBUG D#38 => D#40
  # DEBUG D#37 => D#39
  # DEBUG D#35 => D#37
  # DEBUG D#36 => D#38
  # DEBUG D.44343 => D#35
  # DEBUG D.44342 => D#36
  # DEBUG D#120 => &D#123->D.34311
  # DEBUG this => D#120
  # DEBUG D#118 => D#120->_M_impl._M_end_of_storage
  # DEBUG D#117 => (long int) D#118
  _76 = MEM[(struct _Vector_base *)this_9(D) + 112B]._M_impl._M_start;
  # DEBUG D#116 => (long int) _76
  # DEBUG D#115 => D#117 - D#116
  # DEBUG D#114 => D#115 /[ex] 4
  # DEBUG D#111 => D#120
  # DEBUG D#112 => (long unsigned int) D#114
  # DEBUG __p => _76
  # DEBUG this => D#111
  # DEBUG __n => D#112
  # DEBUG D#110 => D#112
  # DEBUG D#109 => D#111
  if (_76 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # DEBUG D#108 => &D#109->_M_impl
  # DEBUG D#106 => D#108
  # DEBUG D#107 => D#110
  # DEBUG __p => _76
  # DEBUG __a => D#106
  # DEBUG __n => D#107
  # DEBUG D#105 => D#107
  # DEBUG D#104 => D#106
  # DEBUG D#102 => D#104
  # DEBUG D#103 => D#105
  # DEBUG __p => _76
  # DEBUG this => D#102
  # DEBUG D.48910 => D#103
  operator delete (_76);

  <bb 57>:
  # DEBUG D#113 => &D#120->_M_impl
  # DEBUG this => D#113
  # DEBUG this => D#113
  # DEBUG this => D#113
  MEM[(struct  &)this_9(D) + 112] ={v} {CLOBBER};
  # DEBUG D#391 => &MEM[(struct Allocator *)this_9(D)].D.34407
  # DEBUG this => D#391
  MEM[(struct Module *)this_9(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#101 => &D#391->_children
  # DEBUG this => D#101
  # DEBUG D#95 => &D#101->D.29436
  # DEBUG this => D#95
  # DEBUG D#98 => D#101->D.29436._M_impl._M_finish
  # DEBUG D#97 => D#101->D.29436._M_impl._M_start
  # DEBUG D#32 => D#97
  # DEBUG D#33 => D#98
  # DEBUG __first => D#32
  # DEBUG __last => D#33
  # DEBUG D.44643 => D#34
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG D#28 => D#30
  # DEBUG D#29 => D#31
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG D.44305 => D#24
  # DEBUG D.44304 => D#25
  # DEBUG D#96 => &D#101->D.29436
  # DEBUG this => D#96
  # DEBUG D#94 => D#96->_M_impl._M_end_of_storage
  # DEBUG D#93 => (long int) D#94
  _108 = MEM[(struct _Vector_base *)this_9(D) + 72B]._M_impl._M_start;
  # DEBUG D#92 => (long int) _108
  # DEBUG D#91 => D#93 - D#92
  # DEBUG D#90 => D#91 /[ex] 8
  # DEBUG D#87 => D#96
  # DEBUG D#88 => (long unsigned int) D#90
  # DEBUG __p => _108
  # DEBUG this => D#87
  # DEBUG __n => D#88
  # DEBUG D#86 => D#88
  # DEBUG D#85 => D#87
  if (_108 != 0B)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#84 => &D#85->_M_impl
  # DEBUG D#82 => D#84
  # DEBUG D#83 => D#86
  # DEBUG __p => _108
  # DEBUG __a => D#82
  # DEBUG __n => D#83
  # DEBUG D#81 => D#83
  # DEBUG D#80 => D#82
  # DEBUG D#78 => D#80
  # DEBUG D#79 => D#81
  # DEBUG __p => _108
  # DEBUG this => D#78
  # DEBUG D.49036 => D#79
  operator delete (_108);

  <bb 59>:
  # DEBUG D#89 => &D#96->_M_impl
  # DEBUG this => D#89
  # DEBUG this => D#89
  # DEBUG this => D#89
  MEM[(struct  &)this_9(D) + 72] ={v} {CLOBBER};
  # DEBUG D#100 => &D#391->_fullname
  # DEBUG this => D#100
  # DEBUG this => D#100
  # DEBUG this => D#100
  _109 = MEM[(char * *)this_9(D) + 40B];
  # DEBUG D#5 => D#100
  # DEBUG this => D#5
  # DEBUG this => D#100
  _110 = &MEM[(const struct basic_string *)this_9(D) + 40B].D.13836._M_local_buf;
  if (_109 != _110)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  # DEBUG D#73 => MEM[(struct basic_string *)D#100].D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => D#100
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => D#100
  # DEBUG this => D#5
  # DEBUG this => D#100
  # DEBUG D#70 => &MEM[(struct basic_string *)D#100]._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _109
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _109
  # DEBUG this => D#64
  # DEBUG D.49049 => D#65
  operator delete (_109);

  <bb 61>:
  # DEBUG D#74 => &MEM[(struct basic_string *)D#100]._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  MEM[(struct  &)this_9(D) + 40] ={v} {CLOBBER};
  # DEBUG D#99 => &D#391->_name
  # DEBUG this => D#99
  # DEBUG this => D#99
  # DEBUG this => D#99
  _111 = MEM[(char * *)this_9(D) + 8B];
  # DEBUG D#5 => D#99
  # DEBUG this => D#5
  # DEBUG this => D#99
  _112 = &MEM[(const struct basic_string *)this_9(D) + 8B].D.13836._M_local_buf;
  if (_111 != _112)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # DEBUG D#73 => MEM[(struct basic_string *)D#99].D.13836._M_allocated_capacity
  # DEBUG D#72 => D#73
  # DEBUG this => D#99
  # DEBUG __size => D#72
  # DEBUG D#71 => D#72
  # DEBUG D#5 => D#99
  # DEBUG this => D#5
  # DEBUG this => D#99
  # DEBUG D#70 => &MEM[(struct basic_string *)D#99]._M_dataplus
  # DEBUG D#68 => D#70
  # DEBUG D#69 => D#71 + 1
  # DEBUG __p => _111
  # DEBUG __a => D#68
  # DEBUG __n => D#69
  # DEBUG D#67 => D#69
  # DEBUG D#66 => D#68
  # DEBUG D#64 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __p => _111
  # DEBUG this => D#64
  # DEBUG D.49064 => D#65
  operator delete (_111);

  <bb 63>:
  # DEBUG D#74 => &MEM[(struct basic_string *)D#99]._M_dataplus
  # DEBUG this => D#74
  # DEBUG this => D#74
  # DEBUG this => D#74
  MEM[(struct  &)this_9(D)] ={v} {CLOBBER};
  return;

<L20>:

<L16>:
  # DEBUG D#306 => &this_9(D)->_output_arb
  # DEBUG this => D#306
  # DEBUG D#160 => &D#306->D.37666
  # DEBUG this => D#160
  # DEBUG D#163 => D#306->D.37666._M_impl._M_finish
  # DEBUG D#162 => D#306->D.37666._M_impl._M_start
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D.44949 => NULL
  # DEBUG D#50 => D#162
  # DEBUG D#51 => D#163
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.44387 => D#46
  # DEBUG D.44386 => D#47
  # DEBUG D#161 => &D#306->D.37666
  # DEBUG this => D#161
  # DEBUG D#159 => D#161->_M_impl._M_end_of_storage
  # DEBUG D#158 => (long int) D#159
  _27 = MEM[(struct _Vector_base *)this_9(D) + 328B]._M_impl._M_start;
  # DEBUG D#157 => (long int) _27
  # DEBUG D#156 => D#158 - D#157
  # DEBUG D#155 => D#156 /[ex] 8
  # DEBUG D#154 => (long unsigned int) D#155
  # DEBUG this => D#161
  # DEBUG __p => _27
  # DEBUG __n => D#154
  if (_27 != 0B)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # DEBUG D#152 => &D#161->_M_impl
  # DEBUG D#150 => D#152
  # DEBUG D#151 => D#154
  # DEBUG __p => _27
  # DEBUG __a => D#150
  # DEBUG __n => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG __p => _27
  # DEBUG this => D#146
  # DEBUG D.47086 => D#147
  operator delete (_27);

  <bb 67>:
  # DEBUG D#153 => &D#161->_M_impl
  # DEBUG this => D#153
  # DEBUG this => D#153
  # DEBUG this => D#153
  MEM[(struct  &)this_9(D) + 328] ={v} {CLOBBER};
  resx 4

<L17>:
  # DEBUG D#304 => &this_9(D)->_input_arb
  # DEBUG this => D#304
  # DEBUG D#160 => &D#304->D.37666
  # DEBUG this => D#160
  # DEBUG D#163 => D#304->D.37666._M_impl._M_finish
  # DEBUG D#162 => D#304->D.37666._M_impl._M_start
  # DEBUG __first => D#162
  # DEBUG __last => D#163
  # DEBUG D.44949 => NULL
  # DEBUG D#50 => D#162
  # DEBUG D#51 => D#163
  # DEBUG __first => D#50
  # DEBUG __last => D#51
  # DEBUG D#49 => D#51
  # DEBUG D#48 => D#50
  # DEBUG D#46 => D#48
  # DEBUG D#47 => D#49
  # DEBUG D.44387 => D#46
  # DEBUG D.44386 => D#47
  # DEBUG D#161 => &D#304->D.37666
  # DEBUG this => D#161
  # DEBUG D#159 => D#161->_M_impl._M_end_of_storage
  # DEBUG D#158 => (long int) D#159
  _32 = MEM[(struct _Vector_base *)this_9(D) + 304B]._M_impl._M_start;
  # DEBUG D#157 => (long int) _32
  # DEBUG D#156 => D#158 - D#157
  # DEBUG D#155 => D#156 /[ex] 8
  # DEBUG D#154 => (long unsigned int) D#155
  # DEBUG this => D#161
  # DEBUG __p => _32
  # DEBUG __n => D#154
  if (_32 != 0B)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG D#152 => &D#161->_M_impl
  # DEBUG D#150 => D#152
  # DEBUG D#151 => D#154
  # DEBUG __p => _32
  # DEBUG __a => D#150
  # DEBUG __n => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG __p => _32
  # DEBUG this => D#146
  # DEBUG D.47101 => D#147
  operator delete (_32);

  <bb 70>:
  # DEBUG D#153 => &D#161->_M_impl
  # DEBUG this => D#153
  # DEBUG this => D#153
  # DEBUG this => D#153
  MEM[(struct  &)this_9(D) + 304] ={v} {CLOBBER};
  resx 3

<L18>:
  _34 = &this_9(D)->D.37705;
  SparseAllocator::~SparseAllocator (_34);
  resx 2

}


