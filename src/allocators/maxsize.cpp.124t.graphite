
;; Function MaxSizeMatch::~MaxSizeMatch() (_ZN12MaxSizeMatchD2Ev, funcdef_no=1718, decl_uid=36956, cgraph_uid=421, symbol_order=422)


Pass statistics:
----------------

MaxSizeMatch::~MaxSizeMatch() (struct MaxSizeMatchD.36919 * const thisD.36957)
{
  struct vectorD.34419 * __firstD.41886;
  intD.9 * _6;
  intD.9 * _8;
  intD.9 * _11;
  struct ModuleD.28688 * * _22;
  struct vectorD.34419 * _23;
  intD.9 * _25;
  intD.9 * _26;
  struct sRequestD.34315 * _30;
  charD.10 * const _33;
  const charD.10 * _34;
  charD.10 * const _35;
  const charD.10 * _36;
  struct vectorD.34419 * pretmp_47;
  struct vectorD.34419 * prephitmp_48;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = VDEF <.MEM_3(D)>
  this_4(D)->D.36959.D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV12MaxSizeMatchD.36965 + 16B];
  # VUSE <.MEM_5>
  # PT = nonlocal escaped 
  _6 = this_4(D)->_sD.36922;
  if (_6 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_7 = VDEF <.MEM_5>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdaPvD.2767 (_6);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_5(2), .MEM_7(3)>
  # VUSE <.MEM_1>
  # PT = nonlocal escaped 
  _8 = this_4(D)->_nsD.36923;
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_9 = VDEF <.MEM_1>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdaPvD.2767 (_8);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_1(4), .MEM_9(5)>
  # DEBUG D#202ptD.0 => &this_4(D)->_fromD.36921
  # DEBUG thisD.41223 => D#202ptD.0
  # DEBUG D#79ptD.0 => &D#202ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#202ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#202ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#202ptD.0->D.34311
  # DEBUG thisD.41224 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_2>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 184B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _11
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.41227 => D#80ptD.0
  # DEBUG __pD.41226 => _11
  # DEBUG __nD.41225 => D#73ptD.0
  if (_11 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.41231 => _11
  # DEBUG __aD.41229 => D#69ptD.0
  # DEBUG __nD.41230 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.41234 => _11
  # DEBUG thisD.41232 => D#65ptD.0
  # DEBUG D.41233 => D#66ptD.0
  # .MEM_15 = VDEF <.MEM_2>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_11);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_10 = PHI <.MEM_2(6), .MEM_15(7)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.41235 => D#72ptD.0
  # DEBUG thisD.41236 => D#72ptD.0
  # DEBUG thisD.41237 => D#72ptD.0
  # .MEM_20 = VDEF <.MEM_10>
  MEM[(struct  &)this_4(D) + 184] ={v} {CLOBBER};
  # DEBUG D#201ptD.0 => &this_4(D)->D.36959
  # DEBUG thisD.41222 => D#201ptD.0
  # .MEM_21 = VDEF <.MEM_20>
  MEM[(struct DenseAllocatorD.34416 *)this_4(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#232ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_4(D)]._requestD.35166
  # DEBUG thisD.41883 => D#232ptD.0
  # DEBUG D#199ptD.0 => &D#232ptD.0->D.35164
  # DEBUG thisD.41216 => D#199ptD.0
  # VUSE <.MEM_21>
  # PT = nonlocal escaped 
  _23 = MEM[(struct vectorD.34421 *)this_4(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_21>
  # PT = nonlocal escaped 
  __first_28 = MEM[(struct vectorD.34421 *)this_4(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.41886 => __first_28
  # DEBUG __lastD.41885 => _23
  # DEBUG __firstD.41891 => __first_28
  if (_23 == __first_28)
    goto <bb 15>;
  else
    goto <bb 9>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_27 = PHI <__first_28(9), __first_31(13)>
  # .MEM_101 = PHI <.MEM_21(9), .MEM_50(13)>
  # DEBUG __firstD.41891 => __first_27
  # DEBUG __rD.41106 => __first_27
  # DEBUG __pointerD.41892 => NULL
  # DEBUG thisD.41893 => NULL
  # DEBUG thisD.41071 => D#194ptD.0
  # DEBUG D#174ptD.0 => D#196ptD.0
  # DEBUG D#175ptD.0 => D#197ptD.0
  # DEBUG __firstD.41070 => D#174ptD.0
  # DEBUG __lastD.41069 => D#175ptD.0
  # DEBUG D.41068 => D#176ptD.0
  # DEBUG D#173ptD.0 => D#175ptD.0
  # DEBUG D#172ptD.0 => D#174ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => D#173ptD.0
  # DEBUG __firstD.40982 => D#170ptD.0
  # DEBUG __lastD.40981 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0
  # DEBUG D#168ptD.0 => D#170ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0
  # DEBUG D#167ptD.0 => D#169ptD.0
  # DEBUG D.40971 => D#166ptD.0
  # DEBUG D.40970 => D#167ptD.0
  # DEBUG thisD.41894 => D#195ptD.0
  # DEBUG D#193ptD.0 => D#195ptD.0->_M_implD.37294._M_end_of_storageD.37298
  # DEBUG D#192ptD.0 => (long intD.12) D#193ptD.0
  # VUSE <.MEM_101>
  # PT = nonlocal escaped 
  _30 = MEM[(struct _Vector_baseD.37061 *)__first_27]._M_implD.37294._M_startD.37296;
  # DEBUG D#191ptD.0 => (long intD.12) _30
  # DEBUG D#190ptD.0 => D#192ptD.0 - D#191ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0 /[ex] 16
  # DEBUG D#186ptD.0 => D#195ptD.0
  # DEBUG D#187ptD.0 => (long unsigned intD.14) D#189ptD.0
  # DEBUG __pD.41897 => _30
  # DEBUG thisD.41895 => D#186ptD.0
  # DEBUG __nD.41896 => D#187ptD.0
  # DEBUG D#185ptD.0 => D#187ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0
  if (_30 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#183ptD.0 => &D#184ptD.0->_M_implD.37294
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#185ptD.0
  # DEBUG __pD.41901 => _30
  # DEBUG __aD.41899 => D#181ptD.0
  # DEBUG __nD.41900 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.41904 => _30
  # DEBUG thisD.41902 => D#177ptD.0
  # DEBUG D.41903 => D#178ptD.0
  # .MEM_45 = VDEF <.MEM_101>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_30);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_101(10), .MEM_45(11)>
  # DEBUG D#188ptD.0 => &D#195ptD.0->_M_implD.37294
  # DEBUG thisD.41905 => D#188ptD.0
  # DEBUG thisD.41906 => D#188ptD.0
  # DEBUG thisD.41907 => D#188ptD.0
  # .MEM_50 = VDEF <.MEM_38>
  MEM[(struct  &)__first_27] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_31 = __first_27 + 24;
  # DEBUG __firstD.41891 => __first_31
  # DEBUG __firstD.41891 => __first_31
  if (_23 == __first_31)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_50>
  pretmp_47 = MEM[(struct _Vector_baseD.34422 *)this_4(D) + 160B]._M_implD.34655._M_startD.34657;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_50(14), .MEM_21(8)>
  # PT = nonlocal escaped 
  # prephitmp_48 = PHI <pretmp_47(14), __first_28(8)>
  # DEBUG D#200ptD.0 => &D#232ptD.0->D.35164
  # DEBUG thisD.41908 => D#200ptD.0
  # DEBUG D#101ptD.0 => D#200ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#100ptD.0 => (long intD.12) D#101ptD.0
  # DEBUG D#233ptD.0 => MEM[(struct _Vector_baseD.34422 *)this_4(D) + 160B]._M_implD.34655._M_startD.34657
  # DEBUG D#99ptD.0 => (long intD.12) D#233ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0 - D#99ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0 /[ex] 24
  # DEBUG D#94ptD.0 => D#200ptD.0
  # DEBUG D#95ptD.0 => (long unsigned intD.14) D#97ptD.0
  # DEBUG __pD.41911 => D#233ptD.0
  # DEBUG thisD.41909 => D#94ptD.0
  # DEBUG __nD.41910 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  if (prephitmp_48 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#91ptD.0 => &D#92ptD.0->_M_implD.34655
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#93ptD.0
  # DEBUG __pD.41915 => D#233ptD.0
  # DEBUG __aD.41913 => D#89ptD.0
  # DEBUG __nD.41914 => D#90ptD.0
  # DEBUG D#88ptD.0 => D#90ptD.0
  # DEBUG D#87ptD.0 => D#89ptD.0
  # DEBUG D#85ptD.0 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#88ptD.0
  # DEBUG __pD.41918 => D#233ptD.0
  # DEBUG thisD.41916 => D#85ptD.0
  # DEBUG D.41917 => D#86ptD.0
  # .MEM_51 = VDEF <.MEM_100>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_48);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_39 = PHI <.MEM_100(15), .MEM_51(16)>
  # DEBUG D#96ptD.0 => &D#200ptD.0->_M_implD.34655
  # DEBUG thisD.41919 => D#96ptD.0
  # DEBUG thisD.41920 => D#96ptD.0
  # DEBUG thisD.41921 => D#96ptD.0
  # .MEM_56 = VDEF <.MEM_39>
  MEM[(struct  &)this_4(D) + 160] ={v} {CLOBBER};
  # DEBUG D#231ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_4(D)].D.35235
  # DEBUG thisD.41852 => D#231ptD.0
  # .MEM_57 = VDEF <.MEM_56>
  MEM[(struct AllocatorD.33564 *)this_4(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#84ptD.0 => &D#231ptD.0->_outmatchD.34314
  # DEBUG thisD.41853 => D#84ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.41854 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _25 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _25
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.41857 => D#80ptD.0
  # DEBUG __pD.41856 => _25
  # DEBUG __nD.41855 => D#73ptD.0
  if (_25 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.41861 => _25
  # DEBUG __aD.41859 => D#69ptD.0
  # DEBUG __nD.41860 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.41864 => _25
  # DEBUG thisD.41862 => D#65ptD.0
  # DEBUG D.41863 => D#66ptD.0
  # .MEM_58 = VDEF <.MEM_57>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_57(17), .MEM_58(18)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.41865 => D#72ptD.0
  # DEBUG thisD.41866 => D#72ptD.0
  # DEBUG thisD.41867 => D#72ptD.0
  # .MEM_63 = VDEF <.MEM_40>
  MEM[(struct  &)this_4(D) + 136] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#231ptD.0->_inmatchD.34313
  # DEBUG thisD.41868 => D#83ptD.0
  # DEBUG D#79ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.41869 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_63>
  # PT = nonlocal escaped 
  _26 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _26
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.41872 => D#80ptD.0
  # DEBUG __pD.41871 => _26
  # DEBUG __nD.41870 => D#73ptD.0
  if (_26 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.41876 => _26
  # DEBUG __aD.41874 => D#69ptD.0
  # DEBUG __nD.41875 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.41879 => _26
  # DEBUG thisD.41877 => D#65ptD.0
  # DEBUG D.41878 => D#66ptD.0
  # .MEM_64 = VDEF <.MEM_63>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_41 = PHI <.MEM_63(19), .MEM_64(20)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.41880 => D#72ptD.0
  # DEBUG thisD.41881 => D#72ptD.0
  # DEBUG thisD.41882 => D#72ptD.0
  # .MEM_69 = VDEF <.MEM_41>
  MEM[(struct  &)this_4(D) + 112] ={v} {CLOBBER};
  # DEBUG D#230ptD.0 => &MEM[(struct AllocatorD.33564 *)this_4(D)].D.34407
  # DEBUG thisD.41922 => D#230ptD.0
  # .MEM_70 = VDEF <.MEM_69>
  MEM[(struct ModuleD.28688 *)this_4(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#64ptD.0 => &D#230ptD.0->_childrenD.29438
  # DEBUG thisD.41923 => D#64ptD.0
  # DEBUG D#58ptD.0 => &D#64ptD.0->D.29436
  # DEBUG thisD.39929 => D#58ptD.0
  # DEBUG D#61ptD.0 => D#64ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#60ptD.0 => D#64ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#15ptD.0 => D#60ptD.0
  # DEBUG D#16ptD.0 => D#61ptD.0
  # DEBUG __firstD.39928 => D#15ptD.0
  # DEBUG __lastD.39927 => D#16ptD.0
  # DEBUG D.39926 => D#17ptD.0
  # DEBUG D#14ptD.0 => D#16ptD.0
  # DEBUG D#13ptD.0 => D#15ptD.0
  # DEBUG D#11ptD.0 => D#13ptD.0
  # DEBUG D#12ptD.0 => D#14ptD.0
  # DEBUG __firstD.39690 => D#11ptD.0
  # DEBUG __lastD.39689 => D#12ptD.0
  # DEBUG D#10ptD.0 => D#12ptD.0
  # DEBUG D#9ptD.0 => D#11ptD.0
  # DEBUG D#7ptD.0 => D#9ptD.0
  # DEBUG D#8ptD.0 => D#10ptD.0
  # DEBUG D.39679 => D#7ptD.0
  # DEBUG D.39678 => D#8ptD.0
  # DEBUG D#59ptD.0 => &D#64ptD.0->D.29436
  # DEBUG thisD.41924 => D#59ptD.0
  # DEBUG D#57ptD.0 => D#59ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#56ptD.0 => (long intD.12) D#57ptD.0
  # VUSE <.MEM_70>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Vector_baseD.28694 *)this_4(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#55ptD.0 => (long intD.12) _22
  # DEBUG D#54ptD.0 => D#56ptD.0 - D#55ptD.0
  # DEBUG D#53ptD.0 => D#54ptD.0 /[ex] 8
  # DEBUG D#50ptD.0 => D#59ptD.0
  # DEBUG D#51ptD.0 => (long unsigned intD.14) D#53ptD.0
  # DEBUG __pD.41927 => _22
  # DEBUG thisD.41925 => D#50ptD.0
  # DEBUG __nD.41926 => D#51ptD.0
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  if (_22 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#47ptD.0 => &D#48ptD.0->_M_implD.28927
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#49ptD.0
  # DEBUG __pD.41931 => _22
  # DEBUG __aD.41929 => D#45ptD.0
  # DEBUG __nD.41930 => D#46ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG __pD.41934 => _22
  # DEBUG thisD.41932 => D#41ptD.0
  # DEBUG D.41933 => D#42ptD.0
  # .MEM_71 = VDEF <.MEM_70>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_42 = PHI <.MEM_70(21), .MEM_71(22)>
  # DEBUG D#52ptD.0 => &D#59ptD.0->_M_implD.28927
  # DEBUG thisD.41935 => D#52ptD.0
  # DEBUG thisD.41936 => D#52ptD.0
  # DEBUG thisD.41937 => D#52ptD.0
  # .MEM_76 = VDEF <.MEM_42>
  MEM[(struct  &)this_4(D) + 72] ={v} {CLOBBER};
  # DEBUG D#63ptD.0 => &D#230ptD.0->_fullnameD.28691
  # DEBUG thisD.41938 => D#63ptD.0
  # DEBUG thisD.41939 => D#63ptD.0
  # DEBUG thisD.41948 => D#63ptD.0
  # VUSE <.MEM_76>
  # PT = nonlocal escaped 
  _33 = MEM[(charD.10 * *)this_4(D) + 40B];
  # DEBUG D#1ptD.0 => D#63ptD.0
  # DEBUG thisD.39612 => D#1ptD.0
  # DEBUG thisD.41949 => D#63ptD.0
  # PT = nonlocal 
  _34 = &MEM[(const struct basic_stringD.2844 *)this_4(D) + 40B].D.11539._M_local_bufD.11541;
  if (_33 != _34)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#39ptD.0 => MEM[(struct basic_stringD.2844 *)D#63ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#38ptD.0 => D#39ptD.0
  # DEBUG thisD.41941 => D#63ptD.0
  # DEBUG __sizeD.41940 => D#38ptD.0
  # DEBUG D#37ptD.0 => D#38ptD.0
  # DEBUG D#1ptD.0 => D#63ptD.0
  # DEBUG thisD.39811 => D#1ptD.0
  # DEBUG thisD.39812 => D#63ptD.0
  # DEBUG D#36ptD.0 => &MEM[(struct basic_stringD.2844 *)D#63ptD.0]._M_dataplusD.11519
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0 + 1
  # DEBUG __pD.41944 => _33
  # DEBUG __aD.41942 => D#34ptD.0
  # DEBUG __nD.41943 => D#35ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG __pD.41947 => _33
  # DEBUG thisD.41945 => D#30ptD.0
  # DEBUG D.41946 => D#31ptD.0
  # .MEM_77 = VDEF <.MEM_76>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_33);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_43 = PHI <.MEM_76(23), .MEM_77(24)>
  # DEBUG D#40ptD.0 => &MEM[(struct basic_stringD.2844 *)D#63ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41950 => D#40ptD.0
  # DEBUG thisD.41951 => D#40ptD.0
  # DEBUG thisD.41952 => D#40ptD.0
  # .MEM_81 = VDEF <.MEM_43>
  MEM[(struct  &)this_4(D) + 40] ={v} {CLOBBER};
  # DEBUG D#62ptD.0 => &D#230ptD.0->_nameD.28690
  # DEBUG thisD.41953 => D#62ptD.0
  # DEBUG thisD.41954 => D#62ptD.0
  # DEBUG thisD.41963 => D#62ptD.0
  # VUSE <.MEM_81>
  # PT = nonlocal escaped 
  _35 = MEM[(charD.10 * *)this_4(D) + 8B];
  # DEBUG D#1ptD.0 => D#62ptD.0
  # DEBUG thisD.39612 => D#1ptD.0
  # DEBUG thisD.41964 => D#62ptD.0
  # PT = nonlocal 
  _36 = &MEM[(const struct basic_stringD.2844 *)this_4(D) + 8B].D.11539._M_local_bufD.11541;
  if (_35 != _36)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#39ptD.0 => MEM[(struct basic_stringD.2844 *)D#62ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#38ptD.0 => D#39ptD.0
  # DEBUG thisD.41956 => D#62ptD.0
  # DEBUG __sizeD.41955 => D#38ptD.0
  # DEBUG D#37ptD.0 => D#38ptD.0
  # DEBUG D#1ptD.0 => D#62ptD.0
  # DEBUG thisD.39811 => D#1ptD.0
  # DEBUG thisD.39812 => D#62ptD.0
  # DEBUG D#36ptD.0 => &MEM[(struct basic_stringD.2844 *)D#62ptD.0]._M_dataplusD.11519
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0 + 1
  # DEBUG __pD.41959 => _35
  # DEBUG __aD.41957 => D#34ptD.0
  # DEBUG __nD.41958 => D#35ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG __pD.41962 => _35
  # DEBUG thisD.41960 => D#30ptD.0
  # DEBUG D.41961 => D#31ptD.0
  # .MEM_82 = VDEF <.MEM_81>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_35);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 26, next block 1, flags: (NEW, REACHABLE)
;;    pred:       25 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_44 = PHI <.MEM_81(25), .MEM_82(26)>
  # DEBUG D#40ptD.0 => &MEM[(struct basic_stringD.2844 *)D#62ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41965 => D#40ptD.0
  # DEBUG thisD.41966 => D#40ptD.0
  # DEBUG thisD.41967 => D#40ptD.0
  # .MEM_12 = VDEF <.MEM_44>
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_4(D)->D.36959.D.35235.D.34407._vptr.Module
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for this_4(D)->_s
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1664
Creating dr for this_4(D)->_ns
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1728
Creating dr for MEM[(struct _Vector_base *)this_4(D) + 184B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_4(D) + 184B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)__first_27]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_28
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_28]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_27]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_28
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_28]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_27]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_28
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_28]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_27]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_28
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_28]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_28 + 24, + , 24](no_overflow) != _23
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _23 - (unsigned long) (__first_28 + 24) & 7) == 0
    # of iterations (((unsigned long) _23 - (unsigned long) (__first_28 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)__first_27]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_28
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_28]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_27]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_28
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_28]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_27]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_28
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_28]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_27]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_28
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_28]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_28 + 24, + , 24](no_overflow) != _23
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _23 - (unsigned long) (__first_28 + 24) & 7) == 0
    # of iterations (((unsigned long) _23 - (unsigned long) (__first_28 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)this_4(D) + 160B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_4(D) + 160B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:29, LOOPS:1, CONDITIONS:12, STMTS:408)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # .MEM_5 = VDEF <.MEM_3(D)>
    this_4(D)->D.36959.D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV12MaxSizeMatch + 16B];
    # VUSE <.MEM_5>
    _6 = this_4(D)->_s;
    if (_6 != 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:
    # .MEM_7 = VDEF <.MEM_5>
    operator delete [] (_6);

  }
  bb_4 (preds = {bb_2 bb_3 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # .MEM_1 = PHI <.MEM_5(2), .MEM_7(3)>
    # VUSE <.MEM_1>
    _8 = this_4(D)->_ns;
    if (_8 != 0B)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 })
  {
    <bb 5>:
    # .MEM_9 = VDEF <.MEM_1>
    operator delete [] (_8);

  }
  bb_6 (preds = {bb_4 bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # .MEM_2 = PHI <.MEM_1(4), .MEM_9(5)>
    # DEBUG D#202 => &this_4(D)->_from
    # DEBUG this => D#202
    # DEBUG D#79 => &D#202->D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => D#202->D.34311._M_impl._M_finish
    # DEBUG D#81 => D#202->D.34311._M_impl._M_start
    # DEBUG __first => D#81
    # DEBUG __last => D#82
    # DEBUG D.40040 => NULL
    # DEBUG D#22 => D#81
    # DEBUG D#23 => D#82
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.39717 => D#18
    # DEBUG D.39716 => D#19
    # DEBUG D#80 => &D#202->D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # VUSE <.MEM_2>
    _11 = MEM[(struct _Vector_base *)this_4(D) + 184B]._M_impl._M_start;
    # DEBUG D#76 => (long int) _11
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#73 => (long unsigned int) D#74
    # DEBUG this => D#80
    # DEBUG __p => _11
    # DEBUG __n => D#73
    if (_11 != 0B)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    # DEBUG D#71 => &D#80->_M_impl
    # DEBUG D#69 => D#71
    # DEBUG D#70 => D#73
    # DEBUG __p => _11
    # DEBUG __a => D#69
    # DEBUG __n => D#70
    # DEBUG D#68 => D#70
    # DEBUG D#67 => D#69
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#68
    # DEBUG __p => _11
    # DEBUG this => D#65
    # DEBUG D.41233 => D#66
    # .MEM_15 = VDEF <.MEM_2>
    operator delete (_11);

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_15 bb_9 })
  {
    <bb 8>:
    # .MEM_10 = PHI <.MEM_2(6), .MEM_15(7)>
    # DEBUG D#72 => &D#80->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_20 = VDEF <.MEM_10>
    MEM[(struct  &)this_4(D) + 184] ={v} {CLOBBER};
    # DEBUG D#201 => &this_4(D)->D.36959
    # DEBUG this => D#201
    # .MEM_21 = VDEF <.MEM_20>
    MEM[(struct DenseAllocator *)this_4(D)].D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV14DenseAllocator + 16B];
    # DEBUG D#232 => &MEM[(struct DenseAllocator *)this_4(D)]._request
    # DEBUG this => D#232
    # DEBUG D#199 => &D#232->D.35164
    # DEBUG this => D#199
    # VUSE <.MEM_21>
    _23 = MEM[(struct vector *)this_4(D) + 160B].D.35164._M_impl._M_finish;
    # VUSE <.MEM_21>
    __first_28 = MEM[(struct vector *)this_4(D) + 160B].D.35164._M_impl._M_start;
    # DEBUG __first => __first_28
    # DEBUG __last => _23
    # DEBUG __first => __first_28
    if (_23 == __first_28)
      goto <bb 15>;
    else
      goto <bb 9>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:

  }
  bb_14 (preds = {bb_12 }, succs = {bb_28 })
  {
    <bb 14>:

  }
  bb_28 (preds = {bb_14 }, succs = {bb_15 })
  {
    <bb 28>:
    # VUSE <.MEM_50>
    pretmp_47 = MEM[(struct _Vector_base *)this_4(D) + 160B]._M_impl._M_start;

  }
  bb_15 (preds = {bb_28 bb_8 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_100 = PHI <.MEM_50(28), .MEM_21(8)>
    # prephitmp_48 = PHI <pretmp_47(28), __first_28(8)>
    # DEBUG D#200 => &D#232->D.35164
    # DEBUG this => D#200
    # DEBUG D#101 => D#200->_M_impl._M_end_of_storage
    # DEBUG D#100 => (long int) D#101
    # DEBUG D#233 => MEM[(struct _Vector_base *)this_4(D) + 160B]._M_impl._M_start
    # DEBUG D#99 => (long int) D#233
    # DEBUG D#98 => D#100 - D#99
    # DEBUG D#97 => D#98 /[ex] 24
    # DEBUG D#94 => D#200
    # DEBUG D#95 => (long unsigned int) D#97
    # DEBUG __p => D#233
    # DEBUG this => D#94
    # DEBUG __n => D#95
    # DEBUG D#93 => D#95
    # DEBUG D#92 => D#94
    if (prephitmp_48 != 0B)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # DEBUG D#91 => &D#92->_M_impl
    # DEBUG D#89 => D#91
    # DEBUG D#90 => D#93
    # DEBUG __p => D#233
    # DEBUG __a => D#89
    # DEBUG __n => D#90
    # DEBUG D#88 => D#90
    # DEBUG D#87 => D#89
    # DEBUG D#85 => D#87
    # DEBUG D#86 => D#88
    # DEBUG __p => D#233
    # DEBUG this => D#85
    # DEBUG D.41917 => D#86
    # .MEM_51 = VDEF <.MEM_100>
    operator delete (prephitmp_48);

  }
  bb_17 (preds = {bb_15 bb_16 }, succs = {bb_18 bb_19 })
  {
    <bb 17>:
    # .MEM_39 = PHI <.MEM_100(15), .MEM_51(16)>
    # DEBUG D#96 => &D#200->_M_impl
    # DEBUG this => D#96
    # DEBUG this => D#96
    # DEBUG this => D#96
    # .MEM_56 = VDEF <.MEM_39>
    MEM[(struct  &)this_4(D) + 160] ={v} {CLOBBER};
    # DEBUG D#231 => &MEM[(struct DenseAllocator *)this_4(D)].D.35235
    # DEBUG this => D#231
    # .MEM_57 = VDEF <.MEM_56>
    MEM[(struct Allocator *)this_4(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
    # DEBUG D#84 => &D#231->_outmatch
    # DEBUG this => D#84
    # DEBUG D#79 => &D#84->D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => D#84->D.34311._M_impl._M_finish
    # DEBUG D#81 => D#84->D.34311._M_impl._M_start
    # DEBUG __first => D#81
    # DEBUG __last => D#82
    # DEBUG D.40040 => NULL
    # DEBUG D#22 => D#81
    # DEBUG D#23 => D#82
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.39717 => D#18
    # DEBUG D.39716 => D#19
    # DEBUG D#80 => &D#84->D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # VUSE <.MEM_57>
    _25 = MEM[(struct _Vector_base *)this_4(D) + 136B]._M_impl._M_start;
    # DEBUG D#76 => (long int) _25
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#73 => (long unsigned int) D#74
    # DEBUG this => D#80
    # DEBUG __p => _25
    # DEBUG __n => D#73
    if (_25 != 0B)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#71 => &D#80->_M_impl
    # DEBUG D#69 => D#71
    # DEBUG D#70 => D#73
    # DEBUG __p => _25
    # DEBUG __a => D#69
    # DEBUG __n => D#70
    # DEBUG D#68 => D#70
    # DEBUG D#67 => D#69
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#68
    # DEBUG __p => _25
    # DEBUG this => D#65
    # DEBUG D.41863 => D#66
    # .MEM_58 = VDEF <.MEM_57>
    operator delete (_25);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {bb_20 bb_21 })
  {
    <bb 19>:
    # .MEM_40 = PHI <.MEM_57(17), .MEM_58(18)>
    # DEBUG D#72 => &D#80->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_63 = VDEF <.MEM_40>
    MEM[(struct  &)this_4(D) + 136] ={v} {CLOBBER};
    # DEBUG D#83 => &D#231->_inmatch
    # DEBUG this => D#83
    # DEBUG D#79 => &D#83->D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => D#83->D.34311._M_impl._M_finish
    # DEBUG D#81 => D#83->D.34311._M_impl._M_start
    # DEBUG __first => D#81
    # DEBUG __last => D#82
    # DEBUG D.40040 => NULL
    # DEBUG D#22 => D#81
    # DEBUG D#23 => D#82
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.39717 => D#18
    # DEBUG D.39716 => D#19
    # DEBUG D#80 => &D#83->D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # VUSE <.MEM_63>
    _26 = MEM[(struct _Vector_base *)this_4(D) + 112B]._M_impl._M_start;
    # DEBUG D#76 => (long int) _26
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#73 => (long unsigned int) D#74
    # DEBUG this => D#80
    # DEBUG __p => _26
    # DEBUG __n => D#73
    if (_26 != 0B)
      goto <bb 20>;
    else
      goto <bb 21>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_21 })
  {
    <bb 20>:
    # DEBUG D#71 => &D#80->_M_impl
    # DEBUG D#69 => D#71
    # DEBUG D#70 => D#73
    # DEBUG __p => _26
    # DEBUG __a => D#69
    # DEBUG __n => D#70
    # DEBUG D#68 => D#70
    # DEBUG D#67 => D#69
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#68
    # DEBUG __p => _26
    # DEBUG this => D#65
    # DEBUG D.41878 => D#66
    # .MEM_64 = VDEF <.MEM_63>
    operator delete (_26);

  }
  bb_21 (preds = {bb_19 bb_20 }, succs = {bb_22 bb_23 })
  {
    <bb 21>:
    # .MEM_41 = PHI <.MEM_63(19), .MEM_64(20)>
    # DEBUG D#72 => &D#80->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_69 = VDEF <.MEM_41>
    MEM[(struct  &)this_4(D) + 112] ={v} {CLOBBER};
    # DEBUG D#230 => &MEM[(struct Allocator *)this_4(D)].D.34407
    # DEBUG this => D#230
    # .MEM_70 = VDEF <.MEM_69>
    MEM[(struct Module *)this_4(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#64 => &D#230->_children
    # DEBUG this => D#64
    # DEBUG D#58 => &D#64->D.29436
    # DEBUG this => D#58
    # DEBUG D#61 => D#64->D.29436._M_impl._M_finish
    # DEBUG D#60 => D#64->D.29436._M_impl._M_start
    # DEBUG D#15 => D#60
    # DEBUG D#16 => D#61
    # DEBUG __first => D#15
    # DEBUG __last => D#16
    # DEBUG D.39926 => D#17
    # DEBUG D#14 => D#16
    # DEBUG D#13 => D#15
    # DEBUG D#11 => D#13
    # DEBUG D#12 => D#14
    # DEBUG __first => D#11
    # DEBUG __last => D#12
    # DEBUG D#10 => D#12
    # DEBUG D#9 => D#11
    # DEBUG D#7 => D#9
    # DEBUG D#8 => D#10
    # DEBUG D.39679 => D#7
    # DEBUG D.39678 => D#8
    # DEBUG D#59 => &D#64->D.29436
    # DEBUG this => D#59
    # DEBUG D#57 => D#59->_M_impl._M_end_of_storage
    # DEBUG D#56 => (long int) D#57
    # VUSE <.MEM_70>
    _22 = MEM[(struct _Vector_base *)this_4(D) + 72B]._M_impl._M_start;
    # DEBUG D#55 => (long int) _22
    # DEBUG D#54 => D#56 - D#55
    # DEBUG D#53 => D#54 /[ex] 8
    # DEBUG D#50 => D#59
    # DEBUG D#51 => (long unsigned int) D#53
    # DEBUG __p => _22
    # DEBUG this => D#50
    # DEBUG __n => D#51
    # DEBUG D#49 => D#51
    # DEBUG D#48 => D#50
    if (_22 != 0B)
      goto <bb 22>;
    else
      goto <bb 23>;

  }
  bb_22 (preds = {bb_21 }, succs = {bb_23 })
  {
    <bb 22>:
    # DEBUG D#47 => &D#48->_M_impl
    # DEBUG D#45 => D#47
    # DEBUG D#46 => D#49
    # DEBUG __p => _22
    # DEBUG __a => D#45
    # DEBUG __n => D#46
    # DEBUG D#44 => D#46
    # DEBUG D#43 => D#45
    # DEBUG D#41 => D#43
    # DEBUG D#42 => D#44
    # DEBUG __p => _22
    # DEBUG this => D#41
    # DEBUG D.41933 => D#42
    # .MEM_71 = VDEF <.MEM_70>
    operator delete (_22);

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # .MEM_42 = PHI <.MEM_70(21), .MEM_71(22)>
    # DEBUG D#52 => &D#59->_M_impl
    # DEBUG this => D#52
    # DEBUG this => D#52
    # DEBUG this => D#52
    # .MEM_76 = VDEF <.MEM_42>
    MEM[(struct  &)this_4(D) + 72] ={v} {CLOBBER};
    # DEBUG D#63 => &D#230->_fullname
    # DEBUG this => D#63
    # DEBUG this => D#63
    # DEBUG this => D#63
    # VUSE <.MEM_76>
    _33 = MEM[(char * *)this_4(D) + 40B];
    # DEBUG D#1 => D#63
    # DEBUG this => D#1
    # DEBUG this => D#63
    _34 = &MEM[(const struct basic_string *)this_4(D) + 40B].D.11539._M_local_buf;
    if (_33 != _34)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    # DEBUG D#39 => MEM[(struct basic_string *)D#63].D.11539._M_allocated_capacity
    # DEBUG D#38 => D#39
    # DEBUG this => D#63
    # DEBUG __size => D#38
    # DEBUG D#37 => D#38
    # DEBUG D#1 => D#63
    # DEBUG this => D#1
    # DEBUG this => D#63
    # DEBUG D#36 => &MEM[(struct basic_string *)D#63]._M_dataplus
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37 + 1
    # DEBUG __p => _33
    # DEBUG __a => D#34
    # DEBUG __n => D#35
    # DEBUG D#33 => D#35
    # DEBUG D#32 => D#34
    # DEBUG D#30 => D#32
    # DEBUG D#31 => D#33
    # DEBUG __p => _33
    # DEBUG this => D#30
    # DEBUG D.41946 => D#31
    # .MEM_77 = VDEF <.MEM_76>
    operator delete (_33);

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {bb_26 bb_27 })
  {
    <bb 25>:
    # .MEM_43 = PHI <.MEM_76(23), .MEM_77(24)>
    # DEBUG D#40 => &MEM[(struct basic_string *)D#63]._M_dataplus
    # DEBUG this => D#40
    # DEBUG this => D#40
    # DEBUG this => D#40
    # .MEM_81 = VDEF <.MEM_43>
    MEM[(struct  &)this_4(D) + 40] ={v} {CLOBBER};
    # DEBUG D#62 => &D#230->_name
    # DEBUG this => D#62
    # DEBUG this => D#62
    # DEBUG this => D#62
    # VUSE <.MEM_81>
    _35 = MEM[(char * *)this_4(D) + 8B];
    # DEBUG D#1 => D#62
    # DEBUG this => D#1
    # DEBUG this => D#62
    _36 = &MEM[(const struct basic_string *)this_4(D) + 8B].D.11539._M_local_buf;
    if (_35 != _36)
      goto <bb 26>;
    else
      goto <bb 27>;

  }
  bb_26 (preds = {bb_25 }, succs = {bb_27 })
  {
    <bb 26>:
    # DEBUG D#39 => MEM[(struct basic_string *)D#62].D.11539._M_allocated_capacity
    # DEBUG D#38 => D#39
    # DEBUG this => D#62
    # DEBUG __size => D#38
    # DEBUG D#37 => D#38
    # DEBUG D#1 => D#62
    # DEBUG this => D#1
    # DEBUG this => D#62
    # DEBUG D#36 => &MEM[(struct basic_string *)D#62]._M_dataplus
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37 + 1
    # DEBUG __p => _35
    # DEBUG __a => D#34
    # DEBUG __n => D#35
    # DEBUG D#33 => D#35
    # DEBUG D#32 => D#34
    # DEBUG D#30 => D#32
    # DEBUG D#31 => D#33
    # DEBUG __p => _35
    # DEBUG this => D#30
    # DEBUG D.41961 => D#31
    # .MEM_82 = VDEF <.MEM_81>
    operator delete (_35);

  }
  bb_27 (preds = {bb_25 bb_26 }, succs = {bb_1 })
  {
    <bb 27>:
    # .MEM_44 = PHI <.MEM_81(25), .MEM_82(26)>
    # DEBUG D#40 => &MEM[(struct basic_string *)D#62]._M_dataplus
    # DEBUG this => D#40
    # DEBUG this => D#40
    # DEBUG this => D#40
    # .MEM_12 = VDEF <.MEM_44>
    MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
    # VUSE <.MEM_12>
    return;

  }
  loop_1 (header = 10, latch = 13, niter = )
  {
    bb_10 (preds = {bb_9 bb_13 }, succs = {bb_11 bb_12 })
    {
      <bb 10>:
      # __first_27 = PHI <__first_28(9), __first_31(13)>
      # .MEM_101 = PHI <.MEM_21(9), .MEM_50(13)>
      # DEBUG __first => __first_27
      # DEBUG __r => __first_27
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#194
      # DEBUG D#174 => D#196
      # DEBUG D#175 => D#197
      # DEBUG __first => D#174
      # DEBUG __last => D#175
      # DEBUG D.41068 => D#176
      # DEBUG D#173 => D#175
      # DEBUG D#172 => D#174
      # DEBUG D#170 => D#172
      # DEBUG D#171 => D#173
      # DEBUG __first => D#170
      # DEBUG __last => D#171
      # DEBUG D#169 => D#171
      # DEBUG D#168 => D#170
      # DEBUG D#166 => D#168
      # DEBUG D#167 => D#169
      # DEBUG D.40971 => D#166
      # DEBUG D.40970 => D#167
      # DEBUG this => D#195
      # DEBUG D#193 => D#195->_M_impl._M_end_of_storage
      # DEBUG D#192 => (long int) D#193
      # VUSE <.MEM_101>
      _30 = MEM[(struct _Vector_base *)__first_27]._M_impl._M_start;
      # DEBUG D#191 => (long int) _30
      # DEBUG D#190 => D#192 - D#191
      # DEBUG D#189 => D#190 /[ex] 16
      # DEBUG D#186 => D#195
      # DEBUG D#187 => (long unsigned int) D#189
      # DEBUG __p => _30
      # DEBUG this => D#186
      # DEBUG __n => D#187
      # DEBUG D#185 => D#187
      # DEBUG D#184 => D#186
      if (_30 != 0B)
        goto <bb 11>;
      else
        goto <bb 12>;

    }
    bb_11 (preds = {bb_10 }, succs = {bb_12 })
    {
      <bb 11>:
      # DEBUG D#183 => &D#184->_M_impl
      # DEBUG D#181 => D#183
      # DEBUG D#182 => D#185
      # DEBUG __p => _30
      # DEBUG __a => D#181
      # DEBUG __n => D#182
      # DEBUG D#180 => D#182
      # DEBUG D#179 => D#181
      # DEBUG D#177 => D#179
      # DEBUG D#178 => D#180
      # DEBUG __p => _30
      # DEBUG this => D#177
      # DEBUG D.41903 => D#178
      # .MEM_45 = VDEF <.MEM_101>
      operator delete (_30);

    }
    bb_12 (preds = {bb_10 bb_11 }, succs = {bb_14 bb_13 })
    {
      <bb 12>:
      # .MEM_38 = PHI <.MEM_101(10), .MEM_45(11)>
      # DEBUG D#188 => &D#195->_M_impl
      # DEBUG this => D#188
      # DEBUG this => D#188
      # DEBUG this => D#188
      # .MEM_50 = VDEF <.MEM_38>
      MEM[(struct  &)__first_27] ={v} {CLOBBER};
      __first_31 = __first_27 + 24;
      # DEBUG __first => __first_31
      # DEBUG __first => __first_31
      if (_23 == __first_31)
        goto <bb 14>;
      else
        goto <bb 13>;

    }
    bb_13 (preds = {bb_12 }, succs = {bb_10 })
    {
      <bb 13>:
      goto <bb 10>;

    }
  }
}

Pass statistics:
----------------

MaxSizeMatch::~MaxSizeMatch() (struct MaxSizeMatchD.36919 * const thisD.36957)
{
  struct vectorD.34419 * __firstD.41886;
  intD.9 * _6;
  intD.9 * _8;
  intD.9 * _11;
  struct ModuleD.28688 * * _22;
  struct vectorD.34419 * _23;
  intD.9 * _25;
  intD.9 * _26;
  struct sRequestD.34315 * _30;
  charD.10 * const _33;
  const charD.10 * _34;
  charD.10 * const _35;
  const charD.10 * _36;
  struct vectorD.34419 * pretmp_47;
  struct vectorD.34419 * prephitmp_48;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = VDEF <.MEM_3(D)>
  this_4(D)->D.36959.D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV12MaxSizeMatchD.36965 + 16B];
  # VUSE <.MEM_5>
  # PT = nonlocal escaped 
  _6 = this_4(D)->_sD.36922;
  if (_6 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_7 = VDEF <.MEM_5>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdaPvD.2767 (_6);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_5(2), .MEM_7(3)>
  # VUSE <.MEM_1>
  # PT = nonlocal escaped 
  _8 = this_4(D)->_nsD.36923;
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_9 = VDEF <.MEM_1>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdaPvD.2767 (_8);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_1(4), .MEM_9(5)>
  # DEBUG D#202ptD.0 => &this_4(D)->_fromD.36921
  # DEBUG thisD.41223 => D#202ptD.0
  # DEBUG D#79ptD.0 => &D#202ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#202ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#202ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#202ptD.0->D.34311
  # DEBUG thisD.41224 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_2>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 184B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _11
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.41227 => D#80ptD.0
  # DEBUG __pD.41226 => _11
  # DEBUG __nD.41225 => D#73ptD.0
  if (_11 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.41231 => _11
  # DEBUG __aD.41229 => D#69ptD.0
  # DEBUG __nD.41230 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.41234 => _11
  # DEBUG thisD.41232 => D#65ptD.0
  # DEBUG D.41233 => D#66ptD.0
  # .MEM_15 = VDEF <.MEM_2>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_11);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_10 = PHI <.MEM_2(6), .MEM_15(7)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.41235 => D#72ptD.0
  # DEBUG thisD.41236 => D#72ptD.0
  # DEBUG thisD.41237 => D#72ptD.0
  # .MEM_20 = VDEF <.MEM_10>
  MEM[(struct  &)this_4(D) + 184] ={v} {CLOBBER};
  # DEBUG D#201ptD.0 => &this_4(D)->D.36959
  # DEBUG thisD.41222 => D#201ptD.0
  # .MEM_21 = VDEF <.MEM_20>
  MEM[(struct DenseAllocatorD.34416 *)this_4(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#232ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_4(D)]._requestD.35166
  # DEBUG thisD.41883 => D#232ptD.0
  # DEBUG D#199ptD.0 => &D#232ptD.0->D.35164
  # DEBUG thisD.41216 => D#199ptD.0
  # VUSE <.MEM_21>
  # PT = nonlocal escaped 
  _23 = MEM[(struct vectorD.34421 *)this_4(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_21>
  # PT = nonlocal escaped 
  __first_28 = MEM[(struct vectorD.34421 *)this_4(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.41886 => __first_28
  # DEBUG __lastD.41885 => _23
  # DEBUG __firstD.41891 => __first_28
  if (_23 == __first_28)
    goto <bb 15>;
  else
    goto <bb 9>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_27 = PHI <__first_28(9), __first_31(13)>
  # .MEM_101 = PHI <.MEM_21(9), .MEM_50(13)>
  # DEBUG __firstD.41891 => __first_27
  # DEBUG __rD.41106 => __first_27
  # DEBUG __pointerD.41892 => NULL
  # DEBUG thisD.41893 => NULL
  # DEBUG thisD.41071 => D#194ptD.0
  # DEBUG D#174ptD.0 => D#196ptD.0
  # DEBUG D#175ptD.0 => D#197ptD.0
  # DEBUG __firstD.41070 => D#174ptD.0
  # DEBUG __lastD.41069 => D#175ptD.0
  # DEBUG D.41068 => D#176ptD.0
  # DEBUG D#173ptD.0 => D#175ptD.0
  # DEBUG D#172ptD.0 => D#174ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => D#173ptD.0
  # DEBUG __firstD.40982 => D#170ptD.0
  # DEBUG __lastD.40981 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0
  # DEBUG D#168ptD.0 => D#170ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0
  # DEBUG D#167ptD.0 => D#169ptD.0
  # DEBUG D.40971 => D#166ptD.0
  # DEBUG D.40970 => D#167ptD.0
  # DEBUG thisD.41894 => D#195ptD.0
  # DEBUG D#193ptD.0 => D#195ptD.0->_M_implD.37294._M_end_of_storageD.37298
  # DEBUG D#192ptD.0 => (long intD.12) D#193ptD.0
  # VUSE <.MEM_101>
  # PT = nonlocal escaped 
  _30 = MEM[(struct _Vector_baseD.37061 *)__first_27]._M_implD.37294._M_startD.37296;
  # DEBUG D#191ptD.0 => (long intD.12) _30
  # DEBUG D#190ptD.0 => D#192ptD.0 - D#191ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0 /[ex] 16
  # DEBUG D#186ptD.0 => D#195ptD.0
  # DEBUG D#187ptD.0 => (long unsigned intD.14) D#189ptD.0
  # DEBUG __pD.41897 => _30
  # DEBUG thisD.41895 => D#186ptD.0
  # DEBUG __nD.41896 => D#187ptD.0
  # DEBUG D#185ptD.0 => D#187ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0
  if (_30 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#183ptD.0 => &D#184ptD.0->_M_implD.37294
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#185ptD.0
  # DEBUG __pD.41901 => _30
  # DEBUG __aD.41899 => D#181ptD.0
  # DEBUG __nD.41900 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.41904 => _30
  # DEBUG thisD.41902 => D#177ptD.0
  # DEBUG D.41903 => D#178ptD.0
  # .MEM_45 = VDEF <.MEM_101>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_30);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_101(10), .MEM_45(11)>
  # DEBUG D#188ptD.0 => &D#195ptD.0->_M_implD.37294
  # DEBUG thisD.41905 => D#188ptD.0
  # DEBUG thisD.41906 => D#188ptD.0
  # DEBUG thisD.41907 => D#188ptD.0
  # .MEM_50 = VDEF <.MEM_38>
  MEM[(struct  &)__first_27] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_31 = __first_27 + 24;
  # DEBUG __firstD.41891 => __first_31
  # DEBUG __firstD.41891 => __first_31
  if (_23 == __first_31)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 28, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       28 [100.0%]  (FALLTHRU)

;;   basic block 28, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_50>
  pretmp_47 = MEM[(struct _Vector_baseD.34422 *)this_4(D) + 160B]._M_implD.34655._M_startD.34657;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 28, next block 16, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_50(28), .MEM_21(8)>
  # PT = nonlocal escaped 
  # prephitmp_48 = PHI <pretmp_47(28), __first_28(8)>
  # DEBUG D#200ptD.0 => &D#232ptD.0->D.35164
  # DEBUG thisD.41908 => D#200ptD.0
  # DEBUG D#101ptD.0 => D#200ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#100ptD.0 => (long intD.12) D#101ptD.0
  # DEBUG D#233ptD.0 => MEM[(struct _Vector_baseD.34422 *)this_4(D) + 160B]._M_implD.34655._M_startD.34657
  # DEBUG D#99ptD.0 => (long intD.12) D#233ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0 - D#99ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0 /[ex] 24
  # DEBUG D#94ptD.0 => D#200ptD.0
  # DEBUG D#95ptD.0 => (long unsigned intD.14) D#97ptD.0
  # DEBUG __pD.41911 => D#233ptD.0
  # DEBUG thisD.41909 => D#94ptD.0
  # DEBUG __nD.41910 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  if (prephitmp_48 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#91ptD.0 => &D#92ptD.0->_M_implD.34655
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#93ptD.0
  # DEBUG __pD.41915 => D#233ptD.0
  # DEBUG __aD.41913 => D#89ptD.0
  # DEBUG __nD.41914 => D#90ptD.0
  # DEBUG D#88ptD.0 => D#90ptD.0
  # DEBUG D#87ptD.0 => D#89ptD.0
  # DEBUG D#85ptD.0 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#88ptD.0
  # DEBUG __pD.41918 => D#233ptD.0
  # DEBUG thisD.41916 => D#85ptD.0
  # DEBUG D.41917 => D#86ptD.0
  # .MEM_51 = VDEF <.MEM_100>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_48);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_39 = PHI <.MEM_100(15), .MEM_51(16)>
  # DEBUG D#96ptD.0 => &D#200ptD.0->_M_implD.34655
  # DEBUG thisD.41919 => D#96ptD.0
  # DEBUG thisD.41920 => D#96ptD.0
  # DEBUG thisD.41921 => D#96ptD.0
  # .MEM_56 = VDEF <.MEM_39>
  MEM[(struct  &)this_4(D) + 160] ={v} {CLOBBER};
  # DEBUG D#231ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_4(D)].D.35235
  # DEBUG thisD.41852 => D#231ptD.0
  # .MEM_57 = VDEF <.MEM_56>
  MEM[(struct AllocatorD.33564 *)this_4(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#84ptD.0 => &D#231ptD.0->_outmatchD.34314
  # DEBUG thisD.41853 => D#84ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.41854 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _25 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _25
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.41857 => D#80ptD.0
  # DEBUG __pD.41856 => _25
  # DEBUG __nD.41855 => D#73ptD.0
  if (_25 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.41861 => _25
  # DEBUG __aD.41859 => D#69ptD.0
  # DEBUG __nD.41860 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.41864 => _25
  # DEBUG thisD.41862 => D#65ptD.0
  # DEBUG D.41863 => D#66ptD.0
  # .MEM_58 = VDEF <.MEM_57>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_57(17), .MEM_58(18)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.41865 => D#72ptD.0
  # DEBUG thisD.41866 => D#72ptD.0
  # DEBUG thisD.41867 => D#72ptD.0
  # .MEM_63 = VDEF <.MEM_40>
  MEM[(struct  &)this_4(D) + 136] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#231ptD.0->_inmatchD.34313
  # DEBUG thisD.41868 => D#83ptD.0
  # DEBUG D#79ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.41869 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_63>
  # PT = nonlocal escaped 
  _26 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _26
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.41872 => D#80ptD.0
  # DEBUG __pD.41871 => _26
  # DEBUG __nD.41870 => D#73ptD.0
  if (_26 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.41876 => _26
  # DEBUG __aD.41874 => D#69ptD.0
  # DEBUG __nD.41875 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.41879 => _26
  # DEBUG thisD.41877 => D#65ptD.0
  # DEBUG D.41878 => D#66ptD.0
  # .MEM_64 = VDEF <.MEM_63>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_41 = PHI <.MEM_63(19), .MEM_64(20)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.41880 => D#72ptD.0
  # DEBUG thisD.41881 => D#72ptD.0
  # DEBUG thisD.41882 => D#72ptD.0
  # .MEM_69 = VDEF <.MEM_41>
  MEM[(struct  &)this_4(D) + 112] ={v} {CLOBBER};
  # DEBUG D#230ptD.0 => &MEM[(struct AllocatorD.33564 *)this_4(D)].D.34407
  # DEBUG thisD.41922 => D#230ptD.0
  # .MEM_70 = VDEF <.MEM_69>
  MEM[(struct ModuleD.28688 *)this_4(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#64ptD.0 => &D#230ptD.0->_childrenD.29438
  # DEBUG thisD.41923 => D#64ptD.0
  # DEBUG D#58ptD.0 => &D#64ptD.0->D.29436
  # DEBUG thisD.39929 => D#58ptD.0
  # DEBUG D#61ptD.0 => D#64ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#60ptD.0 => D#64ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#15ptD.0 => D#60ptD.0
  # DEBUG D#16ptD.0 => D#61ptD.0
  # DEBUG __firstD.39928 => D#15ptD.0
  # DEBUG __lastD.39927 => D#16ptD.0
  # DEBUG D.39926 => D#17ptD.0
  # DEBUG D#14ptD.0 => D#16ptD.0
  # DEBUG D#13ptD.0 => D#15ptD.0
  # DEBUG D#11ptD.0 => D#13ptD.0
  # DEBUG D#12ptD.0 => D#14ptD.0
  # DEBUG __firstD.39690 => D#11ptD.0
  # DEBUG __lastD.39689 => D#12ptD.0
  # DEBUG D#10ptD.0 => D#12ptD.0
  # DEBUG D#9ptD.0 => D#11ptD.0
  # DEBUG D#7ptD.0 => D#9ptD.0
  # DEBUG D#8ptD.0 => D#10ptD.0
  # DEBUG D.39679 => D#7ptD.0
  # DEBUG D.39678 => D#8ptD.0
  # DEBUG D#59ptD.0 => &D#64ptD.0->D.29436
  # DEBUG thisD.41924 => D#59ptD.0
  # DEBUG D#57ptD.0 => D#59ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#56ptD.0 => (long intD.12) D#57ptD.0
  # VUSE <.MEM_70>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Vector_baseD.28694 *)this_4(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#55ptD.0 => (long intD.12) _22
  # DEBUG D#54ptD.0 => D#56ptD.0 - D#55ptD.0
  # DEBUG D#53ptD.0 => D#54ptD.0 /[ex] 8
  # DEBUG D#50ptD.0 => D#59ptD.0
  # DEBUG D#51ptD.0 => (long unsigned intD.14) D#53ptD.0
  # DEBUG __pD.41927 => _22
  # DEBUG thisD.41925 => D#50ptD.0
  # DEBUG __nD.41926 => D#51ptD.0
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  if (_22 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#47ptD.0 => &D#48ptD.0->_M_implD.28927
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#49ptD.0
  # DEBUG __pD.41931 => _22
  # DEBUG __aD.41929 => D#45ptD.0
  # DEBUG __nD.41930 => D#46ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG __pD.41934 => _22
  # DEBUG thisD.41932 => D#41ptD.0
  # DEBUG D.41933 => D#42ptD.0
  # .MEM_71 = VDEF <.MEM_70>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_42 = PHI <.MEM_70(21), .MEM_71(22)>
  # DEBUG D#52ptD.0 => &D#59ptD.0->_M_implD.28927
  # DEBUG thisD.41935 => D#52ptD.0
  # DEBUG thisD.41936 => D#52ptD.0
  # DEBUG thisD.41937 => D#52ptD.0
  # .MEM_76 = VDEF <.MEM_42>
  MEM[(struct  &)this_4(D) + 72] ={v} {CLOBBER};
  # DEBUG D#63ptD.0 => &D#230ptD.0->_fullnameD.28691
  # DEBUG thisD.41938 => D#63ptD.0
  # DEBUG thisD.41939 => D#63ptD.0
  # DEBUG thisD.41948 => D#63ptD.0
  # VUSE <.MEM_76>
  # PT = nonlocal escaped 
  _33 = MEM[(charD.10 * *)this_4(D) + 40B];
  # DEBUG D#1ptD.0 => D#63ptD.0
  # DEBUG thisD.39612 => D#1ptD.0
  # DEBUG thisD.41949 => D#63ptD.0
  # PT = nonlocal 
  _34 = &MEM[(const struct basic_stringD.2844 *)this_4(D) + 40B].D.11539._M_local_bufD.11541;
  if (_33 != _34)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#39ptD.0 => MEM[(struct basic_stringD.2844 *)D#63ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#38ptD.0 => D#39ptD.0
  # DEBUG thisD.41941 => D#63ptD.0
  # DEBUG __sizeD.41940 => D#38ptD.0
  # DEBUG D#37ptD.0 => D#38ptD.0
  # DEBUG D#1ptD.0 => D#63ptD.0
  # DEBUG thisD.39811 => D#1ptD.0
  # DEBUG thisD.39812 => D#63ptD.0
  # DEBUG D#36ptD.0 => &MEM[(struct basic_stringD.2844 *)D#63ptD.0]._M_dataplusD.11519
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0 + 1
  # DEBUG __pD.41944 => _33
  # DEBUG __aD.41942 => D#34ptD.0
  # DEBUG __nD.41943 => D#35ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG __pD.41947 => _33
  # DEBUG thisD.41945 => D#30ptD.0
  # DEBUG D.41946 => D#31ptD.0
  # .MEM_77 = VDEF <.MEM_76>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_33);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_43 = PHI <.MEM_76(23), .MEM_77(24)>
  # DEBUG D#40ptD.0 => &MEM[(struct basic_stringD.2844 *)D#63ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41950 => D#40ptD.0
  # DEBUG thisD.41951 => D#40ptD.0
  # DEBUG thisD.41952 => D#40ptD.0
  # .MEM_81 = VDEF <.MEM_43>
  MEM[(struct  &)this_4(D) + 40] ={v} {CLOBBER};
  # DEBUG D#62ptD.0 => &D#230ptD.0->_nameD.28690
  # DEBUG thisD.41953 => D#62ptD.0
  # DEBUG thisD.41954 => D#62ptD.0
  # DEBUG thisD.41963 => D#62ptD.0
  # VUSE <.MEM_81>
  # PT = nonlocal escaped 
  _35 = MEM[(charD.10 * *)this_4(D) + 8B];
  # DEBUG D#1ptD.0 => D#62ptD.0
  # DEBUG thisD.39612 => D#1ptD.0
  # DEBUG thisD.41964 => D#62ptD.0
  # PT = nonlocal 
  _36 = &MEM[(const struct basic_stringD.2844 *)this_4(D) + 8B].D.11539._M_local_bufD.11541;
  if (_35 != _36)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#39ptD.0 => MEM[(struct basic_stringD.2844 *)D#62ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#38ptD.0 => D#39ptD.0
  # DEBUG thisD.41956 => D#62ptD.0
  # DEBUG __sizeD.41955 => D#38ptD.0
  # DEBUG D#37ptD.0 => D#38ptD.0
  # DEBUG D#1ptD.0 => D#62ptD.0
  # DEBUG thisD.39811 => D#1ptD.0
  # DEBUG thisD.39812 => D#62ptD.0
  # DEBUG D#36ptD.0 => &MEM[(struct basic_stringD.2844 *)D#62ptD.0]._M_dataplusD.11519
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0 + 1
  # DEBUG __pD.41959 => _35
  # DEBUG __aD.41957 => D#34ptD.0
  # DEBUG __nD.41958 => D#35ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG __pD.41962 => _35
  # DEBUG thisD.41960 => D#30ptD.0
  # DEBUG D.41961 => D#31ptD.0
  # .MEM_82 = VDEF <.MEM_81>
  # USE = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 D.36965 } (nonlocal, escaped)
  _ZdlPvD.2766 (_35);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 26, next block 1, flags: (NEW, REACHABLE)
;;    pred:       25 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_44 = PHI <.MEM_81(25), .MEM_82(26)>
  # DEBUG D#40ptD.0 => &MEM[(struct basic_stringD.2844 *)D#62ptD.0]._M_dataplusD.11519
  # DEBUG thisD.41965 => D#40ptD.0
  # DEBUG thisD.41966 => D#40ptD.0
  # DEBUG thisD.41967 => D#40ptD.0
  # .MEM_12 = VDEF <.MEM_44>
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function bool MaxSizeMatch::_ShortestAugmenting() (_ZN12MaxSizeMatch19_ShortestAugmentingEv, funcdef_no=1722, decl_uid=36925, cgraph_uid=425, symbol_order=426)


Pass statistics:
----------------

bool MaxSizeMatch::_ShortestAugmenting() (struct MaxSizeMatchD.36919 * const thisD.37048)
{
  intD.9 * D.42175;
  intD.9 * __firstD.42150;
  size_typeD.33887 __nD.42133;
  intD.9 * __tmpD.42094;
  intD.9 * __tmpD.42091;
  intD.9 * __tmpD.42088;
  struct vectorD.33506 __tmpD.42083;
  long unsigned intD.14 __nD.42006;
  intD.9 * __firstD.42007;
  intD.9 * __firstD.42002;
  intD.9 * __firstD.41989;
  size_tD.2818 __nD.41985;
  intD.9 __valD.40891;
  intD.9 eD.37060;
  intD.9 * tD.37806;
  intD.9 iterD.37059;
  intD.9 slenD.37053;
  intD.9 jD.37051;
  intD.9 iD.37050;
  const intD.9 prephitmp_9;
  const intD.9 prephitmp_11;
  boolD.2757 _14;
  struct sRequestD.34315 * pretmp_15;
  intD.9 _27;
  intD.9 _28;
  struct vectorD.34419 & pretmp_29;
  long unsigned intD.14 _31;
  intD.9 _32;
  intD.9 * _33;
  long unsigned intD.14 _35;
  long unsigned intD.14 _36;
  intD.9 * _37;
  long unsigned intD.14 _43;
  long unsigned intD.14 _44;
  intD.9 * _45;
  long unsigned intD.14 _48;
  intD.9 & _50;
  long unsigned intD.14 _51;
  intD.9 _52;
  intD.9 _53;
  intD.9 & _54;
  intD.9 _55;
  long unsigned intD.14 _56;
  intD.9 _58;
  intD.9 * _59;
  long unsigned intD.14 _60;
  long unsigned intD.14 _61;
  intD.9 * _62;
  long unsigned intD.14 _68;
  struct sRequestD.34315 & _69;
  long unsigned intD.14 _71;
  long unsigned intD.14 _74;
  intD.9 & _75;
  long unsigned intD.14 _77;
  intD.9 * _83;
  intD.9 * _88;
  intD.9 * _89;
  intD.9 * _91;
  intD.9 & _95;
  long unsigned intD.14 _98;
  intD.9 & _99;
  intD.9 & _100;
  long unsigned intD.14 _101;
  intD.9 & _102;
  intD.9 * pretmp_104;
  intD.9 * const _106;
  long intD.12 _107;
  long intD.12 _108;
  long intD.12 _109;
  long intD.12 _110;
  size_typeD.33887 _111;
  long intD.12 _113;
  long intD.12 _114;
  long intD.12 _115;
  size_typeD.33887 _116;
  intD.9 * _118;
  unsigned long _124;
  sizetype _125;
  struct vectorD.34419 * pretmp_126;
  const intD.9 prephitmp_138;
  const intD.9 prephitmp_139;
  long unsigned intD.14 pretmp_141;
  long unsigned intD.14 _145;
  intD.9 * _146;
  long unsigned intD.14 pretmp_149;
  unsigned long _155;
  const intD.9 prephitmp_159;
  intD.9 _161;
  intD.9 & _177;
  intD.9 & _178;
  intD.9 * _179;
  intD.9 * _180;
  intD.9 * _181;
  intD.9 & _183;
  intD.9 * prephitmp_185;
  intD.9 * pretmp_186;
  intD.9 * _190;
  long unsigned intD.14 _191;
  long unsigned intD.14 _193;
  const intD.9 prephitmp_194;
  long unsigned intD.14 _195;
  sizetype _196;
  unsigned long _198;
  unsigned long _199;
  intD.9 * _204;
  intD.9 & _206;
  sizetype _208;
  sizetype _210;
  intD.9 _216;
  intD.9 & _219;
  intD.9 * _221;
  intD.9 _223;
  sizetype _230;
  sizetype _232;
  intD.9 * prephitmp_233;
  long unsigned intD.14 _234;
  intD.9 * pretmp_236;
  long unsigned intD.14 _238;
  const intD.9 prephitmp_239;
  sizetype _240;
  sizetype _241;
  long unsigned intD.14 _242;
  const intD.9 pretmp_245;
  const intD.9 prephitmp_246;
  const intD.9 pretmp_247;
  const intD.9 pretmp_248;
  const intD.9 prephitmp_249;
  const intD.9 pretmp_250;
  const intD.9 prephitmp_251;
  const intD.9 pretmp_252;
  const intD.9 prephitmp_253;
  const intD.9 pretmp_254;
  const intD.9 prephitmp_255;
  const intD.9 pretmp_256;
  const intD.9 prephitmp_257;

;;   basic block 2, loop depth 0, count 0, freq 227, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG slenD.37053 => 0
  # DEBUG iD.37050 => 0
  # DEBUG slenD.37053 => 0
  # DEBUG iD.37050 => 0
  # VUSE <.MEM_24(D)>
  _161 = this_25(D)->D.36959.D.35235._inputsD.33566;
  if (_161 <= 0)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 207, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_24(D)>
  # PT = nonlocal escaped 
  pretmp_236 = MEM[(intD.9 * *)this_25(D) + 112B];
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 2290, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_165 = PHI <0(3), i_39(8)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_170 = PHI <0(3), slen_6(8)>
  # .MEM_207 = PHI <.MEM_24(D)(3), .MEM_16(8)>
  # _223 = PHI <_161(3), prephitmp_257(8)>
  # prephitmp_239 = PHI <_161(3), prephitmp_257(8)>
  # DEBUG slenD.37053 => slen_170
  # DEBUG iD.37050 => i_165
  # VUSE <.MEM_207>
  _27 = this_25(D)->_prioD.36924;
  _28 = _27 + i_165;
  j_30 = _28 % _223;
  # DEBUG jD.37051 => j_30
  # RANGE ~[2147483648, 18446744071562067967]
  _31 = (long unsigned intD.14) j_30;
  # DEBUG D#151ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#151ptD.0
  # DEBUG __nD.40884 => _31
  # DEBUG thisD.40885 => D#2ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _77 = _31 * 4;
  # PT = nonlocal escaped 
  _75 = pretmp_236 + _77;
  # VUSE <.MEM_207>
  _32 = *_75;
  if (_32 == -1)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 641, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_207>
  # PT = nonlocal escaped 
  _33 = this_25(D)->_sD.36922;
  # RANGE [1, 2147483647] NONZERO 2147483647
  slen_34 = slen_170 + 1;
  # DEBUG slenD.37053 => slen_34
  # RANGE [0, 2147483647] NONZERO 2147483647
  _35 = (long unsigned intD.14) slen_170;
  # RANGE [0, 8589934588] NONZERO 8589934588
  _36 = _35 * 4;
  # PT = nonlocal escaped 
  _37 = _33 + _36;
  # .MEM_38 = VDEF <.MEM_207>
  *_37 = j_30;
  # VUSE <.MEM_38>
  pretmp_256 = this_25(D)->D.36959.D.35235._inputsD.33566;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 2290, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [72.0%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_6 = PHI <slen_170(4), slen_34(5)>
  # .MEM_16 = PHI <.MEM_207(4), .MEM_38(5)>
  # prephitmp_257 = PHI <prephitmp_239(4), pretmp_256(5)>
  # DEBUG slenD.37053 => slen_6
  i_39 = i_165 + 1;
  # DEBUG iD.37050 => i_39
  # DEBUG slenD.37053 => slen_6
  # DEBUG iD.37050 => i_39
  if (i_39 >= prephitmp_257)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 206, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_192 = PHI <slen_6(6)>
  # prephitmp_138 = PHI <prephitmp_257(6)>
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 2084, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_134 = PHI <slen_192(7), 0(2)>
  # .MEM_229 = PHI <.MEM_16(7), .MEM_24(D)(2)>
  # _216 = PHI <prephitmp_138(7), _161(2)>
  # prephitmp_11 = PHI <prephitmp_138(7), _161(2)>
  # DEBUG D#235ptD.0 => &this_25(D)->_fromD.36921
  # DEBUG thisD.40887 => D#235ptD.0
  # DEBUG __firstD.40888 => _216
  # DEBUG __lastD.40889 => -1
  # DEBUG thisD.40893 => D#235ptD.0
  # DEBUG __nD.40892 => _216
  # DEBUG __valD.40891 => -1
  # DEBUG __valD.40891 => -1
  # RANGE [0, 18446744073709551615]
  __n_72 = (size_tD.2818) _216;
  # DEBUG thisD.41984 => D#235ptD.0
  # DEBUG __nD.41985 => __n_72
  # DEBUG __valD.41986 => &__valD.40891
  # VUSE <.MEM_229>
  # PT = nonlocal escaped 
  __first_105 = MEM[(intD.9 * *)this_25(D) + 184B];
  # DEBUG D#29ptD.0 => D#235ptD.0
  # VUSE <.MEM_229>
  # PT = nonlocal escaped 
  _106 = MEM[(intD.9 * *)this_25(D) + 200B];
  # DEBUG D#29ptD.0 => D#235ptD.0
  # DEBUG thisD.42026 => D#29ptD.0
  # DEBUG thisD.42027 => D#29ptD.0
  _107 = (long intD.12) _106;
  _108 = (long intD.12) __first_105;
  _109 = _107 - _108;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _110 = _109 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _111 = (size_typeD.33887) _110;
  if (__n_72 > _111)
    goto <bb 10>;
  else
    goto <bb 22>;
;;    succ:       10 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 66, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.42030 => D#235ptD.0
  # DEBUG __nD.42031 => __n_72
  # DEBUG __valD.42032 => &__valD.40891
  # DEBUG D#147ptD.0 => &D#235ptD.0->D.34311
  # DEBUG thisD.42110 => D#147ptD.0
  # DEBUG D#234ptD.0 => &MEM[(struct _Vector_baseD.33569 *)this_25(D) + 184B]._M_implD.33802
  # DEBUG thisD.42132 => &__tmpD.42083
  # DEBUG __nD.42133 => __n_72
  # DEBUG __valueD.42134 => &__valD.40891
  # DEBUG __aD.42135 => D#234ptD.0
  # DEBUG D#146ptD.0 => &__tmpD.42083.D.34311
  # DEBUG thisD.42138 => D#146ptD.0
  # DEBUG __nD.42137 => __n_72
  # DEBUG __aD.42136 => D#234ptD.0
  # DEBUG D#145ptD.0 => &D#146ptD.0->_M_implD.33802
  # DEBUG thisD.42140 => D#145ptD.0
  # DEBUG __aD.42139 => D#234ptD.0
  # DEBUG thisD.40612 => D#145ptD.0
  # DEBUG __aD.40613 => D#234ptD.0
  # DEBUG thisD.40609 => D#145ptD.0
  # DEBUG D.40610 => D#234ptD.0
  # DEBUG thisD.42142 => D#146ptD.0
  # DEBUG __nD.42141 => __n_72
  # DEBUG D#143ptD.0 => D#146ptD.0
  # DEBUG __nD.42167 => __n_72
  # DEBUG thisD.42168 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  if (__n_72 != 0)
    goto <bb 11>;
  else
    goto <bb 63>;
;;    succ:       11 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#141ptD.0 => &D#142ptD.0->_M_implD.33802
  # DEBUG D#140ptD.0 => D#141ptD.0
  # DEBUG __nD.42171 => __n_72
  # DEBUG __aD.42170 => D#140ptD.0
  # DEBUG D#139ptD.0 => D#140ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D#138ptD.0 => 0B
  # DEBUG __nD.42174 => __n_72
  # DEBUG thisD.42172 => D#137ptD.0
  # DEBUG D.42173 => D#138ptD.0
  # DEBUG D#136ptD.0 => D#137ptD.0
  # DEBUG D#130ptD.0 => D#136ptD.0
  # DEBUG thisD.40557 => D#130ptD.0
  if (__n_72 > 4611686018427387903)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_163 = VDEF <.MEM_229>
  # USE = nonlocal null { D.42178 } (escaped heap)
  # CLB = nonlocal null { D.42178 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2850 ();
;;    succ:      

;;   basic block 13, loop depth 0, count 0, freq 60, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 12, next block 16, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  _145 = __n_72 * 4;
  # .MEM_162 = VDEF <.MEM_229>
  # PT = { D.42178 } (escaped heap)
  # USE = nonlocal null { D.42178 } (escaped heap)
  # CLB = nonlocal null { D.42178 } (escaped heap)
  _146 = _ZnwmD.2764 (_145);
  # PT = { D.42178 } (escaped heap)
  _118 = _146 + _145;
  # DEBUG D#126ptD.0 => &__tmpD.42083
  # DEBUG D#126ptD.0 => &__tmpD.42083
  # DEBUG D#127ptD.0 => &__valD.40891
  # DEBUG __nD.42146 => __n_72
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG thisD.42143 => D#124ptD.0
  # DEBUG thisD.42144 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG __valueD.42145 => D#125ptD.0
  # DEBUG D#123ptD.0 => &D#124ptD.0->D.34311
  # DEBUG thisD.40376 => D#123ptD.0
  # DEBUG D#121ptD.0 => D#125ptD.0
  # DEBUG __firstD.42150 => NULL
  # DEBUG __nD.42149 => __n_72
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.42147 => D#120ptD.0
  # DEBUG D.42148 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.42153 => NULL
  # DEBUG __nD.42152 => __n_72
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.42151 => D#118ptD.0
  # DEBUG __assignableD.42155 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.42158 => NULL
  # DEBUG __nD.42157 => __n_72
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.42156 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.42161 => NULL
  # DEBUG __nD.42160 => __n_72
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.42159 => D#114ptD.0
  # DEBUG __itD.40218 => NULL
  # DEBUG __itD.40184 => NULL
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __firstD.42164 => NULL
  # DEBUG __nD.42163 => __n_72
  # DEBUG __valueD.42162 => D#111ptD.0
  # DEBUG __tmpD.42165 => -1
  # DEBUG __niterD.42166 => __n_72
  # DEBUG __niterD.42166 => __n_72
  # DEBUG __firstD.42164 => _146
  # DEBUG D#126ptD.0 => &__tmpD.42083
  # DEBUG D#127ptD.0 => &__valD.40891
  # DEBUG __nD.42146 => __n_72
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG thisD.42143 => D#124ptD.0
  # DEBUG thisD.42144 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG __valueD.42145 => D#125ptD.0
  # DEBUG D#123ptD.0 => &D#124ptD.0->D.34311
  # DEBUG thisD.40376 => D#123ptD.0
  # DEBUG D#121ptD.0 => D#125ptD.0
  # DEBUG __firstD.42150 => NULL
  # DEBUG __nD.42149 => __n_72
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.42147 => D#120ptD.0
  # DEBUG D.42148 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.42153 => NULL
  # DEBUG __nD.42152 => __n_72
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.42151 => D#118ptD.0
  # DEBUG __assignableD.42155 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.42158 => NULL
  # DEBUG __nD.42157 => __n_72
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.42156 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.42161 => NULL
  # DEBUG __nD.42160 => __n_72
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.42159 => D#114ptD.0
  # DEBUG __itD.40218 => NULL
  # DEBUG __itD.40184 => NULL
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __nD.42163 => __n_72
  # DEBUG __valueD.42162 => D#111ptD.0
  # DEBUG __tmpD.42165 => -1
  # DEBUG __niterD.42166 => __n_72
  # DEBUG __firstD.42164 => _146
  _196 = (sizetype) _216;
  _232 = _196 * 4;
  # .MEM_168 = VDEF <.MEM_162>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (_146, 255, _232);
;;    succ:       16 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 60, maybe hot
;;    prev block 13, next block 17, flags: (NEW)
;;    pred:       13 [9.0%]  (FALLTHRU,EXECUTABLE)
  _242 = (long unsigned intD.14) _216;
  _193 = _242 * 4;
  # PT = { D.42178 } (escaped heap)
  __first_153 = _146 + _193;
  # VUSE <.MEM_168>
  pretmp_104 = MEM[(intD.9 * &)this_25(D) + 184];
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 66, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.42178 } (escaped heap)
  # __first_215 = PHI <__first_153(16), 0B(63)>
  # .MEM_209 = PHI <.MEM_168(16), .MEM_229(63)>
  # PT = nonlocal escaped { D.42178 } (escaped heap)
  # _221 = PHI <_118(16), _190(63)>
  # PT = null { D.42178 } (escaped heap)
  # __first_3 = PHI <_146(16), 0B(63)>
  # PT = nonlocal escaped 
  # prephitmp_233 = PHI <pretmp_104(16), __first_105(63)>
  # DEBUG D#149ptD.0 => &D#235ptD.0->D.34311._M_implD.33802
  # DEBUG thisD.42085 => &__tmpD.42083.D.34311._M_implD.33802
  # DEBUG __xD.42084 => D#149ptD.0
  # DEBUG D#110ptD.0 => &D#149ptD.0->_M_startD.33804
  # DEBUG D#109ptD.0 => &MEM[(struct _Vector_implD.33779 *)&__tmpD.42083]._M_startD.33804
  # DEBUG __aD.42087 => D#109ptD.0
  # DEBUG __bD.42086 => D#110ptD.0
  # DEBUG __tmpD.42088 => __first_3
  # DEBUG D#238ptD.0 => MEM[(intD.9 * &)this_25(D) + 184]
  # .MEM_171 = VDEF <.MEM_209>
  MEM[(intD.9 * &)this_25(D) + 184] = __first_3;
  # DEBUG D#108ptD.0 => &D#149ptD.0->_M_finishD.33805
  # DEBUG D#107ptD.0 => &MEM[(struct _Vector_implD.33779 *)&__tmpD.42083]._M_finishD.33805
  # DEBUG __aD.42090 => D#107ptD.0
  # DEBUG __bD.42089 => D#108ptD.0
  # DEBUG __tmpD.42091 => __first_215
  # .MEM_173 = VDEF <.MEM_171>
  MEM[(intD.9 * &)this_25(D) + 192] = __first_215;
  # DEBUG D#106ptD.0 => &D#149ptD.0->_M_end_of_storageD.33806
  # DEBUG D#105ptD.0 => &MEM[(struct _Vector_implD.33779 *)&__tmpD.42083]._M_end_of_storageD.33806
  # DEBUG __aD.42093 => D#105ptD.0
  # DEBUG __bD.42092 => D#106ptD.0
  # DEBUG __tmpD.42094 => _221
  # .MEM_175 = VDEF <.MEM_173>
  MEM[(intD.9 * &)this_25(D) + 200] = _221;
  # DEBUG thisD.42095 => &__tmpD.42083
  # DEBUG D#79ptD.0 => &__tmpD.42083.D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => __tmpD.42083.D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => __tmpD.42083.D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &__tmpD.42083.D.34311
  # DEBUG thisD.42096 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # DEBUG D#76ptD.0 => (long intD.12) D#238ptD.0
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.42099 => D#80ptD.0
  # DEBUG __pD.42098 => D#238ptD.0
  # DEBUG __nD.42097 => D#73ptD.0
  if (prephitmp_233 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 51, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.42103 => D#238ptD.0
  # DEBUG __aD.42101 => D#69ptD.0
  # DEBUG __nD.42102 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.42106 => D#238ptD.0
  # DEBUG thisD.42104 => D#65ptD.0
  # DEBUG D.42105 => D#66ptD.0
  # .MEM_176 = VDEF <.MEM_175>
  # USE = nonlocal null { D.42178 } (escaped heap)
  # CLB = nonlocal null { D.42178 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_233);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 66, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_150 = PHI <.MEM_175(17), .MEM_176(18)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.42107 => D#72ptD.0
  # DEBUG thisD.42108 => D#72ptD.0
  # DEBUG thisD.42109 => D#72ptD.0
  # .MEM_182 = VDEF <.MEM_150>
  __tmpD.42083 ={v} {CLOBBER};
  # VUSE <.MEM_182>
  pretmp_247 = this_25(D)->D.36959.D.35235._inputsD.33566;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_103 = PHI <.MEM_158(37), .MEM_182(19), .MEM_156(32)>
  # prephitmp_249 = PHI <prephitmp_246(37), pretmp_247(19), pretmp_248(32)>
  # DEBUG iterD.37059 => 0
  # DEBUG slenD.37053 => slen_134
  if (prephitmp_249 <= 0)
    goto <bb 21>;
  else
    goto <bb 38>;
;;    succ:       21 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_244 = PHI <.MEM_103(20), .MEM_85(53)>
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 161, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       9 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#5ptD.0 => D#235ptD.0
  # VUSE <.MEM_229>
  # PT = nonlocal escaped 
  __first_112 = MEM[(intD.9 * *)this_25(D) + 192B];
  # DEBUG D#5ptD.0 => D#235ptD.0
  # DEBUG thisD.42024 => D#5ptD.0
  # DEBUG thisD.42025 => D#5ptD.0
  _113 = (long intD.12) __first_112;
  _114 = _113 - _108;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _115 = _114 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _116 = (size_typeD.33887) _115;
  if (__n_72 > _116)
    goto <bb 24>;
  else
    goto <bb 23>;
;;    succ:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __niterD.41994 => __n_72
  # DEBUG __firstD.41992 => __first_105
  if (__n_72 == 0)
    goto <bb 37>;
  else
    goto <bb 33>;
;;    succ:       37 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __firstD.42002 => __first_105
  if (__first_105 == __first_112)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of outgoing probabilities 9.9%
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_243 = PHI <.MEM_229(24), .MEM_197(28)>
  # DEBUG D#148ptD.0 => &D#235ptD.0->D.34311
  # DEBUG thisD.40724 => D#148ptD.0
  # DEBUG D#5ptD.0 => D#235ptD.0
  # DEBUG D#5ptD.0 => D#235ptD.0
  # DEBUG thisD.40722 => D#5ptD.0
  # DEBUG thisD.40721 => D#5ptD.0
  # RANGE [1, 18446744073709551615]
  __n_120 = __n_72 - _116;
  # DEBUG D#121ptD.0 => &__valD.40891
  # DEBUG __firstD.42007 => __first_112
  # DEBUG __nD.42006 => __n_120
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.42004 => D#120ptD.0
  # DEBUG D.42005 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.42010 => __first_112
  # DEBUG __nD.42009 => __n_120
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.42008 => D#118ptD.0
  # DEBUG __assignableD.42012 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.42015 => __first_112
  # DEBUG __nD.42014 => __n_120
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.42013 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.42018 => __first_112
  # DEBUG __nD.42017 => __n_120
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.42016 => D#114ptD.0
  # DEBUG __itD.40218 => __first_112
  # DEBUG __itD.40184 => __first_112
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __firstD.42021 => __first_112
  # DEBUG __nD.42020 => __n_120
  # DEBUG __valueD.42019 => D#111ptD.0
  # DEBUG __tmpD.42022 => -1
  # DEBUG __niterD.42023 => __n_120
  # DEBUG __niterD.42023 => __n_120
  # DEBUG __firstD.42021 => __first_112
  _210 = __n_120 * 4;
  # .MEM_213 = VDEF <.MEM_243>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_112, 255, _210);
  goto <bb 32>;
;;    succ:       32 [9.9%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 74, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 25, next block 28, flags: (NEW, REACHABLE)
;;    pred:       24 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  _199 = (unsigned long) __first_112;
  _204 = __first_105 + 4;
  _198 = (unsigned long) _204;
  _155 = _199 - _198;
  _124 = _155 /[ex] 4;
  _125 = _124 & 4611686018427387903;
  _241 = _125 + 1;
  _240 = _241 * 4;
  # .MEM_214 = VDEF <.MEM_229>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_105, 255, _240);
;;    succ:       28 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 73, maybe hot
;;    prev block 26, next block 32, flags: (NEW)
;;    pred:       26 [9.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_197 = PHI <.MEM_214(26)>
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 80, maybe hot
;;    prev block 28, next block 33, flags: (NEW, REACHABLE)
;;    pred:       25 [9.9%]  (FALLTHRU,EXECUTABLE)
  _234 = __n_120 * 4;
  # PT = nonlocal escaped 
  __first_164 = __first_112 + _234;
  # .MEM_156 = VDEF <.MEM_213>
  MEM[(struct vectorD.33506 *)this_25(D) + 184B].D.34311._M_implD.33802._M_finishD.33805 = __first_164;
  # VUSE <.MEM_156>
  pretmp_248 = this_25(D)->D.36959.D.35235._inputsD.33566;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 74, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 32, next block 36, flags: (NEW, REACHABLE)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  _208 = (sizetype) _216;
  _230 = _208 * 4;
  # .MEM_218 = VDEF <.MEM_229>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_105, 255, _230);
;;    succ:       36 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 73, maybe hot
;;    prev block 33, next block 37, flags: (NEW)
;;    pred:       33 [9.0%]  (FALLTHRU,EXECUTABLE)
  _195 = (long unsigned intD.14) _216;
  _238 = _195 * 4;
  # PT = nonlocal escaped 
  __first_160 = __first_105 + _238;
  # VUSE <.MEM_218>
  pretmp_245 = this_25(D)->D.36959.D.35235._inputsD.33566;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 80, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_231 = PHI <__first_160(36), __first_105(23)>
  # .MEM_202 = PHI <.MEM_218(36), .MEM_229(23)>
  # prephitmp_246 = PHI <pretmp_245(36), prephitmp_11(23)>
  # DEBUG D#27ptD.0 => D#235ptD.0
  # DEBUG __posD.41996 => __first_231
  # DEBUG D#26ptD.0 => D#27ptD.0
  # DEBUG thisD.41995 => D#26ptD.0
  # DEBUG D#24ptD.0 => &D#26ptD.0->D.34311
  # DEBUG thisD.39741 => D#24ptD.0
  # DEBUG D#25ptD.0 => D#26ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG __firstD.39731 => __first_231
  # DEBUG __lastD.39732 => D#25ptD.0
  # DEBUG D.39733 => NULL
  # DEBUG D#22ptD.0 => __first_231
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # .MEM_158 = VDEF <.MEM_202>
  MEM[(intD.9 * *)this_25(D) + 192B] = __first_231;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 216, maybe hot
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       20 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_103>
  pretmp_186 = this_25(D)->_sD.36922;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 246, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_220 = PHI <.MEM_103(38), .MEM_85(54)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_172 = PHI <slen_134(38), slen_174(54)>
  # iter_201 = PHI <0(38), iter_86(54)>
  # PT = nonlocal escaped 
  # prephitmp_185 = PHI <pretmp_186(38), _83(54)>
  # prephitmp_194 = PHI <prephitmp_249(38), prephitmp_251(54)>
  # DEBUG iterD.37059 => iter_201
  # DEBUG slenD.37053 => slen_172
  # DEBUG eD.37060 => 0
  # DEBUG nslenD.37054 => 0
  if (slen_172 <= 0)
    goto <bb 53>;
  else
    goto <bb 40>;
;;    succ:       53 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 235, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_220>
  pretmp_252 = this_25(D)->D.36959.D.35235._outputsD.33567;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 2, count 0, freq 670, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_136 = PHI <0(40), slen_203(51)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # e_200 = PHI <0(40), e_81(51)>
  # .MEM_228 = PHI <.MEM_220(40), .MEM_222(51)>
  # prephitmp_253 = PHI <pretmp_252(40), prephitmp_9(51)>
  # DEBUG eD.37060 => e_200
  # DEBUG nslenD.37054 => slen_136
  # RANGE [0, 2147483646] NONZERO 2147483647
  _43 = (long unsigned intD.14) e_200;
  # RANGE [0, 8589934584] NONZERO 8589934588
  _44 = _43 * 4;
  # PT = nonlocal escaped 
  _45 = prephitmp_185 + _44;
  # VUSE <.MEM_228>
  i_46 = *_45;
  # DEBUG iD.37050 => i_46
  # DEBUG jD.37051 => 0
  # DEBUG nslenD.37054 => slen_136
  # DEBUG jD.37051 => 0
  if (prephitmp_253 <= 0)
    goto <bb 50>;
  else
    goto <bb 42>;
;;    succ:       50 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 2, count 0, freq 640, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_149 = (long unsigned intD.14) i_46;
  pretmp_141 = pretmp_149 * 24;
  # VUSE <.MEM_228>
  # PT = nonlocal escaped 
  pretmp_126 = MEM[(struct vectorD.34419 * *)this_25(D) + 160B];
  # PT = nonlocal escaped 
  pretmp_29 = pretmp_126 + pretmp_141;
  # VUSE <.MEM_228>
  # PT = nonlocal escaped 
  pretmp_15 = MEM[(struct sRequestD.34315 * *)pretmp_29];
  _56 = pretmp_149 * 4;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 3, count 0, freq 9550, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # j_166 = PHI <0(42), j_80(49)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_13 = PHI <slen_136(42), slen_10(49)>
  # .MEM_226 = PHI <.MEM_228(42), .MEM_21(49)>
  # prephitmp_159 = PHI <prephitmp_253(42), prephitmp_255(49)>
  # DEBUG nslenD.37054 => slen_13
  # DEBUG jD.37051 => j_166
  # RANGE [0, 18446744073709551615]
  _48 = (long unsigned intD.14) j_166;
  # DEBUG D#237ptD.0 => (long unsigned intD.14) i_46
  # DEBUG D#152ptD.0 => &this_25(D)->D.36959._requestD.35166
  # DEBUG D#3ptD.0 => D#152ptD.0
  # DEBUG __nD.40899 => D#237ptD.0
  # DEBUG thisD.40900 => D#3ptD.0
  # DEBUG __nD.40895 => _48
  # DEBUG thisD.40896 => D#4ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551600
  _71 = _48 * 16;
  # PT = nonlocal escaped 
  _69 = pretmp_15 + _71;
  # VUSE <.MEM_226>
  _52 = _69->labelD.34318;
  if (_52 != -1)
    goto <bb 44>;
  else
    goto <bb 47>;
;;    succ:       44 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 3, count 0, freq 6876, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#153ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # VUSE <.MEM_226>
  # PT = nonlocal escaped 
  _88 = MEM[(intD.9 * *)this_25(D) + 112B];
  # DEBUG D#2ptD.0 => D#153ptD.0
  # DEBUG __nD.40903 => D#237ptD.0
  # DEBUG thisD.40904 => D#2ptD.0
  # PT = nonlocal escaped 
  _54 = _88 + _56;
  # VUSE <.MEM_226>
  _53 = *_54;
  if (_53 != j_166)
    goto <bb 45>;
  else
    goto <bb 47>;
;;    succ:       45 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 3, count 0, freq 4951, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#154ptD.0 => &this_25(D)->_fromD.36921
  # VUSE <.MEM_226>
  # PT = nonlocal escaped 
  _89 = MEM[(intD.9 * *)this_25(D) + 184B];
  # DEBUG D#2ptD.0 => D#154ptD.0
  # DEBUG __nD.40907 => _48
  # DEBUG thisD.40908 => D#2ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _51 = _48 * 4;
  # PT = nonlocal escaped 
  _50 = _89 + _51;
  # VUSE <.MEM_226>
  _55 = *_50;
  if (_55 == -1)
    goto <bb 62>;
  else
    goto <bb 47>;
;;    succ:       62 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 3, count 0, freq 4560, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       62 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _59 = this_25(D)->_nsD.36923;
  # RANGE [0, 2147483647] NONZERO 2147483647
  _60 = (long unsigned intD.14) slen_13;
  # RANGE [0, 8589934588] NONZERO 8589934588
  _61 = _60 * 4;
  # PT = nonlocal escaped 
  _62 = _59 + _61;
  # DEBUG D#157ptD.0 => &this_25(D)->D.36959.D.35235._outmatchD.34314
  # DEBUG D#2ptD.0 => D#157ptD.0
  # DEBUG __nD.40919 => _48
  # DEBUG thisD.40920 => D#2ptD.0
  # .MEM_64 = VDEF <.MEM_57>
  *_62 = _58;
  # RANGE [1, 2147483647] NONZERO 2147483647
  slen_65 = slen_13 + 1;
  # DEBUG nslenD.37054 => slen_65
  # VUSE <.MEM_64>
  pretmp_254 = this_25(D)->D.36959.D.35235._outputsD.33567;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 3, count 0, freq 9340, maybe hot
;;   Invalid sum of incoming frequencies 12724, should be 9340
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       43 [28.0%]  (FALSE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 [72.0%]  (FALSE_VALUE,EXECUTABLE)
;;                44 [28.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_10 = PHI <slen_13(43), slen_65(46), slen_13(45), slen_13(44)>
  # .MEM_21 = PHI <.MEM_226(43), .MEM_64(46), .MEM_226(45), .MEM_226(44)>
  # prephitmp_255 = PHI <prephitmp_159(43), pretmp_254(46), prephitmp_159(45), prephitmp_159(44)>
  # DEBUG nslenD.37054 => slen_10
  j_80 = j_166 + 1;
  # DEBUG jD.37051 => j_80
  # DEBUG nslenD.37054 => slen_10
  # DEBUG jD.37051 => j_80
  if (j_80 >= prephitmp_255)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 2, count 0, freq 420, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       47 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_187 = PHI <slen_10(47)>
  # prephitmp_139 = PHI <prephitmp_255(47)>
  goto <bb 50>;
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 3, count 0, freq 8920, maybe hot
;;    prev block 48, next block 50, flags: (NEW)
;;    pred:       47 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 43>;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 2, count 0, freq 450, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_203 = PHI <slen_187(48), slen_136(41)>
  # .MEM_222 = PHI <.MEM_21(48), .MEM_228(41)>
  # prephitmp_9 = PHI <prephitmp_139(48), prephitmp_253(41)>
  # RANGE [1, 2147483647] NONZERO 2147483647
  e_81 = e_200 + 1;
  # DEBUG eD.37060 => e_81
  # DEBUG eD.37060 => e_81
  # DEBUG nslenD.37054 => slen_203
  if (e_81 >= slen_172)
    goto <bb 52>;
  else
    goto <bb 51>;
;;    succ:       52 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 2, count 0, freq 430, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       50 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 20, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       50 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_148 = PHI <slen_203(50)>
  # VUSE <.MEM_222>
  pretmp_250 = this_25(D)->D.36959.D.35235._inputsD.33566;
;;    succ:       53 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 1, count 0, freq 32, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_174 = PHI <slen_148(52), 0(39)>
  # .MEM_227 = PHI <.MEM_222(52), .MEM_220(39)>
  # prephitmp_251 = PHI <pretmp_250(52), prephitmp_194(39)>
  # DEBUG D#236ptD.0 => this_25(D)->_sD.36922
  # DEBUG tD.37806 => D#236ptD.0
  # VUSE <.MEM_227>
  # PT = nonlocal escaped 
  _83 = this_25(D)->_nsD.36923;
  # .MEM_84 = VDEF <.MEM_227>
  this_25(D)->_sD.36922 = _83;
  # .MEM_85 = VDEF <.MEM_84>
  this_25(D)->_nsD.36923 = prephitmp_185;
  # DEBUG slenD.37053 => slen_174
  iter_86 = iter_201 + 1;
  # DEBUG iterD.37059 => iter_86
  # DEBUG iterD.37059 => iter_86
  # DEBUG slenD.37053 => slen_174
  if (iter_86 >= prephitmp_251)
    goto <bb 21>;
  else
    goto <bb 54>;
;;    succ:       21 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 31, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 215, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       62 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # i_184 = PHI <i_46(62)>
  # PT = nonlocal escaped 
  # _183 = PHI <_54(62)>
  # PT = nonlocal escaped 
  # _181 = PHI <_88(62)>
  # PT = nonlocal escaped 
  # _180 = PHI <_89(62)>
  # PT = nonlocal escaped 
  # _179 = PHI <_91(62)>
  # PT = nonlocal escaped 
  # _178 = PHI <_95(62)>
  # j_152 = PHI <j_166(62)>
found_augmentingL.24:
  # DEBUG D#158ptD.0 => &this_25(D)->_fromD.36921
  # DEBUG D#2ptD.0 => D#158ptD.0
  # DEBUG __nD.40927 => _48
  # DEBUG thisD.40928 => D#2ptD.0
  # DEBUG iD.37050 => i_184
  # DEBUG D#159ptD.0 => &this_25(D)->D.36959.D.35235._outmatchD.34314
  # DEBUG D#2ptD.0 => D#159ptD.0
  # DEBUG __nD.40923 => _48
  # DEBUG thisD.40924 => D#2ptD.0
  # .MEM_67 = VDEF <.MEM_57>
  *_178 = i_184;
  # DEBUG jD.37051 => j_152
  # DEBUG iD.37050 => i_184
  # DEBUG D#164ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#164ptD.0
  # DEBUG __nD.40931 => D#237ptD.0
  # DEBUG thisD.40932 => D#2ptD.0
  # VUSE <.MEM_67>
  j_188 = *_183;
  if (j_188 != -1)
    goto <bb 56>;
  else
    goto <bb 60>;
;;    succ:       56 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 196, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       55 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 1, count 0, freq 2173, maybe hot
;;    prev block 56, next block 58, flags: (NEW)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
  # j_167 = PHI <j_152(56), j_217(59)>
  # .MEM_224 = PHI <.MEM_67(56), .MEM_78(59)>
  # j_217 = PHI <j_188(56), j_70(59)>
  # PT = nonlocal escaped 
  # _206 = PHI <_183(56), _99(59)>
  # DEBUG jD.37051 => j_167
  # DEBUG iD.37050 => i_184
  # DEBUG D#164ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG __nD.40931 => D#237ptD.0
  # DEBUG thisD.40932 => D#2ptD.0
  # DEBUG D#160ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#160ptD.0
  # DEBUG __nD.40947 => D#237ptD.0
  # DEBUG thisD.40948 => D#2ptD.0
  # DEBUG jnD.37052 => j_217
  # DEBUG D#161ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#161ptD.0
  # DEBUG __nD.40943 => D#237ptD.0
  # DEBUG thisD.40944 => D#2ptD.0
  # .MEM_73 = VDEF <.MEM_224>
  *_206 = j_167;
  # DEBUG jD.37051 => j_217
  # RANGE [0, 18446744073709551614]
  _74 = (long unsigned intD.14) j_217;
  # DEBUG D#162ptD.0 => &this_25(D)->_fromD.36921
  # DEBUG D#2ptD.0 => D#162ptD.0
  # DEBUG __nD.40939 => _74
  # DEBUG thisD.40940 => D#2ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _101 = _74 * 4;
  # PT = nonlocal escaped 
  _102 = _180 + _101;
  # VUSE <.MEM_73>
  i_76 = *_102;
  # DEBUG iD.37050 => i_76
  # DEBUG D#163ptD.0 => &this_25(D)->D.36959.D.35235._outmatchD.34314
  # DEBUG D#2ptD.0 => D#163ptD.0
  # DEBUG __nD.40935 => _74
  # DEBUG thisD.40936 => D#2ptD.0
  # PT = nonlocal escaped 
  _100 = _179 + _101;
  # .MEM_78 = VDEF <.MEM_73>
  *_100 = i_76;
  # DEBUG jD.37051 => j_217
  # DEBUG iD.37050 => i_76
  # RANGE ~[2147483648, 18446744071562067967]
  _68 = (long unsigned intD.14) i_76;
  # DEBUG D#164ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#164ptD.0
  # DEBUG __nD.40931 => _68
  # DEBUG thisD.40932 => D#2ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _98 = _68 * 4;
  # PT = nonlocal escaped 
  _99 = _181 + _98;
  # VUSE <.MEM_78>
  j_70 = *_99;
  if (j_70 != -1)
    goto <bb 59>;
  else
    goto <bb 58>;
;;    succ:       59 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 196, maybe hot
;;    prev block 57, next block 59, flags: (NEW)
;;    pred:       57 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # _177 = PHI <_99(57)>
  # j_147 = PHI <j_217(57)>
  goto <bb 60>;
;;    succ:       60 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 1, count 0, freq 1977, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       57 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 57>;
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 215, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       58 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                55 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # j_169 = PHI <j_147(58), j_152(55)>
  # .MEM_225 = PHI <.MEM_78(58), .MEM_67(55)>
  # PT = nonlocal escaped 
  # _219 = PHI <_177(58), _183(55)>
  # DEBUG D#165ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#165ptD.0
  # DEBUG __nD.40951 => D#237ptD.0
  # DEBUG thisD.40952 => D#2ptD.0
  # .MEM_79 = VDEF <.MEM_225>
  *_219 = j_169;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 1]
  # _14 = PHI <0(21), 1(60)>
  # .MEM_23 = PHI <.MEM_244(21), .MEM_79(60)>
  # VUSE <.MEM_23>
  return _14;
;;    succ:       EXIT [100.0%] 

;;   basic block 62, loop depth 3, count 0, freq 4775, maybe hot
;;   Invalid sum of incoming frequencies 1386, should be 4775
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       45 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#155ptD.0 => &this_25(D)->_fromD.36921
  # DEBUG D#2ptD.0 => D#155ptD.0
  # DEBUG __nD.40915 => _48
  # DEBUG thisD.40916 => D#2ptD.0
  # .MEM_57 = VDEF <.MEM_226>
  *_50 = i_46;
  # DEBUG D#156ptD.0 => &this_25(D)->D.36959.D.35235._outmatchD.34314
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _91 = MEM[(intD.9 * *)this_25(D) + 136B];
  # DEBUG D#2ptD.0 => D#156ptD.0
  # DEBUG __nD.40911 => _48
  # DEBUG thisD.40912 => D#2ptD.0
  # PT = nonlocal escaped 
  _95 = _91 + _51;
  # VUSE <.MEM_57>
  _58 = *_95;
  if (_58 == -1)
    goto <bb 55> (found_augmenting);
  else
    goto <bb 46>;
;;    succ:       55 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 62, next block 1, flags: (NEW, REACHABLE)
;;    pred:       10 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _191 = __n_72 * 4;
  # PT = nonlocal escaped 
  # ALIGN = 4, MISALIGN = 0
  _190 = (intD.9 *) _191;
  # DEBUG D#126ptD.0 => &__tmpD.42083
  # DEBUG D#126ptD.0 => &__tmpD.42083
  # DEBUG D#127ptD.0 => &__valD.40891
  # DEBUG __nD.42146 => __n_72
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG thisD.42143 => D#124ptD.0
  # DEBUG thisD.42144 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG __valueD.42145 => D#125ptD.0
  # DEBUG D#123ptD.0 => &D#124ptD.0->D.34311
  # DEBUG thisD.40376 => D#123ptD.0
  # DEBUG D#121ptD.0 => D#125ptD.0
  # DEBUG __firstD.42150 => NULL
  # DEBUG __nD.42149 => __n_72
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.42147 => D#120ptD.0
  # DEBUG D.42148 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.42153 => NULL
  # DEBUG __nD.42152 => __n_72
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.42151 => D#118ptD.0
  # DEBUG __assignableD.42155 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.42158 => NULL
  # DEBUG __nD.42157 => __n_72
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.42156 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.42161 => NULL
  # DEBUG __nD.42160 => __n_72
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.42159 => D#114ptD.0
  # DEBUG __itD.40218 => NULL
  # DEBUG __itD.40184 => NULL
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __firstD.42164 => NULL
  # DEBUG __nD.42163 => __n_72
  # DEBUG __valueD.42162 => D#111ptD.0
  # DEBUG __tmpD.42165 => -1
  # DEBUG __niterD.42166 => __n_72
  # DEBUG __niterD.42166 => __n_72
  # DEBUG __firstD.42164 => 0B
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

}


Creating dr for this_25(D)->D.36959.D.35235._inputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int * *)this_25(D) + 112B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 112B]
Creating dr for this_25(D)->_prio
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1792
Creating dr for this_25(D)->_prio
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1792
Creating dr for *_75
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_75
Creating dr for *_75
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_75
Creating dr for this_25(D)->_prio
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1792
Creating dr for this_25(D)->_prio
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1792
Creating dr for *_75
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_75
Creating dr for *_75
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_75
Creating dr for this_25(D)->_s
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1664
Creating dr for this_25(D)->_s
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1664
Creating dr for *_37
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_37
Creating dr for *_37
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_37
Creating dr for this_25(D)->D.36959.D.35235._inputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->D.36959.D.35235._inputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->_prio
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1792
Creating dr for this_25(D)->_prio
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1792
Creating dr for *_75
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_75
Creating dr for *_75
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_75
Creating dr for this_25(D)->_prio
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1792
Creating dr for this_25(D)->_prio
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1792
Creating dr for *_75
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_75
Creating dr for *_75
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_75
Creating dr for this_25(D)->_s
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1664
Creating dr for this_25(D)->_s
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1664
Creating dr for *_37
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_37
Creating dr for *_37
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_37
Creating dr for this_25(D)->D.36959.D.35235._inputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->D.36959.D.35235._inputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int * *)this_25(D) + 184B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 184B]
Creating dr for MEM[(int * *)this_25(D) + 200B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 200
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 200B]
Creating dr for MEM[(int * &)this_25(D) + 184]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * &)this_25(D) + 184]
Creating dr for MEM[(int * &)this_25(D) + 184]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * &)this_25(D) + 184]
Creating dr for MEM[(int * &)this_25(D) + 192]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * &)this_25(D) + 192]
Creating dr for MEM[(int * &)this_25(D) + 200]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 200
	step: 0
	aligned to: 256
	base_object: MEM[(int * &)this_25(D) + 200]
Creating dr for MEM[(int * *)this_25(D) + 192B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 192B]
Creating dr for MEM[(struct vector *)this_25(D) + 184B].D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_25(D) + 184B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->D.36959.D.35235._inputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->D.36959.D.35235._inputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int * *)this_25(D) + 192B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 192B]
Creating dr for this_25(D)->_s
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1664
Creating dr for this_25(D)->D.36959.D.35235._outputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->D.36959.D.35235._outputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for *_45
analyze_innermost: success.
	base_address: prephitmp_185
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *prephitmp_185
	Access function 0: {0B, +, 4}_3
Creating dr for *_45
analyze_innermost: success.
	base_address: prephitmp_185
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_45
Creating dr for *_45
analyze_innermost: success.
	base_address: prephitmp_185
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_45
Creating dr for *_45
analyze_innermost: success.
	base_address: prephitmp_185
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *prephitmp_185
	Access function 0: {0B, +, 4}_3
Creating dr for *_45
analyze_innermost: success.
	base_address: prephitmp_185
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_45
Creating dr for *_45
analyze_innermost: success.
	base_address: prephitmp_185
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_45
Creating dr for MEM[(struct vector * *)this_25(D) + 160B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_25(D) + 160B]
Creating dr for MEM[(struct vector * *)this_25(D) + 160B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_25(D) + 160B]
Creating dr for MEM[(struct vector * *)this_25(D) + 160B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_25(D) + 160B]
Creating dr for MEM[(struct sRequest * *)pretmp_29]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)pretmp_29]
Creating dr for MEM[(struct sRequest * *)pretmp_29]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)pretmp_29]
Creating dr for MEM[(struct sRequest * *)pretmp_29]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)pretmp_29]
Creating dr for _69->label
analyze_innermost: success.
	base_address: pretmp_15
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 256
	base_object: *pretmp_15
	Access function 0: 32
	Access function 1: {0B, +, 16}_4
Creating dr for _69->label
analyze_innermost: success.
	base_address: pretmp_15
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 256
	base_object: *_69
	Access function 0: 32
Creating dr for _69->label
analyze_innermost: success.
	base_address: pretmp_15
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 256
	base_object: *_69
	Access function 0: 32
Creating dr for _69->label
analyze_innermost: success.
	base_address: pretmp_15
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 256
	base_object: *_69
	Access function 0: 32
Creating dr for _69->label
analyze_innermost: success.
	base_address: pretmp_15
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 256
	base_object: *pretmp_15
	Access function 0: 32
	Access function 1: {0B, +, 16}_4
Creating dr for _69->label
analyze_innermost: success.
	base_address: pretmp_15
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 256
	base_object: *_69
	Access function 0: 32
Creating dr for _69->label
analyze_innermost: success.
	base_address: pretmp_15
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 256
	base_object: *_69
	Access function 0: 32
Creating dr for _69->label
analyze_innermost: success.
	base_address: pretmp_15
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 256
	base_object: *_69
	Access function 0: 32
Creating dr for MEM[(int * *)this_25(D) + 112B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 112B]
Creating dr for MEM[(int * *)this_25(D) + 112B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 112B]
Creating dr for MEM[(int * *)this_25(D) + 112B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 112B]
Creating dr for MEM[(int * *)this_25(D) + 112B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 112B]
Creating dr for *_54
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_54
Creating dr for *_54
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_54
Creating dr for *_54
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_54
Creating dr for *_54
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_54
Creating dr for MEM[(int * *)this_25(D) + 184B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 184B]
Creating dr for MEM[(int * *)this_25(D) + 184B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 184B]
Creating dr for MEM[(int * *)this_25(D) + 184B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 184B]
Creating dr for MEM[(int * *)this_25(D) + 184B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 184B]
Creating dr for *_50
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_50
Creating dr for *_50
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_50
Creating dr for *_50
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_50
Creating dr for *_50
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_50
Creating dr for *_50
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_50
Creating dr for *_50
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_50
Creating dr for *_50
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_50
Creating dr for *_50
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_50
Creating dr for MEM[(int * *)this_25(D) + 136B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 136B]
Creating dr for MEM[(int * *)this_25(D) + 136B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 136B]
Creating dr for MEM[(int * *)this_25(D) + 136B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 136B]
Creating dr for MEM[(int * *)this_25(D) + 136B]
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_25(D) + 136B]
Creating dr for *_95
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_95
Creating dr for *_95
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_95
Creating dr for *_95
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_95
Creating dr for *_95
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_95
Creating dr for this_25(D)->_ns
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1728
Creating dr for this_25(D)->_ns
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1728
Creating dr for this_25(D)->_ns
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1728
Creating dr for this_25(D)->_ns
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1728
Creating dr for *_62
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_62
Creating dr for *_62
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_62
Creating dr for *_62
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_62
Creating dr for *_62
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_62
Creating dr for this_25(D)->D.36959.D.35235._outputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->D.36959.D.35235._outputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->D.36959.D.35235._outputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->D.36959.D.35235._outputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for *_178
analyze_innermost: success.
	base_address: _178
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_178
Creating dr for *_183
analyze_innermost: success.
	base_address: _183
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_183
Creating dr for *_206
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_206
Creating dr for *_206
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_206
Creating dr for *_102
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_102
Creating dr for *_102
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_102
Creating dr for *_100
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_100
Creating dr for *_100
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_100
Creating dr for *_99
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_99
Creating dr for *_99
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_99
Creating dr for *_206
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_206
Creating dr for *_206
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_206
Creating dr for *_102
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_102
Creating dr for *_102
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_102
Creating dr for *_100
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_100
Creating dr for *_100
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_100
Creating dr for *_99
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_99
Creating dr for *_99
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_99
Creating dr for *_219
analyze_innermost: success.
	base_address: _219
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_219
Creating dr for this_25(D)->D.36959.D.35235._inputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->D.36959.D.35235._inputs
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_25(D)->_ns
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1728
Creating dr for this_25(D)->_ns
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1728
Creating dr for this_25(D)->_s
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1664
Creating dr for this_25(D)->_s
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1664
Creating dr for this_25(D)->_ns
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1728
Creating dr for this_25(D)->_ns
analyze_innermost: success.
	base_address: this_25(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: *this_25(D)
	Access function 0: 1728

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:8)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:45)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:21)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:12)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:62, LOOPS:5, CONDITIONS:22, STMTS:583)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_9 bb_3 })
  {
    <bb 2>:
    # DEBUG slen => 0
    # DEBUG i => 0
    # DEBUG slen => 0
    # DEBUG i => 0
    # VUSE <.MEM_24(D)>
    _161 = this_25(D)->D.36959.D.35235._inputs;
    if (_161 <= 0)
      goto <bb 9>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:
    # VUSE <.MEM_24(D)>
    pretmp_236 = MEM[(int * *)this_25(D) + 112B];

  }
  bb_7 (preds = {bb_6 }, succs = {bb_65 })
  {
    <bb 7>:
    # slen_192 = PHI <slen_6(6)>
    # prephitmp_138 = PHI <prephitmp_257(6)>

  }
  bb_65 (preds = {bb_7 }, succs = {bb_9 })
  {
    <bb 65>:
    goto <bb 9>;

  }
  bb_9 (preds = {bb_65 bb_2 }, succs = {bb_10 bb_22 })
  {
    <bb 9>:
    # slen_134 = PHI <slen_192(65), 0(2)>
    # .MEM_229 = PHI <.MEM_16(65), .MEM_24(D)(2)>
    # _216 = PHI <prephitmp_138(65), _161(2)>
    # prephitmp_11 = PHI <prephitmp_138(65), _161(2)>
    # DEBUG D#235 => &this_25(D)->_from
    # DEBUG this => D#235
    # DEBUG __first => _216
    # DEBUG __last => -1
    # DEBUG this => D#235
    # DEBUG __n => _216
    # DEBUG __val => -1
    # DEBUG __val => -1
    __n_72 = (size_t) _216;
    # DEBUG this => D#235
    # DEBUG __n => __n_72
    # DEBUG __val => &__val
    # VUSE <.MEM_229>
    __first_105 = MEM[(int * *)this_25(D) + 184B];
    # DEBUG D#29 => D#235
    # VUSE <.MEM_229>
    _106 = MEM[(int * *)this_25(D) + 200B];
    # DEBUG D#29 => D#235
    # DEBUG this => D#29
    # DEBUG this => D#29
    _107 = (long int) _106;
    _108 = (long int) __first_105;
    _109 = _107 - _108;
    _110 = _109 /[ex] 4;
    _111 = (size_type) _110;
    if (__n_72 > _111)
      goto <bb 10>;
    else
      goto <bb 22>;

  }
  bb_10 (preds = {bb_9 }, succs = {bb_11 bb_63 })
  {
    <bb 10>:
    # DEBUG this => D#235
    # DEBUG __n => __n_72
    # DEBUG __val => &__val
    # DEBUG D#147 => &D#235->D.34311
    # DEBUG this => D#147
    # DEBUG D#234 => &MEM[(struct _Vector_base *)this_25(D) + 184B]._M_impl
    # DEBUG this => &__tmp
    # DEBUG __n => __n_72
    # DEBUG __value => &__val
    # DEBUG __a => D#234
    # DEBUG D#146 => &__tmp.D.34311
    # DEBUG this => D#146
    # DEBUG __n => __n_72
    # DEBUG __a => D#234
    # DEBUG D#145 => &D#146->_M_impl
    # DEBUG this => D#145
    # DEBUG __a => D#234
    # DEBUG this => D#145
    # DEBUG __a => D#234
    # DEBUG this => D#145
    # DEBUG D.40610 => D#234
    # DEBUG this => D#146
    # DEBUG __n => __n_72
    # DEBUG D#143 => D#146
    # DEBUG __n => __n_72
    # DEBUG this => D#143
    # DEBUG D#142 => D#143
    if (__n_72 != 0)
      goto <bb 11>;
    else
      goto <bb 63>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 bb_13 })
  {
    <bb 11>:
    # DEBUG D#141 => &D#142->_M_impl
    # DEBUG D#140 => D#141
    # DEBUG __n => __n_72
    # DEBUG __a => D#140
    # DEBUG D#139 => D#140
    # DEBUG D#137 => D#139
    # DEBUG D#138 => 0B
    # DEBUG __n => __n_72
    # DEBUG this => D#137
    # DEBUG D.42173 => D#138
    # DEBUG D#136 => D#137
    # DEBUG D#130 => D#136
    # DEBUG this => D#130
    if (__n_72 > 4611686018427387903)
      goto <bb 12>;
    else
      goto <bb 13>;

  }
  bb_12 (preds = {bb_11 }, succs = {})
  {
    <bb 12>:
    # .MEM_163 = VDEF <.MEM_229>
    std::__throw_bad_alloc ();

  }
  bb_13 (preds = {bb_11 }, succs = {bb_16 })
  {
    <bb 13>:
    _145 = __n_72 * 4;
    # .MEM_162 = VDEF <.MEM_229>
    _146 = operator new (_145);
    _118 = _146 + _145;
    # DEBUG D#126 => &__tmp
    # DEBUG D#126 => &__tmp
    # DEBUG D#127 => &__val
    # DEBUG __n => __n_72
    # DEBUG D#124 => D#126
    # DEBUG this => D#124
    # DEBUG this => D#126
    # DEBUG D#125 => D#127
    # DEBUG __value => D#125
    # DEBUG D#123 => &D#124->D.34311
    # DEBUG this => D#123
    # DEBUG D#121 => D#125
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#120 => D#121
    # DEBUG __x => D#120
    # DEBUG D.42148 => D#122
    # DEBUG D#119 => D#120
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#118 => D#119
    # DEBUG __x => D#118
    # DEBUG __assignable => 1
    # DEBUG D#117 => D#118
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#116 => D#117
    # DEBUG __x => D#116
    # DEBUG D#115 => D#116
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#114 => D#115
    # DEBUG __value => D#114
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG D#111 => D#114
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG __value => D#111
    # DEBUG __tmp => -1
    # DEBUG __niter => __n_72
    # DEBUG __niter => __n_72
    # DEBUG __first => _146
    # DEBUG D#126 => &__tmp
    # DEBUG D#127 => &__val
    # DEBUG __n => __n_72
    # DEBUG D#124 => D#126
    # DEBUG this => D#124
    # DEBUG this => D#126
    # DEBUG D#125 => D#127
    # DEBUG __value => D#125
    # DEBUG D#123 => &D#124->D.34311
    # DEBUG this => D#123
    # DEBUG D#121 => D#125
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#120 => D#121
    # DEBUG __x => D#120
    # DEBUG D.42148 => D#122
    # DEBUG D#119 => D#120
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#118 => D#119
    # DEBUG __x => D#118
    # DEBUG __assignable => 1
    # DEBUG D#117 => D#118
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#116 => D#117
    # DEBUG __x => D#116
    # DEBUG D#115 => D#116
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#114 => D#115
    # DEBUG __value => D#114
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG D#111 => D#114
    # DEBUG __n => __n_72
    # DEBUG __value => D#111
    # DEBUG __tmp => -1
    # DEBUG __niter => __n_72
    # DEBUG __first => _146
    _196 = (sizetype) _216;
    _232 = _196 * 4;
    # .MEM_168 = VDEF <.MEM_162>
    __builtin_memset (_146, 255, _232);

  }
  bb_16 (preds = {bb_13 }, succs = {bb_17 })
  {
    <bb 16>:
    _242 = (long unsigned int) _216;
    _193 = _242 * 4;
    __first_153 = _146 + _193;
    # VUSE <.MEM_168>
    pretmp_104 = MEM[(int * &)this_25(D) + 184];

  }
  bb_17 (preds = {bb_16 bb_63 }, succs = {bb_18 bb_19 })
  {
    <bb 17>:
    # __first_215 = PHI <__first_153(16), 0B(63)>
    # .MEM_209 = PHI <.MEM_168(16), .MEM_229(63)>
    # _221 = PHI <_118(16), _190(63)>
    # __first_3 = PHI <_146(16), 0B(63)>
    # prephitmp_233 = PHI <pretmp_104(16), __first_105(63)>
    # DEBUG D#149 => &D#235->D.34311._M_impl
    # DEBUG this => &__tmp.D.34311._M_impl
    # DEBUG __x => D#149
    # DEBUG D#110 => &D#149->_M_start
    # DEBUG D#109 => &MEM[(struct _Vector_impl *)&__tmp]._M_start
    # DEBUG __a => D#109
    # DEBUG __b => D#110
    # DEBUG __tmp => __first_3
    # DEBUG D#238 => MEM[(int * &)this_25(D) + 184]
    # .MEM_171 = VDEF <.MEM_209>
    MEM[(int * &)this_25(D) + 184] = __first_3;
    # DEBUG D#108 => &D#149->_M_finish
    # DEBUG D#107 => &MEM[(struct _Vector_impl *)&__tmp]._M_finish
    # DEBUG __a => D#107
    # DEBUG __b => D#108
    # DEBUG __tmp => __first_215
    # .MEM_173 = VDEF <.MEM_171>
    MEM[(int * &)this_25(D) + 192] = __first_215;
    # DEBUG D#106 => &D#149->_M_end_of_storage
    # DEBUG D#105 => &MEM[(struct _Vector_impl *)&__tmp]._M_end_of_storage
    # DEBUG __a => D#105
    # DEBUG __b => D#106
    # DEBUG __tmp => _221
    # .MEM_175 = VDEF <.MEM_173>
    MEM[(int * &)this_25(D) + 200] = _221;
    # DEBUG this => &__tmp
    # DEBUG D#79 => &__tmp.D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => __tmp.D.34311._M_impl._M_finish
    # DEBUG D#81 => __tmp.D.34311._M_impl._M_start
    # DEBUG __first => D#81
    # DEBUG __last => D#82
    # DEBUG D.40040 => NULL
    # DEBUG D#22 => D#81
    # DEBUG D#23 => D#82
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.39717 => D#18
    # DEBUG D.39716 => D#19
    # DEBUG D#80 => &__tmp.D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # DEBUG D#76 => (long int) D#238
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#73 => (long unsigned int) D#74
    # DEBUG this => D#80
    # DEBUG __p => D#238
    # DEBUG __n => D#73
    if (prephitmp_233 != 0B)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#71 => &D#80->_M_impl
    # DEBUG D#69 => D#71
    # DEBUG D#70 => D#73
    # DEBUG __p => D#238
    # DEBUG __a => D#69
    # DEBUG __n => D#70
    # DEBUG D#68 => D#70
    # DEBUG D#67 => D#69
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#68
    # DEBUG __p => D#238
    # DEBUG this => D#65
    # DEBUG D.42105 => D#66
    # .MEM_176 = VDEF <.MEM_175>
    operator delete (prephitmp_233);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {bb_20 })
  {
    <bb 19>:
    # .MEM_150 = PHI <.MEM_175(17), .MEM_176(18)>
    # DEBUG D#72 => &D#80->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_182 = VDEF <.MEM_150>
    __tmp ={v} {CLOBBER};
    # VUSE <.MEM_182>
    pretmp_247 = this_25(D)->D.36959.D.35235._inputs;

  }
  bb_20 (preds = {bb_66 bb_19 bb_32 }, succs = {bb_21 bb_38 })
  {
    <bb 20>:
    # .MEM_103 = PHI <.MEM_158(66), .MEM_182(19), .MEM_156(32)>
    # prephitmp_249 = PHI <prephitmp_246(66), pretmp_247(19), pretmp_248(32)>
    # DEBUG iter => 0
    # DEBUG slen => slen_134
    if (prephitmp_249 <= 0)
      goto <bb 21>;
    else
      goto <bb 38>;

  }
  bb_21 (preds = {bb_20 bb_53 }, succs = {bb_69 })
  {
    <bb 21>:
    # .MEM_244 = PHI <.MEM_103(20), .MEM_85(53)>

  }
  bb_69 (preds = {bb_21 }, succs = {bb_61 })
  {
    <bb 69>:
    goto <bb 61>;

  }
  bb_22 (preds = {bb_9 }, succs = {bb_24 bb_23 })
  {
    <bb 22>:
    # DEBUG D#5 => D#235
    # VUSE <.MEM_229>
    __first_112 = MEM[(int * *)this_25(D) + 192B];
    # DEBUG D#5 => D#235
    # DEBUG this => D#5
    # DEBUG this => D#5
    _113 = (long int) __first_112;
    _114 = _113 - _108;
    _115 = _114 /[ex] 4;
    _116 = (size_type) _115;
    if (__n_72 > _116)
      goto <bb 24>;
    else
      goto <bb 23>;

  }
  bb_23 (preds = {bb_22 }, succs = {bb_37 bb_33 })
  {
    <bb 23>:
    # DEBUG __niter => __n_72
    # DEBUG __first => __first_105
    if (__n_72 == 0)
      goto <bb 37>;
    else
      goto <bb 33>;

  }
  bb_24 (preds = {bb_22 }, succs = {bb_25 bb_26 })
  {
    <bb 24>:
    # DEBUG __first => __first_105
    if (__first_105 == __first_112)
      goto <bb 25>;
    else
      goto <bb 26>;

  }
  bb_25 (preds = {bb_24 bb_28 }, succs = {bb_32 })
  {
    <bb 25>:
    # .MEM_243 = PHI <.MEM_229(24), .MEM_197(28)>
    # DEBUG D#148 => &D#235->D.34311
    # DEBUG this => D#148
    # DEBUG D#5 => D#235
    # DEBUG D#5 => D#235
    # DEBUG this => D#5
    # DEBUG this => D#5
    __n_120 = __n_72 - _116;
    # DEBUG D#121 => &__val
    # DEBUG __first => __first_112
    # DEBUG __n => __n_120
    # DEBUG D#120 => D#121
    # DEBUG __x => D#120
    # DEBUG D.42005 => D#122
    # DEBUG D#119 => D#120
    # DEBUG __first => __first_112
    # DEBUG __n => __n_120
    # DEBUG D#118 => D#119
    # DEBUG __x => D#118
    # DEBUG __assignable => 1
    # DEBUG D#117 => D#118
    # DEBUG __first => __first_112
    # DEBUG __n => __n_120
    # DEBUG D#116 => D#117
    # DEBUG __x => D#116
    # DEBUG D#115 => D#116
    # DEBUG __first => __first_112
    # DEBUG __n => __n_120
    # DEBUG D#114 => D#115
    # DEBUG __value => D#114
    # DEBUG __it => __first_112
    # DEBUG __it => __first_112
    # DEBUG D#111 => D#114
    # DEBUG __first => __first_112
    # DEBUG __n => __n_120
    # DEBUG __value => D#111
    # DEBUG __tmp => -1
    # DEBUG __niter => __n_120
    # DEBUG __niter => __n_120
    # DEBUG __first => __first_112
    _210 = __n_120 * 4;
    # .MEM_213 = VDEF <.MEM_243>
    __builtin_memset (__first_112, 255, _210);
    goto <bb 32>;

  }
  bb_26 (preds = {bb_24 }, succs = {bb_28 })
  {
    <bb 26>:
    _199 = (unsigned long) __first_112;
    _204 = __first_105 + 4;
    _198 = (unsigned long) _204;
    _155 = _199 - _198;
    _124 = _155 /[ex] 4;
    _125 = _124 & 4611686018427387903;
    _241 = _125 + 1;
    _240 = _241 * 4;
    # .MEM_214 = VDEF <.MEM_229>
    __builtin_memset (__first_105, 255, _240);

  }
  bb_28 (preds = {bb_26 }, succs = {bb_25 })
  {
    <bb 28>:
    # .MEM_197 = PHI <.MEM_214(26)>
    goto <bb 25>;

  }
  bb_32 (preds = {bb_25 }, succs = {bb_20 })
  {
    <bb 32>:
    _234 = __n_120 * 4;
    __first_164 = __first_112 + _234;
    # .MEM_156 = VDEF <.MEM_213>
    MEM[(struct vector *)this_25(D) + 184B].D.34311._M_impl._M_finish = __first_164;
    # VUSE <.MEM_156>
    pretmp_248 = this_25(D)->D.36959.D.35235._inputs;
    goto <bb 20>;

  }
  bb_33 (preds = {bb_23 }, succs = {bb_36 })
  {
    <bb 33>:
    _208 = (sizetype) _216;
    _230 = _208 * 4;
    # .MEM_218 = VDEF <.MEM_229>
    __builtin_memset (__first_105, 255, _230);

  }
  bb_36 (preds = {bb_33 }, succs = {bb_37 })
  {
    <bb 36>:
    _195 = (long unsigned int) _216;
    _238 = _195 * 4;
    __first_160 = __first_105 + _238;
    # VUSE <.MEM_218>
    pretmp_245 = this_25(D)->D.36959.D.35235._inputs;

  }
  bb_37 (preds = {bb_36 bb_23 }, succs = {bb_66 })
  {
    <bb 37>:
    # __first_231 = PHI <__first_160(36), __first_105(23)>
    # .MEM_202 = PHI <.MEM_218(36), .MEM_229(23)>
    # prephitmp_246 = PHI <pretmp_245(36), prephitmp_11(23)>

  }
  bb_66 (preds = {bb_37 }, succs = {bb_20 })
  {
    <bb 66>:
    # DEBUG D#27 => D#235
    # DEBUG __pos => __first_231
    # DEBUG D#26 => D#27
    # DEBUG this => D#26
    # DEBUG D#24 => &D#26->D.34311
    # DEBUG this => D#24
    # DEBUG D#25 => D#26->D.34311._M_impl._M_finish
    # DEBUG __first => __first_231
    # DEBUG __last => D#25
    # DEBUG D.39733 => NULL
    # DEBUG D#22 => __first_231
    # DEBUG D#23 => D#25
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.39717 => D#18
    # DEBUG D.39716 => D#19
    # .MEM_158 = VDEF <.MEM_202>
    MEM[(int * *)this_25(D) + 192B] = __first_231;
    goto <bb 20>;

  }
  bb_38 (preds = {bb_20 }, succs = {bb_39 })
  {
    <bb 38>:
    # VUSE <.MEM_103>
    pretmp_186 = this_25(D)->_s;

  }
  bb_55 (preds = {bb_62 }, succs = {bb_56 bb_60 })
  {
    # i_184 = PHI <i_46(62)>
    # _183 = PHI <_54(62)>
    # _181 = PHI <_88(62)>
    # _180 = PHI <_89(62)>
    # _179 = PHI <_91(62)>
    # _178 = PHI <_95(62)>
    # j_152 = PHI <j_166(62)>
  found_augmenting:
    # DEBUG D#158 => &this_25(D)->_from
    # DEBUG D#2 => D#158
    # DEBUG __n => _48
    # DEBUG this => D#2
    # DEBUG i => i_184
    # DEBUG D#159 => &this_25(D)->D.36959.D.35235._outmatch
    # DEBUG D#2 => D#159
    # DEBUG __n => _48
    # DEBUG this => D#2
    # .MEM_67 = VDEF <.MEM_57>
    *_178 = i_184;
    # DEBUG j => j_152
    # DEBUG i => i_184
    # DEBUG D#164 => &this_25(D)->D.36959.D.35235._inmatch
    # DEBUG D#2 => D#164
    # DEBUG __n => D#237
    # DEBUG this => D#2
    # VUSE <.MEM_67>
    j_188 = *_183;
    if (j_188 != -1)
      goto <bb 56>;
    else
      goto <bb 60>;

  }
  bb_56 (preds = {bb_55 }, succs = {bb_57 })
  {
    <bb 56>:

  }
  bb_58 (preds = {bb_57 }, succs = {bb_64 })
  {
    <bb 58>:
    # _177 = PHI <_99(57)>
    # j_147 = PHI <j_217(57)>

  }
  bb_64 (preds = {bb_58 }, succs = {bb_60 })
  {
    <bb 64>:
    goto <bb 60>;

  }
  bb_60 (preds = {bb_64 bb_55 }, succs = {bb_67 })
  {
    <bb 60>:
    # j_169 = PHI <j_147(64), j_152(55)>
    # .MEM_225 = PHI <.MEM_78(64), .MEM_67(55)>
    # _219 = PHI <_177(64), _183(55)>

  }
  bb_67 (preds = {bb_60 }, succs = {bb_61 })
  {
    <bb 67>:
    # DEBUG D#165 => &this_25(D)->D.36959.D.35235._inmatch
    # DEBUG D#2 => D#165
    # DEBUG __n => D#237
    # DEBUG this => D#2
    # .MEM_79 = VDEF <.MEM_225>
    *_219 = j_169;

  }
  bb_61 (preds = {bb_69 bb_67 }, succs = {bb_68 })
  {
    <bb 61>:
    # _14 = PHI <0(69), 1(67)>
    # .MEM_23 = PHI <.MEM_244(69), .MEM_79(67)>

  }
  bb_68 (preds = {bb_61 }, succs = {bb_1 })
  {
    <bb 68>:
    # VUSE <.MEM_23>
    return _14;

  }
  bb_63 (preds = {bb_10 }, succs = {bb_17 })
  {
    <bb 63>:
    _191 = __n_72 * 4;
    _190 = (int *) _191;
    # DEBUG D#126 => &__tmp
    # DEBUG D#126 => &__tmp
    # DEBUG D#127 => &__val
    # DEBUG __n => __n_72
    # DEBUG D#124 => D#126
    # DEBUG this => D#124
    # DEBUG this => D#126
    # DEBUG D#125 => D#127
    # DEBUG __value => D#125
    # DEBUG D#123 => &D#124->D.34311
    # DEBUG this => D#123
    # DEBUG D#121 => D#125
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#120 => D#121
    # DEBUG __x => D#120
    # DEBUG D.42148 => D#122
    # DEBUG D#119 => D#120
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#118 => D#119
    # DEBUG __x => D#118
    # DEBUG __assignable => 1
    # DEBUG D#117 => D#118
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#116 => D#117
    # DEBUG __x => D#116
    # DEBUG D#115 => D#116
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG D#114 => D#115
    # DEBUG __value => D#114
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG D#111 => D#114
    # DEBUG __first => NULL
    # DEBUG __n => __n_72
    # DEBUG __value => D#111
    # DEBUG __tmp => -1
    # DEBUG __niter => __n_72
    # DEBUG __niter => __n_72
    # DEBUG __first => 0B
    goto <bb 17>;

  }
  loop_5 (header = 57, latch = 59, niter = )
  {
    bb_57 (preds = {bb_56 bb_59 }, succs = {bb_59 bb_58 })
    {
      <bb 57>:
      # j_167 = PHI <j_152(56), j_217(59)>
      # .MEM_224 = PHI <.MEM_67(56), .MEM_78(59)>
      # j_217 = PHI <j_188(56), j_70(59)>
      # _206 = PHI <_183(56), _99(59)>
      # DEBUG j => j_167
      # DEBUG i => i_184
      # DEBUG D#164 => &this_25(D)->D.36959.D.35235._inmatch
      # DEBUG __n => D#237
      # DEBUG this => D#2
      # DEBUG D#160 => &this_25(D)->D.36959.D.35235._inmatch
      # DEBUG D#2 => D#160
      # DEBUG __n => D#237
      # DEBUG this => D#2
      # DEBUG jn => j_217
      # DEBUG D#161 => &this_25(D)->D.36959.D.35235._inmatch
      # DEBUG D#2 => D#161
      # DEBUG __n => D#237
      # DEBUG this => D#2
      # .MEM_73 = VDEF <.MEM_224>
      *_206 = j_167;
      # DEBUG j => j_217
      _74 = (long unsigned int) j_217;
      # DEBUG D#162 => &this_25(D)->_from
      # DEBUG D#2 => D#162
      # DEBUG __n => _74
      # DEBUG this => D#2
      _101 = _74 * 4;
      _102 = _180 + _101;
      # VUSE <.MEM_73>
      i_76 = *_102;
      # DEBUG i => i_76
      # DEBUG D#163 => &this_25(D)->D.36959.D.35235._outmatch
      # DEBUG D#2 => D#163
      # DEBUG __n => _74
      # DEBUG this => D#2
      _100 = _179 + _101;
      # .MEM_78 = VDEF <.MEM_73>
      *_100 = i_76;
      # DEBUG j => j_217
      # DEBUG i => i_76
      _68 = (long unsigned int) i_76;
      # DEBUG D#164 => &this_25(D)->D.36959.D.35235._inmatch
      # DEBUG D#2 => D#164
      # DEBUG __n => _68
      # DEBUG this => D#2
      _98 = _68 * 4;
      _99 = _181 + _98;
      # VUSE <.MEM_78>
      j_70 = *_99;
      if (j_70 != -1)
        goto <bb 59>;
      else
        goto <bb 58>;

    }
    bb_59 (preds = {bb_57 }, succs = {bb_57 })
    {
      <bb 59>:
      goto <bb 57>;

    }
  }
  loop_2 (header = 39, latch = 54, niter = , upper_bound = 2147483647)
  {
    bb_39 (preds = {bb_38 bb_54 }, succs = {bb_53 bb_40 })
    {
      <bb 39>:
      # .MEM_220 = PHI <.MEM_103(38), .MEM_85(54)>
      # slen_172 = PHI <slen_134(38), slen_174(54)>
      # iter_201 = PHI <0(38), iter_86(54)>
      # prephitmp_185 = PHI <pretmp_186(38), _83(54)>
      # prephitmp_194 = PHI <prephitmp_249(38), prephitmp_251(54)>
      # DEBUG iter => iter_201
      # DEBUG slen => slen_172
      # DEBUG e => 0
      # DEBUG nslen => 0
      if (slen_172 <= 0)
        goto <bb 53>;
      else
        goto <bb 40>;

    }
    bb_40 (preds = {bb_39 }, succs = {bb_41 })
    {
      <bb 40>:
      # VUSE <.MEM_220>
      pretmp_252 = this_25(D)->D.36959.D.35235._outputs;

    }
    bb_52 (preds = {bb_50 }, succs = {bb_53 })
    {
      <bb 52>:
      # slen_148 = PHI <slen_203(50)>
      # VUSE <.MEM_222>
      pretmp_250 = this_25(D)->D.36959.D.35235._inputs;

    }
    bb_53 (preds = {bb_52 bb_39 }, succs = {bb_21 bb_54 })
    {
      <bb 53>:
      # slen_174 = PHI <slen_148(52), 0(39)>
      # .MEM_227 = PHI <.MEM_222(52), .MEM_220(39)>
      # prephitmp_251 = PHI <pretmp_250(52), prephitmp_194(39)>
      # DEBUG D#236 => this_25(D)->_s
      # DEBUG t => D#236
      # VUSE <.MEM_227>
      _83 = this_25(D)->_ns;
      # .MEM_84 = VDEF <.MEM_227>
      this_25(D)->_s = _83;
      # .MEM_85 = VDEF <.MEM_84>
      this_25(D)->_ns = prephitmp_185;
      # DEBUG slen => slen_174
      iter_86 = iter_201 + 1;
      # DEBUG iter => iter_86
      # DEBUG iter => iter_86
      # DEBUG slen => slen_174
      if (iter_86 >= prephitmp_251)
        goto <bb 21>;
      else
        goto <bb 54>;

    }
    bb_54 (preds = {bb_53 }, succs = {bb_39 })
    {
      <bb 54>:
      goto <bb 39>;

    }
    loop_3 (header = 41, latch = 51, niter = , upper_bound = 2147483646)
    {
      bb_41 (preds = {bb_40 bb_51 }, succs = {bb_50 bb_42 })
      {
        <bb 41>:
        # slen_136 = PHI <0(40), slen_203(51)>
        # e_200 = PHI <0(40), e_81(51)>
        # .MEM_228 = PHI <.MEM_220(40), .MEM_222(51)>
        # prephitmp_253 = PHI <pretmp_252(40), prephitmp_9(51)>
        # DEBUG e => e_200
        # DEBUG nslen => slen_136
        _43 = (long unsigned int) e_200;
        _44 = _43 * 4;
        _45 = prephitmp_185 + _44;
        # VUSE <.MEM_228>
        i_46 = *_45;
        # DEBUG i => i_46
        # DEBUG j => 0
        # DEBUG nslen => slen_136
        # DEBUG j => 0
        if (prephitmp_253 <= 0)
          goto <bb 50>;
        else
          goto <bb 42>;

      }
      bb_42 (preds = {bb_41 }, succs = {bb_43 })
      {
        <bb 42>:
        pretmp_149 = (long unsigned int) i_46;
        pretmp_141 = pretmp_149 * 24;
        # VUSE <.MEM_228>
        pretmp_126 = MEM[(struct vector * *)this_25(D) + 160B];
        pretmp_29 = pretmp_126 + pretmp_141;
        # VUSE <.MEM_228>
        pretmp_15 = MEM[(struct sRequest * *)pretmp_29];
        _56 = pretmp_149 * 4;

      }
      bb_48 (preds = {bb_47 }, succs = {bb_50 })
      {
        <bb 48>:
        # slen_187 = PHI <slen_10(47)>
        # prephitmp_139 = PHI <prephitmp_255(47)>
        goto <bb 50>;

      }
      bb_50 (preds = {bb_48 bb_41 }, succs = {bb_52 bb_51 })
      {
        <bb 50>:
        # slen_203 = PHI <slen_187(48), slen_136(41)>
        # .MEM_222 = PHI <.MEM_21(48), .MEM_228(41)>
        # prephitmp_9 = PHI <prephitmp_139(48), prephitmp_253(41)>
        e_81 = e_200 + 1;
        # DEBUG e => e_81
        # DEBUG e => e_81
        # DEBUG nslen => slen_203
        if (e_81 >= slen_172)
          goto <bb 52>;
        else
          goto <bb 51>;

      }
      bb_51 (preds = {bb_50 }, succs = {bb_41 })
      {
        <bb 51>:
        goto <bb 41>;

      }
      loop_4 (header = 43, latch = 49, niter = , upper_bound = 2147483647)
      {
        bb_43 (preds = {bb_42 bb_49 }, succs = {bb_44 bb_47 })
        {
          <bb 43>:
          # j_166 = PHI <0(42), j_80(49)>
          # slen_13 = PHI <slen_136(42), slen_10(49)>
          # .MEM_226 = PHI <.MEM_228(42), .MEM_21(49)>
          # prephitmp_159 = PHI <prephitmp_253(42), prephitmp_255(49)>
          # DEBUG nslen => slen_13
          # DEBUG j => j_166
          _48 = (long unsigned int) j_166;
          # DEBUG D#237 => (long unsigned int) i_46
          # DEBUG D#152 => &this_25(D)->D.36959._request
          # DEBUG D#3 => D#152
          # DEBUG __n => D#237
          # DEBUG this => D#3
          # DEBUG __n => _48
          # DEBUG this => D#4
          _71 = _48 * 16;
          _69 = pretmp_15 + _71;
          # VUSE <.MEM_226>
          _52 = _69->label;
          if (_52 != -1)
            goto <bb 44>;
          else
            goto <bb 47>;

        }
        bb_44 (preds = {bb_43 }, succs = {bb_45 bb_47 })
        {
          <bb 44>:
          # DEBUG D#153 => &this_25(D)->D.36959.D.35235._inmatch
          # VUSE <.MEM_226>
          _88 = MEM[(int * *)this_25(D) + 112B];
          # DEBUG D#2 => D#153
          # DEBUG __n => D#237
          # DEBUG this => D#2
          _54 = _88 + _56;
          # VUSE <.MEM_226>
          _53 = *_54;
          if (_53 != j_166)
            goto <bb 45>;
          else
            goto <bb 47>;

        }
        bb_45 (preds = {bb_44 }, succs = {bb_62 bb_47 })
        {
          <bb 45>:
          # DEBUG D#154 => &this_25(D)->_from
          # VUSE <.MEM_226>
          _89 = MEM[(int * *)this_25(D) + 184B];
          # DEBUG D#2 => D#154
          # DEBUG __n => _48
          # DEBUG this => D#2
          _51 = _48 * 4;
          _50 = _89 + _51;
          # VUSE <.MEM_226>
          _55 = *_50;
          if (_55 == -1)
            goto <bb 62>;
          else
            goto <bb 47>;

        }
        bb_46 (preds = {bb_62 }, succs = {bb_47 })
        {
          <bb 46>:
          # VUSE <.MEM_57>
          _59 = this_25(D)->_ns;
          _60 = (long unsigned int) slen_13;
          _61 = _60 * 4;
          _62 = _59 + _61;
          # DEBUG D#157 => &this_25(D)->D.36959.D.35235._outmatch
          # DEBUG D#2 => D#157
          # DEBUG __n => _48
          # DEBUG this => D#2
          # .MEM_64 = VDEF <.MEM_57>
          *_62 = _58;
          slen_65 = slen_13 + 1;
          # DEBUG nslen => slen_65
          # VUSE <.MEM_64>
          pretmp_254 = this_25(D)->D.36959.D.35235._outputs;

        }
        bb_47 (preds = {bb_43 bb_46 bb_45 bb_44 }, succs = {bb_48 bb_49 })
        {
          <bb 47>:
          # slen_10 = PHI <slen_13(43), slen_65(46), slen_13(45), slen_13(44)>
          # .MEM_21 = PHI <.MEM_226(43), .MEM_64(46), .MEM_226(45), .MEM_226(44)>
          # prephitmp_255 = PHI <prephitmp_159(43), pretmp_254(46), prephitmp_159(45), prephitmp_159(44)>
          # DEBUG nslen => slen_10
          j_80 = j_166 + 1;
          # DEBUG j => j_80
          # DEBUG nslen => slen_10
          # DEBUG j => j_80
          if (j_80 >= prephitmp_255)
            goto <bb 48>;
          else
            goto <bb 49>;

        }
        bb_49 (preds = {bb_47 }, succs = {bb_43 })
        {
          <bb 49>:
          goto <bb 43>;

        }
        bb_62 (preds = {bb_45 }, succs = {bb_55 bb_46 })
        {
          <bb 62>:
          # DEBUG D#155 => &this_25(D)->_from
          # DEBUG D#2 => D#155
          # DEBUG __n => _48
          # DEBUG this => D#2
          # .MEM_57 = VDEF <.MEM_226>
          *_50 = i_46;
          # DEBUG D#156 => &this_25(D)->D.36959.D.35235._outmatch
          # VUSE <.MEM_57>
          _91 = MEM[(int * *)this_25(D) + 136B];
          # DEBUG D#2 => D#156
          # DEBUG __n => _48
          # DEBUG this => D#2
          _95 = _91 + _51;
          # VUSE <.MEM_57>
          _58 = *_95;
          if (_58 == -1)
            goto <bb 55> (found_augmenting);
          else
            goto <bb 46>;

        }
      }
    }
  }
  loop_1 (header = 4, latch = 8, niter = , upper_bound = 2147483646)
  {
    bb_4 (preds = {bb_3 bb_8 }, succs = {bb_5 bb_6 })
    {
      <bb 4>:
      # i_165 = PHI <0(3), i_39(8)>
      # slen_170 = PHI <0(3), slen_6(8)>
      # .MEM_207 = PHI <.MEM_24(D)(3), .MEM_16(8)>
      # _223 = PHI <_161(3), prephitmp_257(8)>
      # prephitmp_239 = PHI <_161(3), prephitmp_257(8)>
      # DEBUG slen => slen_170
      # DEBUG i => i_165
      # VUSE <.MEM_207>
      _27 = this_25(D)->_prio;
      _28 = _27 + i_165;
      j_30 = _28 % _223;
      # DEBUG j => j_30
      _31 = (long unsigned int) j_30;
      # DEBUG D#151 => &this_25(D)->D.36959.D.35235._inmatch
      # DEBUG D#2 => D#151
      # DEBUG __n => _31
      # DEBUG this => D#2
      _77 = _31 * 4;
      _75 = pretmp_236 + _77;
      # VUSE <.MEM_207>
      _32 = *_75;
      if (_32 == -1)
        goto <bb 5>;
      else
        goto <bb 6>;

    }
    bb_5 (preds = {bb_4 }, succs = {bb_6 })
    {
      <bb 5>:
      # VUSE <.MEM_207>
      _33 = this_25(D)->_s;
      slen_34 = slen_170 + 1;
      # DEBUG slen => slen_34
      _35 = (long unsigned int) slen_170;
      _36 = _35 * 4;
      _37 = _33 + _36;
      # .MEM_38 = VDEF <.MEM_207>
      *_37 = j_30;
      # VUSE <.MEM_38>
      pretmp_256 = this_25(D)->D.36959.D.35235._inputs;

    }
    bb_6 (preds = {bb_4 bb_5 }, succs = {bb_7 bb_8 })
    {
      <bb 6>:
      # slen_6 = PHI <slen_170(4), slen_34(5)>
      # .MEM_16 = PHI <.MEM_207(4), .MEM_38(5)>
      # prephitmp_257 = PHI <prephitmp_239(4), pretmp_256(5)>
      # DEBUG slen => slen_6
      i_39 = i_165 + 1;
      # DEBUG i => i_39
      # DEBUG slen => slen_6
      # DEBUG i => i_39
      if (i_39 >= prephitmp_257)
        goto <bb 7>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_6 }, succs = {bb_4 })
    {
      <bb 8>:
      goto <bb 4>;

    }
  }
}

Pass statistics:
----------------

bool MaxSizeMatch::_ShortestAugmenting() (struct MaxSizeMatchD.36919 * const thisD.37048)
{
  intD.9 * D.42175;
  intD.9 * __firstD.42150;
  size_typeD.33887 __nD.42133;
  intD.9 * __tmpD.42094;
  intD.9 * __tmpD.42091;
  intD.9 * __tmpD.42088;
  struct vectorD.33506 __tmpD.42083;
  long unsigned intD.14 __nD.42006;
  intD.9 * __firstD.42007;
  intD.9 * __firstD.42002;
  intD.9 * __firstD.41989;
  size_tD.2818 __nD.41985;
  intD.9 __valD.40891;
  intD.9 eD.37060;
  intD.9 * tD.37806;
  intD.9 iterD.37059;
  intD.9 slenD.37053;
  intD.9 jD.37051;
  intD.9 iD.37050;
  const intD.9 prephitmp_9;
  const intD.9 prephitmp_11;
  boolD.2757 _14;
  struct sRequestD.34315 * pretmp_15;
  intD.9 _27;
  intD.9 _28;
  struct vectorD.34419 & pretmp_29;
  long unsigned intD.14 _31;
  intD.9 _32;
  intD.9 * _33;
  long unsigned intD.14 _35;
  long unsigned intD.14 _36;
  intD.9 * _37;
  long unsigned intD.14 _43;
  long unsigned intD.14 _44;
  intD.9 * _45;
  long unsigned intD.14 _48;
  intD.9 & _50;
  long unsigned intD.14 _51;
  intD.9 _52;
  intD.9 _53;
  intD.9 & _54;
  intD.9 _55;
  long unsigned intD.14 _56;
  intD.9 _58;
  intD.9 * _59;
  long unsigned intD.14 _60;
  long unsigned intD.14 _61;
  intD.9 * _62;
  long unsigned intD.14 _68;
  struct sRequestD.34315 & _69;
  long unsigned intD.14 _71;
  long unsigned intD.14 _74;
  intD.9 & _75;
  long unsigned intD.14 _77;
  intD.9 * _83;
  intD.9 * _88;
  intD.9 * _89;
  intD.9 * _91;
  intD.9 & _95;
  long unsigned intD.14 _98;
  intD.9 & _99;
  intD.9 & _100;
  long unsigned intD.14 _101;
  intD.9 & _102;
  intD.9 * pretmp_104;
  intD.9 * const _106;
  long intD.12 _107;
  long intD.12 _108;
  long intD.12 _109;
  long intD.12 _110;
  size_typeD.33887 _111;
  long intD.12 _113;
  long intD.12 _114;
  long intD.12 _115;
  size_typeD.33887 _116;
  intD.9 * _118;
  unsigned long _124;
  sizetype _125;
  struct vectorD.34419 * pretmp_126;
  const intD.9 prephitmp_138;
  const intD.9 prephitmp_139;
  long unsigned intD.14 pretmp_141;
  long unsigned intD.14 _145;
  intD.9 * _146;
  long unsigned intD.14 pretmp_149;
  unsigned long _155;
  const intD.9 prephitmp_159;
  intD.9 _161;
  intD.9 & _177;
  intD.9 & _178;
  intD.9 * _179;
  intD.9 * _180;
  intD.9 * _181;
  intD.9 & _183;
  intD.9 * prephitmp_185;
  intD.9 * pretmp_186;
  intD.9 * _190;
  long unsigned intD.14 _191;
  long unsigned intD.14 _193;
  const intD.9 prephitmp_194;
  long unsigned intD.14 _195;
  sizetype _196;
  unsigned long _198;
  unsigned long _199;
  intD.9 * _204;
  intD.9 & _206;
  sizetype _208;
  sizetype _210;
  intD.9 _216;
  intD.9 & _219;
  intD.9 * _221;
  intD.9 _223;
  sizetype _230;
  sizetype _232;
  intD.9 * prephitmp_233;
  long unsigned intD.14 _234;
  intD.9 * pretmp_236;
  long unsigned intD.14 _238;
  const intD.9 prephitmp_239;
  sizetype _240;
  sizetype _241;
  long unsigned intD.14 _242;
  const intD.9 pretmp_245;
  const intD.9 prephitmp_246;
  const intD.9 pretmp_247;
  const intD.9 pretmp_248;
  const intD.9 prephitmp_249;
  const intD.9 pretmp_250;
  const intD.9 prephitmp_251;
  const intD.9 pretmp_252;
  const intD.9 prephitmp_253;
  const intD.9 pretmp_254;
  const intD.9 prephitmp_255;
  const intD.9 pretmp_256;
  const intD.9 prephitmp_257;

;;   basic block 2, loop depth 0, count 0, freq 227, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG slenD.37053 => 0
  # DEBUG iD.37050 => 0
  # DEBUG slenD.37053 => 0
  # DEBUG iD.37050 => 0
  # VUSE <.MEM_24(D)>
  _161 = this_25(D)->D.36959.D.35235._inputsD.33566;
  if (_161 <= 0)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 207, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_24(D)>
  # PT = nonlocal escaped 
  pretmp_236 = MEM[(intD.9 * *)this_25(D) + 112B];
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 2290, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_165 = PHI <0(3), i_39(8)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_170 = PHI <0(3), slen_6(8)>
  # .MEM_207 = PHI <.MEM_24(D)(3), .MEM_16(8)>
  # _223 = PHI <_161(3), prephitmp_257(8)>
  # prephitmp_239 = PHI <_161(3), prephitmp_257(8)>
  # DEBUG slenD.37053 => slen_170
  # DEBUG iD.37050 => i_165
  # VUSE <.MEM_207>
  _27 = this_25(D)->_prioD.36924;
  _28 = _27 + i_165;
  j_30 = _28 % _223;
  # DEBUG jD.37051 => j_30
  # RANGE ~[2147483648, 18446744071562067967]
  _31 = (long unsigned intD.14) j_30;
  # DEBUG D#151ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#151ptD.0
  # DEBUG __nD.40884 => _31
  # DEBUG thisD.40885 => D#2ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _77 = _31 * 4;
  # PT = nonlocal escaped 
  _75 = pretmp_236 + _77;
  # VUSE <.MEM_207>
  _32 = *_75;
  if (_32 == -1)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 641, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_207>
  # PT = nonlocal escaped 
  _33 = this_25(D)->_sD.36922;
  # RANGE [1, 2147483647] NONZERO 2147483647
  slen_34 = slen_170 + 1;
  # DEBUG slenD.37053 => slen_34
  # RANGE [0, 2147483647] NONZERO 2147483647
  _35 = (long unsigned intD.14) slen_170;
  # RANGE [0, 8589934588] NONZERO 8589934588
  _36 = _35 * 4;
  # PT = nonlocal escaped 
  _37 = _33 + _36;
  # .MEM_38 = VDEF <.MEM_207>
  *_37 = j_30;
  # VUSE <.MEM_38>
  pretmp_256 = this_25(D)->D.36959.D.35235._inputsD.33566;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 2290, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [72.0%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_6 = PHI <slen_170(4), slen_34(5)>
  # .MEM_16 = PHI <.MEM_207(4), .MEM_38(5)>
  # prephitmp_257 = PHI <prephitmp_239(4), pretmp_256(5)>
  # DEBUG slenD.37053 => slen_6
  i_39 = i_165 + 1;
  # DEBUG iD.37050 => i_39
  # DEBUG slenD.37053 => slen_6
  # DEBUG iD.37050 => i_39
  if (i_39 >= prephitmp_257)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 206, maybe hot
;;    prev block 6, next block 65, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_192 = PHI <slen_6(6)>
  # prephitmp_138 = PHI <prephitmp_257(6)>
;;    succ:       65 [100.0%]  (FALLTHRU)

;;   basic block 65, loop depth 0, count 0, freq 206, maybe hot
;;    prev block 7, next block 8, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU)
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 2084, maybe hot
;;    prev block 65, next block 9, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       65 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_134 = PHI <slen_192(65), 0(2)>
  # .MEM_229 = PHI <.MEM_16(65), .MEM_24(D)(2)>
  # _216 = PHI <prephitmp_138(65), _161(2)>
  # prephitmp_11 = PHI <prephitmp_138(65), _161(2)>
  # DEBUG D#235ptD.0 => &this_25(D)->_fromD.36921
  # DEBUG thisD.40887 => D#235ptD.0
  # DEBUG __firstD.40888 => _216
  # DEBUG __lastD.40889 => -1
  # DEBUG thisD.40893 => D#235ptD.0
  # DEBUG __nD.40892 => _216
  # DEBUG __valD.40891 => -1
  # DEBUG __valD.40891 => -1
  # RANGE [0, 18446744073709551615]
  __n_72 = (size_tD.2818) _216;
  # DEBUG thisD.41984 => D#235ptD.0
  # DEBUG __nD.41985 => __n_72
  # DEBUG __valD.41986 => &__valD.40891
  # VUSE <.MEM_229>
  # PT = nonlocal escaped 
  __first_105 = MEM[(intD.9 * *)this_25(D) + 184B];
  # DEBUG D#29ptD.0 => D#235ptD.0
  # VUSE <.MEM_229>
  # PT = nonlocal escaped 
  _106 = MEM[(intD.9 * *)this_25(D) + 200B];
  # DEBUG D#29ptD.0 => D#235ptD.0
  # DEBUG thisD.42026 => D#29ptD.0
  # DEBUG thisD.42027 => D#29ptD.0
  _107 = (long intD.12) _106;
  _108 = (long intD.12) __first_105;
  _109 = _107 - _108;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _110 = _109 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _111 = (size_typeD.33887) _110;
  if (__n_72 > _111)
    goto <bb 10>;
  else
    goto <bb 22>;
;;    succ:       10 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 66, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.42030 => D#235ptD.0
  # DEBUG __nD.42031 => __n_72
  # DEBUG __valD.42032 => &__valD.40891
  # DEBUG D#147ptD.0 => &D#235ptD.0->D.34311
  # DEBUG thisD.42110 => D#147ptD.0
  # DEBUG D#234ptD.0 => &MEM[(struct _Vector_baseD.33569 *)this_25(D) + 184B]._M_implD.33802
  # DEBUG thisD.42132 => &__tmpD.42083
  # DEBUG __nD.42133 => __n_72
  # DEBUG __valueD.42134 => &__valD.40891
  # DEBUG __aD.42135 => D#234ptD.0
  # DEBUG D#146ptD.0 => &__tmpD.42083.D.34311
  # DEBUG thisD.42138 => D#146ptD.0
  # DEBUG __nD.42137 => __n_72
  # DEBUG __aD.42136 => D#234ptD.0
  # DEBUG D#145ptD.0 => &D#146ptD.0->_M_implD.33802
  # DEBUG thisD.42140 => D#145ptD.0
  # DEBUG __aD.42139 => D#234ptD.0
  # DEBUG thisD.40612 => D#145ptD.0
  # DEBUG __aD.40613 => D#234ptD.0
  # DEBUG thisD.40609 => D#145ptD.0
  # DEBUG D.40610 => D#234ptD.0
  # DEBUG thisD.42142 => D#146ptD.0
  # DEBUG __nD.42141 => __n_72
  # DEBUG D#143ptD.0 => D#146ptD.0
  # DEBUG __nD.42167 => __n_72
  # DEBUG thisD.42168 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  if (__n_72 != 0)
    goto <bb 11>;
  else
    goto <bb 63>;
;;    succ:       11 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#141ptD.0 => &D#142ptD.0->_M_implD.33802
  # DEBUG D#140ptD.0 => D#141ptD.0
  # DEBUG __nD.42171 => __n_72
  # DEBUG __aD.42170 => D#140ptD.0
  # DEBUG D#139ptD.0 => D#140ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D#138ptD.0 => 0B
  # DEBUG __nD.42174 => __n_72
  # DEBUG thisD.42172 => D#137ptD.0
  # DEBUG D.42173 => D#138ptD.0
  # DEBUG D#136ptD.0 => D#137ptD.0
  # DEBUG D#130ptD.0 => D#136ptD.0
  # DEBUG thisD.40557 => D#130ptD.0
  if (__n_72 > 4611686018427387903)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_163 = VDEF <.MEM_229>
  # USE = nonlocal null { D.42178 } (escaped heap)
  # CLB = nonlocal null { D.42178 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2850 ();
;;    succ:      

;;   basic block 13, loop depth 0, count 0, freq 60, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 12, next block 16, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  _145 = __n_72 * 4;
  # .MEM_162 = VDEF <.MEM_229>
  # PT = { D.42178 } (escaped heap)
  # USE = nonlocal null { D.42178 } (escaped heap)
  # CLB = nonlocal null { D.42178 } (escaped heap)
  _146 = _ZnwmD.2764 (_145);
  # PT = { D.42178 } (escaped heap)
  _118 = _146 + _145;
  # DEBUG D#126ptD.0 => &__tmpD.42083
  # DEBUG D#126ptD.0 => &__tmpD.42083
  # DEBUG D#127ptD.0 => &__valD.40891
  # DEBUG __nD.42146 => __n_72
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG thisD.42143 => D#124ptD.0
  # DEBUG thisD.42144 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG __valueD.42145 => D#125ptD.0
  # DEBUG D#123ptD.0 => &D#124ptD.0->D.34311
  # DEBUG thisD.40376 => D#123ptD.0
  # DEBUG D#121ptD.0 => D#125ptD.0
  # DEBUG __firstD.42150 => NULL
  # DEBUG __nD.42149 => __n_72
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.42147 => D#120ptD.0
  # DEBUG D.42148 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.42153 => NULL
  # DEBUG __nD.42152 => __n_72
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.42151 => D#118ptD.0
  # DEBUG __assignableD.42155 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.42158 => NULL
  # DEBUG __nD.42157 => __n_72
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.42156 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.42161 => NULL
  # DEBUG __nD.42160 => __n_72
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.42159 => D#114ptD.0
  # DEBUG __itD.40218 => NULL
  # DEBUG __itD.40184 => NULL
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __firstD.42164 => NULL
  # DEBUG __nD.42163 => __n_72
  # DEBUG __valueD.42162 => D#111ptD.0
  # DEBUG __tmpD.42165 => -1
  # DEBUG __niterD.42166 => __n_72
  # DEBUG __niterD.42166 => __n_72
  # DEBUG __firstD.42164 => _146
  # DEBUG D#126ptD.0 => &__tmpD.42083
  # DEBUG D#127ptD.0 => &__valD.40891
  # DEBUG __nD.42146 => __n_72
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG thisD.42143 => D#124ptD.0
  # DEBUG thisD.42144 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG __valueD.42145 => D#125ptD.0
  # DEBUG D#123ptD.0 => &D#124ptD.0->D.34311
  # DEBUG thisD.40376 => D#123ptD.0
  # DEBUG D#121ptD.0 => D#125ptD.0
  # DEBUG __firstD.42150 => NULL
  # DEBUG __nD.42149 => __n_72
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.42147 => D#120ptD.0
  # DEBUG D.42148 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.42153 => NULL
  # DEBUG __nD.42152 => __n_72
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.42151 => D#118ptD.0
  # DEBUG __assignableD.42155 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.42158 => NULL
  # DEBUG __nD.42157 => __n_72
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.42156 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.42161 => NULL
  # DEBUG __nD.42160 => __n_72
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.42159 => D#114ptD.0
  # DEBUG __itD.40218 => NULL
  # DEBUG __itD.40184 => NULL
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __nD.42163 => __n_72
  # DEBUG __valueD.42162 => D#111ptD.0
  # DEBUG __tmpD.42165 => -1
  # DEBUG __niterD.42166 => __n_72
  # DEBUG __firstD.42164 => _146
  _196 = (sizetype) _216;
  _232 = _196 * 4;
  # .MEM_168 = VDEF <.MEM_162>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (_146, 255, _232);
;;    succ:       16 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 60, maybe hot
;;    prev block 13, next block 17, flags: (NEW)
;;    pred:       13 [9.0%]  (FALLTHRU,EXECUTABLE)
  _242 = (long unsigned intD.14) _216;
  _193 = _242 * 4;
  # PT = { D.42178 } (escaped heap)
  __first_153 = _146 + _193;
  # VUSE <.MEM_168>
  pretmp_104 = MEM[(intD.9 * &)this_25(D) + 184];
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 66, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.42178 } (escaped heap)
  # __first_215 = PHI <__first_153(16), 0B(63)>
  # .MEM_209 = PHI <.MEM_168(16), .MEM_229(63)>
  # PT = nonlocal escaped { D.42178 } (escaped heap)
  # _221 = PHI <_118(16), _190(63)>
  # PT = null { D.42178 } (escaped heap)
  # __first_3 = PHI <_146(16), 0B(63)>
  # PT = nonlocal escaped 
  # prephitmp_233 = PHI <pretmp_104(16), __first_105(63)>
  # DEBUG D#149ptD.0 => &D#235ptD.0->D.34311._M_implD.33802
  # DEBUG thisD.42085 => &__tmpD.42083.D.34311._M_implD.33802
  # DEBUG __xD.42084 => D#149ptD.0
  # DEBUG D#110ptD.0 => &D#149ptD.0->_M_startD.33804
  # DEBUG D#109ptD.0 => &MEM[(struct _Vector_implD.33779 *)&__tmpD.42083]._M_startD.33804
  # DEBUG __aD.42087 => D#109ptD.0
  # DEBUG __bD.42086 => D#110ptD.0
  # DEBUG __tmpD.42088 => __first_3
  # DEBUG D#238ptD.0 => MEM[(intD.9 * &)this_25(D) + 184]
  # .MEM_171 = VDEF <.MEM_209>
  MEM[(intD.9 * &)this_25(D) + 184] = __first_3;
  # DEBUG D#108ptD.0 => &D#149ptD.0->_M_finishD.33805
  # DEBUG D#107ptD.0 => &MEM[(struct _Vector_implD.33779 *)&__tmpD.42083]._M_finishD.33805
  # DEBUG __aD.42090 => D#107ptD.0
  # DEBUG __bD.42089 => D#108ptD.0
  # DEBUG __tmpD.42091 => __first_215
  # .MEM_173 = VDEF <.MEM_171>
  MEM[(intD.9 * &)this_25(D) + 192] = __first_215;
  # DEBUG D#106ptD.0 => &D#149ptD.0->_M_end_of_storageD.33806
  # DEBUG D#105ptD.0 => &MEM[(struct _Vector_implD.33779 *)&__tmpD.42083]._M_end_of_storageD.33806
  # DEBUG __aD.42093 => D#105ptD.0
  # DEBUG __bD.42092 => D#106ptD.0
  # DEBUG __tmpD.42094 => _221
  # .MEM_175 = VDEF <.MEM_173>
  MEM[(intD.9 * &)this_25(D) + 200] = _221;
  # DEBUG thisD.42095 => &__tmpD.42083
  # DEBUG D#79ptD.0 => &__tmpD.42083.D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => __tmpD.42083.D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => __tmpD.42083.D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &__tmpD.42083.D.34311
  # DEBUG thisD.42096 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # DEBUG D#76ptD.0 => (long intD.12) D#238ptD.0
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.42099 => D#80ptD.0
  # DEBUG __pD.42098 => D#238ptD.0
  # DEBUG __nD.42097 => D#73ptD.0
  if (prephitmp_233 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 51, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.42103 => D#238ptD.0
  # DEBUG __aD.42101 => D#69ptD.0
  # DEBUG __nD.42102 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.42106 => D#238ptD.0
  # DEBUG thisD.42104 => D#65ptD.0
  # DEBUG D.42105 => D#66ptD.0
  # .MEM_176 = VDEF <.MEM_175>
  # USE = nonlocal null { D.42178 } (escaped heap)
  # CLB = nonlocal null { D.42178 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_233);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 66, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_150 = PHI <.MEM_175(17), .MEM_176(18)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.42107 => D#72ptD.0
  # DEBUG thisD.42108 => D#72ptD.0
  # DEBUG thisD.42109 => D#72ptD.0
  # .MEM_182 = VDEF <.MEM_150>
  __tmpD.42083 ={v} {CLOBBER};
  # VUSE <.MEM_182>
  pretmp_247 = this_25(D)->D.36959.D.35235._inputsD.33566;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       66 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_103 = PHI <.MEM_158(66), .MEM_182(19), .MEM_156(32)>
  # prephitmp_249 = PHI <prephitmp_246(66), pretmp_247(19), pretmp_248(32)>
  # DEBUG iterD.37059 => 0
  # DEBUG slenD.37053 => slen_134
  if (prephitmp_249 <= 0)
    goto <bb 21>;
  else
    goto <bb 38>;
;;    succ:       21 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 20, next block 69, flags: (NEW)
;;    pred:       20 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_244 = PHI <.MEM_103(20), .MEM_85(53)>
;;    succ:       69 [100.0%]  (FALLTHRU)

;;   basic block 69, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 21, next block 22, flags: (NEW)
;;    pred:       21 [100.0%]  (FALLTHRU)
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 161, maybe hot
;;    prev block 69, next block 23, flags: (NEW, REACHABLE)
;;    pred:       9 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#5ptD.0 => D#235ptD.0
  # VUSE <.MEM_229>
  # PT = nonlocal escaped 
  __first_112 = MEM[(intD.9 * *)this_25(D) + 192B];
  # DEBUG D#5ptD.0 => D#235ptD.0
  # DEBUG thisD.42024 => D#5ptD.0
  # DEBUG thisD.42025 => D#5ptD.0
  _113 = (long intD.12) __first_112;
  _114 = _113 - _108;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _115 = _114 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _116 = (size_typeD.33887) _115;
  if (__n_72 > _116)
    goto <bb 24>;
  else
    goto <bb 23>;
;;    succ:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __niterD.41994 => __n_72
  # DEBUG __firstD.41992 => __first_105
  if (__n_72 == 0)
    goto <bb 37>;
  else
    goto <bb 33>;
;;    succ:       37 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __firstD.42002 => __first_105
  if (__first_105 == __first_112)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of outgoing probabilities 9.9%
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_243 = PHI <.MEM_229(24), .MEM_197(28)>
  # DEBUG D#148ptD.0 => &D#235ptD.0->D.34311
  # DEBUG thisD.40724 => D#148ptD.0
  # DEBUG D#5ptD.0 => D#235ptD.0
  # DEBUG D#5ptD.0 => D#235ptD.0
  # DEBUG thisD.40722 => D#5ptD.0
  # DEBUG thisD.40721 => D#5ptD.0
  # RANGE [1, 18446744073709551615]
  __n_120 = __n_72 - _116;
  # DEBUG D#121ptD.0 => &__valD.40891
  # DEBUG __firstD.42007 => __first_112
  # DEBUG __nD.42006 => __n_120
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.42004 => D#120ptD.0
  # DEBUG D.42005 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.42010 => __first_112
  # DEBUG __nD.42009 => __n_120
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.42008 => D#118ptD.0
  # DEBUG __assignableD.42012 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.42015 => __first_112
  # DEBUG __nD.42014 => __n_120
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.42013 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.42018 => __first_112
  # DEBUG __nD.42017 => __n_120
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.42016 => D#114ptD.0
  # DEBUG __itD.40218 => __first_112
  # DEBUG __itD.40184 => __first_112
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __firstD.42021 => __first_112
  # DEBUG __nD.42020 => __n_120
  # DEBUG __valueD.42019 => D#111ptD.0
  # DEBUG __tmpD.42022 => -1
  # DEBUG __niterD.42023 => __n_120
  # DEBUG __niterD.42023 => __n_120
  # DEBUG __firstD.42021 => __first_112
  _210 = __n_120 * 4;
  # .MEM_213 = VDEF <.MEM_243>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_112, 255, _210);
  goto <bb 32>;
;;    succ:       32 [9.9%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 74, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 25, next block 28, flags: (NEW, REACHABLE)
;;    pred:       24 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  _199 = (unsigned long) __first_112;
  _204 = __first_105 + 4;
  _198 = (unsigned long) _204;
  _155 = _199 - _198;
  _124 = _155 /[ex] 4;
  _125 = _124 & 4611686018427387903;
  _241 = _125 + 1;
  _240 = _241 * 4;
  # .MEM_214 = VDEF <.MEM_229>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_105, 255, _240);
;;    succ:       28 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 73, maybe hot
;;    prev block 26, next block 32, flags: (NEW)
;;    pred:       26 [9.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_197 = PHI <.MEM_214(26)>
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 80, maybe hot
;;    prev block 28, next block 33, flags: (NEW, REACHABLE)
;;    pred:       25 [9.9%]  (FALLTHRU,EXECUTABLE)
  _234 = __n_120 * 4;
  # PT = nonlocal escaped 
  __first_164 = __first_112 + _234;
  # .MEM_156 = VDEF <.MEM_213>
  MEM[(struct vectorD.33506 *)this_25(D) + 184B].D.34311._M_implD.33802._M_finishD.33805 = __first_164;
  # VUSE <.MEM_156>
  pretmp_248 = this_25(D)->D.36959.D.35235._inputsD.33566;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 74, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 32, next block 36, flags: (NEW, REACHABLE)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  _208 = (sizetype) _216;
  _230 = _208 * 4;
  # .MEM_218 = VDEF <.MEM_229>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_105, 255, _230);
;;    succ:       36 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 73, maybe hot
;;    prev block 33, next block 37, flags: (NEW)
;;    pred:       33 [9.0%]  (FALLTHRU,EXECUTABLE)
  _195 = (long unsigned intD.14) _216;
  _238 = _195 * 4;
  # PT = nonlocal escaped 
  __first_160 = __first_105 + _238;
  # VUSE <.MEM_218>
  pretmp_245 = this_25(D)->D.36959.D.35235._inputsD.33566;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 80, maybe hot
;;    prev block 36, next block 66, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_231 = PHI <__first_160(36), __first_105(23)>
  # .MEM_202 = PHI <.MEM_218(36), .MEM_229(23)>
  # prephitmp_246 = PHI <pretmp_245(36), prephitmp_11(23)>
;;    succ:       66 [100.0%]  (FALLTHRU)

;;   basic block 66, loop depth 0, count 0, freq 80, maybe hot
;;    prev block 37, next block 38, flags: (NEW)
;;    pred:       37 [100.0%]  (FALLTHRU)
  # DEBUG D#27ptD.0 => D#235ptD.0
  # DEBUG __posD.41996 => __first_231
  # DEBUG D#26ptD.0 => D#27ptD.0
  # DEBUG thisD.41995 => D#26ptD.0
  # DEBUG D#24ptD.0 => &D#26ptD.0->D.34311
  # DEBUG thisD.39741 => D#24ptD.0
  # DEBUG D#25ptD.0 => D#26ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG __firstD.39731 => __first_231
  # DEBUG __lastD.39732 => D#25ptD.0
  # DEBUG D.39733 => NULL
  # DEBUG D#22ptD.0 => __first_231
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # .MEM_158 = VDEF <.MEM_202>
  MEM[(intD.9 * *)this_25(D) + 192B] = __first_231;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 216, maybe hot
;;    prev block 66, next block 39, flags: (NEW)
;;    pred:       20 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_103>
  pretmp_186 = this_25(D)->_sD.36922;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 246, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_220 = PHI <.MEM_103(38), .MEM_85(54)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_172 = PHI <slen_134(38), slen_174(54)>
  # iter_201 = PHI <0(38), iter_86(54)>
  # PT = nonlocal escaped 
  # prephitmp_185 = PHI <pretmp_186(38), _83(54)>
  # prephitmp_194 = PHI <prephitmp_249(38), prephitmp_251(54)>
  # DEBUG iterD.37059 => iter_201
  # DEBUG slenD.37053 => slen_172
  # DEBUG eD.37060 => 0
  # DEBUG nslenD.37054 => 0
  if (slen_172 <= 0)
    goto <bb 53>;
  else
    goto <bb 40>;
;;    succ:       53 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 235, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_220>
  pretmp_252 = this_25(D)->D.36959.D.35235._outputsD.33567;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 2, count 0, freq 670, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_136 = PHI <0(40), slen_203(51)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # e_200 = PHI <0(40), e_81(51)>
  # .MEM_228 = PHI <.MEM_220(40), .MEM_222(51)>
  # prephitmp_253 = PHI <pretmp_252(40), prephitmp_9(51)>
  # DEBUG eD.37060 => e_200
  # DEBUG nslenD.37054 => slen_136
  # RANGE [0, 2147483646] NONZERO 2147483647
  _43 = (long unsigned intD.14) e_200;
  # RANGE [0, 8589934584] NONZERO 8589934588
  _44 = _43 * 4;
  # PT = nonlocal escaped 
  _45 = prephitmp_185 + _44;
  # VUSE <.MEM_228>
  i_46 = *_45;
  # DEBUG iD.37050 => i_46
  # DEBUG jD.37051 => 0
  # DEBUG nslenD.37054 => slen_136
  # DEBUG jD.37051 => 0
  if (prephitmp_253 <= 0)
    goto <bb 50>;
  else
    goto <bb 42>;
;;    succ:       50 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 2, count 0, freq 640, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_149 = (long unsigned intD.14) i_46;
  pretmp_141 = pretmp_149 * 24;
  # VUSE <.MEM_228>
  # PT = nonlocal escaped 
  pretmp_126 = MEM[(struct vectorD.34419 * *)this_25(D) + 160B];
  # PT = nonlocal escaped 
  pretmp_29 = pretmp_126 + pretmp_141;
  # VUSE <.MEM_228>
  # PT = nonlocal escaped 
  pretmp_15 = MEM[(struct sRequestD.34315 * *)pretmp_29];
  _56 = pretmp_149 * 4;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 3, count 0, freq 9550, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # j_166 = PHI <0(42), j_80(49)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_13 = PHI <slen_136(42), slen_10(49)>
  # .MEM_226 = PHI <.MEM_228(42), .MEM_21(49)>
  # prephitmp_159 = PHI <prephitmp_253(42), prephitmp_255(49)>
  # DEBUG nslenD.37054 => slen_13
  # DEBUG jD.37051 => j_166
  # RANGE [0, 18446744073709551615]
  _48 = (long unsigned intD.14) j_166;
  # DEBUG D#237ptD.0 => (long unsigned intD.14) i_46
  # DEBUG D#152ptD.0 => &this_25(D)->D.36959._requestD.35166
  # DEBUG D#3ptD.0 => D#152ptD.0
  # DEBUG __nD.40899 => D#237ptD.0
  # DEBUG thisD.40900 => D#3ptD.0
  # DEBUG __nD.40895 => _48
  # DEBUG thisD.40896 => D#4ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551600
  _71 = _48 * 16;
  # PT = nonlocal escaped 
  _69 = pretmp_15 + _71;
  # VUSE <.MEM_226>
  _52 = _69->labelD.34318;
  if (_52 != -1)
    goto <bb 44>;
  else
    goto <bb 47>;
;;    succ:       44 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 3, count 0, freq 6876, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#153ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # VUSE <.MEM_226>
  # PT = nonlocal escaped 
  _88 = MEM[(intD.9 * *)this_25(D) + 112B];
  # DEBUG D#2ptD.0 => D#153ptD.0
  # DEBUG __nD.40903 => D#237ptD.0
  # DEBUG thisD.40904 => D#2ptD.0
  # PT = nonlocal escaped 
  _54 = _88 + _56;
  # VUSE <.MEM_226>
  _53 = *_54;
  if (_53 != j_166)
    goto <bb 45>;
  else
    goto <bb 47>;
;;    succ:       45 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 3, count 0, freq 4951, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#154ptD.0 => &this_25(D)->_fromD.36921
  # VUSE <.MEM_226>
  # PT = nonlocal escaped 
  _89 = MEM[(intD.9 * *)this_25(D) + 184B];
  # DEBUG D#2ptD.0 => D#154ptD.0
  # DEBUG __nD.40907 => _48
  # DEBUG thisD.40908 => D#2ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _51 = _48 * 4;
  # PT = nonlocal escaped 
  _50 = _89 + _51;
  # VUSE <.MEM_226>
  _55 = *_50;
  if (_55 == -1)
    goto <bb 62>;
  else
    goto <bb 47>;
;;    succ:       62 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 3, count 0, freq 4560, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       62 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _59 = this_25(D)->_nsD.36923;
  # RANGE [0, 2147483647] NONZERO 2147483647
  _60 = (long unsigned intD.14) slen_13;
  # RANGE [0, 8589934588] NONZERO 8589934588
  _61 = _60 * 4;
  # PT = nonlocal escaped 
  _62 = _59 + _61;
  # DEBUG D#157ptD.0 => &this_25(D)->D.36959.D.35235._outmatchD.34314
  # DEBUG D#2ptD.0 => D#157ptD.0
  # DEBUG __nD.40919 => _48
  # DEBUG thisD.40920 => D#2ptD.0
  # .MEM_64 = VDEF <.MEM_57>
  *_62 = _58;
  # RANGE [1, 2147483647] NONZERO 2147483647
  slen_65 = slen_13 + 1;
  # DEBUG nslenD.37054 => slen_65
  # VUSE <.MEM_64>
  pretmp_254 = this_25(D)->D.36959.D.35235._outputsD.33567;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 3, count 0, freq 9340, maybe hot
;;   Invalid sum of incoming frequencies 12724, should be 9340
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       43 [28.0%]  (FALSE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 [72.0%]  (FALSE_VALUE,EXECUTABLE)
;;                44 [28.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_10 = PHI <slen_13(43), slen_65(46), slen_13(45), slen_13(44)>
  # .MEM_21 = PHI <.MEM_226(43), .MEM_64(46), .MEM_226(45), .MEM_226(44)>
  # prephitmp_255 = PHI <prephitmp_159(43), pretmp_254(46), prephitmp_159(45), prephitmp_159(44)>
  # DEBUG nslenD.37054 => slen_10
  j_80 = j_166 + 1;
  # DEBUG jD.37051 => j_80
  # DEBUG nslenD.37054 => slen_10
  # DEBUG jD.37051 => j_80
  if (j_80 >= prephitmp_255)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 2, count 0, freq 420, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       47 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_187 = PHI <slen_10(47)>
  # prephitmp_139 = PHI <prephitmp_255(47)>
  goto <bb 50>;
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 3, count 0, freq 8920, maybe hot
;;    prev block 48, next block 50, flags: (NEW)
;;    pred:       47 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 43>;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 2, count 0, freq 450, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_203 = PHI <slen_187(48), slen_136(41)>
  # .MEM_222 = PHI <.MEM_21(48), .MEM_228(41)>
  # prephitmp_9 = PHI <prephitmp_139(48), prephitmp_253(41)>
  # RANGE [1, 2147483647] NONZERO 2147483647
  e_81 = e_200 + 1;
  # DEBUG eD.37060 => e_81
  # DEBUG eD.37060 => e_81
  # DEBUG nslenD.37054 => slen_203
  if (e_81 >= slen_172)
    goto <bb 52>;
  else
    goto <bb 51>;
;;    succ:       52 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 2, count 0, freq 430, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       50 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 20, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       50 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_148 = PHI <slen_203(50)>
  # VUSE <.MEM_222>
  pretmp_250 = this_25(D)->D.36959.D.35235._inputsD.33566;
;;    succ:       53 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 1, count 0, freq 32, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # slen_174 = PHI <slen_148(52), 0(39)>
  # .MEM_227 = PHI <.MEM_222(52), .MEM_220(39)>
  # prephitmp_251 = PHI <pretmp_250(52), prephitmp_194(39)>
  # DEBUG D#236ptD.0 => this_25(D)->_sD.36922
  # DEBUG tD.37806 => D#236ptD.0
  # VUSE <.MEM_227>
  # PT = nonlocal escaped 
  _83 = this_25(D)->_nsD.36923;
  # .MEM_84 = VDEF <.MEM_227>
  this_25(D)->_sD.36922 = _83;
  # .MEM_85 = VDEF <.MEM_84>
  this_25(D)->_nsD.36923 = prephitmp_185;
  # DEBUG slenD.37053 => slen_174
  iter_86 = iter_201 + 1;
  # DEBUG iterD.37059 => iter_86
  # DEBUG iterD.37059 => iter_86
  # DEBUG slenD.37053 => slen_174
  if (iter_86 >= prephitmp_251)
    goto <bb 21>;
  else
    goto <bb 54>;
;;    succ:       21 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 31, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 215, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       62 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # i_184 = PHI <i_46(62)>
  # PT = nonlocal escaped 
  # _183 = PHI <_54(62)>
  # PT = nonlocal escaped 
  # _181 = PHI <_88(62)>
  # PT = nonlocal escaped 
  # _180 = PHI <_89(62)>
  # PT = nonlocal escaped 
  # _179 = PHI <_91(62)>
  # PT = nonlocal escaped 
  # _178 = PHI <_95(62)>
  # j_152 = PHI <j_166(62)>
found_augmentingL.24:
  # DEBUG D#158ptD.0 => &this_25(D)->_fromD.36921
  # DEBUG D#2ptD.0 => D#158ptD.0
  # DEBUG __nD.40927 => _48
  # DEBUG thisD.40928 => D#2ptD.0
  # DEBUG iD.37050 => i_184
  # DEBUG D#159ptD.0 => &this_25(D)->D.36959.D.35235._outmatchD.34314
  # DEBUG D#2ptD.0 => D#159ptD.0
  # DEBUG __nD.40923 => _48
  # DEBUG thisD.40924 => D#2ptD.0
  # .MEM_67 = VDEF <.MEM_57>
  *_178 = i_184;
  # DEBUG jD.37051 => j_152
  # DEBUG iD.37050 => i_184
  # DEBUG D#164ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#164ptD.0
  # DEBUG __nD.40931 => D#237ptD.0
  # DEBUG thisD.40932 => D#2ptD.0
  # VUSE <.MEM_67>
  j_188 = *_183;
  if (j_188 != -1)
    goto <bb 56>;
  else
    goto <bb 60>;
;;    succ:       56 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 196, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       55 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 1, count 0, freq 2173, maybe hot
;;    prev block 56, next block 58, flags: (NEW)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
  # j_167 = PHI <j_152(56), j_217(59)>
  # .MEM_224 = PHI <.MEM_67(56), .MEM_78(59)>
  # j_217 = PHI <j_188(56), j_70(59)>
  # PT = nonlocal escaped 
  # _206 = PHI <_183(56), _99(59)>
  # DEBUG jD.37051 => j_167
  # DEBUG iD.37050 => i_184
  # DEBUG D#164ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG __nD.40931 => D#237ptD.0
  # DEBUG thisD.40932 => D#2ptD.0
  # DEBUG D#160ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#160ptD.0
  # DEBUG __nD.40947 => D#237ptD.0
  # DEBUG thisD.40948 => D#2ptD.0
  # DEBUG jnD.37052 => j_217
  # DEBUG D#161ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#161ptD.0
  # DEBUG __nD.40943 => D#237ptD.0
  # DEBUG thisD.40944 => D#2ptD.0
  # .MEM_73 = VDEF <.MEM_224>
  *_206 = j_167;
  # DEBUG jD.37051 => j_217
  # RANGE [0, 18446744073709551614]
  _74 = (long unsigned intD.14) j_217;
  # DEBUG D#162ptD.0 => &this_25(D)->_fromD.36921
  # DEBUG D#2ptD.0 => D#162ptD.0
  # DEBUG __nD.40939 => _74
  # DEBUG thisD.40940 => D#2ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _101 = _74 * 4;
  # PT = nonlocal escaped 
  _102 = _180 + _101;
  # VUSE <.MEM_73>
  i_76 = *_102;
  # DEBUG iD.37050 => i_76
  # DEBUG D#163ptD.0 => &this_25(D)->D.36959.D.35235._outmatchD.34314
  # DEBUG D#2ptD.0 => D#163ptD.0
  # DEBUG __nD.40935 => _74
  # DEBUG thisD.40936 => D#2ptD.0
  # PT = nonlocal escaped 
  _100 = _179 + _101;
  # .MEM_78 = VDEF <.MEM_73>
  *_100 = i_76;
  # DEBUG jD.37051 => j_217
  # DEBUG iD.37050 => i_76
  # RANGE ~[2147483648, 18446744071562067967]
  _68 = (long unsigned intD.14) i_76;
  # DEBUG D#164ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#164ptD.0
  # DEBUG __nD.40931 => _68
  # DEBUG thisD.40932 => D#2ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _98 = _68 * 4;
  # PT = nonlocal escaped 
  _99 = _181 + _98;
  # VUSE <.MEM_78>
  j_70 = *_99;
  if (j_70 != -1)
    goto <bb 59>;
  else
    goto <bb 58>;
;;    succ:       59 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 196, maybe hot
;;    prev block 57, next block 64, flags: (NEW)
;;    pred:       57 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # _177 = PHI <_99(57)>
  # j_147 = PHI <j_217(57)>
;;    succ:       64 [100.0%]  (FALLTHRU)

;;   basic block 64, loop depth 0, count 0, freq 196, maybe hot
;;    prev block 58, next block 59, flags: (NEW)
;;    pred:       58 [100.0%]  (FALLTHRU)
  goto <bb 60>;
;;    succ:       60 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 1, count 0, freq 1977, maybe hot
;;    prev block 64, next block 60, flags: (NEW)
;;    pred:       57 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 57>;
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 215, maybe hot
;;    prev block 59, next block 67, flags: (NEW, REACHABLE)
;;    pred:       64 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                55 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # j_169 = PHI <j_147(64), j_152(55)>
  # .MEM_225 = PHI <.MEM_78(64), .MEM_67(55)>
  # PT = nonlocal escaped 
  # _219 = PHI <_177(64), _183(55)>
;;    succ:       67 [100.0%]  (FALLTHRU)

;;   basic block 67, loop depth 0, count 0, freq 215, maybe hot
;;    prev block 60, next block 61, flags: (NEW)
;;    pred:       60 [100.0%]  (FALLTHRU)
  # DEBUG D#165ptD.0 => &this_25(D)->D.36959.D.35235._inmatchD.34313
  # DEBUG D#2ptD.0 => D#165ptD.0
  # DEBUG __nD.40951 => D#237ptD.0
  # DEBUG thisD.40952 => D#2ptD.0
  # .MEM_79 = VDEF <.MEM_225>
  *_219 = j_169;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 67, next block 68, flags: (NEW, REACHABLE)
;;    pred:       69 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                67 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 1]
  # _14 = PHI <0(69), 1(67)>
  # .MEM_23 = PHI <.MEM_244(69), .MEM_79(67)>
;;    succ:       68 [100.0%]  (FALLTHRU)

;;   basic block 68, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 61, next block 62, flags: (NEW)
;;    pred:       61 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_23>
  return _14;
;;    succ:       EXIT [100.0%] 

;;   basic block 62, loop depth 3, count 0, freq 4775, maybe hot
;;   Invalid sum of incoming frequencies 1386, should be 4775
;;    prev block 68, next block 63, flags: (NEW, REACHABLE)
;;    pred:       45 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#155ptD.0 => &this_25(D)->_fromD.36921
  # DEBUG D#2ptD.0 => D#155ptD.0
  # DEBUG __nD.40915 => _48
  # DEBUG thisD.40916 => D#2ptD.0
  # .MEM_57 = VDEF <.MEM_226>
  *_50 = i_46;
  # DEBUG D#156ptD.0 => &this_25(D)->D.36959.D.35235._outmatchD.34314
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _91 = MEM[(intD.9 * *)this_25(D) + 136B];
  # DEBUG D#2ptD.0 => D#156ptD.0
  # DEBUG __nD.40911 => _48
  # DEBUG thisD.40912 => D#2ptD.0
  # PT = nonlocal escaped 
  _95 = _91 + _51;
  # VUSE <.MEM_57>
  _58 = *_95;
  if (_58 == -1)
    goto <bb 55> (found_augmenting);
  else
    goto <bb 46>;
;;    succ:       55 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 62, next block 1, flags: (NEW, REACHABLE)
;;    pred:       10 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _191 = __n_72 * 4;
  # PT = nonlocal escaped 
  # ALIGN = 4, MISALIGN = 0
  _190 = (intD.9 *) _191;
  # DEBUG D#126ptD.0 => &__tmpD.42083
  # DEBUG D#126ptD.0 => &__tmpD.42083
  # DEBUG D#127ptD.0 => &__valD.40891
  # DEBUG __nD.42146 => __n_72
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG thisD.42143 => D#124ptD.0
  # DEBUG thisD.42144 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG __valueD.42145 => D#125ptD.0
  # DEBUG D#123ptD.0 => &D#124ptD.0->D.34311
  # DEBUG thisD.40376 => D#123ptD.0
  # DEBUG D#121ptD.0 => D#125ptD.0
  # DEBUG __firstD.42150 => NULL
  # DEBUG __nD.42149 => __n_72
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.42147 => D#120ptD.0
  # DEBUG D.42148 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.42153 => NULL
  # DEBUG __nD.42152 => __n_72
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.42151 => D#118ptD.0
  # DEBUG __assignableD.42155 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.42158 => NULL
  # DEBUG __nD.42157 => __n_72
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.42156 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.42161 => NULL
  # DEBUG __nD.42160 => __n_72
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.42159 => D#114ptD.0
  # DEBUG __itD.40218 => NULL
  # DEBUG __itD.40184 => NULL
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __firstD.42164 => NULL
  # DEBUG __nD.42163 => __n_72
  # DEBUG __valueD.42162 => D#111ptD.0
  # DEBUG __tmpD.42165 => -1
  # DEBUG __niterD.42166 => __n_72
  # DEBUG __niterD.42166 => __n_72
  # DEBUG __firstD.42164 => 0B
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

}



;; Function virtual void MaxSizeMatch::Allocate() (_ZN12MaxSizeMatch8AllocateEv, funcdef_no=1721, decl_uid=36936, cgraph_uid=424, symbol_order=425)


Pass statistics:
----------------

virtual void MaxSizeMatch::Allocate() (struct MaxSizeMatchD.36919 * const thisD.37043)
{
  boolD.2757 _5;
  intD.9 _6;
  intD.9 _7;
  intD.9 _8;
  intD.9 _9;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 3, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_2(D)(2), .MEM_4(4)>
  # .MEM_4 = VDEF <.MEM_1>
  # USE = nonlocal 
  # CLB = nonlocal 
  _5 = _ZN12MaxSizeMatch19_ShortestAugmentingEvD.36925 (this_3(D));
  if (_5 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 4, next block 1, flags: (NEW, REACHABLE)
;;    pred:       3 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_4>
  _6 = this_3(D)->_prioD.36924;
  _7 = _6 + 1;
  # VUSE <.MEM_4>
  _8 = this_3(D)->D.36959.D.35235._inputsD.33566;
  _9 = _7 % _8;
  # .MEM_10 = VDEF <.MEM_4>
  this_3(D)->_prioD.36924 = _9;
  # VUSE <.MEM_10>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_3(D)->_prio
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 1792
Creating dr for this_3(D)->D.36959.D.35235._inputs
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_3(D)->_prio
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 1792

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:7, LOOPS:1, CONDITIONS:1, STMTS:8)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 })
  {
    <bb 2>:

  }
  bb_5 (preds = {bb_3 }, succs = {bb_6 })
  {
    <bb 5>:

  }
  bb_6 (preds = {bb_5 }, succs = {bb_1 })
  {
    <bb 6>:
    # VUSE <.MEM_4>
    _6 = this_3(D)->_prio;
    _7 = _6 + 1;
    # VUSE <.MEM_4>
    _8 = this_3(D)->D.36959.D.35235._inputs;
    _9 = _7 % _8;
    # .MEM_10 = VDEF <.MEM_4>
    this_3(D)->_prio = _9;
    # VUSE <.MEM_10>
    return;

  }
  loop_1 (header = 3, latch = 4, niter = )
  {
    bb_3 (preds = {bb_2 bb_4 }, succs = {bb_4 bb_5 })
    {
      <bb 3>:
      # .MEM_1 = PHI <.MEM_2(D)(2), .MEM_4(4)>
      # .MEM_4 = VDEF <.MEM_1>
      _5 = MaxSizeMatch::_ShortestAugmenting (this_3(D));
      if (_5 != 0)
        goto <bb 4>;
      else
        goto <bb 5>;

    }
    bb_4 (preds = {bb_3 }, succs = {bb_3 })
    {
      <bb 4>:
      goto <bb 3>;

    }
  }
}

Pass statistics:
----------------

virtual void MaxSizeMatch::Allocate() (struct MaxSizeMatchD.36919 * const thisD.37043)
{
  boolD.2757 _5;
  intD.9 _6;
  intD.9 _7;
  intD.9 _8;
  intD.9 _9;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 3, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_2(D)(2), .MEM_4(4)>
  # .MEM_4 = VDEF <.MEM_1>
  # USE = nonlocal 
  # CLB = nonlocal 
  _5 = _ZN12MaxSizeMatch19_ShortestAugmentingEvD.36925 (this_3(D));
  if (_5 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 1, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_4>
  _6 = this_3(D)->_prioD.36924;
  _7 = _6 + 1;
  # VUSE <.MEM_4>
  _8 = this_3(D)->D.36959.D.35235._inputsD.33566;
  _9 = _7 % _8;
  # .MEM_10 = VDEF <.MEM_4>
  this_3(D)->_prioD.36924 = _9;
  # VUSE <.MEM_10>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=1812, decl_uid=34234, cgraph_uid=515, symbol_order=516)


Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.33506 * const thisD.34235, struct iteratorD.33879 __positionD.34236, size_typeD.33887 __nD.34237, const value_typeD.33874 & __xD.34238)
{
  const long unsigned intD.14 D.42256;
  const size_typeD.33887 __lenD.42250;
  size_typeD.33887 D.42255;
  size_typeD.33887 __nD.42248;
  intD.9 * D.42246;
  const ptrdiff_tD.2819 _NumD.42236;
  intD.9 * D.42237;
  intD.9 * const __positionD.41789;
  intD.9 * __firstD.41757;
  const ptrdiff_tD.2819 _NumD.41751;
  const ptrdiff_tD.2819 _NumD.41712;
  intD.9 * __firstD.41640;
  long unsigned intD.14 __nD.41641;
  intD.9 * __firstD.41591;
  const ptrdiff_tD.2819 _NumD.41587;
  intD.9 * __firstD.41540;
  intD.9 * __new_finishD.38371;
  const size_typeD.33887 __elems_afterD.38335;
  value_typeD.33874 __x_copyD.38334;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.37996 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.9_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.14_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#250ptD.0 => MEM[(struct __normal_iteratorD.33880 *)&__positionD.34236]
  # DEBUG __positionD.41789 => D#250ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(13), .MEM_54(23), .MEM_154(26)>
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.33880 *)&__positionD.34236];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.38334 => __x_copy_35
  # DEBUG thisD.41535 => this_4(D)
  # DEBUG D#6ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41537 => NULL
  # DEBUG __iD.41536 => D#6ptD.0
  # DEBUG __lhsD.41532 => &D.38336
  # DEBUG __rhsD.41533 => &__positionD.34236
  # DEBUG thisD.39755 => &D.38336
  # DEBUG thisD.39753 => &__positionD.34236
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.33887) _22;
  # DEBUG __elems_afterD.38335 => __elems_after_37
  # DEBUG __old_finishD.38343 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#213ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41589 => D#213ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.41554 => _41
  # DEBUG __lastD.41555 => __first_7
  # DEBUG __resultD.41556 => __first_7
  # DEBUG __allocD.41557 => D#205ptD.0
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG D#203ptD.0 => D#204ptD.0
  # DEBUG __firstD.41561 => _41
  # DEBUG __lastD.41560 => __first_7
  # DEBUG __resultD.41559 => __first_7
  # DEBUG D.41558 => D#203ptD.0
  # DEBUG __firstD.41564 => _41
  # DEBUG __lastD.41563 => __first_7
  # DEBUG __resultD.41562 => __first_7
  # DEBUG __assignableD.41567 => 1
  # DEBUG __firstD.41570 => _41
  # DEBUG __lastD.41569 => __first_7
  # DEBUG __resultD.41568 => __first_7
  # DEBUG __firstD.41573 => _41
  # DEBUG __lastD.41572 => __first_7
  # DEBUG __resultD.41571 => __first_7
  # DEBUG __itD.41283 => __first_7
  # DEBUG __itD.40181 => __first_7
  # DEBUG __itD.41281 => _41
  # DEBUG __itD.40181 => _41
  # DEBUG __firstD.41576 => _41
  # DEBUG __lastD.41575 => __first_7
  # DEBUG __resultD.41574 => __first_7
  # DEBUG __itD.41263 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG __itD.41261 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG __itD.41259 => _41
  # DEBUG __itD.40184 => _41
  # DEBUG __firstD.41579 => _41
  # DEBUG __lastD.41578 => __first_7
  # DEBUG __resultD.41577 => __first_7
  # DEBUG __simpleD.41583 => 1
  # DEBUG __firstD.41586 => _41
  # DEBUG __lastD.41585 => __first_7
  # DEBUG __resultD.41584 => __first_7
  __first.9_49 = (long intD.12) _41;
  _47 = _8 - __first.9_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.41587 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _43;
  # DEBUG thisD.41552 => &__positionD.34236
  # DEBUG __firstD.42220 => D#250ptD.0
  # DEBUG __lastD.42221 => _41
  # DEBUG __resultD.42222 => __first_7
  # DEBUG __itD.40496 => _41
  # DEBUG __itD.40181 => _41
  # DEBUG __itD.40494 => D#250ptD.0
  # DEBUG __itD.40181 => D#250ptD.0
  # DEBUG __firstD.42225 => D#250ptD.0
  # DEBUG __lastD.42224 => _41
  # DEBUG __resultD.42223 => __first_7
  # DEBUG __itD.40476 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG __itD.40474 => _41
  # DEBUG __itD.40184 => _41
  # DEBUG __itD.40472 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG __firstD.42228 => D#250ptD.0
  # DEBUG __lastD.42227 => _41
  # DEBUG __resultD.42226 => __first_7
  # DEBUG __simpleD.42232 => 1
  # DEBUG __firstD.42235 => D#250ptD.0
  # DEBUG __lastD.42234 => _41
  # DEBUG __resultD.42233 => __first_7
  _104 = __first.9_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.42236 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.41550 => &__positionD.34236
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.41548 => &__positionD.34236
  # DEBUG D#113ptD.0 => &__x_copyD.38334
  # DEBUG __firstD.41540 => D#250ptD.0
  # DEBUG __lastD.41541 => _48
  # DEBUG D#112ptD.0 => D#113ptD.0
  # DEBUG __valueD.41543 => D#112ptD.0
  # DEBUG __itD.40194 => _48
  # DEBUG __itD.40184 => _48
  # DEBUG __itD.40192 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG D#104ptD.0 => D#112ptD.0
  # DEBUG __firstD.41546 => D#250ptD.0
  # DEBUG __lastD.41545 => _48
  # DEBUG __valueD.41544 => D#104ptD.0
  # DEBUG __tmpD.41547 => __x_copy_35
  # DEBUG __firstD.41546 => D#250ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.41546 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.41546 => __position_55
  # DEBUG __firstD.41546 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#214ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41662 => D#214ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#121ptD.0 => &__x_copyD.38334
  # DEBUG __firstD.41640 => __first_7
  # DEBUG __nD.41641 => __n_50
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.41644 => D#120ptD.0
  # DEBUG D.41643 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.41647 => __first_7
  # DEBUG __nD.41646 => __n_50
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.41645 => D#118ptD.0
  # DEBUG __assignableD.41649 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.41652 => __first_7
  # DEBUG __nD.41651 => __n_50
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.41650 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.41655 => __first_7
  # DEBUG __nD.41654 => __n_50
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.41653 => D#114ptD.0
  # DEBUG __itD.40218 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __firstD.41658 => __first_7
  # DEBUG __nD.41657 => __n_50
  # DEBUG __valueD.41656 => D#111ptD.0
  # DEBUG __tmpD.41659 => __x_copy_35
  # DEBUG __niterD.41660 => __n_50
  # DEBUG __niterD.41660 => __n_50
  # DEBUG __firstD.41658 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.41660 => __n_111
  # DEBUG __firstD.41658 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.41660 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.41658 => __first_64
  # DEBUG __niterD.41660 => __n_63
  # DEBUG __firstD.41658 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(18), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(18), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = __first_125;
  # DEBUG D#215ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41638 => D#215ptD.0
  # DEBUG thisD.41636 => &__positionD.34236
  # DEBUG __firstD.41601 => D#250ptD.0
  # DEBUG __lastD.41602 => __first_7
  # DEBUG __resultD.41603 => __first_125
  # DEBUG __allocD.41604 => D#205ptD.0
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG D#203ptD.0 => D#204ptD.0
  # DEBUG __firstD.41608 => D#250ptD.0
  # DEBUG __lastD.41607 => __first_7
  # DEBUG __resultD.41606 => __first_125
  # DEBUG D.41605 => D#203ptD.0
  # DEBUG __firstD.41611 => D#250ptD.0
  # DEBUG __lastD.41610 => __first_7
  # DEBUG __resultD.41609 => __first_125
  # DEBUG __assignableD.41614 => 1
  # DEBUG __firstD.41617 => D#250ptD.0
  # DEBUG __lastD.41616 => __first_7
  # DEBUG __resultD.41615 => __first_125
  # DEBUG __firstD.41620 => D#250ptD.0
  # DEBUG __lastD.41619 => __first_7
  # DEBUG __resultD.41618 => __first_125
  # DEBUG __itD.41283 => __first_7
  # DEBUG __itD.40181 => __first_7
  # DEBUG __itD.41281 => D#250ptD.0
  # DEBUG __itD.40181 => D#250ptD.0
  # DEBUG __firstD.41623 => D#250ptD.0
  # DEBUG __lastD.41622 => __first_7
  # DEBUG __resultD.41621 => __first_125
  # DEBUG __itD.41263 => __first_125
  # DEBUG __itD.40184 => __first_125
  # DEBUG __itD.41261 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG __itD.41259 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG __firstD.41626 => D#250ptD.0
  # DEBUG __lastD.41625 => __first_7
  # DEBUG __resultD.41624 => __first_125
  # DEBUG __simpleD.41630 => 1
  # DEBUG __firstD.41633 => D#250ptD.0
  # DEBUG __lastD.41632 => __first_7
  # DEBUG __resultD.41631 => __first_125
  # DEBUG _NumD.41634 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _53;
  # DEBUG thisD.41599 => &__positionD.34236
  # DEBUG D#113ptD.0 => &__x_copyD.38334
  # DEBUG __firstD.41591 => D#250ptD.0
  # DEBUG __lastD.41592 => __first_7
  # DEBUG D#112ptD.0 => D#113ptD.0
  # DEBUG __valueD.41594 => D#112ptD.0
  # DEBUG __itD.40194 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG __itD.40192 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG D#104ptD.0 => D#112ptD.0
  # DEBUG __firstD.41597 => D#250ptD.0
  # DEBUG __lastD.41596 => __first_7
  # DEBUG __valueD.41595 => D#104ptD.0
  # DEBUG __tmpD.41598 => __x_copy_35
  # DEBUG __firstD.41597 => D#250ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.41597 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.41597 => __position_58
  # DEBUG __firstD.41597 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.42247 => this_4(D)
  # DEBUG __nD.42248 => __n_2(D)
  # DEBUG __nD.42248 => __n_2(D)
  # DEBUG __sD.42249 => "vector::_M_fill_insert"
  # DEBUG D#135ptD.0 => this_4(D)
  # DEBUG thisD.40532 => D#135ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0
  # DEBUG D#133ptD.0 => &D#134ptD.0->D.34311
  # DEBUG thisD.40522 => D#133ptD.0
  # DEBUG __aD.40514 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#131ptD.0
  # DEBUG thisD.40505 => D#130ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG thisD.42253 => D#5ptD.0
  # DEBUG thisD.42254 => D#5ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2860 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG thisD.40550 => D#5ptD.0
  # DEBUG thisD.40549 => D#5ptD.0
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG thisD.40545 => D#5ptD.0
  # DEBUG thisD.40544 => D#5ptD.0
  # DEBUG __aD.42252 => &D.42256
  # DEBUG __bD.42251 => &__nD.42248
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.42250 => __len_124
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG thisD.40537 => D#5ptD.0
  # DEBUG thisD.40536 => D#5ptD.0
  # DEBUG D#135ptD.0 => this_4(D)
  # DEBUG thisD.40552 => D#135ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0
  # DEBUG D#133ptD.0 => &D#134ptD.0->D.34311
  # DEBUG thisD.40522 => D#133ptD.0
  # DEBUG __aD.40514 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#131ptD.0
  # DEBUG thisD.40505 => D#130ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.38367 => NULL
  # DEBUG thisD.41784 => this_4(D)
  # DEBUG D#28ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41786 => NULL
  # DEBUG __iD.41785 => D#28ptD.0
  # DEBUG __lhsD.41781 => &__positionD.34236
  # DEBUG __rhsD.41782 => &D.38369
  # DEBUG thisD.39755 => &__positionD.34236
  # DEBUG thisD.39753 => &D.38369
  # DEBUG D#226ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.38368 => (const size_typeD.33887) D#226ptD.0
  # DEBUG D#225ptD.0 => &this_4(D)->D.34311
  # DEBUG D#143ptD.0 => D#225ptD.0
  # DEBUG __nD.42238 => NULL
  # DEBUG thisD.42239 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  # DEBUG D#141ptD.0 => &D#142ptD.0->_M_implD.33802
  # DEBUG D#140ptD.0 => D#141ptD.0
  # DEBUG __nD.42242 => NULL
  # DEBUG __aD.42241 => D#140ptD.0
  # DEBUG D#139ptD.0 => D#140ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D#138ptD.0 => 0B
  # DEBUG __nD.42245 => NULL
  # DEBUG thisD.42243 => D#137ptD.0
  # DEBUG D.42244 => D#138ptD.0
  # DEBUG D#136ptD.0 => D#137ptD.0
  # DEBUG D#130ptD.0 => D#136ptD.0
  # DEBUG thisD.40557 => D#130ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.42259 } (escaped heap)
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.34311._M_implD.33802._M_startD.33804;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.42259 } (escaped heap)
  # iftmp.14_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.42259 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
  # DEBUG __new_startD.38370 => NULL
  # DEBUG __new_finishD.38371 => NULL
  # DEBUG D#209ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41779 => D#209ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.42259 } (escaped heap)
  __first_20 = iftmp.14_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#121ptD.0 => __x_21(D)
  # DEBUG __firstD.41757 => __first_20
  # DEBUG __nD.41758 => __n_2(D)
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.41761 => D#120ptD.0
  # DEBUG D.41760 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.41764 => __first_20
  # DEBUG __nD.41763 => __n_2(D)
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.41762 => D#118ptD.0
  # DEBUG __assignableD.41766 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.41769 => __first_20
  # DEBUG __nD.41768 => __n_2(D)
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.41767 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.41772 => __first_20
  # DEBUG __nD.41771 => __n_2(D)
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.41770 => D#114ptD.0
  # DEBUG __itD.40218 => __first_20
  # DEBUG __itD.40184 => __first_20
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __firstD.41775 => __first_20
  # DEBUG __nD.41774 => __n_2(D)
  # DEBUG __valueD.41773 => D#111ptD.0
  # DEBUG __tmpD.41776 => _56
  # DEBUG __niterD.41777 => __n_2(D)
  # DEBUG __niterD.41777 => __n_2(D)
  # DEBUG __firstD.41775 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(33)>
  # PT = null { D.42259 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(33)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(33)>
  # DEBUG __niterD.41777 => __n_132
  # DEBUG __firstD.41775 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.41777 => __n_79
  # PT = null { D.42259 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.41775 => __first_80
  # DEBUG __niterD.41777 => __n_79
  # DEBUG __firstD.41775 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.38371 => 0B
  # DEBUG D#210ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41755 => D#210ptD.0
  # DEBUG thisD.41753 => &__positionD.34236
  # DEBUG D#249ptD.0 => this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.41718 => D#249ptD.0
  # DEBUG __lastD.41719 => D#250ptD.0
  # DEBUG __resultD.41720 => NULL
  # DEBUG __allocD.41721 => D#207ptD.0
  # DEBUG D#206ptD.0 => D#207ptD.0
  # DEBUG D#203ptD.0 => D#206ptD.0
  # DEBUG __firstD.41725 => D#249ptD.0
  # DEBUG __lastD.41724 => D#250ptD.0
  # DEBUG __resultD.41723 => NULL
  # DEBUG D.41722 => D#203ptD.0
  # DEBUG __firstD.41728 => D#249ptD.0
  # DEBUG __lastD.41727 => D#250ptD.0
  # DEBUG __resultD.41726 => NULL
  # DEBUG __assignableD.41731 => 1
  # DEBUG __firstD.41734 => D#249ptD.0
  # DEBUG __lastD.41733 => D#250ptD.0
  # DEBUG __resultD.41732 => NULL
  # DEBUG __firstD.41737 => D#249ptD.0
  # DEBUG __lastD.41736 => D#250ptD.0
  # DEBUG __resultD.41735 => NULL
  # DEBUG __itD.41283 => D#250ptD.0
  # DEBUG __itD.40181 => D#250ptD.0
  # DEBUG __itD.41281 => D#249ptD.0
  # DEBUG __itD.40181 => D#249ptD.0
  # DEBUG __firstD.41740 => D#249ptD.0
  # DEBUG __lastD.41739 => D#250ptD.0
  # DEBUG __resultD.41738 => NULL
  # DEBUG __itD.41263 => NULL
  # DEBUG __itD.40184 => NULL
  # DEBUG __itD.41261 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG __itD.41259 => D#249ptD.0
  # DEBUG __itD.40184 => D#249ptD.0
  # DEBUG __firstD.41743 => D#249ptD.0
  # DEBUG __lastD.41742 => D#250ptD.0
  # DEBUG __resultD.41741 => NULL
  # DEBUG __simpleD.41747 => 1
  # DEBUG __firstD.41750 => D#249ptD.0
  # DEBUG __lastD.41749 => D#250ptD.0
  # DEBUG __resultD.41748 => NULL
  # DEBUG D#248ptD.0 => (long intD.12) D#249ptD.0
  # DEBUG D#247ptD.0 => _158 - D#248ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.41751 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  memmoveD.995 (iftmp.14_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#246ptD.0 => (long unsigned intD.14) D#247ptD.0
  # DEBUG __new_finishD.38371 => iftmp.14_113 + D#246ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.42259 } (escaped heap)
  __new_finish_26 = iftmp.14_113 + _133;
  # DEBUG __new_finishD.38371 => __new_finish_26
  # DEBUG D#211ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41716 => D#211ptD.0
  # DEBUG D#245ptD.0 => this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41714 => &__positionD.34236
  # DEBUG __firstD.41679 => D#250ptD.0
  # DEBUG __lastD.41680 => D#245ptD.0
  # DEBUG __resultD.41681 => __new_finish_26
  # DEBUG __allocD.41682 => D#207ptD.0
  # DEBUG D#206ptD.0 => D#207ptD.0
  # DEBUG D#203ptD.0 => D#206ptD.0
  # DEBUG __firstD.41686 => D#250ptD.0
  # DEBUG __lastD.41685 => D#245ptD.0
  # DEBUG __resultD.41684 => __new_finish_26
  # DEBUG D.41683 => D#203ptD.0
  # DEBUG __firstD.41689 => D#250ptD.0
  # DEBUG __lastD.41688 => D#245ptD.0
  # DEBUG __resultD.41687 => __new_finish_26
  # DEBUG __assignableD.41692 => 1
  # DEBUG __firstD.41695 => D#250ptD.0
  # DEBUG __lastD.41694 => D#245ptD.0
  # DEBUG __resultD.41693 => __new_finish_26
  # DEBUG __firstD.41698 => D#250ptD.0
  # DEBUG __lastD.41697 => D#245ptD.0
  # DEBUG __resultD.41696 => __new_finish_26
  # DEBUG __itD.41283 => D#245ptD.0
  # DEBUG __itD.40181 => D#245ptD.0
  # DEBUG __itD.41281 => D#250ptD.0
  # DEBUG __itD.40181 => D#250ptD.0
  # DEBUG __firstD.41701 => D#250ptD.0
  # DEBUG __lastD.41700 => D#245ptD.0
  # DEBUG __resultD.41699 => __new_finish_26
  # DEBUG __itD.41263 => __new_finish_26
  # DEBUG __itD.40184 => __new_finish_26
  # DEBUG __itD.41261 => D#245ptD.0
  # DEBUG __itD.40184 => D#245ptD.0
  # DEBUG __itD.41259 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG __firstD.41704 => D#250ptD.0
  # DEBUG __lastD.41703 => D#245ptD.0
  # DEBUG __resultD.41702 => __new_finish_26
  # DEBUG __simpleD.41708 => 1
  # DEBUG __firstD.41711 => D#250ptD.0
  # DEBUG __lastD.41710 => D#245ptD.0
  # DEBUG __resultD.41709 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.41712 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.42259 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.38371 => _70
  # DEBUG D#212ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41677 => D#212ptD.0
  # DEBUG D#224ptD.0 => this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#223ptD.0 => this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.41674 => D#223ptD.0
  # DEBUG __lastD.41675 => D#224ptD.0
  # DEBUG D.41676 => NULL
  # DEBUG D#22ptD.0 => D#223ptD.0
  # DEBUG D#23ptD.0 => D#224ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#222ptD.0 => this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#221ptD.0 => (long intD.12) D#222ptD.0
  # DEBUG D#220ptD.0 => (long intD.12) D#249ptD.0
  # DEBUG D#219ptD.0 => D#221ptD.0 - D#220ptD.0
  # DEBUG D#218ptD.0 => D#219ptD.0 /[ex] 4
  # DEBUG D#217ptD.0 => (long unsigned intD.14) D#218ptD.0
  # DEBUG D#216ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41664 => D#216ptD.0
  # DEBUG __pD.41665 => D#249ptD.0
  # DEBUG __nD.41666 => D#217ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#216ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#217ptD.0
  # DEBUG __pD.41670 => D#249ptD.0
  # DEBUG __aD.41668 => D#69ptD.0
  # DEBUG __nD.41669 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.41673 => D#249ptD.0
  # DEBUG thisD.41671 => D#65ptD.0
  # DEBUG D.41672 => D#66ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.34311._M_implD.33802._M_startD.33804 = iftmp.14_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(3), .MEM_34(44)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.38367 => NULL
  # DEBUG thisD.41784 => this_4(D)
  # DEBUG D#28ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41786 => NULL
  # DEBUG __iD.41785 => D#28ptD.0
  # DEBUG __lhsD.41781 => &__positionD.34236
  # DEBUG __rhsD.41782 => &D.38369
  # DEBUG thisD.39755 => &__positionD.34236
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.39753 => &D.38369
  _143 = _144 - _116;
  # DEBUG D#226ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.38368 => (const size_typeD.33887) D#226ptD.0
  # DEBUG D#225ptD.0 => &this_4(D)->D.34311
  # DEBUG D#143ptD.0 => D#225ptD.0
  # DEBUG __nD.42238 => NULL
  # DEBUG thisD.42239 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.38367 => NULL
  # DEBUG thisD.41784 => this_4(D)
  # DEBUG D#28ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41786 => NULL
  # DEBUG __iD.41785 => D#28ptD.0
  # DEBUG __lhsD.41781 => &__positionD.34236
  # DEBUG __rhsD.41782 => &D.38369
  # DEBUG thisD.39755 => &__positionD.34236
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.39753 => &D.38369
  _150 = _151 - _116;
  # DEBUG D#226ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.38368 => (const size_typeD.33887) D#226ptD.0
  # DEBUG D#225ptD.0 => &this_4(D)->D.34311
  # DEBUG D#143ptD.0 => D#225ptD.0
  # DEBUG __nD.42238 => NULL
  # DEBUG thisD.42239 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for this_4(D)->D.34311._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__x_21(D)
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__x_21(D)
Creating dr for this_4(D)->D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for MEM[(int * *)this_4(D)]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D)]
Applying pattern match.pd:725, generic-match.c:1428
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for MEM[(const int &)__x_21(D)]
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const int &)__x_21(D)]
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.14_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.14_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.14_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.14_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.14_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.14_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.14_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.14_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.14_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.14_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.14_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.14_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.14_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.14_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.14_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.14_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.34311._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34311._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34311._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:18)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:39)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:56, LOOPS:4, CONDITIONS:19, STMTS:600)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG D#250 => MEM[(struct __normal_iterator *)&__position]
    # DEBUG __position => D#250
    if (__n_2(D) != 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_10 bb_48 bb_23 bb_49 }, succs = {bb_55 })
  {
    <bb 3>:
    # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>

  }
  bb_55 (preds = {bb_3 }, succs = {bb_45 })
  {
    <bb 55>:
    goto <bb 45>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_28 })
  {
    <bb 4>:
    # VUSE <.MEM_3(D)>
    __position_16 = MEM[(struct __normal_iterator *)&__position];
    # VUSE <.MEM_3(D)>
    _5 = this_4(D)->D.34311._M_impl._M_end_of_storage;
    _6 = (long int) _5;
    # VUSE <.MEM_3(D)>
    __first_7 = this_4(D)->D.34311._M_impl._M_finish;
    _8 = (long int) __first_7;
    _9 = _6 - _8;
    _10 = _9 /[ex] 4;
    _11 = (long unsigned int) _10;
    if (__n_2(D) <= _11)
      goto <bb 5>;
    else
      goto <bb 28>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 bb_15 })
  {
    <bb 5>:
    # VUSE <.MEM_3(D)>
    __x_copy_35 = *__x_21(D);
    # DEBUG __x_copy => __x_copy_35
    # DEBUG this => this_4(D)
    # DEBUG D#6 => &this_4(D)->D.34311._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#6
    # DEBUG __lhs => &D.38336
    # DEBUG __rhs => &__position
    # DEBUG this => &D.38336
    # DEBUG this => &__position
    _27 = (long int) __position_16;
    _23 = _8 - _27;
    _22 = _23 /[ex] 4;
    __elems_after_37 = (const size_type) _22;
    # DEBUG __elems_after => __elems_after_37
    # DEBUG __old_finish => __first_7
    if (__n_2(D) < __elems_after_37)
      goto <bb 6>;
    else
      goto <bb 15>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#213 => &this_4(D)->D.34311
    # DEBUG this => D#213
    _39 = __n_2(D) * 4;
    _40 = -_39;
    _41 = __first_7 + _40;
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __alloc => D#205
    # DEBUG D#204 => D#205
    # DEBUG D#203 => D#204
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG D.41558 => D#203
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __assignable => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    __first.9_49 = (long int) _41;
    _47 = _8 - __first.9_49;
    _Num_45 = _47 /[ex] 4;
    # DEBUG _Num => _Num_45
    if (_Num_45 != 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    _38 = (long unsigned int) _47;
    # .MEM_97 = VDEF <.MEM_3(D)>
    __builtin_memmove (__first_7, _41, _38);
    # VUSE <.MEM_97>
    pretmp_173 = this_4(D)->D.34311._M_impl._M_finish;

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
    # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
    _43 = prephitmp_174 + _39;
    # .MEM_44 = VDEF <.MEM_14>
    this_4(D)->D.34311._M_impl._M_finish = _43;
    # DEBUG this => &__position
    # DEBUG __first => D#250
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#250
    # DEBUG __it => D#250
    # DEBUG __first => D#250
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#250
    # DEBUG __it => D#250
    # DEBUG __first => D#250
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => D#250
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    _104 = __first.9_49 - _27;
    _Num_105 = _104 /[ex] 4;
    # DEBUG _Num => _Num_105
    if (_Num_105 != 0)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    _106 = (long unsigned int) _104;
    _107 = -_106;
    _108 = __first_7 + _107;
    # .MEM_135 = VDEF <.MEM_44>
    __builtin_memmove (_108, __position_16, _106);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_3 bb_11 })
  {
    <bb 10>:
    # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
    # DEBUG this => &__position
    _48 = __position_16 + _39;
    # DEBUG this => &__position
    # DEBUG D#113 => &__x_copy
    # DEBUG __first => D#250
    # DEBUG __last => _48
    # DEBUG D#112 => D#113
    # DEBUG __value => D#112
    # DEBUG __it => _48
    # DEBUG __it => _48
    # DEBUG __it => D#250
    # DEBUG __it => D#250
    # DEBUG D#104 => D#112
    # DEBUG __first => D#250
    # DEBUG __last => _48
    # DEBUG __value => D#104
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#250
    if (__position_16 == _48)
      goto <bb 3>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:

  }
  bb_13 (preds = {bb_12 }, succs = {bb_48 })
  {
    <bb 13>:
    # .MEM_13 = PHI <.MEM_98(12)>

  }
  bb_48 (preds = {bb_13 }, succs = {bb_3 })
  {
    <bb 48>:
    goto <bb 3>;

  }
  bb_15 (preds = {bb_5 }, succs = {bb_20 bb_16 })
  {
    <bb 15>:
    # DEBUG D#214 => &this_4(D)->D.34311
    # DEBUG this => D#214
    __n_50 = __n_2(D) - __elems_after_37;
    # DEBUG D#121 => &__x_copy
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#120 => D#121
    # DEBUG __x => D#120
    # DEBUG D.41643 => D#122
    # DEBUG D#119 => D#120
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#118 => D#119
    # DEBUG __x => D#118
    # DEBUG __assignable => 1
    # DEBUG D#117 => D#118
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#116 => D#117
    # DEBUG __x => D#116
    # DEBUG D#115 => D#116
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#114 => D#115
    # DEBUG __value => D#114
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG D#111 => D#114
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG __value => D#111
    # DEBUG __tmp => __x_copy_35
    # DEBUG __niter => __n_50
    # DEBUG __niter => __n_50
    # DEBUG __first => __first_7
    if (__n_50 == 0)
      goto <bb 20>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:

  }
  bb_18 (preds = {bb_17 }, succs = {bb_50 })
  {
    <bb 18>:

  }
  bb_50 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 50>:
    _160 = __n_50 * 4;
    __first_123 = __first_7 + _160;
    goto <bb 20>;

  }
  bb_20 (preds = {bb_50 bb_15 }, succs = {bb_22 bb_21 })
  {
    <bb 20>:
    # __first_125 = PHI <__first_123(50), __first_7(15)>
    # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
    # .MEM_51 = VDEF <.MEM_84>
    this_4(D)->D.34311._M_impl._M_finish = __first_125;
    # DEBUG D#215 => &this_4(D)->D.34311
    # DEBUG this => D#215
    # DEBUG this => &__position
    # DEBUG __first => D#250
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __alloc => D#205
    # DEBUG D#204 => D#205
    # DEBUG D#203 => D#204
    # DEBUG __first => D#250
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG D.41605 => D#203
    # DEBUG __first => D#250
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __assignable => 1
    # DEBUG __first => D#250
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __first => D#250
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#250
    # DEBUG __it => D#250
    # DEBUG __first => D#250
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#250
    # DEBUG __it => D#250
    # DEBUG __first => D#250
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __simple => 1
    # DEBUG __first => D#250
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG _Num => _22
    if (_22 != 0)
      goto <bb 22>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 21>:
    pretmp_168 = (long unsigned int) _23;
    goto <bb 23>;

  }
  bb_22 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 22>:
    _59 = (long unsigned int) _23;
    # .MEM_100 = VDEF <.MEM_51>
    __builtin_memmove (__first_125, __position_16, _59);
    # VUSE <.MEM_100>
    pretmp_166 = this_4(D)->D.34311._M_impl._M_finish;

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_3 bb_24 })
  {
    <bb 23>:
    # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
    # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
    # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
    _53 = prephitmp_167 + prephitmp_169;
    # .MEM_54 = VDEF <.MEM_87>
    this_4(D)->D.34311._M_impl._M_finish = _53;
    # DEBUG this => &__position
    # DEBUG D#113 => &__x_copy
    # DEBUG __first => D#250
    # DEBUG __last => __first_7
    # DEBUG D#112 => D#113
    # DEBUG __value => D#112
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#250
    # DEBUG __it => D#250
    # DEBUG D#104 => D#112
    # DEBUG __first => D#250
    # DEBUG __last => __first_7
    # DEBUG __value => D#104
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#250
    if (__first_7 == __position_16)
      goto <bb 3>;
    else
      goto <bb 24>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:

  }
  bb_26 (preds = {bb_25 }, succs = {bb_49 })
  {
    <bb 26>:
    # .MEM_154 = PHI <.MEM_101(25)>

  }
  bb_49 (preds = {bb_26 }, succs = {bb_3 })
  {
    <bb 49>:
    goto <bb 3>;

  }
  bb_28 (preds = {bb_4 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # DEBUG this => this_4(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __s => "vector::_M_fill_insert"
    # DEBUG D#135 => this_4(D)
    # DEBUG this => D#135
    # DEBUG D#134 => D#135
    # DEBUG D#133 => &D#134->D.34311
    # DEBUG this => D#133
    # DEBUG __a => D#132
    # DEBUG D#131 => D#132
    # DEBUG D#130 => D#131
    # DEBUG this => D#130
    # VUSE <.MEM_3(D)>
    _17 = MEM[(int * *)this_4(D)];
    # DEBUG D#5 => this_4(D)
    # DEBUG D#5 => this_4(D)
    # DEBUG this => D#5
    # DEBUG this => D#5
    _116 = (long int) _17;
    _117 = _8 - _116;
    _118 = _117 /[ex] 4;
    _119 = (const long unsigned int) _118;
    _120 = 4611686018427387903 - _119;
    if (__n_2(D) > _120)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {})
  {
    <bb 29>:
    # .MEM_134 = VDEF <.MEM_3(D)>
    std::__throw_length_error ("vector::_M_fill_insert");

  }
  bb_30 (preds = {bb_28 }, succs = {bb_46 bb_47 })
  {
    <bb 30>:
    # DEBUG D#5 => this_4(D)
    # DEBUG D#5 => this_4(D)
    # DEBUG this => D#5
    # DEBUG this => D#5
    # DEBUG D#5 => this_4(D)
    # DEBUG D#5 => this_4(D)
    # DEBUG this => D#5
    # DEBUG this => D#5
    # DEBUG __a => &D.42256
    # DEBUG __b => &__n
    _77 = MAX_EXPR <__n_2(D), _119>;
    __len_124 = _77 + _119;
    # DEBUG __len => __len_124
    # DEBUG D#5 => this_4(D)
    # DEBUG D#5 => this_4(D)
    # DEBUG this => D#5
    # DEBUG this => D#5
    # DEBUG D#135 => this_4(D)
    # DEBUG this => D#135
    # DEBUG D#134 => D#135
    # DEBUG D#133 => &D#134->D.34311
    # DEBUG this => D#133
    # DEBUG __a => D#132
    # DEBUG D#131 => D#132
    # DEBUG D#130 => D#131
    # DEBUG this => D#130
    _152 = __len_124 > 4611686018427387903;
    _142 = _119 > __len_124;
    _114 = _142 | _152;
    if (_114 != 0)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_31 (preds = {bb_47 }, succs = {bb_32 })
  {
    <bb 31>:
    pretmp_164 = __len_124 * 4;

  }
  bb_32 (preds = {bb_46 bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    # _156 = PHI <_144(46), _151(31)>
    # _157 = PHI <_143(46), _150(31)>
    # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#28 => &this_4(D)->D.34311._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#28
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.38369
    # DEBUG this => &__position
    # DEBUG this => &D.38369
    # DEBUG D#226 => _157 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#226
    # DEBUG D#225 => &this_4(D)->D.34311
    # DEBUG D#143 => D#225
    # DEBUG __n => NULL
    # DEBUG this => D#143
    # DEBUG D#142 => D#143
    # DEBUG D#141 => &D#142->_M_impl
    # DEBUG D#140 => D#141
    # DEBUG __n => NULL
    # DEBUG __a => D#140
    # DEBUG D#139 => D#140
    # DEBUG D#137 => D#139
    # DEBUG D#138 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#137
    # DEBUG D.42244 => D#138
    # DEBUG D#136 => D#137
    # DEBUG D#130 => D#136
    # DEBUG this => D#130
    # .MEM_131 = VDEF <.MEM_3(D)>
    _112 = operator new (prephitmp_165);
    # VUSE <.MEM_131>
    pretmp_29 = this_4(D)->D.34311._M_impl._M_start;
    # VUSE <.MEM_131>
    pretmp_147 = this_4(D)->D.34311._M_impl._M_finish;
    pretmp_149 = _112 + prephitmp_165;
    pretmp_145 = (long int) pretmp_147;
    pretmp_138 = (long int) pretmp_29;
    pretmp_140 = _156 - pretmp_138;

  }
  bb_33 (preds = {bb_47 bb_32 }, succs = {bb_52 })
  {
    <bb 33>:
    # iftmp.14_113 = PHI <0B(47), _112(32)>
    # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
    # _158 = PHI <_151(47), _156(32)>
    # _153 = PHI <_150(47), _157(32)>
    # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
    # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
    # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
    # prephitmp_137 = PHI <_150(47), pretmp_140(32)>

  }
  bb_52 (preds = {bb_33 }, succs = {bb_34 })
  {
    <bb 52>:
    # DEBUG __new_start => NULL
    # DEBUG __new_finish => NULL
    # DEBUG D#209 => &this_4(D)->D.34311
    # DEBUG this => D#209
    _19 = (long unsigned int) _153;
    __first_20 = iftmp.14_113 + _19;
    # VUSE <.MEM_126>
    _56 = MEM[(const int &)__x_21(D)];
    # DEBUG D#121 => __x_21(D)
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#120 => D#121
    # DEBUG __x => D#120
    # DEBUG D.41760 => D#122
    # DEBUG D#119 => D#120
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#118 => D#119
    # DEBUG __x => D#118
    # DEBUG __assignable => 1
    # DEBUG D#117 => D#118
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#116 => D#117
    # DEBUG __x => D#116
    # DEBUG D#115 => D#116
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#114 => D#115
    # DEBUG __value => D#114
    # DEBUG __it => __first_20
    # DEBUG __it => __first_20
    # DEBUG D#111 => D#114
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG __value => D#111
    # DEBUG __tmp => _56
    # DEBUG __niter => __n_2(D)
    # DEBUG __niter => __n_2(D)
    # DEBUG __first => __first_20

  }
  bb_36 (preds = {bb_34 }, succs = {bb_51 })
  {
    <bb 36>:

  }
  bb_51 (preds = {bb_36 }, succs = {bb_38 bb_37 })
  {
    <bb 51>:
    # DEBUG __new_finish => 0B
    # DEBUG D#210 => &this_4(D)->D.34311
    # DEBUG this => D#210
    # DEBUG this => &__position
    # DEBUG D#249 => this_4(D)->D.34311._M_impl._M_start
    # DEBUG __first => D#249
    # DEBUG __last => D#250
    # DEBUG __result => NULL
    # DEBUG __alloc => D#207
    # DEBUG D#206 => D#207
    # DEBUG D#203 => D#206
    # DEBUG __first => D#249
    # DEBUG __last => D#250
    # DEBUG __result => NULL
    # DEBUG D.41722 => D#203
    # DEBUG __first => D#249
    # DEBUG __last => D#250
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => D#249
    # DEBUG __last => D#250
    # DEBUG __result => NULL
    # DEBUG __first => D#249
    # DEBUG __last => D#250
    # DEBUG __result => NULL
    # DEBUG __it => D#250
    # DEBUG __it => D#250
    # DEBUG __it => D#249
    # DEBUG __it => D#249
    # DEBUG __first => D#249
    # DEBUG __last => D#250
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => D#250
    # DEBUG __it => D#250
    # DEBUG __it => D#249
    # DEBUG __it => D#249
    # DEBUG __first => D#249
    # DEBUG __last => D#250
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => D#249
    # DEBUG __last => D#250
    # DEBUG __result => NULL
    # DEBUG D#248 => (long int) D#249
    # DEBUG D#247 => _158 - D#248
    _Num_73 = prephitmp_137 /[ex] 4;
    # DEBUG _Num => _Num_73
    if (_Num_73 != 0)
      goto <bb 38>;
    else
      goto <bb 37>;

  }
  bb_37 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 37>:
    pretmp_103 = (long unsigned int) prephitmp_137;
    goto <bb 39>;

  }
  bb_38 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 38>:
    _74 = (long unsigned int) prephitmp_137;
    # .MEM_94 = VDEF <.MEM_93>
    __builtin_memmove (iftmp.14_113, prephitmp_146, _74);

  }
  bb_39 (preds = {bb_37 bb_38 }, succs = {bb_41 bb_40 })
  {
    <bb 39>:
    # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
    # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
    # DEBUG D#246 => (long unsigned int) D#247
    # DEBUG __new_finish => iftmp.14_113 + D#246
    _25 = __n_2(D) * 4;
    _133 = _25 + prephitmp_102;
    __new_finish_26 = iftmp.14_113 + _133;
    # DEBUG __new_finish => __new_finish_26
    # DEBUG D#211 => &this_4(D)->D.34311
    # DEBUG this => D#211
    # DEBUG D#245 => this_4(D)->D.34311._M_impl._M_finish
    # DEBUG this => &__position
    # DEBUG __first => D#250
    # DEBUG __last => D#245
    # DEBUG __result => __new_finish_26
    # DEBUG __alloc => D#207
    # DEBUG D#206 => D#207
    # DEBUG D#203 => D#206
    # DEBUG __first => D#250
    # DEBUG __last => D#245
    # DEBUG __result => __new_finish_26
    # DEBUG D.41683 => D#203
    # DEBUG __first => D#250
    # DEBUG __last => D#245
    # DEBUG __result => __new_finish_26
    # DEBUG __assignable => 1
    # DEBUG __first => D#250
    # DEBUG __last => D#245
    # DEBUG __result => __new_finish_26
    # DEBUG __first => D#250
    # DEBUG __last => D#245
    # DEBUG __result => __new_finish_26
    # DEBUG __it => D#245
    # DEBUG __it => D#245
    # DEBUG __it => D#250
    # DEBUG __it => D#250
    # DEBUG __first => D#250
    # DEBUG __last => D#245
    # DEBUG __result => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => D#245
    # DEBUG __it => D#245
    # DEBUG __it => D#250
    # DEBUG __it => D#250
    # DEBUG __first => D#250
    # DEBUG __last => D#245
    # DEBUG __result => __new_finish_26
    # DEBUG __simple => 1
    # DEBUG __first => D#250
    # DEBUG __last => D#245
    # DEBUG __result => __new_finish_26
    _66 = prephitmp_121 - _158;
    _Num_67 = _66 /[ex] 4;
    # DEBUG _Num => _Num_67
    if (_Num_67 != 0)
      goto <bb 41>;
    else
      goto <bb 40>;

  }
  bb_40 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 40>:
    pretmp_162 = (long unsigned int) _66;
    goto <bb 42>;

  }
  bb_41 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 41>:
    _68 = (long unsigned int) _66;
    # .MEM_95 = VDEF <.MEM_90>
    __builtin_memcpy (__new_finish_26, __position_16, _68);

  }
  bb_42 (preds = {bb_40 bb_41 }, succs = {bb_43 bb_44 })
  {
    <bb 42>:
    # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
    # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
    _70 = __new_finish_26 + prephitmp_163;
    # DEBUG __new_finish => _70
    # DEBUG D#212 => &this_4(D)->D.34311
    # DEBUG this => D#212
    # DEBUG D#224 => this_4(D)->D.34311._M_impl._M_finish
    # DEBUG D#223 => this_4(D)->D.34311._M_impl._M_start
    # DEBUG __first => D#223
    # DEBUG __last => D#224
    # DEBUG D.41676 => NULL
    # DEBUG D#22 => D#223
    # DEBUG D#23 => D#224
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.39717 => D#18
    # DEBUG D.39716 => D#19
    # DEBUG D#222 => this_4(D)->D.34311._M_impl._M_end_of_storage
    # DEBUG D#221 => (long int) D#222
    # DEBUG D#220 => (long int) D#249
    # DEBUG D#219 => D#221 - D#220
    # DEBUG D#218 => D#219 /[ex] 4
    # DEBUG D#217 => (long unsigned int) D#218
    # DEBUG D#216 => &this_4(D)->D.34311
    # DEBUG this => D#216
    # DEBUG __p => D#249
    # DEBUG __n => D#217
    if (prephitmp_146 != 0B)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#71 => &D#216->_M_impl
    # DEBUG D#69 => D#71
    # DEBUG D#70 => D#217
    # DEBUG __p => D#249
    # DEBUG __a => D#69
    # DEBUG __n => D#70
    # DEBUG D#68 => D#70
    # DEBUG D#67 => D#69
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#68
    # DEBUG __p => D#249
    # DEBUG this => D#65
    # DEBUG D.41672 => D#66
    # .MEM_96 = VDEF <.MEM_91>
    operator delete (prephitmp_146);

  }
  bb_44 (preds = {bb_43 bb_42 }, succs = {bb_53 })
  {
    <bb 44>:
    # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>

  }
  bb_53 (preds = {bb_44 }, succs = {bb_45 })
  {
    <bb 53>:
    # .MEM_30 = VDEF <.MEM_92>
    this_4(D)->D.34311._M_impl._M_start = iftmp.14_113;
    # .MEM_31 = VDEF <.MEM_30>
    this_4(D)->D.34311._M_impl._M_finish = _70;
    # .MEM_34 = VDEF <.MEM_31>
    this_4(D)->D.34311._M_impl._M_end_of_storage = prephitmp_148;

  }
  bb_45 (preds = {bb_55 bb_53 }, succs = {bb_54 })
  {
    <bb 45>:
    # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>

  }
  bb_54 (preds = {bb_45 }, succs = {bb_1 })
  {
    <bb 54>:
    # VUSE <.MEM_1>
    return;

  }
  bb_46 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 46>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#28 => &this_4(D)->D.34311._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#28
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.38369
    # DEBUG this => &__position
    _144 = (long int) __position_16;
    # DEBUG this => &D.38369
    _143 = _144 - _116;
    # DEBUG D#226 => _143 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#226
    # DEBUG D#225 => &this_4(D)->D.34311
    # DEBUG D#143 => D#225
    # DEBUG __n => NULL
    # DEBUG this => D#143
    # DEBUG D#142 => D#143
    goto <bb 32>;

  }
  bb_47 (preds = {bb_30 }, succs = {bb_31 bb_33 })
  {
    <bb 47>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#28 => &this_4(D)->D.34311._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#28
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.38369
    # DEBUG this => &__position
    _151 = (long int) __position_16;
    # DEBUG this => &D.38369
    _150 = _151 - _116;
    # DEBUG D#226 => _150 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#226
    # DEBUG D#225 => &this_4(D)->D.34311
    # DEBUG D#143 => D#225
    # DEBUG __n => NULL
    # DEBUG this => D#143
    # DEBUG D#142 => D#143
    if (__len_124 != 0)
      goto <bb 31>;
    else
      goto <bb 33>;

  }
  loop_1 (header = 12, latch = 14, niter = ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_12 (preds = {bb_11 bb_14 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # __position_109 = PHI <__position_16(11), __position_55(14)>
      # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
      # DEBUG __first => __position_109
      # .MEM_98 = VDEF <.MEM_83>
      *__position_109 = __x_copy_35;
      __position_55 = __position_109 + 4;
      # DEBUG __first => __position_55
      # DEBUG __first => __position_55
      if (_48 == __position_55)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_12 }, succs = {bb_12 })
    {
      <bb 14>:
      goto <bb 12>;

    }
  }
  loop_2 (header = 25, latch = 27, niter = ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_25 (preds = {bb_24 bb_27 }, succs = {bb_26 bb_27 })
    {
      <bb 25>:
      # __position_110 = PHI <__position_16(24), __position_58(27)>
      # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
      # DEBUG __first => __position_110
      # .MEM_101 = VDEF <.MEM_136>
      *__position_110 = __x_copy_35;
      __position_58 = __position_110 + 4;
      # DEBUG __first => __position_58
      # DEBUG __first => __position_58
      if (__first_7 == __position_58)
        goto <bb 26>;
      else
        goto <bb 27>;

    }
    bb_27 (preds = {bb_25 }, succs = {bb_25 })
    {
      <bb 27>:
      goto <bb 25>;

    }
  }
  loop_3 (header = 17, latch = 19, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_17 (preds = {bb_16 bb_19 }, succs = {bb_18 bb_19 })
    {
      <bb 17>:
      # __n_111 = PHI <__n_50(16), __n_63(19)>
      # __first_76 = PHI <__first_7(16), __first_64(19)>
      # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
      # DEBUG __niter => __n_111
      # DEBUG __first => __first_76
      # .MEM_99 = VDEF <.MEM_81>
      *__first_76 = __x_copy_35;
      __n_63 = __n_111 + 18446744073709551615;
      # DEBUG __niter => __n_63
      __first_64 = __first_76 + 4;
      # DEBUG __first => __first_64
      # DEBUG __niter => __n_63
      # DEBUG __first => __first_64
      if (__n_63 == 0)
        goto <bb 18>;
      else
        goto <bb 19>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_17 })
    {
      <bb 19>:
      goto <bb 17>;

    }
  }
  loop_4 (header = 34, latch = 35, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_34 (preds = {bb_35 bb_52 }, succs = {bb_36 bb_35 })
    {
      <bb 34>:
      # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
      # __first_155 = PHI <__first_80(35), __first_20(52)>
      # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
      # DEBUG __niter => __n_132
      # DEBUG __first => __first_155
      # .MEM_93 = VDEF <.MEM_130>
      *__first_155 = _56;
      __n_79 = __n_132 + 18446744073709551615;
      # DEBUG __niter => __n_79
      __first_80 = __first_155 + 4;
      # DEBUG __first => __first_80
      # DEBUG __niter => __n_79
      # DEBUG __first => __first_80
      if (__n_79 == 0)
        goto <bb 36>;
      else
        goto <bb 35>;

    }
    bb_35 (preds = {bb_34 }, succs = {bb_34 })
    {
      <bb 35>:
      goto <bb 34>;

    }
  }
}

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.33506 * const thisD.34235, struct iteratorD.33879 __positionD.34236, size_typeD.33887 __nD.34237, const value_typeD.33874 & __xD.34238)
{
  const long unsigned intD.14 D.42256;
  const size_typeD.33887 __lenD.42250;
  size_typeD.33887 D.42255;
  size_typeD.33887 __nD.42248;
  intD.9 * D.42246;
  const ptrdiff_tD.2819 _NumD.42236;
  intD.9 * D.42237;
  intD.9 * const __positionD.41789;
  intD.9 * __firstD.41757;
  const ptrdiff_tD.2819 _NumD.41751;
  const ptrdiff_tD.2819 _NumD.41712;
  intD.9 * __firstD.41640;
  long unsigned intD.14 __nD.41641;
  intD.9 * __firstD.41591;
  const ptrdiff_tD.2819 _NumD.41587;
  intD.9 * __firstD.41540;
  intD.9 * __new_finishD.38371;
  const size_typeD.33887 __elems_afterD.38335;
  value_typeD.33874 __x_copyD.38334;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.37996 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.9_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.14_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#250ptD.0 => MEM[(struct __normal_iteratorD.33880 *)&__positionD.34236]
  # DEBUG __positionD.41789 => D#250ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 55, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 55, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.33880 *)&__positionD.34236];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.38334 => __x_copy_35
  # DEBUG thisD.41535 => this_4(D)
  # DEBUG D#6ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41537 => NULL
  # DEBUG __iD.41536 => D#6ptD.0
  # DEBUG __lhsD.41532 => &D.38336
  # DEBUG __rhsD.41533 => &__positionD.34236
  # DEBUG thisD.39755 => &D.38336
  # DEBUG thisD.39753 => &__positionD.34236
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.33887) _22;
  # DEBUG __elems_afterD.38335 => __elems_after_37
  # DEBUG __old_finishD.38343 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#213ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41589 => D#213ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.41554 => _41
  # DEBUG __lastD.41555 => __first_7
  # DEBUG __resultD.41556 => __first_7
  # DEBUG __allocD.41557 => D#205ptD.0
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG D#203ptD.0 => D#204ptD.0
  # DEBUG __firstD.41561 => _41
  # DEBUG __lastD.41560 => __first_7
  # DEBUG __resultD.41559 => __first_7
  # DEBUG D.41558 => D#203ptD.0
  # DEBUG __firstD.41564 => _41
  # DEBUG __lastD.41563 => __first_7
  # DEBUG __resultD.41562 => __first_7
  # DEBUG __assignableD.41567 => 1
  # DEBUG __firstD.41570 => _41
  # DEBUG __lastD.41569 => __first_7
  # DEBUG __resultD.41568 => __first_7
  # DEBUG __firstD.41573 => _41
  # DEBUG __lastD.41572 => __first_7
  # DEBUG __resultD.41571 => __first_7
  # DEBUG __itD.41283 => __first_7
  # DEBUG __itD.40181 => __first_7
  # DEBUG __itD.41281 => _41
  # DEBUG __itD.40181 => _41
  # DEBUG __firstD.41576 => _41
  # DEBUG __lastD.41575 => __first_7
  # DEBUG __resultD.41574 => __first_7
  # DEBUG __itD.41263 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG __itD.41261 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG __itD.41259 => _41
  # DEBUG __itD.40184 => _41
  # DEBUG __firstD.41579 => _41
  # DEBUG __lastD.41578 => __first_7
  # DEBUG __resultD.41577 => __first_7
  # DEBUG __simpleD.41583 => 1
  # DEBUG __firstD.41586 => _41
  # DEBUG __lastD.41585 => __first_7
  # DEBUG __resultD.41584 => __first_7
  __first.9_49 = (long intD.12) _41;
  _47 = _8 - __first.9_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.41587 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _43;
  # DEBUG thisD.41552 => &__positionD.34236
  # DEBUG __firstD.42220 => D#250ptD.0
  # DEBUG __lastD.42221 => _41
  # DEBUG __resultD.42222 => __first_7
  # DEBUG __itD.40496 => _41
  # DEBUG __itD.40181 => _41
  # DEBUG __itD.40494 => D#250ptD.0
  # DEBUG __itD.40181 => D#250ptD.0
  # DEBUG __firstD.42225 => D#250ptD.0
  # DEBUG __lastD.42224 => _41
  # DEBUG __resultD.42223 => __first_7
  # DEBUG __itD.40476 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG __itD.40474 => _41
  # DEBUG __itD.40184 => _41
  # DEBUG __itD.40472 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG __firstD.42228 => D#250ptD.0
  # DEBUG __lastD.42227 => _41
  # DEBUG __resultD.42226 => __first_7
  # DEBUG __simpleD.42232 => 1
  # DEBUG __firstD.42235 => D#250ptD.0
  # DEBUG __lastD.42234 => _41
  # DEBUG __resultD.42233 => __first_7
  _104 = __first.9_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.42236 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.41550 => &__positionD.34236
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.41548 => &__positionD.34236
  # DEBUG D#113ptD.0 => &__x_copyD.38334
  # DEBUG __firstD.41540 => D#250ptD.0
  # DEBUG __lastD.41541 => _48
  # DEBUG D#112ptD.0 => D#113ptD.0
  # DEBUG __valueD.41543 => D#112ptD.0
  # DEBUG __itD.40194 => _48
  # DEBUG __itD.40184 => _48
  # DEBUG __itD.40192 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG D#104ptD.0 => D#112ptD.0
  # DEBUG __firstD.41546 => D#250ptD.0
  # DEBUG __lastD.41545 => _48
  # DEBUG __valueD.41544 => D#104ptD.0
  # DEBUG __tmpD.41547 => __x_copy_35
  # DEBUG __firstD.41546 => D#250ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.41546 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.41546 => __position_55
  # DEBUG __firstD.41546 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 48, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
;;    succ:       48 [100.0%]  (FALLTHRU)

;;   basic block 48, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 48, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#214ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41662 => D#214ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#121ptD.0 => &__x_copyD.38334
  # DEBUG __firstD.41640 => __first_7
  # DEBUG __nD.41641 => __n_50
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.41644 => D#120ptD.0
  # DEBUG D.41643 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.41647 => __first_7
  # DEBUG __nD.41646 => __n_50
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.41645 => D#118ptD.0
  # DEBUG __assignableD.41649 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.41652 => __first_7
  # DEBUG __nD.41651 => __n_50
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.41650 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.41655 => __first_7
  # DEBUG __nD.41654 => __n_50
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.41653 => D#114ptD.0
  # DEBUG __itD.40218 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __firstD.41658 => __first_7
  # DEBUG __nD.41657 => __n_50
  # DEBUG __valueD.41656 => D#111ptD.0
  # DEBUG __tmpD.41659 => __x_copy_35
  # DEBUG __niterD.41660 => __n_50
  # DEBUG __niterD.41660 => __n_50
  # DEBUG __firstD.41658 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.41660 => __n_111
  # DEBUG __firstD.41658 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.41660 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.41658 => __first_64
  # DEBUG __niterD.41660 => __n_63
  # DEBUG __firstD.41658 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 50, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       50 [100.0%]  (FALLTHRU)

;;   basic block 50, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 50, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(50), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = __first_125;
  # DEBUG D#215ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41638 => D#215ptD.0
  # DEBUG thisD.41636 => &__positionD.34236
  # DEBUG __firstD.41601 => D#250ptD.0
  # DEBUG __lastD.41602 => __first_7
  # DEBUG __resultD.41603 => __first_125
  # DEBUG __allocD.41604 => D#205ptD.0
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG D#203ptD.0 => D#204ptD.0
  # DEBUG __firstD.41608 => D#250ptD.0
  # DEBUG __lastD.41607 => __first_7
  # DEBUG __resultD.41606 => __first_125
  # DEBUG D.41605 => D#203ptD.0
  # DEBUG __firstD.41611 => D#250ptD.0
  # DEBUG __lastD.41610 => __first_7
  # DEBUG __resultD.41609 => __first_125
  # DEBUG __assignableD.41614 => 1
  # DEBUG __firstD.41617 => D#250ptD.0
  # DEBUG __lastD.41616 => __first_7
  # DEBUG __resultD.41615 => __first_125
  # DEBUG __firstD.41620 => D#250ptD.0
  # DEBUG __lastD.41619 => __first_7
  # DEBUG __resultD.41618 => __first_125
  # DEBUG __itD.41283 => __first_7
  # DEBUG __itD.40181 => __first_7
  # DEBUG __itD.41281 => D#250ptD.0
  # DEBUG __itD.40181 => D#250ptD.0
  # DEBUG __firstD.41623 => D#250ptD.0
  # DEBUG __lastD.41622 => __first_7
  # DEBUG __resultD.41621 => __first_125
  # DEBUG __itD.41263 => __first_125
  # DEBUG __itD.40184 => __first_125
  # DEBUG __itD.41261 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG __itD.41259 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG __firstD.41626 => D#250ptD.0
  # DEBUG __lastD.41625 => __first_7
  # DEBUG __resultD.41624 => __first_125
  # DEBUG __simpleD.41630 => 1
  # DEBUG __firstD.41633 => D#250ptD.0
  # DEBUG __lastD.41632 => __first_7
  # DEBUG __resultD.41631 => __first_125
  # DEBUG _NumD.41634 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _53;
  # DEBUG thisD.41599 => &__positionD.34236
  # DEBUG D#113ptD.0 => &__x_copyD.38334
  # DEBUG __firstD.41591 => D#250ptD.0
  # DEBUG __lastD.41592 => __first_7
  # DEBUG D#112ptD.0 => D#113ptD.0
  # DEBUG __valueD.41594 => D#112ptD.0
  # DEBUG __itD.40194 => __first_7
  # DEBUG __itD.40184 => __first_7
  # DEBUG __itD.40192 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG D#104ptD.0 => D#112ptD.0
  # DEBUG __firstD.41597 => D#250ptD.0
  # DEBUG __lastD.41596 => __first_7
  # DEBUG __valueD.41595 => D#104ptD.0
  # DEBUG __tmpD.41598 => __x_copy_35
  # DEBUG __firstD.41597 => D#250ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.41597 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.41597 => __position_58
  # DEBUG __firstD.41597 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 49, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
;;    succ:       49 [100.0%]  (FALLTHRU)

;;   basic block 49, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 49, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.42247 => this_4(D)
  # DEBUG __nD.42248 => __n_2(D)
  # DEBUG __nD.42248 => __n_2(D)
  # DEBUG __sD.42249 => "vector::_M_fill_insert"
  # DEBUG D#135ptD.0 => this_4(D)
  # DEBUG thisD.40532 => D#135ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0
  # DEBUG D#133ptD.0 => &D#134ptD.0->D.34311
  # DEBUG thisD.40522 => D#133ptD.0
  # DEBUG __aD.40514 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#131ptD.0
  # DEBUG thisD.40505 => D#130ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG thisD.42253 => D#5ptD.0
  # DEBUG thisD.42254 => D#5ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2860 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG thisD.40550 => D#5ptD.0
  # DEBUG thisD.40549 => D#5ptD.0
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG thisD.40545 => D#5ptD.0
  # DEBUG thisD.40544 => D#5ptD.0
  # DEBUG __aD.42252 => &D.42256
  # DEBUG __bD.42251 => &__nD.42248
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.42250 => __len_124
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG D#5ptD.0 => this_4(D)
  # DEBUG thisD.40537 => D#5ptD.0
  # DEBUG thisD.40536 => D#5ptD.0
  # DEBUG D#135ptD.0 => this_4(D)
  # DEBUG thisD.40552 => D#135ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0
  # DEBUG D#133ptD.0 => &D#134ptD.0->D.34311
  # DEBUG thisD.40522 => D#133ptD.0
  # DEBUG __aD.40514 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#131ptD.0
  # DEBUG thisD.40505 => D#130ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.38367 => NULL
  # DEBUG thisD.41784 => this_4(D)
  # DEBUG D#28ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41786 => NULL
  # DEBUG __iD.41785 => D#28ptD.0
  # DEBUG __lhsD.41781 => &__positionD.34236
  # DEBUG __rhsD.41782 => &D.38369
  # DEBUG thisD.39755 => &__positionD.34236
  # DEBUG thisD.39753 => &D.38369
  # DEBUG D#226ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.38368 => (const size_typeD.33887) D#226ptD.0
  # DEBUG D#225ptD.0 => &this_4(D)->D.34311
  # DEBUG D#143ptD.0 => D#225ptD.0
  # DEBUG __nD.42238 => NULL
  # DEBUG thisD.42239 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  # DEBUG D#141ptD.0 => &D#142ptD.0->_M_implD.33802
  # DEBUG D#140ptD.0 => D#141ptD.0
  # DEBUG __nD.42242 => NULL
  # DEBUG __aD.42241 => D#140ptD.0
  # DEBUG D#139ptD.0 => D#140ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D#138ptD.0 => 0B
  # DEBUG __nD.42245 => NULL
  # DEBUG thisD.42243 => D#137ptD.0
  # DEBUG D.42244 => D#138ptD.0
  # DEBUG D#136ptD.0 => D#137ptD.0
  # DEBUG D#130ptD.0 => D#136ptD.0
  # DEBUG thisD.40557 => D#130ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.42259 } (escaped heap)
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.34311._M_implD.33802._M_startD.33804;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.34311._M_implD.33802._M_finishD.33805;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 52, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.42259 } (escaped heap)
  # iftmp.14_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.42259 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
;;    succ:       52 [100.0%]  (FALLTHRU)

;;   basic block 52, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 33, next block 34, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # DEBUG __new_startD.38370 => NULL
  # DEBUG __new_finishD.38371 => NULL
  # DEBUG D#209ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41779 => D#209ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.42259 } (escaped heap)
  __first_20 = iftmp.14_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#121ptD.0 => __x_21(D)
  # DEBUG __firstD.41757 => __first_20
  # DEBUG __nD.41758 => __n_2(D)
  # DEBUG D#120ptD.0 => D#121ptD.0
  # DEBUG __xD.41761 => D#120ptD.0
  # DEBUG D.41760 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#120ptD.0
  # DEBUG __firstD.41764 => __first_20
  # DEBUG __nD.41763 => __n_2(D)
  # DEBUG D#118ptD.0 => D#119ptD.0
  # DEBUG __xD.41762 => D#118ptD.0
  # DEBUG __assignableD.41766 => 1
  # DEBUG D#117ptD.0 => D#118ptD.0
  # DEBUG __firstD.41769 => __first_20
  # DEBUG __nD.41768 => __n_2(D)
  # DEBUG D#116ptD.0 => D#117ptD.0
  # DEBUG __xD.41767 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#116ptD.0
  # DEBUG __firstD.41772 => __first_20
  # DEBUG __nD.41771 => __n_2(D)
  # DEBUG D#114ptD.0 => D#115ptD.0
  # DEBUG __valueD.41770 => D#114ptD.0
  # DEBUG __itD.40218 => __first_20
  # DEBUG __itD.40184 => __first_20
  # DEBUG D#111ptD.0 => D#114ptD.0
  # DEBUG __firstD.41775 => __first_20
  # DEBUG __nD.41774 => __n_2(D)
  # DEBUG __valueD.41773 => D#111ptD.0
  # DEBUG __tmpD.41776 => _56
  # DEBUG __niterD.41777 => __n_2(D)
  # DEBUG __niterD.41777 => __n_2(D)
  # DEBUG __firstD.41775 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 52, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
  # PT = null { D.42259 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(52)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
  # DEBUG __niterD.41777 => __n_132
  # DEBUG __firstD.41775 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.41777 => __n_79
  # PT = null { D.42259 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.41775 => __first_80
  # DEBUG __niterD.41777 => __n_79
  # DEBUG __firstD.41775 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 51, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU)

;;   basic block 51, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 36, next block 37, flags: (NEW)
;;    pred:       36 [100.0%]  (FALLTHRU)
  # DEBUG __new_finishD.38371 => 0B
  # DEBUG D#210ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41755 => D#210ptD.0
  # DEBUG thisD.41753 => &__positionD.34236
  # DEBUG D#249ptD.0 => this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.41718 => D#249ptD.0
  # DEBUG __lastD.41719 => D#250ptD.0
  # DEBUG __resultD.41720 => NULL
  # DEBUG __allocD.41721 => D#207ptD.0
  # DEBUG D#206ptD.0 => D#207ptD.0
  # DEBUG D#203ptD.0 => D#206ptD.0
  # DEBUG __firstD.41725 => D#249ptD.0
  # DEBUG __lastD.41724 => D#250ptD.0
  # DEBUG __resultD.41723 => NULL
  # DEBUG D.41722 => D#203ptD.0
  # DEBUG __firstD.41728 => D#249ptD.0
  # DEBUG __lastD.41727 => D#250ptD.0
  # DEBUG __resultD.41726 => NULL
  # DEBUG __assignableD.41731 => 1
  # DEBUG __firstD.41734 => D#249ptD.0
  # DEBUG __lastD.41733 => D#250ptD.0
  # DEBUG __resultD.41732 => NULL
  # DEBUG __firstD.41737 => D#249ptD.0
  # DEBUG __lastD.41736 => D#250ptD.0
  # DEBUG __resultD.41735 => NULL
  # DEBUG __itD.41283 => D#250ptD.0
  # DEBUG __itD.40181 => D#250ptD.0
  # DEBUG __itD.41281 => D#249ptD.0
  # DEBUG __itD.40181 => D#249ptD.0
  # DEBUG __firstD.41740 => D#249ptD.0
  # DEBUG __lastD.41739 => D#250ptD.0
  # DEBUG __resultD.41738 => NULL
  # DEBUG __itD.41263 => NULL
  # DEBUG __itD.40184 => NULL
  # DEBUG __itD.41261 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG __itD.41259 => D#249ptD.0
  # DEBUG __itD.40184 => D#249ptD.0
  # DEBUG __firstD.41743 => D#249ptD.0
  # DEBUG __lastD.41742 => D#250ptD.0
  # DEBUG __resultD.41741 => NULL
  # DEBUG __simpleD.41747 => 1
  # DEBUG __firstD.41750 => D#249ptD.0
  # DEBUG __lastD.41749 => D#250ptD.0
  # DEBUG __resultD.41748 => NULL
  # DEBUG D#248ptD.0 => (long intD.12) D#249ptD.0
  # DEBUG D#247ptD.0 => _158 - D#248ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.41751 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 51, next block 38, flags: (NEW)
;;    pred:       51 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       51 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  memmoveD.995 (iftmp.14_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#246ptD.0 => (long unsigned intD.14) D#247ptD.0
  # DEBUG __new_finishD.38371 => iftmp.14_113 + D#246ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.42259 } (escaped heap)
  __new_finish_26 = iftmp.14_113 + _133;
  # DEBUG __new_finishD.38371 => __new_finish_26
  # DEBUG D#211ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41716 => D#211ptD.0
  # DEBUG D#245ptD.0 => this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41714 => &__positionD.34236
  # DEBUG __firstD.41679 => D#250ptD.0
  # DEBUG __lastD.41680 => D#245ptD.0
  # DEBUG __resultD.41681 => __new_finish_26
  # DEBUG __allocD.41682 => D#207ptD.0
  # DEBUG D#206ptD.0 => D#207ptD.0
  # DEBUG D#203ptD.0 => D#206ptD.0
  # DEBUG __firstD.41686 => D#250ptD.0
  # DEBUG __lastD.41685 => D#245ptD.0
  # DEBUG __resultD.41684 => __new_finish_26
  # DEBUG D.41683 => D#203ptD.0
  # DEBUG __firstD.41689 => D#250ptD.0
  # DEBUG __lastD.41688 => D#245ptD.0
  # DEBUG __resultD.41687 => __new_finish_26
  # DEBUG __assignableD.41692 => 1
  # DEBUG __firstD.41695 => D#250ptD.0
  # DEBUG __lastD.41694 => D#245ptD.0
  # DEBUG __resultD.41693 => __new_finish_26
  # DEBUG __firstD.41698 => D#250ptD.0
  # DEBUG __lastD.41697 => D#245ptD.0
  # DEBUG __resultD.41696 => __new_finish_26
  # DEBUG __itD.41283 => D#245ptD.0
  # DEBUG __itD.40181 => D#245ptD.0
  # DEBUG __itD.41281 => D#250ptD.0
  # DEBUG __itD.40181 => D#250ptD.0
  # DEBUG __firstD.41701 => D#250ptD.0
  # DEBUG __lastD.41700 => D#245ptD.0
  # DEBUG __resultD.41699 => __new_finish_26
  # DEBUG __itD.41263 => __new_finish_26
  # DEBUG __itD.40184 => __new_finish_26
  # DEBUG __itD.41261 => D#245ptD.0
  # DEBUG __itD.40184 => D#245ptD.0
  # DEBUG __itD.41259 => D#250ptD.0
  # DEBUG __itD.40184 => D#250ptD.0
  # DEBUG __firstD.41704 => D#250ptD.0
  # DEBUG __lastD.41703 => D#245ptD.0
  # DEBUG __resultD.41702 => __new_finish_26
  # DEBUG __simpleD.41708 => 1
  # DEBUG __firstD.41711 => D#250ptD.0
  # DEBUG __lastD.41710 => D#245ptD.0
  # DEBUG __resultD.41709 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.41712 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.42259 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.38371 => _70
  # DEBUG D#212ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41677 => D#212ptD.0
  # DEBUG D#224ptD.0 => this_4(D)->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#223ptD.0 => this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.41674 => D#223ptD.0
  # DEBUG __lastD.41675 => D#224ptD.0
  # DEBUG D.41676 => NULL
  # DEBUG D#22ptD.0 => D#223ptD.0
  # DEBUG D#23ptD.0 => D#224ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#222ptD.0 => this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#221ptD.0 => (long intD.12) D#222ptD.0
  # DEBUG D#220ptD.0 => (long intD.12) D#249ptD.0
  # DEBUG D#219ptD.0 => D#221ptD.0 - D#220ptD.0
  # DEBUG D#218ptD.0 => D#219ptD.0 /[ex] 4
  # DEBUG D#217ptD.0 => (long unsigned intD.14) D#218ptD.0
  # DEBUG D#216ptD.0 => &this_4(D)->D.34311
  # DEBUG thisD.41664 => D#216ptD.0
  # DEBUG __pD.41665 => D#249ptD.0
  # DEBUG __nD.41666 => D#217ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#216ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#217ptD.0
  # DEBUG __pD.41670 => D#249ptD.0
  # DEBUG __aD.41668 => D#69ptD.0
  # DEBUG __nD.41669 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.41673 => D#249ptD.0
  # DEBUG thisD.41671 => D#65ptD.0
  # DEBUG D.41672 => D#66ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.42259 } (escaped heap)
  # CLB = nonlocal null { D.42259 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 53, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
;;    succ:       53 [100.0%]  (FALLTHRU)

;;   basic block 53, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 44, next block 45, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU)
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.34311._M_implD.33802._M_startD.33804 = iftmp.14_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.34311._M_implD.33802._M_finishD.33805 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.34311._M_implD.33802._M_end_of_storageD.33806 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 53, next block 54, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>
;;    succ:       54 [100.0%]  (FALLTHRU)

;;   basic block 54, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 45, next block 46, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 54, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.38367 => NULL
  # DEBUG thisD.41784 => this_4(D)
  # DEBUG D#28ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41786 => NULL
  # DEBUG __iD.41785 => D#28ptD.0
  # DEBUG __lhsD.41781 => &__positionD.34236
  # DEBUG __rhsD.41782 => &D.38369
  # DEBUG thisD.39755 => &__positionD.34236
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.39753 => &D.38369
  _143 = _144 - _116;
  # DEBUG D#226ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.38368 => (const size_typeD.33887) D#226ptD.0
  # DEBUG D#225ptD.0 => &this_4(D)->D.34311
  # DEBUG D#143ptD.0 => D#225ptD.0
  # DEBUG __nD.42238 => NULL
  # DEBUG thisD.42239 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.38367 => NULL
  # DEBUG thisD.41784 => this_4(D)
  # DEBUG D#28ptD.0 => &this_4(D)->D.34311._M_implD.33802._M_startD.33804
  # DEBUG thisD.41786 => NULL
  # DEBUG __iD.41785 => D#28ptD.0
  # DEBUG __lhsD.41781 => &__positionD.34236
  # DEBUG __rhsD.41782 => &D.38369
  # DEBUG thisD.39755 => &__positionD.34236
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.39753 => &D.38369
  _150 = _151 - _116;
  # DEBUG D#226ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.38368 => (const size_typeD.33887) D#226ptD.0
  # DEBUG D#225ptD.0 => &this_4(D)->D.34311
  # DEBUG D#143ptD.0 => D#225ptD.0
  # DEBUG __nD.42238 => NULL
  # DEBUG thisD.42239 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#143ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function MaxSizeMatch::MaxSizeMatch(Module*, const string&, int, int) (_ZN12MaxSizeMatchC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii, funcdef_no=1715, decl_uid=36944, cgraph_uid=418, symbol_order=419)


Pass statistics:
----------------

MaxSizeMatch::MaxSizeMatch(Module*, const string&, int, int) (struct MaxSizeMatchD.36919 * const thisD.36945, struct ModuleD.28688 * parentD.36946, const struct stringD.2845 & nameD.36947, intD.9 inputsD.36948, intD.9 outputsD.36949)
Eh tree:
   1 cleanup land:{1,<L7>}
     2 cleanup land:{4,<L9>},{3,<L8>},{2,<L10>}
{
  struct vectorD.34419 * __firstD.42395;
  struct iteratorD.33879 __positionD.42357;
  value_typeD.33874 __xD.42352;
  size_tD.2818 iftmp.0_1;
  size_tD.2818 iftmp.1_2;
  struct DenseAllocatorD.34416 * _5;
  intD.9 * _13;
  long unsigned intD.14 _14;
  struct vectorD.33506 * _15;
  intD.9 * _16;
  sizetype _17;
  size_tD.2818 iftmp.0_18;
  voidD.45 * _20;
  size_tD.2818 iftmp.1_22;
  voidD.45 * _24;
  struct ModuleD.28688 * * _40;
  struct vectorD.34419 * _41;
  intD.9 * _53;
  struct sRequestD.34315 * _57;
  struct vectorD.34419 * _59;
  charD.10 * const _60;
  const charD.10 * _61;
  charD.10 * const _62;
  const charD.10 * _63;

;;   basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _5 = &this_4(D)->D.36959;
  # .MEM_11 = VDEF <.MEM_6(D)>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZN14DenseAllocatorC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiD.35229 (_5, parent_7(D), name_8(D), inputs_9(D), outputs_10(D));
  # .MEM_12 = VDEF <.MEM_11>
  this_4(D)->D.36959.D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV12MaxSizeMatchD.36965 + 16B];
  # DEBUG D#229ptD.0 => &this_4(D)->_fromD.36921
  # DEBUG thisD.41827 => D#229ptD.0
  # DEBUG D#103ptD.0 => &D#229ptD.0->D.34311
  # DEBUG thisD.41828 => D#103ptD.0
  # DEBUG D#102ptD.0 => &D#103ptD.0->_M_implD.33802
  # DEBUG thisD.41829 => D#102ptD.0
  # DEBUG thisD.40140 => D#102ptD.0
  # DEBUG thisD.40138 => D#102ptD.0
  # .MEM_30 = VDEF <.MEM_12>
  MEM[(struct _Vector_implD.33779 *)this_4(D) + 184B]._M_startD.33804 = 0B;
  # .MEM_31 = VDEF <.MEM_30>
  MEM[(struct _Vector_implD.33779 *)this_4(D) + 184B]._M_finishD.33805 = 0B;
  # .MEM_32 = VDEF <.MEM_31>
  MEM[(struct _Vector_implD.33779 *)this_4(D) + 184B]._M_end_of_storageD.33806 = 0B;
  # RANGE ~[2147483648, 18446744071562067967]
  _14 = (long unsigned intD.14) outputs_10(D);
  # DEBUG D#316ptD.0 => &this_4(D)->_fromD.36921
  # DEBUG thisD.42350 => D#316ptD.0
  # DEBUG __new_sizeD.42351 => _14
  # .MEM_73 = VDEF <.MEM_32>
  __xD.42352 = 0;
  # DEBUG __xD.42352 => __xD.42352
  # DEBUG D#5ptD.0 => D#316ptD.0
  # DEBUG D#5ptD.0 => D#316ptD.0
  # DEBUG thisD.42359 => D#5ptD.0
  # DEBUG thisD.42360 => D#5ptD.0
  if (_14 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [79.3%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_78 = PHI <.MEM_73(2), .MEM_76(4)>
  # RANGE ~[2147483648, 18446744071562067967]
  _17 = (sizetype) inputs_9(D);
  if (_17 <= 2287828610704211968)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#5ptD.0 => D#316ptD.0
  # DEBUG D#5ptD.0 => D#316ptD.0
  # DEBUG thisD.41814 => D#5ptD.0
  # DEBUG thisD.41813 => D#5ptD.0
  # DEBUG thisD.41807 => D#316ptD.0
  # DEBUG D#6ptD.0 => &D#316ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41809 => NULL
  # DEBUG __iD.41808 => D#6ptD.0
  # DEBUG thisD.42358 => D#316ptD.0
  # .MEM_75 = VDEF <.MEM_73>
  MEM[(struct __normal_iteratorD.33880 *)&__positionD.42357] = 0B;
  # DEBUG __nD.42356 => _14
  # DEBUG __xD.42355 => &__xD.42352
  # PT = nonlocal 
  _15 = &this_4(D)->_fromD.36921;
  [LP 3] # .MEM_76 = VDEF <.MEM_75>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34234 (_15, __positionD.42357, _14, &__xD.42352);
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 (EH,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 5000, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 8589934588] NONZERO 8589934588
  iftmp.0_18 = _17 * 4;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[8589934589, 18446744073709551614]
  # iftmp.0_1 = PHI <iftmp.0_18(5), 18446744073709551615(3)>
  [LP 4] # .MEM_19 = VDEF <.MEM_78>
  # PT = { D.42483 } (escaped heap)
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _20 = _ZnamD.2765 (iftmp.0_1);
  goto <bb 8>;
;;    succ:       7 (EH,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 (EH,EXECUTABLE)
<L9>: [LP 4]
  goto <bb 14> (<L6>);
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_21 = VDEF <.MEM_19>
  this_4(D)->_sD.36922 = _20;
  if (_17 <= 2287828610704211968)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 5000, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 8589934588] NONZERO 8589934588
  iftmp.1_22 = _17 * 4;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[8589934589, 18446744073709551614]
  # iftmp.1_2 = PHI <iftmp.1_22(9), 18446744073709551615(8)>
  [LP 2] # .MEM_23 = VDEF <.MEM_21>
  # PT = { D.42484 } (escaped heap)
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _24 = _ZnamD.2765 (iftmp.1_2);
  goto <bb 12>;
;;    succ:       11 (EH,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 0
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 (EH,EXECUTABLE)
<L10>: [LP 2]
  goto <bb 14> (<L6>);
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = VDEF <.MEM_23>
  this_4(D)->_nsD.36923 = _24;
  # .MEM_26 = VDEF <.MEM_25>
  this_4(D)->_prioD.36924 = 0;
  # VUSE <.MEM_26>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 13, loop depth 0, count 0, freq 0
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       4 (EH,EXECUTABLE)
<L8>: [LP 3]
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_76(13), .MEM_19(7), .MEM_23(11)>
<L6>:
  # DEBUG D#228ptD.0 => &this_4(D)->_fromD.36921
  # DEBUG thisD.41830 => D#228ptD.0
  # DEBUG D#79ptD.0 => &D#228ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#228ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#228ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#228ptD.0->D.34311
  # DEBUG thisD.41831 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _13 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 184B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _13
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.41834 => D#80ptD.0
  # DEBUG __pD.41833 => _13
  # DEBUG __nD.41832 => D#73ptD.0
  if (_13 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 0
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.41838 => _13
  # DEBUG __aD.41836 => D#69ptD.0
  # DEBUG __nD.41837 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.41841 => _13
  # DEBUG thisD.41839 => D#65ptD.0
  # DEBUG D.41840 => D#66ptD.0
  # .MEM_33 = VDEF <.MEM_3>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_13);
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_3(14), .MEM_33(15)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.41842 => D#72ptD.0
  # DEBUG thisD.41843 => D#72ptD.0
  # DEBUG thisD.41844 => D#72ptD.0
  # .MEM_38 = VDEF <.MEM_28>
  MEM[(struct  &)this_4(D) + 184] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       17 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 (EH,EXECUTABLE)
<L7>: [LP 1]
  # DEBUG D#227ptD.0 => &this_4(D)->D.36959
  # DEBUG thisD.41845 => D#227ptD.0
  # .MEM_39 = VDEF <.MEM_38>
  MEM[(struct DenseAllocatorD.34416 *)this_4(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#315ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_4(D)]._requestD.35166
  # DEBUG thisD.42392 => D#315ptD.0
  # DEBUG D#199ptD.0 => &D#315ptD.0->D.35164
  # DEBUG thisD.41216 => D#199ptD.0
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  _41 = MEM[(struct vectorD.34421 *)this_4(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  __first_55 = MEM[(struct vectorD.34421 *)this_4(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.42395 => __first_55
  # DEBUG __lastD.42394 => _41
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_56 = PHI <__first_55(17), __first_58(21)>
  # .MEM_65 = PHI <.MEM_39(17), .MEM_82(21)>
  # DEBUG __firstD.42400 => __first_56
  if (_41 == __first_56)
    goto <bb 22>;
  else
    goto <bb 19>;
;;    succ:       22 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.41106 => __first_56
  # DEBUG __pointerD.42401 => NULL
  # DEBUG thisD.42402 => NULL
  # DEBUG thisD.41071 => D#194ptD.0
  # DEBUG D#174ptD.0 => D#196ptD.0
  # DEBUG D#175ptD.0 => D#197ptD.0
  # DEBUG __firstD.41070 => D#174ptD.0
  # DEBUG __lastD.41069 => D#175ptD.0
  # DEBUG D.41068 => D#176ptD.0
  # DEBUG D#173ptD.0 => D#175ptD.0
  # DEBUG D#172ptD.0 => D#174ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => D#173ptD.0
  # DEBUG __firstD.40982 => D#170ptD.0
  # DEBUG __lastD.40981 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0
  # DEBUG D#168ptD.0 => D#170ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0
  # DEBUG D#167ptD.0 => D#169ptD.0
  # DEBUG D.40971 => D#166ptD.0
  # DEBUG D.40970 => D#167ptD.0
  # DEBUG thisD.42403 => D#195ptD.0
  # DEBUG D#193ptD.0 => D#195ptD.0->_M_implD.37294._M_end_of_storageD.37298
  # DEBUG D#192ptD.0 => (long intD.12) D#193ptD.0
  # VUSE <.MEM_65>
  # PT = nonlocal escaped 
  _57 = MEM[(struct _Vector_baseD.37061 *)__first_56]._M_implD.37294._M_startD.37296;
  # DEBUG D#191ptD.0 => (long intD.12) _57
  # DEBUG D#190ptD.0 => D#192ptD.0 - D#191ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0 /[ex] 16
  # DEBUG D#186ptD.0 => D#195ptD.0
  # DEBUG D#187ptD.0 => (long unsigned intD.14) D#189ptD.0
  # DEBUG __pD.42406 => _57
  # DEBUG thisD.42404 => D#186ptD.0
  # DEBUG __nD.42405 => D#187ptD.0
  # DEBUG D#185ptD.0 => D#187ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0
  if (_57 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 0
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#183ptD.0 => &D#184ptD.0->_M_implD.37294
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#185ptD.0
  # DEBUG __pD.42410 => _57
  # DEBUG __aD.42408 => D#181ptD.0
  # DEBUG __nD.42409 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.42413 => _57
  # DEBUG thisD.42411 => D#177ptD.0
  # DEBUG D.42412 => D#178ptD.0
  # .MEM_77 = VDEF <.MEM_65>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_57);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 0
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_66 = PHI <.MEM_65(19), .MEM_77(20)>
  # DEBUG D#188ptD.0 => &D#195ptD.0->_M_implD.37294
  # DEBUG thisD.42414 => D#188ptD.0
  # DEBUG thisD.42415 => D#188ptD.0
  # DEBUG thisD.42416 => D#188ptD.0
  # .MEM_82 = VDEF <.MEM_66>
  MEM[(struct  &)__first_56] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_58 = __first_56 + 24;
  # DEBUG __firstD.42400 => __first_58
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#200ptD.0 => &D#315ptD.0->D.35164
  # DEBUG thisD.42417 => D#200ptD.0
  # DEBUG D#101ptD.0 => D#200ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#100ptD.0 => (long intD.12) D#101ptD.0
  # VUSE <.MEM_65>
  # PT = nonlocal escaped 
  _59 = MEM[(struct _Vector_baseD.34422 *)this_4(D) + 160B]._M_implD.34655._M_startD.34657;
  # DEBUG D#99ptD.0 => (long intD.12) _59
  # DEBUG D#98ptD.0 => D#100ptD.0 - D#99ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0 /[ex] 24
  # DEBUG D#94ptD.0 => D#200ptD.0
  # DEBUG D#95ptD.0 => (long unsigned intD.14) D#97ptD.0
  # DEBUG __pD.42420 => _59
  # DEBUG thisD.42418 => D#94ptD.0
  # DEBUG __nD.42419 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  if (_59 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#91ptD.0 => &D#92ptD.0->_M_implD.34655
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#93ptD.0
  # DEBUG __pD.42424 => _59
  # DEBUG __aD.42422 => D#89ptD.0
  # DEBUG __nD.42423 => D#90ptD.0
  # DEBUG D#88ptD.0 => D#90ptD.0
  # DEBUG D#87ptD.0 => D#89ptD.0
  # DEBUG D#85ptD.0 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#88ptD.0
  # DEBUG __pD.42427 => _59
  # DEBUG thisD.42425 => D#85ptD.0
  # DEBUG D.42426 => D#86ptD.0
  # .MEM_83 = VDEF <.MEM_65>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_59);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_67 = PHI <.MEM_65(22), .MEM_83(23)>
  # DEBUG D#96ptD.0 => &D#200ptD.0->_M_implD.34655
  # DEBUG thisD.42428 => D#96ptD.0
  # DEBUG thisD.42429 => D#96ptD.0
  # DEBUG thisD.42430 => D#96ptD.0
  # .MEM_88 = VDEF <.MEM_67>
  MEM[(struct  &)this_4(D) + 160] ={v} {CLOBBER};
  # DEBUG D#314ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_4(D)].D.35235
  # DEBUG thisD.42361 => D#314ptD.0
  # .MEM_89 = VDEF <.MEM_88>
  MEM[(struct AllocatorD.33564 *)this_4(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#84ptD.0 => &D#314ptD.0->_outmatchD.34314
  # DEBUG thisD.42362 => D#84ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.42363 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_89>
  # PT = nonlocal escaped 
  _16 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _16
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.42366 => D#80ptD.0
  # DEBUG __pD.42365 => _16
  # DEBUG __nD.42364 => D#73ptD.0
  if (_16 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.42370 => _16
  # DEBUG __aD.42368 => D#69ptD.0
  # DEBUG __nD.42369 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.42373 => _16
  # DEBUG thisD.42371 => D#65ptD.0
  # DEBUG D.42372 => D#66ptD.0
  # .MEM_90 = VDEF <.MEM_89>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_68 = PHI <.MEM_89(24), .MEM_90(25)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.42374 => D#72ptD.0
  # DEBUG thisD.42375 => D#72ptD.0
  # DEBUG thisD.42376 => D#72ptD.0
  # .MEM_95 = VDEF <.MEM_68>
  MEM[(struct  &)this_4(D) + 136] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#314ptD.0->_inmatchD.34313
  # DEBUG thisD.42377 => D#83ptD.0
  # DEBUG D#79ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.42378 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _53 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _53
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.42381 => D#80ptD.0
  # DEBUG __pD.42380 => _53
  # DEBUG __nD.42379 => D#73ptD.0
  if (_53 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.42385 => _53
  # DEBUG __aD.42383 => D#69ptD.0
  # DEBUG __nD.42384 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.42388 => _53
  # DEBUG thisD.42386 => D#65ptD.0
  # DEBUG D.42387 => D#66ptD.0
  # .MEM_96 = VDEF <.MEM_95>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_53);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_69 = PHI <.MEM_95(26), .MEM_96(27)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.42389 => D#72ptD.0
  # DEBUG thisD.42390 => D#72ptD.0
  # DEBUG thisD.42391 => D#72ptD.0
  # .MEM_101 = VDEF <.MEM_69>
  MEM[(struct  &)this_4(D) + 112] ={v} {CLOBBER};
  # DEBUG D#313ptD.0 => &MEM[(struct AllocatorD.33564 *)this_4(D)].D.34407
  # DEBUG thisD.42431 => D#313ptD.0
  # .MEM_102 = VDEF <.MEM_101>
  MEM[(struct ModuleD.28688 *)this_4(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#64ptD.0 => &D#313ptD.0->_childrenD.29438
  # DEBUG thisD.42432 => D#64ptD.0
  # DEBUG D#58ptD.0 => &D#64ptD.0->D.29436
  # DEBUG thisD.39929 => D#58ptD.0
  # DEBUG D#61ptD.0 => D#64ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#60ptD.0 => D#64ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#15ptD.0 => D#60ptD.0
  # DEBUG D#16ptD.0 => D#61ptD.0
  # DEBUG __firstD.39928 => D#15ptD.0
  # DEBUG __lastD.39927 => D#16ptD.0
  # DEBUG D.39926 => D#17ptD.0
  # DEBUG D#14ptD.0 => D#16ptD.0
  # DEBUG D#13ptD.0 => D#15ptD.0
  # DEBUG D#11ptD.0 => D#13ptD.0
  # DEBUG D#12ptD.0 => D#14ptD.0
  # DEBUG __firstD.39690 => D#11ptD.0
  # DEBUG __lastD.39689 => D#12ptD.0
  # DEBUG D#10ptD.0 => D#12ptD.0
  # DEBUG D#9ptD.0 => D#11ptD.0
  # DEBUG D#7ptD.0 => D#9ptD.0
  # DEBUG D#8ptD.0 => D#10ptD.0
  # DEBUG D.39679 => D#7ptD.0
  # DEBUG D.39678 => D#8ptD.0
  # DEBUG D#59ptD.0 => &D#64ptD.0->D.29436
  # DEBUG thisD.42433 => D#59ptD.0
  # DEBUG D#57ptD.0 => D#59ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#56ptD.0 => (long intD.12) D#57ptD.0
  # VUSE <.MEM_102>
  # PT = nonlocal escaped 
  _40 = MEM[(struct _Vector_baseD.28694 *)this_4(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#55ptD.0 => (long intD.12) _40
  # DEBUG D#54ptD.0 => D#56ptD.0 - D#55ptD.0
  # DEBUG D#53ptD.0 => D#54ptD.0 /[ex] 8
  # DEBUG D#50ptD.0 => D#59ptD.0
  # DEBUG D#51ptD.0 => (long unsigned intD.14) D#53ptD.0
  # DEBUG __pD.42436 => _40
  # DEBUG thisD.42434 => D#50ptD.0
  # DEBUG __nD.42435 => D#51ptD.0
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  if (_40 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#47ptD.0 => &D#48ptD.0->_M_implD.28927
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#49ptD.0
  # DEBUG __pD.42440 => _40
  # DEBUG __aD.42438 => D#45ptD.0
  # DEBUG __nD.42439 => D#46ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG __pD.42443 => _40
  # DEBUG thisD.42441 => D#41ptD.0
  # DEBUG D.42442 => D#42ptD.0
  # .MEM_103 = VDEF <.MEM_102>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 0
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_70 = PHI <.MEM_102(28), .MEM_103(29)>
  # DEBUG D#52ptD.0 => &D#59ptD.0->_M_implD.28927
  # DEBUG thisD.42444 => D#52ptD.0
  # DEBUG thisD.42445 => D#52ptD.0
  # DEBUG thisD.42446 => D#52ptD.0
  # .MEM_108 = VDEF <.MEM_70>
  MEM[(struct  &)this_4(D) + 72] ={v} {CLOBBER};
  # DEBUG D#63ptD.0 => &D#313ptD.0->_fullnameD.28691
  # DEBUG thisD.42447 => D#63ptD.0
  # DEBUG thisD.42448 => D#63ptD.0
  # DEBUG thisD.42457 => D#63ptD.0
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _60 = MEM[(charD.10 * *)this_4(D) + 40B];
  # DEBUG D#1ptD.0 => D#63ptD.0
  # DEBUG thisD.39612 => D#1ptD.0
  # DEBUG thisD.42458 => D#63ptD.0
  # PT = nonlocal 
  _61 = &MEM[(const struct basic_stringD.2844 *)this_4(D) + 40B].D.11539._M_local_bufD.11541;
  if (_60 != _61)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 0
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#39ptD.0 => MEM[(struct basic_stringD.2844 *)D#63ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#38ptD.0 => D#39ptD.0
  # DEBUG thisD.42450 => D#63ptD.0
  # DEBUG __sizeD.42449 => D#38ptD.0
  # DEBUG D#37ptD.0 => D#38ptD.0
  # DEBUG D#1ptD.0 => D#63ptD.0
  # DEBUG thisD.39811 => D#1ptD.0
  # DEBUG thisD.39812 => D#63ptD.0
  # DEBUG D#36ptD.0 => &MEM[(struct basic_stringD.2844 *)D#63ptD.0]._M_dataplusD.11519
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0 + 1
  # DEBUG __pD.42453 => _60
  # DEBUG __aD.42451 => D#34ptD.0
  # DEBUG __nD.42452 => D#35ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG __pD.42456 => _60
  # DEBUG thisD.42454 => D#30ptD.0
  # DEBUG D.42455 => D#31ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_60);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 0
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_108(30), .MEM_109(31)>
  # DEBUG D#40ptD.0 => &MEM[(struct basic_stringD.2844 *)D#63ptD.0]._M_dataplusD.11519
  # DEBUG thisD.42459 => D#40ptD.0
  # DEBUG thisD.42460 => D#40ptD.0
  # DEBUG thisD.42461 => D#40ptD.0
  # .MEM_113 = VDEF <.MEM_71>
  MEM[(struct  &)this_4(D) + 40] ={v} {CLOBBER};
  # DEBUG D#62ptD.0 => &D#313ptD.0->_nameD.28690
  # DEBUG thisD.42462 => D#62ptD.0
  # DEBUG thisD.42463 => D#62ptD.0
  # DEBUG thisD.42472 => D#62ptD.0
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  _62 = MEM[(charD.10 * *)this_4(D) + 8B];
  # DEBUG D#1ptD.0 => D#62ptD.0
  # DEBUG thisD.39612 => D#1ptD.0
  # DEBUG thisD.42473 => D#62ptD.0
  # PT = nonlocal 
  _63 = &MEM[(const struct basic_stringD.2844 *)this_4(D) + 8B].D.11539._M_local_bufD.11541;
  if (_62 != _63)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 0
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#39ptD.0 => MEM[(struct basic_stringD.2844 *)D#62ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#38ptD.0 => D#39ptD.0
  # DEBUG thisD.42465 => D#62ptD.0
  # DEBUG __sizeD.42464 => D#38ptD.0
  # DEBUG D#37ptD.0 => D#38ptD.0
  # DEBUG D#1ptD.0 => D#62ptD.0
  # DEBUG thisD.39811 => D#1ptD.0
  # DEBUG thisD.39812 => D#62ptD.0
  # DEBUG D#36ptD.0 => &MEM[(struct basic_stringD.2844 *)D#62ptD.0]._M_dataplusD.11519
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0 + 1
  # DEBUG __pD.42468 => _62
  # DEBUG __aD.42466 => D#34ptD.0
  # DEBUG __nD.42467 => D#35ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG __pD.42471 => _62
  # DEBUG thisD.42469 => D#30ptD.0
  # DEBUG D.42470 => D#31ptD.0
  # .MEM_114 = VDEF <.MEM_113>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_62);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0
;;    prev block 33, next block 1, flags: (NEW, REACHABLE)
;;    pred:       32 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_72 = PHI <.MEM_113(32), .MEM_114(33)>
  # DEBUG D#40ptD.0 => &MEM[(struct basic_stringD.2844 *)D#62ptD.0]._M_dataplusD.11519
  # DEBUG thisD.42474 => D#40ptD.0
  # DEBUG thisD.42475 => D#40ptD.0
  # DEBUG thisD.42476 => D#40ptD.0
  # .MEM_42 = VDEF <.MEM_72>
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for MEM[(struct _Vector_base *)this_4(D) + 184B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_4(D) + 184B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct DenseAllocator *)this_4(D)].D.35235.D.34407._vptr.Module
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct DenseAllocator *)this_4(D)]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_4(D) + 160B].D.35164._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 168
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_4(D) + 160B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_4(D) + 160B].D.35164._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_4(D) + 160B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Vector_base *)__first_56]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_55
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_55]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_56]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_55
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_55]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_55, + , 24](no_overflow) != _41
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551615
  result:
    under assumptions ((unsigned long) _41 - (unsigned long) __first_55 & 7) == 0
    # of iterations (((unsigned long) _41 - (unsigned long) __first_55) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)__first_56]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_55
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_55]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_56]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_55
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_55]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_55, + , 24](no_overflow) != _41
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551615
  result:
    under assumptions ((unsigned long) _41 - (unsigned long) __first_55 & 7) == 0
    # of iterations (((unsigned long) _41 - (unsigned long) __first_55) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)this_4(D) + 160B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_4(D) + 160B]
	Access function 0: 0
	Access function 1: 0
Creating dr for this_4(D)->_s
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 208
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1664
Creating dr for this_4(D)->_ns
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1728
Creating dr for this_4(D)->_prio
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1792

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:12)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:3, LOOPS:0, CONDITIONS:1, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:3, LOOPS:0, CONDITIONS:1, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:39, LOOPS:1, CONDITIONS:15, STMTS:453)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    _5 = &this_4(D)->D.36959;
    # .MEM_11 = VDEF <.MEM_6(D)>
    DenseAllocator::DenseAllocator (_5, parent_7(D), name_8(D), inputs_9(D), outputs_10(D));
    # .MEM_12 = VDEF <.MEM_11>
    this_4(D)->D.36959.D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV12MaxSizeMatch + 16B];
    # DEBUG D#229 => &this_4(D)->_from
    # DEBUG this => D#229
    # DEBUG D#103 => &D#229->D.34311
    # DEBUG this => D#103
    # DEBUG D#102 => &D#103->_M_impl
    # DEBUG this => D#102
    # DEBUG this => D#102
    # DEBUG this => D#102
    # .MEM_30 = VDEF <.MEM_12>
    MEM[(struct _Vector_impl *)this_4(D) + 184B]._M_start = 0B;
    # .MEM_31 = VDEF <.MEM_30>
    MEM[(struct _Vector_impl *)this_4(D) + 184B]._M_finish = 0B;
    # .MEM_32 = VDEF <.MEM_31>
    MEM[(struct _Vector_impl *)this_4(D) + 184B]._M_end_of_storage = 0B;
    _14 = (long unsigned int) outputs_10(D);
    # DEBUG D#316 => &this_4(D)->_from
    # DEBUG this => D#316
    # DEBUG __new_size => _14
    # .MEM_73 = VDEF <.MEM_32>
    __x = 0;
    # DEBUG __x => __x
    # DEBUG D#5 => D#316
    # DEBUG D#5 => D#316
    # DEBUG this => D#5
    # DEBUG this => D#5
    if (_14 != 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_4 }, succs = {bb_36 })
  {
    <bb 3>:
    # .MEM_78 = PHI <.MEM_73(2), .MEM_76(4)>

  }
  bb_36 (preds = {bb_3 }, succs = {bb_5 bb_6 })
  {
    <bb 36>:
    _17 = (sizetype) inputs_9(D);
    if (_17 <= 2287828610704211968)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_3 bb_13 })
  {
    <bb 4>:
    # DEBUG D#5 => D#316
    # DEBUG D#5 => D#316
    # DEBUG this => D#5
    # DEBUG this => D#5
    # DEBUG this => D#316
    # DEBUG D#6 => &D#316->D.34311._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#6
    # DEBUG this => D#316
    # .MEM_75 = VDEF <.MEM_73>
    MEM[(struct __normal_iterator *)&__position] = 0B;
    # DEBUG __n => _14
    # DEBUG __x => &__x
    _15 = &this_4(D)->_from;
    # .MEM_76 = VDEF <.MEM_75>
    std::vector<int>::_M_fill_insert (_15, __position, _14, &__x);
    goto <bb 3>;

  }
  bb_5 (preds = {bb_36 }, succs = {bb_6 })
  {
    <bb 5>:
    iftmp.0_18 = _17 * 4;

  }
  bb_6 (preds = {bb_5 bb_36 }, succs = {bb_38 })
  {
    <bb 6>:
    # iftmp.0_1 = PHI <iftmp.0_18(5), 18446744073709551615(36)>

  }
  bb_38 (preds = {bb_6 }, succs = {bb_7 bb_8 })
  {
    <bb 38>:
    # .MEM_19 = VDEF <.MEM_78>
    _20 = operator new [] (iftmp.0_1);
    goto <bb 8>;

  }
  bb_7 (preds = {bb_38 }, succs = {bb_14 })
  {
  <L9>:
    goto <bb 14> (<L6>);

  }
  bb_8 (preds = {bb_38 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_21 = VDEF <.MEM_19>
    this_4(D)->_s = _20;
    if (_17 <= 2287828610704211968)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    iftmp.1_22 = _17 * 4;

  }
  bb_10 (preds = {bb_9 bb_8 }, succs = {bb_37 })
  {
    <bb 10>:
    # iftmp.1_2 = PHI <iftmp.1_22(9), 18446744073709551615(8)>

  }
  bb_37 (preds = {bb_10 }, succs = {bb_11 bb_12 })
  {
    <bb 37>:
    # .MEM_23 = VDEF <.MEM_21>
    _24 = operator new [] (iftmp.1_2);
    goto <bb 12>;

  }
  bb_11 (preds = {bb_37 }, succs = {bb_14 })
  {
  <L10>:
    goto <bb 14> (<L6>);

  }
  bb_12 (preds = {bb_37 }, succs = {bb_1 })
  {
    <bb 12>:
    # .MEM_25 = VDEF <.MEM_23>
    this_4(D)->_ns = _24;
    # .MEM_26 = VDEF <.MEM_25>
    this_4(D)->_prio = 0;
    # VUSE <.MEM_26>
    return;

  }
  bb_13 (preds = {bb_4 }, succs = {bb_14 })
  {
  <L8>:

  }
  bb_14 (preds = {bb_13 bb_7 bb_11 }, succs = {bb_15 bb_16 })
  {
    # .MEM_3 = PHI <.MEM_76(13), .MEM_19(7), .MEM_23(11)>
  <L6>:
    # DEBUG D#228 => &this_4(D)->_from
    # DEBUG this => D#228
    # DEBUG D#79 => &D#228->D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => D#228->D.34311._M_impl._M_finish
    # DEBUG D#81 => D#228->D.34311._M_impl._M_start
    # DEBUG __first => D#81
    # DEBUG __last => D#82
    # DEBUG D.40040 => NULL
    # DEBUG D#22 => D#81
    # DEBUG D#23 => D#82
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.39717 => D#18
    # DEBUG D.39716 => D#19
    # DEBUG D#80 => &D#228->D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # VUSE <.MEM_3>
    _13 = MEM[(struct _Vector_base *)this_4(D) + 184B]._M_impl._M_start;
    # DEBUG D#76 => (long int) _13
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#73 => (long unsigned int) D#74
    # DEBUG this => D#80
    # DEBUG __p => _13
    # DEBUG __n => D#73
    if (_13 != 0B)
      goto <bb 15>;
    else
      goto <bb 16>;

  }
  bb_15 (preds = {bb_14 }, succs = {bb_16 })
  {
    <bb 15>:
    # DEBUG D#71 => &D#80->_M_impl
    # DEBUG D#69 => D#71
    # DEBUG D#70 => D#73
    # DEBUG __p => _13
    # DEBUG __a => D#69
    # DEBUG __n => D#70
    # DEBUG D#68 => D#70
    # DEBUG D#67 => D#69
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#68
    # DEBUG __p => _13
    # DEBUG this => D#65
    # DEBUG D.41840 => D#66
    # .MEM_33 = VDEF <.MEM_3>
    operator delete (_13);

  }
  bb_16 (preds = {bb_14 bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # .MEM_28 = PHI <.MEM_3(14), .MEM_33(15)>
    # DEBUG D#72 => &D#80->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_38 = VDEF <.MEM_28>
    MEM[(struct  &)this_4(D) + 184] ={v} {CLOBBER};
    resx 2

  }
  bb_17 (preds = {bb_16 }, succs = {bb_18 })
  {
  <L7>:
    # DEBUG D#227 => &this_4(D)->D.36959
    # DEBUG this => D#227
    # .MEM_39 = VDEF <.MEM_38>
    MEM[(struct DenseAllocator *)this_4(D)].D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV14DenseAllocator + 16B];
    # DEBUG D#315 => &MEM[(struct DenseAllocator *)this_4(D)]._request
    # DEBUG this => D#315
    # DEBUG D#199 => &D#315->D.35164
    # DEBUG this => D#199
    # VUSE <.MEM_39>
    _41 = MEM[(struct vector *)this_4(D) + 160B].D.35164._M_impl._M_finish;
    # VUSE <.MEM_39>
    __first_55 = MEM[(struct vector *)this_4(D) + 160B].D.35164._M_impl._M_start;
    # DEBUG __first => __first_55
    # DEBUG __last => _41

  }
  bb_22 (preds = {bb_18 }, succs = {bb_35 })
  {
    <bb 22>:

  }
  bb_35 (preds = {bb_22 }, succs = {bb_23 bb_24 })
  {
    <bb 35>:
    # DEBUG D#200 => &D#315->D.35164
    # DEBUG this => D#200
    # DEBUG D#101 => D#200->_M_impl._M_end_of_storage
    # DEBUG D#100 => (long int) D#101
    # VUSE <.MEM_65>
    _59 = MEM[(struct _Vector_base *)this_4(D) + 160B]._M_impl._M_start;
    # DEBUG D#99 => (long int) _59
    # DEBUG D#98 => D#100 - D#99
    # DEBUG D#97 => D#98 /[ex] 24
    # DEBUG D#94 => D#200
    # DEBUG D#95 => (long unsigned int) D#97
    # DEBUG __p => _59
    # DEBUG this => D#94
    # DEBUG __n => D#95
    # DEBUG D#93 => D#95
    # DEBUG D#92 => D#94
    if (_59 != 0B)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_35 }, succs = {bb_24 })
  {
    <bb 23>:
    # DEBUG D#91 => &D#92->_M_impl
    # DEBUG D#89 => D#91
    # DEBUG D#90 => D#93
    # DEBUG __p => _59
    # DEBUG __a => D#89
    # DEBUG __n => D#90
    # DEBUG D#88 => D#90
    # DEBUG D#87 => D#89
    # DEBUG D#85 => D#87
    # DEBUG D#86 => D#88
    # DEBUG __p => _59
    # DEBUG this => D#85
    # DEBUG D.42426 => D#86
    # .MEM_83 = VDEF <.MEM_65>
    operator delete (_59);

  }
  bb_24 (preds = {bb_35 bb_23 }, succs = {bb_25 bb_26 })
  {
    <bb 24>:
    # .MEM_67 = PHI <.MEM_65(35), .MEM_83(23)>
    # DEBUG D#96 => &D#200->_M_impl
    # DEBUG this => D#96
    # DEBUG this => D#96
    # DEBUG this => D#96
    # .MEM_88 = VDEF <.MEM_67>
    MEM[(struct  &)this_4(D) + 160] ={v} {CLOBBER};
    # DEBUG D#314 => &MEM[(struct DenseAllocator *)this_4(D)].D.35235
    # DEBUG this => D#314
    # .MEM_89 = VDEF <.MEM_88>
    MEM[(struct Allocator *)this_4(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
    # DEBUG D#84 => &D#314->_outmatch
    # DEBUG this => D#84
    # DEBUG D#79 => &D#84->D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => D#84->D.34311._M_impl._M_finish
    # DEBUG D#81 => D#84->D.34311._M_impl._M_start
    # DEBUG __first => D#81
    # DEBUG __last => D#82
    # DEBUG D.40040 => NULL
    # DEBUG D#22 => D#81
    # DEBUG D#23 => D#82
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.39717 => D#18
    # DEBUG D.39716 => D#19
    # DEBUG D#80 => &D#84->D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # VUSE <.MEM_89>
    _16 = MEM[(struct _Vector_base *)this_4(D) + 136B]._M_impl._M_start;
    # DEBUG D#76 => (long int) _16
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#73 => (long unsigned int) D#74
    # DEBUG this => D#80
    # DEBUG __p => _16
    # DEBUG __n => D#73
    if (_16 != 0B)
      goto <bb 25>;
    else
      goto <bb 26>;

  }
  bb_25 (preds = {bb_24 }, succs = {bb_26 })
  {
    <bb 25>:
    # DEBUG D#71 => &D#80->_M_impl
    # DEBUG D#69 => D#71
    # DEBUG D#70 => D#73
    # DEBUG __p => _16
    # DEBUG __a => D#69
    # DEBUG __n => D#70
    # DEBUG D#68 => D#70
    # DEBUG D#67 => D#69
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#68
    # DEBUG __p => _16
    # DEBUG this => D#65
    # DEBUG D.42372 => D#66
    # .MEM_90 = VDEF <.MEM_89>
    operator delete (_16);

  }
  bb_26 (preds = {bb_24 bb_25 }, succs = {bb_27 bb_28 })
  {
    <bb 26>:
    # .MEM_68 = PHI <.MEM_89(24), .MEM_90(25)>
    # DEBUG D#72 => &D#80->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_95 = VDEF <.MEM_68>
    MEM[(struct  &)this_4(D) + 136] ={v} {CLOBBER};
    # DEBUG D#83 => &D#314->_inmatch
    # DEBUG this => D#83
    # DEBUG D#79 => &D#83->D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => D#83->D.34311._M_impl._M_finish
    # DEBUG D#81 => D#83->D.34311._M_impl._M_start
    # DEBUG __first => D#81
    # DEBUG __last => D#82
    # DEBUG D.40040 => NULL
    # DEBUG D#22 => D#81
    # DEBUG D#23 => D#82
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.39717 => D#18
    # DEBUG D.39716 => D#19
    # DEBUG D#80 => &D#83->D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # VUSE <.MEM_95>
    _53 = MEM[(struct _Vector_base *)this_4(D) + 112B]._M_impl._M_start;
    # DEBUG D#76 => (long int) _53
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#73 => (long unsigned int) D#74
    # DEBUG this => D#80
    # DEBUG __p => _53
    # DEBUG __n => D#73
    if (_53 != 0B)
      goto <bb 27>;
    else
      goto <bb 28>;

  }
  bb_27 (preds = {bb_26 }, succs = {bb_28 })
  {
    <bb 27>:
    # DEBUG D#71 => &D#80->_M_impl
    # DEBUG D#69 => D#71
    # DEBUG D#70 => D#73
    # DEBUG __p => _53
    # DEBUG __a => D#69
    # DEBUG __n => D#70
    # DEBUG D#68 => D#70
    # DEBUG D#67 => D#69
    # DEBUG D#65 => D#67
    # DEBUG D#66 => D#68
    # DEBUG __p => _53
    # DEBUG this => D#65
    # DEBUG D.42387 => D#66
    # .MEM_96 = VDEF <.MEM_95>
    operator delete (_53);

  }
  bb_28 (preds = {bb_26 bb_27 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # .MEM_69 = PHI <.MEM_95(26), .MEM_96(27)>
    # DEBUG D#72 => &D#80->_M_impl
    # DEBUG this => D#72
    # DEBUG this => D#72
    # DEBUG this => D#72
    # .MEM_101 = VDEF <.MEM_69>
    MEM[(struct  &)this_4(D) + 112] ={v} {CLOBBER};
    # DEBUG D#313 => &MEM[(struct Allocator *)this_4(D)].D.34407
    # DEBUG this => D#313
    # .MEM_102 = VDEF <.MEM_101>
    MEM[(struct Module *)this_4(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#64 => &D#313->_children
    # DEBUG this => D#64
    # DEBUG D#58 => &D#64->D.29436
    # DEBUG this => D#58
    # DEBUG D#61 => D#64->D.29436._M_impl._M_finish
    # DEBUG D#60 => D#64->D.29436._M_impl._M_start
    # DEBUG D#15 => D#60
    # DEBUG D#16 => D#61
    # DEBUG __first => D#15
    # DEBUG __last => D#16
    # DEBUG D.39926 => D#17
    # DEBUG D#14 => D#16
    # DEBUG D#13 => D#15
    # DEBUG D#11 => D#13
    # DEBUG D#12 => D#14
    # DEBUG __first => D#11
    # DEBUG __last => D#12
    # DEBUG D#10 => D#12
    # DEBUG D#9 => D#11
    # DEBUG D#7 => D#9
    # DEBUG D#8 => D#10
    # DEBUG D.39679 => D#7
    # DEBUG D.39678 => D#8
    # DEBUG D#59 => &D#64->D.29436
    # DEBUG this => D#59
    # DEBUG D#57 => D#59->_M_impl._M_end_of_storage
    # DEBUG D#56 => (long int) D#57
    # VUSE <.MEM_102>
    _40 = MEM[(struct _Vector_base *)this_4(D) + 72B]._M_impl._M_start;
    # DEBUG D#55 => (long int) _40
    # DEBUG D#54 => D#56 - D#55
    # DEBUG D#53 => D#54 /[ex] 8
    # DEBUG D#50 => D#59
    # DEBUG D#51 => (long unsigned int) D#53
    # DEBUG __p => _40
    # DEBUG this => D#50
    # DEBUG __n => D#51
    # DEBUG D#49 => D#51
    # DEBUG D#48 => D#50
    if (_40 != 0B)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {bb_30 })
  {
    <bb 29>:
    # DEBUG D#47 => &D#48->_M_impl
    # DEBUG D#45 => D#47
    # DEBUG D#46 => D#49
    # DEBUG __p => _40
    # DEBUG __a => D#45
    # DEBUG __n => D#46
    # DEBUG D#44 => D#46
    # DEBUG D#43 => D#45
    # DEBUG D#41 => D#43
    # DEBUG D#42 => D#44
    # DEBUG __p => _40
    # DEBUG this => D#41
    # DEBUG D.42442 => D#42
    # .MEM_103 = VDEF <.MEM_102>
    operator delete (_40);

  }
  bb_30 (preds = {bb_28 bb_29 }, succs = {bb_31 bb_32 })
  {
    <bb 30>:
    # .MEM_70 = PHI <.MEM_102(28), .MEM_103(29)>
    # DEBUG D#52 => &D#59->_M_impl
    # DEBUG this => D#52
    # DEBUG this => D#52
    # DEBUG this => D#52
    # .MEM_108 = VDEF <.MEM_70>
    MEM[(struct  &)this_4(D) + 72] ={v} {CLOBBER};
    # DEBUG D#63 => &D#313->_fullname
    # DEBUG this => D#63
    # DEBUG this => D#63
    # DEBUG this => D#63
    # VUSE <.MEM_108>
    _60 = MEM[(char * *)this_4(D) + 40B];
    # DEBUG D#1 => D#63
    # DEBUG this => D#1
    # DEBUG this => D#63
    _61 = &MEM[(const struct basic_string *)this_4(D) + 40B].D.11539._M_local_buf;
    if (_60 != _61)
      goto <bb 31>;
    else
      goto <bb 32>;

  }
  bb_31 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 31>:
    # DEBUG D#39 => MEM[(struct basic_string *)D#63].D.11539._M_allocated_capacity
    # DEBUG D#38 => D#39
    # DEBUG this => D#63
    # DEBUG __size => D#38
    # DEBUG D#37 => D#38
    # DEBUG D#1 => D#63
    # DEBUG this => D#1
    # DEBUG this => D#63
    # DEBUG D#36 => &MEM[(struct basic_string *)D#63]._M_dataplus
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37 + 1
    # DEBUG __p => _60
    # DEBUG __a => D#34
    # DEBUG __n => D#35
    # DEBUG D#33 => D#35
    # DEBUG D#32 => D#34
    # DEBUG D#30 => D#32
    # DEBUG D#31 => D#33
    # DEBUG __p => _60
    # DEBUG this => D#30
    # DEBUG D.42455 => D#31
    # .MEM_109 = VDEF <.MEM_108>
    operator delete (_60);

  }
  bb_32 (preds = {bb_30 bb_31 }, succs = {bb_33 bb_34 })
  {
    <bb 32>:
    # .MEM_71 = PHI <.MEM_108(30), .MEM_109(31)>
    # DEBUG D#40 => &MEM[(struct basic_string *)D#63]._M_dataplus
    # DEBUG this => D#40
    # DEBUG this => D#40
    # DEBUG this => D#40
    # .MEM_113 = VDEF <.MEM_71>
    MEM[(struct  &)this_4(D) + 40] ={v} {CLOBBER};
    # DEBUG D#62 => &D#313->_name
    # DEBUG this => D#62
    # DEBUG this => D#62
    # DEBUG this => D#62
    # VUSE <.MEM_113>
    _62 = MEM[(char * *)this_4(D) + 8B];
    # DEBUG D#1 => D#62
    # DEBUG this => D#1
    # DEBUG this => D#62
    _63 = &MEM[(const struct basic_string *)this_4(D) + 8B].D.11539._M_local_buf;
    if (_62 != _63)
      goto <bb 33>;
    else
      goto <bb 34>;

  }
  bb_33 (preds = {bb_32 }, succs = {bb_34 })
  {
    <bb 33>:
    # DEBUG D#39 => MEM[(struct basic_string *)D#62].D.11539._M_allocated_capacity
    # DEBUG D#38 => D#39
    # DEBUG this => D#62
    # DEBUG __size => D#38
    # DEBUG D#37 => D#38
    # DEBUG D#1 => D#62
    # DEBUG this => D#1
    # DEBUG this => D#62
    # DEBUG D#36 => &MEM[(struct basic_string *)D#62]._M_dataplus
    # DEBUG D#34 => D#36
    # DEBUG D#35 => D#37 + 1
    # DEBUG __p => _62
    # DEBUG __a => D#34
    # DEBUG __n => D#35
    # DEBUG D#33 => D#35
    # DEBUG D#32 => D#34
    # DEBUG D#30 => D#32
    # DEBUG D#31 => D#33
    # DEBUG __p => _62
    # DEBUG this => D#30
    # DEBUG D.42470 => D#31
    # .MEM_114 = VDEF <.MEM_113>
    operator delete (_62);

  }
  bb_34 (preds = {bb_32 bb_33 }, succs = {})
  {
    <bb 34>:
    # .MEM_72 = PHI <.MEM_113(32), .MEM_114(33)>
    # DEBUG D#40 => &MEM[(struct basic_string *)D#62]._M_dataplus
    # DEBUG this => D#40
    # DEBUG this => D#40
    # DEBUG this => D#40
    # .MEM_42 = VDEF <.MEM_72>
    MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
    resx 1

  }
  loop_1 (header = 18, latch = 21, niter = )
  {
    bb_18 (preds = {bb_17 bb_21 }, succs = {bb_22 bb_19 })
    {
      <bb 18>:
      # __first_56 = PHI <__first_55(17), __first_58(21)>
      # .MEM_65 = PHI <.MEM_39(17), .MEM_82(21)>
      # DEBUG __first => __first_56
      if (_41 == __first_56)
        goto <bb 22>;
      else
        goto <bb 19>;

    }
    bb_19 (preds = {bb_18 }, succs = {bb_20 bb_21 })
    {
      <bb 19>:
      # DEBUG __r => __first_56
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#194
      # DEBUG D#174 => D#196
      # DEBUG D#175 => D#197
      # DEBUG __first => D#174
      # DEBUG __last => D#175
      # DEBUG D.41068 => D#176
      # DEBUG D#173 => D#175
      # DEBUG D#172 => D#174
      # DEBUG D#170 => D#172
      # DEBUG D#171 => D#173
      # DEBUG __first => D#170
      # DEBUG __last => D#171
      # DEBUG D#169 => D#171
      # DEBUG D#168 => D#170
      # DEBUG D#166 => D#168
      # DEBUG D#167 => D#169
      # DEBUG D.40971 => D#166
      # DEBUG D.40970 => D#167
      # DEBUG this => D#195
      # DEBUG D#193 => D#195->_M_impl._M_end_of_storage
      # DEBUG D#192 => (long int) D#193
      # VUSE <.MEM_65>
      _57 = MEM[(struct _Vector_base *)__first_56]._M_impl._M_start;
      # DEBUG D#191 => (long int) _57
      # DEBUG D#190 => D#192 - D#191
      # DEBUG D#189 => D#190 /[ex] 16
      # DEBUG D#186 => D#195
      # DEBUG D#187 => (long unsigned int) D#189
      # DEBUG __p => _57
      # DEBUG this => D#186
      # DEBUG __n => D#187
      # DEBUG D#185 => D#187
      # DEBUG D#184 => D#186
      if (_57 != 0B)
        goto <bb 20>;
      else
        goto <bb 21>;

    }
    bb_20 (preds = {bb_19 }, succs = {bb_21 })
    {
      <bb 20>:
      # DEBUG D#183 => &D#184->_M_impl
      # DEBUG D#181 => D#183
      # DEBUG D#182 => D#185
      # DEBUG __p => _57
      # DEBUG __a => D#181
      # DEBUG __n => D#182
      # DEBUG D#180 => D#182
      # DEBUG D#179 => D#181
      # DEBUG D#177 => D#179
      # DEBUG D#178 => D#180
      # DEBUG __p => _57
      # DEBUG this => D#177
      # DEBUG D.42412 => D#178
      # .MEM_77 = VDEF <.MEM_65>
      operator delete (_57);

    }
    bb_21 (preds = {bb_19 bb_20 }, succs = {bb_18 })
    {
      <bb 21>:
      # .MEM_66 = PHI <.MEM_65(19), .MEM_77(20)>
      # DEBUG D#188 => &D#195->_M_impl
      # DEBUG this => D#188
      # DEBUG this => D#188
      # DEBUG this => D#188
      # .MEM_82 = VDEF <.MEM_66>
      MEM[(struct  &)__first_56] ={v} {CLOBBER};
      __first_58 = __first_56 + 24;
      # DEBUG __first => __first_58
      goto <bb 18>;

    }
  }
}

Pass statistics:
----------------

MaxSizeMatch::MaxSizeMatch(Module*, const string&, int, int) (struct MaxSizeMatchD.36919 * const thisD.36945, struct ModuleD.28688 * parentD.36946, const struct stringD.2845 & nameD.36947, intD.9 inputsD.36948, intD.9 outputsD.36949)
Eh tree:
   1 cleanup land:{1,<L7>}
     2 cleanup land:{4,<L9>},{3,<L8>},{2,<L10>}
{
  struct vectorD.34419 * __firstD.42395;
  struct iteratorD.33879 __positionD.42357;
  value_typeD.33874 __xD.42352;
  size_tD.2818 iftmp.0_1;
  size_tD.2818 iftmp.1_2;
  struct DenseAllocatorD.34416 * _5;
  intD.9 * _13;
  long unsigned intD.14 _14;
  struct vectorD.33506 * _15;
  intD.9 * _16;
  sizetype _17;
  size_tD.2818 iftmp.0_18;
  voidD.45 * _20;
  size_tD.2818 iftmp.1_22;
  voidD.45 * _24;
  struct ModuleD.28688 * * _40;
  struct vectorD.34419 * _41;
  intD.9 * _53;
  struct sRequestD.34315 * _57;
  struct vectorD.34419 * _59;
  charD.10 * const _60;
  const charD.10 * _61;
  charD.10 * const _62;
  const charD.10 * _63;

;;   basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _5 = &this_4(D)->D.36959;
  # .MEM_11 = VDEF <.MEM_6(D)>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZN14DenseAllocatorC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiD.35229 (_5, parent_7(D), name_8(D), inputs_9(D), outputs_10(D));
  # .MEM_12 = VDEF <.MEM_11>
  this_4(D)->D.36959.D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV12MaxSizeMatchD.36965 + 16B];
  # DEBUG D#229ptD.0 => &this_4(D)->_fromD.36921
  # DEBUG thisD.41827 => D#229ptD.0
  # DEBUG D#103ptD.0 => &D#229ptD.0->D.34311
  # DEBUG thisD.41828 => D#103ptD.0
  # DEBUG D#102ptD.0 => &D#103ptD.0->_M_implD.33802
  # DEBUG thisD.41829 => D#102ptD.0
  # DEBUG thisD.40140 => D#102ptD.0
  # DEBUG thisD.40138 => D#102ptD.0
  # .MEM_30 = VDEF <.MEM_12>
  MEM[(struct _Vector_implD.33779 *)this_4(D) + 184B]._M_startD.33804 = 0B;
  # .MEM_31 = VDEF <.MEM_30>
  MEM[(struct _Vector_implD.33779 *)this_4(D) + 184B]._M_finishD.33805 = 0B;
  # .MEM_32 = VDEF <.MEM_31>
  MEM[(struct _Vector_implD.33779 *)this_4(D) + 184B]._M_end_of_storageD.33806 = 0B;
  # RANGE ~[2147483648, 18446744071562067967]
  _14 = (long unsigned intD.14) outputs_10(D);
  # DEBUG D#316ptD.0 => &this_4(D)->_fromD.36921
  # DEBUG thisD.42350 => D#316ptD.0
  # DEBUG __new_sizeD.42351 => _14
  # .MEM_73 = VDEF <.MEM_32>
  __xD.42352 = 0;
  # DEBUG __xD.42352 => __xD.42352
  # DEBUG D#5ptD.0 => D#316ptD.0
  # DEBUG D#5ptD.0 => D#316ptD.0
  # DEBUG thisD.42359 => D#5ptD.0
  # DEBUG thisD.42360 => D#5ptD.0
  if (_14 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 2, next block 36, flags: (NEW, REACHABLE)
;;    pred:       2 [79.3%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_78 = PHI <.MEM_73(2), .MEM_76(4)>
;;    succ:       36 [100.0%]  (FALLTHRU)

;;   basic block 36, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  # RANGE ~[2147483648, 18446744071562067967]
  _17 = (sizetype) inputs_9(D);
  if (_17 <= 2287828610704211968)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 36, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#5ptD.0 => D#316ptD.0
  # DEBUG D#5ptD.0 => D#316ptD.0
  # DEBUG thisD.41814 => D#5ptD.0
  # DEBUG thisD.41813 => D#5ptD.0
  # DEBUG thisD.41807 => D#316ptD.0
  # DEBUG D#6ptD.0 => &D#316ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG thisD.41809 => NULL
  # DEBUG __iD.41808 => D#6ptD.0
  # DEBUG thisD.42358 => D#316ptD.0
  # .MEM_75 = VDEF <.MEM_73>
  MEM[(struct __normal_iteratorD.33880 *)&__positionD.42357] = 0B;
  # DEBUG __nD.42356 => _14
  # DEBUG __xD.42355 => &__xD.42352
  # PT = nonlocal 
  _15 = &this_4(D)->_fromD.36921;
  [LP 3] # .MEM_76 = VDEF <.MEM_75>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34234 (_15, __positionD.42357, _14, &__xD.42352);
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 (EH,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 5000, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       36 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 8589934588] NONZERO 8589934588
  iftmp.0_18 = _17 * 4;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 5, next block 38, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[8589934589, 18446744073709551614]
  # iftmp.0_1 = PHI <iftmp.0_18(5), 18446744073709551615(36)>
;;    succ:       38 [100.0%]  (FALLTHRU)

;;   basic block 38, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 6, next block 7, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU)
  [LP 4] # .MEM_19 = VDEF <.MEM_78>
  # PT = { D.42483 } (escaped heap)
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _20 = _ZnamD.2765 (iftmp.0_1);
  goto <bb 8>;
;;    succ:       7 (EH,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0
;;    prev block 38, next block 8, flags: (NEW)
;;    pred:       38 (EH,EXECUTABLE)
<L9>: [LP 4]
  goto <bb 14> (<L6>);
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_21 = VDEF <.MEM_19>
  this_4(D)->_sD.36922 = _20;
  if (_17 <= 2287828610704211968)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 5000, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 8589934588] NONZERO 8589934588
  iftmp.1_22 = _17 * 4;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 9, next block 37, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[8589934589, 18446744073709551614]
  # iftmp.1_2 = PHI <iftmp.1_22(9), 18446744073709551615(8)>
;;    succ:       37 [100.0%]  (FALLTHRU)

;;   basic block 37, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 10, next block 11, flags: (NEW)
;;    pred:       10 [100.0%]  (FALLTHRU)
  [LP 2] # .MEM_23 = VDEF <.MEM_21>
  # PT = { D.42484 } (escaped heap)
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _24 = _ZnamD.2765 (iftmp.1_2);
  goto <bb 12>;
;;    succ:       11 (EH,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 0
;;    prev block 37, next block 12, flags: (NEW)
;;    pred:       37 (EH,EXECUTABLE)
<L10>: [LP 2]
  goto <bb 14> (<L6>);
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = VDEF <.MEM_23>
  this_4(D)->_nsD.36923 = _24;
  # .MEM_26 = VDEF <.MEM_25>
  this_4(D)->_prioD.36924 = 0;
  # VUSE <.MEM_26>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 13, loop depth 0, count 0, freq 0
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       4 (EH,EXECUTABLE)
<L8>: [LP 3]
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_76(13), .MEM_19(7), .MEM_23(11)>
<L6>:
  # DEBUG D#228ptD.0 => &this_4(D)->_fromD.36921
  # DEBUG thisD.41830 => D#228ptD.0
  # DEBUG D#79ptD.0 => &D#228ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#228ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#228ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#228ptD.0->D.34311
  # DEBUG thisD.41831 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _13 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 184B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _13
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.41834 => D#80ptD.0
  # DEBUG __pD.41833 => _13
  # DEBUG __nD.41832 => D#73ptD.0
  if (_13 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 0
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.41838 => _13
  # DEBUG __aD.41836 => D#69ptD.0
  # DEBUG __nD.41837 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.41841 => _13
  # DEBUG thisD.41839 => D#65ptD.0
  # DEBUG D.41840 => D#66ptD.0
  # .MEM_33 = VDEF <.MEM_3>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_13);
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_3(14), .MEM_33(15)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.41842 => D#72ptD.0
  # DEBUG thisD.41843 => D#72ptD.0
  # DEBUG thisD.41844 => D#72ptD.0
  # .MEM_38 = VDEF <.MEM_28>
  MEM[(struct  &)this_4(D) + 184] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       17 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 (EH,EXECUTABLE)
<L7>: [LP 1]
  # DEBUG D#227ptD.0 => &this_4(D)->D.36959
  # DEBUG thisD.41845 => D#227ptD.0
  # .MEM_39 = VDEF <.MEM_38>
  MEM[(struct DenseAllocatorD.34416 *)this_4(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#315ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_4(D)]._requestD.35166
  # DEBUG thisD.42392 => D#315ptD.0
  # DEBUG D#199ptD.0 => &D#315ptD.0->D.35164
  # DEBUG thisD.41216 => D#199ptD.0
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  _41 = MEM[(struct vectorD.34421 *)this_4(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  __first_55 = MEM[(struct vectorD.34421 *)this_4(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.42395 => __first_55
  # DEBUG __lastD.42394 => _41
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_56 = PHI <__first_55(17), __first_58(21)>
  # .MEM_65 = PHI <.MEM_39(17), .MEM_82(21)>
  # DEBUG __firstD.42400 => __first_56
  if (_41 == __first_56)
    goto <bb 22>;
  else
    goto <bb 19>;
;;    succ:       22 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.41106 => __first_56
  # DEBUG __pointerD.42401 => NULL
  # DEBUG thisD.42402 => NULL
  # DEBUG thisD.41071 => D#194ptD.0
  # DEBUG D#174ptD.0 => D#196ptD.0
  # DEBUG D#175ptD.0 => D#197ptD.0
  # DEBUG __firstD.41070 => D#174ptD.0
  # DEBUG __lastD.41069 => D#175ptD.0
  # DEBUG D.41068 => D#176ptD.0
  # DEBUG D#173ptD.0 => D#175ptD.0
  # DEBUG D#172ptD.0 => D#174ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => D#173ptD.0
  # DEBUG __firstD.40982 => D#170ptD.0
  # DEBUG __lastD.40981 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0
  # DEBUG D#168ptD.0 => D#170ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0
  # DEBUG D#167ptD.0 => D#169ptD.0
  # DEBUG D.40971 => D#166ptD.0
  # DEBUG D.40970 => D#167ptD.0
  # DEBUG thisD.42403 => D#195ptD.0
  # DEBUG D#193ptD.0 => D#195ptD.0->_M_implD.37294._M_end_of_storageD.37298
  # DEBUG D#192ptD.0 => (long intD.12) D#193ptD.0
  # VUSE <.MEM_65>
  # PT = nonlocal escaped 
  _57 = MEM[(struct _Vector_baseD.37061 *)__first_56]._M_implD.37294._M_startD.37296;
  # DEBUG D#191ptD.0 => (long intD.12) _57
  # DEBUG D#190ptD.0 => D#192ptD.0 - D#191ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0 /[ex] 16
  # DEBUG D#186ptD.0 => D#195ptD.0
  # DEBUG D#187ptD.0 => (long unsigned intD.14) D#189ptD.0
  # DEBUG __pD.42406 => _57
  # DEBUG thisD.42404 => D#186ptD.0
  # DEBUG __nD.42405 => D#187ptD.0
  # DEBUG D#185ptD.0 => D#187ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0
  if (_57 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 0
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#183ptD.0 => &D#184ptD.0->_M_implD.37294
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#185ptD.0
  # DEBUG __pD.42410 => _57
  # DEBUG __aD.42408 => D#181ptD.0
  # DEBUG __nD.42409 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.42413 => _57
  # DEBUG thisD.42411 => D#177ptD.0
  # DEBUG D.42412 => D#178ptD.0
  # .MEM_77 = VDEF <.MEM_65>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_57);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 0
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_66 = PHI <.MEM_65(19), .MEM_77(20)>
  # DEBUG D#188ptD.0 => &D#195ptD.0->_M_implD.37294
  # DEBUG thisD.42414 => D#188ptD.0
  # DEBUG thisD.42415 => D#188ptD.0
  # DEBUG thisD.42416 => D#188ptD.0
  # .MEM_82 = VDEF <.MEM_66>
  MEM[(struct  &)__first_56] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_58 = __first_56 + 24;
  # DEBUG __firstD.42400 => __first_58
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0
;;    prev block 21, next block 35, flags: (NEW, REACHABLE)
;;    pred:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       35 [100.0%]  (FALLTHRU)

;;   basic block 35, loop depth 0, count 0, freq 0
;;    prev block 22, next block 23, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU)
  # DEBUG D#200ptD.0 => &D#315ptD.0->D.35164
  # DEBUG thisD.42417 => D#200ptD.0
  # DEBUG D#101ptD.0 => D#200ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#100ptD.0 => (long intD.12) D#101ptD.0
  # VUSE <.MEM_65>
  # PT = nonlocal escaped 
  _59 = MEM[(struct _Vector_baseD.34422 *)this_4(D) + 160B]._M_implD.34655._M_startD.34657;
  # DEBUG D#99ptD.0 => (long intD.12) _59
  # DEBUG D#98ptD.0 => D#100ptD.0 - D#99ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0 /[ex] 24
  # DEBUG D#94ptD.0 => D#200ptD.0
  # DEBUG D#95ptD.0 => (long unsigned intD.14) D#97ptD.0
  # DEBUG __pD.42420 => _59
  # DEBUG thisD.42418 => D#94ptD.0
  # DEBUG __nD.42419 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  if (_59 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0
;;    prev block 35, next block 24, flags: (NEW, REACHABLE)
;;    pred:       35 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#91ptD.0 => &D#92ptD.0->_M_implD.34655
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#93ptD.0
  # DEBUG __pD.42424 => _59
  # DEBUG __aD.42422 => D#89ptD.0
  # DEBUG __nD.42423 => D#90ptD.0
  # DEBUG D#88ptD.0 => D#90ptD.0
  # DEBUG D#87ptD.0 => D#89ptD.0
  # DEBUG D#85ptD.0 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#88ptD.0
  # DEBUG __pD.42427 => _59
  # DEBUG thisD.42425 => D#85ptD.0
  # DEBUG D.42426 => D#86ptD.0
  # .MEM_83 = VDEF <.MEM_65>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_59);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       35 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_67 = PHI <.MEM_65(35), .MEM_83(23)>
  # DEBUG D#96ptD.0 => &D#200ptD.0->_M_implD.34655
  # DEBUG thisD.42428 => D#96ptD.0
  # DEBUG thisD.42429 => D#96ptD.0
  # DEBUG thisD.42430 => D#96ptD.0
  # .MEM_88 = VDEF <.MEM_67>
  MEM[(struct  &)this_4(D) + 160] ={v} {CLOBBER};
  # DEBUG D#314ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_4(D)].D.35235
  # DEBUG thisD.42361 => D#314ptD.0
  # .MEM_89 = VDEF <.MEM_88>
  MEM[(struct AllocatorD.33564 *)this_4(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#84ptD.0 => &D#314ptD.0->_outmatchD.34314
  # DEBUG thisD.42362 => D#84ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.42363 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_89>
  # PT = nonlocal escaped 
  _16 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _16
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.42366 => D#80ptD.0
  # DEBUG __pD.42365 => _16
  # DEBUG __nD.42364 => D#73ptD.0
  if (_16 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.42370 => _16
  # DEBUG __aD.42368 => D#69ptD.0
  # DEBUG __nD.42369 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.42373 => _16
  # DEBUG thisD.42371 => D#65ptD.0
  # DEBUG D.42372 => D#66ptD.0
  # .MEM_90 = VDEF <.MEM_89>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_68 = PHI <.MEM_89(24), .MEM_90(25)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.42374 => D#72ptD.0
  # DEBUG thisD.42375 => D#72ptD.0
  # DEBUG thisD.42376 => D#72ptD.0
  # .MEM_95 = VDEF <.MEM_68>
  MEM[(struct  &)this_4(D) + 136] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#314ptD.0->_inmatchD.34313
  # DEBUG thisD.42377 => D#83ptD.0
  # DEBUG D#79ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.40041 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG __firstD.40038 => D#81ptD.0
  # DEBUG __lastD.40039 => D#82ptD.0
  # DEBUG D.40040 => NULL
  # DEBUG D#22ptD.0 => D#81ptD.0
  # DEBUG D#23ptD.0 => D#82ptD.0
  # DEBUG __firstD.39728 => D#22ptD.0
  # DEBUG __lastD.39727 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.39717 => D#18ptD.0
  # DEBUG D.39716 => D#19ptD.0
  # DEBUG D#80ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.42378 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _53 = MEM[(struct _Vector_baseD.33569 *)this_4(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _53
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#73ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG thisD.42381 => D#80ptD.0
  # DEBUG __pD.42380 => _53
  # DEBUG __nD.42379 => D#73ptD.0
  if (_53 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#71ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#73ptD.0
  # DEBUG __pD.42385 => _53
  # DEBUG __aD.42383 => D#69ptD.0
  # DEBUG __nD.42384 => D#70ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG __pD.42388 => _53
  # DEBUG thisD.42386 => D#65ptD.0
  # DEBUG D.42387 => D#66ptD.0
  # .MEM_96 = VDEF <.MEM_95>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_53);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_69 = PHI <.MEM_95(26), .MEM_96(27)>
  # DEBUG D#72ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.42389 => D#72ptD.0
  # DEBUG thisD.42390 => D#72ptD.0
  # DEBUG thisD.42391 => D#72ptD.0
  # .MEM_101 = VDEF <.MEM_69>
  MEM[(struct  &)this_4(D) + 112] ={v} {CLOBBER};
  # DEBUG D#313ptD.0 => &MEM[(struct AllocatorD.33564 *)this_4(D)].D.34407
  # DEBUG thisD.42431 => D#313ptD.0
  # .MEM_102 = VDEF <.MEM_101>
  MEM[(struct ModuleD.28688 *)this_4(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#64ptD.0 => &D#313ptD.0->_childrenD.29438
  # DEBUG thisD.42432 => D#64ptD.0
  # DEBUG D#58ptD.0 => &D#64ptD.0->D.29436
  # DEBUG thisD.39929 => D#58ptD.0
  # DEBUG D#61ptD.0 => D#64ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#60ptD.0 => D#64ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#15ptD.0 => D#60ptD.0
  # DEBUG D#16ptD.0 => D#61ptD.0
  # DEBUG __firstD.39928 => D#15ptD.0
  # DEBUG __lastD.39927 => D#16ptD.0
  # DEBUG D.39926 => D#17ptD.0
  # DEBUG D#14ptD.0 => D#16ptD.0
  # DEBUG D#13ptD.0 => D#15ptD.0
  # DEBUG D#11ptD.0 => D#13ptD.0
  # DEBUG D#12ptD.0 => D#14ptD.0
  # DEBUG __firstD.39690 => D#11ptD.0
  # DEBUG __lastD.39689 => D#12ptD.0
  # DEBUG D#10ptD.0 => D#12ptD.0
  # DEBUG D#9ptD.0 => D#11ptD.0
  # DEBUG D#7ptD.0 => D#9ptD.0
  # DEBUG D#8ptD.0 => D#10ptD.0
  # DEBUG D.39679 => D#7ptD.0
  # DEBUG D.39678 => D#8ptD.0
  # DEBUG D#59ptD.0 => &D#64ptD.0->D.29436
  # DEBUG thisD.42433 => D#59ptD.0
  # DEBUG D#57ptD.0 => D#59ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#56ptD.0 => (long intD.12) D#57ptD.0
  # VUSE <.MEM_102>
  # PT = nonlocal escaped 
  _40 = MEM[(struct _Vector_baseD.28694 *)this_4(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#55ptD.0 => (long intD.12) _40
  # DEBUG D#54ptD.0 => D#56ptD.0 - D#55ptD.0
  # DEBUG D#53ptD.0 => D#54ptD.0 /[ex] 8
  # DEBUG D#50ptD.0 => D#59ptD.0
  # DEBUG D#51ptD.0 => (long unsigned intD.14) D#53ptD.0
  # DEBUG __pD.42436 => _40
  # DEBUG thisD.42434 => D#50ptD.0
  # DEBUG __nD.42435 => D#51ptD.0
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#48ptD.0 => D#50ptD.0
  if (_40 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#47ptD.0 => &D#48ptD.0->_M_implD.28927
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#46ptD.0 => D#49ptD.0
  # DEBUG __pD.42440 => _40
  # DEBUG __aD.42438 => D#45ptD.0
  # DEBUG __nD.42439 => D#46ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG __pD.42443 => _40
  # DEBUG thisD.42441 => D#41ptD.0
  # DEBUG D.42442 => D#42ptD.0
  # .MEM_103 = VDEF <.MEM_102>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 0
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_70 = PHI <.MEM_102(28), .MEM_103(29)>
  # DEBUG D#52ptD.0 => &D#59ptD.0->_M_implD.28927
  # DEBUG thisD.42444 => D#52ptD.0
  # DEBUG thisD.42445 => D#52ptD.0
  # DEBUG thisD.42446 => D#52ptD.0
  # .MEM_108 = VDEF <.MEM_70>
  MEM[(struct  &)this_4(D) + 72] ={v} {CLOBBER};
  # DEBUG D#63ptD.0 => &D#313ptD.0->_fullnameD.28691
  # DEBUG thisD.42447 => D#63ptD.0
  # DEBUG thisD.42448 => D#63ptD.0
  # DEBUG thisD.42457 => D#63ptD.0
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _60 = MEM[(charD.10 * *)this_4(D) + 40B];
  # DEBUG D#1ptD.0 => D#63ptD.0
  # DEBUG thisD.39612 => D#1ptD.0
  # DEBUG thisD.42458 => D#63ptD.0
  # PT = nonlocal 
  _61 = &MEM[(const struct basic_stringD.2844 *)this_4(D) + 40B].D.11539._M_local_bufD.11541;
  if (_60 != _61)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 0
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#39ptD.0 => MEM[(struct basic_stringD.2844 *)D#63ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#38ptD.0 => D#39ptD.0
  # DEBUG thisD.42450 => D#63ptD.0
  # DEBUG __sizeD.42449 => D#38ptD.0
  # DEBUG D#37ptD.0 => D#38ptD.0
  # DEBUG D#1ptD.0 => D#63ptD.0
  # DEBUG thisD.39811 => D#1ptD.0
  # DEBUG thisD.39812 => D#63ptD.0
  # DEBUG D#36ptD.0 => &MEM[(struct basic_stringD.2844 *)D#63ptD.0]._M_dataplusD.11519
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0 + 1
  # DEBUG __pD.42453 => _60
  # DEBUG __aD.42451 => D#34ptD.0
  # DEBUG __nD.42452 => D#35ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG __pD.42456 => _60
  # DEBUG thisD.42454 => D#30ptD.0
  # DEBUG D.42455 => D#31ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_60);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 0
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_108(30), .MEM_109(31)>
  # DEBUG D#40ptD.0 => &MEM[(struct basic_stringD.2844 *)D#63ptD.0]._M_dataplusD.11519
  # DEBUG thisD.42459 => D#40ptD.0
  # DEBUG thisD.42460 => D#40ptD.0
  # DEBUG thisD.42461 => D#40ptD.0
  # .MEM_113 = VDEF <.MEM_71>
  MEM[(struct  &)this_4(D) + 40] ={v} {CLOBBER};
  # DEBUG D#62ptD.0 => &D#313ptD.0->_nameD.28690
  # DEBUG thisD.42462 => D#62ptD.0
  # DEBUG thisD.42463 => D#62ptD.0
  # DEBUG thisD.42472 => D#62ptD.0
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  _62 = MEM[(charD.10 * *)this_4(D) + 8B];
  # DEBUG D#1ptD.0 => D#62ptD.0
  # DEBUG thisD.39612 => D#1ptD.0
  # DEBUG thisD.42473 => D#62ptD.0
  # PT = nonlocal 
  _63 = &MEM[(const struct basic_stringD.2844 *)this_4(D) + 8B].D.11539._M_local_bufD.11541;
  if (_62 != _63)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 0
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#39ptD.0 => MEM[(struct basic_stringD.2844 *)D#62ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#38ptD.0 => D#39ptD.0
  # DEBUG thisD.42465 => D#62ptD.0
  # DEBUG __sizeD.42464 => D#38ptD.0
  # DEBUG D#37ptD.0 => D#38ptD.0
  # DEBUG D#1ptD.0 => D#62ptD.0
  # DEBUG thisD.39811 => D#1ptD.0
  # DEBUG thisD.39812 => D#62ptD.0
  # DEBUG D#36ptD.0 => &MEM[(struct basic_stringD.2844 *)D#62ptD.0]._M_dataplusD.11519
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0 + 1
  # DEBUG __pD.42468 => _62
  # DEBUG __aD.42466 => D#34ptD.0
  # DEBUG __nD.42467 => D#35ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG __pD.42471 => _62
  # DEBUG thisD.42469 => D#30ptD.0
  # DEBUG D.42470 => D#31ptD.0
  # .MEM_114 = VDEF <.MEM_113>
  # USE = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  # CLB = nonlocal null { D.29488 D.34414 D.35238 D.36965 D.42352 D.42483 D.42484 } (nonlocal, escaped)
  _ZdlPvD.2766 (_62);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0
;;    prev block 33, next block 1, flags: (NEW, REACHABLE)
;;    pred:       32 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_72 = PHI <.MEM_113(32), .MEM_114(33)>
  # DEBUG D#40ptD.0 => &MEM[(struct basic_stringD.2844 *)D#62ptD.0]._M_dataplusD.11519
  # DEBUG thisD.42474 => D#40ptD.0
  # DEBUG thisD.42475 => D#40ptD.0
  # DEBUG thisD.42476 => D#40ptD.0
  # .MEM_42 = VDEF <.MEM_72>
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


