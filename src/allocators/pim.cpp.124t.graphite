
;; Function virtual void PIM::Allocate() (_ZN3PIM8AllocateEv, funcdef_no=1726, decl_uid=36932, cgraph_uid=429, symbol_order=430)


Pass statistics:
----------------

virtual void PIM::Allocate() (struct PIMD.36919 * const thisD.37066)
Eh tree:
   8 cleanup land:{5,<L28>},{4,<L29>}
   5 cleanup land:{6,<L30>},{3,<L31>}
{
  intD.9 * grants$D34311$_M_impl$_M_startD.40183;
  intD.9 * D.40180;
  intD.9 * __firstD.40155;
  size_typeD.33887 __nD.40151;
  intD.9 oD.37836;
  intD.9 iD.37091;
  struct vectorD.33506 grantsD.37073;
  intD.9 iterD.37072;
  intD.9 outputD.37069;
  intD.9 inputD.37068;
  long unsigned intD.14 pretmp_2;
  const intD.9 prephitmp_4;
  const intD.9 prephitmp_5;
  long unsigned intD.14 _6;
  const intD.9 prephitmp_10;
  const intD.9 prephitmp_13;
  intD.9 _18;
  struct vectorD.34419 & _19;
  intD.9 _20;
  long intD.12 _22;
  intD.9 _24;
  intD.9 _27;
  long unsigned intD.14 _30;
  long unsigned intD.14 _31;
  intD.9 _32;
  struct sRequestD.34315 & _33;
  intD.9 _34;
  intD.9 _36;
  intD.9 _38;
  intD.9 _41;
  intD.9 _44;
  long unsigned intD.14 _46;
  long intD.12 _47;
  intD.9 _48;
  long unsigned intD.14 _50;
  long intD.12 _51;
  struct sRequestD.34315 * _61;
  intD.9 * _62;
  intD.9 * _63;
  intD.9 _64;
  const intD.9 pretmp_65;
  intD.9 * _66;
  intD.9 * _67;
  long unsigned intD.14 _68;
  intD.9 & _69;
  long unsigned intD.14 _70;
  intD.9 & _71;
  intD.9 & _73;
  long intD.12 _74;
  long intD.12 _75;
  long intD.12 _76;
  intD.9 _77;
  long unsigned intD.14 _78;
  intD.9 & _79;
  intD.9 & _80;
  long unsigned intD.14 _81;
  intD.9 & _82;
  intD.9 _84;
  intD.9 _99;
  intD.9 & _100;
  intD.9 _102;
  long unsigned intD.14 _103;
  long unsigned intD.14 _108;
  intD.9 * _109;
  struct vectorD.34419 * pretmp_110;
  long unsigned intD.14 pretmp_111;
  const intD.9 pretmp_112;
  long unsigned intD.14 _114;
  const intD.9 pretmp_117;
  intD.9 _120;
  intD.9 _122;
  const intD.9 pretmp_123;
  const intD.9 pretmp_124;
  sizetype _125;
  const intD.9 prephitmp_126;
  long unsigned intD.14 _129;
  sizetype _141;
  long unsigned intD.14 _151;

;;   basic block 2, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG iterD.37072 => 0
  # DEBUG iterD.37072 => 0
  # VUSE <.MEM_16(D)>
  _64 = this_17(D)->_PIM_iterD.36921;
  if (_64 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [97.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [3.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_149 = PHI <.MEM_16(D)(2), .MEM_56(46)>
  # VUSE <.MEM_149>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [97.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 41, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # iter_134 = PHI <0(4), iter_57(47)>
  # .MEM_131 = PHI <.MEM_16(D)(4), .MEM_56(47)>
  # DEBUG iterD.37072 => iter_134
  # DEBUG thisD.39786 => &D.37090
  # DEBUG thisD.38922 => &D.37090
  # VUSE <.MEM_131>
  _20 = this_17(D)->D.36957.D.35235._outputsD.33567;
  # DEBUG thisD.40121 => &grantsD.37073
  # DEBUG __firstD.40122 => _20
  # DEBUG __lastD.40124 => -1
  # DEBUG D#141ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.40140 => D#141ptD.0
  # DEBUG __aD.40139 => NULL
  # DEBUG D#102ptD.0 => &D#141ptD.0->_M_implD.33802
  # DEBUG thisD.40142 => D#102ptD.0
  # DEBUG __aD.40141 => NULL
  # DEBUG thisD.39397 => D#102ptD.0
  # DEBUG __aD.39398 => NULL
  # DEBUG thisD.39394 => D#102ptD.0
  # DEBUG D.39395 => NULL
  # DEBUG thisD.40145 => &grantsD.37073
  # DEBUG __nD.40146 => _20
  # DEBUG __valueD.40147 => -1
  # RANGE ~[2147483648, 18446744071562067967]
  __n_21 = (size_typeD.33887) _20;
  # DEBUG D#138ptD.0 => &grantsD.37073.D.34311
  # DEBUG D#111ptD.0 => D#138ptD.0
  # DEBUG __nD.40172 => __n_21
  # DEBUG thisD.40173 => D#111ptD.0
  # DEBUG D#110ptD.0 => D#111ptD.0
  if (__n_21 != 0)
    goto <bb 6>;
  else
    goto <bb 12>;
;;    succ:       6 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 37, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#109ptD.0 => &D#110ptD.0->_M_implD.33802
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG __nD.40176 => __n_21
  # DEBUG __aD.40175 => D#108ptD.0
  # DEBUG D#107ptD.0 => D#108ptD.0
  # DEBUG D#105ptD.0 => D#107ptD.0
  # DEBUG D#106ptD.0 => 0B
  # DEBUG __nD.40179 => __n_21
  # DEBUG thisD.40177 => D#105ptD.0
  # DEBUG D.40178 => D#106ptD.0
  # DEBUG D#104ptD.0 => D#105ptD.0
  # DEBUG D#103ptD.0 => D#104ptD.0
  # DEBUG thisD.39409 => D#103ptD.0
  if (__n_21 > 4611686018427387903)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 5] # .MEM_119 = VDEF <.MEM_131>
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2850 ();
;;    succ:       17 (EH,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 37, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  _108 = __n_21 * 4;
  [LP 4] # .MEM_118 = VDEF <.MEM_131>
  # PT = { D.40188 } (escaped heap)
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _109 = _ZnwmD.2764 (_108);
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 (EH,EXECUTABLE)
<L29>: [LP 4]
  goto <bb 18> (<L27>);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 37, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG grants$D34311$_M_impl$_M_startD.40183 => _109
  # DEBUG D#136ptD.0 => &grantsD.37073
  # DEBUG D#136ptD.0 => &grantsD.37073
  # DEBUG D#137ptD.0 => &__valueD.40147
  # DEBUG __nD.40151 => __n_21
  # DEBUG D#134ptD.0 => D#136ptD.0
  # DEBUG thisD.40148 => D#134ptD.0
  # DEBUG thisD.40149 => D#136ptD.0
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG __valueD.40150 => D#135ptD.0
  # DEBUG D#133ptD.0 => &D#134ptD.0->D.34311
  # DEBUG thisD.39678 => D#133ptD.0
  # DEBUG D#131ptD.0 => D#135ptD.0
  # DEBUG __firstD.40155 => NULL
  # DEBUG __nD.40154 => __n_21
  # DEBUG D#130ptD.0 => D#131ptD.0
  # DEBUG __xD.40152 => D#130ptD.0
  # DEBUG D.40153 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#130ptD.0
  # DEBUG __firstD.40158 => NULL
  # DEBUG __nD.40157 => __n_21
  # DEBUG D#128ptD.0 => D#129ptD.0
  # DEBUG __xD.40156 => D#128ptD.0
  # DEBUG __assignableD.40160 => 1
  # DEBUG D#127ptD.0 => D#128ptD.0
  # DEBUG __firstD.40163 => NULL
  # DEBUG __nD.40162 => __n_21
  # DEBUG D#126ptD.0 => D#127ptD.0
  # DEBUG __xD.40161 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG __firstD.40166 => NULL
  # DEBUG __nD.40165 => __n_21
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG __valueD.40164 => D#124ptD.0
  # DEBUG __itD.39520 => NULL
  # DEBUG __itD.39510 => NULL
  # DEBUG D#112ptD.0 => D#124ptD.0
  # DEBUG __firstD.40169 => NULL
  # DEBUG __nD.40168 => __n_21
  # DEBUG __valueD.40167 => D#112ptD.0
  # DEBUG __tmpD.40170 => -1
  # DEBUG __niterD.40171 => __n_21
  # DEBUG __niterD.40171 => __n_21
  # DEBUG __firstD.40169 => _109
  if (__n_21 == 0)
    goto <bb 11>;
  else
    goto <bb 13>;
;;    succ:       11 (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_118>
  pretmp_124 = this_17(D)->D.36957.D.35235._outputsD.33567;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 41, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_101 = PHI <.MEM_154(16), .MEM_118(11), .MEM_131(5)>
  # PT = null { D.40188 } (escaped heap)
  # grants$D34311$_M_impl$_M_start_104 = PHI <_109(16), _109(11), 0B(5)>
  # prephitmp_126 = PHI <pretmp_123(16), pretmp_124(11), _20(5)>
  # DEBUG outputD.37069 => 0
  if (prephitmp_126 <= 0)
    goto <bb 19>;
  else
    goto <bb 23>;
;;    succ:       19 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 37, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 12, next block 16, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  _141 = (sizetype) _20;
  _125 = _141 * 4;
  # .MEM_154 = VDEF <.MEM_118>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (_109, 255, _125);
;;    succ:       16 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 38, maybe hot
;;    prev block 13, next block 17, flags: (NEW)
;;    pred:       13 [9.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_154>
  pretmp_123 = this_17(D)->D.36957.D.35235._outputsD.33567;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       7 (EH,EXECUTABLE)
<L28>: [LP 5]
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_113 = PHI <.MEM_118(9), .MEM_119(17)>
<L27>:
  # DEBUG D#140ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.40125 => D#140ptD.0
  # DEBUG D#78ptD.0 => D#140ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # DEBUG D#76ptD.0 => (long intD.12) 0B
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#140ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.40128 => 0B
  # DEBUG thisD.40126 => D#71ptD.0
  # DEBUG __nD.40127 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#73ptD.0 => &D#140ptD.0->_M_implD.33802
  # DEBUG thisD.40136 => D#73ptD.0
  # DEBUG thisD.40137 => D#73ptD.0
  # DEBUG thisD.40138 => D#73ptD.0
  resx 8
;;    succ:      

;;   basic block 19, loop depth 1, count 0, freq 2, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       12 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_101>
  pretmp_117 = this_17(D)->D.36957.D.35235._inputsD.33566;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 41, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_138 = PHI <.MEM_11(31), .MEM_101(19)>
  # prephitmp_5 = PHI <_99(31), pretmp_117(19)>
  # prephitmp_13 = PHI <_122(31), prephitmp_126(19)>
  # DEBUG inputD.37068 => 0
  if (prephitmp_5 <= 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 39, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 33>;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 42, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_148 = PHI <.MEM_138(20), .MEM_14(43)>
  # DEBUG thisD.39825 => &grantsD.37073
  # DEBUG D#79ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => grantsD.37073.D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => grantsD.37073.D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.39826 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # DEBUG D#76ptD.0 => (long intD.12) grants$D34311$_M_impl$_M_start_104
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.39829 => grants$D34311$_M_impl$_M_start_104
  # DEBUG thisD.39827 => D#71ptD.0
  # DEBUG __nD.39828 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (grants$D34311$_M_impl$_M_start_104 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 39, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       12 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_101>
  pretmp_112 = this_17(D)->D.36957.D.35235._inputsD.33566;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 2, count 0, freq 880, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # output_133 = PHI <0(23), output_40(32)>
  # .MEM_143 = PHI <.MEM_101(23), .MEM_11(32)>
  # prephitmp_10 = PHI <pretmp_112(23), _84(32)>
  # DEBUG outputD.37069 => output_133
  # DEBUG D#178ptD.0 => this_17(D)->D.36957.D.35235._inputsD.33566
  # DEBUG maxD.39789 => D#178ptD.0 + -1
  [LP 6] # .MEM_86 = VDEF <.MEM_143>
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _22 = _Z8ran_nextvD.36964 ();
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 (EH,EXECUTABLE)

;;   basic block 25, loop depth 2, count 0, freq 880, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  _51 = (long intD.12) prephitmp_10;
  _47 = _22 % _51;
  _38 = (intD.9) _47;
  # DEBUG input_offsetD.37070 => _38
  # DEBUG iD.37091 => 0
  # DEBUG iD.37091 => 0
  # VUSE <.MEM_86>
  _84 = this_17(D)->D.36957.D.35235._inputsD.33566;
  if (_84 <= 0)
    goto <bb 30>;
  else
    goto <bb 26>;
;;    succ:       30 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 2, count 0, freq 840, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_2 = (long unsigned intD.14) output_133;
  pretmp_111 = pretmp_2 * 16;
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  pretmp_110 = MEM[(struct vectorD.34419 * *)this_17(D) + 160B];
  _70 = pretmp_2 * 4;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 3, count 0, freq 9550, maybe hot
;;   Invalid sum of incoming frequencies 9795, should be 9550
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_135 = PHI <0(26), i_37(54)>
  # DEBUG iD.37091 => i_135
  _27 = _38 + i_135;
  input_28 = _27 % _84;
  # DEBUG inputD.37068 => input_28
  # DEBUG D#177ptD.0 => (long unsigned intD.14) output_133
  # RANGE ~[2147483648, 18446744071562067967]
  _30 = (long unsigned intD.14) input_28;
  # DEBUG D#142ptD.0 => &this_17(D)->D.36957._requestD.35166
  # DEBUG D#2ptD.0 => D#142ptD.0
  # DEBUG __nD.39796 => _30
  # DEBUG thisD.39797 => D#2ptD.0
  # RANGE [0, 18446744073709551592] NONZERO 18446744073709551608
  _31 = _30 * 24;
  # PT = nonlocal escaped 
  _19 = pretmp_110 + _31;
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _61 = MEM[(struct sRequestD.34315 * *)_19];
  # DEBUG __nD.39792 => D#177ptD.0
  # DEBUG thisD.39793 => D#3ptD.0
  # PT = nonlocal escaped 
  _33 = _61 + pretmp_111;
  # VUSE <.MEM_86>
  _32 = _33->labelD.34318;
  if (_32 != -1)
    goto <bb 28>;
  else
    goto <bb 53>;
;;    succ:       28 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 3, count 0, freq 6876, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#143ptD.0 => &this_17(D)->D.36957.D.35235._inmatchD.34313
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _62 = MEM[(intD.9 * *)this_17(D) + 112B];
  # DEBUG D#4ptD.0 => D#143ptD.0
  # DEBUG __nD.39800 => _30
  # DEBUG thisD.39801 => D#4ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _68 = _30 * 4;
  # PT = nonlocal escaped 
  _69 = _62 + _68;
  # VUSE <.MEM_86>
  _34 = *_69;
  if (_34 == -1)
    goto <bb 29>;
  else
    goto <bb 53>;
;;    succ:       29 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 3, count 0, freq 1925, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#144ptD.0 => &this_17(D)->D.36957.D.35235._outmatchD.34314
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _63 = MEM[(intD.9 * *)this_17(D) + 136B];
  # DEBUG D#4ptD.0 => D#144ptD.0
  # DEBUG __nD.39804 => D#177ptD.0
  # DEBUG thisD.39805 => D#4ptD.0
  # PT = nonlocal escaped 
  _71 = _63 + _70;
  # VUSE <.MEM_86>
  _36 = *_71;
  if (_36 == -1)
    goto <bb 52>;
  else
    goto <bb 53>;
;;    succ:       52 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 2, count 0, freq 880, maybe hot
;;   Invalid sum of incoming frequencies 635, should be 880
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       53 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_86(53), .MEM_39(52), .MEM_86(25)>
  output_40 = output_133 + 1;
  # DEBUG outputD.37069 => output_40
  # DEBUG outputD.37069 => output_40
  # VUSE <.MEM_11>
  _24 = this_17(D)->D.36957.D.35235._outputsD.33567;
  if (_24 <= output_40)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 40, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       30 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # _122 = PHI <_24(30)>
  # _99 = PHI <_84(30)>
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 2, count 0, freq 840, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       30 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 2, count 0, freq 880, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # input_139 = PHI <0(21), input_54(44)>
  # .MEM_145 = PHI <.MEM_138(21), .MEM_14(44)>
  # prephitmp_4 = PHI <prephitmp_13(21), pretmp_65(44)>
  # DEBUG inputD.37068 => input_139
  # DEBUG D#176ptD.0 => this_17(D)->D.36957.D.35235._outputsD.33567
  # DEBUG maxD.39811 => D#176ptD.0 + -1
  [LP 3] # .MEM_87 = VDEF <.MEM_145>
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _74 = _Z8ran_nextvD.36964 ();
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 (EH,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       33 (EH,EXECUTABLE)
  # PT = null { D.40188 } (escaped heap)
  # grants$D34311$_M_impl$_M_start_98 = PHI <grants$D34311$_M_impl$_M_start_104(33)>
<L31>: [LP 3]
  goto <bb 49> (<L25>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 2, count 0, freq 880, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  _75 = (long intD.12) prephitmp_4;
  _76 = _74 % _75;
  _77 = (intD.9) _76;
  # DEBUG output_offsetD.37071 => _77
  # DEBUG oD.37836 => 0
  # DEBUG oD.37836 => 0
  # VUSE <.MEM_87>
  _102 = this_17(D)->D.36957.D.35235._outputsD.33567;
  if (_102 <= 0)
    goto <bb 43>;
  else
    goto <bb 36>;
;;    succ:       43 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 2, count 0, freq 840, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  output_127 = _77 % _102;
  # DEBUG outputD.37069 => output_127
  # RANGE ~[2147483648, 18446744071562067967]
  _129 = (long unsigned intD.14) output_127;
  # DEBUG D#4ptD.0 => &grantsD.37073
  # DEBUG __nD.39814 => _129
  # DEBUG thisD.39815 => D#4ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _6 = _129 * 4;
  # PT = null { D.40188 } (escaped heap)
  _100 = grants$D34311$_M_impl$_M_start_104 + _6;
  # VUSE <.MEM_87>
  _120 = *_100;
  if (_120 == input_139)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 3, count 0, freq 8710, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       42 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  _44 = o_49 + _77;
  output_45 = _44 % _102;
  # DEBUG outputD.37069 => output_45
  # RANGE ~[2147483648, 18446744071562067967]
  _46 = (long unsigned intD.14) output_45;
  # DEBUG D#4ptD.0 => &grantsD.37073
  # DEBUG __nD.39814 => _46
  # DEBUG thisD.39815 => D#4ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _78 = _46 * 4;
  # PT = null { D.40188 } (escaped heap)
  _79 = grants$D34311$_M_impl$_M_start_104 + _78;
  # VUSE <.MEM_87>
  _48 = *_79;
  if (_48 == input_139)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 2, count 0, freq 392, maybe hot
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       37 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # output_116 = PHI <output_45(37)>
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  # _103 = PHI <_78(37)>
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 3, count 0, freq 8318, maybe hot
;;    prev block 38, next block 40, flags: (NEW)
;;    pred:       37 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 2, count 0, freq 430, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # output_150 = PHI <output_116(38), output_127(36)>
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  # _151 = PHI <_103(38), _6(36)>
  # RANGE [0, 18446744073709551615]
  _50 = (long unsigned intD.14) input_139;
  # DEBUG D#145ptD.0 => &this_17(D)->D.36957.D.35235._inmatchD.34313
  # VUSE <.MEM_87>
  # PT = nonlocal escaped 
  _66 = MEM[(intD.9 * *)this_17(D) + 112B];
  # DEBUG D#4ptD.0 => D#145ptD.0
  # DEBUG __nD.39822 => _50
  # DEBUG thisD.39823 => D#4ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _81 = _50 * 4;
  # PT = nonlocal escaped 
  _82 = _66 + _81;
  # .MEM_52 = VDEF <.MEM_87>
  *_82 = output_150;
  # DEBUG D#146ptD.0 => &this_17(D)->D.36957.D.35235._outmatchD.34314
  # VUSE <.MEM_52>
  # PT = nonlocal escaped 
  _67 = MEM[(intD.9 * *)this_17(D) + 136B];
  # DEBUG D#4ptD.0 => D#146ptD.0
  # DEBUG __nD.39818 => _129
  # DEBUG thisD.39819 => D#4ptD.0
  # PT = nonlocal escaped 
  _80 = _67 + _151;
  # .MEM_53 = VDEF <.MEM_52>
  *_80 = input_139;
  goto <bb 43>;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 2, count 0, freq 802, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       36 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 3, count 0, freq 9120, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # o_85 = PHI <0(41), o_49(39)>
  # DEBUG oD.37836 => o_85
  # DEBUG outputD.37069 => output_127
  # DEBUG D#4ptD.0 => &grantsD.37073
  # DEBUG __nD.39814 => _129
  # DEBUG thisD.39815 => D#4ptD.0
  o_49 = o_85 + 1;
  # DEBUG oD.37836 => o_49
  # DEBUG oD.37836 => o_49
  if (o_49 >= _102)
    goto <bb 43>;
  else
    goto <bb 37>;
;;    succ:       43 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 2, count 0, freq 880, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_87(42), .MEM_53(40), .MEM_87(35)>
  input_54 = input_139 + 1;
  # DEBUG inputD.37068 => input_54
  # DEBUG inputD.37068 => input_54
  # VUSE <.MEM_14>
  _41 = this_17(D)->D.36957.D.35235._inputsD.33566;
  if (_41 <= input_54)
    goto <bb 22>;
  else
    goto <bb 44>;
;;    succ:       22 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 2, count 0, freq 840, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       43 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_14>
  pretmp_65 = this_17(D)->D.36957.D.35235._outputsD.33567;
  goto <bb 33>;
;;    succ:       33 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 29, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.39833 => grants$D34311$_M_impl$_M_start_104
  # DEBUG __aD.39831 => D#66ptD.0
  # DEBUG __nD.39832 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.39836 => grants$D34311$_M_impl$_M_start_104
  # DEBUG thisD.39834 => D#62ptD.0
  # DEBUG D.39835 => D#63ptD.0
  # .MEM_88 = VDEF <.MEM_148>
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _ZdlPvD.2766 (grants$D34311$_M_impl$_M_start_104);
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 42, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_148(22), .MEM_88(45)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.39837 => D#73ptD.0
  # DEBUG thisD.39838 => D#73ptD.0
  # DEBUG thisD.39839 => D#73ptD.0
  # .MEM_56 = VDEF <.MEM_58>
  grantsD.37073 ={v} {CLOBBER};
  iter_57 = iter_134 + 1;
  # DEBUG iterD.37072 => iter_57
  # DEBUG iterD.37072 => iter_57
  # VUSE <.MEM_56>
  _18 = this_17(D)->_PIM_iterD.36921;
  if (_18 <= iter_57)
    goto <bb 3>;
  else
    goto <bb 47>;
;;    succ:       3 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [97.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 47, loop depth 1, count 0, freq 41, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       46 [97.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       24 (EH,EXECUTABLE)
  # PT = null { D.40188 } (escaped heap)
  # grants$D34311$_M_impl$_M_start_97 = PHI <grants$D34311$_M_impl$_M_start_104(24)>
<L30>: [LP 6]
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_15 = PHI <.MEM_86(48), .MEM_87(34)>
  # PT = null { D.40188 } (escaped heap)
  # grants$D34311$_M_impl$_M_start_96 = PHI <grants$D34311$_M_impl$_M_start_97(48), grants$D34311$_M_impl$_M_start_98(34)>
<L25>:
  # DEBUG thisD.39842 => &grantsD.37073
  # DEBUG D#79ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => grantsD.37073.D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => grantsD.37073.D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.39843 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # DEBUG D#76ptD.0 => (long intD.12) grants$D34311$_M_impl$_M_start_96
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.39846 => grants$D34311$_M_impl$_M_start_96
  # DEBUG thisD.39844 => D#71ptD.0
  # DEBUG __nD.39845 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (grants$D34311$_M_impl$_M_start_96 != 0B)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       49 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.39850 => grants$D34311$_M_impl$_M_start_96
  # DEBUG __aD.39848 => D#66ptD.0
  # DEBUG __nD.39849 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.39853 => grants$D34311$_M_impl$_M_start_96
  # DEBUG thisD.39851 => D#62ptD.0
  # DEBUG D.39852 => D#63ptD.0
  # .MEM_94 = VDEF <.MEM_15>
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _ZdlPvD.2766 (grants$D34311$_M_impl$_M_start_96);
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       49 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_15(49), .MEM_94(50)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.39854 => D#73ptD.0
  # DEBUG thisD.39855 => D#73ptD.0
  # DEBUG thisD.39856 => D#73ptD.0
  resx 5
;;    succ:      

;;   basic block 52, loop depth 2, count 0, freq 173, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       29 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # input_121 = PHI <input_28(29)>
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  # _114 = PHI <_70(29)>
  # DEBUG D#4ptD.0 => &grantsD.37073
  # DEBUG __nD.39808 => D#177ptD.0
  # DEBUG thisD.39809 => D#4ptD.0
  # PT = null { D.40188 } (escaped heap)
  _73 = grants$D34311$_M_impl$_M_start_104 + _114;
  # .MEM_39 = VDEF <.MEM_86>
  *_73 = input_121;
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 3, count 0, freq 9377, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       28 [72.0%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [28.0%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  i_37 = i_135 + 1;
  # DEBUG iD.37091 => i_37
  # DEBUG iD.37091 => i_37
  if (i_37 >= _84)
    goto <bb 30>;
  else
    goto <bb 54>;
;;    succ:       30 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 3, count 0, freq 8955, maybe hot
;;    prev block 53, next block 1, flags: (NEW)
;;    pred:       53 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

}


Creating dr for this_17(D)->_PIM_iter
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 1472
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector * *)this_17(D) + 160B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_17(D) + 160B]
Creating dr for MEM[(struct vector * *)this_17(D) + 160B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_17(D) + 160B]
Creating dr for MEM[(struct vector * *)this_17(D) + 160B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_17(D) + 160B]
Creating dr for MEM[(struct sRequest * *)_19]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)_19]
Creating dr for MEM[(struct sRequest * *)_19]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)_19]
Creating dr for MEM[(struct sRequest * *)_19]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)_19]
Creating dr for MEM[(struct sRequest * *)_19]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)_19]
Creating dr for _33->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
	Access function 0: 32
Creating dr for _33->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
	Access function 0: 32
Creating dr for _33->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
	Access function 0: 32
Creating dr for _33->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
	Access function 0: 32
Creating dr for MEM[(struct sRequest * *)_19]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)_19]
Creating dr for MEM[(struct sRequest * *)_19]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)_19]
Creating dr for MEM[(struct sRequest * *)_19]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)_19]
Creating dr for MEM[(struct sRequest * *)_19]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct sRequest * *)_19]
Creating dr for _33->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
	Access function 0: 32
Creating dr for _33->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
	Access function 0: 32
Creating dr for _33->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
	Access function 0: 32
Creating dr for _33->label
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
	Access function 0: 32
Creating dr for MEM[(int * *)this_17(D) + 112B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 112B]
Creating dr for MEM[(int * *)this_17(D) + 112B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 112B]
Creating dr for MEM[(int * *)this_17(D) + 112B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 112B]
Creating dr for MEM[(int * *)this_17(D) + 112B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 112B]
Creating dr for *_69
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_69
Creating dr for *_69
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_69
Creating dr for *_69
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_69
Creating dr for *_69
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_69
Creating dr for MEM[(int * *)this_17(D) + 136B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 136B]
Creating dr for MEM[(int * *)this_17(D) + 136B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 136B]
Creating dr for MEM[(int * *)this_17(D) + 136B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 136B]
Creating dr for MEM[(int * *)this_17(D) + 136B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 136B]
Creating dr for *_71
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_71
Creating dr for *_71
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_71
Creating dr for *_71
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_71
Creating dr for *_71
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_71
Creating dr for *_73
analyze_innermost: success.
	base_address: grants$D34311$_M_impl$_M_start_104
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *grants$D34311$_M_impl$_M_start_104
	Access function 0: {0B, +, 4}_2
Creating dr for *_73
analyze_innermost: success.
	base_address: grants$D34311$_M_impl$_M_start_104
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_73
Creating dr for *_73
analyze_innermost: success.
	base_address: grants$D34311$_M_impl$_M_start_104
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_73
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for *_100
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_100
Creating dr for *_100
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_100
Creating dr for *_100
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_100
Creating dr for *_79
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_79
Creating dr for *_79
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_79
Creating dr for *_79
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_79
Creating dr for *_79
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_79
Creating dr for MEM[(int * *)this_17(D) + 112B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 112B]
Creating dr for MEM[(int * *)this_17(D) + 112B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 112B]
Creating dr for MEM[(int * *)this_17(D) + 112B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 112B]
Creating dr for *_82
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_82
Creating dr for *_82
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_82
Creating dr for *_82
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_82
Creating dr for MEM[(int * *)this_17(D) + 136B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 136B]
Creating dr for MEM[(int * *)this_17(D) + 136B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 136B]
Creating dr for MEM[(int * *)this_17(D) + 136B]
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_17(D) + 136B]
Creating dr for *_80
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_80
Creating dr for *_80
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_80
Creating dr for *_80
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_80
Creating dr for this_17(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._inputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0
Creating dr for this_17(D)->D.36957.D.35235._outputs
analyze_innermost: success.
	base_address: this_17(D)
	offset from base address: 0
	constant offset from base address: 100
	step: 0
	aligned to: 256
	base_object: *this_17(D)
	Access function 0: 800
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:16)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:55, LOOPS:5, CONDITIONS:23, STMTS:376)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG iter => 0
    # DEBUG iter => 0
    # VUSE <.MEM_16(D)>
    _64 = this_17(D)->_PIM_iter;
    if (_64 <= 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 bb_46 }, succs = {bb_56 })
  {
    <bb 3>:
    # .MEM_149 = PHI <.MEM_16(D)(2), .MEM_56(46)>

  }
  bb_56 (preds = {bb_3 }, succs = {bb_1 })
  {
    <bb 56>:
    # VUSE <.MEM_149>
    return;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_7 (preds = {bb_6 }, succs = {bb_17 })
  {
    <bb 7>:
    # .MEM_119 = VDEF <.MEM_131>
    std::__throw_bad_alloc ();

  }
  bb_9 (preds = {bb_8 }, succs = {bb_18 })
  {
  <L29>:
    goto <bb 18> (<L27>);

  }
  bb_17 (preds = {bb_7 }, succs = {bb_18 })
  {
  <L28>:

  }
  bb_18 (preds = {bb_9 bb_17 }, succs = {})
  {
    # .MEM_113 = PHI <.MEM_118(9), .MEM_119(17)>
  <L27>:
    # DEBUG D#140 => &grants.D.34311
    # DEBUG this => D#140
    # DEBUG D#78 => D#140->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # DEBUG D#76 => (long int) 0B
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#71 => D#140
    # DEBUG D#72 => (long unsigned int) D#74
    # DEBUG __p => 0B
    # DEBUG this => D#71
    # DEBUG __n => D#72
    # DEBUG D#70 => D#72
    # DEBUG D#69 => D#71
    # DEBUG D#73 => &D#140->_M_impl
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    resx 8

  }
  bb_34 (preds = {bb_33 }, succs = {bb_49 })
  {
    # grants$D34311$_M_impl$_M_start_98 = PHI <grants$D34311$_M_impl$_M_start_104(33)>
  <L31>:
    goto <bb 49> (<L25>);

  }
  bb_48 (preds = {bb_24 }, succs = {bb_49 })
  {
    # grants$D34311$_M_impl$_M_start_97 = PHI <grants$D34311$_M_impl$_M_start_104(24)>
  <L30>:

  }
  bb_49 (preds = {bb_48 bb_34 }, succs = {bb_50 bb_51 })
  {
    # .MEM_15 = PHI <.MEM_86(48), .MEM_87(34)>
    # grants$D34311$_M_impl$_M_start_96 = PHI <grants$D34311$_M_impl$_M_start_97(48), grants$D34311$_M_impl$_M_start_98(34)>
  <L25>:
    # DEBUG this => &grants
    # DEBUG D#79 => &grants.D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => grants.D.34311._M_impl._M_finish
    # DEBUG D#81 => grants.D.34311._M_impl._M_start
    # DEBUG D#24 => D#81
    # DEBUG D#25 => D#82
    # DEBUG __first => D#24
    # DEBUG __last => D#25
    # DEBUG D.39294 => D#26
    # DEBUG D#23 => D#25
    # DEBUG D#22 => D#24
    # DEBUG D#20 => D#22
    # DEBUG D#21 => D#23
    # DEBUG __first => D#20
    # DEBUG __last => D#21
    # DEBUG D#19 => D#21
    # DEBUG D#18 => D#20
    # DEBUG D#16 => D#18
    # DEBUG D#17 => D#19
    # DEBUG D.38983 => D#16
    # DEBUG D.38982 => D#17
    # DEBUG D#80 => &grants.D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # DEBUG D#76 => (long int) grants$D34311$_M_impl$_M_start_96
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#71 => D#80
    # DEBUG D#72 => (long unsigned int) D#74
    # DEBUG __p => grants$D34311$_M_impl$_M_start_96
    # DEBUG this => D#71
    # DEBUG __n => D#72
    # DEBUG D#70 => D#72
    # DEBUG D#69 => D#71
    if (grants$D34311$_M_impl$_M_start_96 != 0B)
      goto <bb 50>;
    else
      goto <bb 51>;

  }
  bb_50 (preds = {bb_49 }, succs = {bb_51 })
  {
    <bb 50>:
    # DEBUG D#68 => &D#69->_M_impl
    # DEBUG D#66 => D#68
    # DEBUG D#67 => D#70
    # DEBUG __p => grants$D34311$_M_impl$_M_start_96
    # DEBUG __a => D#66
    # DEBUG __n => D#67
    # DEBUG D#65 => D#67
    # DEBUG D#64 => D#66
    # DEBUG D#62 => D#64
    # DEBUG D#63 => D#65
    # DEBUG __p => grants$D34311$_M_impl$_M_start_96
    # DEBUG this => D#62
    # DEBUG D.39852 => D#63
    # .MEM_94 = VDEF <.MEM_15>
    operator delete (grants$D34311$_M_impl$_M_start_96);

  }
  bb_51 (preds = {bb_49 bb_50 }, succs = {})
  {
    <bb 51>:
    # .MEM_55 = PHI <.MEM_15(49), .MEM_94(50)>
    # DEBUG D#73 => &D#80->_M_impl
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    resx 5

  }
  loop_1 (header = 5, latch = 47, niter = , upper_bound = 2147483647)
  {
    bb_5 (preds = {bb_4 bb_47 }, succs = {bb_6 bb_12 })
    {
      <bb 5>:
      # iter_134 = PHI <0(4), iter_57(47)>
      # .MEM_131 = PHI <.MEM_16(D)(4), .MEM_56(47)>
      # DEBUG iter => iter_134
      # DEBUG this => &D.37090
      # DEBUG this => &D.37090
      # VUSE <.MEM_131>
      _20 = this_17(D)->D.36957.D.35235._outputs;
      # DEBUG this => &grants
      # DEBUG __first => _20
      # DEBUG __last => -1
      # DEBUG D#141 => &grants.D.34311
      # DEBUG this => D#141
      # DEBUG __a => NULL
      # DEBUG D#102 => &D#141->_M_impl
      # DEBUG this => D#102
      # DEBUG __a => NULL
      # DEBUG this => D#102
      # DEBUG __a => NULL
      # DEBUG this => D#102
      # DEBUG D.39395 => NULL
      # DEBUG this => &grants
      # DEBUG __n => _20
      # DEBUG __value => -1
      __n_21 = (size_type) _20;
      # DEBUG D#138 => &grants.D.34311
      # DEBUG D#111 => D#138
      # DEBUG __n => __n_21
      # DEBUG this => D#111
      # DEBUG D#110 => D#111
      if (__n_21 != 0)
        goto <bb 6>;
      else
        goto <bb 12>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
    {
      <bb 6>:
      # DEBUG D#109 => &D#110->_M_impl
      # DEBUG D#108 => D#109
      # DEBUG __n => __n_21
      # DEBUG __a => D#108
      # DEBUG D#107 => D#108
      # DEBUG D#105 => D#107
      # DEBUG D#106 => 0B
      # DEBUG __n => __n_21
      # DEBUG this => D#105
      # DEBUG D.40178 => D#106
      # DEBUG D#104 => D#105
      # DEBUG D#103 => D#104
      # DEBUG this => D#103
      if (__n_21 > 4611686018427387903)
        goto <bb 7>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_6 }, succs = {bb_10 bb_9 })
    {
      <bb 8>:
      _108 = __n_21 * 4;
      # .MEM_118 = VDEF <.MEM_131>
      _109 = operator new (_108);
      goto <bb 10>;

    }
    bb_10 (preds = {bb_8 }, succs = {bb_11 bb_13 })
    {
      <bb 10>:
      # DEBUG grants$D34311$_M_impl$_M_start => _109
      # DEBUG D#136 => &grants
      # DEBUG D#136 => &grants
      # DEBUG D#137 => &__value
      # DEBUG __n => __n_21
      # DEBUG D#134 => D#136
      # DEBUG this => D#134
      # DEBUG this => D#136
      # DEBUG D#135 => D#137
      # DEBUG __value => D#135
      # DEBUG D#133 => &D#134->D.34311
      # DEBUG this => D#133
      # DEBUG D#131 => D#135
      # DEBUG __first => NULL
      # DEBUG __n => __n_21
      # DEBUG D#130 => D#131
      # DEBUG __x => D#130
      # DEBUG D.40153 => D#132
      # DEBUG D#129 => D#130
      # DEBUG __first => NULL
      # DEBUG __n => __n_21
      # DEBUG D#128 => D#129
      # DEBUG __x => D#128
      # DEBUG __assignable => 1
      # DEBUG D#127 => D#128
      # DEBUG __first => NULL
      # DEBUG __n => __n_21
      # DEBUG D#126 => D#127
      # DEBUG __x => D#126
      # DEBUG D#125 => D#126
      # DEBUG __first => NULL
      # DEBUG __n => __n_21
      # DEBUG D#124 => D#125
      # DEBUG __value => D#124
      # DEBUG __it => NULL
      # DEBUG __it => NULL
      # DEBUG D#112 => D#124
      # DEBUG __first => NULL
      # DEBUG __n => __n_21
      # DEBUG __value => D#112
      # DEBUG __tmp => -1
      # DEBUG __niter => __n_21
      # DEBUG __niter => __n_21
      # DEBUG __first => _109
      if (__n_21 == 0)
        goto <bb 11>;
      else
        goto <bb 13>;

    }
    bb_11 (preds = {bb_10 }, succs = {bb_12 })
    {
      <bb 11>:
      # VUSE <.MEM_118>
      pretmp_124 = this_17(D)->D.36957.D.35235._outputs;

    }
    bb_12 (preds = {bb_16 bb_11 bb_5 }, succs = {bb_19 bb_23 })
    {
      <bb 12>:
      # .MEM_101 = PHI <.MEM_154(16), .MEM_118(11), .MEM_131(5)>
      # grants$D34311$_M_impl$_M_start_104 = PHI <_109(16), _109(11), 0B(5)>
      # prephitmp_126 = PHI <pretmp_123(16), pretmp_124(11), _20(5)>
      # DEBUG output => 0
      if (prephitmp_126 <= 0)
        goto <bb 19>;
      else
        goto <bb 23>;

    }
    bb_13 (preds = {bb_10 }, succs = {bb_16 })
    {
      <bb 13>:
      _141 = (sizetype) _20;
      _125 = _141 * 4;
      # .MEM_154 = VDEF <.MEM_118>
      __builtin_memset (_109, 255, _125);

    }
    bb_16 (preds = {bb_13 }, succs = {bb_12 })
    {
      <bb 16>:
      # VUSE <.MEM_154>
      pretmp_123 = this_17(D)->D.36957.D.35235._outputs;
      goto <bb 12>;

    }
    bb_19 (preds = {bb_12 }, succs = {bb_20 })
    {
      <bb 19>:
      # VUSE <.MEM_101>
      pretmp_117 = this_17(D)->D.36957.D.35235._inputs;

    }
    bb_20 (preds = {bb_31 bb_19 }, succs = {bb_22 bb_21 })
    {
      <bb 20>:
      # .MEM_138 = PHI <.MEM_11(31), .MEM_101(19)>
      # prephitmp_5 = PHI <_99(31), pretmp_117(19)>
      # prephitmp_13 = PHI <_122(31), prephitmp_126(19)>
      # DEBUG input => 0
      if (prephitmp_5 <= 0)
        goto <bb 22>;
      else
        goto <bb 21>;

    }
    bb_21 (preds = {bb_20 }, succs = {bb_33 })
    {
      <bb 21>:
      goto <bb 33>;

    }
    bb_22 (preds = {bb_20 bb_43 }, succs = {bb_45 bb_46 })
    {
      <bb 22>:
      # .MEM_148 = PHI <.MEM_138(20), .MEM_14(43)>
      # DEBUG this => &grants
      # DEBUG D#79 => &grants.D.34311
      # DEBUG this => D#79
      # DEBUG D#82 => grants.D.34311._M_impl._M_finish
      # DEBUG D#81 => grants.D.34311._M_impl._M_start
      # DEBUG D#24 => D#81
      # DEBUG D#25 => D#82
      # DEBUG __first => D#24
      # DEBUG __last => D#25
      # DEBUG D.39294 => D#26
      # DEBUG D#23 => D#25
      # DEBUG D#22 => D#24
      # DEBUG D#20 => D#22
      # DEBUG D#21 => D#23
      # DEBUG __first => D#20
      # DEBUG __last => D#21
      # DEBUG D#19 => D#21
      # DEBUG D#18 => D#20
      # DEBUG D#16 => D#18
      # DEBUG D#17 => D#19
      # DEBUG D.38983 => D#16
      # DEBUG D.38982 => D#17
      # DEBUG D#80 => &grants.D.34311
      # DEBUG this => D#80
      # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
      # DEBUG D#77 => (long int) D#78
      # DEBUG D#76 => (long int) grants$D34311$_M_impl$_M_start_104
      # DEBUG D#75 => D#77 - D#76
      # DEBUG D#74 => D#75 /[ex] 4
      # DEBUG D#71 => D#80
      # DEBUG D#72 => (long unsigned int) D#74
      # DEBUG __p => grants$D34311$_M_impl$_M_start_104
      # DEBUG this => D#71
      # DEBUG __n => D#72
      # DEBUG D#70 => D#72
      # DEBUG D#69 => D#71
      if (grants$D34311$_M_impl$_M_start_104 != 0B)
        goto <bb 45>;
      else
        goto <bb 46>;

    }
    bb_23 (preds = {bb_12 }, succs = {bb_24 })
    {
      <bb 23>:
      # VUSE <.MEM_101>
      pretmp_112 = this_17(D)->D.36957.D.35235._inputs;

    }
    bb_31 (preds = {bb_30 }, succs = {bb_20 })
    {
      <bb 31>:
      # _122 = PHI <_24(30)>
      # _99 = PHI <_84(30)>
      goto <bb 20>;

    }
    bb_45 (preds = {bb_22 }, succs = {bb_46 })
    {
      <bb 45>:
      # DEBUG D#68 => &D#69->_M_impl
      # DEBUG D#66 => D#68
      # DEBUG D#67 => D#70
      # DEBUG __p => grants$D34311$_M_impl$_M_start_104
      # DEBUG __a => D#66
      # DEBUG __n => D#67
      # DEBUG D#65 => D#67
      # DEBUG D#64 => D#66
      # DEBUG D#62 => D#64
      # DEBUG D#63 => D#65
      # DEBUG __p => grants$D34311$_M_impl$_M_start_104
      # DEBUG this => D#62
      # DEBUG D.39835 => D#63
      # .MEM_88 = VDEF <.MEM_148>
      operator delete (grants$D34311$_M_impl$_M_start_104);

    }
    bb_46 (preds = {bb_22 bb_45 }, succs = {bb_3 bb_47 })
    {
      <bb 46>:
      # .MEM_58 = PHI <.MEM_148(22), .MEM_88(45)>
      # DEBUG D#73 => &D#80->_M_impl
      # DEBUG this => D#73
      # DEBUG this => D#73
      # DEBUG this => D#73
      # .MEM_56 = VDEF <.MEM_58>
      grants ={v} {CLOBBER};
      iter_57 = iter_134 + 1;
      # DEBUG iter => iter_57
      # DEBUG iter => iter_57
      # VUSE <.MEM_56>
      _18 = this_17(D)->_PIM_iter;
      if (_18 <= iter_57)
        goto <bb 3>;
      else
        goto <bb 47>;

    }
    bb_47 (preds = {bb_46 }, succs = {bb_5 })
    {
      <bb 47>:
      goto <bb 5>;

    }
    loop_4 (header = 33, latch = 44, niter = , upper_bound = 2147483647)
    {
      bb_33 (preds = {bb_21 bb_44 }, succs = {bb_35 bb_34 })
      {
        <bb 33>:
        # input_139 = PHI <0(21), input_54(44)>
        # .MEM_145 = PHI <.MEM_138(21), .MEM_14(44)>
        # prephitmp_4 = PHI <prephitmp_13(21), pretmp_65(44)>
        # DEBUG input => input_139
        # DEBUG D#176 => this_17(D)->D.36957.D.35235._outputs
        # DEBUG max => D#176 + -1
        # .MEM_87 = VDEF <.MEM_145>
        _74 = ran_next ();
        goto <bb 35>;

      }
      bb_35 (preds = {bb_33 }, succs = {bb_43 bb_36 })
      {
        <bb 35>:
        _75 = (long int) prephitmp_4;
        _76 = _74 % _75;
        _77 = (int) _76;
        # DEBUG output_offset => _77
        # DEBUG o => 0
        # DEBUG o => 0
        # VUSE <.MEM_87>
        _102 = this_17(D)->D.36957.D.35235._outputs;
        if (_102 <= 0)
          goto <bb 43>;
        else
          goto <bb 36>;

      }
      bb_36 (preds = {bb_35 }, succs = {bb_40 bb_41 })
      {
        <bb 36>:
        output_127 = _77 % _102;
        # DEBUG output => output_127
        _129 = (long unsigned int) output_127;
        # DEBUG D#4 => &grants
        # DEBUG __n => _129
        # DEBUG this => D#4
        _6 = _129 * 4;
        _100 = grants$D34311$_M_impl$_M_start_104 + _6;
        # VUSE <.MEM_87>
        _120 = *_100;
        if (_120 == input_139)
          goto <bb 40>;
        else
          goto <bb 41>;

      }
      bb_38 (preds = {bb_37 }, succs = {bb_40 })
      {
        <bb 38>:
        # output_116 = PHI <output_45(37)>
        # _103 = PHI <_78(37)>
        goto <bb 40>;

      }
      bb_40 (preds = {bb_38 bb_36 }, succs = {bb_55 })
      {
        <bb 40>:
        # output_150 = PHI <output_116(38), output_127(36)>
        # _151 = PHI <_103(38), _6(36)>

      }
      bb_55 (preds = {bb_40 }, succs = {bb_43 })
      {
        <bb 55>:
        _50 = (long unsigned int) input_139;
        # DEBUG D#145 => &this_17(D)->D.36957.D.35235._inmatch
        # VUSE <.MEM_87>
        _66 = MEM[(int * *)this_17(D) + 112B];
        # DEBUG D#4 => D#145
        # DEBUG __n => _50
        # DEBUG this => D#4
        _81 = _50 * 4;
        _82 = _66 + _81;
        # .MEM_52 = VDEF <.MEM_87>
        *_82 = output_150;
        # DEBUG D#146 => &this_17(D)->D.36957.D.35235._outmatch
        # VUSE <.MEM_52>
        _67 = MEM[(int * *)this_17(D) + 136B];
        # DEBUG D#4 => D#146
        # DEBUG __n => _129
        # DEBUG this => D#4
        _80 = _67 + _151;
        # .MEM_53 = VDEF <.MEM_52>
        *_80 = input_139;
        goto <bb 43>;

      }
      bb_41 (preds = {bb_36 }, succs = {bb_42 })
      {
        <bb 41>:

      }
      bb_43 (preds = {bb_42 bb_55 bb_35 }, succs = {bb_22 bb_44 })
      {
        <bb 43>:
        # .MEM_14 = PHI <.MEM_87(42), .MEM_53(55), .MEM_87(35)>
        input_54 = input_139 + 1;
        # DEBUG input => input_54
        # DEBUG input => input_54
        # VUSE <.MEM_14>
        _41 = this_17(D)->D.36957.D.35235._inputs;
        if (_41 <= input_54)
          goto <bb 22>;
        else
          goto <bb 44>;

      }
      bb_44 (preds = {bb_43 }, succs = {bb_33 })
      {
        <bb 44>:
        # VUSE <.MEM_14>
        pretmp_65 = this_17(D)->D.36957.D.35235._outputs;
        goto <bb 33>;

      }
      loop_5 (header = 42, latch = 39, niter = , upper_bound = 2147483646)
      {
        bb_37 (preds = {bb_42 }, succs = {bb_38 bb_39 })
        {
          <bb 37>:
          _44 = o_49 + _77;
          output_45 = _44 % _102;
          # DEBUG output => output_45
          _46 = (long unsigned int) output_45;
          # DEBUG D#4 => &grants
          # DEBUG __n => _46
          # DEBUG this => D#4
          _78 = _46 * 4;
          _79 = grants$D34311$_M_impl$_M_start_104 + _78;
          # VUSE <.MEM_87>
          _48 = *_79;
          if (_48 == input_139)
            goto <bb 38>;
          else
            goto <bb 39>;

        }
        bb_39 (preds = {bb_37 }, succs = {bb_42 })
        {
          <bb 39>:
          goto <bb 42>;

        }
        bb_42 (preds = {bb_41 bb_39 }, succs = {bb_43 bb_37 })
        {
          <bb 42>:
          # o_85 = PHI <0(41), o_49(39)>
          # DEBUG o => o_85
          # DEBUG output => output_127
          # DEBUG D#4 => &grants
          # DEBUG __n => _129
          # DEBUG this => D#4
          o_49 = o_85 + 1;
          # DEBUG o => o_49
          # DEBUG o => o_49
          if (o_49 >= _102)
            goto <bb 43>;
          else
            goto <bb 37>;

        }
      }
    }
    loop_2 (header = 24, latch = 32, niter = , upper_bound = 2147483647)
    {
      bb_24 (preds = {bb_23 bb_32 }, succs = {bb_25 bb_48 })
      {
        <bb 24>:
        # output_133 = PHI <0(23), output_40(32)>
        # .MEM_143 = PHI <.MEM_101(23), .MEM_11(32)>
        # prephitmp_10 = PHI <pretmp_112(23), _84(32)>
        # DEBUG output => output_133
        # DEBUG D#178 => this_17(D)->D.36957.D.35235._inputs
        # DEBUG max => D#178 + -1
        # .MEM_86 = VDEF <.MEM_143>
        _22 = ran_next ();

      }
      bb_25 (preds = {bb_24 }, succs = {bb_30 bb_26 })
      {
        <bb 25>:
        _51 = (long int) prephitmp_10;
        _47 = _22 % _51;
        _38 = (int) _47;
        # DEBUG input_offset => _38
        # DEBUG i => 0
        # DEBUG i => 0
        # VUSE <.MEM_86>
        _84 = this_17(D)->D.36957.D.35235._inputs;
        if (_84 <= 0)
          goto <bb 30>;
        else
          goto <bb 26>;

      }
      bb_26 (preds = {bb_25 }, succs = {bb_27 })
      {
        <bb 26>:
        pretmp_2 = (long unsigned int) output_133;
        pretmp_111 = pretmp_2 * 16;
        # VUSE <.MEM_86>
        pretmp_110 = MEM[(struct vector * *)this_17(D) + 160B];
        _70 = pretmp_2 * 4;

      }
      bb_30 (preds = {bb_53 bb_52 bb_25 }, succs = {bb_31 bb_32 })
      {
        <bb 30>:
        # .MEM_11 = PHI <.MEM_86(53), .MEM_39(52), .MEM_86(25)>
        output_40 = output_133 + 1;
        # DEBUG output => output_40
        # DEBUG output => output_40
        # VUSE <.MEM_11>
        _24 = this_17(D)->D.36957.D.35235._outputs;
        if (_24 <= output_40)
          goto <bb 31>;
        else
          goto <bb 32>;

      }
      bb_32 (preds = {bb_30 }, succs = {bb_24 })
      {
        <bb 32>:
        goto <bb 24>;

      }
      bb_52 (preds = {bb_29 }, succs = {bb_30 })
      {
        <bb 52>:
        # input_121 = PHI <input_28(29)>
        # _114 = PHI <_70(29)>
        # DEBUG D#4 => &grants
        # DEBUG __n => D#177
        # DEBUG this => D#4
        _73 = grants$D34311$_M_impl$_M_start_104 + _114;
        # .MEM_39 = VDEF <.MEM_86>
        *_73 = input_121;
        goto <bb 30>;

      }
      loop_3 (header = 27, latch = 54, niter = , upper_bound = 2147483646)
      {
        bb_27 (preds = {bb_26 bb_54 }, succs = {bb_28 bb_53 })
        {
          <bb 27>:
          # i_135 = PHI <0(26), i_37(54)>
          # DEBUG i => i_135
          _27 = _38 + i_135;
          input_28 = _27 % _84;
          # DEBUG input => input_28
          # DEBUG D#177 => (long unsigned int) output_133
          _30 = (long unsigned int) input_28;
          # DEBUG D#142 => &this_17(D)->D.36957._request
          # DEBUG D#2 => D#142
          # DEBUG __n => _30
          # DEBUG this => D#2
          _31 = _30 * 24;
          _19 = pretmp_110 + _31;
          # VUSE <.MEM_86>
          _61 = MEM[(struct sRequest * *)_19];
          # DEBUG __n => D#177
          # DEBUG this => D#3
          _33 = _61 + pretmp_111;
          # VUSE <.MEM_86>
          _32 = _33->label;
          if (_32 != -1)
            goto <bb 28>;
          else
            goto <bb 53>;

        }
        bb_28 (preds = {bb_27 }, succs = {bb_29 bb_53 })
        {
          <bb 28>:
          # DEBUG D#143 => &this_17(D)->D.36957.D.35235._inmatch
          # VUSE <.MEM_86>
          _62 = MEM[(int * *)this_17(D) + 112B];
          # DEBUG D#4 => D#143
          # DEBUG __n => _30
          # DEBUG this => D#4
          _68 = _30 * 4;
          _69 = _62 + _68;
          # VUSE <.MEM_86>
          _34 = *_69;
          if (_34 == -1)
            goto <bb 29>;
          else
            goto <bb 53>;

        }
        bb_29 (preds = {bb_28 }, succs = {bb_52 bb_53 })
        {
          <bb 29>:
          # DEBUG D#144 => &this_17(D)->D.36957.D.35235._outmatch
          # VUSE <.MEM_86>
          _63 = MEM[(int * *)this_17(D) + 136B];
          # DEBUG D#4 => D#144
          # DEBUG __n => D#177
          # DEBUG this => D#4
          _71 = _63 + _70;
          # VUSE <.MEM_86>
          _36 = *_71;
          if (_36 == -1)
            goto <bb 52>;
          else
            goto <bb 53>;

        }
        bb_53 (preds = {bb_28 bb_27 bb_29 }, succs = {bb_30 bb_54 })
        {
          <bb 53>:
          i_37 = i_135 + 1;
          # DEBUG i => i_37
          # DEBUG i => i_37
          if (i_37 >= _84)
            goto <bb 30>;
          else
            goto <bb 54>;

        }
        bb_54 (preds = {bb_53 }, succs = {bb_27 })
        {
          <bb 54>:
          goto <bb 27>;

        }
      }
    }
  }
}

Pass statistics:
----------------

virtual void PIM::Allocate() (struct PIMD.36919 * const thisD.37066)
Eh tree:
   8 cleanup land:{5,<L28>},{4,<L29>}
   5 cleanup land:{6,<L30>},{3,<L31>}
{
  intD.9 * grants$D34311$_M_impl$_M_startD.40183;
  intD.9 * D.40180;
  intD.9 * __firstD.40155;
  size_typeD.33887 __nD.40151;
  intD.9 oD.37836;
  intD.9 iD.37091;
  struct vectorD.33506 grantsD.37073;
  intD.9 iterD.37072;
  intD.9 outputD.37069;
  intD.9 inputD.37068;
  long unsigned intD.14 pretmp_2;
  const intD.9 prephitmp_4;
  const intD.9 prephitmp_5;
  long unsigned intD.14 _6;
  const intD.9 prephitmp_10;
  const intD.9 prephitmp_13;
  intD.9 _18;
  struct vectorD.34419 & _19;
  intD.9 _20;
  long intD.12 _22;
  intD.9 _24;
  intD.9 _27;
  long unsigned intD.14 _30;
  long unsigned intD.14 _31;
  intD.9 _32;
  struct sRequestD.34315 & _33;
  intD.9 _34;
  intD.9 _36;
  intD.9 _38;
  intD.9 _41;
  intD.9 _44;
  long unsigned intD.14 _46;
  long intD.12 _47;
  intD.9 _48;
  long unsigned intD.14 _50;
  long intD.12 _51;
  struct sRequestD.34315 * _61;
  intD.9 * _62;
  intD.9 * _63;
  intD.9 _64;
  const intD.9 pretmp_65;
  intD.9 * _66;
  intD.9 * _67;
  long unsigned intD.14 _68;
  intD.9 & _69;
  long unsigned intD.14 _70;
  intD.9 & _71;
  intD.9 & _73;
  long intD.12 _74;
  long intD.12 _75;
  long intD.12 _76;
  intD.9 _77;
  long unsigned intD.14 _78;
  intD.9 & _79;
  intD.9 & _80;
  long unsigned intD.14 _81;
  intD.9 & _82;
  intD.9 _84;
  intD.9 _99;
  intD.9 & _100;
  intD.9 _102;
  long unsigned intD.14 _103;
  long unsigned intD.14 _108;
  intD.9 * _109;
  struct vectorD.34419 * pretmp_110;
  long unsigned intD.14 pretmp_111;
  const intD.9 pretmp_112;
  long unsigned intD.14 _114;
  const intD.9 pretmp_117;
  intD.9 _120;
  intD.9 _122;
  const intD.9 pretmp_123;
  const intD.9 pretmp_124;
  sizetype _125;
  const intD.9 prephitmp_126;
  long unsigned intD.14 _129;
  sizetype _141;
  long unsigned intD.14 _151;

;;   basic block 2, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG iterD.37072 => 0
  # DEBUG iterD.37072 => 0
  # VUSE <.MEM_16(D)>
  _64 = this_17(D)->_PIM_iterD.36921;
  if (_64 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [97.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 2, next block 56, flags: (NEW, REACHABLE)
;;    pred:       2 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [3.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_149 = PHI <.MEM_16(D)(2), .MEM_56(46)>
;;    succ:       56 [100.0%]  (FALLTHRU)

;;   basic block 56, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_149>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 56, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [97.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 41, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # iter_134 = PHI <0(4), iter_57(47)>
  # .MEM_131 = PHI <.MEM_16(D)(4), .MEM_56(47)>
  # DEBUG iterD.37072 => iter_134
  # DEBUG thisD.39786 => &D.37090
  # DEBUG thisD.38922 => &D.37090
  # VUSE <.MEM_131>
  _20 = this_17(D)->D.36957.D.35235._outputsD.33567;
  # DEBUG thisD.40121 => &grantsD.37073
  # DEBUG __firstD.40122 => _20
  # DEBUG __lastD.40124 => -1
  # DEBUG D#141ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.40140 => D#141ptD.0
  # DEBUG __aD.40139 => NULL
  # DEBUG D#102ptD.0 => &D#141ptD.0->_M_implD.33802
  # DEBUG thisD.40142 => D#102ptD.0
  # DEBUG __aD.40141 => NULL
  # DEBUG thisD.39397 => D#102ptD.0
  # DEBUG __aD.39398 => NULL
  # DEBUG thisD.39394 => D#102ptD.0
  # DEBUG D.39395 => NULL
  # DEBUG thisD.40145 => &grantsD.37073
  # DEBUG __nD.40146 => _20
  # DEBUG __valueD.40147 => -1
  # RANGE ~[2147483648, 18446744071562067967]
  __n_21 = (size_typeD.33887) _20;
  # DEBUG D#138ptD.0 => &grantsD.37073.D.34311
  # DEBUG D#111ptD.0 => D#138ptD.0
  # DEBUG __nD.40172 => __n_21
  # DEBUG thisD.40173 => D#111ptD.0
  # DEBUG D#110ptD.0 => D#111ptD.0
  if (__n_21 != 0)
    goto <bb 6>;
  else
    goto <bb 12>;
;;    succ:       6 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 37, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#109ptD.0 => &D#110ptD.0->_M_implD.33802
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG __nD.40176 => __n_21
  # DEBUG __aD.40175 => D#108ptD.0
  # DEBUG D#107ptD.0 => D#108ptD.0
  # DEBUG D#105ptD.0 => D#107ptD.0
  # DEBUG D#106ptD.0 => 0B
  # DEBUG __nD.40179 => __n_21
  # DEBUG thisD.40177 => D#105ptD.0
  # DEBUG D.40178 => D#106ptD.0
  # DEBUG D#104ptD.0 => D#105ptD.0
  # DEBUG D#103ptD.0 => D#104ptD.0
  # DEBUG thisD.39409 => D#103ptD.0
  if (__n_21 > 4611686018427387903)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 5] # .MEM_119 = VDEF <.MEM_131>
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2850 ();
;;    succ:       17 (EH,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 37, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  _108 = __n_21 * 4;
  [LP 4] # .MEM_118 = VDEF <.MEM_131>
  # PT = { D.40188 } (escaped heap)
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _109 = _ZnwmD.2764 (_108);
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 (EH,EXECUTABLE)
<L29>: [LP 4]
  goto <bb 18> (<L27>);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 37, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG grants$D34311$_M_impl$_M_startD.40183 => _109
  # DEBUG D#136ptD.0 => &grantsD.37073
  # DEBUG D#136ptD.0 => &grantsD.37073
  # DEBUG D#137ptD.0 => &__valueD.40147
  # DEBUG __nD.40151 => __n_21
  # DEBUG D#134ptD.0 => D#136ptD.0
  # DEBUG thisD.40148 => D#134ptD.0
  # DEBUG thisD.40149 => D#136ptD.0
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG __valueD.40150 => D#135ptD.0
  # DEBUG D#133ptD.0 => &D#134ptD.0->D.34311
  # DEBUG thisD.39678 => D#133ptD.0
  # DEBUG D#131ptD.0 => D#135ptD.0
  # DEBUG __firstD.40155 => NULL
  # DEBUG __nD.40154 => __n_21
  # DEBUG D#130ptD.0 => D#131ptD.0
  # DEBUG __xD.40152 => D#130ptD.0
  # DEBUG D.40153 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#130ptD.0
  # DEBUG __firstD.40158 => NULL
  # DEBUG __nD.40157 => __n_21
  # DEBUG D#128ptD.0 => D#129ptD.0
  # DEBUG __xD.40156 => D#128ptD.0
  # DEBUG __assignableD.40160 => 1
  # DEBUG D#127ptD.0 => D#128ptD.0
  # DEBUG __firstD.40163 => NULL
  # DEBUG __nD.40162 => __n_21
  # DEBUG D#126ptD.0 => D#127ptD.0
  # DEBUG __xD.40161 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG __firstD.40166 => NULL
  # DEBUG __nD.40165 => __n_21
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG __valueD.40164 => D#124ptD.0
  # DEBUG __itD.39520 => NULL
  # DEBUG __itD.39510 => NULL
  # DEBUG D#112ptD.0 => D#124ptD.0
  # DEBUG __firstD.40169 => NULL
  # DEBUG __nD.40168 => __n_21
  # DEBUG __valueD.40167 => D#112ptD.0
  # DEBUG __tmpD.40170 => -1
  # DEBUG __niterD.40171 => __n_21
  # DEBUG __niterD.40171 => __n_21
  # DEBUG __firstD.40169 => _109
  if (__n_21 == 0)
    goto <bb 11>;
  else
    goto <bb 13>;
;;    succ:       11 (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_118>
  pretmp_124 = this_17(D)->D.36957.D.35235._outputsD.33567;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 41, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_101 = PHI <.MEM_154(16), .MEM_118(11), .MEM_131(5)>
  # PT = null { D.40188 } (escaped heap)
  # grants$D34311$_M_impl$_M_start_104 = PHI <_109(16), _109(11), 0B(5)>
  # prephitmp_126 = PHI <pretmp_123(16), pretmp_124(11), _20(5)>
  # DEBUG outputD.37069 => 0
  if (prephitmp_126 <= 0)
    goto <bb 19>;
  else
    goto <bb 23>;
;;    succ:       19 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 37, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 12, next block 16, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  _141 = (sizetype) _20;
  _125 = _141 * 4;
  # .MEM_154 = VDEF <.MEM_118>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (_109, 255, _125);
;;    succ:       16 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 38, maybe hot
;;    prev block 13, next block 17, flags: (NEW)
;;    pred:       13 [9.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_154>
  pretmp_123 = this_17(D)->D.36957.D.35235._outputsD.33567;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       7 (EH,EXECUTABLE)
<L28>: [LP 5]
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_113 = PHI <.MEM_118(9), .MEM_119(17)>
<L27>:
  # DEBUG D#140ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.40125 => D#140ptD.0
  # DEBUG D#78ptD.0 => D#140ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # DEBUG D#76ptD.0 => (long intD.12) 0B
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#140ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.40128 => 0B
  # DEBUG thisD.40126 => D#71ptD.0
  # DEBUG __nD.40127 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  # DEBUG D#73ptD.0 => &D#140ptD.0->_M_implD.33802
  # DEBUG thisD.40136 => D#73ptD.0
  # DEBUG thisD.40137 => D#73ptD.0
  # DEBUG thisD.40138 => D#73ptD.0
  resx 8
;;    succ:      

;;   basic block 19, loop depth 1, count 0, freq 2, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       12 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_101>
  pretmp_117 = this_17(D)->D.36957.D.35235._inputsD.33566;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 41, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_138 = PHI <.MEM_11(31), .MEM_101(19)>
  # prephitmp_5 = PHI <_99(31), pretmp_117(19)>
  # prephitmp_13 = PHI <_122(31), prephitmp_126(19)>
  # DEBUG inputD.37068 => 0
  if (prephitmp_5 <= 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 39, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 33>;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 42, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_148 = PHI <.MEM_138(20), .MEM_14(43)>
  # DEBUG thisD.39825 => &grantsD.37073
  # DEBUG D#79ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => grantsD.37073.D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => grantsD.37073.D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.39826 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # DEBUG D#76ptD.0 => (long intD.12) grants$D34311$_M_impl$_M_start_104
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.39829 => grants$D34311$_M_impl$_M_start_104
  # DEBUG thisD.39827 => D#71ptD.0
  # DEBUG __nD.39828 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (grants$D34311$_M_impl$_M_start_104 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 39, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       12 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_101>
  pretmp_112 = this_17(D)->D.36957.D.35235._inputsD.33566;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 2, count 0, freq 880, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # output_133 = PHI <0(23), output_40(32)>
  # .MEM_143 = PHI <.MEM_101(23), .MEM_11(32)>
  # prephitmp_10 = PHI <pretmp_112(23), _84(32)>
  # DEBUG outputD.37069 => output_133
  # DEBUG D#178ptD.0 => this_17(D)->D.36957.D.35235._inputsD.33566
  # DEBUG maxD.39789 => D#178ptD.0 + -1
  [LP 6] # .MEM_86 = VDEF <.MEM_143>
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _22 = _Z8ran_nextvD.36964 ();
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 (EH,EXECUTABLE)

;;   basic block 25, loop depth 2, count 0, freq 880, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  _51 = (long intD.12) prephitmp_10;
  _47 = _22 % _51;
  _38 = (intD.9) _47;
  # DEBUG input_offsetD.37070 => _38
  # DEBUG iD.37091 => 0
  # DEBUG iD.37091 => 0
  # VUSE <.MEM_86>
  _84 = this_17(D)->D.36957.D.35235._inputsD.33566;
  if (_84 <= 0)
    goto <bb 30>;
  else
    goto <bb 26>;
;;    succ:       30 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 2, count 0, freq 840, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_2 = (long unsigned intD.14) output_133;
  pretmp_111 = pretmp_2 * 16;
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  pretmp_110 = MEM[(struct vectorD.34419 * *)this_17(D) + 160B];
  _70 = pretmp_2 * 4;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 3, count 0, freq 9550, maybe hot
;;   Invalid sum of incoming frequencies 9795, should be 9550
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_135 = PHI <0(26), i_37(54)>
  # DEBUG iD.37091 => i_135
  _27 = _38 + i_135;
  input_28 = _27 % _84;
  # DEBUG inputD.37068 => input_28
  # DEBUG D#177ptD.0 => (long unsigned intD.14) output_133
  # RANGE ~[2147483648, 18446744071562067967]
  _30 = (long unsigned intD.14) input_28;
  # DEBUG D#142ptD.0 => &this_17(D)->D.36957._requestD.35166
  # DEBUG D#2ptD.0 => D#142ptD.0
  # DEBUG __nD.39796 => _30
  # DEBUG thisD.39797 => D#2ptD.0
  # RANGE [0, 18446744073709551592] NONZERO 18446744073709551608
  _31 = _30 * 24;
  # PT = nonlocal escaped 
  _19 = pretmp_110 + _31;
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _61 = MEM[(struct sRequestD.34315 * *)_19];
  # DEBUG __nD.39792 => D#177ptD.0
  # DEBUG thisD.39793 => D#3ptD.0
  # PT = nonlocal escaped 
  _33 = _61 + pretmp_111;
  # VUSE <.MEM_86>
  _32 = _33->labelD.34318;
  if (_32 != -1)
    goto <bb 28>;
  else
    goto <bb 53>;
;;    succ:       28 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 3, count 0, freq 6876, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#143ptD.0 => &this_17(D)->D.36957.D.35235._inmatchD.34313
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _62 = MEM[(intD.9 * *)this_17(D) + 112B];
  # DEBUG D#4ptD.0 => D#143ptD.0
  # DEBUG __nD.39800 => _30
  # DEBUG thisD.39801 => D#4ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _68 = _30 * 4;
  # PT = nonlocal escaped 
  _69 = _62 + _68;
  # VUSE <.MEM_86>
  _34 = *_69;
  if (_34 == -1)
    goto <bb 29>;
  else
    goto <bb 53>;
;;    succ:       29 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 3, count 0, freq 1925, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#144ptD.0 => &this_17(D)->D.36957.D.35235._outmatchD.34314
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _63 = MEM[(intD.9 * *)this_17(D) + 136B];
  # DEBUG D#4ptD.0 => D#144ptD.0
  # DEBUG __nD.39804 => D#177ptD.0
  # DEBUG thisD.39805 => D#4ptD.0
  # PT = nonlocal escaped 
  _71 = _63 + _70;
  # VUSE <.MEM_86>
  _36 = *_71;
  if (_36 == -1)
    goto <bb 52>;
  else
    goto <bb 53>;
;;    succ:       52 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 2, count 0, freq 880, maybe hot
;;   Invalid sum of incoming frequencies 635, should be 880
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       53 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_86(53), .MEM_39(52), .MEM_86(25)>
  output_40 = output_133 + 1;
  # DEBUG outputD.37069 => output_40
  # DEBUG outputD.37069 => output_40
  # VUSE <.MEM_11>
  _24 = this_17(D)->D.36957.D.35235._outputsD.33567;
  if (_24 <= output_40)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 40, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       30 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # _122 = PHI <_24(30)>
  # _99 = PHI <_84(30)>
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 2, count 0, freq 840, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       30 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 2, count 0, freq 880, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # input_139 = PHI <0(21), input_54(44)>
  # .MEM_145 = PHI <.MEM_138(21), .MEM_14(44)>
  # prephitmp_4 = PHI <prephitmp_13(21), pretmp_65(44)>
  # DEBUG inputD.37068 => input_139
  # DEBUG D#176ptD.0 => this_17(D)->D.36957.D.35235._outputsD.33567
  # DEBUG maxD.39811 => D#176ptD.0 + -1
  [LP 3] # .MEM_87 = VDEF <.MEM_145>
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _74 = _Z8ran_nextvD.36964 ();
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 (EH,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       33 (EH,EXECUTABLE)
  # PT = null { D.40188 } (escaped heap)
  # grants$D34311$_M_impl$_M_start_98 = PHI <grants$D34311$_M_impl$_M_start_104(33)>
<L31>: [LP 3]
  goto <bb 49> (<L25>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 2, count 0, freq 880, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  _75 = (long intD.12) prephitmp_4;
  _76 = _74 % _75;
  _77 = (intD.9) _76;
  # DEBUG output_offsetD.37071 => _77
  # DEBUG oD.37836 => 0
  # DEBUG oD.37836 => 0
  # VUSE <.MEM_87>
  _102 = this_17(D)->D.36957.D.35235._outputsD.33567;
  if (_102 <= 0)
    goto <bb 43>;
  else
    goto <bb 36>;
;;    succ:       43 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 2, count 0, freq 840, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  output_127 = _77 % _102;
  # DEBUG outputD.37069 => output_127
  # RANGE ~[2147483648, 18446744071562067967]
  _129 = (long unsigned intD.14) output_127;
  # DEBUG D#4ptD.0 => &grantsD.37073
  # DEBUG __nD.39814 => _129
  # DEBUG thisD.39815 => D#4ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _6 = _129 * 4;
  # PT = null { D.40188 } (escaped heap)
  _100 = grants$D34311$_M_impl$_M_start_104 + _6;
  # VUSE <.MEM_87>
  _120 = *_100;
  if (_120 == input_139)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 3, count 0, freq 8710, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       42 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  _44 = o_49 + _77;
  output_45 = _44 % _102;
  # DEBUG outputD.37069 => output_45
  # RANGE ~[2147483648, 18446744071562067967]
  _46 = (long unsigned intD.14) output_45;
  # DEBUG D#4ptD.0 => &grantsD.37073
  # DEBUG __nD.39814 => _46
  # DEBUG thisD.39815 => D#4ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _78 = _46 * 4;
  # PT = null { D.40188 } (escaped heap)
  _79 = grants$D34311$_M_impl$_M_start_104 + _78;
  # VUSE <.MEM_87>
  _48 = *_79;
  if (_48 == input_139)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 2, count 0, freq 392, maybe hot
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       37 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # output_116 = PHI <output_45(37)>
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  # _103 = PHI <_78(37)>
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 3, count 0, freq 8318, maybe hot
;;    prev block 38, next block 40, flags: (NEW)
;;    pred:       37 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 2, count 0, freq 430, maybe hot
;;    prev block 39, next block 55, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # output_150 = PHI <output_116(38), output_127(36)>
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  # _151 = PHI <_103(38), _6(36)>
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 2, count 0, freq 430, maybe hot
;;    prev block 40, next block 41, flags: (NEW)
;;    pred:       40 [100.0%]  (FALLTHRU)
  # RANGE [0, 18446744073709551615]
  _50 = (long unsigned intD.14) input_139;
  # DEBUG D#145ptD.0 => &this_17(D)->D.36957.D.35235._inmatchD.34313
  # VUSE <.MEM_87>
  # PT = nonlocal escaped 
  _66 = MEM[(intD.9 * *)this_17(D) + 112B];
  # DEBUG D#4ptD.0 => D#145ptD.0
  # DEBUG __nD.39822 => _50
  # DEBUG thisD.39823 => D#4ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _81 = _50 * 4;
  # PT = nonlocal escaped 
  _82 = _66 + _81;
  # .MEM_52 = VDEF <.MEM_87>
  *_82 = output_150;
  # DEBUG D#146ptD.0 => &this_17(D)->D.36957.D.35235._outmatchD.34314
  # VUSE <.MEM_52>
  # PT = nonlocal escaped 
  _67 = MEM[(intD.9 * *)this_17(D) + 136B];
  # DEBUG D#4ptD.0 => D#146ptD.0
  # DEBUG __nD.39818 => _129
  # DEBUG thisD.39819 => D#4ptD.0
  # PT = nonlocal escaped 
  _80 = _67 + _151;
  # .MEM_53 = VDEF <.MEM_52>
  *_80 = input_139;
  goto <bb 43>;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 2, count 0, freq 802, maybe hot
;;    prev block 55, next block 42, flags: (NEW, REACHABLE)
;;    pred:       36 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 3, count 0, freq 9120, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # o_85 = PHI <0(41), o_49(39)>
  # DEBUG oD.37836 => o_85
  # DEBUG outputD.37069 => output_127
  # DEBUG D#4ptD.0 => &grantsD.37073
  # DEBUG __nD.39814 => _129
  # DEBUG thisD.39815 => D#4ptD.0
  o_49 = o_85 + 1;
  # DEBUG oD.37836 => o_49
  # DEBUG oD.37836 => o_49
  if (o_49 >= _102)
    goto <bb 43>;
  else
    goto <bb 37>;
;;    succ:       43 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 2, count 0, freq 880, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_87(42), .MEM_53(55), .MEM_87(35)>
  input_54 = input_139 + 1;
  # DEBUG inputD.37068 => input_54
  # DEBUG inputD.37068 => input_54
  # VUSE <.MEM_14>
  _41 = this_17(D)->D.36957.D.35235._inputsD.33566;
  if (_41 <= input_54)
    goto <bb 22>;
  else
    goto <bb 44>;
;;    succ:       22 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 2, count 0, freq 840, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       43 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_14>
  pretmp_65 = this_17(D)->D.36957.D.35235._outputsD.33567;
  goto <bb 33>;
;;    succ:       33 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 29, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.39833 => grants$D34311$_M_impl$_M_start_104
  # DEBUG __aD.39831 => D#66ptD.0
  # DEBUG __nD.39832 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.39836 => grants$D34311$_M_impl$_M_start_104
  # DEBUG thisD.39834 => D#62ptD.0
  # DEBUG D.39835 => D#63ptD.0
  # .MEM_88 = VDEF <.MEM_148>
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _ZdlPvD.2766 (grants$D34311$_M_impl$_M_start_104);
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 42, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_148(22), .MEM_88(45)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.39837 => D#73ptD.0
  # DEBUG thisD.39838 => D#73ptD.0
  # DEBUG thisD.39839 => D#73ptD.0
  # .MEM_56 = VDEF <.MEM_58>
  grantsD.37073 ={v} {CLOBBER};
  iter_57 = iter_134 + 1;
  # DEBUG iterD.37072 => iter_57
  # DEBUG iterD.37072 => iter_57
  # VUSE <.MEM_56>
  _18 = this_17(D)->_PIM_iterD.36921;
  if (_18 <= iter_57)
    goto <bb 3>;
  else
    goto <bb 47>;
;;    succ:       3 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [97.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 47, loop depth 1, count 0, freq 41, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       46 [97.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       24 (EH,EXECUTABLE)
  # PT = null { D.40188 } (escaped heap)
  # grants$D34311$_M_impl$_M_start_97 = PHI <grants$D34311$_M_impl$_M_start_104(24)>
<L30>: [LP 6]
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_15 = PHI <.MEM_86(48), .MEM_87(34)>
  # PT = null { D.40188 } (escaped heap)
  # grants$D34311$_M_impl$_M_start_96 = PHI <grants$D34311$_M_impl$_M_start_97(48), grants$D34311$_M_impl$_M_start_98(34)>
<L25>:
  # DEBUG thisD.39842 => &grantsD.37073
  # DEBUG D#79ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => grantsD.37073.D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => grantsD.37073.D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &grantsD.37073.D.34311
  # DEBUG thisD.39843 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # DEBUG D#76ptD.0 => (long intD.12) grants$D34311$_M_impl$_M_start_96
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.39846 => grants$D34311$_M_impl$_M_start_96
  # DEBUG thisD.39844 => D#71ptD.0
  # DEBUG __nD.39845 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (grants$D34311$_M_impl$_M_start_96 != 0B)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       49 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.39850 => grants$D34311$_M_impl$_M_start_96
  # DEBUG __aD.39848 => D#66ptD.0
  # DEBUG __nD.39849 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.39853 => grants$D34311$_M_impl$_M_start_96
  # DEBUG thisD.39851 => D#62ptD.0
  # DEBUG D.39852 => D#63ptD.0
  # .MEM_94 = VDEF <.MEM_15>
  # USE = nonlocal null { D.40188 } (escaped heap)
  # CLB = nonlocal null { D.40188 } (escaped heap)
  _ZdlPvD.2766 (grants$D34311$_M_impl$_M_start_96);
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       49 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_15(49), .MEM_94(50)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.39854 => D#73ptD.0
  # DEBUG thisD.39855 => D#73ptD.0
  # DEBUG thisD.39856 => D#73ptD.0
  resx 5
;;    succ:      

;;   basic block 52, loop depth 2, count 0, freq 173, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       29 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # input_121 = PHI <input_28(29)>
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  # _114 = PHI <_70(29)>
  # DEBUG D#4ptD.0 => &grantsD.37073
  # DEBUG __nD.39808 => D#177ptD.0
  # DEBUG thisD.39809 => D#4ptD.0
  # PT = null { D.40188 } (escaped heap)
  _73 = grants$D34311$_M_impl$_M_start_104 + _114;
  # .MEM_39 = VDEF <.MEM_86>
  *_73 = input_121;
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 3, count 0, freq 9377, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       28 [72.0%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [28.0%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  i_37 = i_135 + 1;
  # DEBUG iD.37091 => i_37
  # DEBUG iD.37091 => i_37
  if (i_37 >= _84)
    goto <bb 30>;
  else
    goto <bb 54>;
;;    succ:       30 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 3, count 0, freq 8955, maybe hot
;;    prev block 53, next block 1, flags: (NEW)
;;    pred:       53 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

}



;; Function PIM::~PIM() (_ZN3PIMD2Ev, funcdef_no=1723, decl_uid=36954, cgraph_uid=426, symbol_order=427)


Pass statistics:
----------------

PIM::~PIM() (struct PIMD.36919 * const thisD.36955)
{
  struct vectorD.34419 * __firstD.40264;
  struct ModuleD.28688 * * _8;
  struct vectorD.34419 * _9;
  intD.9 * _11;
  intD.9 * _12;
  struct sRequestD.34315 * _16;
  charD.10 * const _19;
  const charD.10 * _20;
  charD.10 * const _21;
  const charD.10 * _22;
  struct vectorD.34419 * pretmp_32;
  struct vectorD.34419 * prephitmp_33;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#171ptD.0 => &this_2(D)->D.36957
  # DEBUG thisD.40086 => D#171ptD.0
  # .MEM_4 = VDEF <.MEM_1(D)>
  MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#187ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)]._requestD.35166
  # DEBUG thisD.40261 => D#187ptD.0
  # DEBUG D#169ptD.0 => &D#187ptD.0->D.35164
  # DEBUG thisD.40080 => D#169ptD.0
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  _9 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  __first_14 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.40264 => __first_14
  # DEBUG __lastD.40263 => _9
  # DEBUG __firstD.40269 => __first_14
  if (_9 == __first_14)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_13 = PHI <__first_14(3), __first_17(7)>
  # .MEM_84 = PHI <.MEM_4(3), .MEM_36(7)>
  # DEBUG __firstD.40269 => __first_13
  # DEBUG __rD.39970 => __first_13
  # DEBUG __pointerD.40270 => NULL
  # DEBUG thisD.40271 => NULL
  # DEBUG thisD.39935 => D#164ptD.0
  # DEBUG D#121ptD.0 => D#166ptD.0
  # DEBUG D#122ptD.0 => D#167ptD.0
  # DEBUG __firstD.39934 => D#121ptD.0
  # DEBUG __lastD.39933 => D#122ptD.0
  # DEBUG D.39932 => D#123ptD.0
  # DEBUG D#120ptD.0 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#121ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#118ptD.0 => D#120ptD.0
  # DEBUG __firstD.39497 => D#117ptD.0
  # DEBUG __lastD.39496 => D#118ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D.39486 => D#113ptD.0
  # DEBUG D.39485 => D#114ptD.0
  # DEBUG thisD.40272 => D#165ptD.0
  # DEBUG D#163ptD.0 => D#165ptD.0->_M_implD.37325._M_end_of_storageD.37329
  # DEBUG D#162ptD.0 => (long intD.12) D#163ptD.0
  # VUSE <.MEM_84>
  # PT = nonlocal escaped 
  _16 = MEM[(struct _Vector_baseD.37092 *)__first_13]._M_implD.37325._M_startD.37327;
  # DEBUG D#161ptD.0 => (long intD.12) _16
  # DEBUG D#160ptD.0 => D#162ptD.0 - D#161ptD.0
  # DEBUG D#159ptD.0 => D#160ptD.0 /[ex] 16
  # DEBUG D#156ptD.0 => D#165ptD.0
  # DEBUG D#157ptD.0 => (long unsigned intD.14) D#159ptD.0
  # DEBUG __pD.40275 => _16
  # DEBUG thisD.40273 => D#156ptD.0
  # DEBUG __nD.40274 => D#157ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  if (_16 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#153ptD.0 => &D#154ptD.0->_M_implD.37325
  # DEBUG D#151ptD.0 => D#153ptD.0
  # DEBUG D#152ptD.0 => D#155ptD.0
  # DEBUG __pD.40279 => _16
  # DEBUG __aD.40277 => D#151ptD.0
  # DEBUG __nD.40278 => D#152ptD.0
  # DEBUG D#150ptD.0 => D#152ptD.0
  # DEBUG D#149ptD.0 => D#151ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0
  # DEBUG __pD.40282 => _16
  # DEBUG thisD.40280 => D#147ptD.0
  # DEBUG D.40281 => D#148ptD.0
  # .MEM_31 = VDEF <.MEM_84>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_84(4), .MEM_31(5)>
  # DEBUG D#158ptD.0 => &D#165ptD.0->_M_implD.37325
  # DEBUG thisD.40283 => D#158ptD.0
  # DEBUG thisD.40284 => D#158ptD.0
  # DEBUG thisD.40285 => D#158ptD.0
  # .MEM_36 = VDEF <.MEM_24>
  MEM[(struct  &)__first_13] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_17 = __first_13 + 24;
  # DEBUG __firstD.40269 => __first_17
  # DEBUG __firstD.40269 => __first_17
  if (_9 == __first_17)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_36>
  pretmp_32 = MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_83 = PHI <.MEM_36(8), .MEM_4(2)>
  # PT = nonlocal escaped 
  # prephitmp_33 = PHI <pretmp_32(8), __first_14(2)>
  # DEBUG D#170ptD.0 => &D#187ptD.0->D.35164
  # DEBUG thisD.40286 => D#170ptD.0
  # DEBUG D#101ptD.0 => D#170ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#100ptD.0 => (long intD.12) D#101ptD.0
  # DEBUG D#188ptD.0 => MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657
  # DEBUG D#99ptD.0 => (long intD.12) D#188ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0 - D#99ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0 /[ex] 24
  # DEBUG D#94ptD.0 => D#170ptD.0
  # DEBUG D#95ptD.0 => (long unsigned intD.14) D#97ptD.0
  # DEBUG __pD.40289 => D#188ptD.0
  # DEBUG thisD.40287 => D#94ptD.0
  # DEBUG __nD.40288 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  if (prephitmp_33 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#91ptD.0 => &D#92ptD.0->_M_implD.34655
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#93ptD.0
  # DEBUG __pD.40293 => D#188ptD.0
  # DEBUG __aD.40291 => D#89ptD.0
  # DEBUG __nD.40292 => D#90ptD.0
  # DEBUG D#88ptD.0 => D#90ptD.0
  # DEBUG D#87ptD.0 => D#89ptD.0
  # DEBUG D#85ptD.0 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#88ptD.0
  # DEBUG __pD.40296 => D#188ptD.0
  # DEBUG thisD.40294 => D#85ptD.0
  # DEBUG D.40295 => D#86ptD.0
  # .MEM_37 = VDEF <.MEM_83>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_33);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_83(9), .MEM_37(10)>
  # DEBUG D#96ptD.0 => &D#170ptD.0->_M_implD.34655
  # DEBUG thisD.40297 => D#96ptD.0
  # DEBUG thisD.40298 => D#96ptD.0
  # DEBUG thisD.40299 => D#96ptD.0
  # .MEM_42 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#186ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235
  # DEBUG thisD.40230 => D#186ptD.0
  # .MEM_43 = VDEF <.MEM_42>
  MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#84ptD.0 => &D#186ptD.0->_outmatchD.34314
  # DEBUG thisD.40231 => D#84ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.40232 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _11
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.40235 => _11
  # DEBUG thisD.40233 => D#71ptD.0
  # DEBUG __nD.40234 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (_11 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.40239 => _11
  # DEBUG __aD.40237 => D#66ptD.0
  # DEBUG __nD.40238 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.40242 => _11
  # DEBUG thisD.40240 => D#62ptD.0
  # DEBUG D.40241 => D#63ptD.0
  # .MEM_44 = VDEF <.MEM_43>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_11);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_43(11), .MEM_44(12)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.40243 => D#73ptD.0
  # DEBUG thisD.40244 => D#73ptD.0
  # DEBUG thisD.40245 => D#73ptD.0
  # .MEM_49 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#186ptD.0->_inmatchD.34313
  # DEBUG thisD.40246 => D#83ptD.0
  # DEBUG D#79ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.40247 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_49>
  # PT = nonlocal escaped 
  _12 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _12
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.40250 => _12
  # DEBUG thisD.40248 => D#71ptD.0
  # DEBUG __nD.40249 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (_12 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.40254 => _12
  # DEBUG __aD.40252 => D#66ptD.0
  # DEBUG __nD.40253 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.40257 => _12
  # DEBUG thisD.40255 => D#62ptD.0
  # DEBUG D.40256 => D#63ptD.0
  # .MEM_50 = VDEF <.MEM_49>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_12);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_49(13), .MEM_50(14)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.40258 => D#73ptD.0
  # DEBUG thisD.40259 => D#73ptD.0
  # DEBUG thisD.40260 => D#73ptD.0
  # .MEM_55 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#185ptD.0 => &MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407
  # DEBUG thisD.40300 => D#185ptD.0
  # .MEM_56 = VDEF <.MEM_55>
  MEM[(struct ModuleD.28688 *)this_2(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#61ptD.0 => &D#185ptD.0->_childrenD.29438
  # DEBUG thisD.40301 => D#61ptD.0
  # DEBUG D#55ptD.0 => &D#61ptD.0->D.29436
  # DEBUG thisD.39170 => D#55ptD.0
  # DEBUG D#58ptD.0 => D#61ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#57ptD.0 => D#61ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#13ptD.0 => D#57ptD.0
  # DEBUG D#14ptD.0 => D#58ptD.0
  # DEBUG __firstD.39169 => D#13ptD.0
  # DEBUG __lastD.39168 => D#14ptD.0
  # DEBUG D.39167 => D#15ptD.0
  # DEBUG D#12ptD.0 => D#14ptD.0
  # DEBUG D#11ptD.0 => D#13ptD.0
  # DEBUG D#9ptD.0 => D#11ptD.0
  # DEBUG D#10ptD.0 => D#12ptD.0
  # DEBUG __firstD.38962 => D#9ptD.0
  # DEBUG __lastD.38961 => D#10ptD.0
  # DEBUG D#8ptD.0 => D#10ptD.0
  # DEBUG D#7ptD.0 => D#9ptD.0
  # DEBUG D#5ptD.0 => D#7ptD.0
  # DEBUG D#6ptD.0 => D#8ptD.0
  # DEBUG D.38951 => D#5ptD.0
  # DEBUG D.38950 => D#6ptD.0
  # DEBUG D#56ptD.0 => &D#61ptD.0->D.29436
  # DEBUG thisD.40302 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#53ptD.0 => (long intD.12) D#54ptD.0
  # VUSE <.MEM_56>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.28694 *)this_2(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#52ptD.0 => (long intD.12) _8
  # DEBUG D#51ptD.0 => D#53ptD.0 - D#52ptD.0
  # DEBUG D#50ptD.0 => D#51ptD.0 /[ex] 8
  # DEBUG D#47ptD.0 => D#56ptD.0
  # DEBUG D#48ptD.0 => (long unsigned intD.14) D#50ptD.0
  # DEBUG __pD.40305 => _8
  # DEBUG thisD.40303 => D#47ptD.0
  # DEBUG __nD.40304 => D#48ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  if (_8 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#44ptD.0 => &D#45ptD.0->_M_implD.28927
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#43ptD.0 => D#46ptD.0
  # DEBUG __pD.40309 => _8
  # DEBUG __aD.40307 => D#42ptD.0
  # DEBUG __nD.40308 => D#43ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#38ptD.0 => D#40ptD.0
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG __pD.40312 => _8
  # DEBUG thisD.40310 => D#38ptD.0
  # DEBUG D.40311 => D#39ptD.0
  # .MEM_57 = VDEF <.MEM_56>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_56(15), .MEM_57(16)>
  # DEBUG D#49ptD.0 => &D#56ptD.0->_M_implD.28927
  # DEBUG thisD.40313 => D#49ptD.0
  # DEBUG thisD.40314 => D#49ptD.0
  # DEBUG thisD.40315 => D#49ptD.0
  # .MEM_62 = VDEF <.MEM_28>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#60ptD.0 => &D#185ptD.0->_fullnameD.28691
  # DEBUG thisD.40316 => D#60ptD.0
  # DEBUG thisD.40317 => D#60ptD.0
  # DEBUG thisD.40326 => D#60ptD.0
  # VUSE <.MEM_62>
  # PT = nonlocal escaped 
  _19 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#60ptD.0
  # DEBUG thisD.38887 => D#1ptD.0
  # DEBUG thisD.40327 => D#60ptD.0
  # PT = nonlocal 
  _20 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_19 != _20)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#36ptD.0 => MEM[(struct basic_stringD.2844 *)D#60ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#35ptD.0 => D#36ptD.0
  # DEBUG thisD.40319 => D#60ptD.0
  # DEBUG __sizeD.40318 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG D#1ptD.0 => D#60ptD.0
  # DEBUG thisD.39052 => D#1ptD.0
  # DEBUG thisD.39053 => D#60ptD.0
  # DEBUG D#33ptD.0 => &MEM[(struct basic_stringD.2844 *)D#60ptD.0]._M_dataplusD.11519
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0 + 1
  # DEBUG __pD.40322 => _19
  # DEBUG __aD.40320 => D#31ptD.0
  # DEBUG __nD.40321 => D#32ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __pD.40325 => _19
  # DEBUG thisD.40323 => D#27ptD.0
  # DEBUG D.40324 => D#28ptD.0
  # .MEM_63 = VDEF <.MEM_62>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_19);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_62(17), .MEM_63(18)>
  # DEBUG D#37ptD.0 => &MEM[(struct basic_stringD.2844 *)D#60ptD.0]._M_dataplusD.11519
  # DEBUG thisD.40328 => D#37ptD.0
  # DEBUG thisD.40329 => D#37ptD.0
  # DEBUG thisD.40330 => D#37ptD.0
  # .MEM_67 = VDEF <.MEM_29>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#59ptD.0 => &D#185ptD.0->_nameD.28690
  # DEBUG thisD.40331 => D#59ptD.0
  # DEBUG thisD.40332 => D#59ptD.0
  # DEBUG thisD.40341 => D#59ptD.0
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  _21 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#59ptD.0
  # DEBUG thisD.38887 => D#1ptD.0
  # DEBUG thisD.40342 => D#59ptD.0
  # PT = nonlocal 
  _22 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_21 != _22)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#36ptD.0 => MEM[(struct basic_stringD.2844 *)D#59ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#35ptD.0 => D#36ptD.0
  # DEBUG thisD.40334 => D#59ptD.0
  # DEBUG __sizeD.40333 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG D#1ptD.0 => D#59ptD.0
  # DEBUG thisD.39052 => D#1ptD.0
  # DEBUG thisD.39053 => D#59ptD.0
  # DEBUG D#33ptD.0 => &MEM[(struct basic_stringD.2844 *)D#59ptD.0]._M_dataplusD.11519
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0 + 1
  # DEBUG __pD.40337 => _21
  # DEBUG __aD.40335 => D#31ptD.0
  # DEBUG __nD.40336 => D#32ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __pD.40340 => _21
  # DEBUG thisD.40338 => D#27ptD.0
  # DEBUG D.40339 => D#28ptD.0
  # .MEM_68 = VDEF <.MEM_67>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_21);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_67(19), .MEM_68(20)>
  # DEBUG D#37ptD.0 => &MEM[(struct basic_stringD.2844 *)D#59ptD.0]._M_dataplusD.11519
  # DEBUG thisD.40343 => D#37ptD.0
  # DEBUG thisD.40344 => D#37ptD.0
  # DEBUG thisD.40345 => D#37ptD.0
  # .MEM_5 = VDEF <.MEM_30>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_5>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for MEM[(struct DenseAllocator *)this_2(D)].D.35235.D.34407._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct DenseAllocator *)this_2(D)]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 168
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 160B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 160B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Vector_base *)__first_13]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_13]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_13]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_13]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_14 + 24, + , 24](no_overflow) != _9
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _9 - (unsigned long) (__first_14 + 24) & 7) == 0
    # of iterations (((unsigned long) _9 - (unsigned long) (__first_14 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)__first_13]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_13]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_13]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_13]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_14
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_14]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_14 + 24, + , 24](no_overflow) != _9
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _9 - (unsigned long) (__first_14 + 24) & 7) == 0
    # of iterations (((unsigned long) _9 - (unsigned long) (__first_14 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 160B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:23, LOOPS:1, CONDITIONS:9, STMTS:364)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_9 bb_3 })
  {
    <bb 2>:
    # DEBUG D#171 => &this_2(D)->D.36957
    # DEBUG this => D#171
    # .MEM_4 = VDEF <.MEM_1(D)>
    MEM[(struct DenseAllocator *)this_2(D)].D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV14DenseAllocator + 16B];
    # DEBUG D#187 => &MEM[(struct DenseAllocator *)this_2(D)]._request
    # DEBUG this => D#187
    # DEBUG D#169 => &D#187->D.35164
    # DEBUG this => D#169
    # VUSE <.MEM_4>
    _9 = MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_finish;
    # VUSE <.MEM_4>
    __first_14 = MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_start;
    # DEBUG __first => __first_14
    # DEBUG __last => _9
    # DEBUG __first => __first_14
    if (_9 == __first_14)
      goto <bb 9>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:

  }
  bb_8 (preds = {bb_6 }, succs = {bb_22 })
  {
    <bb 8>:

  }
  bb_22 (preds = {bb_8 }, succs = {bb_9 })
  {
    <bb 22>:
    # VUSE <.MEM_36>
    pretmp_32 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;

  }
  bb_9 (preds = {bb_22 bb_2 }, succs = {bb_10 bb_11 })
  {
    <bb 9>:
    # .MEM_83 = PHI <.MEM_36(22), .MEM_4(2)>
    # prephitmp_33 = PHI <pretmp_32(22), __first_14(2)>
    # DEBUG D#170 => &D#187->D.35164
    # DEBUG this => D#170
    # DEBUG D#101 => D#170->_M_impl._M_end_of_storage
    # DEBUG D#100 => (long int) D#101
    # DEBUG D#188 => MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start
    # DEBUG D#99 => (long int) D#188
    # DEBUG D#98 => D#100 - D#99
    # DEBUG D#97 => D#98 /[ex] 24
    # DEBUG D#94 => D#170
    # DEBUG D#95 => (long unsigned int) D#97
    # DEBUG __p => D#188
    # DEBUG this => D#94
    # DEBUG __n => D#95
    # DEBUG D#93 => D#95
    # DEBUG D#92 => D#94
    if (prephitmp_33 != 0B)
      goto <bb 10>;
    else
      goto <bb 11>;

  }
  bb_10 (preds = {bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # DEBUG D#91 => &D#92->_M_impl
    # DEBUG D#89 => D#91
    # DEBUG D#90 => D#93
    # DEBUG __p => D#188
    # DEBUG __a => D#89
    # DEBUG __n => D#90
    # DEBUG D#88 => D#90
    # DEBUG D#87 => D#89
    # DEBUG D#85 => D#87
    # DEBUG D#86 => D#88
    # DEBUG __p => D#188
    # DEBUG this => D#85
    # DEBUG D.40295 => D#86
    # .MEM_37 = VDEF <.MEM_83>
    operator delete (prephitmp_33);

  }
  bb_11 (preds = {bb_9 bb_10 }, succs = {bb_12 bb_13 })
  {
    <bb 11>:
    # .MEM_25 = PHI <.MEM_83(9), .MEM_37(10)>
    # DEBUG D#96 => &D#170->_M_impl
    # DEBUG this => D#96
    # DEBUG this => D#96
    # DEBUG this => D#96
    # .MEM_42 = VDEF <.MEM_25>
    MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
    # DEBUG D#186 => &MEM[(struct DenseAllocator *)this_2(D)].D.35235
    # DEBUG this => D#186
    # .MEM_43 = VDEF <.MEM_42>
    MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
    # DEBUG D#84 => &D#186->_outmatch
    # DEBUG this => D#84
    # DEBUG D#79 => &D#84->D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => D#84->D.34311._M_impl._M_finish
    # DEBUG D#81 => D#84->D.34311._M_impl._M_start
    # DEBUG D#24 => D#81
    # DEBUG D#25 => D#82
    # DEBUG __first => D#24
    # DEBUG __last => D#25
    # DEBUG D.39294 => D#26
    # DEBUG D#23 => D#25
    # DEBUG D#22 => D#24
    # DEBUG D#20 => D#22
    # DEBUG D#21 => D#23
    # DEBUG __first => D#20
    # DEBUG __last => D#21
    # DEBUG D#19 => D#21
    # DEBUG D#18 => D#20
    # DEBUG D#16 => D#18
    # DEBUG D#17 => D#19
    # DEBUG D.38983 => D#16
    # DEBUG D.38982 => D#17
    # DEBUG D#80 => &D#84->D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # VUSE <.MEM_43>
    _11 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
    # DEBUG D#76 => (long int) _11
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#71 => D#80
    # DEBUG D#72 => (long unsigned int) D#74
    # DEBUG __p => _11
    # DEBUG this => D#71
    # DEBUG __n => D#72
    # DEBUG D#70 => D#72
    # DEBUG D#69 => D#71
    if (_11 != 0B)
      goto <bb 12>;
    else
      goto <bb 13>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 })
  {
    <bb 12>:
    # DEBUG D#68 => &D#69->_M_impl
    # DEBUG D#66 => D#68
    # DEBUG D#67 => D#70
    # DEBUG __p => _11
    # DEBUG __a => D#66
    # DEBUG __n => D#67
    # DEBUG D#65 => D#67
    # DEBUG D#64 => D#66
    # DEBUG D#62 => D#64
    # DEBUG D#63 => D#65
    # DEBUG __p => _11
    # DEBUG this => D#62
    # DEBUG D.40241 => D#63
    # .MEM_44 = VDEF <.MEM_43>
    operator delete (_11);

  }
  bb_13 (preds = {bb_11 bb_12 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # .MEM_26 = PHI <.MEM_43(11), .MEM_44(12)>
    # DEBUG D#73 => &D#80->_M_impl
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    # .MEM_49 = VDEF <.MEM_26>
    MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
    # DEBUG D#83 => &D#186->_inmatch
    # DEBUG this => D#83
    # DEBUG D#79 => &D#83->D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => D#83->D.34311._M_impl._M_finish
    # DEBUG D#81 => D#83->D.34311._M_impl._M_start
    # DEBUG D#24 => D#81
    # DEBUG D#25 => D#82
    # DEBUG __first => D#24
    # DEBUG __last => D#25
    # DEBUG D.39294 => D#26
    # DEBUG D#23 => D#25
    # DEBUG D#22 => D#24
    # DEBUG D#20 => D#22
    # DEBUG D#21 => D#23
    # DEBUG __first => D#20
    # DEBUG __last => D#21
    # DEBUG D#19 => D#21
    # DEBUG D#18 => D#20
    # DEBUG D#16 => D#18
    # DEBUG D#17 => D#19
    # DEBUG D.38983 => D#16
    # DEBUG D.38982 => D#17
    # DEBUG D#80 => &D#83->D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # VUSE <.MEM_49>
    _12 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
    # DEBUG D#76 => (long int) _12
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#71 => D#80
    # DEBUG D#72 => (long unsigned int) D#74
    # DEBUG __p => _12
    # DEBUG this => D#71
    # DEBUG __n => D#72
    # DEBUG D#70 => D#72
    # DEBUG D#69 => D#71
    if (_12 != 0B)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:
    # DEBUG D#68 => &D#69->_M_impl
    # DEBUG D#66 => D#68
    # DEBUG D#67 => D#70
    # DEBUG __p => _12
    # DEBUG __a => D#66
    # DEBUG __n => D#67
    # DEBUG D#65 => D#67
    # DEBUG D#64 => D#66
    # DEBUG D#62 => D#64
    # DEBUG D#63 => D#65
    # DEBUG __p => _12
    # DEBUG this => D#62
    # DEBUG D.40256 => D#63
    # .MEM_50 = VDEF <.MEM_49>
    operator delete (_12);

  }
  bb_15 (preds = {bb_13 bb_14 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_27 = PHI <.MEM_49(13), .MEM_50(14)>
    # DEBUG D#73 => &D#80->_M_impl
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    # .MEM_55 = VDEF <.MEM_27>
    MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
    # DEBUG D#185 => &MEM[(struct Allocator *)this_2(D)].D.34407
    # DEBUG this => D#185
    # .MEM_56 = VDEF <.MEM_55>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#61 => &D#185->_children
    # DEBUG this => D#61
    # DEBUG D#55 => &D#61->D.29436
    # DEBUG this => D#55
    # DEBUG D#58 => D#61->D.29436._M_impl._M_finish
    # DEBUG D#57 => D#61->D.29436._M_impl._M_start
    # DEBUG D#13 => D#57
    # DEBUG D#14 => D#58
    # DEBUG __first => D#13
    # DEBUG __last => D#14
    # DEBUG D.39167 => D#15
    # DEBUG D#12 => D#14
    # DEBUG D#11 => D#13
    # DEBUG D#9 => D#11
    # DEBUG D#10 => D#12
    # DEBUG __first => D#9
    # DEBUG __last => D#10
    # DEBUG D#8 => D#10
    # DEBUG D#7 => D#9
    # DEBUG D#5 => D#7
    # DEBUG D#6 => D#8
    # DEBUG D.38951 => D#5
    # DEBUG D.38950 => D#6
    # DEBUG D#56 => &D#61->D.29436
    # DEBUG this => D#56
    # DEBUG D#54 => D#56->_M_impl._M_end_of_storage
    # DEBUG D#53 => (long int) D#54
    # VUSE <.MEM_56>
    _8 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#52 => (long int) _8
    # DEBUG D#51 => D#53 - D#52
    # DEBUG D#50 => D#51 /[ex] 8
    # DEBUG D#47 => D#56
    # DEBUG D#48 => (long unsigned int) D#50
    # DEBUG __p => _8
    # DEBUG this => D#47
    # DEBUG __n => D#48
    # DEBUG D#46 => D#48
    # DEBUG D#45 => D#47
    if (_8 != 0B)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # DEBUG D#44 => &D#45->_M_impl
    # DEBUG D#42 => D#44
    # DEBUG D#43 => D#46
    # DEBUG __p => _8
    # DEBUG __a => D#42
    # DEBUG __n => D#43
    # DEBUG D#41 => D#43
    # DEBUG D#40 => D#42
    # DEBUG D#38 => D#40
    # DEBUG D#39 => D#41
    # DEBUG __p => _8
    # DEBUG this => D#38
    # DEBUG D.40311 => D#39
    # .MEM_57 = VDEF <.MEM_56>
    operator delete (_8);

  }
  bb_17 (preds = {bb_15 bb_16 }, succs = {bb_18 bb_19 })
  {
    <bb 17>:
    # .MEM_28 = PHI <.MEM_56(15), .MEM_57(16)>
    # DEBUG D#49 => &D#56->_M_impl
    # DEBUG this => D#49
    # DEBUG this => D#49
    # DEBUG this => D#49
    # .MEM_62 = VDEF <.MEM_28>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#60 => &D#185->_fullname
    # DEBUG this => D#60
    # DEBUG this => D#60
    # DEBUG this => D#60
    # VUSE <.MEM_62>
    _19 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#1 => D#60
    # DEBUG this => D#1
    # DEBUG this => D#60
    _20 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
    if (_19 != _20)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#36 => MEM[(struct basic_string *)D#60].D.11539._M_allocated_capacity
    # DEBUG D#35 => D#36
    # DEBUG this => D#60
    # DEBUG __size => D#35
    # DEBUG D#34 => D#35
    # DEBUG D#1 => D#60
    # DEBUG this => D#1
    # DEBUG this => D#60
    # DEBUG D#33 => &MEM[(struct basic_string *)D#60]._M_dataplus
    # DEBUG D#31 => D#33
    # DEBUG D#32 => D#34 + 1
    # DEBUG __p => _19
    # DEBUG __a => D#31
    # DEBUG __n => D#32
    # DEBUG D#30 => D#32
    # DEBUG D#29 => D#31
    # DEBUG D#27 => D#29
    # DEBUG D#28 => D#30
    # DEBUG __p => _19
    # DEBUG this => D#27
    # DEBUG D.40324 => D#28
    # .MEM_63 = VDEF <.MEM_62>
    operator delete (_19);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {bb_20 bb_21 })
  {
    <bb 19>:
    # .MEM_29 = PHI <.MEM_62(17), .MEM_63(18)>
    # DEBUG D#37 => &MEM[(struct basic_string *)D#60]._M_dataplus
    # DEBUG this => D#37
    # DEBUG this => D#37
    # DEBUG this => D#37
    # .MEM_67 = VDEF <.MEM_29>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#59 => &D#185->_name
    # DEBUG this => D#59
    # DEBUG this => D#59
    # DEBUG this => D#59
    # VUSE <.MEM_67>
    _21 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#1 => D#59
    # DEBUG this => D#1
    # DEBUG this => D#59
    _22 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
    if (_21 != _22)
      goto <bb 20>;
    else
      goto <bb 21>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_21 })
  {
    <bb 20>:
    # DEBUG D#36 => MEM[(struct basic_string *)D#59].D.11539._M_allocated_capacity
    # DEBUG D#35 => D#36
    # DEBUG this => D#59
    # DEBUG __size => D#35
    # DEBUG D#34 => D#35
    # DEBUG D#1 => D#59
    # DEBUG this => D#1
    # DEBUG this => D#59
    # DEBUG D#33 => &MEM[(struct basic_string *)D#59]._M_dataplus
    # DEBUG D#31 => D#33
    # DEBUG D#32 => D#34 + 1
    # DEBUG __p => _21
    # DEBUG __a => D#31
    # DEBUG __n => D#32
    # DEBUG D#30 => D#32
    # DEBUG D#29 => D#31
    # DEBUG D#27 => D#29
    # DEBUG D#28 => D#30
    # DEBUG __p => _21
    # DEBUG this => D#27
    # DEBUG D.40339 => D#28
    # .MEM_68 = VDEF <.MEM_67>
    operator delete (_21);

  }
  bb_21 (preds = {bb_19 bb_20 }, succs = {bb_1 })
  {
    <bb 21>:
    # .MEM_30 = PHI <.MEM_67(19), .MEM_68(20)>
    # DEBUG D#37 => &MEM[(struct basic_string *)D#59]._M_dataplus
    # DEBUG this => D#37
    # DEBUG this => D#37
    # DEBUG this => D#37
    # .MEM_5 = VDEF <.MEM_30>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # VUSE <.MEM_5>
    return;

  }
  loop_1 (header = 4, latch = 7, niter = )
  {
    bb_4 (preds = {bb_3 bb_7 }, succs = {bb_5 bb_6 })
    {
      <bb 4>:
      # __first_13 = PHI <__first_14(3), __first_17(7)>
      # .MEM_84 = PHI <.MEM_4(3), .MEM_36(7)>
      # DEBUG __first => __first_13
      # DEBUG __r => __first_13
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#164
      # DEBUG D#121 => D#166
      # DEBUG D#122 => D#167
      # DEBUG __first => D#121
      # DEBUG __last => D#122
      # DEBUG D.39932 => D#123
      # DEBUG D#120 => D#122
      # DEBUG D#119 => D#121
      # DEBUG D#117 => D#119
      # DEBUG D#118 => D#120
      # DEBUG __first => D#117
      # DEBUG __last => D#118
      # DEBUG D#116 => D#118
      # DEBUG D#115 => D#117
      # DEBUG D#113 => D#115
      # DEBUG D#114 => D#116
      # DEBUG D.39486 => D#113
      # DEBUG D.39485 => D#114
      # DEBUG this => D#165
      # DEBUG D#163 => D#165->_M_impl._M_end_of_storage
      # DEBUG D#162 => (long int) D#163
      # VUSE <.MEM_84>
      _16 = MEM[(struct _Vector_base *)__first_13]._M_impl._M_start;
      # DEBUG D#161 => (long int) _16
      # DEBUG D#160 => D#162 - D#161
      # DEBUG D#159 => D#160 /[ex] 16
      # DEBUG D#156 => D#165
      # DEBUG D#157 => (long unsigned int) D#159
      # DEBUG __p => _16
      # DEBUG this => D#156
      # DEBUG __n => D#157
      # DEBUG D#155 => D#157
      # DEBUG D#154 => D#156
      if (_16 != 0B)
        goto <bb 5>;
      else
        goto <bb 6>;

    }
    bb_5 (preds = {bb_4 }, succs = {bb_6 })
    {
      <bb 5>:
      # DEBUG D#153 => &D#154->_M_impl
      # DEBUG D#151 => D#153
      # DEBUG D#152 => D#155
      # DEBUG __p => _16
      # DEBUG __a => D#151
      # DEBUG __n => D#152
      # DEBUG D#150 => D#152
      # DEBUG D#149 => D#151
      # DEBUG D#147 => D#149
      # DEBUG D#148 => D#150
      # DEBUG __p => _16
      # DEBUG this => D#147
      # DEBUG D.40281 => D#148
      # .MEM_31 = VDEF <.MEM_84>
      operator delete (_16);

    }
    bb_6 (preds = {bb_4 bb_5 }, succs = {bb_8 bb_7 })
    {
      <bb 6>:
      # .MEM_24 = PHI <.MEM_84(4), .MEM_31(5)>
      # DEBUG D#158 => &D#165->_M_impl
      # DEBUG this => D#158
      # DEBUG this => D#158
      # DEBUG this => D#158
      # .MEM_36 = VDEF <.MEM_24>
      MEM[(struct  &)__first_13] ={v} {CLOBBER};
      __first_17 = __first_13 + 24;
      # DEBUG __first => __first_17
      # DEBUG __first => __first_17
      if (_9 == __first_17)
        goto <bb 8>;
      else
        goto <bb 7>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_4 })
    {
      <bb 7>:
      goto <bb 4>;

    }
  }
}

Pass statistics:
----------------

PIM::~PIM() (struct PIMD.36919 * const thisD.36955)
{
  struct vectorD.34419 * __firstD.40264;
  struct ModuleD.28688 * * _8;
  struct vectorD.34419 * _9;
  intD.9 * _11;
  intD.9 * _12;
  struct sRequestD.34315 * _16;
  charD.10 * const _19;
  const charD.10 * _20;
  charD.10 * const _21;
  const charD.10 * _22;
  struct vectorD.34419 * pretmp_32;
  struct vectorD.34419 * prephitmp_33;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#171ptD.0 => &this_2(D)->D.36957
  # DEBUG thisD.40086 => D#171ptD.0
  # .MEM_4 = VDEF <.MEM_1(D)>
  MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#187ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)]._requestD.35166
  # DEBUG thisD.40261 => D#187ptD.0
  # DEBUG D#169ptD.0 => &D#187ptD.0->D.35164
  # DEBUG thisD.40080 => D#169ptD.0
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  _9 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  __first_14 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.40264 => __first_14
  # DEBUG __lastD.40263 => _9
  # DEBUG __firstD.40269 => __first_14
  if (_9 == __first_14)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_13 = PHI <__first_14(3), __first_17(7)>
  # .MEM_84 = PHI <.MEM_4(3), .MEM_36(7)>
  # DEBUG __firstD.40269 => __first_13
  # DEBUG __rD.39970 => __first_13
  # DEBUG __pointerD.40270 => NULL
  # DEBUG thisD.40271 => NULL
  # DEBUG thisD.39935 => D#164ptD.0
  # DEBUG D#121ptD.0 => D#166ptD.0
  # DEBUG D#122ptD.0 => D#167ptD.0
  # DEBUG __firstD.39934 => D#121ptD.0
  # DEBUG __lastD.39933 => D#122ptD.0
  # DEBUG D.39932 => D#123ptD.0
  # DEBUG D#120ptD.0 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#121ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#118ptD.0 => D#120ptD.0
  # DEBUG __firstD.39497 => D#117ptD.0
  # DEBUG __lastD.39496 => D#118ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D.39486 => D#113ptD.0
  # DEBUG D.39485 => D#114ptD.0
  # DEBUG thisD.40272 => D#165ptD.0
  # DEBUG D#163ptD.0 => D#165ptD.0->_M_implD.37325._M_end_of_storageD.37329
  # DEBUG D#162ptD.0 => (long intD.12) D#163ptD.0
  # VUSE <.MEM_84>
  # PT = nonlocal escaped 
  _16 = MEM[(struct _Vector_baseD.37092 *)__first_13]._M_implD.37325._M_startD.37327;
  # DEBUG D#161ptD.0 => (long intD.12) _16
  # DEBUG D#160ptD.0 => D#162ptD.0 - D#161ptD.0
  # DEBUG D#159ptD.0 => D#160ptD.0 /[ex] 16
  # DEBUG D#156ptD.0 => D#165ptD.0
  # DEBUG D#157ptD.0 => (long unsigned intD.14) D#159ptD.0
  # DEBUG __pD.40275 => _16
  # DEBUG thisD.40273 => D#156ptD.0
  # DEBUG __nD.40274 => D#157ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  if (_16 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#153ptD.0 => &D#154ptD.0->_M_implD.37325
  # DEBUG D#151ptD.0 => D#153ptD.0
  # DEBUG D#152ptD.0 => D#155ptD.0
  # DEBUG __pD.40279 => _16
  # DEBUG __aD.40277 => D#151ptD.0
  # DEBUG __nD.40278 => D#152ptD.0
  # DEBUG D#150ptD.0 => D#152ptD.0
  # DEBUG D#149ptD.0 => D#151ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0
  # DEBUG __pD.40282 => _16
  # DEBUG thisD.40280 => D#147ptD.0
  # DEBUG D.40281 => D#148ptD.0
  # .MEM_31 = VDEF <.MEM_84>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_84(4), .MEM_31(5)>
  # DEBUG D#158ptD.0 => &D#165ptD.0->_M_implD.37325
  # DEBUG thisD.40283 => D#158ptD.0
  # DEBUG thisD.40284 => D#158ptD.0
  # DEBUG thisD.40285 => D#158ptD.0
  # .MEM_36 = VDEF <.MEM_24>
  MEM[(struct  &)__first_13] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_17 = __first_13 + 24;
  # DEBUG __firstD.40269 => __first_17
  # DEBUG __firstD.40269 => __first_17
  if (_9 == __first_17)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 22, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       22 [100.0%]  (FALLTHRU)

;;   basic block 22, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_36>
  pretmp_32 = MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 10, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_83 = PHI <.MEM_36(22), .MEM_4(2)>
  # PT = nonlocal escaped 
  # prephitmp_33 = PHI <pretmp_32(22), __first_14(2)>
  # DEBUG D#170ptD.0 => &D#187ptD.0->D.35164
  # DEBUG thisD.40286 => D#170ptD.0
  # DEBUG D#101ptD.0 => D#170ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#100ptD.0 => (long intD.12) D#101ptD.0
  # DEBUG D#188ptD.0 => MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657
  # DEBUG D#99ptD.0 => (long intD.12) D#188ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0 - D#99ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0 /[ex] 24
  # DEBUG D#94ptD.0 => D#170ptD.0
  # DEBUG D#95ptD.0 => (long unsigned intD.14) D#97ptD.0
  # DEBUG __pD.40289 => D#188ptD.0
  # DEBUG thisD.40287 => D#94ptD.0
  # DEBUG __nD.40288 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  if (prephitmp_33 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#91ptD.0 => &D#92ptD.0->_M_implD.34655
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#93ptD.0
  # DEBUG __pD.40293 => D#188ptD.0
  # DEBUG __aD.40291 => D#89ptD.0
  # DEBUG __nD.40292 => D#90ptD.0
  # DEBUG D#88ptD.0 => D#90ptD.0
  # DEBUG D#87ptD.0 => D#89ptD.0
  # DEBUG D#85ptD.0 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#88ptD.0
  # DEBUG __pD.40296 => D#188ptD.0
  # DEBUG thisD.40294 => D#85ptD.0
  # DEBUG D.40295 => D#86ptD.0
  # .MEM_37 = VDEF <.MEM_83>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_33);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_83(9), .MEM_37(10)>
  # DEBUG D#96ptD.0 => &D#170ptD.0->_M_implD.34655
  # DEBUG thisD.40297 => D#96ptD.0
  # DEBUG thisD.40298 => D#96ptD.0
  # DEBUG thisD.40299 => D#96ptD.0
  # .MEM_42 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#186ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235
  # DEBUG thisD.40230 => D#186ptD.0
  # .MEM_43 = VDEF <.MEM_42>
  MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#84ptD.0 => &D#186ptD.0->_outmatchD.34314
  # DEBUG thisD.40231 => D#84ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.40232 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _11
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.40235 => _11
  # DEBUG thisD.40233 => D#71ptD.0
  # DEBUG __nD.40234 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (_11 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.40239 => _11
  # DEBUG __aD.40237 => D#66ptD.0
  # DEBUG __nD.40238 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.40242 => _11
  # DEBUG thisD.40240 => D#62ptD.0
  # DEBUG D.40241 => D#63ptD.0
  # .MEM_44 = VDEF <.MEM_43>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_11);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_43(11), .MEM_44(12)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.40243 => D#73ptD.0
  # DEBUG thisD.40244 => D#73ptD.0
  # DEBUG thisD.40245 => D#73ptD.0
  # .MEM_49 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#186ptD.0->_inmatchD.34313
  # DEBUG thisD.40246 => D#83ptD.0
  # DEBUG D#79ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.40247 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_49>
  # PT = nonlocal escaped 
  _12 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _12
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.40250 => _12
  # DEBUG thisD.40248 => D#71ptD.0
  # DEBUG __nD.40249 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (_12 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.40254 => _12
  # DEBUG __aD.40252 => D#66ptD.0
  # DEBUG __nD.40253 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.40257 => _12
  # DEBUG thisD.40255 => D#62ptD.0
  # DEBUG D.40256 => D#63ptD.0
  # .MEM_50 = VDEF <.MEM_49>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_12);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_49(13), .MEM_50(14)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.40258 => D#73ptD.0
  # DEBUG thisD.40259 => D#73ptD.0
  # DEBUG thisD.40260 => D#73ptD.0
  # .MEM_55 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#185ptD.0 => &MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407
  # DEBUG thisD.40300 => D#185ptD.0
  # .MEM_56 = VDEF <.MEM_55>
  MEM[(struct ModuleD.28688 *)this_2(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#61ptD.0 => &D#185ptD.0->_childrenD.29438
  # DEBUG thisD.40301 => D#61ptD.0
  # DEBUG D#55ptD.0 => &D#61ptD.0->D.29436
  # DEBUG thisD.39170 => D#55ptD.0
  # DEBUG D#58ptD.0 => D#61ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#57ptD.0 => D#61ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#13ptD.0 => D#57ptD.0
  # DEBUG D#14ptD.0 => D#58ptD.0
  # DEBUG __firstD.39169 => D#13ptD.0
  # DEBUG __lastD.39168 => D#14ptD.0
  # DEBUG D.39167 => D#15ptD.0
  # DEBUG D#12ptD.0 => D#14ptD.0
  # DEBUG D#11ptD.0 => D#13ptD.0
  # DEBUG D#9ptD.0 => D#11ptD.0
  # DEBUG D#10ptD.0 => D#12ptD.0
  # DEBUG __firstD.38962 => D#9ptD.0
  # DEBUG __lastD.38961 => D#10ptD.0
  # DEBUG D#8ptD.0 => D#10ptD.0
  # DEBUG D#7ptD.0 => D#9ptD.0
  # DEBUG D#5ptD.0 => D#7ptD.0
  # DEBUG D#6ptD.0 => D#8ptD.0
  # DEBUG D.38951 => D#5ptD.0
  # DEBUG D.38950 => D#6ptD.0
  # DEBUG D#56ptD.0 => &D#61ptD.0->D.29436
  # DEBUG thisD.40302 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#53ptD.0 => (long intD.12) D#54ptD.0
  # VUSE <.MEM_56>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.28694 *)this_2(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#52ptD.0 => (long intD.12) _8
  # DEBUG D#51ptD.0 => D#53ptD.0 - D#52ptD.0
  # DEBUG D#50ptD.0 => D#51ptD.0 /[ex] 8
  # DEBUG D#47ptD.0 => D#56ptD.0
  # DEBUG D#48ptD.0 => (long unsigned intD.14) D#50ptD.0
  # DEBUG __pD.40305 => _8
  # DEBUG thisD.40303 => D#47ptD.0
  # DEBUG __nD.40304 => D#48ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  if (_8 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#44ptD.0 => &D#45ptD.0->_M_implD.28927
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#43ptD.0 => D#46ptD.0
  # DEBUG __pD.40309 => _8
  # DEBUG __aD.40307 => D#42ptD.0
  # DEBUG __nD.40308 => D#43ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#38ptD.0 => D#40ptD.0
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG __pD.40312 => _8
  # DEBUG thisD.40310 => D#38ptD.0
  # DEBUG D.40311 => D#39ptD.0
  # .MEM_57 = VDEF <.MEM_56>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_56(15), .MEM_57(16)>
  # DEBUG D#49ptD.0 => &D#56ptD.0->_M_implD.28927
  # DEBUG thisD.40313 => D#49ptD.0
  # DEBUG thisD.40314 => D#49ptD.0
  # DEBUG thisD.40315 => D#49ptD.0
  # .MEM_62 = VDEF <.MEM_28>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#60ptD.0 => &D#185ptD.0->_fullnameD.28691
  # DEBUG thisD.40316 => D#60ptD.0
  # DEBUG thisD.40317 => D#60ptD.0
  # DEBUG thisD.40326 => D#60ptD.0
  # VUSE <.MEM_62>
  # PT = nonlocal escaped 
  _19 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#60ptD.0
  # DEBUG thisD.38887 => D#1ptD.0
  # DEBUG thisD.40327 => D#60ptD.0
  # PT = nonlocal 
  _20 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_19 != _20)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#36ptD.0 => MEM[(struct basic_stringD.2844 *)D#60ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#35ptD.0 => D#36ptD.0
  # DEBUG thisD.40319 => D#60ptD.0
  # DEBUG __sizeD.40318 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG D#1ptD.0 => D#60ptD.0
  # DEBUG thisD.39052 => D#1ptD.0
  # DEBUG thisD.39053 => D#60ptD.0
  # DEBUG D#33ptD.0 => &MEM[(struct basic_stringD.2844 *)D#60ptD.0]._M_dataplusD.11519
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0 + 1
  # DEBUG __pD.40322 => _19
  # DEBUG __aD.40320 => D#31ptD.0
  # DEBUG __nD.40321 => D#32ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __pD.40325 => _19
  # DEBUG thisD.40323 => D#27ptD.0
  # DEBUG D.40324 => D#28ptD.0
  # .MEM_63 = VDEF <.MEM_62>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_19);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_62(17), .MEM_63(18)>
  # DEBUG D#37ptD.0 => &MEM[(struct basic_stringD.2844 *)D#60ptD.0]._M_dataplusD.11519
  # DEBUG thisD.40328 => D#37ptD.0
  # DEBUG thisD.40329 => D#37ptD.0
  # DEBUG thisD.40330 => D#37ptD.0
  # .MEM_67 = VDEF <.MEM_29>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#59ptD.0 => &D#185ptD.0->_nameD.28690
  # DEBUG thisD.40331 => D#59ptD.0
  # DEBUG thisD.40332 => D#59ptD.0
  # DEBUG thisD.40341 => D#59ptD.0
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  _21 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#59ptD.0
  # DEBUG thisD.38887 => D#1ptD.0
  # DEBUG thisD.40342 => D#59ptD.0
  # PT = nonlocal 
  _22 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_21 != _22)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#36ptD.0 => MEM[(struct basic_stringD.2844 *)D#59ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#35ptD.0 => D#36ptD.0
  # DEBUG thisD.40334 => D#59ptD.0
  # DEBUG __sizeD.40333 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG D#1ptD.0 => D#59ptD.0
  # DEBUG thisD.39052 => D#1ptD.0
  # DEBUG thisD.39053 => D#59ptD.0
  # DEBUG D#33ptD.0 => &MEM[(struct basic_stringD.2844 *)D#59ptD.0]._M_dataplusD.11519
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0 + 1
  # DEBUG __pD.40337 => _21
  # DEBUG __aD.40335 => D#31ptD.0
  # DEBUG __nD.40336 => D#32ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __pD.40340 => _21
  # DEBUG thisD.40338 => D#27ptD.0
  # DEBUG D.40339 => D#28ptD.0
  # .MEM_68 = VDEF <.MEM_67>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_21);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_67(19), .MEM_68(20)>
  # DEBUG D#37ptD.0 => &MEM[(struct basic_stringD.2844 *)D#59ptD.0]._M_dataplusD.11519
  # DEBUG thisD.40343 => D#37ptD.0
  # DEBUG thisD.40344 => D#37ptD.0
  # DEBUG thisD.40345 => D#37ptD.0
  # .MEM_5 = VDEF <.MEM_30>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_5>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual PIM::~PIM() (_ZN3PIMD0Ev, funcdef_no=1725, decl_uid=36948, cgraph_uid=428, symbol_order=429)


Pass statistics:
----------------

virtual PIM::~PIM() (struct PIMD.36919 * const thisD.36949)
{
  struct vectorD.34419 * __firstD.40393;
  struct ModuleD.28688 * * _8;
  struct vectorD.34419 * _9;
  intD.9 * _12;
  intD.9 * _13;
  struct sRequestD.34315 * _17;
  charD.10 * const _20;
  const charD.10 * _21;
  charD.10 * const _22;
  const charD.10 * _23;
  struct vectorD.34419 * pretmp_33;
  struct vectorD.34419 * prephitmp_34;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.40088 => this_2(D)
  # DEBUG D#171ptD.0 => &this_2(D)->D.36957
  # DEBUG thisD.40089 => D#171ptD.0
  # .MEM_7 = VDEF <.MEM_1(D)>
  MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#191ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)]._requestD.35166
  # DEBUG thisD.40390 => D#191ptD.0
  # DEBUG D#169ptD.0 => &D#191ptD.0->D.35164
  # DEBUG thisD.40080 => D#169ptD.0
  # VUSE <.MEM_7>
  # PT = nonlocal escaped 
  _9 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_7>
  # PT = nonlocal escaped 
  __first_15 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.40393 => __first_15
  # DEBUG __lastD.40392 => _9
  # DEBUG __firstD.40398 => __first_15
  if (_9 == __first_15)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_14 = PHI <__first_15(3), __first_18(7)>
  # .MEM_85 = PHI <.MEM_7(3), .MEM_37(7)>
  # DEBUG __firstD.40398 => __first_14
  # DEBUG __rD.39970 => __first_14
  # DEBUG __pointerD.40399 => NULL
  # DEBUG thisD.40400 => NULL
  # DEBUG thisD.39935 => D#164ptD.0
  # DEBUG D#121ptD.0 => D#166ptD.0
  # DEBUG D#122ptD.0 => D#167ptD.0
  # DEBUG __firstD.39934 => D#121ptD.0
  # DEBUG __lastD.39933 => D#122ptD.0
  # DEBUG D.39932 => D#123ptD.0
  # DEBUG D#120ptD.0 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#121ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#118ptD.0 => D#120ptD.0
  # DEBUG __firstD.39497 => D#117ptD.0
  # DEBUG __lastD.39496 => D#118ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D.39486 => D#113ptD.0
  # DEBUG D.39485 => D#114ptD.0
  # DEBUG thisD.40401 => D#165ptD.0
  # DEBUG D#163ptD.0 => D#165ptD.0->_M_implD.37325._M_end_of_storageD.37329
  # DEBUG D#162ptD.0 => (long intD.12) D#163ptD.0
  # VUSE <.MEM_85>
  # PT = nonlocal escaped 
  _17 = MEM[(struct _Vector_baseD.37092 *)__first_14]._M_implD.37325._M_startD.37327;
  # DEBUG D#161ptD.0 => (long intD.12) _17
  # DEBUG D#160ptD.0 => D#162ptD.0 - D#161ptD.0
  # DEBUG D#159ptD.0 => D#160ptD.0 /[ex] 16
  # DEBUG D#156ptD.0 => D#165ptD.0
  # DEBUG D#157ptD.0 => (long unsigned intD.14) D#159ptD.0
  # DEBUG __pD.40404 => _17
  # DEBUG thisD.40402 => D#156ptD.0
  # DEBUG __nD.40403 => D#157ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  if (_17 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#153ptD.0 => &D#154ptD.0->_M_implD.37325
  # DEBUG D#151ptD.0 => D#153ptD.0
  # DEBUG D#152ptD.0 => D#155ptD.0
  # DEBUG __pD.40408 => _17
  # DEBUG __aD.40406 => D#151ptD.0
  # DEBUG __nD.40407 => D#152ptD.0
  # DEBUG D#150ptD.0 => D#152ptD.0
  # DEBUG D#149ptD.0 => D#151ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0
  # DEBUG __pD.40411 => _17
  # DEBUG thisD.40409 => D#147ptD.0
  # DEBUG D.40410 => D#148ptD.0
  # .MEM_32 = VDEF <.MEM_85>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_85(4), .MEM_32(5)>
  # DEBUG D#158ptD.0 => &D#165ptD.0->_M_implD.37325
  # DEBUG thisD.40412 => D#158ptD.0
  # DEBUG thisD.40413 => D#158ptD.0
  # DEBUG thisD.40414 => D#158ptD.0
  # .MEM_37 = VDEF <.MEM_25>
  MEM[(struct  &)__first_14] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_18 = __first_14 + 24;
  # DEBUG __firstD.40398 => __first_18
  # DEBUG __firstD.40398 => __first_18
  if (_9 == __first_18)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_37>
  pretmp_33 = MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_84 = PHI <.MEM_37(8), .MEM_7(2)>
  # PT = nonlocal escaped 
  # prephitmp_34 = PHI <pretmp_33(8), __first_15(2)>
  # DEBUG D#170ptD.0 => &D#191ptD.0->D.35164
  # DEBUG thisD.40415 => D#170ptD.0
  # DEBUG D#101ptD.0 => D#170ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#100ptD.0 => (long intD.12) D#101ptD.0
  # DEBUG D#192ptD.0 => MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657
  # DEBUG D#99ptD.0 => (long intD.12) D#192ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0 - D#99ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0 /[ex] 24
  # DEBUG D#94ptD.0 => D#170ptD.0
  # DEBUG D#95ptD.0 => (long unsigned intD.14) D#97ptD.0
  # DEBUG __pD.40418 => D#192ptD.0
  # DEBUG thisD.40416 => D#94ptD.0
  # DEBUG __nD.40417 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  if (prephitmp_34 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#91ptD.0 => &D#92ptD.0->_M_implD.34655
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#93ptD.0
  # DEBUG __pD.40422 => D#192ptD.0
  # DEBUG __aD.40420 => D#89ptD.0
  # DEBUG __nD.40421 => D#90ptD.0
  # DEBUG D#88ptD.0 => D#90ptD.0
  # DEBUG D#87ptD.0 => D#89ptD.0
  # DEBUG D#85ptD.0 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#88ptD.0
  # DEBUG __pD.40425 => D#192ptD.0
  # DEBUG thisD.40423 => D#85ptD.0
  # DEBUG D.40424 => D#86ptD.0
  # .MEM_38 = VDEF <.MEM_84>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_34);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_84(9), .MEM_38(10)>
  # DEBUG D#96ptD.0 => &D#170ptD.0->_M_implD.34655
  # DEBUG thisD.40426 => D#96ptD.0
  # DEBUG thisD.40427 => D#96ptD.0
  # DEBUG thisD.40428 => D#96ptD.0
  # .MEM_43 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#190ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235
  # DEBUG thisD.40359 => D#190ptD.0
  # .MEM_44 = VDEF <.MEM_43>
  MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#84ptD.0 => &D#190ptD.0->_outmatchD.34314
  # DEBUG thisD.40360 => D#84ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.40361 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_44>
  # PT = nonlocal escaped 
  _12 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _12
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.40364 => _12
  # DEBUG thisD.40362 => D#71ptD.0
  # DEBUG __nD.40363 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (_12 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.40368 => _12
  # DEBUG __aD.40366 => D#66ptD.0
  # DEBUG __nD.40367 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.40371 => _12
  # DEBUG thisD.40369 => D#62ptD.0
  # DEBUG D.40370 => D#63ptD.0
  # .MEM_45 = VDEF <.MEM_44>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_12);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_44(11), .MEM_45(12)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.40372 => D#73ptD.0
  # DEBUG thisD.40373 => D#73ptD.0
  # DEBUG thisD.40374 => D#73ptD.0
  # .MEM_50 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#190ptD.0->_inmatchD.34313
  # DEBUG thisD.40375 => D#83ptD.0
  # DEBUG D#79ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.40376 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_50>
  # PT = nonlocal escaped 
  _13 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _13
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.40379 => _13
  # DEBUG thisD.40377 => D#71ptD.0
  # DEBUG __nD.40378 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (_13 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.40383 => _13
  # DEBUG __aD.40381 => D#66ptD.0
  # DEBUG __nD.40382 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.40386 => _13
  # DEBUG thisD.40384 => D#62ptD.0
  # DEBUG D.40385 => D#63ptD.0
  # .MEM_51 = VDEF <.MEM_50>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_13);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_50(13), .MEM_51(14)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.40387 => D#73ptD.0
  # DEBUG thisD.40388 => D#73ptD.0
  # DEBUG thisD.40389 => D#73ptD.0
  # .MEM_56 = VDEF <.MEM_28>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#189ptD.0 => &MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407
  # DEBUG thisD.40429 => D#189ptD.0
  # .MEM_57 = VDEF <.MEM_56>
  MEM[(struct ModuleD.28688 *)this_2(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#61ptD.0 => &D#189ptD.0->_childrenD.29438
  # DEBUG thisD.40430 => D#61ptD.0
  # DEBUG D#55ptD.0 => &D#61ptD.0->D.29436
  # DEBUG thisD.39170 => D#55ptD.0
  # DEBUG D#58ptD.0 => D#61ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#57ptD.0 => D#61ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#13ptD.0 => D#57ptD.0
  # DEBUG D#14ptD.0 => D#58ptD.0
  # DEBUG __firstD.39169 => D#13ptD.0
  # DEBUG __lastD.39168 => D#14ptD.0
  # DEBUG D.39167 => D#15ptD.0
  # DEBUG D#12ptD.0 => D#14ptD.0
  # DEBUG D#11ptD.0 => D#13ptD.0
  # DEBUG D#9ptD.0 => D#11ptD.0
  # DEBUG D#10ptD.0 => D#12ptD.0
  # DEBUG __firstD.38962 => D#9ptD.0
  # DEBUG __lastD.38961 => D#10ptD.0
  # DEBUG D#8ptD.0 => D#10ptD.0
  # DEBUG D#7ptD.0 => D#9ptD.0
  # DEBUG D#5ptD.0 => D#7ptD.0
  # DEBUG D#6ptD.0 => D#8ptD.0
  # DEBUG D.38951 => D#5ptD.0
  # DEBUG D.38950 => D#6ptD.0
  # DEBUG D#56ptD.0 => &D#61ptD.0->D.29436
  # DEBUG thisD.40431 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#53ptD.0 => (long intD.12) D#54ptD.0
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.28694 *)this_2(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#52ptD.0 => (long intD.12) _8
  # DEBUG D#51ptD.0 => D#53ptD.0 - D#52ptD.0
  # DEBUG D#50ptD.0 => D#51ptD.0 /[ex] 8
  # DEBUG D#47ptD.0 => D#56ptD.0
  # DEBUG D#48ptD.0 => (long unsigned intD.14) D#50ptD.0
  # DEBUG __pD.40434 => _8
  # DEBUG thisD.40432 => D#47ptD.0
  # DEBUG __nD.40433 => D#48ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  if (_8 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#44ptD.0 => &D#45ptD.0->_M_implD.28927
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#43ptD.0 => D#46ptD.0
  # DEBUG __pD.40438 => _8
  # DEBUG __aD.40436 => D#42ptD.0
  # DEBUG __nD.40437 => D#43ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#38ptD.0 => D#40ptD.0
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG __pD.40441 => _8
  # DEBUG thisD.40439 => D#38ptD.0
  # DEBUG D.40440 => D#39ptD.0
  # .MEM_58 = VDEF <.MEM_57>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_57(15), .MEM_58(16)>
  # DEBUG D#49ptD.0 => &D#56ptD.0->_M_implD.28927
  # DEBUG thisD.40442 => D#49ptD.0
  # DEBUG thisD.40443 => D#49ptD.0
  # DEBUG thisD.40444 => D#49ptD.0
  # .MEM_63 = VDEF <.MEM_29>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#60ptD.0 => &D#189ptD.0->_fullnameD.28691
  # DEBUG thisD.40445 => D#60ptD.0
  # DEBUG thisD.40446 => D#60ptD.0
  # DEBUG thisD.40455 => D#60ptD.0
  # VUSE <.MEM_63>
  # PT = nonlocal escaped 
  _20 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#60ptD.0
  # DEBUG thisD.38887 => D#1ptD.0
  # DEBUG thisD.40456 => D#60ptD.0
  # PT = nonlocal 
  _21 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_20 != _21)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#36ptD.0 => MEM[(struct basic_stringD.2844 *)D#60ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#35ptD.0 => D#36ptD.0
  # DEBUG thisD.40448 => D#60ptD.0
  # DEBUG __sizeD.40447 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG D#1ptD.0 => D#60ptD.0
  # DEBUG thisD.39052 => D#1ptD.0
  # DEBUG thisD.39053 => D#60ptD.0
  # DEBUG D#33ptD.0 => &MEM[(struct basic_stringD.2844 *)D#60ptD.0]._M_dataplusD.11519
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0 + 1
  # DEBUG __pD.40451 => _20
  # DEBUG __aD.40449 => D#31ptD.0
  # DEBUG __nD.40450 => D#32ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __pD.40454 => _20
  # DEBUG thisD.40452 => D#27ptD.0
  # DEBUG D.40453 => D#28ptD.0
  # .MEM_64 = VDEF <.MEM_63>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_20);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_63(17), .MEM_64(18)>
  # DEBUG D#37ptD.0 => &MEM[(struct basic_stringD.2844 *)D#60ptD.0]._M_dataplusD.11519
  # DEBUG thisD.40457 => D#37ptD.0
  # DEBUG thisD.40458 => D#37ptD.0
  # DEBUG thisD.40459 => D#37ptD.0
  # .MEM_68 = VDEF <.MEM_30>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#59ptD.0 => &D#189ptD.0->_nameD.28690
  # DEBUG thisD.40460 => D#59ptD.0
  # DEBUG thisD.40461 => D#59ptD.0
  # DEBUG thisD.40470 => D#59ptD.0
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _22 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#59ptD.0
  # DEBUG thisD.38887 => D#1ptD.0
  # DEBUG thisD.40471 => D#59ptD.0
  # PT = nonlocal 
  _23 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_22 != _23)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#36ptD.0 => MEM[(struct basic_stringD.2844 *)D#59ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#35ptD.0 => D#36ptD.0
  # DEBUG thisD.40463 => D#59ptD.0
  # DEBUG __sizeD.40462 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG D#1ptD.0 => D#59ptD.0
  # DEBUG thisD.39052 => D#1ptD.0
  # DEBUG thisD.39053 => D#59ptD.0
  # DEBUG D#33ptD.0 => &MEM[(struct basic_stringD.2844 *)D#59ptD.0]._M_dataplusD.11519
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0 + 1
  # DEBUG __pD.40466 => _22
  # DEBUG __aD.40464 => D#31ptD.0
  # DEBUG __nD.40465 => D#32ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __pD.40469 => _22
  # DEBUG thisD.40467 => D#27ptD.0
  # DEBUG D.40468 => D#28ptD.0
  # .MEM_69 = VDEF <.MEM_68>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_31 = PHI <.MEM_68(19), .MEM_69(20)>
  # DEBUG D#37ptD.0 => &MEM[(struct basic_stringD.2844 *)D#59ptD.0]._M_dataplusD.11519
  # DEBUG thisD.40472 => D#37ptD.0
  # DEBUG thisD.40473 => D#37ptD.0
  # DEBUG thisD.40474 => D#37ptD.0
  # .MEM_11 = VDEF <.MEM_31>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_11>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for MEM[(struct DenseAllocator *)this_2(D)].D.35235.D.34407._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct DenseAllocator *)this_2(D)]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 168
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 160B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 160B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Vector_base *)__first_14]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_15
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_15]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_14]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_15
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_15]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_14]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_15
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_15]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_14]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_15
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_15]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_15 + 24, + , 24](no_overflow) != _9
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _9 - (unsigned long) (__first_15 + 24) & 7) == 0
    # of iterations (((unsigned long) _9 - (unsigned long) (__first_15 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)__first_14]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_15
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_15]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_14]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_15
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_15]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_14]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_15
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_15]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_14]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_15
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_15]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_15 + 24, + , 24](no_overflow) != _9
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _9 - (unsigned long) (__first_15 + 24) & 7) == 0
    # of iterations (((unsigned long) _9 - (unsigned long) (__first_15 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 160B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:23, LOOPS:1, CONDITIONS:9, STMTS:366)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_9 bb_3 })
  {
    <bb 2>:
    # DEBUG this => this_2(D)
    # DEBUG D#171 => &this_2(D)->D.36957
    # DEBUG this => D#171
    # .MEM_7 = VDEF <.MEM_1(D)>
    MEM[(struct DenseAllocator *)this_2(D)].D.35235.D.34407._vptr.Module = &MEM[(void *)&_ZTV14DenseAllocator + 16B];
    # DEBUG D#191 => &MEM[(struct DenseAllocator *)this_2(D)]._request
    # DEBUG this => D#191
    # DEBUG D#169 => &D#191->D.35164
    # DEBUG this => D#169
    # VUSE <.MEM_7>
    _9 = MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_finish;
    # VUSE <.MEM_7>
    __first_15 = MEM[(struct vector *)this_2(D) + 160B].D.35164._M_impl._M_start;
    # DEBUG __first => __first_15
    # DEBUG __last => _9
    # DEBUG __first => __first_15
    if (_9 == __first_15)
      goto <bb 9>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:

  }
  bb_8 (preds = {bb_6 }, succs = {bb_22 })
  {
    <bb 8>:

  }
  bb_22 (preds = {bb_8 }, succs = {bb_9 })
  {
    <bb 22>:
    # VUSE <.MEM_37>
    pretmp_33 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;

  }
  bb_9 (preds = {bb_22 bb_2 }, succs = {bb_10 bb_11 })
  {
    <bb 9>:
    # .MEM_84 = PHI <.MEM_37(22), .MEM_7(2)>
    # prephitmp_34 = PHI <pretmp_33(22), __first_15(2)>
    # DEBUG D#170 => &D#191->D.35164
    # DEBUG this => D#170
    # DEBUG D#101 => D#170->_M_impl._M_end_of_storage
    # DEBUG D#100 => (long int) D#101
    # DEBUG D#192 => MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start
    # DEBUG D#99 => (long int) D#192
    # DEBUG D#98 => D#100 - D#99
    # DEBUG D#97 => D#98 /[ex] 24
    # DEBUG D#94 => D#170
    # DEBUG D#95 => (long unsigned int) D#97
    # DEBUG __p => D#192
    # DEBUG this => D#94
    # DEBUG __n => D#95
    # DEBUG D#93 => D#95
    # DEBUG D#92 => D#94
    if (prephitmp_34 != 0B)
      goto <bb 10>;
    else
      goto <bb 11>;

  }
  bb_10 (preds = {bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # DEBUG D#91 => &D#92->_M_impl
    # DEBUG D#89 => D#91
    # DEBUG D#90 => D#93
    # DEBUG __p => D#192
    # DEBUG __a => D#89
    # DEBUG __n => D#90
    # DEBUG D#88 => D#90
    # DEBUG D#87 => D#89
    # DEBUG D#85 => D#87
    # DEBUG D#86 => D#88
    # DEBUG __p => D#192
    # DEBUG this => D#85
    # DEBUG D.40424 => D#86
    # .MEM_38 = VDEF <.MEM_84>
    operator delete (prephitmp_34);

  }
  bb_11 (preds = {bb_9 bb_10 }, succs = {bb_12 bb_13 })
  {
    <bb 11>:
    # .MEM_26 = PHI <.MEM_84(9), .MEM_38(10)>
    # DEBUG D#96 => &D#170->_M_impl
    # DEBUG this => D#96
    # DEBUG this => D#96
    # DEBUG this => D#96
    # .MEM_43 = VDEF <.MEM_26>
    MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
    # DEBUG D#190 => &MEM[(struct DenseAllocator *)this_2(D)].D.35235
    # DEBUG this => D#190
    # .MEM_44 = VDEF <.MEM_43>
    MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
    # DEBUG D#84 => &D#190->_outmatch
    # DEBUG this => D#84
    # DEBUG D#79 => &D#84->D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => D#84->D.34311._M_impl._M_finish
    # DEBUG D#81 => D#84->D.34311._M_impl._M_start
    # DEBUG D#24 => D#81
    # DEBUG D#25 => D#82
    # DEBUG __first => D#24
    # DEBUG __last => D#25
    # DEBUG D.39294 => D#26
    # DEBUG D#23 => D#25
    # DEBUG D#22 => D#24
    # DEBUG D#20 => D#22
    # DEBUG D#21 => D#23
    # DEBUG __first => D#20
    # DEBUG __last => D#21
    # DEBUG D#19 => D#21
    # DEBUG D#18 => D#20
    # DEBUG D#16 => D#18
    # DEBUG D#17 => D#19
    # DEBUG D.38983 => D#16
    # DEBUG D.38982 => D#17
    # DEBUG D#80 => &D#84->D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # VUSE <.MEM_44>
    _12 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
    # DEBUG D#76 => (long int) _12
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#71 => D#80
    # DEBUG D#72 => (long unsigned int) D#74
    # DEBUG __p => _12
    # DEBUG this => D#71
    # DEBUG __n => D#72
    # DEBUG D#70 => D#72
    # DEBUG D#69 => D#71
    if (_12 != 0B)
      goto <bb 12>;
    else
      goto <bb 13>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 })
  {
    <bb 12>:
    # DEBUG D#68 => &D#69->_M_impl
    # DEBUG D#66 => D#68
    # DEBUG D#67 => D#70
    # DEBUG __p => _12
    # DEBUG __a => D#66
    # DEBUG __n => D#67
    # DEBUG D#65 => D#67
    # DEBUG D#64 => D#66
    # DEBUG D#62 => D#64
    # DEBUG D#63 => D#65
    # DEBUG __p => _12
    # DEBUG this => D#62
    # DEBUG D.40370 => D#63
    # .MEM_45 = VDEF <.MEM_44>
    operator delete (_12);

  }
  bb_13 (preds = {bb_11 bb_12 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # .MEM_27 = PHI <.MEM_44(11), .MEM_45(12)>
    # DEBUG D#73 => &D#80->_M_impl
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    # .MEM_50 = VDEF <.MEM_27>
    MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
    # DEBUG D#83 => &D#190->_inmatch
    # DEBUG this => D#83
    # DEBUG D#79 => &D#83->D.34311
    # DEBUG this => D#79
    # DEBUG D#82 => D#83->D.34311._M_impl._M_finish
    # DEBUG D#81 => D#83->D.34311._M_impl._M_start
    # DEBUG D#24 => D#81
    # DEBUG D#25 => D#82
    # DEBUG __first => D#24
    # DEBUG __last => D#25
    # DEBUG D.39294 => D#26
    # DEBUG D#23 => D#25
    # DEBUG D#22 => D#24
    # DEBUG D#20 => D#22
    # DEBUG D#21 => D#23
    # DEBUG __first => D#20
    # DEBUG __last => D#21
    # DEBUG D#19 => D#21
    # DEBUG D#18 => D#20
    # DEBUG D#16 => D#18
    # DEBUG D#17 => D#19
    # DEBUG D.38983 => D#16
    # DEBUG D.38982 => D#17
    # DEBUG D#80 => &D#83->D.34311
    # DEBUG this => D#80
    # DEBUG D#78 => D#80->_M_impl._M_end_of_storage
    # DEBUG D#77 => (long int) D#78
    # VUSE <.MEM_50>
    _13 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
    # DEBUG D#76 => (long int) _13
    # DEBUG D#75 => D#77 - D#76
    # DEBUG D#74 => D#75 /[ex] 4
    # DEBUG D#71 => D#80
    # DEBUG D#72 => (long unsigned int) D#74
    # DEBUG __p => _13
    # DEBUG this => D#71
    # DEBUG __n => D#72
    # DEBUG D#70 => D#72
    # DEBUG D#69 => D#71
    if (_13 != 0B)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:
    # DEBUG D#68 => &D#69->_M_impl
    # DEBUG D#66 => D#68
    # DEBUG D#67 => D#70
    # DEBUG __p => _13
    # DEBUG __a => D#66
    # DEBUG __n => D#67
    # DEBUG D#65 => D#67
    # DEBUG D#64 => D#66
    # DEBUG D#62 => D#64
    # DEBUG D#63 => D#65
    # DEBUG __p => _13
    # DEBUG this => D#62
    # DEBUG D.40385 => D#63
    # .MEM_51 = VDEF <.MEM_50>
    operator delete (_13);

  }
  bb_15 (preds = {bb_13 bb_14 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_28 = PHI <.MEM_50(13), .MEM_51(14)>
    # DEBUG D#73 => &D#80->_M_impl
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    # .MEM_56 = VDEF <.MEM_28>
    MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
    # DEBUG D#189 => &MEM[(struct Allocator *)this_2(D)].D.34407
    # DEBUG this => D#189
    # .MEM_57 = VDEF <.MEM_56>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#61 => &D#189->_children
    # DEBUG this => D#61
    # DEBUG D#55 => &D#61->D.29436
    # DEBUG this => D#55
    # DEBUG D#58 => D#61->D.29436._M_impl._M_finish
    # DEBUG D#57 => D#61->D.29436._M_impl._M_start
    # DEBUG D#13 => D#57
    # DEBUG D#14 => D#58
    # DEBUG __first => D#13
    # DEBUG __last => D#14
    # DEBUG D.39167 => D#15
    # DEBUG D#12 => D#14
    # DEBUG D#11 => D#13
    # DEBUG D#9 => D#11
    # DEBUG D#10 => D#12
    # DEBUG __first => D#9
    # DEBUG __last => D#10
    # DEBUG D#8 => D#10
    # DEBUG D#7 => D#9
    # DEBUG D#5 => D#7
    # DEBUG D#6 => D#8
    # DEBUG D.38951 => D#5
    # DEBUG D.38950 => D#6
    # DEBUG D#56 => &D#61->D.29436
    # DEBUG this => D#56
    # DEBUG D#54 => D#56->_M_impl._M_end_of_storage
    # DEBUG D#53 => (long int) D#54
    # VUSE <.MEM_57>
    _8 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#52 => (long int) _8
    # DEBUG D#51 => D#53 - D#52
    # DEBUG D#50 => D#51 /[ex] 8
    # DEBUG D#47 => D#56
    # DEBUG D#48 => (long unsigned int) D#50
    # DEBUG __p => _8
    # DEBUG this => D#47
    # DEBUG __n => D#48
    # DEBUG D#46 => D#48
    # DEBUG D#45 => D#47
    if (_8 != 0B)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # DEBUG D#44 => &D#45->_M_impl
    # DEBUG D#42 => D#44
    # DEBUG D#43 => D#46
    # DEBUG __p => _8
    # DEBUG __a => D#42
    # DEBUG __n => D#43
    # DEBUG D#41 => D#43
    # DEBUG D#40 => D#42
    # DEBUG D#38 => D#40
    # DEBUG D#39 => D#41
    # DEBUG __p => _8
    # DEBUG this => D#38
    # DEBUG D.40440 => D#39
    # .MEM_58 = VDEF <.MEM_57>
    operator delete (_8);

  }
  bb_17 (preds = {bb_15 bb_16 }, succs = {bb_18 bb_19 })
  {
    <bb 17>:
    # .MEM_29 = PHI <.MEM_57(15), .MEM_58(16)>
    # DEBUG D#49 => &D#56->_M_impl
    # DEBUG this => D#49
    # DEBUG this => D#49
    # DEBUG this => D#49
    # .MEM_63 = VDEF <.MEM_29>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#60 => &D#189->_fullname
    # DEBUG this => D#60
    # DEBUG this => D#60
    # DEBUG this => D#60
    # VUSE <.MEM_63>
    _20 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#1 => D#60
    # DEBUG this => D#1
    # DEBUG this => D#60
    _21 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
    if (_20 != _21)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#36 => MEM[(struct basic_string *)D#60].D.11539._M_allocated_capacity
    # DEBUG D#35 => D#36
    # DEBUG this => D#60
    # DEBUG __size => D#35
    # DEBUG D#34 => D#35
    # DEBUG D#1 => D#60
    # DEBUG this => D#1
    # DEBUG this => D#60
    # DEBUG D#33 => &MEM[(struct basic_string *)D#60]._M_dataplus
    # DEBUG D#31 => D#33
    # DEBUG D#32 => D#34 + 1
    # DEBUG __p => _20
    # DEBUG __a => D#31
    # DEBUG __n => D#32
    # DEBUG D#30 => D#32
    # DEBUG D#29 => D#31
    # DEBUG D#27 => D#29
    # DEBUG D#28 => D#30
    # DEBUG __p => _20
    # DEBUG this => D#27
    # DEBUG D.40453 => D#28
    # .MEM_64 = VDEF <.MEM_63>
    operator delete (_20);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {bb_20 bb_21 })
  {
    <bb 19>:
    # .MEM_30 = PHI <.MEM_63(17), .MEM_64(18)>
    # DEBUG D#37 => &MEM[(struct basic_string *)D#60]._M_dataplus
    # DEBUG this => D#37
    # DEBUG this => D#37
    # DEBUG this => D#37
    # .MEM_68 = VDEF <.MEM_30>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#59 => &D#189->_name
    # DEBUG this => D#59
    # DEBUG this => D#59
    # DEBUG this => D#59
    # VUSE <.MEM_68>
    _22 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#1 => D#59
    # DEBUG this => D#1
    # DEBUG this => D#59
    _23 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
    if (_22 != _23)
      goto <bb 20>;
    else
      goto <bb 21>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_21 })
  {
    <bb 20>:
    # DEBUG D#36 => MEM[(struct basic_string *)D#59].D.11539._M_allocated_capacity
    # DEBUG D#35 => D#36
    # DEBUG this => D#59
    # DEBUG __size => D#35
    # DEBUG D#34 => D#35
    # DEBUG D#1 => D#59
    # DEBUG this => D#1
    # DEBUG this => D#59
    # DEBUG D#33 => &MEM[(struct basic_string *)D#59]._M_dataplus
    # DEBUG D#31 => D#33
    # DEBUG D#32 => D#34 + 1
    # DEBUG __p => _22
    # DEBUG __a => D#31
    # DEBUG __n => D#32
    # DEBUG D#30 => D#32
    # DEBUG D#29 => D#31
    # DEBUG D#27 => D#29
    # DEBUG D#28 => D#30
    # DEBUG __p => _22
    # DEBUG this => D#27
    # DEBUG D.40468 => D#28
    # .MEM_69 = VDEF <.MEM_68>
    operator delete (_22);

  }
  bb_21 (preds = {bb_19 bb_20 }, succs = {bb_1 })
  {
    <bb 21>:
    # .MEM_31 = PHI <.MEM_68(19), .MEM_69(20)>
    # DEBUG D#37 => &MEM[(struct basic_string *)D#59]._M_dataplus
    # DEBUG this => D#37
    # DEBUG this => D#37
    # DEBUG this => D#37
    # .MEM_11 = VDEF <.MEM_31>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # .MEM_4 = VDEF <.MEM_11>
    operator delete (this_2(D));
    # VUSE <.MEM_4>
    return;

  }
  loop_1 (header = 4, latch = 7, niter = )
  {
    bb_4 (preds = {bb_3 bb_7 }, succs = {bb_5 bb_6 })
    {
      <bb 4>:
      # __first_14 = PHI <__first_15(3), __first_18(7)>
      # .MEM_85 = PHI <.MEM_7(3), .MEM_37(7)>
      # DEBUG __first => __first_14
      # DEBUG __r => __first_14
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#164
      # DEBUG D#121 => D#166
      # DEBUG D#122 => D#167
      # DEBUG __first => D#121
      # DEBUG __last => D#122
      # DEBUG D.39932 => D#123
      # DEBUG D#120 => D#122
      # DEBUG D#119 => D#121
      # DEBUG D#117 => D#119
      # DEBUG D#118 => D#120
      # DEBUG __first => D#117
      # DEBUG __last => D#118
      # DEBUG D#116 => D#118
      # DEBUG D#115 => D#117
      # DEBUG D#113 => D#115
      # DEBUG D#114 => D#116
      # DEBUG D.39486 => D#113
      # DEBUG D.39485 => D#114
      # DEBUG this => D#165
      # DEBUG D#163 => D#165->_M_impl._M_end_of_storage
      # DEBUG D#162 => (long int) D#163
      # VUSE <.MEM_85>
      _17 = MEM[(struct _Vector_base *)__first_14]._M_impl._M_start;
      # DEBUG D#161 => (long int) _17
      # DEBUG D#160 => D#162 - D#161
      # DEBUG D#159 => D#160 /[ex] 16
      # DEBUG D#156 => D#165
      # DEBUG D#157 => (long unsigned int) D#159
      # DEBUG __p => _17
      # DEBUG this => D#156
      # DEBUG __n => D#157
      # DEBUG D#155 => D#157
      # DEBUG D#154 => D#156
      if (_17 != 0B)
        goto <bb 5>;
      else
        goto <bb 6>;

    }
    bb_5 (preds = {bb_4 }, succs = {bb_6 })
    {
      <bb 5>:
      # DEBUG D#153 => &D#154->_M_impl
      # DEBUG D#151 => D#153
      # DEBUG D#152 => D#155
      # DEBUG __p => _17
      # DEBUG __a => D#151
      # DEBUG __n => D#152
      # DEBUG D#150 => D#152
      # DEBUG D#149 => D#151
      # DEBUG D#147 => D#149
      # DEBUG D#148 => D#150
      # DEBUG __p => _17
      # DEBUG this => D#147
      # DEBUG D.40410 => D#148
      # .MEM_32 = VDEF <.MEM_85>
      operator delete (_17);

    }
    bb_6 (preds = {bb_4 bb_5 }, succs = {bb_8 bb_7 })
    {
      <bb 6>:
      # .MEM_25 = PHI <.MEM_85(4), .MEM_32(5)>
      # DEBUG D#158 => &D#165->_M_impl
      # DEBUG this => D#158
      # DEBUG this => D#158
      # DEBUG this => D#158
      # .MEM_37 = VDEF <.MEM_25>
      MEM[(struct  &)__first_14] ={v} {CLOBBER};
      __first_18 = __first_14 + 24;
      # DEBUG __first => __first_18
      # DEBUG __first => __first_18
      if (_9 == __first_18)
        goto <bb 8>;
      else
        goto <bb 7>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_4 })
    {
      <bb 7>:
      goto <bb 4>;

    }
  }
}

Pass statistics:
----------------

virtual PIM::~PIM() (struct PIMD.36919 * const thisD.36949)
{
  struct vectorD.34419 * __firstD.40393;
  struct ModuleD.28688 * * _8;
  struct vectorD.34419 * _9;
  intD.9 * _12;
  intD.9 * _13;
  struct sRequestD.34315 * _17;
  charD.10 * const _20;
  const charD.10 * _21;
  charD.10 * const _22;
  const charD.10 * _23;
  struct vectorD.34419 * pretmp_33;
  struct vectorD.34419 * prephitmp_34;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.40088 => this_2(D)
  # DEBUG D#171ptD.0 => &this_2(D)->D.36957
  # DEBUG thisD.40089 => D#171ptD.0
  # .MEM_7 = VDEF <.MEM_1(D)>
  MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235.D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV14DenseAllocatorD.35238 + 16B];
  # DEBUG D#191ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)]._requestD.35166
  # DEBUG thisD.40390 => D#191ptD.0
  # DEBUG D#169ptD.0 => &D#191ptD.0->D.35164
  # DEBUG thisD.40080 => D#169ptD.0
  # VUSE <.MEM_7>
  # PT = nonlocal escaped 
  _9 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_finishD.34658;
  # VUSE <.MEM_7>
  # PT = nonlocal escaped 
  __first_15 = MEM[(struct vectorD.34421 *)this_2(D) + 160B].D.35164._M_implD.34655._M_startD.34657;
  # DEBUG __firstD.40393 => __first_15
  # DEBUG __lastD.40392 => _9
  # DEBUG __firstD.40398 => __first_15
  if (_9 == __first_15)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_14 = PHI <__first_15(3), __first_18(7)>
  # .MEM_85 = PHI <.MEM_7(3), .MEM_37(7)>
  # DEBUG __firstD.40398 => __first_14
  # DEBUG __rD.39970 => __first_14
  # DEBUG __pointerD.40399 => NULL
  # DEBUG thisD.40400 => NULL
  # DEBUG thisD.39935 => D#164ptD.0
  # DEBUG D#121ptD.0 => D#166ptD.0
  # DEBUG D#122ptD.0 => D#167ptD.0
  # DEBUG __firstD.39934 => D#121ptD.0
  # DEBUG __lastD.39933 => D#122ptD.0
  # DEBUG D.39932 => D#123ptD.0
  # DEBUG D#120ptD.0 => D#122ptD.0
  # DEBUG D#119ptD.0 => D#121ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#118ptD.0 => D#120ptD.0
  # DEBUG __firstD.39497 => D#117ptD.0
  # DEBUG __lastD.39496 => D#118ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D.39486 => D#113ptD.0
  # DEBUG D.39485 => D#114ptD.0
  # DEBUG thisD.40401 => D#165ptD.0
  # DEBUG D#163ptD.0 => D#165ptD.0->_M_implD.37325._M_end_of_storageD.37329
  # DEBUG D#162ptD.0 => (long intD.12) D#163ptD.0
  # VUSE <.MEM_85>
  # PT = nonlocal escaped 
  _17 = MEM[(struct _Vector_baseD.37092 *)__first_14]._M_implD.37325._M_startD.37327;
  # DEBUG D#161ptD.0 => (long intD.12) _17
  # DEBUG D#160ptD.0 => D#162ptD.0 - D#161ptD.0
  # DEBUG D#159ptD.0 => D#160ptD.0 /[ex] 16
  # DEBUG D#156ptD.0 => D#165ptD.0
  # DEBUG D#157ptD.0 => (long unsigned intD.14) D#159ptD.0
  # DEBUG __pD.40404 => _17
  # DEBUG thisD.40402 => D#156ptD.0
  # DEBUG __nD.40403 => D#157ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  if (_17 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#153ptD.0 => &D#154ptD.0->_M_implD.37325
  # DEBUG D#151ptD.0 => D#153ptD.0
  # DEBUG D#152ptD.0 => D#155ptD.0
  # DEBUG __pD.40408 => _17
  # DEBUG __aD.40406 => D#151ptD.0
  # DEBUG __nD.40407 => D#152ptD.0
  # DEBUG D#150ptD.0 => D#152ptD.0
  # DEBUG D#149ptD.0 => D#151ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0
  # DEBUG __pD.40411 => _17
  # DEBUG thisD.40409 => D#147ptD.0
  # DEBUG D.40410 => D#148ptD.0
  # .MEM_32 = VDEF <.MEM_85>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_85(4), .MEM_32(5)>
  # DEBUG D#158ptD.0 => &D#165ptD.0->_M_implD.37325
  # DEBUG thisD.40412 => D#158ptD.0
  # DEBUG thisD.40413 => D#158ptD.0
  # DEBUG thisD.40414 => D#158ptD.0
  # .MEM_37 = VDEF <.MEM_25>
  MEM[(struct  &)__first_14] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_18 = __first_14 + 24;
  # DEBUG __firstD.40398 => __first_18
  # DEBUG __firstD.40398 => __first_18
  if (_9 == __first_18)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 22, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       22 [100.0%]  (FALLTHRU)

;;   basic block 22, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_37>
  pretmp_33 = MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 10, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_84 = PHI <.MEM_37(22), .MEM_7(2)>
  # PT = nonlocal escaped 
  # prephitmp_34 = PHI <pretmp_33(22), __first_15(2)>
  # DEBUG D#170ptD.0 => &D#191ptD.0->D.35164
  # DEBUG thisD.40415 => D#170ptD.0
  # DEBUG D#101ptD.0 => D#170ptD.0->_M_implD.34655._M_end_of_storageD.34659
  # DEBUG D#100ptD.0 => (long intD.12) D#101ptD.0
  # DEBUG D#192ptD.0 => MEM[(struct _Vector_baseD.34422 *)this_2(D) + 160B]._M_implD.34655._M_startD.34657
  # DEBUG D#99ptD.0 => (long intD.12) D#192ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0 - D#99ptD.0
  # DEBUG D#97ptD.0 => D#98ptD.0 /[ex] 24
  # DEBUG D#94ptD.0 => D#170ptD.0
  # DEBUG D#95ptD.0 => (long unsigned intD.14) D#97ptD.0
  # DEBUG __pD.40418 => D#192ptD.0
  # DEBUG thisD.40416 => D#94ptD.0
  # DEBUG __nD.40417 => D#95ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  if (prephitmp_34 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#91ptD.0 => &D#92ptD.0->_M_implD.34655
  # DEBUG D#89ptD.0 => D#91ptD.0
  # DEBUG D#90ptD.0 => D#93ptD.0
  # DEBUG __pD.40422 => D#192ptD.0
  # DEBUG __aD.40420 => D#89ptD.0
  # DEBUG __nD.40421 => D#90ptD.0
  # DEBUG D#88ptD.0 => D#90ptD.0
  # DEBUG D#87ptD.0 => D#89ptD.0
  # DEBUG D#85ptD.0 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#88ptD.0
  # DEBUG __pD.40425 => D#192ptD.0
  # DEBUG thisD.40423 => D#85ptD.0
  # DEBUG D.40424 => D#86ptD.0
  # .MEM_38 = VDEF <.MEM_84>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_34);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_84(9), .MEM_38(10)>
  # DEBUG D#96ptD.0 => &D#170ptD.0->_M_implD.34655
  # DEBUG thisD.40426 => D#96ptD.0
  # DEBUG thisD.40427 => D#96ptD.0
  # DEBUG thisD.40428 => D#96ptD.0
  # .MEM_43 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#190ptD.0 => &MEM[(struct DenseAllocatorD.34416 *)this_2(D)].D.35235
  # DEBUG thisD.40359 => D#190ptD.0
  # .MEM_44 = VDEF <.MEM_43>
  MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV9AllocatorD.34414 + 16B];
  # DEBUG D#84ptD.0 => &D#190ptD.0->_outmatchD.34314
  # DEBUG thisD.40360 => D#84ptD.0
  # DEBUG D#79ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#84ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &D#84ptD.0->D.34311
  # DEBUG thisD.40361 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_44>
  # PT = nonlocal escaped 
  _12 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 136B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _12
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.40364 => _12
  # DEBUG thisD.40362 => D#71ptD.0
  # DEBUG __nD.40363 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (_12 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.40368 => _12
  # DEBUG __aD.40366 => D#66ptD.0
  # DEBUG __nD.40367 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.40371 => _12
  # DEBUG thisD.40369 => D#62ptD.0
  # DEBUG D.40370 => D#63ptD.0
  # .MEM_45 = VDEF <.MEM_44>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_12);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_44(11), .MEM_45(12)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.40372 => D#73ptD.0
  # DEBUG thisD.40373 => D#73ptD.0
  # DEBUG thisD.40374 => D#73ptD.0
  # .MEM_50 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#83ptD.0 => &D#190ptD.0->_inmatchD.34313
  # DEBUG thisD.40375 => D#83ptD.0
  # DEBUG D#79ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.39297 => D#79ptD.0
  # DEBUG D#82ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_finishD.33805
  # DEBUG D#81ptD.0 => D#83ptD.0->D.34311._M_implD.33802._M_startD.33804
  # DEBUG D#24ptD.0 => D#81ptD.0
  # DEBUG D#25ptD.0 => D#82ptD.0
  # DEBUG __firstD.39296 => D#24ptD.0
  # DEBUG __lastD.39295 => D#25ptD.0
  # DEBUG D.39294 => D#26ptD.0
  # DEBUG D#23ptD.0 => D#25ptD.0
  # DEBUG D#22ptD.0 => D#24ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG __firstD.38994 => D#20ptD.0
  # DEBUG __lastD.38993 => D#21ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#16ptD.0 => D#18ptD.0
  # DEBUG D#17ptD.0 => D#19ptD.0
  # DEBUG D.38983 => D#16ptD.0
  # DEBUG D.38982 => D#17ptD.0
  # DEBUG D#80ptD.0 => &D#83ptD.0->D.34311
  # DEBUG thisD.40376 => D#80ptD.0
  # DEBUG D#78ptD.0 => D#80ptD.0->_M_implD.33802._M_end_of_storageD.33806
  # DEBUG D#77ptD.0 => (long intD.12) D#78ptD.0
  # VUSE <.MEM_50>
  # PT = nonlocal escaped 
  _13 = MEM[(struct _Vector_baseD.33569 *)this_2(D) + 112B]._M_implD.33802._M_startD.33804;
  # DEBUG D#76ptD.0 => (long intD.12) _13
  # DEBUG D#75ptD.0 => D#77ptD.0 - D#76ptD.0
  # DEBUG D#74ptD.0 => D#75ptD.0 /[ex] 4
  # DEBUG D#71ptD.0 => D#80ptD.0
  # DEBUG D#72ptD.0 => (long unsigned intD.14) D#74ptD.0
  # DEBUG __pD.40379 => _13
  # DEBUG thisD.40377 => D#71ptD.0
  # DEBUG __nD.40378 => D#72ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#69ptD.0 => D#71ptD.0
  if (_13 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#68ptD.0 => &D#69ptD.0->_M_implD.33802
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#67ptD.0 => D#70ptD.0
  # DEBUG __pD.40383 => _13
  # DEBUG __aD.40381 => D#66ptD.0
  # DEBUG __nD.40382 => D#67ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG __pD.40386 => _13
  # DEBUG thisD.40384 => D#62ptD.0
  # DEBUG D.40385 => D#63ptD.0
  # .MEM_51 = VDEF <.MEM_50>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_13);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_28 = PHI <.MEM_50(13), .MEM_51(14)>
  # DEBUG D#73ptD.0 => &D#80ptD.0->_M_implD.33802
  # DEBUG thisD.40387 => D#73ptD.0
  # DEBUG thisD.40388 => D#73ptD.0
  # DEBUG thisD.40389 => D#73ptD.0
  # .MEM_56 = VDEF <.MEM_28>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#189ptD.0 => &MEM[(struct AllocatorD.33564 *)this_2(D)].D.34407
  # DEBUG thisD.40429 => D#189ptD.0
  # .MEM_57 = VDEF <.MEM_56>
  MEM[(struct ModuleD.28688 *)this_2(D)]._vptr.ModuleD.29483 = &MEM[(voidD.45 *)&_ZTV6ModuleD.29488 + 16B];
  # DEBUG D#61ptD.0 => &D#189ptD.0->_childrenD.29438
  # DEBUG thisD.40430 => D#61ptD.0
  # DEBUG D#55ptD.0 => &D#61ptD.0->D.29436
  # DEBUG thisD.39170 => D#55ptD.0
  # DEBUG D#58ptD.0 => D#61ptD.0->D.29436._M_implD.28927._M_finishD.28930
  # DEBUG D#57ptD.0 => D#61ptD.0->D.29436._M_implD.28927._M_startD.28929
  # DEBUG D#13ptD.0 => D#57ptD.0
  # DEBUG D#14ptD.0 => D#58ptD.0
  # DEBUG __firstD.39169 => D#13ptD.0
  # DEBUG __lastD.39168 => D#14ptD.0
  # DEBUG D.39167 => D#15ptD.0
  # DEBUG D#12ptD.0 => D#14ptD.0
  # DEBUG D#11ptD.0 => D#13ptD.0
  # DEBUG D#9ptD.0 => D#11ptD.0
  # DEBUG D#10ptD.0 => D#12ptD.0
  # DEBUG __firstD.38962 => D#9ptD.0
  # DEBUG __lastD.38961 => D#10ptD.0
  # DEBUG D#8ptD.0 => D#10ptD.0
  # DEBUG D#7ptD.0 => D#9ptD.0
  # DEBUG D#5ptD.0 => D#7ptD.0
  # DEBUG D#6ptD.0 => D#8ptD.0
  # DEBUG D.38951 => D#5ptD.0
  # DEBUG D.38950 => D#6ptD.0
  # DEBUG D#56ptD.0 => &D#61ptD.0->D.29436
  # DEBUG thisD.40431 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0->_M_implD.28927._M_end_of_storageD.28931
  # DEBUG D#53ptD.0 => (long intD.12) D#54ptD.0
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.28694 *)this_2(D) + 72B]._M_implD.28927._M_startD.28929;
  # DEBUG D#52ptD.0 => (long intD.12) _8
  # DEBUG D#51ptD.0 => D#53ptD.0 - D#52ptD.0
  # DEBUG D#50ptD.0 => D#51ptD.0 /[ex] 8
  # DEBUG D#47ptD.0 => D#56ptD.0
  # DEBUG D#48ptD.0 => (long unsigned intD.14) D#50ptD.0
  # DEBUG __pD.40434 => _8
  # DEBUG thisD.40432 => D#47ptD.0
  # DEBUG __nD.40433 => D#48ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  if (_8 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#44ptD.0 => &D#45ptD.0->_M_implD.28927
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#43ptD.0 => D#46ptD.0
  # DEBUG __pD.40438 => _8
  # DEBUG __aD.40436 => D#42ptD.0
  # DEBUG __nD.40437 => D#43ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#38ptD.0 => D#40ptD.0
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG __pD.40441 => _8
  # DEBUG thisD.40439 => D#38ptD.0
  # DEBUG D.40440 => D#39ptD.0
  # .MEM_58 = VDEF <.MEM_57>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_57(15), .MEM_58(16)>
  # DEBUG D#49ptD.0 => &D#56ptD.0->_M_implD.28927
  # DEBUG thisD.40442 => D#49ptD.0
  # DEBUG thisD.40443 => D#49ptD.0
  # DEBUG thisD.40444 => D#49ptD.0
  # .MEM_63 = VDEF <.MEM_29>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#60ptD.0 => &D#189ptD.0->_fullnameD.28691
  # DEBUG thisD.40445 => D#60ptD.0
  # DEBUG thisD.40446 => D#60ptD.0
  # DEBUG thisD.40455 => D#60ptD.0
  # VUSE <.MEM_63>
  # PT = nonlocal escaped 
  _20 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#60ptD.0
  # DEBUG thisD.38887 => D#1ptD.0
  # DEBUG thisD.40456 => D#60ptD.0
  # PT = nonlocal 
  _21 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_20 != _21)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#36ptD.0 => MEM[(struct basic_stringD.2844 *)D#60ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#35ptD.0 => D#36ptD.0
  # DEBUG thisD.40448 => D#60ptD.0
  # DEBUG __sizeD.40447 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG D#1ptD.0 => D#60ptD.0
  # DEBUG thisD.39052 => D#1ptD.0
  # DEBUG thisD.39053 => D#60ptD.0
  # DEBUG D#33ptD.0 => &MEM[(struct basic_stringD.2844 *)D#60ptD.0]._M_dataplusD.11519
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0 + 1
  # DEBUG __pD.40451 => _20
  # DEBUG __aD.40449 => D#31ptD.0
  # DEBUG __nD.40450 => D#32ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __pD.40454 => _20
  # DEBUG thisD.40452 => D#27ptD.0
  # DEBUG D.40453 => D#28ptD.0
  # .MEM_64 = VDEF <.MEM_63>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_20);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_63(17), .MEM_64(18)>
  # DEBUG D#37ptD.0 => &MEM[(struct basic_stringD.2844 *)D#60ptD.0]._M_dataplusD.11519
  # DEBUG thisD.40457 => D#37ptD.0
  # DEBUG thisD.40458 => D#37ptD.0
  # DEBUG thisD.40459 => D#37ptD.0
  # .MEM_68 = VDEF <.MEM_30>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#59ptD.0 => &D#189ptD.0->_nameD.28690
  # DEBUG thisD.40460 => D#59ptD.0
  # DEBUG thisD.40461 => D#59ptD.0
  # DEBUG thisD.40470 => D#59ptD.0
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _22 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#59ptD.0
  # DEBUG thisD.38887 => D#1ptD.0
  # DEBUG thisD.40471 => D#59ptD.0
  # PT = nonlocal 
  _23 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_22 != _23)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#36ptD.0 => MEM[(struct basic_stringD.2844 *)D#59ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#35ptD.0 => D#36ptD.0
  # DEBUG thisD.40463 => D#59ptD.0
  # DEBUG __sizeD.40462 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG D#1ptD.0 => D#59ptD.0
  # DEBUG thisD.39052 => D#1ptD.0
  # DEBUG thisD.39053 => D#59ptD.0
  # DEBUG D#33ptD.0 => &MEM[(struct basic_stringD.2844 *)D#59ptD.0]._M_dataplusD.11519
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0 + 1
  # DEBUG __pD.40466 => _22
  # DEBUG __aD.40464 => D#31ptD.0
  # DEBUG __nD.40465 => D#32ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#27ptD.0 => D#29ptD.0
  # DEBUG D#28ptD.0 => D#30ptD.0
  # DEBUG __pD.40469 => _22
  # DEBUG thisD.40467 => D#27ptD.0
  # DEBUG D.40468 => D#28ptD.0
  # .MEM_69 = VDEF <.MEM_68>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_31 = PHI <.MEM_68(19), .MEM_69(20)>
  # DEBUG D#37ptD.0 => &MEM[(struct basic_stringD.2844 *)D#59ptD.0]._M_dataplusD.11519
  # DEBUG thisD.40472 => D#37ptD.0
  # DEBUG thisD.40473 => D#37ptD.0
  # DEBUG thisD.40474 => D#37ptD.0
  # .MEM_11 = VDEF <.MEM_31>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_11>
  # USE = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  # CLB = nonlocal { D.29488 D.34414 D.35238 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}


