
;; Function virtual void SelAlloc::Allocate() (_ZN8SelAlloc8AllocateEv, funcdef_no=1725, decl_uid=36932, cgraph_uid=428, symbol_order=429)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
virtual void SelAlloc::Allocate() (struct SelAlloc * const this)
{
  int * D.43866;
  int * __first;
  size_type __n;
  const struct _Rb_tree_node_base * const outer_iter$_M_node;
  struct _Rb_tree_node_base * const p$_M_node;
  int iter;
  struct vector grants;
  int max_pri;
  int max_index;
  bool wrapped;
  int output_offset;
  int input_offset;
  int output;
  int input;
  struct _Rb_tree_node_base * const pretmp_13;
  int _20;
  const struct _Rb_tree_node_base * pretmp_24;
  struct _Rb_tree_node_base * const pretmp_25;
  const struct _Rb_tree_node_base * pretmp_34;
  int & _39;
  int _41;
  int _45;
  const size_type _46;
  long unsigned int _47;
  long unsigned int _49;
  int _51;
  int _53;
  int _56;
  bool _57;
  int _58;
  long unsigned int _61;
  int _63;
  int _64;
  const size_type _68;
  long unsigned int _70;
  int & _73;
  int _75;
  int _77;
  int & _78;
  int & _79;
  long unsigned int _81;
  long unsigned int _82;
  int _83;
  int _84;
  struct map & _85;
  long unsigned int _88;
  long unsigned int _90;
  int _93;
  int _94;
  int _95;
  int _98;
  int _99;
  int _100;
  int prephitmp_114;
  bool _115;
  struct map * _116;
  int * _117;
  int * _118;
  int * _119;
  int * _120;
  int * _122;
  bool _123;
  int * _124;
  int * _125;
  int * _126;
  int prephitmp_127;
  int & _129;
  long unsigned int _132;
  struct map & _133;
  long unsigned int _135;
  int & _136;
  int pretmp_140;
  bool _143;
  long unsigned int _144;
  int & _145;
  const size_type _146;
  long unsigned int _147;
  struct map & _148;
  long unsigned int _150;
  int & _151;
  int & _152;
  int & _154;
  sizetype _168;
  struct map * pretmp_173;
  long unsigned int _176;
  int * _177;
  struct _Rb_tree_node_base * _183;
  int _184;
  struct _Rb_tree_node_base * _197;
  bool _199;
  int pretmp_203;
  struct map * pretmp_215;
  int pretmp_231;
  int pretmp_232;
  sizetype _233;
  bool _234;
  int _235;

  <bb 2>:
  # DEBUG this => &p
  # DEBUG p$_M_node => 0B
  # DEBUG this => &outer_iter
  # DEBUG outer_iter$_M_node => 0B
  # DEBUG this => &D.38287
  # DEBUG this => &D.38287
  _41 = this_40(D)->D.36967.D.36911._outputs;
  # DEBUG this => &grants
  # DEBUG __first => _41
  # DEBUG __last => -1
  # DEBUG __a => &D.38287
  # DEBUG D#192 => &grants.D.34311
  # DEBUG this => D#192
  # DEBUG __a => &D.38287
  # DEBUG D#134 => &D#192->_M_impl
  # DEBUG this => D#134
  # DEBUG __a => &D.38287
  # DEBUG this => D#134
  # DEBUG __a => &D.38287
  # DEBUG this => D#134
  # DEBUG D.41882 => &D.38287
  # DEBUG this => &grants
  # DEBUG __n => _41
  # DEBUG __value => -1
  __n_42 = (size_type) _41;
  # DEBUG D#189 => &grants.D.34311
  # DEBUG D#170 => D#189
  # DEBUG __n => __n_42
  # DEBUG this => D#170
  # DEBUG D#169 => D#170
  if (__n_42 != 0)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 3>:
  # DEBUG D#168 => &D#169->_M_impl
  # DEBUG D#167 => D#168
  # DEBUG __n => __n_42
  # DEBUG __a => D#167
  # DEBUG D#166 => D#167
  # DEBUG D#164 => D#166
  # DEBUG D#165 => 0B
  # DEBUG __n => __n_42
  # DEBUG this => D#164
  # DEBUG D.43864 => D#165
  # DEBUG D#163 => D#164
  # DEBUG D#157 => D#163
  # DEBUG this => D#157
  if (__n_42 > 4611686018427387903)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  std::__throw_bad_alloc ();

  <bb 5>:
  _176 = __n_42 * 4;
  _177 = operator new (_176);
  goto <bb 7>;

<L109>:
  goto <bb 12> (<L107>);

  <bb 7>:
  # DEBUG D#187 => &grants
  # DEBUG D#187 => &grants
  # DEBUG D#188 => &__value
  # DEBUG __n => __n_42
  # DEBUG D#185 => D#187
  # DEBUG this => D#185
  # DEBUG this => D#187
  # DEBUG D#186 => D#188
  # DEBUG __value => D#186
  # DEBUG D#184 => &D#185->D.34311
  # DEBUG this => D#184
  # DEBUG D#182 => D#186
  # DEBUG __first => NULL
  # DEBUG __n => __n_42
  # DEBUG D#181 => D#182
  # DEBUG __x => D#181
  # DEBUG D.43839 => D#183
  # DEBUG D#180 => D#181
  # DEBUG __first => NULL
  # DEBUG __n => __n_42
  # DEBUG D#179 => D#180
  # DEBUG __x => D#179
  # DEBUG __assignable => 1
  # DEBUG D#178 => D#179
  # DEBUG __first => NULL
  # DEBUG __n => __n_42
  # DEBUG D#177 => D#178
  # DEBUG __x => D#177
  # DEBUG D#176 => D#177
  # DEBUG __first => NULL
  # DEBUG __n => __n_42
  # DEBUG D#175 => D#176
  # DEBUG __value => D#175
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#174 => D#175
  # DEBUG __first => NULL
  # DEBUG __n => __n_42
  # DEBUG __value => D#174
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_42
  # DEBUG __niter => __n_42
  # DEBUG __first => _177
  if (__n_42 == 0)
    goto <bb 8>;
  else
    goto <bb 10>;

  <bb 8>:
  # __first_22 = PHI <_177(10), _177(7), 0B(2)>
  # DEBUG iter => 0
  _235 = this_40(D)->_iter;
  if (_235 <= 0)
    goto <bb 9>;
  else
    goto <bb 13>;

  <bb 9>:
  # DEBUG this => &grants
  # DEBUG D#108 => &grants.D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => grants.D.34311._M_impl._M_finish
  # DEBUG D#110 => grants.D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &grants.D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  # DEBUG D#105 => (long int) __first_22
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => __first_22
  # DEBUG __n => D#102
  if (__first_22 != 0B)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 10>:
  _233 = (sizetype) _41;
  _168 = _233 * 4;
  __builtin_memset (_177, 255, _168);
  goto <bb 8>;

<L108>:

<L107>:
  # DEBUG D#191 => &grants.D.34311
  # DEBUG this => D#191
  # DEBUG D#107 => D#191->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  # DEBUG D#105 => (long int) 0B
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#191
  # DEBUG __p => 0B
  # DEBUG __n => D#102
  # DEBUG D#101 => &D#191->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  resx 20

  <bb 13>:
  pretmp_13 = MEM[(struct _Rb_tree_node_base * *)this_40(D) + 232B];
  pretmp_25 = MEM[(struct _Rb_tree_node_base * *)this_40(D) + 184B];
  pretmp_34 = &MEM[(const struct _Rb_tree *)this_40(D) + 208B]._M_impl._M_header;
  pretmp_24 = &MEM[(const struct _Rb_tree *)this_40(D) + 160B]._M_impl._M_header;

  <bb 14>:
  # iter_16 = PHI <0(13), iter_103(42)>
  # DEBUG iter => iter_16
  # DEBUG D#193 => &this_40(D)->D.36967._out_occ
  # DEBUG this => D#193
  # DEBUG D#20 => &MEM[(const struct set *)D#193]._M_t
  # DEBUG D#300 => MEM[(struct _Rb_tree_node_base * *)this_40(D) + 232B]
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  # DEBUG this => NULL
  # DEBUG __x => D#300
  # DEBUG outer_iter$_M_node => D#300
  # DEBUG outer_iter$_M_node => D#300
  # DEBUG D#210 => &this_40(D)->D.36967._out_occ
  # DEBUG this => D#210
  # DEBUG D#21 => &MEM[(const struct set *)D#210]._M_t
  # DEBUG this => D#21
  # DEBUG D#299 => &MEM[(const struct _Rb_tree *)this_40(D) + 208B]._M_impl._M_header
  # DEBUG this => NULL
  # DEBUG __x => D#299
  # DEBUG this => &outer_iter
  # DEBUG __x => &D.38293
  if (pretmp_13 != pretmp_34)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG D#211 => &this_40(D)->D.36967._in_occ
  # DEBUG this => D#211
  # DEBUG D#20 => &MEM[(const struct set *)D#211]._M_t
  # DEBUG D#297 => MEM[(struct _Rb_tree_node_base * *)this_40(D) + 184B]
  # DEBUG D#19 => D#20
  # DEBUG this => D#19
  # DEBUG this => NULL
  # DEBUG __x => D#297
  # DEBUG outer_iter$_M_node => D#297
  # DEBUG outer_iter$_M_node => D#297
  # DEBUG D#230 => &this_40(D)->D.36967._in_occ
  # DEBUG this => D#230
  # DEBUG D#21 => &MEM[(const struct set *)D#230]._M_t
  # DEBUG this => D#21
  # DEBUG D#296 => &MEM[(const struct _Rb_tree *)this_40(D) + 160B]._M_impl._M_header
  # DEBUG this => NULL
  # DEBUG __x => D#296
  # DEBUG this => &outer_iter
  # DEBUG __x => &D.38356
  if (pretmp_24 != pretmp_25)
    goto <bb 43>;
  else
    goto <bb 41>;

  <bb 16>:
  pretmp_215 = MEM[(struct map * *)this_40(D) + 280B];

  <bb 17>:
  # outer_iter$_M_node_200 = PHI <pretmp_13(16), outer_iter$_M_node_130(40)>
  # DEBUG outer_iter$_M_node => outer_iter$_M_node_200
  # DEBUG D#210 => &this_40(D)->D.36967._out_occ
  # DEBUG this => D#210
  # DEBUG D#21 => &MEM[(const struct set *)D#210]._M_t
  # DEBUG this => D#21
  # DEBUG this => NULL
  # DEBUG __x => D#299
  # DEBUG this => &outer_iter
  # DEBUG __x => &D.38293
  # DEBUG this => &outer_iter
  # DEBUG this => outer_iter$_M_node_200
  # DEBUG D#194 => &MEM[(const struct _Rb_tree_node *)outer_iter$_M_node_200]._M_value_field
  # DEBUG __r => D#194
  output_48 = MEM[(const int &)outer_iter$_M_node_200 + 32];
  # DEBUG output => output_48
  _49 = (long unsigned int) output_48;
  # DEBUG D#195 => &this_40(D)->D.36967._out_req
  # DEBUG D#5 => D#195
  # DEBUG __n => _49
  # DEBUG this => D#5
  _88 = _49 * 48;
  _85 = pretmp_215 + _88;
  # DEBUG this => NULL
  _46 = MEM[(long unsigned int *)_85 + 40B];
  # DEBUG D#12 => D#13
  # DEBUG this => D#12
  if (_46 == 0)
    goto <bb 39>;
  else
    goto <bb 18>;

  <bb 18>:
  # DEBUG D#196 => &this_40(D)->D.36967.D.36911._outmatch
  _117 = MEM[(int * *)this_40(D) + 136B];
  # DEBUG D#6 => D#196
  # DEBUG __n => _49
  # DEBUG this => D#6
  _82 = _49 * 4;
  _79 = _117 + _82;
  _51 = *_79;
  if (_51 != -1)
    goto <bb 39>;
  else
    goto <bb 19>;

  <bb 19>:
  # DEBUG D#197 => &this_40(D)->_outmask
  _118 = MEM[(int * *)this_40(D) + 360B];
  # DEBUG D#6 => D#197
  # DEBUG __n => _49
  # DEBUG this => D#6
  _78 = _118 + _82;
  _53 = *_78;
  if (_53 != 0)
    goto <bb 39>;
  else
    goto <bb 72>;

  <bb 20>:
  # DEBUG this => &p
  # DEBUG this => p$_M_node_76
  # DEBUG D#201 => &MEM[(struct _Rb_tree_node *)p$_M_node_76]._M_value_field
  # DEBUG __r => D#201
  _20 = MEM[(struct pair *)p$_M_node_76 + 32B].second.port;
  if (_20 < input_offset_54)
    goto <bb 73>;
  else
    goto <bb 24>;

  <bb 21>:
  # DEBUG this => &p
  # DEBUG this => p$_M_node_62
  # DEBUG D#201 => &MEM[(struct _Rb_tree_node *)p$_M_node_62]._M_value_field
  # DEBUG __r => D#201
  _56 = MEM[(struct pair *)p$_M_node_62 + 32B].second.port;
  if (input_offset_54 > _56)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  # p$_M_node_223 = PHI <p$_M_node_62(21)>
  goto <bb 24>;

  <bb 23>:
  goto <bb 74>;

  <bb 24>:
  # p$_M_node_23 = PHI <p$_M_node_223(22), _197(74), _197(72), p$_M_node_76(20)>

  <bb 25>:
  # wrapped_1 = PHI <0(24), wrapped_2(35)>
  # max_index_5 = PHI <-1(24), max_index_6(35)>
  # max_pri_9 = PHI <0(24), max_pri_10(35)>
  # p$_M_node_108 = PHI <p$_M_node_23(24), p$_M_node_128(35)>
  # DEBUG p$_M_node => p$_M_node_108
  # DEBUG max_pri => max_pri_9
  # DEBUG max_index => max_index_5
  # DEBUG wrapped => wrapped_1
  if (wrapped_1 != 0)
    goto <bb 26>;
  else
    goto <bb 75>;

  <bb 26>:
  # DEBUG D#208 => &this_40(D)->D.36967._out_req
  # DEBUG D#5 => D#208
  # DEBUG __n => _49
  # DEBUG this => D#5
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG this => NULL
  # DEBUG __x => _197
  # DEBUG this => &p
  # DEBUG __x => &D.38352
  if (p$_M_node_108 != _197)
    goto <bb 27>;
  else
    goto <bb 36>;

  <bb 27>:
  # DEBUG this => &p
  # DEBUG this => p$_M_node_108
  # DEBUG D#209 => &MEM[(struct _Rb_tree_node *)p$_M_node_108]._M_value_field
  # DEBUG __r => D#209
  _58 = MEM[(struct pair *)p$_M_node_108 + 32B].second.port;
  if (input_offset_54 > _58)
    goto <bb 32>;
  else
    goto <bb 28>;

  <bb 28>:
  # max_index_228 = PHI <max_index_5(27)>
  goto <bb 37>;

  <bb 29>:
  if (wrapped_1 != 0)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # max_index_227 = PHI <max_index_5(29)>
  goto <bb 37>;

  <bb 31>:
  pretmp_232 = MEM[(struct pair *)p$_M_node_76 + 32B].second.port;

  <bb 32>:
  # wrapped_2 = PHI <wrapped_1(76), 1(31), wrapped_1(27)>
  # p$_M_node_105 = PHI <p$_M_node_108(76), p$_M_node_76(31), p$_M_node_108(27)>
  # prephitmp_127 = PHI <pretmp_231(76), pretmp_232(31), _58(27)>
  # DEBUG p$_M_node => p$_M_node_105
  # DEBUG wrapped => wrapped_2
  # DEBUG this => &p
  # DEBUG this => p$_M_node_105
  # DEBUG D#204 => &MEM[(struct _Rb_tree_node *)p$_M_node_105]._M_value_field
  # DEBUG __r => D#204
  # DEBUG D#298 => MEM[(struct pair *)p$_M_node_105 + 32B].second.port
  # DEBUG input => D#298
  _61 = (long unsigned int) prephitmp_127;
  # DEBUG D#205 => &this_40(D)->D.36967.D.36911._inmatch
  _120 = MEM[(int * *)this_40(D) + 112B];
  # DEBUG D#6 => D#205
  # DEBUG __n => _61
  # DEBUG this => D#6
  _47 = _61 * 4;
  _39 = _120 + _47;
  _63 = *_39;
  if (_63 == -1)
    goto <bb 33>;
  else
    goto <bb 35>;

  <bb 33>:
  # DEBUG this => &p
  # DEBUG this => p$_M_node_105
  # DEBUG D#206 => &MEM[(struct _Rb_tree_node *)p$_M_node_105]._M_value_field
  # DEBUG __r => D#206
  _64 = MEM[(struct pair *)p$_M_node_105 + 32B].second.out_pri;
  _199 = max_index_5 == -1;
  _234 = max_pri_9 < _64;
  _143 = _199 | _234;
  if (_143 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:

  <bb 35>:
  # max_index_6 = PHI <max_index_5(33), prephitmp_127(34), max_index_5(32)>
  # max_pri_10 = PHI <max_pri_9(33), _64(34), max_pri_9(32)>
  # DEBUG max_pri => max_pri_10
  # DEBUG max_index => max_index_6
  # DEBUG this => &p
  p$_M_node_128 = std::_Rb_tree_increment (p$_M_node_105);
  # DEBUG p$_M_node => p$_M_node_128
  goto <bb 25>;

  <bb 36>:
  # max_index_229 = PHI <max_index_5(26)>

  <bb 37>:
  # max_index_221 = PHI <max_index_228(28), max_index_229(36), max_index_227(30)>
  if (max_index_221 != -1)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#6 => &grants
  # DEBUG __n => _49
  # DEBUG this => D#6
  _129 = __first_22 + _82;
  *_129 = max_index_221;

  <bb 39>:
  # DEBUG this => &outer_iter
  outer_iter$_M_node_130 = std::_Rb_tree_increment (outer_iter$_M_node_200);
  # DEBUG outer_iter$_M_node => outer_iter$_M_node_130
  # DEBUG outer_iter$_M_node => outer_iter$_M_node_130
  # DEBUG D#210 => &this_40(D)->D.36967._out_occ
  # DEBUG this => D#210
  # DEBUG D#21 => &MEM[(const struct set *)D#210]._M_t
  # DEBUG this => D#21
  # DEBUG this => NULL
  # DEBUG __x => D#299
  # DEBUG this => &outer_iter
  # DEBUG __x => &D.38293
  if (pretmp_34 != outer_iter$_M_node_130)
    goto <bb 40>;
  else
    goto <bb 15>;

  <bb 40>:
  goto <bb 17>;

  <bb 41>:
  iter_103 = iter_16 + 1;
  # DEBUG iter => iter_103
  # DEBUG iter => iter_103
  _45 = this_40(D)->_iter;
  if (_45 <= iter_103)
    goto <bb 9>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 14>;

  <bb 43>:
  pretmp_173 = MEM[(struct map * *)this_40(D) + 256B];

  <bb 44>:
  # outer_iter$_M_node_239 = PHI <pretmp_25(43), outer_iter$_M_node_155(69)>
  # DEBUG outer_iter$_M_node => outer_iter$_M_node_239
  # DEBUG D#230 => &this_40(D)->D.36967._in_occ
  # DEBUG this => D#230
  # DEBUG D#21 => &MEM[(const struct set *)D#230]._M_t
  # DEBUG this => D#21
  # DEBUG this => NULL
  # DEBUG __x => D#296
  # DEBUG this => &outer_iter
  # DEBUG __x => &D.38356
  # DEBUG this => &outer_iter
  # DEBUG this => outer_iter$_M_node_239
  # DEBUG D#212 => &MEM[(const struct _Rb_tree_node *)outer_iter$_M_node_239]._M_value_field
  # DEBUG __r => D#212
  input_69 = MEM[(const int &)outer_iter$_M_node_239 + 32];
  # DEBUG input => input_69
  _70 = (long unsigned int) input_69;
  # DEBUG D#213 => &this_40(D)->D.36967._in_req
  # DEBUG D#5 => D#213
  # DEBUG __n => _70
  # DEBUG this => D#5
  _132 = _70 * 48;
  _133 = pretmp_173 + _132;
  # DEBUG this => NULL
  _68 = MEM[(long unsigned int *)_133 + 40B];
  # DEBUG D#12 => D#13
  # DEBUG this => D#12
  if (_68 == 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  goto <bb 68>;

  <bb 46>:
  # DEBUG D#214 => &this_40(D)->_aptrs
  _122 = MEM[(int * *)this_40(D) + 312B];
  # DEBUG D#6 => D#214
  # DEBUG __n => _70
  # DEBUG this => D#6
  _135 = _70 * 4;
  _136 = _122 + _135;
  output_offset_72 = *_136;
  # DEBUG output_offset => output_offset_72
  # DEBUG D#215 => &this_40(D)->D.36967._in_req
  # DEBUG D#5 => D#215
  # DEBUG __n => _70
  # DEBUG this => D#5
  # DEBUG this => NULL
  p$_M_node_134 = MEM[(struct _Rb_tree_node_base * *)_133 + 24B];
  # DEBUG D#23 => D#24
  # DEBUG this => D#23
  # DEBUG this => NULL
  # DEBUG __x => p$_M_node_134
  # DEBUG p$_M_node => p$_M_node_134
  # DEBUG p$_M_node => p$_M_node_134
  # DEBUG D#216 => &this_40(D)->D.36967._in_req
  # DEBUG D#5 => D#216
  # DEBUG __n => _70
  # DEBUG this => D#5
  # DEBUG this => NULL
  # DEBUG this => D#22
  _183 = &MEM[(struct _Rb_tree *)_133]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _183
  # DEBUG this => &p
  # DEBUG __x => &D.38358
  if (p$_M_node_134 != _183)
    goto <bb 47>;
  else
    goto <bb 51>;

  <bb 47>:
  # DEBUG this => &p
  # DEBUG this => p$_M_node_134
  # DEBUG D#217 => &MEM[(struct _Rb_tree_node *)p$_M_node_134]._M_value_field
  # DEBUG __r => D#217
  _184 = MEM[(struct pair *)p$_M_node_134 + 32B].second.port;
  if (output_offset_72 > _184)
    goto <bb 77>;
  else
    goto <bb 51>;

  <bb 48>:
  # DEBUG this => &p
  # DEBUG this => p$_M_node_138
  # DEBUG D#217 => &MEM[(struct _Rb_tree_node *)p$_M_node_138]._M_value_field
  # DEBUG __r => D#217
  _75 = MEM[(struct pair *)p$_M_node_138 + 32B].second.port;
  if (output_offset_72 > _75)
    goto <bb 50>;
  else
    goto <bb 49>;

  <bb 49>:
  # p$_M_node_222 = PHI <p$_M_node_138(48)>
  goto <bb 51>;

  <bb 50>:
  goto <bb 78>;

  <bb 51>:
  # p$_M_node_111 = PHI <p$_M_node_222(49), _183(78), _183(46), p$_M_node_134(47)>

  <bb 52>:
  # wrapped_3 = PHI <0(51), wrapped_4(63)>
  # output_7 = PHI <-1(51), output_8(63)>
  # max_pri_11 = PHI <0(51), max_pri_12(63)>
  # p$_M_node_161 = PHI <p$_M_node_111(51), p$_M_node_149(63)>
  # DEBUG p$_M_node => p$_M_node_161
  # DEBUG max_pri => max_pri_11
  # DEBUG max_index => output_7
  # DEBUG wrapped => wrapped_3
  if (wrapped_3 != 0)
    goto <bb 53>;
  else
    goto <bb 79>;

  <bb 53>:
  # DEBUG D#224 => &this_40(D)->D.36967._in_req
  # DEBUG D#5 => D#224
  # DEBUG __n => _70
  # DEBUG this => D#5
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG this => NULL
  # DEBUG __x => _183
  # DEBUG this => &p
  # DEBUG __x => &D.38359
  if (p$_M_node_161 != _183)
    goto <bb 54>;
  else
    goto <bb 64>;

  <bb 54>:
  # DEBUG this => &p
  # DEBUG this => p$_M_node_161
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)p$_M_node_161]._M_value_field
  # DEBUG __r => D#225
  _77 = MEM[(struct pair *)p$_M_node_161 + 32B].second.port;
  if (output_offset_72 > _77)
    goto <bb 59>;
  else
    goto <bb 55>;

  <bb 55>:
  # output_225 = PHI <output_7(54)>
  goto <bb 65>;

  <bb 56>:
  if (wrapped_3 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # output_224 = PHI <output_7(56)>
  goto <bb 65>;

  <bb 58>:
  pretmp_140 = MEM[(struct pair *)p$_M_node_134 + 32B].second.port;

  <bb 59>:
  # wrapped_4 = PHI <wrapped_3(80), 1(58), wrapped_3(54)>
  # p$_M_node_160 = PHI <p$_M_node_161(80), p$_M_node_134(58), p$_M_node_161(54)>
  # prephitmp_114 = PHI <pretmp_203(80), pretmp_140(58), _77(54)>
  # DEBUG p$_M_node => p$_M_node_160
  # DEBUG wrapped => wrapped_4
  # DEBUG this => &p
  # DEBUG this => p$_M_node_160
  # DEBUG D#220 => &MEM[(struct _Rb_tree_node *)p$_M_node_160]._M_value_field
  # DEBUG __r => D#220
  # DEBUG D#295 => MEM[(struct pair *)p$_M_node_160 + 32B].second.port
  # DEBUG output => D#295
  _81 = (long unsigned int) prephitmp_114;
  # DEBUG D#6 => &grants
  # DEBUG __n => _81
  # DEBUG this => D#6
  _144 = _81 * 4;
  _145 = __first_22 + _144;
  _83 = *_145;
  if (input_69 == _83)
    goto <bb 60>;
  else
    goto <bb 63>;

  <bb 60>:
  # DEBUG D#221 => &this_40(D)->D.36967._out_req
  _116 = MEM[(struct map * *)this_40(D) + 280B];
  # DEBUG D#5 => D#221
  # DEBUG __n => _81
  # DEBUG this => D#5
  _147 = _81 * 48;
  _148 = _116 + _147;
  # DEBUG this => NULL
  _146 = MEM[(long unsigned int *)_148 + 40B];
  # DEBUG D#12 => D#13
  # DEBUG this => D#12
  if (_146 != 0)
    goto <bb 61>;
  else
    goto <bb 63>;

  <bb 61>:
  # DEBUG this => &p
  # DEBUG this => p$_M_node_160
  # DEBUG D#222 => &MEM[(struct _Rb_tree_node *)p$_M_node_160]._M_value_field
  # DEBUG __r => D#222
  _84 = MEM[(struct pair *)p$_M_node_160 + 32B].second.in_pri;
  _123 = output_7 == -1;
  _115 = max_pri_11 < _84;
  _57 = _115 | _123;
  if (_57 != 0)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:

  <bb 63>:
  # output_8 = PHI <output_7(59), prephitmp_114(62), output_7(61), output_7(60)>
  # max_pri_12 = PHI <max_pri_11(59), _84(62), max_pri_11(61), max_pri_11(60)>
  # DEBUG max_pri => max_pri_12
  # DEBUG max_index => output_8
  # DEBUG this => &p
  p$_M_node_149 = std::_Rb_tree_increment (p$_M_node_160);
  # DEBUG p$_M_node => p$_M_node_149
  goto <bb 52>;

  <bb 64>:
  # output_226 = PHI <output_7(53)>

  <bb 65>:
  # output_220 = PHI <output_225(55), output_226(64), output_224(57)>
  if (output_220 != -1)
    goto <bb 66>;
  else
    goto <bb 45>;

  <bb 66>:
  # DEBUG output => output_220
  # DEBUG D#226 => &this_40(D)->D.36967.D.36911._inmatch
  _124 = MEM[(int * *)this_40(D) + 112B];
  # DEBUG D#6 => D#226
  # DEBUG __n => _70
  # DEBUG this => D#6
  _152 = _124 + _135;
  *_152 = output_220;
  _90 = (long unsigned int) output_220;
  # DEBUG D#227 => &this_40(D)->D.36967.D.36911._outmatch
  _125 = MEM[(int * *)this_40(D) + 136B];
  # DEBUG D#6 => D#227
  # DEBUG __n => _90
  # DEBUG this => D#6
  _150 = _90 * 4;
  _151 = _125 + _150;
  *_151 = input_69;
  if (iter_16 == 0)
    goto <bb 67>;
  else
    goto <bb 45>;

  <bb 67>:
  # DEBUG D#228 => &this_40(D)->_gptrs
  _126 = MEM[(int * *)this_40(D) + 336B];
  # DEBUG D#6 => D#228
  # DEBUG __n => _90
  # DEBUG this => D#6
  _154 = _126 + _150;
  _93 = input_69 + 1;
  _94 = this_40(D)->D.36967.D.36911._inputs;
  _95 = _93 % _94;
  *_154 = _95;
  # DEBUG D#229 => &this_40(D)->_aptrs
  # DEBUG D#6 => D#229
  # DEBUG __n => _70
  # DEBUG this => D#6
  _98 = output_220 + 1;
  _99 = this_40(D)->D.36967.D.36911._outputs;
  _100 = _98 % _99;
  *_136 = _100;

  <bb 68>:
  # DEBUG this => &outer_iter
  outer_iter$_M_node_155 = std::_Rb_tree_increment (outer_iter$_M_node_239);
  # DEBUG outer_iter$_M_node => outer_iter$_M_node_155
  # DEBUG outer_iter$_M_node => outer_iter$_M_node_155
  # DEBUG D#230 => &this_40(D)->D.36967._in_occ
  # DEBUG this => D#230
  # DEBUG D#21 => &MEM[(const struct set *)D#230]._M_t
  # DEBUG this => D#21
  # DEBUG this => NULL
  # DEBUG __x => D#296
  # DEBUG this => &outer_iter
  # DEBUG __x => &D.38356
  if (pretmp_24 != outer_iter$_M_node_155)
    goto <bb 69>;
  else
    goto <bb 41>;

  <bb 69>:
  goto <bb 44>;

  <bb 70>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => __first_22
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => __first_22
  # DEBUG this => D#94
  # DEBUG D.42767 => D#95
  operator delete (__first_22);

  <bb 71>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG D#231 => {CLOBBER}
  # DEBUG p$_M_node => D#231
  # DEBUG D#232 => {CLOBBER}
  # DEBUG outer_iter$_M_node => D#232
  grants ={v} {CLOBBER};
  return;

  <bb 72>:
  # DEBUG D#198 => &this_40(D)->_gptrs
  _119 = MEM[(int * *)this_40(D) + 336B];
  # DEBUG D#6 => D#198
  # DEBUG __n => _49
  # DEBUG this => D#6
  _73 = _119 + _82;
  input_offset_54 = *_73;
  # DEBUG input_offset => input_offset_54
  # DEBUG D#199 => &this_40(D)->D.36967._out_req
  # DEBUG D#5 => D#199
  # DEBUG __n => _49
  # DEBUG this => D#5
  # DEBUG this => NULL
  p$_M_node_76 = MEM[(struct _Rb_tree_node_base * *)_85 + 24B];
  # DEBUG D#23 => D#24
  # DEBUG this => D#23
  # DEBUG this => NULL
  # DEBUG __x => p$_M_node_76
  # DEBUG p$_M_node => p$_M_node_76
  # DEBUG p$_M_node => p$_M_node_76
  # DEBUG D#200 => &this_40(D)->D.36967._out_req
  # DEBUG D#5 => D#200
  # DEBUG __n => _49
  # DEBUG this => D#5
  # DEBUG this => NULL
  # DEBUG this => D#22
  _197 = &MEM[(struct _Rb_tree *)_85]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _197
  # DEBUG this => &p
  # DEBUG __x => &D.38298
  if (p$_M_node_76 != _197)
    goto <bb 20>;
  else
    goto <bb 24>;

  <bb 73>:

  <bb 74>:
  # p$_M_node_35 = PHI <p$_M_node_76(73), p$_M_node_62(23)>
  # DEBUG p$_M_node => p$_M_node_35
  # DEBUG D#200 => &this_40(D)->D.36967._out_req
  # DEBUG D#5 => D#200
  # DEBUG __n => _49
  # DEBUG this => D#5
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG this => NULL
  # DEBUG __x => _197
  # DEBUG this => &p
  # DEBUG __x => &D.38298
  # DEBUG this => &p
  # DEBUG this => p$_M_node_35
  # DEBUG D#201 => &MEM[(struct _Rb_tree_node *)p$_M_node_35]._M_value_field
  # DEBUG __r => D#201
  # DEBUG this => &p
  p$_M_node_62 = std::_Rb_tree_increment (p$_M_node_35);
  # DEBUG p$_M_node => p$_M_node_62
  # DEBUG p$_M_node => p$_M_node_62
  # DEBUG D#200 => &this_40(D)->D.36967._out_req
  # DEBUG D#5 => D#200
  # DEBUG __n => _49
  # DEBUG this => D#5
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG this => NULL
  # DEBUG __x => _197
  # DEBUG this => &p
  # DEBUG __x => &D.38298
  if (p$_M_node_62 != _197)
    goto <bb 21>;
  else
    goto <bb 24>;

  <bb 75>:
  # DEBUG D#202 => &this_40(D)->D.36967._out_req
  # DEBUG D#5 => D#202
  # DEBUG __n => _49
  # DEBUG this => D#5
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG this => NULL
  # DEBUG __x => _197
  # DEBUG this => &p
  # DEBUG __x => &D.38353
  if (p$_M_node_108 == _197)
    goto <bb 29>;
  else
    goto <bb 76>;

  <bb 76>:
  pretmp_231 = MEM[(struct pair *)p$_M_node_108 + 32B].second.port;
  goto <bb 32>;

  <bb 77>:

  <bb 78>:
  # p$_M_node_27 = PHI <p$_M_node_134(77), p$_M_node_138(50)>
  # DEBUG p$_M_node => p$_M_node_27
  # DEBUG D#216 => &this_40(D)->D.36967._in_req
  # DEBUG D#5 => D#216
  # DEBUG __n => _70
  # DEBUG this => D#5
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG this => NULL
  # DEBUG __x => _183
  # DEBUG this => &p
  # DEBUG __x => &D.38358
  # DEBUG this => &p
  # DEBUG this => p$_M_node_27
  # DEBUG D#217 => &MEM[(struct _Rb_tree_node *)p$_M_node_27]._M_value_field
  # DEBUG __r => D#217
  # DEBUG this => &p
  p$_M_node_138 = std::_Rb_tree_increment (p$_M_node_27);
  # DEBUG p$_M_node => p$_M_node_138
  # DEBUG p$_M_node => p$_M_node_138
  # DEBUG D#216 => &this_40(D)->D.36967._in_req
  # DEBUG D#5 => D#216
  # DEBUG __n => _70
  # DEBUG this => D#5
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG this => NULL
  # DEBUG __x => _183
  # DEBUG this => &p
  # DEBUG __x => &D.38358
  if (p$_M_node_138 != _183)
    goto <bb 48>;
  else
    goto <bb 51>;

  <bb 79>:
  # DEBUG D#218 => &this_40(D)->D.36967._in_req
  # DEBUG D#5 => D#218
  # DEBUG __n => _70
  # DEBUG this => D#5
  # DEBUG this => NULL
  # DEBUG this => D#22
  # DEBUG this => NULL
  # DEBUG __x => _183
  # DEBUG this => &p
  # DEBUG __x => &D.38360
  if (p$_M_node_161 == _183)
    goto <bb 56>;
  else
    goto <bb 80>;

  <bb 80>:
  pretmp_203 = MEM[(struct pair *)p$_M_node_161 + 32B].second.port;
  goto <bb 59>;

}



;; Function virtual void SelAlloc::PrintRequests(std::ostream*) const (_ZNK8SelAlloc13PrintRequestsEPSo, funcdef_no=1727, decl_uid=36939, cgraph_uid=430, symbol_order=431)

Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual void SelAlloc::PrintRequests(std::ostream*) const (const struct SelAlloc * const this, struct ostream * os)
{
  char_type D.43941;
  char __c;
  char_type D.43938;
  char __c;
  char_type D.43935;
  struct basic_ostream & D.43929;
  struct basic_ostream & D.43926;
  struct basic_ostream & D.43922;
  struct basic_ostream & D.43918;
  struct basic_ostream & D.43914;
  struct basic_ostream & D.43910;
  struct basic_ostream & D.43906;
  struct basic_ostream & D.43902;
  struct basic_ostream & D.43898;
  struct basic_ostream & D.43894;
  struct basic_ostream & D.43890;
  const struct _Rb_tree_node_base * const iter$_M_node;
  int output;
  int input;
  int prephitmp_7;
  int _14;
  struct basic_ostream & _16;
  long unsigned int _18;
  const struct map & _19;
  const struct _Rb_tree_node_base * _20;
  int _21;
  struct basic_ostream & _23;
  int _28;
  struct basic_ostream & _30;
  long unsigned int _32;
  int _33;
  const struct map & _35;
  long unsigned int _37;
  int _38;
  struct basic_ostream & _40;
  int (*__vtbl_ptr_type) () * _43;
  struct map * const _47;
  struct map * const _48;
  struct map * const _49;
  struct map * const _50;
  int * const _51;
  long unsigned int _53;
  const int & _54;
  long unsigned int _56;
  const struct map & _57;
  const struct _Rb_tree_node_base * _58;
  const struct map & _59;
  const struct __ctype_type * _62;
  long int _74;
  sizetype _75;
  struct basic_ios * _76;
  struct basic_ostream & _79;
  char _81;
  char_type _84;
  int (*__vtbl_ptr_type) () * _89;
  int (*__vtbl_ptr_type) () _90;
  int _93;
  void * PROF_94;
  char_type _96;
  int pretmp_101;
  int _107;
  int pretmp_115;
  const struct _Rb_tree_node_base * _117;
  const struct _Rb_tree_node_base * _124;

  <bb 2>:
  # DEBUG this => &iter
  # DEBUG iter$_M_node => 0B
  if (os_11(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # os_1 = PHI <os_11(D)(3), &cout(2)>
  # DEBUG os => os_1
  # DEBUG __out => os_1
  # DEBUG __s => "Input requests = [ "
  # DEBUG __s => "Input requests = [ "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "Input requests = [ ", 19);
  # DEBUG input => 0
  _107 = this_13(D)->D.36967.D.36911._inputs;
  if (_107 <= 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG __out => os_1
  # DEBUG __s => "], output requests = [ "
  # DEBUG __s => "], output requests = [ "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "], output requests = [ ", 23);
  # DEBUG output => 0
  _93 = this_13(D)->D.36967.D.36911._outputs;
  if (_93 <= 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 6>:

  <bb 7>:
  # input_77 = PHI <0(6), input_26(9)>
  # DEBUG input => input_77
  _16 = std::basic_ostream<char>::operator<< (os_1, input_77);
  # DEBUG __out => _16
  # DEBUG __s => " -> [ "
  # DEBUG __s => " -> [ "
  std::__ostream_insert<char, std::char_traits<char> > (_16, " -> [ ", 6);
  _18 = (long unsigned int) input_77;
  # DEBUG D#28 => &this_13(D)->D.36967._in_req
  _47 = MEM[(struct map * *)this_13(D) + 256B];
  # DEBUG D#8 => D#28
  # DEBUG __n => _18
  # DEBUG this => D#8
  _37 = _18 * 48;
  _35 = _47 + _37;
  # DEBUG this => NULL
  iter$_M_node_10 = MEM[(struct _Rb_tree_node_base * *)_35 + 24B];
  # DEBUG D#25 => D#26
  # DEBUG this => D#25
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_10
  # DEBUG iter$_M_node => iter$_M_node_10
  # DEBUG iter$_M_node => iter$_M_node_10
  # DEBUG D#30 => &this_13(D)->D.36967._in_req
  # DEBUG D#8 => D#30
  # DEBUG __n => _18
  # DEBUG this => D#8
  # DEBUG this => NULL
  # DEBUG this => D#27
  _124 = &MEM[(const struct _Rb_tree *)_35]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _124
  # DEBUG this => &iter
  # DEBUG __x => &D.38459
  if (iter$_M_node_10 != _124)
    goto <bb 10>;
  else
    goto <bb 8>;

  <bb 8>:
  # DEBUG __out => os_1
  # DEBUG __s => "]  "
  # DEBUG __s => "]  "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "]  ", 3);
  input_26 = input_77 + 1;
  # DEBUG input => input_26
  # DEBUG input => input_26
  _14 = this_13(D)->D.36967.D.36911._inputs;
  if (_14 <= input_26)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 7>;

  <bb 10>:

  <bb 11>:
  # iter$_M_node_68 = PHI <iter$_M_node_10(10), iter$_M_node_52(12)>
  # DEBUG iter$_M_node => iter$_M_node_68
  # DEBUG D#30 => &this_13(D)->D.36967._in_req
  # DEBUG D#8 => D#30
  # DEBUG __n => _18
  # DEBUG this => D#8
  # DEBUG this => NULL
  # DEBUG this => D#27
  # DEBUG this => NULL
  # DEBUG __x => _124
  # DEBUG this => &iter
  # DEBUG __x => &D.38459
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_68
  # DEBUG D#29 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_68]._M_value_field
  # DEBUG __r => D#29
  _21 = MEM[(const struct pair *)iter$_M_node_68 + 32B].second.port;
  _23 = std::basic_ostream<char>::operator<< (os_1, _21);
  # DEBUG __out => _23
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_23, " ", 1);
  # DEBUG this => &iter
  iter$_M_node_52 = std::_Rb_tree_increment (iter$_M_node_68);
  # DEBUG iter$_M_node => iter$_M_node_52
  # DEBUG iter$_M_node => iter$_M_node_52
  # DEBUG D#30 => &this_13(D)->D.36967._in_req
  _48 = MEM[(struct map * *)this_13(D) + 256B];
  # DEBUG D#8 => D#30
  # DEBUG __n => _18
  # DEBUG this => D#8
  _19 = _48 + _37;
  # DEBUG this => NULL
  # DEBUG this => D#27
  _20 = &MEM[(const struct _Rb_tree *)_19]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _20
  # DEBUG this => &iter
  # DEBUG __x => &D.38459
  if (_20 != iter$_M_node_52)
    goto <bb 12>;
  else
    goto <bb 8>;

  <bb 12>:
  goto <bb 11>;

  <bb 13>:
  # DEBUG __out => os_1
  # DEBUG __s => "]."
  # DEBUG __s => "]."
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "].", 2);
  # DEBUG this => os_1
  # DEBUG __pf => endl
  # DEBUG __os => os_1
  _43 = MEM[(struct basic_ostream *)os_1]._vptr.basic_ostream;
  _74 = MEM[(long int *)_43 + -24B];
  _75 = (sizetype) _74;
  _76 = os_1 + _75;
  # DEBUG this => _76
  # DEBUG __c => 10
  _62 = MEM[(const struct basic_ios *)_76]._M_ctype;
  # DEBUG __f => _62
  if (_62 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 14>:

  <bb 15>:
  # output_127 = PHI <0(14), output_44(23)>
  # DEBUG output => output_127
  _30 = std::basic_ostream<char>::operator<< (os_1, output_127);
  # DEBUG __out => _30
  # DEBUG __s => " -> "
  # DEBUG __s => " -> "
  std::__ostream_insert<char, std::char_traits<char> > (_30, " -> ", 4);
  _32 = (long unsigned int) output_127;
  # DEBUG D#31 => &this_13(D)->_outmask
  _51 = MEM[(int * *)this_13(D) + 360B];
  # DEBUG D#9 => D#31
  # DEBUG __n => _32
  # DEBUG this => D#9
  _53 = _32 * 4;
  _54 = _51 + _53;
  _33 = *_54;
  if (_33 == 0)
    goto <bb 16>;
  else
    goto <bb 21>;

  <bb 16>:
  # DEBUG __out => os_1
  # DEBUG __s => "[ "
  # DEBUG __s => "[ "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "[ ", 2);
  # DEBUG D#32 => &this_13(D)->D.36967._out_req
  _49 = MEM[(struct map * *)this_13(D) + 280B];
  # DEBUG D#8 => D#32
  # DEBUG __n => _32
  # DEBUG this => D#8
  _56 = _32 * 48;
  _57 = _49 + _56;
  # DEBUG this => NULL
  iter$_M_node_55 = MEM[(struct _Rb_tree_node_base * *)_57 + 24B];
  # DEBUG D#25 => D#26
  # DEBUG this => D#25
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_55
  # DEBUG iter$_M_node => iter$_M_node_55
  # DEBUG iter$_M_node => iter$_M_node_55
  # DEBUG D#34 => &this_13(D)->D.36967._out_req
  # DEBUG D#8 => D#34
  # DEBUG __n => _32
  # DEBUG this => D#8
  # DEBUG this => NULL
  # DEBUG this => D#27
  _117 = &MEM[(const struct _Rb_tree *)_57]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _117
  # DEBUG this => &iter
  # DEBUG __x => &D.38462
  if (iter$_M_node_55 != _117)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  # DEBUG __out => os_1
  # DEBUG __s => "]  "
  # DEBUG __s => "]  "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "]  ", 3);
  goto <bb 22>;

  <bb 18>:

  <bb 19>:
  # iter$_M_node_25 = PHI <iter$_M_node_55(18), iter$_M_node_60(20)>
  # DEBUG iter$_M_node => iter$_M_node_25
  # DEBUG D#34 => &this_13(D)->D.36967._out_req
  # DEBUG D#8 => D#34
  # DEBUG __n => _32
  # DEBUG this => D#8
  # DEBUG this => NULL
  # DEBUG this => D#27
  # DEBUG this => NULL
  # DEBUG __x => _117
  # DEBUG this => &iter
  # DEBUG __x => &D.38462
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_25
  # DEBUG D#33 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_25]._M_value_field
  # DEBUG __r => D#33
  _38 = MEM[(const struct pair *)iter$_M_node_25 + 32B].second.port;
  _40 = std::basic_ostream<char>::operator<< (os_1, _38);
  # DEBUG __out => _40
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_40, " ", 1);
  # DEBUG this => &iter
  iter$_M_node_60 = std::_Rb_tree_increment (iter$_M_node_25);
  # DEBUG iter$_M_node => iter$_M_node_60
  # DEBUG iter$_M_node => iter$_M_node_60
  # DEBUG D#34 => &this_13(D)->D.36967._out_req
  _50 = MEM[(struct map * *)this_13(D) + 280B];
  # DEBUG D#8 => D#34
  # DEBUG __n => _32
  # DEBUG this => D#8
  _59 = _50 + _56;
  # DEBUG this => NULL
  # DEBUG this => D#27
  _58 = &MEM[(const struct _Rb_tree *)_59]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _58
  # DEBUG this => &iter
  # DEBUG __x => &D.38462
  if (_58 != iter$_M_node_60)
    goto <bb 20>;
  else
    goto <bb 17>;

  <bb 20>:
  goto <bb 19>;

  <bb 21>:
  # DEBUG __out => os_1
  # DEBUG __s => "masked  "
  # DEBUG __s => "masked  "
  std::__ostream_insert<char, std::char_traits<char> > (os_1, "masked  ", 8);

  <bb 22>:
  output_44 = output_127 + 1;
  # DEBUG output => output_44
  # DEBUG output => output_44
  _28 = this_13(D)->D.36967.D.36911._outputs;
  if (_28 <= output_44)
    goto <bb 13>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 15>;

  <bb 24>:
  std::__throw_bad_cast ();

  <bb 25>:
  # DEBUG this => _62
  # DEBUG __c => 10
  _81 = MEM[(const struct ctype *)_62]._M_widen_ok;
  if (_81 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  _84 = MEM[(const struct ctype *)_62]._M_widen[10];
  pretmp_101 = (int) _84;
  goto <bb 29>;

  <bb 27>:
  # DEBUG this => _62
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_62);
  _89 = MEM[(const struct ctype *)_62].D.18015._vptr.facet;
  _90 = MEM[(int (*__vtbl_ptr_type) () *)_89 + 48B];
  PROF_94 = [obj_type_ref] OBJ_TYPE_REF(_90;(const struct ctype)_62->6);
  if (PROF_94 == do_widen)
    goto <bb 29>;
  else
    goto <bb 28>;

  <bb 28>:
  _96 = OBJ_TYPE_REF(_90;(const struct ctype)_62->6) (_62, 10);
  pretmp_115 = (int) _96;

  <bb 29>:
  # prephitmp_7 = PHI <pretmp_101(26), 10(27), pretmp_115(28)>
  _79 = std::basic_ostream<char>::put (os_1, prephitmp_7);
  # DEBUG __os => _79
  std::basic_ostream<char>::flush (_79);
  # DEBUG D#35 => {CLOBBER}
  # DEBUG iter$_M_node => D#35
  return;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE, funcdef_no=1821, decl_uid=35625, cgraph_uid=524, symbol_order=525)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#14 => __x_68
  # DEBUG __x => D#14
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#15 => __x_68
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_68
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_68
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_68
  # DEBUG this => D#143
  # DEBUG D.42007 => D#144
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#14 => __x_72
  # DEBUG __x => D#14
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#15 => __x_72
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_72
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_72
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_72
  # DEBUG this => D#143
  # DEBUG D.44013 => D#144
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#14 => __x_71
  # DEBUG __x => D#14
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#15 => __x_71
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_71
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_71
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_71
  # DEBUG this => D#143
  # DEBUG D.44026 => D#144
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#14 => __x_77
  # DEBUG __x => D#14
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#15 => __x_77
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_77
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_77
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_77
  # DEBUG this => D#143
  # DEBUG D.44039 => D#144
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#14 => __x_80
  # DEBUG __x => D#14
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#15 => __x_80
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_80
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_80
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_80
  # DEBUG this => D#143
  # DEBUG D.44052 => D#144
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#14 => __x_83
  # DEBUG __x => D#14
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#15 => __x_83
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_83
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_83
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_83
  # DEBUG this => D#143
  # DEBUG D.44065 => D#144
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#14 => __x_86
  # DEBUG __x => D#14
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#15 => __x_86
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_86
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_86
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_86
  # DEBUG this => D#143
  # DEBUG D.44078 => D#144
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#14 => __x_89
  # DEBUG __x => D#14
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#15 => __x_89
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_89
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_89
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_89
  # DEBUG this => D#143
  # DEBUG D.44091 => D#144
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#14 => __x_92
  # DEBUG __x => D#14
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#15 => __x_92
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_92
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_92
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_92
  # DEBUG this => D#143
  # DEBUG D.44104 => D#144
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=1891, decl_uid=34234, cgraph_uid=594, symbol_order=595)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.44145;
  const size_type __len;
  size_type D.44144;
  size_type __n;
  int * D.44135;
  const ptrdiff_t _Num;
  int * D.44126;
  int * const __position;
  int * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  int * __first;
  long unsigned int __n;
  int * __first;
  const ptrdiff_t _Num;
  int * __first;
  int * __new_finish;
  const size_type __elems_after;
  value_type __x_copy;
  int * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  int * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  int * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  int * _41;
  int * _43;
  long int _47;
  int * _48;
  long int __first.7_49;
  int * _53;
  const int _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  int * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  int * _108;
  int * _112;
  int * iftmp.12_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  int * prephitmp_146;
  int * pretmp_147;
  int * prephitmp_148;
  int * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  int * pretmp_166;
  int * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  int * pretmp_173;
  int * prephitmp_174;

  <bb 2>:
  # DEBUG D#316 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#316
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.34311._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.34311._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 4;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#18 => &this_4(D)->D.34311._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#18
  # DEBUG __lhs => &D.39211
  # DEBUG __rhs => &__position
  # DEBUG this => &D.39211
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 4;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#255 => &this_4(D)->D.34311
  # DEBUG this => D#255
  _39 = __n_2(D) * 4;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#247
  # DEBUG D#246 => D#247
  # DEBUG D#245 => D#246
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.43191 => D#245
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.7_49 = (long int) _41;
  _47 = _8 - __first.7_49;
  _Num_45 = _47 /[ex] 4;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.34311._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.34311._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#316
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#316
  # DEBUG __it => D#316
  # DEBUG __first => D#316
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#316
  # DEBUG __it => D#316
  # DEBUG __first => D#316
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#316
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.7_49 - _27;
  _Num_105 = _104 /[ex] 4;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#156 => &__x_copy
  # DEBUG __first => D#316
  # DEBUG __last => _48
  # DEBUG D#155 => D#156
  # DEBUG __value => D#155
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#316
  # DEBUG __it => D#316
  # DEBUG D#133 => D#155
  # DEBUG __first => D#316
  # DEBUG __last => _48
  # DEBUG __value => D#133
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#316
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 4;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#256 => &this_4(D)->D.34311
  # DEBUG this => D#256
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#182 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#181 => D#182
  # DEBUG __x => D#181
  # DEBUG D.43276 => D#183
  # DEBUG D#180 => D#181
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#179 => D#180
  # DEBUG __x => D#179
  # DEBUG __assignable => 1
  # DEBUG D#178 => D#179
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#177 => D#178
  # DEBUG __x => D#177
  # DEBUG D#176 => D#177
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#175 => D#176
  # DEBUG __value => D#175
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#174 => D#175
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#174
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 4;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 4;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.34311._M_impl._M_finish = __first_125;
  # DEBUG D#257 => &this_4(D)->D.34311
  # DEBUG this => D#257
  # DEBUG this => &__position
  # DEBUG __first => D#316
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#247
  # DEBUG D#246 => D#247
  # DEBUG D#245 => D#246
  # DEBUG __first => D#316
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.43238 => D#245
  # DEBUG __first => D#316
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#316
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#316
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#316
  # DEBUG __it => D#316
  # DEBUG __first => D#316
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#316
  # DEBUG __it => D#316
  # DEBUG __first => D#316
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#316
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.34311._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.34311._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#156 => &__x_copy
  # DEBUG __first => D#316
  # DEBUG __last => __first_7
  # DEBUG D#155 => D#156
  # DEBUG __value => D#155
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#316
  # DEBUG __it => D#316
  # DEBUG D#133 => D#155
  # DEBUG __first => D#316
  # DEBUG __last => __first_7
  # DEBUG __value => D#133
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#316
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 4;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#162 => this_4(D)
  # DEBUG this => D#162
  # DEBUG D#161 => D#162
  # DEBUG D#160 => &D#161->D.34311
  # DEBUG this => D#160
  # DEBUG __a => D#159
  # DEBUG D#158 => D#159
  # DEBUG D#157 => D#158
  # DEBUG this => D#157
  _17 = MEM[(int * *)this_4(D)];
  # DEBUG D#11 => this_4(D)
  # DEBUG D#11 => this_4(D)
  # DEBUG this => D#11
  # DEBUG this => D#11
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 4;
  _119 = (const long unsigned int) _118;
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#11 => this_4(D)
  # DEBUG D#11 => this_4(D)
  # DEBUG this => D#11
  # DEBUG this => D#11
  # DEBUG D#11 => this_4(D)
  # DEBUG D#11 => this_4(D)
  # DEBUG this => D#11
  # DEBUG this => D#11
  # DEBUG __a => &D.44145
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#11 => this_4(D)
  # DEBUG D#11 => this_4(D)
  # DEBUG this => D#11
  # DEBUG this => D#11
  # DEBUG D#162 => this_4(D)
  # DEBUG this => D#162
  # DEBUG D#161 => D#162
  # DEBUG D#160 => &D#161->D.34311
  # DEBUG this => D#160
  # DEBUG __a => D#159
  # DEBUG D#158 => D#159
  # DEBUG D#157 => D#158
  # DEBUG this => D#157
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 4;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551612(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#58 => &this_4(D)->D.34311._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#58
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.39244
  # DEBUG this => &__position
  # DEBUG this => &D.39244
  # DEBUG D#268 => _157 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#268
  # DEBUG D#267 => &this_4(D)->D.34311
  # DEBUG D#170 => D#267
  # DEBUG __n => NULL
  # DEBUG this => D#170
  # DEBUG D#169 => D#170
  # DEBUG D#168 => &D#169->_M_impl
  # DEBUG D#167 => D#168
  # DEBUG __n => NULL
  # DEBUG __a => D#167
  # DEBUG D#166 => D#167
  # DEBUG D#164 => D#166
  # DEBUG D#165 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#164
  # DEBUG D.44133 => D#165
  # DEBUG D#163 => D#164
  # DEBUG D#157 => D#163
  # DEBUG this => D#157
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.34311._M_impl._M_start;
  pretmp_147 = this_4(D)->D.34311._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.12_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#251 => &this_4(D)->D.34311
  # DEBUG this => D#251
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.12_113 + _19;
  _56 = MEM[(const int &)__x_21(D)];
  # DEBUG D#182 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#181 => D#182
  # DEBUG __x => D#181
  # DEBUG D.43393 => D#183
  # DEBUG D#180 => D#181
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#179 => D#180
  # DEBUG __x => D#179
  # DEBUG __assignable => 1
  # DEBUG D#178 => D#179
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#177 => D#178
  # DEBUG __x => D#177
  # DEBUG D#176 => D#177
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#175 => D#176
  # DEBUG __value => D#175
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#174 => D#175
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#174
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 4;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#252 => &this_4(D)->D.34311
  # DEBUG this => D#252
  # DEBUG this => &__position
  # DEBUG D#315 => this_4(D)->D.34311._M_impl._M_start
  # DEBUG __first => D#315
  # DEBUG __last => D#316
  # DEBUG __result => NULL
  # DEBUG __alloc => D#249
  # DEBUG D#248 => D#249
  # DEBUG D#245 => D#248
  # DEBUG __first => D#315
  # DEBUG __last => D#316
  # DEBUG __result => NULL
  # DEBUG D.43355 => D#245
  # DEBUG __first => D#315
  # DEBUG __last => D#316
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#315
  # DEBUG __last => D#316
  # DEBUG __result => NULL
  # DEBUG __first => D#315
  # DEBUG __last => D#316
  # DEBUG __result => NULL
  # DEBUG __it => D#316
  # DEBUG __it => D#316
  # DEBUG __it => D#315
  # DEBUG __it => D#315
  # DEBUG __first => D#315
  # DEBUG __last => D#316
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#316
  # DEBUG __it => D#316
  # DEBUG __it => D#315
  # DEBUG __it => D#315
  # DEBUG __first => D#315
  # DEBUG __last => D#316
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#315
  # DEBUG __last => D#316
  # DEBUG __result => NULL
  # DEBUG D#314 => (long int) D#315
  # DEBUG D#313 => _158 - D#314
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.12_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#312 => (long unsigned int) D#313
  # DEBUG __new_finish => iftmp.12_113 + D#312
  _25 = __n_2(D) * 4;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.12_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#253 => &this_4(D)->D.34311
  # DEBUG this => D#253
  # DEBUG D#311 => this_4(D)->D.34311._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#316
  # DEBUG __last => D#311
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#249
  # DEBUG D#248 => D#249
  # DEBUG D#245 => D#248
  # DEBUG __first => D#316
  # DEBUG __last => D#311
  # DEBUG __result => __new_finish_26
  # DEBUG D.43316 => D#245
  # DEBUG __first => D#316
  # DEBUG __last => D#311
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#316
  # DEBUG __last => D#311
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#316
  # DEBUG __last => D#311
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#311
  # DEBUG __it => D#311
  # DEBUG __it => D#316
  # DEBUG __it => D#316
  # DEBUG __first => D#316
  # DEBUG __last => D#311
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#311
  # DEBUG __it => D#311
  # DEBUG __it => D#316
  # DEBUG __it => D#316
  # DEBUG __first => D#316
  # DEBUG __last => D#311
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#316
  # DEBUG __last => D#311
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 4;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#254 => &this_4(D)->D.34311
  # DEBUG this => D#254
  # DEBUG D#266 => this_4(D)->D.34311._M_impl._M_finish
  # DEBUG D#265 => this_4(D)->D.34311._M_impl._M_start
  # DEBUG __first => D#265
  # DEBUG __last => D#266
  # DEBUG D.43309 => NULL
  # DEBUG D#52 => D#265
  # DEBUG D#53 => D#266
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#264 => this_4(D)->D.34311._M_impl._M_end_of_storage
  # DEBUG D#263 => (long int) D#264
  # DEBUG D#262 => (long int) D#315
  # DEBUG D#261 => D#263 - D#262
  # DEBUG D#260 => D#261 /[ex] 4
  # DEBUG D#259 => (long unsigned int) D#260
  # DEBUG D#258 => &this_4(D)->D.34311
  # DEBUG this => D#258
  # DEBUG __p => D#315
  # DEBUG __n => D#259
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#100 => &D#258->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#259
  # DEBUG __p => D#315
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => D#315
  # DEBUG this => D#94
  # DEBUG D.43305 => D#95
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.34311._M_impl._M_start = iftmp.12_113;
  this_4(D)->D.34311._M_impl._M_finish = _70;
  this_4(D)->D.34311._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#58 => &this_4(D)->D.34311._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#58
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.39244
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.39244
  _143 = _144 - _116;
  # DEBUG D#268 => _143 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#268
  # DEBUG D#267 => &this_4(D)->D.34311
  # DEBUG D#170 => D#267
  # DEBUG __n => NULL
  # DEBUG this => D#170
  # DEBUG D#169 => D#170
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#58 => &this_4(D)->D.34311._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#58
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.39244
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.39244
  _150 = _151 - _116;
  # DEBUG D#268 => _150 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#268
  # DEBUG D#267 => &this_4(D)->D.34311
  # DEBUG D#170 => D#267
  # DEBUG __n => NULL
  # DEBUG this => D#170
  # DEBUG D#169 => D#170
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*] (_ZNSt8_Rb_treeIiSt4pairIKiN9Allocator8sRequestEESt10_Select1stIS4_ESt4lessIiESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E, funcdef_no=1990, decl_uid=37657, cgraph_uid=693, symbol_order=694)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Allocator::sRequest>; _KeyOfValue = std::_Select1st<std::pair<const int, Allocator::sRequest> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Allocator::sRequest> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Allocator::sRequest> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#172 => __x_68
  # DEBUG __x => D#172
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#173 => __x_68
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_68
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_68
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_68
  # DEBUG this => D#237
  # DEBUG D.43526 => D#238
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#172 => __x_72
  # DEBUG __x => D#172
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#173 => __x_72
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_72
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_72
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_72
  # DEBUG this => D#237
  # DEBUG D.44266 => D#238
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#172 => __x_71
  # DEBUG __x => D#172
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#173 => __x_71
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_71
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_71
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_71
  # DEBUG this => D#237
  # DEBUG D.44279 => D#238
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#172 => __x_77
  # DEBUG __x => D#172
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#173 => __x_77
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_77
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_77
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_77
  # DEBUG this => D#237
  # DEBUG D.44292 => D#238
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#172 => __x_80
  # DEBUG __x => D#172
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#173 => __x_80
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_80
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_80
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_80
  # DEBUG this => D#237
  # DEBUG D.44305 => D#238
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#172 => __x_83
  # DEBUG __x => D#172
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#173 => __x_83
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_83
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_83
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_83
  # DEBUG this => D#237
  # DEBUG D.44318 => D#238
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#172 => __x_86
  # DEBUG __x => D#172
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#173 => __x_86
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_86
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_86
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_86
  # DEBUG this => D#237
  # DEBUG D.44331 => D#238
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#172 => __x_89
  # DEBUG __x => D#172
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#173 => __x_89
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_89
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_89
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_89
  # DEBUG this => D#237
  # DEBUG D.44344 => D#238
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#172 => __x_92
  # DEBUG __x => D#172
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#173 => __x_92
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_92
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_92
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_92
  # DEBUG this => D#237
  # DEBUG D.44357 => D#238
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function SparseAllocator::~SparseAllocator() (_ZN15SparseAllocatorD2Ev, funcdef_no=1720, decl_uid=36896, cgraph_uid=422, symbol_order=423)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
SparseAllocator::~SparseAllocator() (struct SparseAllocator * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct map * __first;
  struct map * __first;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct map * _7;
  struct map * _8;
  struct _Rep_type * _9;
  struct _Rep_type * _13;
  int * _27;
  int * _28;
  struct _Rb_tree_node_base * _30;
  struct _Rb_tree_node_base * _33;
  struct _Rep_type * _38;
  struct _Rep_type * _44;
  struct _Rb_tree_node_base * _48;
  struct _Rb_tree_node_base * _52;
  struct Module * * _55;
  char * const _56;
  const char * _57;
  char * const _58;
  const char * _59;
  struct map * prephitmp_71;
  struct map * pretmp_84;
  struct map * prephitmp_85;
  struct map * pretmp_87;

  <bb 2>:
  this_2(D)->D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV15SparseAllocator + 16B];
  # DEBUG D#382 => &this_2(D)->_out_req
  # DEBUG this => D#382
  # DEBUG D#282 => &D#382->D.36830
  # DEBUG this => D#282
  _7 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_finish;
  __first_42 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_42
  # DEBUG __last => _7
  # DEBUG __first => __first_42
  if (_7 == __first_42)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_147 = PHI <__first_42(3), __first_46(6)>
  # DEBUG __first => __first_147
  # DEBUG __r => __first_147
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _44 = &__first_147->_M_t;
  # DEBUG this => _44
  __x_45 = MEM[(struct _Rb_tree_node_base * *)__first_147 + 16B];
  # DEBUG D#171 => _44
  # DEBUG this => D#171
  # DEBUG this => _44
  # DEBUG __x => __x_45
  # DEBUG __x => __x_45
  if (__x_45 == 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  # DEBUG D#280 => &MEM[(struct _Rb_tree *)_44]._M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct  &)__first_147] ={v} {CLOBBER};
  __first_46 = __first_147 + 48;
  # DEBUG __first => __first_46
  # DEBUG __first => __first_46
  if (_7 == __first_46)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  <bb 7>:

  <bb 8>:
  # __x_143 = PHI <__x_45(7), __x_49(9)>
  # DEBUG __x => __x_143
  _48 = MEM[(struct _Rb_tree_node_base * *)__x_143 + 24B];
  # DEBUG D#172 => __x_143
  # DEBUG __x => D#172
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_44, _48);
  __x_49 = MEM[(struct _Rb_tree_node_base * *)__x_143 + 16B];
  # DEBUG D#173 => __x_143
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => _44
  # DEBUG __p => __x_143
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_143
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_143
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_143
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_143
  # DEBUG this => D#237
  # DEBUG D.44502 => D#238
  operator delete (__x_143);
  # DEBUG __x => __x_49
  # DEBUG __x => __x_49
  if (__x_49 == 0B)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  pretmp_84 = MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start;

  <bb 11>:
  # prephitmp_85 = PHI <pretmp_84(10), __first_42(2)>
  # DEBUG D#283 => &D#382->D.36830
  # DEBUG this => D#283
  # DEBUG D#132 => D#283->_M_impl._M_end_of_storage
  # DEBUG D#131 => (long int) D#132
  # DEBUG D#384 => MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start
  # DEBUG D#130 => (long int) D#384
  # DEBUG D#129 => D#131 - D#130
  # DEBUG D#128 => D#129 /[ex] 48
  # DEBUG D#125 => D#283
  # DEBUG D#126 => (long unsigned int) D#128
  # DEBUG __p => D#384
  # DEBUG this => D#125
  # DEBUG __n => D#126
  # DEBUG D#124 => D#126
  # DEBUG D#123 => D#125
  if (prephitmp_85 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#122 => &D#123->_M_impl
  # DEBUG D#120 => D#122
  # DEBUG D#121 => D#124
  # DEBUG __p => D#384
  # DEBUG __a => D#120
  # DEBUG __n => D#121
  # DEBUG D#119 => D#121
  # DEBUG D#118 => D#120
  # DEBUG D#116 => D#118
  # DEBUG D#117 => D#119
  # DEBUG __p => D#384
  # DEBUG this => D#116
  # DEBUG D.44486 => D#117
  operator delete (prephitmp_85);

  <bb 13>:
  # DEBUG D#127 => &D#283->_M_impl
  # DEBUG this => D#127
  # DEBUG this => D#127
  # DEBUG this => D#127
  MEM[(struct  &)this_2(D) + 280] ={v} {CLOBBER};
  # DEBUG D#381 => &this_2(D)->_in_req
  # DEBUG this => D#381
  # DEBUG D#282 => &D#381->D.36830
  # DEBUG this => D#282
  _8 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_finish;
  __first_36 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_36
  # DEBUG __last => _8
  # DEBUG __first => __first_36
  if (_8 == __first_36)
    goto <bb 22>;
  else
    goto <bb 14>;

  <bb 14>:

  <bb 15>:
  # __first_131 = PHI <__first_36(14), __first_40(17)>
  # DEBUG __first => __first_131
  # DEBUG __r => __first_131
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _38 = &__first_131->_M_t;
  # DEBUG this => _38
  __x_39 = MEM[(struct _Rb_tree_node_base * *)__first_131 + 16B];
  # DEBUG D#171 => _38
  # DEBUG this => D#171
  # DEBUG this => _38
  # DEBUG __x => __x_39
  # DEBUG __x => __x_39
  if (__x_39 == 0B)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 16>:
  # DEBUG D#280 => &MEM[(struct _Rb_tree *)_38]._M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct  &)__first_131] ={v} {CLOBBER};
  __first_40 = __first_131 + 48;
  # DEBUG __first => __first_40
  # DEBUG __first => __first_40
  if (_8 == __first_40)
    goto <bb 21>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 15>;

  <bb 18>:

  <bb 19>:
  # __x_150 = PHI <__x_39(18), __x_53(20)>
  # DEBUG __x => __x_150
  _52 = MEM[(struct _Rb_tree_node_base * *)__x_150 + 24B];
  # DEBUG D#172 => __x_150
  # DEBUG __x => D#172
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_38, _52);
  __x_53 = MEM[(struct _Rb_tree_node_base * *)__x_150 + 16B];
  # DEBUG D#173 => __x_150
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => _38
  # DEBUG __p => __x_150
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_150
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_150
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_150
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_150
  # DEBUG this => D#237
  # DEBUG D.44515 => D#238
  operator delete (__x_150);
  # DEBUG __x => __x_53
  # DEBUG __x => __x_53
  if (__x_53 == 0B)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 19>;

  <bb 21>:
  pretmp_87 = MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start;

  <bb 22>:
  # prephitmp_71 = PHI <pretmp_87(21), __first_36(13)>
  # DEBUG D#283 => &D#381->D.36830
  # DEBUG this => D#283
  # DEBUG D#132 => D#283->_M_impl._M_end_of_storage
  # DEBUG D#131 => (long int) D#132
  # DEBUG D#383 => MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start
  # DEBUG D#130 => (long int) D#383
  # DEBUG D#129 => D#131 - D#130
  # DEBUG D#128 => D#129 /[ex] 48
  # DEBUG D#125 => D#283
  # DEBUG D#126 => (long unsigned int) D#128
  # DEBUG __p => D#383
  # DEBUG this => D#125
  # DEBUG __n => D#126
  # DEBUG D#124 => D#126
  # DEBUG D#123 => D#125
  if (prephitmp_71 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#122 => &D#123->_M_impl
  # DEBUG D#120 => D#122
  # DEBUG D#121 => D#124
  # DEBUG __p => D#383
  # DEBUG __a => D#120
  # DEBUG __n => D#121
  # DEBUG D#119 => D#121
  # DEBUG D#118 => D#120
  # DEBUG D#116 => D#118
  # DEBUG D#117 => D#119
  # DEBUG __p => D#383
  # DEBUG this => D#116
  # DEBUG D.44457 => D#117
  operator delete (prephitmp_71);

  <bb 24>:
  # DEBUG D#127 => &D#283->_M_impl
  # DEBUG this => D#127
  # DEBUG this => D#127
  # DEBUG this => D#127
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  # DEBUG D#285 => &this_2(D)->_out_occ
  # DEBUG this => D#285
  _9 = &MEM[(struct set *)this_2(D) + 208B]._M_t;
  # DEBUG this => _9
  __x_15 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 224B];
  # DEBUG D#10 => _9
  # DEBUG this => D#10
  # DEBUG this => _9
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#154 => &MEM[(struct _Rb_tree *)_9]._M_impl
  # DEBUG this => D#154
  # DEBUG this => D#154
  # DEBUG this => D#154
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  # DEBUG D#284 => &this_2(D)->_in_occ
  # DEBUG this => D#284
  _13 = &MEM[(struct set *)this_2(D) + 160B]._M_t;
  # DEBUG this => _13
  __x_14 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 176B];
  # DEBUG D#10 => _13
  # DEBUG this => D#10
  # DEBUG this => _13
  # DEBUG __x => __x_14
  # DEBUG __x => __x_14
  if (__x_14 == 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 26>:

  <bb 27>:
  # __x_138 = PHI <__x_15(26), __x_34(28)>
  # DEBUG __x => __x_138
  _33 = MEM[(struct _Rb_tree_node_base * *)__x_138 + 24B];
  # DEBUG D#14 => __x_138
  # DEBUG __x => D#14
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_9, _33);
  __x_34 = MEM[(struct _Rb_tree_node_base * *)__x_138 + 16B];
  # DEBUG D#15 => __x_138
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => _9
  # DEBUG __p => __x_138
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_138
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_138
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_138
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_138
  # DEBUG this => D#143
  # DEBUG D.44431 => D#144
  operator delete (__x_138);
  # DEBUG __x => __x_34
  # DEBUG __x => __x_34
  if (__x_34 == 0B)
    goto <bb 25>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 27>;

  <bb 29>:
  # DEBUG D#154 => &MEM[(struct _Rb_tree *)_13]._M_impl
  # DEBUG this => D#154
  # DEBUG this => D#154
  # DEBUG this => D#154
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#380 => &this_2(D)->D.36911
  # DEBUG this => D#380
  MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
  # DEBUG D#113 => &D#380->_outmatch
  # DEBUG this => D#113
  # DEBUG D#108 => &D#113->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#113->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#113->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#113->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _27 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _27
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _27
  # DEBUG __n => D#102
  if (_27 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 30>:

  <bb 31>:
  # __x_137 = PHI <__x_14(30), __x_31(32)>
  # DEBUG __x => __x_137
  _30 = MEM[(struct _Rb_tree_node_base * *)__x_137 + 24B];
  # DEBUG D#14 => __x_137
  # DEBUG __x => D#14
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_13, _30);
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_137 + 16B];
  # DEBUG D#15 => __x_137
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => _13
  # DEBUG __p => __x_137
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_137
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_137
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_137
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_137
  # DEBUG this => D#143
  # DEBUG D.44418 => D#144
  operator delete (__x_137);
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 29>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 31>;

  <bb 33>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _27
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _27
  # DEBUG this => D#94
  # DEBUG D.44387 => D#95
  operator delete (_27);

  <bb 34>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#112 => &D#380->_inmatch
  # DEBUG this => D#112
  # DEBUG D#108 => &D#112->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#112->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#112->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#112->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _28 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _28
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _28
  # DEBUG __n => D#102
  if (_28 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _28
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _28
  # DEBUG this => D#94
  # DEBUG D.44402 => D#95
  operator delete (_28);

  <bb 36>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#379 => &MEM[(struct Allocator *)this_2(D)].D.34407
  # DEBUG this => D#379
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#93 => &D#379->_children
  # DEBUG this => D#93
  # DEBUG D#87 => &D#93->D.29436
  # DEBUG this => D#87
  # DEBUG D#90 => D#93->D.29436._M_impl._M_finish
  # DEBUG D#89 => D#93->D.29436._M_impl._M_start
  # DEBUG D#45 => D#89
  # DEBUG D#46 => D#90
  # DEBUG __first => D#45
  # DEBUG __last => D#46
  # DEBUG D.41649 => D#47
  # DEBUG D#44 => D#46
  # DEBUG D#43 => D#45
  # DEBUG D#41 => D#43
  # DEBUG D#42 => D#44
  # DEBUG __first => D#41
  # DEBUG __last => D#42
  # DEBUG D#40 => D#42
  # DEBUG D#39 => D#41
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#40
  # DEBUG D.41417 => D#37
  # DEBUG D.41416 => D#38
  # DEBUG D#88 => &D#93->D.29436
  # DEBUG this => D#88
  # DEBUG D#86 => D#88->_M_impl._M_end_of_storage
  # DEBUG D#85 => (long int) D#86
  _55 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#84 => (long int) _55
  # DEBUG D#83 => D#85 - D#84
  # DEBUG D#82 => D#83 /[ex] 8
  # DEBUG D#79 => D#88
  # DEBUG D#80 => (long unsigned int) D#82
  # DEBUG __p => _55
  # DEBUG this => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  if (_55 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # DEBUG D#76 => &D#77->_M_impl
  # DEBUG D#74 => D#76
  # DEBUG D#75 => D#78
  # DEBUG __p => _55
  # DEBUG __a => D#74
  # DEBUG __n => D#75
  # DEBUG D#73 => D#75
  # DEBUG D#72 => D#74
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73
  # DEBUG __p => _55
  # DEBUG this => D#70
  # DEBUG D.44528 => D#71
  operator delete (_55);

  <bb 38>:
  # DEBUG D#81 => &D#88->_M_impl
  # DEBUG this => D#81
  # DEBUG this => D#81
  # DEBUG this => D#81
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#92 => &D#379->_fullname
  # DEBUG this => D#92
  # DEBUG this => D#92
  # DEBUG this => D#92
  _56 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#2 => D#92
  # DEBUG this => D#2
  # DEBUG this => D#92
  _57 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_56 != _57)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#92].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#92
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#2 => D#92
  # DEBUG this => D#2
  # DEBUG this => D#92
  # DEBUG D#65 => &MEM[(struct basic_string *)D#92]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _56
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _56
  # DEBUG this => D#59
  # DEBUG D.44541 => D#60
  operator delete (_56);

  <bb 40>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#92]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#91 => &D#379->_name
  # DEBUG this => D#91
  # DEBUG this => D#91
  # DEBUG this => D#91
  _58 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#2 => D#91
  # DEBUG this => D#2
  # DEBUG this => D#91
  _59 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_58 != _59)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#91].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#91
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#2 => D#91
  # DEBUG this => D#2
  # DEBUG this => D#91
  # DEBUG D#65 => &MEM[(struct basic_string *)D#91]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _58
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _58
  # DEBUG this => D#59
  # DEBUG D.44556 => D#60
  operator delete (_58);

  <bb 42>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#91]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function virtual SparseAllocator::~SparseAllocator() (_ZN15SparseAllocatorD0Ev, funcdef_no=1722, decl_uid=36890, cgraph_uid=424, symbol_order=425)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
virtual SparseAllocator::~SparseAllocator() (struct SparseAllocator * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct map * __first;
  struct map * __first;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  int * _3;
  struct _Rep_type * _7;
  struct _Rep_type * _9;
  int * _12;
  struct _Rb_tree_node_base * _15;
  struct _Rb_tree_node_base * _19;
  struct map * _22;
  struct _Rep_type * _25;
  struct map * _29;
  struct _Rep_type * _32;
  struct _Rb_tree_node_base * _37;
  struct _Rb_tree_node_base * _41;
  struct Module * * _44;
  char * const _45;
  const char * _46;
  char * const _47;
  const char * _48;
  struct map * prephitmp_61;
  struct map * pretmp_74;
  struct map * prephitmp_75;
  struct map * pretmp_77;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV15SparseAllocator + 16B];
  # DEBUG D#393 => &this_2(D)->_out_req
  # DEBUG this => D#393
  # DEBUG D#282 => &D#393->D.36830
  # DEBUG this => D#282
  _29 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_finish;
  __first_30 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_30
  # DEBUG __last => _29
  # DEBUG __first => __first_30
  if (_29 == __first_30)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_132 = PHI <__first_30(3), __first_34(6)>
  # DEBUG __first => __first_132
  # DEBUG __r => __first_132
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _32 = &__first_132->_M_t;
  # DEBUG this => _32
  __x_33 = MEM[(struct _Rb_tree_node_base * *)__first_132 + 16B];
  # DEBUG D#171 => _32
  # DEBUG this => D#171
  # DEBUG this => _32
  # DEBUG __x => __x_33
  # DEBUG __x => __x_33
  if (__x_33 == 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  # DEBUG D#280 => &MEM[(struct _Rb_tree *)_32]._M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct  &)__first_132] ={v} {CLOBBER};
  __first_34 = __first_132 + 48;
  # DEBUG __first => __first_34
  # DEBUG __first => __first_34
  if (_29 == __first_34)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  <bb 7>:

  <bb 8>:
  # __x_148 = PHI <__x_33(7), __x_38(9)>
  # DEBUG __x => __x_148
  _37 = MEM[(struct _Rb_tree_node_base * *)__x_148 + 24B];
  # DEBUG D#172 => __x_148
  # DEBUG __x => D#172
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_32, _37);
  __x_38 = MEM[(struct _Rb_tree_node_base * *)__x_148 + 16B];
  # DEBUG D#173 => __x_148
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => _32
  # DEBUG __p => __x_148
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_148
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_148
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_148
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_148
  # DEBUG this => D#237
  # DEBUG D.44770 => D#238
  operator delete (__x_148);
  # DEBUG __x => __x_38
  # DEBUG __x => __x_38
  if (__x_38 == 0B)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  pretmp_74 = MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start;

  <bb 11>:
  # prephitmp_75 = PHI <pretmp_74(10), __first_30(2)>
  # DEBUG D#283 => &D#393->D.36830
  # DEBUG this => D#283
  # DEBUG D#132 => D#283->_M_impl._M_end_of_storage
  # DEBUG D#131 => (long int) D#132
  # DEBUG D#395 => MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start
  # DEBUG D#130 => (long int) D#395
  # DEBUG D#129 => D#131 - D#130
  # DEBUG D#128 => D#129 /[ex] 48
  # DEBUG D#125 => D#283
  # DEBUG D#126 => (long unsigned int) D#128
  # DEBUG __p => D#395
  # DEBUG this => D#125
  # DEBUG __n => D#126
  # DEBUG D#124 => D#126
  # DEBUG D#123 => D#125
  if (prephitmp_75 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#122 => &D#123->_M_impl
  # DEBUG D#120 => D#122
  # DEBUG D#121 => D#124
  # DEBUG __p => D#395
  # DEBUG __a => D#120
  # DEBUG __n => D#121
  # DEBUG D#119 => D#121
  # DEBUG D#118 => D#120
  # DEBUG D#116 => D#118
  # DEBUG D#117 => D#119
  # DEBUG __p => D#395
  # DEBUG this => D#116
  # DEBUG D.44754 => D#117
  operator delete (prephitmp_75);

  <bb 13>:
  # DEBUG D#127 => &D#283->_M_impl
  # DEBUG this => D#127
  # DEBUG this => D#127
  # DEBUG this => D#127
  MEM[(struct  &)this_2(D) + 280] ={v} {CLOBBER};
  # DEBUG D#392 => &this_2(D)->_in_req
  # DEBUG this => D#392
  # DEBUG D#282 => &D#392->D.36830
  # DEBUG this => D#282
  _22 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_finish;
  __first_23 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_23
  # DEBUG __last => _22
  # DEBUG __first => __first_23
  if (_22 == __first_23)
    goto <bb 22>;
  else
    goto <bb 14>;

  <bb 14>:

  <bb 15>:
  # __first_141 = PHI <__first_23(14), __first_27(17)>
  # DEBUG __first => __first_141
  # DEBUG __r => __first_141
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _25 = &__first_141->_M_t;
  # DEBUG this => _25
  __x_26 = MEM[(struct _Rb_tree_node_base * *)__first_141 + 16B];
  # DEBUG D#171 => _25
  # DEBUG this => D#171
  # DEBUG this => _25
  # DEBUG __x => __x_26
  # DEBUG __x => __x_26
  if (__x_26 == 0B)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 16>:
  # DEBUG D#280 => &MEM[(struct _Rb_tree *)_25]._M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct  &)__first_141] ={v} {CLOBBER};
  __first_27 = __first_141 + 48;
  # DEBUG __first => __first_27
  # DEBUG __first => __first_27
  if (_22 == __first_27)
    goto <bb 21>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 15>;

  <bb 18>:

  <bb 19>:
  # __x_151 = PHI <__x_26(18), __x_42(20)>
  # DEBUG __x => __x_151
  _41 = MEM[(struct _Rb_tree_node_base * *)__x_151 + 24B];
  # DEBUG D#172 => __x_151
  # DEBUG __x => D#172
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_25, _41);
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_151 + 16B];
  # DEBUG D#173 => __x_151
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => _25
  # DEBUG __p => __x_151
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_151
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_151
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_151
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_151
  # DEBUG this => D#237
  # DEBUG D.44783 => D#238
  operator delete (__x_151);
  # DEBUG __x => __x_42
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 19>;

  <bb 21>:
  pretmp_77 = MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start;

  <bb 22>:
  # prephitmp_61 = PHI <pretmp_77(21), __first_23(13)>
  # DEBUG D#283 => &D#392->D.36830
  # DEBUG this => D#283
  # DEBUG D#132 => D#283->_M_impl._M_end_of_storage
  # DEBUG D#131 => (long int) D#132
  # DEBUG D#394 => MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start
  # DEBUG D#130 => (long int) D#394
  # DEBUG D#129 => D#131 - D#130
  # DEBUG D#128 => D#129 /[ex] 48
  # DEBUG D#125 => D#283
  # DEBUG D#126 => (long unsigned int) D#128
  # DEBUG __p => D#394
  # DEBUG this => D#125
  # DEBUG __n => D#126
  # DEBUG D#124 => D#126
  # DEBUG D#123 => D#125
  if (prephitmp_61 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#122 => &D#123->_M_impl
  # DEBUG D#120 => D#122
  # DEBUG D#121 => D#124
  # DEBUG __p => D#394
  # DEBUG __a => D#120
  # DEBUG __n => D#121
  # DEBUG D#119 => D#121
  # DEBUG D#118 => D#120
  # DEBUG D#116 => D#118
  # DEBUG D#117 => D#119
  # DEBUG __p => D#394
  # DEBUG this => D#116
  # DEBUG D.44725 => D#117
  operator delete (prephitmp_61);

  <bb 24>:
  # DEBUG D#127 => &D#283->_M_impl
  # DEBUG this => D#127
  # DEBUG this => D#127
  # DEBUG this => D#127
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  # DEBUG D#285 => &this_2(D)->_out_occ
  # DEBUG this => D#285
  _7 = &MEM[(struct set *)this_2(D) + 208B]._M_t;
  # DEBUG this => _7
  __x_8 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 224B];
  # DEBUG D#10 => _7
  # DEBUG this => D#10
  # DEBUG this => _7
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#154 => &MEM[(struct _Rb_tree *)_7]._M_impl
  # DEBUG this => D#154
  # DEBUG this => D#154
  # DEBUG this => D#154
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  # DEBUG D#284 => &this_2(D)->_in_occ
  # DEBUG this => D#284
  _9 = &MEM[(struct set *)this_2(D) + 160B]._M_t;
  # DEBUG this => _9
  __x_10 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 176B];
  # DEBUG D#10 => _9
  # DEBUG this => D#10
  # DEBUG this => _9
  # DEBUG __x => __x_10
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 26>:

  <bb 27>:
  # __x_142 = PHI <__x_8(26), __x_20(28)>
  # DEBUG __x => __x_142
  _19 = MEM[(struct _Rb_tree_node_base * *)__x_142 + 24B];
  # DEBUG D#14 => __x_142
  # DEBUG __x => D#14
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_7, _19);
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_142 + 16B];
  # DEBUG D#15 => __x_142
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => _7
  # DEBUG __p => __x_142
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_142
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_142
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_142
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_142
  # DEBUG this => D#143
  # DEBUG D.44699 => D#144
  operator delete (__x_142);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 25>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 27>;

  <bb 29>:
  # DEBUG D#154 => &MEM[(struct _Rb_tree *)_9]._M_impl
  # DEBUG this => D#154
  # DEBUG this => D#154
  # DEBUG this => D#154
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#391 => &this_2(D)->D.36911
  # DEBUG this => D#391
  MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
  # DEBUG D#113 => &D#391->_outmatch
  # DEBUG this => D#113
  # DEBUG D#108 => &D#113->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#113->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#113->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#113->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _3 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _3
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _3
  # DEBUG __n => D#102
  if (_3 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 30>:

  <bb 31>:
  # __x_144 = PHI <__x_10(30), __x_16(32)>
  # DEBUG __x => __x_144
  _15 = MEM[(struct _Rb_tree_node_base * *)__x_144 + 24B];
  # DEBUG D#14 => __x_144
  # DEBUG __x => D#14
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_9, _15);
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_144 + 16B];
  # DEBUG D#15 => __x_144
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => _9
  # DEBUG __p => __x_144
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_144
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_144
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_144
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_144
  # DEBUG this => D#143
  # DEBUG D.44686 => D#144
  operator delete (__x_144);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 29>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 31>;

  <bb 33>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _3
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _3
  # DEBUG this => D#94
  # DEBUG D.44655 => D#95
  operator delete (_3);

  <bb 34>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#112 => &D#391->_inmatch
  # DEBUG this => D#112
  # DEBUG D#108 => &D#112->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#112->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#112->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#112->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _12 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _12
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _12
  # DEBUG __n => D#102
  if (_12 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _12
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _12
  # DEBUG this => D#94
  # DEBUG D.44670 => D#95
  operator delete (_12);

  <bb 36>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#390 => &MEM[(struct Allocator *)this_2(D)].D.34407
  # DEBUG this => D#390
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#93 => &D#390->_children
  # DEBUG this => D#93
  # DEBUG D#87 => &D#93->D.29436
  # DEBUG this => D#87
  # DEBUG D#90 => D#93->D.29436._M_impl._M_finish
  # DEBUG D#89 => D#93->D.29436._M_impl._M_start
  # DEBUG D#45 => D#89
  # DEBUG D#46 => D#90
  # DEBUG __first => D#45
  # DEBUG __last => D#46
  # DEBUG D.41649 => D#47
  # DEBUG D#44 => D#46
  # DEBUG D#43 => D#45
  # DEBUG D#41 => D#43
  # DEBUG D#42 => D#44
  # DEBUG __first => D#41
  # DEBUG __last => D#42
  # DEBUG D#40 => D#42
  # DEBUG D#39 => D#41
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#40
  # DEBUG D.41417 => D#37
  # DEBUG D.41416 => D#38
  # DEBUG D#88 => &D#93->D.29436
  # DEBUG this => D#88
  # DEBUG D#86 => D#88->_M_impl._M_end_of_storage
  # DEBUG D#85 => (long int) D#86
  _44 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#84 => (long int) _44
  # DEBUG D#83 => D#85 - D#84
  # DEBUG D#82 => D#83 /[ex] 8
  # DEBUG D#79 => D#88
  # DEBUG D#80 => (long unsigned int) D#82
  # DEBUG __p => _44
  # DEBUG this => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  if (_44 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # DEBUG D#76 => &D#77->_M_impl
  # DEBUG D#74 => D#76
  # DEBUG D#75 => D#78
  # DEBUG __p => _44
  # DEBUG __a => D#74
  # DEBUG __n => D#75
  # DEBUG D#73 => D#75
  # DEBUG D#72 => D#74
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73
  # DEBUG __p => _44
  # DEBUG this => D#70
  # DEBUG D.44796 => D#71
  operator delete (_44);

  <bb 38>:
  # DEBUG D#81 => &D#88->_M_impl
  # DEBUG this => D#81
  # DEBUG this => D#81
  # DEBUG this => D#81
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#92 => &D#390->_fullname
  # DEBUG this => D#92
  # DEBUG this => D#92
  # DEBUG this => D#92
  _45 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#2 => D#92
  # DEBUG this => D#2
  # DEBUG this => D#92
  _46 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_45 != _46)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#92].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#92
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#2 => D#92
  # DEBUG this => D#2
  # DEBUG this => D#92
  # DEBUG D#65 => &MEM[(struct basic_string *)D#92]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _45
  # DEBUG this => D#59
  # DEBUG D.44809 => D#60
  operator delete (_45);

  <bb 40>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#92]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#91 => &D#390->_name
  # DEBUG this => D#91
  # DEBUG this => D#91
  # DEBUG this => D#91
  _47 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#2 => D#91
  # DEBUG this => D#2
  # DEBUG this => D#91
  _48 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_47 != _48)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#91].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#91
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#2 => D#91
  # DEBUG this => D#2
  # DEBUG this => D#91
  # DEBUG D#65 => &MEM[(struct basic_string *)D#91]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _47
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _47
  # DEBUG this => D#59
  # DEBUG D.44824 => D#60
  operator delete (_47);

  <bb 42>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#91]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function virtual SelAlloc::~SelAlloc() (_ZN8SelAllocD0Ev, funcdef_no=2035, decl_uid=36944, cgraph_uid=738, symbol_order=740)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
virtual SelAlloc::~SelAlloc() (struct SelAlloc * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct map * __first;
  struct map * __first;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  int * _5;
  int * _6;
  int * _7;
  struct _Rep_type * _10;
  struct _Rep_type * _12;
  int * _15;
  int * _16;
  struct _Rb_tree_node_base * _19;
  struct _Rb_tree_node_base * _23;
  struct map * _26;
  struct _Rep_type * _29;
  struct map * _33;
  struct _Rep_type * _36;
  struct _Rb_tree_node_base * _41;
  struct _Rb_tree_node_base * _45;
  struct Module * * _48;
  char * const _49;
  const char * _50;
  char * const _51;
  const char * _52;
  struct map * pretmp_87;
  struct map * prephitmp_88;
  struct map * pretmp_101;
  struct map * prephitmp_102;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.36967.D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV8SelAlloc + 16B];
  # DEBUG D#294 => &this_2(D)->_outmask
  # DEBUG this => D#294
  # DEBUG D#108 => &D#294->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#294->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#294->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#294->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _5 = MEM[(struct _Vector_base *)this_2(D) + 360B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _5
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _5
  # DEBUG __n => D#102
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _5
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _5
  # DEBUG this => D#94
  # DEBUG D.44863 => D#95
  operator delete (_5);

  <bb 4>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 360] ={v} {CLOBBER};
  # DEBUG D#293 => &this_2(D)->_gptrs
  # DEBUG this => D#293
  # DEBUG D#108 => &D#293->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#293->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#293->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#293->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _6 = MEM[(struct _Vector_base *)this_2(D) + 336B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _6
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _6
  # DEBUG __n => D#102
  if (_6 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _6
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _6
  # DEBUG this => D#94
  # DEBUG D.44878 => D#95
  operator delete (_6);

  <bb 6>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 336] ={v} {CLOBBER};
  # DEBUG D#292 => &this_2(D)->_aptrs
  # DEBUG this => D#292
  # DEBUG D#108 => &D#292->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#292->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#292->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#292->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _7 = MEM[(struct _Vector_base *)this_2(D) + 312B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _7
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _7
  # DEBUG __n => D#102
  if (_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _7
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _7
  # DEBUG this => D#94
  # DEBUG D.44893 => D#95
  operator delete (_7);

  <bb 8>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 312] ={v} {CLOBBER};
  # DEBUG D#402 => &this_2(D)->D.36967
  # DEBUG this => D#402
  MEM[(struct SparseAllocator *)this_2(D)].D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV15SparseAllocator + 16B];
  # DEBUG D#401 => &MEM[(struct SparseAllocator *)this_2(D)]._out_req
  # DEBUG this => D#401
  # DEBUG D#282 => &D#401->D.36830
  # DEBUG this => D#282
  _33 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_finish;
  __first_34 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_34
  # DEBUG __last => _33
  # DEBUG __first => __first_34
  if (_33 == __first_34)
    goto <bb 17>;
  else
    goto <bb 9>;

  <bb 9>:

  <bb 10>:
  # __first_173 = PHI <__first_34(9), __first_38(12)>
  # DEBUG __first => __first_173
  # DEBUG __r => __first_173
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _36 = &__first_173->_M_t;
  # DEBUG this => _36
  __x_37 = MEM[(struct _Rb_tree_node_base * *)__first_173 + 16B];
  # DEBUG D#171 => _36
  # DEBUG this => D#171
  # DEBUG this => _36
  # DEBUG __x => __x_37
  # DEBUG __x => __x_37
  if (__x_37 == 0B)
    goto <bb 11>;
  else
    goto <bb 13>;

  <bb 11>:
  # DEBUG D#280 => &MEM[(struct _Rb_tree *)_36]._M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct  &)__first_173] ={v} {CLOBBER};
  __first_38 = __first_173 + 48;
  # DEBUG __first => __first_38
  # DEBUG __first => __first_38
  if (_33 == __first_38)
    goto <bb 16>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 10>;

  <bb 13>:

  <bb 14>:
  # __x_170 = PHI <__x_37(13), __x_42(15)>
  # DEBUG __x => __x_170
  _41 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 24B];
  # DEBUG D#172 => __x_170
  # DEBUG __x => D#172
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_36, _41);
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 16B];
  # DEBUG D#173 => __x_170
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => _36
  # DEBUG __p => __x_170
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_170
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_170
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_170
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_170
  # DEBUG this => D#237
  # DEBUG D.45035 => D#238
  operator delete (__x_170);
  # DEBUG __x => __x_42
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 11>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 14>;

  <bb 16>:
  pretmp_101 = MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start;

  <bb 17>:
  # prephitmp_102 = PHI <pretmp_101(16), __first_34(8)>
  # DEBUG D#283 => &D#401->D.36830
  # DEBUG this => D#283
  # DEBUG D#132 => D#283->_M_impl._M_end_of_storage
  # DEBUG D#131 => (long int) D#132
  # DEBUG D#404 => MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start
  # DEBUG D#130 => (long int) D#404
  # DEBUG D#129 => D#131 - D#130
  # DEBUG D#128 => D#129 /[ex] 48
  # DEBUG D#125 => D#283
  # DEBUG D#126 => (long unsigned int) D#128
  # DEBUG __p => D#404
  # DEBUG this => D#125
  # DEBUG __n => D#126
  # DEBUG D#124 => D#126
  # DEBUG D#123 => D#125
  if (prephitmp_102 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#122 => &D#123->_M_impl
  # DEBUG D#120 => D#122
  # DEBUG D#121 => D#124
  # DEBUG __p => D#404
  # DEBUG __a => D#120
  # DEBUG __n => D#121
  # DEBUG D#119 => D#121
  # DEBUG D#118 => D#120
  # DEBUG D#116 => D#118
  # DEBUG D#117 => D#119
  # DEBUG __p => D#404
  # DEBUG this => D#116
  # DEBUG D.45019 => D#117
  operator delete (prephitmp_102);

  <bb 19>:
  # DEBUG D#127 => &D#283->_M_impl
  # DEBUG this => D#127
  # DEBUG this => D#127
  # DEBUG this => D#127
  MEM[(struct  &)this_2(D) + 280] ={v} {CLOBBER};
  # DEBUG D#400 => &MEM[(struct SparseAllocator *)this_2(D)]._in_req
  # DEBUG this => D#400
  # DEBUG D#282 => &D#400->D.36830
  # DEBUG this => D#282
  _26 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_finish;
  __first_27 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_27
  # DEBUG __last => _26
  # DEBUG __first => __first_27
  if (_26 == __first_27)
    goto <bb 28>;
  else
    goto <bb 20>;

  <bb 20>:

  <bb 21>:
  # __first_172 = PHI <__first_27(20), __first_31(23)>
  # DEBUG __first => __first_172
  # DEBUG __r => __first_172
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _29 = &__first_172->_M_t;
  # DEBUG this => _29
  __x_30 = MEM[(struct _Rb_tree_node_base * *)__first_172 + 16B];
  # DEBUG D#171 => _29
  # DEBUG this => D#171
  # DEBUG this => _29
  # DEBUG __x => __x_30
  # DEBUG __x => __x_30
  if (__x_30 == 0B)
    goto <bb 22>;
  else
    goto <bb 24>;

  <bb 22>:
  # DEBUG D#280 => &MEM[(struct _Rb_tree *)_29]._M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct  &)__first_172] ={v} {CLOBBER};
  __first_31 = __first_172 + 48;
  # DEBUG __first => __first_31
  # DEBUG __first => __first_31
  if (_26 == __first_31)
    goto <bb 27>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 21>;

  <bb 24>:

  <bb 25>:
  # __x_171 = PHI <__x_30(24), __x_46(26)>
  # DEBUG __x => __x_171
  _45 = MEM[(struct _Rb_tree_node_base * *)__x_171 + 24B];
  # DEBUG D#172 => __x_171
  # DEBUG __x => D#172
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_29, _45);
  __x_46 = MEM[(struct _Rb_tree_node_base * *)__x_171 + 16B];
  # DEBUG D#173 => __x_171
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => _29
  # DEBUG __p => __x_171
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_171
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_171
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_171
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_171
  # DEBUG this => D#237
  # DEBUG D.45048 => D#238
  operator delete (__x_171);
  # DEBUG __x => __x_46
  # DEBUG __x => __x_46
  if (__x_46 == 0B)
    goto <bb 22>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 25>;

  <bb 27>:
  pretmp_87 = MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start;

  <bb 28>:
  # prephitmp_88 = PHI <pretmp_87(27), __first_27(19)>
  # DEBUG D#283 => &D#400->D.36830
  # DEBUG this => D#283
  # DEBUG D#132 => D#283->_M_impl._M_end_of_storage
  # DEBUG D#131 => (long int) D#132
  # DEBUG D#403 => MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start
  # DEBUG D#130 => (long int) D#403
  # DEBUG D#129 => D#131 - D#130
  # DEBUG D#128 => D#129 /[ex] 48
  # DEBUG D#125 => D#283
  # DEBUG D#126 => (long unsigned int) D#128
  # DEBUG __p => D#403
  # DEBUG this => D#125
  # DEBUG __n => D#126
  # DEBUG D#124 => D#126
  # DEBUG D#123 => D#125
  if (prephitmp_88 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#122 => &D#123->_M_impl
  # DEBUG D#120 => D#122
  # DEBUG D#121 => D#124
  # DEBUG __p => D#403
  # DEBUG __a => D#120
  # DEBUG __n => D#121
  # DEBUG D#119 => D#121
  # DEBUG D#118 => D#120
  # DEBUG D#116 => D#118
  # DEBUG D#117 => D#119
  # DEBUG __p => D#403
  # DEBUG this => D#116
  # DEBUG D.44990 => D#117
  operator delete (prephitmp_88);

  <bb 30>:
  # DEBUG D#127 => &D#283->_M_impl
  # DEBUG this => D#127
  # DEBUG this => D#127
  # DEBUG this => D#127
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  # DEBUG D#285 => &D#402->_out_occ
  # DEBUG this => D#285
  _10 = &MEM[(struct set *)this_2(D) + 208B]._M_t;
  # DEBUG this => _10
  __x_11 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 224B];
  # DEBUG D#10 => _10
  # DEBUG this => D#10
  # DEBUG this => _10
  # DEBUG __x => __x_11
  # DEBUG __x => __x_11
  if (__x_11 == 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#154 => &MEM[(struct _Rb_tree *)_10]._M_impl
  # DEBUG this => D#154
  # DEBUG this => D#154
  # DEBUG this => D#154
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  # DEBUG D#284 => &D#402->_in_occ
  # DEBUG this => D#284
  _12 = &MEM[(struct set *)this_2(D) + 160B]._M_t;
  # DEBUG this => _12
  __x_13 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 176B];
  # DEBUG D#10 => _12
  # DEBUG this => D#10
  # DEBUG this => _12
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 32>:

  <bb 33>:
  # __x_168 = PHI <__x_11(32), __x_24(34)>
  # DEBUG __x => __x_168
  _23 = MEM[(struct _Rb_tree_node_base * *)__x_168 + 24B];
  # DEBUG D#14 => __x_168
  # DEBUG __x => D#14
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_10, _23);
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_168 + 16B];
  # DEBUG D#15 => __x_168
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => _10
  # DEBUG __p => __x_168
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_168
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_168
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_168
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_168
  # DEBUG this => D#143
  # DEBUG D.44964 => D#144
  operator delete (__x_168);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 31>;
  else
    goto <bb 34>;

  <bb 34>:
  goto <bb 33>;

  <bb 35>:
  # DEBUG D#154 => &MEM[(struct _Rb_tree *)_12]._M_impl
  # DEBUG this => D#154
  # DEBUG this => D#154
  # DEBUG this => D#154
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#399 => &MEM[(struct SparseAllocator *)this_2(D)].D.36911
  # DEBUG this => D#399
  MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
  # DEBUG D#113 => &D#399->_outmatch
  # DEBUG this => D#113
  # DEBUG D#108 => &D#113->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#113->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#113->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#113->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _15 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _15
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _15
  # DEBUG __n => D#102
  if (_15 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 36>:

  <bb 37>:
  # __x_169 = PHI <__x_13(36), __x_20(38)>
  # DEBUG __x => __x_169
  _19 = MEM[(struct _Rb_tree_node_base * *)__x_169 + 24B];
  # DEBUG D#14 => __x_169
  # DEBUG __x => D#14
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_12, _19);
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_169 + 16B];
  # DEBUG D#15 => __x_169
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => _12
  # DEBUG __p => __x_169
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_169
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_169
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_169
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_169
  # DEBUG this => D#143
  # DEBUG D.44951 => D#144
  operator delete (__x_169);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 35>;
  else
    goto <bb 38>;

  <bb 38>:
  goto <bb 37>;

  <bb 39>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _15
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _15
  # DEBUG this => D#94
  # DEBUG D.44920 => D#95
  operator delete (_15);

  <bb 40>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#112 => &D#399->_inmatch
  # DEBUG this => D#112
  # DEBUG D#108 => &D#112->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#112->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#112->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#112->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _16 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _16
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _16
  # DEBUG __n => D#102
  if (_16 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _16
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _16
  # DEBUG this => D#94
  # DEBUG D.44935 => D#95
  operator delete (_16);

  <bb 42>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#398 => &MEM[(struct Allocator *)this_2(D)].D.34407
  # DEBUG this => D#398
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#93 => &D#398->_children
  # DEBUG this => D#93
  # DEBUG D#87 => &D#93->D.29436
  # DEBUG this => D#87
  # DEBUG D#90 => D#93->D.29436._M_impl._M_finish
  # DEBUG D#89 => D#93->D.29436._M_impl._M_start
  # DEBUG D#45 => D#89
  # DEBUG D#46 => D#90
  # DEBUG __first => D#45
  # DEBUG __last => D#46
  # DEBUG D.41649 => D#47
  # DEBUG D#44 => D#46
  # DEBUG D#43 => D#45
  # DEBUG D#41 => D#43
  # DEBUG D#42 => D#44
  # DEBUG __first => D#41
  # DEBUG __last => D#42
  # DEBUG D#40 => D#42
  # DEBUG D#39 => D#41
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#40
  # DEBUG D.41417 => D#37
  # DEBUG D.41416 => D#38
  # DEBUG D#88 => &D#93->D.29436
  # DEBUG this => D#88
  # DEBUG D#86 => D#88->_M_impl._M_end_of_storage
  # DEBUG D#85 => (long int) D#86
  _48 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#84 => (long int) _48
  # DEBUG D#83 => D#85 - D#84
  # DEBUG D#82 => D#83 /[ex] 8
  # DEBUG D#79 => D#88
  # DEBUG D#80 => (long unsigned int) D#82
  # DEBUG __p => _48
  # DEBUG this => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  if (_48 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # DEBUG D#76 => &D#77->_M_impl
  # DEBUG D#74 => D#76
  # DEBUG D#75 => D#78
  # DEBUG __p => _48
  # DEBUG __a => D#74
  # DEBUG __n => D#75
  # DEBUG D#73 => D#75
  # DEBUG D#72 => D#74
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73
  # DEBUG __p => _48
  # DEBUG this => D#70
  # DEBUG D.45061 => D#71
  operator delete (_48);

  <bb 44>:
  # DEBUG D#81 => &D#88->_M_impl
  # DEBUG this => D#81
  # DEBUG this => D#81
  # DEBUG this => D#81
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#92 => &D#398->_fullname
  # DEBUG this => D#92
  # DEBUG this => D#92
  # DEBUG this => D#92
  _49 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#2 => D#92
  # DEBUG this => D#2
  # DEBUG this => D#92
  _50 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_49 != _50)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#92].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#92
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#2 => D#92
  # DEBUG this => D#2
  # DEBUG this => D#92
  # DEBUG D#65 => &MEM[(struct basic_string *)D#92]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _49
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _49
  # DEBUG this => D#59
  # DEBUG D.45074 => D#60
  operator delete (_49);

  <bb 46>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#92]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#91 => &D#398->_name
  # DEBUG this => D#91
  # DEBUG this => D#91
  # DEBUG this => D#91
  _51 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#2 => D#91
  # DEBUG this => D#2
  # DEBUG this => D#91
  _52 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_51 != _52)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#91].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#91
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#2 => D#91
  # DEBUG this => D#2
  # DEBUG this => D#91
  # DEBUG D#65 => &MEM[(struct basic_string *)D#91]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _51
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _51
  # DEBUG this => D#59
  # DEBUG D.45089 => D#60
  operator delete (_51);

  <bb 48>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#91]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function SelAlloc::~SelAlloc() (_ZN8SelAllocD2Ev, funcdef_no=2033, decl_uid=36950, cgraph_uid=736, symbol_order=738)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
SelAlloc::~SelAlloc() (struct SelAlloc * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct map * __first;
  struct map * __first;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  int * _5;
  int * _6;
  int * _8;
  int * _10;
  struct _Rep_type * _33;
  struct _Rep_type * _35;
  int * _38;
  struct _Rb_tree_node_base * _41;
  struct _Rb_tree_node_base * _45;
  struct map * _48;
  struct _Rep_type * _51;
  struct map * _55;
  struct _Rep_type * _58;
  struct _Rb_tree_node_base * _63;
  struct _Rb_tree_node_base * _67;
  struct Module * * _70;
  char * const _71;
  const char * _72;
  char * const _73;
  const char * _74;
  struct map * pretmp_87;
  struct map * prephitmp_88;
  struct map * pretmp_101;
  struct map * prephitmp_102;

  <bb 2>:
  this_2(D)->D.36967.D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV8SelAlloc + 16B];
  # DEBUG D#294 => &this_2(D)->_outmask
  # DEBUG this => D#294
  # DEBUG D#108 => &D#294->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#294->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#294->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#294->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _5 = MEM[(struct _Vector_base *)this_2(D) + 360B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _5
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _5
  # DEBUG __n => D#102
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _5
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _5
  # DEBUG this => D#94
  # DEBUG D.43739 => D#95
  operator delete (_5);

  <bb 4>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 360] ={v} {CLOBBER};
  # DEBUG D#293 => &this_2(D)->_gptrs
  # DEBUG this => D#293
  # DEBUG D#108 => &D#293->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#293->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#293->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#293->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _6 = MEM[(struct _Vector_base *)this_2(D) + 336B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _6
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _6
  # DEBUG __n => D#102
  if (_6 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _6
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _6
  # DEBUG this => D#94
  # DEBUG D.43724 => D#95
  operator delete (_6);

  <bb 6>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 336] ={v} {CLOBBER};
  # DEBUG D#292 => &this_2(D)->_aptrs
  # DEBUG this => D#292
  # DEBUG D#108 => &D#292->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#292->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#292->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#292->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _10 = MEM[(struct _Vector_base *)this_2(D) + 312B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _10
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _10
  # DEBUG __n => D#102
  if (_10 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _10
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _10
  # DEBUG this => D#94
  # DEBUG D.43709 => D#95
  operator delete (_10);

  <bb 8>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 312] ={v} {CLOBBER};
  # DEBUG D#411 => &this_2(D)->D.36967
  # DEBUG this => D#411
  MEM[(struct SparseAllocator *)this_2(D)].D.36911.D.34407._vptr.Module = &MEM[(void *)&_ZTV15SparseAllocator + 16B];
  # DEBUG D#410 => &MEM[(struct SparseAllocator *)this_2(D)]._out_req
  # DEBUG this => D#410
  # DEBUG D#282 => &D#410->D.36830
  # DEBUG this => D#282
  _55 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_finish;
  __first_56 = MEM[(struct vector *)this_2(D) + 280B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_56
  # DEBUG __last => _55
  # DEBUG __first => __first_56
  if (_55 == __first_56)
    goto <bb 17>;
  else
    goto <bb 9>;

  <bb 9>:

  <bb 10>:
  # __first_170 = PHI <__first_56(9), __first_60(12)>
  # DEBUG __first => __first_170
  # DEBUG __r => __first_170
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _58 = &__first_170->_M_t;
  # DEBUG this => _58
  __x_59 = MEM[(struct _Rb_tree_node_base * *)__first_170 + 16B];
  # DEBUG D#171 => _58
  # DEBUG this => D#171
  # DEBUG this => _58
  # DEBUG __x => __x_59
  # DEBUG __x => __x_59
  if (__x_59 == 0B)
    goto <bb 11>;
  else
    goto <bb 13>;

  <bb 11>:
  # DEBUG D#280 => &MEM[(struct _Rb_tree *)_58]._M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct  &)__first_170] ={v} {CLOBBER};
  __first_60 = __first_170 + 48;
  # DEBUG __first => __first_60
  # DEBUG __first => __first_60
  if (_55 == __first_60)
    goto <bb 16>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 10>;

  <bb 13>:

  <bb 14>:
  # __x_162 = PHI <__x_59(13), __x_64(15)>
  # DEBUG __x => __x_162
  _63 = MEM[(struct _Rb_tree_node_base * *)__x_162 + 24B];
  # DEBUG D#172 => __x_162
  # DEBUG __x => D#172
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_58, _63);
  __x_64 = MEM[(struct _Rb_tree_node_base * *)__x_162 + 16B];
  # DEBUG D#173 => __x_162
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => _58
  # DEBUG __p => __x_162
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_162
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_162
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_162
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_162
  # DEBUG this => D#237
  # DEBUG D.45254 => D#238
  operator delete (__x_162);
  # DEBUG __x => __x_64
  # DEBUG __x => __x_64
  if (__x_64 == 0B)
    goto <bb 11>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 14>;

  <bb 16>:
  pretmp_101 = MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start;

  <bb 17>:
  # prephitmp_102 = PHI <pretmp_101(16), __first_56(8)>
  # DEBUG D#283 => &D#410->D.36830
  # DEBUG this => D#283
  # DEBUG D#132 => D#283->_M_impl._M_end_of_storage
  # DEBUG D#131 => (long int) D#132
  # DEBUG D#413 => MEM[(struct _Vector_base *)this_2(D) + 280B]._M_impl._M_start
  # DEBUG D#130 => (long int) D#413
  # DEBUG D#129 => D#131 - D#130
  # DEBUG D#128 => D#129 /[ex] 48
  # DEBUG D#125 => D#283
  # DEBUG D#126 => (long unsigned int) D#128
  # DEBUG __p => D#413
  # DEBUG this => D#125
  # DEBUG __n => D#126
  # DEBUG D#124 => D#126
  # DEBUG D#123 => D#125
  if (prephitmp_102 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#122 => &D#123->_M_impl
  # DEBUG D#120 => D#122
  # DEBUG D#121 => D#124
  # DEBUG __p => D#413
  # DEBUG __a => D#120
  # DEBUG __n => D#121
  # DEBUG D#119 => D#121
  # DEBUG D#118 => D#120
  # DEBUG D#116 => D#118
  # DEBUG D#117 => D#119
  # DEBUG __p => D#413
  # DEBUG this => D#116
  # DEBUG D.45238 => D#117
  operator delete (prephitmp_102);

  <bb 19>:
  # DEBUG D#127 => &D#283->_M_impl
  # DEBUG this => D#127
  # DEBUG this => D#127
  # DEBUG this => D#127
  MEM[(struct  &)this_2(D) + 280] ={v} {CLOBBER};
  # DEBUG D#409 => &MEM[(struct SparseAllocator *)this_2(D)]._in_req
  # DEBUG this => D#409
  # DEBUG D#282 => &D#409->D.36830
  # DEBUG this => D#282
  _48 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_finish;
  __first_49 = MEM[(struct vector *)this_2(D) + 256B].D.36830._M_impl._M_start;
  # DEBUG __first => __first_49
  # DEBUG __last => _48
  # DEBUG __first => __first_49
  if (_48 == __first_49)
    goto <bb 28>;
  else
    goto <bb 20>;

  <bb 20>:

  <bb 21>:
  # __first_169 = PHI <__first_49(20), __first_53(23)>
  # DEBUG __first => __first_169
  # DEBUG __r => __first_169
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _51 = &__first_169->_M_t;
  # DEBUG this => _51
  __x_52 = MEM[(struct _Rb_tree_node_base * *)__first_169 + 16B];
  # DEBUG D#171 => _51
  # DEBUG this => D#171
  # DEBUG this => _51
  # DEBUG __x => __x_52
  # DEBUG __x => __x_52
  if (__x_52 == 0B)
    goto <bb 22>;
  else
    goto <bb 24>;

  <bb 22>:
  # DEBUG D#280 => &MEM[(struct _Rb_tree *)_51]._M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct  &)__first_169] ={v} {CLOBBER};
  __first_53 = __first_169 + 48;
  # DEBUG __first => __first_53
  # DEBUG __first => __first_53
  if (_48 == __first_53)
    goto <bb 27>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 21>;

  <bb 24>:

  <bb 25>:
  # __x_158 = PHI <__x_52(24), __x_68(26)>
  # DEBUG __x => __x_158
  _67 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 24B];
  # DEBUG D#172 => __x_158
  # DEBUG __x => D#172
  std::_Rb_tree<int, std::pair<const int, Allocator::sRequest>, std::_Select1st<std::pair<const int, Allocator::sRequest> >, std::less<int>, std::allocator<std::pair<const int, Allocator::sRequest> > >::_M_erase (_51, _67);
  __x_68 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 16B];
  # DEBUG D#173 => __x_158
  # DEBUG __x => D#173
  # DEBUG __y => NULL
  # DEBUG D#279 => _51
  # DEBUG __p => __x_158
  # DEBUG this => D#279
  # DEBUG D#278 => D#279
  # DEBUG D#277 => D#279
  # DEBUG D#275 => D#277
  # DEBUG D#276 => __x_158
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG D#274 => D#275
  # DEBUG D#273 => D#276
  # DEBUG D#272 => D#276
  # DEBUG this => D#272
  # DEBUG D#271 => &D#273->_M_value_field
  # DEBUG __r => D#271
  # DEBUG D#270 => D#274
  # DEBUG this => D#270
  # DEBUG D#269 => D#270
  # DEBUG this => D#269
  # DEBUG this => NULL
  # DEBUG D.43464 => NULL
  # DEBUG this => NULL
  # DEBUG D#236 => D#271
  # DEBUG this => D#235
  # DEBUG __p => D#236
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#244 => D#278
  # DEBUG __p => __x_158
  # DEBUG this => D#244
  # DEBUG D#243 => D#244
  # DEBUG this => D#243
  # DEBUG D#242 => 1
  # DEBUG __p => __x_158
  # DEBUG __a => D#241
  # DEBUG __n => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG __p => __x_158
  # DEBUG this => D#237
  # DEBUG D.45267 => D#238
  operator delete (__x_158);
  # DEBUG __x => __x_68
  # DEBUG __x => __x_68
  if (__x_68 == 0B)
    goto <bb 22>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 25>;

  <bb 27>:
  pretmp_87 = MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start;

  <bb 28>:
  # prephitmp_88 = PHI <pretmp_87(27), __first_49(19)>
  # DEBUG D#283 => &D#409->D.36830
  # DEBUG this => D#283
  # DEBUG D#132 => D#283->_M_impl._M_end_of_storage
  # DEBUG D#131 => (long int) D#132
  # DEBUG D#412 => MEM[(struct _Vector_base *)this_2(D) + 256B]._M_impl._M_start
  # DEBUG D#130 => (long int) D#412
  # DEBUG D#129 => D#131 - D#130
  # DEBUG D#128 => D#129 /[ex] 48
  # DEBUG D#125 => D#283
  # DEBUG D#126 => (long unsigned int) D#128
  # DEBUG __p => D#412
  # DEBUG this => D#125
  # DEBUG __n => D#126
  # DEBUG D#124 => D#126
  # DEBUG D#123 => D#125
  if (prephitmp_88 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#122 => &D#123->_M_impl
  # DEBUG D#120 => D#122
  # DEBUG D#121 => D#124
  # DEBUG __p => D#412
  # DEBUG __a => D#120
  # DEBUG __n => D#121
  # DEBUG D#119 => D#121
  # DEBUG D#118 => D#120
  # DEBUG D#116 => D#118
  # DEBUG D#117 => D#119
  # DEBUG __p => D#412
  # DEBUG this => D#116
  # DEBUG D.45209 => D#117
  operator delete (prephitmp_88);

  <bb 30>:
  # DEBUG D#127 => &D#283->_M_impl
  # DEBUG this => D#127
  # DEBUG this => D#127
  # DEBUG this => D#127
  MEM[(struct  &)this_2(D) + 256] ={v} {CLOBBER};
  # DEBUG D#285 => &D#411->_out_occ
  # DEBUG this => D#285
  _33 = &MEM[(struct set *)this_2(D) + 208B]._M_t;
  # DEBUG this => _33
  __x_34 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 224B];
  # DEBUG D#10 => _33
  # DEBUG this => D#10
  # DEBUG this => _33
  # DEBUG __x => __x_34
  # DEBUG __x => __x_34
  if (__x_34 == 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#154 => &MEM[(struct _Rb_tree *)_33]._M_impl
  # DEBUG this => D#154
  # DEBUG this => D#154
  # DEBUG this => D#154
  MEM[(struct  &)this_2(D) + 208] ={v} {CLOBBER};
  # DEBUG D#284 => &D#411->_in_occ
  # DEBUG this => D#284
  _35 = &MEM[(struct set *)this_2(D) + 160B]._M_t;
  # DEBUG this => _35
  __x_36 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 176B];
  # DEBUG D#10 => _35
  # DEBUG this => D#10
  # DEBUG this => _35
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 32>:

  <bb 33>:
  # __x_167 = PHI <__x_34(32), __x_46(34)>
  # DEBUG __x => __x_167
  _45 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 24B];
  # DEBUG D#14 => __x_167
  # DEBUG __x => D#14
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_33, _45);
  __x_46 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 16B];
  # DEBUG D#15 => __x_167
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => _33
  # DEBUG __p => __x_167
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_167
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_167
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_167
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_167
  # DEBUG this => D#143
  # DEBUG D.45183 => D#144
  operator delete (__x_167);
  # DEBUG __x => __x_46
  # DEBUG __x => __x_46
  if (__x_46 == 0B)
    goto <bb 31>;
  else
    goto <bb 34>;

  <bb 34>:
  goto <bb 33>;

  <bb 35>:
  # DEBUG D#154 => &MEM[(struct _Rb_tree *)_35]._M_impl
  # DEBUG this => D#154
  # DEBUG this => D#154
  # DEBUG this => D#154
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#408 => &MEM[(struct SparseAllocator *)this_2(D)].D.36911
  # DEBUG this => D#408
  MEM[(struct Allocator *)this_2(D)].D.34407._vptr.Module = &MEM[(void *)&_ZTV9Allocator + 16B];
  # DEBUG D#113 => &D#408->_outmatch
  # DEBUG this => D#113
  # DEBUG D#108 => &D#113->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#113->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#113->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#113->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _8 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _8
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _8
  # DEBUG __n => D#102
  if (_8 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 36>:

  <bb 37>:
  # __x_168 = PHI <__x_36(36), __x_42(38)>
  # DEBUG __x => __x_168
  _41 = MEM[(struct _Rb_tree_node_base * *)__x_168 + 24B];
  # DEBUG D#14 => __x_168
  # DEBUG __x => D#14
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_35, _41);
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_168 + 16B];
  # DEBUG D#15 => __x_168
  # DEBUG __x => D#15
  # DEBUG __y => NULL
  # DEBUG D#153 => _35
  # DEBUG __p => __x_168
  # DEBUG this => D#153
  # DEBUG D#152 => D#153
  # DEBUG D#151 => D#153
  # DEBUG D#141 => D#151
  # DEBUG D#142 => __x_168
  # DEBUG this => D#141
  # DEBUG __p => D#142
  # DEBUG D#140 => D#141
  # DEBUG D#139 => D#142
  # DEBUG D#138 => D#142
  # DEBUG this => D#138
  # DEBUG D#137 => &D#139->_M_value_field
  # DEBUG __r => D#137
  # DEBUG D#136 => D#140
  # DEBUG this => D#136
  # DEBUG D#135 => D#136
  # DEBUG this => D#135
  # DEBUG this => NULL
  # DEBUG D.41894 => NULL
  # DEBUG this => NULL
  # DEBUG D#115 => D#137
  # DEBUG this => D#114
  # DEBUG __p => D#115
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#150 => D#152
  # DEBUG __p => __x_168
  # DEBUG this => D#150
  # DEBUG D#149 => D#150
  # DEBUG this => D#149
  # DEBUG D#148 => 1
  # DEBUG __p => __x_168
  # DEBUG __a => D#147
  # DEBUG __n => D#148
  # DEBUG D#146 => D#148
  # DEBUG D#145 => D#147
  # DEBUG D#143 => D#145
  # DEBUG D#144 => D#146
  # DEBUG __p => __x_168
  # DEBUG this => D#143
  # DEBUG D.45170 => D#144
  operator delete (__x_168);
  # DEBUG __x => __x_42
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 35>;
  else
    goto <bb 38>;

  <bb 38>:
  goto <bb 37>;

  <bb 39>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _8
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _8
  # DEBUG this => D#94
  # DEBUG D.45139 => D#95
  operator delete (_8);

  <bb 40>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#112 => &D#408->_inmatch
  # DEBUG this => D#112
  # DEBUG D#108 => &D#112->D.34311
  # DEBUG this => D#108
  # DEBUG D#111 => D#112->D.34311._M_impl._M_finish
  # DEBUG D#110 => D#112->D.34311._M_impl._M_start
  # DEBUG __first => D#110
  # DEBUG __last => D#111
  # DEBUG D.41763 => NULL
  # DEBUG D#52 => D#110
  # DEBUG D#53 => D#111
  # DEBUG __first => D#52
  # DEBUG __last => D#53
  # DEBUG D#51 => D#53
  # DEBUG D#50 => D#52
  # DEBUG D#48 => D#50
  # DEBUG D#49 => D#51
  # DEBUG D.41449 => D#48
  # DEBUG D.41448 => D#49
  # DEBUG D#109 => &D#112->D.34311
  # DEBUG this => D#109
  # DEBUG D#107 => D#109->_M_impl._M_end_of_storage
  # DEBUG D#106 => (long int) D#107
  _38 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
  # DEBUG D#105 => (long int) _38
  # DEBUG D#104 => D#106 - D#105
  # DEBUG D#103 => D#104 /[ex] 4
  # DEBUG D#102 => (long unsigned int) D#103
  # DEBUG this => D#109
  # DEBUG __p => _38
  # DEBUG __n => D#102
  if (_38 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#100 => &D#109->_M_impl
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#102
  # DEBUG __p => _38
  # DEBUG __a => D#98
  # DEBUG __n => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#98
  # DEBUG D#94 => D#96
  # DEBUG D#95 => D#97
  # DEBUG __p => _38
  # DEBUG this => D#94
  # DEBUG D.45154 => D#95
  operator delete (_38);

  <bb 42>:
  # DEBUG D#101 => &D#109->_M_impl
  # DEBUG this => D#101
  # DEBUG this => D#101
  # DEBUG this => D#101
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#407 => &MEM[(struct Allocator *)this_2(D)].D.34407
  # DEBUG this => D#407
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#93 => &D#407->_children
  # DEBUG this => D#93
  # DEBUG D#87 => &D#93->D.29436
  # DEBUG this => D#87
  # DEBUG D#90 => D#93->D.29436._M_impl._M_finish
  # DEBUG D#89 => D#93->D.29436._M_impl._M_start
  # DEBUG D#45 => D#89
  # DEBUG D#46 => D#90
  # DEBUG __first => D#45
  # DEBUG __last => D#46
  # DEBUG D.41649 => D#47
  # DEBUG D#44 => D#46
  # DEBUG D#43 => D#45
  # DEBUG D#41 => D#43
  # DEBUG D#42 => D#44
  # DEBUG __first => D#41
  # DEBUG __last => D#42
  # DEBUG D#40 => D#42
  # DEBUG D#39 => D#41
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#40
  # DEBUG D.41417 => D#37
  # DEBUG D.41416 => D#38
  # DEBUG D#88 => &D#93->D.29436
  # DEBUG this => D#88
  # DEBUG D#86 => D#88->_M_impl._M_end_of_storage
  # DEBUG D#85 => (long int) D#86
  _70 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#84 => (long int) _70
  # DEBUG D#83 => D#85 - D#84
  # DEBUG D#82 => D#83 /[ex] 8
  # DEBUG D#79 => D#88
  # DEBUG D#80 => (long unsigned int) D#82
  # DEBUG __p => _70
  # DEBUG this => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  if (_70 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # DEBUG D#76 => &D#77->_M_impl
  # DEBUG D#74 => D#76
  # DEBUG D#75 => D#78
  # DEBUG __p => _70
  # DEBUG __a => D#74
  # DEBUG __n => D#75
  # DEBUG D#73 => D#75
  # DEBUG D#72 => D#74
  # DEBUG D#70 => D#72
  # DEBUG D#71 => D#73
  # DEBUG __p => _70
  # DEBUG this => D#70
  # DEBUG D.45280 => D#71
  operator delete (_70);

  <bb 44>:
  # DEBUG D#81 => &D#88->_M_impl
  # DEBUG this => D#81
  # DEBUG this => D#81
  # DEBUG this => D#81
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#92 => &D#407->_fullname
  # DEBUG this => D#92
  # DEBUG this => D#92
  # DEBUG this => D#92
  _71 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#2 => D#92
  # DEBUG this => D#2
  # DEBUG this => D#92
  _72 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_71 != _72)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#92].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#92
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#2 => D#92
  # DEBUG this => D#2
  # DEBUG this => D#92
  # DEBUG D#65 => &MEM[(struct basic_string *)D#92]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _71
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _71
  # DEBUG this => D#59
  # DEBUG D.45293 => D#60
  operator delete (_71);

  <bb 46>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#92]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#91 => &D#407->_name
  # DEBUG this => D#91
  # DEBUG this => D#91
  # DEBUG this => D#91
  _73 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#2 => D#91
  # DEBUG this => D#2
  # DEBUG this => D#91
  _74 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_73 != _74)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#68 => MEM[(struct basic_string *)D#91].D.11539._M_allocated_capacity
  # DEBUG D#67 => D#68
  # DEBUG this => D#91
  # DEBUG __size => D#67
  # DEBUG D#66 => D#67
  # DEBUG D#2 => D#91
  # DEBUG this => D#2
  # DEBUG this => D#91
  # DEBUG D#65 => &MEM[(struct basic_string *)D#91]._M_dataplus
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66 + 1
  # DEBUG __p => _73
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => _73
  # DEBUG this => D#59
  # DEBUG D.45308 => D#60
  operator delete (_73);

  <bb 48>:
  # DEBUG D#69 => &MEM[(struct basic_string *)D#91]._M_dataplus
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG this => D#69
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}


