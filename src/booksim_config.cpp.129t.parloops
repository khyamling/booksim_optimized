
;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >*] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E, funcdef_no=1269, decl_uid=20135, cgraph_uid=373, symbol_order=373)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  char * const _7;
  char * const _13;
  const char * _14;
  char * const _15;
  const char * _16;
  const char * _21;
  char * const _22;
  const char * _23;
  char * const _29;
  const char * _30;
  char * const _31;
  const char * _32;
  char * const _38;
  const char * _39;
  char * const _40;
  const char * _41;
  char * const _47;
  const char * _48;
  char * const _49;
  const char * _50;
  char * const _56;
  const char * _57;
  char * const _58;
  const char * _59;
  char * const _65;
  const char * _66;
  char * const _67;
  const char * _68;
  char * const _74;
  const char * _75;
  char * const _76;
  const char * _77;
  struct _Rb_tree_node_base * _79;
  char * const _83;
  const char * _84;
  char * const _85;
  const char * _86;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_225 = PHI <__x_3(D)(4), __x_10(74)>
  # DEBUG __x => __x_225
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_225 + 24B];
  # DEBUG D#16 => __x_225
  # DEBUG __x => D#16
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_10 = MEM[(struct _Rb_tree_node_base * *)__x_225 + 16B];
  # DEBUG D#17 => __x_225
  # DEBUG __x => D#17
  # DEBUG __y => NULL
  # DEBUG D#99 => this_6(D)
  # DEBUG __p => __x_225
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#97
  # DEBUG __p => __x_225
  # DEBUG this => D#96
  # DEBUG D#95 => D#96
  # DEBUG this => __x_225
  # DEBUG D#240 => &__x_225->_M_value_field
  # DEBUG __r => D#240
  # DEBUG D#94 => D#95
  # DEBUG this => D#94
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  # DEBUG this => NULL
  # DEBUG D.28929 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#240
  # DEBUG this => D#53
  # DEBUG this => D#240
  # DEBUG D#52 => &D#240->second
  # DEBUG this => D#52
  # DEBUG this => D#52
  # DEBUG this => D#52
  _13 = MEM[(char * *)__x_225 + 64B];
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  _14 = &MEM[(const struct basic_string *)__x_225 + 64B].D.11539._M_local_buf;
  if (_13 != _14)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 7>:

  <bb 8>:
  # __x_232 = PHI <__x_9(7), __x_18(69)>
  # DEBUG __x => __x_232
  __x_17 = MEM[(struct _Rb_tree_node_base * *)__x_232 + 24B];
  # DEBUG D#16 => __x_232
  # DEBUG __x => D#16
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_17
  # DEBUG __x => __x_17
  if (__x_17 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_18 = MEM[(struct _Rb_tree_node_base * *)__x_232 + 16B];
  # DEBUG D#17 => __x_232
  # DEBUG __x => D#17
  # DEBUG __y => NULL
  # DEBUG D#99 => this_6(D)
  # DEBUG __p => __x_232
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#97
  # DEBUG __p => __x_232
  # DEBUG this => D#96
  # DEBUG D#95 => D#96
  # DEBUG this => __x_232
  # DEBUG D#239 => &__x_232->_M_value_field
  # DEBUG __r => D#239
  # DEBUG D#94 => D#95
  # DEBUG this => D#94
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  # DEBUG this => NULL
  # DEBUG D.28929 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#239
  # DEBUG this => D#53
  # DEBUG this => D#239
  # DEBUG D#52 => &D#239->second
  # DEBUG this => D#52
  # DEBUG this => D#52
  # DEBUG this => D#52
  _7 = MEM[(char * *)__x_232 + 64B];
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  _21 = &MEM[(const struct basic_string *)__x_232 + 64B].D.11539._M_local_buf;
  if (_7 != _21)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 10>:

  <bb 11>:
  # __x_234 = PHI <__x_17(10), __x_26(64)>
  # DEBUG __x => __x_234
  __x_25 = MEM[(struct _Rb_tree_node_base * *)__x_234 + 24B];
  # DEBUG D#16 => __x_234
  # DEBUG __x => D#16
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_25
  # DEBUG __x => __x_25
  if (__x_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_26 = MEM[(struct _Rb_tree_node_base * *)__x_234 + 16B];
  # DEBUG D#17 => __x_234
  # DEBUG __x => D#17
  # DEBUG __y => NULL
  # DEBUG D#99 => this_6(D)
  # DEBUG __p => __x_234
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#97
  # DEBUG __p => __x_234
  # DEBUG this => D#96
  # DEBUG D#95 => D#96
  # DEBUG this => __x_234
  # DEBUG D#238 => &__x_234->_M_value_field
  # DEBUG __r => D#238
  # DEBUG D#94 => D#95
  # DEBUG this => D#94
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  # DEBUG this => NULL
  # DEBUG D.28929 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#238
  # DEBUG this => D#53
  # DEBUG this => D#238
  # DEBUG D#52 => &D#238->second
  # DEBUG this => D#52
  # DEBUG this => D#52
  # DEBUG this => D#52
  _29 = MEM[(char * *)__x_234 + 64B];
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  _30 = &MEM[(const struct basic_string *)__x_234 + 64B].D.11539._M_local_buf;
  if (_29 != _30)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 13>:

  <bb 14>:
  # __x_236 = PHI <__x_25(13), __x_35(59)>
  # DEBUG __x => __x_236
  __x_34 = MEM[(struct _Rb_tree_node_base * *)__x_236 + 24B];
  # DEBUG D#16 => __x_236
  # DEBUG __x => D#16
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_34
  # DEBUG __x => __x_34
  if (__x_34 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_236 + 16B];
  # DEBUG D#17 => __x_236
  # DEBUG __x => D#17
  # DEBUG __y => NULL
  # DEBUG D#99 => this_6(D)
  # DEBUG __p => __x_236
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#97
  # DEBUG __p => __x_236
  # DEBUG this => D#96
  # DEBUG D#95 => D#96
  # DEBUG this => __x_236
  # DEBUG D#237 => &__x_236->_M_value_field
  # DEBUG __r => D#237
  # DEBUG D#94 => D#95
  # DEBUG this => D#94
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  # DEBUG this => NULL
  # DEBUG D.28929 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#237
  # DEBUG this => D#53
  # DEBUG this => D#237
  # DEBUG D#52 => &D#237->second
  # DEBUG this => D#52
  # DEBUG this => D#52
  # DEBUG this => D#52
  _38 = MEM[(char * *)__x_236 + 64B];
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  _39 = &MEM[(const struct basic_string *)__x_236 + 64B].D.11539._M_local_buf;
  if (_38 != _39)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 16>:

  <bb 17>:
  # __x_227 = PHI <__x_34(16), __x_44(54)>
  # DEBUG __x => __x_227
  __x_43 = MEM[(struct _Rb_tree_node_base * *)__x_227 + 24B];
  # DEBUG D#16 => __x_227
  # DEBUG __x => D#16
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_43
  # DEBUG __x => __x_43
  if (__x_43 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_44 = MEM[(struct _Rb_tree_node_base * *)__x_227 + 16B];
  # DEBUG D#17 => __x_227
  # DEBUG __x => D#17
  # DEBUG __y => NULL
  # DEBUG D#99 => this_6(D)
  # DEBUG __p => __x_227
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#97
  # DEBUG __p => __x_227
  # DEBUG this => D#96
  # DEBUG D#95 => D#96
  # DEBUG this => __x_227
  # DEBUG D#236 => &__x_227->_M_value_field
  # DEBUG __r => D#236
  # DEBUG D#94 => D#95
  # DEBUG this => D#94
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  # DEBUG this => NULL
  # DEBUG D.28929 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#236
  # DEBUG this => D#53
  # DEBUG this => D#236
  # DEBUG D#52 => &D#236->second
  # DEBUG this => D#52
  # DEBUG this => D#52
  # DEBUG this => D#52
  _47 = MEM[(char * *)__x_227 + 64B];
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  _48 = &MEM[(const struct basic_string *)__x_227 + 64B].D.11539._M_local_buf;
  if (_47 != _48)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 19>:

  <bb 20>:
  # __x_218 = PHI <__x_43(19), __x_53(49)>
  # DEBUG __x => __x_218
  __x_52 = MEM[(struct _Rb_tree_node_base * *)__x_218 + 24B];
  # DEBUG D#16 => __x_218
  # DEBUG __x => D#16
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_52
  # DEBUG __x => __x_52
  if (__x_52 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_53 = MEM[(struct _Rb_tree_node_base * *)__x_218 + 16B];
  # DEBUG D#17 => __x_218
  # DEBUG __x => D#17
  # DEBUG __y => NULL
  # DEBUG D#99 => this_6(D)
  # DEBUG __p => __x_218
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#97
  # DEBUG __p => __x_218
  # DEBUG this => D#96
  # DEBUG D#95 => D#96
  # DEBUG this => __x_218
  # DEBUG D#235 => &__x_218->_M_value_field
  # DEBUG __r => D#235
  # DEBUG D#94 => D#95
  # DEBUG this => D#94
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  # DEBUG this => NULL
  # DEBUG D.28929 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#235
  # DEBUG this => D#53
  # DEBUG this => D#235
  # DEBUG D#52 => &D#235->second
  # DEBUG this => D#52
  # DEBUG this => D#52
  # DEBUG this => D#52
  _56 = MEM[(char * *)__x_218 + 64B];
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  _57 = &MEM[(const struct basic_string *)__x_218 + 64B].D.11539._M_local_buf;
  if (_56 != _57)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 22>:

  <bb 23>:
  # __x_239 = PHI <__x_52(22), __x_62(44)>
  # DEBUG __x => __x_239
  __x_61 = MEM[(struct _Rb_tree_node_base * *)__x_239 + 24B];
  # DEBUG D#16 => __x_239
  # DEBUG __x => D#16
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_61
  # DEBUG __x => __x_61
  if (__x_61 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_62 = MEM[(struct _Rb_tree_node_base * *)__x_239 + 16B];
  # DEBUG D#17 => __x_239
  # DEBUG __x => D#17
  # DEBUG __y => NULL
  # DEBUG D#99 => this_6(D)
  # DEBUG __p => __x_239
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#97
  # DEBUG __p => __x_239
  # DEBUG this => D#96
  # DEBUG D#95 => D#96
  # DEBUG this => __x_239
  # DEBUG D#234 => &__x_239->_M_value_field
  # DEBUG __r => D#234
  # DEBUG D#94 => D#95
  # DEBUG this => D#94
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  # DEBUG this => NULL
  # DEBUG D.28929 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#234
  # DEBUG this => D#53
  # DEBUG this => D#234
  # DEBUG D#52 => &D#234->second
  # DEBUG this => D#52
  # DEBUG this => D#52
  # DEBUG this => D#52
  _65 = MEM[(char * *)__x_239 + 64B];
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  _66 = &MEM[(const struct basic_string *)__x_239 + 64B].D.11539._M_local_buf;
  if (_65 != _66)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 25>:

  <bb 26>:
  # __x_242 = PHI <__x_61(25), __x_71(39)>
  # DEBUG __x => __x_242
  __x_70 = MEM[(struct _Rb_tree_node_base * *)__x_242 + 24B];
  # DEBUG D#16 => __x_242
  # DEBUG __x => D#16
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_70
  # DEBUG __x => __x_70
  if (__x_70 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_71 = MEM[(struct _Rb_tree_node_base * *)__x_242 + 16B];
  # DEBUG D#17 => __x_242
  # DEBUG __x => D#17
  # DEBUG __y => NULL
  # DEBUG D#99 => this_6(D)
  # DEBUG __p => __x_242
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#97
  # DEBUG __p => __x_242
  # DEBUG this => D#96
  # DEBUG D#95 => D#96
  # DEBUG this => __x_242
  # DEBUG D#233 => &__x_242->_M_value_field
  # DEBUG __r => D#233
  # DEBUG D#94 => D#95
  # DEBUG this => D#94
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  # DEBUG this => NULL
  # DEBUG D.28929 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#233
  # DEBUG this => D#53
  # DEBUG this => D#233
  # DEBUG D#52 => &D#233->second
  # DEBUG this => D#52
  # DEBUG this => D#52
  # DEBUG this => D#52
  _74 = MEM[(char * *)__x_242 + 64B];
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  _75 = &MEM[(const struct basic_string *)__x_242 + 64B].D.11539._M_local_buf;
  if (_74 != _75)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 28>:

  <bb 29>:
  # __x_245 = PHI <__x_70(28), __x_80(34)>
  # DEBUG __x => __x_245
  _79 = MEM[(struct _Rb_tree_node_base * *)__x_245 + 24B];
  # DEBUG D#16 => __x_245
  # DEBUG __x => D#16
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_M_erase (this_6(D), _79);
  __x_80 = MEM[(struct _Rb_tree_node_base * *)__x_245 + 16B];
  # DEBUG D#17 => __x_245
  # DEBUG __x => D#17
  # DEBUG __y => NULL
  # DEBUG D#99 => this_6(D)
  # DEBUG __p => __x_245
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#97
  # DEBUG __p => __x_245
  # DEBUG this => D#96
  # DEBUG D#95 => D#96
  # DEBUG this => __x_245
  # DEBUG D#232 => &__x_245->_M_value_field
  # DEBUG __r => D#232
  # DEBUG D#94 => D#95
  # DEBUG this => D#94
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  # DEBUG this => NULL
  # DEBUG D.28929 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#232
  # DEBUG this => D#53
  # DEBUG this => D#232
  # DEBUG D#52 => &D#232->second
  # DEBUG this => D#52
  # DEBUG this => D#52
  # DEBUG this => D#52
  _83 = MEM[(char * *)__x_245 + 64B];
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  _84 = &MEM[(const struct basic_string *)__x_245 + 64B].D.11539._M_local_buf;
  if (_83 != _84)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#47 => D#52->D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#52
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  # DEBUG D#44 => &D#52->_M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _83
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _83
  # DEBUG this => D#38
  # DEBUG D.38995 => D#39
  operator delete (_83);

  <bb 31>:
  # DEBUG D#48 => &D#52->_M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_245 + 64] ={v} {CLOBBER};
  # DEBUG D#51 => &D#232->first
  # DEBUG this => D#51
  # DEBUG this => D#51
  # DEBUG this => D#51
  _85 = MEM[(char * *)__x_245 + 32B];
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  _86 = &MEM[(const struct basic_string *)__x_245 + 32B].D.11539._M_local_buf;
  if (_85 != _86)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#51].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#51
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  # DEBUG D#44 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _85
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _85
  # DEBUG this => D#38
  # DEBUG D.39010 => D#39
  operator delete (_85);

  <bb 33>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_245 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#66 => D#98
  # DEBUG __p => __x_245
  # DEBUG this => D#66
  # DEBUG D#65 => D#66
  # DEBUG this => D#65
  # DEBUG D#64 => 1
  # DEBUG __p => __x_245
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => __x_245
  # DEBUG this => D#59
  # DEBUG D.38984 => D#60
  operator delete (__x_245);
  # DEBUG __x => __x_80
  # DEBUG __x => __x_80
  if (__x_80 == 0B)
    goto <bb 27>;
  else
    goto <bb 34>;

  <bb 34>:
  goto <bb 29>;

  <bb 35>:
  # DEBUG D#47 => D#52->D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#52
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  # DEBUG D#44 => &D#52->_M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _74
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _74
  # DEBUG this => D#38
  # DEBUG D.38946 => D#39
  operator delete (_74);

  <bb 36>:
  # DEBUG D#48 => &D#52->_M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_242 + 64] ={v} {CLOBBER};
  # DEBUG D#51 => &D#233->first
  # DEBUG this => D#51
  # DEBUG this => D#51
  # DEBUG this => D#51
  _76 = MEM[(char * *)__x_242 + 32B];
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  _77 = &MEM[(const struct basic_string *)__x_242 + 32B].D.11539._M_local_buf;
  if (_76 != _77)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#51].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#51
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  # DEBUG D#44 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _76
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _76
  # DEBUG this => D#38
  # DEBUG D.38961 => D#39
  operator delete (_76);

  <bb 38>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_242 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#66 => D#98
  # DEBUG __p => __x_242
  # DEBUG this => D#66
  # DEBUG D#65 => D#66
  # DEBUG this => D#65
  # DEBUG D#64 => 1
  # DEBUG __p => __x_242
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => __x_242
  # DEBUG this => D#59
  # DEBUG D.38935 => D#60
  operator delete (__x_242);
  # DEBUG __x => __x_71
  # DEBUG __x => __x_71
  if (__x_71 == 0B)
    goto <bb 24>;
  else
    goto <bb 39>;

  <bb 39>:
  goto <bb 26>;

  <bb 40>:
  # DEBUG D#47 => D#52->D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#52
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  # DEBUG D#44 => &D#52->_M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _65
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _65
  # DEBUG this => D#38
  # DEBUG D.38897 => D#39
  operator delete (_65);

  <bb 41>:
  # DEBUG D#48 => &D#52->_M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_239 + 64] ={v} {CLOBBER};
  # DEBUG D#51 => &D#234->first
  # DEBUG this => D#51
  # DEBUG this => D#51
  # DEBUG this => D#51
  _67 = MEM[(char * *)__x_239 + 32B];
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  _68 = &MEM[(const struct basic_string *)__x_239 + 32B].D.11539._M_local_buf;
  if (_67 != _68)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#51].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#51
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  # DEBUG D#44 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _67
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _67
  # DEBUG this => D#38
  # DEBUG D.38912 => D#39
  operator delete (_67);

  <bb 43>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_239 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#66 => D#98
  # DEBUG __p => __x_239
  # DEBUG this => D#66
  # DEBUG D#65 => D#66
  # DEBUG this => D#65
  # DEBUG D#64 => 1
  # DEBUG __p => __x_239
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => __x_239
  # DEBUG this => D#59
  # DEBUG D.38886 => D#60
  operator delete (__x_239);
  # DEBUG __x => __x_62
  # DEBUG __x => __x_62
  if (__x_62 == 0B)
    goto <bb 21>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 23>;

  <bb 45>:
  # DEBUG D#47 => D#52->D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#52
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  # DEBUG D#44 => &D#52->_M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _56
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _56
  # DEBUG this => D#38
  # DEBUG D.38848 => D#39
  operator delete (_56);

  <bb 46>:
  # DEBUG D#48 => &D#52->_M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_218 + 64] ={v} {CLOBBER};
  # DEBUG D#51 => &D#235->first
  # DEBUG this => D#51
  # DEBUG this => D#51
  # DEBUG this => D#51
  _58 = MEM[(char * *)__x_218 + 32B];
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  _59 = &MEM[(const struct basic_string *)__x_218 + 32B].D.11539._M_local_buf;
  if (_58 != _59)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#51].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#51
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  # DEBUG D#44 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _58
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _58
  # DEBUG this => D#38
  # DEBUG D.38863 => D#39
  operator delete (_58);

  <bb 48>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_218 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#66 => D#98
  # DEBUG __p => __x_218
  # DEBUG this => D#66
  # DEBUG D#65 => D#66
  # DEBUG this => D#65
  # DEBUG D#64 => 1
  # DEBUG __p => __x_218
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => __x_218
  # DEBUG this => D#59
  # DEBUG D.38837 => D#60
  operator delete (__x_218);
  # DEBUG __x => __x_53
  # DEBUG __x => __x_53
  if (__x_53 == 0B)
    goto <bb 18>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 20>;

  <bb 50>:
  # DEBUG D#47 => D#52->D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#52
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  # DEBUG D#44 => &D#52->_M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _47
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _47
  # DEBUG this => D#38
  # DEBUG D.38799 => D#39
  operator delete (_47);

  <bb 51>:
  # DEBUG D#48 => &D#52->_M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_227 + 64] ={v} {CLOBBER};
  # DEBUG D#51 => &D#236->first
  # DEBUG this => D#51
  # DEBUG this => D#51
  # DEBUG this => D#51
  _49 = MEM[(char * *)__x_227 + 32B];
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  _50 = &MEM[(const struct basic_string *)__x_227 + 32B].D.11539._M_local_buf;
  if (_49 != _50)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#51].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#51
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  # DEBUG D#44 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _49
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _49
  # DEBUG this => D#38
  # DEBUG D.38814 => D#39
  operator delete (_49);

  <bb 53>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_227 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#66 => D#98
  # DEBUG __p => __x_227
  # DEBUG this => D#66
  # DEBUG D#65 => D#66
  # DEBUG this => D#65
  # DEBUG D#64 => 1
  # DEBUG __p => __x_227
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => __x_227
  # DEBUG this => D#59
  # DEBUG D.38788 => D#60
  operator delete (__x_227);
  # DEBUG __x => __x_44
  # DEBUG __x => __x_44
  if (__x_44 == 0B)
    goto <bb 15>;
  else
    goto <bb 54>;

  <bb 54>:
  goto <bb 17>;

  <bb 55>:
  # DEBUG D#47 => D#52->D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#52
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  # DEBUG D#44 => &D#52->_M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _38
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _38
  # DEBUG this => D#38
  # DEBUG D.38750 => D#39
  operator delete (_38);

  <bb 56>:
  # DEBUG D#48 => &D#52->_M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_236 + 64] ={v} {CLOBBER};
  # DEBUG D#51 => &D#237->first
  # DEBUG this => D#51
  # DEBUG this => D#51
  # DEBUG this => D#51
  _40 = MEM[(char * *)__x_236 + 32B];
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  _41 = &MEM[(const struct basic_string *)__x_236 + 32B].D.11539._M_local_buf;
  if (_40 != _41)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#51].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#51
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  # DEBUG D#44 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _40
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _40
  # DEBUG this => D#38
  # DEBUG D.38765 => D#39
  operator delete (_40);

  <bb 58>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_236 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#66 => D#98
  # DEBUG __p => __x_236
  # DEBUG this => D#66
  # DEBUG D#65 => D#66
  # DEBUG this => D#65
  # DEBUG D#64 => 1
  # DEBUG __p => __x_236
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => __x_236
  # DEBUG this => D#59
  # DEBUG D.38739 => D#60
  operator delete (__x_236);
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 12>;
  else
    goto <bb 59>;

  <bb 59>:
  goto <bb 14>;

  <bb 60>:
  # DEBUG D#47 => D#52->D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#52
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  # DEBUG D#44 => &D#52->_M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _29
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _29
  # DEBUG this => D#38
  # DEBUG D.38701 => D#39
  operator delete (_29);

  <bb 61>:
  # DEBUG D#48 => &D#52->_M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_234 + 64] ={v} {CLOBBER};
  # DEBUG D#51 => &D#238->first
  # DEBUG this => D#51
  # DEBUG this => D#51
  # DEBUG this => D#51
  _31 = MEM[(char * *)__x_234 + 32B];
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  _32 = &MEM[(const struct basic_string *)__x_234 + 32B].D.11539._M_local_buf;
  if (_31 != _32)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#51].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#51
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  # DEBUG D#44 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _31
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _31
  # DEBUG this => D#38
  # DEBUG D.38716 => D#39
  operator delete (_31);

  <bb 63>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_234 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#66 => D#98
  # DEBUG __p => __x_234
  # DEBUG this => D#66
  # DEBUG D#65 => D#66
  # DEBUG this => D#65
  # DEBUG D#64 => 1
  # DEBUG __p => __x_234
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => __x_234
  # DEBUG this => D#59
  # DEBUG D.38690 => D#60
  operator delete (__x_234);
  # DEBUG __x => __x_26
  # DEBUG __x => __x_26
  if (__x_26 == 0B)
    goto <bb 9>;
  else
    goto <bb 64>;

  <bb 64>:
  goto <bb 11>;

  <bb 65>:
  # DEBUG D#47 => D#52->D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#52
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  # DEBUG D#44 => &D#52->_M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _7
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _7
  # DEBUG this => D#38
  # DEBUG D.38652 => D#39
  operator delete (_7);

  <bb 66>:
  # DEBUG D#48 => &D#52->_M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_232 + 64] ={v} {CLOBBER};
  # DEBUG D#51 => &D#239->first
  # DEBUG this => D#51
  # DEBUG this => D#51
  # DEBUG this => D#51
  _22 = MEM[(char * *)__x_232 + 32B];
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  _23 = &MEM[(const struct basic_string *)__x_232 + 32B].D.11539._M_local_buf;
  if (_22 != _23)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#51].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#51
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  # DEBUG D#44 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _22
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _22
  # DEBUG this => D#38
  # DEBUG D.38667 => D#39
  operator delete (_22);

  <bb 68>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_232 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#66 => D#98
  # DEBUG __p => __x_232
  # DEBUG this => D#66
  # DEBUG D#65 => D#66
  # DEBUG this => D#65
  # DEBUG D#64 => 1
  # DEBUG __p => __x_232
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => __x_232
  # DEBUG this => D#59
  # DEBUG D.38641 => D#60
  operator delete (__x_232);
  # DEBUG __x => __x_18
  # DEBUG __x => __x_18
  if (__x_18 == 0B)
    goto <bb 6>;
  else
    goto <bb 69>;

  <bb 69>:
  goto <bb 8>;

  <bb 70>:
  # DEBUG D#47 => D#52->D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#52
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  # DEBUG D#44 => &D#52->_M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _13
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _13
  # DEBUG this => D#38
  # DEBUG D.38603 => D#39
  operator delete (_13);

  <bb 71>:
  # DEBUG D#48 => &D#52->_M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_225 + 64] ={v} {CLOBBER};
  # DEBUG D#51 => &D#240->first
  # DEBUG this => D#51
  # DEBUG this => D#51
  # DEBUG this => D#51
  _15 = MEM[(char * *)__x_225 + 32B];
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  _16 = &MEM[(const struct basic_string *)__x_225 + 32B].D.11539._M_local_buf;
  if (_15 != _16)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#51].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#51
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  # DEBUG D#44 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _15
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _15
  # DEBUG this => D#38
  # DEBUG D.38618 => D#39
  operator delete (_15);

  <bb 73>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_225 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#66 => D#98
  # DEBUG __p => __x_225
  # DEBUG this => D#66
  # DEBUG D#65 => D#66
  # DEBUG this => D#65
  # DEBUG D#64 => 1
  # DEBUG __p => __x_225
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => __x_225
  # DEBUG this => D#59
  # DEBUG D.29006 => D#60
  operator delete (__x_225);
  # DEBUG __x => __x_10
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 3>;
  else
    goto <bb 74>;

  <bb 74>:
  goto <bb 5>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, int> >*] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E, funcdef_no=1274, decl_uid=21202, cgraph_uid=378, symbol_order=378)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, int> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  char * const _7;
  char * const _11;
  const char * _12;
  const char * _16;
  char * const _21;
  const char * _22;
  char * const _27;
  const char * _28;
  char * const _33;
  const char * _34;
  char * const _39;
  const char * _40;
  char * const _45;
  const char * _46;
  char * const _51;
  const char * _52;
  struct _Rb_tree_node_base * _54;
  char * const _57;
  const char * _58;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_149 = PHI <__x_3(D)(4), __x_10(56)>
  # DEBUG __x => __x_149
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 24B];
  # DEBUG D#18 => __x_149
  # DEBUG __x => D#18
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_10 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 16B];
  # DEBUG D#19 => __x_149
  # DEBUG __x => D#19
  # DEBUG __y => NULL
  # DEBUG D#108 => this_6(D)
  # DEBUG __p => __x_149
  # DEBUG this => D#108
  # DEBUG D#107 => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#106
  # DEBUG __p => __x_149
  # DEBUG this => D#105
  # DEBUG D#104 => D#105
  # DEBUG this => __x_149
  # DEBUG D#103 => &__x_149->_M_value_field
  # DEBUG __r => D#103
  # DEBUG D#102 => D#104
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#103
  # DEBUG this => D#54
  # DEBUG this => D#103
  # DEBUG D#50 => &D#103->first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _11 = MEM[(char * *)__x_149 + 32B];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  _12 = &MEM[(const struct basic_string *)__x_149 + 32B].D.11539._M_local_buf;
  if (_11 != _12)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 7>:

  <bb 8>:
  # __x_152 = PHI <__x_9(7), __x_14(53)>
  # DEBUG __x => __x_152
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 24B];
  # DEBUG D#18 => __x_152
  # DEBUG __x => D#18
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_14 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 16B];
  # DEBUG D#19 => __x_152
  # DEBUG __x => D#19
  # DEBUG __y => NULL
  # DEBUG D#108 => this_6(D)
  # DEBUG __p => __x_152
  # DEBUG this => D#108
  # DEBUG D#107 => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#106
  # DEBUG __p => __x_152
  # DEBUG this => D#105
  # DEBUG D#104 => D#105
  # DEBUG this => __x_152
  # DEBUG D#103 => &__x_152->_M_value_field
  # DEBUG __r => D#103
  # DEBUG D#102 => D#104
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#103
  # DEBUG this => D#54
  # DEBUG this => D#103
  # DEBUG D#50 => &D#103->first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _7 = MEM[(char * *)__x_152 + 32B];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  _16 = &MEM[(const struct basic_string *)__x_152 + 32B].D.11539._M_local_buf;
  if (_7 != _16)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 10>:

  <bb 11>:
  # __x_155 = PHI <__x_13(10), __x_19(50)>
  # DEBUG __x => __x_155
  __x_18 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 24B];
  # DEBUG D#18 => __x_155
  # DEBUG __x => D#18
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_18
  # DEBUG __x => __x_18
  if (__x_18 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 16B];
  # DEBUG D#19 => __x_155
  # DEBUG __x => D#19
  # DEBUG __y => NULL
  # DEBUG D#108 => this_6(D)
  # DEBUG __p => __x_155
  # DEBUG this => D#108
  # DEBUG D#107 => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#106
  # DEBUG __p => __x_155
  # DEBUG this => D#105
  # DEBUG D#104 => D#105
  # DEBUG this => __x_155
  # DEBUG D#103 => &__x_155->_M_value_field
  # DEBUG __r => D#103
  # DEBUG D#102 => D#104
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#103
  # DEBUG this => D#54
  # DEBUG this => D#103
  # DEBUG D#50 => &D#103->first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _21 = MEM[(char * *)__x_155 + 32B];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  _22 = &MEM[(const struct basic_string *)__x_155 + 32B].D.11539._M_local_buf;
  if (_21 != _22)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 13>:

  <bb 14>:
  # __x_158 = PHI <__x_18(13), __x_25(47)>
  # DEBUG __x => __x_158
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 24B];
  # DEBUG D#18 => __x_158
  # DEBUG __x => D#18
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_25 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 16B];
  # DEBUG D#19 => __x_158
  # DEBUG __x => D#19
  # DEBUG __y => NULL
  # DEBUG D#108 => this_6(D)
  # DEBUG __p => __x_158
  # DEBUG this => D#108
  # DEBUG D#107 => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#106
  # DEBUG __p => __x_158
  # DEBUG this => D#105
  # DEBUG D#104 => D#105
  # DEBUG this => __x_158
  # DEBUG D#103 => &__x_158->_M_value_field
  # DEBUG __r => D#103
  # DEBUG D#102 => D#104
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#103
  # DEBUG this => D#54
  # DEBUG this => D#103
  # DEBUG D#50 => &D#103->first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _27 = MEM[(char * *)__x_158 + 32B];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  _28 = &MEM[(const struct basic_string *)__x_158 + 32B].D.11539._M_local_buf;
  if (_27 != _28)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 16>:

  <bb 17>:
  # __x_161 = PHI <__x_24(16), __x_31(44)>
  # DEBUG __x => __x_161
  __x_30 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 24B];
  # DEBUG D#18 => __x_161
  # DEBUG __x => D#18
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_30
  # DEBUG __x => __x_30
  if (__x_30 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 16B];
  # DEBUG D#19 => __x_161
  # DEBUG __x => D#19
  # DEBUG __y => NULL
  # DEBUG D#108 => this_6(D)
  # DEBUG __p => __x_161
  # DEBUG this => D#108
  # DEBUG D#107 => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#106
  # DEBUG __p => __x_161
  # DEBUG this => D#105
  # DEBUG D#104 => D#105
  # DEBUG this => __x_161
  # DEBUG D#103 => &__x_161->_M_value_field
  # DEBUG __r => D#103
  # DEBUG D#102 => D#104
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#103
  # DEBUG this => D#54
  # DEBUG this => D#103
  # DEBUG D#50 => &D#103->first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _33 = MEM[(char * *)__x_161 + 32B];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  _34 = &MEM[(const struct basic_string *)__x_161 + 32B].D.11539._M_local_buf;
  if (_33 != _34)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 19>:

  <bb 20>:
  # __x_164 = PHI <__x_30(19), __x_37(41)>
  # DEBUG __x => __x_164
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 24B];
  # DEBUG D#18 => __x_164
  # DEBUG __x => D#18
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_37 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 16B];
  # DEBUG D#19 => __x_164
  # DEBUG __x => D#19
  # DEBUG __y => NULL
  # DEBUG D#108 => this_6(D)
  # DEBUG __p => __x_164
  # DEBUG this => D#108
  # DEBUG D#107 => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#106
  # DEBUG __p => __x_164
  # DEBUG this => D#105
  # DEBUG D#104 => D#105
  # DEBUG this => __x_164
  # DEBUG D#103 => &__x_164->_M_value_field
  # DEBUG __r => D#103
  # DEBUG D#102 => D#104
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#103
  # DEBUG this => D#54
  # DEBUG this => D#103
  # DEBUG D#50 => &D#103->first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _39 = MEM[(char * *)__x_164 + 32B];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  _40 = &MEM[(const struct basic_string *)__x_164 + 32B].D.11539._M_local_buf;
  if (_39 != _40)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 22>:

  <bb 23>:
  # __x_167 = PHI <__x_36(22), __x_43(38)>
  # DEBUG __x => __x_167
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 24B];
  # DEBUG D#18 => __x_167
  # DEBUG __x => D#18
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_42
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_43 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 16B];
  # DEBUG D#19 => __x_167
  # DEBUG __x => D#19
  # DEBUG __y => NULL
  # DEBUG D#108 => this_6(D)
  # DEBUG __p => __x_167
  # DEBUG this => D#108
  # DEBUG D#107 => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#106
  # DEBUG __p => __x_167
  # DEBUG this => D#105
  # DEBUG D#104 => D#105
  # DEBUG this => __x_167
  # DEBUG D#103 => &__x_167->_M_value_field
  # DEBUG __r => D#103
  # DEBUG D#102 => D#104
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#103
  # DEBUG this => D#54
  # DEBUG this => D#103
  # DEBUG D#50 => &D#103->first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _45 = MEM[(char * *)__x_167 + 32B];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  _46 = &MEM[(const struct basic_string *)__x_167 + 32B].D.11539._M_local_buf;
  if (_45 != _46)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 25>:

  <bb 26>:
  # __x_170 = PHI <__x_42(25), __x_49(35)>
  # DEBUG __x => __x_170
  __x_48 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 24B];
  # DEBUG D#18 => __x_170
  # DEBUG __x => D#18
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_48
  # DEBUG __x => __x_48
  if (__x_48 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_49 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 16B];
  # DEBUG D#19 => __x_170
  # DEBUG __x => D#19
  # DEBUG __y => NULL
  # DEBUG D#108 => this_6(D)
  # DEBUG __p => __x_170
  # DEBUG this => D#108
  # DEBUG D#107 => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#106
  # DEBUG __p => __x_170
  # DEBUG this => D#105
  # DEBUG D#104 => D#105
  # DEBUG this => __x_170
  # DEBUG D#103 => &__x_170->_M_value_field
  # DEBUG __r => D#103
  # DEBUG D#102 => D#104
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#103
  # DEBUG this => D#54
  # DEBUG this => D#103
  # DEBUG D#50 => &D#103->first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _51 = MEM[(char * *)__x_170 + 32B];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  _52 = &MEM[(const struct basic_string *)__x_170 + 32B].D.11539._M_local_buf;
  if (_51 != _52)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 28>:

  <bb 29>:
  # __x_173 = PHI <__x_48(28), __x_55(32)>
  # DEBUG __x => __x_173
  _54 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 24B];
  # DEBUG D#18 => __x_173
  # DEBUG __x => D#18
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, int>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >::_M_erase (this_6(D), _54);
  __x_55 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 16B];
  # DEBUG D#19 => __x_173
  # DEBUG __x => D#19
  # DEBUG __y => NULL
  # DEBUG D#108 => this_6(D)
  # DEBUG __p => __x_173
  # DEBUG this => D#108
  # DEBUG D#107 => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#106
  # DEBUG __p => __x_173
  # DEBUG this => D#105
  # DEBUG D#104 => D#105
  # DEBUG this => __x_173
  # DEBUG D#103 => &__x_173->_M_value_field
  # DEBUG __r => D#103
  # DEBUG D#102 => D#104
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#103
  # DEBUG this => D#54
  # DEBUG this => D#103
  # DEBUG D#50 => &D#103->first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _57 = MEM[(char * *)__x_173 + 32B];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  _58 = &MEM[(const struct basic_string *)__x_173 + 32B].D.11539._M_local_buf;
  if (_57 != _58)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _57
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _57
  # DEBUG this => D#38
  # DEBUG D.39308 => D#39
  operator delete (_57);

  <bb 31>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_173 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#74 => D#107
  # DEBUG __p => __x_173
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => __x_173
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => __x_173
  # DEBUG this => D#67
  # DEBUG D.39321 => D#68
  operator delete (__x_173);
  # DEBUG __x => __x_55
  if (__x_55 == 0B)
    goto <bb 27>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 29>;

  <bb 33>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _51
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _51
  # DEBUG this => D#38
  # DEBUG D.39275 => D#39
  operator delete (_51);

  <bb 34>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_170 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#74 => D#107
  # DEBUG __p => __x_170
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => __x_170
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => __x_170
  # DEBUG this => D#67
  # DEBUG D.39288 => D#68
  operator delete (__x_170);
  # DEBUG __x => __x_49
  if (__x_49 == 0B)
    goto <bb 24>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 26>;

  <bb 36>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _45
  # DEBUG this => D#38
  # DEBUG D.39242 => D#39
  operator delete (_45);

  <bb 37>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_167 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#74 => D#107
  # DEBUG __p => __x_167
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => __x_167
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => __x_167
  # DEBUG this => D#67
  # DEBUG D.39255 => D#68
  operator delete (__x_167);
  # DEBUG __x => __x_43
  if (__x_43 == 0B)
    goto <bb 21>;
  else
    goto <bb 38>;

  <bb 38>:
  goto <bb 23>;

  <bb 39>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _39
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _39
  # DEBUG this => D#38
  # DEBUG D.39209 => D#39
  operator delete (_39);

  <bb 40>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_164 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#74 => D#107
  # DEBUG __p => __x_164
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => __x_164
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => __x_164
  # DEBUG this => D#67
  # DEBUG D.39222 => D#68
  operator delete (__x_164);
  # DEBUG __x => __x_37
  if (__x_37 == 0B)
    goto <bb 18>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 20>;

  <bb 42>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _33
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _33
  # DEBUG this => D#38
  # DEBUG D.39176 => D#39
  operator delete (_33);

  <bb 43>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_161 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#74 => D#107
  # DEBUG __p => __x_161
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => __x_161
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => __x_161
  # DEBUG this => D#67
  # DEBUG D.39189 => D#68
  operator delete (__x_161);
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 15>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 17>;

  <bb 45>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _27
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _27
  # DEBUG this => D#38
  # DEBUG D.39143 => D#39
  operator delete (_27);

  <bb 46>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_158 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#74 => D#107
  # DEBUG __p => __x_158
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => __x_158
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => __x_158
  # DEBUG this => D#67
  # DEBUG D.39156 => D#68
  operator delete (__x_158);
  # DEBUG __x => __x_25
  if (__x_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 47>;

  <bb 47>:
  goto <bb 14>;

  <bb 48>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _21
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _21
  # DEBUG this => D#38
  # DEBUG D.39110 => D#39
  operator delete (_21);

  <bb 49>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_155 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#74 => D#107
  # DEBUG __p => __x_155
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => __x_155
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => __x_155
  # DEBUG this => D#67
  # DEBUG D.39123 => D#68
  operator delete (__x_155);
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 9>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 11>;

  <bb 51>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _7
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _7
  # DEBUG this => D#38
  # DEBUG D.39077 => D#39
  operator delete (_7);

  <bb 52>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_152 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#74 => D#107
  # DEBUG __p => __x_152
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => __x_152
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => __x_152
  # DEBUG this => D#67
  # DEBUG D.39090 => D#68
  operator delete (__x_152);
  # DEBUG __x => __x_14
  if (__x_14 == 0B)
    goto <bb 6>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 8>;

  <bb 54>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _11
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _11
  # DEBUG this => D#38
  # DEBUG D.39044 => D#39
  operator delete (_11);

  <bb 55>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_149 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#74 => D#107
  # DEBUG __p => __x_149
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => __x_149
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => __x_149
  # DEBUG this => D#67
  # DEBUG D.39057 => D#68
  operator delete (__x_149);
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 3>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 5>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, double> >*] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E, funcdef_no=1279, decl_uid=22269, cgraph_uid=383, symbol_order=383)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, double> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  char * const _7;
  char * const _11;
  const char * _12;
  const char * _16;
  char * const _21;
  const char * _22;
  char * const _27;
  const char * _28;
  char * const _33;
  const char * _34;
  char * const _39;
  const char * _40;
  char * const _45;
  const char * _46;
  char * const _51;
  const char * _52;
  struct _Rb_tree_node_base * _54;
  char * const _57;
  const char * _58;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_149 = PHI <__x_3(D)(4), __x_10(56)>
  # DEBUG __x => __x_149
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 24B];
  # DEBUG D#20 => __x_149
  # DEBUG __x => D#20
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_10 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 16B];
  # DEBUG D#21 => __x_149
  # DEBUG __x => D#21
  # DEBUG __y => NULL
  # DEBUG D#117 => this_6(D)
  # DEBUG __p => __x_149
  # DEBUG this => D#117
  # DEBUG D#116 => D#117
  # DEBUG D#115 => D#117
  # DEBUG D#114 => D#115
  # DEBUG __p => __x_149
  # DEBUG this => D#114
  # DEBUG D#113 => D#114
  # DEBUG this => __x_149
  # DEBUG D#112 => &__x_149->_M_value_field
  # DEBUG __r => D#112
  # DEBUG D#111 => D#113
  # DEBUG this => D#111
  # DEBUG D#110 => D#111
  # DEBUG this => D#110
  # DEBUG this => NULL
  # DEBUG D.29180 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#112
  # DEBUG this => D#55
  # DEBUG this => D#112
  # DEBUG D#49 => &D#112->first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _11 = MEM[(char * *)__x_149 + 32B];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  _12 = &MEM[(const struct basic_string *)__x_149 + 32B].D.11539._M_local_buf;
  if (_11 != _12)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 7>:

  <bb 8>:
  # __x_152 = PHI <__x_9(7), __x_14(53)>
  # DEBUG __x => __x_152
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 24B];
  # DEBUG D#20 => __x_152
  # DEBUG __x => D#20
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_14 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 16B];
  # DEBUG D#21 => __x_152
  # DEBUG __x => D#21
  # DEBUG __y => NULL
  # DEBUG D#117 => this_6(D)
  # DEBUG __p => __x_152
  # DEBUG this => D#117
  # DEBUG D#116 => D#117
  # DEBUG D#115 => D#117
  # DEBUG D#114 => D#115
  # DEBUG __p => __x_152
  # DEBUG this => D#114
  # DEBUG D#113 => D#114
  # DEBUG this => __x_152
  # DEBUG D#112 => &__x_152->_M_value_field
  # DEBUG __r => D#112
  # DEBUG D#111 => D#113
  # DEBUG this => D#111
  # DEBUG D#110 => D#111
  # DEBUG this => D#110
  # DEBUG this => NULL
  # DEBUG D.29180 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#112
  # DEBUG this => D#55
  # DEBUG this => D#112
  # DEBUG D#49 => &D#112->first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _7 = MEM[(char * *)__x_152 + 32B];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  _16 = &MEM[(const struct basic_string *)__x_152 + 32B].D.11539._M_local_buf;
  if (_7 != _16)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 10>:

  <bb 11>:
  # __x_155 = PHI <__x_13(10), __x_19(50)>
  # DEBUG __x => __x_155
  __x_18 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 24B];
  # DEBUG D#20 => __x_155
  # DEBUG __x => D#20
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_18
  # DEBUG __x => __x_18
  if (__x_18 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 16B];
  # DEBUG D#21 => __x_155
  # DEBUG __x => D#21
  # DEBUG __y => NULL
  # DEBUG D#117 => this_6(D)
  # DEBUG __p => __x_155
  # DEBUG this => D#117
  # DEBUG D#116 => D#117
  # DEBUG D#115 => D#117
  # DEBUG D#114 => D#115
  # DEBUG __p => __x_155
  # DEBUG this => D#114
  # DEBUG D#113 => D#114
  # DEBUG this => __x_155
  # DEBUG D#112 => &__x_155->_M_value_field
  # DEBUG __r => D#112
  # DEBUG D#111 => D#113
  # DEBUG this => D#111
  # DEBUG D#110 => D#111
  # DEBUG this => D#110
  # DEBUG this => NULL
  # DEBUG D.29180 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#112
  # DEBUG this => D#55
  # DEBUG this => D#112
  # DEBUG D#49 => &D#112->first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _21 = MEM[(char * *)__x_155 + 32B];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  _22 = &MEM[(const struct basic_string *)__x_155 + 32B].D.11539._M_local_buf;
  if (_21 != _22)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 13>:

  <bb 14>:
  # __x_158 = PHI <__x_18(13), __x_25(47)>
  # DEBUG __x => __x_158
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 24B];
  # DEBUG D#20 => __x_158
  # DEBUG __x => D#20
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_25 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 16B];
  # DEBUG D#21 => __x_158
  # DEBUG __x => D#21
  # DEBUG __y => NULL
  # DEBUG D#117 => this_6(D)
  # DEBUG __p => __x_158
  # DEBUG this => D#117
  # DEBUG D#116 => D#117
  # DEBUG D#115 => D#117
  # DEBUG D#114 => D#115
  # DEBUG __p => __x_158
  # DEBUG this => D#114
  # DEBUG D#113 => D#114
  # DEBUG this => __x_158
  # DEBUG D#112 => &__x_158->_M_value_field
  # DEBUG __r => D#112
  # DEBUG D#111 => D#113
  # DEBUG this => D#111
  # DEBUG D#110 => D#111
  # DEBUG this => D#110
  # DEBUG this => NULL
  # DEBUG D.29180 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#112
  # DEBUG this => D#55
  # DEBUG this => D#112
  # DEBUG D#49 => &D#112->first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _27 = MEM[(char * *)__x_158 + 32B];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  _28 = &MEM[(const struct basic_string *)__x_158 + 32B].D.11539._M_local_buf;
  if (_27 != _28)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 16>:

  <bb 17>:
  # __x_161 = PHI <__x_24(16), __x_31(44)>
  # DEBUG __x => __x_161
  __x_30 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 24B];
  # DEBUG D#20 => __x_161
  # DEBUG __x => D#20
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_30
  # DEBUG __x => __x_30
  if (__x_30 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 16B];
  # DEBUG D#21 => __x_161
  # DEBUG __x => D#21
  # DEBUG __y => NULL
  # DEBUG D#117 => this_6(D)
  # DEBUG __p => __x_161
  # DEBUG this => D#117
  # DEBUG D#116 => D#117
  # DEBUG D#115 => D#117
  # DEBUG D#114 => D#115
  # DEBUG __p => __x_161
  # DEBUG this => D#114
  # DEBUG D#113 => D#114
  # DEBUG this => __x_161
  # DEBUG D#112 => &__x_161->_M_value_field
  # DEBUG __r => D#112
  # DEBUG D#111 => D#113
  # DEBUG this => D#111
  # DEBUG D#110 => D#111
  # DEBUG this => D#110
  # DEBUG this => NULL
  # DEBUG D.29180 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#112
  # DEBUG this => D#55
  # DEBUG this => D#112
  # DEBUG D#49 => &D#112->first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _33 = MEM[(char * *)__x_161 + 32B];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  _34 = &MEM[(const struct basic_string *)__x_161 + 32B].D.11539._M_local_buf;
  if (_33 != _34)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 19>:

  <bb 20>:
  # __x_164 = PHI <__x_30(19), __x_37(41)>
  # DEBUG __x => __x_164
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 24B];
  # DEBUG D#20 => __x_164
  # DEBUG __x => D#20
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_37 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 16B];
  # DEBUG D#21 => __x_164
  # DEBUG __x => D#21
  # DEBUG __y => NULL
  # DEBUG D#117 => this_6(D)
  # DEBUG __p => __x_164
  # DEBUG this => D#117
  # DEBUG D#116 => D#117
  # DEBUG D#115 => D#117
  # DEBUG D#114 => D#115
  # DEBUG __p => __x_164
  # DEBUG this => D#114
  # DEBUG D#113 => D#114
  # DEBUG this => __x_164
  # DEBUG D#112 => &__x_164->_M_value_field
  # DEBUG __r => D#112
  # DEBUG D#111 => D#113
  # DEBUG this => D#111
  # DEBUG D#110 => D#111
  # DEBUG this => D#110
  # DEBUG this => NULL
  # DEBUG D.29180 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#112
  # DEBUG this => D#55
  # DEBUG this => D#112
  # DEBUG D#49 => &D#112->first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _39 = MEM[(char * *)__x_164 + 32B];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  _40 = &MEM[(const struct basic_string *)__x_164 + 32B].D.11539._M_local_buf;
  if (_39 != _40)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 22>:

  <bb 23>:
  # __x_167 = PHI <__x_36(22), __x_43(38)>
  # DEBUG __x => __x_167
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 24B];
  # DEBUG D#20 => __x_167
  # DEBUG __x => D#20
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_42
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_43 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 16B];
  # DEBUG D#21 => __x_167
  # DEBUG __x => D#21
  # DEBUG __y => NULL
  # DEBUG D#117 => this_6(D)
  # DEBUG __p => __x_167
  # DEBUG this => D#117
  # DEBUG D#116 => D#117
  # DEBUG D#115 => D#117
  # DEBUG D#114 => D#115
  # DEBUG __p => __x_167
  # DEBUG this => D#114
  # DEBUG D#113 => D#114
  # DEBUG this => __x_167
  # DEBUG D#112 => &__x_167->_M_value_field
  # DEBUG __r => D#112
  # DEBUG D#111 => D#113
  # DEBUG this => D#111
  # DEBUG D#110 => D#111
  # DEBUG this => D#110
  # DEBUG this => NULL
  # DEBUG D.29180 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#112
  # DEBUG this => D#55
  # DEBUG this => D#112
  # DEBUG D#49 => &D#112->first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _45 = MEM[(char * *)__x_167 + 32B];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  _46 = &MEM[(const struct basic_string *)__x_167 + 32B].D.11539._M_local_buf;
  if (_45 != _46)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 25>:

  <bb 26>:
  # __x_170 = PHI <__x_42(25), __x_49(35)>
  # DEBUG __x => __x_170
  __x_48 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 24B];
  # DEBUG D#20 => __x_170
  # DEBUG __x => D#20
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_48
  # DEBUG __x => __x_48
  if (__x_48 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_49 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 16B];
  # DEBUG D#21 => __x_170
  # DEBUG __x => D#21
  # DEBUG __y => NULL
  # DEBUG D#117 => this_6(D)
  # DEBUG __p => __x_170
  # DEBUG this => D#117
  # DEBUG D#116 => D#117
  # DEBUG D#115 => D#117
  # DEBUG D#114 => D#115
  # DEBUG __p => __x_170
  # DEBUG this => D#114
  # DEBUG D#113 => D#114
  # DEBUG this => __x_170
  # DEBUG D#112 => &__x_170->_M_value_field
  # DEBUG __r => D#112
  # DEBUG D#111 => D#113
  # DEBUG this => D#111
  # DEBUG D#110 => D#111
  # DEBUG this => D#110
  # DEBUG this => NULL
  # DEBUG D.29180 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#112
  # DEBUG this => D#55
  # DEBUG this => D#112
  # DEBUG D#49 => &D#112->first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _51 = MEM[(char * *)__x_170 + 32B];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  _52 = &MEM[(const struct basic_string *)__x_170 + 32B].D.11539._M_local_buf;
  if (_51 != _52)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 28>:

  <bb 29>:
  # __x_173 = PHI <__x_48(28), __x_55(32)>
  # DEBUG __x => __x_173
  _54 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 24B];
  # DEBUG D#20 => __x_173
  # DEBUG __x => D#20
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_M_erase (this_6(D), _54);
  __x_55 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 16B];
  # DEBUG D#21 => __x_173
  # DEBUG __x => D#21
  # DEBUG __y => NULL
  # DEBUG D#117 => this_6(D)
  # DEBUG __p => __x_173
  # DEBUG this => D#117
  # DEBUG D#116 => D#117
  # DEBUG D#115 => D#117
  # DEBUG D#114 => D#115
  # DEBUG __p => __x_173
  # DEBUG this => D#114
  # DEBUG D#113 => D#114
  # DEBUG this => __x_173
  # DEBUG D#112 => &__x_173->_M_value_field
  # DEBUG __r => D#112
  # DEBUG D#111 => D#113
  # DEBUG this => D#111
  # DEBUG D#110 => D#111
  # DEBUG this => D#110
  # DEBUG this => NULL
  # DEBUG D.29180 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#112
  # DEBUG this => D#55
  # DEBUG this => D#112
  # DEBUG D#49 => &D#112->first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _57 = MEM[(char * *)__x_173 + 32B];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  _58 = &MEM[(const struct basic_string *)__x_173 + 32B].D.11539._M_local_buf;
  if (_57 != _58)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _57
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _57
  # DEBUG this => D#38
  # DEBUG D.39613 => D#39
  operator delete (_57);

  <bb 31>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_173 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#116
  # DEBUG __p => __x_173
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_173
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_173
  # DEBUG this => D#75
  # DEBUG D.39626 => D#76
  operator delete (__x_173);
  # DEBUG __x => __x_55
  if (__x_55 == 0B)
    goto <bb 27>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 29>;

  <bb 33>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _51
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _51
  # DEBUG this => D#38
  # DEBUG D.39580 => D#39
  operator delete (_51);

  <bb 34>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_170 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#116
  # DEBUG __p => __x_170
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_170
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_170
  # DEBUG this => D#75
  # DEBUG D.39593 => D#76
  operator delete (__x_170);
  # DEBUG __x => __x_49
  if (__x_49 == 0B)
    goto <bb 24>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 26>;

  <bb 36>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _45
  # DEBUG this => D#38
  # DEBUG D.39547 => D#39
  operator delete (_45);

  <bb 37>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_167 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#116
  # DEBUG __p => __x_167
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_167
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_167
  # DEBUG this => D#75
  # DEBUG D.39560 => D#76
  operator delete (__x_167);
  # DEBUG __x => __x_43
  if (__x_43 == 0B)
    goto <bb 21>;
  else
    goto <bb 38>;

  <bb 38>:
  goto <bb 23>;

  <bb 39>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _39
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _39
  # DEBUG this => D#38
  # DEBUG D.39514 => D#39
  operator delete (_39);

  <bb 40>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_164 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#116
  # DEBUG __p => __x_164
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_164
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_164
  # DEBUG this => D#75
  # DEBUG D.39527 => D#76
  operator delete (__x_164);
  # DEBUG __x => __x_37
  if (__x_37 == 0B)
    goto <bb 18>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 20>;

  <bb 42>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _33
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _33
  # DEBUG this => D#38
  # DEBUG D.39481 => D#39
  operator delete (_33);

  <bb 43>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_161 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#116
  # DEBUG __p => __x_161
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_161
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_161
  # DEBUG this => D#75
  # DEBUG D.39494 => D#76
  operator delete (__x_161);
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 15>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 17>;

  <bb 45>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _27
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _27
  # DEBUG this => D#38
  # DEBUG D.39448 => D#39
  operator delete (_27);

  <bb 46>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_158 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#116
  # DEBUG __p => __x_158
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_158
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_158
  # DEBUG this => D#75
  # DEBUG D.39461 => D#76
  operator delete (__x_158);
  # DEBUG __x => __x_25
  if (__x_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 47>;

  <bb 47>:
  goto <bb 14>;

  <bb 48>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _21
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _21
  # DEBUG this => D#38
  # DEBUG D.39415 => D#39
  operator delete (_21);

  <bb 49>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_155 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#116
  # DEBUG __p => __x_155
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_155
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_155
  # DEBUG this => D#75
  # DEBUG D.39428 => D#76
  operator delete (__x_155);
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 9>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 11>;

  <bb 51>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _7
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _7
  # DEBUG this => D#38
  # DEBUG D.39382 => D#39
  operator delete (_7);

  <bb 52>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_152 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#116
  # DEBUG __p => __x_152
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_152
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_152
  # DEBUG this => D#75
  # DEBUG D.39395 => D#76
  operator delete (__x_152);
  # DEBUG __x => __x_14
  if (__x_14 == 0B)
    goto <bb 6>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 8>;

  <bb 54>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _11
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _11
  # DEBUG this => D#38
  # DEBUG D.39349 => D#39
  operator delete (_11);

  <bb 55>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_149 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#116
  # DEBUG __p => __x_149
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_149
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_149
  # DEBUG this => D#75
  # DEBUG D.39362 => D#76
  operator delete (__x_149);
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 3>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 5>;

}



;; Function Configuration::~Configuration() (_ZN13ConfigurationD2Ev, funcdef_no=1214, decl_uid=22911, cgraph_uid=317, symbol_order=317)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Configuration::~Configuration() (struct Configuration * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rep_type * _4;
  struct _Rep_type * _5;
  struct _Rep_type * _6;
  char * const _8;
  const char * _9;
  char * const _13;
  struct _Rb_tree_node_base * _37;
  struct _Rb_tree_node_base * _41;
  struct _Rb_tree_node_base * _44;
  const char * _47;
  char * const _48;
  const char * _49;
  char * const _50;
  const char * _51;
  char * const _52;
  const char * _53;

  <bb 2>:
  # DEBUG D#122 => &this_1(D)->_float_map
  # DEBUG this => D#122
  _4 = &MEM[(struct map *)this_1(D) + 136B]._M_t;
  # DEBUG this => _4
  __x_12 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 152B];
  # DEBUG D#13 => _4
  # DEBUG this => D#13
  # DEBUG this => _4
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#118 => &MEM[(struct _Rb_tree *)_4]._M_impl
  # DEBUG this => D#118
  # DEBUG this => D#118
  # DEBUG this => D#118
  MEM[(struct  &)this_1(D) + 136] ={v} {CLOBBER};
  # DEBUG D#121 => &this_1(D)->_int_map
  # DEBUG this => D#121
  _5 = &MEM[(struct map *)this_1(D) + 88B]._M_t;
  # DEBUG this => _5
  __x_11 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 104B];
  # DEBUG D#12 => _5
  # DEBUG this => D#12
  # DEBUG this => _5
  # DEBUG __x => __x_11
  # DEBUG __x => __x_11
  if (__x_11 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 4>:

  <bb 5>:
  # __x_91 = PHI <__x_12(4), __x_45(8)>
  # DEBUG __x => __x_91
  _44 = MEM[(struct _Rb_tree_node_base * *)__x_91 + 24B];
  # DEBUG D#20 => __x_91
  # DEBUG __x => D#20
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_M_erase (_4, _44);
  __x_45 = MEM[(struct _Rb_tree_node_base * *)__x_91 + 16B];
  # DEBUG D#21 => __x_91
  # DEBUG __x => D#21
  # DEBUG __y => NULL
  # DEBUG D#117 => _4
  # DEBUG __p => __x_91
  # DEBUG this => D#117
  # DEBUG D#116 => D#117
  # DEBUG D#115 => D#117
  # DEBUG D#114 => D#115
  # DEBUG __p => __x_91
  # DEBUG this => D#114
  # DEBUG D#113 => D#114
  # DEBUG this => __x_91
  # DEBUG D#112 => &__x_91->_M_value_field
  # DEBUG __r => D#112
  # DEBUG D#111 => D#113
  # DEBUG this => D#111
  # DEBUG D#110 => D#111
  # DEBUG this => D#110
  # DEBUG this => NULL
  # DEBUG D.29180 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#112
  # DEBUG this => D#55
  # DEBUG this => D#112
  # DEBUG D#49 => &D#112->first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _13 = MEM[(char * *)__x_91 + 32B];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  _47 = &MEM[(const struct basic_string *)__x_91 + 32B].D.11539._M_local_buf;
  if (_13 != _47)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _13
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _13
  # DEBUG this => D#38
  # DEBUG D.39672 => D#39
  operator delete (_13);

  <bb 7>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_91 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#116
  # DEBUG __p => __x_91
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_91
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_91
  # DEBUG this => D#75
  # DEBUG D.39685 => D#76
  operator delete (__x_91);
  # DEBUG __x => __x_45
  if (__x_45 == 0B)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 5>;

  <bb 9>:
  # DEBUG D#109 => &MEM[(struct _Rb_tree *)_5]._M_impl
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG this => D#109
  MEM[(struct  &)this_1(D) + 88] ={v} {CLOBBER};
  # DEBUG D#120 => &this_1(D)->_str_map
  # DEBUG this => D#120
  _6 = &MEM[(struct map *)this_1(D) + 40B]._M_t;
  # DEBUG this => _6
  __x_10 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 56B];
  # DEBUG D#11 => _6
  # DEBUG this => D#11
  # DEBUG this => _6
  # DEBUG __x => __x_10
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 10>:

  <bb 11>:
  # __x_89 = PHI <__x_11(10), __x_42(14)>
  # DEBUG __x => __x_89
  _41 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#18 => __x_89
  # DEBUG __x => D#18
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, int>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >::_M_erase (_5, _41);
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#19 => __x_89
  # DEBUG __x => D#19
  # DEBUG __y => NULL
  # DEBUG D#108 => _5
  # DEBUG __p => __x_89
  # DEBUG this => D#108
  # DEBUG D#107 => D#108
  # DEBUG D#106 => D#108
  # DEBUG D#105 => D#106
  # DEBUG __p => __x_89
  # DEBUG this => D#105
  # DEBUG D#104 => D#105
  # DEBUG this => __x_89
  # DEBUG D#103 => &__x_89->_M_value_field
  # DEBUG __r => D#103
  # DEBUG D#102 => D#104
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#103
  # DEBUG this => D#54
  # DEBUG this => D#103
  # DEBUG D#50 => &D#103->first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _48 = MEM[(char * *)__x_89 + 32B];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  _49 = &MEM[(const struct basic_string *)__x_89 + 32B].D.11539._M_local_buf;
  if (_48 != _49)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _48
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _48
  # DEBUG this => D#38
  # DEBUG D.39702 => D#39
  operator delete (_48);

  <bb 13>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_89 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#74 => D#107
  # DEBUG __p => __x_89
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => __x_89
  # DEBUG this => D#67
  # DEBUG D.39715 => D#68
  operator delete (__x_89);
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 9>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 11>;

  <bb 15>:
  # DEBUG D#100 => &MEM[(struct _Rb_tree *)_6]._M_impl
  # DEBUG this => D#100
  # DEBUG this => D#100
  # DEBUG this => D#100
  MEM[(struct  &)this_1(D) + 40] ={v} {CLOBBER};
  # DEBUG D#119 => &this_1(D)->_config_string
  # DEBUG this => D#119
  # DEBUG this => D#119
  # DEBUG this => D#119
  _8 = MEM[(char * *)this_1(D) + 8B];
  # DEBUG D#1 => D#119
  # DEBUG this => D#1
  # DEBUG this => D#119
  _9 = &MEM[(const struct basic_string *)this_1(D) + 8B].D.11539._M_local_buf;
  if (_8 != _9)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 16>:

  <bb 17>:
  # __x_90 = PHI <__x_10(16), __x_38(22)>
  # DEBUG __x => __x_90
  _37 = MEM[(struct _Rb_tree_node_base * *)__x_90 + 24B];
  # DEBUG D#16 => __x_90
  # DEBUG __x => D#16
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_M_erase (_6, _37);
  __x_38 = MEM[(struct _Rb_tree_node_base * *)__x_90 + 16B];
  # DEBUG D#17 => __x_90
  # DEBUG __x => D#17
  # DEBUG __y => NULL
  # DEBUG D#99 => _6
  # DEBUG __p => __x_90
  # DEBUG this => D#99
  # DEBUG D#98 => D#99
  # DEBUG D#97 => D#99
  # DEBUG D#96 => D#97
  # DEBUG __p => __x_90
  # DEBUG this => D#96
  # DEBUG D#95 => D#96
  # DEBUG this => __x_90
  # DEBUG D#241 => &__x_90->_M_value_field
  # DEBUG __r => D#241
  # DEBUG D#94 => D#95
  # DEBUG this => D#94
  # DEBUG D#93 => D#94
  # DEBUG this => D#93
  # DEBUG this => NULL
  # DEBUG D.28929 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#241
  # DEBUG this => D#53
  # DEBUG this => D#241
  # DEBUG D#52 => &D#241->second
  # DEBUG this => D#52
  # DEBUG this => D#52
  # DEBUG this => D#52
  _50 = MEM[(char * *)__x_90 + 64B];
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  _51 = &MEM[(const struct basic_string *)__x_90 + 64B].D.11539._M_local_buf;
  if (_50 != _51)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#47 => D#52->D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#52
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#52
  # DEBUG this => D#1
  # DEBUG this => D#52
  # DEBUG D#44 => &D#52->_M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _50
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _50
  # DEBUG this => D#38
  # DEBUG D.39726 => D#39
  operator delete (_50);

  <bb 19>:
  # DEBUG D#48 => &D#52->_M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_90 + 64] ={v} {CLOBBER};
  # DEBUG D#51 => &D#241->first
  # DEBUG this => D#51
  # DEBUG this => D#51
  # DEBUG this => D#51
  _52 = MEM[(char * *)__x_90 + 32B];
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  _53 = &MEM[(const struct basic_string *)__x_90 + 32B].D.11539._M_local_buf;
  if (_52 != _53)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#51].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#51
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#51
  # DEBUG this => D#1
  # DEBUG this => D#51
  # DEBUG D#44 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _52
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _52
  # DEBUG this => D#38
  # DEBUG D.39741 => D#39
  operator delete (_52);

  <bb 21>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#51]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)__x_90 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#66 => D#98
  # DEBUG __p => __x_90
  # DEBUG this => D#66
  # DEBUG D#65 => D#66
  # DEBUG this => D#65
  # DEBUG D#64 => 1
  # DEBUG __p => __x_90
  # DEBUG __a => D#63
  # DEBUG __n => D#64
  # DEBUG D#62 => D#64
  # DEBUG D#61 => D#63
  # DEBUG D#59 => D#61
  # DEBUG D#60 => D#62
  # DEBUG __p => __x_90
  # DEBUG this => D#59
  # DEBUG D.39649 => D#60
  operator delete (__x_90);
  # DEBUG __x => __x_38
  # DEBUG __x => __x_38
  if (__x_38 == 0B)
    goto <bb 15>;
  else
    goto <bb 22>;

  <bb 22>:
  goto <bb 17>;

  <bb 23>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#119].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#119
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#119
  # DEBUG this => D#1
  # DEBUG this => D#119
  # DEBUG D#44 => &MEM[(struct basic_string *)D#119]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _8
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _8
  # DEBUG this => D#38
  # DEBUG D.29333 => D#39
  operator delete (_8);

  <bb 24>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#119]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_, funcdef_no=1486, decl_uid=21154, cgraph_uid=590, symbol_order=590)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_tree * const this, const struct key_type & __k)
{
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.39785;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.39770;
  struct _Rb_tree_node_base * const __j$_M_node;
  bool __comp;
  struct _Rb_tree_node_base * const D.25886;
  struct _Rb_tree_node_base * const D.25887;
  struct pair D.27391;
  const size_type pretmp_1;
  char * const prephitmp_13;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node_base * _24;
  const size_type _34;
  char * const _37;
  long unsigned int _40;
  char * const pretmp_44;
  long unsigned int _52;
  const size_type prephitmp_61;
  char * const pretmp_64;
  char * const prephitmp_65;
  const size_type pretmp_67;
  const size_type pretmp_76;
  const size_type prephitmp_77;
  const size_type prephitmp_78;
  const size_type pretmp_79;
  char * const pretmp_80;
  char * const _83;
  const size_type _84;

  <bb 2>:
  _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
  # DEBUG D#12 => this_9(D)
  # DEBUG this => D#12
  # DEBUG __x => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#267 => &this_9(D)->_M_impl._M_header
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => D#267
  # DEBUG __x => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = &this_9(D)->_M_impl._M_header;
  goto <bb 15>;

  <bb 4>:
  pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_44 = MEM[(char * *)__k_12(D)];
  goto <bb 7>;

  <bb 5>:
  # _6 = PHI <_22(27), _23(28)>
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __comp => __comp_56
  # DEBUG __y => _10
  # DEBUG __x => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # _10 = PHI <_21(4), _6(6)>
  # DEBUG __comp => 1
  # DEBUG __x => _10
  # DEBUG __y => _10
  # DEBUG __x => _10
  # DEBUG __x => _10
  # DEBUG this => _10
  # DEBUG D#125 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
  # DEBUG __r => D#125
  # DEBUG __x => D#125
  # DEBUG this => D#57
  # DEBUG D#247 => &MEM[(const struct pair &)_10 + 32].first
  # DEBUG D#132 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#56 => D#132
  # DEBUG __x => __k_12(D)
  # DEBUG __y => D#247
  # DEBUG this => D#56
  # DEBUG __lhs => __k_12(D)
  # DEBUG __rhs => D#247
  # DEBUG this => __k_12(D)
  # DEBUG __str => D#247
  # DEBUG D#266 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#5 => __k_12(D)
  # DEBUG this => D#5
  # DEBUG __size => D#266
  _34 = MEM[(long unsigned int *)_10 + 40B];
  # DEBUG D#5 => D#247
  # DEBUG this => D#5
  # DEBUG __osize => _34
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __len => D#245
  # DEBUG this => D#247
  _37 = MEM[(char * *)_10 + 32B];
  # DEBUG D#1 => D#247
  # DEBUG this => D#1
  # DEBUG D#265 => MEM[(char * *)__k_12(D)]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG __s1 => D#265
  # DEBUG __s2 => _37
  # DEBUG __n => D#245
  __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
  # DEBUG __r => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => D#266
  # DEBUG __n2 => _34
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_type) _40;
  # DEBUG __d => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_42 = (int) _40;

  <bb 11>:
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __r => __r_43
  # DEBUG D#253 => {CLOBBER}
  # DEBUG __size => D#253
  # DEBUG D#254 => {CLOBBER}
  # DEBUG __osize => D#254
  # DEBUG __comp => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __comp => 1
  _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
  # DEBUG D#19 => _10
  # DEBUG __x => D#19
  goto <bb 5>;

  <bb 13>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG __comp => 0
  _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
  # DEBUG D#18 => _10
  # DEBUG __x => D#18
  goto <bb 5>;

  <bb 14>:
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # _83 = PHI <_37(5)>
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>

  <bb 26>:
  # DEBUG this => &__j
  # DEBUG __x => _85
  # DEBUG __j$_M_node => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG this => &__j
  # DEBUG __x => _57
  # DEBUG __j$_M_node => _57
  _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
  # DEBUG D#123 => this_9(D)
  # DEBUG this => D#123
  # DEBUG this => NULL
  # DEBUG __x => _24
  # DEBUG this => &__j
  # DEBUG __x => &D.25885
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &D.25888
  # DEBUG __a => &D.25886
  # DEBUG __b => &D.25887
  MEM[(struct pair *)&D.27391] = 0B;
  MEM[(struct pair *)&D.27391 + 8B] = _57;
  goto <bb 25>;

  <bb 17>:
  # DEBUG this => &__j
  __j$_M_node_25 = std::_Rb_tree_decrement (_57);
  # DEBUG __j$_M_node => __j$_M_node_25
  pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_80 = MEM[(char * *)__k_12(D)];
  pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
  pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  <bb 18>:
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_node => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG this => __j$_M_node_20
  # DEBUG D#129 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
  # DEBUG __r => D#129
  # DEBUG __x => D#129
  # DEBUG this => D#57
  # DEBUG D#248 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
  # DEBUG D#131 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#56 => D#131
  # DEBUG __x => D#248
  # DEBUG __y => __k_12(D)
  # DEBUG this => D#56
  # DEBUG __lhs => D#248
  # DEBUG __rhs => __k_12(D)
  # DEBUG this => D#248
  # DEBUG __str => __k_12(D)
  # DEBUG D#264 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
  # DEBUG D#5 => D#248
  # DEBUG this => D#5
  # DEBUG __size => D#264
  # DEBUG D#263 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#5 => __k_12(D)
  # DEBUG this => D#5
  # DEBUG __osize => D#263
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#246
  # DEBUG this => __k_12(D)
  # DEBUG D#262 => MEM[(char * *)__k_12(D)]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG D#261 => MEM[(char * *)__j$_M_node_20 + 32B]
  # DEBUG D#1 => D#248
  # DEBUG this => D#1
  # DEBUG __s1 => D#261
  # DEBUG __s2 => D#262
  # DEBUG __n => D#246
  __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __r => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG __n1 => D#264
  # DEBUG __n2 => D#263
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_type) _52;
  # DEBUG __d => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;

  <bb 20>:
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 21>:
  __r_54 = (int) _52;

  <bb 22>:
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __r => __r_55
  # DEBUG D#259 => {CLOBBER}
  # DEBUG __size => D#259
  # DEBUG D#260 => {CLOBBER}
  # DEBUG __osize => D#260
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:

  <bb 31>:
  # DEBUG __r => NULL
  # DEBUG this => &D.25891
  # DEBUG __a => &D.25889
  # DEBUG __b => &D.25890
  MEM[(struct pair *)&D.27391] = 0B;
  MEM[(struct pair *)&D.27391 + 8B] = _5;
  goto <bb 25>;

  <bb 24>:

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG this => &D.25893
  # DEBUG __a => &__j._M_node
  # DEBUG __b => &D.25892
  MEM[(struct pair *)&D.27391] = __j$_M_node_20;
  MEM[(struct pair *)&D.27391 + 8B] = 0B;

  <bb 25>:

  <bb 29>:
  # DEBUG D#130 => {CLOBBER}
  # DEBUG __j$_M_node => D#130
  return D.27391;

}



;; Function std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Tp = int; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type = int; std::map<_Key, _Tp, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEixERS9_, funcdef_no=1255, decl_uid=21507, cgraph_uid=362, symbol_order=362)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Tp = int; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type = int; std::map<_Key, _Tp, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct map * const this, const struct key_type & __k)
{
  struct _Rb_tree_node_base * SR.432;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.430;
  struct _Rb_tree_node_base * SR.429;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  struct _Rb_tree_node_base * SR.426;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.40071;
  bool __insert_left;
  struct iterator D.40056;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.40026;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.40011;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.39996;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.39981;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.39966;
  struct pair D.39951;
  struct const_iterator __position;
  size_type __dnew;
  struct iterator D.39849;
  struct pair __res;
  struct _Rb_tree_node_base * __res$first;
  struct _Rb_tree_node_base * __res$second;
  struct const_iterator __position;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.39839;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.39824;
  struct iterator D.39809;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.385;
  struct _Rb_tree_node_base * SR.382;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.30689;
  struct iterator D.30649;
  struct value_type D.24353;
  struct _Rep_type * _7;
  mapped_type & _15;
  char * _19;
  char * const _20;
  const size_type _22;
  const size_type pretmp_39;
  char * const pretmp_41;
  char * const pretmp_45;
  char * const _56;
  long unsigned int _58;
  const size_type _64;
  char * const _67;
  long unsigned int _70;
  bool _74;
  bool _75;
  char * _82;
  long unsigned int __dnew.12_83;
  const char_type _85;
  char * _88;
  const size_type _90;
  struct _Rb_tree_node_base * _91;
  size_type prephitmp_95;
  struct _Rb_tree_node_base * _98;
  struct _Rb_tree_node_base * _99;
  struct _Rb_tree_node_base * _102;
  struct _Rb_tree_node_base * _104;
  struct _Rb_tree_node_base * _105;
  struct _Rb_tree_node_base * _108;
  const size_type _109;
  const size_type _110;
  char * const _113;
  char * const _114;
  long unsigned int _116;
  const size_type _121;
  const size_type _122;
  char * const _125;
  char * const _126;
  long unsigned int _128;
  const size_type _133;
  char * const prephitmp_137;
  char * const _138;
  long unsigned int _140;
  long unsigned int _152;
  char * const _156;
  const size_type _158;
  char * const _161;
  long unsigned int _164;
  const size_type pretmp_168;
  struct _Rb_tree_node * _173;
  int _176;
  long unsigned int _177;
  long unsigned int _178;
  long unsigned int _186;
  struct pair * _191;
  char * _193;
  char * const _194;
  const size_type _195;
  char * _196;
  int _197;
  void * _198;
  char * _204;
  long unsigned int __dnew.12_205;
  const char_type _207;
  char * _210;
  char * const _221;
  char * const prephitmp_232;
  char * const pretmp_268;
  int _277;
  const size_type pretmp_278;
  const size_type prephitmp_279;
  const size_type pretmp_280;
  int prephitmp_284;
  size_type pretmp_286;
  char * const prephitmp_287;
  char * const prephitmp_291;
  char * const pretmp_292;
  size_type prephitmp_293;
  char * const pretmp_316;
  const size_type prephitmp_321;
  char * const pretmp_329;
  bool _332;
  bool _333;
  bool _345;
  char * const pretmp_347;
  bool _349;
  char * const prephitmp_353;
  bool _366;
  bool _368;
  bool _371;
  size_type pretmp_372;
  const size_type prephitmp_376;
  char * const prephitmp_377;
  char * const pretmp_385;
  const size_type prephitmp_397;
  const size_type pretmp_398;

  <bb 2>:
  # DEBUG this => this_4(D)
  # DEBUG __x => __k_5(D)
  # DEBUG D#347 => &this_4(D)->_M_t
  # DEBUG this => D#347
  # DEBUG __k => __k_5(D)
  # DEBUG this => D#347
  __i$_M_node_42 = &MEM[(struct _Rb_tree *)this_4(D)]._M_impl._M_header;
  __i$_M_node_43 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 16B];
  # DEBUG D#12 => D#347
  # DEBUG this => D#12
  # DEBUG D#128 => D#347
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => __k_5(D)
  # DEBUG __y => __i$_M_node_42
  # DEBUG __x => __i$_M_node_43
  if (__i$_M_node_43 == 0B)
    goto <bb 89>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_39 = MEM[(long unsigned int *)__k_5(D) + 8B];
  pretmp_41 = MEM[(char * *)__k_5(D)];
  goto <bb 6>;

  <bb 4>:
  # __i$_M_node_51 = PHI <__i$_M_node_47(99), __i$_M_node_48(98)>
  # __i$_M_node_50 = PHI <__i$_M_node_136(99), __i$_M_node_124(98)>
  # DEBUG __y => __i$_M_node_50
  # DEBUG __x => __i$_M_node_51
  if (__i$_M_node_51 == 0B)
    goto <bb 13>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __i$_M_node_136 = PHI <__i$_M_node_43(3), __i$_M_node_51(5)>
  # __i$_M_node_124 = PHI <__i$_M_node_42(3), __i$_M_node_50(5)>
  # DEBUG __y => __i$_M_node_124
  # DEBUG __x => __i$_M_node_136
  # DEBUG __x => __i$_M_node_136
  # DEBUG __x => __i$_M_node_136
  # DEBUG this => __i$_M_node_136
  # DEBUG D#125 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_136]._M_value_field
  # DEBUG __r => D#125
  # DEBUG __x => D#125
  # DEBUG this => D#57
  # DEBUG D#278 => &MEM[(const struct pair &)__i$_M_node_136 + 32].first
  # DEBUG D#126 => &D#127->_M_impl._M_key_compare
  # DEBUG D#56 => D#126
  # DEBUG __x => D#278
  # DEBUG __y => __k_5(D)
  # DEBUG this => D#56
  # DEBUG __lhs => D#278
  # DEBUG __rhs => __k_5(D)
  # DEBUG this => D#278
  # DEBUG __str => __k_5(D)
  _22 = MEM[(long unsigned int *)__i$_M_node_136 + 40B];
  # DEBUG D#5 => D#278
  # DEBUG this => D#5
  # DEBUG __size => _22
  # DEBUG D#345 => MEM[(long unsigned int *)__k_5(D) + 8B]
  # DEBUG D#5 => __k_5(D)
  # DEBUG this => D#5
  # DEBUG __osize => D#345
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_330 = MIN_EXPR <_22, pretmp_39>;
  # DEBUG __len => D#270
  # DEBUG this => __k_5(D)
  # DEBUG D#344 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  _56 = MEM[(char * *)__i$_M_node_136 + 32B];
  # DEBUG D#1 => D#278
  # DEBUG this => D#1
  # DEBUG __s1 => _56
  # DEBUG __s2 => D#344
  # DEBUG __n => D#270
  __r_57 = __builtin_memcmp (_56, pretmp_41, __len_330);
  # DEBUG __r => NULL
  if (__r_57 == 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  # DEBUG __n1 => _22
  # DEBUG __n2 => D#345
  _58 = _22 - pretmp_39;
  __d_59 = (const difference_type) _58;
  # DEBUG __d => __d_59
  if (__d_59 > 2147483647)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  if (__d_59 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  __r_60 = (int) _58;

  <bb 10>:
  # __r_61 = PHI <__r_57(6), __r_60(9)>
  # DEBUG __r => __r_61
  # DEBUG D#289 => {CLOBBER}
  # DEBUG __size => D#289
  # DEBUG D#290 => {CLOBBER}
  # DEBUG __osize => D#290
  if (__r_61 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:

  <bb 99>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_136
  __i$_M_node_47 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_136 + 16B];
  # DEBUG D#19 => __i$_M_node_136
  # DEBUG __x => D#19
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 12>:

  <bb 98>:
  # DEBUG __r => NULL
  __i$_M_node_48 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_136 + 24B];
  # DEBUG D#18 => __i$_M_node_136
  # DEBUG __x => D#18
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 13>:
  # __i$_M_node_401 = PHI <__i$_M_node_50(4)>

  <bb 97>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_401
  # DEBUG __i$_M_node => __i$_M_node_401
  # DEBUG this => this_4(D)
  # DEBUG D#36 => &this_4(D)->_M_t
  # DEBUG this => D#36
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_42
  # DEBUG this => &__i
  # DEBUG __x => &D.24288
  if (__i$_M_node_42 == __i$_M_node_401)
    goto <bb 90>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_401
  # DEBUG D#197 => &MEM[(struct _Rb_tree_node *)__i$_M_node_401]._M_value_field
  # DEBUG __r => D#197
  # DEBUG D#279 => &MEM[(struct pair &)__i$_M_node_401 + 32].first
  # DEBUG D#25 => this_4(D)
  # DEBUG this => D#25
  # DEBUG D#24 => D#25
  # DEBUG D#23 => &D#24->_M_t
  # DEBUG D#22 => D#23
  # DEBUG this => D#22
  # DEBUG D#56 => &D.24342
  # DEBUG __x => __k_5(D)
  # DEBUG __y => D#279
  # DEBUG this => D#56
  # DEBUG __lhs => __k_5(D)
  # DEBUG __rhs => D#279
  # DEBUG this => __k_5(D)
  # DEBUG __str => D#279
  # DEBUG D#343 => MEM[(long unsigned int *)__k_5(D) + 8B]
  # DEBUG D#5 => __k_5(D)
  # DEBUG this => D#5
  # DEBUG __size => D#343
  _64 = MEM[(long unsigned int *)__i$_M_node_401 + 40B];
  # DEBUG D#5 => D#279
  # DEBUG this => D#5
  # DEBUG __osize => _64
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_107 = MIN_EXPR <pretmp_39, _64>;
  # DEBUG __len => D#271
  # DEBUG this => D#279
  _67 = MEM[(char * *)__i$_M_node_401 + 32B];
  # DEBUG D#1 => D#279
  # DEBUG this => D#1
  # DEBUG D#342 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG __s1 => D#342
  # DEBUG __s2 => _67
  # DEBUG __n => D#271
  __r_69 = __builtin_memcmp (pretmp_41, _67, __len_107);
  # DEBUG __r => NULL
  if (__r_69 == 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # DEBUG __n1 => D#343
  # DEBUG __n2 => _64
  _70 = pretmp_39 - _64;
  __d_71 = (const difference_type) _70;
  # DEBUG __d => __d_71
  if (__d_71 > 2147483647)
    goto <bb 84>;
  else
    goto <bb 16>;

  <bb 16>:
  if (__d_71 < -2147483648)
    goto <bb 19>;
  else
    goto <bb 17>;

  <bb 17>:
  __r_72 = (int) _70;

  <bb 18>:
  # __r_73 = PHI <__r_69(14), __r_72(17)>
  # DEBUG __r => __r_73
  # DEBUG D#295 => {CLOBBER}
  # DEBUG __size => D#295
  # DEBUG D#296 => {CLOBBER}
  # DEBUG __osize => D#296
  if (__r_73 < 0)
    goto <bb 90>;
  else
    goto <bb 84>;

  <bb 19>:
  # __i$_M_node_389 = PHI <__i$_M_node_401(16), __i$_M_node_392(100)>
  # prephitmp_376 = PHI <pretmp_39(16), prephitmp_321(100)>
  # prephitmp_353 = PHI <pretmp_41(16), prephitmp_137(100)>
  # DEBUG this => &D.24353
  # DEBUG __a => __k_5(D)
  # DEBUG __b => &D.24352
  # DEBUG this => &D.24353.first
  # DEBUG __str => __k_5(D)
  # DEBUG this => __k_5(D)
  # DEBUG D#145 => &MEM[(const struct basic_string *)__k_5(D)]._M_dataplus
  # DEBUG this => &D.24353.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.24353]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.24353].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24353]._M_p = &MEM[(struct basic_string *)&D.24353].D.11539._M_local_buf;
  # DEBUG D#341 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG D#340 => MEM[(long unsigned int *)__k_5(D) + 8B]
  # DEBUG D#2 => __k_5(D)
  # DEBUG this => D#2
  _19 = prephitmp_353 + prephitmp_376;
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG this => &D.24353.first
  # DEBUG __beg => D#341
  # DEBUG __end => _19
  # DEBUG this => &D.24353.first
  # DEBUG __beg => D#341
  # DEBUG __end => _19
  # DEBUG this => &D.24353.first
  # DEBUG __beg => D#341
  # DEBUG __end => _19
  # DEBUG __ptr => D#341
  _74 = _19 != 0B;
  _332 = prephitmp_353 == 0B;
  _75 = _74 & _332;
  if (_75 != 0)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 20>:
  _82 = std::__cxx11::basic_string<char>::_M_create (&D.24353.first, &__dnew, 0);
  # DEBUG D#3 => &D.24353.first
  # DEBUG __p => _82
  # DEBUG this => D#3
  MEM[(char * *)&D.24353] = _82;
  __dnew.12_83 = __dnew;
  # DEBUG D#4 => &D.24353.first
  # DEBUG __capacity => __dnew.12_83
  # DEBUG this => D#4
  MEM[(size_type *)&D.24353 + 16B] = __dnew.12_83;
  # DEBUG D#1 => &D.24353.first
  # DEBUG this => D#1
  # DEBUG __p => _82
  # DEBUG __k1 => D#341
  # DEBUG __k2 => _19
  # DEBUG __d => _82
  # DEBUG __s => D#341
  # DEBUG __n => D#340
  goto <bb 23>;

  <bb 21>:
  # DEBUG D#1 => &D.24353.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.24353].D.11539._M_local_buf
  # DEBUG __k1 => D#341
  # DEBUG __k2 => _19
  # DEBUG __d => &MEM[(struct basic_string *)&D.24353].D.11539._M_local_buf
  # DEBUG __s => D#341
  # DEBUG __n => D#340
  if (prephitmp_376 == 1)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _85 = MEM[(const char_type &)prephitmp_353];
  # DEBUG D#7 => D#341
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.24353].D.11539._M_local_buf
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24353 + 16] = _85;
  goto <bb 24>;

  <bb 23>:
  # _221 = PHI <&MEM[(struct basic_string *)&D.24353].D.11539._M_local_buf(21), _82(20)>
  # DEBUG D#1 => &D.24353.first
  # DEBUG this => D#1
  # DEBUG __p => _221
  # DEBUG __k1 => D#341
  # DEBUG __k2 => _19
  # DEBUG __d => _221
  # DEBUG __s => D#341
  # DEBUG __n => D#340
  # DEBUG __s1 => _221
  # DEBUG __s2 => D#341
  # DEBUG __n => D#340
  __builtin_memcpy (_221, prephitmp_353, prephitmp_376);
  pretmp_372 = __dnew;
  pretmp_292 = MEM[(char * *)&D.24353];

  <bb 24>:
  # prephitmp_293 = PHI <prephitmp_376(22), pretmp_372(23)>
  # prephitmp_377 = PHI <&MEM[(struct basic_string *)&D.24353].D.11539._M_local_buf(22), pretmp_292(23)>
  _7 = &this_4(D)->_M_t;
  # DEBUG D#339 => __dnew
  # DEBUG this => &D.24353.first
  # DEBUG __n => D#339
  # DEBUG D#6 => &D.24353.first
  # DEBUG __length => D#339
  # DEBUG this => D#6
  MEM[(size_type *)&D.24353 + 8B] = prephitmp_293;
  # DEBUG D#1 => &D.24353.first
  # DEBUG this => D#1
  _88 = prephitmp_377 + prephitmp_293;
  # DEBUG __c1 => _88
  # DEBUG __c2 => D#7
  MEM[(char_type &)_88] = 0;
  __dnew ={v} {CLOBBER};
  D.24353.second = 0;
  # DEBUG this => this_4(D)
  # DEBUG __position$_M_node => __i$_M_node_389
  # DEBUG __x => &D.24353
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => D#347
  # DEBUG __x => &D.24353
  # DEBUG this => &__an
  # DEBUG __t => D#347
  # DEBUG __an$_M_t => D#347
  # DEBUG D#196 => &__an
  # DEBUG this => D#347
  # DEBUG __v => &D.24353
  # DEBUG __node_gen => D#196
  # DEBUG D#195 => D#196
  # DEBUG __x => &D.24353
  # DEBUG this => D#57
  # DEBUG this => D#347
  # DEBUG __k => &D.24353.first
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_389
  # DEBUG __pos => __i$_M_node_389
  # DEBUG this => D#347
  if (__i$_M_node_42 == __i$_M_node_389)
    goto <bb 25>;
  else
    goto <bb 32>;

  <bb 25>:
  _90 = MEM[(long unsigned int *)this_4(D) + 40B];
  # DEBUG D#91 => D#347
  # DEBUG this => D#91
  if (_90 != 0)
    goto <bb 26>;
  else
    goto <bb 31>;

  <bb 26>:
  # DEBUG this => D#347
  _91 = MEM[(struct _Rb_tree_node_base * &)this_4(D) + 32];
  # DEBUG __x => _91
  # DEBUG __x => _91
  # DEBUG this => _91
  # DEBUG D#129 => &MEM[(const struct _Rb_tree_node *)_91]._M_value_field
  # DEBUG __r => D#129
  # DEBUG __x => D#129
  # DEBUG this => D#57
  # DEBUG D#280 => &MEM[(const struct pair &)_91 + 32].first
  # DEBUG D#138 => &MEM[(struct _Rb_tree *)D#347]._M_impl._M_key_compare
  # DEBUG D#56 => D#138
  # DEBUG __x => D#280
  # DEBUG __y => &D.24353.first
  # DEBUG this => D#56
  # DEBUG __lhs => D#280
  # DEBUG __rhs => &D.24353.first
  # DEBUG this => D#280
  # DEBUG __str => &D.24353.first
  _109 = MEM[(long unsigned int *)_91 + 40B];
  # DEBUG D#5 => D#280
  # DEBUG this => D#5
  # DEBUG __size => _109
  _110 = MEM[(long unsigned int *)&D.24353 + 8B];
  # DEBUG D#5 => &D.24353.first
  # DEBUG this => D#5
  # DEBUG __osize => _110
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_380 = MIN_EXPR <_109, _110>;
  # DEBUG __len => D#273
  # DEBUG this => &D.24353.first
  _113 = MEM[(char * *)&D.24353];
  # DEBUG D#1 => &D.24353.first
  # DEBUG this => D#1
  _114 = MEM[(char * *)_91 + 32B];
  # DEBUG D#1 => D#280
  # DEBUG this => D#1
  # DEBUG __s1 => _114
  # DEBUG __s2 => _113
  # DEBUG __n => D#273
  __r_115 = __builtin_memcmp (_114, _113, __len_380);
  # DEBUG __r => NULL
  if (__r_115 == 0)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 27>:
  # DEBUG __n1 => _109
  # DEBUG __n2 => _110
  _116 = _109 - _110;
  __d_117 = (const difference_type) _116;
  # DEBUG __d => __d_117
  if (__d_117 > 2147483647)
    goto <bb 31>;
  else
    goto <bb 28>;

  <bb 28>:
  if (__d_117 < -2147483648)
    goto <bb 59>;
  else
    goto <bb 29>;

  <bb 29>:
  __r_118 = (int) _116;

  <bb 30>:
  # __r_119 = PHI <__r_115(26), __r_118(29)>
  # DEBUG __r => __r_119
  # DEBUG D#301 => {CLOBBER}
  # DEBUG __size => D#301
  # DEBUG D#302 => {CLOBBER}
  # DEBUG __osize => D#302
  if (__r_119 < 0)
    goto <bb 59>;
  else
    goto <bb 31>;

  <bb 31>:
  D.39951 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, int>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >::_M_get_insert_unique_pos (_7, &D.24353.first);
  SR.430_290 = MEM[(struct pair *)&D.39951];
  SR.431_289 = MEM[(struct pair *)&D.39951 + 8B];
  goto <bb 59>;

  <bb 32>:
  # DEBUG __x => __i$_M_node_389
  # DEBUG __x => __i$_M_node_389
  # DEBUG this => __i$_M_node_389
  # DEBUG D#129 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_389]._M_value_field
  # DEBUG __r => D#129
  # DEBUG __x => D#129
  # DEBUG this => D#57
  # DEBUG D#281 => &MEM[(const struct pair &)__i$_M_node_389 + 32].first
  # DEBUG D#140 => &MEM[(struct _Rb_tree *)D#347]._M_impl._M_key_compare
  # DEBUG D#56 => D#140
  # DEBUG __x => &D.24353.first
  # DEBUG __y => D#281
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24353.first
  # DEBUG __rhs => D#281
  # DEBUG this => &D.24353.first
  # DEBUG __str => D#281
  _121 = MEM[(long unsigned int *)&D.24353 + 8B];
  # DEBUG D#5 => &D.24353.first
  # DEBUG this => D#5
  # DEBUG __size => _121
  _122 = MEM[(long unsigned int *)__i$_M_node_389 + 40B];
  # DEBUG D#5 => D#281
  # DEBUG this => D#5
  # DEBUG __osize => _122
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_382 = MIN_EXPR <_121, _122>;
  # DEBUG __len => D#272
  # DEBUG this => D#281
  _125 = MEM[(char * *)__i$_M_node_389 + 32B];
  # DEBUG D#1 => D#281
  # DEBUG this => D#1
  _126 = MEM[(char * *)&D.24353];
  # DEBUG D#1 => &D.24353.first
  # DEBUG this => D#1
  # DEBUG __s1 => _126
  # DEBUG __s2 => _125
  # DEBUG __n => D#272
  __r_127 = __builtin_memcmp (_126, _125, __len_382);
  # DEBUG __r => NULL
  if (__r_127 == 0)
    goto <bb 33>;
  else
    goto <bb 36>;

  <bb 33>:
  # DEBUG __n1 => _121
  # DEBUG __n2 => _122
  _128 = _121 - _122;
  __d_129 = (const difference_type) _128;
  # DEBUG __d => __d_129
  if (__d_129 > 2147483647)
    goto <bb 46>;
  else
    goto <bb 34>;

  <bb 34>:
  if (__d_129 < -2147483648)
    goto <bb 37>;
  else
    goto <bb 35>;

  <bb 35>:
  __r_130 = (int) _128;

  <bb 36>:
  # __r_131 = PHI <__r_127(32), __r_130(35)>
  # DEBUG __r => __r_131
  # DEBUG D#307 => {CLOBBER}
  # DEBUG __size => D#307
  # DEBUG D#308 => {CLOBBER}
  # DEBUG __osize => D#308
  if (__r_131 < 0)
    goto <bb 37>;
  else
    goto <bb 46>;

  <bb 37>:
  # DEBUG __r => NULL
  # DEBUG __before => __i$_M_node_389
  # DEBUG this => D#347
  _98 = MEM[(struct _Rb_tree_node_base * &)this_4(D) + 24];
  if (_98 == __i$_M_node_389)
    goto <bb 59>;
  else
    goto <bb 38>;

  <bb 38>:
  # DEBUG this => &__before
  _99 = std::_Rb_tree_decrement (__i$_M_node_389);
  # DEBUG __before => _99
  # DEBUG __x => _99
  # DEBUG __x => _99
  # DEBUG this => _99
  # DEBUG D#129 => &MEM[(const struct _Rb_tree_node *)_99]._M_value_field
  # DEBUG __r => D#129
  # DEBUG __x => D#129
  # DEBUG this => D#57
  # DEBUG D#282 => &MEM[(const struct pair &)_99 + 32].first
  # DEBUG D#137 => &MEM[(struct _Rb_tree *)D#347]._M_impl._M_key_compare
  # DEBUG D#56 => D#137
  # DEBUG __x => D#282
  # DEBUG __y => &D.24353.first
  # DEBUG this => D#56
  # DEBUG __lhs => D#282
  # DEBUG __rhs => &D.24353.first
  # DEBUG this => D#282
  # DEBUG __str => &D.24353.first
  _133 = MEM[(long unsigned int *)_99 + 40B];
  # DEBUG D#5 => D#282
  # DEBUG this => D#5
  # DEBUG __size => _133
  # DEBUG D#5 => &D.24353.first
  # DEBUG this => D#5
  # DEBUG __osize => _121
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_381 = MIN_EXPR <_121, _133>;
  # DEBUG __len => D#276
  # DEBUG this => &D.24353.first
  # DEBUG D#1 => &D.24353.first
  # DEBUG this => D#1
  _138 = MEM[(char * *)_99 + 32B];
  # DEBUG D#1 => D#282
  # DEBUG this => D#1
  # DEBUG __s1 => _138
  # DEBUG __s2 => _126
  # DEBUG __n => D#276
  __r_139 = __builtin_memcmp (_138, _126, __len_381);
  # DEBUG __r => NULL
  if (__r_139 == 0)
    goto <bb 39>;
  else
    goto <bb 42>;

  <bb 39>:
  # DEBUG __n1 => _133
  # DEBUG __n2 => _121
  _140 = _133 - _121;
  __d_141 = (const difference_type) _140;
  # DEBUG __d => __d_141
  if (__d_141 > 2147483647)
    goto <bb 45>;
  else
    goto <bb 40>;

  <bb 40>:
  if (__d_141 < -2147483648)
    goto <bb 43>;
  else
    goto <bb 41>;

  <bb 41>:
  __r_142 = (int) _140;

  <bb 42>:
  # __r_143 = PHI <__r_139(38), __r_142(41)>
  # DEBUG __r => __r_143
  # DEBUG D#313 => {CLOBBER}
  # DEBUG __size => D#313
  # DEBUG D#314 => {CLOBBER}
  # DEBUG __osize => D#314
  if (__r_143 < 0)
    goto <bb 43>;
  else
    goto <bb 45>;

  <bb 43>:
  # DEBUG __r => NULL
  _102 = MEM[(struct _Rb_tree_node_base * *)_99 + 24B];
  # DEBUG D#18 => _99
  # DEBUG __x => D#18
  if (_102 == 0B)
    goto <bb 59>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 59>;

  <bb 45>:
  # DEBUG __r => NULL
  D.39951 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, int>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >::_M_get_insert_unique_pos (_7, &D.24353.first);
  SR.430_270 = MEM[(struct pair *)&D.39951];
  SR.431_269 = MEM[(struct pair *)&D.39951 + 8B];
  goto <bb 59>;

  <bb 46>:
  # DEBUG __r => NULL
  # DEBUG __x => __i$_M_node_389
  # DEBUG __x => __i$_M_node_389
  # DEBUG this => __i$_M_node_389
  # DEBUG D#129 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_389]._M_value_field
  # DEBUG __r => D#129
  # DEBUG __x => D#129
  # DEBUG this => D#57
  # DEBUG D#139 => &MEM[(struct _Rb_tree *)D#347]._M_impl._M_key_compare
  # DEBUG D#56 => D#139
  # DEBUG __x => D#281
  # DEBUG __y => &D.24353.first
  # DEBUG this => D#56
  # DEBUG __lhs => D#281
  # DEBUG __rhs => &D.24353.first
  # DEBUG this => D#281
  # DEBUG __str => &D.24353.first
  # DEBUG D#5 => D#281
  # DEBUG this => D#5
  # DEBUG __size => _122
  # DEBUG D#5 => &D.24353.first
  # DEBUG this => D#5
  # DEBUG __osize => _121
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#275
  # DEBUG this => &D.24353.first
  # DEBUG D#1 => &D.24353.first
  # DEBUG this => D#1
  # DEBUG D#1 => D#281
  # DEBUG this => D#1
  # DEBUG __s1 => _125
  # DEBUG __s2 => _126
  # DEBUG __n => D#275
  __r_151 = __builtin_memcmp (_125, _126, __len_382);
  # DEBUG __r => NULL
  if (__r_151 == 0)
    goto <bb 47>;
  else
    goto <bb 50>;

  <bb 47>:
  # DEBUG __n1 => _122
  # DEBUG __n2 => _121
  _152 = _122 - _121;
  __d_153 = (const difference_type) _152;
  # DEBUG __d => __d_153
  if (__d_153 > 2147483647)
    goto <bb 80>;
  else
    goto <bb 48>;

  <bb 48>:
  if (__d_153 < -2147483648)
    goto <bb 51>;
  else
    goto <bb 49>;

  <bb 49>:
  __r_154 = (int) _152;

  <bb 50>:
  # __r_155 = PHI <__r_151(46), __r_154(49)>
  # DEBUG __r => __r_155
  # DEBUG D#319 => {CLOBBER}
  # DEBUG __size => D#319
  # DEBUG D#320 => {CLOBBER}
  # DEBUG __osize => D#320
  if (__r_155 < 0)
    goto <bb 51>;
  else
    goto <bb 80>;

  <bb 51>:
  # DEBUG __r => NULL
  # DEBUG __after => __i$_M_node_389
  # DEBUG this => D#347
  _104 = MEM[(struct _Rb_tree_node_base * &)this_4(D) + 32];
  if (_104 == __i$_M_node_389)
    goto <bb 96>;
  else
    goto <bb 52>;

  <bb 52>:
  # DEBUG this => &__after
  _105 = std::_Rb_tree_increment (__i$_M_node_389);
  # DEBUG __after => _105
  # DEBUG __x => _105
  # DEBUG __x => _105
  # DEBUG this => _105
  # DEBUG D#129 => &MEM[(const struct _Rb_tree_node *)_105]._M_value_field
  # DEBUG __r => D#129
  # DEBUG __x => D#129
  # DEBUG this => D#57
  # DEBUG D#283 => &MEM[(const struct pair &)_105 + 32].first
  # DEBUG D#136 => &MEM[(struct _Rb_tree *)D#347]._M_impl._M_key_compare
  # DEBUG D#56 => D#136
  # DEBUG __x => &D.24353.first
  # DEBUG __y => D#283
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24353.first
  # DEBUG __rhs => D#283
  # DEBUG this => &D.24353.first
  # DEBUG __str => D#283
  # DEBUG D#5 => &D.24353.first
  # DEBUG this => D#5
  # DEBUG __size => _121
  _158 = MEM[(long unsigned int *)_105 + 40B];
  # DEBUG D#5 => D#283
  # DEBUG this => D#5
  # DEBUG __osize => _158
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_348 = MIN_EXPR <_121, _158>;
  # DEBUG __len => D#277
  # DEBUG this => D#283
  _161 = MEM[(char * *)_105 + 32B];
  # DEBUG D#1 => D#283
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24353.first
  # DEBUG this => D#1
  # DEBUG __s1 => _126
  # DEBUG __s2 => _161
  # DEBUG __n => D#277
  __r_163 = __builtin_memcmp (_126, _161, __len_348);
  # DEBUG __r => NULL
  if (__r_163 == 0)
    goto <bb 53>;
  else
    goto <bb 56>;

  <bb 53>:
  # DEBUG __n1 => _121
  # DEBUG __n2 => _158
  _164 = _121 - _158;
  __d_165 = (const difference_type) _164;
  # DEBUG __d => __d_165
  if (__d_165 > 2147483647)
    goto <bb 58>;
  else
    goto <bb 54>;

  <bb 54>:
  if (__d_165 < -2147483648)
    goto <bb 57>;
  else
    goto <bb 55>;

  <bb 55>:
  __r_166 = (int) _164;

  <bb 56>:
  # __r_167 = PHI <__r_163(52), __r_166(55)>
  # DEBUG __r => __r_167
  # DEBUG D#325 => {CLOBBER}
  # DEBUG __size => D#325
  # DEBUG D#326 => {CLOBBER}
  # DEBUG __osize => D#326
  if (__r_167 < 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG __r => NULL
  _108 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_389 + 24B];
  # DEBUG D#18 => __i$_M_node_389
  # DEBUG __x => D#18
  if (_108 == 0B)
    goto <bb 96>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG __r => NULL
  D.39951 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, int>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >::_M_get_insert_unique_pos (_7, &D.24353.first);
  SR.430_295 = MEM[(struct pair *)&D.39951];
  SR.431_294 = MEM[(struct pair *)&D.39951 + 8B];

  <bb 59>:
  # __res_318 = PHI <0B(30), SR.430_290(31), __i$_M_node_389(37), 0B(43), __i$_M_node_389(44), SR.430_270(45), _105(57), SR.430_295(58), 0B(28)>
  # __res$8_317 = PHI <_91(30), SR.431_289(31), __i$_M_node_389(37), _99(43), __i$_M_node_389(44), SR.431_269(45), _105(57), SR.431_294(58), _91(28)>
  # DEBUG D#135 => {CLOBBER}
  # DEBUG __pos => D#135
  # DEBUG __res => __res_318
  # DEBUG __res$8 => __res$8_317
  # DEBUG __res$first => __res_318
  # DEBUG __res$second => __res$8_317
  if (__res$8_317 != 0B)
    goto <bb 61>;
  else
    goto <bb 60>;

  <bb 60>:
  pretmp_347 = MEM[(char * *)&D.24353];
  goto <bb 80>;

  <bb 61>:
  # DEBUG D#190 => D#195
  # DEBUG this => D#347
  # DEBUG __x => __res_318
  # DEBUG __p => __res$8_317
  # DEBUG __v => &D.24353
  # DEBUG __node_gen => D#190
  # DEBUG D#189 => D#190
  # DEBUG this => D#347
  _333 = __i$_M_node_42 == __res$8_317;
  _345 = __res_318 != 0B;
  _366 = _333 | _345;
  if (_366 != 0)
    goto <bb 68>;
  else
    goto <bb 62>;

  <bb 62>:
  pretmp_280 = MEM[(long unsigned int *)&D.24353 + 8B];
  pretmp_398 = MEM[(long unsigned int *)__res$8_317 + 40B];
  pretmp_268 = MEM[(char * *)__res$8_317 + 32B];
  pretmp_45 = MEM[(char * *)&D.24353];
  pretmp_278 = MIN_EXPR <pretmp_280, pretmp_398>;
  _277 = __builtin_memcmp (pretmp_45, pretmp_268, pretmp_278);

  <bb 63>:
  # __res$8_383 = PHI <__res$8_317(62), __i$_M_node_389(96)>
  # prephitmp_279 = PHI <pretmp_280(62), _121(96)>
  # prephitmp_397 = PHI <pretmp_398(62), _122(96)>
  # prephitmp_284 = PHI <_277(62), __r_127(96)>
  # DEBUG D#190 => D#195
  # DEBUG this => D#347
  # DEBUG __x => NULL
  # DEBUG __p => __res$8_383
  # DEBUG __v => &D.24353
  # DEBUG __node_gen => D#190
  # DEBUG D#189 => D#190
  # DEBUG this => D#347
  # DEBUG __x => __res$8_383
  # DEBUG __x => __res$8_383
  # DEBUG this => __res$8_383
  # DEBUG D#129 => &MEM[(const struct _Rb_tree_node *)__res$8_383]._M_value_field
  # DEBUG __r => D#129
  # DEBUG __x => D#129
  # DEBUG this => D#57
  # DEBUG D#284 => &MEM[(const struct pair &)__res$8_383 + 32].first
  # DEBUG __x => &D.24353
  # DEBUG this => D#57
  # DEBUG D#188 => &MEM[(struct _Rb_tree *)D#347]._M_impl._M_key_compare
  # DEBUG D#56 => D#188
  # DEBUG __x => NULL
  # DEBUG __y => D#284
  # DEBUG this => D#56
  # DEBUG __lhs => NULL
  # DEBUG __rhs => D#284
  # DEBUG this => &D.24353.first
  # DEBUG __str => D#284
  # DEBUG D#338 => MEM[(long unsigned int *)&D.24353 + 8B]
  # DEBUG D#5 => &D.24353.first
  # DEBUG this => D#5
  # DEBUG __size => D#338
  # DEBUG D#337 => MEM[(long unsigned int *)__res$8_383 + 40B]
  # DEBUG D#5 => D#284
  # DEBUG this => D#5
  # DEBUG __osize => D#337
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#274
  # DEBUG this => D#284
  # DEBUG D#336 => MEM[(char * *)__res$8_383 + 32B]
  # DEBUG D#1 => D#284
  # DEBUG this => D#1
  # DEBUG D#335 => MEM[(char * *)&D.24353]
  # DEBUG D#1 => &D.24353.first
  # DEBUG this => D#1
  # DEBUG __s1 => D#335
  # DEBUG __s2 => D#336
  # DEBUG __n => D#274
  # DEBUG __r => NULL
  if (prephitmp_284 == 0)
    goto <bb 64>;
  else
    goto <bb 67>;

  <bb 64>:
  # DEBUG __n1 => D#338
  # DEBUG __n2 => D#337
  _186 = prephitmp_279 - prephitmp_397;
  __d_187 = (const difference_type) _186;
  # DEBUG __d => __d_187
  if (__d_187 > 2147483647)
    goto <bb 68>;
  else
    goto <bb 65>;

  <bb 65>:
  if (__d_187 < -2147483648)
    goto <bb 68>;
  else
    goto <bb 66>;

  <bb 66>:
  __r_188 = (int) _186;

  <bb 67>:
  # __r_189 = PHI <prephitmp_284(63), __r_188(66)>

  <bb 103>:
  # DEBUG __r => __r_189
  # DEBUG D#331 => {CLOBBER}
  # DEBUG __size => D#331
  # DEBUG D#332 => {CLOBBER}
  # DEBUG __osize => D#332
  __insert_left_373 = __r_189 < 0;

  <bb 68>:
  # __insert_left_175 = PHI <1(65), 1(61), __insert_left_373(103), 0(64)>
  # __res$8_395 = PHI <__res$8_383(65), __res$8_317(61), __res$8_383(103), __res$8_383(64)>
  # DEBUG __insert_left => __insert_left_175
  # DEBUG D#187 => D#189
  # DEBUG __arg => &D.24353
  # DEBUG this => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#185 => D#186->_M_t
  # DEBUG D#184 => D#185
  # DEBUG __x => &D.24353
  # DEBUG this => D#184
  # DEBUG D#183 => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#182
  # DEBUG this => D#181
  # DEBUG D#180 => D#181
  # DEBUG this => D#180
  # DEBUG __n => 1
  # DEBUG __a => D#179
  # DEBUG D#178 => D#179
  # DEBUG D#176 => D#178
  # DEBUG D#177 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#176
  # DEBUG D.40043 => D#177
  # DEBUG D#175 => D#176
  # DEBUG D#174 => D#175
  # DEBUG this => D#174
  _173 = operator new (72);

  <bb 69>:
  # DEBUG __tmp => _173
  # DEBUG D#168 => D#183
  # DEBUG __node => _173
  # DEBUG __x => &D.24353
  # DEBUG this => D#168
  # DEBUG D#167 => D#168
  # DEBUG D#166 => D#168
  # DEBUG this => _173
  # DEBUG D#346 => &_173->_M_value_field
  # DEBUG __r => D#346
  # DEBUG D#102 => D#166
  # DEBUG this => D#102
  # DEBUG D#101 => D#102
  # DEBUG this => D#101
  # DEBUG this => NULL
  # DEBUG D.29031 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#346
  # DEBUG __val => &D.24353
  # DEBUG this => D#165
  # DEBUG D#8 => 40
  # DEBUG __p => D#346
  # DEBUG D.30146 => D#8
  # DEBUG this => D#346
  # DEBUG D.40087 => &D.24353
  # DEBUG D#164 => &D.24353.first
  # DEBUG this => D#346
  # DEBUG __str => D#164
  # DEBUG this => D#164
  # DEBUG D#145 => &D#164->_M_dataplus
  # DEBUG this => D#346
  _193 = &MEM[(struct basic_string *)_173 + 32B].D.11539._M_local_buf;
  # DEBUG D#146 => &MEM[(struct basic_string *)D#346]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => _193
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)_173 + 32B]._M_p = _193;
  _194 = MEM[(char * *)&D.24353];
  # DEBUG D#1 => D#164
  # DEBUG this => D#1
  _195 = MEM[(long unsigned int *)&D.24353 + 8B];
  # DEBUG D#2 => D#164
  # DEBUG this => D#2
  _196 = _194 + _195;
  # DEBUG D#1 => D#164
  # DEBUG this => D#1
  # DEBUG this => D#346
  # DEBUG __beg => _194
  # DEBUG __end => _196
  # DEBUG this => D#346
  # DEBUG __beg => _194
  # DEBUG __end => _196
  # DEBUG this => D#346
  # DEBUG __beg => _194
  # DEBUG __end => _196
  # DEBUG __ptr => _194
  _368 = _196 != 0B;
  _349 = _194 == 0B;
  _371 = _349 & _368;
  if (_371 != 0)
    goto <bb 93>;
  else
    goto <bb 95>;

  <bb 70>:
  _191 = &_173->_M_value_field;
  _204 = std::__cxx11::basic_string<char>::_M_create (_191, &__dnew, 0);

  <bb 71>:
  # DEBUG D#3 => D#346
  # DEBUG __p => _204
  # DEBUG this => D#3
  MEM[(char * *)_173 + 32B] = _204;
  __dnew.12_205 = __dnew;
  # DEBUG D#4 => D#346
  # DEBUG __capacity => __dnew.12_205
  # DEBUG this => D#4
  MEM[(size_type *)_173 + 48B] = __dnew.12_205;
  # DEBUG D#1 => D#346
  # DEBUG this => D#1
  # DEBUG __p => _204
  # DEBUG __k1 => _194
  # DEBUG __k2 => _196
  # DEBUG __d => _204
  # DEBUG __s => _194
  # DEBUG __n => _195
  goto <bb 74>;

  <bb 72>:
  # DEBUG D#1 => D#346
  # DEBUG this => D#1
  # DEBUG __p => _193
  # DEBUG __k1 => _194
  # DEBUG __k2 => _196
  # DEBUG __d => _193
  # DEBUG __s => _194
  # DEBUG __n => _195
  if (_195 == 1)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  _207 = MEM[(const char_type &)_194];
  # DEBUG D#7 => _194
  # DEBUG __c1 => _193
  # DEBUG __c2 => D#7
  MEM[(char_type &)_193] = _207;
  goto <bb 75>;

  <bb 74>:
  # _156 = PHI <_193(72), _204(71)>
  # DEBUG D#1 => D#346
  # DEBUG this => D#1
  # DEBUG __p => _156
  # DEBUG __k1 => _194
  # DEBUG __k2 => _196
  # DEBUG __d => _156
  # DEBUG __s => _194
  # DEBUG __n => _195
  # DEBUG __s1 => _156
  # DEBUG __s2 => _194
  # DEBUG __n => _195
  __builtin_memcpy (_156, _194, _195);
  pretmp_286 = __dnew;
  pretmp_316 = MEM[(char * *)_173 + 32B];

  <bb 75>:
  # prephitmp_95 = PHI <_195(73), pretmp_286(74)>
  # prephitmp_291 = PHI <_193(73), pretmp_316(74)>
  # DEBUG D#334 => __dnew
  # DEBUG this => D#346
  # DEBUG __n => D#334
  # DEBUG D#6 => D#346
  # DEBUG __length => D#334
  # DEBUG this => D#6
  MEM[(size_type *)_173 + 40B] = prephitmp_95;
  # DEBUG D#1 => D#346
  # DEBUG this => D#1
  _210 = prephitmp_291 + prephitmp_95;
  # DEBUG __c1 => _210
  # DEBUG __c2 => D#7
  MEM[(char_type &)_210] = 0;
  __dnew ={v} {CLOBBER};
  _197 = D.24353.second;
  MEM[(struct pair *)_173 + 32B].second = _197;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _173
  _176 = (int) __insert_left_175;
  std::_Rb_tree_insert_and_rebalance (_176, _173, __res$8_395, __i$_M_node_42);
  _177 = MEM[(struct _Rb_tree *)this_4(D)]._M_impl._M_node_count;
  _178 = _177 + 1;
  MEM[(struct _Rb_tree *)this_4(D)]._M_impl._M_node_count = _178;
  # DEBUG this => NULL
  # DEBUG __x => _173
  pretmp_385 = MEM[(char * *)&D.24353];
  goto <bb 81>;

<L26>:

<L22>:
  _198 = __builtin_eh_pointer (11);
  __cxa_begin_catch (_198);
  # DEBUG D#74 => D#167
  # DEBUG __p => _173
  # DEBUG this => D#74
  # DEBUG D#73 => D#74
  # DEBUG this => D#73
  # DEBUG D#72 => 1
  # DEBUG __p => _173
  # DEBUG __a => D#71
  # DEBUG __n => D#72
  # DEBUG D#70 => D#72
  # DEBUG D#69 => D#71
  # DEBUG D#67 => D#69
  # DEBUG D#68 => D#70
  # DEBUG __p => _173
  # DEBUG this => D#67
  # DEBUG D.40081 => D#68
  operator delete (_173);
  __cxa_rethrow ();

<L24>:
  __cxa_end_catch ();
  resx 12

<L27>:
  goto <bb 86> (<L19>);

  <bb 80>:
  # __res_403 = PHI <__res_318(60), __i$_M_node_389(47), 0B(96), __i$_M_node_389(50)>
  # prephitmp_287 = PHI <pretmp_347(60), _126(47), _126(96), _126(50)>

  <bb 102>:
  # DEBUG D#135 => {CLOBBER}
  # DEBUG __pos => D#135
  # DEBUG __res => __res_403
  # DEBUG __res$8 => NULL
  # DEBUG __res$first => __res_403
  # DEBUG __res$second => NULL
  # DEBUG this => NULL
  # DEBUG __x => __res_403

  <bb 81>:
  # SR.429_319 = PHI <_173(75), __res_403(102)>
  # prephitmp_232 = PHI <pretmp_385(75), prephitmp_287(102)>
  # DEBUG D#193 => {CLOBBER}
  # DEBUG __res$first => D#193
  # DEBUG D#194 => {CLOBBER}
  # DEBUG __res$second => D#194
  # DEBUG __i$_M_node => SR.429_319
  # DEBUG this => &D.24353
  # DEBUG D#50 => &D.24353.first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG D#333 => MEM[(char * *)&D.24353]
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  if (&MEM[(const struct basic_string *)&D.24353].D.11539._M_local_buf != prephitmp_232)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#333
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#333
  # DEBUG this => D#38
  # DEBUG D.30700 => D#39
  operator delete (prephitmp_232);

  <bb 83>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24353 ={v} {CLOBBER};

  <bb 84>:
  # __i$_M_node_14 = PHI <__i$_M_node_401(15), SR.429_319(83), __i$_M_node_401(18)>

  <bb 101>:
  # DEBUG __i$_M_node => __i$_M_node_14
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_14
  # DEBUG D#198 => &MEM[(struct _Rb_tree_node *)__i$_M_node_14]._M_value_field
  # DEBUG __r => D#198
  _15 = &MEM[(struct pair &)__i$_M_node_14 + 32].second;
  # DEBUG D#200 => {CLOBBER}
  # DEBUG __i$_M_node => D#200
  return _15;

<L25>:

<L19>:
  # DEBUG this => &D.24353
  # DEBUG D#50 => &D.24353.first
  # DEBUG this => D#50
  # DEBUG this => D#50
  # DEBUG this => D#50
  _20 = MEM[(char * *)&D.24353];
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  if (&MEM[(const struct basic_string *)&D.24353].D.11539._M_local_buf != _20)
    goto <bb 87>;
  else
    goto <bb 88>;

  <bb 87>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#50].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#50
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#50
  # DEBUG this => D#1
  # DEBUG this => D#50
  # DEBUG D#44 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _20
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _20
  # DEBUG this => D#38
  # DEBUG D.30719 => D#39
  operator delete (_20);

  <bb 88>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#50]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24353 ={v} {CLOBBER};
  resx 7

  <bb 89>:
  pretmp_168 = MEM[(long unsigned int *)__k_5(D) + 8B];
  pretmp_329 = MEM[(char * *)__k_5(D)];

  <bb 90>:
  # __i$_M_node_392 = PHI <__i$_M_node_401(97), __i$_M_node_401(18), __i$_M_node_42(89)>
  # prephitmp_321 = PHI <pretmp_39(97), pretmp_39(18), pretmp_168(89)>
  # prephitmp_137 = PHI <pretmp_41(97), pretmp_41(18), pretmp_329(89)>

  <bb 100>:
  goto <bb 19>;

  <bb 91>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 92>:
  # DEBUG __first => D#341
  # DEBUG __last => _19
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => D#341
  # DEBUG __last => _19
  __dnew = prephitmp_376;
  if (prephitmp_376 > 15)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 93>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L28>:
  goto <bb 77> (<L22>);

  <bb 95>:
  # DEBUG __first => _194
  # DEBUG __last => _196
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => _194
  # DEBUG __last => _196
  __dnew = _195;
  if (_195 > 15)
    goto <bb 70>;
  else
    goto <bb 72>;

  <bb 96>:
  # DEBUG D#135 => {CLOBBER}
  # DEBUG __pos => D#135
  # DEBUG __res => 0B
  # DEBUG __res$8 => __i$_M_node_389
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __i$_M_node_389
  if (__i$_M_node_389 != 0B)
    goto <bb 63>;
  else
    goto <bb 80>;

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_, funcdef_no=1496, decl_uid=22221, cgraph_uid=600, symbol_order=600)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_tree * const this, const struct key_type & __k)
{
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.40205;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.40190;
  struct _Rb_tree_node_base * const __j$_M_node;
  bool __comp;
  struct _Rb_tree_node_base * const D.25915;
  struct _Rb_tree_node_base * const D.25916;
  struct pair D.27019;
  const size_type pretmp_1;
  char * const prephitmp_13;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node_base * _24;
  const size_type _34;
  char * const _37;
  long unsigned int _40;
  char * const pretmp_44;
  long unsigned int _52;
  const size_type prephitmp_61;
  char * const pretmp_64;
  char * const prephitmp_65;
  const size_type pretmp_67;
  const size_type pretmp_76;
  const size_type prephitmp_77;
  const size_type prephitmp_78;
  const size_type pretmp_79;
  char * const pretmp_80;
  char * const _83;
  const size_type _84;

  <bb 2>:
  _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
  # DEBUG D#13 => this_9(D)
  # DEBUG this => D#13
  # DEBUG __x => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#375 => &this_9(D)->_M_impl._M_header
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => D#375
  # DEBUG __x => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = &this_9(D)->_M_impl._M_header;
  goto <bb 15>;

  <bb 4>:
  pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_44 = MEM[(char * *)__k_12(D)];
  goto <bb 7>;

  <bb 5>:
  # _6 = PHI <_22(27), _23(28)>
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __comp => __comp_56
  # DEBUG __y => _10
  # DEBUG __x => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # _10 = PHI <_21(4), _6(6)>
  # DEBUG __comp => 1
  # DEBUG __x => _10
  # DEBUG __y => _10
  # DEBUG __x => _10
  # DEBUG __x => _10
  # DEBUG this => _10
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#355 => &MEM[(const struct pair &)_10 + 32].first
  # DEBUG D#155 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#56 => D#155
  # DEBUG __x => __k_12(D)
  # DEBUG __y => D#355
  # DEBUG this => D#56
  # DEBUG __lhs => __k_12(D)
  # DEBUG __rhs => D#355
  # DEBUG this => __k_12(D)
  # DEBUG __str => D#355
  # DEBUG D#374 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#5 => __k_12(D)
  # DEBUG this => D#5
  # DEBUG __size => D#374
  _34 = MEM[(long unsigned int *)_10 + 40B];
  # DEBUG D#5 => D#355
  # DEBUG this => D#5
  # DEBUG __osize => _34
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __len => D#353
  # DEBUG this => D#355
  _37 = MEM[(char * *)_10 + 32B];
  # DEBUG D#1 => D#355
  # DEBUG this => D#1
  # DEBUG D#373 => MEM[(char * *)__k_12(D)]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG __s1 => D#373
  # DEBUG __s2 => _37
  # DEBUG __n => D#353
  __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
  # DEBUG __r => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => D#374
  # DEBUG __n2 => _34
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_type) _40;
  # DEBUG __d => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_42 = (int) _40;

  <bb 11>:
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __r => __r_43
  # DEBUG D#361 => {CLOBBER}
  # DEBUG __size => D#361
  # DEBUG D#362 => {CLOBBER}
  # DEBUG __osize => D#362
  # DEBUG __comp => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __comp => 1
  _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
  # DEBUG D#21 => _10
  # DEBUG __x => D#21
  goto <bb 5>;

  <bb 13>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG __comp => 0
  _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
  # DEBUG D#20 => _10
  # DEBUG __x => D#20
  goto <bb 5>;

  <bb 14>:
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # _83 = PHI <_37(5)>
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>

  <bb 26>:
  # DEBUG this => &__j
  # DEBUG __x => _85
  # DEBUG __j$_M_node => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG this => &__j
  # DEBUG __x => _57
  # DEBUG __j$_M_node => _57
  _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
  # DEBUG D#124 => this_9(D)
  # DEBUG this => D#124
  # DEBUG this => NULL
  # DEBUG __x => _24
  # DEBUG this => &__j
  # DEBUG __x => &D.25914
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &D.25917
  # DEBUG __a => &D.25915
  # DEBUG __b => &D.25916
  MEM[(struct pair *)&D.27019] = 0B;
  MEM[(struct pair *)&D.27019 + 8B] = _57;
  goto <bb 25>;

  <bb 17>:
  # DEBUG this => &__j
  __j$_M_node_25 = std::_Rb_tree_decrement (_57);
  # DEBUG __j$_M_node => __j$_M_node_25
  pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_80 = MEM[(char * *)__k_12(D)];
  pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
  pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  <bb 18>:
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_node => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG this => __j$_M_node_20
  # DEBUG D#152 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
  # DEBUG __r => D#152
  # DEBUG __x => D#152
  # DEBUG this => D#58
  # DEBUG D#356 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
  # DEBUG D#154 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#56 => D#154
  # DEBUG __x => D#356
  # DEBUG __y => __k_12(D)
  # DEBUG this => D#56
  # DEBUG __lhs => D#356
  # DEBUG __rhs => __k_12(D)
  # DEBUG this => D#356
  # DEBUG __str => __k_12(D)
  # DEBUG D#372 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
  # DEBUG D#5 => D#356
  # DEBUG this => D#5
  # DEBUG __size => D#372
  # DEBUG D#371 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#5 => __k_12(D)
  # DEBUG this => D#5
  # DEBUG __osize => D#371
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#354
  # DEBUG this => __k_12(D)
  # DEBUG D#370 => MEM[(char * *)__k_12(D)]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG D#369 => MEM[(char * *)__j$_M_node_20 + 32B]
  # DEBUG D#1 => D#356
  # DEBUG this => D#1
  # DEBUG __s1 => D#369
  # DEBUG __s2 => D#370
  # DEBUG __n => D#354
  __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __r => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG __n1 => D#372
  # DEBUG __n2 => D#371
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_type) _52;
  # DEBUG __d => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;

  <bb 20>:
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 21>:
  __r_54 = (int) _52;

  <bb 22>:
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __r => __r_55
  # DEBUG D#367 => {CLOBBER}
  # DEBUG __size => D#367
  # DEBUG D#368 => {CLOBBER}
  # DEBUG __osize => D#368
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:

  <bb 31>:
  # DEBUG __r => NULL
  # DEBUG this => &D.25920
  # DEBUG __a => &D.25918
  # DEBUG __b => &D.25919
  MEM[(struct pair *)&D.27019] = 0B;
  MEM[(struct pair *)&D.27019 + 8B] = _5;
  goto <bb 25>;

  <bb 24>:

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG this => &D.25922
  # DEBUG __a => &__j._M_node
  # DEBUG __b => &D.25921
  MEM[(struct pair *)&D.27019] = __j$_M_node_20;
  MEM[(struct pair *)&D.27019 + 8B] = 0B;

  <bb 25>:

  <bb 29>:
  # DEBUG D#153 => {CLOBBER}
  # DEBUG __j$_M_node => D#153
  return D.27019;

}



;; Function std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Tp = double; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type = double; std::map<_Key, _Tp, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdSt4lessIS5_ESaISt4pairIKS5_dEEEixERS9_, funcdef_no=1259, decl_uid=22574, cgraph_uid=366, symbol_order=366)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Tp = double; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type = double; std::map<_Key, _Tp, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct map * const this, const struct key_type & __k)
{
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.40628;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.40613;
  struct iterator D.40598;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.31015;
  struct iterator D.30975;
  struct value_type D.24498;
  struct _Rep_type * _7;
  char * const _10;
  mapped_type & _15;
  char * _19;
  char * const _20;
  const size_type _22;
  char * const prephitmp_26;
  char * const pretmp_31;
  char * const prephitmp_32;
  const size_type prephitmp_33;
  char * const prephitmp_34;
  size_type pretmp_35;
  const size_type pretmp_40;
  const size_type prephitmp_41;
  char * const _56;
  long unsigned int _58;
  const size_type _64;
  char * const _67;
  long unsigned int _70;
  bool _74;
  char * const pretmp_79;
  char * _80;
  long unsigned int __dnew.12_81;
  const char_type _83;
  char * _86;
  const size_type pretmp_90;
  size_type prephitmp_91;
  char * const pretmp_92;
  bool _128;
  char * const _129;
  bool _130;

  <bb 2>:
  # DEBUG this => this_4(D)
  # DEBUG __x => __k_5(D)
  # DEBUG D#458 => &this_4(D)->_M_t
  # DEBUG this => D#458
  # DEBUG __k => __k_5(D)
  # DEBUG this => D#458
  __i$_M_node_42 = &MEM[(struct _Rb_tree *)this_4(D)]._M_impl._M_header;
  __i$_M_node_43 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 16B];
  # DEBUG D#13 => D#458
  # DEBUG this => D#13
  # DEBUG D#151 => D#458
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => __k_5(D)
  # DEBUG __y => __i$_M_node_42
  # DEBUG __x => __i$_M_node_43
  if (__i$_M_node_43 == 0B)
    goto <bb 32>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_90 = MEM[(long unsigned int *)__k_5(D) + 8B];
  pretmp_79 = MEM[(char * *)__k_5(D)];
  goto <bb 6>;

  <bb 4>:
  # __i$_M_node_51 = PHI <__i$_M_node_47(38), __i$_M_node_48(37)>
  # __i$_M_node_50 = PHI <__i$_M_node_6(38), __i$_M_node_112(37)>
  # DEBUG __y => __i$_M_node_50
  # DEBUG __x => __i$_M_node_51
  if (__i$_M_node_51 == 0B)
    goto <bb 13>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __i$_M_node_6 = PHI <__i$_M_node_43(3), __i$_M_node_51(5)>
  # __i$_M_node_112 = PHI <__i$_M_node_42(3), __i$_M_node_50(5)>
  # DEBUG __y => __i$_M_node_112
  # DEBUG __x => __i$_M_node_6
  # DEBUG __x => __i$_M_node_6
  # DEBUG __x => __i$_M_node_6
  # DEBUG this => __i$_M_node_6
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_6]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#437 => &MEM[(const struct pair &)__i$_M_node_6 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#437
  # DEBUG __y => __k_5(D)
  # DEBUG this => D#56
  # DEBUG __lhs => D#437
  # DEBUG __rhs => __k_5(D)
  # DEBUG this => D#437
  # DEBUG __str => __k_5(D)
  _22 = MEM[(long unsigned int *)__i$_M_node_6 + 40B];
  # DEBUG D#5 => D#437
  # DEBUG this => D#5
  # DEBUG __size => _22
  # DEBUG D#457 => MEM[(long unsigned int *)__k_5(D) + 8B]
  # DEBUG D#5 => __k_5(D)
  # DEBUG this => D#5
  # DEBUG __osize => D#457
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_132 = MIN_EXPR <_22, pretmp_90>;
  # DEBUG __len => D#435
  # DEBUG this => __k_5(D)
  # DEBUG D#456 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  _56 = MEM[(char * *)__i$_M_node_6 + 32B];
  # DEBUG D#1 => D#437
  # DEBUG this => D#1
  # DEBUG __s1 => _56
  # DEBUG __s2 => D#456
  # DEBUG __n => D#435
  __r_57 = __builtin_memcmp (_56, pretmp_79, __len_132);
  # DEBUG __r => NULL
  if (__r_57 == 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  # DEBUG __n1 => _22
  # DEBUG __n2 => D#457
  _58 = _22 - pretmp_90;
  __d_59 = (const difference_type) _58;
  # DEBUG __d => __d_59
  if (__d_59 > 2147483647)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  if (__d_59 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  __r_60 = (int) _58;

  <bb 10>:
  # __r_61 = PHI <__r_57(6), __r_60(9)>
  # DEBUG __r => __r_61
  # DEBUG D#443 => {CLOBBER}
  # DEBUG __size => D#443
  # DEBUG D#444 => {CLOBBER}
  # DEBUG __osize => D#444
  if (__r_61 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:

  <bb 38>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_6
  __i$_M_node_47 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_6 + 16B];
  # DEBUG D#21 => __i$_M_node_6
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 12>:

  <bb 37>:
  # DEBUG __r => NULL
  __i$_M_node_48 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_6 + 24B];
  # DEBUG D#20 => __i$_M_node_6
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 13>:
  # __i$_M_node_139 = PHI <__i$_M_node_50(4)>

  <bb 36>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_139
  # DEBUG __i$_M_node => __i$_M_node_139
  # DEBUG this => this_4(D)
  # DEBUG D#37 => &this_4(D)->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_42
  # DEBUG this => &__i
  # DEBUG __x => &D.24433
  if (__i$_M_node_42 == __i$_M_node_139)
    goto <bb 33>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_139
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_139]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#438 => &MEM[(struct pair &)__i$_M_node_139 + 32].first
  # DEBUG D#29 => this_4(D)
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG D#56 => &D.24487
  # DEBUG __x => __k_5(D)
  # DEBUG __y => D#438
  # DEBUG this => D#56
  # DEBUG __lhs => __k_5(D)
  # DEBUG __rhs => D#438
  # DEBUG this => __k_5(D)
  # DEBUG __str => D#438
  # DEBUG D#455 => MEM[(long unsigned int *)__k_5(D) + 8B]
  # DEBUG D#5 => __k_5(D)
  # DEBUG this => D#5
  # DEBUG __size => D#455
  _64 = MEM[(long unsigned int *)__i$_M_node_139 + 40B];
  # DEBUG D#5 => D#438
  # DEBUG this => D#5
  # DEBUG __osize => _64
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_133 = MIN_EXPR <_64, pretmp_90>;
  # DEBUG __len => D#436
  # DEBUG this => D#438
  _67 = MEM[(char * *)__i$_M_node_139 + 32B];
  # DEBUG D#1 => D#438
  # DEBUG this => D#1
  # DEBUG D#454 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG __s1 => D#454
  # DEBUG __s2 => _67
  # DEBUG __n => D#436
  __r_69 = __builtin_memcmp (pretmp_79, _67, __len_133);
  # DEBUG __r => NULL
  if (__r_69 == 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # DEBUG __n1 => D#455
  # DEBUG __n2 => _64
  _70 = pretmp_90 - _64;
  __d_71 = (const difference_type) _70;
  # DEBUG __d => __d_71
  if (__d_71 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 16>;

  <bb 16>:
  if (__d_71 < -2147483648)
    goto <bb 19>;
  else
    goto <bb 17>;

  <bb 17>:
  __r_72 = (int) _70;

  <bb 18>:
  # __r_73 = PHI <__r_69(14), __r_72(17)>
  # DEBUG __r => __r_73
  # DEBUG D#449 => {CLOBBER}
  # DEBUG __size => D#449
  # DEBUG D#450 => {CLOBBER}
  # DEBUG __osize => D#450
  if (__r_73 < 0)
    goto <bb 33>;
  else
    goto <bb 28>;

  <bb 19>:
  # __i$_M_node_49 = PHI <__i$_M_node_139(16), __i$_M_node_44(39)>
  # prephitmp_33 = PHI <pretmp_90(16), prephitmp_41(39)>
  # prephitmp_34 = PHI <pretmp_79(16), prephitmp_32(39)>
  # DEBUG this => &D.24498
  # DEBUG __a => __k_5(D)
  # DEBUG __b => &D.24497
  # DEBUG this => &D.24498.first
  # DEBUG __str => __k_5(D)
  # DEBUG this => __k_5(D)
  # DEBUG D#145 => &MEM[(const struct basic_string *)__k_5(D)]._M_dataplus
  # DEBUG this => &D.24498.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.24498]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.24498].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24498]._M_p = &MEM[(struct basic_string *)&D.24498].D.11539._M_local_buf;
  # DEBUG D#453 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG D#452 => MEM[(long unsigned int *)__k_5(D) + 8B]
  # DEBUG D#2 => __k_5(D)
  # DEBUG this => D#2
  _19 = prephitmp_34 + prephitmp_33;
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG this => &D.24498.first
  # DEBUG __beg => D#453
  # DEBUG __end => _19
  # DEBUG this => &D.24498.first
  # DEBUG __beg => D#453
  # DEBUG __end => _19
  # DEBUG this => &D.24498.first
  # DEBUG __beg => D#453
  # DEBUG __end => _19
  # DEBUG __ptr => D#453
  _74 = _19 != 0B;
  _128 = prephitmp_34 == 0B;
  _130 = _74 & _128;
  if (_130 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 20>:
  _80 = std::__cxx11::basic_string<char>::_M_create (&D.24498.first, &__dnew, 0);
  # DEBUG D#3 => &D.24498.first
  # DEBUG __p => _80
  # DEBUG this => D#3
  MEM[(char * *)&D.24498] = _80;
  __dnew.12_81 = __dnew;
  # DEBUG D#4 => &D.24498.first
  # DEBUG __capacity => __dnew.12_81
  # DEBUG this => D#4
  MEM[(size_type *)&D.24498 + 16B] = __dnew.12_81;
  # DEBUG D#1 => &D.24498.first
  # DEBUG this => D#1
  # DEBUG __p => _80
  # DEBUG __k1 => D#453
  # DEBUG __k2 => _19
  # DEBUG __d => _80
  # DEBUG __s => D#453
  # DEBUG __n => D#452
  goto <bb 23>;

  <bb 21>:
  # DEBUG D#1 => &D.24498.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.24498].D.11539._M_local_buf
  # DEBUG __k1 => D#453
  # DEBUG __k2 => _19
  # DEBUG __d => &MEM[(struct basic_string *)&D.24498].D.11539._M_local_buf
  # DEBUG __s => D#453
  # DEBUG __n => D#452
  if (prephitmp_33 == 1)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _83 = MEM[(const char_type &)prephitmp_34];
  # DEBUG D#7 => D#453
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.24498].D.11539._M_local_buf
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24498 + 16] = _83;
  goto <bb 24>;

  <bb 23>:
  # _129 = PHI <&MEM[(struct basic_string *)&D.24498].D.11539._M_local_buf(21), _80(20)>
  # DEBUG D#1 => &D.24498.first
  # DEBUG this => D#1
  # DEBUG __p => _129
  # DEBUG __k1 => D#453
  # DEBUG __k2 => _19
  # DEBUG __d => _129
  # DEBUG __s => D#453
  # DEBUG __n => D#452
  # DEBUG __s1 => _129
  # DEBUG __s2 => D#453
  # DEBUG __n => D#452
  __builtin_memcpy (_129, prephitmp_34, prephitmp_33);
  pretmp_35 = __dnew;
  pretmp_92 = MEM[(char * *)&D.24498];

  <bb 24>:
  # prephitmp_91 = PHI <prephitmp_33(22), pretmp_35(23)>
  # prephitmp_26 = PHI <&MEM[(struct basic_string *)&D.24498].D.11539._M_local_buf(22), pretmp_92(23)>
  # DEBUG D#451 => __dnew
  # DEBUG this => &D.24498.first
  # DEBUG __n => D#451
  # DEBUG D#6 => &D.24498.first
  # DEBUG __length => D#451
  # DEBUG this => D#6
  MEM[(size_type *)&D.24498 + 8B] = prephitmp_91;
  # DEBUG D#1 => &D.24498.first
  # DEBUG this => D#1
  _86 = prephitmp_26 + prephitmp_91;
  # DEBUG __c1 => _86
  # DEBUG __c2 => D#7
  MEM[(char_type &)_86] = 0;
  __dnew ={v} {CLOBBER};
  D.24498.second = 0.0;
  # DEBUG this => this_4(D)
  # DEBUG __position$_M_node => __i$_M_node_49
  # DEBUG __x => &D.24498
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => D#458
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_49;
  # DEBUG __x => &D.24498
  # DEBUG this => &__an
  # DEBUG __t => D#458
  # DEBUG __an$_M_t => D#458
  # DEBUG D#223 => &__an
  _7 = &this_4(D)->_M_t;
  D.31015 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_7, __pos, &D.24498);

  <bb 25>:
  __i$_M_node_24 = MEM[(struct _Rb_tree_iterator *)&D.31015];
  # DEBUG __i$_M_node => __i$_M_node_24
  # DEBUG this => &D.24498
  # DEBUG D#49 => &D.24498.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _10 = MEM[(char * *)&D.24498];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.24498].D.11539._M_local_buf != _10)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _10
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _10
  # DEBUG this => D#38
  # DEBUG D.31026 => D#39
  operator delete (_10);

  <bb 27>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24498 ={v} {CLOBBER};

  <bb 28>:
  # __i$_M_node_14 = PHI <__i$_M_node_139(15), __i$_M_node_24(27), __i$_M_node_139(18)>

  <bb 40>:
  # DEBUG __i$_M_node => __i$_M_node_14
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_14
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_14]._M_value_field
  # DEBUG __r => D#225
  _15 = &MEM[(struct pair &)__i$_M_node_14 + 32].second;
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  return _15;

<L19>:
  # DEBUG this => &D.24498
  # DEBUG D#49 => &D.24498.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _20 = MEM[(char * *)&D.24498];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.24498].D.11539._M_local_buf != _20)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _20
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _20
  # DEBUG this => D#38
  # DEBUG D.31045 => D#39
  operator delete (_20);

  <bb 31>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24498 ={v} {CLOBBER};
  resx 7

  <bb 32>:
  pretmp_40 = MEM[(long unsigned int *)__k_5(D) + 8B];
  pretmp_31 = MEM[(char * *)__k_5(D)];

  <bb 33>:
  # __i$_M_node_44 = PHI <__i$_M_node_139(36), __i$_M_node_139(18), __i$_M_node_42(32)>
  # prephitmp_41 = PHI <pretmp_90(36), pretmp_90(18), pretmp_40(32)>
  # prephitmp_32 = PHI <pretmp_79(36), pretmp_79(18), pretmp_31(32)>

  <bb 39>:
  goto <bb 19>;

  <bb 34>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 35>:
  # DEBUG __first => D#453
  # DEBUG __last => _19
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => D#453
  # DEBUG __last => _19
  __dnew = prephitmp_33;
  if (prephitmp_33 > 15)
    goto <bb 20>;
  else
    goto <bb 21>;

}



;; Function PowerConfig::PowerConfig() (_ZN11PowerConfigC2Ev, funcdef_no=1219, decl_uid=22863, cgraph_uid=323, symbol_order=323)

Trying loop 14 as candidate
loop 14 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PowerConfig::PowerConfig() (struct PowerConfig * const this)
{
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.49661;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.49646;
  struct iterator D.49631;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.49611;
  struct iterator D.49610;
  struct value_type D.49609;
  mapped_type & D.49608;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.49465;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.49450;
  struct iterator D.49435;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.49415;
  struct iterator D.49414;
  struct value_type D.49413;
  mapped_type & D.49412;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.49269;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.49254;
  struct iterator D.49239;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.49219;
  struct iterator D.49218;
  struct value_type D.49217;
  mapped_type & D.49216;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.49073;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.49058;
  struct iterator D.49043;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.49023;
  struct iterator D.49022;
  struct value_type D.49021;
  mapped_type & D.49020;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.48877;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.48862;
  struct iterator D.48847;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.48827;
  struct iterator D.48826;
  struct value_type D.48825;
  mapped_type & D.48824;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.48681;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.48666;
  struct iterator D.48651;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.48631;
  struct iterator D.48630;
  struct value_type D.48629;
  mapped_type & D.48628;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.48395;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.48380;
  struct iterator D.48365;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.48345;
  struct iterator D.48344;
  struct value_type D.48343;
  mapped_type & D.48342;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.48199;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.48184;
  struct iterator D.48169;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.48149;
  struct iterator D.48148;
  struct value_type D.48147;
  mapped_type & D.48146;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.48003;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47988;
  struct iterator D.47973;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.47953;
  struct iterator D.47952;
  struct value_type D.47951;
  mapped_type & D.47950;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47807;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47792;
  struct iterator D.47777;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.47757;
  struct iterator D.47756;
  struct value_type D.47755;
  mapped_type & D.47754;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47611;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47596;
  struct iterator D.47581;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.47561;
  struct iterator D.47560;
  struct value_type D.47559;
  mapped_type & D.47558;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47415;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47400;
  struct iterator D.47385;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.47365;
  struct iterator D.47364;
  struct value_type D.47363;
  mapped_type & D.47362;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47219;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47204;
  struct iterator D.47189;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.47169;
  struct iterator D.47168;
  struct value_type D.47167;
  mapped_type & D.47166;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47023;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.47008;
  struct iterator D.46993;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.409;
  struct _Rb_tree_node_base * SR.406;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.46973;
  struct iterator D.46972;
  struct value_type D.46971;
  mapped_type & D.46970;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  const struct key_type D.24025;
  const struct key_type D.24023;
  const struct key_type D.24021;
  const struct key_type D.24019;
  const struct key_type D.24017;
  const struct key_type D.24015;
  const struct key_type D.24013;
  const struct key_type D.24011;
  const struct key_type D.24009;
  const struct key_type D.24007;
  const struct key_type D.24005;
  const struct key_type D.24003;
  const struct key_type D.24001;
  const struct key_type D.23999;
  const struct key_type D.23997;
  const struct key_type D.23995;
  const struct key_type D.23993;
  const struct key_type D.23991;
  const struct key_type D.23989;
  const struct key_type D.23987;
  const struct key_type D.23985;
  const struct key_type D.23983;
  const struct key_type D.23981;
  const struct key_type D.23979;
  struct Configuration * _3;
  struct map * _8;
  mapped_type & _10;
  char * const _13;
  mapped_type & _17;
  char * const _20;
  mapped_type & _24;
  char * const _27;
  mapped_type & _31;
  char * const _34;
  mapped_type & _38;
  char * const _41;
  mapped_type & _45;
  char * const _48;
  mapped_type & _52;
  char * const _55;
  mapped_type & _59;
  char * const _62;
  struct map * _65;
  mapped_type & _123;
  char * const _126;
  mapped_type & _130;
  char * const _133;
  char * const _172;
  char * const _179;
  char * const _181;
  char * const _183;
  char * const _185;
  char * const _187;
  char * const _189;
  char * const _191;
  char * const _193;
  char * const _195;
  char * const _197;
  char * const _199;
  char * const _201;
  char * const _203;
  char * const _205;
  char * const _207;
  char * const _209;
  char * const _211;
  char * const _213;
  char * const _215;
  char * const _217;
  char * const _219;
  char * const _221;
  char * const _223;
  char * const prephitmp_365;
  char * const pretmp_368;
  char * const pretmp_431;
  char * const prephitmp_432;
  char * const pretmp_441;
  char * const prephitmp_442;
  char * const pretmp_450;
  char * const prephitmp_451;
  char * const pretmp_457;
  char * const prephitmp_458;
  char * const pretmp_465;
  char * const prephitmp_466;
  char * const pretmp_472;
  char * const prephitmp_473;
  char * const pretmp_480;
  char * const prephitmp_481;
  char * const pretmp_487;
  char * const prephitmp_488;
  char * const _643;
  char * const _646;
  const size_type _656;
  char * const _661;
  long unsigned int _663;
  const size_type _669;
  char * const _672;
  long unsigned int _675;
  char * const _718;
  char * const _721;
  const size_type _731;
  char * const _736;
  long unsigned int _738;
  const size_type _744;
  char * const _747;
  long unsigned int _750;
  char * const _793;
  char * const _796;
  const size_type _806;
  char * const _811;
  long unsigned int _813;
  const size_type _819;
  char * const _822;
  long unsigned int _825;
  char * const _868;
  char * const _871;
  const size_type _881;
  char * const _886;
  long unsigned int _888;
  const size_type _894;
  char * const _897;
  long unsigned int _900;
  char * const _943;
  char * const _946;
  const size_type _956;
  char * const _961;
  long unsigned int _963;
  const size_type _969;
  char * const _972;
  long unsigned int _975;
  char * const _1018;
  char * const _1021;
  const size_type _1031;
  char * const _1036;
  long unsigned int _1038;
  const size_type _1044;
  char * const _1047;
  long unsigned int _1050;
  char * const _1093;
  char * const _1096;
  const size_type _1106;
  char * const _1111;
  long unsigned int _1113;
  const size_type _1119;
  char * const _1122;
  long unsigned int _1125;
  unsigned char _1151;
  char * const _1168;
  char * const _1171;
  const size_type _1181;
  char * const _1186;
  long unsigned int _1188;
  const size_type _1194;
  char * const _1197;
  long unsigned int _1200;
  char * const _1275;
  char * const _1278;
  const size_type _1288;
  char * const _1293;
  long unsigned int _1295;
  const size_type _1301;
  char * const _1304;
  long unsigned int _1307;
  char * const _1350;
  char * const _1353;
  const size_type _1363;
  char * const _1368;
  long unsigned int _1370;
  const size_type _1376;
  char * const _1379;
  long unsigned int _1382;
  char * const _1425;
  char * const _1428;
  const size_type _1438;
  char * const _1443;
  long unsigned int _1445;
  const size_type _1451;
  char * const _1454;
  long unsigned int _1457;
  char * const _1500;
  char * const _1503;
  const size_type _1513;
  char * const _1518;
  long unsigned int _1520;
  const size_type _1526;
  char * const _1529;
  long unsigned int _1532;
  char * const _1575;
  char * const _1578;
  const size_type _1588;
  char * const _1593;
  long unsigned int _1595;
  const size_type _1601;
  char * const _1604;
  long unsigned int _1607;
  char * const _1650;
  char * const _1653;
  const size_type _1663;
  char * const _1668;
  long unsigned int _1670;
  const size_type _1676;
  char * const _1679;
  long unsigned int _1682;
  short unsigned int _1715;
  long unsigned int _1721;
  char * const pretmp_1913;
  char * const prephitmp_1914;
  char * const pretmp_1961;
  char * const prephitmp_1962;
  char * const pretmp_2015;
  char * const prephitmp_2016;
  long unsigned int _2040;
  char * const pretmp_2063;
  char * const prephitmp_2064;
  unsigned int _2226;
  long unsigned int _2273;
  int _2289;
  char * const prephitmp_2535;
  char * const pretmp_2590;

  <bb 2>:
  _3 = &this_2(D)->D.22865;
  Configuration::Configuration (_3);
  # DEBUG D#15 => &D.23980
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.23980
  # DEBUG this => &D.23979
  # DEBUG __s => "H_INVD2"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23979
  # DEBUG D#87 => &D.23979._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23979.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23979]._M_p = &D.23979.D.11539._M_local_buf;
  # DEBUG __s => "H_INVD2"
  # DEBUG this => &D.23979
  # DEBUG __beg => "H_INVD2"
  # DEBUG __end => &MEM[(void *)"H_INVD2" + 7B]
  # DEBUG this => &D.23979
  # DEBUG __beg => "H_INVD2"
  # DEBUG __end => &MEM[(void *)"H_INVD2" + 7B]
  # DEBUG this => &D.23979
  # DEBUG __beg => "H_INVD2"
  # DEBUG __end => &MEM[(void *)"H_INVD2" + 7B]
  # DEBUG __ptr => "H_INVD2"
  # DEBUG __first => "H_INVD2"
  # DEBUG __last => &MEM[(void *)"H_INVD2" + 7B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "H_INVD2"
  # DEBUG __last => &MEM[(void *)"H_INVD2" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#1 => &D.23979
  # DEBUG this => D#1
  # DEBUG __p => &D.23979.D.11539._M_local_buf
  # DEBUG __k1 => "H_INVD2"
  # DEBUG __k2 => &MEM[(void *)"H_INVD2" + 7B]
  # DEBUG __d => &D.23979.D.11539._M_local_buf
  # DEBUG __s => "H_INVD2"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.23979.D.11539._M_local_buf
  # DEBUG __s2 => "H_INVD2"
  # DEBUG __n => 7
  __builtin_memcpy (&D.23979.D.11539._M_local_buf, "H_INVD2", 7);
  # DEBUG this => &D.23979
  # DEBUG __n => 7
  # DEBUG D#6 => &D.23979
  # DEBUG __length => 7
  # DEBUG this => D#6
  MEM[(size_type *)&D.23979 + 8B] = 7;
  # DEBUG D#1 => &D.23979
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23979 + 23B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23979 + 23] = 0;
  # DEBUG D#605 => {CLOBBER}
  # DEBUG __dnew => D#605
  _8 = &this_2(D)->D.22865._int_map;
  _10 = std::map<std::__cxx11::basic_string<char>, int>::operator[] (_8, &D.23979);

  <bb 3>:
  *_10 = 0;
  # DEBUG this => &D.23979
  # DEBUG this => &D.23979
  # DEBUG this => &D.23979
  _13 = MEM[(char * *)&D.23979];
  # DEBUG D#1 => &D.23979
  # DEBUG this => D#1
  # DEBUG this => &D.23979
  if (&D.23979.D.11539._M_local_buf != _13)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  # DEBUG D#47 => D.23979.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23979
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23979
  # DEBUG this => D#1
  # DEBUG this => &D.23979
  # DEBUG D#44 => &D.23979._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _13
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _13
  # DEBUG this => D#38
  # DEBUG D.37654 => D#39
  operator delete (_13);

  <bb 5>:
  # DEBUG D#48 => &D.23979._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23979 ={v} {CLOBBER};
  # DEBUG this => &D.23980
  # DEBUG this => &D.23980
  # DEBUG D#15 => &D.23982
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.23982
  # DEBUG this => &D.23981
  # DEBUG __s => "W_INVD2"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23981
  # DEBUG D#87 => &D.23981._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23981.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23981]._M_p = &D.23981.D.11539._M_local_buf;
  # DEBUG __s => "W_INVD2"
  # DEBUG this => &D.23981
  # DEBUG __beg => "W_INVD2"
  # DEBUG __end => &MEM[(void *)"W_INVD2" + 7B]
  # DEBUG this => &D.23981
  # DEBUG __beg => "W_INVD2"
  # DEBUG __end => &MEM[(void *)"W_INVD2" + 7B]
  # DEBUG this => &D.23981
  # DEBUG __beg => "W_INVD2"
  # DEBUG __end => &MEM[(void *)"W_INVD2" + 7B]
  # DEBUG __ptr => "W_INVD2"
  # DEBUG __first => "W_INVD2"
  # DEBUG __last => &MEM[(void *)"W_INVD2" + 7B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "W_INVD2"
  # DEBUG __last => &MEM[(void *)"W_INVD2" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#1 => &D.23981
  # DEBUG this => D#1
  # DEBUG __p => &D.23981.D.11539._M_local_buf
  # DEBUG __k1 => "W_INVD2"
  # DEBUG __k2 => &MEM[(void *)"W_INVD2" + 7B]
  # DEBUG __d => &D.23981.D.11539._M_local_buf
  # DEBUG __s => "W_INVD2"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.23981.D.11539._M_local_buf
  # DEBUG __s2 => "W_INVD2"
  # DEBUG __n => 7
  __builtin_memcpy (&D.23981.D.11539._M_local_buf, "W_INVD2", 7);
  # DEBUG this => &D.23981
  # DEBUG __n => 7
  # DEBUG D#6 => &D.23981
  # DEBUG __length => 7
  # DEBUG this => D#6
  MEM[(size_type *)&D.23981 + 8B] = 7;
  # DEBUG D#1 => &D.23981
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23981 + 23B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23981 + 23] = 0;
  # DEBUG D#606 => {CLOBBER}
  # DEBUG __dnew => D#606
  _17 = std::map<std::__cxx11::basic_string<char>, int>::operator[] (_8, &D.23981);

  <bb 6>:
  *_17 = 0;
  # DEBUG this => &D.23981
  # DEBUG this => &D.23981
  # DEBUG this => &D.23981
  _20 = MEM[(char * *)&D.23981];
  # DEBUG D#1 => &D.23981
  # DEBUG this => D#1
  # DEBUG this => &D.23981
  if (&D.23981.D.11539._M_local_buf != _20)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#47 => D.23981.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23981
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23981
  # DEBUG this => D#1
  # DEBUG this => &D.23981
  # DEBUG D#44 => &D.23981._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _20
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _20
  # DEBUG this => D#38
  # DEBUG D.37672 => D#39
  operator delete (_20);

  <bb 8>:
  # DEBUG D#48 => &D.23981._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23981 ={v} {CLOBBER};
  # DEBUG this => &D.23982
  # DEBUG this => &D.23982
  # DEBUG D#15 => &D.23984
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.23984
  # DEBUG this => &D.23983
  # DEBUG __s => "H_DFQD1"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23983
  # DEBUG D#87 => &D.23983._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23983.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23983]._M_p = &D.23983.D.11539._M_local_buf;
  # DEBUG __s => "H_DFQD1"
  # DEBUG this => &D.23983
  # DEBUG __beg => "H_DFQD1"
  # DEBUG __end => &MEM[(void *)"H_DFQD1" + 7B]
  # DEBUG this => &D.23983
  # DEBUG __beg => "H_DFQD1"
  # DEBUG __end => &MEM[(void *)"H_DFQD1" + 7B]
  # DEBUG this => &D.23983
  # DEBUG __beg => "H_DFQD1"
  # DEBUG __end => &MEM[(void *)"H_DFQD1" + 7B]
  # DEBUG __ptr => "H_DFQD1"
  # DEBUG __first => "H_DFQD1"
  # DEBUG __last => &MEM[(void *)"H_DFQD1" + 7B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "H_DFQD1"
  # DEBUG __last => &MEM[(void *)"H_DFQD1" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#1 => &D.23983
  # DEBUG this => D#1
  # DEBUG __p => &D.23983.D.11539._M_local_buf
  # DEBUG __k1 => "H_DFQD1"
  # DEBUG __k2 => &MEM[(void *)"H_DFQD1" + 7B]
  # DEBUG __d => &D.23983.D.11539._M_local_buf
  # DEBUG __s => "H_DFQD1"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.23983.D.11539._M_local_buf
  # DEBUG __s2 => "H_DFQD1"
  # DEBUG __n => 7
  __builtin_memcpy (&D.23983.D.11539._M_local_buf, "H_DFQD1", 7);
  # DEBUG this => &D.23983
  # DEBUG __n => 7
  # DEBUG D#6 => &D.23983
  # DEBUG __length => 7
  # DEBUG this => D#6
  MEM[(size_type *)&D.23983 + 8B] = 7;
  # DEBUG D#1 => &D.23983
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23983 + 23B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23983 + 23] = 0;
  # DEBUG D#607 => {CLOBBER}
  # DEBUG __dnew => D#607
  _24 = std::map<std::__cxx11::basic_string<char>, int>::operator[] (_8, &D.23983);

  <bb 9>:
  *_24 = 0;
  # DEBUG this => &D.23983
  # DEBUG this => &D.23983
  # DEBUG this => &D.23983
  _27 = MEM[(char * *)&D.23983];
  # DEBUG D#1 => &D.23983
  # DEBUG this => D#1
  # DEBUG this => &D.23983
  if (&D.23983.D.11539._M_local_buf != _27)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#47 => D.23983.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23983
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23983
  # DEBUG this => D#1
  # DEBUG this => &D.23983
  # DEBUG D#44 => &D.23983._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _27
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _27
  # DEBUG this => D#38
  # DEBUG D.37690 => D#39
  operator delete (_27);

  <bb 11>:
  # DEBUG D#48 => &D.23983._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23983 ={v} {CLOBBER};
  # DEBUG this => &D.23984
  # DEBUG this => &D.23984
  # DEBUG D#15 => &D.23986
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.23986
  # DEBUG this => &D.23985
  # DEBUG __s => "W_DFQD1"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23985
  # DEBUG D#87 => &D.23985._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23985.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23985]._M_p = &D.23985.D.11539._M_local_buf;
  # DEBUG __s => "W_DFQD1"
  # DEBUG this => &D.23985
  # DEBUG __beg => "W_DFQD1"
  # DEBUG __end => &MEM[(void *)"W_DFQD1" + 7B]
  # DEBUG this => &D.23985
  # DEBUG __beg => "W_DFQD1"
  # DEBUG __end => &MEM[(void *)"W_DFQD1" + 7B]
  # DEBUG this => &D.23985
  # DEBUG __beg => "W_DFQD1"
  # DEBUG __end => &MEM[(void *)"W_DFQD1" + 7B]
  # DEBUG __ptr => "W_DFQD1"
  # DEBUG __first => "W_DFQD1"
  # DEBUG __last => &MEM[(void *)"W_DFQD1" + 7B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "W_DFQD1"
  # DEBUG __last => &MEM[(void *)"W_DFQD1" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#1 => &D.23985
  # DEBUG this => D#1
  # DEBUG __p => &D.23985.D.11539._M_local_buf
  # DEBUG __k1 => "W_DFQD1"
  # DEBUG __k2 => &MEM[(void *)"W_DFQD1" + 7B]
  # DEBUG __d => &D.23985.D.11539._M_local_buf
  # DEBUG __s => "W_DFQD1"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.23985.D.11539._M_local_buf
  # DEBUG __s2 => "W_DFQD1"
  # DEBUG __n => 7
  __builtin_memcpy (&D.23985.D.11539._M_local_buf, "W_DFQD1", 7);
  # DEBUG this => &D.23985
  # DEBUG __n => 7
  # DEBUG D#6 => &D.23985
  # DEBUG __length => 7
  # DEBUG this => D#6
  MEM[(size_type *)&D.23985 + 8B] = 7;
  # DEBUG D#1 => &D.23985
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23985 + 23B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23985 + 23] = 0;
  # DEBUG D#608 => {CLOBBER}
  # DEBUG __dnew => D#608
  _31 = std::map<std::__cxx11::basic_string<char>, int>::operator[] (_8, &D.23985);

  <bb 12>:
  *_31 = 0;
  # DEBUG this => &D.23985
  # DEBUG this => &D.23985
  # DEBUG this => &D.23985
  _34 = MEM[(char * *)&D.23985];
  # DEBUG D#1 => &D.23985
  # DEBUG this => D#1
  # DEBUG this => &D.23985
  if (&D.23985.D.11539._M_local_buf != _34)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # DEBUG D#47 => D.23985.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23985
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23985
  # DEBUG this => D#1
  # DEBUG this => &D.23985
  # DEBUG D#44 => &D.23985._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _34
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _34
  # DEBUG this => D#38
  # DEBUG D.37708 => D#39
  operator delete (_34);

  <bb 14>:
  # DEBUG D#48 => &D.23985._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23985 ={v} {CLOBBER};
  # DEBUG this => &D.23986
  # DEBUG this => &D.23986
  # DEBUG D#15 => &D.23988
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.23988
  # DEBUG this => &D.23987
  # DEBUG __s => "H_ND2D1"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23987
  # DEBUG D#87 => &D.23987._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23987.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23987]._M_p = &D.23987.D.11539._M_local_buf;
  # DEBUG __s => "H_ND2D1"
  # DEBUG this => &D.23987
  # DEBUG __beg => "H_ND2D1"
  # DEBUG __end => &MEM[(void *)"H_ND2D1" + 7B]
  # DEBUG this => &D.23987
  # DEBUG __beg => "H_ND2D1"
  # DEBUG __end => &MEM[(void *)"H_ND2D1" + 7B]
  # DEBUG this => &D.23987
  # DEBUG __beg => "H_ND2D1"
  # DEBUG __end => &MEM[(void *)"H_ND2D1" + 7B]
  # DEBUG __ptr => "H_ND2D1"
  # DEBUG __first => "H_ND2D1"
  # DEBUG __last => &MEM[(void *)"H_ND2D1" + 7B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "H_ND2D1"
  # DEBUG __last => &MEM[(void *)"H_ND2D1" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#1 => &D.23987
  # DEBUG this => D#1
  # DEBUG __p => &D.23987.D.11539._M_local_buf
  # DEBUG __k1 => "H_ND2D1"
  # DEBUG __k2 => &MEM[(void *)"H_ND2D1" + 7B]
  # DEBUG __d => &D.23987.D.11539._M_local_buf
  # DEBUG __s => "H_ND2D1"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.23987.D.11539._M_local_buf
  # DEBUG __s2 => "H_ND2D1"
  # DEBUG __n => 7
  __builtin_memcpy (&D.23987.D.11539._M_local_buf, "H_ND2D1", 7);
  # DEBUG this => &D.23987
  # DEBUG __n => 7
  # DEBUG D#6 => &D.23987
  # DEBUG __length => 7
  # DEBUG this => D#6
  MEM[(size_type *)&D.23987 + 8B] = 7;
  # DEBUG D#1 => &D.23987
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23987 + 23B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23987 + 23] = 0;
  # DEBUG D#609 => {CLOBBER}
  # DEBUG __dnew => D#609
  _38 = std::map<std::__cxx11::basic_string<char>, int>::operator[] (_8, &D.23987);

  <bb 15>:
  *_38 = 0;
  # DEBUG this => &D.23987
  # DEBUG this => &D.23987
  # DEBUG this => &D.23987
  _41 = MEM[(char * *)&D.23987];
  # DEBUG D#1 => &D.23987
  # DEBUG this => D#1
  # DEBUG this => &D.23987
  if (&D.23987.D.11539._M_local_buf != _41)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#47 => D.23987.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23987
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23987
  # DEBUG this => D#1
  # DEBUG this => &D.23987
  # DEBUG D#44 => &D.23987._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _41
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _41
  # DEBUG this => D#38
  # DEBUG D.37726 => D#39
  operator delete (_41);

  <bb 17>:
  # DEBUG D#48 => &D.23987._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23987 ={v} {CLOBBER};
  # DEBUG this => &D.23988
  # DEBUG this => &D.23988
  # DEBUG D#15 => &D.23990
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.23990
  # DEBUG this => &D.23989
  # DEBUG __s => "W_ND2D1"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23989
  # DEBUG D#87 => &D.23989._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23989.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23989]._M_p = &D.23989.D.11539._M_local_buf;
  # DEBUG __s => "W_ND2D1"
  # DEBUG this => &D.23989
  # DEBUG __beg => "W_ND2D1"
  # DEBUG __end => &MEM[(void *)"W_ND2D1" + 7B]
  # DEBUG this => &D.23989
  # DEBUG __beg => "W_ND2D1"
  # DEBUG __end => &MEM[(void *)"W_ND2D1" + 7B]
  # DEBUG this => &D.23989
  # DEBUG __beg => "W_ND2D1"
  # DEBUG __end => &MEM[(void *)"W_ND2D1" + 7B]
  # DEBUG __ptr => "W_ND2D1"
  # DEBUG __first => "W_ND2D1"
  # DEBUG __last => &MEM[(void *)"W_ND2D1" + 7B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "W_ND2D1"
  # DEBUG __last => &MEM[(void *)"W_ND2D1" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#1 => &D.23989
  # DEBUG this => D#1
  # DEBUG __p => &D.23989.D.11539._M_local_buf
  # DEBUG __k1 => "W_ND2D1"
  # DEBUG __k2 => &MEM[(void *)"W_ND2D1" + 7B]
  # DEBUG __d => &D.23989.D.11539._M_local_buf
  # DEBUG __s => "W_ND2D1"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.23989.D.11539._M_local_buf
  # DEBUG __s2 => "W_ND2D1"
  # DEBUG __n => 7
  __builtin_memcpy (&D.23989.D.11539._M_local_buf, "W_ND2D1", 7);
  # DEBUG this => &D.23989
  # DEBUG __n => 7
  # DEBUG D#6 => &D.23989
  # DEBUG __length => 7
  # DEBUG this => D#6
  MEM[(size_type *)&D.23989 + 8B] = 7;
  # DEBUG D#1 => &D.23989
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23989 + 23B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23989 + 23] = 0;
  # DEBUG D#610 => {CLOBBER}
  # DEBUG __dnew => D#610
  _45 = std::map<std::__cxx11::basic_string<char>, int>::operator[] (_8, &D.23989);

  <bb 18>:
  *_45 = 0;
  # DEBUG this => &D.23989
  # DEBUG this => &D.23989
  # DEBUG this => &D.23989
  _48 = MEM[(char * *)&D.23989];
  # DEBUG D#1 => &D.23989
  # DEBUG this => D#1
  # DEBUG this => &D.23989
  if (&D.23989.D.11539._M_local_buf != _48)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG D#47 => D.23989.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23989
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23989
  # DEBUG this => D#1
  # DEBUG this => &D.23989
  # DEBUG D#44 => &D.23989._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _48
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _48
  # DEBUG this => D#38
  # DEBUG D.37744 => D#39
  operator delete (_48);

  <bb 20>:
  # DEBUG D#48 => &D.23989._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23989 ={v} {CLOBBER};
  # DEBUG this => &D.23990
  # DEBUG this => &D.23990
  # DEBUG D#15 => &D.23992
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.23992
  # DEBUG this => &D.23991
  # DEBUG __s => "H_SRAM"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23991
  # DEBUG D#87 => &D.23991._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23991.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23991]._M_p = &D.23991.D.11539._M_local_buf;
  # DEBUG __s => "H_SRAM"
  # DEBUG this => &D.23991
  # DEBUG __beg => "H_SRAM"
  # DEBUG __end => &MEM[(void *)"H_SRAM" + 6B]
  # DEBUG this => &D.23991
  # DEBUG __beg => "H_SRAM"
  # DEBUG __end => &MEM[(void *)"H_SRAM" + 6B]
  # DEBUG this => &D.23991
  # DEBUG __beg => "H_SRAM"
  # DEBUG __end => &MEM[(void *)"H_SRAM" + 6B]
  # DEBUG __ptr => "H_SRAM"
  # DEBUG __first => "H_SRAM"
  # DEBUG __last => &MEM[(void *)"H_SRAM" + 6B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "H_SRAM"
  # DEBUG __last => &MEM[(void *)"H_SRAM" + 6B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.23991
  # DEBUG this => D#1
  # DEBUG __p => &D.23991.D.11539._M_local_buf
  # DEBUG __k1 => "H_SRAM"
  # DEBUG __k2 => &MEM[(void *)"H_SRAM" + 6B]
  # DEBUG __d => &D.23991.D.11539._M_local_buf
  # DEBUG __s => "H_SRAM"
  # DEBUG __n => 6
  # DEBUG __s1 => &D.23991.D.11539._M_local_buf
  # DEBUG __s2 => "H_SRAM"
  # DEBUG __n => 6
  __builtin_memcpy (&D.23991.D.11539._M_local_buf, "H_SRAM", 6);
  # DEBUG this => &D.23991
  # DEBUG __n => 6
  # DEBUG D#6 => &D.23991
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.23991 + 8B] = 6;
  # DEBUG D#1 => &D.23991
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23991 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23991 + 22] = 0;
  # DEBUG D#611 => {CLOBBER}
  # DEBUG __dnew => D#611
  _52 = std::map<std::__cxx11::basic_string<char>, int>::operator[] (_8, &D.23991);

  <bb 21>:
  *_52 = 0;
  # DEBUG this => &D.23991
  # DEBUG this => &D.23991
  # DEBUG this => &D.23991
  _55 = MEM[(char * *)&D.23991];
  # DEBUG D#1 => &D.23991
  # DEBUG this => D#1
  # DEBUG this => &D.23991
  if (&D.23991.D.11539._M_local_buf != _55)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG D#47 => D.23991.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23991
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23991
  # DEBUG this => D#1
  # DEBUG this => &D.23991
  # DEBUG D#44 => &D.23991._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _55
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _55
  # DEBUG this => D#38
  # DEBUG D.37762 => D#39
  operator delete (_55);

  <bb 23>:
  # DEBUG D#48 => &D.23991._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23991 ={v} {CLOBBER};
  # DEBUG this => &D.23992
  # DEBUG this => &D.23992
  # DEBUG D#15 => &D.23994
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.23994
  # DEBUG this => &D.23993
  # DEBUG __s => "W_SRAM"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23993
  # DEBUG D#87 => &D.23993._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23993.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23993]._M_p = &D.23993.D.11539._M_local_buf;
  # DEBUG __s => "W_SRAM"
  # DEBUG this => &D.23993
  # DEBUG __beg => "W_SRAM"
  # DEBUG __end => &MEM[(void *)"W_SRAM" + 6B]
  # DEBUG this => &D.23993
  # DEBUG __beg => "W_SRAM"
  # DEBUG __end => &MEM[(void *)"W_SRAM" + 6B]
  # DEBUG this => &D.23993
  # DEBUG __beg => "W_SRAM"
  # DEBUG __end => &MEM[(void *)"W_SRAM" + 6B]
  # DEBUG __ptr => "W_SRAM"
  # DEBUG __first => "W_SRAM"
  # DEBUG __last => &MEM[(void *)"W_SRAM" + 6B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "W_SRAM"
  # DEBUG __last => &MEM[(void *)"W_SRAM" + 6B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.23993
  # DEBUG this => D#1
  # DEBUG __p => &D.23993.D.11539._M_local_buf
  # DEBUG __k1 => "W_SRAM"
  # DEBUG __k2 => &MEM[(void *)"W_SRAM" + 6B]
  # DEBUG __d => &D.23993.D.11539._M_local_buf
  # DEBUG __s => "W_SRAM"
  # DEBUG __n => 6
  # DEBUG __s1 => &D.23993.D.11539._M_local_buf
  # DEBUG __s2 => "W_SRAM"
  # DEBUG __n => 6
  __builtin_memcpy (&D.23993.D.11539._M_local_buf, "W_SRAM", 6);
  # DEBUG this => &D.23993
  # DEBUG __n => 6
  # DEBUG D#6 => &D.23993
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.23993 + 8B] = 6;
  # DEBUG D#1 => &D.23993
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23993 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23993 + 22] = 0;
  # DEBUG D#612 => {CLOBBER}
  # DEBUG __dnew => D#612
  _59 = std::map<std::__cxx11::basic_string<char>, int>::operator[] (_8, &D.23993);

  <bb 24>:
  *_59 = 0;
  # DEBUG this => &D.23993
  # DEBUG this => &D.23993
  # DEBUG this => &D.23993
  _62 = MEM[(char * *)&D.23993];
  # DEBUG D#1 => &D.23993
  # DEBUG this => D#1
  # DEBUG this => &D.23993
  if (&D.23993.D.11539._M_local_buf != _62)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#47 => D.23993.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23993
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23993
  # DEBUG this => D#1
  # DEBUG this => &D.23993
  # DEBUG D#44 => &D.23993._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _62
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _62
  # DEBUG this => D#38
  # DEBUG D.37780 => D#39
  operator delete (_62);

  <bb 26>:
  # DEBUG D#48 => &D.23993._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23993 ={v} {CLOBBER};
  # DEBUG this => &D.23994
  # DEBUG this => &D.23994
  # DEBUG D#15 => &D.23996
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.23996
  # DEBUG this => &D.23995
  # DEBUG __s => "Vdd"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23995
  # DEBUG D#87 => &D.23995._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23995.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23995]._M_p = &D.23995.D.11539._M_local_buf;
  # DEBUG __s => "Vdd"
  # DEBUG this => &D.23995
  # DEBUG __beg => "Vdd"
  # DEBUG __end => &MEM[(void *)"Vdd" + 3B]
  # DEBUG this => &D.23995
  # DEBUG __beg => "Vdd"
  # DEBUG __end => &MEM[(void *)"Vdd" + 3B]
  # DEBUG this => &D.23995
  # DEBUG __beg => "Vdd"
  # DEBUG __end => &MEM[(void *)"Vdd" + 3B]
  # DEBUG __ptr => "Vdd"
  # DEBUG __first => "Vdd"
  # DEBUG __last => &MEM[(void *)"Vdd" + 3B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "Vdd"
  # DEBUG __last => &MEM[(void *)"Vdd" + 3B]
  # DEBUG __dnew => 3
  # DEBUG D#1 => &D.23995
  # DEBUG this => D#1
  # DEBUG __p => &D.23995.D.11539._M_local_buf
  # DEBUG __k1 => "Vdd"
  # DEBUG __k2 => &MEM[(void *)"Vdd" + 3B]
  # DEBUG __d => &D.23995.D.11539._M_local_buf
  # DEBUG __s => "Vdd"
  # DEBUG __n => 3
  # DEBUG __s1 => &D.23995.D.11539._M_local_buf
  # DEBUG __s2 => "Vdd"
  # DEBUG __n => 3
  __builtin_memcpy (&D.23995.D.11539._M_local_buf, "Vdd", 3);
  # DEBUG this => &D.23995
  # DEBUG __n => 3
  # DEBUG D#6 => &D.23995
  # DEBUG __length => 3
  # DEBUG this => D#6
  MEM[(size_type *)&D.23995 + 8B] = 3;
  # DEBUG D#1 => &D.23995
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23995 + 19B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23995 + 19] = 0;
  # DEBUG D#613 => {CLOBBER}
  # DEBUG __dnew => D#613
  _65 = &this_2(D)->D.22865._float_map;
  # DEBUG this => _65
  # DEBUG __k => &D.23995
  # DEBUG this => _65
  # DEBUG __x => &D.23995
  # DEBUG this => _65
  # DEBUG __k => &D.23995
  # DEBUG this => _65
  __i$_M_node_66 = &MEM[(struct _Rb_tree *)this_2(D) + 136B]._M_impl._M_header;
  __i$_M_node_647 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.23995
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_647
  if (__i$_M_node_647 == 0B)
    goto <bb 521>;
  else
    goto <bb 29>;

  <bb 27>:
  # __i$_M_node_1386 = PHI <__i$_M_node_651(35), __i$_M_node_652(36)>
  # __i$_M_node_1437 = PHI <__i$_M_node_2402(35), __i$_M_node_512(36)>
  # DEBUG __y => __i$_M_node_1437
  # DEBUG __x => __i$_M_node_1386
  if (__i$_M_node_1386 == 0B)
    goto <bb 37>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 30>;

  <bb 29>:

  <bb 30>:
  # __i$_M_node_2402 = PHI <__i$_M_node_647(29), __i$_M_node_1386(28)>
  # __i$_M_node_512 = PHI <__i$_M_node_66(29), __i$_M_node_1437(28)>
  # DEBUG __y => __i$_M_node_512
  # DEBUG __x => __i$_M_node_2402
  # DEBUG __x => __i$_M_node_2402
  # DEBUG __x => __i$_M_node_2402
  # DEBUG this => __i$_M_node_2402
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_2402]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#576 => &MEM[(const struct pair &)__i$_M_node_2402 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#576
  # DEBUG __y => &D.23995
  # DEBUG this => D#56
  # DEBUG __lhs => D#576
  # DEBUG __rhs => &D.23995
  # DEBUG this => D#576
  # DEBUG __str => &D.23995
  _656 = MEM[(long unsigned int *)__i$_M_node_2402 + 40B];
  # DEBUG D#5 => D#576
  # DEBUG this => D#5
  # DEBUG __size => _656
  # DEBUG D#5 => &D.23995
  # DEBUG this => D#5
  # DEBUG __osize => 3
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1674 = MIN_EXPR <_656, 3>;
  # DEBUG __len => D#548
  # DEBUG this => &D.23995
  # DEBUG D#1 => &D.23995
  # DEBUG this => D#1
  _661 = MEM[(char * *)__i$_M_node_2402 + 32B];
  # DEBUG D#1 => D#576
  # DEBUG this => D#1
  # DEBUG __s1 => _661
  # DEBUG __s2 => &D.23995.D.11539._M_local_buf
  # DEBUG __n => D#548
  __r_662 = __builtin_memcmp (_661, &D.23995.D.11539._M_local_buf, __len_1674);
  # DEBUG __r => NULL
  if (__r_662 == 0)
    goto <bb 31>;
  else
    goto <bb 34>;

  <bb 31>:
  # DEBUG __n1 => _656
  # DEBUG __n2 => 3
  _663 = _656 - 3;
  __d_664 = (const difference_type) _663;
  # DEBUG __d => __d_664
  if (__d_664 > 2147483647)
    goto <bb 35>;
  else
    goto <bb 32>;

  <bb 32>:
  if (__d_664 < -2147483648)
    goto <bb 36>;
  else
    goto <bb 33>;

  <bb 33>:
  __r_665 = (int) _663;

  <bb 34>:
  # __r_666 = PHI <__r_662(30), __r_665(33)>
  # DEBUG __r => __r_666
  # DEBUG D#618 => {CLOBBER}
  # DEBUG __size => D#618
  # DEBUG D#619 => {CLOBBER}
  # DEBUG __osize => D#619
  if (__r_666 >= 0)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_2402
  __i$_M_node_651 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_2402 + 16B];
  # DEBUG D#21 => __i$_M_node_2402
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 27>;

  <bb 36>:
  # DEBUG __r => NULL
  __i$_M_node_652 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_2402 + 24B];
  # DEBUG D#20 => __i$_M_node_2402
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 27>;

  <bb 37>:
  # __i$_M_node_2434 = PHI <__i$_M_node_1437(27)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2434
  # DEBUG __i$_M_node => __i$_M_node_2434
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2434)
    goto <bb 521>;
  else
    goto <bb 38>;

  <bb 38>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2434
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2434]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#577 => &MEM[(struct pair &)__i$_M_node_2434 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.23995
  # DEBUG __y => D#577
  # DEBUG this => D#56
  # DEBUG __lhs => &D.23995
  # DEBUG __rhs => D#577
  # DEBUG this => &D.23995
  # DEBUG __str => D#577
  # DEBUG D#5 => &D.23995
  # DEBUG this => D#5
  # DEBUG __size => 3
  _669 = MEM[(long unsigned int *)__i$_M_node_2434 + 40B];
  # DEBUG D#5 => D#577
  # DEBUG this => D#5
  # DEBUG __osize => _669
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_669 <= 2)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:

  <bb 40>:
  # __len_671 = PHI <_669(38), 3(39)>
  # DEBUG __len => D#549
  # DEBUG this => D#577
  _672 = MEM[(char * *)__i$_M_node_2434 + 32B];
  # DEBUG D#1 => D#577
  # DEBUG this => D#1
  # DEBUG D#1 => &D.23995
  # DEBUG this => D#1
  # DEBUG __s1 => &D.23995.D.11539._M_local_buf
  # DEBUG __s2 => _672
  # DEBUG __n => D#549
  __r_674 = __builtin_memcmp (&D.23995.D.11539._M_local_buf, _672, __len_671);
  # DEBUG __r => NULL
  if (__r_674 == 0)
    goto <bb 41>;
  else
    goto <bb 44>;

  <bb 41>:
  # DEBUG __n1 => 3
  # DEBUG __n2 => _669
  _675 = 3 - _669;
  __d_676 = (const difference_type) _675;
  # DEBUG __d => __d_676
  if (__d_676 > 2147483647)
    goto <bb 49>;
  else
    goto <bb 42>;

  <bb 42>:
  if (__d_676 < -2147483648)
    goto <bb 45>;
  else
    goto <bb 43>;

  <bb 43>:
  __r_677 = (int) _675;

  <bb 44>:
  # __r_678 = PHI <__r_674(40), __r_677(43)>
  # DEBUG __r => __r_678
  # DEBUG D#624 => {CLOBBER}
  # DEBUG __size => D#624
  # DEBUG D#625 => {CLOBBER}
  # DEBUG __osize => D#625
  if (__r_678 < 0)
    goto <bb 521>;
  else
    goto <bb 49>;

  <bb 45>:
  # __i$_M_node_2222 = PHI <__i$_M_node_2434(42), __i$_M_node_2199(521)>
  # DEBUG this => &D.46971
  # DEBUG __a => &D.23995
  # DEBUG __b => NULL
  # DEBUG this => &D.46971.first
  # DEBUG __str => &D.23995
  # DEBUG this => &D.23995
  # DEBUG D#145 => &D.23995._M_dataplus
  # DEBUG this => &D.46971.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.46971]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.46971].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.46971]._M_p = &MEM[(struct basic_string *)&D.46971].D.11539._M_local_buf;
  # DEBUG D#1 => &D.23995
  # DEBUG this => D#1
  # DEBUG D#2 => &D.23995
  # DEBUG this => D#2
  # DEBUG D#1 => &D.23995
  # DEBUG this => D#1
  # DEBUG this => &D.46971.first
  # DEBUG __beg => &D.23995.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.23995 + 19B]
  # DEBUG this => &D.46971.first
  # DEBUG __beg => &D.23995.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.23995 + 19B]
  # DEBUG this => &D.46971.first
  # DEBUG __beg => &D.23995.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.23995 + 19B]
  # DEBUG __ptr => &D.23995.D.11539._M_local_buf
  # DEBUG __first => &D.23995.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.23995 + 19B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.23995.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.23995 + 19B]
  # DEBUG __dnew => 3
  # DEBUG D#1 => &D.46971.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.46971].D.11539._M_local_buf
  # DEBUG __k1 => &D.23995.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.23995 + 19B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.46971].D.11539._M_local_buf
  # DEBUG __s => &D.23995.D.11539._M_local_buf
  # DEBUG __n => 3
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.46971].D.11539._M_local_buf
  # DEBUG __s2 => &D.23995.D.11539._M_local_buf
  # DEBUG __n => 3
  __builtin_memcpy (&MEM[(struct basic_string *)&D.46971].D.11539._M_local_buf, &D.23995.D.11539._M_local_buf, 3);
  # DEBUG this => &D.46971.first
  # DEBUG __n => 3
  # DEBUG D#6 => &D.46971.first
  # DEBUG __length => 3
  # DEBUG this => D#6
  MEM[(size_type *)&D.46971 + 8B] = 3;
  # DEBUG D#1 => &D.46971.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.46971 + 19B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.46971 + 19] = 0;
  # DEBUG D#626 => {CLOBBER}
  # DEBUG __dnew => D#626
  D.46971.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_2222
  # DEBUG __x => &D.46971
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_2222;
  # DEBUG __x => &D.46971
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.46973 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.46971);

  <bb 46>:
  __i$_M_node_642 = MEM[(struct _Rb_tree_iterator *)&D.46973];
  # DEBUG __i$_M_node => __i$_M_node_642
  # DEBUG this => &D.46971
  # DEBUG D#49 => &D.46971.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _643 = MEM[(char * *)&D.46971];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.46971].D.11539._M_local_buf != _643)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _643
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _643
  # DEBUG this => D#38
  # DEBUG D.46930 => D#39
  operator delete (_643);

  <bb 48>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.46971 ={v} {CLOBBER};
  pretmp_2063 = MEM[(char * *)&D.23995];

  <bb 49>:
  # __i$_M_node_644 = PHI <__i$_M_node_2434(41), __i$_M_node_642(48), __i$_M_node_2434(44)>
  # prephitmp_2064 = PHI <&D.23995.D.11539._M_local_buf(41), pretmp_2063(48), &D.23995.D.11539._M_local_buf(44)>
  # DEBUG __i$_M_node => __i$_M_node_644
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_644
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_644]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_644 + 64] = 0.0;
  # DEBUG this => &D.23995
  # DEBUG this => &D.23995
  # DEBUG this => &D.23995
  # DEBUG D#824 => MEM[(char * *)&D.23995]
  # DEBUG D#1 => &D.23995
  # DEBUG this => D#1
  # DEBUG this => &D.23995
  if (&D.23995.D.11539._M_local_buf != prephitmp_2064)
    goto <bb 53>;
  else
    goto <bb 54>;

<L49>:
  # DEBUG this => &D.46971
  # DEBUG D#49 => &D.46971.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _646 = MEM[(char * *)&D.46971];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.46971].D.11539._M_local_buf != _646)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _646
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _646
  # DEBUG this => D#38
  # DEBUG D.46914 => D#39
  operator delete (_646);

  <bb 52>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.46971 ={v} {CLOBBER};
  resx 99

  <bb 53>:
  # DEBUG D#47 => D.23995.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23995
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23995
  # DEBUG this => D#1
  # DEBUG this => &D.23995
  # DEBUG D#44 => &D.23995._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#824
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#824
  # DEBUG this => D#38
  # DEBUG D.37798 => D#39
  operator delete (prephitmp_2064);

  <bb 54>:
  # DEBUG D#48 => &D.23995._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23995 ={v} {CLOBBER};
  # DEBUG this => &D.23996
  # DEBUG this => &D.23996
  # DEBUG D#15 => &D.23998
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.23998
  # DEBUG this => &D.23997
  # DEBUG __s => "R"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23997
  # DEBUG D#87 => &D.23997._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23997.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23997]._M_p = &D.23997.D.11539._M_local_buf;
  # DEBUG __s => "R"
  # DEBUG this => &D.23997
  # DEBUG __beg => "R"
  # DEBUG __end => &MEM[(void *)"R" + 1B]
  # DEBUG this => &D.23997
  # DEBUG __beg => "R"
  # DEBUG __end => &MEM[(void *)"R" + 1B]
  # DEBUG this => &D.23997
  # DEBUG __beg => "R"
  # DEBUG __end => &MEM[(void *)"R" + 1B]
  # DEBUG __ptr => "R"
  # DEBUG __first => "R"
  # DEBUG __last => &MEM[(void *)"R" + 1B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "R"
  # DEBUG __last => &MEM[(void *)"R" + 1B]
  # DEBUG __dnew => 1
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG __p => &D.23997.D.11539._M_local_buf
  # DEBUG __k1 => "R"
  # DEBUG __k2 => &MEM[(void *)"R" + 1B]
  # DEBUG __d => &D.23997.D.11539._M_local_buf
  # DEBUG __s => "R"
  # DEBUG __n => 1
  # DEBUG D#7 => "R"
  # DEBUG __c1 => &D.23997.D.11539._M_local_buf
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23997 + 16] = 82;
  # DEBUG this => &D.23997
  # DEBUG __n => 1
  # DEBUG D#6 => &D.23997
  # DEBUG __length => 1
  # DEBUG this => D#6
  MEM[(size_type *)&D.23997 + 8B] = 1;
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23997 + 17B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23997 + 17] = 0;
  # DEBUG D#627 => {CLOBBER}
  # DEBUG __dnew => D#627
  # DEBUG this => _65
  # DEBUG __k => &D.23997
  # DEBUG this => _65
  # DEBUG __x => &D.23997
  # DEBUG this => _65
  # DEBUG __k => &D.23997
  # DEBUG this => _65
  __i$_M_node_722 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.23997
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_722
  if (__i$_M_node_722 == 0B)
    goto <bb 522>;
  else
    goto <bb 57>;

  <bb 55>:
  # __i$_M_node_1362 = PHI <__i$_M_node_726(63), __i$_M_node_727(64)>
  # __i$_M_node_1361 = PHI <__i$_M_node_504(63), __i$_M_node_776(64)>
  # DEBUG __y => __i$_M_node_1361
  # DEBUG __x => __i$_M_node_1362
  if (__i$_M_node_1362 == 0B)
    goto <bb 65>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 58>;

  <bb 57>:

  <bb 58>:
  # __i$_M_node_504 = PHI <__i$_M_node_722(57), __i$_M_node_1362(56)>
  # __i$_M_node_776 = PHI <__i$_M_node_66(57), __i$_M_node_1361(56)>
  # DEBUG __y => __i$_M_node_776
  # DEBUG __x => __i$_M_node_504
  # DEBUG __x => __i$_M_node_504
  # DEBUG __x => __i$_M_node_504
  # DEBUG this => __i$_M_node_504
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_504]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#578 => &MEM[(const struct pair &)__i$_M_node_504 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#578
  # DEBUG __y => &D.23997
  # DEBUG this => D#56
  # DEBUG __lhs => D#578
  # DEBUG __rhs => &D.23997
  # DEBUG this => D#578
  # DEBUG __str => &D.23997
  _731 = MEM[(long unsigned int *)__i$_M_node_504 + 40B];
  # DEBUG D#5 => D#578
  # DEBUG this => D#5
  # DEBUG __size => _731
  # DEBUG D#5 => &D.23997
  # DEBUG this => D#5
  # DEBUG __osize => 1
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1661 = MIN_EXPR <_731, 1>;
  # DEBUG __len => D#550
  # DEBUG this => &D.23997
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  _736 = MEM[(char * *)__i$_M_node_504 + 32B];
  # DEBUG D#1 => D#578
  # DEBUG this => D#1
  # DEBUG __s1 => _736
  # DEBUG __s2 => &D.23997.D.11539._M_local_buf
  # DEBUG __n => D#550
  __r_737 = __builtin_memcmp (_736, &D.23997.D.11539._M_local_buf, __len_1661);
  # DEBUG __r => NULL
  if (__r_737 == 0)
    goto <bb 59>;
  else
    goto <bb 62>;

  <bb 59>:
  # DEBUG __n1 => _731
  # DEBUG __n2 => 1
  _738 = _731 - 1;
  __d_739 = (const difference_type) _738;
  # DEBUG __d => __d_739
  if (__d_739 > 2147483647)
    goto <bb 63>;
  else
    goto <bb 60>;

  <bb 60>:
  if (__d_739 < -2147483648)
    goto <bb 64>;
  else
    goto <bb 61>;

  <bb 61>:
  __r_740 = (int) _738;

  <bb 62>:
  # __r_741 = PHI <__r_737(58), __r_740(61)>
  # DEBUG __r => __r_741
  # DEBUG D#632 => {CLOBBER}
  # DEBUG __size => D#632
  # DEBUG D#633 => {CLOBBER}
  # DEBUG __osize => D#633
  if (__r_741 >= 0)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_504
  __i$_M_node_726 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_504 + 16B];
  # DEBUG D#21 => __i$_M_node_504
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 55>;

  <bb 64>:
  # DEBUG __r => NULL
  __i$_M_node_727 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_504 + 24B];
  # DEBUG D#20 => __i$_M_node_504
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 55>;

  <bb 65>:
  # __i$_M_node_2435 = PHI <__i$_M_node_1361(55)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2435
  # DEBUG __i$_M_node => __i$_M_node_2435
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2435)
    goto <bb 522>;
  else
    goto <bb 66>;

  <bb 66>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2435
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2435]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#579 => &MEM[(struct pair &)__i$_M_node_2435 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.23997
  # DEBUG __y => D#579
  # DEBUG this => D#56
  # DEBUG __lhs => &D.23997
  # DEBUG __rhs => D#579
  # DEBUG this => &D.23997
  # DEBUG __str => D#579
  # DEBUG D#5 => &D.23997
  # DEBUG this => D#5
  # DEBUG __size => 1
  _744 = MEM[(long unsigned int *)__i$_M_node_2435 + 40B];
  # DEBUG D#5 => D#579
  # DEBUG this => D#5
  # DEBUG __osize => _744
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_744 == 0)
    goto <bb 535>;
  else
    goto <bb 67>;

  <bb 67>:
  # DEBUG D#551 => 1
  # DEBUG __len => D#551
  # DEBUG this => D#579
  _747 = MEM[(char * *)__i$_M_node_2435 + 32B];
  # DEBUG D#1 => D#579
  # DEBUG this => D#1
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG __s1 => &D.23997.D.11539._M_local_buf
  # DEBUG __s2 => _747
  # DEBUG __n => D#551
  _1151 = MEM[(const unsigned char * {ref-all})_747];
  _2289 = (int) _1151;
  __r_2228 = 82 - _2289;
  # DEBUG __r => NULL
  if (__r_2228 == 0)
    goto <bb 68>;
  else
    goto <bb 71>;

  <bb 68>:
  # DEBUG __len => D#551
  # DEBUG this => D#579
  # DEBUG this => D#1
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG __s1 => &D.23997.D.11539._M_local_buf
  # DEBUG __s2 => NULL
  # DEBUG __n => D#551
  # DEBUG __r => NULL
  # DEBUG __n1 => 1
  # DEBUG __n2 => _744
  _750 = 1 - _744;
  __d_751 = (const difference_type) _750;
  # DEBUG __d => __d_751
  if (__d_751 > 2147483647)
    goto <bb 76>;
  else
    goto <bb 69>;

  <bb 69>:
  if (__d_751 < -2147483648)
    goto <bb 72>;
  else
    goto <bb 70>;

  <bb 70>:
  # _1721 = PHI <_750(69), _2040(535)>
  # DEBUG __len => D#551
  # DEBUG this => D#579
  # DEBUG this => D#1
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG __s1 => &D.23997.D.11539._M_local_buf
  # DEBUG __s2 => NULL
  # DEBUG __n => D#551
  # DEBUG __r => NULL
  # DEBUG __n1 => 1
  # DEBUG __n2 => _744
  # DEBUG __d => NULL
  __r_752 = (int) _1721;

  <bb 71>:
  # __r_753 = PHI <__r_2228(67), __r_752(70)>
  # DEBUG __r => __r_753
  # DEBUG D#638 => {CLOBBER}
  # DEBUG __size => D#638
  # DEBUG D#639 => {CLOBBER}
  # DEBUG __osize => D#639
  if (__r_753 < 0)
    goto <bb 522>;
  else
    goto <bb 76>;

  <bb 72>:
  # __i$_M_node_1285 = PHI <__i$_M_node_2435(69), __i$_M_node_1280(522)>
  # DEBUG this => &D.47167
  # DEBUG __a => &D.23997
  # DEBUG __b => NULL
  # DEBUG this => &D.47167.first
  # DEBUG __str => &D.23997
  # DEBUG this => &D.23997
  # DEBUG D#145 => &D.23997._M_dataplus
  # DEBUG this => &D.47167.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.47167]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.47167].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.47167]._M_p = &MEM[(struct basic_string *)&D.47167].D.11539._M_local_buf;
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG D#2 => &D.23997
  # DEBUG this => D#2
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG this => &D.47167.first
  # DEBUG __beg => &D.23997.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.23997 + 17B]
  # DEBUG this => &D.47167.first
  # DEBUG __beg => &D.23997.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.23997 + 17B]
  # DEBUG this => &D.47167.first
  # DEBUG __beg => &D.23997.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.23997 + 17B]
  # DEBUG __ptr => &D.23997.D.11539._M_local_buf
  # DEBUG __first => &D.23997.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.23997 + 17B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.23997.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.23997 + 17B]
  # DEBUG __dnew => 1
  # DEBUG D#1 => &D.47167.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.47167].D.11539._M_local_buf
  # DEBUG __k1 => &D.23997.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.23997 + 17B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.47167].D.11539._M_local_buf
  # DEBUG __s => &D.23997.D.11539._M_local_buf
  # DEBUG __n => 1
  # DEBUG D#7 => &D.23997.D.11539._M_local_buf
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.47167].D.11539._M_local_buf
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.47167 + 16] = 82;
  # DEBUG this => &D.47167.first
  # DEBUG __n => 1
  # DEBUG D#6 => &D.47167.first
  # DEBUG __length => 1
  # DEBUG this => D#6
  MEM[(size_type *)&D.47167 + 8B] = 1;
  # DEBUG D#1 => &D.47167.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.47167 + 17B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.47167 + 17] = 0;
  # DEBUG D#640 => {CLOBBER}
  # DEBUG __dnew => D#640
  D.47167.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_1285
  # DEBUG __x => &D.47167
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1285;
  # DEBUG __x => &D.47167
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.47169 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.47167);

  <bb 73>:
  __i$_M_node_717 = MEM[(struct _Rb_tree_iterator *)&D.47169];
  # DEBUG __i$_M_node => __i$_M_node_717
  # DEBUG this => &D.47167
  # DEBUG D#49 => &D.47167.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _718 = MEM[(char * *)&D.47167];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.47167].D.11539._M_local_buf != _718)
    goto <bb 74>;
  else
    goto <bb 75>;

  <bb 74>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _718
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _718
  # DEBUG this => D#38
  # DEBUG D.47126 => D#39
  operator delete (_718);

  <bb 75>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.47167 ={v} {CLOBBER};
  pretmp_431 = MEM[(char * *)&D.23997];

  <bb 76>:
  # __i$_M_node_719 = PHI <__i$_M_node_2435(68), __i$_M_node_717(75), __i$_M_node_2435(71)>
  # prephitmp_432 = PHI <&D.23997.D.11539._M_local_buf(68), pretmp_431(75), &D.23997.D.11539._M_local_buf(71)>
  # DEBUG __i$_M_node => __i$_M_node_719
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_719
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_719]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_719 + 64] = 0.0;
  # DEBUG this => &D.23997
  # DEBUG this => &D.23997
  # DEBUG this => &D.23997
  # DEBUG D#823 => MEM[(char * *)&D.23997]
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG this => &D.23997
  if (&D.23997.D.11539._M_local_buf != prephitmp_432)
    goto <bb 80>;
  else
    goto <bb 81>;

<L50>:
  # DEBUG this => &D.47167
  # DEBUG D#49 => &D.47167.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _721 = MEM[(char * *)&D.47167];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.47167].D.11539._M_local_buf != _721)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _721
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _721
  # DEBUG this => D#38
  # DEBUG D.47110 => D#39
  operator delete (_721);

  <bb 79>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.47167 ={v} {CLOBBER};
  resx 100

  <bb 80>:
  # DEBUG D#47 => D.23997.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23997
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG this => &D.23997
  # DEBUG D#44 => &D.23997._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#823
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#823
  # DEBUG this => D#38
  # DEBUG D.37816 => D#39
  operator delete (prephitmp_432);

  <bb 81>:
  # DEBUG D#48 => &D.23997._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23997 ={v} {CLOBBER};
  # DEBUG this => &D.23998
  # DEBUG this => &D.23998
  # DEBUG D#15 => &D.24000
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24000
  # DEBUG this => &D.23999
  # DEBUG __s => "IoffSRAM"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.23999
  # DEBUG D#87 => &D.23999._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.23999.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.23999]._M_p = &D.23999.D.11539._M_local_buf;
  # DEBUG __s => "IoffSRAM"
  # DEBUG this => &D.23999
  # DEBUG __beg => "IoffSRAM"
  # DEBUG __end => &MEM[(void *)"IoffSRAM" + 8B]
  # DEBUG this => &D.23999
  # DEBUG __beg => "IoffSRAM"
  # DEBUG __end => &MEM[(void *)"IoffSRAM" + 8B]
  # DEBUG this => &D.23999
  # DEBUG __beg => "IoffSRAM"
  # DEBUG __end => &MEM[(void *)"IoffSRAM" + 8B]
  # DEBUG __ptr => "IoffSRAM"
  # DEBUG __first => "IoffSRAM"
  # DEBUG __last => &MEM[(void *)"IoffSRAM" + 8B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "IoffSRAM"
  # DEBUG __last => &MEM[(void *)"IoffSRAM" + 8B]
  # DEBUG __dnew => 8
  # DEBUG D#1 => &D.23999
  # DEBUG this => D#1
  # DEBUG __p => &D.23999.D.11539._M_local_buf
  # DEBUG __k1 => "IoffSRAM"
  # DEBUG __k2 => &MEM[(void *)"IoffSRAM" + 8B]
  # DEBUG __d => &D.23999.D.11539._M_local_buf
  # DEBUG __s => "IoffSRAM"
  # DEBUG __n => 8
  # DEBUG __s1 => &D.23999.D.11539._M_local_buf
  # DEBUG __s2 => "IoffSRAM"
  # DEBUG __n => 8
  __builtin_memcpy (&D.23999.D.11539._M_local_buf, "IoffSRAM", 8);
  # DEBUG this => &D.23999
  # DEBUG __n => 8
  # DEBUG D#6 => &D.23999
  # DEBUG __length => 8
  # DEBUG this => D#6
  MEM[(size_type *)&D.23999 + 8B] = 8;
  # DEBUG D#1 => &D.23999
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.23999 + 24B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.23999 + 24] = 0;
  # DEBUG D#641 => {CLOBBER}
  # DEBUG __dnew => D#641
  # DEBUG this => _65
  # DEBUG __k => &D.23999
  # DEBUG this => _65
  # DEBUG __x => &D.23999
  # DEBUG this => _65
  # DEBUG __k => &D.23999
  # DEBUG this => _65
  __i$_M_node_797 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.23999
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_797
  if (__i$_M_node_797 == 0B)
    goto <bb 523>;
  else
    goto <bb 84>;

  <bb 82>:
  # __i$_M_node_1286 = PHI <__i$_M_node_801(90), __i$_M_node_802(91)>
  # __i$_M_node_1299 = PHI <__i$_M_node_1967(90), __i$_M_node_1944(91)>
  # DEBUG __y => __i$_M_node_1299
  # DEBUG __x => __i$_M_node_1286
  if (__i$_M_node_1286 == 0B)
    goto <bb 92>;
  else
    goto <bb 83>;

  <bb 83>:
  goto <bb 85>;

  <bb 84>:

  <bb 85>:
  # __i$_M_node_1967 = PHI <__i$_M_node_797(84), __i$_M_node_1286(83)>
  # __i$_M_node_1944 = PHI <__i$_M_node_66(84), __i$_M_node_1299(83)>
  # DEBUG __y => __i$_M_node_1944
  # DEBUG __x => __i$_M_node_1967
  # DEBUG __x => __i$_M_node_1967
  # DEBUG __x => __i$_M_node_1967
  # DEBUG this => __i$_M_node_1967
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_1967]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#580 => &MEM[(const struct pair &)__i$_M_node_1967 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#580
  # DEBUG __y => &D.23999
  # DEBUG this => D#56
  # DEBUG __lhs => D#580
  # DEBUG __rhs => &D.23999
  # DEBUG this => D#580
  # DEBUG __str => &D.23999
  _806 = MEM[(long unsigned int *)__i$_M_node_1967 + 40B];
  # DEBUG D#5 => D#580
  # DEBUG this => D#5
  # DEBUG __size => _806
  # DEBUG D#5 => &D.23999
  # DEBUG this => D#5
  # DEBUG __osize => 8
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1662 = MIN_EXPR <_806, 8>;
  # DEBUG __len => D#552
  # DEBUG this => &D.23999
  # DEBUG D#1 => &D.23999
  # DEBUG this => D#1
  _811 = MEM[(char * *)__i$_M_node_1967 + 32B];
  # DEBUG D#1 => D#580
  # DEBUG this => D#1
  # DEBUG __s1 => _811
  # DEBUG __s2 => &D.23999.D.11539._M_local_buf
  # DEBUG __n => D#552
  __r_812 = __builtin_memcmp (_811, &D.23999.D.11539._M_local_buf, __len_1662);
  # DEBUG __r => NULL
  if (__r_812 == 0)
    goto <bb 86>;
  else
    goto <bb 89>;

  <bb 86>:
  # DEBUG __n1 => _806
  # DEBUG __n2 => 8
  _813 = _806 - 8;
  __d_814 = (const difference_type) _813;
  # DEBUG __d => __d_814
  if (__d_814 > 2147483647)
    goto <bb 90>;
  else
    goto <bb 87>;

  <bb 87>:
  if (__d_814 < -2147483648)
    goto <bb 91>;
  else
    goto <bb 88>;

  <bb 88>:
  __r_815 = (int) _813;

  <bb 89>:
  # __r_816 = PHI <__r_812(85), __r_815(88)>
  # DEBUG __r => __r_816
  # DEBUG D#646 => {CLOBBER}
  # DEBUG __size => D#646
  # DEBUG D#647 => {CLOBBER}
  # DEBUG __osize => D#647
  if (__r_816 >= 0)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_1967
  __i$_M_node_801 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1967 + 16B];
  # DEBUG D#21 => __i$_M_node_1967
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 82>;

  <bb 91>:
  # DEBUG __r => NULL
  __i$_M_node_802 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1967 + 24B];
  # DEBUG D#20 => __i$_M_node_1967
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 82>;

  <bb 92>:
  # __i$_M_node_2436 = PHI <__i$_M_node_1299(82)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2436
  # DEBUG __i$_M_node => __i$_M_node_2436
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2436)
    goto <bb 523>;
  else
    goto <bb 93>;

  <bb 93>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2436
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2436]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#581 => &MEM[(struct pair &)__i$_M_node_2436 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.23999
  # DEBUG __y => D#581
  # DEBUG this => D#56
  # DEBUG __lhs => &D.23999
  # DEBUG __rhs => D#581
  # DEBUG this => &D.23999
  # DEBUG __str => D#581
  # DEBUG D#5 => &D.23999
  # DEBUG this => D#5
  # DEBUG __size => 8
  _819 = MEM[(long unsigned int *)__i$_M_node_2436 + 40B];
  # DEBUG D#5 => D#581
  # DEBUG this => D#5
  # DEBUG __osize => _819
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_819 <= 7)
    goto <bb 95>;
  else
    goto <bb 94>;

  <bb 94>:

  <bb 95>:
  # __len_821 = PHI <_819(93), 8(94)>
  # DEBUG __len => D#553
  # DEBUG this => D#581
  _822 = MEM[(char * *)__i$_M_node_2436 + 32B];
  # DEBUG D#1 => D#581
  # DEBUG this => D#1
  # DEBUG D#1 => &D.23999
  # DEBUG this => D#1
  # DEBUG __s1 => &D.23999.D.11539._M_local_buf
  # DEBUG __s2 => _822
  # DEBUG __n => D#553
  __r_824 = __builtin_memcmp (&D.23999.D.11539._M_local_buf, _822, __len_821);
  # DEBUG __r => NULL
  if (__r_824 == 0)
    goto <bb 96>;
  else
    goto <bb 99>;

  <bb 96>:
  # DEBUG __n1 => 8
  # DEBUG __n2 => _819
  _825 = 8 - _819;
  __d_826 = (const difference_type) _825;
  # DEBUG __d => __d_826
  if (__d_826 > 2147483647)
    goto <bb 104>;
  else
    goto <bb 97>;

  <bb 97>:
  if (__d_826 < -2147483648)
    goto <bb 100>;
  else
    goto <bb 98>;

  <bb 98>:
  __r_827 = (int) _825;

  <bb 99>:
  # __r_828 = PHI <__r_824(95), __r_827(98)>
  # DEBUG __r => __r_828
  # DEBUG D#652 => {CLOBBER}
  # DEBUG __size => D#652
  # DEBUG D#653 => {CLOBBER}
  # DEBUG __osize => D#653
  if (__r_828 < 0)
    goto <bb 523>;
  else
    goto <bb 104>;

  <bb 100>:
  # __i$_M_node_659 = PHI <__i$_M_node_2436(97), __i$_M_node_734(523)>
  # DEBUG this => &D.47363
  # DEBUG __a => &D.23999
  # DEBUG __b => NULL
  # DEBUG this => &D.47363.first
  # DEBUG __str => &D.23999
  # DEBUG this => &D.23999
  # DEBUG D#145 => &D.23999._M_dataplus
  # DEBUG this => &D.47363.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.47363]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.47363].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.47363]._M_p = &MEM[(struct basic_string *)&D.47363].D.11539._M_local_buf;
  # DEBUG D#1 => &D.23999
  # DEBUG this => D#1
  # DEBUG D#2 => &D.23999
  # DEBUG this => D#2
  # DEBUG D#1 => &D.23999
  # DEBUG this => D#1
  # DEBUG this => &D.47363.first
  # DEBUG __beg => &D.23999.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.23999 + 24B]
  # DEBUG this => &D.47363.first
  # DEBUG __beg => &D.23999.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.23999 + 24B]
  # DEBUG this => &D.47363.first
  # DEBUG __beg => &D.23999.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.23999 + 24B]
  # DEBUG __ptr => &D.23999.D.11539._M_local_buf
  # DEBUG __first => &D.23999.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.23999 + 24B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.23999.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.23999 + 24B]
  # DEBUG __dnew => 8
  # DEBUG D#1 => &D.47363.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.47363].D.11539._M_local_buf
  # DEBUG __k1 => &D.23999.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.23999 + 24B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.47363].D.11539._M_local_buf
  # DEBUG __s => &D.23999.D.11539._M_local_buf
  # DEBUG __n => 8
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.47363].D.11539._M_local_buf
  # DEBUG __s2 => &D.23999.D.11539._M_local_buf
  # DEBUG __n => 8
  _2273 = MEM[(char * {ref-all})&D.23999 + 16B];
  MEM[(char * {ref-all})&D.47363 + 16B] = _2273;
  # DEBUG this => &D.47363.first
  # DEBUG __n => 8
  # DEBUG D#6 => &D.47363.first
  # DEBUG __length => 8
  # DEBUG this => D#6
  MEM[(size_type *)&D.47363 + 8B] = 8;
  # DEBUG D#1 => &D.47363.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.47363 + 24B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.47363 + 24] = 0;
  # DEBUG D#654 => {CLOBBER}
  # DEBUG __dnew => D#654
  D.47363.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_659
  # DEBUG __x => &D.47363
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_659;
  # DEBUG __x => &D.47363
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.47365 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.47363);

  <bb 101>:
  __i$_M_node_792 = MEM[(struct _Rb_tree_iterator *)&D.47365];
  # DEBUG __i$_M_node => __i$_M_node_792
  # DEBUG this => &D.47363
  # DEBUG D#49 => &D.47363.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _793 = MEM[(char * *)&D.47363];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.47363].D.11539._M_local_buf != _793)
    goto <bb 102>;
  else
    goto <bb 103>;

  <bb 102>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _793
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _793
  # DEBUG this => D#38
  # DEBUG D.47322 => D#39
  operator delete (_793);

  <bb 103>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.47363 ={v} {CLOBBER};
  pretmp_2015 = MEM[(char * *)&D.23999];

  <bb 104>:
  # __i$_M_node_794 = PHI <__i$_M_node_2436(96), __i$_M_node_792(103), __i$_M_node_2436(99)>
  # prephitmp_2016 = PHI <&D.23999.D.11539._M_local_buf(96), pretmp_2015(103), &D.23999.D.11539._M_local_buf(99)>
  # DEBUG __i$_M_node => __i$_M_node_794
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_794
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_794]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_794 + 64] = 0.0;
  # DEBUG this => &D.23999
  # DEBUG this => &D.23999
  # DEBUG this => &D.23999
  # DEBUG D#822 => MEM[(char * *)&D.23999]
  # DEBUG D#1 => &D.23999
  # DEBUG this => D#1
  # DEBUG this => &D.23999
  if (&D.23999.D.11539._M_local_buf != prephitmp_2016)
    goto <bb 108>;
  else
    goto <bb 109>;

<L51>:
  # DEBUG this => &D.47363
  # DEBUG D#49 => &D.47363.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _796 = MEM[(char * *)&D.47363];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.47363].D.11539._M_local_buf != _796)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _796
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _796
  # DEBUG this => D#38
  # DEBUG D.47306 => D#39
  operator delete (_796);

  <bb 107>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.47363 ={v} {CLOBBER};
  resx 101

  <bb 108>:
  # DEBUG D#47 => D.23999.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23999
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23999
  # DEBUG this => D#1
  # DEBUG this => &D.23999
  # DEBUG D#44 => &D.23999._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#822
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#822
  # DEBUG this => D#38
  # DEBUG D.37834 => D#39
  operator delete (prephitmp_2016);

  <bb 109>:
  # DEBUG D#48 => &D.23999._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23999 ={v} {CLOBBER};
  # DEBUG this => &D.24000
  # DEBUG this => &D.24000
  # DEBUG D#15 => &D.24002
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24002
  # DEBUG this => &D.24001
  # DEBUG __s => "IoffP"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24001
  # DEBUG D#87 => &D.24001._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24001.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24001]._M_p = &D.24001.D.11539._M_local_buf;
  # DEBUG __s => "IoffP"
  # DEBUG this => &D.24001
  # DEBUG __beg => "IoffP"
  # DEBUG __end => &MEM[(void *)"IoffP" + 5B]
  # DEBUG this => &D.24001
  # DEBUG __beg => "IoffP"
  # DEBUG __end => &MEM[(void *)"IoffP" + 5B]
  # DEBUG this => &D.24001
  # DEBUG __beg => "IoffP"
  # DEBUG __end => &MEM[(void *)"IoffP" + 5B]
  # DEBUG __ptr => "IoffP"
  # DEBUG __first => "IoffP"
  # DEBUG __last => &MEM[(void *)"IoffP" + 5B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "IoffP"
  # DEBUG __last => &MEM[(void *)"IoffP" + 5B]
  # DEBUG __dnew => 5
  # DEBUG D#1 => &D.24001
  # DEBUG this => D#1
  # DEBUG __p => &D.24001.D.11539._M_local_buf
  # DEBUG __k1 => "IoffP"
  # DEBUG __k2 => &MEM[(void *)"IoffP" + 5B]
  # DEBUG __d => &D.24001.D.11539._M_local_buf
  # DEBUG __s => "IoffP"
  # DEBUG __n => 5
  # DEBUG __s1 => &D.24001.D.11539._M_local_buf
  # DEBUG __s2 => "IoffP"
  # DEBUG __n => 5
  __builtin_memcpy (&D.24001.D.11539._M_local_buf, "IoffP", 5);
  # DEBUG this => &D.24001
  # DEBUG __n => 5
  # DEBUG D#6 => &D.24001
  # DEBUG __length => 5
  # DEBUG this => D#6
  MEM[(size_type *)&D.24001 + 8B] = 5;
  # DEBUG D#1 => &D.24001
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24001 + 21B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24001 + 21] = 0;
  # DEBUG D#655 => {CLOBBER}
  # DEBUG __dnew => D#655
  # DEBUG this => _65
  # DEBUG __k => &D.24001
  # DEBUG this => _65
  # DEBUG __x => &D.24001
  # DEBUG this => _65
  # DEBUG __k => &D.24001
  # DEBUG this => _65
  __i$_M_node_872 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24001
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_872
  if (__i$_M_node_872 == 0B)
    goto <bb 524>;
  else
    goto <bb 112>;

  <bb 110>:
  # __i$_M_node_1192 = PHI <__i$_M_node_876(118), __i$_M_node_877(119)>
  # __i$_M_node_1204 = PHI <__i$_M_node_1942(118), __i$_M_node_1738(119)>
  # DEBUG __y => __i$_M_node_1204
  # DEBUG __x => __i$_M_node_1192
  if (__i$_M_node_1192 == 0B)
    goto <bb 120>;
  else
    goto <bb 111>;

  <bb 111>:
  goto <bb 113>;

  <bb 112>:

  <bb 113>:
  # __i$_M_node_1942 = PHI <__i$_M_node_872(112), __i$_M_node_1192(111)>
  # __i$_M_node_1738 = PHI <__i$_M_node_66(112), __i$_M_node_1204(111)>
  # DEBUG __y => __i$_M_node_1738
  # DEBUG __x => __i$_M_node_1942
  # DEBUG __x => __i$_M_node_1942
  # DEBUG __x => __i$_M_node_1942
  # DEBUG this => __i$_M_node_1942
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_1942]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#582 => &MEM[(const struct pair &)__i$_M_node_1942 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#582
  # DEBUG __y => &D.24001
  # DEBUG this => D#56
  # DEBUG __lhs => D#582
  # DEBUG __rhs => &D.24001
  # DEBUG this => D#582
  # DEBUG __str => &D.24001
  _881 = MEM[(long unsigned int *)__i$_M_node_1942 + 40B];
  # DEBUG D#5 => D#582
  # DEBUG this => D#5
  # DEBUG __size => _881
  # DEBUG D#5 => &D.24001
  # DEBUG this => D#5
  # DEBUG __osize => 5
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1611 = MIN_EXPR <_881, 5>;
  # DEBUG __len => D#554
  # DEBUG this => &D.24001
  # DEBUG D#1 => &D.24001
  # DEBUG this => D#1
  _886 = MEM[(char * *)__i$_M_node_1942 + 32B];
  # DEBUG D#1 => D#582
  # DEBUG this => D#1
  # DEBUG __s1 => _886
  # DEBUG __s2 => &D.24001.D.11539._M_local_buf
  # DEBUG __n => D#554
  __r_887 = __builtin_memcmp (_886, &D.24001.D.11539._M_local_buf, __len_1611);
  # DEBUG __r => NULL
  if (__r_887 == 0)
    goto <bb 114>;
  else
    goto <bb 117>;

  <bb 114>:
  # DEBUG __n1 => _881
  # DEBUG __n2 => 5
  _888 = _881 - 5;
  __d_889 = (const difference_type) _888;
  # DEBUG __d => __d_889
  if (__d_889 > 2147483647)
    goto <bb 118>;
  else
    goto <bb 115>;

  <bb 115>:
  if (__d_889 < -2147483648)
    goto <bb 119>;
  else
    goto <bb 116>;

  <bb 116>:
  __r_890 = (int) _888;

  <bb 117>:
  # __r_891 = PHI <__r_887(113), __r_890(116)>
  # DEBUG __r => __r_891
  # DEBUG D#660 => {CLOBBER}
  # DEBUG __size => D#660
  # DEBUG D#661 => {CLOBBER}
  # DEBUG __osize => D#661
  if (__r_891 >= 0)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_1942
  __i$_M_node_876 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1942 + 16B];
  # DEBUG D#21 => __i$_M_node_1942
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 110>;

  <bb 119>:
  # DEBUG __r => NULL
  __i$_M_node_877 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1942 + 24B];
  # DEBUG D#20 => __i$_M_node_1942
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 110>;

  <bb 120>:
  # __i$_M_node_2437 = PHI <__i$_M_node_1204(110)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2437
  # DEBUG __i$_M_node => __i$_M_node_2437
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2437)
    goto <bb 524>;
  else
    goto <bb 121>;

  <bb 121>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2437
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2437]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#583 => &MEM[(struct pair &)__i$_M_node_2437 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24001
  # DEBUG __y => D#583
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24001
  # DEBUG __rhs => D#583
  # DEBUG this => &D.24001
  # DEBUG __str => D#583
  # DEBUG D#5 => &D.24001
  # DEBUG this => D#5
  # DEBUG __size => 5
  _894 = MEM[(long unsigned int *)__i$_M_node_2437 + 40B];
  # DEBUG D#5 => D#583
  # DEBUG this => D#5
  # DEBUG __osize => _894
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_894 <= 4)
    goto <bb 123>;
  else
    goto <bb 122>;

  <bb 122>:

  <bb 123>:
  # __len_896 = PHI <_894(121), 5(122)>
  # DEBUG __len => D#555
  # DEBUG this => D#583
  _897 = MEM[(char * *)__i$_M_node_2437 + 32B];
  # DEBUG D#1 => D#583
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24001
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24001.D.11539._M_local_buf
  # DEBUG __s2 => _897
  # DEBUG __n => D#555
  __r_899 = __builtin_memcmp (&D.24001.D.11539._M_local_buf, _897, __len_896);
  # DEBUG __r => NULL
  if (__r_899 == 0)
    goto <bb 124>;
  else
    goto <bb 127>;

  <bb 124>:
  # DEBUG __n1 => 5
  # DEBUG __n2 => _894
  _900 = 5 - _894;
  __d_901 = (const difference_type) _900;
  # DEBUG __d => __d_901
  if (__d_901 > 2147483647)
    goto <bb 132>;
  else
    goto <bb 125>;

  <bb 125>:
  if (__d_901 < -2147483648)
    goto <bb 128>;
  else
    goto <bb 126>;

  <bb 126>:
  __r_902 = (int) _900;

  <bb 127>:
  # __r_903 = PHI <__r_899(123), __r_902(126)>
  # DEBUG __r => __r_903
  # DEBUG D#666 => {CLOBBER}
  # DEBUG __size => D#666
  # DEBUG D#667 => {CLOBBER}
  # DEBUG __osize => D#667
  if (__r_903 < 0)
    goto <bb 524>;
  else
    goto <bb 132>;

  <bb 128>:
  # __i$_M_node_1103 = PHI <__i$_M_node_2437(125), __i$_M_node_1098(524)>
  # DEBUG this => &D.47559
  # DEBUG __a => &D.24001
  # DEBUG __b => NULL
  # DEBUG this => &D.47559.first
  # DEBUG __str => &D.24001
  # DEBUG this => &D.24001
  # DEBUG D#145 => &D.24001._M_dataplus
  # DEBUG this => &D.47559.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.47559]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.47559].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.47559]._M_p = &MEM[(struct basic_string *)&D.47559].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24001
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24001
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24001
  # DEBUG this => D#1
  # DEBUG this => &D.47559.first
  # DEBUG __beg => &D.24001.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24001 + 21B]
  # DEBUG this => &D.47559.first
  # DEBUG __beg => &D.24001.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24001 + 21B]
  # DEBUG this => &D.47559.first
  # DEBUG __beg => &D.24001.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24001 + 21B]
  # DEBUG __ptr => &D.24001.D.11539._M_local_buf
  # DEBUG __first => &D.24001.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24001 + 21B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24001.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24001 + 21B]
  # DEBUG __dnew => 5
  # DEBUG D#1 => &D.47559.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.47559].D.11539._M_local_buf
  # DEBUG __k1 => &D.24001.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24001 + 21B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.47559].D.11539._M_local_buf
  # DEBUG __s => &D.24001.D.11539._M_local_buf
  # DEBUG __n => 5
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.47559].D.11539._M_local_buf
  # DEBUG __s2 => &D.24001.D.11539._M_local_buf
  # DEBUG __n => 5
  __builtin_memcpy (&MEM[(struct basic_string *)&D.47559].D.11539._M_local_buf, &D.24001.D.11539._M_local_buf, 5);
  # DEBUG this => &D.47559.first
  # DEBUG __n => 5
  # DEBUG D#6 => &D.47559.first
  # DEBUG __length => 5
  # DEBUG this => D#6
  MEM[(size_type *)&D.47559 + 8B] = 5;
  # DEBUG D#1 => &D.47559.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.47559 + 21B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.47559 + 21] = 0;
  # DEBUG D#668 => {CLOBBER}
  # DEBUG __dnew => D#668
  D.47559.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_1103
  # DEBUG __x => &D.47559
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1103;
  # DEBUG __x => &D.47559
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.47561 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.47559);

  <bb 129>:
  __i$_M_node_867 = MEM[(struct _Rb_tree_iterator *)&D.47561];
  # DEBUG __i$_M_node => __i$_M_node_867
  # DEBUG this => &D.47559
  # DEBUG D#49 => &D.47559.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _868 = MEM[(char * *)&D.47559];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.47559].D.11539._M_local_buf != _868)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _868
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _868
  # DEBUG this => D#38
  # DEBUG D.47518 => D#39
  operator delete (_868);

  <bb 131>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.47559 ={v} {CLOBBER};
  pretmp_1961 = MEM[(char * *)&D.24001];

  <bb 132>:
  # __i$_M_node_869 = PHI <__i$_M_node_2437(124), __i$_M_node_867(131), __i$_M_node_2437(127)>
  # prephitmp_1962 = PHI <&D.24001.D.11539._M_local_buf(124), pretmp_1961(131), &D.24001.D.11539._M_local_buf(127)>
  # DEBUG __i$_M_node => __i$_M_node_869
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_869
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_869]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_869 + 64] = 0.0;
  # DEBUG this => &D.24001
  # DEBUG this => &D.24001
  # DEBUG this => &D.24001
  # DEBUG D#821 => MEM[(char * *)&D.24001]
  # DEBUG D#1 => &D.24001
  # DEBUG this => D#1
  # DEBUG this => &D.24001
  if (&D.24001.D.11539._M_local_buf != prephitmp_1962)
    goto <bb 136>;
  else
    goto <bb 137>;

<L52>:
  # DEBUG this => &D.47559
  # DEBUG D#49 => &D.47559.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _871 = MEM[(char * *)&D.47559];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.47559].D.11539._M_local_buf != _871)
    goto <bb 134>;
  else
    goto <bb 135>;

  <bb 134>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _871
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _871
  # DEBUG this => D#38
  # DEBUG D.47502 => D#39
  operator delete (_871);

  <bb 135>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.47559 ={v} {CLOBBER};
  resx 102

  <bb 136>:
  # DEBUG D#47 => D.24001.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24001
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24001
  # DEBUG this => D#1
  # DEBUG this => &D.24001
  # DEBUG D#44 => &D.24001._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#821
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#821
  # DEBUG this => D#38
  # DEBUG D.37852 => D#39
  operator delete (prephitmp_1962);

  <bb 137>:
  # DEBUG D#48 => &D.24001._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24001 ={v} {CLOBBER};
  # DEBUG this => &D.24002
  # DEBUG this => &D.24002
  # DEBUG D#15 => &D.24004
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24004
  # DEBUG this => &D.24003
  # DEBUG __s => "IoffN"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24003
  # DEBUG D#87 => &D.24003._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24003.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24003]._M_p = &D.24003.D.11539._M_local_buf;
  # DEBUG __s => "IoffN"
  # DEBUG this => &D.24003
  # DEBUG __beg => "IoffN"
  # DEBUG __end => &MEM[(void *)"IoffN" + 5B]
  # DEBUG this => &D.24003
  # DEBUG __beg => "IoffN"
  # DEBUG __end => &MEM[(void *)"IoffN" + 5B]
  # DEBUG this => &D.24003
  # DEBUG __beg => "IoffN"
  # DEBUG __end => &MEM[(void *)"IoffN" + 5B]
  # DEBUG __ptr => "IoffN"
  # DEBUG __first => "IoffN"
  # DEBUG __last => &MEM[(void *)"IoffN" + 5B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "IoffN"
  # DEBUG __last => &MEM[(void *)"IoffN" + 5B]
  # DEBUG __dnew => 5
  # DEBUG D#1 => &D.24003
  # DEBUG this => D#1
  # DEBUG __p => &D.24003.D.11539._M_local_buf
  # DEBUG __k1 => "IoffN"
  # DEBUG __k2 => &MEM[(void *)"IoffN" + 5B]
  # DEBUG __d => &D.24003.D.11539._M_local_buf
  # DEBUG __s => "IoffN"
  # DEBUG __n => 5
  # DEBUG __s1 => &D.24003.D.11539._M_local_buf
  # DEBUG __s2 => "IoffN"
  # DEBUG __n => 5
  __builtin_memcpy (&D.24003.D.11539._M_local_buf, "IoffN", 5);
  # DEBUG this => &D.24003
  # DEBUG __n => 5
  # DEBUG D#6 => &D.24003
  # DEBUG __length => 5
  # DEBUG this => D#6
  MEM[(size_type *)&D.24003 + 8B] = 5;
  # DEBUG D#1 => &D.24003
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24003 + 21B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24003 + 21] = 0;
  # DEBUG D#669 => {CLOBBER}
  # DEBUG __dnew => D#669
  # DEBUG this => _65
  # DEBUG __k => &D.24003
  # DEBUG this => _65
  # DEBUG __x => &D.24003
  # DEBUG this => _65
  # DEBUG __k => &D.24003
  # DEBUG this => _65
  __i$_M_node_947 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24003
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_947
  if (__i$_M_node_947 == 0B)
    goto <bb 525>;
  else
    goto <bb 140>;

  <bb 138>:
  # __i$_M_node_1129 = PHI <__i$_M_node_951(146), __i$_M_node_952(147)>
  # __i$_M_node_1180 = PHI <__i$_M_node_685(146), __i$_M_node_1893(147)>
  # DEBUG __y => __i$_M_node_1180
  # DEBUG __x => __i$_M_node_1129
  if (__i$_M_node_1129 == 0B)
    goto <bb 148>;
  else
    goto <bb 139>;

  <bb 139>:
  goto <bb 141>;

  <bb 140>:

  <bb 141>:
  # __i$_M_node_685 = PHI <__i$_M_node_947(140), __i$_M_node_1129(139)>
  # __i$_M_node_1893 = PHI <__i$_M_node_66(140), __i$_M_node_1180(139)>
  # DEBUG __y => __i$_M_node_1893
  # DEBUG __x => __i$_M_node_685
  # DEBUG __x => __i$_M_node_685
  # DEBUG __x => __i$_M_node_685
  # DEBUG this => __i$_M_node_685
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_685]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#584 => &MEM[(const struct pair &)__i$_M_node_685 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#584
  # DEBUG __y => &D.24003
  # DEBUG this => D#56
  # DEBUG __lhs => D#584
  # DEBUG __rhs => &D.24003
  # DEBUG this => D#584
  # DEBUG __str => &D.24003
  _956 = MEM[(long unsigned int *)__i$_M_node_685 + 40B];
  # DEBUG D#5 => D#584
  # DEBUG this => D#5
  # DEBUG __size => _956
  # DEBUG D#5 => &D.24003
  # DEBUG this => D#5
  # DEBUG __osize => 5
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1599 = MIN_EXPR <_956, 5>;
  # DEBUG __len => D#556
  # DEBUG this => &D.24003
  # DEBUG D#1 => &D.24003
  # DEBUG this => D#1
  _961 = MEM[(char * *)__i$_M_node_685 + 32B];
  # DEBUG D#1 => D#584
  # DEBUG this => D#1
  # DEBUG __s1 => _961
  # DEBUG __s2 => &D.24003.D.11539._M_local_buf
  # DEBUG __n => D#556
  __r_962 = __builtin_memcmp (_961, &D.24003.D.11539._M_local_buf, __len_1599);
  # DEBUG __r => NULL
  if (__r_962 == 0)
    goto <bb 142>;
  else
    goto <bb 145>;

  <bb 142>:
  # DEBUG __n1 => _956
  # DEBUG __n2 => 5
  _963 = _956 - 5;
  __d_964 = (const difference_type) _963;
  # DEBUG __d => __d_964
  if (__d_964 > 2147483647)
    goto <bb 146>;
  else
    goto <bb 143>;

  <bb 143>:
  if (__d_964 < -2147483648)
    goto <bb 147>;
  else
    goto <bb 144>;

  <bb 144>:
  __r_965 = (int) _963;

  <bb 145>:
  # __r_966 = PHI <__r_962(141), __r_965(144)>
  # DEBUG __r => __r_966
  # DEBUG D#674 => {CLOBBER}
  # DEBUG __size => D#674
  # DEBUG D#675 => {CLOBBER}
  # DEBUG __osize => D#675
  if (__r_966 >= 0)
    goto <bb 146>;
  else
    goto <bb 147>;

  <bb 146>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_685
  __i$_M_node_951 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_685 + 16B];
  # DEBUG D#21 => __i$_M_node_685
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 138>;

  <bb 147>:
  # DEBUG __r => NULL
  __i$_M_node_952 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_685 + 24B];
  # DEBUG D#20 => __i$_M_node_685
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 138>;

  <bb 148>:
  # __i$_M_node_2440 = PHI <__i$_M_node_1180(138)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2440
  # DEBUG __i$_M_node => __i$_M_node_2440
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2440)
    goto <bb 525>;
  else
    goto <bb 149>;

  <bb 149>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2440
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2440]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#585 => &MEM[(struct pair &)__i$_M_node_2440 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24003
  # DEBUG __y => D#585
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24003
  # DEBUG __rhs => D#585
  # DEBUG this => &D.24003
  # DEBUG __str => D#585
  # DEBUG D#5 => &D.24003
  # DEBUG this => D#5
  # DEBUG __size => 5
  _969 = MEM[(long unsigned int *)__i$_M_node_2440 + 40B];
  # DEBUG D#5 => D#585
  # DEBUG this => D#5
  # DEBUG __osize => _969
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_969 <= 4)
    goto <bb 151>;
  else
    goto <bb 150>;

  <bb 150>:

  <bb 151>:
  # __len_971 = PHI <_969(149), 5(150)>
  # DEBUG __len => D#557
  # DEBUG this => D#585
  _972 = MEM[(char * *)__i$_M_node_2440 + 32B];
  # DEBUG D#1 => D#585
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24003
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24003.D.11539._M_local_buf
  # DEBUG __s2 => _972
  # DEBUG __n => D#557
  __r_974 = __builtin_memcmp (&D.24003.D.11539._M_local_buf, _972, __len_971);
  # DEBUG __r => NULL
  if (__r_974 == 0)
    goto <bb 152>;
  else
    goto <bb 155>;

  <bb 152>:
  # DEBUG __n1 => 5
  # DEBUG __n2 => _969
  _975 = 5 - _969;
  __d_976 = (const difference_type) _975;
  # DEBUG __d => __d_976
  if (__d_976 > 2147483647)
    goto <bb 160>;
  else
    goto <bb 153>;

  <bb 153>:
  if (__d_976 < -2147483648)
    goto <bb 156>;
  else
    goto <bb 154>;

  <bb 154>:
  __r_977 = (int) _975;

  <bb 155>:
  # __r_978 = PHI <__r_974(151), __r_977(154)>
  # DEBUG __r => __r_978
  # DEBUG D#680 => {CLOBBER}
  # DEBUG __size => D#680
  # DEBUG D#681 => {CLOBBER}
  # DEBUG __osize => D#681
  if (__r_978 < 0)
    goto <bb 525>;
  else
    goto <bb 160>;

  <bb 156>:
  # __i$_M_node_1136 = PHI <__i$_M_node_2440(153), __i$_M_node_1699(525)>
  # DEBUG this => &D.47755
  # DEBUG __a => &D.24003
  # DEBUG __b => NULL
  # DEBUG this => &D.47755.first
  # DEBUG __str => &D.24003
  # DEBUG this => &D.24003
  # DEBUG D#145 => &D.24003._M_dataplus
  # DEBUG this => &D.47755.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.47755]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.47755].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.47755]._M_p = &MEM[(struct basic_string *)&D.47755].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24003
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24003
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24003
  # DEBUG this => D#1
  # DEBUG this => &D.47755.first
  # DEBUG __beg => &D.24003.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24003 + 21B]
  # DEBUG this => &D.47755.first
  # DEBUG __beg => &D.24003.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24003 + 21B]
  # DEBUG this => &D.47755.first
  # DEBUG __beg => &D.24003.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24003 + 21B]
  # DEBUG __ptr => &D.24003.D.11539._M_local_buf
  # DEBUG __first => &D.24003.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24003 + 21B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24003.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24003 + 21B]
  # DEBUG __dnew => 5
  # DEBUG D#1 => &D.47755.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.47755].D.11539._M_local_buf
  # DEBUG __k1 => &D.24003.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24003 + 21B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.47755].D.11539._M_local_buf
  # DEBUG __s => &D.24003.D.11539._M_local_buf
  # DEBUG __n => 5
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.47755].D.11539._M_local_buf
  # DEBUG __s2 => &D.24003.D.11539._M_local_buf
  # DEBUG __n => 5
  __builtin_memcpy (&MEM[(struct basic_string *)&D.47755].D.11539._M_local_buf, &D.24003.D.11539._M_local_buf, 5);
  # DEBUG this => &D.47755.first
  # DEBUG __n => 5
  # DEBUG D#6 => &D.47755.first
  # DEBUG __length => 5
  # DEBUG this => D#6
  MEM[(size_type *)&D.47755 + 8B] = 5;
  # DEBUG D#1 => &D.47755.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.47755 + 21B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.47755 + 21] = 0;
  # DEBUG D#682 => {CLOBBER}
  # DEBUG __dnew => D#682
  D.47755.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_1136
  # DEBUG __x => &D.47755
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1136;
  # DEBUG __x => &D.47755
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.47757 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.47755);

  <bb 157>:
  __i$_M_node_942 = MEM[(struct _Rb_tree_iterator *)&D.47757];
  # DEBUG __i$_M_node => __i$_M_node_942
  # DEBUG this => &D.47755
  # DEBUG D#49 => &D.47755.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _943 = MEM[(char * *)&D.47755];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.47755].D.11539._M_local_buf != _943)
    goto <bb 158>;
  else
    goto <bb 159>;

  <bb 158>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _943
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _943
  # DEBUG this => D#38
  # DEBUG D.47714 => D#39
  operator delete (_943);

  <bb 159>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.47755 ={v} {CLOBBER};
  pretmp_441 = MEM[(char * *)&D.24003];

  <bb 160>:
  # __i$_M_node_944 = PHI <__i$_M_node_2440(152), __i$_M_node_942(159), __i$_M_node_2440(155)>
  # prephitmp_442 = PHI <&D.24003.D.11539._M_local_buf(152), pretmp_441(159), &D.24003.D.11539._M_local_buf(155)>
  # DEBUG __i$_M_node => __i$_M_node_944
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_944
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_944]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_944 + 64] = 0.0;
  # DEBUG this => &D.24003
  # DEBUG this => &D.24003
  # DEBUG this => &D.24003
  # DEBUG D#820 => MEM[(char * *)&D.24003]
  # DEBUG D#1 => &D.24003
  # DEBUG this => D#1
  # DEBUG this => &D.24003
  if (&D.24003.D.11539._M_local_buf != prephitmp_442)
    goto <bb 164>;
  else
    goto <bb 165>;

<L53>:
  # DEBUG this => &D.47755
  # DEBUG D#49 => &D.47755.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _946 = MEM[(char * *)&D.47755];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.47755].D.11539._M_local_buf != _946)
    goto <bb 162>;
  else
    goto <bb 163>;

  <bb 162>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _946
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _946
  # DEBUG this => D#38
  # DEBUG D.47698 => D#39
  operator delete (_946);

  <bb 163>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.47755 ={v} {CLOBBER};
  resx 103

  <bb 164>:
  # DEBUG D#47 => D.24003.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24003
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24003
  # DEBUG this => D#1
  # DEBUG this => &D.24003
  # DEBUG D#44 => &D.24003._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#820
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#820
  # DEBUG this => D#38
  # DEBUG D.37870 => D#39
  operator delete (prephitmp_442);

  <bb 165>:
  # DEBUG D#48 => &D.24003._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24003 ={v} {CLOBBER};
  # DEBUG this => &D.24004
  # DEBUG this => &D.24004
  # DEBUG D#15 => &D.24006
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24006
  # DEBUG this => &D.24005
  # DEBUG __s => "Cg_pwr"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24005
  # DEBUG D#87 => &D.24005._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24005.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24005]._M_p = &D.24005.D.11539._M_local_buf;
  # DEBUG __s => "Cg_pwr"
  # DEBUG this => &D.24005
  # DEBUG __beg => "Cg_pwr"
  # DEBUG __end => &MEM[(void *)"Cg_pwr" + 6B]
  # DEBUG this => &D.24005
  # DEBUG __beg => "Cg_pwr"
  # DEBUG __end => &MEM[(void *)"Cg_pwr" + 6B]
  # DEBUG this => &D.24005
  # DEBUG __beg => "Cg_pwr"
  # DEBUG __end => &MEM[(void *)"Cg_pwr" + 6B]
  # DEBUG __ptr => "Cg_pwr"
  # DEBUG __first => "Cg_pwr"
  # DEBUG __last => &MEM[(void *)"Cg_pwr" + 6B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "Cg_pwr"
  # DEBUG __last => &MEM[(void *)"Cg_pwr" + 6B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.24005
  # DEBUG this => D#1
  # DEBUG __p => &D.24005.D.11539._M_local_buf
  # DEBUG __k1 => "Cg_pwr"
  # DEBUG __k2 => &MEM[(void *)"Cg_pwr" + 6B]
  # DEBUG __d => &D.24005.D.11539._M_local_buf
  # DEBUG __s => "Cg_pwr"
  # DEBUG __n => 6
  # DEBUG __s1 => &D.24005.D.11539._M_local_buf
  # DEBUG __s2 => "Cg_pwr"
  # DEBUG __n => 6
  __builtin_memcpy (&D.24005.D.11539._M_local_buf, "Cg_pwr", 6);
  # DEBUG this => &D.24005
  # DEBUG __n => 6
  # DEBUG D#6 => &D.24005
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.24005 + 8B] = 6;
  # DEBUG D#1 => &D.24005
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24005 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24005 + 22] = 0;
  # DEBUG D#683 => {CLOBBER}
  # DEBUG __dnew => D#683
  # DEBUG this => _65
  # DEBUG __k => &D.24005
  # DEBUG this => _65
  # DEBUG __x => &D.24005
  # DEBUG this => _65
  # DEBUG __k => &D.24005
  # DEBUG this => _65
  __i$_M_node_1022 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24005
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_1022
  if (__i$_M_node_1022 == 0B)
    goto <bb 526>;
  else
    goto <bb 168>;

  <bb 166>:
  # __i$_M_node_1105 = PHI <__i$_M_node_1026(174), __i$_M_node_1027(175)>
  # __i$_M_node_1104 = PHI <__i$_M_node_1973(174), __i$_M_node_627(175)>
  # DEBUG __y => __i$_M_node_1104
  # DEBUG __x => __i$_M_node_1105
  if (__i$_M_node_1105 == 0B)
    goto <bb 176>;
  else
    goto <bb 167>;

  <bb 167>:
  goto <bb 169>;

  <bb 168>:

  <bb 169>:
  # __i$_M_node_1973 = PHI <__i$_M_node_1022(168), __i$_M_node_1105(167)>
  # __i$_M_node_627 = PHI <__i$_M_node_66(168), __i$_M_node_1104(167)>
  # DEBUG __y => __i$_M_node_627
  # DEBUG __x => __i$_M_node_1973
  # DEBUG __x => __i$_M_node_1973
  # DEBUG __x => __i$_M_node_1973
  # DEBUG this => __i$_M_node_1973
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_1973]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#586 => &MEM[(const struct pair &)__i$_M_node_1973 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#586
  # DEBUG __y => &D.24005
  # DEBUG this => D#56
  # DEBUG __lhs => D#586
  # DEBUG __rhs => &D.24005
  # DEBUG this => D#586
  # DEBUG __str => &D.24005
  _1031 = MEM[(long unsigned int *)__i$_M_node_1973 + 40B];
  # DEBUG D#5 => D#586
  # DEBUG this => D#5
  # DEBUG __size => _1031
  # DEBUG D#5 => &D.24005
  # DEBUG this => D#5
  # DEBUG __osize => 6
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1586 = MIN_EXPR <_1031, 6>;
  # DEBUG __len => D#558
  # DEBUG this => &D.24005
  # DEBUG D#1 => &D.24005
  # DEBUG this => D#1
  _1036 = MEM[(char * *)__i$_M_node_1973 + 32B];
  # DEBUG D#1 => D#586
  # DEBUG this => D#1
  # DEBUG __s1 => _1036
  # DEBUG __s2 => &D.24005.D.11539._M_local_buf
  # DEBUG __n => D#558
  __r_1037 = __builtin_memcmp (_1036, &D.24005.D.11539._M_local_buf, __len_1586);
  # DEBUG __r => NULL
  if (__r_1037 == 0)
    goto <bb 170>;
  else
    goto <bb 173>;

  <bb 170>:
  # DEBUG __n1 => _1031
  # DEBUG __n2 => 6
  _1038 = _1031 - 6;
  __d_1039 = (const difference_type) _1038;
  # DEBUG __d => __d_1039
  if (__d_1039 > 2147483647)
    goto <bb 174>;
  else
    goto <bb 171>;

  <bb 171>:
  if (__d_1039 < -2147483648)
    goto <bb 175>;
  else
    goto <bb 172>;

  <bb 172>:
  __r_1040 = (int) _1038;

  <bb 173>:
  # __r_1041 = PHI <__r_1037(169), __r_1040(172)>
  # DEBUG __r => __r_1041
  # DEBUG D#688 => {CLOBBER}
  # DEBUG __size => D#688
  # DEBUG D#689 => {CLOBBER}
  # DEBUG __osize => D#689
  if (__r_1041 >= 0)
    goto <bb 174>;
  else
    goto <bb 175>;

  <bb 174>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_1973
  __i$_M_node_1026 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1973 + 16B];
  # DEBUG D#21 => __i$_M_node_1973
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 166>;

  <bb 175>:
  # DEBUG __r => NULL
  __i$_M_node_1027 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1973 + 24B];
  # DEBUG D#20 => __i$_M_node_1973
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 166>;

  <bb 176>:
  # __i$_M_node_2441 = PHI <__i$_M_node_1104(166)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2441
  # DEBUG __i$_M_node => __i$_M_node_2441
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2441)
    goto <bb 526>;
  else
    goto <bb 177>;

  <bb 177>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2441
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2441]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#587 => &MEM[(struct pair &)__i$_M_node_2441 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24005
  # DEBUG __y => D#587
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24005
  # DEBUG __rhs => D#587
  # DEBUG this => &D.24005
  # DEBUG __str => D#587
  # DEBUG D#5 => &D.24005
  # DEBUG this => D#5
  # DEBUG __size => 6
  _1044 = MEM[(long unsigned int *)__i$_M_node_2441 + 40B];
  # DEBUG D#5 => D#587
  # DEBUG this => D#5
  # DEBUG __osize => _1044
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1044 <= 5)
    goto <bb 179>;
  else
    goto <bb 178>;

  <bb 178>:

  <bb 179>:
  # __len_1046 = PHI <_1044(177), 6(178)>
  # DEBUG __len => D#559
  # DEBUG this => D#587
  _1047 = MEM[(char * *)__i$_M_node_2441 + 32B];
  # DEBUG D#1 => D#587
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24005
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24005.D.11539._M_local_buf
  # DEBUG __s2 => _1047
  # DEBUG __n => D#559
  __r_1049 = __builtin_memcmp (&D.24005.D.11539._M_local_buf, _1047, __len_1046);
  # DEBUG __r => NULL
  if (__r_1049 == 0)
    goto <bb 180>;
  else
    goto <bb 183>;

  <bb 180>:
  # DEBUG __n1 => 6
  # DEBUG __n2 => _1044
  _1050 = 6 - _1044;
  __d_1051 = (const difference_type) _1050;
  # DEBUG __d => __d_1051
  if (__d_1051 > 2147483647)
    goto <bb 188>;
  else
    goto <bb 181>;

  <bb 181>:
  if (__d_1051 < -2147483648)
    goto <bb 184>;
  else
    goto <bb 182>;

  <bb 182>:
  __r_1052 = (int) _1050;

  <bb 183>:
  # __r_1053 = PHI <__r_1049(179), __r_1052(182)>
  # DEBUG __r => __r_1053
  # DEBUG D#694 => {CLOBBER}
  # DEBUG __size => D#694
  # DEBUG D#695 => {CLOBBER}
  # DEBUG __osize => D#695
  if (__r_1053 < 0)
    goto <bb 526>;
  else
    goto <bb 188>;

  <bb 184>:
  # __i$_M_node_1810 = PHI <__i$_M_node_2441(181), __i$_M_node_531(526)>
  # DEBUG this => &D.47951
  # DEBUG __a => &D.24005
  # DEBUG __b => NULL
  # DEBUG this => &D.47951.first
  # DEBUG __str => &D.24005
  # DEBUG this => &D.24005
  # DEBUG D#145 => &D.24005._M_dataplus
  # DEBUG this => &D.47951.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.47951]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.47951].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.47951]._M_p = &MEM[(struct basic_string *)&D.47951].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24005
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24005
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24005
  # DEBUG this => D#1
  # DEBUG this => &D.47951.first
  # DEBUG __beg => &D.24005.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24005 + 22B]
  # DEBUG this => &D.47951.first
  # DEBUG __beg => &D.24005.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24005 + 22B]
  # DEBUG this => &D.47951.first
  # DEBUG __beg => &D.24005.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24005 + 22B]
  # DEBUG __ptr => &D.24005.D.11539._M_local_buf
  # DEBUG __first => &D.24005.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24005 + 22B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24005.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24005 + 22B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.47951.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.47951].D.11539._M_local_buf
  # DEBUG __k1 => &D.24005.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24005 + 22B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.47951].D.11539._M_local_buf
  # DEBUG __s => &D.24005.D.11539._M_local_buf
  # DEBUG __n => 6
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.47951].D.11539._M_local_buf
  # DEBUG __s2 => &D.24005.D.11539._M_local_buf
  # DEBUG __n => 6
  __builtin_memcpy (&MEM[(struct basic_string *)&D.47951].D.11539._M_local_buf, &D.24005.D.11539._M_local_buf, 6);
  # DEBUG this => &D.47951.first
  # DEBUG __n => 6
  # DEBUG D#6 => &D.47951.first
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.47951 + 8B] = 6;
  # DEBUG D#1 => &D.47951.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.47951 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.47951 + 22] = 0;
  # DEBUG D#696 => {CLOBBER}
  # DEBUG __dnew => D#696
  D.47951.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_1810
  # DEBUG __x => &D.47951
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1810;
  # DEBUG __x => &D.47951
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.47953 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.47951);

  <bb 185>:
  __i$_M_node_1017 = MEM[(struct _Rb_tree_iterator *)&D.47953];
  # DEBUG __i$_M_node => __i$_M_node_1017
  # DEBUG this => &D.47951
  # DEBUG D#49 => &D.47951.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1018 = MEM[(char * *)&D.47951];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.47951].D.11539._M_local_buf != _1018)
    goto <bb 186>;
  else
    goto <bb 187>;

  <bb 186>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1018
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1018
  # DEBUG this => D#38
  # DEBUG D.47910 => D#39
  operator delete (_1018);

  <bb 187>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.47951 ={v} {CLOBBER};
  pretmp_1913 = MEM[(char * *)&D.24005];

  <bb 188>:
  # __i$_M_node_1019 = PHI <__i$_M_node_2441(180), __i$_M_node_1017(187), __i$_M_node_2441(183)>
  # prephitmp_1914 = PHI <&D.24005.D.11539._M_local_buf(180), pretmp_1913(187), &D.24005.D.11539._M_local_buf(183)>
  # DEBUG __i$_M_node => __i$_M_node_1019
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1019
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1019]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_1019 + 64] = 0.0;
  # DEBUG this => &D.24005
  # DEBUG this => &D.24005
  # DEBUG this => &D.24005
  # DEBUG D#819 => MEM[(char * *)&D.24005]
  # DEBUG D#1 => &D.24005
  # DEBUG this => D#1
  # DEBUG this => &D.24005
  if (&D.24005.D.11539._M_local_buf != prephitmp_1914)
    goto <bb 192>;
  else
    goto <bb 193>;

<L54>:
  # DEBUG this => &D.47951
  # DEBUG D#49 => &D.47951.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1021 = MEM[(char * *)&D.47951];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.47951].D.11539._M_local_buf != _1021)
    goto <bb 190>;
  else
    goto <bb 191>;

  <bb 190>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1021
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1021
  # DEBUG this => D#38
  # DEBUG D.47894 => D#39
  operator delete (_1021);

  <bb 191>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.47951 ={v} {CLOBBER};
  resx 104

  <bb 192>:
  # DEBUG D#47 => D.24005.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24005
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24005
  # DEBUG this => D#1
  # DEBUG this => &D.24005
  # DEBUG D#44 => &D.24005._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#819
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#819
  # DEBUG this => D#38
  # DEBUG D.37888 => D#39
  operator delete (prephitmp_1914);

  <bb 193>:
  # DEBUG D#48 => &D.24005._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24005 ={v} {CLOBBER};
  # DEBUG this => &D.24006
  # DEBUG this => &D.24006
  # DEBUG D#15 => &D.24008
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24008
  # DEBUG this => &D.24007
  # DEBUG __s => "Cd_pwr"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24007
  # DEBUG D#87 => &D.24007._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24007.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24007]._M_p = &D.24007.D.11539._M_local_buf;
  # DEBUG __s => "Cd_pwr"
  # DEBUG this => &D.24007
  # DEBUG __beg => "Cd_pwr"
  # DEBUG __end => &MEM[(void *)"Cd_pwr" + 6B]
  # DEBUG this => &D.24007
  # DEBUG __beg => "Cd_pwr"
  # DEBUG __end => &MEM[(void *)"Cd_pwr" + 6B]
  # DEBUG this => &D.24007
  # DEBUG __beg => "Cd_pwr"
  # DEBUG __end => &MEM[(void *)"Cd_pwr" + 6B]
  # DEBUG __ptr => "Cd_pwr"
  # DEBUG __first => "Cd_pwr"
  # DEBUG __last => &MEM[(void *)"Cd_pwr" + 6B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "Cd_pwr"
  # DEBUG __last => &MEM[(void *)"Cd_pwr" + 6B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.24007
  # DEBUG this => D#1
  # DEBUG __p => &D.24007.D.11539._M_local_buf
  # DEBUG __k1 => "Cd_pwr"
  # DEBUG __k2 => &MEM[(void *)"Cd_pwr" + 6B]
  # DEBUG __d => &D.24007.D.11539._M_local_buf
  # DEBUG __s => "Cd_pwr"
  # DEBUG __n => 6
  # DEBUG __s1 => &D.24007.D.11539._M_local_buf
  # DEBUG __s2 => "Cd_pwr"
  # DEBUG __n => 6
  __builtin_memcpy (&D.24007.D.11539._M_local_buf, "Cd_pwr", 6);
  # DEBUG this => &D.24007
  # DEBUG __n => 6
  # DEBUG D#6 => &D.24007
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.24007 + 8B] = 6;
  # DEBUG D#1 => &D.24007
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24007 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24007 + 22] = 0;
  # DEBUG D#697 => {CLOBBER}
  # DEBUG __dnew => D#697
  # DEBUG this => _65
  # DEBUG __k => &D.24007
  # DEBUG this => _65
  # DEBUG __x => &D.24007
  # DEBUG this => _65
  # DEBUG __k => &D.24007
  # DEBUG this => _65
  __i$_M_node_1097 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24007
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_1097
  if (__i$_M_node_1097 == 0B)
    goto <bb 527>;
  else
    goto <bb 196>;

  <bb 194>:
  # __i$_M_node_1029 = PHI <__i$_M_node_1101(202), __i$_M_node_1102(203)>
  # __i$_M_node_1042 = PHI <__i$_M_node_135(202), __i$_M_node_2453(203)>
  # DEBUG __y => __i$_M_node_1042
  # DEBUG __x => __i$_M_node_1029
  if (__i$_M_node_1029 == 0B)
    goto <bb 204>;
  else
    goto <bb 195>;

  <bb 195>:
  goto <bb 197>;

  <bb 196>:

  <bb 197>:
  # __i$_M_node_135 = PHI <__i$_M_node_1097(196), __i$_M_node_1029(195)>
  # __i$_M_node_2453 = PHI <__i$_M_node_66(196), __i$_M_node_1042(195)>
  # DEBUG __y => __i$_M_node_2453
  # DEBUG __x => __i$_M_node_135
  # DEBUG __x => __i$_M_node_135
  # DEBUG __x => __i$_M_node_135
  # DEBUG this => __i$_M_node_135
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_135]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#588 => &MEM[(const struct pair &)__i$_M_node_135 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#588
  # DEBUG __y => &D.24007
  # DEBUG this => D#56
  # DEBUG __lhs => D#588
  # DEBUG __rhs => &D.24007
  # DEBUG this => D#588
  # DEBUG __str => &D.24007
  _1106 = MEM[(long unsigned int *)__i$_M_node_135 + 40B];
  # DEBUG D#5 => D#588
  # DEBUG this => D#5
  # DEBUG __size => _1106
  # DEBUG D#5 => &D.24007
  # DEBUG this => D#5
  # DEBUG __osize => 6
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1587 = MIN_EXPR <_1106, 6>;
  # DEBUG __len => D#560
  # DEBUG this => &D.24007
  # DEBUG D#1 => &D.24007
  # DEBUG this => D#1
  _1111 = MEM[(char * *)__i$_M_node_135 + 32B];
  # DEBUG D#1 => D#588
  # DEBUG this => D#1
  # DEBUG __s1 => _1111
  # DEBUG __s2 => &D.24007.D.11539._M_local_buf
  # DEBUG __n => D#560
  __r_1112 = __builtin_memcmp (_1111, &D.24007.D.11539._M_local_buf, __len_1587);
  # DEBUG __r => NULL
  if (__r_1112 == 0)
    goto <bb 198>;
  else
    goto <bb 201>;

  <bb 198>:
  # DEBUG __n1 => _1106
  # DEBUG __n2 => 6
  _1113 = _1106 - 6;
  __d_1114 = (const difference_type) _1113;
  # DEBUG __d => __d_1114
  if (__d_1114 > 2147483647)
    goto <bb 202>;
  else
    goto <bb 199>;

  <bb 199>:
  if (__d_1114 < -2147483648)
    goto <bb 203>;
  else
    goto <bb 200>;

  <bb 200>:
  __r_1115 = (int) _1113;

  <bb 201>:
  # __r_1116 = PHI <__r_1112(197), __r_1115(200)>
  # DEBUG __r => __r_1116
  # DEBUG D#702 => {CLOBBER}
  # DEBUG __size => D#702
  # DEBUG D#703 => {CLOBBER}
  # DEBUG __osize => D#703
  if (__r_1116 >= 0)
    goto <bb 202>;
  else
    goto <bb 203>;

  <bb 202>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_135
  __i$_M_node_1101 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_135 + 16B];
  # DEBUG D#21 => __i$_M_node_135
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 194>;

  <bb 203>:
  # DEBUG __r => NULL
  __i$_M_node_1102 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_135 + 24B];
  # DEBUG D#20 => __i$_M_node_135
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 194>;

  <bb 204>:
  # __i$_M_node_2442 = PHI <__i$_M_node_1042(194)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2442
  # DEBUG __i$_M_node => __i$_M_node_2442
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2442)
    goto <bb 527>;
  else
    goto <bb 205>;

  <bb 205>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2442
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2442]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#589 => &MEM[(struct pair &)__i$_M_node_2442 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24007
  # DEBUG __y => D#589
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24007
  # DEBUG __rhs => D#589
  # DEBUG this => &D.24007
  # DEBUG __str => D#589
  # DEBUG D#5 => &D.24007
  # DEBUG this => D#5
  # DEBUG __size => 6
  _1119 = MEM[(long unsigned int *)__i$_M_node_2442 + 40B];
  # DEBUG D#5 => D#589
  # DEBUG this => D#5
  # DEBUG __osize => _1119
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1119 <= 5)
    goto <bb 207>;
  else
    goto <bb 206>;

  <bb 206>:

  <bb 207>:
  # __len_1121 = PHI <_1119(205), 6(206)>
  # DEBUG __len => D#561
  # DEBUG this => D#589
  _1122 = MEM[(char * *)__i$_M_node_2442 + 32B];
  # DEBUG D#1 => D#589
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24007
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24007.D.11539._M_local_buf
  # DEBUG __s2 => _1122
  # DEBUG __n => D#561
  __r_1124 = __builtin_memcmp (&D.24007.D.11539._M_local_buf, _1122, __len_1121);
  # DEBUG __r => NULL
  if (__r_1124 == 0)
    goto <bb 208>;
  else
    goto <bb 211>;

  <bb 208>:
  # DEBUG __n1 => 6
  # DEBUG __n2 => _1119
  _1125 = 6 - _1119;
  __d_1126 = (const difference_type) _1125;
  # DEBUG __d => __d_1126
  if (__d_1126 > 2147483647)
    goto <bb 216>;
  else
    goto <bb 209>;

  <bb 209>:
  if (__d_1126 < -2147483648)
    goto <bb 212>;
  else
    goto <bb 210>;

  <bb 210>:
  __r_1127 = (int) _1125;

  <bb 211>:
  # __r_1128 = PHI <__r_1124(207), __r_1127(210)>
  # DEBUG __r => __r_1128
  # DEBUG D#708 => {CLOBBER}
  # DEBUG __size => D#708
  # DEBUG D#709 => {CLOBBER}
  # DEBUG __osize => D#709
  if (__r_1128 < 0)
    goto <bb 527>;
  else
    goto <bb 216>;

  <bb 212>:
  # __i$_M_node_1430 = PHI <__i$_M_node_2442(209), __i$_M_node_809(527)>
  # DEBUG this => &D.48147
  # DEBUG __a => &D.24007
  # DEBUG __b => NULL
  # DEBUG this => &D.48147.first
  # DEBUG __str => &D.24007
  # DEBUG this => &D.24007
  # DEBUG D#145 => &D.24007._M_dataplus
  # DEBUG this => &D.48147.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.48147]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.48147].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.48147]._M_p = &MEM[(struct basic_string *)&D.48147].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24007
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24007
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24007
  # DEBUG this => D#1
  # DEBUG this => &D.48147.first
  # DEBUG __beg => &D.24007.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24007 + 22B]
  # DEBUG this => &D.48147.first
  # DEBUG __beg => &D.24007.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24007 + 22B]
  # DEBUG this => &D.48147.first
  # DEBUG __beg => &D.24007.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24007 + 22B]
  # DEBUG __ptr => &D.24007.D.11539._M_local_buf
  # DEBUG __first => &D.24007.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24007 + 22B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24007.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24007 + 22B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.48147.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.48147].D.11539._M_local_buf
  # DEBUG __k1 => &D.24007.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24007 + 22B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.48147].D.11539._M_local_buf
  # DEBUG __s => &D.24007.D.11539._M_local_buf
  # DEBUG __n => 6
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.48147].D.11539._M_local_buf
  # DEBUG __s2 => &D.24007.D.11539._M_local_buf
  # DEBUG __n => 6
  __builtin_memcpy (&MEM[(struct basic_string *)&D.48147].D.11539._M_local_buf, &D.24007.D.11539._M_local_buf, 6);
  # DEBUG this => &D.48147.first
  # DEBUG __n => 6
  # DEBUG D#6 => &D.48147.first
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.48147 + 8B] = 6;
  # DEBUG D#1 => &D.48147.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.48147 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.48147 + 22] = 0;
  # DEBUG D#710 => {CLOBBER}
  # DEBUG __dnew => D#710
  D.48147.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_1430
  # DEBUG __x => &D.48147
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1430;
  # DEBUG __x => &D.48147
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.48149 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.48147);

  <bb 213>:
  __i$_M_node_1092 = MEM[(struct _Rb_tree_iterator *)&D.48149];
  # DEBUG __i$_M_node => __i$_M_node_1092
  # DEBUG this => &D.48147
  # DEBUG D#49 => &D.48147.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1093 = MEM[(char * *)&D.48147];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.48147].D.11539._M_local_buf != _1093)
    goto <bb 214>;
  else
    goto <bb 215>;

  <bb 214>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1093
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1093
  # DEBUG this => D#38
  # DEBUG D.48106 => D#39
  operator delete (_1093);

  <bb 215>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.48147 ={v} {CLOBBER};
  pretmp_450 = MEM[(char * *)&D.24007];

  <bb 216>:
  # __i$_M_node_1094 = PHI <__i$_M_node_2442(208), __i$_M_node_1092(215), __i$_M_node_2442(211)>
  # prephitmp_451 = PHI <&D.24007.D.11539._M_local_buf(208), pretmp_450(215), &D.24007.D.11539._M_local_buf(211)>
  # DEBUG __i$_M_node => __i$_M_node_1094
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1094
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1094]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_1094 + 64] = 0.0;
  # DEBUG this => &D.24007
  # DEBUG this => &D.24007
  # DEBUG this => &D.24007
  # DEBUG D#818 => MEM[(char * *)&D.24007]
  # DEBUG D#1 => &D.24007
  # DEBUG this => D#1
  # DEBUG this => &D.24007
  if (&D.24007.D.11539._M_local_buf != prephitmp_451)
    goto <bb 220>;
  else
    goto <bb 221>;

<L55>:
  # DEBUG this => &D.48147
  # DEBUG D#49 => &D.48147.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1096 = MEM[(char * *)&D.48147];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.48147].D.11539._M_local_buf != _1096)
    goto <bb 218>;
  else
    goto <bb 219>;

  <bb 218>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1096
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1096
  # DEBUG this => D#38
  # DEBUG D.48090 => D#39
  operator delete (_1096);

  <bb 219>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.48147 ={v} {CLOBBER};
  resx 105

  <bb 220>:
  # DEBUG D#47 => D.24007.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24007
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24007
  # DEBUG this => D#1
  # DEBUG this => &D.24007
  # DEBUG D#44 => &D.24007._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#818
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#818
  # DEBUG this => D#38
  # DEBUG D.37906 => D#39
  operator delete (prephitmp_451);

  <bb 221>:
  # DEBUG D#48 => &D.24007._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24007 ={v} {CLOBBER};
  # DEBUG this => &D.24008
  # DEBUG this => &D.24008
  # DEBUG D#15 => &D.24010
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24010
  # DEBUG this => &D.24009
  # DEBUG __s => "Cgdl"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24009
  # DEBUG D#87 => &D.24009._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24009.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24009]._M_p = &D.24009.D.11539._M_local_buf;
  # DEBUG __s => "Cgdl"
  # DEBUG this => &D.24009
  # DEBUG __beg => "Cgdl"
  # DEBUG __end => &MEM[(void *)"Cgdl" + 4B]
  # DEBUG this => &D.24009
  # DEBUG __beg => "Cgdl"
  # DEBUG __end => &MEM[(void *)"Cgdl" + 4B]
  # DEBUG this => &D.24009
  # DEBUG __beg => "Cgdl"
  # DEBUG __end => &MEM[(void *)"Cgdl" + 4B]
  # DEBUG __ptr => "Cgdl"
  # DEBUG __first => "Cgdl"
  # DEBUG __last => &MEM[(void *)"Cgdl" + 4B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "Cgdl"
  # DEBUG __last => &MEM[(void *)"Cgdl" + 4B]
  # DEBUG __dnew => 4
  # DEBUG D#1 => &D.24009
  # DEBUG this => D#1
  # DEBUG __p => &D.24009.D.11539._M_local_buf
  # DEBUG __k1 => "Cgdl"
  # DEBUG __k2 => &MEM[(void *)"Cgdl" + 4B]
  # DEBUG __d => &D.24009.D.11539._M_local_buf
  # DEBUG __s => "Cgdl"
  # DEBUG __n => 4
  # DEBUG __s1 => &D.24009.D.11539._M_local_buf
  # DEBUG __s2 => "Cgdl"
  # DEBUG __n => 4
  __builtin_memcpy (&D.24009.D.11539._M_local_buf, "Cgdl", 4);
  # DEBUG this => &D.24009
  # DEBUG __n => 4
  # DEBUG D#6 => &D.24009
  # DEBUG __length => 4
  # DEBUG this => D#6
  MEM[(size_type *)&D.24009 + 8B] = 4;
  # DEBUG D#1 => &D.24009
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24009 + 20B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24009 + 20] = 0;
  # DEBUG D#711 => {CLOBBER}
  # DEBUG __dnew => D#711
  # DEBUG this => _65
  # DEBUG __k => &D.24009
  # DEBUG this => _65
  # DEBUG __x => &D.24009
  # DEBUG this => _65
  # DEBUG __k => &D.24009
  # DEBUG this => _65
  __i$_M_node_1172 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24009
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_1172
  if (__i$_M_node_1172 == 0B)
    goto <bb 528>;
  else
    goto <bb 224>;

  <bb 222>:
  # __i$_M_node_967 = PHI <__i$_M_node_1176(230), __i$_M_node_1177(231)>
  # __i$_M_node_979 = PHI <__i$_M_node_1742(230), __i$_M_node_528(231)>
  # DEBUG __y => __i$_M_node_979
  # DEBUG __x => __i$_M_node_967
  if (__i$_M_node_967 == 0B)
    goto <bb 232>;
  else
    goto <bb 223>;

  <bb 223>:
  goto <bb 225>;

  <bb 224>:

  <bb 225>:
  # __i$_M_node_1742 = PHI <__i$_M_node_1172(224), __i$_M_node_967(223)>
  # __i$_M_node_528 = PHI <__i$_M_node_66(224), __i$_M_node_979(223)>
  # DEBUG __y => __i$_M_node_528
  # DEBUG __x => __i$_M_node_1742
  # DEBUG __x => __i$_M_node_1742
  # DEBUG __x => __i$_M_node_1742
  # DEBUG this => __i$_M_node_1742
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_1742]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#590 => &MEM[(const struct pair &)__i$_M_node_1742 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#590
  # DEBUG __y => &D.24009
  # DEBUG this => D#56
  # DEBUG __lhs => D#590
  # DEBUG __rhs => &D.24009
  # DEBUG this => D#590
  # DEBUG __str => &D.24009
  _1181 = MEM[(long unsigned int *)__i$_M_node_1742 + 40B];
  # DEBUG D#5 => D#590
  # DEBUG this => D#5
  # DEBUG __size => _1181
  # DEBUG D#5 => &D.24009
  # DEBUG this => D#5
  # DEBUG __osize => 4
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1536 = MIN_EXPR <_1181, 4>;
  # DEBUG __len => D#562
  # DEBUG this => &D.24009
  # DEBUG D#1 => &D.24009
  # DEBUG this => D#1
  _1186 = MEM[(char * *)__i$_M_node_1742 + 32B];
  # DEBUG D#1 => D#590
  # DEBUG this => D#1
  # DEBUG __s1 => _1186
  # DEBUG __s2 => &D.24009.D.11539._M_local_buf
  # DEBUG __n => D#562
  __r_1187 = __builtin_memcmp (_1186, &D.24009.D.11539._M_local_buf, __len_1536);
  # DEBUG __r => NULL
  if (__r_1187 == 0)
    goto <bb 226>;
  else
    goto <bb 229>;

  <bb 226>:
  # DEBUG __n1 => _1181
  # DEBUG __n2 => 4
  _1188 = _1181 - 4;
  __d_1189 = (const difference_type) _1188;
  # DEBUG __d => __d_1189
  if (__d_1189 > 2147483647)
    goto <bb 230>;
  else
    goto <bb 227>;

  <bb 227>:
  if (__d_1189 < -2147483648)
    goto <bb 231>;
  else
    goto <bb 228>;

  <bb 228>:
  __r_1190 = (int) _1188;

  <bb 229>:
  # __r_1191 = PHI <__r_1187(225), __r_1190(228)>
  # DEBUG __r => __r_1191
  # DEBUG D#716 => {CLOBBER}
  # DEBUG __size => D#716
  # DEBUG D#717 => {CLOBBER}
  # DEBUG __osize => D#717
  if (__r_1191 >= 0)
    goto <bb 230>;
  else
    goto <bb 231>;

  <bb 230>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_1742
  __i$_M_node_1176 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1742 + 16B];
  # DEBUG D#21 => __i$_M_node_1742
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 222>;

  <bb 231>:
  # DEBUG __r => NULL
  __i$_M_node_1177 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1742 + 24B];
  # DEBUG D#20 => __i$_M_node_1742
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 222>;

  <bb 232>:
  # __i$_M_node_2443 = PHI <__i$_M_node_979(222)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2443
  # DEBUG __i$_M_node => __i$_M_node_2443
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2443)
    goto <bb 528>;
  else
    goto <bb 233>;

  <bb 233>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2443
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2443]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#591 => &MEM[(struct pair &)__i$_M_node_2443 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24009
  # DEBUG __y => D#591
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24009
  # DEBUG __rhs => D#591
  # DEBUG this => &D.24009
  # DEBUG __str => D#591
  # DEBUG D#5 => &D.24009
  # DEBUG this => D#5
  # DEBUG __size => 4
  _1194 = MEM[(long unsigned int *)__i$_M_node_2443 + 40B];
  # DEBUG D#5 => D#591
  # DEBUG this => D#5
  # DEBUG __osize => _1194
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1194 <= 3)
    goto <bb 235>;
  else
    goto <bb 234>;

  <bb 234>:

  <bb 235>:
  # __len_1196 = PHI <_1194(233), 4(234)>
  # DEBUG __len => D#563
  # DEBUG this => D#591
  _1197 = MEM[(char * *)__i$_M_node_2443 + 32B];
  # DEBUG D#1 => D#591
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24009
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24009.D.11539._M_local_buf
  # DEBUG __s2 => _1197
  # DEBUG __n => D#563
  __r_1199 = __builtin_memcmp (&D.24009.D.11539._M_local_buf, _1197, __len_1196);
  # DEBUG __r => NULL
  if (__r_1199 == 0)
    goto <bb 236>;
  else
    goto <bb 239>;

  <bb 236>:
  # DEBUG __n1 => 4
  # DEBUG __n2 => _1194
  _1200 = 4 - _1194;
  __d_1201 = (const difference_type) _1200;
  # DEBUG __d => __d_1201
  if (__d_1201 > 2147483647)
    goto <bb 244>;
  else
    goto <bb 237>;

  <bb 237>:
  if (__d_1201 < -2147483648)
    goto <bb 240>;
  else
    goto <bb 238>;

  <bb 238>:
  __r_1202 = (int) _1200;

  <bb 239>:
  # __r_1203 = PHI <__r_1199(235), __r_1202(238)>
  # DEBUG __r => __r_1203
  # DEBUG D#722 => {CLOBBER}
  # DEBUG __size => D#722
  # DEBUG D#723 => {CLOBBER}
  # DEBUG __osize => D#723
  if (__r_1203 < 0)
    goto <bb 528>;
  else
    goto <bb 244>;

  <bb 240>:
  # __i$_M_node_884 = PHI <__i$_M_node_2443(237), __i$_M_node_959(528)>
  # DEBUG this => &D.48343
  # DEBUG __a => &D.24009
  # DEBUG __b => NULL
  # DEBUG this => &D.48343.first
  # DEBUG __str => &D.24009
  # DEBUG this => &D.24009
  # DEBUG D#145 => &D.24009._M_dataplus
  # DEBUG this => &D.48343.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.48343]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.48343].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.48343]._M_p = &MEM[(struct basic_string *)&D.48343].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24009
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24009
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24009
  # DEBUG this => D#1
  # DEBUG this => &D.48343.first
  # DEBUG __beg => &D.24009.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24009 + 20B]
  # DEBUG this => &D.48343.first
  # DEBUG __beg => &D.24009.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24009 + 20B]
  # DEBUG this => &D.48343.first
  # DEBUG __beg => &D.24009.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24009 + 20B]
  # DEBUG __ptr => &D.24009.D.11539._M_local_buf
  # DEBUG __first => &D.24009.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24009 + 20B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24009.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24009 + 20B]
  # DEBUG __dnew => 4
  # DEBUG D#1 => &D.48343.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.48343].D.11539._M_local_buf
  # DEBUG __k1 => &D.24009.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24009 + 20B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.48343].D.11539._M_local_buf
  # DEBUG __s => &D.24009.D.11539._M_local_buf
  # DEBUG __n => 4
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.48343].D.11539._M_local_buf
  # DEBUG __s2 => &D.24009.D.11539._M_local_buf
  # DEBUG __n => 4
  _2226 = MEM[(char * {ref-all})&D.24009 + 16B];
  MEM[(char * {ref-all})&D.48343 + 16B] = _2226;
  # DEBUG this => &D.48343.first
  # DEBUG __n => 4
  # DEBUG D#6 => &D.48343.first
  # DEBUG __length => 4
  # DEBUG this => D#6
  MEM[(size_type *)&D.48343 + 8B] = 4;
  # DEBUG D#1 => &D.48343.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.48343 + 20B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.48343 + 20] = 0;
  # DEBUG D#724 => {CLOBBER}
  # DEBUG __dnew => D#724
  D.48343.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_884
  # DEBUG __x => &D.48343
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_884;
  # DEBUG __x => &D.48343
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.48345 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.48343);

  <bb 241>:
  __i$_M_node_1167 = MEM[(struct _Rb_tree_iterator *)&D.48345];
  # DEBUG __i$_M_node => __i$_M_node_1167
  # DEBUG this => &D.48343
  # DEBUG D#49 => &D.48343.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1168 = MEM[(char * *)&D.48343];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.48343].D.11539._M_local_buf != _1168)
    goto <bb 242>;
  else
    goto <bb 243>;

  <bb 242>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1168
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1168
  # DEBUG this => D#38
  # DEBUG D.48302 => D#39
  operator delete (_1168);

  <bb 243>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.48343 ={v} {CLOBBER};
  pretmp_457 = MEM[(char * *)&D.24009];

  <bb 244>:
  # __i$_M_node_1169 = PHI <__i$_M_node_2443(236), __i$_M_node_1167(243), __i$_M_node_2443(239)>
  # prephitmp_458 = PHI <&D.24009.D.11539._M_local_buf(236), pretmp_457(243), &D.24009.D.11539._M_local_buf(239)>
  # DEBUG __i$_M_node => __i$_M_node_1169
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1169
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1169]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_1169 + 64] = 0.0;
  # DEBUG this => &D.24009
  # DEBUG this => &D.24009
  # DEBUG this => &D.24009
  # DEBUG D#817 => MEM[(char * *)&D.24009]
  # DEBUG D#1 => &D.24009
  # DEBUG this => D#1
  # DEBUG this => &D.24009
  if (&D.24009.D.11539._M_local_buf != prephitmp_458)
    goto <bb 248>;
  else
    goto <bb 249>;

<L56>:
  # DEBUG this => &D.48343
  # DEBUG D#49 => &D.48343.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1171 = MEM[(char * *)&D.48343];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.48343].D.11539._M_local_buf != _1171)
    goto <bb 246>;
  else
    goto <bb 247>;

  <bb 246>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1171
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1171
  # DEBUG this => D#38
  # DEBUG D.48286 => D#39
  operator delete (_1171);

  <bb 247>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.48343 ={v} {CLOBBER};
  resx 106

  <bb 248>:
  # DEBUG D#47 => D.24009.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24009
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24009
  # DEBUG this => D#1
  # DEBUG this => &D.24009
  # DEBUG D#44 => &D.24009._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#817
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#817
  # DEBUG this => D#38
  # DEBUG D.37924 => D#39
  operator delete (prephitmp_458);

  <bb 249>:
  # DEBUG D#48 => &D.24009._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24009 ={v} {CLOBBER};
  # DEBUG this => &D.24010
  # DEBUG this => &D.24010
  # DEBUG D#15 => &D.24012
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24012
  # DEBUG this => &D.24011
  # DEBUG __s => "Cg"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24011
  # DEBUG D#87 => &D.24011._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24011.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24011]._M_p = &D.24011.D.11539._M_local_buf;
  # DEBUG __s => "Cg"
  # DEBUG this => &D.24011
  # DEBUG __beg => "Cg"
  # DEBUG __end => &MEM[(void *)"Cg" + 2B]
  # DEBUG this => &D.24011
  # DEBUG __beg => "Cg"
  # DEBUG __end => &MEM[(void *)"Cg" + 2B]
  # DEBUG this => &D.24011
  # DEBUG __beg => "Cg"
  # DEBUG __end => &MEM[(void *)"Cg" + 2B]
  # DEBUG __ptr => "Cg"
  # DEBUG __first => "Cg"
  # DEBUG __last => &MEM[(void *)"Cg" + 2B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "Cg"
  # DEBUG __last => &MEM[(void *)"Cg" + 2B]
  # DEBUG __dnew => 2
  # DEBUG D#1 => &D.24011
  # DEBUG this => D#1
  # DEBUG __p => &D.24011.D.11539._M_local_buf
  # DEBUG __k1 => "Cg"
  # DEBUG __k2 => &MEM[(void *)"Cg" + 2B]
  # DEBUG __d => &D.24011.D.11539._M_local_buf
  # DEBUG __s => "Cg"
  # DEBUG __n => 2
  # DEBUG __s1 => &D.24011.D.11539._M_local_buf
  # DEBUG __s2 => "Cg"
  # DEBUG __n => 2
  __builtin_memcpy (&D.24011.D.11539._M_local_buf, "Cg", 2);
  # DEBUG this => &D.24011
  # DEBUG __n => 2
  # DEBUG D#6 => &D.24011
  # DEBUG __length => 2
  # DEBUG this => D#6
  MEM[(size_type *)&D.24011 + 8B] = 2;
  # DEBUG D#1 => &D.24011
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24011 + 18B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24011 + 18] = 0;
  # DEBUG D#725 => {CLOBBER}
  # DEBUG __dnew => D#725
  _123 = std::map<std::__cxx11::basic_string<char>, double>::operator[] (_65, &D.24011);

  <bb 250>:
  *_123 = 0.0;
  # DEBUG this => &D.24011
  # DEBUG this => &D.24011
  # DEBUG this => &D.24011
  _126 = MEM[(char * *)&D.24011];
  # DEBUG D#1 => &D.24011
  # DEBUG this => D#1
  # DEBUG this => &D.24011
  if (&D.24011.D.11539._M_local_buf != _126)
    goto <bb 251>;
  else
    goto <bb 252>;

  <bb 251>:
  # DEBUG D#47 => D.24011.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24011
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24011
  # DEBUG this => D#1
  # DEBUG this => &D.24011
  # DEBUG D#44 => &D.24011._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _126
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _126
  # DEBUG this => D#38
  # DEBUG D.37942 => D#39
  operator delete (_126);

  <bb 252>:
  # DEBUG D#48 => &D.24011._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24011 ={v} {CLOBBER};
  # DEBUG this => &D.24012
  # DEBUG this => &D.24012
  # DEBUG D#15 => &D.24014
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24014
  # DEBUG this => &D.24013
  # DEBUG __s => "Cd"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24013
  # DEBUG D#87 => &D.24013._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24013.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24013]._M_p = &D.24013.D.11539._M_local_buf;
  # DEBUG __s => "Cd"
  # DEBUG this => &D.24013
  # DEBUG __beg => "Cd"
  # DEBUG __end => &MEM[(void *)"Cd" + 2B]
  # DEBUG this => &D.24013
  # DEBUG __beg => "Cd"
  # DEBUG __end => &MEM[(void *)"Cd" + 2B]
  # DEBUG this => &D.24013
  # DEBUG __beg => "Cd"
  # DEBUG __end => &MEM[(void *)"Cd" + 2B]
  # DEBUG __ptr => "Cd"
  # DEBUG __first => "Cd"
  # DEBUG __last => &MEM[(void *)"Cd" + 2B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "Cd"
  # DEBUG __last => &MEM[(void *)"Cd" + 2B]
  # DEBUG __dnew => 2
  # DEBUG D#1 => &D.24013
  # DEBUG this => D#1
  # DEBUG __p => &D.24013.D.11539._M_local_buf
  # DEBUG __k1 => "Cd"
  # DEBUG __k2 => &MEM[(void *)"Cd" + 2B]
  # DEBUG __d => &D.24013.D.11539._M_local_buf
  # DEBUG __s => "Cd"
  # DEBUG __n => 2
  # DEBUG __s1 => &D.24013.D.11539._M_local_buf
  # DEBUG __s2 => "Cd"
  # DEBUG __n => 2
  __builtin_memcpy (&D.24013.D.11539._M_local_buf, "Cd", 2);
  # DEBUG this => &D.24013
  # DEBUG __n => 2
  # DEBUG D#6 => &D.24013
  # DEBUG __length => 2
  # DEBUG this => D#6
  MEM[(size_type *)&D.24013 + 8B] = 2;
  # DEBUG D#1 => &D.24013
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24013 + 18B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24013 + 18] = 0;
  # DEBUG D#726 => {CLOBBER}
  # DEBUG __dnew => D#726
  _130 = std::map<std::__cxx11::basic_string<char>, double>::operator[] (_65, &D.24013);

  <bb 253>:
  *_130 = 0.0;
  # DEBUG this => &D.24013
  # DEBUG this => &D.24013
  # DEBUG this => &D.24013
  _133 = MEM[(char * *)&D.24013];
  # DEBUG D#1 => &D.24013
  # DEBUG this => D#1
  # DEBUG this => &D.24013
  if (&D.24013.D.11539._M_local_buf != _133)
    goto <bb 254>;
  else
    goto <bb 255>;

  <bb 254>:
  # DEBUG D#47 => D.24013.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24013
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24013
  # DEBUG this => D#1
  # DEBUG this => &D.24013
  # DEBUG D#44 => &D.24013._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _133
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _133
  # DEBUG this => D#38
  # DEBUG D.37960 => D#39
  operator delete (_133);

  <bb 255>:
  # DEBUG D#48 => &D.24013._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24013 ={v} {CLOBBER};
  # DEBUG this => &D.24014
  # DEBUG this => &D.24014
  # DEBUG D#15 => &D.24016
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24016
  # DEBUG this => &D.24015
  # DEBUG __s => "LAMBDA"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24015
  # DEBUG D#87 => &D.24015._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24015.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24015]._M_p = &D.24015.D.11539._M_local_buf;
  # DEBUG __s => "LAMBDA"
  # DEBUG this => &D.24015
  # DEBUG __beg => "LAMBDA"
  # DEBUG __end => &MEM[(void *)"LAMBDA" + 6B]
  # DEBUG this => &D.24015
  # DEBUG __beg => "LAMBDA"
  # DEBUG __end => &MEM[(void *)"LAMBDA" + 6B]
  # DEBUG this => &D.24015
  # DEBUG __beg => "LAMBDA"
  # DEBUG __end => &MEM[(void *)"LAMBDA" + 6B]
  # DEBUG __ptr => "LAMBDA"
  # DEBUG __first => "LAMBDA"
  # DEBUG __last => &MEM[(void *)"LAMBDA" + 6B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "LAMBDA"
  # DEBUG __last => &MEM[(void *)"LAMBDA" + 6B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.24015
  # DEBUG this => D#1
  # DEBUG __p => &D.24015.D.11539._M_local_buf
  # DEBUG __k1 => "LAMBDA"
  # DEBUG __k2 => &MEM[(void *)"LAMBDA" + 6B]
  # DEBUG __d => &D.24015.D.11539._M_local_buf
  # DEBUG __s => "LAMBDA"
  # DEBUG __n => 6
  # DEBUG __s1 => &D.24015.D.11539._M_local_buf
  # DEBUG __s2 => "LAMBDA"
  # DEBUG __n => 6
  __builtin_memcpy (&D.24015.D.11539._M_local_buf, "LAMBDA", 6);
  # DEBUG this => &D.24015
  # DEBUG __n => 6
  # DEBUG D#6 => &D.24015
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.24015 + 8B] = 6;
  # DEBUG D#1 => &D.24015
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24015 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24015 + 22] = 0;
  # DEBUG D#727 => {CLOBBER}
  # DEBUG __dnew => D#727
  # DEBUG this => _65
  # DEBUG __k => &D.24015
  # DEBUG this => _65
  # DEBUG __x => &D.24015
  # DEBUG this => _65
  # DEBUG __k => &D.24015
  # DEBUG this => _65
  __i$_M_node_1279 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24015
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_1279
  if (__i$_M_node_1279 == 0B)
    goto <bb 529>;
  else
    goto <bb 258>;

  <bb 256>:
  # __i$_M_node_904 = PHI <__i$_M_node_1283(264), __i$_M_node_1284(265)>
  # __i$_M_node_955 = PHI <__i$_M_node_514(264), __i$_M_node_162(265)>
  # DEBUG __y => __i$_M_node_955
  # DEBUG __x => __i$_M_node_904
  if (__i$_M_node_904 == 0B)
    goto <bb 266>;
  else
    goto <bb 257>;

  <bb 257>:
  goto <bb 259>;

  <bb 258>:

  <bb 259>:
  # __i$_M_node_514 = PHI <__i$_M_node_1279(258), __i$_M_node_904(257)>
  # __i$_M_node_162 = PHI <__i$_M_node_66(258), __i$_M_node_955(257)>
  # DEBUG __y => __i$_M_node_162
  # DEBUG __x => __i$_M_node_514
  # DEBUG __x => __i$_M_node_514
  # DEBUG __x => __i$_M_node_514
  # DEBUG this => __i$_M_node_514
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_514]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#592 => &MEM[(const struct pair &)__i$_M_node_514 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#592
  # DEBUG __y => &D.24015
  # DEBUG this => D#56
  # DEBUG __lhs => D#592
  # DEBUG __rhs => &D.24015
  # DEBUG this => D#592
  # DEBUG __str => &D.24015
  _1288 = MEM[(long unsigned int *)__i$_M_node_514 + 40B];
  # DEBUG D#5 => D#592
  # DEBUG this => D#5
  # DEBUG __size => _1288
  # DEBUG D#5 => &D.24015
  # DEBUG this => D#5
  # DEBUG __osize => 6
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1524 = MIN_EXPR <_1288, 6>;
  # DEBUG __len => D#564
  # DEBUG this => &D.24015
  # DEBUG D#1 => &D.24015
  # DEBUG this => D#1
  _1293 = MEM[(char * *)__i$_M_node_514 + 32B];
  # DEBUG D#1 => D#592
  # DEBUG this => D#1
  # DEBUG __s1 => _1293
  # DEBUG __s2 => &D.24015.D.11539._M_local_buf
  # DEBUG __n => D#564
  __r_1294 = __builtin_memcmp (_1293, &D.24015.D.11539._M_local_buf, __len_1524);
  # DEBUG __r => NULL
  if (__r_1294 == 0)
    goto <bb 260>;
  else
    goto <bb 263>;

  <bb 260>:
  # DEBUG __n1 => _1288
  # DEBUG __n2 => 6
  _1295 = _1288 - 6;
  __d_1296 = (const difference_type) _1295;
  # DEBUG __d => __d_1296
  if (__d_1296 > 2147483647)
    goto <bb 264>;
  else
    goto <bb 261>;

  <bb 261>:
  if (__d_1296 < -2147483648)
    goto <bb 265>;
  else
    goto <bb 262>;

  <bb 262>:
  __r_1297 = (int) _1295;

  <bb 263>:
  # __r_1298 = PHI <__r_1294(259), __r_1297(262)>
  # DEBUG __r => __r_1298
  # DEBUG D#732 => {CLOBBER}
  # DEBUG __size => D#732
  # DEBUG D#733 => {CLOBBER}
  # DEBUG __osize => D#733
  if (__r_1298 >= 0)
    goto <bb 264>;
  else
    goto <bb 265>;

  <bb 264>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_514
  __i$_M_node_1283 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_514 + 16B];
  # DEBUG D#21 => __i$_M_node_514
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 256>;

  <bb 265>:
  # DEBUG __r => NULL
  __i$_M_node_1284 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_514 + 24B];
  # DEBUG D#20 => __i$_M_node_514
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 256>;

  <bb 266>:
  # __i$_M_node_2444 = PHI <__i$_M_node_955(256)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2444
  # DEBUG __i$_M_node => __i$_M_node_2444
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2444)
    goto <bb 529>;
  else
    goto <bb 267>;

  <bb 267>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2444
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2444]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#593 => &MEM[(struct pair &)__i$_M_node_2444 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24015
  # DEBUG __y => D#593
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24015
  # DEBUG __rhs => D#593
  # DEBUG this => &D.24015
  # DEBUG __str => D#593
  # DEBUG D#5 => &D.24015
  # DEBUG this => D#5
  # DEBUG __size => 6
  _1301 = MEM[(long unsigned int *)__i$_M_node_2444 + 40B];
  # DEBUG D#5 => D#593
  # DEBUG this => D#5
  # DEBUG __osize => _1301
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1301 <= 5)
    goto <bb 269>;
  else
    goto <bb 268>;

  <bb 268>:

  <bb 269>:
  # __len_1303 = PHI <_1301(267), 6(268)>
  # DEBUG __len => D#565
  # DEBUG this => D#593
  _1304 = MEM[(char * *)__i$_M_node_2444 + 32B];
  # DEBUG D#1 => D#593
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24015
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24015.D.11539._M_local_buf
  # DEBUG __s2 => _1304
  # DEBUG __n => D#565
  __r_1306 = __builtin_memcmp (&D.24015.D.11539._M_local_buf, _1304, __len_1303);
  # DEBUG __r => NULL
  if (__r_1306 == 0)
    goto <bb 270>;
  else
    goto <bb 273>;

  <bb 270>:
  # DEBUG __n1 => 6
  # DEBUG __n2 => _1301
  _1307 = 6 - _1301;
  __d_1308 = (const difference_type) _1307;
  # DEBUG __d => __d_1308
  if (__d_1308 > 2147483647)
    goto <bb 278>;
  else
    goto <bb 271>;

  <bb 271>:
  if (__d_1308 < -2147483648)
    goto <bb 274>;
  else
    goto <bb 272>;

  <bb 272>:
  __r_1309 = (int) _1307;

  <bb 273>:
  # __r_1310 = PHI <__r_1306(269), __r_1309(272)>
  # DEBUG __r => __r_1310
  # DEBUG D#738 => {CLOBBER}
  # DEBUG __size => D#738
  # DEBUG D#739 => {CLOBBER}
  # DEBUG __osize => D#739
  if (__r_1310 < 0)
    goto <bb 529>;
  else
    goto <bb 278>;

  <bb 274>:
  # __i$_M_node_1178 = PHI <__i$_M_node_2444(271), __i$_M_node_1173(529)>
  # DEBUG this => &D.48629
  # DEBUG __a => &D.24015
  # DEBUG __b => NULL
  # DEBUG this => &D.48629.first
  # DEBUG __str => &D.24015
  # DEBUG this => &D.24015
  # DEBUG D#145 => &D.24015._M_dataplus
  # DEBUG this => &D.48629.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.48629]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.48629].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.48629]._M_p = &MEM[(struct basic_string *)&D.48629].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24015
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24015
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24015
  # DEBUG this => D#1
  # DEBUG this => &D.48629.first
  # DEBUG __beg => &D.24015.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24015 + 22B]
  # DEBUG this => &D.48629.first
  # DEBUG __beg => &D.24015.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24015 + 22B]
  # DEBUG this => &D.48629.first
  # DEBUG __beg => &D.24015.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24015 + 22B]
  # DEBUG __ptr => &D.24015.D.11539._M_local_buf
  # DEBUG __first => &D.24015.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24015 + 22B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24015.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24015 + 22B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.48629.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.48629].D.11539._M_local_buf
  # DEBUG __k1 => &D.24015.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24015 + 22B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.48629].D.11539._M_local_buf
  # DEBUG __s => &D.24015.D.11539._M_local_buf
  # DEBUG __n => 6
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.48629].D.11539._M_local_buf
  # DEBUG __s2 => &D.24015.D.11539._M_local_buf
  # DEBUG __n => 6
  __builtin_memcpy (&MEM[(struct basic_string *)&D.48629].D.11539._M_local_buf, &D.24015.D.11539._M_local_buf, 6);
  # DEBUG this => &D.48629.first
  # DEBUG __n => 6
  # DEBUG D#6 => &D.48629.first
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.48629 + 8B] = 6;
  # DEBUG D#1 => &D.48629.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.48629 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.48629 + 22] = 0;
  # DEBUG D#740 => {CLOBBER}
  # DEBUG __dnew => D#740
  D.48629.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_1178
  # DEBUG __x => &D.48629
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1178;
  # DEBUG __x => &D.48629
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.48631 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.48629);

  <bb 275>:
  __i$_M_node_1274 = MEM[(struct _Rb_tree_iterator *)&D.48631];
  # DEBUG __i$_M_node => __i$_M_node_1274
  # DEBUG this => &D.48629
  # DEBUG D#49 => &D.48629.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1275 = MEM[(char * *)&D.48629];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.48629].D.11539._M_local_buf != _1275)
    goto <bb 276>;
  else
    goto <bb 277>;

  <bb 276>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1275
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1275
  # DEBUG this => D#38
  # DEBUG D.48588 => D#39
  operator delete (_1275);

  <bb 277>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.48629 ={v} {CLOBBER};
  pretmp_465 = MEM[(char * *)&D.24015];

  <bb 278>:
  # __i$_M_node_1276 = PHI <__i$_M_node_2444(270), __i$_M_node_1274(277), __i$_M_node_2444(273)>
  # prephitmp_466 = PHI <&D.24015.D.11539._M_local_buf(270), pretmp_465(277), &D.24015.D.11539._M_local_buf(273)>
  # DEBUG __i$_M_node => __i$_M_node_1276
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1276
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1276]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_1276 + 64] = 0.0;
  # DEBUG this => &D.24015
  # DEBUG this => &D.24015
  # DEBUG this => &D.24015
  # DEBUG D#816 => MEM[(char * *)&D.24015]
  # DEBUG D#1 => &D.24015
  # DEBUG this => D#1
  # DEBUG this => &D.24015
  if (&D.24015.D.11539._M_local_buf != prephitmp_466)
    goto <bb 282>;
  else
    goto <bb 283>;

<L57>:
  # DEBUG this => &D.48629
  # DEBUG D#49 => &D.48629.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1278 = MEM[(char * *)&D.48629];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.48629].D.11539._M_local_buf != _1278)
    goto <bb 280>;
  else
    goto <bb 281>;

  <bb 280>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1278
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1278
  # DEBUG this => D#38
  # DEBUG D.48572 => D#39
  operator delete (_1278);

  <bb 281>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.48629 ={v} {CLOBBER};
  resx 107

  <bb 282>:
  # DEBUG D#47 => D.24015.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24015
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24015
  # DEBUG this => D#1
  # DEBUG this => &D.24015
  # DEBUG D#44 => &D.24015._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#816
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#816
  # DEBUG this => D#38
  # DEBUG D.37978 => D#39
  operator delete (prephitmp_466);

  <bb 283>:
  # DEBUG D#48 => &D.24015._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24015 ={v} {CLOBBER};
  # DEBUG this => &D.24016
  # DEBUG this => &D.24016
  # DEBUG D#15 => &D.24018
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24018
  # DEBUG this => &D.24017
  # DEBUG __s => "MetalPitch"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24017
  # DEBUG D#87 => &D.24017._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24017.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24017]._M_p = &D.24017.D.11539._M_local_buf;
  # DEBUG __s => "MetalPitch"
  # DEBUG this => &D.24017
  # DEBUG __beg => "MetalPitch"
  # DEBUG __end => &MEM[(void *)"MetalPitch" + 10B]
  # DEBUG this => &D.24017
  # DEBUG __beg => "MetalPitch"
  # DEBUG __end => &MEM[(void *)"MetalPitch" + 10B]
  # DEBUG this => &D.24017
  # DEBUG __beg => "MetalPitch"
  # DEBUG __end => &MEM[(void *)"MetalPitch" + 10B]
  # DEBUG __ptr => "MetalPitch"
  # DEBUG __first => "MetalPitch"
  # DEBUG __last => &MEM[(void *)"MetalPitch" + 10B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "MetalPitch"
  # DEBUG __last => &MEM[(void *)"MetalPitch" + 10B]
  # DEBUG __dnew => 10
  # DEBUG D#1 => &D.24017
  # DEBUG this => D#1
  # DEBUG __p => &D.24017.D.11539._M_local_buf
  # DEBUG __k1 => "MetalPitch"
  # DEBUG __k2 => &MEM[(void *)"MetalPitch" + 10B]
  # DEBUG __d => &D.24017.D.11539._M_local_buf
  # DEBUG __s => "MetalPitch"
  # DEBUG __n => 10
  # DEBUG __s1 => &D.24017.D.11539._M_local_buf
  # DEBUG __s2 => "MetalPitch"
  # DEBUG __n => 10
  __builtin_memcpy (&D.24017.D.11539._M_local_buf, "MetalPitch", 10);
  # DEBUG this => &D.24017
  # DEBUG __n => 10
  # DEBUG D#6 => &D.24017
  # DEBUG __length => 10
  # DEBUG this => D#6
  MEM[(size_type *)&D.24017 + 8B] = 10;
  # DEBUG D#1 => &D.24017
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24017 + 26B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24017 + 26] = 0;
  # DEBUG D#741 => {CLOBBER}
  # DEBUG __dnew => D#741
  # DEBUG this => _65
  # DEBUG __k => &D.24017
  # DEBUG this => _65
  # DEBUG __x => &D.24017
  # DEBUG this => _65
  # DEBUG __k => &D.24017
  # DEBUG this => _65
  __i$_M_node_1354 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24017
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_1354
  if (__i$_M_node_1354 == 0B)
    goto <bb 530>;
  else
    goto <bb 286>;

  <bb 284>:
  # __i$_M_node_880 = PHI <__i$_M_node_1358(292), __i$_M_node_1359(293)>
  # __i$_M_node_879 = PHI <__i$_M_node_1801(292), __i$_M_node_1821(293)>
  # DEBUG __y => __i$_M_node_879
  # DEBUG __x => __i$_M_node_880
  if (__i$_M_node_880 == 0B)
    goto <bb 294>;
  else
    goto <bb 285>;

  <bb 285>:
  goto <bb 287>;

  <bb 286>:

  <bb 287>:
  # __i$_M_node_1801 = PHI <__i$_M_node_1354(286), __i$_M_node_880(285)>
  # __i$_M_node_1821 = PHI <__i$_M_node_66(286), __i$_M_node_879(285)>
  # DEBUG __y => __i$_M_node_1821
  # DEBUG __x => __i$_M_node_1801
  # DEBUG __x => __i$_M_node_1801
  # DEBUG __x => __i$_M_node_1801
  # DEBUG this => __i$_M_node_1801
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_1801]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#594 => &MEM[(const struct pair &)__i$_M_node_1801 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#594
  # DEBUG __y => &D.24017
  # DEBUG this => D#56
  # DEBUG __lhs => D#594
  # DEBUG __rhs => &D.24017
  # DEBUG this => D#594
  # DEBUG __str => &D.24017
  _1363 = MEM[(long unsigned int *)__i$_M_node_1801 + 40B];
  # DEBUG D#5 => D#594
  # DEBUG this => D#5
  # DEBUG __size => _1363
  # DEBUG D#5 => &D.24017
  # DEBUG this => D#5
  # DEBUG __osize => 10
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1511 = MIN_EXPR <_1363, 10>;
  # DEBUG __len => D#566
  # DEBUG this => &D.24017
  # DEBUG D#1 => &D.24017
  # DEBUG this => D#1
  _1368 = MEM[(char * *)__i$_M_node_1801 + 32B];
  # DEBUG D#1 => D#594
  # DEBUG this => D#1
  # DEBUG __s1 => _1368
  # DEBUG __s2 => &D.24017.D.11539._M_local_buf
  # DEBUG __n => D#566
  __r_1369 = __builtin_memcmp (_1368, &D.24017.D.11539._M_local_buf, __len_1511);
  # DEBUG __r => NULL
  if (__r_1369 == 0)
    goto <bb 288>;
  else
    goto <bb 291>;

  <bb 288>:
  # DEBUG __n1 => _1363
  # DEBUG __n2 => 10
  _1370 = _1363 - 10;
  __d_1371 = (const difference_type) _1370;
  # DEBUG __d => __d_1371
  if (__d_1371 > 2147483647)
    goto <bb 292>;
  else
    goto <bb 289>;

  <bb 289>:
  if (__d_1371 < -2147483648)
    goto <bb 293>;
  else
    goto <bb 290>;

  <bb 290>:
  __r_1372 = (int) _1370;

  <bb 291>:
  # __r_1373 = PHI <__r_1369(287), __r_1372(290)>
  # DEBUG __r => __r_1373
  # DEBUG D#746 => {CLOBBER}
  # DEBUG __size => D#746
  # DEBUG D#747 => {CLOBBER}
  # DEBUG __osize => D#747
  if (__r_1373 >= 0)
    goto <bb 292>;
  else
    goto <bb 293>;

  <bb 292>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_1801
  __i$_M_node_1358 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1801 + 16B];
  # DEBUG D#21 => __i$_M_node_1801
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 284>;

  <bb 293>:
  # DEBUG __r => NULL
  __i$_M_node_1359 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1801 + 24B];
  # DEBUG D#20 => __i$_M_node_1801
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 284>;

  <bb 294>:
  # __i$_M_node_2449 = PHI <__i$_M_node_879(284)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2449
  # DEBUG __i$_M_node => __i$_M_node_2449
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2449)
    goto <bb 530>;
  else
    goto <bb 295>;

  <bb 295>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2449
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2449]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#595 => &MEM[(struct pair &)__i$_M_node_2449 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24017
  # DEBUG __y => D#595
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24017
  # DEBUG __rhs => D#595
  # DEBUG this => &D.24017
  # DEBUG __str => D#595
  # DEBUG D#5 => &D.24017
  # DEBUG this => D#5
  # DEBUG __size => 10
  _1376 = MEM[(long unsigned int *)__i$_M_node_2449 + 40B];
  # DEBUG D#5 => D#595
  # DEBUG this => D#5
  # DEBUG __osize => _1376
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1376 <= 9)
    goto <bb 297>;
  else
    goto <bb 296>;

  <bb 296>:

  <bb 297>:
  # __len_1378 = PHI <_1376(295), 10(296)>
  # DEBUG __len => D#567
  # DEBUG this => D#595
  _1379 = MEM[(char * *)__i$_M_node_2449 + 32B];
  # DEBUG D#1 => D#595
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24017
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24017.D.11539._M_local_buf
  # DEBUG __s2 => _1379
  # DEBUG __n => D#567
  __r_1381 = __builtin_memcmp (&D.24017.D.11539._M_local_buf, _1379, __len_1378);
  # DEBUG __r => NULL
  if (__r_1381 == 0)
    goto <bb 298>;
  else
    goto <bb 301>;

  <bb 298>:
  # DEBUG __n1 => 10
  # DEBUG __n2 => _1376
  _1382 = 10 - _1376;
  __d_1383 = (const difference_type) _1382;
  # DEBUG __d => __d_1383
  if (__d_1383 > 2147483647)
    goto <bb 306>;
  else
    goto <bb 299>;

  <bb 299>:
  if (__d_1383 < -2147483648)
    goto <bb 302>;
  else
    goto <bb 300>;

  <bb 300>:
  __r_1384 = (int) _1382;

  <bb 301>:
  # __r_1385 = PHI <__r_1381(297), __r_1384(300)>
  # DEBUG __r => __r_1385
  # DEBUG D#752 => {CLOBBER}
  # DEBUG __size => D#752
  # DEBUG D#753 => {CLOBBER}
  # DEBUG __osize => D#753
  if (__r_1385 < 0)
    goto <bb 530>;
  else
    goto <bb 306>;

  <bb 302>:
  # __i$_M_node_2198 = PHI <__i$_M_node_2449(299), __i$_M_node_1708(530)>
  # DEBUG this => &D.48825
  # DEBUG __a => &D.24017
  # DEBUG __b => NULL
  # DEBUG this => &D.48825.first
  # DEBUG __str => &D.24017
  # DEBUG this => &D.24017
  # DEBUG D#145 => &D.24017._M_dataplus
  # DEBUG this => &D.48825.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.48825]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.48825].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.48825]._M_p = &MEM[(struct basic_string *)&D.48825].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24017
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24017
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24017
  # DEBUG this => D#1
  # DEBUG this => &D.48825.first
  # DEBUG __beg => &D.24017.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24017 + 26B]
  # DEBUG this => &D.48825.first
  # DEBUG __beg => &D.24017.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24017 + 26B]
  # DEBUG this => &D.48825.first
  # DEBUG __beg => &D.24017.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24017 + 26B]
  # DEBUG __ptr => &D.24017.D.11539._M_local_buf
  # DEBUG __first => &D.24017.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24017 + 26B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24017.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24017 + 26B]
  # DEBUG __dnew => 10
  # DEBUG D#1 => &D.48825.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.48825].D.11539._M_local_buf
  # DEBUG __k1 => &D.24017.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24017 + 26B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.48825].D.11539._M_local_buf
  # DEBUG __s => &D.24017.D.11539._M_local_buf
  # DEBUG __n => 10
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.48825].D.11539._M_local_buf
  # DEBUG __s2 => &D.24017.D.11539._M_local_buf
  # DEBUG __n => 10
  __builtin_memcpy (&MEM[(struct basic_string *)&D.48825].D.11539._M_local_buf, &D.24017.D.11539._M_local_buf, 10);
  # DEBUG this => &D.48825.first
  # DEBUG __n => 10
  # DEBUG D#6 => &D.48825.first
  # DEBUG __length => 10
  # DEBUG this => D#6
  MEM[(size_type *)&D.48825 + 8B] = 10;
  # DEBUG D#1 => &D.48825.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.48825 + 26B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.48825 + 26] = 0;
  # DEBUG D#754 => {CLOBBER}
  # DEBUG __dnew => D#754
  D.48825.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_2198
  # DEBUG __x => &D.48825
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_2198;
  # DEBUG __x => &D.48825
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.48827 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.48825);

  <bb 303>:
  __i$_M_node_1349 = MEM[(struct _Rb_tree_iterator *)&D.48827];
  # DEBUG __i$_M_node => __i$_M_node_1349
  # DEBUG this => &D.48825
  # DEBUG D#49 => &D.48825.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1350 = MEM[(char * *)&D.48825];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.48825].D.11539._M_local_buf != _1350)
    goto <bb 304>;
  else
    goto <bb 305>;

  <bb 304>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1350
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1350
  # DEBUG this => D#38
  # DEBUG D.48784 => D#39
  operator delete (_1350);

  <bb 305>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.48825 ={v} {CLOBBER};
  pretmp_472 = MEM[(char * *)&D.24017];

  <bb 306>:
  # __i$_M_node_1351 = PHI <__i$_M_node_2449(298), __i$_M_node_1349(305), __i$_M_node_2449(301)>
  # prephitmp_473 = PHI <&D.24017.D.11539._M_local_buf(298), pretmp_472(305), &D.24017.D.11539._M_local_buf(301)>
  # DEBUG __i$_M_node => __i$_M_node_1351
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1351
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1351]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_1351 + 64] = 0.0;
  # DEBUG this => &D.24017
  # DEBUG this => &D.24017
  # DEBUG this => &D.24017
  # DEBUG D#815 => MEM[(char * *)&D.24017]
  # DEBUG D#1 => &D.24017
  # DEBUG this => D#1
  # DEBUG this => &D.24017
  if (&D.24017.D.11539._M_local_buf != prephitmp_473)
    goto <bb 310>;
  else
    goto <bb 311>;

<L58>:
  # DEBUG this => &D.48825
  # DEBUG D#49 => &D.48825.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1353 = MEM[(char * *)&D.48825];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.48825].D.11539._M_local_buf != _1353)
    goto <bb 308>;
  else
    goto <bb 309>;

  <bb 308>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1353
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1353
  # DEBUG this => D#38
  # DEBUG D.48768 => D#39
  operator delete (_1353);

  <bb 309>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.48825 ={v} {CLOBBER};
  resx 108

  <bb 310>:
  # DEBUG D#47 => D.24017.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24017
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24017
  # DEBUG this => D#1
  # DEBUG this => &D.24017
  # DEBUG D#44 => &D.24017._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#815
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#815
  # DEBUG this => D#38
  # DEBUG D.37996 => D#39
  operator delete (prephitmp_473);

  <bb 311>:
  # DEBUG D#48 => &D.24017._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24017 ={v} {CLOBBER};
  # DEBUG this => &D.24018
  # DEBUG this => &D.24018
  # DEBUG D#15 => &D.24020
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24020
  # DEBUG this => &D.24019
  # DEBUG __s => "Rw"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24019
  # DEBUG D#87 => &D.24019._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24019.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24019]._M_p = &D.24019.D.11539._M_local_buf;
  # DEBUG __s => "Rw"
  # DEBUG this => &D.24019
  # DEBUG __beg => "Rw"
  # DEBUG __end => &MEM[(void *)"Rw" + 2B]
  # DEBUG this => &D.24019
  # DEBUG __beg => "Rw"
  # DEBUG __end => &MEM[(void *)"Rw" + 2B]
  # DEBUG this => &D.24019
  # DEBUG __beg => "Rw"
  # DEBUG __end => &MEM[(void *)"Rw" + 2B]
  # DEBUG __ptr => "Rw"
  # DEBUG __first => "Rw"
  # DEBUG __last => &MEM[(void *)"Rw" + 2B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "Rw"
  # DEBUG __last => &MEM[(void *)"Rw" + 2B]
  # DEBUG __dnew => 2
  # DEBUG D#1 => &D.24019
  # DEBUG this => D#1
  # DEBUG __p => &D.24019.D.11539._M_local_buf
  # DEBUG __k1 => "Rw"
  # DEBUG __k2 => &MEM[(void *)"Rw" + 2B]
  # DEBUG __d => &D.24019.D.11539._M_local_buf
  # DEBUG __s => "Rw"
  # DEBUG __n => 2
  # DEBUG __s1 => &D.24019.D.11539._M_local_buf
  # DEBUG __s2 => "Rw"
  # DEBUG __n => 2
  __builtin_memcpy (&D.24019.D.11539._M_local_buf, "Rw", 2);
  # DEBUG this => &D.24019
  # DEBUG __n => 2
  # DEBUG D#6 => &D.24019
  # DEBUG __length => 2
  # DEBUG this => D#6
  MEM[(size_type *)&D.24019 + 8B] = 2;
  # DEBUG D#1 => &D.24019
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24019 + 18B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24019 + 18] = 0;
  # DEBUG D#755 => {CLOBBER}
  # DEBUG __dnew => D#755
  # DEBUG this => _65
  # DEBUG __k => &D.24019
  # DEBUG this => _65
  # DEBUG __x => &D.24019
  # DEBUG this => _65
  # DEBUG __k => &D.24019
  # DEBUG this => _65
  __i$_M_node_1429 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24019
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_1429
  if (__i$_M_node_1429 == 0B)
    goto <bb 531>;
  else
    goto <bb 314>;

  <bb 312>:
  # __i$_M_node_804 = PHI <__i$_M_node_1433(320), __i$_M_node_1434(321)>
  # __i$_M_node_817 = PHI <__i$_M_node_1791(320), __i$_M_node_496(321)>
  # DEBUG __y => __i$_M_node_817
  # DEBUG __x => __i$_M_node_804
  if (__i$_M_node_804 == 0B)
    goto <bb 322>;
  else
    goto <bb 313>;

  <bb 313>:
  goto <bb 315>;

  <bb 314>:

  <bb 315>:
  # __i$_M_node_1791 = PHI <__i$_M_node_1429(314), __i$_M_node_804(313)>
  # __i$_M_node_496 = PHI <__i$_M_node_66(314), __i$_M_node_817(313)>
  # DEBUG __y => __i$_M_node_496
  # DEBUG __x => __i$_M_node_1791
  # DEBUG __x => __i$_M_node_1791
  # DEBUG __x => __i$_M_node_1791
  # DEBUG this => __i$_M_node_1791
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_1791]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#596 => &MEM[(const struct pair &)__i$_M_node_1791 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#596
  # DEBUG __y => &D.24019
  # DEBUG this => D#56
  # DEBUG __lhs => D#596
  # DEBUG __rhs => &D.24019
  # DEBUG this => D#596
  # DEBUG __str => &D.24019
  _1438 = MEM[(long unsigned int *)__i$_M_node_1791 + 40B];
  # DEBUG D#5 => D#596
  # DEBUG this => D#5
  # DEBUG __size => _1438
  # DEBUG D#5 => &D.24019
  # DEBUG this => D#5
  # DEBUG __osize => 2
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1512 = MIN_EXPR <_1438, 2>;
  # DEBUG __len => D#568
  # DEBUG this => &D.24019
  # DEBUG D#1 => &D.24019
  # DEBUG this => D#1
  _1443 = MEM[(char * *)__i$_M_node_1791 + 32B];
  # DEBUG D#1 => D#596
  # DEBUG this => D#1
  # DEBUG __s1 => _1443
  # DEBUG __s2 => &D.24019.D.11539._M_local_buf
  # DEBUG __n => D#568
  __r_1444 = __builtin_memcmp (_1443, &D.24019.D.11539._M_local_buf, __len_1512);
  # DEBUG __r => NULL
  if (__r_1444 == 0)
    goto <bb 316>;
  else
    goto <bb 319>;

  <bb 316>:
  # DEBUG __n1 => _1438
  # DEBUG __n2 => 2
  _1445 = _1438 - 2;
  __d_1446 = (const difference_type) _1445;
  # DEBUG __d => __d_1446
  if (__d_1446 > 2147483647)
    goto <bb 320>;
  else
    goto <bb 317>;

  <bb 317>:
  if (__d_1446 < -2147483648)
    goto <bb 321>;
  else
    goto <bb 318>;

  <bb 318>:
  __r_1447 = (int) _1445;

  <bb 319>:
  # __r_1448 = PHI <__r_1444(315), __r_1447(318)>
  # DEBUG __r => __r_1448
  # DEBUG D#760 => {CLOBBER}
  # DEBUG __size => D#760
  # DEBUG D#761 => {CLOBBER}
  # DEBUG __osize => D#761
  if (__r_1448 >= 0)
    goto <bb 320>;
  else
    goto <bb 321>;

  <bb 320>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_1791
  __i$_M_node_1433 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1791 + 16B];
  # DEBUG D#21 => __i$_M_node_1791
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 312>;

  <bb 321>:
  # DEBUG __r => NULL
  __i$_M_node_1434 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1791 + 24B];
  # DEBUG D#20 => __i$_M_node_1791
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 312>;

  <bb 322>:
  # __i$_M_node_2457 = PHI <__i$_M_node_817(312)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2457
  # DEBUG __i$_M_node => __i$_M_node_2457
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2457)
    goto <bb 531>;
  else
    goto <bb 323>;

  <bb 323>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2457
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2457]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#597 => &MEM[(struct pair &)__i$_M_node_2457 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24019
  # DEBUG __y => D#597
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24019
  # DEBUG __rhs => D#597
  # DEBUG this => &D.24019
  # DEBUG __str => D#597
  # DEBUG D#5 => &D.24019
  # DEBUG this => D#5
  # DEBUG __size => 2
  _1451 = MEM[(long unsigned int *)__i$_M_node_2457 + 40B];
  # DEBUG D#5 => D#597
  # DEBUG this => D#5
  # DEBUG __osize => _1451
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1451 <= 1)
    goto <bb 325>;
  else
    goto <bb 324>;

  <bb 324>:

  <bb 325>:
  # __len_1453 = PHI <_1451(323), 2(324)>
  # DEBUG __len => D#569
  # DEBUG this => D#597
  _1454 = MEM[(char * *)__i$_M_node_2457 + 32B];
  # DEBUG D#1 => D#597
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24019
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24019.D.11539._M_local_buf
  # DEBUG __s2 => _1454
  # DEBUG __n => D#569
  __r_1456 = __builtin_memcmp (&D.24019.D.11539._M_local_buf, _1454, __len_1453);
  # DEBUG __r => NULL
  if (__r_1456 == 0)
    goto <bb 326>;
  else
    goto <bb 329>;

  <bb 326>:
  # DEBUG __n1 => 2
  # DEBUG __n2 => _1451
  _1457 = 2 - _1451;
  __d_1458 = (const difference_type) _1457;
  # DEBUG __d => __d_1458
  if (__d_1458 > 2147483647)
    goto <bb 334>;
  else
    goto <bb 327>;

  <bb 327>:
  if (__d_1458 < -2147483648)
    goto <bb 330>;
  else
    goto <bb 328>;

  <bb 328>:
  __r_1459 = (int) _1457;

  <bb 329>:
  # __r_1460 = PHI <__r_1456(325), __r_1459(328)>
  # DEBUG __r => __r_1460
  # DEBUG D#766 => {CLOBBER}
  # DEBUG __size => D#766
  # DEBUG D#767 => {CLOBBER}
  # DEBUG __osize => D#767
  if (__r_1460 < 0)
    goto <bb 531>;
  else
    goto <bb 334>;

  <bb 330>:
  # __i$_M_node_1109 = PHI <__i$_M_node_2457(327), __i$_M_node_1184(531)>
  # DEBUG this => &D.49021
  # DEBUG __a => &D.24019
  # DEBUG __b => NULL
  # DEBUG this => &D.49021.first
  # DEBUG __str => &D.24019
  # DEBUG this => &D.24019
  # DEBUG D#145 => &D.24019._M_dataplus
  # DEBUG this => &D.49021.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.49021]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.49021].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.49021]._M_p = &MEM[(struct basic_string *)&D.49021].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24019
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24019
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24019
  # DEBUG this => D#1
  # DEBUG this => &D.49021.first
  # DEBUG __beg => &D.24019.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24019 + 18B]
  # DEBUG this => &D.49021.first
  # DEBUG __beg => &D.24019.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24019 + 18B]
  # DEBUG this => &D.49021.first
  # DEBUG __beg => &D.24019.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24019 + 18B]
  # DEBUG __ptr => &D.24019.D.11539._M_local_buf
  # DEBUG __first => &D.24019.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24019 + 18B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24019.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24019 + 18B]
  # DEBUG __dnew => 2
  # DEBUG D#1 => &D.49021.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.49021].D.11539._M_local_buf
  # DEBUG __k1 => &D.24019.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24019 + 18B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.49021].D.11539._M_local_buf
  # DEBUG __s => &D.24019.D.11539._M_local_buf
  # DEBUG __n => 2
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.49021].D.11539._M_local_buf
  # DEBUG __s2 => &D.24019.D.11539._M_local_buf
  # DEBUG __n => 2
  _1715 = MEM[(char * {ref-all})&D.24019 + 16B];
  MEM[(char * {ref-all})&D.49021 + 16B] = _1715;
  # DEBUG this => &D.49021.first
  # DEBUG __n => 2
  # DEBUG D#6 => &D.49021.first
  # DEBUG __length => 2
  # DEBUG this => D#6
  MEM[(size_type *)&D.49021 + 8B] = 2;
  # DEBUG D#1 => &D.49021.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.49021 + 18B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.49021 + 18] = 0;
  # DEBUG D#768 => {CLOBBER}
  # DEBUG __dnew => D#768
  D.49021.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_1109
  # DEBUG __x => &D.49021
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1109;
  # DEBUG __x => &D.49021
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.49023 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.49021);

  <bb 331>:
  __i$_M_node_1424 = MEM[(struct _Rb_tree_iterator *)&D.49023];
  # DEBUG __i$_M_node => __i$_M_node_1424
  # DEBUG this => &D.49021
  # DEBUG D#49 => &D.49021.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1425 = MEM[(char * *)&D.49021];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.49021].D.11539._M_local_buf != _1425)
    goto <bb 332>;
  else
    goto <bb 333>;

  <bb 332>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1425
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1425
  # DEBUG this => D#38
  # DEBUG D.48980 => D#39
  operator delete (_1425);

  <bb 333>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.49021 ={v} {CLOBBER};
  pretmp_480 = MEM[(char * *)&D.24019];

  <bb 334>:
  # __i$_M_node_1426 = PHI <__i$_M_node_2457(326), __i$_M_node_1424(333), __i$_M_node_2457(329)>
  # prephitmp_481 = PHI <&D.24019.D.11539._M_local_buf(326), pretmp_480(333), &D.24019.D.11539._M_local_buf(329)>
  # DEBUG __i$_M_node => __i$_M_node_1426
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1426
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1426]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_1426 + 64] = 0.0;
  # DEBUG this => &D.24019
  # DEBUG this => &D.24019
  # DEBUG this => &D.24019
  # DEBUG D#814 => MEM[(char * *)&D.24019]
  # DEBUG D#1 => &D.24019
  # DEBUG this => D#1
  # DEBUG this => &D.24019
  if (&D.24019.D.11539._M_local_buf != prephitmp_481)
    goto <bb 338>;
  else
    goto <bb 339>;

<L59>:
  # DEBUG this => &D.49021
  # DEBUG D#49 => &D.49021.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1428 = MEM[(char * *)&D.49021];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.49021].D.11539._M_local_buf != _1428)
    goto <bb 336>;
  else
    goto <bb 337>;

  <bb 336>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1428
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1428
  # DEBUG this => D#38
  # DEBUG D.48964 => D#39
  operator delete (_1428);

  <bb 337>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.49021 ={v} {CLOBBER};
  resx 109

  <bb 338>:
  # DEBUG D#47 => D.24019.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24019
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24019
  # DEBUG this => D#1
  # DEBUG this => &D.24019
  # DEBUG D#44 => &D.24019._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#814
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#814
  # DEBUG this => D#38
  # DEBUG D.38014 => D#39
  operator delete (prephitmp_481);

  <bb 339>:
  # DEBUG D#48 => &D.24019._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24019 ={v} {CLOBBER};
  # DEBUG this => &D.24020
  # DEBUG this => &D.24020
  # DEBUG D#15 => &D.24022
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24022
  # DEBUG this => &D.24021
  # DEBUG __s => "Cw_gnd"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24021
  # DEBUG D#87 => &D.24021._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24021.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24021]._M_p = &D.24021.D.11539._M_local_buf;
  # DEBUG __s => "Cw_gnd"
  # DEBUG this => &D.24021
  # DEBUG __beg => "Cw_gnd"
  # DEBUG __end => &MEM[(void *)"Cw_gnd" + 6B]
  # DEBUG this => &D.24021
  # DEBUG __beg => "Cw_gnd"
  # DEBUG __end => &MEM[(void *)"Cw_gnd" + 6B]
  # DEBUG this => &D.24021
  # DEBUG __beg => "Cw_gnd"
  # DEBUG __end => &MEM[(void *)"Cw_gnd" + 6B]
  # DEBUG __ptr => "Cw_gnd"
  # DEBUG __first => "Cw_gnd"
  # DEBUG __last => &MEM[(void *)"Cw_gnd" + 6B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "Cw_gnd"
  # DEBUG __last => &MEM[(void *)"Cw_gnd" + 6B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.24021
  # DEBUG this => D#1
  # DEBUG __p => &D.24021.D.11539._M_local_buf
  # DEBUG __k1 => "Cw_gnd"
  # DEBUG __k2 => &MEM[(void *)"Cw_gnd" + 6B]
  # DEBUG __d => &D.24021.D.11539._M_local_buf
  # DEBUG __s => "Cw_gnd"
  # DEBUG __n => 6
  # DEBUG __s1 => &D.24021.D.11539._M_local_buf
  # DEBUG __s2 => "Cw_gnd"
  # DEBUG __n => 6
  __builtin_memcpy (&D.24021.D.11539._M_local_buf, "Cw_gnd", 6);
  # DEBUG this => &D.24021
  # DEBUG __n => 6
  # DEBUG D#6 => &D.24021
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.24021 + 8B] = 6;
  # DEBUG D#1 => &D.24021
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24021 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24021 + 22] = 0;
  # DEBUG D#769 => {CLOBBER}
  # DEBUG __dnew => D#769
  # DEBUG this => _65
  # DEBUG __k => &D.24021
  # DEBUG this => _65
  # DEBUG __x => &D.24021
  # DEBUG this => _65
  # DEBUG __k => &D.24021
  # DEBUG this => _65
  __i$_M_node_1504 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24021
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_1504
  if (__i$_M_node_1504 == 0B)
    goto <bb 532>;
  else
    goto <bb 342>;

  <bb 340>:
  # __i$_M_node_742 = PHI <__i$_M_node_1508(348), __i$_M_node_1509(349)>
  # __i$_M_node_754 = PHI <__i$_M_node_500(348), __i$_M_node_1819(349)>
  # DEBUG __y => __i$_M_node_754
  # DEBUG __x => __i$_M_node_742
  if (__i$_M_node_742 == 0B)
    goto <bb 350>;
  else
    goto <bb 341>;

  <bb 341>:
  goto <bb 343>;

  <bb 342>:

  <bb 343>:
  # __i$_M_node_500 = PHI <__i$_M_node_1504(342), __i$_M_node_742(341)>
  # __i$_M_node_1819 = PHI <__i$_M_node_66(342), __i$_M_node_754(341)>
  # DEBUG __y => __i$_M_node_1819
  # DEBUG __x => __i$_M_node_500
  # DEBUG __x => __i$_M_node_500
  # DEBUG __x => __i$_M_node_500
  # DEBUG this => __i$_M_node_500
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_500]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#598 => &MEM[(const struct pair &)__i$_M_node_500 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#598
  # DEBUG __y => &D.24021
  # DEBUG this => D#56
  # DEBUG __lhs => D#598
  # DEBUG __rhs => &D.24021
  # DEBUG this => D#598
  # DEBUG __str => &D.24021
  _1513 = MEM[(long unsigned int *)__i$_M_node_500 + 40B];
  # DEBUG D#5 => D#598
  # DEBUG this => D#5
  # DEBUG __size => _1513
  # DEBUG D#5 => &D.24021
  # DEBUG this => D#5
  # DEBUG __osize => 6
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_746 = MIN_EXPR <_1513, 6>;
  # DEBUG __len => D#570
  # DEBUG this => &D.24021
  # DEBUG D#1 => &D.24021
  # DEBUG this => D#1
  _1518 = MEM[(char * *)__i$_M_node_500 + 32B];
  # DEBUG D#1 => D#598
  # DEBUG this => D#1
  # DEBUG __s1 => _1518
  # DEBUG __s2 => &D.24021.D.11539._M_local_buf
  # DEBUG __n => D#570
  __r_1519 = __builtin_memcmp (_1518, &D.24021.D.11539._M_local_buf, __len_746);
  # DEBUG __r => NULL
  if (__r_1519 == 0)
    goto <bb 344>;
  else
    goto <bb 347>;

  <bb 344>:
  # DEBUG __n1 => _1513
  # DEBUG __n2 => 6
  _1520 = _1513 - 6;
  __d_1521 = (const difference_type) _1520;
  # DEBUG __d => __d_1521
  if (__d_1521 > 2147483647)
    goto <bb 348>;
  else
    goto <bb 345>;

  <bb 345>:
  if (__d_1521 < -2147483648)
    goto <bb 349>;
  else
    goto <bb 346>;

  <bb 346>:
  __r_1522 = (int) _1520;

  <bb 347>:
  # __r_1523 = PHI <__r_1519(343), __r_1522(346)>
  # DEBUG __r => __r_1523
  # DEBUG D#774 => {CLOBBER}
  # DEBUG __size => D#774
  # DEBUG D#775 => {CLOBBER}
  # DEBUG __osize => D#775
  if (__r_1523 >= 0)
    goto <bb 348>;
  else
    goto <bb 349>;

  <bb 348>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_500
  __i$_M_node_1508 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_500 + 16B];
  # DEBUG D#21 => __i$_M_node_500
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 340>;

  <bb 349>:
  # DEBUG __r => NULL
  __i$_M_node_1509 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_500 + 24B];
  # DEBUG D#20 => __i$_M_node_500
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 340>;

  <bb 350>:
  # __i$_M_node_2460 = PHI <__i$_M_node_754(340)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2460
  # DEBUG __i$_M_node => __i$_M_node_2460
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2460)
    goto <bb 532>;
  else
    goto <bb 351>;

  <bb 351>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2460
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2460]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#599 => &MEM[(struct pair &)__i$_M_node_2460 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24021
  # DEBUG __y => D#599
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24021
  # DEBUG __rhs => D#599
  # DEBUG this => &D.24021
  # DEBUG __str => D#599
  # DEBUG D#5 => &D.24021
  # DEBUG this => D#5
  # DEBUG __size => 6
  _1526 = MEM[(long unsigned int *)__i$_M_node_2460 + 40B];
  # DEBUG D#5 => D#599
  # DEBUG this => D#5
  # DEBUG __osize => _1526
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1526 <= 5)
    goto <bb 353>;
  else
    goto <bb 352>;

  <bb 352>:

  <bb 353>:
  # __len_1528 = PHI <_1526(351), 6(352)>
  # DEBUG __len => D#571
  # DEBUG this => D#599
  _1529 = MEM[(char * *)__i$_M_node_2460 + 32B];
  # DEBUG D#1 => D#599
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24021
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24021.D.11539._M_local_buf
  # DEBUG __s2 => _1529
  # DEBUG __n => D#571
  __r_1531 = __builtin_memcmp (&D.24021.D.11539._M_local_buf, _1529, __len_1528);
  # DEBUG __r => NULL
  if (__r_1531 == 0)
    goto <bb 354>;
  else
    goto <bb 357>;

  <bb 354>:
  # DEBUG __n1 => 6
  # DEBUG __n2 => _1526
  _1532 = 6 - _1526;
  __d_1533 = (const difference_type) _1532;
  # DEBUG __d => __d_1533
  if (__d_1533 > 2147483647)
    goto <bb 362>;
  else
    goto <bb 355>;

  <bb 355>:
  if (__d_1533 < -2147483648)
    goto <bb 358>;
  else
    goto <bb 356>;

  <bb 356>:
  __r_1534 = (int) _1532;

  <bb 357>:
  # __r_1535 = PHI <__r_1531(353), __r_1534(356)>
  # DEBUG __r => __r_1535
  # DEBUG D#780 => {CLOBBER}
  # DEBUG __size => D#780
  # DEBUG D#781 => {CLOBBER}
  # DEBUG __osize => D#781
  if (__r_1535 < 0)
    goto <bb 532>;
  else
    goto <bb 362>;

  <bb 358>:
  # __i$_M_node_1739 = PHI <__i$_M_node_2460(355), __i$_M_node_1435(532)>
  # DEBUG this => &D.49217
  # DEBUG __a => &D.24021
  # DEBUG __b => NULL
  # DEBUG this => &D.49217.first
  # DEBUG __str => &D.24021
  # DEBUG this => &D.24021
  # DEBUG D#145 => &D.24021._M_dataplus
  # DEBUG this => &D.49217.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.49217]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.49217].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.49217]._M_p = &MEM[(struct basic_string *)&D.49217].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24021
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24021
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24021
  # DEBUG this => D#1
  # DEBUG this => &D.49217.first
  # DEBUG __beg => &D.24021.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24021 + 22B]
  # DEBUG this => &D.49217.first
  # DEBUG __beg => &D.24021.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24021 + 22B]
  # DEBUG this => &D.49217.first
  # DEBUG __beg => &D.24021.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24021 + 22B]
  # DEBUG __ptr => &D.24021.D.11539._M_local_buf
  # DEBUG __first => &D.24021.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24021 + 22B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24021.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24021 + 22B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.49217.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.49217].D.11539._M_local_buf
  # DEBUG __k1 => &D.24021.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24021 + 22B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.49217].D.11539._M_local_buf
  # DEBUG __s => &D.24021.D.11539._M_local_buf
  # DEBUG __n => 6
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.49217].D.11539._M_local_buf
  # DEBUG __s2 => &D.24021.D.11539._M_local_buf
  # DEBUG __n => 6
  __builtin_memcpy (&MEM[(struct basic_string *)&D.49217].D.11539._M_local_buf, &D.24021.D.11539._M_local_buf, 6);
  # DEBUG this => &D.49217.first
  # DEBUG __n => 6
  # DEBUG D#6 => &D.49217.first
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.49217 + 8B] = 6;
  # DEBUG D#1 => &D.49217.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.49217 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.49217 + 22] = 0;
  # DEBUG D#782 => {CLOBBER}
  # DEBUG __dnew => D#782
  D.49217.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_1739
  # DEBUG __x => &D.49217
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1739;
  # DEBUG __x => &D.49217
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.49219 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.49217);

  <bb 359>:
  __i$_M_node_1499 = MEM[(struct _Rb_tree_iterator *)&D.49219];
  # DEBUG __i$_M_node => __i$_M_node_1499
  # DEBUG this => &D.49217
  # DEBUG D#49 => &D.49217.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1500 = MEM[(char * *)&D.49217];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.49217].D.11539._M_local_buf != _1500)
    goto <bb 360>;
  else
    goto <bb 361>;

  <bb 360>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1500
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1500
  # DEBUG this => D#38
  # DEBUG D.49176 => D#39
  operator delete (_1500);

  <bb 361>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.49217 ={v} {CLOBBER};
  pretmp_487 = MEM[(char * *)&D.24021];

  <bb 362>:
  # __i$_M_node_1501 = PHI <__i$_M_node_2460(354), __i$_M_node_1499(361), __i$_M_node_2460(357)>
  # prephitmp_488 = PHI <&D.24021.D.11539._M_local_buf(354), pretmp_487(361), &D.24021.D.11539._M_local_buf(357)>
  # DEBUG __i$_M_node => __i$_M_node_1501
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1501
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1501]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_1501 + 64] = 0.0;
  # DEBUG this => &D.24021
  # DEBUG this => &D.24021
  # DEBUG this => &D.24021
  # DEBUG D#813 => MEM[(char * *)&D.24021]
  # DEBUG D#1 => &D.24021
  # DEBUG this => D#1
  # DEBUG this => &D.24021
  if (&D.24021.D.11539._M_local_buf != prephitmp_488)
    goto <bb 366>;
  else
    goto <bb 367>;

<L60>:
  # DEBUG this => &D.49217
  # DEBUG D#49 => &D.49217.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1503 = MEM[(char * *)&D.49217];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.49217].D.11539._M_local_buf != _1503)
    goto <bb 364>;
  else
    goto <bb 365>;

  <bb 364>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1503
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1503
  # DEBUG this => D#38
  # DEBUG D.49160 => D#39
  operator delete (_1503);

  <bb 365>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.49217 ={v} {CLOBBER};
  resx 110

  <bb 366>:
  # DEBUG D#47 => D.24021.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24021
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24021
  # DEBUG this => D#1
  # DEBUG this => &D.24021
  # DEBUG D#44 => &D.24021._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#813
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#813
  # DEBUG this => D#38
  # DEBUG D.38032 => D#39
  operator delete (prephitmp_488);

  <bb 367>:
  # DEBUG D#48 => &D.24021._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24021 ={v} {CLOBBER};
  # DEBUG this => &D.24022
  # DEBUG this => &D.24022
  # DEBUG D#15 => &D.24024
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24024
  # DEBUG this => &D.24023
  # DEBUG __s => "Cw_cpl"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24023
  # DEBUG D#87 => &D.24023._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24023.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24023]._M_p = &D.24023.D.11539._M_local_buf;
  # DEBUG __s => "Cw_cpl"
  # DEBUG this => &D.24023
  # DEBUG __beg => "Cw_cpl"
  # DEBUG __end => &MEM[(void *)"Cw_cpl" + 6B]
  # DEBUG this => &D.24023
  # DEBUG __beg => "Cw_cpl"
  # DEBUG __end => &MEM[(void *)"Cw_cpl" + 6B]
  # DEBUG this => &D.24023
  # DEBUG __beg => "Cw_cpl"
  # DEBUG __end => &MEM[(void *)"Cw_cpl" + 6B]
  # DEBUG __ptr => "Cw_cpl"
  # DEBUG __first => "Cw_cpl"
  # DEBUG __last => &MEM[(void *)"Cw_cpl" + 6B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "Cw_cpl"
  # DEBUG __last => &MEM[(void *)"Cw_cpl" + 6B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.24023
  # DEBUG this => D#1
  # DEBUG __p => &D.24023.D.11539._M_local_buf
  # DEBUG __k1 => "Cw_cpl"
  # DEBUG __k2 => &MEM[(void *)"Cw_cpl" + 6B]
  # DEBUG __d => &D.24023.D.11539._M_local_buf
  # DEBUG __s => "Cw_cpl"
  # DEBUG __n => 6
  # DEBUG __s1 => &D.24023.D.11539._M_local_buf
  # DEBUG __s2 => "Cw_cpl"
  # DEBUG __n => 6
  __builtin_memcpy (&D.24023.D.11539._M_local_buf, "Cw_cpl", 6);
  # DEBUG this => &D.24023
  # DEBUG __n => 6
  # DEBUG D#6 => &D.24023
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.24023 + 8B] = 6;
  # DEBUG D#1 => &D.24023
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24023 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24023 + 22] = 0;
  # DEBUG D#783 => {CLOBBER}
  # DEBUG __dnew => D#783
  # DEBUG this => _65
  # DEBUG __k => &D.24023
  # DEBUG this => _65
  # DEBUG __x => &D.24023
  # DEBUG this => _65
  # DEBUG __k => &D.24023
  # DEBUG this => _65
  __i$_M_node_1579 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24023
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_1579
  if (__i$_M_node_1579 == 0B)
    goto <bb 533>;
  else
    goto <bb 370>;

  <bb 368>:
  # __i$_M_node_679 = PHI <__i$_M_node_1583(376), __i$_M_node_1584(377)>
  # __i$_M_node_730 = PHI <__i$_M_node_550(376), __i$_M_node_560(377)>
  # DEBUG __y => __i$_M_node_730
  # DEBUG __x => __i$_M_node_679
  if (__i$_M_node_679 == 0B)
    goto <bb 378>;
  else
    goto <bb 369>;

  <bb 369>:
  goto <bb 371>;

  <bb 370>:

  <bb 371>:
  # __i$_M_node_550 = PHI <__i$_M_node_1579(370), __i$_M_node_679(369)>
  # __i$_M_node_560 = PHI <__i$_M_node_66(370), __i$_M_node_730(369)>
  # DEBUG __y => __i$_M_node_560
  # DEBUG __x => __i$_M_node_550
  # DEBUG __x => __i$_M_node_550
  # DEBUG __x => __i$_M_node_550
  # DEBUG this => __i$_M_node_550
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_550]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#600 => &MEM[(const struct pair &)__i$_M_node_550 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#600
  # DEBUG __y => &D.24023
  # DEBUG this => D#56
  # DEBUG __lhs => D#600
  # DEBUG __rhs => &D.24023
  # DEBUG this => D#600
  # DEBUG __str => &D.24023
  _1588 = MEM[(long unsigned int *)__i$_M_node_550 + 40B];
  # DEBUG D#5 => D#600
  # DEBUG this => D#5
  # DEBUG __size => _1588
  # DEBUG D#5 => &D.24023
  # DEBUG this => D#5
  # DEBUG __osize => 6
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1461 = MIN_EXPR <_1588, 6>;
  # DEBUG __len => D#572
  # DEBUG this => &D.24023
  # DEBUG D#1 => &D.24023
  # DEBUG this => D#1
  _1593 = MEM[(char * *)__i$_M_node_550 + 32B];
  # DEBUG D#1 => D#600
  # DEBUG this => D#1
  # DEBUG __s1 => _1593
  # DEBUG __s2 => &D.24023.D.11539._M_local_buf
  # DEBUG __n => D#572
  __r_1594 = __builtin_memcmp (_1593, &D.24023.D.11539._M_local_buf, __len_1461);
  # DEBUG __r => NULL
  if (__r_1594 == 0)
    goto <bb 372>;
  else
    goto <bb 375>;

  <bb 372>:
  # DEBUG __n1 => _1588
  # DEBUG __n2 => 6
  _1595 = _1588 - 6;
  __d_1596 = (const difference_type) _1595;
  # DEBUG __d => __d_1596
  if (__d_1596 > 2147483647)
    goto <bb 376>;
  else
    goto <bb 373>;

  <bb 373>:
  if (__d_1596 < -2147483648)
    goto <bb 377>;
  else
    goto <bb 374>;

  <bb 374>:
  __r_1597 = (int) _1595;

  <bb 375>:
  # __r_1598 = PHI <__r_1594(371), __r_1597(374)>
  # DEBUG __r => __r_1598
  # DEBUG D#788 => {CLOBBER}
  # DEBUG __size => D#788
  # DEBUG D#789 => {CLOBBER}
  # DEBUG __osize => D#789
  if (__r_1598 >= 0)
    goto <bb 376>;
  else
    goto <bb 377>;

  <bb 376>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_550
  __i$_M_node_1583 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_550 + 16B];
  # DEBUG D#21 => __i$_M_node_550
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 368>;

  <bb 377>:
  # DEBUG __r => NULL
  __i$_M_node_1584 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_550 + 24B];
  # DEBUG D#20 => __i$_M_node_550
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 368>;

  <bb 378>:
  # __i$_M_node_2461 = PHI <__i$_M_node_730(368)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2461
  # DEBUG __i$_M_node => __i$_M_node_2461
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2461)
    goto <bb 533>;
  else
    goto <bb 379>;

  <bb 379>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2461
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2461]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#601 => &MEM[(struct pair &)__i$_M_node_2461 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24023
  # DEBUG __y => D#601
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24023
  # DEBUG __rhs => D#601
  # DEBUG this => &D.24023
  # DEBUG __str => D#601
  # DEBUG D#5 => &D.24023
  # DEBUG this => D#5
  # DEBUG __size => 6
  _1601 = MEM[(long unsigned int *)__i$_M_node_2461 + 40B];
  # DEBUG D#5 => D#601
  # DEBUG this => D#5
  # DEBUG __osize => _1601
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1601 <= 5)
    goto <bb 381>;
  else
    goto <bb 380>;

  <bb 380>:

  <bb 381>:
  # __len_1603 = PHI <_1601(379), 6(380)>
  # DEBUG __len => D#573
  # DEBUG this => D#601
  _1604 = MEM[(char * *)__i$_M_node_2461 + 32B];
  # DEBUG D#1 => D#601
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24023
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24023.D.11539._M_local_buf
  # DEBUG __s2 => _1604
  # DEBUG __n => D#573
  __r_1606 = __builtin_memcmp (&D.24023.D.11539._M_local_buf, _1604, __len_1603);
  # DEBUG __r => NULL
  if (__r_1606 == 0)
    goto <bb 382>;
  else
    goto <bb 385>;

  <bb 382>:
  # DEBUG __n1 => 6
  # DEBUG __n2 => _1601
  _1607 = 6 - _1601;
  __d_1608 = (const difference_type) _1607;
  # DEBUG __d => __d_1608
  if (__d_1608 > 2147483647)
    goto <bb 390>;
  else
    goto <bb 383>;

  <bb 383>:
  if (__d_1608 < -2147483648)
    goto <bb 386>;
  else
    goto <bb 384>;

  <bb 384>:
  __r_1609 = (int) _1607;

  <bb 385>:
  # __r_1610 = PHI <__r_1606(381), __r_1609(384)>
  # DEBUG __r => __r_1610
  # DEBUG D#794 => {CLOBBER}
  # DEBUG __size => D#794
  # DEBUG D#795 => {CLOBBER}
  # DEBUG __osize => D#795
  if (__r_1610 < 0)
    goto <bb 533>;
  else
    goto <bb 390>;

  <bb 386>:
  # __i$_M_node_1355 = PHI <__i$_M_node_2461(383), __i$_M_node_1686(533)>
  # DEBUG this => &D.49413
  # DEBUG __a => &D.24023
  # DEBUG __b => NULL
  # DEBUG this => &D.49413.first
  # DEBUG __str => &D.24023
  # DEBUG this => &D.24023
  # DEBUG D#145 => &D.24023._M_dataplus
  # DEBUG this => &D.49413.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.49413]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.49413].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.49413]._M_p = &MEM[(struct basic_string *)&D.49413].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24023
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24023
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24023
  # DEBUG this => D#1
  # DEBUG this => &D.49413.first
  # DEBUG __beg => &D.24023.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24023 + 22B]
  # DEBUG this => &D.49413.first
  # DEBUG __beg => &D.24023.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24023 + 22B]
  # DEBUG this => &D.49413.first
  # DEBUG __beg => &D.24023.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24023 + 22B]
  # DEBUG __ptr => &D.24023.D.11539._M_local_buf
  # DEBUG __first => &D.24023.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24023 + 22B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24023.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24023 + 22B]
  # DEBUG __dnew => 6
  # DEBUG D#1 => &D.49413.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.49413].D.11539._M_local_buf
  # DEBUG __k1 => &D.24023.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24023 + 22B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.49413].D.11539._M_local_buf
  # DEBUG __s => &D.24023.D.11539._M_local_buf
  # DEBUG __n => 6
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.49413].D.11539._M_local_buf
  # DEBUG __s2 => &D.24023.D.11539._M_local_buf
  # DEBUG __n => 6
  __builtin_memcpy (&MEM[(struct basic_string *)&D.49413].D.11539._M_local_buf, &D.24023.D.11539._M_local_buf, 6);
  # DEBUG this => &D.49413.first
  # DEBUG __n => 6
  # DEBUG D#6 => &D.49413.first
  # DEBUG __length => 6
  # DEBUG this => D#6
  MEM[(size_type *)&D.49413 + 8B] = 6;
  # DEBUG D#1 => &D.49413.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.49413 + 22B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.49413 + 22] = 0;
  # DEBUG D#796 => {CLOBBER}
  # DEBUG __dnew => D#796
  D.49413.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_1355
  # DEBUG __x => &D.49413
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1355;
  # DEBUG __x => &D.49413
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.49415 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.49413);

  <bb 387>:
  __i$_M_node_1574 = MEM[(struct _Rb_tree_iterator *)&D.49415];
  # DEBUG __i$_M_node => __i$_M_node_1574
  # DEBUG this => &D.49413
  # DEBUG D#49 => &D.49413.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1575 = MEM[(char * *)&D.49413];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.49413].D.11539._M_local_buf != _1575)
    goto <bb 388>;
  else
    goto <bb 389>;

  <bb 388>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1575
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1575
  # DEBUG this => D#38
  # DEBUG D.49372 => D#39
  operator delete (_1575);

  <bb 389>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.49413 ={v} {CLOBBER};
  pretmp_2590 = MEM[(char * *)&D.24023];

  <bb 390>:
  # __i$_M_node_1576 = PHI <__i$_M_node_2461(382), __i$_M_node_1574(389), __i$_M_node_2461(385)>
  # prephitmp_365 = PHI <&D.24023.D.11539._M_local_buf(382), pretmp_2590(389), &D.24023.D.11539._M_local_buf(385)>
  # DEBUG __i$_M_node => __i$_M_node_1576
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1576
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1576]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_1576 + 64] = 0.0;
  # DEBUG this => &D.24023
  # DEBUG this => &D.24023
  # DEBUG this => &D.24023
  # DEBUG D#812 => MEM[(char * *)&D.24023]
  # DEBUG D#1 => &D.24023
  # DEBUG this => D#1
  # DEBUG this => &D.24023
  if (&D.24023.D.11539._M_local_buf != prephitmp_365)
    goto <bb 394>;
  else
    goto <bb 395>;

<L61>:
  # DEBUG this => &D.49413
  # DEBUG D#49 => &D.49413.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1578 = MEM[(char * *)&D.49413];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.49413].D.11539._M_local_buf != _1578)
    goto <bb 392>;
  else
    goto <bb 393>;

  <bb 392>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1578
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1578
  # DEBUG this => D#38
  # DEBUG D.49356 => D#39
  operator delete (_1578);

  <bb 393>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.49413 ={v} {CLOBBER};
  resx 111

  <bb 394>:
  # DEBUG D#47 => D.24023.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24023
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24023
  # DEBUG this => D#1
  # DEBUG this => &D.24023
  # DEBUG D#44 => &D.24023._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#812
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#812
  # DEBUG this => D#38
  # DEBUG D.38050 => D#39
  operator delete (prephitmp_365);

  <bb 395>:
  # DEBUG D#48 => &D.24023._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24023 ={v} {CLOBBER};
  # DEBUG this => &D.24024
  # DEBUG this => &D.24024
  # DEBUG D#15 => &D.24026
  # DEBUG this => D#15
  # DEBUG D#14 => D#15
  # DEBUG this => D#14
  # DEBUG D#90 => &D.24026
  # DEBUG this => &D.24025
  # DEBUG __s => "wire_length"
  # DEBUG __a => D#90
  # DEBUG D#89 => D#90
  # DEBUG this => &D.24025
  # DEBUG D#87 => &D.24025._M_dataplus
  # DEBUG D#35 => D#89
  # DEBUG this => D#87
  # DEBUG __dat => &D.24025.D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#87
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.24025]._M_p = &D.24025.D.11539._M_local_buf;
  # DEBUG __s => "wire_length"
  # DEBUG this => &D.24025
  # DEBUG __beg => "wire_length"
  # DEBUG __end => &MEM[(void *)"wire_length" + 11B]
  # DEBUG this => &D.24025
  # DEBUG __beg => "wire_length"
  # DEBUG __end => &MEM[(void *)"wire_length" + 11B]
  # DEBUG this => &D.24025
  # DEBUG __beg => "wire_length"
  # DEBUG __end => &MEM[(void *)"wire_length" + 11B]
  # DEBUG __ptr => "wire_length"
  # DEBUG __first => "wire_length"
  # DEBUG __last => &MEM[(void *)"wire_length" + 11B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => "wire_length"
  # DEBUG __last => &MEM[(void *)"wire_length" + 11B]
  # DEBUG __dnew => 11
  # DEBUG D#1 => &D.24025
  # DEBUG this => D#1
  # DEBUG __p => &D.24025.D.11539._M_local_buf
  # DEBUG __k1 => "wire_length"
  # DEBUG __k2 => &MEM[(void *)"wire_length" + 11B]
  # DEBUG __d => &D.24025.D.11539._M_local_buf
  # DEBUG __s => "wire_length"
  # DEBUG __n => 11
  # DEBUG __s1 => &D.24025.D.11539._M_local_buf
  # DEBUG __s2 => "wire_length"
  # DEBUG __n => 11
  __builtin_memcpy (&D.24025.D.11539._M_local_buf, "wire_length", 11);
  # DEBUG this => &D.24025
  # DEBUG __n => 11
  # DEBUG D#6 => &D.24025
  # DEBUG __length => 11
  # DEBUG this => D#6
  MEM[(size_type *)&D.24025 + 8B] = 11;
  # DEBUG D#1 => &D.24025
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.24025 + 27B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.24025 + 27] = 0;
  # DEBUG D#797 => {CLOBBER}
  # DEBUG __dnew => D#797
  # DEBUG this => _65
  # DEBUG __k => &D.24025
  # DEBUG this => _65
  # DEBUG __x => &D.24025
  # DEBUG this => _65
  # DEBUG __k => &D.24025
  # DEBUG this => _65
  __i$_M_node_1654 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
  # DEBUG D#13 => _65
  # DEBUG this => D#13
  # DEBUG D#151 => _65
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.24025
  # DEBUG __y => __i$_M_node_66
  # DEBUG __x => __i$_M_node_1654
  if (__i$_M_node_1654 == 0B)
    goto <bb 534>;
  else
    goto <bb 398>;

  <bb 396>:
  # __i$_M_node_655 = PHI <__i$_M_node_1658(404), __i$_M_node_1659(405)>
  # __i$_M_node_654 = PHI <__i$_M_node_584(404), __i$_M_node_568(405)>
  # DEBUG __y => __i$_M_node_654
  # DEBUG __x => __i$_M_node_655
  if (__i$_M_node_655 == 0B)
    goto <bb 406>;
  else
    goto <bb 397>;

  <bb 397>:
  goto <bb 399>;

  <bb 398>:

  <bb 399>:
  # __i$_M_node_584 = PHI <__i$_M_node_1654(398), __i$_M_node_655(397)>
  # __i$_M_node_568 = PHI <__i$_M_node_66(398), __i$_M_node_654(397)>
  # DEBUG __y => __i$_M_node_568
  # DEBUG __x => __i$_M_node_584
  # DEBUG __x => __i$_M_node_584
  # DEBUG __x => __i$_M_node_584
  # DEBUG this => __i$_M_node_584
  # DEBUG D#148 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_584]._M_value_field
  # DEBUG __r => D#148
  # DEBUG __x => D#148
  # DEBUG this => D#58
  # DEBUG D#602 => &MEM[(const struct pair &)__i$_M_node_584 + 32].first
  # DEBUG D#149 => &D#150->_M_impl._M_key_compare
  # DEBUG D#56 => D#149
  # DEBUG __x => D#602
  # DEBUG __y => &D.24025
  # DEBUG this => D#56
  # DEBUG __lhs => D#602
  # DEBUG __rhs => &D.24025
  # DEBUG this => D#602
  # DEBUG __str => &D.24025
  _1663 = MEM[(long unsigned int *)__i$_M_node_584 + 40B];
  # DEBUG D#5 => D#602
  # DEBUG this => D#5
  # DEBUG __size => _1663
  # DEBUG D#5 => &D.24025
  # DEBUG this => D#5
  # DEBUG __osize => 11
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1449 = MIN_EXPR <_1663, 11>;
  # DEBUG __len => D#574
  # DEBUG this => &D.24025
  # DEBUG D#1 => &D.24025
  # DEBUG this => D#1
  _1668 = MEM[(char * *)__i$_M_node_584 + 32B];
  # DEBUG D#1 => D#602
  # DEBUG this => D#1
  # DEBUG __s1 => _1668
  # DEBUG __s2 => &D.24025.D.11539._M_local_buf
  # DEBUG __n => D#574
  __r_1669 = __builtin_memcmp (_1668, &D.24025.D.11539._M_local_buf, __len_1449);
  # DEBUG __r => NULL
  if (__r_1669 == 0)
    goto <bb 400>;
  else
    goto <bb 403>;

  <bb 400>:
  # DEBUG __n1 => _1663
  # DEBUG __n2 => 11
  _1670 = _1663 - 11;
  __d_1671 = (const difference_type) _1670;
  # DEBUG __d => __d_1671
  if (__d_1671 > 2147483647)
    goto <bb 404>;
  else
    goto <bb 401>;

  <bb 401>:
  if (__d_1671 < -2147483648)
    goto <bb 405>;
  else
    goto <bb 402>;

  <bb 402>:
  __r_1672 = (int) _1670;

  <bb 403>:
  # __r_1673 = PHI <__r_1669(399), __r_1672(402)>
  # DEBUG __r => __r_1673
  # DEBUG D#802 => {CLOBBER}
  # DEBUG __size => D#802
  # DEBUG D#803 => {CLOBBER}
  # DEBUG __osize => D#803
  if (__r_1673 >= 0)
    goto <bb 404>;
  else
    goto <bb 405>;

  <bb 404>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_584
  __i$_M_node_1658 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_584 + 16B];
  # DEBUG D#21 => __i$_M_node_584
  # DEBUG __x => D#21
  # DEBUG __x => NULL
  goto <bb 396>;

  <bb 405>:
  # DEBUG __r => NULL
  __i$_M_node_1659 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_584 + 24B];
  # DEBUG D#20 => __i$_M_node_584
  # DEBUG __x => D#20
  # DEBUG __x => NULL
  goto <bb 396>;

  <bb 406>:
  # __i$_M_node_2466 = PHI <__i$_M_node_654(396)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2466
  # DEBUG __i$_M_node => __i$_M_node_2466
  # DEBUG this => _65
  # DEBUG D#37 => &_65->_M_t
  # DEBUG this => D#37
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_66 == __i$_M_node_2466)
    goto <bb 534>;
  else
    goto <bb 407>;

  <bb 407>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2466
  # DEBUG D#224 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2466]._M_value_field
  # DEBUG __r => D#224
  # DEBUG D#603 => &MEM[(struct pair &)__i$_M_node_2466 + 32].first
  # DEBUG D#29 => _65
  # DEBUG this => D#29
  # DEBUG D#28 => D#29
  # DEBUG D#27 => &D#28->_M_t
  # DEBUG D#26 => D#27
  # DEBUG this => D#26
  # DEBUG __x => &D.24025
  # DEBUG __y => D#603
  # DEBUG this => D#56
  # DEBUG __lhs => &D.24025
  # DEBUG __rhs => D#603
  # DEBUG this => &D.24025
  # DEBUG __str => D#603
  # DEBUG D#5 => &D.24025
  # DEBUG this => D#5
  # DEBUG __size => 11
  _1676 = MEM[(long unsigned int *)__i$_M_node_2466 + 40B];
  # DEBUG D#5 => D#603
  # DEBUG this => D#5
  # DEBUG __osize => _1676
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1676 <= 10)
    goto <bb 409>;
  else
    goto <bb 408>;

  <bb 408>:

  <bb 409>:
  # __len_1678 = PHI <_1676(407), 11(408)>
  # DEBUG __len => D#575
  # DEBUG this => D#603
  _1679 = MEM[(char * *)__i$_M_node_2466 + 32B];
  # DEBUG D#1 => D#603
  # DEBUG this => D#1
  # DEBUG D#1 => &D.24025
  # DEBUG this => D#1
  # DEBUG __s1 => &D.24025.D.11539._M_local_buf
  # DEBUG __s2 => _1679
  # DEBUG __n => D#575
  __r_1681 = __builtin_memcmp (&D.24025.D.11539._M_local_buf, _1679, __len_1678);
  # DEBUG __r => NULL
  if (__r_1681 == 0)
    goto <bb 410>;
  else
    goto <bb 413>;

  <bb 410>:
  # DEBUG __n1 => 11
  # DEBUG __n2 => _1676
  _1682 = 11 - _1676;
  __d_1683 = (const difference_type) _1682;
  # DEBUG __d => __d_1683
  if (__d_1683 > 2147483647)
    goto <bb 418>;
  else
    goto <bb 411>;

  <bb 411>:
  if (__d_1683 < -2147483648)
    goto <bb 414>;
  else
    goto <bb 412>;

  <bb 412>:
  __r_1684 = (int) _1682;

  <bb 413>:
  # __r_1685 = PHI <__r_1681(409), __r_1684(412)>
  # DEBUG __r => __r_1685
  # DEBUG D#808 => {CLOBBER}
  # DEBUG __size => D#808
  # DEBUG D#809 => {CLOBBER}
  # DEBUG __osize => D#809
  if (__r_1685 < 0)
    goto <bb 534>;
  else
    goto <bb 418>;

  <bb 414>:
  # __i$_M_node_1730 = PHI <__i$_M_node_2466(411), __i$_M_node_1360(534)>
  # DEBUG this => &D.49609
  # DEBUG __a => &D.24025
  # DEBUG __b => NULL
  # DEBUG this => &D.49609.first
  # DEBUG __str => &D.24025
  # DEBUG this => &D.24025
  # DEBUG D#145 => &D.24025._M_dataplus
  # DEBUG this => &D.49609.first
  # DEBUG D#146 => &MEM[(struct basic_string *)&D.49609]._M_dataplus
  # DEBUG D#35 => D#145
  # DEBUG this => D#146
  # DEBUG __dat => &MEM[(struct basic_string *)&D.49609].D.11539._M_local_buf
  # DEBUG __a => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#32 => D#146
  # DEBUG D#33 => D#34
  # DEBUG this => D#32
  # DEBUG __a => D#33
  # DEBUG D#31 => D#33
  # DEBUG D#30 => D#32
  # DEBUG this => D#30
  # DEBUG D.28231 => D#31
  MEM[(struct _Alloc_hider *)&D.49609]._M_p = &MEM[(struct basic_string *)&D.49609].D.11539._M_local_buf;
  # DEBUG D#1 => &D.24025
  # DEBUG this => D#1
  # DEBUG D#2 => &D.24025
  # DEBUG this => D#2
  # DEBUG D#1 => &D.24025
  # DEBUG this => D#1
  # DEBUG this => &D.49609.first
  # DEBUG __beg => &D.24025.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24025 + 27B]
  # DEBUG this => &D.49609.first
  # DEBUG __beg => &D.24025.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24025 + 27B]
  # DEBUG this => &D.49609.first
  # DEBUG __beg => &D.24025.D.11539._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.24025 + 27B]
  # DEBUG __ptr => &D.24025.D.11539._M_local_buf
  # DEBUG __first => &D.24025.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24025 + 27B]
  # DEBUG D#141 => &__first
  # DEBUG D.29688 => D#141
  # DEBUG __first => &D.24025.D.11539._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.24025 + 27B]
  # DEBUG __dnew => 11
  # DEBUG D#1 => &D.49609.first
  # DEBUG this => D#1
  # DEBUG __p => &MEM[(struct basic_string *)&D.49609].D.11539._M_local_buf
  # DEBUG __k1 => &D.24025.D.11539._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.24025 + 27B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.49609].D.11539._M_local_buf
  # DEBUG __s => &D.24025.D.11539._M_local_buf
  # DEBUG __n => 11
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.49609].D.11539._M_local_buf
  # DEBUG __s2 => &D.24025.D.11539._M_local_buf
  # DEBUG __n => 11
  __builtin_memcpy (&MEM[(struct basic_string *)&D.49609].D.11539._M_local_buf, &D.24025.D.11539._M_local_buf, 11);
  # DEBUG this => &D.49609.first
  # DEBUG __n => 11
  # DEBUG D#6 => &D.49609.first
  # DEBUG __length => 11
  # DEBUG this => D#6
  MEM[(size_type *)&D.49609 + 8B] = 11;
  # DEBUG D#1 => &D.49609.first
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.49609 + 27B]
  # DEBUG __c2 => D#7
  MEM[(char_type &)&D.49609 + 27] = 0;
  # DEBUG D#810 => {CLOBBER}
  # DEBUG __dnew => D#810
  D.49609.second = 0.0;
  # DEBUG this => _65
  # DEBUG __position$_M_node => __i$_M_node_1730
  # DEBUG __x => &D.49609
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _65
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1730;
  # DEBUG __x => &D.49609
  # DEBUG this => &__an
  # DEBUG __t => _65
  # DEBUG __an$_M_t => _65
  # DEBUG D#223 => &__an
  D.49611 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.86.constprop (_65, __pos, &D.49609);

  <bb 415>:
  __i$_M_node_1649 = MEM[(struct _Rb_tree_iterator *)&D.49611];
  # DEBUG __i$_M_node => __i$_M_node_1649
  # DEBUG this => &D.49609
  # DEBUG D#49 => &D.49609.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1650 = MEM[(char * *)&D.49609];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.49609].D.11539._M_local_buf != _1650)
    goto <bb 416>;
  else
    goto <bb 417>;

  <bb 416>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1650
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1650
  # DEBUG this => D#38
  # DEBUG D.49568 => D#39
  operator delete (_1650);

  <bb 417>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.49609 ={v} {CLOBBER};
  pretmp_368 = MEM[(char * *)&D.24025];

  <bb 418>:
  # __i$_M_node_1651 = PHI <__i$_M_node_2466(410), __i$_M_node_1649(417), __i$_M_node_2466(413)>
  # prephitmp_2535 = PHI <&D.24025.D.11539._M_local_buf(410), pretmp_368(417), &D.24025.D.11539._M_local_buf(413)>
  # DEBUG __i$_M_node => __i$_M_node_1651
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1651
  # DEBUG D#225 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1651]._M_value_field
  # DEBUG __r => D#225
  # DEBUG D#227 => {CLOBBER}
  # DEBUG __i$_M_node => D#227
  MEM[(mapped_type &)__i$_M_node_1651 + 64] = 0.0;
  # DEBUG this => &D.24025
  # DEBUG this => &D.24025
  # DEBUG this => &D.24025
  # DEBUG D#811 => MEM[(char * *)&D.24025]
  # DEBUG D#1 => &D.24025
  # DEBUG this => D#1
  # DEBUG this => &D.24025
  if (&D.24025.D.11539._M_local_buf != prephitmp_2535)
    goto <bb 422>;
  else
    goto <bb 423>;

<L62>:
  # DEBUG this => &D.49609
  # DEBUG D#49 => &D.49609.first
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => D#49
  _1653 = MEM[(char * *)&D.49609];
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  if (&MEM[(const struct basic_string *)&D.49609].D.11539._M_local_buf != _1653)
    goto <bb 420>;
  else
    goto <bb 421>;

  <bb 420>:
  # DEBUG D#47 => MEM[(struct basic_string *)D#49].D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => D#49
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => D#49
  # DEBUG this => D#1
  # DEBUG this => D#49
  # DEBUG D#44 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _1653
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _1653
  # DEBUG this => D#38
  # DEBUG D.49552 => D#39
  operator delete (_1653);

  <bb 421>:
  # DEBUG D#48 => &MEM[(struct basic_string *)D#49]._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.49609 ={v} {CLOBBER};
  resx 112

  <bb 422>:
  # DEBUG D#47 => D.24025.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24025
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24025
  # DEBUG this => D#1
  # DEBUG this => &D.24025
  # DEBUG D#44 => &D.24025._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => D#811
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => D#811
  # DEBUG this => D#38
  # DEBUG D.38067 => D#39
  operator delete (prephitmp_2535);

  <bb 423>:
  # DEBUG D#48 => &D.24025._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24025 ={v} {CLOBBER};
  # DEBUG this => &D.24026
  # DEBUG this => &D.24026
  return;

<L0>:
  # DEBUG this => &D.23979
  # DEBUG this => &D.23979
  # DEBUG this => &D.23979
  _172 = MEM[(char * *)&D.23979];
  # DEBUG D#1 => &D.23979
  # DEBUG this => D#1
  # DEBUG this => &D.23979
  if (&D.23979.D.11539._M_local_buf != _172)
    goto <bb 425>;
  else
    goto <bb 426>;

  <bb 425>:
  # DEBUG D#47 => D.23979.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23979
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23979
  # DEBUG this => D#1
  # DEBUG this => &D.23979
  # DEBUG D#44 => &D.23979._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _172
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _172
  # DEBUG this => D#38
  # DEBUG D.38082 => D#39
  operator delete (_172);

  <bb 426>:
  # DEBUG D#48 => &D.23979._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23979 ={v} {CLOBBER};
  resx 3

<L2>:
  # DEBUG this => &D.23981
  # DEBUG this => &D.23981
  # DEBUG this => &D.23981
  _223 = MEM[(char * *)&D.23981];
  # DEBUG D#1 => &D.23981
  # DEBUG this => D#1
  # DEBUG this => &D.23981
  if (&D.23981.D.11539._M_local_buf != _223)
    goto <bb 428>;
  else
    goto <bb 429>;

  <bb 428>:
  # DEBUG D#47 => D.23981.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23981
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23981
  # DEBUG this => D#1
  # DEBUG this => &D.23981
  # DEBUG D#44 => &D.23981._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _223
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _223
  # DEBUG this => D#38
  # DEBUG D.38099 => D#39
  operator delete (_223);

  <bb 429>:
  # DEBUG D#48 => &D.23981._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23981 ={v} {CLOBBER};
  resx 7

<L64>:
  goto <bb 520> (<L48>);

<L4>:
  # DEBUG this => &D.23983
  # DEBUG this => &D.23983
  # DEBUG this => &D.23983
  _221 = MEM[(char * *)&D.23983];
  # DEBUG D#1 => &D.23983
  # DEBUG this => D#1
  # DEBUG this => &D.23983
  if (&D.23983.D.11539._M_local_buf != _221)
    goto <bb 432>;
  else
    goto <bb 433>;

  <bb 432>:
  # DEBUG D#47 => D.23983.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23983
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23983
  # DEBUG this => D#1
  # DEBUG this => &D.23983
  # DEBUG D#44 => &D.23983._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _221
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _221
  # DEBUG this => D#38
  # DEBUG D.38116 => D#39
  operator delete (_221);

  <bb 433>:
  # DEBUG D#48 => &D.23983._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23983 ={v} {CLOBBER};
  resx 11

<L65>:
  goto <bb 520> (<L48>);

<L6>:
  # DEBUG this => &D.23985
  # DEBUG this => &D.23985
  # DEBUG this => &D.23985
  _219 = MEM[(char * *)&D.23985];
  # DEBUG D#1 => &D.23985
  # DEBUG this => D#1
  # DEBUG this => &D.23985
  if (&D.23985.D.11539._M_local_buf != _219)
    goto <bb 436>;
  else
    goto <bb 437>;

  <bb 436>:
  # DEBUG D#47 => D.23985.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23985
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23985
  # DEBUG this => D#1
  # DEBUG this => &D.23985
  # DEBUG D#44 => &D.23985._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _219
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _219
  # DEBUG this => D#38
  # DEBUG D.38133 => D#39
  operator delete (_219);

  <bb 437>:
  # DEBUG D#48 => &D.23985._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23985 ={v} {CLOBBER};
  resx 15

<L66>:
  goto <bb 520> (<L48>);

<L8>:
  # DEBUG this => &D.23987
  # DEBUG this => &D.23987
  # DEBUG this => &D.23987
  _217 = MEM[(char * *)&D.23987];
  # DEBUG D#1 => &D.23987
  # DEBUG this => D#1
  # DEBUG this => &D.23987
  if (&D.23987.D.11539._M_local_buf != _217)
    goto <bb 440>;
  else
    goto <bb 441>;

  <bb 440>:
  # DEBUG D#47 => D.23987.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23987
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23987
  # DEBUG this => D#1
  # DEBUG this => &D.23987
  # DEBUG D#44 => &D.23987._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _217
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _217
  # DEBUG this => D#38
  # DEBUG D.38150 => D#39
  operator delete (_217);

  <bb 441>:
  # DEBUG D#48 => &D.23987._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23987 ={v} {CLOBBER};
  resx 19

<L67>:
  goto <bb 520> (<L48>);

<L10>:
  # DEBUG this => &D.23989
  # DEBUG this => &D.23989
  # DEBUG this => &D.23989
  _215 = MEM[(char * *)&D.23989];
  # DEBUG D#1 => &D.23989
  # DEBUG this => D#1
  # DEBUG this => &D.23989
  if (&D.23989.D.11539._M_local_buf != _215)
    goto <bb 444>;
  else
    goto <bb 445>;

  <bb 444>:
  # DEBUG D#47 => D.23989.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23989
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23989
  # DEBUG this => D#1
  # DEBUG this => &D.23989
  # DEBUG D#44 => &D.23989._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _215
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _215
  # DEBUG this => D#38
  # DEBUG D.38167 => D#39
  operator delete (_215);

  <bb 445>:
  # DEBUG D#48 => &D.23989._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23989 ={v} {CLOBBER};
  resx 23

<L68>:
  goto <bb 520> (<L48>);

<L12>:
  # DEBUG this => &D.23991
  # DEBUG this => &D.23991
  # DEBUG this => &D.23991
  _213 = MEM[(char * *)&D.23991];
  # DEBUG D#1 => &D.23991
  # DEBUG this => D#1
  # DEBUG this => &D.23991
  if (&D.23991.D.11539._M_local_buf != _213)
    goto <bb 448>;
  else
    goto <bb 449>;

  <bb 448>:
  # DEBUG D#47 => D.23991.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23991
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23991
  # DEBUG this => D#1
  # DEBUG this => &D.23991
  # DEBUG D#44 => &D.23991._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _213
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _213
  # DEBUG this => D#38
  # DEBUG D.38184 => D#39
  operator delete (_213);

  <bb 449>:
  # DEBUG D#48 => &D.23991._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23991 ={v} {CLOBBER};
  resx 27

<L69>:
  goto <bb 520> (<L48>);

<L14>:
  # DEBUG this => &D.23993
  # DEBUG this => &D.23993
  # DEBUG this => &D.23993
  _211 = MEM[(char * *)&D.23993];
  # DEBUG D#1 => &D.23993
  # DEBUG this => D#1
  # DEBUG this => &D.23993
  if (&D.23993.D.11539._M_local_buf != _211)
    goto <bb 452>;
  else
    goto <bb 453>;

  <bb 452>:
  # DEBUG D#47 => D.23993.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23993
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23993
  # DEBUG this => D#1
  # DEBUG this => &D.23993
  # DEBUG D#44 => &D.23993._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _211
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _211
  # DEBUG this => D#38
  # DEBUG D.38201 => D#39
  operator delete (_211);

  <bb 453>:
  # DEBUG D#48 => &D.23993._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23993 ={v} {CLOBBER};
  resx 31

<L70>:
  goto <bb 520> (<L48>);

<L16>:
  # DEBUG this => &D.23995
  # DEBUG this => &D.23995
  # DEBUG this => &D.23995
  _209 = MEM[(char * *)&D.23995];
  # DEBUG D#1 => &D.23995
  # DEBUG this => D#1
  # DEBUG this => &D.23995
  if (&D.23995.D.11539._M_local_buf != _209)
    goto <bb 456>;
  else
    goto <bb 457>;

  <bb 456>:
  # DEBUG D#47 => D.23995.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23995
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23995
  # DEBUG this => D#1
  # DEBUG this => &D.23995
  # DEBUG D#44 => &D.23995._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _209
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _209
  # DEBUG this => D#38
  # DEBUG D.38218 => D#39
  operator delete (_209);

  <bb 457>:
  # DEBUG D#48 => &D.23995._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23995 ={v} {CLOBBER};
  resx 35

<L71>:
  goto <bb 520> (<L48>);

<L18>:
  # DEBUG this => &D.23997
  # DEBUG this => &D.23997
  # DEBUG this => &D.23997
  _207 = MEM[(char * *)&D.23997];
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG this => &D.23997
  if (&D.23997.D.11539._M_local_buf != _207)
    goto <bb 460>;
  else
    goto <bb 461>;

  <bb 460>:
  # DEBUG D#47 => D.23997.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23997
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG this => &D.23997
  # DEBUG D#44 => &D.23997._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _207
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _207
  # DEBUG this => D#38
  # DEBUG D.38235 => D#39
  operator delete (_207);

  <bb 461>:
  # DEBUG D#48 => &D.23997._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23997 ={v} {CLOBBER};
  resx 39

<L72>:
  goto <bb 520> (<L48>);

<L20>:
  # DEBUG this => &D.23999
  # DEBUG this => &D.23999
  # DEBUG this => &D.23999
  _205 = MEM[(char * *)&D.23999];
  # DEBUG D#1 => &D.23999
  # DEBUG this => D#1
  # DEBUG this => &D.23999
  if (&D.23999.D.11539._M_local_buf != _205)
    goto <bb 464>;
  else
    goto <bb 465>;

  <bb 464>:
  # DEBUG D#47 => D.23999.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.23999
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.23999
  # DEBUG this => D#1
  # DEBUG this => &D.23999
  # DEBUG D#44 => &D.23999._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _205
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _205
  # DEBUG this => D#38
  # DEBUG D.38252 => D#39
  operator delete (_205);

  <bb 465>:
  # DEBUG D#48 => &D.23999._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.23999 ={v} {CLOBBER};
  resx 43

<L73>:
  goto <bb 520> (<L48>);

<L22>:
  # DEBUG this => &D.24001
  # DEBUG this => &D.24001
  # DEBUG this => &D.24001
  _203 = MEM[(char * *)&D.24001];
  # DEBUG D#1 => &D.24001
  # DEBUG this => D#1
  # DEBUG this => &D.24001
  if (&D.24001.D.11539._M_local_buf != _203)
    goto <bb 468>;
  else
    goto <bb 469>;

  <bb 468>:
  # DEBUG D#47 => D.24001.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24001
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24001
  # DEBUG this => D#1
  # DEBUG this => &D.24001
  # DEBUG D#44 => &D.24001._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _203
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _203
  # DEBUG this => D#38
  # DEBUG D.38269 => D#39
  operator delete (_203);

  <bb 469>:
  # DEBUG D#48 => &D.24001._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24001 ={v} {CLOBBER};
  resx 47

<L74>:
  goto <bb 520> (<L48>);

<L24>:
  # DEBUG this => &D.24003
  # DEBUG this => &D.24003
  # DEBUG this => &D.24003
  _201 = MEM[(char * *)&D.24003];
  # DEBUG D#1 => &D.24003
  # DEBUG this => D#1
  # DEBUG this => &D.24003
  if (&D.24003.D.11539._M_local_buf != _201)
    goto <bb 472>;
  else
    goto <bb 473>;

  <bb 472>:
  # DEBUG D#47 => D.24003.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24003
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24003
  # DEBUG this => D#1
  # DEBUG this => &D.24003
  # DEBUG D#44 => &D.24003._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _201
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _201
  # DEBUG this => D#38
  # DEBUG D.38286 => D#39
  operator delete (_201);

  <bb 473>:
  # DEBUG D#48 => &D.24003._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24003 ={v} {CLOBBER};
  resx 51

<L75>:
  goto <bb 520> (<L48>);

<L26>:
  # DEBUG this => &D.24005
  # DEBUG this => &D.24005
  # DEBUG this => &D.24005
  _199 = MEM[(char * *)&D.24005];
  # DEBUG D#1 => &D.24005
  # DEBUG this => D#1
  # DEBUG this => &D.24005
  if (&D.24005.D.11539._M_local_buf != _199)
    goto <bb 476>;
  else
    goto <bb 477>;

  <bb 476>:
  # DEBUG D#47 => D.24005.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24005
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24005
  # DEBUG this => D#1
  # DEBUG this => &D.24005
  # DEBUG D#44 => &D.24005._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _199
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _199
  # DEBUG this => D#38
  # DEBUG D.38303 => D#39
  operator delete (_199);

  <bb 477>:
  # DEBUG D#48 => &D.24005._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24005 ={v} {CLOBBER};
  resx 55

<L76>:
  goto <bb 520> (<L48>);

<L28>:
  # DEBUG this => &D.24007
  # DEBUG this => &D.24007
  # DEBUG this => &D.24007
  _197 = MEM[(char * *)&D.24007];
  # DEBUG D#1 => &D.24007
  # DEBUG this => D#1
  # DEBUG this => &D.24007
  if (&D.24007.D.11539._M_local_buf != _197)
    goto <bb 480>;
  else
    goto <bb 481>;

  <bb 480>:
  # DEBUG D#47 => D.24007.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24007
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24007
  # DEBUG this => D#1
  # DEBUG this => &D.24007
  # DEBUG D#44 => &D.24007._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _197
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _197
  # DEBUG this => D#38
  # DEBUG D.38320 => D#39
  operator delete (_197);

  <bb 481>:
  # DEBUG D#48 => &D.24007._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24007 ={v} {CLOBBER};
  resx 59

<L77>:
  goto <bb 520> (<L48>);

<L30>:
  # DEBUG this => &D.24009
  # DEBUG this => &D.24009
  # DEBUG this => &D.24009
  _195 = MEM[(char * *)&D.24009];
  # DEBUG D#1 => &D.24009
  # DEBUG this => D#1
  # DEBUG this => &D.24009
  if (&D.24009.D.11539._M_local_buf != _195)
    goto <bb 484>;
  else
    goto <bb 485>;

  <bb 484>:
  # DEBUG D#47 => D.24009.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24009
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24009
  # DEBUG this => D#1
  # DEBUG this => &D.24009
  # DEBUG D#44 => &D.24009._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _195
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _195
  # DEBUG this => D#38
  # DEBUG D.38337 => D#39
  operator delete (_195);

  <bb 485>:
  # DEBUG D#48 => &D.24009._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24009 ={v} {CLOBBER};
  resx 63

<L78>:
  goto <bb 520> (<L48>);

<L32>:
  # DEBUG this => &D.24011
  # DEBUG this => &D.24011
  # DEBUG this => &D.24011
  _193 = MEM[(char * *)&D.24011];
  # DEBUG D#1 => &D.24011
  # DEBUG this => D#1
  # DEBUG this => &D.24011
  if (&D.24011.D.11539._M_local_buf != _193)
    goto <bb 488>;
  else
    goto <bb 489>;

  <bb 488>:
  # DEBUG D#47 => D.24011.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24011
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24011
  # DEBUG this => D#1
  # DEBUG this => &D.24011
  # DEBUG D#44 => &D.24011._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _193
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _193
  # DEBUG this => D#38
  # DEBUG D.38354 => D#39
  operator delete (_193);

  <bb 489>:
  # DEBUG D#48 => &D.24011._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24011 ={v} {CLOBBER};
  resx 67

<L79>:
  goto <bb 520> (<L48>);

<L34>:
  # DEBUG this => &D.24013
  # DEBUG this => &D.24013
  # DEBUG this => &D.24013
  _191 = MEM[(char * *)&D.24013];
  # DEBUG D#1 => &D.24013
  # DEBUG this => D#1
  # DEBUG this => &D.24013
  if (&D.24013.D.11539._M_local_buf != _191)
    goto <bb 492>;
  else
    goto <bb 493>;

  <bb 492>:
  # DEBUG D#47 => D.24013.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24013
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24013
  # DEBUG this => D#1
  # DEBUG this => &D.24013
  # DEBUG D#44 => &D.24013._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _191
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _191
  # DEBUG this => D#38
  # DEBUG D.38371 => D#39
  operator delete (_191);

  <bb 493>:
  # DEBUG D#48 => &D.24013._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24013 ={v} {CLOBBER};
  resx 71

<L80>:
  goto <bb 520> (<L48>);

<L36>:
  # DEBUG this => &D.24015
  # DEBUG this => &D.24015
  # DEBUG this => &D.24015
  _189 = MEM[(char * *)&D.24015];
  # DEBUG D#1 => &D.24015
  # DEBUG this => D#1
  # DEBUG this => &D.24015
  if (&D.24015.D.11539._M_local_buf != _189)
    goto <bb 496>;
  else
    goto <bb 497>;

  <bb 496>:
  # DEBUG D#47 => D.24015.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24015
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24015
  # DEBUG this => D#1
  # DEBUG this => &D.24015
  # DEBUG D#44 => &D.24015._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _189
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _189
  # DEBUG this => D#38
  # DEBUG D.38388 => D#39
  operator delete (_189);

  <bb 497>:
  # DEBUG D#48 => &D.24015._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24015 ={v} {CLOBBER};
  resx 75

<L81>:
  goto <bb 520> (<L48>);

<L38>:
  # DEBUG this => &D.24017
  # DEBUG this => &D.24017
  # DEBUG this => &D.24017
  _187 = MEM[(char * *)&D.24017];
  # DEBUG D#1 => &D.24017
  # DEBUG this => D#1
  # DEBUG this => &D.24017
  if (&D.24017.D.11539._M_local_buf != _187)
    goto <bb 500>;
  else
    goto <bb 501>;

  <bb 500>:
  # DEBUG D#47 => D.24017.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24017
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24017
  # DEBUG this => D#1
  # DEBUG this => &D.24017
  # DEBUG D#44 => &D.24017._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _187
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _187
  # DEBUG this => D#38
  # DEBUG D.38405 => D#39
  operator delete (_187);

  <bb 501>:
  # DEBUG D#48 => &D.24017._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24017 ={v} {CLOBBER};
  resx 79

<L82>:
  goto <bb 520> (<L48>);

<L40>:
  # DEBUG this => &D.24019
  # DEBUG this => &D.24019
  # DEBUG this => &D.24019
  _185 = MEM[(char * *)&D.24019];
  # DEBUG D#1 => &D.24019
  # DEBUG this => D#1
  # DEBUG this => &D.24019
  if (&D.24019.D.11539._M_local_buf != _185)
    goto <bb 504>;
  else
    goto <bb 505>;

  <bb 504>:
  # DEBUG D#47 => D.24019.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24019
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24019
  # DEBUG this => D#1
  # DEBUG this => &D.24019
  # DEBUG D#44 => &D.24019._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _185
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _185
  # DEBUG this => D#38
  # DEBUG D.38422 => D#39
  operator delete (_185);

  <bb 505>:
  # DEBUG D#48 => &D.24019._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24019 ={v} {CLOBBER};
  resx 83

<L83>:
  goto <bb 520> (<L48>);

<L42>:
  # DEBUG this => &D.24021
  # DEBUG this => &D.24021
  # DEBUG this => &D.24021
  _183 = MEM[(char * *)&D.24021];
  # DEBUG D#1 => &D.24021
  # DEBUG this => D#1
  # DEBUG this => &D.24021
  if (&D.24021.D.11539._M_local_buf != _183)
    goto <bb 508>;
  else
    goto <bb 509>;

  <bb 508>:
  # DEBUG D#47 => D.24021.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24021
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24021
  # DEBUG this => D#1
  # DEBUG this => &D.24021
  # DEBUG D#44 => &D.24021._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _183
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _183
  # DEBUG this => D#38
  # DEBUG D.38439 => D#39
  operator delete (_183);

  <bb 509>:
  # DEBUG D#48 => &D.24021._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24021 ={v} {CLOBBER};
  resx 87

<L84>:
  goto <bb 520> (<L48>);

<L44>:
  # DEBUG this => &D.24023
  # DEBUG this => &D.24023
  # DEBUG this => &D.24023
  _181 = MEM[(char * *)&D.24023];
  # DEBUG D#1 => &D.24023
  # DEBUG this => D#1
  # DEBUG this => &D.24023
  if (&D.24023.D.11539._M_local_buf != _181)
    goto <bb 512>;
  else
    goto <bb 513>;

  <bb 512>:
  # DEBUG D#47 => D.24023.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24023
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24023
  # DEBUG this => D#1
  # DEBUG this => &D.24023
  # DEBUG D#44 => &D.24023._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _181
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _181
  # DEBUG this => D#38
  # DEBUG D.38456 => D#39
  operator delete (_181);

  <bb 513>:
  # DEBUG D#48 => &D.24023._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24023 ={v} {CLOBBER};
  resx 91

<L85>:
  goto <bb 520> (<L48>);

<L46>:
  # DEBUG this => &D.24025
  # DEBUG this => &D.24025
  # DEBUG this => &D.24025
  _179 = MEM[(char * *)&D.24025];
  # DEBUG D#1 => &D.24025
  # DEBUG this => D#1
  # DEBUG this => &D.24025
  if (&D.24025.D.11539._M_local_buf != _179)
    goto <bb 516>;
  else
    goto <bb 517>;

  <bb 516>:
  # DEBUG D#47 => D.24025.D.11539._M_allocated_capacity
  # DEBUG D#46 => D#47
  # DEBUG this => &D.24025
  # DEBUG __size => D#46
  # DEBUG D#45 => D#46
  # DEBUG D#1 => &D.24025
  # DEBUG this => D#1
  # DEBUG this => &D.24025
  # DEBUG D#44 => &D.24025._M_dataplus
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45 + 1
  # DEBUG __p => _179
  # DEBUG __a => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#38 => D#40
  # DEBUG D#39 => D#41
  # DEBUG __p => _179
  # DEBUG this => D#38
  # DEBUG D.38473 => D#39
  operator delete (_179);

  <bb 517>:
  # DEBUG D#48 => &D.24025._M_dataplus
  # DEBUG this => D#48
  # DEBUG this => D#48
  # DEBUG this => D#48
  D.24025 ={v} {CLOBBER};
  resx 95

<L86>:
  goto <bb 520> (<L48>);

<L63>:

<L48>:
  Configuration::~Configuration (_3);
  resx 1

  <bb 521>:
  # __i$_M_node_2199 = PHI <__i$_M_node_2434(44), __i$_M_node_2434(37), __i$_M_node_66(26)>
  goto <bb 45>;

  <bb 522>:
  # __i$_M_node_1280 = PHI <__i$_M_node_2435(71), __i$_M_node_2435(65), __i$_M_node_66(54)>
  goto <bb 72>;

  <bb 523>:
  # __i$_M_node_734 = PHI <__i$_M_node_2436(99), __i$_M_node_2436(92), __i$_M_node_66(81)>
  goto <bb 100>;

  <bb 524>:
  # __i$_M_node_1098 = PHI <__i$_M_node_2437(127), __i$_M_node_2437(120), __i$_M_node_66(109)>
  goto <bb 128>;

  <bb 525>:
  # __i$_M_node_1699 = PHI <__i$_M_node_2440(155), __i$_M_node_2440(148), __i$_M_node_66(137)>
  goto <bb 156>;

  <bb 526>:
  # __i$_M_node_531 = PHI <__i$_M_node_2441(183), __i$_M_node_2441(176), __i$_M_node_66(165)>
  goto <bb 184>;

  <bb 527>:
  # __i$_M_node_809 = PHI <__i$_M_node_2442(211), __i$_M_node_2442(204), __i$_M_node_66(193)>
  goto <bb 212>;

  <bb 528>:
  # __i$_M_node_959 = PHI <__i$_M_node_2443(239), __i$_M_node_2443(232), __i$_M_node_66(221)>
  goto <bb 240>;

  <bb 529>:
  # __i$_M_node_1173 = PHI <__i$_M_node_2444(273), __i$_M_node_2444(266), __i$_M_node_66(255)>
  goto <bb 274>;

  <bb 530>:
  # __i$_M_node_1708 = PHI <__i$_M_node_2449(301), __i$_M_node_2449(294), __i$_M_node_66(283)>
  goto <bb 302>;

  <bb 531>:
  # __i$_M_node_1184 = PHI <__i$_M_node_2457(329), __i$_M_node_2457(322), __i$_M_node_66(311)>
  goto <bb 330>;

  <bb 532>:
  # __i$_M_node_1435 = PHI <__i$_M_node_2460(357), __i$_M_node_2460(350), __i$_M_node_66(339)>
  goto <bb 358>;

  <bb 533>:
  # __i$_M_node_1686 = PHI <__i$_M_node_2461(385), __i$_M_node_2461(378), __i$_M_node_66(367)>
  goto <bb 386>;

  <bb 534>:
  # __i$_M_node_1360 = PHI <__i$_M_node_2466(413), __i$_M_node_2466(406), __i$_M_node_66(395)>
  goto <bb 414>;

  <bb 535>:
  # DEBUG __len => D#551
  # DEBUG this => D#579
  # DEBUG this => D#1
  # DEBUG D#1 => &D.23997
  # DEBUG this => D#1
  # DEBUG __s1 => &D.23997.D.11539._M_local_buf
  # DEBUG __s2 => NULL
  # DEBUG __n => D#551
  # DEBUG __r => NULL
  # DEBUG __n1 => 1
  # DEBUG __n2 => _744
  _2040 = 1 - _744;
  # DEBUG __d => (const difference_type) _2040
  goto <bb 70>;

}


