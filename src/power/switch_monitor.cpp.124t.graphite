
;; Function SwitchMonitor::SwitchMonitor(int, int, int) (_ZN13SwitchMonitorC2Eiii, funcdef_no=1743, decl_uid=25674, cgraph_uid=386, symbol_order=387)


Pass statistics:
----------------

SwitchMonitor::SwitchMonitor(int, int, int) (struct SwitchMonitorD.24888 * const thisD.25675, intD.9 inputsD.25676, intD.9 outputsD.25677, intD.9 classesD.25678)
Eh tree:
   1 cleanup land:{2,<L1>},{1,<L2>}
{
  intD.9 * D.34370;
  const long unsigned intD.14 D.34361;
  const size_typeD.25214 __lenD.34355;
  size_typeD.25214 D.34360;
  size_typeD.25214 __nD.34353;
  const ptrdiff_tD.2819 _NumD.34350;
  intD.9 * D.34351;
  value_typeD.25201 __x_copyD.34119;
  const size_typeD.25214 __elems_afterD.34120;
  intD.9 * __new_finishD.34229;
  intD.9 * __firstD.34219;
  const ptrdiff_tD.2819 _NumD.34216;
  intD.9 * __firstD.34178;
  long unsigned intD.14 __nD.34124;
  intD.9 * __firstD.34125;
  const ptrdiff_tD.2819 _NumD.34322;
  const ptrdiff_tD.2819 _NumD.34288;
  intD.9 * __firstD.34238;
  intD.9 * const __positionD.34333;
  struct iteratorD.25206 __positionD.34116;
  size_typeD.25214 __nD.34117;
  struct iteratorD.25206 __positionD.34111;
  value_typeD.25201 __xD.34106;
  intD.9 * _10;
  intD.9 _11;
  intD.9 _12;
  sizetype _21;
  long unsigned intD.14 pretmp_22;
  long unsigned intD.14 prephitmp_23;
  long unsigned intD.14 _71;
  intD.9 * _84;
  long intD.12 __first.7_85;
  long intD.12 _86;
  long unsigned intD.14 _88;
  sizetype _89;
  intD.9 * _93;
  long intD.12 __last.6_94;
  long unsigned intD.14 _97;
  intD.9 * _99;
  intD.9 * _102;
  long unsigned intD.14 _126;
  long unsigned intD.14 _158;

;;   basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->_cyclesD.24890 = 0;
  # .MEM_5 = VDEF <.MEM_3>
  this_2(D)->_inputsD.24891 = inputs_4(D);
  # .MEM_7 = VDEF <.MEM_5>
  this_2(D)->_outputsD.24892 = outputs_6(D);
  # .MEM_9 = VDEF <.MEM_7>
  this_2(D)->_classesD.24893 = classes_8(D);
  # DEBUG D#101ptD.0 => &this_2(D)->_eventD.25640
  # DEBUG thisD.34044 => D#101ptD.0
  # DEBUG D#30ptD.0 => &D#101ptD.0->D.25638
  # DEBUG thisD.34045 => D#30ptD.0
  # DEBUG D#29ptD.0 => &D#30ptD.0->_M_implD.25129
  # DEBUG thisD.34046 => D#29ptD.0
  # DEBUG thisD.33042 => D#29ptD.0
  # DEBUG thisD.33040 => D#29ptD.0
  # .MEM_17 = VDEF <.MEM_9>
  MEM[(struct _Vector_implD.25106 *)this_2(D) + 16B]._M_startD.25131 = 0B;
  # .MEM_18 = VDEF <.MEM_17>
  MEM[(struct _Vector_implD.25106 *)this_2(D) + 16B]._M_finishD.25132 = 0B;
  # .MEM_19 = VDEF <.MEM_18>
  MEM[(struct _Vector_implD.25106 *)this_2(D) + 16B]._M_end_of_storageD.25133 = 0B;
  _11 = inputs_4(D) * outputs_6(D);
  _12 = classes_8(D) * _11;
  # RANGE ~[2147483648, 18446744071562067967]
  __n_13 = (size_typeD.25214) _12;
  # DEBUG D#102ptD.0 => &this_2(D)->_eventD.25640
  # DEBUG thisD.34104 => D#102ptD.0
  # DEBUG __new_sizeD.34105 => __n_13
  # DEBUG __xD.34106 => 0
  # DEBUG __xD.34106 => 0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.34113 => D#16ptD.0
  # DEBUG thisD.34114 => D#16ptD.0
  if (__n_13 != 0)
    goto <bb 3>;
  else
    goto <bb 18>;
;;    succ:       3 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.34031 => D#16ptD.0
  # DEBUG thisD.34030 => D#16ptD.0
  # DEBUG thisD.34024 => D#102ptD.0
  # DEBUG D#17ptD.0 => &D#102ptD.0->D.25638._M_implD.25129._M_finishD.25132
  # DEBUG thisD.34026 => NULL
  # DEBUG __iD.34025 => D#17ptD.0
  # DEBUG thisD.34112 => D#102ptD.0
  # DEBUG __nD.34110 => __n_13
  # DEBUG __xD.34109 => &__xD.34106
  # DEBUG thisD.34115 => D#102ptD.0
  # DEBUG __nD.34117 => __n_13
  # DEBUG __xD.34118 => &__xD.34106
  # DEBUG __positionD.34333 => 0B
  # DEBUG thisD.34352 => D#102ptD.0
  # DEBUG __nD.34353 => __n_13
  # DEBUG __nD.34353 => __n_13
  # DEBUG __sD.34354 => "vector::_M_fill_insert"
  # DEBUG D#57ptD.0 => D#102ptD.0
  # DEBUG thisD.33236 => D#57ptD.0
  # DEBUG D#56ptD.0 => D#57ptD.0
  # DEBUG D#55ptD.0 => &D#56ptD.0->D.25638
  # DEBUG thisD.33226 => D#55ptD.0
  # DEBUG __aD.33218 => D#54ptD.0
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG thisD.33209 => D#52ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.34358 => D#16ptD.0
  # DEBUG thisD.34359 => D#16ptD.0
  if (__n_13 > 4611686018427387903)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 2] # .MEM_170 = VDEF <.MEM_19>
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:       19 (EH,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 366, maybe hot
;;   Invalid sum of incoming frequencies 2070, should be 366
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.33254 => D#16ptD.0
  # DEBUG thisD.33253 => D#16ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.33249 => D#16ptD.0
  # DEBUG thisD.33248 => D#16ptD.0
  # DEBUG __aD.34357 => &D.34361
  # DEBUG __bD.34356 => &__nD.34353
  # DEBUG __lenD.34355 => __n_13
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.33241 => D#16ptD.0
  # DEBUG thisD.33240 => D#16ptD.0
  # DEBUG D#57ptD.0 => D#102ptD.0
  # DEBUG thisD.33256 => D#57ptD.0
  # DEBUG D#56ptD.0 => D#57ptD.0
  # DEBUG D#55ptD.0 => &D#56ptD.0->D.25638
  # DEBUG thisD.33226 => D#55ptD.0
  # DEBUG __aD.33218 => D#54ptD.0
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG thisD.33209 => D#52ptD.0
  # DEBUG __lenD.34226 => NULL
  # DEBUG thisD.34230 => D#102ptD.0
  # DEBUG D#28ptD.0 => &D#102ptD.0->D.25638._M_implD.25129._M_startD.25131
  # DEBUG thisD.34232 => NULL
  # DEBUG __iD.34231 => D#28ptD.0
  # DEBUG __lhsD.34234 => &__positionD.34116
  # DEBUG __rhsD.34233 => NULL
  # DEBUG thisD.33032 => &__positionD.34116
  # DEBUG thisD.33030 => NULL
  # DEBUG D#99ptD.0 => 0 /[ex] 4
  # DEBUG __elems_beforeD.34227 => (const size_typeD.25214) D#99ptD.0
  # DEBUG D#98ptD.0 => &D#102ptD.0->D.25638
  # DEBUG D#65ptD.0 => D#98ptD.0
  # DEBUG __nD.34362 => __n_13
  # DEBUG thisD.34363 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#65ptD.0
  # DEBUG D#63ptD.0 => &D#64ptD.0->_M_implD.25129
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG __nD.34366 => __n_13
  # DEBUG __aD.34365 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#62ptD.0
  # DEBUG D#59ptD.0 => D#61ptD.0
  # DEBUG D#60ptD.0 => 0B
  # DEBUG __nD.34369 => __n_13
  # DEBUG thisD.34367 => D#59ptD.0
  # DEBUG D.34368 => D#60ptD.0
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG D#52ptD.0 => D#58ptD.0
  # DEBUG thisD.33261 => D#52ptD.0
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  _126 = __n_13 * 4;
  [LP 1] # .MEM_160 = VDEF <.MEM_19>
  # PT = { D.34375 } (escaped heap)
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  __first_127 = _ZnwmD.2764 (_126);
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 (EH,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 0
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L2>: [LP 1]
  goto <bb 20> (<L0>);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 366, maybe hot
;;   Invalid sum of outgoing probabilities 9.9%
;;    prev block 6, next block 10, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
  _21 = (sizetype) _12;
  _89 = _21 * 4;
  # .MEM_122 = VDEF <.MEM_160>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_127, 0, _89);
;;    succ:       10 [9.9%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 366, maybe hot
;;   Invalid sum of incoming frequencies 36, should be 366
;;    prev block 7, next block 11, flags: (NEW, REACHABLE)
;;    pred:       7 [9.9%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __new_finishD.34229 => 0B
  # DEBUG D#83ptD.0 => &D#102ptD.0->D.25638
  # DEBUG thisD.33972 => D#83ptD.0
  # DEBUG thisD.33970 => &__positionD.34116
  # VUSE <.MEM_122>
  # PT = nonlocal escaped 
  _84 = MEM[(struct vectorD.24895 *)this_2(D) + 16B].D.25638._M_implD.25129._M_startD.25131;
  # DEBUG __firstD.34258 => _84
  # DEBUG __lastD.34257 => 0B
  # DEBUG __resultD.34256 => NULL
  # DEBUG __allocD.34255 => D#80ptD.0
  # DEBUG D#79ptD.0 => D#80ptD.0
  # DEBUG D#76ptD.0 => D#79ptD.0
  # DEBUG __firstD.34262 => _84
  # DEBUG __lastD.34261 => 0B
  # DEBUG __resultD.34260 => NULL
  # DEBUG D.34259 => D#76ptD.0
  # DEBUG __firstD.34265 => _84
  # DEBUG __lastD.34264 => 0B
  # DEBUG __resultD.34263 => NULL
  # DEBUG __assignableD.34268 => 1
  # DEBUG __firstD.34271 => _84
  # DEBUG __lastD.34270 => 0B
  # DEBUG __resultD.34269 => NULL
  # DEBUG __firstD.34274 => _84
  # DEBUG __lastD.34273 => 0B
  # DEBUG __resultD.34272 => NULL
  # DEBUG __itD.33500 => 0B
  # DEBUG __itD.33126 => 0B
  # DEBUG __itD.33498 => _84
  # DEBUG __itD.33126 => _84
  # DEBUG __firstD.34277 => _84
  # DEBUG __lastD.34276 => 0B
  # DEBUG __resultD.34275 => NULL
  # DEBUG __itD.33480 => NULL
  # DEBUG __itD.33129 => NULL
  # DEBUG __itD.33478 => 0B
  # DEBUG __itD.33129 => 0B
  # DEBUG __itD.33476 => _84
  # DEBUG __itD.33129 => _84
  # DEBUG __firstD.34280 => _84
  # DEBUG __lastD.34279 => 0B
  # DEBUG __resultD.34278 => NULL
  # DEBUG __simpleD.34284 => 1
  # DEBUG __firstD.34287 => _84
  # DEBUG __lastD.34286 => 0B
  # DEBUG __resultD.34285 => NULL
  __first.7_85 = (long intD.12) _84;
  _86 = -__first.7_85;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_87 = _86 /[ex] 4;
  # DEBUG _NumD.34288 => _Num_87
  if (_Num_87 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 106, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _88 = (long unsigned intD.14) _86;
  # .MEM_164 = VDEF <.MEM_122>
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  memmoveD.995 (__first_127, _84, _88);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_137 = PHI <.MEM_122(10), .MEM_164(11)>
  # DEBUG D#103ptD.0 => (long unsigned intD.14) _86
  # DEBUG __new_finishD.34229 => __first_127 + D#103ptD.0
  _158 = (long unsigned intD.14) _84;
  # RANGE [0, 18446744073709551615]
  _71 = _126 - _158;
  # PT = { D.34375 } (escaped heap)
  __new_finish_92 = __first_127 + _71;
  # DEBUG __new_finishD.34229 => __new_finish_92
  # DEBUG D#84ptD.0 => &D#102ptD.0->D.25638
  # DEBUG thisD.33933 => D#84ptD.0
  # VUSE <.MEM_137>
  # PT = nonlocal escaped 
  _93 = MEM[(struct vectorD.24895 *)this_2(D) + 16B].D.25638._M_implD.25129._M_finishD.25132;
  # DEBUG thisD.33931 => &__positionD.34116
  # DEBUG __firstD.34292 => 0B
  # DEBUG __lastD.34291 => _93
  # DEBUG __resultD.34290 => __new_finish_92
  # DEBUG __allocD.34289 => D#80ptD.0
  # DEBUG D#79ptD.0 => D#80ptD.0
  # DEBUG D#76ptD.0 => D#79ptD.0
  # DEBUG __firstD.34296 => 0B
  # DEBUG __lastD.34295 => _93
  # DEBUG __resultD.34294 => __new_finish_92
  # DEBUG D.34293 => D#76ptD.0
  # DEBUG __firstD.34299 => 0B
  # DEBUG __lastD.34298 => _93
  # DEBUG __resultD.34297 => __new_finish_92
  # DEBUG __assignableD.34302 => 1
  # DEBUG __firstD.34305 => 0B
  # DEBUG __lastD.34304 => _93
  # DEBUG __resultD.34303 => __new_finish_92
  # DEBUG __firstD.34308 => 0B
  # DEBUG __lastD.34307 => _93
  # DEBUG __resultD.34306 => __new_finish_92
  # DEBUG __itD.33500 => _93
  # DEBUG __itD.33126 => _93
  # DEBUG __itD.33498 => 0B
  # DEBUG __itD.33126 => 0B
  # DEBUG __firstD.34311 => 0B
  # DEBUG __lastD.34310 => _93
  # DEBUG __resultD.34309 => __new_finish_92
  # DEBUG __itD.33480 => __new_finish_92
  # DEBUG __itD.33129 => __new_finish_92
  # DEBUG __itD.33478 => _93
  # DEBUG __itD.33129 => _93
  # DEBUG __itD.33476 => 0B
  # DEBUG __itD.33129 => 0B
  # DEBUG __firstD.34314 => 0B
  # DEBUG __lastD.34313 => _93
  # DEBUG __resultD.34312 => __new_finish_92
  # DEBUG __simpleD.34318 => 1
  # DEBUG __firstD.34321 => 0B
  # DEBUG __lastD.34320 => _93
  # DEBUG __resultD.34319 => __new_finish_92
  __last.6_94 = (long intD.12) _93;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_96 = __last.6_94 /[ex] 4;
  # DEBUG _NumD.34322 => _Num_96
  if (_Num_96 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_22 = (long unsigned intD.14) _93;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 106, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _97 = (long unsigned intD.14) _93;
  # .MEM_165 = VDEF <.MEM_137>
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  memmoveD.995 (__new_finish_92, 0B, _97);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_138 = PHI <.MEM_137(13), .MEM_165(14)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_23 = PHI <pretmp_22(13), _97(14)>
  # PT = { D.34375 } (escaped heap)
  _99 = __new_finish_92 + prephitmp_23;
  # DEBUG __new_finishD.34229 => _99
  # DEBUG D#85ptD.0 => &D#102ptD.0->D.25638
  # DEBUG thisD.33894 => D#85ptD.0
  # DEBUG D#97ptD.0 => D#102ptD.0->D.25638._M_implD.25129._M_finishD.25132
  # DEBUG D#96ptD.0 => D#102ptD.0->D.25638._M_implD.25129._M_startD.25131
  # DEBUG __firstD.33891 => D#96ptD.0
  # DEBUG __lastD.33892 => D#97ptD.0
  # DEBUG D.33893 => NULL
  # DEBUG D#22ptD.0 => D#96ptD.0
  # DEBUG D#23ptD.0 => D#97ptD.0
  # DEBUG __firstD.33011 => D#22ptD.0
  # DEBUG __lastD.33010 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.33000 => D#18ptD.0
  # DEBUG D.32999 => D#19ptD.0
  # DEBUG D#95ptD.0 => D#102ptD.0->D.25638._M_implD.25129._M_end_of_storageD.25133
  # DEBUG D#94ptD.0 => (long intD.12) D#95ptD.0
  # DEBUG D#93ptD.0 => (long intD.12) _84
  # DEBUG D#92ptD.0 => D#94ptD.0 - D#93ptD.0
  # DEBUG D#91ptD.0 => D#92ptD.0 /[ex] 4
  # DEBUG D#90ptD.0 => (long unsigned intD.14) D#91ptD.0
  # DEBUG D#89ptD.0 => &D#102ptD.0->D.25638
  # DEBUG thisD.34325 => D#89ptD.0
  # DEBUG __pD.34324 => _84
  # DEBUG __nD.34323 => D#90ptD.0
  if (_84 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 256, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#37ptD.0 => &D#89ptD.0->_M_implD.25129
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D#36ptD.0 => D#90ptD.0
  # DEBUG __pD.34329 => _84
  # DEBUG __aD.34327 => D#35ptD.0
  # DEBUG __nD.34328 => D#36ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG __pD.34332 => _84
  # DEBUG thisD.34330 => D#31ptD.0
  # DEBUG D.34331 => D#32ptD.0
  # .MEM_166 = VDEF <.MEM_138>
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  _ZdlPvD.2766 (_84);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_139 = PHI <.MEM_138(15), .MEM_166(16)>
  # .MEM_167 = VDEF <.MEM_139>
  MEM[(struct vectorD.24895 *)this_2(D) + 16B].D.25638._M_implD.25129._M_startD.25131 = __first_127;
  # .MEM_168 = VDEF <.MEM_167>
  MEM[(struct vectorD.24895 *)this_2(D) + 16B].D.25638._M_implD.25129._M_finishD.25132 = _99;
  # PT = { D.34375 } (escaped heap)
  _102 = __first_127 + _126;
  # .MEM_169 = VDEF <.MEM_168>
  MEM[(struct vectorD.24895 *)this_2(D) + 16B].D.25638._M_implD.25129._M_end_of_storageD.25133 = _102;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 10000, maybe hot
;;   Invalid sum of incoming frequencies 8295, should be 10000
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       2 [79.3%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_140 = PHI <.MEM_19(2), .MEM_169(17)>
  # VUSE <.MEM_140>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       4 (EH,EXECUTABLE)
<L1>: [LP 2]
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_141 = PHI <.MEM_160(6), .MEM_170(19)>
<L0>:
  # DEBUG D#100ptD.0 => &this_2(D)->_eventD.25640
  # DEBUG thisD.34047 => D#100ptD.0
  # DEBUG D#45ptD.0 => &D#100ptD.0->D.25638
  # DEBUG thisD.33111 => D#45ptD.0
  # DEBUG D#48ptD.0 => D#100ptD.0->D.25638._M_implD.25129._M_finishD.25132
  # DEBUG D#47ptD.0 => D#100ptD.0->D.25638._M_implD.25129._M_startD.25131
  # DEBUG __firstD.33108 => D#47ptD.0
  # DEBUG __lastD.33109 => D#48ptD.0
  # DEBUG D.33110 => NULL
  # DEBUG D#22ptD.0 => D#47ptD.0
  # DEBUG D#23ptD.0 => D#48ptD.0
  # DEBUG __firstD.33011 => D#22ptD.0
  # DEBUG __lastD.33010 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.33000 => D#18ptD.0
  # DEBUG D.32999 => D#19ptD.0
  # DEBUG D#46ptD.0 => &D#100ptD.0->D.25638
  # DEBUG thisD.34048 => D#46ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0->_M_implD.25129._M_end_of_storageD.25133
  # DEBUG D#43ptD.0 => (long intD.12) D#44ptD.0
  # VUSE <.MEM_141>
  # PT = nonlocal escaped 
  _10 = MEM[(struct _Vector_baseD.24896 *)this_2(D) + 16B]._M_implD.25129._M_startD.25131;
  # DEBUG D#42ptD.0 => (long intD.12) _10
  # DEBUG D#41ptD.0 => D#43ptD.0 - D#42ptD.0
  # DEBUG D#40ptD.0 => D#41ptD.0 /[ex] 4
  # DEBUG D#39ptD.0 => (long unsigned intD.14) D#40ptD.0
  # DEBUG thisD.34051 => D#46ptD.0
  # DEBUG __pD.34050 => _10
  # DEBUG __nD.34049 => D#39ptD.0
  if (_10 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#37ptD.0 => &D#46ptD.0->_M_implD.25129
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D#36ptD.0 => D#39ptD.0
  # DEBUG __pD.34055 => _10
  # DEBUG __aD.34053 => D#35ptD.0
  # DEBUG __nD.34054 => D#36ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG __pD.34058 => _10
  # DEBUG thisD.34056 => D#31ptD.0
  # DEBUG D.34057 => D#32ptD.0
  # .MEM_20 = VDEF <.MEM_141>
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  _ZdlPvD.2766 (_10);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0
;;    prev block 21, next block 1, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_16 = PHI <.MEM_141(20), .MEM_20(21)>
  # DEBUG D#38ptD.0 => &D#46ptD.0->_M_implD.25129
  # DEBUG thisD.34059 => D#38ptD.0
  # DEBUG thisD.34060 => D#38ptD.0
  # DEBUG thisD.34061 => D#38ptD.0
  # .MEM_25 = VDEF <.MEM_16>
  MEM[(struct  &)this_2(D) + 16] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


Creating dr for this_2(D)->_cycles
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
Creating dr for this_2(D)->_inputs
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 32
Creating dr for this_2(D)->_outputs
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 64
Creating dr for this_2(D)->_classes
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 12
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 96
Creating dr for MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_2(D) + 16B]
	Access function 0: 0
Creating dr for MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_2(D) + 16B]
	Access function 0: 64
Creating dr for MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_end_of_storage
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_2(D) + 16B]
	Access function 0: 128
Creating dr for MEM[(struct vector *)this_2(D) + 16B].D.25638._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 16B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 16B].D.25638._M_impl._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 16B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 16B].D.25638._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 16B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 16B].D.25638._M_impl._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 16B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 16B].D.25638._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 16B]
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 16B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 16B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:23, LOOPS:0, CONDITIONS:7, STMTS:333)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_18 })
  {
    <bb 2>:
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->_cycles = 0;
    # .MEM_5 = VDEF <.MEM_3>
    this_2(D)->_inputs = inputs_4(D);
    # .MEM_7 = VDEF <.MEM_5>
    this_2(D)->_outputs = outputs_6(D);
    # .MEM_9 = VDEF <.MEM_7>
    this_2(D)->_classes = classes_8(D);
    # DEBUG D#101 => &this_2(D)->_event
    # DEBUG this => D#101
    # DEBUG D#30 => &D#101->D.25638
    # DEBUG this => D#30
    # DEBUG D#29 => &D#30->_M_impl
    # DEBUG this => D#29
    # DEBUG this => D#29
    # DEBUG this => D#29
    # .MEM_17 = VDEF <.MEM_9>
    MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_start = 0B;
    # .MEM_18 = VDEF <.MEM_17>
    MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_finish = 0B;
    # .MEM_19 = VDEF <.MEM_18>
    MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_end_of_storage = 0B;
    _11 = inputs_4(D) * outputs_6(D);
    _12 = classes_8(D) * _11;
    __n_13 = (size_type) _12;
    # DEBUG D#102 => &this_2(D)->_event
    # DEBUG this => D#102
    # DEBUG __new_size => __n_13
    # DEBUG __x => 0
    # DEBUG __x => 0
    # DEBUG D#16 => D#102
    # DEBUG D#16 => D#102
    # DEBUG this => D#16
    # DEBUG this => D#16
    if (__n_13 != 0)
      goto <bb 3>;
    else
      goto <bb 18>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 bb_5 })
  {
    <bb 3>:
    # DEBUG D#16 => D#102
    # DEBUG D#16 => D#102
    # DEBUG this => D#16
    # DEBUG this => D#16
    # DEBUG this => D#102
    # DEBUG D#17 => &D#102->D.25638._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#17
    # DEBUG this => D#102
    # DEBUG __n => __n_13
    # DEBUG __x => &__x
    # DEBUG this => D#102
    # DEBUG __n => __n_13
    # DEBUG __x => &__x
    # DEBUG __position => 0B
    # DEBUG this => D#102
    # DEBUG __n => __n_13
    # DEBUG __n => __n_13
    # DEBUG __s => "vector::_M_fill_insert"
    # DEBUG D#57 => D#102
    # DEBUG this => D#57
    # DEBUG D#56 => D#57
    # DEBUG D#55 => &D#56->D.25638
    # DEBUG this => D#55
    # DEBUG __a => D#54
    # DEBUG D#53 => D#54
    # DEBUG D#52 => D#53
    # DEBUG this => D#52
    # DEBUG D#16 => D#102
    # DEBUG D#16 => D#102
    # DEBUG this => D#16
    # DEBUG this => D#16
    if (__n_13 > 4611686018427387903)
      goto <bb 4>;
    else
      goto <bb 5>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_19 })
  {
    <bb 4>:
    # .MEM_170 = VDEF <.MEM_19>
    std::__throw_length_error ("vector::_M_fill_insert");

  }
  bb_5 (preds = {bb_3 }, succs = {bb_7 bb_6 })
  {
    <bb 5>:
    # DEBUG D#16 => D#102
    # DEBUG D#16 => D#102
    # DEBUG this => D#16
    # DEBUG this => D#16
    # DEBUG D#16 => D#102
    # DEBUG D#16 => D#102
    # DEBUG this => D#16
    # DEBUG this => D#16
    # DEBUG __a => &D.34361
    # DEBUG __b => &__n
    # DEBUG __len => __n_13
    # DEBUG D#16 => D#102
    # DEBUG D#16 => D#102
    # DEBUG this => D#16
    # DEBUG this => D#16
    # DEBUG D#57 => D#102
    # DEBUG this => D#57
    # DEBUG D#56 => D#57
    # DEBUG D#55 => &D#56->D.25638
    # DEBUG this => D#55
    # DEBUG __a => D#54
    # DEBUG D#53 => D#54
    # DEBUG D#52 => D#53
    # DEBUG this => D#52
    # DEBUG __len => NULL
    # DEBUG this => D#102
    # DEBUG D#28 => &D#102->D.25638._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#28
    # DEBUG __lhs => &__position
    # DEBUG __rhs => NULL
    # DEBUG this => &__position
    # DEBUG this => NULL
    # DEBUG D#99 => 0 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#99
    # DEBUG D#98 => &D#102->D.25638
    # DEBUG D#65 => D#98
    # DEBUG __n => __n_13
    # DEBUG this => D#65
    # DEBUG D#64 => D#65
    # DEBUG D#63 => &D#64->_M_impl
    # DEBUG D#62 => D#63
    # DEBUG __n => __n_13
    # DEBUG __a => D#62
    # DEBUG D#61 => D#62
    # DEBUG D#59 => D#61
    # DEBUG D#60 => 0B
    # DEBUG __n => __n_13
    # DEBUG this => D#59
    # DEBUG D.34368 => D#60
    # DEBUG D#58 => D#59
    # DEBUG D#52 => D#58
    # DEBUG this => D#52
    _126 = __n_13 * 4;
    # .MEM_160 = VDEF <.MEM_19>
    __first_127 = operator new (_126);
    goto <bb 7>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_20 })
  {
  <L2>:
    goto <bb 20> (<L0>);

  }
  bb_7 (preds = {bb_5 }, succs = {bb_10 })
  {
    <bb 7>:
    _21 = (sizetype) _12;
    _89 = _21 * 4;
    # .MEM_122 = VDEF <.MEM_160>
    __builtin_memset (__first_127, 0, _89);

  }
  bb_10 (preds = {bb_7 }, succs = {bb_11 bb_12 })
  {
    <bb 10>:
    # DEBUG __new_finish => 0B
    # DEBUG D#83 => &D#102->D.25638
    # DEBUG this => D#83
    # DEBUG this => &__position
    # VUSE <.MEM_122>
    _84 = MEM[(struct vector *)this_2(D) + 16B].D.25638._M_impl._M_start;
    # DEBUG __first => _84
    # DEBUG __last => 0B
    # DEBUG __result => NULL
    # DEBUG __alloc => D#80
    # DEBUG D#79 => D#80
    # DEBUG D#76 => D#79
    # DEBUG __first => _84
    # DEBUG __last => 0B
    # DEBUG __result => NULL
    # DEBUG D.34259 => D#76
    # DEBUG __first => _84
    # DEBUG __last => 0B
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => _84
    # DEBUG __last => 0B
    # DEBUG __result => NULL
    # DEBUG __first => _84
    # DEBUG __last => 0B
    # DEBUG __result => NULL
    # DEBUG __it => 0B
    # DEBUG __it => 0B
    # DEBUG __it => _84
    # DEBUG __it => _84
    # DEBUG __first => _84
    # DEBUG __last => 0B
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => 0B
    # DEBUG __it => 0B
    # DEBUG __it => _84
    # DEBUG __it => _84
    # DEBUG __first => _84
    # DEBUG __last => 0B
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => _84
    # DEBUG __last => 0B
    # DEBUG __result => NULL
    __first.7_85 = (long int) _84;
    _86 = -__first.7_85;
    _Num_87 = _86 /[ex] 4;
    # DEBUG _Num => _Num_87
    if (_Num_87 != 0)
      goto <bb 11>;
    else
      goto <bb 12>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:
    _88 = (long unsigned int) _86;
    # .MEM_164 = VDEF <.MEM_122>
    __builtin_memmove (__first_127, _84, _88);

  }
  bb_12 (preds = {bb_10 bb_11 }, succs = {bb_14 bb_13 })
  {
    <bb 12>:
    # .MEM_137 = PHI <.MEM_122(10), .MEM_164(11)>
    # DEBUG D#103 => (long unsigned int) _86
    # DEBUG __new_finish => __first_127 + D#103
    _158 = (long unsigned int) _84;
    _71 = _126 - _158;
    __new_finish_92 = __first_127 + _71;
    # DEBUG __new_finish => __new_finish_92
    # DEBUG D#84 => &D#102->D.25638
    # DEBUG this => D#84
    # VUSE <.MEM_137>
    _93 = MEM[(struct vector *)this_2(D) + 16B].D.25638._M_impl._M_finish;
    # DEBUG this => &__position
    # DEBUG __first => 0B
    # DEBUG __last => _93
    # DEBUG __result => __new_finish_92
    # DEBUG __alloc => D#80
    # DEBUG D#79 => D#80
    # DEBUG D#76 => D#79
    # DEBUG __first => 0B
    # DEBUG __last => _93
    # DEBUG __result => __new_finish_92
    # DEBUG D.34293 => D#76
    # DEBUG __first => 0B
    # DEBUG __last => _93
    # DEBUG __result => __new_finish_92
    # DEBUG __assignable => 1
    # DEBUG __first => 0B
    # DEBUG __last => _93
    # DEBUG __result => __new_finish_92
    # DEBUG __first => 0B
    # DEBUG __last => _93
    # DEBUG __result => __new_finish_92
    # DEBUG __it => _93
    # DEBUG __it => _93
    # DEBUG __it => 0B
    # DEBUG __it => 0B
    # DEBUG __first => 0B
    # DEBUG __last => _93
    # DEBUG __result => __new_finish_92
    # DEBUG __it => __new_finish_92
    # DEBUG __it => __new_finish_92
    # DEBUG __it => _93
    # DEBUG __it => _93
    # DEBUG __it => 0B
    # DEBUG __it => 0B
    # DEBUG __first => 0B
    # DEBUG __last => _93
    # DEBUG __result => __new_finish_92
    # DEBUG __simple => 1
    # DEBUG __first => 0B
    # DEBUG __last => _93
    # DEBUG __result => __new_finish_92
    __last.6_94 = (long int) _93;
    _Num_96 = __last.6_94 /[ex] 4;
    # DEBUG _Num => _Num_96
    if (_Num_96 != 0)
      goto <bb 14>;
    else
      goto <bb 13>;

  }
  bb_13 (preds = {bb_12 }, succs = {bb_15 })
  {
    <bb 13>:
    pretmp_22 = (long unsigned int) _93;
    goto <bb 15>;

  }
  bb_14 (preds = {bb_12 }, succs = {bb_15 })
  {
    <bb 14>:
    _97 = (long unsigned int) _93;
    # .MEM_165 = VDEF <.MEM_137>
    __builtin_memmove (__new_finish_92, 0B, _97);

  }
  bb_15 (preds = {bb_13 bb_14 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_138 = PHI <.MEM_137(13), .MEM_165(14)>
    # prephitmp_23 = PHI <pretmp_22(13), _97(14)>
    _99 = __new_finish_92 + prephitmp_23;
    # DEBUG __new_finish => _99
    # DEBUG D#85 => &D#102->D.25638
    # DEBUG this => D#85
    # DEBUG D#97 => D#102->D.25638._M_impl._M_finish
    # DEBUG D#96 => D#102->D.25638._M_impl._M_start
    # DEBUG __first => D#96
    # DEBUG __last => D#97
    # DEBUG D.33893 => NULL
    # DEBUG D#22 => D#96
    # DEBUG D#23 => D#97
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.33000 => D#18
    # DEBUG D.32999 => D#19
    # DEBUG D#95 => D#102->D.25638._M_impl._M_end_of_storage
    # DEBUG D#94 => (long int) D#95
    # DEBUG D#93 => (long int) _84
    # DEBUG D#92 => D#94 - D#93
    # DEBUG D#91 => D#92 /[ex] 4
    # DEBUG D#90 => (long unsigned int) D#91
    # DEBUG D#89 => &D#102->D.25638
    # DEBUG this => D#89
    # DEBUG __p => _84
    # DEBUG __n => D#90
    if (_84 != 0B)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # DEBUG D#37 => &D#89->_M_impl
    # DEBUG D#35 => D#37
    # DEBUG D#36 => D#90
    # DEBUG __p => _84
    # DEBUG __a => D#35
    # DEBUG __n => D#36
    # DEBUG D#34 => D#36
    # DEBUG D#33 => D#35
    # DEBUG D#31 => D#33
    # DEBUG D#32 => D#34
    # DEBUG __p => _84
    # DEBUG this => D#31
    # DEBUG D.34331 => D#32
    # .MEM_166 = VDEF <.MEM_138>
    operator delete (_84);

  }
  bb_17 (preds = {bb_15 bb_16 }, succs = {bb_23 })
  {
    <bb 17>:
    # .MEM_139 = PHI <.MEM_138(15), .MEM_166(16)>

  }
  bb_23 (preds = {bb_17 }, succs = {bb_18 })
  {
    <bb 23>:
    # .MEM_167 = VDEF <.MEM_139>
    MEM[(struct vector *)this_2(D) + 16B].D.25638._M_impl._M_start = __first_127;
    # .MEM_168 = VDEF <.MEM_167>
    MEM[(struct vector *)this_2(D) + 16B].D.25638._M_impl._M_finish = _99;
    _102 = __first_127 + _126;
    # .MEM_169 = VDEF <.MEM_168>
    MEM[(struct vector *)this_2(D) + 16B].D.25638._M_impl._M_end_of_storage = _102;

  }
  bb_18 (preds = {bb_2 bb_23 }, succs = {bb_24 })
  {
    <bb 18>:
    # .MEM_140 = PHI <.MEM_19(2), .MEM_169(23)>

  }
  bb_24 (preds = {bb_18 }, succs = {bb_1 })
  {
    <bb 24>:
    # VUSE <.MEM_140>
    return;

  }
  bb_19 (preds = {bb_4 }, succs = {bb_20 })
  {
  <L1>:

  }
  bb_20 (preds = {bb_6 bb_19 }, succs = {bb_21 bb_22 })
  {
    # .MEM_141 = PHI <.MEM_160(6), .MEM_170(19)>
  <L0>:
    # DEBUG D#100 => &this_2(D)->_event
    # DEBUG this => D#100
    # DEBUG D#45 => &D#100->D.25638
    # DEBUG this => D#45
    # DEBUG D#48 => D#100->D.25638._M_impl._M_finish
    # DEBUG D#47 => D#100->D.25638._M_impl._M_start
    # DEBUG __first => D#47
    # DEBUG __last => D#48
    # DEBUG D.33110 => NULL
    # DEBUG D#22 => D#47
    # DEBUG D#23 => D#48
    # DEBUG __first => D#22
    # DEBUG __last => D#23
    # DEBUG D#21 => D#23
    # DEBUG D#20 => D#22
    # DEBUG D#18 => D#20
    # DEBUG D#19 => D#21
    # DEBUG D.33000 => D#18
    # DEBUG D.32999 => D#19
    # DEBUG D#46 => &D#100->D.25638
    # DEBUG this => D#46
    # DEBUG D#44 => D#46->_M_impl._M_end_of_storage
    # DEBUG D#43 => (long int) D#44
    # VUSE <.MEM_141>
    _10 = MEM[(struct _Vector_base *)this_2(D) + 16B]._M_impl._M_start;
    # DEBUG D#42 => (long int) _10
    # DEBUG D#41 => D#43 - D#42
    # DEBUG D#40 => D#41 /[ex] 4
    # DEBUG D#39 => (long unsigned int) D#40
    # DEBUG this => D#46
    # DEBUG __p => _10
    # DEBUG __n => D#39
    if (_10 != 0B)
      goto <bb 21>;
    else
      goto <bb 22>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    # DEBUG D#37 => &D#46->_M_impl
    # DEBUG D#35 => D#37
    # DEBUG D#36 => D#39
    # DEBUG __p => _10
    # DEBUG __a => D#35
    # DEBUG __n => D#36
    # DEBUG D#34 => D#36
    # DEBUG D#33 => D#35
    # DEBUG D#31 => D#33
    # DEBUG D#32 => D#34
    # DEBUG __p => _10
    # DEBUG this => D#31
    # DEBUG D.34057 => D#32
    # .MEM_20 = VDEF <.MEM_141>
    operator delete (_10);

  }
  bb_22 (preds = {bb_20 bb_21 }, succs = {})
  {
    <bb 22>:
    # .MEM_16 = PHI <.MEM_141(20), .MEM_20(21)>
    # DEBUG D#38 => &D#46->_M_impl
    # DEBUG this => D#38
    # DEBUG this => D#38
    # DEBUG this => D#38
    # .MEM_25 = VDEF <.MEM_16>
    MEM[(struct  &)this_2(D) + 16] ={v} {CLOBBER};
    resx 1

  }
}

Pass statistics:
----------------

SwitchMonitor::SwitchMonitor(int, int, int) (struct SwitchMonitorD.24888 * const thisD.25675, intD.9 inputsD.25676, intD.9 outputsD.25677, intD.9 classesD.25678)
Eh tree:
   1 cleanup land:{2,<L1>},{1,<L2>}
{
  intD.9 * D.34370;
  const long unsigned intD.14 D.34361;
  const size_typeD.25214 __lenD.34355;
  size_typeD.25214 D.34360;
  size_typeD.25214 __nD.34353;
  const ptrdiff_tD.2819 _NumD.34350;
  intD.9 * D.34351;
  value_typeD.25201 __x_copyD.34119;
  const size_typeD.25214 __elems_afterD.34120;
  intD.9 * __new_finishD.34229;
  intD.9 * __firstD.34219;
  const ptrdiff_tD.2819 _NumD.34216;
  intD.9 * __firstD.34178;
  long unsigned intD.14 __nD.34124;
  intD.9 * __firstD.34125;
  const ptrdiff_tD.2819 _NumD.34322;
  const ptrdiff_tD.2819 _NumD.34288;
  intD.9 * __firstD.34238;
  intD.9 * const __positionD.34333;
  struct iteratorD.25206 __positionD.34116;
  size_typeD.25214 __nD.34117;
  struct iteratorD.25206 __positionD.34111;
  value_typeD.25201 __xD.34106;
  intD.9 * _10;
  intD.9 _11;
  intD.9 _12;
  sizetype _21;
  long unsigned intD.14 pretmp_22;
  long unsigned intD.14 prephitmp_23;
  long unsigned intD.14 _71;
  intD.9 * _84;
  long intD.12 __first.7_85;
  long intD.12 _86;
  long unsigned intD.14 _88;
  sizetype _89;
  intD.9 * _93;
  long intD.12 __last.6_94;
  long unsigned intD.14 _97;
  intD.9 * _99;
  intD.9 * _102;
  long unsigned intD.14 _126;
  long unsigned intD.14 _158;

;;   basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->_cyclesD.24890 = 0;
  # .MEM_5 = VDEF <.MEM_3>
  this_2(D)->_inputsD.24891 = inputs_4(D);
  # .MEM_7 = VDEF <.MEM_5>
  this_2(D)->_outputsD.24892 = outputs_6(D);
  # .MEM_9 = VDEF <.MEM_7>
  this_2(D)->_classesD.24893 = classes_8(D);
  # DEBUG D#101ptD.0 => &this_2(D)->_eventD.25640
  # DEBUG thisD.34044 => D#101ptD.0
  # DEBUG D#30ptD.0 => &D#101ptD.0->D.25638
  # DEBUG thisD.34045 => D#30ptD.0
  # DEBUG D#29ptD.0 => &D#30ptD.0->_M_implD.25129
  # DEBUG thisD.34046 => D#29ptD.0
  # DEBUG thisD.33042 => D#29ptD.0
  # DEBUG thisD.33040 => D#29ptD.0
  # .MEM_17 = VDEF <.MEM_9>
  MEM[(struct _Vector_implD.25106 *)this_2(D) + 16B]._M_startD.25131 = 0B;
  # .MEM_18 = VDEF <.MEM_17>
  MEM[(struct _Vector_implD.25106 *)this_2(D) + 16B]._M_finishD.25132 = 0B;
  # .MEM_19 = VDEF <.MEM_18>
  MEM[(struct _Vector_implD.25106 *)this_2(D) + 16B]._M_end_of_storageD.25133 = 0B;
  _11 = inputs_4(D) * outputs_6(D);
  _12 = classes_8(D) * _11;
  # RANGE ~[2147483648, 18446744071562067967]
  __n_13 = (size_typeD.25214) _12;
  # DEBUG D#102ptD.0 => &this_2(D)->_eventD.25640
  # DEBUG thisD.34104 => D#102ptD.0
  # DEBUG __new_sizeD.34105 => __n_13
  # DEBUG __xD.34106 => 0
  # DEBUG __xD.34106 => 0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.34113 => D#16ptD.0
  # DEBUG thisD.34114 => D#16ptD.0
  if (__n_13 != 0)
    goto <bb 3>;
  else
    goto <bb 18>;
;;    succ:       3 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.34031 => D#16ptD.0
  # DEBUG thisD.34030 => D#16ptD.0
  # DEBUG thisD.34024 => D#102ptD.0
  # DEBUG D#17ptD.0 => &D#102ptD.0->D.25638._M_implD.25129._M_finishD.25132
  # DEBUG thisD.34026 => NULL
  # DEBUG __iD.34025 => D#17ptD.0
  # DEBUG thisD.34112 => D#102ptD.0
  # DEBUG __nD.34110 => __n_13
  # DEBUG __xD.34109 => &__xD.34106
  # DEBUG thisD.34115 => D#102ptD.0
  # DEBUG __nD.34117 => __n_13
  # DEBUG __xD.34118 => &__xD.34106
  # DEBUG __positionD.34333 => 0B
  # DEBUG thisD.34352 => D#102ptD.0
  # DEBUG __nD.34353 => __n_13
  # DEBUG __nD.34353 => __n_13
  # DEBUG __sD.34354 => "vector::_M_fill_insert"
  # DEBUG D#57ptD.0 => D#102ptD.0
  # DEBUG thisD.33236 => D#57ptD.0
  # DEBUG D#56ptD.0 => D#57ptD.0
  # DEBUG D#55ptD.0 => &D#56ptD.0->D.25638
  # DEBUG thisD.33226 => D#55ptD.0
  # DEBUG __aD.33218 => D#54ptD.0
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG thisD.33209 => D#52ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.34358 => D#16ptD.0
  # DEBUG thisD.34359 => D#16ptD.0
  if (__n_13 > 4611686018427387903)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 2] # .MEM_170 = VDEF <.MEM_19>
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:       19 (EH,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 366, maybe hot
;;   Invalid sum of incoming frequencies 2070, should be 366
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.33254 => D#16ptD.0
  # DEBUG thisD.33253 => D#16ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.33249 => D#16ptD.0
  # DEBUG thisD.33248 => D#16ptD.0
  # DEBUG __aD.34357 => &D.34361
  # DEBUG __bD.34356 => &__nD.34353
  # DEBUG __lenD.34355 => __n_13
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG D#16ptD.0 => D#102ptD.0
  # DEBUG thisD.33241 => D#16ptD.0
  # DEBUG thisD.33240 => D#16ptD.0
  # DEBUG D#57ptD.0 => D#102ptD.0
  # DEBUG thisD.33256 => D#57ptD.0
  # DEBUG D#56ptD.0 => D#57ptD.0
  # DEBUG D#55ptD.0 => &D#56ptD.0->D.25638
  # DEBUG thisD.33226 => D#55ptD.0
  # DEBUG __aD.33218 => D#54ptD.0
  # DEBUG D#53ptD.0 => D#54ptD.0
  # DEBUG D#52ptD.0 => D#53ptD.0
  # DEBUG thisD.33209 => D#52ptD.0
  # DEBUG __lenD.34226 => NULL
  # DEBUG thisD.34230 => D#102ptD.0
  # DEBUG D#28ptD.0 => &D#102ptD.0->D.25638._M_implD.25129._M_startD.25131
  # DEBUG thisD.34232 => NULL
  # DEBUG __iD.34231 => D#28ptD.0
  # DEBUG __lhsD.34234 => &__positionD.34116
  # DEBUG __rhsD.34233 => NULL
  # DEBUG thisD.33032 => &__positionD.34116
  # DEBUG thisD.33030 => NULL
  # DEBUG D#99ptD.0 => 0 /[ex] 4
  # DEBUG __elems_beforeD.34227 => (const size_typeD.25214) D#99ptD.0
  # DEBUG D#98ptD.0 => &D#102ptD.0->D.25638
  # DEBUG D#65ptD.0 => D#98ptD.0
  # DEBUG __nD.34362 => __n_13
  # DEBUG thisD.34363 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#65ptD.0
  # DEBUG D#63ptD.0 => &D#64ptD.0->_M_implD.25129
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG __nD.34366 => __n_13
  # DEBUG __aD.34365 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#62ptD.0
  # DEBUG D#59ptD.0 => D#61ptD.0
  # DEBUG D#60ptD.0 => 0B
  # DEBUG __nD.34369 => __n_13
  # DEBUG thisD.34367 => D#59ptD.0
  # DEBUG D.34368 => D#60ptD.0
  # DEBUG D#58ptD.0 => D#59ptD.0
  # DEBUG D#52ptD.0 => D#58ptD.0
  # DEBUG thisD.33261 => D#52ptD.0
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  _126 = __n_13 * 4;
  [LP 1] # .MEM_160 = VDEF <.MEM_19>
  # PT = { D.34375 } (escaped heap)
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  __first_127 = _ZnwmD.2764 (_126);
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 (EH,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 0
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L2>: [LP 1]
  goto <bb 20> (<L0>);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 366, maybe hot
;;   Invalid sum of outgoing probabilities 9.9%
;;    prev block 6, next block 10, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
  _21 = (sizetype) _12;
  _89 = _21 * 4;
  # .MEM_122 = VDEF <.MEM_160>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_127, 0, _89);
;;    succ:       10 [9.9%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 366, maybe hot
;;   Invalid sum of incoming frequencies 36, should be 366
;;    prev block 7, next block 11, flags: (NEW, REACHABLE)
;;    pred:       7 [9.9%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __new_finishD.34229 => 0B
  # DEBUG D#83ptD.0 => &D#102ptD.0->D.25638
  # DEBUG thisD.33972 => D#83ptD.0
  # DEBUG thisD.33970 => &__positionD.34116
  # VUSE <.MEM_122>
  # PT = nonlocal escaped 
  _84 = MEM[(struct vectorD.24895 *)this_2(D) + 16B].D.25638._M_implD.25129._M_startD.25131;
  # DEBUG __firstD.34258 => _84
  # DEBUG __lastD.34257 => 0B
  # DEBUG __resultD.34256 => NULL
  # DEBUG __allocD.34255 => D#80ptD.0
  # DEBUG D#79ptD.0 => D#80ptD.0
  # DEBUG D#76ptD.0 => D#79ptD.0
  # DEBUG __firstD.34262 => _84
  # DEBUG __lastD.34261 => 0B
  # DEBUG __resultD.34260 => NULL
  # DEBUG D.34259 => D#76ptD.0
  # DEBUG __firstD.34265 => _84
  # DEBUG __lastD.34264 => 0B
  # DEBUG __resultD.34263 => NULL
  # DEBUG __assignableD.34268 => 1
  # DEBUG __firstD.34271 => _84
  # DEBUG __lastD.34270 => 0B
  # DEBUG __resultD.34269 => NULL
  # DEBUG __firstD.34274 => _84
  # DEBUG __lastD.34273 => 0B
  # DEBUG __resultD.34272 => NULL
  # DEBUG __itD.33500 => 0B
  # DEBUG __itD.33126 => 0B
  # DEBUG __itD.33498 => _84
  # DEBUG __itD.33126 => _84
  # DEBUG __firstD.34277 => _84
  # DEBUG __lastD.34276 => 0B
  # DEBUG __resultD.34275 => NULL
  # DEBUG __itD.33480 => NULL
  # DEBUG __itD.33129 => NULL
  # DEBUG __itD.33478 => 0B
  # DEBUG __itD.33129 => 0B
  # DEBUG __itD.33476 => _84
  # DEBUG __itD.33129 => _84
  # DEBUG __firstD.34280 => _84
  # DEBUG __lastD.34279 => 0B
  # DEBUG __resultD.34278 => NULL
  # DEBUG __simpleD.34284 => 1
  # DEBUG __firstD.34287 => _84
  # DEBUG __lastD.34286 => 0B
  # DEBUG __resultD.34285 => NULL
  __first.7_85 = (long intD.12) _84;
  _86 = -__first.7_85;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_87 = _86 /[ex] 4;
  # DEBUG _NumD.34288 => _Num_87
  if (_Num_87 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 106, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _88 = (long unsigned intD.14) _86;
  # .MEM_164 = VDEF <.MEM_122>
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  memmoveD.995 (__first_127, _84, _88);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_137 = PHI <.MEM_122(10), .MEM_164(11)>
  # DEBUG D#103ptD.0 => (long unsigned intD.14) _86
  # DEBUG __new_finishD.34229 => __first_127 + D#103ptD.0
  _158 = (long unsigned intD.14) _84;
  # RANGE [0, 18446744073709551615]
  _71 = _126 - _158;
  # PT = { D.34375 } (escaped heap)
  __new_finish_92 = __first_127 + _71;
  # DEBUG __new_finishD.34229 => __new_finish_92
  # DEBUG D#84ptD.0 => &D#102ptD.0->D.25638
  # DEBUG thisD.33933 => D#84ptD.0
  # VUSE <.MEM_137>
  # PT = nonlocal escaped 
  _93 = MEM[(struct vectorD.24895 *)this_2(D) + 16B].D.25638._M_implD.25129._M_finishD.25132;
  # DEBUG thisD.33931 => &__positionD.34116
  # DEBUG __firstD.34292 => 0B
  # DEBUG __lastD.34291 => _93
  # DEBUG __resultD.34290 => __new_finish_92
  # DEBUG __allocD.34289 => D#80ptD.0
  # DEBUG D#79ptD.0 => D#80ptD.0
  # DEBUG D#76ptD.0 => D#79ptD.0
  # DEBUG __firstD.34296 => 0B
  # DEBUG __lastD.34295 => _93
  # DEBUG __resultD.34294 => __new_finish_92
  # DEBUG D.34293 => D#76ptD.0
  # DEBUG __firstD.34299 => 0B
  # DEBUG __lastD.34298 => _93
  # DEBUG __resultD.34297 => __new_finish_92
  # DEBUG __assignableD.34302 => 1
  # DEBUG __firstD.34305 => 0B
  # DEBUG __lastD.34304 => _93
  # DEBUG __resultD.34303 => __new_finish_92
  # DEBUG __firstD.34308 => 0B
  # DEBUG __lastD.34307 => _93
  # DEBUG __resultD.34306 => __new_finish_92
  # DEBUG __itD.33500 => _93
  # DEBUG __itD.33126 => _93
  # DEBUG __itD.33498 => 0B
  # DEBUG __itD.33126 => 0B
  # DEBUG __firstD.34311 => 0B
  # DEBUG __lastD.34310 => _93
  # DEBUG __resultD.34309 => __new_finish_92
  # DEBUG __itD.33480 => __new_finish_92
  # DEBUG __itD.33129 => __new_finish_92
  # DEBUG __itD.33478 => _93
  # DEBUG __itD.33129 => _93
  # DEBUG __itD.33476 => 0B
  # DEBUG __itD.33129 => 0B
  # DEBUG __firstD.34314 => 0B
  # DEBUG __lastD.34313 => _93
  # DEBUG __resultD.34312 => __new_finish_92
  # DEBUG __simpleD.34318 => 1
  # DEBUG __firstD.34321 => 0B
  # DEBUG __lastD.34320 => _93
  # DEBUG __resultD.34319 => __new_finish_92
  __last.6_94 = (long intD.12) _93;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_96 = __last.6_94 /[ex] 4;
  # DEBUG _NumD.34322 => _Num_96
  if (_Num_96 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_22 = (long unsigned intD.14) _93;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 106, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _97 = (long unsigned intD.14) _93;
  # .MEM_165 = VDEF <.MEM_137>
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  memmoveD.995 (__new_finish_92, 0B, _97);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_138 = PHI <.MEM_137(13), .MEM_165(14)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_23 = PHI <pretmp_22(13), _97(14)>
  # PT = { D.34375 } (escaped heap)
  _99 = __new_finish_92 + prephitmp_23;
  # DEBUG __new_finishD.34229 => _99
  # DEBUG D#85ptD.0 => &D#102ptD.0->D.25638
  # DEBUG thisD.33894 => D#85ptD.0
  # DEBUG D#97ptD.0 => D#102ptD.0->D.25638._M_implD.25129._M_finishD.25132
  # DEBUG D#96ptD.0 => D#102ptD.0->D.25638._M_implD.25129._M_startD.25131
  # DEBUG __firstD.33891 => D#96ptD.0
  # DEBUG __lastD.33892 => D#97ptD.0
  # DEBUG D.33893 => NULL
  # DEBUG D#22ptD.0 => D#96ptD.0
  # DEBUG D#23ptD.0 => D#97ptD.0
  # DEBUG __firstD.33011 => D#22ptD.0
  # DEBUG __lastD.33010 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.33000 => D#18ptD.0
  # DEBUG D.32999 => D#19ptD.0
  # DEBUG D#95ptD.0 => D#102ptD.0->D.25638._M_implD.25129._M_end_of_storageD.25133
  # DEBUG D#94ptD.0 => (long intD.12) D#95ptD.0
  # DEBUG D#93ptD.0 => (long intD.12) _84
  # DEBUG D#92ptD.0 => D#94ptD.0 - D#93ptD.0
  # DEBUG D#91ptD.0 => D#92ptD.0 /[ex] 4
  # DEBUG D#90ptD.0 => (long unsigned intD.14) D#91ptD.0
  # DEBUG D#89ptD.0 => &D#102ptD.0->D.25638
  # DEBUG thisD.34325 => D#89ptD.0
  # DEBUG __pD.34324 => _84
  # DEBUG __nD.34323 => D#90ptD.0
  if (_84 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 256, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#37ptD.0 => &D#89ptD.0->_M_implD.25129
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D#36ptD.0 => D#90ptD.0
  # DEBUG __pD.34329 => _84
  # DEBUG __aD.34327 => D#35ptD.0
  # DEBUG __nD.34328 => D#36ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG __pD.34332 => _84
  # DEBUG thisD.34330 => D#31ptD.0
  # DEBUG D.34331 => D#32ptD.0
  # .MEM_166 = VDEF <.MEM_138>
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  _ZdlPvD.2766 (_84);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 16, next block 23, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_139 = PHI <.MEM_138(15), .MEM_166(16)>
;;    succ:       23 [100.0%]  (FALLTHRU)

;;   basic block 23, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 17, next block 18, flags: (NEW)
;;    pred:       17 [100.0%]  (FALLTHRU)
  # .MEM_167 = VDEF <.MEM_139>
  MEM[(struct vectorD.24895 *)this_2(D) + 16B].D.25638._M_implD.25129._M_startD.25131 = __first_127;
  # .MEM_168 = VDEF <.MEM_167>
  MEM[(struct vectorD.24895 *)this_2(D) + 16B].D.25638._M_implD.25129._M_finishD.25132 = _99;
  # PT = { D.34375 } (escaped heap)
  _102 = __first_127 + _126;
  # .MEM_169 = VDEF <.MEM_168>
  MEM[(struct vectorD.24895 *)this_2(D) + 16B].D.25638._M_implD.25129._M_end_of_storageD.25133 = _102;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 10000, maybe hot
;;   Invalid sum of incoming frequencies 8295, should be 10000
;;    prev block 23, next block 24, flags: (NEW, REACHABLE)
;;    pred:       2 [79.3%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_140 = PHI <.MEM_19(2), .MEM_169(23)>
;;    succ:       24 [100.0%]  (FALLTHRU)

;;   basic block 24, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_140>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 24, next block 20, flags: (NEW)
;;    pred:       4 (EH,EXECUTABLE)
<L1>: [LP 2]
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_141 = PHI <.MEM_160(6), .MEM_170(19)>
<L0>:
  # DEBUG D#100ptD.0 => &this_2(D)->_eventD.25640
  # DEBUG thisD.34047 => D#100ptD.0
  # DEBUG D#45ptD.0 => &D#100ptD.0->D.25638
  # DEBUG thisD.33111 => D#45ptD.0
  # DEBUG D#48ptD.0 => D#100ptD.0->D.25638._M_implD.25129._M_finishD.25132
  # DEBUG D#47ptD.0 => D#100ptD.0->D.25638._M_implD.25129._M_startD.25131
  # DEBUG __firstD.33108 => D#47ptD.0
  # DEBUG __lastD.33109 => D#48ptD.0
  # DEBUG D.33110 => NULL
  # DEBUG D#22ptD.0 => D#47ptD.0
  # DEBUG D#23ptD.0 => D#48ptD.0
  # DEBUG __firstD.33011 => D#22ptD.0
  # DEBUG __lastD.33010 => D#23ptD.0
  # DEBUG D#21ptD.0 => D#23ptD.0
  # DEBUG D#20ptD.0 => D#22ptD.0
  # DEBUG D#18ptD.0 => D#20ptD.0
  # DEBUG D#19ptD.0 => D#21ptD.0
  # DEBUG D.33000 => D#18ptD.0
  # DEBUG D.32999 => D#19ptD.0
  # DEBUG D#46ptD.0 => &D#100ptD.0->D.25638
  # DEBUG thisD.34048 => D#46ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0->_M_implD.25129._M_end_of_storageD.25133
  # DEBUG D#43ptD.0 => (long intD.12) D#44ptD.0
  # VUSE <.MEM_141>
  # PT = nonlocal escaped 
  _10 = MEM[(struct _Vector_baseD.24896 *)this_2(D) + 16B]._M_implD.25129._M_startD.25131;
  # DEBUG D#42ptD.0 => (long intD.12) _10
  # DEBUG D#41ptD.0 => D#43ptD.0 - D#42ptD.0
  # DEBUG D#40ptD.0 => D#41ptD.0 /[ex] 4
  # DEBUG D#39ptD.0 => (long unsigned intD.14) D#40ptD.0
  # DEBUG thisD.34051 => D#46ptD.0
  # DEBUG __pD.34050 => _10
  # DEBUG __nD.34049 => D#39ptD.0
  if (_10 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#37ptD.0 => &D#46ptD.0->_M_implD.25129
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D#36ptD.0 => D#39ptD.0
  # DEBUG __pD.34055 => _10
  # DEBUG __aD.34053 => D#35ptD.0
  # DEBUG __nD.34054 => D#36ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG __pD.34058 => _10
  # DEBUG thisD.34056 => D#31ptD.0
  # DEBUG D.34057 => D#32ptD.0
  # .MEM_20 = VDEF <.MEM_141>
  # USE = nonlocal null { D.34375 } (escaped heap)
  # CLB = nonlocal null { D.34375 } (escaped heap)
  _ZdlPvD.2766 (_10);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0
;;    prev block 21, next block 1, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_16 = PHI <.MEM_141(20), .MEM_20(21)>
  # DEBUG D#38ptD.0 => &D#46ptD.0->_M_implD.25129
  # DEBUG thisD.34059 => D#38ptD.0
  # DEBUG thisD.34060 => D#38ptD.0
  # DEBUG thisD.34061 => D#38ptD.0
  # .MEM_25 = VDEF <.MEM_16>
  MEM[(struct  &)this_2(D) + 16] ={v} {CLOBBER};
  resx 1
;;    succ:      

}



;; Function void SwitchMonitor::display(std::ostream&) const (_ZNK13SwitchMonitor7displayERSo, funcdef_no=1748, decl_uid=25667, cgraph_uid=391, symbol_order=392)


Pass statistics:
----------------

void SwitchMonitor::display(std::ostream&) const (const struct SwitchMonitorD.24888 * const thisD.31505, struct ostreamD.9410 & osD.31503)
{
  char_typeD.19035 D.34439;
  charD.10 __cD.34438;
  char_typeD.19035 D.34436;
  charD.10 __cD.34435;
  char_typeD.22114 D.34433;
  struct basic_ostreamD.9409 & D.34427;
  intD.9 D.34424;
  struct basic_ostreamD.9409 & D.34419;
  struct basic_ostreamD.9409 & D.34415;
  intD.9 cD.31533;
  intD.9 oD.31508;
  intD.9 iD.31507;
  intD.9 _10;
  struct basic_ostreamD.9409 & _14;
  struct basic_ostreamD.9409 & _16;
  intD.9 _18;
  long unsigned intD.14 _20;
  intD.9 _21;
  struct basic_ostreamD.9409 & _23;
  struct basic_ostreamD.9409 & _25;
  intD.9 _26;
  intD.9 * const _31;
  long unsigned intD.14 _32;
  const intD.9 & _33;
  const struct __ctype_typeD.22119 * _36;
  intD.9 _40;
  intD.9 _42;
  intD.9 _43;
  intD.9 _44;
  intD.9 _45;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _46;
  long intD.12 _47;
  sizetype _48;
  struct basic_iosD.9403 * _49;
  struct basic_ostreamD.9409 & _52;
  charD.10 _54;
  char_typeD.19035 _57;
  intD.9 _61;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _62;
  intD.9 (*__vtbl_ptr_typeD.2760) () _63;
  intD.9 _64;
  intD.9 _65;
  voidD.45 * PROF_67;
  char_typeD.19035 _69;
  intD.9 _74;
  intD.9 _77;
  intD.9 _78;
  intD.9 _92;
  const intD.9 prephitmp_97;
  const intD.9 prephitmp_98;
  intD.9 pretmp_101;
  intD.9 pretmp_102;
  intD.9 prephitmp_103;
  const intD.9 pretmp_105;
  const intD.9 prephitmp_106;
  const intD.9 pretmp_107;
  const intD.9 prephitmp_108;

;;   basic block 2, loop depth 0, count 0, freq 33, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG iD.31507 => 0
  # DEBUG iD.31507 => 0
  # VUSE <.MEM_7(D)>
  _78 = this_8(D)->_inputsD.24891;
  if (_78 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_7(D)(2), .MEM_17(28)>
  # VUSE <.MEM_100>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 30, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_7(D)>
  pretmp_105 = this_8(D)->_outputsD.24892;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 114, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_7(D)(4), .MEM_17(29)>
  # i_12 = PHI <0(4), i_30(29)>
  # prephitmp_97 = PHI <_78(4), prephitmp_108(29)>
  # prephitmp_106 = PHI <pretmp_105(4), prephitmp_98(29)>
  # DEBUG iD.31507 => i_12
  # DEBUG oD.31508 => 0
  if (prephitmp_106 <= 0)
    goto <bb 28>;
  else
    goto <bb 6>;
;;    succ:       28 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 104, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 922, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # o_59 = PHI <0(6), o_29(26)>
  # .MEM_50 = PHI <.MEM_75(6), .MEM_86(26)>
  # DEBUG oD.31508 => o_59
  # DEBUG __outD.32943 => os_11(D)
  # DEBUG __sD.32944 => "["
  # DEBUG __sD.32945 => "["
  # .MEM_28 = VDEF <.MEM_50>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.11175 (os_11(D), "[", 1);
  # .MEM_13 = VDEF <.MEM_28>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _14 = _ZNSolsEiD.22810 (os_11(D), i_12);
  # DEBUG __outD.32939 => _14
  # DEBUG __sD.32940 => " -> "
  # DEBUG __sD.32941 => " -> "
  # .MEM_34 = VDEF <.MEM_13>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.11175 (_14, " -> ", 4);
  # .MEM_15 = VDEF <.MEM_34>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _16 = _ZNSolsEiD.22810 (_14, o_59);
  # DEBUG __outD.34412 => _16
  # DEBUG __sD.34413 => "] "
  # DEBUG __sD.34414 => "] "
  # .MEM_73 = VDEF <.MEM_15>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.11175 (_16, "] ", 2);
  # DEBUG cD.31533 => 0
  # VUSE <.MEM_73>
  _77 = this_8(D)->_classesD.24893;
  if (_77 <= 0)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_73(7), .MEM_76(19)>
  # DEBUG thisD.32955 => os_11(D)
  # DEBUG __pfD.32956 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.22942
  # DEBUG __osD.34425 => os_11(D)
  # VUSE <.MEM_99>
  # PT = nonlocal escaped 
  _46 = MEM[(struct basic_ostreamD.9409 *)os_11(D)]._vptr.basic_ostreamD.22902;
  # VUSE <.MEM_99>
  _47 = MEM[(long intD.12 *)_46 + -24B];
  # RANGE [0, 18446744073709551615]
  _48 = (sizetype) _47;
  # PT = nonlocal 
  _49 = os_11(D) + _48;
  # DEBUG thisD.34428 => _49
  # DEBUG __cD.34429 => 10
  # VUSE <.MEM_99>
  # PT = nonlocal escaped 
  _36 = MEM[(const struct basic_iosD.9403 *)_49]._M_ctypeD.22126;
  # DEBUG __fD.34430 => _36
  if (_36 == 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 837, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.34420 => this_8(D)
  # DEBUG inputD.34421 => i_12
  # DEBUG outputD.34422 => o_59
  # DEBUG clD.34423 => 0
  if (i_12 < 0)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_96 = PHI <.MEM_73(9), .MEM_73(11), .MEM_76(15)>
  # DEBUG D#4ptD.0 => this_8(D)
  # DEBUG D#5ptD.0 => i_12
  # DEBUG D#6ptD.0 => o_59
  # DEBUG D#7ptD.0 => 0
  # VUSE <.MEM_96>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZNK13SwitchMonitor5indexEiii.part.3D.32910 ();
;;    succ:      

;;   basic block 11, loop depth 2, count 0, freq 837, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_73>
  _65 = this_8(D)->_inputsD.24891;
  if (i_12 >= _65)
    goto <bb 10>;
  else
    goto <bb 12>;
;;    succ:       10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 2, count 0, freq 837, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  if (o_59 < 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_95 = PHI <.MEM_73(12), .MEM_73(14), .MEM_76(16)>
  # .MEM_79 = VDEF <.MEM_95>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  __assert_failD.28294 ("(output >= 0) && (output < _outputs)", "power/switch_monitor.cpp", 39, &_ZZNK13SwitchMonitor5indexEiiiE19__PRETTY_FUNCTION__D.31493);
;;    succ:      

;;   basic block 14, loop depth 2, count 0, freq 836, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_73>
  _74 = this_8(D)->_outputsD.24892;
  if (o_59 >= _74)
    goto <bb 13>;
  else
    goto <bb 18>;
;;    succ:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 3, count 0, freq 8259, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       19 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.34420 => this_8(D)
  # DEBUG inputD.34421 => i_12
  # DEBUG outputD.34422 => o_59
  # DEBUG clD.34423 => c_27
  # VUSE <.MEM_76>
  _26 = this_8(D)->_inputsD.24891;
  if (i_12 >= _26)
    goto <bb 10>;
  else
    goto <bb 16>;
;;    succ:       10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 3, count 0, freq 8253, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_76>
  _40 = this_8(D)->_outputsD.24892;
  if (_40 <= o_59)
    goto <bb 13>;
  else
    goto <bb 17>;
;;    succ:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 3, count 0, freq 8250, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 2, count 0, freq 836, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 3, count 0, freq 9080, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # c_83 = PHI <0(18), c_27(17)>
  # .MEM_56 = PHI <.MEM_73(18), .MEM_76(17)>
  # _61 = PHI <_77(18), _18(17)>
  # _64 = PHI <_74(18), _40(17)>
  # DEBUG cD.31533 => c_83
  # DEBUG thisD.34420 => this_8(D)
  # DEBUG inputD.34421 => i_12
  # DEBUG outputD.34422 => o_59
  # DEBUG clD.34423 => c_83
  _42 = i_12 * _64;
  _43 = _42 + o_59;
  _44 = _43 * _61;
  _45 = _44 + c_83;
  # RANGE ~[2147483648, 18446744071562067967]
  _20 = (long unsigned intD.14) _45;
  # DEBUG D#15ptD.0 => &this_8(D)->_eventD.25640
  # VUSE <.MEM_56>
  # PT = nonlocal escaped 
  _31 = MEM[(intD.9 * *)this_8(D) + 16B];
  # DEBUG D#14ptD.0 => D#15ptD.0
  # DEBUG __nD.32952 => _20
  # DEBUG thisD.32953 => D#14ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _32 = _20 * 4;
  # PT = nonlocal escaped 
  _33 = _31 + _32;
  # VUSE <.MEM_56>
  _21 = *_33;
  # .MEM_22 = VDEF <.MEM_56>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _23 = _ZNSolsEiD.22810 (os_11(D), c_83);
  # DEBUG __outD.32947 => _23
  # DEBUG __sD.32948 => ":"
  # DEBUG __sD.32949 => ":"
  # .MEM_35 = VDEF <.MEM_22>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.11175 (_23, ":", 1);
  # .MEM_24 = VDEF <.MEM_35>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _25 = _ZNSolsEiD.22810 (_23, _21);
  # DEBUG __outD.34416 => _25
  # DEBUG __sD.34417 => " "
  # DEBUG __sD.34418 => " "
  # .MEM_76 = VDEF <.MEM_24>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.11175 (_25, " ", 1);
  # RANGE [1, 2147483647] NONZERO 2147483647
  c_27 = c_83 + 1;
  # DEBUG cD.31533 => c_27
  # DEBUG cD.31533 => c_27
  # VUSE <.MEM_76>
  _18 = this_8(D)->_classesD.24893;
  if (_18 <= c_27)
    goto <bb 8>;
  else
    goto <bb 15>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       8 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_88 = VDEF <.MEM_99>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2825 ();
;;    succ:      

;;   basic block 21, loop depth 2, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.34432 => _36
  # DEBUG __cD.34431 => 10
  # VUSE <.MEM_99>
  _54 = MEM[(const struct ctypeD.10037 *)_36]._M_widen_okD.19041;
  if (_54 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 2, count 0, freq 549, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_99>
  _57 = MEM[(const struct ctypeD.10037 *)_36]._M_widenD.19042[10];
  pretmp_101 = (intD.9) _57;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 2, count 0, freq 351, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.34434 => _36
  # DEBUG __cD.34435 => 10
  # .MEM_80 = VDEF <.MEM_99>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.19149 (_36);
  # VUSE <.MEM_80>
  # PT = nonlocal escaped 
  _62 = MEM[(const struct ctypeD.10037 *)_36].D.19182._vptr.facetD.15800;
  # VUSE <.MEM_80>
  # PT = nonlocal escaped 
  _63 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_62 + 48B];
  # PT = anything 
  PROF_67 = [obj_type_ref] OBJ_TYPE_REF(_63;(const struct ctypeD.10037)_36->6);
  if (PROF_67 == _ZNKSt5ctypeIcE8do_widenEcD.19130)
    goto <bb 25>;
  else
    goto <bb 24>;
;;    succ:       25 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 2, count 0, freq 70, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_81 = VDEF <.MEM_80>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _69 = OBJ_TYPE_REF(_63;(const struct ctypeD.10037)_36->6) (_36, 10);
  pretmp_102 = (intD.9) _69;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 2, count 0, freq 900, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_72 = PHI <.MEM_99(22), .MEM_80(23), .MEM_81(24)>
  # RANGE [-128, 127]
  # prephitmp_103 = PHI <pretmp_101(22), 10(23), pretmp_102(24)>
  # .MEM_85 = VDEF <.MEM_72>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _52 = _ZNSo3putEcD.22837 (os_11(D), prephitmp_103);
  # DEBUG __osD.34426 => _52
  # .MEM_86 = VDEF <.MEM_85>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZNSo5flushEvD.22848 (_52);
  o_29 = o_59 + 1;
  # DEBUG oD.31508 => o_29
  # DEBUG oD.31508 => o_29
  # VUSE <.MEM_86>
  _10 = this_8(D)->_outputsD.24892;
  if (_10 <= o_29)
    goto <bb 27>;
  else
    goto <bb 26>;
;;    succ:       27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 2, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 81, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _92 = PHI <_10(25)>
  # VUSE <.MEM_86>
  pretmp_107 = this_8(D)->_inputsD.24891;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 92, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_17 = PHI <.MEM_86(27), .MEM_75(5)>
  # prephitmp_98 = PHI <_92(27), prephitmp_106(5)>
  # prephitmp_108 = PHI <pretmp_107(27), prephitmp_97(5)>
  i_30 = i_12 + 1;
  # DEBUG iD.31507 => i_30
  # DEBUG iD.31507 => i_30
  if (i_30 >= prephitmp_108)
    goto <bb 3>;
  else
    goto <bb 29>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 84, maybe hot
;;    prev block 28, next block 1, flags: (NEW)
;;    pred:       28 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

}


Creating dr for this_8(D)->_inputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 32
Creating dr for this_8(D)->_outputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 64
Creating dr for this_8(D)->_inputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 32
Creating dr for this_8(D)->_inputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 32
Creating dr for this_8(D)->_inputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 32
Creating dr for this_8(D)->_outputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 64
Creating dr for this_8(D)->_outputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 64
Creating dr for this_8(D)->_outputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 64
Creating dr for MEM[(int * *)this_8(D) + 16B]
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_8(D) + 16B]
Creating dr for MEM[(int * *)this_8(D) + 16B]
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_8(D) + 16B]
Creating dr for MEM[(int * *)this_8(D) + 16B]
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_8(D) + 16B]
Creating dr for MEM[(int * *)this_8(D) + 16B]
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_8(D) + 16B]
Creating dr for *_33
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
Creating dr for *_33
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
Creating dr for *_33
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
Creating dr for *_33
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
Creating dr for MEM[(int * *)this_8(D) + 16B]
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_8(D) + 16B]
Creating dr for MEM[(int * *)this_8(D) + 16B]
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_8(D) + 16B]
Creating dr for MEM[(int * *)this_8(D) + 16B]
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_8(D) + 16B]
Creating dr for MEM[(int * *)this_8(D) + 16B]
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_8(D) + 16B]
Creating dr for *_33
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
Creating dr for *_33
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
Creating dr for *_33
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
Creating dr for *_33
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_33
Creating dr for this_8(D)->_inputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 32
Creating dr for this_8(D)->_inputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 32
Creating dr for this_8(D)->_inputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 32
Creating dr for this_8(D)->_inputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 32
Creating dr for this_8(D)->_outputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 64
Creating dr for this_8(D)->_outputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 64
Creating dr for this_8(D)->_outputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 64
Creating dr for this_8(D)->_outputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 64
Creating dr for MEM[(struct basic_ostream *)os_11(D)]._vptr.basic_ostream
analyze_innermost: success.
	base_address: os_11(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ostream *)os_11(D)]
	Access function 0: 0
Creating dr for MEM[(struct basic_ostream *)os_11(D)]._vptr.basic_ostream
analyze_innermost: success.
	base_address: os_11(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ostream *)os_11(D)]
	Access function 0: 0
Creating dr for MEM[(struct basic_ostream *)os_11(D)]._vptr.basic_ostream
analyze_innermost: success.
	base_address: os_11(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ostream *)os_11(D)]
	Access function 0: 0
Creating dr for MEM[(long int *)_46 + -24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long int *)_46 + -24B]
Creating dr for MEM[(long int *)_46 + -24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long int *)_46 + -24B]
Creating dr for MEM[(long int *)_46 + -24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long int *)_46 + -24B]
Creating dr for MEM[(const struct basic_ios *)_49]._M_ctype
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct basic_ios *)_49]
	Access function 0: 1920
Creating dr for MEM[(const struct basic_ios *)_49]._M_ctype
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct basic_ios *)_49]
	Access function 0: 1920
Creating dr for MEM[(const struct basic_ios *)_49]._M_ctype
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct basic_ios *)_49]
	Access function 0: 1920
Creating dr for MEM[(const struct ctype *)_36]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_36]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_36]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_36]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_36]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_36]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_36]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_36]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_36]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_36]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_36]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_36]
	Access function 0: 10
	Access function 1: 456
Creating dr for this_8(D)->_inputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 32
Creating dr for this_8(D)->_inputs
analyze_innermost: success.
	base_address: this_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *this_8(D)
	Access function 0: 32

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:31, LOOPS:3, CONDITIONS:15, STMTS:125)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG i => 0
    # DEBUG i => 0
    # VUSE <.MEM_7(D)>
    _78 = this_8(D)->_inputs;
    if (_78 <= 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 bb_28 }, succs = {bb_30 })
  {
    <bb 3>:
    # .MEM_100 = PHI <.MEM_7(D)(2), .MEM_17(28)>

  }
  bb_30 (preds = {bb_3 }, succs = {bb_1 })
  {
    <bb 30>:
    # VUSE <.MEM_100>
    return;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:
    # VUSE <.MEM_7(D)>
    pretmp_105 = this_8(D)->_outputs;

  }
  bb_10 (preds = {bb_9 bb_11 bb_15 }, succs = {})
  {
    <bb 10>:
    # .MEM_96 = PHI <.MEM_73(9), .MEM_73(11), .MEM_76(15)>
    # DEBUG D#4 => this_8(D)
    # DEBUG D#5 => i_12
    # DEBUG D#6 => o_59
    # DEBUG D#7 => 0
    # VUSE <.MEM_96>
    SwitchMonitor::_ZNK13SwitchMonitor5indexEiii.part.3 ();

  }
  bb_13 (preds = {bb_12 bb_14 bb_16 }, succs = {})
  {
    <bb 13>:
    # .MEM_95 = PHI <.MEM_73(12), .MEM_73(14), .MEM_76(16)>
    # .MEM_79 = VDEF <.MEM_95>
    __assert_fail ("(output >= 0) && (output < _outputs)", "power/switch_monitor.cpp", 39, &__PRETTY_FUNCTION__);

  }
  bb_20 (preds = {bb_8 }, succs = {})
  {
    <bb 20>:
    # .MEM_88 = VDEF <.MEM_99>
    std::__throw_bad_cast ();

  }
  loop_1 (header = 5, latch = 29, niter = , upper_bound = 2147483647)
  {
    bb_5 (preds = {bb_4 bb_29 }, succs = {bb_28 bb_6 })
    {
      <bb 5>:
      # .MEM_75 = PHI <.MEM_7(D)(4), .MEM_17(29)>
      # i_12 = PHI <0(4), i_30(29)>
      # prephitmp_97 = PHI <_78(4), prephitmp_108(29)>
      # prephitmp_106 = PHI <pretmp_105(4), prephitmp_98(29)>
      # DEBUG i => i_12
      # DEBUG o => 0
      if (prephitmp_106 <= 0)
        goto <bb 28>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_27 (preds = {bb_25 }, succs = {bb_28 })
    {
      <bb 27>:
      # _92 = PHI <_10(25)>
      # VUSE <.MEM_86>
      pretmp_107 = this_8(D)->_inputs;

    }
    bb_28 (preds = {bb_27 bb_5 }, succs = {bb_3 bb_29 })
    {
      <bb 28>:
      # .MEM_17 = PHI <.MEM_86(27), .MEM_75(5)>
      # prephitmp_98 = PHI <_92(27), prephitmp_106(5)>
      # prephitmp_108 = PHI <pretmp_107(27), prephitmp_97(5)>
      i_30 = i_12 + 1;
      # DEBUG i => i_30
      # DEBUG i => i_30
      if (i_30 >= prephitmp_108)
        goto <bb 3>;
      else
        goto <bb 29>;

    }
    bb_29 (preds = {bb_28 }, succs = {bb_5 })
    {
      <bb 29>:
      goto <bb 5>;

    }
    loop_2 (header = 7, latch = 26, niter = , upper_bound = 2147483647)
    {
      bb_7 (preds = {bb_6 bb_26 }, succs = {bb_8 bb_9 })
      {
        <bb 7>:
        # o_59 = PHI <0(6), o_29(26)>
        # .MEM_50 = PHI <.MEM_75(6), .MEM_86(26)>
        # DEBUG o => o_59
        # DEBUG __out => os_11(D)
        # DEBUG __s => "["
        # DEBUG __s => "["
        # .MEM_28 = VDEF <.MEM_50>
        std::__ostream_insert<char, std::char_traits<char> > (os_11(D), "[", 1);
        # .MEM_13 = VDEF <.MEM_28>
        _14 = std::basic_ostream<char>::operator<< (os_11(D), i_12);
        # DEBUG __out => _14
        # DEBUG __s => " -> "
        # DEBUG __s => " -> "
        # .MEM_34 = VDEF <.MEM_13>
        std::__ostream_insert<char, std::char_traits<char> > (_14, " -> ", 4);
        # .MEM_15 = VDEF <.MEM_34>
        _16 = std::basic_ostream<char>::operator<< (_14, o_59);
        # DEBUG __out => _16
        # DEBUG __s => "] "
        # DEBUG __s => "] "
        # .MEM_73 = VDEF <.MEM_15>
        std::__ostream_insert<char, std::char_traits<char> > (_16, "] ", 2);
        # DEBUG c => 0
        # VUSE <.MEM_73>
        _77 = this_8(D)->_classes;
        if (_77 <= 0)
          goto <bb 8>;
        else
          goto <bb 9>;

      }
      bb_8 (preds = {bb_7 bb_19 }, succs = {bb_20 bb_21 })
      {
        <bb 8>:
        # .MEM_99 = PHI <.MEM_73(7), .MEM_76(19)>
        # DEBUG this => os_11(D)
        # DEBUG __pf => endl
        # DEBUG __os => os_11(D)
        # VUSE <.MEM_99>
        _46 = MEM[(struct basic_ostream *)os_11(D)]._vptr.basic_ostream;
        # VUSE <.MEM_99>
        _47 = MEM[(long int *)_46 + -24B];
        _48 = (sizetype) _47;
        _49 = os_11(D) + _48;
        # DEBUG this => _49
        # DEBUG __c => 10
        # VUSE <.MEM_99>
        _36 = MEM[(const struct basic_ios *)_49]._M_ctype;
        # DEBUG __f => _36
        if (_36 == 0B)
          goto <bb 20>;
        else
          goto <bb 21>;

      }
      bb_9 (preds = {bb_7 }, succs = {bb_10 bb_11 })
      {
        <bb 9>:
        # DEBUG this => this_8(D)
        # DEBUG input => i_12
        # DEBUG output => o_59
        # DEBUG cl => 0
        if (i_12 < 0)
          goto <bb 10>;
        else
          goto <bb 11>;

      }
      bb_11 (preds = {bb_9 }, succs = {bb_10 bb_12 })
      {
        <bb 11>:
        # VUSE <.MEM_73>
        _65 = this_8(D)->_inputs;
        if (i_12 >= _65)
          goto <bb 10>;
        else
          goto <bb 12>;

      }
      bb_12 (preds = {bb_11 }, succs = {bb_13 bb_14 })
      {
        <bb 12>:
        if (o_59 < 0)
          goto <bb 13>;
        else
          goto <bb 14>;

      }
      bb_14 (preds = {bb_12 }, succs = {bb_13 bb_18 })
      {
        <bb 14>:
        # VUSE <.MEM_73>
        _74 = this_8(D)->_outputs;
        if (o_59 >= _74)
          goto <bb 13>;
        else
          goto <bb 18>;

      }
      bb_18 (preds = {bb_14 }, succs = {bb_19 })
      {
        <bb 18>:

      }
      bb_21 (preds = {bb_8 }, succs = {bb_22 bb_23 })
      {
        <bb 21>:
        # DEBUG this => _36
        # DEBUG __c => 10
        # VUSE <.MEM_99>
        _54 = MEM[(const struct ctype *)_36]._M_widen_ok;
        if (_54 != 0)
          goto <bb 22>;
        else
          goto <bb 23>;

      }
      bb_22 (preds = {bb_21 }, succs = {bb_25 })
      {
        <bb 22>:
        # VUSE <.MEM_99>
        _57 = MEM[(const struct ctype *)_36]._M_widen[10];
        pretmp_101 = (int) _57;
        goto <bb 25>;

      }
      bb_23 (preds = {bb_21 }, succs = {bb_25 bb_24 })
      {
        <bb 23>:
        # DEBUG this => _36
        # DEBUG __c => 10
        # .MEM_80 = VDEF <.MEM_99>
        std::ctype<char>::_M_widen_init (_36);
        # VUSE <.MEM_80>
        _62 = MEM[(const struct ctype *)_36].D.19182._vptr.facet;
        # VUSE <.MEM_80>
        _63 = MEM[(int (*__vtbl_ptr_type) () *)_62 + 48B];
        PROF_67 = [obj_type_ref] OBJ_TYPE_REF(_63;(const struct ctype)_36->6);
        if (PROF_67 == do_widen)
          goto <bb 25>;
        else
          goto <bb 24>;

      }
      bb_24 (preds = {bb_23 }, succs = {bb_25 })
      {
        <bb 24>:
        # .MEM_81 = VDEF <.MEM_80>
        _69 = OBJ_TYPE_REF(_63;(const struct ctype)_36->6) (_36, 10);
        pretmp_102 = (int) _69;

      }
      bb_25 (preds = {bb_22 bb_23 bb_24 }, succs = {bb_27 bb_26 })
      {
        <bb 25>:
        # .MEM_72 = PHI <.MEM_99(22), .MEM_80(23), .MEM_81(24)>
        # prephitmp_103 = PHI <pretmp_101(22), 10(23), pretmp_102(24)>
        # .MEM_85 = VDEF <.MEM_72>
        _52 = std::basic_ostream<char>::put (os_11(D), prephitmp_103);
        # DEBUG __os => _52
        # .MEM_86 = VDEF <.MEM_85>
        std::basic_ostream<char>::flush (_52);
        o_29 = o_59 + 1;
        # DEBUG o => o_29
        # DEBUG o => o_29
        # VUSE <.MEM_86>
        _10 = this_8(D)->_outputs;
        if (_10 <= o_29)
          goto <bb 27>;
        else
          goto <bb 26>;

      }
      bb_26 (preds = {bb_25 }, succs = {bb_7 })
      {
        <bb 26>:
        goto <bb 7>;

      }
      loop_3 (header = 19, latch = 17, niter = , upper_bound = 2147483647)
      {
        bb_15 (preds = {bb_19 }, succs = {bb_10 bb_16 })
        {
          <bb 15>:
          # DEBUG this => this_8(D)
          # DEBUG input => i_12
          # DEBUG output => o_59
          # DEBUG cl => c_27
          # VUSE <.MEM_76>
          _26 = this_8(D)->_inputs;
          if (i_12 >= _26)
            goto <bb 10>;
          else
            goto <bb 16>;

        }
        bb_16 (preds = {bb_15 }, succs = {bb_13 bb_17 })
        {
          <bb 16>:
          # VUSE <.MEM_76>
          _40 = this_8(D)->_outputs;
          if (_40 <= o_59)
            goto <bb 13>;
          else
            goto <bb 17>;

        }
        bb_17 (preds = {bb_16 }, succs = {bb_19 })
        {
          <bb 17>:
          goto <bb 19>;

        }
        bb_19 (preds = {bb_18 bb_17 }, succs = {bb_8 bb_15 })
        {
          <bb 19>:
          # c_83 = PHI <0(18), c_27(17)>
          # .MEM_56 = PHI <.MEM_73(18), .MEM_76(17)>
          # _61 = PHI <_77(18), _18(17)>
          # _64 = PHI <_74(18), _40(17)>
          # DEBUG c => c_83
          # DEBUG this => this_8(D)
          # DEBUG input => i_12
          # DEBUG output => o_59
          # DEBUG cl => c_83
          _42 = i_12 * _64;
          _43 = _42 + o_59;
          _44 = _43 * _61;
          _45 = _44 + c_83;
          _20 = (long unsigned int) _45;
          # DEBUG D#15 => &this_8(D)->_event
          # VUSE <.MEM_56>
          _31 = MEM[(int * *)this_8(D) + 16B];
          # DEBUG D#14 => D#15
          # DEBUG __n => _20
          # DEBUG this => D#14
          _32 = _20 * 4;
          _33 = _31 + _32;
          # VUSE <.MEM_56>
          _21 = *_33;
          # .MEM_22 = VDEF <.MEM_56>
          _23 = std::basic_ostream<char>::operator<< (os_11(D), c_83);
          # DEBUG __out => _23
          # DEBUG __s => ":"
          # DEBUG __s => ":"
          # .MEM_35 = VDEF <.MEM_22>
          std::__ostream_insert<char, std::char_traits<char> > (_23, ":", 1);
          # .MEM_24 = VDEF <.MEM_35>
          _25 = std::basic_ostream<char>::operator<< (_23, _21);
          # DEBUG __out => _25
          # DEBUG __s => " "
          # DEBUG __s => " "
          # .MEM_76 = VDEF <.MEM_24>
          std::__ostream_insert<char, std::char_traits<char> > (_25, " ", 1);
          c_27 = c_83 + 1;
          # DEBUG c => c_27
          # DEBUG c => c_27
          # VUSE <.MEM_76>
          _18 = this_8(D)->_classes;
          if (_18 <= c_27)
            goto <bb 8>;
          else
            goto <bb 15>;

        }
      }
    }
  }
}

Pass statistics:
----------------

void SwitchMonitor::display(std::ostream&) const (const struct SwitchMonitorD.24888 * const thisD.31505, struct ostreamD.9410 & osD.31503)
{
  char_typeD.19035 D.34439;
  charD.10 __cD.34438;
  char_typeD.19035 D.34436;
  charD.10 __cD.34435;
  char_typeD.22114 D.34433;
  struct basic_ostreamD.9409 & D.34427;
  intD.9 D.34424;
  struct basic_ostreamD.9409 & D.34419;
  struct basic_ostreamD.9409 & D.34415;
  intD.9 cD.31533;
  intD.9 oD.31508;
  intD.9 iD.31507;
  intD.9 _10;
  struct basic_ostreamD.9409 & _14;
  struct basic_ostreamD.9409 & _16;
  intD.9 _18;
  long unsigned intD.14 _20;
  intD.9 _21;
  struct basic_ostreamD.9409 & _23;
  struct basic_ostreamD.9409 & _25;
  intD.9 _26;
  intD.9 * const _31;
  long unsigned intD.14 _32;
  const intD.9 & _33;
  const struct __ctype_typeD.22119 * _36;
  intD.9 _40;
  intD.9 _42;
  intD.9 _43;
  intD.9 _44;
  intD.9 _45;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _46;
  long intD.12 _47;
  sizetype _48;
  struct basic_iosD.9403 * _49;
  struct basic_ostreamD.9409 & _52;
  charD.10 _54;
  char_typeD.19035 _57;
  intD.9 _61;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _62;
  intD.9 (*__vtbl_ptr_typeD.2760) () _63;
  intD.9 _64;
  intD.9 _65;
  voidD.45 * PROF_67;
  char_typeD.19035 _69;
  intD.9 _74;
  intD.9 _77;
  intD.9 _78;
  intD.9 _92;
  const intD.9 prephitmp_97;
  const intD.9 prephitmp_98;
  intD.9 pretmp_101;
  intD.9 pretmp_102;
  intD.9 prephitmp_103;
  const intD.9 pretmp_105;
  const intD.9 prephitmp_106;
  const intD.9 pretmp_107;
  const intD.9 prephitmp_108;

;;   basic block 2, loop depth 0, count 0, freq 33, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG iD.31507 => 0
  # DEBUG iD.31507 => 0
  # VUSE <.MEM_7(D)>
  _78 = this_8(D)->_inputsD.24891;
  if (_78 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 2, next block 30, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_7(D)(2), .MEM_17(28)>
;;    succ:       30 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_100>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 30, maybe hot
;;    prev block 30, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_7(D)>
  pretmp_105 = this_8(D)->_outputsD.24892;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 114, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_7(D)(4), .MEM_17(29)>
  # i_12 = PHI <0(4), i_30(29)>
  # prephitmp_97 = PHI <_78(4), prephitmp_108(29)>
  # prephitmp_106 = PHI <pretmp_105(4), prephitmp_98(29)>
  # DEBUG iD.31507 => i_12
  # DEBUG oD.31508 => 0
  if (prephitmp_106 <= 0)
    goto <bb 28>;
  else
    goto <bb 6>;
;;    succ:       28 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 104, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 922, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # o_59 = PHI <0(6), o_29(26)>
  # .MEM_50 = PHI <.MEM_75(6), .MEM_86(26)>
  # DEBUG oD.31508 => o_59
  # DEBUG __outD.32943 => os_11(D)
  # DEBUG __sD.32944 => "["
  # DEBUG __sD.32945 => "["
  # .MEM_28 = VDEF <.MEM_50>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.11175 (os_11(D), "[", 1);
  # .MEM_13 = VDEF <.MEM_28>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _14 = _ZNSolsEiD.22810 (os_11(D), i_12);
  # DEBUG __outD.32939 => _14
  # DEBUG __sD.32940 => " -> "
  # DEBUG __sD.32941 => " -> "
  # .MEM_34 = VDEF <.MEM_13>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.11175 (_14, " -> ", 4);
  # .MEM_15 = VDEF <.MEM_34>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _16 = _ZNSolsEiD.22810 (_14, o_59);
  # DEBUG __outD.34412 => _16
  # DEBUG __sD.34413 => "] "
  # DEBUG __sD.34414 => "] "
  # .MEM_73 = VDEF <.MEM_15>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.11175 (_16, "] ", 2);
  # DEBUG cD.31533 => 0
  # VUSE <.MEM_73>
  _77 = this_8(D)->_classesD.24893;
  if (_77 <= 0)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_73(7), .MEM_76(19)>
  # DEBUG thisD.32955 => os_11(D)
  # DEBUG __pfD.32956 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.22942
  # DEBUG __osD.34425 => os_11(D)
  # VUSE <.MEM_99>
  # PT = nonlocal escaped 
  _46 = MEM[(struct basic_ostreamD.9409 *)os_11(D)]._vptr.basic_ostreamD.22902;
  # VUSE <.MEM_99>
  _47 = MEM[(long intD.12 *)_46 + -24B];
  # RANGE [0, 18446744073709551615]
  _48 = (sizetype) _47;
  # PT = nonlocal 
  _49 = os_11(D) + _48;
  # DEBUG thisD.34428 => _49
  # DEBUG __cD.34429 => 10
  # VUSE <.MEM_99>
  # PT = nonlocal escaped 
  _36 = MEM[(const struct basic_iosD.9403 *)_49]._M_ctypeD.22126;
  # DEBUG __fD.34430 => _36
  if (_36 == 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 837, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.34420 => this_8(D)
  # DEBUG inputD.34421 => i_12
  # DEBUG outputD.34422 => o_59
  # DEBUG clD.34423 => 0
  if (i_12 < 0)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_96 = PHI <.MEM_73(9), .MEM_73(11), .MEM_76(15)>
  # DEBUG D#4ptD.0 => this_8(D)
  # DEBUG D#5ptD.0 => i_12
  # DEBUG D#6ptD.0 => o_59
  # DEBUG D#7ptD.0 => 0
  # VUSE <.MEM_96>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZNK13SwitchMonitor5indexEiii.part.3D.32910 ();
;;    succ:      

;;   basic block 11, loop depth 2, count 0, freq 837, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_73>
  _65 = this_8(D)->_inputsD.24891;
  if (i_12 >= _65)
    goto <bb 10>;
  else
    goto <bb 12>;
;;    succ:       10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 2, count 0, freq 837, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  if (o_59 < 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_95 = PHI <.MEM_73(12), .MEM_73(14), .MEM_76(16)>
  # .MEM_79 = VDEF <.MEM_95>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  __assert_failD.28294 ("(output >= 0) && (output < _outputs)", "power/switch_monitor.cpp", 39, &_ZZNK13SwitchMonitor5indexEiiiE19__PRETTY_FUNCTION__D.31493);
;;    succ:      

;;   basic block 14, loop depth 2, count 0, freq 836, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_73>
  _74 = this_8(D)->_outputsD.24892;
  if (o_59 >= _74)
    goto <bb 13>;
  else
    goto <bb 18>;
;;    succ:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 3, count 0, freq 8259, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       19 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.34420 => this_8(D)
  # DEBUG inputD.34421 => i_12
  # DEBUG outputD.34422 => o_59
  # DEBUG clD.34423 => c_27
  # VUSE <.MEM_76>
  _26 = this_8(D)->_inputsD.24891;
  if (i_12 >= _26)
    goto <bb 10>;
  else
    goto <bb 16>;
;;    succ:       10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 3, count 0, freq 8253, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_76>
  _40 = this_8(D)->_outputsD.24892;
  if (_40 <= o_59)
    goto <bb 13>;
  else
    goto <bb 17>;
;;    succ:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 3, count 0, freq 8250, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 2, count 0, freq 836, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 3, count 0, freq 9080, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # c_83 = PHI <0(18), c_27(17)>
  # .MEM_56 = PHI <.MEM_73(18), .MEM_76(17)>
  # _61 = PHI <_77(18), _18(17)>
  # _64 = PHI <_74(18), _40(17)>
  # DEBUG cD.31533 => c_83
  # DEBUG thisD.34420 => this_8(D)
  # DEBUG inputD.34421 => i_12
  # DEBUG outputD.34422 => o_59
  # DEBUG clD.34423 => c_83
  _42 = i_12 * _64;
  _43 = _42 + o_59;
  _44 = _43 * _61;
  _45 = _44 + c_83;
  # RANGE ~[2147483648, 18446744071562067967]
  _20 = (long unsigned intD.14) _45;
  # DEBUG D#15ptD.0 => &this_8(D)->_eventD.25640
  # VUSE <.MEM_56>
  # PT = nonlocal escaped 
  _31 = MEM[(intD.9 * *)this_8(D) + 16B];
  # DEBUG D#14ptD.0 => D#15ptD.0
  # DEBUG __nD.32952 => _20
  # DEBUG thisD.32953 => D#14ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _32 = _20 * 4;
  # PT = nonlocal escaped 
  _33 = _31 + _32;
  # VUSE <.MEM_56>
  _21 = *_33;
  # .MEM_22 = VDEF <.MEM_56>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _23 = _ZNSolsEiD.22810 (os_11(D), c_83);
  # DEBUG __outD.32947 => _23
  # DEBUG __sD.32948 => ":"
  # DEBUG __sD.32949 => ":"
  # .MEM_35 = VDEF <.MEM_22>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.11175 (_23, ":", 1);
  # .MEM_24 = VDEF <.MEM_35>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _25 = _ZNSolsEiD.22810 (_23, _21);
  # DEBUG __outD.34416 => _25
  # DEBUG __sD.34417 => " "
  # DEBUG __sD.34418 => " "
  # .MEM_76 = VDEF <.MEM_24>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.11175 (_25, " ", 1);
  # RANGE [1, 2147483647] NONZERO 2147483647
  c_27 = c_83 + 1;
  # DEBUG cD.31533 => c_27
  # DEBUG cD.31533 => c_27
  # VUSE <.MEM_76>
  _18 = this_8(D)->_classesD.24893;
  if (_18 <= c_27)
    goto <bb 8>;
  else
    goto <bb 15>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       8 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_88 = VDEF <.MEM_99>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2825 ();
;;    succ:      

;;   basic block 21, loop depth 2, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.34432 => _36
  # DEBUG __cD.34431 => 10
  # VUSE <.MEM_99>
  _54 = MEM[(const struct ctypeD.10037 *)_36]._M_widen_okD.19041;
  if (_54 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 2, count 0, freq 549, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_99>
  _57 = MEM[(const struct ctypeD.10037 *)_36]._M_widenD.19042[10];
  pretmp_101 = (intD.9) _57;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 2, count 0, freq 351, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.34434 => _36
  # DEBUG __cD.34435 => 10
  # .MEM_80 = VDEF <.MEM_99>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.19149 (_36);
  # VUSE <.MEM_80>
  # PT = nonlocal escaped 
  _62 = MEM[(const struct ctypeD.10037 *)_36].D.19182._vptr.facetD.15800;
  # VUSE <.MEM_80>
  # PT = nonlocal escaped 
  _63 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_62 + 48B];
  # PT = anything 
  PROF_67 = [obj_type_ref] OBJ_TYPE_REF(_63;(const struct ctypeD.10037)_36->6);
  if (PROF_67 == _ZNKSt5ctypeIcE8do_widenEcD.19130)
    goto <bb 25>;
  else
    goto <bb 24>;
;;    succ:       25 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 2, count 0, freq 70, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_81 = VDEF <.MEM_80>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _69 = OBJ_TYPE_REF(_63;(const struct ctypeD.10037)_36->6) (_36, 10);
  pretmp_102 = (intD.9) _69;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 2, count 0, freq 900, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_72 = PHI <.MEM_99(22), .MEM_80(23), .MEM_81(24)>
  # RANGE [-128, 127]
  # prephitmp_103 = PHI <pretmp_101(22), 10(23), pretmp_102(24)>
  # .MEM_85 = VDEF <.MEM_72>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _52 = _ZNSo3putEcD.22837 (os_11(D), prephitmp_103);
  # DEBUG __osD.34426 => _52
  # .MEM_86 = VDEF <.MEM_85>
  # USE = nonlocal null { D.31493 } (nonlocal, escaped)
  # CLB = nonlocal null { D.31493 } (nonlocal, escaped)
  _ZNSo5flushEvD.22848 (_52);
  o_29 = o_59 + 1;
  # DEBUG oD.31508 => o_29
  # DEBUG oD.31508 => o_29
  # VUSE <.MEM_86>
  _10 = this_8(D)->_outputsD.24892;
  if (_10 <= o_29)
    goto <bb 27>;
  else
    goto <bb 26>;
;;    succ:       27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 2, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 81, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _92 = PHI <_10(25)>
  # VUSE <.MEM_86>
  pretmp_107 = this_8(D)->_inputsD.24891;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 92, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_17 = PHI <.MEM_86(27), .MEM_75(5)>
  # prephitmp_98 = PHI <_92(27), prephitmp_106(5)>
  # prephitmp_108 = PHI <pretmp_107(27), prephitmp_97(5)>
  i_30 = i_12 + 1;
  # DEBUG iD.31507 => i_30
  # DEBUG iD.31507 => i_30
  if (i_30 >= prephitmp_108)
    goto <bb 3>;
  else
    goto <bb 29>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 84, maybe hot
;;    prev block 28, next block 1, flags: (NEW)
;;    pred:       28 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

}


