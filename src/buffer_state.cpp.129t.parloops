
;; Function virtual void BufferState::Display(std::ostream&) const (_ZNK11BufferState7DisplayERSo, funcdef_no=2213, decl_uid=42257, cgraph_uid=680, symbol_order=681)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void BufferState::Display(std::ostream&) const (const struct BufferState * const this, struct ostream & os)
{
  char_type D.62982;
  char __c;
  char_type D.62979;
  char __c;
  char_type D.62976;
  struct basic_ostream & D.62970;
  struct basic_ostream & D.62966;
  char_type D.62963;
  char __c;
  char_type D.62960;
  char __c;
  char_type D.62957;
  char_type D.62951;
  char __c;
  char_type D.62948;
  char __c;
  char_type D.62945;
  struct basic_ostream & D.62939;
  struct basic_ostream & D.62936;
  int v;
  long int _5;
  const size_type _7;
  int _8;
  struct basic_ostream & _10;
  int _11;
  struct basic_ostream & _13;
  const struct __ctype_type * _14;
  long unsigned int _15;
  int _16;
  int _17;
  struct basic_ostream & _19;
  struct basic_ostream & _21;
  int * const _23;
  int * const _24;
  _Bit_type * const _25;
  char * const _26;
  struct basic_ostream & _27;
  int _28;
  struct __ostream_type & _29;
  const int & _30;
  unsigned int _31;
  unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  _Bit_type * _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  bool _39;
  long unsigned int _40;
  const int & _41;
  const struct __ctype_type * _44;
  int (*__vtbl_ptr_type) () * _46;
  int (*__vtbl_ptr_type) () * _53;
  long int _54;
  sizetype _55;
  struct basic_ios * _56;
  struct basic_ostream & _59;
  long int _61;
  sizetype _62;
  struct basic_ios * _63;
  struct basic_ostream & _66;
  char _68;
  char_type _71;
  int pretmp_73;
  int (*__vtbl_ptr_type) () * _76;
  int (*__vtbl_ptr_type) () _77;
  int pretmp_79;
  int pretmp_80;
  void * PROF_81;
  char_type _83;
  const struct __ctype_type * _86;
  char _87;
  char_type _90;
  int (*__vtbl_ptr_type) () * _95;
  int (*__vtbl_ptr_type) () _96;
  void * PROF_100;
  char_type _102;
  int (*__vtbl_ptr_type) () * _105;
  long int _106;
  sizetype _107;
  struct basic_ios * _108;
  struct basic_ostream & _111;
  int _112;
  char _114;
  char_type _117;
  int prephitmp_119;
  int (*__vtbl_ptr_type) () * _122;
  int (*__vtbl_ptr_type) () _123;
  int pretmp_125;
  void * PROF_127;
  char_type _129;
  int prephitmp_138;
  int prephitmp_139;
  int pretmp_152;
  int pretmp_156;

  <bb 2>:
  # DEBUG D#57 => &this_3(D)->D.42278
  # DEBUG this => D#57
  # DEBUG __os => os_6(D)
  # DEBUG __str => NULL
  _7 = MEM[(long unsigned int *)this_3(D) + 48B];
  # DEBUG this => D#2
  _5 = (long int) _7;
  # DEBUG this => NULL
  _26 = MEM[(char * *)this_3(D) + 40B];
  # DEBUG this => D#1
  _27 = std::__ostream_insert<char, std::char_traits<char> > (os_6(D), _26, _5);
  # DEBUG __out => _27
  # DEBUG __s => " :"
  # DEBUG __s => " :"
  std::__ostream_insert<char, std::char_traits<char> > (_27, " :", 2);
  # DEBUG this => _27
  # DEBUG __pf => endl
  # DEBUG __os => _27
  _46 = _27->_vptr.basic_ostream;
  _61 = MEM[(long int *)_46 + -24B];
  _62 = (sizetype) _61;
  _63 = _27 + _62;
  # DEBUG this => _63
  # DEBUG __c => 10
  _44 = MEM[(const struct basic_ios *)_63]._M_ctype;
  # DEBUG __f => _44
  if (_44 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_bad_cast ();

  <bb 4>:
  # DEBUG this => _44
  # DEBUG __c => 10
  _68 = MEM[(const struct ctype *)_44]._M_widen_ok;
  if (_68 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _71 = MEM[(const struct ctype *)_44]._M_widen[10];
  pretmp_73 = (int) _71;
  goto <bb 8>;

  <bb 6>:
  # DEBUG this => _44
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_44);
  _76 = MEM[(const struct ctype *)_44].D.16885._vptr.facet;
  _77 = MEM[(int (*__vtbl_ptr_type) () *)_76 + 48B];
  PROF_81 = [obj_type_ref] OBJ_TYPE_REF(_77;(const struct ctype)_44->6);
  if (PROF_81 == do_widen)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _83 = OBJ_TYPE_REF(_77;(const struct ctype)_44->6) (_44, 10);
  pretmp_80 = (int) _83;

  <bb 8>:
  # prephitmp_138 = PHI <pretmp_73(5), 10(6), pretmp_80(7)>
  _66 = std::basic_ostream<char>::put (_27, prephitmp_138);
  # DEBUG __os => _66
  std::basic_ostream<char>::flush (_66);
  _8 = this_3(D)->_occupancy;
  # DEBUG __out => os_6(D)
  # DEBUG __s => " occupied = "
  # DEBUG __s => " occupied = "
  std::__ostream_insert<char, std::char_traits<char> > (os_6(D), " occupied = ", 12);
  _10 = std::basic_ostream<char>::operator<< (os_6(D), _8);
  # DEBUG this => _10
  # DEBUG __pf => endl
  # DEBUG __os => _10
  _53 = _10->_vptr.basic_ostream;
  _54 = MEM[(long int *)_53 + -24B];
  _55 = (sizetype) _54;
  _56 = _10 + _55;
  # DEBUG this => _56
  # DEBUG __c => 10
  _86 = MEM[(const struct basic_ios *)_56]._M_ctype;
  # DEBUG __f => _86
  if (_86 == 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 9>:
  # DEBUG this => _86
  # DEBUG __c => 10
  _87 = MEM[(const struct ctype *)_86]._M_widen_ok;
  if (_87 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _90 = MEM[(const struct ctype *)_86]._M_widen[10];
  pretmp_125 = (int) _90;
  goto <bb 13>;

  <bb 11>:
  # DEBUG this => _86
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_86);
  _95 = MEM[(const struct ctype *)_86].D.16885._vptr.facet;
  _96 = MEM[(int (*__vtbl_ptr_type) () *)_95 + 48B];
  PROF_100 = [obj_type_ref] OBJ_TYPE_REF(_96;(const struct ctype)_86->6);
  if (PROF_100 == do_widen)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  _102 = OBJ_TYPE_REF(_96;(const struct ctype)_86->6) (_86, 10);
  pretmp_79 = (int) _102;

  <bb 13>:
  # prephitmp_139 = PHI <pretmp_125(10), 10(11), pretmp_79(12)>
  _59 = std::basic_ostream<char>::put (_10, prephitmp_139);
  # DEBUG __os => _59
  std::basic_ostream<char>::flush (_59);
  # DEBUG v => 0
  _112 = this_3(D)->_vcs;
  if (_112 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:

  <bb 23>:
  return;

  <bb 15>:

  <bb 16>:
  # v_98 = PHI <0(15), v_22(22)>
  # DEBUG v => v_98
  # DEBUG __out => os_6(D)
  # DEBUG __s => "  VC "
  # DEBUG __s => "  VC "
  std::__ostream_insert<char, std::char_traits<char> > (os_6(D), "  VC ", 5);
  _13 = std::basic_ostream<char>::operator<< (os_6(D), v_98);
  # DEBUG __out => _13
  # DEBUG __s => ": "
  # DEBUG __s => ": "
  std::__ostream_insert<char, std::char_traits<char> > (_13, ": ", 2);
  _15 = (long unsigned int) v_98;
  # DEBUG D#58 => &this_3(D)->_vc_occupancy
  _23 = MEM[(int * *)this_3(D) + 112B];
  # DEBUG D#30 => D#58
  # DEBUG __n => _15
  # DEBUG this => D#30
  _40 = _15 * 4;
  _41 = _23 + _40;
  _16 = *_41;
  # DEBUG D#59 => &this_3(D)->_tail_sent
  _25 = MEM[(_Bit_type * *)this_3(D) + 176B];
  # DEBUG D#56 => D#59
  # DEBUG __n => _15
  # DEBUG this => D#56
  _31 = (unsigned int) _15;
  _32 = _31 & 63;
  _33 = _15 >> 6;
  _34 = _33 * 8;
  _35 = _25 + _34;
  # DEBUG this => NULL
  # DEBUG __x => _35
  # DEBUG __y => _32
  # DEBUG this => D#26
  # DEBUG __x => _35
  # DEBUG __y => _32
  # DEBUG this => D#26
  # DEBUG this => D#28
  # DEBUG this => D#28
  _36 = 1 << _32;
  # DEBUG this => NULL
  # DEBUG __x => _35
  # DEBUG __y => _36
  # DEBUG this => NULL
  _37 = *_35;
  _38 = _36 & _37;
  _39 = _38 != 0;
  # DEBUG D#60 => &this_3(D)->_in_use_by
  _24 = MEM[(int * *)this_3(D) + 152B];
  # DEBUG D#30 => D#60
  # DEBUG __n => _15
  # DEBUG this => D#30
  _30 = _24 + _40;
  _17 = *_30;
  # DEBUG __out => os_6(D)
  # DEBUG __s => "in_use_by = "
  # DEBUG __s => "in_use_by = "
  std::__ostream_insert<char, std::char_traits<char> > (os_6(D), "in_use_by = ", 12);
  _19 = std::basic_ostream<char>::operator<< (os_6(D), _17);
  # DEBUG __out => _19
  # DEBUG __s => ", tail_sent = "
  # DEBUG __s => ", tail_sent = "
  std::__ostream_insert<char, std::char_traits<char> > (_19, ", tail_sent = ", 14);
  # DEBUG this => _19
  # DEBUG __n => _39
  _28 = (int) _39;
  _29 = std::basic_ostream<char>::_M_insert<bool> (_19, _28);
  # DEBUG __out => _29
  # DEBUG __s => ", occupied = "
  # DEBUG __s => ", occupied = "
  std::__ostream_insert<char, std::char_traits<char> > (_29, ", occupied = ", 13);
  _21 = std::basic_ostream<char>::operator<< (_29, _16);
  # DEBUG this => _21
  # DEBUG __pf => endl
  # DEBUG __os => _21
  _105 = _21->_vptr.basic_ostream;
  _106 = MEM[(long int *)_105 + -24B];
  _107 = (sizetype) _106;
  _108 = _21 + _107;
  # DEBUG this => _108
  # DEBUG __c => 10
  _14 = MEM[(const struct basic_ios *)_108]._M_ctype;
  # DEBUG __f => _14
  if (_14 == 0B)
    goto <bb 3>;
  else
    goto <bb 17>;

  <bb 17>:
  # DEBUG this => _14
  # DEBUG __c => 10
  _114 = MEM[(const struct ctype *)_14]._M_widen_ok;
  if (_114 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _117 = MEM[(const struct ctype *)_14]._M_widen[10];
  pretmp_152 = (int) _117;
  goto <bb 21>;

  <bb 19>:
  # DEBUG this => _14
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_14);
  _122 = MEM[(const struct ctype *)_14].D.16885._vptr.facet;
  _123 = MEM[(int (*__vtbl_ptr_type) () *)_122 + 48B];
  PROF_127 = [obj_type_ref] OBJ_TYPE_REF(_123;(const struct ctype)_14->6);
  if (PROF_127 == do_widen)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  _129 = OBJ_TYPE_REF(_123;(const struct ctype)_14->6) (_14, 10);
  pretmp_156 = (int) _129;

  <bb 21>:
  # prephitmp_119 = PHI <pretmp_152(18), 10(19), pretmp_156(20)>
  _111 = std::basic_ostream<char>::put (_21, prephitmp_119);
  # DEBUG __os => _111
  std::basic_ostream<char>::flush (_111);
  v_22 = v_98 + 1;
  # DEBUG v => v_22
  # DEBUG v => v_22
  _11 = this_3(D)->_vcs;
  if (_11 <= v_22)
    goto <bb 14>;
  else
    goto <bb 22>;

  <bb 22>:
  goto <bb 16>;

}



;; Function virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::TakeBuffer(int) (_ZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy10TakeBufferEi, funcdef_no=2174, decl_uid=40403, cgraph_uid=641, symbol_order=642)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::TakeBuffer(int) (struct ShiftingDynamicLimitedSharedBufferPolicy * const this, int vc)
{
  bool this__F_F__max_held_slots_lsm.1346;
  int this__F_F__max_held_slots_lsm.1345;
  size_type __dnew;
  const struct string D.63297;
  int i;
  static const char __PRETTY_FUNCTION__[84] = "virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::TakeBuffer(int)";
  int _10;
  int _13;
  int _19;
  int _20;
  int _21;
  struct Module * _22;
  char * const _23;
  char * const _24;
  char * _34;
  long unsigned int __dnew.49_35;
  int pretmp_36;
  long unsigned int __dnew.49_38;
  char * const _39;
  char * _40;
  int prephitmp_55;
  int _56;
  int prephitmp_58;
  int prephitmp_61;

  <bb 2>:
  # DEBUG D#773 => &this_3(D)->D.40430.D.40391
  # DEBUG this => D#773
  # DEBUG vc => vc_6(D)
  _19 = MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]._active_vcs;
  _20 = _19 + 1;
  MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]._active_vcs = _20;
  _21 = MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]._vcs;
  if (_20 > _21)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 3>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => &D.63297
  # DEBUG __s => "Number of active VCs is too large."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.63297
  # DEBUG D#296 => &D.63297._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.63297.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.63297]._M_p = &D.63297.D.11539._M_local_buf;
  # DEBUG __s => "Number of active VCs is too large."
  # DEBUG this => &D.63297
  # DEBUG __beg => "Number of active VCs is too large."
  # DEBUG __end => &MEM[(void *)"Number of active VCs is too large." + 34B]
  # DEBUG this => &D.63297
  # DEBUG __beg => "Number of active VCs is too large."
  # DEBUG __end => &MEM[(void *)"Number of active VCs is too large." + 34B]
  # DEBUG this => &D.63297
  # DEBUG __beg => "Number of active VCs is too large."
  # DEBUG __end => &MEM[(void *)"Number of active VCs is too large." + 34B]
  # DEBUG __ptr => "Number of active VCs is too large."
  # DEBUG __first => "Number of active VCs is too large."
  # DEBUG __last => &MEM[(void *)"Number of active VCs is too large." + 34B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Number of active VCs is too large."
  # DEBUG __last => &MEM[(void *)"Number of active VCs is too large." + 34B]
  __dnew = 34;
  _34 = std::__cxx11::basic_string<char>::_M_create (&D.63297, &__dnew, 0);
  # DEBUG D#7 => &D.63297
  # DEBUG __p => _34
  # DEBUG this => D#7
  MEM[(char * *)&D.63297] = _34;
  __dnew.49_35 = __dnew;
  # DEBUG D#8 => &D.63297
  # DEBUG __capacity => __dnew.49_35
  # DEBUG this => D#8
  MEM[(size_type *)&D.63297 + 16B] = __dnew.49_35;
  # DEBUG D#1 => &D.63297
  # DEBUG this => D#1
  # DEBUG __p => _34
  # DEBUG __k1 => "Number of active VCs is too large."
  # DEBUG __k2 => &MEM[(void *)"Number of active VCs is too large." + 34B]
  # DEBUG __d => _34
  # DEBUG __s => "Number of active VCs is too large."
  # DEBUG __n => 34
  # DEBUG __s1 => _34
  # DEBUG __s2 => "Number of active VCs is too large."
  # DEBUG __n => 34
  __builtin_memcpy (_34, "Number of active VCs is too large.", 34);
  __dnew.49_38 = __dnew;
  # DEBUG this => &D.63297
  # DEBUG __n => __dnew.49_38
  # DEBUG D#9 => &D.63297
  # DEBUG __length => __dnew.49_38
  # DEBUG this => D#9
  MEM[(size_type *)&D.63297 + 8B] = __dnew.49_38;
  _39 = MEM[(char * *)&D.63297];
  # DEBUG D#1 => &D.63297
  # DEBUG this => D#1
  _40 = _39 + __dnew.49_38;
  # DEBUG __c1 => _40
  # DEBUG __c2 => D#10
  MEM[(char_type &)_40] = 0;
  __dnew ={v} {CLOBBER};
  _22 = &MEM[(struct LimitedSharedBufferPolicy *)this_3(D)].D.40349.D.40291.D.39647;
  Module::Error (_22, &D.63297);

  <bb 4>:
  # DEBUG this => &D.63297
  # DEBUG this => &D.63297
  # DEBUG this => &D.63297
  _23 = MEM[(char * *)&D.63297];
  # DEBUG D#1 => &D.63297
  # DEBUG this => D#1
  # DEBUG this => &D.63297
  if (&D.63297.D.11539._M_local_buf != _23)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#188 => D.63297.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.63297
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.63297
  # DEBUG this => D#1
  # DEBUG this => &D.63297
  # DEBUG D#185 => &D.63297._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _23
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _23
  # DEBUG this => D#179
  # DEBUG D.63288 => D#180
  operator delete (_23);

  <bb 6>:
  # DEBUG D#189 => &D.63297._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.63297 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  pretmp_36 = this_3(D)->D.40430.D.40391._active_vcs;
  goto <bb 10>;

<L7>:
  # DEBUG this => &D.63297
  # DEBUG this => &D.63297
  # DEBUG this => &D.63297
  _24 = MEM[(char * *)&D.63297];
  # DEBUG D#1 => &D.63297
  # DEBUG this => D#1
  # DEBUG this => &D.63297
  if (&D.63297.D.11539._M_local_buf != _24)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG D#188 => D.63297.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.63297
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.63297
  # DEBUG this => D#1
  # DEBUG this => &D.63297
  # DEBUG D#185 => &D.63297._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _24
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _24
  # DEBUG this => D#179
  # DEBUG D.63273 => D#180
  operator delete (_24);

  <bb 9>:
  # DEBUG D#189 => &D.63297._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.63297 ={v} {CLOBBER};
  resx 1

  <bb 10>:
  # prephitmp_55 = PHI <pretmp_36(6), _20(2)>
  if (prephitmp_55 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#306 => this_3(D)
  # DEBUG D#307 => vc_6(D)
  # DEBUG D#308 => D#307
  # DEBUG vc => D#308
  # DEBUG D#309 => D#306
  # DEBUG this => D#309
  __assert_fail ("_active_vcs", "buffer_state.cpp", 342, &__PRETTY_FUNCTION__);

  <bb 12>:
  i_9 = prephitmp_55 + -1;
  # DEBUG i => i_9
  _10 = this_3(D)->D.40430.D.40391.D.40349._buf_size;
  this_3(D)->D.40430.D.40391._max_held_slots = _10;
  # DEBUG i => i_9
  if (i_9 == 0)
    goto <bb 17>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # i_31 = PHI <i_9(13), i_15(16)>
  # prephitmp_61 = PHI <_10(13), _13(16)>
  # DEBUG i => i_31
  _13 = prephitmp_61 >> 1;
  i_15 = i_31 >> 1;
  # DEBUG i => i_15
  # DEBUG i => i_15
  if (i_15 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # _56 = PHI <_13(14)>

  <bb 20>:
  this_3(D)->D.40430.D.40391._max_held_slots = _56;
  goto <bb 17>;

  <bb 16>:
  goto <bb 14>;

  <bb 17>:
  # prephitmp_58 = PHI <_56(20), _10(12)>
  if (prephitmp_58 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __assert_fail ("_max_held_slots > 0", "buffer_state.cpp", 349, &__PRETTY_FUNCTION__);

  <bb 19>:
  return;

}



;; Function virtual BufferState::SimpleFeedbackSharedBufferPolicy::~SimpleFeedbackSharedBufferPolicy() (_ZN11BufferState32SimpleFeedbackSharedBufferPolicyD0Ev, funcdef_no=2925, decl_uid=41276, cgraph_uid=1392, symbol_order=1395)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual BufferState::SimpleFeedbackSharedBufferPolicy::~SimpleFeedbackSharedBufferPolicy() (struct SimpleFeedbackSharedBufferPolicy * const this)
{
  int * * __nstart;
  struct queue * __first;
  int * _5;
  int * _7;
  int * _8;
  struct queue * _10;
  int * * _16;
  int * * _17;
  int * * _18;
  int * _21;
  int * _24;
  int * _25;
  int * _26;
  int * _27;
  struct Module * * _29;
  char * const _30;
  const char * _31;
  char * const _32;
  const char * _33;
  int * * pretmp_50;
  int * * prephitmp_51;
  struct queue * pretmp_59;
  struct queue * prephitmp_60;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.41295.D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState32SimpleFeedbackSharedBufferPolicyE + 16B];
  # DEBUG D#467 => &this_2(D)->_pending_credits
  # DEBUG this => D#467
  # DEBUG D#154 => &D#467->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#467->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#467->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#467->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _5 = MEM[(struct _Vector_base *)this_2(D) + 312B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _5
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _5
  # DEBUG __n => D#148
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _5
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _5
  # DEBUG this => D#140
  # DEBUG D.63766 => D#141
  operator delete (_5);

  <bb 4>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 312] ={v} {CLOBBER};
  # DEBUG D#784 => &this_2(D)->D.41295
  # DEBUG this => D#784
  MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)].D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyE + 16B];
  # DEBUG D#783 => &MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)]._flit_sent_time
  # DEBUG this => D#783
  # DEBUG D#463 => &D#783->D.41195
  # DEBUG this => D#463
  _10 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_finish;
  __first_11 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_start;
  # DEBUG __first => __first_11
  # DEBUG __last => _10
  # DEBUG __first => __first_11
  if (_10 == __first_11)
    goto <bb 16>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __first_28 = PHI <__first_11(5), __first_14(14)>
  # DEBUG __first => __first_28
  # DEBUG __r => __first_28
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  # DEBUG D#782 => &MEM[(struct deque *)__first_28].D.43590
  # DEBUG this => D#782
  _16 = MEM[(struct _Deque_base *)__first_28]._M_impl._M_map;
  if (_16 != 0B)
    goto <bb 7>;
  else
    goto <bb 13>;

  <bb 7>:
  _17 = MEM[(struct _Deque_base *)__first_28]._M_impl._M_finish._M_node;
  _18 = _17 + 8;
  __nstart_19 = MEM[(struct _Deque_base *)__first_28]._M_impl._M_start._M_node;
  # DEBUG this => D#782
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => _18
  # DEBUG __n => __nstart_19
  # DEBUG __n => __nstart_19
  if (_18 <= __nstart_19)
    goto <bb 12>;
  else
    goto <bb 8>;

  <bb 8>:

  <bb 9>:
  # __nstart_146 = PHI <__nstart_19(8), __nstart_22(10)>
  # DEBUG __n => __nstart_146
  _21 = *__nstart_146;
  # DEBUG this => D#782
  # DEBUG __p => _21
  # DEBUG __size => 4
  # DEBUG D#167 => &D#782->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _21
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _21
  # DEBUG this => D#140
  # DEBUG D.63843 => D#141
  operator delete (_21);
  __nstart_22 = __nstart_146 + 8;
  # DEBUG __n => __nstart_22
  # DEBUG __n => __nstart_22
  if (_18 <= __nstart_22)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:

  <bb 38>:
  pretmp_50 = MEM[(struct _Deque_base *)__first_28]._M_impl._M_map;

  <bb 12>:
  # prephitmp_51 = PHI <pretmp_50(38), _16(7)>
  # DEBUG D#447 => D#782->_M_impl._M_map_size
  # DEBUG D#786 => MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
  # DEBUG D#445 => D#782
  # DEBUG D#446 => D#447
  # DEBUG __p => D#786
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#786
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#786
  # DEBUG this => D#261
  # DEBUG D.63853 => D#262
  operator delete (prephitmp_51);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 13>:
  # DEBUG D#448 => &D#782->_M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  MEM[(struct  &)__first_28] ={v} {CLOBBER};
  __first_14 = __first_28 + 80;
  # DEBUG __first => __first_14
  # DEBUG __first => __first_14
  if (_10 == __first_14)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 6>;

  <bb 15>:

  <bb 37>:
  pretmp_59 = MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start;

  <bb 16>:
  # prephitmp_60 = PHI <pretmp_59(37), __first_11(4)>
  # DEBUG D#464 => &D#783->D.41195
  # DEBUG this => D#464
  # DEBUG D#260 => D#464->_M_impl._M_end_of_storage
  # DEBUG D#259 => (long int) D#260
  # DEBUG D#785 => MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
  # DEBUG D#258 => (long int) D#785
  # DEBUG D#257 => D#259 - D#258
  # DEBUG D#256 => D#257 /[ex] 80
  # DEBUG D#253 => D#464
  # DEBUG D#254 => (long unsigned int) D#256
  # DEBUG __p => D#785
  # DEBUG this => D#253
  # DEBUG __n => D#254
  # DEBUG D#252 => D#254
  # DEBUG D#251 => D#253
  if (prephitmp_60 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG D#250 => &D#251->_M_impl
  # DEBUG D#248 => D#250
  # DEBUG D#249 => D#252
  # DEBUG __p => D#785
  # DEBUG __a => D#248
  # DEBUG __n => D#249
  # DEBUG D#247 => D#249
  # DEBUG D#246 => D#248
  # DEBUG D#244 => D#246
  # DEBUG D#245 => D#247
  # DEBUG __p => D#785
  # DEBUG this => D#244
  # DEBUG D.63823 => D#245
  operator delete (prephitmp_60);

  <bb 18>:
  # DEBUG D#255 => &D#464->_M_impl
  # DEBUG this => D#255
  # DEBUG this => D#255
  # DEBUG this => D#255
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466 => &D#784->_round_trip_time
  # DEBUG this => D#466
  # DEBUG D#154 => &D#466->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#466->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#466->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#466->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _7 = MEM[(struct _Vector_base *)this_2(D) + 248B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _7
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _7
  # DEBUG __n => D#148
  if (_7 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _7
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _7
  # DEBUG this => D#140
  # DEBUG D.63782 => D#141
  operator delete (_7);

  <bb 20>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465 => &D#784->_occupancy_limit
  # DEBUG this => D#465
  # DEBUG D#154 => &D#465->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#465->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#465->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#465->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _8 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _8
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _8
  # DEBUG __n => D#148
  if (_8 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _8
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _8
  # DEBUG this => D#140
  # DEBUG D.63797 => D#141
  operator delete (_8);

  <bb 22>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#781 => &MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)].D.41247
  # DEBUG this => D#781
  MEM[(struct SharedBufferPolicy *)this_2(D)].D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState18SharedBufferPolicyE + 16B];
  # DEBUG D#224 => &D#781->_reserved_slots
  # DEBUG this => D#224
  # DEBUG D#154 => &D#224->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#224->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#224->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#224->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _24 = MEM[(struct _Vector_base *)this_2(D) + 192B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _24
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _24
  # DEBUG __n => D#148
  if (_24 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _24
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _24
  # DEBUG this => D#140
  # DEBUG D.63866 => D#141
  operator delete (_24);

  <bb 24>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223 => &D#781->_private_buf_occupancy
  # DEBUG this => D#223
  # DEBUG D#154 => &D#223->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#223->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#223->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#223->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _25 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _25
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _25
  # DEBUG __n => D#148
  if (_25 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _25
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _25
  # DEBUG this => D#140
  # DEBUG D.63881 => D#141
  operator delete (_25);

  <bb 26>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222 => &D#781->_private_buf_size
  # DEBUG this => D#222
  # DEBUG D#154 => &D#222->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#222->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#222->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#222->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _26 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _26
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _26
  # DEBUG __n => D#148
  if (_26 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _26
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _26
  # DEBUG this => D#140
  # DEBUG D.63896 => D#141
  operator delete (_26);

  <bb 28>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221 => &D#781->_private_buf_vc_map
  # DEBUG this => D#221
  # DEBUG D#154 => &D#221->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#221->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#221->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#221->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _27 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _27
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _27
  # DEBUG __n => D#148
  if (_27 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _27
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _27
  # DEBUG this => D#140
  # DEBUG D.63911 => D#141
  operator delete (_27);

  <bb 30>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220 => &D#781->D.40291
  # DEBUG this => D#220
  # DEBUG D#780 => &MEM[(struct BufferPolicy *)this_2(D)].D.39647
  # DEBUG this => D#780
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#219 => &D#780->_children
  # DEBUG this => D#219
  # DEBUG D#213 => &D#219->D.30368
  # DEBUG this => D#213
  # DEBUG D#216 => D#219->D.30368._M_impl._M_finish
  # DEBUG D#215 => D#219->D.30368._M_impl._M_start
  # DEBUG D#118 => D#215
  # DEBUG D#119 => D#216
  # DEBUG __first => D#118
  # DEBUG __last => D#119
  # DEBUG D.54613 => D#120
  # DEBUG D#117 => D#119
  # DEBUG D#116 => D#118
  # DEBUG D#114 => D#116
  # DEBUG D#115 => D#117
  # DEBUG __first => D#114
  # DEBUG __last => D#115
  # DEBUG D#113 => D#115
  # DEBUG D#112 => D#114
  # DEBUG D#110 => D#112
  # DEBUG D#111 => D#113
  # DEBUG D.54025 => D#110
  # DEBUG D.54024 => D#111
  # DEBUG D#214 => &D#219->D.30368
  # DEBUG this => D#214
  # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
  # DEBUG D#211 => (long int) D#212
  _29 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#210 => (long int) _29
  # DEBUG D#209 => D#211 - D#210
  # DEBUG D#208 => D#209 /[ex] 8
  # DEBUG D#205 => D#214
  # DEBUG D#206 => (long unsigned int) D#208
  # DEBUG __p => _29
  # DEBUG this => D#205
  # DEBUG __n => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#205
  if (_29 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#202 => &D#203->_M_impl
  # DEBUG D#200 => D#202
  # DEBUG D#201 => D#204
  # DEBUG __p => _29
  # DEBUG __a => D#200
  # DEBUG __n => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG D#196 => D#198
  # DEBUG D#197 => D#199
  # DEBUG __p => _29
  # DEBUG this => D#196
  # DEBUG D.63928 => D#197
  operator delete (_29);

  <bb 32>:
  # DEBUG D#207 => &D#214->_M_impl
  # DEBUG this => D#207
  # DEBUG this => D#207
  # DEBUG this => D#207
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218 => &D#780->_fullname
  # DEBUG this => D#218
  # DEBUG this => D#218
  # DEBUG this => D#218
  _30 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#218
  # DEBUG this => D#1
  # DEBUG this => D#218
  _31 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_30 != _31)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#188 => MEM[(struct basic_string *)D#218].D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => D#218
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => D#218
  # DEBUG this => D#1
  # DEBUG this => D#218
  # DEBUG D#185 => &MEM[(struct basic_string *)D#218]._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _30
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _30
  # DEBUG this => D#179
  # DEBUG D.63941 => D#180
  operator delete (_30);

  <bb 34>:
  # DEBUG D#189 => &MEM[(struct basic_string *)D#218]._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217 => &D#780->_name
  # DEBUG this => D#217
  # DEBUG this => D#217
  # DEBUG this => D#217
  _32 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#217
  # DEBUG this => D#1
  # DEBUG this => D#217
  _33 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_32 != _33)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG D#188 => MEM[(struct basic_string *)D#217].D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => D#217
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => D#217
  # DEBUG this => D#1
  # DEBUG this => D#217
  # DEBUG D#185 => &MEM[(struct basic_string *)D#217]._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _32
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _32
  # DEBUG this => D#179
  # DEBUG D.63956 => D#180
  operator delete (_32);

  <bb 36>:
  # DEBUG D#189 => &MEM[(struct basic_string *)D#217]._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function virtual BufferState::FeedbackSharedBufferPolicy::~FeedbackSharedBufferPolicy() (_ZN11BufferState26FeedbackSharedBufferPolicyD0Ev, funcdef_no=2198, decl_uid=41228, cgraph_uid=664, symbol_order=665)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual BufferState::FeedbackSharedBufferPolicy::~FeedbackSharedBufferPolicy() (struct FeedbackSharedBufferPolicy * const this)
{
  int * * __nstart;
  struct queue * __first;
  struct queue * _3;
  int * _6;
  int * _7;
  int * * _14;
  int * * _15;
  int * * _16;
  int * _19;
  int * _22;
  int * _23;
  int * _24;
  int * _25;
  struct Module * * _27;
  char * const _28;
  const char * _29;
  char * const _30;
  const char * _31;
  struct queue * pretmp_48;
  struct queue * prephitmp_49;
  int * * pretmp_52;
  int * * prephitmp_55;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyE + 16B];
  # DEBUG D#790 => &this_2(D)->_flit_sent_time
  # DEBUG this => D#790
  # DEBUG D#463 => &D#790->D.41195
  # DEBUG this => D#463
  _3 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_finish;
  __first_9 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_start;
  # DEBUG __first => __first_9
  # DEBUG __last => _3
  # DEBUG __first => __first_9
  if (_3 == __first_9)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_134 = PHI <__first_9(3), __first_12(12)>
  # DEBUG __first => __first_134
  # DEBUG __r => __first_134
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  # DEBUG D#789 => &MEM[(struct deque *)__first_134].D.43590
  # DEBUG this => D#789
  _14 = MEM[(struct _Deque_base *)__first_134]._M_impl._M_map;
  if (_14 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;

  <bb 5>:
  _15 = MEM[(struct _Deque_base *)__first_134]._M_impl._M_finish._M_node;
  _16 = _15 + 8;
  __nstart_17 = MEM[(struct _Deque_base *)__first_134]._M_impl._M_start._M_node;
  # DEBUG this => D#789
  # DEBUG __nstart => __nstart_17
  # DEBUG __nfinish => _16
  # DEBUG __n => __nstart_17
  # DEBUG __n => __nstart_17
  if (_16 <= __nstart_17)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __nstart_133 = PHI <__nstart_17(6), __nstart_20(8)>
  # DEBUG __n => __nstart_133
  _19 = *__nstart_133;
  # DEBUG this => D#789
  # DEBUG __p => _19
  # DEBUG __size => 4
  # DEBUG D#167 => &D#789->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _19
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _19
  # DEBUG this => D#140
  # DEBUG D.64056 => D#141
  operator delete (_19);
  __nstart_20 = __nstart_133 + 8;
  # DEBUG __n => __nstart_20
  # DEBUG __n => __nstart_20
  if (_16 <= __nstart_20)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 36>:
  pretmp_52 = MEM[(struct _Deque_base *)__first_134]._M_impl._M_map;

  <bb 10>:
  # prephitmp_55 = PHI <pretmp_52(36), _14(5)>
  # DEBUG D#447 => D#789->_M_impl._M_map_size
  # DEBUG D#792 => MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
  # DEBUG D#445 => D#789
  # DEBUG D#446 => D#447
  # DEBUG __p => D#792
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#792
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#792
  # DEBUG this => D#261
  # DEBUG D.64066 => D#262
  operator delete (prephitmp_55);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 11>:
  # DEBUG D#448 => &D#789->_M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  MEM[(struct  &)__first_134] ={v} {CLOBBER};
  __first_12 = __first_134 + 80;
  # DEBUG __first => __first_12
  # DEBUG __first => __first_12
  if (_3 == __first_12)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 4>;

  <bb 13>:

  <bb 35>:
  pretmp_48 = MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start;

  <bb 14>:
  # prephitmp_49 = PHI <pretmp_48(35), __first_9(2)>
  # DEBUG D#464 => &D#790->D.41195
  # DEBUG this => D#464
  # DEBUG D#260 => D#464->_M_impl._M_end_of_storage
  # DEBUG D#259 => (long int) D#260
  # DEBUG D#791 => MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
  # DEBUG D#258 => (long int) D#791
  # DEBUG D#257 => D#259 - D#258
  # DEBUG D#256 => D#257 /[ex] 80
  # DEBUG D#253 => D#464
  # DEBUG D#254 => (long unsigned int) D#256
  # DEBUG __p => D#791
  # DEBUG this => D#253
  # DEBUG __n => D#254
  # DEBUG D#252 => D#254
  # DEBUG D#251 => D#253
  if (prephitmp_49 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#250 => &D#251->_M_impl
  # DEBUG D#248 => D#250
  # DEBUG D#249 => D#252
  # DEBUG __p => D#791
  # DEBUG __a => D#248
  # DEBUG __n => D#249
  # DEBUG D#247 => D#249
  # DEBUG D#246 => D#248
  # DEBUG D#244 => D#246
  # DEBUG D#245 => D#247
  # DEBUG __p => D#791
  # DEBUG this => D#244
  # DEBUG D.64036 => D#245
  operator delete (prephitmp_49);

  <bb 16>:
  # DEBUG D#255 => &D#464->_M_impl
  # DEBUG this => D#255
  # DEBUG this => D#255
  # DEBUG this => D#255
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466 => &this_2(D)->_round_trip_time
  # DEBUG this => D#466
  # DEBUG D#154 => &D#466->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#466->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#466->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#466->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _6 = MEM[(struct _Vector_base *)this_2(D) + 248B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _6
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _6
  # DEBUG __n => D#148
  if (_6 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _6
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _6
  # DEBUG this => D#140
  # DEBUG D.63995 => D#141
  operator delete (_6);

  <bb 18>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465 => &this_2(D)->_occupancy_limit
  # DEBUG this => D#465
  # DEBUG D#154 => &D#465->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#465->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#465->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#465->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _7 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _7
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _7
  # DEBUG __n => D#148
  if (_7 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _7
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _7
  # DEBUG this => D#140
  # DEBUG D.64010 => D#141
  operator delete (_7);

  <bb 20>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#788 => &this_2(D)->D.41247
  # DEBUG this => D#788
  MEM[(struct SharedBufferPolicy *)this_2(D)].D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState18SharedBufferPolicyE + 16B];
  # DEBUG D#224 => &D#788->_reserved_slots
  # DEBUG this => D#224
  # DEBUG D#154 => &D#224->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#224->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#224->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#224->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _22 = MEM[(struct _Vector_base *)this_2(D) + 192B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _22
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _22
  # DEBUG __n => D#148
  if (_22 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _22
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _22
  # DEBUG this => D#140
  # DEBUG D.64079 => D#141
  operator delete (_22);

  <bb 22>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223 => &D#788->_private_buf_occupancy
  # DEBUG this => D#223
  # DEBUG D#154 => &D#223->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#223->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#223->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#223->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _23 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _23
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _23
  # DEBUG __n => D#148
  if (_23 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _23
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _23
  # DEBUG this => D#140
  # DEBUG D.64094 => D#141
  operator delete (_23);

  <bb 24>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222 => &D#788->_private_buf_size
  # DEBUG this => D#222
  # DEBUG D#154 => &D#222->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#222->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#222->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#222->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _24 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _24
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _24
  # DEBUG __n => D#148
  if (_24 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _24
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _24
  # DEBUG this => D#140
  # DEBUG D.64109 => D#141
  operator delete (_24);

  <bb 26>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221 => &D#788->_private_buf_vc_map
  # DEBUG this => D#221
  # DEBUG D#154 => &D#221->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#221->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#221->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#221->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _25 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _25
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _25
  # DEBUG __n => D#148
  if (_25 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _25
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _25
  # DEBUG this => D#140
  # DEBUG D.64124 => D#141
  operator delete (_25);

  <bb 28>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220 => &D#788->D.40291
  # DEBUG this => D#220
  # DEBUG D#787 => &MEM[(struct BufferPolicy *)this_2(D)].D.39647
  # DEBUG this => D#787
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#219 => &D#787->_children
  # DEBUG this => D#219
  # DEBUG D#213 => &D#219->D.30368
  # DEBUG this => D#213
  # DEBUG D#216 => D#219->D.30368._M_impl._M_finish
  # DEBUG D#215 => D#219->D.30368._M_impl._M_start
  # DEBUG D#118 => D#215
  # DEBUG D#119 => D#216
  # DEBUG __first => D#118
  # DEBUG __last => D#119
  # DEBUG D.54613 => D#120
  # DEBUG D#117 => D#119
  # DEBUG D#116 => D#118
  # DEBUG D#114 => D#116
  # DEBUG D#115 => D#117
  # DEBUG __first => D#114
  # DEBUG __last => D#115
  # DEBUG D#113 => D#115
  # DEBUG D#112 => D#114
  # DEBUG D#110 => D#112
  # DEBUG D#111 => D#113
  # DEBUG D.54025 => D#110
  # DEBUG D.54024 => D#111
  # DEBUG D#214 => &D#219->D.30368
  # DEBUG this => D#214
  # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
  # DEBUG D#211 => (long int) D#212
  _27 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#210 => (long int) _27
  # DEBUG D#209 => D#211 - D#210
  # DEBUG D#208 => D#209 /[ex] 8
  # DEBUG D#205 => D#214
  # DEBUG D#206 => (long unsigned int) D#208
  # DEBUG __p => _27
  # DEBUG this => D#205
  # DEBUG __n => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#205
  if (_27 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#202 => &D#203->_M_impl
  # DEBUG D#200 => D#202
  # DEBUG D#201 => D#204
  # DEBUG __p => _27
  # DEBUG __a => D#200
  # DEBUG __n => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG D#196 => D#198
  # DEBUG D#197 => D#199
  # DEBUG __p => _27
  # DEBUG this => D#196
  # DEBUG D.64141 => D#197
  operator delete (_27);

  <bb 30>:
  # DEBUG D#207 => &D#214->_M_impl
  # DEBUG this => D#207
  # DEBUG this => D#207
  # DEBUG this => D#207
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218 => &D#787->_fullname
  # DEBUG this => D#218
  # DEBUG this => D#218
  # DEBUG this => D#218
  _28 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#218
  # DEBUG this => D#1
  # DEBUG this => D#218
  _29 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_28 != _29)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#188 => MEM[(struct basic_string *)D#218].D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => D#218
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => D#218
  # DEBUG this => D#1
  # DEBUG this => D#218
  # DEBUG D#185 => &MEM[(struct basic_string *)D#218]._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _28
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _28
  # DEBUG this => D#179
  # DEBUG D.64154 => D#180
  operator delete (_28);

  <bb 32>:
  # DEBUG D#189 => &MEM[(struct basic_string *)D#218]._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217 => &D#787->_name
  # DEBUG this => D#217
  # DEBUG this => D#217
  # DEBUG this => D#217
  _30 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#217
  # DEBUG this => D#1
  # DEBUG this => D#217
  _31 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_30 != _31)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#188 => MEM[(struct basic_string *)D#217].D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => D#217
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => D#217
  # DEBUG this => D#1
  # DEBUG this => D#217
  # DEBUG D#185 => &MEM[(struct basic_string *)D#217]._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _30
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _30
  # DEBUG this => D#179
  # DEBUG D.64169 => D#180
  operator delete (_30);

  <bb 34>:
  # DEBUG D#189 => &MEM[(struct basic_string *)D#217]._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function BufferState::SimpleFeedbackSharedBufferPolicy::~SimpleFeedbackSharedBufferPolicy() (_ZN11BufferState32SimpleFeedbackSharedBufferPolicyD2Ev, funcdef_no=2923, decl_uid=41282, cgraph_uid=1390, symbol_order=1393)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
BufferState::SimpleFeedbackSharedBufferPolicy::~SimpleFeedbackSharedBufferPolicy() (struct SimpleFeedbackSharedBufferPolicy * const this)
{
  int * * __nstart;
  struct queue * __first;
  struct queue * _6;
  int * _8;
  int * * pretmp_10;
  int * * prephitmp_11;
  int * _16;
  int * _17;
  int * * _24;
  int * * _25;
  int * * _26;
  int * _29;
  int * _32;
  int * _33;
  int * _34;
  int * _35;
  struct Module * * _37;
  char * const _38;
  const char * _39;
  char * const _40;
  const char * _41;
  struct queue * pretmp_59;
  struct queue * prephitmp_60;

  <bb 2>:
  this_2(D)->D.41295.D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState32SimpleFeedbackSharedBufferPolicyE + 16B];
  # DEBUG D#467 => &this_2(D)->_pending_credits
  # DEBUG this => D#467
  # DEBUG D#154 => &D#467->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#467->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#467->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#467->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _8 = MEM[(struct _Vector_base *)this_2(D) + 312B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _8
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _8
  # DEBUG __n => D#148
  if (_8 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _8
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _8
  # DEBUG this => D#140
  # DEBUG D.57810 => D#141
  operator delete (_8);

  <bb 4>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 312] ={v} {CLOBBER};
  # DEBUG D#805 => &this_2(D)->D.41295
  # DEBUG this => D#805
  MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)].D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyE + 16B];
  # DEBUG D#804 => &MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)]._flit_sent_time
  # DEBUG this => D#804
  # DEBUG D#463 => &D#804->D.41195
  # DEBUG this => D#463
  _6 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_finish;
  __first_19 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_start;
  # DEBUG __first => __first_19
  # DEBUG __last => _6
  # DEBUG __first => __first_19
  if (_6 == __first_19)
    goto <bb 16>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __first_36 = PHI <__first_19(5), __first_22(14)>
  # DEBUG __first => __first_36
  # DEBUG __r => __first_36
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  # DEBUG D#803 => &MEM[(struct deque *)__first_36].D.43590
  # DEBUG this => D#803
  _24 = MEM[(struct _Deque_base *)__first_36]._M_impl._M_map;
  if (_24 != 0B)
    goto <bb 7>;
  else
    goto <bb 13>;

  <bb 7>:
  _25 = MEM[(struct _Deque_base *)__first_36]._M_impl._M_finish._M_node;
  _26 = _25 + 8;
  __nstart_27 = MEM[(struct _Deque_base *)__first_36]._M_impl._M_start._M_node;
  # DEBUG this => D#803
  # DEBUG __nstart => __nstart_27
  # DEBUG __nfinish => _26
  # DEBUG __n => __nstart_27
  # DEBUG __n => __nstart_27
  if (_26 <= __nstart_27)
    goto <bb 12>;
  else
    goto <bb 8>;

  <bb 8>:

  <bb 9>:
  # __nstart_145 = PHI <__nstart_27(8), __nstart_30(10)>
  # DEBUG __n => __nstart_145
  _29 = *__nstart_145;
  # DEBUG this => D#803
  # DEBUG __p => _29
  # DEBUG __size => 4
  # DEBUG D#167 => &D#803->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _29
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _29
  # DEBUG this => D#140
  # DEBUG D.64725 => D#141
  operator delete (_29);
  __nstart_30 = __nstart_145 + 8;
  # DEBUG __n => __nstart_30
  # DEBUG __n => __nstart_30
  if (_26 <= __nstart_30)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:

  <bb 38>:
  pretmp_10 = MEM[(struct _Deque_base *)__first_36]._M_impl._M_map;

  <bb 12>:
  # prephitmp_11 = PHI <pretmp_10(38), _24(7)>
  # DEBUG D#447 => D#803->_M_impl._M_map_size
  # DEBUG D#807 => MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
  # DEBUG D#445 => D#803
  # DEBUG D#446 => D#447
  # DEBUG __p => D#807
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#807
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#807
  # DEBUG this => D#261
  # DEBUG D.64735 => D#262
  operator delete (prephitmp_11);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 13>:
  # DEBUG D#448 => &D#803->_M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  MEM[(struct  &)__first_36] ={v} {CLOBBER};
  __first_22 = __first_36 + 80;
  # DEBUG __first => __first_22
  # DEBUG __first => __first_22
  if (_6 == __first_22)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 6>;

  <bb 15>:

  <bb 37>:
  pretmp_59 = MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start;

  <bb 16>:
  # prephitmp_60 = PHI <pretmp_59(37), __first_19(4)>
  # DEBUG D#464 => &D#804->D.41195
  # DEBUG this => D#464
  # DEBUG D#260 => D#464->_M_impl._M_end_of_storage
  # DEBUG D#259 => (long int) D#260
  # DEBUG D#806 => MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
  # DEBUG D#258 => (long int) D#806
  # DEBUG D#257 => D#259 - D#258
  # DEBUG D#256 => D#257 /[ex] 80
  # DEBUG D#253 => D#464
  # DEBUG D#254 => (long unsigned int) D#256
  # DEBUG __p => D#806
  # DEBUG this => D#253
  # DEBUG __n => D#254
  # DEBUG D#252 => D#254
  # DEBUG D#251 => D#253
  if (prephitmp_60 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG D#250 => &D#251->_M_impl
  # DEBUG D#248 => D#250
  # DEBUG D#249 => D#252
  # DEBUG __p => D#806
  # DEBUG __a => D#248
  # DEBUG __n => D#249
  # DEBUG D#247 => D#249
  # DEBUG D#246 => D#248
  # DEBUG D#244 => D#246
  # DEBUG D#245 => D#247
  # DEBUG __p => D#806
  # DEBUG this => D#244
  # DEBUG D.64705 => D#245
  operator delete (prephitmp_60);

  <bb 18>:
  # DEBUG D#255 => &D#464->_M_impl
  # DEBUG this => D#255
  # DEBUG this => D#255
  # DEBUG this => D#255
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466 => &D#805->_round_trip_time
  # DEBUG this => D#466
  # DEBUG D#154 => &D#466->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#466->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#466->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#466->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _16 = MEM[(struct _Vector_base *)this_2(D) + 248B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _16
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _16
  # DEBUG __n => D#148
  if (_16 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _16
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _16
  # DEBUG this => D#140
  # DEBUG D.64664 => D#141
  operator delete (_16);

  <bb 20>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465 => &D#805->_occupancy_limit
  # DEBUG this => D#465
  # DEBUG D#154 => &D#465->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#465->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#465->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#465->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _17 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _17
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _17
  # DEBUG __n => D#148
  if (_17 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _17
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _17
  # DEBUG this => D#140
  # DEBUG D.64679 => D#141
  operator delete (_17);

  <bb 22>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#802 => &MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)].D.41247
  # DEBUG this => D#802
  MEM[(struct SharedBufferPolicy *)this_2(D)].D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState18SharedBufferPolicyE + 16B];
  # DEBUG D#224 => &D#802->_reserved_slots
  # DEBUG this => D#224
  # DEBUG D#154 => &D#224->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#224->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#224->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#224->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _32 = MEM[(struct _Vector_base *)this_2(D) + 192B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _32
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _32
  # DEBUG __n => D#148
  if (_32 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _32
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _32
  # DEBUG this => D#140
  # DEBUG D.64748 => D#141
  operator delete (_32);

  <bb 24>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223 => &D#802->_private_buf_occupancy
  # DEBUG this => D#223
  # DEBUG D#154 => &D#223->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#223->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#223->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#223->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _33 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _33
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _33
  # DEBUG __n => D#148
  if (_33 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _33
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _33
  # DEBUG this => D#140
  # DEBUG D.64763 => D#141
  operator delete (_33);

  <bb 26>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222 => &D#802->_private_buf_size
  # DEBUG this => D#222
  # DEBUG D#154 => &D#222->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#222->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#222->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#222->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _34 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _34
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _34
  # DEBUG __n => D#148
  if (_34 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _34
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _34
  # DEBUG this => D#140
  # DEBUG D.64778 => D#141
  operator delete (_34);

  <bb 28>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221 => &D#802->_private_buf_vc_map
  # DEBUG this => D#221
  # DEBUG D#154 => &D#221->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#221->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#221->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#221->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _35 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _35
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _35
  # DEBUG __n => D#148
  if (_35 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _35
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _35
  # DEBUG this => D#140
  # DEBUG D.64793 => D#141
  operator delete (_35);

  <bb 30>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220 => &D#802->D.40291
  # DEBUG this => D#220
  # DEBUG D#801 => &MEM[(struct BufferPolicy *)this_2(D)].D.39647
  # DEBUG this => D#801
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#219 => &D#801->_children
  # DEBUG this => D#219
  # DEBUG D#213 => &D#219->D.30368
  # DEBUG this => D#213
  # DEBUG D#216 => D#219->D.30368._M_impl._M_finish
  # DEBUG D#215 => D#219->D.30368._M_impl._M_start
  # DEBUG D#118 => D#215
  # DEBUG D#119 => D#216
  # DEBUG __first => D#118
  # DEBUG __last => D#119
  # DEBUG D.54613 => D#120
  # DEBUG D#117 => D#119
  # DEBUG D#116 => D#118
  # DEBUG D#114 => D#116
  # DEBUG D#115 => D#117
  # DEBUG __first => D#114
  # DEBUG __last => D#115
  # DEBUG D#113 => D#115
  # DEBUG D#112 => D#114
  # DEBUG D#110 => D#112
  # DEBUG D#111 => D#113
  # DEBUG D.54025 => D#110
  # DEBUG D.54024 => D#111
  # DEBUG D#214 => &D#219->D.30368
  # DEBUG this => D#214
  # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
  # DEBUG D#211 => (long int) D#212
  _37 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#210 => (long int) _37
  # DEBUG D#209 => D#211 - D#210
  # DEBUG D#208 => D#209 /[ex] 8
  # DEBUG D#205 => D#214
  # DEBUG D#206 => (long unsigned int) D#208
  # DEBUG __p => _37
  # DEBUG this => D#205
  # DEBUG __n => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#205
  if (_37 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#202 => &D#203->_M_impl
  # DEBUG D#200 => D#202
  # DEBUG D#201 => D#204
  # DEBUG __p => _37
  # DEBUG __a => D#200
  # DEBUG __n => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG D#196 => D#198
  # DEBUG D#197 => D#199
  # DEBUG __p => _37
  # DEBUG this => D#196
  # DEBUG D.64810 => D#197
  operator delete (_37);

  <bb 32>:
  # DEBUG D#207 => &D#214->_M_impl
  # DEBUG this => D#207
  # DEBUG this => D#207
  # DEBUG this => D#207
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218 => &D#801->_fullname
  # DEBUG this => D#218
  # DEBUG this => D#218
  # DEBUG this => D#218
  _38 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#218
  # DEBUG this => D#1
  # DEBUG this => D#218
  _39 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_38 != _39)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#188 => MEM[(struct basic_string *)D#218].D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => D#218
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => D#218
  # DEBUG this => D#1
  # DEBUG this => D#218
  # DEBUG D#185 => &MEM[(struct basic_string *)D#218]._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _38
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _38
  # DEBUG this => D#179
  # DEBUG D.64823 => D#180
  operator delete (_38);

  <bb 34>:
  # DEBUG D#189 => &MEM[(struct basic_string *)D#218]._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217 => &D#801->_name
  # DEBUG this => D#217
  # DEBUG this => D#217
  # DEBUG this => D#217
  _40 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#217
  # DEBUG this => D#1
  # DEBUG this => D#217
  _41 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_40 != _41)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG D#188 => MEM[(struct basic_string *)D#217].D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => D#217
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => D#217
  # DEBUG this => D#1
  # DEBUG this => D#217
  # DEBUG D#185 => &MEM[(struct basic_string *)D#217]._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _40
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _40
  # DEBUG this => D#179
  # DEBUG D.64838 => D#180
  operator delete (_40);

  <bb 36>:
  # DEBUG D#189 => &MEM[(struct basic_string *)D#217]._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function BufferState::FeedbackSharedBufferPolicy::~FeedbackSharedBufferPolicy() (_ZN11BufferState26FeedbackSharedBufferPolicyD2Ev, funcdef_no=2196, decl_uid=41234, cgraph_uid=662, symbol_order=663)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
BufferState::FeedbackSharedBufferPolicy::~FeedbackSharedBufferPolicy() (struct FeedbackSharedBufferPolicy * const this)
{
  int * * __nstart;
  struct queue * __first;
  int * * _5;
  int * _7;
  struct Module * * _9;
  int * _11;
  struct queue * _25;
  int * * _31;
  int * * _32;
  int * _35;
  int * _38;
  int * _39;
  int * _40;
  int * _41;
  char * const _43;
  const char * _44;
  char * const _45;
  const char * _46;
  struct queue * pretmp_60;
  struct queue * prephitmp_61;
  int * * pretmp_64;
  int * * prephitmp_67;

  <bb 2>:
  this_2(D)->D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyE + 16B];
  # DEBUG D#811 => &this_2(D)->_flit_sent_time
  # DEBUG this => D#811
  # DEBUG D#463 => &D#811->D.41195
  # DEBUG this => D#463
  _25 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_finish;
  __first_26 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_start;
  # DEBUG __first => __first_26
  # DEBUG __last => _25
  # DEBUG __first => __first_26
  if (_25 == __first_26)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_133 = PHI <__first_26(3), __first_29(12)>
  # DEBUG __first => __first_133
  # DEBUG __r => __first_133
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  # DEBUG D#810 => &MEM[(struct deque *)__first_133].D.43590
  # DEBUG this => D#810
  _5 = MEM[(struct _Deque_base *)__first_133]._M_impl._M_map;
  if (_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;

  <bb 5>:
  _31 = MEM[(struct _Deque_base *)__first_133]._M_impl._M_finish._M_node;
  _32 = _31 + 8;
  __nstart_33 = MEM[(struct _Deque_base *)__first_133]._M_impl._M_start._M_node;
  # DEBUG this => D#810
  # DEBUG __nstart => __nstart_33
  # DEBUG __nfinish => _32
  # DEBUG __n => __nstart_33
  # DEBUG __n => __nstart_33
  if (_32 <= __nstart_33)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __nstart_132 = PHI <__nstart_33(6), __nstart_36(8)>
  # DEBUG __n => __nstart_132
  _35 = *__nstart_132;
  # DEBUG this => D#810
  # DEBUG __p => _35
  # DEBUG __size => 4
  # DEBUG D#167 => &D#810->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _35
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _35
  # DEBUG this => D#140
  # DEBUG D.64907 => D#141
  operator delete (_35);
  __nstart_36 = __nstart_132 + 8;
  # DEBUG __n => __nstart_36
  # DEBUG __n => __nstart_36
  if (_32 <= __nstart_36)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 36>:
  pretmp_64 = MEM[(struct _Deque_base *)__first_133]._M_impl._M_map;

  <bb 10>:
  # prephitmp_67 = PHI <pretmp_64(36), _5(5)>
  # DEBUG D#447 => D#810->_M_impl._M_map_size
  # DEBUG D#813 => MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
  # DEBUG D#445 => D#810
  # DEBUG D#446 => D#447
  # DEBUG __p => D#813
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#813
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#813
  # DEBUG this => D#261
  # DEBUG D.64917 => D#262
  operator delete (prephitmp_67);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 11>:
  # DEBUG D#448 => &D#810->_M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  MEM[(struct  &)__first_133] ={v} {CLOBBER};
  __first_29 = __first_133 + 80;
  # DEBUG __first => __first_29
  # DEBUG __first => __first_29
  if (_25 == __first_29)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 4>;

  <bb 13>:

  <bb 35>:
  pretmp_60 = MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start;

  <bb 14>:
  # prephitmp_61 = PHI <pretmp_60(35), __first_26(2)>
  # DEBUG D#464 => &D#811->D.41195
  # DEBUG this => D#464
  # DEBUG D#260 => D#464->_M_impl._M_end_of_storage
  # DEBUG D#259 => (long int) D#260
  # DEBUG D#812 => MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
  # DEBUG D#258 => (long int) D#812
  # DEBUG D#257 => D#259 - D#258
  # DEBUG D#256 => D#257 /[ex] 80
  # DEBUG D#253 => D#464
  # DEBUG D#254 => (long unsigned int) D#256
  # DEBUG __p => D#812
  # DEBUG this => D#253
  # DEBUG __n => D#254
  # DEBUG D#252 => D#254
  # DEBUG D#251 => D#253
  if (prephitmp_61 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#250 => &D#251->_M_impl
  # DEBUG D#248 => D#250
  # DEBUG D#249 => D#252
  # DEBUG __p => D#812
  # DEBUG __a => D#248
  # DEBUG __n => D#249
  # DEBUG D#247 => D#249
  # DEBUG D#246 => D#248
  # DEBUG D#244 => D#246
  # DEBUG D#245 => D#247
  # DEBUG __p => D#812
  # DEBUG this => D#244
  # DEBUG D.64887 => D#245
  operator delete (prephitmp_61);

  <bb 16>:
  # DEBUG D#255 => &D#464->_M_impl
  # DEBUG this => D#255
  # DEBUG this => D#255
  # DEBUG this => D#255
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466 => &this_2(D)->_round_trip_time
  # DEBUG this => D#466
  # DEBUG D#154 => &D#466->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#466->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#466->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#466->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _7 = MEM[(struct _Vector_base *)this_2(D) + 248B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _7
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _7
  # DEBUG __n => D#148
  if (_7 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _7
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _7
  # DEBUG this => D#140
  # DEBUG D.57793 => D#141
  operator delete (_7);

  <bb 18>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465 => &this_2(D)->_occupancy_limit
  # DEBUG this => D#465
  # DEBUG D#154 => &D#465->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#465->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#465->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#465->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _11 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _11
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _11
  # DEBUG __n => D#148
  if (_11 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _11
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _11
  # DEBUG this => D#140
  # DEBUG D.57778 => D#141
  operator delete (_11);

  <bb 20>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#809 => &this_2(D)->D.41247
  # DEBUG this => D#809
  MEM[(struct SharedBufferPolicy *)this_2(D)].D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState18SharedBufferPolicyE + 16B];
  # DEBUG D#224 => &D#809->_reserved_slots
  # DEBUG this => D#224
  # DEBUG D#154 => &D#224->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#224->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#224->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#224->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _38 = MEM[(struct _Vector_base *)this_2(D) + 192B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _38
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _38
  # DEBUG __n => D#148
  if (_38 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _38
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _38
  # DEBUG this => D#140
  # DEBUG D.64930 => D#141
  operator delete (_38);

  <bb 22>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223 => &D#809->_private_buf_occupancy
  # DEBUG this => D#223
  # DEBUG D#154 => &D#223->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#223->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#223->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#223->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _39 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _39
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _39
  # DEBUG __n => D#148
  if (_39 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _39
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _39
  # DEBUG this => D#140
  # DEBUG D.64945 => D#141
  operator delete (_39);

  <bb 24>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222 => &D#809->_private_buf_size
  # DEBUG this => D#222
  # DEBUG D#154 => &D#222->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#222->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#222->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#222->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _40 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _40
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _40
  # DEBUG __n => D#148
  if (_40 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _40
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _40
  # DEBUG this => D#140
  # DEBUG D.64960 => D#141
  operator delete (_40);

  <bb 26>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221 => &D#809->_private_buf_vc_map
  # DEBUG this => D#221
  # DEBUG D#154 => &D#221->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#221->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#221->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#221->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _41 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _41
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _41
  # DEBUG __n => D#148
  if (_41 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _41
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _41
  # DEBUG this => D#140
  # DEBUG D.64975 => D#141
  operator delete (_41);

  <bb 28>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220 => &D#809->D.40291
  # DEBUG this => D#220
  # DEBUG D#808 => &MEM[(struct BufferPolicy *)this_2(D)].D.39647
  # DEBUG this => D#808
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#219 => &D#808->_children
  # DEBUG this => D#219
  # DEBUG D#213 => &D#219->D.30368
  # DEBUG this => D#213
  # DEBUG D#216 => D#219->D.30368._M_impl._M_finish
  # DEBUG D#215 => D#219->D.30368._M_impl._M_start
  # DEBUG D#118 => D#215
  # DEBUG D#119 => D#216
  # DEBUG __first => D#118
  # DEBUG __last => D#119
  # DEBUG D.54613 => D#120
  # DEBUG D#117 => D#119
  # DEBUG D#116 => D#118
  # DEBUG D#114 => D#116
  # DEBUG D#115 => D#117
  # DEBUG __first => D#114
  # DEBUG __last => D#115
  # DEBUG D#113 => D#115
  # DEBUG D#112 => D#114
  # DEBUG D#110 => D#112
  # DEBUG D#111 => D#113
  # DEBUG D.54025 => D#110
  # DEBUG D.54024 => D#111
  # DEBUG D#214 => &D#219->D.30368
  # DEBUG this => D#214
  # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
  # DEBUG D#211 => (long int) D#212
  _9 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#210 => (long int) _9
  # DEBUG D#209 => D#211 - D#210
  # DEBUG D#208 => D#209 /[ex] 8
  # DEBUG D#205 => D#214
  # DEBUG D#206 => (long unsigned int) D#208
  # DEBUG __p => _9
  # DEBUG this => D#205
  # DEBUG __n => D#206
  # DEBUG D#204 => D#206
  # DEBUG D#203 => D#205
  if (_9 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#202 => &D#203->_M_impl
  # DEBUG D#200 => D#202
  # DEBUG D#201 => D#204
  # DEBUG __p => _9
  # DEBUG __a => D#200
  # DEBUG __n => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG D#196 => D#198
  # DEBUG D#197 => D#199
  # DEBUG __p => _9
  # DEBUG this => D#196
  # DEBUG D.64992 => D#197
  operator delete (_9);

  <bb 30>:
  # DEBUG D#207 => &D#214->_M_impl
  # DEBUG this => D#207
  # DEBUG this => D#207
  # DEBUG this => D#207
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218 => &D#808->_fullname
  # DEBUG this => D#218
  # DEBUG this => D#218
  # DEBUG this => D#218
  _43 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#218
  # DEBUG this => D#1
  # DEBUG this => D#218
  _44 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_43 != _44)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#188 => MEM[(struct basic_string *)D#218].D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => D#218
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => D#218
  # DEBUG this => D#1
  # DEBUG this => D#218
  # DEBUG D#185 => &MEM[(struct basic_string *)D#218]._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _43
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _43
  # DEBUG this => D#179
  # DEBUG D.65005 => D#180
  operator delete (_43);

  <bb 32>:
  # DEBUG D#189 => &MEM[(struct basic_string *)D#218]._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217 => &D#808->_name
  # DEBUG this => D#217
  # DEBUG this => D#217
  # DEBUG this => D#217
  _45 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#217
  # DEBUG this => D#1
  # DEBUG this => D#217
  _46 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_45 != _46)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#188 => MEM[(struct basic_string *)D#217].D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => D#217
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => D#217
  # DEBUG this => D#1
  # DEBUG this => D#217
  # DEBUG D#185 => &MEM[(struct basic_string *)D#217]._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _45
  # DEBUG this => D#179
  # DEBUG D.65020 => D#180
  operator delete (_45);

  <bb 34>:
  # DEBUG D#189 => &MEM[(struct basic_string *)D#217]._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function virtual void BufferState::SharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState18SharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2141, decl_uid=40255, cgraph_uid=608, symbol_order=609)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void BufferState::SharedBufferPolicy::SendingFlit(const Flit*) (struct SharedBufferPolicy * const this, const struct Flit * const f)
{
  size_type __dnew;
  int i;
  const int vc;
  const struct string D.42718;
  long unsigned int _8;
  int & _10;
  int _11;
  int _12;
  long unsigned int _15;
  int _16;
  int _17;
  int _19;
  int _20;
  int _21;
  int _23;
  int & _24;
  struct Module * _26;
  char * const _29;
  bool _33;
  long unsigned int _34;
  int _35;
  int _36;
  int * _39;
  int * _40;
  int * _41;
  int * _42;
  int * _43;
  long unsigned int _44;
  int & _45;
  int & _46;
  int & _47;
  char * const _48;
  int _59;
  int _60;
  int & _61;
  int * _65;
  char * _68;
  long unsigned int __dnew.49_69;
  long unsigned int __dnew.49_72;
  char * const _73;
  char * _74;
  int & _84;

  <bb 2>:
  vc_7 = f_6(D)->vc;
  # DEBUG vc => vc_7
  _8 = (long unsigned int) vc_7;
  # DEBUG D#334 => &this_9(D)->_reserved_slots
  _39 = MEM[(int * *)this_9(D) + 192B];
  # DEBUG D#43 => D#334
  # DEBUG __n => _8
  # DEBUG this => D#43
  _34 = _8 * 4;
  _24 = _39 + _34;
  _11 = *_24;
  if (_11 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#335 => &this_9(D)->_reserved_slots
  # DEBUG D#43 => D#335
  # DEBUG __n => _8
  # DEBUG this => D#43
  _12 = _11 + -1;
  *_24 = _12;
  goto <bb 11>;

  <bb 4>:
  # DEBUG D#336 => &this_9(D)->_private_buf_vc_map
  _40 = MEM[(int * *)this_9(D) + 112B];
  # DEBUG D#43 => D#336
  # DEBUG __n => _8
  # DEBUG this => D#43
  _46 = _40 + _34;
  i_14 = *_46;
  # DEBUG i => i_14
  _15 = (long unsigned int) i_14;
  # DEBUG D#337 => &this_9(D)->_private_buf_occupancy
  _41 = MEM[(int * *)this_9(D) + 160B];
  # DEBUG D#43 => D#337
  # DEBUG __n => _15
  # DEBUG this => D#43
  _44 = _15 * 4;
  _45 = _41 + _44;
  _16 = *_45;
  _17 = _16 + 1;
  *_45 = _17;
  # DEBUG D#338 => &this_9(D)->_private_buf_occupancy
  # DEBUG D#43 => D#338
  # DEBUG __n => _15
  # DEBUG this => D#43
  # DEBUG D#339 => &this_9(D)->_private_buf_size
  _42 = MEM[(int * *)this_9(D) + 136B];
  # DEBUG D#43 => D#339
  # DEBUG __n => _15
  # DEBUG this => D#43
  _10 = _42 + _44;
  _19 = *_10;
  if (_17 > _19)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  goto <bb 11>;

  <bb 6>:
  _20 = this_9(D)->_shared_buf_occupancy;
  _21 = _20 + 1;
  this_9(D)->_shared_buf_occupancy = _21;
  _23 = this_9(D)->_shared_buf_size;
  if (_21 > _23)
    goto <bb 7>;
  else
    goto <bb 5>;

  <bb 7>:
  # DEBUG D#63 => &D.42717
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42717
  # DEBUG this => &D.42718
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42718
  # DEBUG D#296 => &D.42718._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42718.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42718]._M_p = &D.42718.D.11539._M_local_buf;
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG this => &D.42718
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.42718
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.42718
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __ptr => "Shared buffer overflow."
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  __dnew = 23;
  _68 = std::__cxx11::basic_string<char>::_M_create (&D.42718, &__dnew, 0);
  # DEBUG D#7 => &D.42718
  # DEBUG __p => _68
  # DEBUG this => D#7
  MEM[(char * *)&D.42718] = _68;
  __dnew.49_69 = __dnew;
  # DEBUG D#8 => &D.42718
  # DEBUG __capacity => __dnew.49_69
  # DEBUG this => D#8
  MEM[(size_type *)&D.42718 + 16B] = __dnew.49_69;
  # DEBUG D#1 => &D.42718
  # DEBUG this => D#1
  # DEBUG __p => _68
  # DEBUG __k1 => "Shared buffer overflow."
  # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __d => _68
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __n => 23
  # DEBUG __s1 => _68
  # DEBUG __s2 => "Shared buffer overflow."
  # DEBUG __n => 23
  __builtin_memcpy (_68, "Shared buffer overflow.", 23);
  __dnew.49_72 = __dnew;
  # DEBUG this => &D.42718
  # DEBUG __n => __dnew.49_72
  # DEBUG D#9 => &D.42718
  # DEBUG __length => __dnew.49_72
  # DEBUG this => D#9
  MEM[(size_type *)&D.42718 + 8B] = __dnew.49_72;
  _73 = MEM[(char * *)&D.42718];
  # DEBUG D#1 => &D.42718
  # DEBUG this => D#1
  _74 = _73 + __dnew.49_72;
  # DEBUG __c1 => _74
  # DEBUG __c2 => D#10
  MEM[(char_type &)_74] = 0;
  __dnew ={v} {CLOBBER};
  _26 = &this_9(D)->D.40291.D.39647;
  Module::Error (_26, &D.42718);

  <bb 8>:
  # DEBUG this => &D.42718
  # DEBUG this => &D.42718
  # DEBUG this => &D.42718
  _29 = MEM[(char * *)&D.42718];
  # DEBUG D#1 => &D.42718
  # DEBUG this => D#1
  # DEBUG this => &D.42718
  if (&D.42718.D.11539._M_local_buf != _29)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#188 => D.42718.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42718
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42718
  # DEBUG this => D#1
  # DEBUG this => &D.42718
  # DEBUG D#185 => &D.42718._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _29
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _29
  # DEBUG this => D#179
  # DEBUG D.56357 => D#180
  operator delete (_29);

  <bb 10>:
  # DEBUG D#189 => &D.42718._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42718 ={v} {CLOBBER};
  # DEBUG this => &D.42717
  # DEBUG this => &D.42717

  <bb 11>:
  _33 = f_6(D)->tail;
  if (_33 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  return;

  <bb 13>:
  # DEBUG D#341 => &this_9(D)->_reserved_slots
  _65 = MEM[(int * *)this_9(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _8
  # DEBUG this => D#43
  _84 = _65 + _34;
  _60 = *_84;
  if (_60 != 0)
    goto <bb 14>;
  else
    goto <bb 12>;

  <bb 14>:

  <bb 15>:
  # _59 = PHI <_60(14), _35(16)>
  # _61 = PHI <_84(14), _47(16)>
  # DEBUG D#341 => &this_9(D)->_reserved_slots
  # DEBUG __n => _8
  # DEBUG this => D#43
  # DEBUG D#340 => &this_9(D)->_reserved_slots
  # DEBUG D#43 => D#340
  # DEBUG __n => _8
  # DEBUG this => D#43
  _36 = _59 + -1;
  *_61 = _36;
  BufferState::SharedBufferPolicy::ProcessFreeSlot (this_9(D), vc_7);
  # DEBUG D#341 => &this_9(D)->_reserved_slots
  _43 = MEM[(int * *)this_9(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _8
  # DEBUG this => D#43
  _47 = _43 + _34;
  _35 = *_47;
  if (_35 != 0)
    goto <bb 16>;
  else
    goto <bb 12>;

  <bb 16>:
  goto <bb 15>;

<L15>:
  # DEBUG this => &D.42718
  # DEBUG this => &D.42718
  # DEBUG this => &D.42718
  _48 = MEM[(char * *)&D.42718];
  # DEBUG D#1 => &D.42718
  # DEBUG this => D#1
  # DEBUG this => &D.42718
  if (&D.42718.D.11539._M_local_buf != _48)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#188 => D.42718.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42718
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42718
  # DEBUG this => D#1
  # DEBUG this => &D.42718
  # DEBUG D#185 => &D.42718._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _48
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _48
  # DEBUG this => D#179
  # DEBUG D.56380 => D#180
  operator delete (_48);

  <bb 19>:
  # DEBUG D#189 => &D.42718._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42718 ={v} {CLOBBER};
  resx 2

}



;; Function virtual void BufferState::DynamicLimitedSharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState32DynamicLimitedSharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2166, decl_uid=40367, cgraph_uid=633, symbol_order=634)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void BufferState::DynamicLimitedSharedBufferPolicy::SendingFlit(const Flit*) (struct DynamicLimitedSharedBufferPolicy * const this, const struct Flit * const f)
{
  size_type __dnew;
  size_type __dnew;
  int i;
  const int vc;
  const struct string D.66280;
  const struct string D.66231;
  int _9;
  int _10;
  struct SharedBufferPolicy * _14;
  bool _15;
  int _16;
  int _17;
  int prephitmp_18;
  char * const _19;
  char * const _20;
  long unsigned int _21;
  int * _22;
  long unsigned int _23;
  int & _24;
  int _25;
  int _26;
  int * _27;
  int & _28;
  long unsigned int _30;
  int * _31;
  long unsigned int _32;
  int & _33;
  int _34;
  int _35;
  int * _36;
  int & _37;
  int _38;
  int _39;
  int _40;
  int _41;
  char * const _43;
  bool _44;
  int * _45;
  int & _46;
  int _47;
  int _48;
  char * const _49;
  int * _56;
  int & _57;
  int _59;
  char * _60;
  long unsigned int __dnew.49_61;
  long unsigned int __dnew.49_64;
  char * const _65;
  char * _66;
  int _73;
  int & _74;
  char * _77;
  long unsigned int __dnew.49_78;
  int pretmp_79;
  long unsigned int __dnew.49_81;
  char * const _82;
  char * _83;
  int pretmp_123;
  int pretmp_130;
  int prephitmp_131;
  int pretmp_132;
  int prephitmp_133;
  const bool pretmp_137;
  const bool prephitmp_138;

  <bb 2>:
  # DEBUG D#885 => &this_2(D)->D.40391
  # DEBUG this => D#885
  # DEBUG f => f_5(D)
  _14 = &MEM[(struct LimitedSharedBufferPolicy *)this_2(D)].D.40349;
  # DEBUG this => _14
  # DEBUG f => f_5(D)
  vc_6 = f_5(D)->vc;
  # DEBUG vc => vc_6
  _21 = (long unsigned int) vc_6;
  # DEBUG D#334 => &_14->_reserved_slots
  _22 = MEM[(int * *)this_2(D) + 192B];
  # DEBUG D#43 => D#334
  # DEBUG __n => _21
  # DEBUG this => D#43
  _23 = _21 * 4;
  _24 = _22 + _23;
  _25 = *_24;
  if (_25 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#335 => &_14->_reserved_slots
  # DEBUG D#43 => D#335
  # DEBUG __n => _21
  # DEBUG this => D#43
  _26 = _25 + -1;
  *_24 = _26;
  goto <bb 11>;

  <bb 4>:
  # DEBUG D#336 => &_14->_private_buf_vc_map
  _27 = MEM[(int * *)this_2(D) + 112B];
  # DEBUG D#43 => D#336
  # DEBUG __n => _21
  # DEBUG this => D#43
  _28 = _27 + _23;
  i_29 = *_28;
  # DEBUG i => i_29
  _30 = (long unsigned int) i_29;
  # DEBUG D#337 => &_14->_private_buf_occupancy
  _31 = MEM[(int * *)this_2(D) + 160B];
  # DEBUG D#43 => D#337
  # DEBUG __n => _30
  # DEBUG this => D#43
  _32 = _30 * 4;
  _33 = _31 + _32;
  _34 = *_33;
  _35 = _34 + 1;
  *_33 = _35;
  # DEBUG D#338 => &_14->_private_buf_occupancy
  # DEBUG D#43 => D#338
  # DEBUG __n => _30
  # DEBUG this => D#43
  # DEBUG D#339 => &_14->_private_buf_size
  _36 = MEM[(int * *)this_2(D) + 136B];
  # DEBUG D#43 => D#339
  # DEBUG __n => _30
  # DEBUG this => D#43
  _37 = _36 + _32;
  _38 = *_37;
  if (_35 > _38)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 39>:
  goto <bb 11>;

  <bb 6>:
  _39 = MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy;
  _40 = _39 + 1;
  MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy = _40;
  _41 = MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_size;
  if (_40 > _41)
    goto <bb 7>;
  else
    goto <bb 5>;

  <bb 7>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => &D.66280
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.66280
  # DEBUG D#296 => &D.66280._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.66280.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.66280]._M_p = &D.66280.D.11539._M_local_buf;
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG this => &D.66280
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.66280
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.66280
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __ptr => "Shared buffer overflow."
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  __dnew = 23;
  _60 = std::__cxx11::basic_string<char>::_M_create (&D.66280, &__dnew, 0);
  # DEBUG D#7 => &D.66280
  # DEBUG __p => _60
  # DEBUG this => D#7
  MEM[(char * *)&D.66280] = _60;
  __dnew.49_61 = __dnew;
  # DEBUG D#8 => &D.66280
  # DEBUG __capacity => __dnew.49_61
  # DEBUG this => D#8
  MEM[(size_type *)&D.66280 + 16B] = __dnew.49_61;
  # DEBUG D#1 => &D.66280
  # DEBUG this => D#1
  # DEBUG __p => _60
  # DEBUG __k1 => "Shared buffer overflow."
  # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __d => _60
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __n => 23
  # DEBUG __s1 => _60
  # DEBUG __s2 => "Shared buffer overflow."
  # DEBUG __n => 23
  __builtin_memcpy (_60, "Shared buffer overflow.", 23);
  __dnew.49_64 = __dnew;
  # DEBUG this => &D.66280
  # DEBUG __n => __dnew.49_64
  # DEBUG D#9 => &D.66280
  # DEBUG __length => __dnew.49_64
  # DEBUG this => D#9
  MEM[(size_type *)&D.66280 + 8B] = __dnew.49_64;
  _65 = MEM[(char * *)&D.66280];
  # DEBUG D#1 => &D.66280
  # DEBUG this => D#1
  _66 = _65 + __dnew.49_64;
  # DEBUG __c1 => _66
  # DEBUG __c2 => D#10
  MEM[(char_type &)_66] = 0;
  __dnew ={v} {CLOBBER};
  Module::Error (_14, &D.66280);

  <bb 8>:
  # DEBUG this => &D.66280
  # DEBUG this => &D.66280
  # DEBUG this => &D.66280
  _43 = MEM[(char * *)&D.66280];
  # DEBUG D#1 => &D.66280
  # DEBUG this => D#1
  # DEBUG this => &D.66280
  if (&D.66280.D.11539._M_local_buf != _43)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#188 => D.66280.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66280
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66280
  # DEBUG this => D#1
  # DEBUG this => &D.66280
  # DEBUG D#185 => &D.66280._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _43
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _43
  # DEBUG this => D#179
  # DEBUG D.66265 => D#180
  operator delete (_43);

  <bb 10>:
  # DEBUG D#189 => &D.66280._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66280 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL

  <bb 11>:
  _44 = f_5(D)->tail;
  if (_44 != 0)
    goto <bb 12>;
  else
    goto <bb 29>;

  <bb 12>:
  # DEBUG D#341 => &_14->_reserved_slots
  _56 = MEM[(int * *)this_2(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _21
  # DEBUG this => D#43
  _57 = _56 + _23;
  _73 = *_57;
  if (_73 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  _16 = MEM[(struct LimitedSharedBufferPolicy *)this_2(D)]._active_vcs;
  _17 = _16 + -1;
  MEM[(struct LimitedSharedBufferPolicy *)this_2(D)]._active_vcs = _17;
  if (_17 < 0)
    goto <bb 22>;
  else
    goto <bb 32>;

  <bb 14>:

  <bb 15>:
  # _74 = PHI <_57(14), _46(16)>
  # _59 = PHI <_73(14), _47(16)>
  # DEBUG D#341 => &_14->_reserved_slots
  # DEBUG __n => _21
  # DEBUG this => D#43
  # DEBUG D#340 => &_14->_reserved_slots
  # DEBUG D#43 => D#340
  # DEBUG __n => _21
  # DEBUG this => D#43
  _48 = _59 + -1;
  *_74 = _48;
  BufferState::SharedBufferPolicy::ProcessFreeSlot (_14, vc_6);
  # DEBUG D#341 => &_14->_reserved_slots
  _45 = MEM[(int * *)this_2(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _21
  # DEBUG this => D#43
  _46 = _45 + _23;
  _47 = *_46;
  if (_47 != 0)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 16>:
  goto <bb 15>;

<L8>:
  # DEBUG this => &D.66280
  # DEBUG this => &D.66280
  # DEBUG this => &D.66280
  _49 = MEM[(char * *)&D.66280];
  # DEBUG D#1 => &D.66280
  # DEBUG this => D#1
  # DEBUG this => &D.66280
  if (&D.66280.D.11539._M_local_buf != _49)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#188 => D.66280.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66280
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66280
  # DEBUG this => D#1
  # DEBUG this => &D.66280
  # DEBUG D#185 => &D.66280._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _49
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _49
  # DEBUG this => D#179
  # DEBUG D.66250 => D#180
  operator delete (_49);

  <bb 19>:
  # DEBUG D#189 => &D.66280._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66280 ={v} {CLOBBER};
  resx 2

  <bb 20>:

  <bb 38>:
  _15 = f_5(D)->tail;
  if (_15 != 0)
    goto <bb 13>;
  else
    goto <bb 21>;

  <bb 21>:
  pretmp_130 = this_2(D)->D.40391._max_held_slots;
  goto <bb 41>;

  <bb 22>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => &D.66231
  # DEBUG __s => "Number of active VCs fell below zero."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.66231
  # DEBUG D#296 => &D.66231._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.66231.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.66231]._M_p = &D.66231.D.11539._M_local_buf;
  # DEBUG __s => "Number of active VCs fell below zero."
  # DEBUG this => &D.66231
  # DEBUG __beg => "Number of active VCs fell below zero."
  # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG this => &D.66231
  # DEBUG __beg => "Number of active VCs fell below zero."
  # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG this => &D.66231
  # DEBUG __beg => "Number of active VCs fell below zero."
  # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __ptr => "Number of active VCs fell below zero."
  # DEBUG __first => "Number of active VCs fell below zero."
  # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Number of active VCs fell below zero."
  # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  __dnew = 37;
  _77 = std::__cxx11::basic_string<char>::_M_create (&D.66231, &__dnew, 0);
  # DEBUG D#7 => &D.66231
  # DEBUG __p => _77
  # DEBUG this => D#7
  MEM[(char * *)&D.66231] = _77;
  __dnew.49_78 = __dnew;
  # DEBUG D#8 => &D.66231
  # DEBUG __capacity => __dnew.49_78
  # DEBUG this => D#8
  MEM[(size_type *)&D.66231 + 16B] = __dnew.49_78;
  # DEBUG D#1 => &D.66231
  # DEBUG this => D#1
  # DEBUG __p => _77
  # DEBUG __k1 => "Number of active VCs fell below zero."
  # DEBUG __k2 => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __d => _77
  # DEBUG __s => "Number of active VCs fell below zero."
  # DEBUG __n => 37
  # DEBUG __s1 => _77
  # DEBUG __s2 => "Number of active VCs fell below zero."
  # DEBUG __n => 37
  __builtin_memcpy (_77, "Number of active VCs fell below zero.", 37);
  __dnew.49_81 = __dnew;
  # DEBUG this => &D.66231
  # DEBUG __n => __dnew.49_81
  # DEBUG D#9 => &D.66231
  # DEBUG __length => __dnew.49_81
  # DEBUG this => D#9
  MEM[(size_type *)&D.66231 + 8B] = __dnew.49_81;
  _82 = MEM[(char * *)&D.66231];
  # DEBUG D#1 => &D.66231
  # DEBUG this => D#1
  _83 = _82 + __dnew.49_81;
  # DEBUG __c1 => _83
  # DEBUG __c2 => D#10
  MEM[(char_type &)_83] = 0;
  __dnew ={v} {CLOBBER};
  Module::Error (_14, &D.66231);

  <bb 23>:
  # DEBUG this => &D.66231
  # DEBUG this => &D.66231
  # DEBUG this => &D.66231
  _19 = MEM[(char * *)&D.66231];
  # DEBUG D#1 => &D.66231
  # DEBUG this => D#1
  # DEBUG this => &D.66231
  if (&D.66231.D.11539._M_local_buf != _19)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#188 => D.66231.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66231
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66231
  # DEBUG this => D#1
  # DEBUG this => &D.66231
  # DEBUG D#185 => &D.66231._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _19
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _19
  # DEBUG this => D#179
  # DEBUG D.66222 => D#180
  operator delete (_19);

  <bb 25>:
  # DEBUG D#189 => &D.66231._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66231 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  pretmp_137 = f_5(D)->tail;
  goto <bb 29>;

<L7>:
  # DEBUG this => &D.66231
  # DEBUG this => &D.66231
  # DEBUG this => &D.66231
  _20 = MEM[(char * *)&D.66231];
  # DEBUG D#1 => &D.66231
  # DEBUG this => D#1
  # DEBUG this => &D.66231
  if (&D.66231.D.11539._M_local_buf != _20)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG D#188 => D.66231.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66231
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66231
  # DEBUG this => D#1
  # DEBUG this => &D.66231
  # DEBUG D#185 => &D.66231._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _20
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _20
  # DEBUG this => D#179
  # DEBUG D.66207 => D#180
  operator delete (_20);

  <bb 28>:
  # DEBUG D#189 => &D.66231._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66231 ={v} {CLOBBER};
  resx 1

  <bb 29>:
  # prephitmp_138 = PHI <pretmp_137(25), _44(11)>
  if (prephitmp_138 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  pretmp_79 = this_2(D)->D.40391._max_held_slots;
  goto <bb 41>;

  <bb 31>:
  pretmp_132 = this_2(D)->D.40391._active_vcs;

  <bb 32>:
  # prephitmp_133 = PHI <pretmp_132(31), _17(13)>

  <bb 40>:
  if (prephitmp_133 != 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  pretmp_123 = this_2(D)->D.40391._max_held_slots;
  goto <bb 35>;

  <bb 34>:
  _9 = this_2(D)->D.40391.D.40349._buf_size;
  _10 = _9 / prephitmp_133;
  this_2(D)->D.40391._max_held_slots = _10;

  <bb 35>:
  # prephitmp_18 = PHI <_10(34), pretmp_123(33)>

  <bb 41>:
  # prephitmp_131 = PHI <prephitmp_18(35), pretmp_79(30), pretmp_130(21)>
  if (prephitmp_131 <= 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG D#342 => this_2(D)
  # DEBUG D#343 => f_5(D)
  # DEBUG D#344 => D#343
  # DEBUG f => D#344
  # DEBUG D#345 => D#342
  # DEBUG this => D#345
  __assert_fail ("_max_held_slots > 0", "buffer_state.cpp", 330, &__PRETTY_FUNCTION__);

  <bb 37>:
  return;

}



;; Function virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2175, decl_uid=40406, cgraph_uid=642, symbol_order=643)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::SendingFlit(const Flit*) (struct ShiftingDynamicLimitedSharedBufferPolicy * const this, const struct Flit * const f)
{
  bool this__F_F__max_held_slots_lsm.1458;
  int this__F_F__max_held_slots_lsm.1457;
  size_type __dnew;
  size_type __dnew;
  int i;
  const int vc;
  const struct string D.66473;
  const struct string D.66424;
  int i;
  int _12;
  int _15;
  struct SharedBufferPolicy * _20;
  bool _21;
  int _22;
  int _23;
  char * const _25;
  char * const _26;
  long unsigned int _27;
  int * _28;
  long unsigned int _29;
  int & _30;
  int _31;
  int _32;
  int * _33;
  int & _34;
  long unsigned int _36;
  int * _37;
  long unsigned int _38;
  int & _39;
  int _40;
  int _41;
  int * _42;
  int & _43;
  int _44;
  int _45;
  int _46;
  int _47;
  char * const _49;
  bool _50;
  int * _51;
  int & _52;
  int _53;
  int _54;
  char * const _55;
  int _58;
  char * _66;
  long unsigned int __dnew.49_67;
  long unsigned int __dnew.49_70;
  char * const _71;
  char * _72;
  int _78;
  int * _79;
  int & _80;
  int & _81;
  char * _83;
  long unsigned int __dnew.49_84;
  int pretmp_85;
  long unsigned int __dnew.49_87;
  char * const _88;
  char * _89;
  int _90;
  const bool pretmp_117;
  const bool prephitmp_118;
  int pretmp_129;
  int pretmp_136;
  int prephitmp_137;
  int pretmp_138;
  int prephitmp_139;
  int prephitmp_144;

  <bb 2>:
  # DEBUG D#892 => &this_4(D)->D.40430.D.40391
  # DEBUG this => D#892
  # DEBUG f => f_7(D)
  _20 = &MEM[(struct LimitedSharedBufferPolicy *)this_4(D)].D.40349;
  # DEBUG this => _20
  # DEBUG f => f_7(D)
  vc_8 = f_7(D)->vc;
  # DEBUG vc => vc_8
  _27 = (long unsigned int) vc_8;
  # DEBUG D#334 => &_20->_reserved_slots
  _28 = MEM[(int * *)this_4(D) + 192B];
  # DEBUG D#43 => D#334
  # DEBUG __n => _27
  # DEBUG this => D#43
  _29 = _27 * 4;
  _30 = _28 + _29;
  _31 = *_30;
  if (_31 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#335 => &_20->_reserved_slots
  # DEBUG D#43 => D#335
  # DEBUG __n => _27
  # DEBUG this => D#43
  _32 = _31 + -1;
  *_30 = _32;
  goto <bb 11>;

  <bb 4>:
  # DEBUG D#336 => &_20->_private_buf_vc_map
  _33 = MEM[(int * *)this_4(D) + 112B];
  # DEBUG D#43 => D#336
  # DEBUG __n => _27
  # DEBUG this => D#43
  _34 = _33 + _29;
  i_35 = *_34;
  # DEBUG i => i_35
  _36 = (long unsigned int) i_35;
  # DEBUG D#337 => &_20->_private_buf_occupancy
  _37 = MEM[(int * *)this_4(D) + 160B];
  # DEBUG D#43 => D#337
  # DEBUG __n => _36
  # DEBUG this => D#43
  _38 = _36 * 4;
  _39 = _37 + _38;
  _40 = *_39;
  _41 = _40 + 1;
  *_39 = _41;
  # DEBUG D#338 => &_20->_private_buf_occupancy
  # DEBUG D#43 => D#338
  # DEBUG __n => _36
  # DEBUG this => D#43
  # DEBUG D#339 => &_20->_private_buf_size
  _42 = MEM[(int * *)this_4(D) + 136B];
  # DEBUG D#43 => D#339
  # DEBUG __n => _36
  # DEBUG this => D#43
  _43 = _42 + _38;
  _44 = *_43;
  if (_41 > _44)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 44>:
  goto <bb 11>;

  <bb 6>:
  _45 = MEM[(struct SharedBufferPolicy *)this_4(D)]._shared_buf_occupancy;
  _46 = _45 + 1;
  MEM[(struct SharedBufferPolicy *)this_4(D)]._shared_buf_occupancy = _46;
  _47 = MEM[(struct SharedBufferPolicy *)this_4(D)]._shared_buf_size;
  if (_46 > _47)
    goto <bb 7>;
  else
    goto <bb 5>;

  <bb 7>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => &D.66473
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.66473
  # DEBUG D#296 => &D.66473._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.66473.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.66473]._M_p = &D.66473.D.11539._M_local_buf;
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG this => &D.66473
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.66473
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.66473
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __ptr => "Shared buffer overflow."
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  __dnew = 23;
  _66 = std::__cxx11::basic_string<char>::_M_create (&D.66473, &__dnew, 0);
  # DEBUG D#7 => &D.66473
  # DEBUG __p => _66
  # DEBUG this => D#7
  MEM[(char * *)&D.66473] = _66;
  __dnew.49_67 = __dnew;
  # DEBUG D#8 => &D.66473
  # DEBUG __capacity => __dnew.49_67
  # DEBUG this => D#8
  MEM[(size_type *)&D.66473 + 16B] = __dnew.49_67;
  # DEBUG D#1 => &D.66473
  # DEBUG this => D#1
  # DEBUG __p => _66
  # DEBUG __k1 => "Shared buffer overflow."
  # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __d => _66
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __n => 23
  # DEBUG __s1 => _66
  # DEBUG __s2 => "Shared buffer overflow."
  # DEBUG __n => 23
  __builtin_memcpy (_66, "Shared buffer overflow.", 23);
  __dnew.49_70 = __dnew;
  # DEBUG this => &D.66473
  # DEBUG __n => __dnew.49_70
  # DEBUG D#9 => &D.66473
  # DEBUG __length => __dnew.49_70
  # DEBUG this => D#9
  MEM[(size_type *)&D.66473 + 8B] = __dnew.49_70;
  _71 = MEM[(char * *)&D.66473];
  # DEBUG D#1 => &D.66473
  # DEBUG this => D#1
  _72 = _71 + __dnew.49_70;
  # DEBUG __c1 => _72
  # DEBUG __c2 => D#10
  MEM[(char_type &)_72] = 0;
  __dnew ={v} {CLOBBER};
  Module::Error (_20, &D.66473);

  <bb 8>:
  # DEBUG this => &D.66473
  # DEBUG this => &D.66473
  # DEBUG this => &D.66473
  _49 = MEM[(char * *)&D.66473];
  # DEBUG D#1 => &D.66473
  # DEBUG this => D#1
  # DEBUG this => &D.66473
  if (&D.66473.D.11539._M_local_buf != _49)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#188 => D.66473.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66473
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66473
  # DEBUG this => D#1
  # DEBUG this => &D.66473
  # DEBUG D#185 => &D.66473._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _49
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _49
  # DEBUG this => D#179
  # DEBUG D.66458 => D#180
  operator delete (_49);

  <bb 10>:
  # DEBUG D#189 => &D.66473._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66473 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL

  <bb 11>:
  _50 = f_7(D)->tail;
  if (_50 != 0)
    goto <bb 12>;
  else
    goto <bb 29>;

  <bb 12>:
  # DEBUG D#341 => &_20->_reserved_slots
  _79 = MEM[(int * *)this_4(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _27
  # DEBUG this => D#43
  _80 = _79 + _29;
  _90 = *_80;
  if (_90 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  _22 = MEM[(struct LimitedSharedBufferPolicy *)this_4(D)]._active_vcs;
  _23 = _22 + -1;
  MEM[(struct LimitedSharedBufferPolicy *)this_4(D)]._active_vcs = _23;
  if (_23 < 0)
    goto <bb 22>;
  else
    goto <bb 32>;

  <bb 14>:

  <bb 15>:
  # _81 = PHI <_80(14), _52(16)>
  # _78 = PHI <_90(14), _53(16)>
  # DEBUG D#341 => &_20->_reserved_slots
  # DEBUG __n => _27
  # DEBUG this => D#43
  # DEBUG D#340 => &_20->_reserved_slots
  # DEBUG D#43 => D#340
  # DEBUG __n => _27
  # DEBUG this => D#43
  _54 = _78 + -1;
  *_81 = _54;
  BufferState::SharedBufferPolicy::ProcessFreeSlot (_20, vc_8);
  # DEBUG D#341 => &_20->_reserved_slots
  _51 = MEM[(int * *)this_4(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _27
  # DEBUG this => D#43
  _52 = _51 + _29;
  _53 = *_52;
  if (_53 != 0)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 16>:
  goto <bb 15>;

<L11>:
  # DEBUG this => &D.66473
  # DEBUG this => &D.66473
  # DEBUG this => &D.66473
  _55 = MEM[(char * *)&D.66473];
  # DEBUG D#1 => &D.66473
  # DEBUG this => D#1
  # DEBUG this => &D.66473
  if (&D.66473.D.11539._M_local_buf != _55)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#188 => D.66473.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66473
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66473
  # DEBUG this => D#1
  # DEBUG this => &D.66473
  # DEBUG D#185 => &D.66473._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _55
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _55
  # DEBUG this => D#179
  # DEBUG D.66443 => D#180
  operator delete (_55);

  <bb 19>:
  # DEBUG D#189 => &D.66473._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66473 ={v} {CLOBBER};
  resx 2

  <bb 20>:

  <bb 43>:
  _21 = f_7(D)->tail;
  if (_21 != 0)
    goto <bb 13>;
  else
    goto <bb 21>;

  <bb 21>:
  pretmp_136 = this_4(D)->D.40430.D.40391._max_held_slots;
  goto <bb 39>;

  <bb 22>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => &D.66424
  # DEBUG __s => "Number of active VCs fell below zero."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.66424
  # DEBUG D#296 => &D.66424._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.66424.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.66424]._M_p = &D.66424.D.11539._M_local_buf;
  # DEBUG __s => "Number of active VCs fell below zero."
  # DEBUG this => &D.66424
  # DEBUG __beg => "Number of active VCs fell below zero."
  # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG this => &D.66424
  # DEBUG __beg => "Number of active VCs fell below zero."
  # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG this => &D.66424
  # DEBUG __beg => "Number of active VCs fell below zero."
  # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __ptr => "Number of active VCs fell below zero."
  # DEBUG __first => "Number of active VCs fell below zero."
  # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Number of active VCs fell below zero."
  # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  __dnew = 37;
  _83 = std::__cxx11::basic_string<char>::_M_create (&D.66424, &__dnew, 0);
  # DEBUG D#7 => &D.66424
  # DEBUG __p => _83
  # DEBUG this => D#7
  MEM[(char * *)&D.66424] = _83;
  __dnew.49_84 = __dnew;
  # DEBUG D#8 => &D.66424
  # DEBUG __capacity => __dnew.49_84
  # DEBUG this => D#8
  MEM[(size_type *)&D.66424 + 16B] = __dnew.49_84;
  # DEBUG D#1 => &D.66424
  # DEBUG this => D#1
  # DEBUG __p => _83
  # DEBUG __k1 => "Number of active VCs fell below zero."
  # DEBUG __k2 => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __d => _83
  # DEBUG __s => "Number of active VCs fell below zero."
  # DEBUG __n => 37
  # DEBUG __s1 => _83
  # DEBUG __s2 => "Number of active VCs fell below zero."
  # DEBUG __n => 37
  __builtin_memcpy (_83, "Number of active VCs fell below zero.", 37);
  __dnew.49_87 = __dnew;
  # DEBUG this => &D.66424
  # DEBUG __n => __dnew.49_87
  # DEBUG D#9 => &D.66424
  # DEBUG __length => __dnew.49_87
  # DEBUG this => D#9
  MEM[(size_type *)&D.66424 + 8B] = __dnew.49_87;
  _88 = MEM[(char * *)&D.66424];
  # DEBUG D#1 => &D.66424
  # DEBUG this => D#1
  _89 = _88 + __dnew.49_87;
  # DEBUG __c1 => _89
  # DEBUG __c2 => D#10
  MEM[(char_type &)_89] = 0;
  __dnew ={v} {CLOBBER};
  Module::Error (_20, &D.66424);

  <bb 23>:
  # DEBUG this => &D.66424
  # DEBUG this => &D.66424
  # DEBUG this => &D.66424
  _25 = MEM[(char * *)&D.66424];
  # DEBUG D#1 => &D.66424
  # DEBUG this => D#1
  # DEBUG this => &D.66424
  if (&D.66424.D.11539._M_local_buf != _25)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#188 => D.66424.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66424
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66424
  # DEBUG this => D#1
  # DEBUG this => &D.66424
  # DEBUG D#185 => &D.66424._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _25
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _25
  # DEBUG this => D#179
  # DEBUG D.66415 => D#180
  operator delete (_25);

  <bb 25>:
  # DEBUG D#189 => &D.66424._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66424 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  pretmp_117 = f_7(D)->tail;
  goto <bb 29>;

<L10>:
  # DEBUG this => &D.66424
  # DEBUG this => &D.66424
  # DEBUG this => &D.66424
  _26 = MEM[(char * *)&D.66424];
  # DEBUG D#1 => &D.66424
  # DEBUG this => D#1
  # DEBUG this => &D.66424
  if (&D.66424.D.11539._M_local_buf != _26)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG D#188 => D.66424.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66424
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66424
  # DEBUG this => D#1
  # DEBUG this => &D.66424
  # DEBUG D#185 => &D.66424._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _26
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _26
  # DEBUG this => D#179
  # DEBUG D.66400 => D#180
  operator delete (_26);

  <bb 28>:
  # DEBUG D#189 => &D.66424._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66424 ={v} {CLOBBER};
  resx 1

  <bb 29>:
  # prephitmp_118 = PHI <pretmp_117(25), _50(11)>
  if (prephitmp_118 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  pretmp_85 = this_4(D)->D.40430.D.40391._max_held_slots;
  goto <bb 39>;

  <bb 31>:
  pretmp_138 = this_4(D)->D.40430.D.40391._active_vcs;

  <bb 32>:
  # prephitmp_139 = PHI <pretmp_138(31), _23(13)>
  if (prephitmp_139 != 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  pretmp_129 = this_4(D)->D.40430.D.40391._max_held_slots;
  goto <bb 39>;

  <bb 34>:
  i_11 = prephitmp_139 + -1;
  # DEBUG i => i_11
  _12 = this_4(D)->D.40430.D.40391.D.40349._buf_size;
  this_4(D)->D.40430.D.40391._max_held_slots = _12;
  # DEBUG i => i_11
  if (i_11 == 0)
    goto <bb 39>;
  else
    goto <bb 35>;

  <bb 35>:

  <bb 36>:
  # i_48 = PHI <i_11(35), i_17(38)>
  # prephitmp_144 = PHI <_12(35), _15(38)>
  # DEBUG i => i_48
  _15 = prephitmp_144 >> 1;
  i_17 = i_48 >> 1;
  # DEBUG i => i_17
  # DEBUG i => i_17
  if (i_17 == 0)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # _58 = PHI <_15(36)>

  <bb 42>:
  this_4(D)->D.40430.D.40391._max_held_slots = _58;
  goto <bb 39>;

  <bb 38>:
  goto <bb 36>;

  <bb 39>:
  # prephitmp_137 = PHI <pretmp_85(30), pretmp_129(33), _58(42), _12(34), pretmp_136(21)>
  if (prephitmp_137 <= 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # DEBUG D#346 => this_4(D)
  # DEBUG D#347 => f_7(D)
  # DEBUG D#348 => D#347
  # DEBUG f => D#348
  # DEBUG D#349 => D#346
  # DEBUG this => D#349
  __assert_fail ("_max_held_slots > 0", "buffer_state.cpp", 363, &__PRETTY_FUNCTION__);

  <bb 41>:
  return;

}



;; Function virtual void BufferState::LimitedSharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState25LimitedSharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2154, decl_uid=40316, cgraph_uid=621, symbol_order=622)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void BufferState::LimitedSharedBufferPolicy::SendingFlit(const Flit*) (struct LimitedSharedBufferPolicy * const this, const struct Flit * const f)
{
  size_type __dnew;
  size_type __dnew;
  int i;
  const int vc;
  const struct string D.66632;
  const struct string D.42785;
  struct SharedBufferPolicy * _3;
  bool _7;
  int _8;
  int _9;
  char * const _14;
  char * const _16;
  long unsigned int _31;
  int * _32;
  long unsigned int _33;
  int & _34;
  int _35;
  int _36;
  int * _37;
  int & _38;
  long unsigned int _40;
  int * _41;
  long unsigned int _42;
  int & _43;
  int _44;
  int _45;
  int * _46;
  int & _47;
  int _48;
  int _49;
  int _50;
  int _51;
  char * const _53;
  bool _54;
  int * _55;
  int & _56;
  int _57;
  int _58;
  char * const _59;
  int * _66;
  int & _67;
  int _68;
  char * _69;
  long unsigned int __dnew.49_70;
  long unsigned int __dnew.49_73;
  char * const _74;
  char * _75;
  int & _81;
  int _82;
  char * _85;
  long unsigned int __dnew.49_86;
  long unsigned int __dnew.49_89;
  char * const _90;
  char * _91;

  <bb 2>:
  _3 = &this_2(D)->D.40349;
  # DEBUG this => _3
  # DEBUG f => f_5(D)
  vc_30 = f_5(D)->vc;
  # DEBUG vc => vc_30
  _31 = (long unsigned int) vc_30;
  # DEBUG D#334 => &_3->_reserved_slots
  _32 = MEM[(int * *)this_2(D) + 192B];
  # DEBUG D#43 => D#334
  # DEBUG __n => _31
  # DEBUG this => D#43
  _33 = _31 * 4;
  _34 = _32 + _33;
  _35 = *_34;
  if (_35 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#335 => &_3->_reserved_slots
  # DEBUG D#43 => D#335
  # DEBUG __n => _31
  # DEBUG this => D#43
  _36 = _35 + -1;
  *_34 = _36;
  goto <bb 11>;

  <bb 4>:
  # DEBUG D#336 => &_3->_private_buf_vc_map
  _37 = MEM[(int * *)this_2(D) + 112B];
  # DEBUG D#43 => D#336
  # DEBUG __n => _31
  # DEBUG this => D#43
  _38 = _37 + _33;
  i_39 = *_38;
  # DEBUG i => i_39
  _40 = (long unsigned int) i_39;
  # DEBUG D#337 => &_3->_private_buf_occupancy
  _41 = MEM[(int * *)this_2(D) + 160B];
  # DEBUG D#43 => D#337
  # DEBUG __n => _40
  # DEBUG this => D#43
  _42 = _40 * 4;
  _43 = _41 + _42;
  _44 = *_43;
  _45 = _44 + 1;
  *_43 = _45;
  # DEBUG D#338 => &_3->_private_buf_occupancy
  # DEBUG D#43 => D#338
  # DEBUG __n => _40
  # DEBUG this => D#43
  # DEBUG D#339 => &_3->_private_buf_size
  _46 = MEM[(int * *)this_2(D) + 136B];
  # DEBUG D#43 => D#339
  # DEBUG __n => _40
  # DEBUG this => D#43
  _47 = _46 + _42;
  _48 = *_47;
  if (_45 > _48)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 31>:
  goto <bb 11>;

  <bb 6>:
  _49 = MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy;
  _50 = _49 + 1;
  MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy = _50;
  _51 = MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_size;
  if (_50 > _51)
    goto <bb 7>;
  else
    goto <bb 5>;

  <bb 7>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => &D.66632
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.66632
  # DEBUG D#296 => &D.66632._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.66632.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.66632]._M_p = &D.66632.D.11539._M_local_buf;
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG this => &D.66632
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.66632
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.66632
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __ptr => "Shared buffer overflow."
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  __dnew = 23;
  _69 = std::__cxx11::basic_string<char>::_M_create (&D.66632, &__dnew, 0);
  # DEBUG D#7 => &D.66632
  # DEBUG __p => _69
  # DEBUG this => D#7
  MEM[(char * *)&D.66632] = _69;
  __dnew.49_70 = __dnew;
  # DEBUG D#8 => &D.66632
  # DEBUG __capacity => __dnew.49_70
  # DEBUG this => D#8
  MEM[(size_type *)&D.66632 + 16B] = __dnew.49_70;
  # DEBUG D#1 => &D.66632
  # DEBUG this => D#1
  # DEBUG __p => _69
  # DEBUG __k1 => "Shared buffer overflow."
  # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __d => _69
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __n => 23
  # DEBUG __s1 => _69
  # DEBUG __s2 => "Shared buffer overflow."
  # DEBUG __n => 23
  __builtin_memcpy (_69, "Shared buffer overflow.", 23);
  __dnew.49_73 = __dnew;
  # DEBUG this => &D.66632
  # DEBUG __n => __dnew.49_73
  # DEBUG D#9 => &D.66632
  # DEBUG __length => __dnew.49_73
  # DEBUG this => D#9
  MEM[(size_type *)&D.66632 + 8B] = __dnew.49_73;
  _74 = MEM[(char * *)&D.66632];
  # DEBUG D#1 => &D.66632
  # DEBUG this => D#1
  _75 = _74 + __dnew.49_73;
  # DEBUG __c1 => _75
  # DEBUG __c2 => D#10
  MEM[(char_type &)_75] = 0;
  __dnew ={v} {CLOBBER};
  Module::Error (_3, &D.66632);

  <bb 8>:
  # DEBUG this => &D.66632
  # DEBUG this => &D.66632
  # DEBUG this => &D.66632
  _53 = MEM[(char * *)&D.66632];
  # DEBUG D#1 => &D.66632
  # DEBUG this => D#1
  # DEBUG this => &D.66632
  if (&D.66632.D.11539._M_local_buf != _53)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#188 => D.66632.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66632
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66632
  # DEBUG this => D#1
  # DEBUG this => &D.66632
  # DEBUG D#185 => &D.66632._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _53
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _53
  # DEBUG this => D#179
  # DEBUG D.66617 => D#180
  operator delete (_53);

  <bb 10>:
  # DEBUG D#189 => &D.66632._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66632 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL

  <bb 11>:
  _54 = f_5(D)->tail;
  if (_54 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:

  <bb 33>:
  goto <bb 26>;

  <bb 13>:
  # DEBUG D#341 => &_3->_reserved_slots
  _66 = MEM[(int * *)this_2(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _31
  # DEBUG this => D#43
  _81 = _66 + _33;
  _82 = *_81;
  if (_82 != 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  _8 = this_2(D)->_active_vcs;
  _9 = _8 + -1;
  this_2(D)->_active_vcs = _9;
  if (_9 < 0)
    goto <bb 22>;
  else
    goto <bb 12>;

  <bb 15>:

  <bb 16>:
  # _67 = PHI <_81(15), _56(17)>
  # _68 = PHI <_82(15), _57(17)>
  # DEBUG D#341 => &_3->_reserved_slots
  # DEBUG __n => _31
  # DEBUG this => D#43
  # DEBUG D#340 => &_3->_reserved_slots
  # DEBUG D#43 => D#340
  # DEBUG __n => _31
  # DEBUG this => D#43
  _58 = _68 + -1;
  *_67 = _58;
  BufferState::SharedBufferPolicy::ProcessFreeSlot (_3, vc_30);
  # DEBUG D#341 => &_3->_reserved_slots
  _55 = MEM[(int * *)this_2(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _31
  # DEBUG this => D#43
  _56 = _55 + _33;
  _57 = *_56;
  if (_57 != 0)
    goto <bb 17>;
  else
    goto <bb 21>;

  <bb 17>:
  goto <bb 16>;

<L8>:
  # DEBUG this => &D.66632
  # DEBUG this => &D.66632
  # DEBUG this => &D.66632
  _59 = MEM[(char * *)&D.66632];
  # DEBUG D#1 => &D.66632
  # DEBUG this => D#1
  # DEBUG this => &D.66632
  if (&D.66632.D.11539._M_local_buf != _59)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG D#188 => D.66632.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66632
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66632
  # DEBUG this => D#1
  # DEBUG this => &D.66632
  # DEBUG D#185 => &D.66632._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _59
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _59
  # DEBUG this => D#179
  # DEBUG D.66602 => D#180
  operator delete (_59);

  <bb 20>:
  # DEBUG D#189 => &D.66632._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66632 ={v} {CLOBBER};
  resx 5

  <bb 21>:

  <bb 30>:
  _7 = f_5(D)->tail;
  if (_7 != 0)
    goto <bb 14>;
  else
    goto <bb 12>;

  <bb 22>:
  # DEBUG D#63 => &D.42784
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42784
  # DEBUG this => &D.42785
  # DEBUG __s => "Number of active VCs fell below zero."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42785
  # DEBUG D#296 => &D.42785._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42785.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42785]._M_p = &D.42785.D.11539._M_local_buf;
  # DEBUG __s => "Number of active VCs fell below zero."
  # DEBUG this => &D.42785
  # DEBUG __beg => "Number of active VCs fell below zero."
  # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG this => &D.42785
  # DEBUG __beg => "Number of active VCs fell below zero."
  # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG this => &D.42785
  # DEBUG __beg => "Number of active VCs fell below zero."
  # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __ptr => "Number of active VCs fell below zero."
  # DEBUG __first => "Number of active VCs fell below zero."
  # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Number of active VCs fell below zero."
  # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  __dnew = 37;
  _85 = std::__cxx11::basic_string<char>::_M_create (&D.42785, &__dnew, 0);
  # DEBUG D#7 => &D.42785
  # DEBUG __p => _85
  # DEBUG this => D#7
  MEM[(char * *)&D.42785] = _85;
  __dnew.49_86 = __dnew;
  # DEBUG D#8 => &D.42785
  # DEBUG __capacity => __dnew.49_86
  # DEBUG this => D#8
  MEM[(size_type *)&D.42785 + 16B] = __dnew.49_86;
  # DEBUG D#1 => &D.42785
  # DEBUG this => D#1
  # DEBUG __p => _85
  # DEBUG __k1 => "Number of active VCs fell below zero."
  # DEBUG __k2 => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __d => _85
  # DEBUG __s => "Number of active VCs fell below zero."
  # DEBUG __n => 37
  # DEBUG __s1 => _85
  # DEBUG __s2 => "Number of active VCs fell below zero."
  # DEBUG __n => 37
  __builtin_memcpy (_85, "Number of active VCs fell below zero.", 37);
  __dnew.49_89 = __dnew;
  # DEBUG this => &D.42785
  # DEBUG __n => __dnew.49_89
  # DEBUG D#9 => &D.42785
  # DEBUG __length => __dnew.49_89
  # DEBUG this => D#9
  MEM[(size_type *)&D.42785 + 8B] = __dnew.49_89;
  _90 = MEM[(char * *)&D.42785];
  # DEBUG D#1 => &D.42785
  # DEBUG this => D#1
  _91 = _90 + __dnew.49_89;
  # DEBUG __c1 => _91
  # DEBUG __c2 => D#10
  MEM[(char_type &)_91] = 0;
  __dnew ={v} {CLOBBER};
  Module::Error (_3, &D.42785);

  <bb 23>:
  # DEBUG this => &D.42785
  # DEBUG this => &D.42785
  # DEBUG this => &D.42785
  _16 = MEM[(char * *)&D.42785];
  # DEBUG D#1 => &D.42785
  # DEBUG this => D#1
  # DEBUG this => &D.42785
  if (&D.42785.D.11539._M_local_buf != _16)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#188 => D.42785.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42785
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42785
  # DEBUG this => D#1
  # DEBUG this => &D.42785
  # DEBUG D#185 => &D.42785._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _16
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _16
  # DEBUG this => D#179
  # DEBUG D.56401 => D#180
  operator delete (_16);

  <bb 25>:
  # DEBUG D#189 => &D.42785._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42785 ={v} {CLOBBER};
  # DEBUG this => &D.42784
  # DEBUG this => &D.42784

  <bb 26>:

  <bb 32>:
  return;

<L6>:
  # DEBUG this => &D.42785
  # DEBUG this => &D.42785
  # DEBUG this => &D.42785
  _14 = MEM[(char * *)&D.42785];
  # DEBUG D#1 => &D.42785
  # DEBUG this => D#1
  # DEBUG this => &D.42785
  if (&D.42785.D.11539._M_local_buf != _14)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG D#188 => D.42785.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42785
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42785
  # DEBUG this => D#1
  # DEBUG this => &D.42785
  # DEBUG D#185 => &D.42785._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _14
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _14
  # DEBUG this => D#179
  # DEBUG D.56416 => D#180
  operator delete (_14);

  <bb 29>:
  # DEBUG D#189 => &D.42785._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42785 ={v} {CLOBBER};
  resx 2

}



;; Function void BufferState::ProcessCredit(const Credit*) (_ZN11BufferState13ProcessCreditEPK6Credit, funcdef_no=2210, decl_uid=42222, cgraph_uid=677, symbol_order=678)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void BufferState::ProcessCredit(const Credit*) (struct BufferState * const this, const struct Credit * const c)
{
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.67190;
  struct __string_type D.67189;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.66900;
  struct __string_type D.66899;
  const struct _Rb_tree_node_base * const iter$_M_node;
  struct ostringstream err;
  struct ostringstream err;
  const int vc;
  static const char __PRETTY_FUNCTION__[47] = "void BufferState::ProcessCredit(const Credit*)";
  struct __string_type D.43978;
  const struct string D.43976;
  struct __string_type D.43973;
  int _14;
  bool _15;
  long unsigned int _16;
  int & _17;
  int _18;
  char * const _21;
  struct Module * _22;
  char * const _25;
  char * const _27;
  int _30;
  int _31;
  long unsigned int _33;
  struct Module * _35;
  char * const _38;
  char * const _40;
  long unsigned int _41;
  int _42;
  int _43;
  char * const _47;
  struct Module * _48;
  char * const _51;
  bool _56;
  int _58;
  int _59;
  struct BufferPolicy * _63;
  int (*__vtbl_ptr_type) () * _64;
  int (*__vtbl_ptr_type) () _66;
  char * const _68;
  int * _72;
  int * _73;
  int * _74;
  int * _75;
  _Bit_type * _76;
  long unsigned int _77;
  int & _78;
  int & _79;
  long unsigned int _80;
  long unsigned int _81;
  unsigned int _82;
  unsigned int _83;
  long unsigned int _84;
  long unsigned int _85;
  _Bit_type * _86;
  long unsigned int _87;
  int & _88;
  char * const prephitmp_120;
  size_type pretmp_121;
  size_type prephitmp_122;
  char * const pretmp_123;
  int (*__vtbl_ptr_type) () * iftmp.35_131;
  long int _132;
  sizetype iftmp.36_133;
  struct basic_ios * _134;
  int (*__vtbl_ptr_type) () * iftmp.37_135;
  const struct _Rb_tree_node_base * _141;
  int _142;
  long int _144;
  sizetype iftmp.42_145;
  struct basic_ios * _146;
  char_type * const _147;
  char_type * const _148;
  char_type * const _149;
  char * const _150;
  char_type * const _151;
  char * const _152;
  char * const _154;
  char * const _155;
  char * const _156;
  long int __last.51_157;
  long int __first.52_158;
  difference_type _159;
  long unsigned int __dnew.48_160;
  char * _161;
  long unsigned int __dnew.49_162;
  const char_type _164;
  char * _167;
  long int __last.51_169;
  long int __first.52_170;
  difference_type _171;
  long unsigned int __dnew.48_172;
  char * _173;
  long unsigned int __dnew.49_174;
  const char_type _176;
  char * _179;
  int (*__vtbl_ptr_type) () * iftmp.41_182;
  long int _183;
  sizetype iftmp.42_184;
  struct basic_ios * _185;
  int (*__vtbl_ptr_type) () * iftmp.43_186;
  bool _197;
  char * _199;
  long unsigned int __dnew.49_200;
  long unsigned int __dnew.49_203;
  char * const _204;
  char * _205;
  int (*__vtbl_ptr_type) () * iftmp.35_208;
  long int _209;
  sizetype iftmp.36_210;
  struct basic_ios * _211;
  int (*__vtbl_ptr_type) () * iftmp.37_212;
  long int _221;
  sizetype iftmp.42_222;
  struct basic_ios * _223;
  char_type * const _224;
  char_type * const _225;
  char_type * const _226;
  char * const _227;
  char_type * const _228;
  char * const _229;
  char * const _231;
  char * const _232;
  char * const _233;
  long int __last.51_234;
  long int __first.52_235;
  difference_type _236;
  long unsigned int __dnew.48_237;
  char * _238;
  long unsigned int __dnew.49_239;
  const char_type _241;
  char * _244;
  long int __last.51_246;
  long int __first.52_247;
  difference_type _248;
  long unsigned int __dnew.48_249;
  char * _250;
  long unsigned int __dnew.49_251;
  const char_type _253;
  char * _256;
  int (*__vtbl_ptr_type) () * iftmp.41_259;
  long int _260;
  sizetype iftmp.42_261;
  struct basic_ios * _262;
  int (*__vtbl_ptr_type) () * iftmp.43_263;
  size_type pretmp_342;
  size_type prephitmp_343;
  char * const pretmp_344;
  char * const prephitmp_365;
  size_type pretmp_366;
  size_type prephitmp_367;
  char * const pretmp_368;
  int (*__vtbl_ptr_type) () * iftmp.37_485;
  char * const prephitmp_493;
  size_type pretmp_494;
  size_type prephitmp_495;
  char * const pretmp_499;
  char * const prephitmp_501;
  bool _530;
  int (*__vtbl_ptr_type) () * iftmp.35_531;
  char * const _532;
  int (*__vtbl_ptr_type) () * iftmp.37_538;
  int (*__vtbl_ptr_type) () * iftmp.35_539;
  bool _540;
  char * const _541;
  bool _542;
  bool _543;
  char * const _546;
  char * const _547;
  bool _549;

  <bb 2>:
  if (c_10(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __assert_fail ("c", "buffer_state.cpp", 574, &__PRETTY_FUNCTION__);

  <bb 4>:
  # DEBUG D#366 => &c_10(D)->vc
  # DEBUG this => D#366
  # DEBUG D#108 => &D#366->_M_t
  iter$_M_node_60 = MEM[(struct _Rb_tree_node_base * *)c_10(D) + 24B];
  # DEBUG D#107 => D#108
  # DEBUG this => D#107
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_60
  # DEBUG iter$_M_node => iter$_M_node_60
  # DEBUG iter$_M_node => iter$_M_node_60
  # DEBUG D#375 => &c_10(D)->vc
  # DEBUG this => D#375
  # DEBUG D#109 => &D#375->_M_t
  # DEBUG this => D#109
  _141 = &MEM[(const struct _Rb_tree *)c_10(D)]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _141
  # DEBUG this => &iter
  # DEBUG __x => &D.43970
  if (iter$_M_node_60 != _141)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  # DEBUG D#377 => {CLOBBER}
  # DEBUG iter$_M_node => D#377
  return;

  <bb 6>:
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_60
  # DEBUG D#367 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_60]._M_value_field
  # DEBUG __r => D#367
  vc_187 = MEM[(const int &)iter$_M_node_60 + 32];
  # DEBUG vc => vc_187
  if (vc_187 < 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("( vc >= 0 ) && ( vc < _vcs )", "buffer_state.cpp", 581, &__PRETTY_FUNCTION__);

  <bb 8>:
  _142 = this_13(D)->_vcs;
  if (_142 <= vc_187)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 9>:
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_89
  # DEBUG D#367 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_89]._M_value_field
  # DEBUG __r => D#367
  vc_12 = MEM[(const int &)iter$_M_node_89 + 32];
  # DEBUG vc => vc_12
  if (vc_12 < 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 10>:
  _14 = this_13(D)->_vcs;
  if (vc_12 >= _14)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 13>;

  <bb 12>:

  <bb 13>:
  # vc_283 = PHI <vc_187(12), vc_12(11)>
  # iter$_M_node_280 = PHI <iter$_M_node_60(12), iter$_M_node_89(11)>
  # DEBUG iter$_M_node => iter$_M_node_280
  # DEBUG D#375 => &c_10(D)->vc
  # DEBUG this => D#375
  # DEBUG D#109 => &D#375->_M_t
  # DEBUG this => D#109
  # DEBUG this => NULL
  # DEBUG __x => _141
  # DEBUG this => &iter
  # DEBUG __x => &D.43970
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_280
  # DEBUG D#367 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_280]._M_value_field
  # DEBUG __r => D#367
  # DEBUG vc => vc_283
  _15 = this_13(D)->_wait_for_tail_credit;
  if (_15 != 0)
    goto <bb 14>;
  else
    goto <bb 67>;

  <bb 14>:
  _16 = (long unsigned int) vc_283;
  # DEBUG D#368 => &this_13(D)->_in_use_by
  _72 = MEM[(int * *)this_13(D) + 152B];
  # DEBUG D#43 => D#368
  # DEBUG __n => _16
  # DEBUG this => D#43
  _33 = _16 * 4;
  _17 = _72 + _33;
  _18 = *_17;
  if (_18 < 0)
    goto <bb 148>;
  else
    goto <bb 67>;

  <bb 15>:
  err.D.23246._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&err + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#192 => &err._M_stringbuf
  # DEBUG this => D#192
  # DEBUG __mode => NULL
  # DEBUG D#129 => &MEM[(struct basic_stringbuf *)D#192].D.23096
  # DEBUG this => D#129
  MEM[(struct basic_streambuf *)&err + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&err + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&err + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&err + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&err + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&err + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&err + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&err + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&err + 8B].D.23096._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&err + 8B]._M_mode = 16;
  # DEBUG D#128 => &MEM[(struct basic_stringbuf *)D#192]._M_string
  # DEBUG this => D#128
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => D#128
  # DEBUG D#127 => &MEM[(struct basic_string *)D#128]._M_dataplus
  # DEBUG this => D#127
  # DEBUG __dat => &MEM[(struct basic_string *)&err + 80B].D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#127
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&err + 80B]._M_p = &MEM[(struct basic_string *)&err + 80B].D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#128
  # DEBUG __n => 0
  # DEBUG D#9 => D#128
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&err + 88B] = 0;
  # DEBUG D#1 => D#128
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(struct basic_string *)&err + 80B].D.11539._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&err + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&err + 112B], &err._M_stringbuf.D.23096);
  goto <bb 20>;

  # iftmp.35_539 = PHI <iftmp.35_131(15)>
  # iftmp.37_538 = PHI <iftmp.37_135(15)>
<L42>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&err._M_stringbuf);
  resx 23

<L43>:
  # DEBUG this => &err.D.23246
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _144 = MEM[(long int *)iftmp.35_539 + -24B];
  iftmp.42_145 = (sizetype) _144;
  _146 = &err.D.23246 + iftmp.42_145;
  _146->D.19921._vptr.ios_base = iftmp.37_538;
  MEM[(struct  &)&err] ={v} {CLOBBER};
  resx 22

<L54>:

<L44>:
  # DEBUG D#193 => &err.D.23249
  # DEBUG this => D#193
  MEM[(struct basic_ios *)&err + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&err + 112B].D.19921);
  resx 21

  <bb 20>:
  # DEBUG __out => &err.D.23246
  # DEBUG __s => "Received credit for idle VC "
  # DEBUG __s => "Received credit for idle VC "
  std::__ostream_insert<char, std::char_traits<char> > (&err.D.23246, "Received credit for idle VC ", 28);

  <bb 21>:
  std::basic_ostream<char>::operator<< (&err.D.23246, vc_283);
  goto <bb 23>;

<L56>:
  goto <bb 138> (<L34>);

  <bb 23>:
  # DEBUG this => &err
  # DEBUG this => &err._M_stringbuf
  # DEBUG this => &D.43973
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => &D.43973
  # DEBUG D#127 => &D.43973._M_dataplus
  # DEBUG this => D#127
  # DEBUG __dat => &D.43973.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#127
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.43973]._M_p = &D.43973.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.43973
  # DEBUG __n => 0
  # DEBUG D#9 => &D.43973
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.43973 + 8B] = 0;
  # DEBUG D#1 => &D.43973
  # DEBUG this => D#1
  # DEBUG __c1 => &D.43973.D.11539._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.43973 + 16] = 0;
  # DEBUG D#322 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  _147 = MEM[(char_type * *)&err + 48B];
  # DEBUG D#4 => D#322
  # DEBUG this => D#4
  if (_147 != 0B)
    goto <bb 24>;
  else
    goto <bb 46>;

  <bb 24>:
  # DEBUG D#323 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  # DEBUG D#4 => D#323
  # DEBUG this => D#4
  # DEBUG D#324 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  _148 = MEM[(char_type * *)&err + 32B];
  # DEBUG D#5 => D#324
  # DEBUG this => D#5
  if (_147 > _148)
    goto <bb 25>;
  else
    goto <bb 35>;

  <bb 25>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#327 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  # DEBUG D#4 => D#327
  # DEBUG this => D#4
  # DEBUG D#328 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  _149 = MEM[(char_type * *)&err + 40B];
  # DEBUG D#6 => D#328
  # DEBUG this => D#6
  # DEBUG this => &D.66900
  # DEBUG __beg => _149
  # DEBUG __end => _147
  # DEBUG __a => NULL
  # DEBUG this => &D.66900
  # DEBUG D#320 => &D.66900._M_dataplus
  # DEBUG this => D#320
  # DEBUG __dat => &D.66900.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#320
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.66900]._M_p = &D.66900.D.11539._M_local_buf;
  # DEBUG this => &D.66900
  # DEBUG __beg => _149
  # DEBUG __end => _147
  # DEBUG this => &D.66900
  # DEBUG __beg => _149
  # DEBUG __end => _147
  # DEBUG this => &D.66900
  # DEBUG __beg => _149
  # DEBUG __end => _147
  # DEBUG __ptr => _149
  if (_149 == 0B)
    goto <bb 150>;
  else
    goto <bb 152>;

  <bb 26>:
  _161 = std::__cxx11::basic_string<char>::_M_create (&D.66900, &__dnew, 0);

  <bb 27>:
  # DEBUG D#7 => &D.66900
  # DEBUG __p => _161
  # DEBUG this => D#7
  MEM[(char * *)&D.66900] = _161;
  __dnew.49_162 = __dnew;
  # DEBUG D#8 => &D.66900
  # DEBUG __capacity => __dnew.49_162
  # DEBUG this => D#8
  MEM[(size_type *)&D.66900 + 16B] = __dnew.49_162;
  # DEBUG D#1 => &D.66900
  # DEBUG this => D#1
  # DEBUG __p => _161
  # DEBUG __k1 => _149
  # DEBUG __k2 => _147
  # DEBUG __d => _161
  # DEBUG __s => _149
  # DEBUG __n => __dnew.48_160
  goto <bb 30>;

  <bb 28>:
  # DEBUG D#1 => &D.66900
  # DEBUG this => D#1
  # DEBUG __p => &D.66900.D.11539._M_local_buf
  # DEBUG __k1 => _149
  # DEBUG __k2 => _147
  # DEBUG __d => &D.66900.D.11539._M_local_buf
  # DEBUG __s => _149
  # DEBUG __n => __dnew.48_160
  if (__dnew.48_160 == 1)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _164 = MEM[(const char_type &)_149];
  # DEBUG D#10 => _149
  # DEBUG __c1 => &D.66900.D.11539._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.66900 + 16] = _164;
  goto <bb 31>;

  <bb 30>:
  # _541 = PHI <&D.66900.D.11539._M_local_buf(28), _161(27)>
  # DEBUG D#1 => &D.66900
  # DEBUG this => D#1
  # DEBUG __p => _541
  # DEBUG __k1 => _149
  # DEBUG __k2 => _147
  # DEBUG __d => _541
  # DEBUG __s => _149
  # DEBUG __n => __dnew.48_160
  # DEBUG __s1 => _541
  # DEBUG __s2 => _149
  # DEBUG __n => __dnew.48_160
  __builtin_memcpy (_541, _149, __dnew.48_160);
  pretmp_494 = __dnew;
  pretmp_499 = MEM[(char * *)&D.66900];

  <bb 31>:
  # prephitmp_495 = PHI <__dnew.48_160(29), pretmp_494(30)>
  # prephitmp_501 = PHI <&D.66900.D.11539._M_local_buf(29), pretmp_499(30)>
  # DEBUG D#905 => __dnew
  # DEBUG this => &D.66900
  # DEBUG __n => D#905
  # DEBUG D#9 => &D.66900
  # DEBUG __length => D#905
  # DEBUG this => D#9
  MEM[(size_type *)&D.66900 + 8B] = prephitmp_495;
  # DEBUG D#1 => &D.66900
  # DEBUG this => D#1
  _167 = prephitmp_501 + prephitmp_495;
  # DEBUG __c1 => _167
  # DEBUG __c2 => D#10
  MEM[(char_type &)_167] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.43973
  # DEBUG __str => &D.66900
  # DEBUG this => &D.43973
  # DEBUG __str => &D.66900
  std::__cxx11::basic_string<char>::_M_assign (&D.43973, &D.66900);

  <bb 32>:
  # DEBUG this => &D.66900
  # DEBUG this => &D.66900
  # DEBUG this => &D.66900
  _150 = MEM[(char * *)&D.66900];
  # DEBUG D#1 => &D.66900
  # DEBUG this => D#1
  # DEBUG this => &D.66900
  if (&D.66900.D.11539._M_local_buf != _150)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#188 => D.66900.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66900
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66900
  # DEBUG this => D#1
  # DEBUG this => &D.66900
  # DEBUG D#185 => &D.66900._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _150
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _150
  # DEBUG this => D#179
  # DEBUG D.66859 => D#180
  operator delete (_150);

  <bb 34>:
  # DEBUG D#189 => &D.66900._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66900 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 61>;

  <bb 35>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#325 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  # DEBUG D#5 => D#325
  # DEBUG this => D#5
  # DEBUG D#326 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  _151 = MEM[(char_type * *)&err + 40B];
  # DEBUG D#6 => D#326
  # DEBUG this => D#6
  # DEBUG this => &D.66899
  # DEBUG __beg => _151
  # DEBUG __end => _148
  # DEBUG __a => NULL
  # DEBUG this => &D.66899
  # DEBUG D#320 => &D.66899._M_dataplus
  # DEBUG this => D#320
  # DEBUG __dat => &D.66899.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#320
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.66899]._M_p = &D.66899.D.11539._M_local_buf;
  # DEBUG this => &D.66899
  # DEBUG __beg => _151
  # DEBUG __end => _148
  # DEBUG this => &D.66899
  # DEBUG __beg => _151
  # DEBUG __end => _148
  # DEBUG this => &D.66899
  # DEBUG __beg => _151
  # DEBUG __end => _148
  # DEBUG __ptr => _151
  _197 = _148 != 0B;
  _540 = _151 == 0B;
  _530 = _197 & _540;
  if (_530 != 0)
    goto <bb 154>;
  else
    goto <bb 153>;

  <bb 36>:
  _173 = std::__cxx11::basic_string<char>::_M_create (&D.66899, &__dnew, 0);
  goto <bb 38>;

<L58>:
  goto <bb 57> (<L47>);

  <bb 38>:
  # DEBUG D#7 => &D.66899
  # DEBUG __p => _173
  # DEBUG this => D#7
  MEM[(char * *)&D.66899] = _173;
  __dnew.49_174 = __dnew;
  # DEBUG D#8 => &D.66899
  # DEBUG __capacity => __dnew.49_174
  # DEBUG this => D#8
  MEM[(size_type *)&D.66899 + 16B] = __dnew.49_174;
  # DEBUG D#1 => &D.66899
  # DEBUG this => D#1
  # DEBUG __p => _173
  # DEBUG __k1 => _151
  # DEBUG __k2 => _148
  # DEBUG __d => _173
  # DEBUG __s => _151
  # DEBUG __n => __dnew.48_172
  goto <bb 41>;

  <bb 39>:
  # DEBUG D#1 => &D.66899
  # DEBUG this => D#1
  # DEBUG __p => &D.66899.D.11539._M_local_buf
  # DEBUG __k1 => _151
  # DEBUG __k2 => _148
  # DEBUG __d => &D.66899.D.11539._M_local_buf
  # DEBUG __s => _151
  # DEBUG __n => __dnew.48_172
  if (__dnew.48_172 == 1)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  _176 = MEM[(const char_type &)_151];
  # DEBUG D#10 => _151
  # DEBUG __c1 => &D.66899.D.11539._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.66899 + 16] = _176;
  goto <bb 42>;

  <bb 41>:
  # _532 = PHI <&D.66899.D.11539._M_local_buf(39), _173(38)>
  # DEBUG D#1 => &D.66899
  # DEBUG this => D#1
  # DEBUG __p => _532
  # DEBUG __k1 => _151
  # DEBUG __k2 => _148
  # DEBUG __d => _532
  # DEBUG __s => _151
  # DEBUG __n => __dnew.48_172
  # DEBUG __s1 => _532
  # DEBUG __s2 => _151
  # DEBUG __n => __dnew.48_172
  __builtin_memcpy (_532, _151, __dnew.48_172);
  pretmp_121 = __dnew;
  pretmp_123 = MEM[(char * *)&D.66899];

  <bb 42>:
  # prephitmp_122 = PHI <__dnew.48_172(40), pretmp_121(41)>
  # prephitmp_493 = PHI <&D.66899.D.11539._M_local_buf(40), pretmp_123(41)>
  # DEBUG D#906 => __dnew
  # DEBUG this => &D.66899
  # DEBUG __n => D#906
  # DEBUG D#9 => &D.66899
  # DEBUG __length => D#906
  # DEBUG this => D#9
  MEM[(size_type *)&D.66899 + 8B] = prephitmp_122;
  # DEBUG D#1 => &D.66899
  # DEBUG this => D#1
  _179 = prephitmp_493 + prephitmp_122;
  # DEBUG __c1 => _179
  # DEBUG __c2 => D#10
  MEM[(char_type &)_179] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.43973
  # DEBUG __str => &D.66899
  # DEBUG this => &D.43973
  # DEBUG __str => &D.66899
  std::__cxx11::basic_string<char>::_M_assign (&D.43973, &D.66899);

  <bb 43>:
  # DEBUG this => &D.66899
  # DEBUG this => &D.66899
  # DEBUG this => &D.66899
  _152 = MEM[(char * *)&D.66899];
  # DEBUG D#1 => &D.66899
  # DEBUG this => D#1
  # DEBUG this => &D.66899
  if (&D.66899.D.11539._M_local_buf != _152)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # DEBUG D#188 => D.66899.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66899
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66899
  # DEBUG this => D#1
  # DEBUG this => &D.66899
  # DEBUG D#185 => &D.66899._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _152
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _152
  # DEBUG this => D#179
  # DEBUG D.66822 => D#180
  operator delete (_152);

  <bb 45>:
  # DEBUG D#189 => &D.66899._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66899 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 61>;

  <bb 46>:
  # DEBUG this => &D.43973
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&err + 8B]._M_string
  # DEBUG this => &D.43973
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&err + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.43973, &MEM[(const struct basic_stringbuf *)&err + 8B]._M_string);
  goto <bb 61>;

<L59>:
  goto <bb 57> (<L47>);

<L45>:
  # DEBUG this => &D.66900
  # DEBUG this => &D.66900
  # DEBUG this => &D.66900
  _154 = MEM[(char * *)&D.66900];
  # DEBUG D#1 => &D.66900
  # DEBUG this => D#1
  # DEBUG this => &D.66900
  if (&D.66900.D.11539._M_local_buf != _154)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # DEBUG D#188 => D.66900.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66900
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66900
  # DEBUG this => D#1
  # DEBUG this => &D.66900
  # DEBUG D#185 => &D.66900._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _154
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _154
  # DEBUG this => D#179
  # DEBUG D.66803 => D#180
  operator delete (_154);

  <bb 50>:
  # DEBUG D#189 => &D.66900._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66900 ={v} {CLOBBER};
  resx 27

<L60>:
  goto <bb 57> (<L47>);

<L46>:
  # DEBUG this => &D.66899
  # DEBUG this => &D.66899
  # DEBUG this => &D.66899
  _155 = MEM[(char * *)&D.66899];
  # DEBUG D#1 => &D.66899
  # DEBUG this => D#1
  # DEBUG this => &D.66899
  if (&D.66899.D.11539._M_local_buf != _155)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG D#188 => D.66899.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.66899
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.66899
  # DEBUG this => D#1
  # DEBUG this => &D.66899
  # DEBUG D#185 => &D.66899._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _155
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _155
  # DEBUG this => D#179
  # DEBUG D.66787 => D#180
  operator delete (_155);

  <bb 54>:
  # DEBUG D#189 => &D.66899._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.66899 ={v} {CLOBBER};
  resx 26

<L61>:
  goto <bb 57> (<L47>);

<L57>:

<L47>:
  # DEBUG this => &D.43973
  # DEBUG this => &D.43973
  # DEBUG this => &D.43973
  _156 = MEM[(char * *)&D.43973];
  # DEBUG D#1 => &D.43973
  # DEBUG this => D#1
  # DEBUG this => &D.43973
  if (&D.43973.D.11539._M_local_buf != _156)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#188 => D.43973.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43973
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43973
  # DEBUG this => D#1
  # DEBUG this => &D.43973
  # DEBUG D#185 => &D.43973._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _156
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _156
  # DEBUG this => D#179
  # DEBUG D.66776 => D#180
  operator delete (_156);

  <bb 59>:
  # DEBUG D#189 => &D.43973._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  resx 25

<L62>:
  goto <bb 138> (<L34>);

  <bb 61>:
  _22 = &this_13(D)->D.42278;
  Module::Error (_22, &D.43973);

  <bb 62>:
  # DEBUG this => &D.43973
  # DEBUG this => &D.43973
  # DEBUG this => &D.43973
  _21 = MEM[(char * *)&D.43973];
  # DEBUG D#1 => &D.43973
  # DEBUG this => D#1
  # DEBUG this => &D.43973
  if (&D.43973.D.11539._M_local_buf != _21)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG D#188 => D.43973.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43973
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43973
  # DEBUG this => D#1
  # DEBUG this => &D.43973
  # DEBUG D#185 => &D.43973._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _21
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _21
  # DEBUG this => D#179
  # DEBUG D.56588 => D#180
  operator delete (_21);

  <bb 64>:
  # DEBUG D#189 => &D.43973._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43973 ={v} {CLOBBER};
  # DEBUG this => &err
  err.D.23246._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&err + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &err._M_stringbuf
  MEM[(struct basic_stringbuf *)&err + 8B].D.23096._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#191 => &MEM[(struct basic_stringbuf *)&err + 8B]._M_string
  # DEBUG this => D#191
  # DEBUG this => D#191
  # DEBUG this => D#191
  _25 = MEM[(char * *)&err + 80B];
  # DEBUG D#1 => D#191
  # DEBUG this => D#1
  # DEBUG this => D#191
  if (&MEM[(const struct basic_string *)&err + 80B].D.11539._M_local_buf != _25)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  # DEBUG D#188 => MEM[(struct basic_string *)D#191].D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => D#191
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => D#191
  # DEBUG this => D#1
  # DEBUG this => D#191
  # DEBUG D#185 => &MEM[(struct basic_string *)D#191]._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _25
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _25
  # DEBUG this => D#179
  # DEBUG D.66975 => D#180
  operator delete (_25);

  <bb 66>:
  # DEBUG D#189 => &MEM[(struct basic_string *)D#191]._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)&err + 80] ={v} {CLOBBER};
  # DEBUG D#190 => &MEM[(struct basic_stringbuf *)&err + 8B].D.23096
  # DEBUG this => D#190
  MEM[(struct basic_streambuf *)&err + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&err + 8B]._M_buf_locale);
  MEM[(struct  &)&err + 8] ={v} {CLOBBER};
  # DEBUG this => &err.D.23246
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.41_182 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  _183 = MEM[(long int *)iftmp.41_182 + -24B];
  iftmp.42_184 = (sizetype) _183;
  _185 = &err.D.23246 + iftmp.42_184;
  iftmp.43_186 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _185->D.19921._vptr.ios_base = iftmp.43_186;
  MEM[(struct  &)&err] ={v} {CLOBBER};
  # DEBUG D#195 => &err.D.23249
  # DEBUG this => D#195
  MEM[(struct basic_ios *)&err + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&err + 112B].D.19921);
  err ={v} {CLOBBER};

  <bb 67>:
  _30 = this_13(D)->_occupancy;
  _31 = _30 + -1;
  this_13(D)->_occupancy = _31;
  if (_31 < 0)
    goto <bb 68>;
  else
    goto <bb 72>;

  <bb 68>:
  # DEBUG D#63 => &D.43975
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.43975
  # DEBUG this => &D.43976
  # DEBUG __s => "Buffer occupancy fell below zero."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.43976
  # DEBUG D#296 => &D.43976._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.43976.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.43976]._M_p = &D.43976.D.11539._M_local_buf;
  # DEBUG __s => "Buffer occupancy fell below zero."
  # DEBUG this => &D.43976
  # DEBUG __beg => "Buffer occupancy fell below zero."
  # DEBUG __end => &MEM[(void *)"Buffer occupancy fell below zero." + 33B]
  # DEBUG this => &D.43976
  # DEBUG __beg => "Buffer occupancy fell below zero."
  # DEBUG __end => &MEM[(void *)"Buffer occupancy fell below zero." + 33B]
  # DEBUG this => &D.43976
  # DEBUG __beg => "Buffer occupancy fell below zero."
  # DEBUG __end => &MEM[(void *)"Buffer occupancy fell below zero." + 33B]
  # DEBUG __ptr => "Buffer occupancy fell below zero."
  # DEBUG __first => "Buffer occupancy fell below zero."
  # DEBUG __last => &MEM[(void *)"Buffer occupancy fell below zero." + 33B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Buffer occupancy fell below zero."
  # DEBUG __last => &MEM[(void *)"Buffer occupancy fell below zero." + 33B]
  __dnew = 33;
  _199 = std::__cxx11::basic_string<char>::_M_create (&D.43976, &__dnew, 0);
  # DEBUG D#7 => &D.43976
  # DEBUG __p => _199
  # DEBUG this => D#7
  MEM[(char * *)&D.43976] = _199;
  __dnew.49_200 = __dnew;
  # DEBUG D#8 => &D.43976
  # DEBUG __capacity => __dnew.49_200
  # DEBUG this => D#8
  MEM[(size_type *)&D.43976 + 16B] = __dnew.49_200;
  # DEBUG D#1 => &D.43976
  # DEBUG this => D#1
  # DEBUG __p => _199
  # DEBUG __k1 => "Buffer occupancy fell below zero."
  # DEBUG __k2 => &MEM[(void *)"Buffer occupancy fell below zero." + 33B]
  # DEBUG __d => _199
  # DEBUG __s => "Buffer occupancy fell below zero."
  # DEBUG __n => 33
  # DEBUG __s1 => _199
  # DEBUG __s2 => "Buffer occupancy fell below zero."
  # DEBUG __n => 33
  __builtin_memcpy (_199, "Buffer occupancy fell below zero.", 33);
  __dnew.49_203 = __dnew;
  # DEBUG this => &D.43976
  # DEBUG __n => __dnew.49_203
  # DEBUG D#9 => &D.43976
  # DEBUG __length => __dnew.49_203
  # DEBUG this => D#9
  MEM[(size_type *)&D.43976 + 8B] = __dnew.49_203;
  _204 = MEM[(char * *)&D.43976];
  # DEBUG D#1 => &D.43976
  # DEBUG this => D#1
  _205 = _204 + __dnew.49_203;
  # DEBUG __c1 => _205
  # DEBUG __c2 => D#10
  MEM[(char_type &)_205] = 0;
  __dnew ={v} {CLOBBER};
  _35 = &this_13(D)->D.42278;
  Module::Error (_35, &D.43976);

  <bb 69>:
  # DEBUG this => &D.43976
  # DEBUG this => &D.43976
  # DEBUG this => &D.43976
  _38 = MEM[(char * *)&D.43976];
  # DEBUG D#1 => &D.43976
  # DEBUG this => D#1
  # DEBUG this => &D.43976
  if (&D.43976.D.11539._M_local_buf != _38)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  # DEBUG D#188 => D.43976.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43976
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43976
  # DEBUG this => D#1
  # DEBUG this => &D.43976
  # DEBUG D#185 => &D.43976._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _38
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _38
  # DEBUG this => D#179
  # DEBUG D.56606 => D#180
  operator delete (_38);

  <bb 71>:
  # DEBUG D#189 => &D.43976._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43976 ={v} {CLOBBER};
  # DEBUG this => &D.43975
  # DEBUG this => &D.43975

  <bb 72>:
  _41 = (long unsigned int) vc_283;
  # DEBUG D#369 => &this_13(D)->_vc_occupancy
  _73 = MEM[(int * *)this_13(D) + 112B];
  # DEBUG D#43 => D#369
  # DEBUG __n => _41
  # DEBUG this => D#43
  _77 = _41 * 4;
  _78 = _73 + _77;
  _42 = *_78;
  _43 = _42 + -1;
  *_78 = _43;
  # DEBUG D#370 => &this_13(D)->_vc_occupancy
  # DEBUG D#43 => D#370
  # DEBUG __n => _41
  # DEBUG this => D#43
  if (_43 < 0)
    goto <bb 73>;
  else
    goto <bb 127>;

  <bb 73>:
  # DEBUG this => &err
  # DEBUG __mode => 16
  # DEBUG D#194 => &err.D.23249
  # DEBUG this => D#194
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&err + 112B].D.19921);
  MEM[(struct basic_ios *)&err + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&err + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&err + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&err + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&err + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&err + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&err + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&err + 112B]._M_num_get = 0B;
  # DEBUG this => &err.D.23246
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.35_208 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  MEM[(struct basic_ostream *)&err]._vptr.basic_ostream = iftmp.35_208;
  _209 = MEM[(long int *)iftmp.35_208 + -24B];
  iftmp.36_210 = (sizetype) _209;
  _211 = &err.D.23246 + iftmp.36_210;
  iftmp.37_212 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _211->D.19921._vptr.ios_base = iftmp.37_212;
  std::basic_ios<char>::init (_211, 0B);

  <bb 74>:
  err.D.23246._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&err + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#192 => &err._M_stringbuf
  # DEBUG this => D#192
  # DEBUG __mode => NULL
  # DEBUG D#129 => &MEM[(struct basic_stringbuf *)D#192].D.23096
  # DEBUG this => D#129
  MEM[(struct basic_streambuf *)&err + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&err + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&err + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&err + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&err + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&err + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&err + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&err + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&err + 8B].D.23096._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&err + 8B]._M_mode = 16;
  # DEBUG D#128 => &MEM[(struct basic_stringbuf *)D#192]._M_string
  # DEBUG this => D#128
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => D#128
  # DEBUG D#127 => &MEM[(struct basic_string *)D#128]._M_dataplus
  # DEBUG this => D#127
  # DEBUG __dat => &MEM[(struct basic_string *)&err + 80B].D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#127
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&err + 80B]._M_p = &MEM[(struct basic_string *)&err + 80B].D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#128
  # DEBUG __n => 0
  # DEBUG D#9 => D#128
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&err + 88B] = 0;
  # DEBUG D#1 => D#128
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(struct basic_string *)&err + 80B].D.11539._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&err + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&err + 112B], &err._M_stringbuf.D.23096);
  goto <bb 80>;

  # iftmp.35_531 = PHI <iftmp.35_208(74)>
  # iftmp.37_485 = PHI <iftmp.37_212(74)>
<L48>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&err._M_stringbuf);
  resx 30

<L49>:
  # DEBUG this => &err.D.23246
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _221 = MEM[(long int *)iftmp.35_531 + -24B];
  iftmp.42_222 = (sizetype) _221;
  _223 = &err.D.23246 + iftmp.42_222;
  _223->D.19921._vptr.ios_base = iftmp.37_485;
  MEM[(struct  &)&err] ={v} {CLOBBER};
  resx 29

<L64>:
  goto <bb 79> (<L50>);

<L63>:

<L50>:
  # DEBUG D#193 => &err.D.23249
  # DEBUG this => D#193
  MEM[(struct basic_ios *)&err + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&err + 112B].D.19921);
  resx 28

  <bb 80>:
  # DEBUG __out => &err.D.23246
  # DEBUG __s => "Buffer occupancy fell below zero for VC "
  # DEBUG __s => "Buffer occupancy fell below zero for VC "
  std::__ostream_insert<char, std::char_traits<char> > (&err.D.23246, "Buffer occupancy fell below zero for VC ", 40);

  <bb 81>:
  std::basic_ostream<char>::operator<< (&err.D.23246, vc_283);
  goto <bb 83>;

<L66>:
  goto <bb 147> (<L39>);

  <bb 83>:
  # DEBUG this => &err
  # DEBUG this => &err._M_stringbuf
  # DEBUG this => &D.43978
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => &D.43978
  # DEBUG D#127 => &D.43978._M_dataplus
  # DEBUG this => D#127
  # DEBUG __dat => &D.43978.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#127
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.43978]._M_p = &D.43978.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.43978
  # DEBUG __n => 0
  # DEBUG D#9 => &D.43978
  # DEBUG __length => 0
  # DEBUG this => D#9
  MEM[(size_type *)&D.43978 + 8B] = 0;
  # DEBUG D#1 => &D.43978
  # DEBUG this => D#1
  # DEBUG __c1 => &D.43978.D.11539._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.43978 + 16] = 0;
  # DEBUG D#322 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  _224 = MEM[(char_type * *)&err + 48B];
  # DEBUG D#4 => D#322
  # DEBUG this => D#4
  if (_224 != 0B)
    goto <bb 84>;
  else
    goto <bb 106>;

  <bb 84>:
  # DEBUG D#323 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  # DEBUG D#4 => D#323
  # DEBUG this => D#4
  # DEBUG D#324 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  _225 = MEM[(char_type * *)&err + 32B];
  # DEBUG D#5 => D#324
  # DEBUG this => D#5
  if (_224 > _225)
    goto <bb 85>;
  else
    goto <bb 95>;

  <bb 85>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#327 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  # DEBUG D#4 => D#327
  # DEBUG this => D#4
  # DEBUG D#328 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  _226 = MEM[(char_type * *)&err + 40B];
  # DEBUG D#6 => D#328
  # DEBUG this => D#6
  # DEBUG this => &D.67190
  # DEBUG __beg => _226
  # DEBUG __end => _224
  # DEBUG __a => NULL
  # DEBUG this => &D.67190
  # DEBUG D#320 => &D.67190._M_dataplus
  # DEBUG this => D#320
  # DEBUG __dat => &D.67190.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#320
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.67190]._M_p = &D.67190.D.11539._M_local_buf;
  # DEBUG this => &D.67190
  # DEBUG __beg => _226
  # DEBUG __end => _224
  # DEBUG this => &D.67190
  # DEBUG __beg => _226
  # DEBUG __end => _224
  # DEBUG this => &D.67190
  # DEBUG __beg => _226
  # DEBUG __end => _224
  # DEBUG __ptr => _226
  if (_226 == 0B)
    goto <bb 156>;
  else
    goto <bb 158>;

  <bb 86>:
  _238 = std::__cxx11::basic_string<char>::_M_create (&D.67190, &__dnew, 0);

  <bb 87>:
  # DEBUG D#7 => &D.67190
  # DEBUG __p => _238
  # DEBUG this => D#7
  MEM[(char * *)&D.67190] = _238;
  __dnew.49_239 = __dnew;
  # DEBUG D#8 => &D.67190
  # DEBUG __capacity => __dnew.49_239
  # DEBUG this => D#8
  MEM[(size_type *)&D.67190 + 16B] = __dnew.49_239;
  # DEBUG D#1 => &D.67190
  # DEBUG this => D#1
  # DEBUG __p => _238
  # DEBUG __k1 => _226
  # DEBUG __k2 => _224
  # DEBUG __d => _238
  # DEBUG __s => _226
  # DEBUG __n => __dnew.48_237
  goto <bb 90>;

  <bb 88>:
  # DEBUG D#1 => &D.67190
  # DEBUG this => D#1
  # DEBUG __p => &D.67190.D.11539._M_local_buf
  # DEBUG __k1 => _226
  # DEBUG __k2 => _224
  # DEBUG __d => &D.67190.D.11539._M_local_buf
  # DEBUG __s => _226
  # DEBUG __n => __dnew.48_237
  if (__dnew.48_237 == 1)
    goto <bb 89>;
  else
    goto <bb 90>;

  <bb 89>:
  _241 = MEM[(const char_type &)_226];
  # DEBUG D#10 => _226
  # DEBUG __c1 => &D.67190.D.11539._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.67190 + 16] = _241;
  goto <bb 91>;

  <bb 90>:
  # _546 = PHI <&D.67190.D.11539._M_local_buf(88), _238(87)>
  # DEBUG D#1 => &D.67190
  # DEBUG this => D#1
  # DEBUG __p => _546
  # DEBUG __k1 => _226
  # DEBUG __k2 => _224
  # DEBUG __d => _546
  # DEBUG __s => _226
  # DEBUG __n => __dnew.48_237
  # DEBUG __s1 => _546
  # DEBUG __s2 => _226
  # DEBUG __n => __dnew.48_237
  __builtin_memcpy (_546, _226, __dnew.48_237);
  pretmp_366 = __dnew;
  pretmp_368 = MEM[(char * *)&D.67190];

  <bb 91>:
  # prephitmp_367 = PHI <__dnew.48_237(89), pretmp_366(90)>
  # prephitmp_120 = PHI <&D.67190.D.11539._M_local_buf(89), pretmp_368(90)>
  # DEBUG D#903 => __dnew
  # DEBUG this => &D.67190
  # DEBUG __n => D#903
  # DEBUG D#9 => &D.67190
  # DEBUG __length => D#903
  # DEBUG this => D#9
  MEM[(size_type *)&D.67190 + 8B] = prephitmp_367;
  # DEBUG D#1 => &D.67190
  # DEBUG this => D#1
  _244 = prephitmp_120 + prephitmp_367;
  # DEBUG __c1 => _244
  # DEBUG __c2 => D#10
  MEM[(char_type &)_244] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.43978
  # DEBUG __str => &D.67190
  # DEBUG this => &D.43978
  # DEBUG __str => &D.67190
  std::__cxx11::basic_string<char>::_M_assign (&D.43978, &D.67190);

  <bb 92>:
  # DEBUG this => &D.67190
  # DEBUG this => &D.67190
  # DEBUG this => &D.67190
  _227 = MEM[(char * *)&D.67190];
  # DEBUG D#1 => &D.67190
  # DEBUG this => D#1
  # DEBUG this => &D.67190
  if (&D.67190.D.11539._M_local_buf != _227)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  # DEBUG D#188 => D.67190.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.67190
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.67190
  # DEBUG this => D#1
  # DEBUG this => &D.67190
  # DEBUG D#185 => &D.67190._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _227
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _227
  # DEBUG this => D#179
  # DEBUG D.67149 => D#180
  operator delete (_227);

  <bb 94>:
  # DEBUG D#189 => &D.67190._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.67190 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 121>;

  <bb 95>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#325 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  # DEBUG D#5 => D#325
  # DEBUG this => D#5
  # DEBUG D#326 => &MEM[(const struct basic_stringbuf *)&err + 8B].D.23096
  _228 = MEM[(char_type * *)&err + 40B];
  # DEBUG D#6 => D#326
  # DEBUG this => D#6
  # DEBUG this => &D.67189
  # DEBUG __beg => _228
  # DEBUG __end => _225
  # DEBUG __a => NULL
  # DEBUG this => &D.67189
  # DEBUG D#320 => &D.67189._M_dataplus
  # DEBUG this => D#320
  # DEBUG __dat => &D.67189.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#320
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.67189]._M_p = &D.67189.D.11539._M_local_buf;
  # DEBUG this => &D.67189
  # DEBUG __beg => _228
  # DEBUG __end => _225
  # DEBUG this => &D.67189
  # DEBUG __beg => _228
  # DEBUG __end => _225
  # DEBUG this => &D.67189
  # DEBUG __beg => _228
  # DEBUG __end => _225
  # DEBUG __ptr => _228
  _549 = _225 != 0B;
  _542 = _228 == 0B;
  _543 = _542 & _549;
  if (_543 != 0)
    goto <bb 159>;
  else
    goto <bb 161>;

  <bb 96>:
  _250 = std::__cxx11::basic_string<char>::_M_create (&D.67189, &__dnew, 0);
  goto <bb 98>;

<L68>:
  goto <bb 117> (<L53>);

  <bb 98>:
  # DEBUG D#7 => &D.67189
  # DEBUG __p => _250
  # DEBUG this => D#7
  MEM[(char * *)&D.67189] = _250;
  __dnew.49_251 = __dnew;
  # DEBUG D#8 => &D.67189
  # DEBUG __capacity => __dnew.49_251
  # DEBUG this => D#8
  MEM[(size_type *)&D.67189 + 16B] = __dnew.49_251;
  # DEBUG D#1 => &D.67189
  # DEBUG this => D#1
  # DEBUG __p => _250
  # DEBUG __k1 => _228
  # DEBUG __k2 => _225
  # DEBUG __d => _250
  # DEBUG __s => _228
  # DEBUG __n => __dnew.48_249
  goto <bb 101>;

  <bb 99>:
  # DEBUG D#1 => &D.67189
  # DEBUG this => D#1
  # DEBUG __p => &D.67189.D.11539._M_local_buf
  # DEBUG __k1 => _228
  # DEBUG __k2 => _225
  # DEBUG __d => &D.67189.D.11539._M_local_buf
  # DEBUG __s => _228
  # DEBUG __n => __dnew.48_249
  if (__dnew.48_249 == 1)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  _253 = MEM[(const char_type &)_228];
  # DEBUG D#10 => _228
  # DEBUG __c1 => &D.67189.D.11539._M_local_buf
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.67189 + 16] = _253;
  goto <bb 102>;

  <bb 101>:
  # _547 = PHI <&D.67189.D.11539._M_local_buf(99), _250(98)>
  # DEBUG D#1 => &D.67189
  # DEBUG this => D#1
  # DEBUG __p => _547
  # DEBUG __k1 => _228
  # DEBUG __k2 => _225
  # DEBUG __d => _547
  # DEBUG __s => _228
  # DEBUG __n => __dnew.48_249
  # DEBUG __s1 => _547
  # DEBUG __s2 => _228
  # DEBUG __n => __dnew.48_249
  __builtin_memcpy (_547, _228, __dnew.48_249);
  pretmp_342 = __dnew;
  pretmp_344 = MEM[(char * *)&D.67189];

  <bb 102>:
  # prephitmp_343 = PHI <__dnew.48_249(100), pretmp_342(101)>
  # prephitmp_365 = PHI <&D.67189.D.11539._M_local_buf(100), pretmp_344(101)>
  # DEBUG D#904 => __dnew
  # DEBUG this => &D.67189
  # DEBUG __n => D#904
  # DEBUG D#9 => &D.67189
  # DEBUG __length => D#904
  # DEBUG this => D#9
  MEM[(size_type *)&D.67189 + 8B] = prephitmp_343;
  # DEBUG D#1 => &D.67189
  # DEBUG this => D#1
  _256 = prephitmp_365 + prephitmp_343;
  # DEBUG __c1 => _256
  # DEBUG __c2 => D#10
  MEM[(char_type &)_256] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.43978
  # DEBUG __str => &D.67189
  # DEBUG this => &D.43978
  # DEBUG __str => &D.67189
  std::__cxx11::basic_string<char>::_M_assign (&D.43978, &D.67189);

  <bb 103>:
  # DEBUG this => &D.67189
  # DEBUG this => &D.67189
  # DEBUG this => &D.67189
  _229 = MEM[(char * *)&D.67189];
  # DEBUG D#1 => &D.67189
  # DEBUG this => D#1
  # DEBUG this => &D.67189
  if (&D.67189.D.11539._M_local_buf != _229)
    goto <bb 104>;
  else
    goto <bb 105>;

  <bb 104>:
  # DEBUG D#188 => D.67189.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.67189
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.67189
  # DEBUG this => D#1
  # DEBUG this => &D.67189
  # DEBUG D#185 => &D.67189._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _229
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _229
  # DEBUG this => D#179
  # DEBUG D.67112 => D#180
  operator delete (_229);

  <bb 105>:
  # DEBUG D#189 => &D.67189._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.67189 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 121>;

  <bb 106>:
  # DEBUG this => &D.43978
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&err + 8B]._M_string
  # DEBUG this => &D.43978
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&err + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.43978, &MEM[(const struct basic_stringbuf *)&err + 8B]._M_string);
  goto <bb 121>;

<L69>:
  goto <bb 117> (<L53>);

<L51>:
  # DEBUG this => &D.67190
  # DEBUG this => &D.67190
  # DEBUG this => &D.67190
  _231 = MEM[(char * *)&D.67190];
  # DEBUG D#1 => &D.67190
  # DEBUG this => D#1
  # DEBUG this => &D.67190
  if (&D.67190.D.11539._M_local_buf != _231)
    goto <bb 109>;
  else
    goto <bb 110>;

  <bb 109>:
  # DEBUG D#188 => D.67190.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.67190
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.67190
  # DEBUG this => D#1
  # DEBUG this => &D.67190
  # DEBUG D#185 => &D.67190._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _231
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _231
  # DEBUG this => D#179
  # DEBUG D.67093 => D#180
  operator delete (_231);

  <bb 110>:
  # DEBUG D#189 => &D.67190._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.67190 ={v} {CLOBBER};
  resx 34

<L70>:
  goto <bb 117> (<L53>);

<L52>:
  # DEBUG this => &D.67189
  # DEBUG this => &D.67189
  # DEBUG this => &D.67189
  _232 = MEM[(char * *)&D.67189];
  # DEBUG D#1 => &D.67189
  # DEBUG this => D#1
  # DEBUG this => &D.67189
  if (&D.67189.D.11539._M_local_buf != _232)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  # DEBUG D#188 => D.67189.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.67189
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.67189
  # DEBUG this => D#1
  # DEBUG this => &D.67189
  # DEBUG D#185 => &D.67189._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _232
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _232
  # DEBUG this => D#179
  # DEBUG D.67077 => D#180
  operator delete (_232);

  <bb 114>:
  # DEBUG D#189 => &D.67189._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.67189 ={v} {CLOBBER};
  resx 33

<L71>:
  goto <bb 117> (<L53>);

<L67>:

<L53>:
  # DEBUG this => &D.43978
  # DEBUG this => &D.43978
  # DEBUG this => &D.43978
  _233 = MEM[(char * *)&D.43978];
  # DEBUG D#1 => &D.43978
  # DEBUG this => D#1
  # DEBUG this => &D.43978
  if (&D.43978.D.11539._M_local_buf != _233)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  # DEBUG D#188 => D.43978.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43978
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43978
  # DEBUG this => D#1
  # DEBUG this => &D.43978
  # DEBUG D#185 => &D.43978._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _233
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _233
  # DEBUG this => D#179
  # DEBUG D.67066 => D#180
  operator delete (_233);

  <bb 119>:
  # DEBUG D#189 => &D.43978._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  resx 32

<L72>:
  goto <bb 147> (<L39>);

  <bb 121>:
  _48 = &this_13(D)->D.42278;
  Module::Error (_48, &D.43978);

  <bb 122>:
  # DEBUG this => &D.43978
  # DEBUG this => &D.43978
  # DEBUG this => &D.43978
  _47 = MEM[(char * *)&D.43978];
  # DEBUG D#1 => &D.43978
  # DEBUG this => D#1
  # DEBUG this => &D.43978
  if (&D.43978.D.11539._M_local_buf != _47)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 123>:
  # DEBUG D#188 => D.43978.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43978
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43978
  # DEBUG this => D#1
  # DEBUG this => &D.43978
  # DEBUG D#185 => &D.43978._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _47
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _47
  # DEBUG this => D#179
  # DEBUG D.56634 => D#180
  operator delete (_47);

  <bb 124>:
  # DEBUG D#189 => &D.43978._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43978 ={v} {CLOBBER};
  # DEBUG this => &err
  err.D.23246._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&err + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &err._M_stringbuf
  MEM[(struct basic_stringbuf *)&err + 8B].D.23096._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#191 => &MEM[(struct basic_stringbuf *)&err + 8B]._M_string
  # DEBUG this => D#191
  # DEBUG this => D#191
  # DEBUG this => D#191
  _51 = MEM[(char * *)&err + 80B];
  # DEBUG D#1 => D#191
  # DEBUG this => D#1
  # DEBUG this => D#191
  if (&MEM[(const struct basic_string *)&err + 80B].D.11539._M_local_buf != _51)
    goto <bb 125>;
  else
    goto <bb 126>;

  <bb 125>:
  # DEBUG D#188 => MEM[(struct basic_string *)D#191].D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => D#191
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => D#191
  # DEBUG this => D#1
  # DEBUG this => D#191
  # DEBUG D#185 => &MEM[(struct basic_string *)D#191]._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _51
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _51
  # DEBUG this => D#179
  # DEBUG D.67265 => D#180
  operator delete (_51);

  <bb 126>:
  # DEBUG D#189 => &MEM[(struct basic_string *)D#191]._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  MEM[(struct  &)&err + 80] ={v} {CLOBBER};
  # DEBUG D#190 => &MEM[(struct basic_stringbuf *)&err + 8B].D.23096
  # DEBUG this => D#190
  MEM[(struct basic_streambuf *)&err + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&err + 8B]._M_buf_locale);
  MEM[(struct  &)&err + 8] ={v} {CLOBBER};
  # DEBUG this => &err.D.23246
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.41_259 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  _260 = MEM[(long int *)iftmp.41_259 + -24B];
  iftmp.42_261 = (sizetype) _260;
  _262 = &err.D.23246 + iftmp.42_261;
  iftmp.43_263 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _262->D.19921._vptr.ios_base = iftmp.43_263;
  MEM[(struct  &)&err] ={v} {CLOBBER};
  # DEBUG D#195 => &err.D.23249
  # DEBUG this => D#195
  MEM[(struct basic_ios *)&err + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&err + 112B].D.19921);
  err ={v} {CLOBBER};

  <bb 127>:
  _56 = this_13(D)->_wait_for_tail_credit;
  if (_56 != 0)
    goto <bb 128>;
  else
    goto <bb 132>;

  <bb 128>:
  # DEBUG D#371 => &this_13(D)->_vc_occupancy
  _74 = MEM[(int * *)this_13(D) + 112B];
  # DEBUG D#43 => D#371
  # DEBUG __n => _41
  # DEBUG this => D#43
  _79 = _74 + _77;
  _58 = *_79;
  if (_58 == 0)
    goto <bb 129>;
  else
    goto <bb 132>;

  <bb 129>:
  # DEBUG D#372 => &this_13(D)->_tail_sent
  _76 = MEM[(_Bit_type * *)this_13(D) + 176B];
  # DEBUG D#55 => D#372
  # DEBUG __n => _41
  # DEBUG this => D#55
  _82 = (unsigned int) _41;
  _83 = _82 & 63;
  _84 = _41 >> 6;
  _85 = _84 * 8;
  _86 = _76 + _85;
  # DEBUG this => NULL
  # DEBUG __x => _86
  # DEBUG __y => _83
  # DEBUG this => D#19
  # DEBUG __x => _86
  # DEBUG __y => _83
  # DEBUG this => D#19
  # DEBUG this => D#20
  # DEBUG this => D#20
  _87 = 1 << _83;
  # DEBUG this => NULL
  # DEBUG __x => _86
  # DEBUG __y => _87
  # DEBUG this => &D.43979
  _80 = *_86;
  _81 = _80 & _87;
  if (_81 != 0)
    goto <bb 162>;
  else
    goto <bb 132>;

  <bb 130>:
  __assert_fail ("_in_use_by[vc] >= 0", "buffer_state.cpp", 600, &__PRETTY_FUNCTION__);

  <bb 131>:
  # DEBUG D#374 => &this_13(D)->_in_use_by
  # DEBUG D#43 => D#374
  # DEBUG __n => _41
  # DEBUG this => D#43
  *_88 = -1;

  <bb 132>:
  _63 = this_13(D)->_buffer_policy;
  _64 = _63->D.39647._vptr.Module;
  _66 = MEM[(int (*__vtbl_ptr_type) () *)_64 + 48B];
  OBJ_TYPE_REF(_66;(struct BufferPolicy)_63->6) (_63, vc_283);
  # DEBUG this => &iter
  iter$_M_node_89 = std::_Rb_tree_increment (iter$_M_node_280);
  # DEBUG iter$_M_node => iter$_M_node_89
  # DEBUG iter$_M_node => iter$_M_node_89
  # DEBUG D#375 => &c_10(D)->vc
  # DEBUG this => D#375
  # DEBUG D#109 => &D#375->_M_t
  # DEBUG this => D#109
  # DEBUG this => NULL
  # DEBUG __x => _141
  # DEBUG this => &iter
  # DEBUG __x => &D.43970
  if (iter$_M_node_89 != _141)
    goto <bb 9>;
  else
    goto <bb 5>;

<L33>:
  # DEBUG this => &D.43973
  # DEBUG this => &D.43973
  # DEBUG this => &D.43973
  _68 = MEM[(char * *)&D.43973];
  # DEBUG D#1 => &D.43973
  # DEBUG this => D#1
  # DEBUG this => &D.43973
  if (&D.43973.D.11539._M_local_buf != _68)
    goto <bb 134>;
  else
    goto <bb 135>;

  <bb 134>:
  # DEBUG D#188 => D.43973.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43973
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43973
  # DEBUG this => D#1
  # DEBUG this => &D.43973
  # DEBUG D#185 => &D.43973._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _68
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _68
  # DEBUG this => D#179
  # DEBUG D.56672 => D#180
  operator delete (_68);

  <bb 135>:
  # DEBUG D#189 => &D.43973._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43973 ={v} {CLOBBER};
  resx 5

<L73>:
  goto <bb 138> (<L34>);

<L55>:

<L34>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&err);
  resx 4

<L36>:
  # DEBUG this => &D.43976
  # DEBUG this => &D.43976
  # DEBUG this => &D.43976
  _27 = MEM[(char * *)&D.43976];
  # DEBUG D#1 => &D.43976
  # DEBUG this => D#1
  # DEBUG this => &D.43976
  if (&D.43976.D.11539._M_local_buf != _27)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  # DEBUG D#188 => D.43976.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43976
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43976
  # DEBUG this => D#1
  # DEBUG this => &D.43976
  # DEBUG D#185 => &D.43976._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _27
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _27
  # DEBUG this => D#179
  # DEBUG D.56687 => D#180
  operator delete (_27);

  <bb 141>:
  # DEBUG D#189 => &D.43976._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43976 ={v} {CLOBBER};
  resx 10

<L38>:
  # DEBUG this => &D.43978
  # DEBUG this => &D.43978
  # DEBUG this => &D.43978
  _40 = MEM[(char * *)&D.43978];
  # DEBUG D#1 => &D.43978
  # DEBUG this => D#1
  # DEBUG this => &D.43978
  if (&D.43978.D.11539._M_local_buf != _40)
    goto <bb 143>;
  else
    goto <bb 144>;

  <bb 143>:
  # DEBUG D#188 => D.43978.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43978
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43978
  # DEBUG this => D#1
  # DEBUG this => &D.43978
  # DEBUG D#185 => &D.43978._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _40
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _40
  # DEBUG this => D#179
  # DEBUG D.56704 => D#180
  operator delete (_40);

  <bb 144>:
  # DEBUG D#189 => &D.43978._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43978 ={v} {CLOBBER};
  resx 15

<L74>:
  goto <bb 147> (<L39>);

<L65>:

<L39>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&err);
  resx 14

  <bb 148>:
  # DEBUG this => &err
  # DEBUG __mode => 16
  # DEBUG D#194 => &err.D.23249
  # DEBUG this => D#194
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&err + 112B].D.19921);
  MEM[(struct basic_ios *)&err + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&err + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&err + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&err + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&err + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&err + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&err + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&err + 112B]._M_num_get = 0B;
  # DEBUG this => &err.D.23246
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.35_131 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  MEM[(struct basic_ostream *)&err]._vptr.basic_ostream = iftmp.35_131;
  _132 = MEM[(long int *)iftmp.35_131 + -24B];
  iftmp.36_133 = (sizetype) _132;
  _134 = &err.D.23246 + iftmp.36_133;
  iftmp.37_135 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _134->D.19921._vptr.ios_base = iftmp.37_135;
  std::basic_ios<char>::init (_134, 0B);
  goto <bb 15>;

<L75>:
  goto <bb 19> (<L44>);

  <bb 150>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L76>:
  goto <bb 57> (<L47>);

  <bb 152>:
  # DEBUG __first => _149
  # DEBUG __last => _147
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => _149
  # DEBUG __last => _147
  __last.51_157 = (long int) _147;
  __first.52_158 = (long int) _149;
  _159 = __last.51_157 - __first.52_158;
  __dnew.48_160 = (long unsigned int) _159;
  __dnew = __dnew.48_160;
  if (__dnew.48_160 > 15)
    goto <bb 26>;
  else
    goto <bb 28>;

  <bb 153>:
  # DEBUG __first => _151
  # DEBUG __last => _148
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => _151
  # DEBUG __last => _148
  __last.51_169 = (long int) _148;
  __first.52_170 = (long int) _151;
  _171 = __last.51_169 - __first.52_170;
  __dnew.48_172 = (long unsigned int) _171;
  __dnew = __dnew.48_172;
  if (__dnew.48_172 > 15)
    goto <bb 36>;
  else
    goto <bb 39>;

  <bb 154>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L77>:
  goto <bb 57> (<L47>);

  <bb 156>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L78>:
  goto <bb 117> (<L53>);

  <bb 158>:
  # DEBUG __first => _226
  # DEBUG __last => _224
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => _226
  # DEBUG __last => _224
  __last.51_234 = (long int) _224;
  __first.52_235 = (long int) _226;
  _236 = __last.51_234 - __first.52_235;
  __dnew.48_237 = (long unsigned int) _236;
  __dnew = __dnew.48_237;
  if (__dnew.48_237 > 15)
    goto <bb 86>;
  else
    goto <bb 88>;

  <bb 159>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L79>:
  goto <bb 117> (<L53>);

  <bb 161>:
  # DEBUG __first => _228
  # DEBUG __last => _225
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => _228
  # DEBUG __last => _225
  __last.51_246 = (long int) _225;
  __first.52_247 = (long int) _228;
  _248 = __last.51_246 - __first.52_247;
  __dnew.48_249 = (long unsigned int) _248;
  __dnew = __dnew.48_249;
  if (__dnew.48_249 > 15)
    goto <bb 96>;
  else
    goto <bb 99>;

  <bb 162>:
  # DEBUG D#373 => &this_13(D)->_in_use_by
  _75 = MEM[(int * *)this_13(D) + 152B];
  # DEBUG D#43 => D#373
  # DEBUG __n => _41
  # DEBUG this => D#43
  _88 = _75 + _77;
  _59 = *_88;
  if (_59 < 0)
    goto <bb 130>;
  else
    goto <bb 131>;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = int; _Alloc = std::allocator<int>] (_ZNSt11_Deque_baseIiSaIiEED2Ev, funcdef_no=2441, decl_uid=43096, cgraph_uid=908, symbol_order=909)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = int; _Alloc = std::allocator<int>] (struct _Deque_base * const this)
{
  int * * __nstart;
  int * * _4;
  int * * _5;
  int * * _6;
  int * _13;
  int * * pretmp_16;
  int * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG this => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG __n => __nstart_7
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => this_3(D)
  # DEBUG __p => _13
  # DEBUG __size => 4
  # DEBUG D#167 => &this_3(D)->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _13
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _13
  # DEBUG this => D#140
  # DEBUG D.57638 => D#141
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#447 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#939 => this_3(D)->_M_impl._M_map
  # DEBUG D#445 => this_3(D)
  # DEBUG D#446 => D#447
  # DEBUG __p => D#939
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#939
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#939
  # DEBUG this => D#261
  # DEBUG D.57625 => D#262
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#448 => &this_3(D)->_M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=2534, decl_uid=40161, cgraph_uid=1001, symbol_order=1002)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.68134;
  const size_type __len;
  size_type D.68133;
  size_type __n;
  int * D.68124;
  const ptrdiff_t _Num;
  int * D.68115;
  int * const __position;
  int * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  int * __first;
  long unsigned int __n;
  int * __first;
  const ptrdiff_t _Num;
  int * __first;
  int * __new_finish;
  const size_type __elems_after;
  value_type __x_copy;
  int * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  int * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  int * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  int * _41;
  int * _43;
  long int _47;
  int * _48;
  long int __first.74_49;
  int * _53;
  const int _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  int * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  int * _108;
  int * _112;
  int * iftmp.71_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  int * prephitmp_146;
  int * pretmp_147;
  int * prephitmp_148;
  int * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  int * pretmp_166;
  int * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  int * pretmp_173;
  int * prephitmp_174;

  <bb 2>:
  # DEBUG D#946 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#946
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.40238._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.40238._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 4;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#76 => &this_4(D)->D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  # DEBUG __lhs => &D.45697
  # DEBUG __rhs => &__position
  # DEBUG this => &D.45697
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 4;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#550 => &this_4(D)->D.40238
  # DEBUG this => D#550
  _39 = __n_2(D) * 4;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#239
  # DEBUG D#238 => D#239
  # DEBUG D#235 => D#238
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.58883 => D#235
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __first.74_49 = (long int) _41;
  _47 = _8 - __first.74_49;
  _Num_45 = _47 /[ex] 4;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.40238._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.40238._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#946
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#946
  # DEBUG __it => D#946
  # DEBUG __first => D#946
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#946
  # DEBUG __it => D#946
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _104 = __first.74_49 - _27;
  _Num_105 = _104 /[ex] 4;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#234 => &__x_copy
  # DEBUG __first => D#946
  # DEBUG __last => _48
  # DEBUG D#233 => D#234
  # DEBUG __value => D#233
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#946
  # DEBUG __it => D#946
  # DEBUG D#232 => D#233
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __value => D#232
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#946
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 4;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#551 => &this_4(D)->D.40238
  # DEBUG this => D#551
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#543 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#542 => D#543
  # DEBUG __x => D#542
  # DEBUG D.58968 => D#544
  # DEBUG D#541 => D#542
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#540 => D#541
  # DEBUG __x => D#540
  # DEBUG __assignable => 1
  # DEBUG D#539 => D#540
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#538 => D#539
  # DEBUG __x => D#538
  # DEBUG D#537 => D#538
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#536 => D#537
  # DEBUG __value => D#536
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#535 => D#536
  # DEBUG __first => NULL
  # DEBUG __n => __n_50
  # DEBUG __value => D#535
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 4;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 4;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.40238._M_impl._M_finish = __first_125;
  # DEBUG D#552 => &this_4(D)->D.40238
  # DEBUG this => D#552
  # DEBUG this => &__position
  # DEBUG __first => D#946
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#239
  # DEBUG D#238 => D#239
  # DEBUG D#235 => D#238
  # DEBUG __first => D#946
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.58930 => D#235
  # DEBUG __first => D#946
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#946
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#946
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#946
  # DEBUG __it => D#946
  # DEBUG __first => D#946
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#946
  # DEBUG __it => D#946
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.40238._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.40238._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#234 => &__x_copy
  # DEBUG __first => D#946
  # DEBUG __last => __first_7
  # DEBUG D#233 => D#234
  # DEBUG __value => D#233
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#946
  # DEBUG __it => D#946
  # DEBUG D#232 => D#233
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __value => D#232
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#946
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 4;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#402 => this_4(D)
  # DEBUG this => D#402
  # DEBUG D#401 => D#402
  # DEBUG D#400 => &D#401->D.40238
  # DEBUG this => D#400
  # DEBUG __a => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#381 => D#398
  # DEBUG this => D#381
  _17 = MEM[(int * *)this_4(D)];
  # DEBUG D#64 => this_4(D)
  # DEBUG D#64 => this_4(D)
  # DEBUG this => D#64
  # DEBUG this => D#64
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 4;
  _119 = (const long unsigned int) _118;
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#64 => this_4(D)
  # DEBUG D#64 => this_4(D)
  # DEBUG this => D#64
  # DEBUG this => D#64
  # DEBUG D#64 => this_4(D)
  # DEBUG D#64 => this_4(D)
  # DEBUG this => D#64
  # DEBUG this => D#64
  # DEBUG __a => &D.68134
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#64 => this_4(D)
  # DEBUG D#64 => this_4(D)
  # DEBUG this => D#64
  # DEBUG this => D#64
  # DEBUG D#402 => this_4(D)
  # DEBUG this => D#402
  # DEBUG D#401 => D#402
  # DEBUG D#400 => &D#401->D.40238
  # DEBUG this => D#400
  # DEBUG __a => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#381 => D#398
  # DEBUG this => D#381
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 4;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551612(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#77 => &this_4(D)->D.40238._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#77
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45720
  # DEBUG this => &__position
  # DEBUG this => &D.45720
  # DEBUG D#563 => _157 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#563
  # DEBUG D#562 => &this_4(D)->D.40238
  # DEBUG D#389 => D#562
  # DEBUG __n => NULL
  # DEBUG this => D#389
  # DEBUG D#388 => D#389
  # DEBUG D#387 => &D#388->_M_impl
  # DEBUG D#386 => D#387
  # DEBUG __n => NULL
  # DEBUG __a => D#386
  # DEBUG D#385 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#384 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#383
  # DEBUG D.68122 => D#384
  # DEBUG D#382 => D#383
  # DEBUG D#381 => D#382
  # DEBUG this => D#381
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.40238._M_impl._M_start;
  pretmp_147 = this_4(D)->D.40238._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.71_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#546 => &this_4(D)->D.40238
  # DEBUG this => D#546
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.71_113 + _19;
  _56 = MEM[(const int &)__x_21(D)];
  # DEBUG D#543 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#542 => D#543
  # DEBUG __x => D#542
  # DEBUG D.59085 => D#544
  # DEBUG D#541 => D#542
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#540 => D#541
  # DEBUG __x => D#540
  # DEBUG __assignable => 1
  # DEBUG D#539 => D#540
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#538 => D#539
  # DEBUG __x => D#538
  # DEBUG D#537 => D#538
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#536 => D#537
  # DEBUG __value => D#536
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#535 => D#536
  # DEBUG __first => NULL
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#535
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 4;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#547 => &this_4(D)->D.40238
  # DEBUG this => D#547
  # DEBUG this => &__position
  # DEBUG D#945 => this_4(D)->D.40238._M_impl._M_start
  # DEBUG __first => D#945
  # DEBUG __last => D#946
  # DEBUG __result => NULL
  # DEBUG __alloc => D#237
  # DEBUG D#236 => D#237
  # DEBUG D#235 => D#236
  # DEBUG __first => D#945
  # DEBUG __last => D#946
  # DEBUG __result => NULL
  # DEBUG D.59047 => D#235
  # DEBUG __first => D#945
  # DEBUG __last => D#946
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#945
  # DEBUG __last => D#946
  # DEBUG __result => NULL
  # DEBUG __first => D#945
  # DEBUG __last => D#946
  # DEBUG __result => NULL
  # DEBUG __it => D#946
  # DEBUG __it => D#946
  # DEBUG __it => D#945
  # DEBUG __it => D#945
  # DEBUG __first => D#945
  # DEBUG __last => D#946
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#946
  # DEBUG __it => D#946
  # DEBUG __it => D#945
  # DEBUG __it => D#945
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG D#944 => (long int) D#945
  # DEBUG D#943 => _158 - D#944
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.71_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#942 => (long unsigned int) D#943
  # DEBUG __new_finish => iftmp.71_113 + D#942
  _25 = __n_2(D) * 4;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.71_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#548 => &this_4(D)->D.40238
  # DEBUG this => D#548
  # DEBUG D#941 => this_4(D)->D.40238._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#946
  # DEBUG __last => D#941
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#237
  # DEBUG D#236 => D#237
  # DEBUG D#235 => D#236
  # DEBUG __first => D#946
  # DEBUG __last => D#941
  # DEBUG __result => __new_finish_26
  # DEBUG D.59008 => D#235
  # DEBUG __first => D#946
  # DEBUG __last => D#941
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#946
  # DEBUG __last => D#941
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#946
  # DEBUG __last => D#941
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG __it => D#946
  # DEBUG __it => D#946
  # DEBUG __first => D#946
  # DEBUG __last => D#941
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#941
  # DEBUG __it => D#941
  # DEBUG __it => D#946
  # DEBUG __it => D#946
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 4;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#549 => &this_4(D)->D.40238
  # DEBUG this => D#549
  # DEBUG D#561 => this_4(D)->D.40238._M_impl._M_finish
  # DEBUG D#560 => this_4(D)->D.40238._M_impl._M_start
  # DEBUG __first => D#560
  # DEBUG __last => D#561
  # DEBUG D.59001 => NULL
  # DEBUG D#134 => D#560
  # DEBUG D#135 => D#561
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#559 => this_4(D)->D.40238._M_impl._M_end_of_storage
  # DEBUG D#558 => (long int) D#559
  # DEBUG D#557 => (long int) D#945
  # DEBUG D#556 => D#558 - D#557
  # DEBUG D#555 => D#556 /[ex] 4
  # DEBUG D#554 => (long unsigned int) D#555
  # DEBUG D#553 => &this_4(D)->D.40238
  # DEBUG this => D#553
  # DEBUG __p => D#945
  # DEBUG __n => D#554
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#146 => &D#553->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#554
  # DEBUG __p => D#945
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => D#945
  # DEBUG this => D#140
  # DEBUG D.58997 => D#141
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.40238._M_impl._M_start = iftmp.71_113;
  this_4(D)->D.40238._M_impl._M_finish = _70;
  this_4(D)->D.40238._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#77 => &this_4(D)->D.40238._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#77
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45720
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.45720
  _143 = _144 - _116;
  # DEBUG D#563 => _143 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#563
  # DEBUG D#562 => &this_4(D)->D.40238
  # DEBUG D#389 => D#562
  # DEBUG __n => NULL
  # DEBUG this => D#389
  # DEBUG D#388 => D#389
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#77 => &this_4(D)->D.40238._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#77
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.45720
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.45720
  _150 = _151 - _116;
  # DEBUG D#563 => _150 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#563
  # DEBUG D#562 => &this_4(D)->D.40238
  # DEBUG D#389 => D#562
  # DEBUG __n => NULL
  # DEBUG this => D#389
  # DEBUG D#388 => D#389
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function BufferState::SharedBufferPolicy::SharedBufferPolicy(const Configuration&, BufferState*, const string&) (_ZN11BufferState18SharedBufferPolicyC2ERK13ConfigurationPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2138, decl_uid=40286, cgraph_uid=605, symbol_order=606)

Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
BufferState::SharedBufferPolicy::SharedBufferPolicy(const Configuration&, BufferState*, const string&) (struct SharedBufferPolicy * const this, const struct Configuration & config, struct BufferState * parent, const struct string & name)
{
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct __normal_iterator D.68756;
  struct iterator __position;
  value_type __x;
  size_type __dnew;
  size_type __dnew;
  struct __normal_iterator D.68646;
  struct iterator __position;
  value_type __x;
  size_type __dnew;
  size_type __dnew;
  struct iterator __position;
  value_type __x;
  struct __normal_iterator D.68525;
  struct __normal_iterator D.68516;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  struct iterator __position;
  value_type __x;
  size_type __dnew;
  size_type __dnew;
  int v;
  int i;
  int i;
  const int ev;
  int i;
  const int sv;
  const int bs;
  struct vector end_vc;
  struct vector start_vc;
  int num_private_bufs;
  const struct string D.42690;
  const struct string D.42687;
  const struct string D.42682;
  const struct string D.42679;
  const value_type D.42677;
  const struct string D.42675;
  const struct string D.42672;
  struct vector D.42671;
  const struct string D.42669;
  const struct string D.42667;
  const struct string D.42665;
  const struct string D.42663;
  static const char __PRETTY_FUNCTION__[103] = "BufferState::SharedBufferPolicy::SharedBufferPolicy(const Configuration&, BufferState*, const string&)";
  static const char __PRETTY_FUNCTION__[103] = "BufferState::SharedBufferPolicy::SharedBufferPolicy(const Configuration&, BufferState*, const string&)";
  const int pretmp_4;
  const int prephitmp_15;
  struct Module * _29;
  int * const _30;
  char * const _37;
  int & _38;
  char * const _43;
  struct vector * _46;
  int * const pretmp_47;
  long unsigned int _48;
  int _51;
  char * const _54;
  int _58;
  int _59;
  int * const _61;
  char * const _63;
  int * _65;
  int & _66;
  struct vector * _69;
  int * _72;
  char * const _74;
  int * pretmp_75;
  int _77;
  char * const _81;
  int _83;
  int _84;
  int * _86;
  char * const _92;
  int & _94;
  int _95;
  char * const _100;
  int & _101;
  int _104;
  char * const _107;
  int * _109;
  long unsigned int _110;
  long unsigned int _111;
  int _112;
  int _113;
  char * const _119;
  char * const _124;
  int * const _125;
  int _128;
  char * const _131;
  int * _133;
  long unsigned int _134;
  int * const _135;
  int _137;
  int _138;
  int _139;
  int * const _141;
  int * _145;
  long unsigned int _147;
  struct vector * _148;
  int * const _149;
  int _150;
  long unsigned int _152;
  int & _153;
  int _154;
  int _156;
  long unsigned int _158;
  int _160;
  int * const _161;
  int _162;
  long unsigned int _163;
  int * const _164;
  int _165;
  struct vector * _172;
  char * const _174;
  int * _175;
  int * _179;
  char * const _181;
  int * _182;
  char * const _184;
  char * const _185;
  char * const _188;
  char * const _190;
  char * const _192;
  char * const _194;
  int * _197;
  int * _198;
  int * _199;
  long unsigned int _207;
  int & _208;
  int * _209;
  const int pretmp_264;
  const int prephitmp_265;
  int prephitmp_281;
  int prephitmp_287;
  int * const prephitmp_300;
  int * const prephitmp_307;
  int * const pretmp_308;
  long unsigned int prephitmp_320;
  int pretmp_321;
  int prephitmp_322;
  long unsigned int pretmp_339;
  long unsigned int pretmp_340;
  int * _422;
  int pretmp_444;
  int * const _448;
  int * const _449;
  long int _450;
  long int _451;
  long int _452;
  long int _453;
  size_type _454;
  long unsigned int _455;
  long unsigned int _456;
  int * _457;
  const int pretmp_459;
  int _462;
  int _464;
  int & _469;
  int * _478;
  int prephitmp_482;
  long unsigned int _484;
  int _494;
  int prephitmp_497;
  char * _498;
  long unsigned int __dnew.49_499;
  long unsigned int __dnew.49_502;
  char * const _503;
  char * _504;
  int * const prephitmp_509;
  const int prephitmp_511;
  char * _514;
  long unsigned int __dnew.49_515;
  long unsigned int __dnew.49_518;
  char * const _519;
  char * _520;
  int * _521;
  int * _522;
  int * _524;
  int * _525;
  int * _526;
  int * _527;
  int & _528;
  long int _529;
  long int _530;
  long int _531;
  long int _532;
  size_type _533;
  long unsigned int _534;
  long unsigned int _535;
  int * _536;
  int * _542;
  long unsigned int _543;
  char * _545;
  long unsigned int __dnew.49_546;
  long unsigned int __dnew.49_549;
  char * const _550;
  char * _551;
  char * _561;
  long unsigned int __dnew.49_562;
  long unsigned int __dnew.49_565;
  char * const _566;
  char * _567;
  int * const _568;
  int * const _569;
  long int _570;
  long int _571;
  long int _572;
  long int _573;
  size_type _574;
  long unsigned int _575;
  long unsigned int _576;
  int * _577;
  int * _578;
  int * _580;
  int _586;
  int _587;
  char * _589;
  long unsigned int __dnew.49_590;
  long unsigned int __dnew.49_593;
  char * const _594;
  char * _595;
  int & _602;
  char * _605;
  long unsigned int __dnew.49_606;
  long unsigned int __dnew.49_609;
  char * const _610;
  char * _611;
  int * const _612;
  int * const _613;
  long int _614;
  long int _615;
  long int _616;
  long int _617;
  size_type _618;
  long unsigned int _619;
  long unsigned int _620;
  int * _621;
  int * _622;
  int * _624;
  int * const _625;
  long int _626;
  long int _627;
  long int _628;
  long int _629;
  size_type _630;
  long unsigned int _631;
  long unsigned int _632;
  int * _633;
  int * const _634;
  long int _635;
  long int _636;
  long int _637;
  long int _638;
  size_type _639;
  long unsigned int _640;
  long unsigned int _641;
  int * _642;
  int * const prephitmp_679;
  int * const pretmp_752;
  int * pretmp_762;

  <bb 2>:
  # DEBUG D#578 => &this_23(D)->D.40291
  # DEBUG this => D#578
  # DEBUG config => config_25(D)
  # DEBUG parent => parent_26(D)
  # DEBUG name => name_27(D)
  _29 = &MEM[(struct BufferPolicy *)this_23(D)].D.39647;
  Module::Module (_29, parent_26(D), name_27(D));
  MEM[(struct BufferPolicy *)this_23(D)]._buffer_state = parent_26(D);
  this_23(D)->D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState18SharedBufferPolicyE + 16B];
  # DEBUG D#577 => &this_23(D)->_private_buf_vc_map
  # DEBUG this => D#577
  # DEBUG D#229 => &D#577->D.40238
  # DEBUG this => D#229
  # DEBUG D#228 => &D#229->_M_impl
  # DEBUG this => D#228
  # DEBUG this => D#228
  # DEBUG this => D#228
  MEM[(struct _Vector_impl *)this_23(D) + 112B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_23(D) + 112B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_23(D) + 112B]._M_end_of_storage = 0B;
  # DEBUG D#576 => &this_23(D)->_private_buf_size
  # DEBUG this => D#576
  # DEBUG D#229 => &D#576->D.40238
  # DEBUG this => D#229
  # DEBUG D#228 => &D#229->_M_impl
  # DEBUG this => D#228
  # DEBUG this => D#228
  # DEBUG this => D#228
  MEM[(struct _Vector_impl *)this_23(D) + 136B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_23(D) + 136B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_23(D) + 136B]._M_end_of_storage = 0B;
  # DEBUG D#575 => &this_23(D)->_private_buf_occupancy
  # DEBUG this => D#575
  # DEBUG D#229 => &D#575->D.40238
  # DEBUG this => D#229
  # DEBUG D#228 => &D#229->_M_impl
  # DEBUG this => D#228
  # DEBUG this => D#228
  # DEBUG this => D#228
  MEM[(struct _Vector_impl *)this_23(D) + 160B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_23(D) + 160B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_23(D) + 160B]._M_end_of_storage = 0B;
  this_23(D)->_shared_buf_occupancy = 0;
  # DEBUG D#574 => &this_23(D)->_reserved_slots
  # DEBUG this => D#574
  # DEBUG D#229 => &D#574->D.40238
  # DEBUG this => D#229
  # DEBUG D#228 => &D#229->_M_impl
  # DEBUG this => D#228
  # DEBUG this => D#228
  # DEBUG this => D#228
  MEM[(struct _Vector_impl *)this_23(D) + 192B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_23(D) + 192B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_23(D) + 192B]._M_end_of_storage = 0B;
  # DEBUG D#63 => &D.42664
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42664
  # DEBUG this => &D.42663
  # DEBUG __s => "num_vcs"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42663
  # DEBUG D#296 => &D.42663._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42663.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42663]._M_p = &D.42663.D.11539._M_local_buf;
  # DEBUG __s => "num_vcs"
  # DEBUG this => &D.42663
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG this => &D.42663
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG this => &D.42663
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG __ptr => "num_vcs"
  # DEBUG __first => "num_vcs"
  # DEBUG __last => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "num_vcs"
  # DEBUG __last => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#1 => &D.42663
  # DEBUG this => D#1
  # DEBUG __p => &D.42663.D.11539._M_local_buf
  # DEBUG __k1 => "num_vcs"
  # DEBUG __k2 => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG __d => &D.42663.D.11539._M_local_buf
  # DEBUG __s => "num_vcs"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.42663.D.11539._M_local_buf
  # DEBUG __s2 => "num_vcs"
  # DEBUG __n => 7
  __builtin_memcpy (&D.42663.D.11539._M_local_buf, "num_vcs", 7);
  # DEBUG this => &D.42663
  # DEBUG __n => 7
  # DEBUG D#9 => &D.42663
  # DEBUG __length => 7
  # DEBUG this => D#9
  MEM[(size_type *)&D.42663 + 8B] = 7;
  # DEBUG D#1 => &D.42663
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.42663 + 23B]
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.42663 + 23] = 0;
  # DEBUG D#1009 => {CLOBBER}
  # DEBUG __dnew => D#1009
  num_private_bufs_34 = Configuration::GetInt (config_25(D), &D.42663);

  <bb 3>:
  # DEBUG vcs => num_private_bufs_34
  # DEBUG this => &D.42663
  # DEBUG this => &D.42663
  # DEBUG this => &D.42663
  _37 = MEM[(char * *)&D.42663];
  # DEBUG D#1 => &D.42663
  # DEBUG this => D#1
  # DEBUG this => &D.42663
  if (&D.42663.D.11539._M_local_buf != _37)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  # DEBUG D#188 => D.42663.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42663
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42663
  # DEBUG this => D#1
  # DEBUG this => &D.42663
  # DEBUG D#185 => &D.42663._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _37
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _37
  # DEBUG this => D#179
  # DEBUG D.59180 => D#180
  operator delete (_37);

  <bb 5>:
  # DEBUG D#189 => &D.42663._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42663 ={v} {CLOBBER};
  # DEBUG this => &D.42664
  # DEBUG this => &D.42664
  # DEBUG D#63 => &D.42666
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42666
  # DEBUG this => &D.42665
  # DEBUG __s => "private_bufs"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42665
  # DEBUG D#296 => &D.42665._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42665.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42665]._M_p = &D.42665.D.11539._M_local_buf;
  # DEBUG __s => "private_bufs"
  # DEBUG this => &D.42665
  # DEBUG __beg => "private_bufs"
  # DEBUG __end => &MEM[(void *)"private_bufs" + 12B]
  # DEBUG this => &D.42665
  # DEBUG __beg => "private_bufs"
  # DEBUG __end => &MEM[(void *)"private_bufs" + 12B]
  # DEBUG this => &D.42665
  # DEBUG __beg => "private_bufs"
  # DEBUG __end => &MEM[(void *)"private_bufs" + 12B]
  # DEBUG __ptr => "private_bufs"
  # DEBUG __first => "private_bufs"
  # DEBUG __last => &MEM[(void *)"private_bufs" + 12B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "private_bufs"
  # DEBUG __last => &MEM[(void *)"private_bufs" + 12B]
  # DEBUG __dnew => 12
  # DEBUG D#1 => &D.42665
  # DEBUG this => D#1
  # DEBUG __p => &D.42665.D.11539._M_local_buf
  # DEBUG __k1 => "private_bufs"
  # DEBUG __k2 => &MEM[(void *)"private_bufs" + 12B]
  # DEBUG __d => &D.42665.D.11539._M_local_buf
  # DEBUG __s => "private_bufs"
  # DEBUG __n => 12
  # DEBUG __s1 => &D.42665.D.11539._M_local_buf
  # DEBUG __s2 => "private_bufs"
  # DEBUG __n => 12
  __builtin_memcpy (&D.42665.D.11539._M_local_buf, "private_bufs", 12);
  # DEBUG this => &D.42665
  # DEBUG __n => 12
  # DEBUG D#9 => &D.42665
  # DEBUG __length => 12
  # DEBUG this => D#9
  MEM[(size_type *)&D.42665 + 8B] = 12;
  # DEBUG D#1 => &D.42665
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.42665 + 28B]
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.42665 + 28] = 0;
  # DEBUG D#1010 => {CLOBBER}
  # DEBUG __dnew => D#1010
  num_private_bufs_41 = Configuration::GetInt (config_25(D), &D.42665);

  <bb 6>:
  # DEBUG num_private_bufs => num_private_bufs_41
  # DEBUG this => &D.42665
  # DEBUG this => &D.42665
  # DEBUG this => &D.42665
  _43 = MEM[(char * *)&D.42665];
  # DEBUG D#1 => &D.42665
  # DEBUG this => D#1
  # DEBUG this => &D.42665
  if (&D.42665.D.11539._M_local_buf != _43)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#188 => D.42665.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42665
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42665
  # DEBUG this => D#1
  # DEBUG this => &D.42665
  # DEBUG D#185 => &D.42665._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _43
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _43
  # DEBUG this => D#179
  # DEBUG D.59197 => D#180
  operator delete (_43);

  <bb 8>:
  # DEBUG D#189 => &D.42665._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42665 ={v} {CLOBBER};
  # DEBUG this => &D.42666
  # DEBUG this => &D.42666
  if (num_private_bufs_41 < 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  pretmp_339 = (long unsigned int) num_private_bufs_34;
  goto <bb 12>;

  <bb 10>:
  if (num_private_bufs_41 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  pretmp_340 = (long unsigned int) num_private_bufs_41;

  <bb 12>:
  # num_private_bufs_1 = PHI <num_private_bufs_34(9), num_private_bufs_41(11), 1(10)>
  # prephitmp_320 = PHI <pretmp_339(9), pretmp_340(11), 1(10)>
  # DEBUG num_private_bufs => num_private_bufs_1
  # DEBUG D#1013 => (long unsigned int) num_private_bufs_1
  # DEBUG D#1016 => &this_23(D)->_private_buf_occupancy
  # DEBUG this => D#1016
  # DEBUG __new_size => D#1013
  __x = 0;
  # DEBUG __x => __x
  _448 = MEM[(int * *)this_23(D) + 160B];
  # DEBUG D#64 => D#1016
  _449 = MEM[(int * *)this_23(D) + 168B];
  # DEBUG D#64 => D#1016
  # DEBUG this => D#64
  # DEBUG this => D#64
  _450 = (long int) _449;
  _451 = (long int) _448;
  _452 = _450 - _451;
  _453 = _452 /[ex] 4;
  _454 = (size_type) _453;
  if (prephitmp_320 > _454)
    goto <bb 13>;
  else
    goto <bb 15>;

  <bb 13>:
  # DEBUG D#64 => D#1016
  # DEBUG D#64 => D#1016
  # DEBUG this => D#64
  # DEBUG this => D#64
  _455 = prephitmp_320 - _454;
  # DEBUG this => D#1016
  # DEBUG D#76 => &D#1016->D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  # DEBUG this => D#1016
  MEM[(struct __normal_iterator *)&__position] = _449;
  # DEBUG __n => _455
  # DEBUG __x => &__x
  _46 = &this_23(D)->_private_buf_occupancy;
  std::vector<int>::_M_fill_insert (_46, __position, _455, &__x);

  <bb 14>:
  goto <bb 17>;

  <bb 15>:
  # DEBUG D#64 => D#1016
  # DEBUG D#64 => D#1016
  # DEBUG this => D#64
  # DEBUG this => D#64
  if (prephitmp_320 < _454)
    goto <bb 16>;
  else
    goto <bb 14>;

  <bb 16>:
  _456 = prephitmp_320 * 4;
  _457 = _448 + _456;
  # DEBUG D#139 => D#1016
  # DEBUG __pos => _457
  # DEBUG D#138 => D#139
  # DEBUG this => D#138
  # DEBUG D#136 => &D#138->D.40238
  # DEBUG this => D#136
  # DEBUG D#137 => D#138->D.40238._M_impl._M_finish
  # DEBUG __first => _457
  # DEBUG __last => D#137
  # DEBUG D.54135 => NULL
  # DEBUG D#134 => _457
  # DEBUG D#135 => D#137
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  MEM[(int * *)this_23(D) + 168B] = _457;

  <bb 17>:
  # DEBUG D#63 => &D.42668
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42668
  # DEBUG this => &D.42667
  # DEBUG __s => "buf_size"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42667
  # DEBUG D#296 => &D.42667._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42667.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42667]._M_p = &D.42667.D.11539._M_local_buf;
  # DEBUG __s => "buf_size"
  # DEBUG this => &D.42667
  # DEBUG __beg => "buf_size"
  # DEBUG __end => &MEM[(void *)"buf_size" + 8B]
  # DEBUG this => &D.42667
  # DEBUG __beg => "buf_size"
  # DEBUG __end => &MEM[(void *)"buf_size" + 8B]
  # DEBUG this => &D.42667
  # DEBUG __beg => "buf_size"
  # DEBUG __end => &MEM[(void *)"buf_size" + 8B]
  # DEBUG __ptr => "buf_size"
  # DEBUG __first => "buf_size"
  # DEBUG __last => &MEM[(void *)"buf_size" + 8B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "buf_size"
  # DEBUG __last => &MEM[(void *)"buf_size" + 8B]
  # DEBUG __dnew => 8
  # DEBUG D#1 => &D.42667
  # DEBUG this => D#1
  # DEBUG __p => &D.42667.D.11539._M_local_buf
  # DEBUG __k1 => "buf_size"
  # DEBUG __k2 => &MEM[(void *)"buf_size" + 8B]
  # DEBUG __d => &D.42667.D.11539._M_local_buf
  # DEBUG __s => "buf_size"
  # DEBUG __n => 8
  # DEBUG __s1 => &D.42667.D.11539._M_local_buf
  # DEBUG __s2 => "buf_size"
  # DEBUG __n => 8
  __builtin_memcpy (&D.42667.D.11539._M_local_buf, "buf_size", 8);
  # DEBUG this => &D.42667
  # DEBUG __n => 8
  # DEBUG D#9 => &D.42667
  # DEBUG __length => 8
  # DEBUG this => D#9
  MEM[(size_type *)&D.42667 + 8B] = 8;
  # DEBUG D#1 => &D.42667
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.42667 + 24B]
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.42667 + 24] = 0;
  # DEBUG D#1011 => {CLOBBER}
  # DEBUG __dnew => D#1011
  _51 = Configuration::GetInt (config_25(D), &D.42667);

  <bb 18>:
  this_23(D)->_buf_size = _51;
  # DEBUG this => &D.42667
  # DEBUG this => &D.42667
  # DEBUG this => &D.42667
  _54 = MEM[(char * *)&D.42667];
  # DEBUG D#1 => &D.42667
  # DEBUG this => D#1
  # DEBUG this => &D.42667
  if (&D.42667.D.11539._M_local_buf != _54)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG D#188 => D.42667.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42667
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42667
  # DEBUG this => D#1
  # DEBUG this => &D.42667
  # DEBUG D#185 => &D.42667._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _54
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _54
  # DEBUG this => D#179
  # DEBUG D.59215 => D#180
  operator delete (_54);
  pretmp_321 = this_23(D)->_buf_size;

  <bb 20>:
  # prephitmp_322 = PHI <_51(18), pretmp_321(19)>
  # DEBUG D#189 => &D.42667._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42667 ={v} {CLOBBER};
  # DEBUG this => &D.42668
  # DEBUG this => &D.42668
  if (prephitmp_322 < 0)
    goto <bb 21>;
  else
    goto <bb 25>;

  <bb 21>:
  # DEBUG D#63 => &D.42670
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42670
  # DEBUG this => &D.42669
  # DEBUG __s => "vc_buf_size"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42669
  # DEBUG D#296 => &D.42669._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42669.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42669]._M_p = &D.42669.D.11539._M_local_buf;
  # DEBUG __s => "vc_buf_size"
  # DEBUG this => &D.42669
  # DEBUG __beg => "vc_buf_size"
  # DEBUG __end => &MEM[(void *)"vc_buf_size" + 11B]
  # DEBUG this => &D.42669
  # DEBUG __beg => "vc_buf_size"
  # DEBUG __end => &MEM[(void *)"vc_buf_size" + 11B]
  # DEBUG this => &D.42669
  # DEBUG __beg => "vc_buf_size"
  # DEBUG __end => &MEM[(void *)"vc_buf_size" + 11B]
  # DEBUG __ptr => "vc_buf_size"
  # DEBUG __first => "vc_buf_size"
  # DEBUG __last => &MEM[(void *)"vc_buf_size" + 11B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "vc_buf_size"
  # DEBUG __last => &MEM[(void *)"vc_buf_size" + 11B]
  # DEBUG __dnew => 11
  # DEBUG D#1 => &D.42669
  # DEBUG this => D#1
  # DEBUG __p => &D.42669.D.11539._M_local_buf
  # DEBUG __k1 => "vc_buf_size"
  # DEBUG __k2 => &MEM[(void *)"vc_buf_size" + 11B]
  # DEBUG __d => &D.42669.D.11539._M_local_buf
  # DEBUG __s => "vc_buf_size"
  # DEBUG __n => 11
  # DEBUG __s1 => &D.42669.D.11539._M_local_buf
  # DEBUG __s2 => "vc_buf_size"
  # DEBUG __n => 11
  __builtin_memcpy (&D.42669.D.11539._M_local_buf, "vc_buf_size", 11);
  # DEBUG this => &D.42669
  # DEBUG __n => 11
  # DEBUG D#9 => &D.42669
  # DEBUG __length => 11
  # DEBUG this => D#9
  MEM[(size_type *)&D.42669 + 8B] = 11;
  # DEBUG D#1 => &D.42669
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.42669 + 27B]
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.42669 + 27] = 0;
  # DEBUG D#1012 => {CLOBBER}
  # DEBUG __dnew => D#1012
  _58 = Configuration::GetInt (config_25(D), &D.42669);

  <bb 22>:
  _59 = num_private_bufs_34 * _58;
  this_23(D)->_buf_size = _59;
  # DEBUG this => &D.42669
  # DEBUG this => &D.42669
  # DEBUG this => &D.42669
  _63 = MEM[(char * *)&D.42669];
  # DEBUG D#1 => &D.42669
  # DEBUG this => D#1
  # DEBUG this => &D.42669
  if (&D.42669.D.11539._M_local_buf != _63)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#188 => D.42669.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42669
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42669
  # DEBUG this => D#1
  # DEBUG this => &D.42669
  # DEBUG D#185 => &D.42669._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _63
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _63
  # DEBUG this => D#179
  # DEBUG D.59233 => D#180
  operator delete (_63);

  <bb 24>:
  # DEBUG D#189 => &D.42669._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42669 ={v} {CLOBBER};
  # DEBUG this => &D.42670
  # DEBUG this => &D.42670

  <bb 25>:
  # DEBUG D#63 => &D.42673
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42673
  # DEBUG this => &D.42672
  # DEBUG __s => "private_buf_size"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42672
  # DEBUG D#296 => &D.42672._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42672.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42672]._M_p = &D.42672.D.11539._M_local_buf;
  # DEBUG __s => "private_buf_size"
  # DEBUG this => &D.42672
  # DEBUG __beg => "private_buf_size"
  # DEBUG __end => &MEM[(void *)"private_buf_size" + 16B]
  # DEBUG this => &D.42672
  # DEBUG __beg => "private_buf_size"
  # DEBUG __end => &MEM[(void *)"private_buf_size" + 16B]
  # DEBUG this => &D.42672
  # DEBUG __beg => "private_buf_size"
  # DEBUG __end => &MEM[(void *)"private_buf_size" + 16B]
  # DEBUG __ptr => "private_buf_size"
  # DEBUG __first => "private_buf_size"
  # DEBUG __last => &MEM[(void *)"private_buf_size" + 16B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "private_buf_size"
  # DEBUG __last => &MEM[(void *)"private_buf_size" + 16B]
  __dnew = 16;
  _498 = std::__cxx11::basic_string<char>::_M_create (&D.42672, &__dnew, 0);
  goto <bb 27>;

<L81>:
  goto <bb 211> (<L74>);

  <bb 27>:
  # DEBUG D#7 => &D.42672
  # DEBUG __p => _498
  # DEBUG this => D#7
  MEM[(char * *)&D.42672] = _498;
  __dnew.49_499 = __dnew;
  # DEBUG D#8 => &D.42672
  # DEBUG __capacity => __dnew.49_499
  # DEBUG this => D#8
  MEM[(size_type *)&D.42672 + 16B] = __dnew.49_499;
  # DEBUG D#1 => &D.42672
  # DEBUG this => D#1
  # DEBUG __p => _498
  # DEBUG __k1 => "private_buf_size"
  # DEBUG __k2 => &MEM[(void *)"private_buf_size" + 16B]
  # DEBUG __d => _498
  # DEBUG __s => "private_buf_size"
  # DEBUG __n => 16
  # DEBUG __s1 => _498
  # DEBUG __s2 => "private_buf_size"
  # DEBUG __n => 16
  __builtin_memcpy (_498, "private_buf_size", 16);
  __dnew.49_502 = __dnew;
  # DEBUG this => &D.42672
  # DEBUG __n => __dnew.49_502
  # DEBUG D#9 => &D.42672
  # DEBUG __length => __dnew.49_502
  # DEBUG this => D#9
  MEM[(size_type *)&D.42672 + 8B] = __dnew.49_502;
  _503 = MEM[(char * *)&D.42672];
  # DEBUG D#1 => &D.42672
  # DEBUG this => D#1
  _504 = _503 + __dnew.49_502;
  # DEBUG __c1 => _504
  # DEBUG __c2 => D#10
  MEM[(char_type &)_504] = 0;
  __dnew ={v} {CLOBBER};
  D.42671 = Configuration::GetIntArray (config_25(D), &D.42672); [return slot optimization]

  <bb 28>:
  _69 = &this_23(D)->_private_buf_size;
  std::vector<int>::operator= (_69, &D.42671);

  <bb 29>:
  # DEBUG this => &D.42671
  # DEBUG D#154 => &D.42671.D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D.42671.D.40238._M_impl._M_finish
  # DEBUG D#156 => D.42671.D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D.42671.D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _72 = MEM[(struct _Vector_base *)&D.42671]._M_impl._M_start;
  # DEBUG D#151 => (long int) _72
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _72
  # DEBUG __n => D#148
  if (_72 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _72
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _72
  # DEBUG this => D#140
  # DEBUG D.59272 => D#141
  operator delete (_72);

  <bb 31>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  D.42671 ={v} {CLOBBER};
  # DEBUG this => &D.42672
  # DEBUG this => &D.42672
  # DEBUG this => &D.42672
  _74 = MEM[(char * *)&D.42672];
  # DEBUG D#1 => &D.42672
  # DEBUG this => D#1
  # DEBUG this => &D.42672
  if (&D.42672.D.11539._M_local_buf != _74)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # DEBUG D#188 => D.42672.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42672
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42672
  # DEBUG this => D#1
  # DEBUG this => &D.42672
  # DEBUG D#185 => &D.42672._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _74
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _74
  # DEBUG this => D#179
  # DEBUG D.59255 => D#180
  operator delete (_74);

  <bb 33>:
  # DEBUG D#189 => &D.42672._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42672 ={v} {CLOBBER};
  # DEBUG this => &D.42673
  # DEBUG this => &D.42673
  # DEBUG D#564 => &this_23(D)->_private_buf_size
  # DEBUG this => D#564
  _61 = MEM[(int * *)this_23(D) + 144B];
  # DEBUG D#78 => D#564
  # DEBUG this => D#78
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _30 = MEM[(int * *)this_23(D) + 136B];
  # DEBUG D#79 => D#564
  # DEBUG this => D#79
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_30 == _61)
    goto <bb 34>;
  else
    goto <bb 56>;

  <bb 34>:
  # DEBUG D#63 => &D.42676
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42676
  # DEBUG this => &D.42675
  # DEBUG __s => "private_buf_size"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42675
  # DEBUG D#296 => &D.42675._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42675.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42675]._M_p = &D.42675.D.11539._M_local_buf;
  # DEBUG __s => "private_buf_size"
  # DEBUG this => &D.42675
  # DEBUG __beg => "private_buf_size"
  # DEBUG __end => &MEM[(void *)"private_buf_size" + 16B]
  # DEBUG this => &D.42675
  # DEBUG __beg => "private_buf_size"
  # DEBUG __end => &MEM[(void *)"private_buf_size" + 16B]
  # DEBUG this => &D.42675
  # DEBUG __beg => "private_buf_size"
  # DEBUG __end => &MEM[(void *)"private_buf_size" + 16B]
  # DEBUG __ptr => "private_buf_size"
  # DEBUG __first => "private_buf_size"
  # DEBUG __last => &MEM[(void *)"private_buf_size" + 16B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "private_buf_size"
  # DEBUG __last => &MEM[(void *)"private_buf_size" + 16B]
  __dnew = 16;
  _514 = std::__cxx11::basic_string<char>::_M_create (&D.42675, &__dnew, 0);
  goto <bb 36>;

<L83>:
  goto <bb 211> (<L74>);

  <bb 36>:
  # DEBUG D#7 => &D.42675
  # DEBUG __p => _514
  # DEBUG this => D#7
  MEM[(char * *)&D.42675] = _514;
  __dnew.49_515 = __dnew;
  # DEBUG D#8 => &D.42675
  # DEBUG __capacity => __dnew.49_515
  # DEBUG this => D#8
  MEM[(size_type *)&D.42675 + 16B] = __dnew.49_515;
  # DEBUG D#1 => &D.42675
  # DEBUG this => D#1
  # DEBUG __p => _514
  # DEBUG __k1 => "private_buf_size"
  # DEBUG __k2 => &MEM[(void *)"private_buf_size" + 16B]
  # DEBUG __d => _514
  # DEBUG __s => "private_buf_size"
  # DEBUG __n => 16
  # DEBUG __s1 => _514
  # DEBUG __s2 => "private_buf_size"
  # DEBUG __n => 16
  __builtin_memcpy (_514, "private_buf_size", 16);
  __dnew.49_518 = __dnew;
  # DEBUG this => &D.42675
  # DEBUG __n => __dnew.49_518
  # DEBUG D#9 => &D.42675
  # DEBUG __length => __dnew.49_518
  # DEBUG this => D#9
  MEM[(size_type *)&D.42675 + 8B] = __dnew.49_518;
  _519 = MEM[(char * *)&D.42675];
  # DEBUG D#1 => &D.42675
  # DEBUG this => D#1
  _520 = _519 + __dnew.49_518;
  # DEBUG __c1 => _520
  # DEBUG __c2 => D#10
  MEM[(char_type &)_520] = 0;
  __dnew ={v} {CLOBBER};
  _77 = Configuration::GetInt (config_25(D), &D.42675);

  <bb 37>:
  bs = _77;
  # DEBUG this => &D.42675
  # DEBUG this => &D.42675
  # DEBUG this => &D.42675
  _81 = MEM[(char * *)&D.42675];
  # DEBUG D#1 => &D.42675
  # DEBUG this => D#1
  # DEBUG this => &D.42675
  if (&D.42675.D.11539._M_local_buf != _81)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#188 => D.42675.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42675
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42675
  # DEBUG this => D#1
  # DEBUG this => &D.42675
  # DEBUG D#185 => &D.42675._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _81
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _81
  # DEBUG this => D#179
  # DEBUG D.59288 => D#180
  operator delete (_81);
  pretmp_459 = bs;

  <bb 39>:
  # prephitmp_511 = PHI <_77(37), pretmp_459(38)>
  # DEBUG D#189 => &D.42675._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42675 ={v} {CLOBBER};
  # DEBUG this => &D.42676
  # DEBUG this => &D.42676
  if (prephitmp_511 < 0)
    goto <bb 40>;
  else
    goto <bb 48>;

  <bb 40>:
  _83 = this_23(D)->_buf_size;
  _84 = _83 / num_private_bufs_1;
  D.42677 = _84;
  # DEBUG this => _69
  # DEBUG __x => &D.42677
  _521 = MEM[(struct vector *)this_23(D) + 136B].D.40238._M_impl._M_finish;
  _522 = MEM[(struct vector *)this_23(D) + 136B].D.40238._M_impl._M_end_of_storage;
  if (_521 != _522)
    goto <bb 41>;
  else
    goto <bb 44>;

  <bb 41>:
  # DEBUG D#420 => &_69->D.40238._M_impl
  # DEBUG D#82 => D#420
  # DEBUG __p => _521
  # DEBUG __arg => &D.42677
  # DEBUG __a => D#82
  # DEBUG D#81 => D#82
  # DEBUG D#80 => D#81
  # DEBUG __p => _521
  # DEBUG __val => &D.42677
  # DEBUG this => D#80
  # DEBUG D#11 => 4
  # DEBUG __p => _521
  # DEBUG D.53756 => D#11
  if (_521 != 0B)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  *_521 = _84;

  <bb 43>:
  _524 = _521 + 4;
  MEM[(struct vector *)this_23(D) + 136B].D.40238._M_impl._M_finish = _524;
  goto <bb 47>;

  <bb 44>:
  # DEBUG this => _69
  # DEBUG D#76 => &_69->D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  MEM[(struct __normal_iterator *)&D.68516] = _521;
  std::vector<int>::_M_insert_aux (_69, D.68516, &D.42677);
  goto <bb 46>;

<L84>:
  goto <bb 211> (<L74>);

  <bb 46>:
  pretmp_47 = MEM[(int * const &)this_23(D) + 144];

  <bb 47>:
  # prephitmp_679 = PHI <pretmp_47(46), _524(43)>
  D.42677 ={v} {CLOBBER};
  goto <bb 55>;

  <bb 48>:
  # DEBUG this => _69
  # DEBUG __x => &bs
  _86 = MEM[(struct vector *)this_23(D) + 136B].D.40238._M_impl._M_finish;
  _525 = MEM[(struct vector *)this_23(D) + 136B].D.40238._M_impl._M_end_of_storage;
  if (_86 != _525)
    goto <bb 49>;
  else
    goto <bb 52>;

  <bb 49>:
  # DEBUG D#420 => &_69->D.40238._M_impl
  # DEBUG D#82 => D#420
  # DEBUG __p => _86
  # DEBUG __arg => &bs
  # DEBUG __a => D#82
  # DEBUG D#81 => D#82
  # DEBUG D#80 => D#81
  # DEBUG __p => _86
  # DEBUG __val => &bs
  # DEBUG this => D#80
  # DEBUG D#11 => 4
  # DEBUG __p => _86
  # DEBUG D.53756 => D#11
  if (_86 != 0B)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  *_86 = prephitmp_511;

  <bb 51>:
  _527 = _86 + 4;
  MEM[(struct vector *)this_23(D) + 136B].D.40238._M_impl._M_finish = _527;
  goto <bb 55>;

  <bb 52>:
  # DEBUG this => _69
  # DEBUG D#76 => &_69->D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  MEM[(struct __normal_iterator *)&D.68525] = _86;
  std::vector<int>::_M_insert_aux (_69, D.68525, &bs);
  goto <bb 54>;

<L85>:
  goto <bb 211> (<L74>);

  <bb 54>:
  pretmp_752 = MEM[(int * const &)this_23(D) + 144];

  <bb 55>:
  # prephitmp_509 = PHI <prephitmp_679(47), pretmp_752(54), _527(51)>
  bs ={v} {CLOBBER};
  pretmp_308 = MEM[(int * *)this_23(D) + 136B];

  <bb 56>:
  # prephitmp_307 = PHI <_61(33), prephitmp_509(55)>
  # prephitmp_300 = PHI <_30(33), pretmp_308(55)>
  # DEBUG D#565 => &this_23(D)->_private_buf_size
  # DEBUG this => D#565
  # DEBUG this => D#565
  # DEBUG D#76 => &D#565->D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _95 = MEM[(int &)prephitmp_307 + 18446744073709551612];
  # DEBUG this => _69
  # DEBUG __new_size => D#1013
  __x = _95;
  # DEBUG __x => __x
  # DEBUG D#64 => _69
  # DEBUG D#64 => _69
  # DEBUG this => D#64
  # DEBUG this => D#64
  _529 = (long int) prephitmp_307;
  _530 = (long int) prephitmp_300;
  _531 = _529 - _530;
  _532 = _531 /[ex] 4;
  _533 = (size_type) _532;
  if (prephitmp_320 > _533)
    goto <bb 57>;
  else
    goto <bb 60>;

  <bb 57>:
  # DEBUG D#64 => _69
  # DEBUG D#64 => _69
  # DEBUG this => D#64
  # DEBUG this => D#64
  _534 = prephitmp_320 - _533;
  # DEBUG this => _69
  # DEBUG D#76 => &_69->D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  # DEBUG this => _69
  MEM[(struct __normal_iterator *)&__position] = prephitmp_307;
  # DEBUG __n => _534
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_69, __position, _534, &__x);
  goto <bb 59>;

<L86>:
  goto <bb 211> (<L74>);

  <bb 59>:
  goto <bb 62>;

  <bb 60>:
  # DEBUG D#64 => _69
  # DEBUG D#64 => _69
  # DEBUG this => D#64
  # DEBUG this => D#64
  if (prephitmp_320 < _533)
    goto <bb 61>;
  else
    goto <bb 59>;

  <bb 61>:
  _535 = prephitmp_320 * 4;
  _536 = prephitmp_300 + _535;
  # DEBUG D#139 => _69
  # DEBUG __pos => _536
  # DEBUG D#138 => D#139
  # DEBUG this => D#138
  # DEBUG D#136 => &D#138->D.40238
  # DEBUG this => D#136
  # DEBUG D#137 => D#138->D.40238._M_impl._M_finish
  # DEBUG __first => _536
  # DEBUG __last => D#137
  # DEBUG D.54135 => NULL
  # DEBUG D#134 => _536
  # DEBUG D#135 => D#137
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  MEM[(int * *)this_23(D) + 144B] = _536;

  <bb 62>:
  # DEBUG D#63 => &D.42680
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42680
  # DEBUG this => &D.42679
  # DEBUG __s => "private_buf_start_vc"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42679
  # DEBUG D#296 => &D.42679._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42679.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42679]._M_p = &D.42679.D.11539._M_local_buf;
  # DEBUG __s => "private_buf_start_vc"
  # DEBUG this => &D.42679
  # DEBUG __beg => "private_buf_start_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_start_vc" + 20B]
  # DEBUG this => &D.42679
  # DEBUG __beg => "private_buf_start_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_start_vc" + 20B]
  # DEBUG this => &D.42679
  # DEBUG __beg => "private_buf_start_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_start_vc" + 20B]
  # DEBUG __ptr => "private_buf_start_vc"
  # DEBUG __first => "private_buf_start_vc"
  # DEBUG __last => &MEM[(void *)"private_buf_start_vc" + 20B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "private_buf_start_vc"
  # DEBUG __last => &MEM[(void *)"private_buf_start_vc" + 20B]
  __dnew = 20;
  _545 = std::__cxx11::basic_string<char>::_M_create (&D.42679, &__dnew, 0);
  goto <bb 64>;

<L87>:
  goto <bb 211> (<L74>);

  <bb 64>:
  # DEBUG D#7 => &D.42679
  # DEBUG __p => _545
  # DEBUG this => D#7
  MEM[(char * *)&D.42679] = _545;
  __dnew.49_546 = __dnew;
  # DEBUG D#8 => &D.42679
  # DEBUG __capacity => __dnew.49_546
  # DEBUG this => D#8
  MEM[(size_type *)&D.42679 + 16B] = __dnew.49_546;
  # DEBUG D#1 => &D.42679
  # DEBUG this => D#1
  # DEBUG __p => _545
  # DEBUG __k1 => "private_buf_start_vc"
  # DEBUG __k2 => &MEM[(void *)"private_buf_start_vc" + 20B]
  # DEBUG __d => _545
  # DEBUG __s => "private_buf_start_vc"
  # DEBUG __n => 20
  # DEBUG __s1 => _545
  # DEBUG __s2 => "private_buf_start_vc"
  # DEBUG __n => 20
  __builtin_memcpy (_545, "private_buf_start_vc", 20);
  __dnew.49_549 = __dnew;
  # DEBUG this => &D.42679
  # DEBUG __n => __dnew.49_549
  # DEBUG D#9 => &D.42679
  # DEBUG __length => __dnew.49_549
  # DEBUG this => D#9
  MEM[(size_type *)&D.42679 + 8B] = __dnew.49_549;
  _550 = MEM[(char * *)&D.42679];
  # DEBUG D#1 => &D.42679
  # DEBUG this => D#1
  _551 = _550 + __dnew.49_549;
  # DEBUG __c1 => _551
  # DEBUG __c2 => D#10
  MEM[(char_type &)_551] = 0;
  __dnew ={v} {CLOBBER};
  start_vc = Configuration::GetIntArray (config_25(D), &D.42679); [return slot optimization]

  <bb 65>:
  # DEBUG this => &D.42679
  # DEBUG this => &D.42679
  # DEBUG this => &D.42679
  _100 = MEM[(char * *)&D.42679];
  # DEBUG D#1 => &D.42679
  # DEBUG this => D#1
  # DEBUG this => &D.42679
  if (&D.42679.D.11539._M_local_buf != _100)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # DEBUG D#188 => D.42679.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42679
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42679
  # DEBUG this => D#1
  # DEBUG this => &D.42679
  # DEBUG D#185 => &D.42679._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _100
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _100
  # DEBUG this => D#179
  # DEBUG D.59317 => D#180
  operator delete (_100);

  <bb 67>:
  # DEBUG D#189 => &D.42679._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42679 ={v} {CLOBBER};
  # DEBUG this => &D.42680
  # DEBUG this => &D.42680
  # DEBUG this => &start_vc
  _164 = MEM[(int * *)&start_vc + 8B];
  # DEBUG D#78 => &start_vc
  # DEBUG this => D#78
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _161 = MEM[(int * *)&start_vc];
  # DEBUG D#79 => &start_vc
  # DEBUG this => D#79
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_161 == _164)
    goto <bb 68>;
  else
    goto <bb 91>;

  <bb 68>:
  # DEBUG D#63 => &D.42683
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42683
  # DEBUG this => &D.42682
  # DEBUG __s => "private_buf_start_vc"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42682
  # DEBUG D#296 => &D.42682._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42682.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42682]._M_p = &D.42682.D.11539._M_local_buf;
  # DEBUG __s => "private_buf_start_vc"
  # DEBUG this => &D.42682
  # DEBUG __beg => "private_buf_start_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_start_vc" + 20B]
  # DEBUG this => &D.42682
  # DEBUG __beg => "private_buf_start_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_start_vc" + 20B]
  # DEBUG this => &D.42682
  # DEBUG __beg => "private_buf_start_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_start_vc" + 20B]
  # DEBUG __ptr => "private_buf_start_vc"
  # DEBUG __first => "private_buf_start_vc"
  # DEBUG __last => &MEM[(void *)"private_buf_start_vc" + 20B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "private_buf_start_vc"
  # DEBUG __last => &MEM[(void *)"private_buf_start_vc" + 20B]
  __dnew = 20;
  _561 = std::__cxx11::basic_string<char>::_M_create (&D.42682, &__dnew, 0);

  <bb 69>:
  # DEBUG D#7 => &D.42682
  # DEBUG __p => _561
  # DEBUG this => D#7
  MEM[(char * *)&D.42682] = _561;
  __dnew.49_562 = __dnew;
  # DEBUG D#8 => &D.42682
  # DEBUG __capacity => __dnew.49_562
  # DEBUG this => D#8
  MEM[(size_type *)&D.42682 + 16B] = __dnew.49_562;
  # DEBUG D#1 => &D.42682
  # DEBUG this => D#1
  # DEBUG __p => _561
  # DEBUG __k1 => "private_buf_start_vc"
  # DEBUG __k2 => &MEM[(void *)"private_buf_start_vc" + 20B]
  # DEBUG __d => _561
  # DEBUG __s => "private_buf_start_vc"
  # DEBUG __n => 20
  # DEBUG __s1 => _561
  # DEBUG __s2 => "private_buf_start_vc"
  # DEBUG __n => 20
  __builtin_memcpy (_561, "private_buf_start_vc", 20);
  __dnew.49_565 = __dnew;
  # DEBUG this => &D.42682
  # DEBUG __n => __dnew.49_565
  # DEBUG D#9 => &D.42682
  # DEBUG __length => __dnew.49_565
  # DEBUG this => D#9
  MEM[(size_type *)&D.42682 + 8B] = __dnew.49_565;
  _566 = MEM[(char * *)&D.42682];
  # DEBUG D#1 => &D.42682
  # DEBUG this => D#1
  _567 = _566 + __dnew.49_565;
  # DEBUG __c1 => _567
  # DEBUG __c2 => D#10
  MEM[(char_type &)_567] = 0;
  __dnew ={v} {CLOBBER};
  _104 = Configuration::GetInt (config_25(D), &D.42682);

  <bb 70>:
  sv = _104;
  # DEBUG this => &D.42682
  # DEBUG this => &D.42682
  # DEBUG this => &D.42682
  _107 = MEM[(char * *)&D.42682];
  # DEBUG D#1 => &D.42682
  # DEBUG this => D#1
  # DEBUG this => &D.42682
  if (&D.42682.D.11539._M_local_buf != _107)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # DEBUG D#188 => D.42682.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42682
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42682
  # DEBUG this => D#1
  # DEBUG this => &D.42682
  # DEBUG D#185 => &D.42682._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _107
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _107
  # DEBUG this => D#179
  # DEBUG D.59335 => D#180
  operator delete (_107);
  pretmp_4 = sv;

  <bb 72>:
  # prephitmp_15 = PHI <_104(70), pretmp_4(71)>
  # DEBUG D#189 => &D.42682._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42682 ={v} {CLOBBER};
  # DEBUG this => &D.42683
  # DEBUG this => &D.42683
  if (prephitmp_15 < 0)
    goto <bb 73>;
  else
    goto <bb 84>;

  <bb 73>:
  # DEBUG this => &start_vc
  # DEBUG __new_size => D#1013
  __x = 0;
  # DEBUG __x => __x
  _568 = MEM[(int * *)&start_vc];
  # DEBUG D#64 => &start_vc
  _569 = MEM[(int * *)&start_vc + 8B];
  # DEBUG D#64 => &start_vc
  # DEBUG this => D#64
  # DEBUG this => D#64
  _570 = (long int) _569;
  _571 = (long int) _568;
  _572 = _570 - _571;
  _573 = _572 /[ex] 4;
  _574 = (size_type) _573;
  if (prephitmp_320 > _574)
    goto <bb 74>;
  else
    goto <bb 77>;

  <bb 74>:
  # DEBUG D#64 => &start_vc
  # DEBUG D#64 => &start_vc
  # DEBUG this => D#64
  # DEBUG this => D#64
  _575 = prephitmp_320 - _574;
  # DEBUG this => &start_vc
  # DEBUG D#76 => &start_vc.D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  # DEBUG this => &start_vc
  MEM[(struct __normal_iterator *)&__position] = _569;
  # DEBUG __n => _575
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (&start_vc, __position, _575, &__x);
  goto <bb 76>;

<L89>:
  goto <bb 206> (<L73>);

  <bb 76>:
  goto <bb 79>;

  <bb 77>:
  # DEBUG D#64 => &start_vc
  # DEBUG D#64 => &start_vc
  # DEBUG this => D#64
  # DEBUG this => D#64
  if (prephitmp_320 < _574)
    goto <bb 78>;
  else
    goto <bb 76>;

  <bb 78>:
  _576 = prephitmp_320 * 4;
  _577 = _568 + _576;
  # DEBUG D#139 => &start_vc
  # DEBUG __pos => _577
  # DEBUG D#138 => D#139
  # DEBUG this => D#138
  # DEBUG D#136 => &D#138->D.40238
  # DEBUG this => D#136
  # DEBUG D#137 => D#138->D.40238._M_impl._M_finish
  # DEBUG __first => _577
  # DEBUG __last => D#137
  # DEBUG D.54135 => NULL
  # DEBUG D#134 => _577
  # DEBUG D#135 => D#137
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  MEM[(int * *)&start_vc + 8B] = _577;

  <bb 79>:
  # DEBUG i => 0
  if (num_private_bufs_1 <= 0)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  goto <bb 90>;

  <bb 81>:
  pretmp_75 = MEM[(int * *)&start_vc];

  <bb 82>:
  # i_657 = PHI <0(81), i_115(83)>
  # DEBUG i => i_657
  _110 = (long unsigned int) i_657;
  # DEBUG D#43 => &start_vc
  # DEBUG __n => _110
  # DEBUG this => D#43
  _158 = _110 * 4;
  _153 = pretmp_75 + _158;
  _112 = num_private_bufs_34 * i_657;
  _113 = _112 / num_private_bufs_1;
  *_153 = _113;
  i_115 = i_657 + 1;
  # DEBUG i => i_115
  # DEBUG i => i_115
  if (num_private_bufs_1 <= i_115)
    goto <bb 80>;
  else
    goto <bb 83>;

  <bb 83>:
  goto <bb 82>;

  <bb 84>:
  # DEBUG this => &start_vc
  # DEBUG __x => &sv
  _109 = start_vc.D.40238._M_impl._M_finish;
  _578 = start_vc.D.40238._M_impl._M_end_of_storage;
  if (_109 != _578)
    goto <bb 85>;
  else
    goto <bb 88>;

  <bb 85>:
  # DEBUG D#420 => &start_vc.D.40238._M_impl
  # DEBUG D#82 => D#420
  # DEBUG __p => _109
  # DEBUG __arg => &sv
  # DEBUG __a => D#82
  # DEBUG D#81 => D#82
  # DEBUG D#80 => D#81
  # DEBUG __p => _109
  # DEBUG __val => &sv
  # DEBUG this => D#80
  # DEBUG D#11 => 4
  # DEBUG __p => _109
  # DEBUG D.53756 => D#11
  if (_109 != 0B)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  *_109 = prephitmp_15;

  <bb 87>:
  _580 = _109 + 4;
  start_vc.D.40238._M_impl._M_finish = _580;
  goto <bb 90>;

  <bb 88>:
  # DEBUG this => &start_vc
  # DEBUG D#76 => &start_vc.D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  MEM[(struct __normal_iterator *)&D.68646] = _109;
  std::vector<int>::_M_insert_aux (&start_vc, D.68646, &sv);
  goto <bb 80>;

<L90>:
  goto <bb 206> (<L73>);

  <bb 90>:
  sv ={v} {CLOBBER};

  <bb 91>:
  # DEBUG D#63 => &D.42688
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42688
  # DEBUG this => &D.42687
  # DEBUG __s => "private_buf_end_vc"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42687
  # DEBUG D#296 => &D.42687._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42687.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42687]._M_p = &D.42687.D.11539._M_local_buf;
  # DEBUG __s => "private_buf_end_vc"
  # DEBUG this => &D.42687
  # DEBUG __beg => "private_buf_end_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_end_vc" + 18B]
  # DEBUG this => &D.42687
  # DEBUG __beg => "private_buf_end_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_end_vc" + 18B]
  # DEBUG this => &D.42687
  # DEBUG __beg => "private_buf_end_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_end_vc" + 18B]
  # DEBUG __ptr => "private_buf_end_vc"
  # DEBUG __first => "private_buf_end_vc"
  # DEBUG __last => &MEM[(void *)"private_buf_end_vc" + 18B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "private_buf_end_vc"
  # DEBUG __last => &MEM[(void *)"private_buf_end_vc" + 18B]
  __dnew = 18;
  _589 = std::__cxx11::basic_string<char>::_M_create (&D.42687, &__dnew, 0);
  goto <bb 93>;

<L91>:
  goto <bb 206> (<L73>);

  <bb 93>:
  # DEBUG D#7 => &D.42687
  # DEBUG __p => _589
  # DEBUG this => D#7
  MEM[(char * *)&D.42687] = _589;
  __dnew.49_590 = __dnew;
  # DEBUG D#8 => &D.42687
  # DEBUG __capacity => __dnew.49_590
  # DEBUG this => D#8
  MEM[(size_type *)&D.42687 + 16B] = __dnew.49_590;
  # DEBUG D#1 => &D.42687
  # DEBUG this => D#1
  # DEBUG __p => _589
  # DEBUG __k1 => "private_buf_end_vc"
  # DEBUG __k2 => &MEM[(void *)"private_buf_end_vc" + 18B]
  # DEBUG __d => _589
  # DEBUG __s => "private_buf_end_vc"
  # DEBUG __n => 18
  # DEBUG __s1 => _589
  # DEBUG __s2 => "private_buf_end_vc"
  # DEBUG __n => 18
  __builtin_memcpy (_589, "private_buf_end_vc", 18);
  __dnew.49_593 = __dnew;
  # DEBUG this => &D.42687
  # DEBUG __n => __dnew.49_593
  # DEBUG D#9 => &D.42687
  # DEBUG __length => __dnew.49_593
  # DEBUG this => D#9
  MEM[(size_type *)&D.42687 + 8B] = __dnew.49_593;
  _594 = MEM[(char * *)&D.42687];
  # DEBUG D#1 => &D.42687
  # DEBUG this => D#1
  _595 = _594 + __dnew.49_593;
  # DEBUG __c1 => _595
  # DEBUG __c2 => D#10
  MEM[(char_type &)_595] = 0;
  __dnew ={v} {CLOBBER};
  end_vc = Configuration::GetIntArray (config_25(D), &D.42687); [return slot optimization]

  <bb 94>:
  # DEBUG this => &D.42687
  # DEBUG this => &D.42687
  # DEBUG this => &D.42687
  _124 = MEM[(char * *)&D.42687];
  # DEBUG D#1 => &D.42687
  # DEBUG this => D#1
  # DEBUG this => &D.42687
  if (&D.42687.D.11539._M_local_buf != _124)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  # DEBUG D#188 => D.42687.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42687
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42687
  # DEBUG this => D#1
  # DEBUG this => &D.42687
  # DEBUG D#185 => &D.42687._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _124
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _124
  # DEBUG this => D#179
  # DEBUG D.59361 => D#180
  operator delete (_124);

  <bb 96>:
  # DEBUG D#189 => &D.42687._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42687 ={v} {CLOBBER};
  # DEBUG this => &D.42688
  # DEBUG this => &D.42688
  # DEBUG this => &end_vc
  _135 = MEM[(int * *)&end_vc + 8B];
  # DEBUG D#78 => &end_vc
  # DEBUG this => D#78
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _125 = MEM[(int * *)&end_vc];
  # DEBUG D#79 => &end_vc
  # DEBUG this => D#79
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_125 == _135)
    goto <bb 97>;
  else
    goto <bb 120>;

  <bb 97>:
  # DEBUG D#63 => &D.42691
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.42691
  # DEBUG this => &D.42690
  # DEBUG __s => "private_buf_end_vc"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.42690
  # DEBUG D#296 => &D.42690._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.42690.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.42690]._M_p = &D.42690.D.11539._M_local_buf;
  # DEBUG __s => "private_buf_end_vc"
  # DEBUG this => &D.42690
  # DEBUG __beg => "private_buf_end_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_end_vc" + 18B]
  # DEBUG this => &D.42690
  # DEBUG __beg => "private_buf_end_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_end_vc" + 18B]
  # DEBUG this => &D.42690
  # DEBUG __beg => "private_buf_end_vc"
  # DEBUG __end => &MEM[(void *)"private_buf_end_vc" + 18B]
  # DEBUG __ptr => "private_buf_end_vc"
  # DEBUG __first => "private_buf_end_vc"
  # DEBUG __last => &MEM[(void *)"private_buf_end_vc" + 18B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "private_buf_end_vc"
  # DEBUG __last => &MEM[(void *)"private_buf_end_vc" + 18B]
  __dnew = 18;
  _605 = std::__cxx11::basic_string<char>::_M_create (&D.42690, &__dnew, 0);

  <bb 98>:
  # DEBUG D#7 => &D.42690
  # DEBUG __p => _605
  # DEBUG this => D#7
  MEM[(char * *)&D.42690] = _605;
  __dnew.49_606 = __dnew;
  # DEBUG D#8 => &D.42690
  # DEBUG __capacity => __dnew.49_606
  # DEBUG this => D#8
  MEM[(size_type *)&D.42690 + 16B] = __dnew.49_606;
  # DEBUG D#1 => &D.42690
  # DEBUG this => D#1
  # DEBUG __p => _605
  # DEBUG __k1 => "private_buf_end_vc"
  # DEBUG __k2 => &MEM[(void *)"private_buf_end_vc" + 18B]
  # DEBUG __d => _605
  # DEBUG __s => "private_buf_end_vc"
  # DEBUG __n => 18
  # DEBUG __s1 => _605
  # DEBUG __s2 => "private_buf_end_vc"
  # DEBUG __n => 18
  __builtin_memcpy (_605, "private_buf_end_vc", 18);
  __dnew.49_609 = __dnew;
  # DEBUG this => &D.42690
  # DEBUG __n => __dnew.49_609
  # DEBUG D#9 => &D.42690
  # DEBUG __length => __dnew.49_609
  # DEBUG this => D#9
  MEM[(size_type *)&D.42690 + 8B] = __dnew.49_609;
  _610 = MEM[(char * *)&D.42690];
  # DEBUG D#1 => &D.42690
  # DEBUG this => D#1
  _611 = _610 + __dnew.49_609;
  # DEBUG __c1 => _611
  # DEBUG __c2 => D#10
  MEM[(char_type &)_611] = 0;
  __dnew ={v} {CLOBBER};
  _128 = Configuration::GetInt (config_25(D), &D.42690);

  <bb 99>:
  ev = _128;
  # DEBUG this => &D.42690
  # DEBUG this => &D.42690
  # DEBUG this => &D.42690
  _131 = MEM[(char * *)&D.42690];
  # DEBUG D#1 => &D.42690
  # DEBUG this => D#1
  # DEBUG this => &D.42690
  if (&D.42690.D.11539._M_local_buf != _131)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#188 => D.42690.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42690
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42690
  # DEBUG this => D#1
  # DEBUG this => &D.42690
  # DEBUG D#185 => &D.42690._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _131
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _131
  # DEBUG this => D#179
  # DEBUG D.59379 => D#180
  operator delete (_131);
  pretmp_264 = ev;

  <bb 101>:
  # prephitmp_265 = PHI <_128(99), pretmp_264(100)>
  # DEBUG D#189 => &D.42690._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42690 ={v} {CLOBBER};
  # DEBUG this => &D.42691
  # DEBUG this => &D.42691
  if (prephitmp_265 < 0)
    goto <bb 102>;
  else
    goto <bb 113>;

  <bb 102>:
  # DEBUG this => &end_vc
  # DEBUG __new_size => D#1013
  __x = 0;
  # DEBUG __x => __x
  _612 = MEM[(int * *)&end_vc];
  # DEBUG D#64 => &end_vc
  _613 = MEM[(int * *)&end_vc + 8B];
  # DEBUG D#64 => &end_vc
  # DEBUG this => D#64
  # DEBUG this => D#64
  _614 = (long int) _613;
  _615 = (long int) _612;
  _616 = _614 - _615;
  _617 = _616 /[ex] 4;
  _618 = (size_type) _617;
  if (prephitmp_320 > _618)
    goto <bb 103>;
  else
    goto <bb 106>;

  <bb 103>:
  # DEBUG D#64 => &end_vc
  # DEBUG D#64 => &end_vc
  # DEBUG this => D#64
  # DEBUG this => D#64
  _619 = prephitmp_320 - _618;
  # DEBUG this => &end_vc
  # DEBUG D#76 => &end_vc.D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  # DEBUG this => &end_vc
  MEM[(struct __normal_iterator *)&__position] = _613;
  # DEBUG __n => _619
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (&end_vc, __position, _619, &__x);
  goto <bb 105>;

<L93>:
  goto <bb 201> (<L72>);

  <bb 105>:
  goto <bb 108>;

  <bb 106>:
  # DEBUG D#64 => &end_vc
  # DEBUG D#64 => &end_vc
  # DEBUG this => D#64
  # DEBUG this => D#64
  if (prephitmp_320 < _618)
    goto <bb 107>;
  else
    goto <bb 105>;

  <bb 107>:
  _620 = prephitmp_320 * 4;
  _621 = _612 + _620;
  # DEBUG D#139 => &end_vc
  # DEBUG __pos => _621
  # DEBUG D#138 => D#139
  # DEBUG this => D#138
  # DEBUG D#136 => &D#138->D.40238
  # DEBUG this => D#136
  # DEBUG D#137 => D#138->D.40238._M_impl._M_finish
  # DEBUG __first => _621
  # DEBUG __last => D#137
  # DEBUG D.54135 => NULL
  # DEBUG D#134 => _621
  # DEBUG D#135 => D#137
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  MEM[(int * *)&end_vc + 8B] = _621;

  <bb 108>:
  # DEBUG i => 0
  if (num_private_bufs_1 <= 0)
    goto <bb 109>;
  else
    goto <bb 110>;

  <bb 109>:
  goto <bb 119>;

  <bb 110>:
  pretmp_762 = MEM[(int * *)&end_vc];

  <bb 111>:
  # i_559 = PHI <0(110), i_136(112)>
  # DEBUG i => i_559
  _134 = (long unsigned int) i_559;
  # DEBUG D#43 => &end_vc
  # DEBUG __n => _134
  # DEBUG this => D#43
  _111 = _134 * 4;
  _101 = pretmp_762 + _111;
  i_136 = i_559 + 1;
  _137 = num_private_bufs_34 * i_136;
  _138 = _137 / num_private_bufs_1;
  _139 = _138 + -1;
  *_101 = _139;
  # DEBUG i => i_136
  # DEBUG i => i_136
  if (num_private_bufs_1 <= i_136)
    goto <bb 109>;
  else
    goto <bb 112>;

  <bb 112>:
  goto <bb 111>;

  <bb 113>:
  # DEBUG this => &end_vc
  # DEBUG __x => &ev
  _133 = end_vc.D.40238._M_impl._M_finish;
  _622 = end_vc.D.40238._M_impl._M_end_of_storage;
  if (_133 != _622)
    goto <bb 114>;
  else
    goto <bb 117>;

  <bb 114>:
  # DEBUG D#420 => &end_vc.D.40238._M_impl
  # DEBUG D#82 => D#420
  # DEBUG __p => _133
  # DEBUG __arg => &ev
  # DEBUG __a => D#82
  # DEBUG D#81 => D#82
  # DEBUG D#80 => D#81
  # DEBUG __p => _133
  # DEBUG __val => &ev
  # DEBUG this => D#80
  # DEBUG D#11 => 4
  # DEBUG __p => _133
  # DEBUG D.53756 => D#11
  if (_133 != 0B)
    goto <bb 115>;
  else
    goto <bb 116>;

  <bb 115>:
  *_133 = prephitmp_265;

  <bb 116>:
  _624 = _133 + 4;
  end_vc.D.40238._M_impl._M_finish = _624;
  goto <bb 119>;

  <bb 117>:
  # DEBUG this => &end_vc
  # DEBUG D#76 => &end_vc.D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  MEM[(struct __normal_iterator *)&D.68756] = _133;
  std::vector<int>::_M_insert_aux (&end_vc, D.68756, &ev);
  goto <bb 109>;

<L94>:
  goto <bb 201> (<L72>);

  <bb 119>:
  ev ={v} {CLOBBER};

  <bb 120>:
  _147 = (long unsigned int) num_private_bufs_34;
  # DEBUG D#1015 => &this_23(D)->_private_buf_vc_map
  # DEBUG this => D#1015
  # DEBUG __new_size => _147
  __x = -1;
  # DEBUG __x => __x
  _141 = MEM[(int * *)this_23(D) + 112B];
  # DEBUG D#64 => D#1015
  _625 = MEM[(int * *)this_23(D) + 120B];
  # DEBUG D#64 => D#1015
  # DEBUG this => D#64
  # DEBUG this => D#64
  _626 = (long int) _625;
  _627 = (long int) _141;
  _628 = _626 - _627;
  _629 = _628 /[ex] 4;
  _630 = (size_type) _629;
  if (_147 > _630)
    goto <bb 121>;
  else
    goto <bb 124>;

  <bb 121>:
  # DEBUG D#64 => D#1015
  # DEBUG D#64 => D#1015
  # DEBUG this => D#64
  # DEBUG this => D#64
  _631 = _147 - _630;
  # DEBUG this => D#1015
  # DEBUG D#76 => &D#1015->D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  # DEBUG this => D#1015
  MEM[(struct __normal_iterator *)&__position] = _625;
  # DEBUG __n => _631
  # DEBUG __x => &__x
  _148 = &this_23(D)->_private_buf_vc_map;
  std::vector<int>::_M_fill_insert (_148, __position, _631, &__x);
  goto <bb 123>;

<L95>:
  goto <bb 201> (<L72>);

  <bb 123>:
  goto <bb 126>;

  <bb 124>:
  # DEBUG D#64 => D#1015
  # DEBUG D#64 => D#1015
  # DEBUG this => D#64
  # DEBUG this => D#64
  if (_147 < _630)
    goto <bb 125>;
  else
    goto <bb 123>;

  <bb 125>:
  _632 = _147 * 4;
  _633 = _141 + _632;
  # DEBUG D#139 => D#1015
  # DEBUG __pos => _633
  # DEBUG D#138 => D#139
  # DEBUG this => D#138
  # DEBUG D#136 => &D#138->D.40238
  # DEBUG this => D#136
  # DEBUG D#137 => D#138->D.40238._M_impl._M_finish
  # DEBUG __first => _633
  # DEBUG __last => D#137
  # DEBUG D.54135 => NULL
  # DEBUG D#134 => _633
  # DEBUG D#135 => D#137
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  MEM[(int * *)this_23(D) + 120B] = _633;

  <bb 126>:
  _150 = this_23(D)->_buf_size;
  this_23(D)->_shared_buf_size = _150;
  # DEBUG i => 0
  # DEBUG i => 0
  if (num_private_bufs_1 <= 0)
    goto <bb 142>;
  else
    goto <bb 127>;

  <bb 127>:
  # DEBUG D#566 => &this_23(D)->_private_buf_size
  _422 = MEM[(int * *)this_23(D) + 136B];
  # DEBUG D#43 => D#566
  # DEBUG __n => 0
  # DEBUG this => D#43
  _462 = *_422;
  _494 = _150 - _462;
  this_23(D)->_shared_buf_size = _494;
  _478 = MEM[(int * *)&start_vc];
  # DEBUG D#43 => &start_vc
  # DEBUG __n => 0
  # DEBUG this => D#43
  v_541 = *_478;
  _542 = MEM[(int * *)&end_vc];
  # DEBUG D#43 => &end_vc
  # DEBUG __n => 0
  # DEBUG this => D#43
  _586 = *_542;
  if (v_541 > _586)
    goto <bb 132>;
  else
    goto <bb 130>;

  <bb 128>:
  _152 = (long unsigned int) i_169;
  # DEBUG D#566 => &this_23(D)->_private_buf_size
  # DEBUG D#43 => D#566
  # DEBUG __n => _152
  # DEBUG this => D#43
  _48 = _152 * 4;
  _38 = _422 + _48;
  _154 = *_38;
  _156 = prephitmp_482 - _154;
  this_23(D)->_shared_buf_size = _156;
  # DEBUG D#43 => &start_vc
  # DEBUG __n => _152
  # DEBUG this => D#43
  _66 = _478 + _48;
  v_159 = *_66;
  # DEBUG D#43 => &end_vc
  # DEBUG __n => _152
  # DEBUG this => D#43
  _94 = _542 + _48;
  _160 = *_94;
  if (v_159 > _160)
    goto <bb 132>;
  else
    goto <bb 129>;

  <bb 129>:
  goto <bb 131>;

  <bb 130>:

  <bb 131>:
  # v_32 = PHI <v_541(130), v_159(129)>
  # i_560 = PHI <0(130), i_169(129)>
  # _469 = PHI <_542(130), _94(129)>
  # prephitmp_287 = PHI <_494(130), _156(129)>
  # DEBUG i => i_560
  # DEBUG D#566 => &this_23(D)->_private_buf_size
  # DEBUG __n => 0
  # DEBUG this => D#43
  # DEBUG __n => 0
  # DEBUG this => D#43
  # DEBUG D#43 => &end_vc
  # DEBUG __n => 0
  # DEBUG this => D#43
  # DEBUG v => v_32
  # DEBUG D#43 => &end_vc
  # DEBUG __n => 0
  # DEBUG this => D#43
  _587 = *_469;
  if (v_32 <= _587)
    goto <bb 133>;
  else
    goto <bb 140>;

  <bb 132>:
  __assert_fail ("start_vc[i] <= end_vc[i]", "buffer_state.cpp", 183, &__PRETTY_FUNCTION__);

  <bb 133>:
  # DEBUG i => i_560
  # DEBUG D#566 => &this_23(D)->_private_buf_size
  # DEBUG __n => 0
  # DEBUG this => D#43
  # DEBUG __n => 0
  # DEBUG this => D#43
  # DEBUG __n => 0
  # DEBUG this => D#43
  # DEBUG v => v_32
  # DEBUG D#43 => &end_vc
  # DEBUG __n => 0
  # DEBUG this => D#43
  _543 = (long unsigned int) v_32;
  # DEBUG D#567 => &this_23(D)->_private_buf_vc_map
  _526 = MEM[(int * *)this_23(D) + 112B];
  # DEBUG D#43 => D#567
  # DEBUG __n => _543
  # DEBUG this => D#43
  _484 = _543 * 4;
  _528 = _526 + _484;
  _464 = *_528;
  if (_464 >= 0)
    goto <bb 134>;
  else
    goto <bb 137>;

  <bb 134>:
  __assert_fail ("_private_buf_vc_map[v] < 0", "buffer_state.cpp", 185, &__PRETTY_FUNCTION__);

  <bb 135>:
  _163 = (long unsigned int) v_167;
  # DEBUG D#567 => &this_23(D)->_private_buf_vc_map
  # DEBUG D#43 => D#567
  # DEBUG __n => _163
  # DEBUG this => D#43
  _207 = _163 * 4;
  _208 = _526 + _207;
  _165 = *_208;
  if (_165 >= 0)
    goto <bb 134>;
  else
    goto <bb 136>;

  <bb 136>:
  goto <bb 138>;

  <bb 137>:

  <bb 138>:
  # v_579 = PHI <v_32(137), v_167(136)>
  # _602 = PHI <_528(137), _208(136)>
  # DEBUG v => v_579
  # DEBUG __n => 0
  # DEBUG this => D#43
  # DEBUG D#567 => &this_23(D)->_private_buf_vc_map
  # DEBUG __n => _543
  # DEBUG this => D#43
  # DEBUG D#568 => &this_23(D)->_private_buf_vc_map
  # DEBUG D#43 => D#568
  # DEBUG __n => _543
  # DEBUG this => D#43
  *_602 = i_560;
  v_167 = v_579 + 1;
  # DEBUG v => v_167
  # DEBUG v => v_167
  # DEBUG D#43 => &end_vc
  # DEBUG __n => 0
  # DEBUG this => D#43
  _162 = *_469;
  if (_162 >= v_167)
    goto <bb 135>;
  else
    goto <bb 139>;

  <bb 139>:
  pretmp_444 = this_23(D)->_shared_buf_size;

  <bb 140>:
  # prephitmp_482 = PHI <pretmp_444(139), prephitmp_287(131)>
  i_169 = i_560 + 1;
  # DEBUG i => i_169
  # DEBUG i => i_169
  if (num_private_bufs_1 <= i_169)
    goto <bb 141>;
  else
    goto <bb 128>;

  <bb 141>:
  # prephitmp_497 = PHI <prephitmp_482(140)>

  <bb 142>:
  # prephitmp_281 = PHI <prephitmp_497(141), _150(126)>
  if (prephitmp_281 < 0)
    goto <bb 143>;
  else
    goto <bb 144>;

  <bb 143>:
  __assert_fail ("_shared_buf_size >= 0", "buffer_state.cpp", 189, &__PRETTY_FUNCTION__);

  <bb 144>:
  # DEBUG D#1014 => &this_23(D)->_reserved_slots
  # DEBUG this => D#1014
  # DEBUG __new_size => _147
  __x = 0;
  # DEBUG __x => __x
  _149 = MEM[(int * *)this_23(D) + 192B];
  # DEBUG D#64 => D#1014
  _634 = MEM[(int * *)this_23(D) + 200B];
  # DEBUG D#64 => D#1014
  # DEBUG this => D#64
  # DEBUG this => D#64
  _635 = (long int) _634;
  _636 = (long int) _149;
  _637 = _635 - _636;
  _638 = _637 /[ex] 4;
  _639 = (size_type) _638;
  if (_147 > _639)
    goto <bb 145>;
  else
    goto <bb 148>;

  <bb 145>:
  # DEBUG D#64 => D#1014
  # DEBUG D#64 => D#1014
  # DEBUG this => D#64
  # DEBUG this => D#64
  _640 = _147 - _639;
  # DEBUG this => D#1014
  # DEBUG D#76 => &D#1014->D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  # DEBUG this => D#1014
  MEM[(struct __normal_iterator *)&__position] = _634;
  # DEBUG __n => _640
  # DEBUG __x => &__x
  _172 = &this_23(D)->_reserved_slots;
  std::vector<int>::_M_fill_insert (_172, __position, _640, &__x);
  goto <bb 147>;

<L96>:
  goto <bb 201> (<L72>);

  <bb 147>:
  goto <bb 150>;

  <bb 148>:
  # DEBUG D#64 => D#1014
  # DEBUG D#64 => D#1014
  # DEBUG this => D#64
  # DEBUG this => D#64
  if (_147 < _639)
    goto <bb 149>;
  else
    goto <bb 147>;

  <bb 149>:
  _641 = _147 * 4;
  _642 = _149 + _641;
  # DEBUG D#139 => D#1014
  # DEBUG __pos => _642
  # DEBUG D#138 => D#139
  # DEBUG this => D#138
  # DEBUG D#136 => &D#138->D.40238
  # DEBUG this => D#136
  # DEBUG D#137 => D#138->D.40238._M_impl._M_finish
  # DEBUG __first => _642
  # DEBUG __last => D#137
  # DEBUG D.54135 => NULL
  # DEBUG D#134 => _642
  # DEBUG D#135 => D#137
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  MEM[(int * *)this_23(D) + 200B] = _642;

  <bb 150>:
  # DEBUG this => &end_vc
  # DEBUG D#154 => &end_vc.D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => end_vc.D.40238._M_impl._M_finish
  # DEBUG D#156 => end_vc.D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &end_vc.D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _175 = MEM[(struct _Vector_base *)&end_vc]._M_impl._M_start;
  # DEBUG D#151 => (long int) _175
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _175
  # DEBUG __n => D#148
  if (_175 != 0B)
    goto <bb 151>;
  else
    goto <bb 152>;

  <bb 151>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _175
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _175
  # DEBUG this => D#140
  # DEBUG D.59443 => D#141
  operator delete (_175);

  <bb 152>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)&end_vc] ={v} {CLOBBER};
  # DEBUG this => &start_vc
  # DEBUG D#154 => &start_vc.D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => start_vc.D.40238._M_impl._M_finish
  # DEBUG D#156 => start_vc.D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &start_vc.D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _209 = MEM[(struct _Vector_base *)&start_vc]._M_impl._M_start;
  # DEBUG D#151 => (long int) _209
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _209
  # DEBUG __n => D#148
  if (_209 != 0B)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 153>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _209
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _209
  # DEBUG this => D#140
  # DEBUG D.59428 => D#141
  operator delete (_209);

  <bb 154>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  start_vc ={v} {CLOBBER};
  end_vc ={v} {CLOBBER};
  return;

<L45>:
  # DEBUG this => &D.42663
  # DEBUG this => &D.42663
  # DEBUG this => &D.42663
  _174 = MEM[(char * *)&D.42663];
  # DEBUG D#1 => &D.42663
  # DEBUG this => D#1
  # DEBUG this => &D.42663
  if (&D.42663.D.11539._M_local_buf != _174)
    goto <bb 156>;
  else
    goto <bb 157>;

  <bb 156>:
  # DEBUG D#188 => D.42663.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42663
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42663
  # DEBUG this => D#1
  # DEBUG this => &D.42663
  # DEBUG D#185 => &D.42663._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _174
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _174
  # DEBUG this => D#179
  # DEBUG D.59456 => D#180
  operator delete (_174);

  <bb 157>:
  # DEBUG D#189 => &D.42663._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42663 ={v} {CLOBBER};
  resx 8

<L97>:
  goto <bb 211> (<L74>);

<L47>:
  # DEBUG this => &D.42665
  # DEBUG this => &D.42665
  # DEBUG this => &D.42665
  _194 = MEM[(char * *)&D.42665];
  # DEBUG D#1 => &D.42665
  # DEBUG this => D#1
  # DEBUG this => &D.42665
  if (&D.42665.D.11539._M_local_buf != _194)
    goto <bb 160>;
  else
    goto <bb 161>;

  <bb 160>:
  # DEBUG D#188 => D.42665.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42665
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42665
  # DEBUG this => D#1
  # DEBUG this => &D.42665
  # DEBUG D#185 => &D.42665._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _194
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _194
  # DEBUG this => D#179
  # DEBUG D.59473 => D#180
  operator delete (_194);

  <bb 161>:
  # DEBUG D#189 => &D.42665._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42665 ={v} {CLOBBER};
  resx 12

<L98>:
  goto <bb 211> (<L74>);

<L49>:
  # DEBUG this => &D.42667
  # DEBUG this => &D.42667
  # DEBUG this => &D.42667
  _192 = MEM[(char * *)&D.42667];
  # DEBUG D#1 => &D.42667
  # DEBUG this => D#1
  # DEBUG this => &D.42667
  if (&D.42667.D.11539._M_local_buf != _192)
    goto <bb 164>;
  else
    goto <bb 165>;

  <bb 164>:
  # DEBUG D#188 => D.42667.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42667
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42667
  # DEBUG this => D#1
  # DEBUG this => &D.42667
  # DEBUG D#185 => &D.42667._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _192
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _192
  # DEBUG this => D#179
  # DEBUG D.59490 => D#180
  operator delete (_192);

  <bb 165>:
  # DEBUG D#189 => &D.42667._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42667 ={v} {CLOBBER};
  resx 16

<L99>:
  goto <bb 211> (<L74>);

<L51>:
  # DEBUG this => &D.42669
  # DEBUG this => &D.42669
  # DEBUG this => &D.42669
  _190 = MEM[(char * *)&D.42669];
  # DEBUG D#1 => &D.42669
  # DEBUG this => D#1
  # DEBUG this => &D.42669
  if (&D.42669.D.11539._M_local_buf != _190)
    goto <bb 168>;
  else
    goto <bb 169>;

  <bb 168>:
  # DEBUG D#188 => D.42669.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42669
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42669
  # DEBUG this => D#1
  # DEBUG this => &D.42669
  # DEBUG D#185 => &D.42669._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _190
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _190
  # DEBUG this => D#179
  # DEBUG D.59507 => D#180
  operator delete (_190);

  <bb 169>:
  # DEBUG D#189 => &D.42669._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42669 ={v} {CLOBBER};
  resx 20

<L100>:
  goto <bb 211> (<L74>);

<L53>:
  # DEBUG this => &D.42671
  # DEBUG D#154 => &D.42671.D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D.42671.D.40238._M_impl._M_finish
  # DEBUG D#156 => D.42671.D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D.42671.D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _65 = MEM[(struct _Vector_base *)&D.42671]._M_impl._M_start;
  # DEBUG D#151 => (long int) _65
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _65
  # DEBUG __n => D#148
  if (_65 != 0B)
    goto <bb 172>;
  else
    goto <bb 173>;

  <bb 172>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _65
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _65
  # DEBUG this => D#140
  # DEBUG D.59526 => D#141
  operator delete (_65);

  <bb 173>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  D.42671 ={v} {CLOBBER};
  resx 25

<L101>:
  goto <bb 176> (<L54>);

<L82>:

<L54>:
  # DEBUG this => &D.42672
  # DEBUG this => &D.42672
  # DEBUG this => &D.42672
  _185 = MEM[(char * *)&D.42672];
  # DEBUG D#1 => &D.42672
  # DEBUG this => D#1
  # DEBUG this => &D.42672
  if (&D.42672.D.11539._M_local_buf != _185)
    goto <bb 177>;
  else
    goto <bb 178>;

  <bb 177>:
  # DEBUG D#188 => D.42672.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42672
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42672
  # DEBUG this => D#1
  # DEBUG this => &D.42672
  # DEBUG D#185 => &D.42672._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _185
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _185
  # DEBUG this => D#179
  # DEBUG D.59539 => D#180
  operator delete (_185);

  <bb 178>:
  # DEBUG D#189 => &D.42672._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42672 ={v} {CLOBBER};
  resx 24

<L102>:
  goto <bb 211> (<L74>);

<L56>:
  # DEBUG this => &D.42675
  # DEBUG this => &D.42675
  # DEBUG this => &D.42675
  _188 = MEM[(char * *)&D.42675];
  # DEBUG D#1 => &D.42675
  # DEBUG this => D#1
  # DEBUG this => &D.42675
  if (&D.42675.D.11539._M_local_buf != _188)
    goto <bb 181>;
  else
    goto <bb 182>;

  <bb 181>:
  # DEBUG D#188 => D.42675.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42675
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42675
  # DEBUG this => D#1
  # DEBUG this => &D.42675
  # DEBUG D#185 => &D.42675._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _188
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _188
  # DEBUG this => D#179
  # DEBUG D.59556 => D#180
  operator delete (_188);

  <bb 182>:
  # DEBUG D#189 => &D.42675._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42675 ={v} {CLOBBER};
  resx 31

<L103>:
  goto <bb 211> (<L74>);

<L60>:
  # DEBUG this => &D.42679
  # DEBUG this => &D.42679
  # DEBUG this => &D.42679
  _92 = MEM[(char * *)&D.42679];
  # DEBUG D#1 => &D.42679
  # DEBUG this => D#1
  # DEBUG this => &D.42679
  if (&D.42679.D.11539._M_local_buf != _92)
    goto <bb 185>;
  else
    goto <bb 186>;

  <bb 185>:
  # DEBUG D#188 => D.42679.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42679
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42679
  # DEBUG this => D#1
  # DEBUG this => &D.42679
  # DEBUG D#185 => &D.42679._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _92
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _92
  # DEBUG this => D#179
  # DEBUG D.59573 => D#180
  operator delete (_92);

  <bb 186>:
  # DEBUG D#189 => &D.42679._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42679 ={v} {CLOBBER};
  resx 38

<L104>:
  goto <bb 211> (<L74>);

<L63>:
  # DEBUG this => &D.42682
  # DEBUG this => &D.42682
  # DEBUG this => &D.42682
  _184 = MEM[(char * *)&D.42682];
  # DEBUG D#1 => &D.42682
  # DEBUG this => D#1
  # DEBUG this => &D.42682
  if (&D.42682.D.11539._M_local_buf != _184)
    goto <bb 189>;
  else
    goto <bb 190>;

  <bb 189>:
  # DEBUG D#188 => D.42682.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42682
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42682
  # DEBUG this => D#1
  # DEBUG this => &D.42682
  # DEBUG D#185 => &D.42682._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _184
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _184
  # DEBUG this => D#179
  # DEBUG D.59590 => D#180
  operator delete (_184);

  <bb 190>:
  # DEBUG D#189 => &D.42682._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42682 ={v} {CLOBBER};
  resx 47

<L105>:
  goto <bb 206> (<L73>);

<L66>:
  # DEBUG this => &D.42687
  # DEBUG this => &D.42687
  # DEBUG this => &D.42687
  _119 = MEM[(char * *)&D.42687];
  # DEBUG D#1 => &D.42687
  # DEBUG this => D#1
  # DEBUG this => &D.42687
  if (&D.42687.D.11539._M_local_buf != _119)
    goto <bb 193>;
  else
    goto <bb 194>;

  <bb 193>:
  # DEBUG D#188 => D.42687.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42687
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42687
  # DEBUG this => D#1
  # DEBUG this => &D.42687
  # DEBUG D#185 => &D.42687._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _119
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _119
  # DEBUG this => D#179
  # DEBUG D.59607 => D#180
  operator delete (_119);

  <bb 194>:
  # DEBUG D#189 => &D.42687._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42687 ={v} {CLOBBER};
  resx 52

<L106>:
  goto <bb 206> (<L73>);

<L69>:
  # DEBUG this => &D.42690
  # DEBUG this => &D.42690
  # DEBUG this => &D.42690
  _181 = MEM[(char * *)&D.42690];
  # DEBUG D#1 => &D.42690
  # DEBUG this => D#1
  # DEBUG this => &D.42690
  if (&D.42690.D.11539._M_local_buf != _181)
    goto <bb 197>;
  else
    goto <bb 198>;

  <bb 197>:
  # DEBUG D#188 => D.42690.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.42690
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.42690
  # DEBUG this => D#1
  # DEBUG this => &D.42690
  # DEBUG D#185 => &D.42690._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _181
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _181
  # DEBUG this => D#179
  # DEBUG D.59624 => D#180
  operator delete (_181);

  <bb 198>:
  # DEBUG D#189 => &D.42690._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.42690 ={v} {CLOBBER};
  resx 61

<L107>:
  goto <bb 201> (<L72>);

<L92>:

<L72>:
  ev ={v} {CLOBBER};
  # DEBUG this => &end_vc
  # DEBUG D#154 => &end_vc.D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => end_vc.D.40238._M_impl._M_finish
  # DEBUG D#156 => end_vc.D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &end_vc.D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _145 = MEM[(struct _Vector_base *)&end_vc]._M_impl._M_start;
  # DEBUG D#151 => (long int) _145
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _145
  # DEBUG __n => D#148
  if (_145 != 0B)
    goto <bb 202>;
  else
    goto <bb 203>;

  <bb 202>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _145
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _145
  # DEBUG this => D#140
  # DEBUG D.59643 => D#141
  operator delete (_145);

  <bb 203>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)&end_vc] ={v} {CLOBBER};
  resx 58

<L108>:
  goto <bb 206> (<L73>);

<L88>:

<L73>:
  sv ={v} {CLOBBER};
  # DEBUG this => &start_vc
  # DEBUG D#154 => &start_vc.D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => start_vc.D.40238._M_impl._M_finish
  # DEBUG D#156 => start_vc.D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &start_vc.D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _179 = MEM[(struct _Vector_base *)&start_vc]._M_impl._M_start;
  # DEBUG D#151 => (long int) _179
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _179
  # DEBUG __n => D#148
  if (_179 != 0B)
    goto <bb 207>;
  else
    goto <bb 208>;

  <bb 207>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _179
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _179
  # DEBUG this => D#140
  # DEBUG D.59658 => D#141
  operator delete (_179);

  <bb 208>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  resx 44

<L109>:
  goto <bb 211> (<L74>);

<L80>:

<L74>:
  D.42677 ={v} {CLOBBER};
  bs ={v} {CLOBBER};
  start_vc ={v} {CLOBBER};
  end_vc ={v} {CLOBBER};
  # DEBUG D#573 => &this_23(D)->_reserved_slots
  # DEBUG this => D#573
  # DEBUG D#154 => &D#573->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#573->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#573->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#573->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _182 = MEM[(struct _Vector_base *)this_23(D) + 192B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _182
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _182
  # DEBUG __n => D#148
  if (_182 != 0B)
    goto <bb 212>;
  else
    goto <bb 213>;

  <bb 212>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _182
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _182
  # DEBUG this => D#140
  # DEBUG D.59673 => D#141
  operator delete (_182);

  <bb 213>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_23(D) + 192] ={v} {CLOBBER};
  resx 5

<L76>:
  # DEBUG D#572 => &this_23(D)->_private_buf_occupancy
  # DEBUG this => D#572
  # DEBUG D#154 => &D#572->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#572->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#572->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#572->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _197 = MEM[(struct _Vector_base *)this_23(D) + 160B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _197
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _197
  # DEBUG __n => D#148
  if (_197 != 0B)
    goto <bb 215>;
  else
    goto <bb 216>;

  <bb 215>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _197
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _197
  # DEBUG this => D#140
  # DEBUG D.59688 => D#141
  operator delete (_197);

  <bb 216>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_23(D) + 160] ={v} {CLOBBER};
  resx 4

<L77>:
  # DEBUG D#571 => &this_23(D)->_private_buf_size
  # DEBUG this => D#571
  # DEBUG D#154 => &D#571->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#571->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#571->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#571->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _198 = MEM[(struct _Vector_base *)this_23(D) + 136B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _198
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _198
  # DEBUG __n => D#148
  if (_198 != 0B)
    goto <bb 218>;
  else
    goto <bb 219>;

  <bb 218>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _198
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _198
  # DEBUG this => D#140
  # DEBUG D.59703 => D#141
  operator delete (_198);

  <bb 219>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_23(D) + 136] ={v} {CLOBBER};
  resx 3

<L78>:
  # DEBUG D#570 => &this_23(D)->_private_buf_vc_map
  # DEBUG this => D#570
  # DEBUG D#154 => &D#570->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#570->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#570->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#570->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _199 = MEM[(struct _Vector_base *)this_23(D) + 112B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _199
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _199
  # DEBUG __n => D#148
  if (_199 != 0B)
    goto <bb 221>;
  else
    goto <bb 222>;

  <bb 221>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _199
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _199
  # DEBUG this => D#140
  # DEBUG D.59718 => D#141
  operator delete (_199);

  <bb 222>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_23(D) + 112] ={v} {CLOBBER};
  resx 2

<L79>:
  # DEBUG D#569 => &this_23(D)->D.40291
  # DEBUG this => D#569
  MEM[(struct BufferPolicy *)this_23(D)].D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState12BufferPolicyE + 16B];
  Module::~Module (_29);
  MEM[(struct  &)this_23(D)] ={v} {CLOBBER};
  resx 1

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int] (_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm, funcdef_no=2570, decl_uid=43028, cgraph_uid=1037, symbol_order=1038)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int] (struct _Deque_base * const this, size_t __num_elements)
{
  int * * __nstart;
  int * * __nfinish;
  int * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.45906;
  const long unsigned int D.45907;
  long unsigned int _3;
  int * * _8;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _20;
  int * * _23;
  int * _24;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  int * _29;
  void * _31;
  int * * _33;
  int * _40;
  int * _41;
  int * _42;
  int * _52;
  void * _54;
  int * _56;
  long unsigned int _65;

  <bb 2>:
  # DEBUG __size => 4
  _3 = __num_elements_2(D) >> 7;
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodes => __num_nodes_4
  _5 = _3 + 3;
  # DEBUG __a => &D.45906
  # DEBUG __b => &D.45907
  _65 = MAX_EXPR <_5, 8>;
  this_10(D)->_M_impl._M_map_size = _65;
  # DEBUG D#477 => this_10(D)
  # DEBUG __n => D#1031
  # DEBUG this => D#477
  # DEBUG D#476 => D#477
  # DEBUG D#442 => D#476
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#475 => &__map_alloc
  # DEBUG __n => D#1031
  # DEBUG __a => D#475
  # DEBUG D#474 => D#475
  # DEBUG D#472 => D#474
  # DEBUG D#473 => 0B
  # DEBUG __n => D#1031
  # DEBUG this => D#472
  # DEBUG D.57941 => D#473
  # DEBUG D#471 => D#472
  # DEBUG D#470 => D#471
  # DEBUG this => D#470
  _26 = _65 * 8;
  _8 = operator new (_26);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = _8;
  _15 = this_10(D)->_M_impl._M_map_size;
  _16 = _15 - __num_nodes_4;
  _17 = _16 >> 1;
  _18 = _17 * 8;
  __nstart_19 = _8 + _18;
  # DEBUG __nstart => __nstart_19
  _20 = __num_nodes_4 * 8;
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinish => __nfinish_21
  # DEBUG D#397 => this_10(D)
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nfinish_21
  # DEBUG this => D#397
  # DEBUG __cur => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 13>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __cur => __nstart_75
  # DEBUG D#392 => D#393
  # DEBUG this => D#392
  # DEBUG D#391 => D#392
  # DEBUG __size => 4
  # DEBUG D#390 => &D#391->_M_impl
  # DEBUG D#386 => D#390
  # DEBUG __n => NULL
  # DEBUG __a => D#386
  # DEBUG D#385 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#384 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#383
  # DEBUG D.69416 => D#384
  # DEBUG D#382 => D#383
  # DEBUG D#381 => D#382
  # DEBUG this => D#381
  _52 = operator new (512);

  <bb 5>:
  *__nstart_75 = _52;
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __cur => __nstart_53
  # DEBUG __cur => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 13>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  # __nstart_13 = PHI <__nstart_75(4)>
<L3>:
  _54 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_54);
  # DEBUG this => D#394
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nstart_13
  # DEBUG __n => __nstart_19
  # DEBUG __n => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __cxa_rethrow ();

  <bb 9>:

  <bb 10>:
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(11)>
  # DEBUG __n => __nstart_72
  _56 = *__nstart_72;
  # DEBUG this => D#395
  # DEBUG __p => _56
  # DEBUG __size => 4
  # DEBUG D#167 => &D#396->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _56
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _56
  # DEBUG this => D#140
  # DEBUG D.69409 => D#141
  operator delete (_56);
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __n => __nstart_57
  # DEBUG __n => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

<L5>:
  __cxa_end_catch ();
  resx 7

  <bb 13>:
  # DEBUG D#480 => &this_10(D)->_M_impl._M_start
  # DEBUG this => D#480
  # DEBUG __new_node => __nstart_19
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node = __nstart_19;
  _24 = *__nstart_19;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first = _24;
  # DEBUG __size => 4
  _42 = _24 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last = _42;
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#479 => &this_10(D)->_M_impl._M_finish
  # DEBUG this => D#479
  # DEBUG __new_node => _23
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node = _23;
  _40 = MEM[(int * *)__nfinish_21 + -8B];
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first = _40;
  # DEBUG __size => 4
  _41 = _40 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last = _41;
  this_10(D)->_M_impl._M_start._M_cur = _24;
  # DEBUG __size => 4
  _27 = __num_elements_2(D) & 127;
  _28 = _27 * 4;
  _29 = _40 + _28;
  this_10(D)->_M_impl._M_finish._M_cur = _29;
  return;

<L0>:
  _31 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_31);
  # DEBUG D#478 => this_10(D)->_M_impl._M_map_size
  _33 = this_10(D)->_M_impl._M_map;
  # DEBUG D#445 => this_10(D)
  # DEBUG D#446 => D#478
  # DEBUG __p => _33
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => _33
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => _33
  # DEBUG this => D#261
  # DEBUG D.57963 => D#262
  operator delete (_33);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = 0B;
  this_10(D)->_M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function void std::vector<bool, _Alloc>::_M_fill_insert(std::vector<bool, _Alloc>::iterator, std::vector<bool, _Alloc>::size_type, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator; std::vector<bool, _Alloc>::size_type = long unsigned int] (_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb, funcdef_no=2600, decl_uid=42110, cgraph_uid=1067, symbol_order=1068)

Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<bool, _Alloc>::_M_fill_insert(std::vector<bool, _Alloc>::iterator, std::vector<bool, _Alloc>::size_type, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator; std::vector<bool, _Alloc>::size_type = long unsigned int] (struct vector * const this, struct iterator __position, size_type __n, bool __x)
{
  const unsigned int __first$8;
  _Bit_type * __first;
  const unsigned int __last$_M_offset;
  _Bit_type * const __last$_M_p;
  unsigned int __last$D26722$_M_offset;
  _Bit_type * __last$D26722$_M_p;
  unsigned int __first$D26722$_M_offset;
  _Bit_type * __first$D26722$_M_p;
  unsigned int SR.1640;
  _Bit_type * SR.1639;
  const unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.1636;
  _Bit_type * SR.1635;
  unsigned int SR.1634;
  _Bit_type * SR.1633;
  unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.1630;
  _Bit_type * SR.1629;
  unsigned int SR.1628;
  _Bit_type * SR.1627;
  const unsigned int __first$8;
  const unsigned int __first$8;
  _Bit_type * __first;
  const unsigned int __last$_M_offset;
  _Bit_type * const __last$_M_p;
  unsigned int __last$D26722$_M_offset;
  _Bit_type * __last$D26722$_M_p;
  unsigned int __first$D26722$_M_offset;
  _Bit_type * __first;
  unsigned int SR.1617;
  _Bit_type * SR.1616;
  unsigned int SR.1615;
  _Bit_type * SR.1614;
  unsigned int __i$D26722$_M_offset;
  _Bit_type * __i$D26722$_M_p;
  unsigned int __position$8;
  _Bit_type * __position;
  struct _Bit_iterator D.69889;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  unsigned int __it$D26722$_M_offset;
  _Bit_type * __it$D26722$_M_p;
  unsigned int __it$D26722$_M_offset;
  _Bit_type * __it$D26722$_M_p;
  unsigned int __it$D26722$_M_offset;
  _Bit_type * __it$D26722$_M_p;
  struct _Bit_iterator D.69853;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.69852;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  struct _Bit_iterator D.69783;
  struct _Bit_iterator D.69782;
  long unsigned int * __first;
  _Bit_type * __first$D26722$_M_p;
  _Bit_type * __last$D26722$_M_p;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator D.69757;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.69732;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.69731;
  _Bit_type * __it$D26842$_M_p;
  unsigned int __it$D26842$_M_offset;
  _Bit_type * __it$D26842$_M_p;
  unsigned int __it$D26842$_M_offset;
  _Bit_type * __it$D26722$_M_p;
  unsigned int __it$D26722$_M_offset;
  const long unsigned int D.69708;
  const size_type __len;
  size_type D.69707;
  size_type __n;
  _Bit_type * __last$D26842$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D26842$_M_offset;
  struct _Bit_iterator D.69685;
  struct iterator D.69684;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  struct _Bit_iterator D.69614;
  struct _Bit_iterator D.69613;
  long unsigned int * __first;
  _Bit_type * __first$D26722$_M_p;
  _Bit_type * __last$D26722$_M_p;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator D.69588;
  difference_type __n;
  _Bit_type * __last$_M_p;
  const unsigned int __last$8;
  _Bit_type * __result$_M_p;
  unsigned int __result$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  unsigned int __it$D26722$_M_offset;
  _Bit_type * __it$D26722$_M_p;
  unsigned int __it$D26722$_M_offset;
  _Bit_type * __it$D26722$_M_p;
  unsigned int __it$D26722$_M_offset;
  _Bit_type * __it$D26722$_M_p;
  struct _Bit_iterator D.69553;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.69552;
  _Bit_type * SR.1081;
  unsigned int SR.1074;
  _Bit_type * SR.1073;
  unsigned int SR.1072;
  _Bit_type * SR.1071;
  unsigned int __i$8;
  _Bit_type * __i;
  unsigned int __position$8;
  _Bit_type * __position;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  struct _Bit_iterator D.60254;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  struct _Bit_iterator D.60216;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator __i;
  struct _Bit_iterator D.51674;
  struct _Bit_iterator D.51670;
  long unsigned int _7;
  long int __n.166_8;
  long unsigned int prephitmp_13;
  bool _15;
  long int __n.166_16;
  long unsigned int * _20;
  long int _25;
  long int _26;
  long int _27;
  long int _28;
  long int _29;
  ptrdiff_t _30;
  unsigned int _32;
  _Bit_type * _33;
  long unsigned int * const _34;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  ptrdiff_t _41;
  size_type _42;
  _Bit_type * _53;
  unsigned int _55;
  bool _56;
  long int _58;
  long unsigned int _59;
  long unsigned int _60;
  unsigned int _66;
  long int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int * _81;
  long int _89;
  long unsigned int _90;
  long unsigned int _91;
  unsigned int _97;
  long unsigned int _128;
  int _131;
  long int _133;
  long int _134;
  long int _135;
  long int _137;
  long int _138;
  long unsigned int pretmp_143;
  long unsigned int prephitmp_147;
  size_t pretmp_149;
  long unsigned int _154;
  long unsigned int _155;
  long unsigned int _157;
  long unsigned int _158;
  long unsigned int _159;
  long unsigned int _160;
  long unsigned int _161;
  bool _164;
  long unsigned int prephitmp_165;
  long unsigned int pretmp_172;
  long unsigned int _180;
  long unsigned int _184;
  long unsigned int _185;
  long unsigned int _186;
  long unsigned int _193;
  long unsigned int _195;
  long unsigned int _196;
  long unsigned int _203;
  long unsigned int _204;
  long unsigned int _205;
  bool _213;
  bool _214;
  bool _215;
  long unsigned int _222;
  long unsigned int _223;
  long unsigned int _224;
  bool _230;
  bool _232;
  long int __last.173_235;
  long int __first.174_236;
  long int _237;
  long unsigned int _239;
  bool _253;
  long unsigned int _255;
  int _257;
  long unsigned int _260;
  long unsigned int pretmp_269;
  long unsigned int _282;
  long unsigned int _284;
  long unsigned int _285;
  long unsigned int _287;
  long unsigned int _289;
  long unsigned int _290;
  long unsigned int _291;
  long unsigned int _292;
  long unsigned int _293;
  long unsigned int _304;
  long unsigned int _307;
  long unsigned int _308;
  long unsigned int _311;
  long unsigned int _313;
  bool _316;
  bool _318;
  bool _320;
  bool _322;
  long unsigned int _324;
  long unsigned int _325;
  long unsigned int _326;
  int _333;
  long unsigned int _343;
  long unsigned int _344;
  long unsigned int _345;
  long unsigned int _362;
  long unsigned int _363;
  long unsigned int _364;
  int _370;
  long unsigned int * const _373;
  long int _375;
  long int _376;
  long int _377;
  long unsigned int _378;
  sizetype _379;
  long unsigned int * _380;
  long int _391;
  long int _393;
  long int _394;
  long int _395;
  long int _396;
  long unsigned int _401;
  long unsigned int _403;
  long unsigned int _405;
  long unsigned int _406;
  long unsigned int _408;
  long unsigned int _409;
  long unsigned int _410;
  long unsigned int _411;
  long unsigned int _412;
  long unsigned int pretmp_422;
  long unsigned int _423;
  long unsigned int _424;
  long unsigned int _426;
  long unsigned int _428;
  long int pretmp_437;
  long unsigned int prephitmp_439;
  long int prephitmp_444;
  long unsigned int _453;
  _Bit_type cstore_456;
  long unsigned int _457;
  long unsigned int _458;
  long unsigned int _459;
  bool _460;
  bool _463;
  bool _464;
  long unsigned int pretmp_487;
  _Bit_type cstore_499;
  long unsigned int _500;
  long unsigned int _501;
  long unsigned int _502;
  long unsigned int _503;
  bool _504;
  long unsigned int pretmp_522;
  long unsigned int _534;
  _Bit_type cstore_539;
  long unsigned int _549;
  bool _558;
  bool _559;
  bool _560;
  bool _561;
  bool _562;
  long unsigned int pretmp_563;
  bool _564;
  bool _565;
  bool _566;
  bool _567;
  bool _568;

  <bb 2>:
  # DEBUG D#1045 => MEM[(struct _Bit_iterator *)&__position]
  # DEBUG __position => D#1045
  # DEBUG D#1044 => MEM[(struct _Bit_iterator *)&__position + 8B]
  # DEBUG __position$8 => D#1044
  # DEBUG __position => D#1045
  # DEBUG __position$8 => D#1044
  if (__n_2(D) == 0)
    goto <bb 135>;
  else
    goto <bb 3>;

  <bb 3>:
  __first_525 = MEM[(struct _Bit_iterator *)&__position];
  __first$8_480 = MEM[(struct _Bit_iterator *)&__position + 8B];
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#106 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#106
  _32 = MEM[(const struct _Bit_iterator *)this_4(D)].D.26722._M_offset;
  _33 = MEM[(const struct _Bit_iterator *)this_4(D)].D.26722._M_p;
  # DEBUG this => D#27
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#27
  # DEBUG D#178 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl
  _34 = MEM[(long unsigned int * *)this_4(D) + 32B];
  # DEBUG D#177 => D#178
  # DEBUG this => D#177
  # DEBUG this => NULL
  # DEBUG __x => _34
  # DEBUG __y => 0
  # DEBUG this => D#26
  # DEBUG __x => _34
  # DEBUG __y => 0
  # DEBUG this => D#26
  # DEBUG __x => D#16
  # DEBUG __x => D#16
  # DEBUG __y => D#17
  # DEBUG __y => D#17
  _36 = (long int) _34;
  _37 = (long int) _33;
  _38 = _36 - _37;
  _39 = _38 * 8;
  _40 = (long int) _32;
  _41 = _39 - _40;
  _42 = (size_type) _41;
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#106 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#106
  # DEBUG this => D#27
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#27
  # DEBUG this => this_4(D)
  # DEBUG D#105 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#105
  __last$8_6 = MEM[(const struct _Bit_iterator *)this_4(D) + 16B].D.26722._M_offset;
  __last$_M_p_5 = MEM[(const struct _Bit_iterator *)this_4(D) + 16B].D.26722._M_p;
  # DEBUG this => D#27
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#27
  # DEBUG __x => D#16
  # DEBUG __x => D#16
  # DEBUG __y => D#17
  # DEBUG __y => D#17
  _25 = (long int) __last$_M_p_5;
  _26 = _25 - _37;
  _27 = _26 * 8;
  _28 = (long int) __last$8_6;
  _29 = _27 + _28;
  _30 = _29 - _40;
  _31 = (const long unsigned int) _30;
  _7 = _42 - _31;
  if (__n_2(D) <= _7)
    goto <bb 4>;
  else
    goto <bb 59>;

  <bb 4>:
  __n.166_8 = (long int) __n_2(D);
  # DEBUG D#590 => &this_4(D)->D.42205._M_impl._M_finish
  # DEBUG this => D#590
  # DEBUG __i => __n.166_8
  # DEBUG __tmp$_M_p => __last$_M_p_5
  # DEBUG __tmp$_M_offset => __last$8_6
  # DEBUG this => &__tmp
  # DEBUG __i => __n.166_8
  # DEBUG D#23 => &__tmp.D.26722
  # DEBUG this => D#23
  # DEBUG __i => __n.166_8
  __n_68 = __n.166_8 + _28;
  # DEBUG __n => __n_68
  _69 = __n_68 / 64;
  _70 = (long unsigned int) _69;
  _71 = _70 * 8;
  __result$_M_p_72 = __last$_M_p_5 + _71;
  # DEBUG __tmp$_M_p => __result$_M_p_72
  __n_73 = __n_68 % 64;
  # DEBUG __n => __n_73
  if (__n_73 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __n_74 = __n_73 + 64;
  # DEBUG __n => __n_74
  __result$_M_p_75 = __result$_M_p_72 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __result$_M_p_75

  <bb 6>:
  # __n_76 = PHI <__n_73(4), __n_74(5)>
  # __result$_M_p_78 = PHI <__result$_M_p_72(4), __result$_M_p_75(5)>
  # DEBUG __tmp$_M_p => __result$_M_p_78
  # DEBUG __n => __n_76
  __result$_M_offset_77 = (unsigned int) __n_76;
  # DEBUG __tmp$_M_offset => __result$_M_offset_77
  # DEBUG D#24 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#24
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#25
  # DEBUG this => this_4(D)
  # DEBUG D#510 => __position
  # DEBUG D#510 => __position
  # DEBUG D#511 => D.51669
  # DEBUG D#511 => D.51669
  # DEBUG D#512 => D.51668
  # DEBUG D#512 => D.51668
  # DEBUG __it$D26722$_M_p => __last$_M_p_5
  # DEBUG __it$D26722$_M_offset => __last$8_6
  # DEBUG __it$D26722$_M_p => D#1045
  # DEBUG __it$D26722$_M_offset => D#1044
  # DEBUG __it$D26722$_M_p => __result$_M_p_78
  # DEBUG __it$D26722$_M_offset => __result$_M_offset_77
  # DEBUG __it$D26722$_M_p => __last$_M_p_5
  # DEBUG __it$D26722$_M_offset => __last$8_6
  # DEBUG __it$D26722$_M_p => D#1045
  # DEBUG __it$D26722$_M_offset => D#1044
  # DEBUG __simple => 0
  # DEBUG __last$_M_p => __last$_M_p_5
  # DEBUG __last$8 => __last$8_6
  # DEBUG __result$_M_p => __result$_M_p_78
  # DEBUG __result$_M_offset => __result$_M_offset_77
  # DEBUG D#16 => &__last.D.26722
  # DEBUG D#16 => &__last.D.26722
  # DEBUG D#17 => &__first.D.26722
  # DEBUG D#17 => &__first.D.26722
  # DEBUG __x => D#16
  # DEBUG __x => D#16
  # DEBUG __y => D#17
  # DEBUG __y => D#17
  _133 = (long int) __first_525;
  _134 = _25 - _133;
  _135 = _134 * 8;
  _137 = _28 + _135;
  _138 = (long int) __first$8_480;
  __n_139 = _137 - _138;
  # DEBUG __n => NULL
  # DEBUG __result$_M_offset => __result$_M_offset_77
  # DEBUG __result$_M_p => __result$_M_p_78
  # DEBUG __last$8 => __last$8_6
  # DEBUG __last$_M_p => __last$_M_p_5
  # DEBUG __n => __n_139
  if (__n_139 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  # DEBUG __i => __n.166_8
  # DEBUG __tmp$_M_p => D#1045
  # DEBUG __tmp$_M_offset => D#1044
  # DEBUG this => &__tmp
  # DEBUG __i => __n.166_8
  # DEBUG D#23 => &__tmp.D.26722
  # DEBUG this => D#23
  # DEBUG __i => __n.166_8
  __n_57 = __n.166_8 + _138;
  # DEBUG __n => __n_57
  _58 = __n_57 / 64;
  _59 = (long unsigned int) _58;
  _60 = _59 * 8;
  __last$_M_p_61 = __first_525 + _60;
  # DEBUG __tmp$_M_p => __last$_M_p_61
  __n_62 = __n_57 % 64;
  # DEBUG __n => __n_62
  if (__n_62 < 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 8>:

  <bb 9>:
  # __n_461 = PHI <__n_139(8), __n_162(19)>
  # __last$8_462 = PHI <__last$8_6(8), __last$8_145(19)>
  # __last$_M_p_489 = PHI <__last$_M_p_5(8), __last$_M_p_153(19)>
  # __result$_M_offset_490 = PHI <__result$_M_offset_77(8), __result$_M_offset_151(19)>
  # __result$_M_p_491 = PHI <__result$_M_p_78(8), __result$_M_p_156(19)>
  # DEBUG __result$_M_offset => __result$_M_offset_490
  # DEBUG __result$_M_p => __result$_M_p_491
  # DEBUG __last$8 => __last$8_462
  # DEBUG __last$_M_p => __last$_M_p_489
  # DEBUG __n => __n_461
  # DEBUG this => &__last
  # DEBUG D#22 => &__last.D.26722
  # DEBUG this => D#22
  # DEBUG __last$8 => __last$8_462 + 4294967295
  if (__last$8_462 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  __last$8_142 = __last$8_462 + 4294967295;
  pretmp_487 = 1 << __last$8_142;
  goto <bb 12>;

  <bb 11>:
  # DEBUG __last$8 => 63
  __last$_M_p_144 = __last$_M_p_489 + 18446744073709551608;
  # DEBUG __last$_M_p => __last$_M_p_144

  <bb 12>:
  # __last$_M_p_153 = PHI <__last$_M_p_489(10), __last$_M_p_144(11)>
  # __last$8_145 = PHI <__last$8_142(10), 63(11)>
  # prephitmp_13 = PHI <pretmp_487(10), 9223372036854775808(11)>
  # DEBUG __last$8 => __last$8_145
  # DEBUG __last$_M_p => __last$_M_p_153
  # DEBUG this => D#20
  # DEBUG this => D#20
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_153
  # DEBUG __y => 1 << __last$8_145
  # DEBUG this => &__result
  # DEBUG D#22 => &__result.D.26722
  # DEBUG this => D#22
  # DEBUG __result$_M_offset => __result$_M_offset_490 + 4294967295
  if (__result$_M_offset_490 == 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  __result$_M_offset_148 = __result$_M_offset_490 + 4294967295;
  pretmp_172 = 1 << __result$_M_offset_148;
  goto <bb 15>;

  <bb 14>:
  # DEBUG __result$_M_offset => 63
  __result$_M_p_150 = __result$_M_p_491 + 18446744073709551608;
  # DEBUG __result$_M_p => __result$_M_p_150

  <bb 15>:
  # __result$_M_p_156 = PHI <__result$_M_p_491(13), __result$_M_p_150(14)>
  # __result$_M_offset_151 = PHI <__result$_M_offset_148(13), 63(14)>
  # prephitmp_165 = PHI <pretmp_172(13), 9223372036854775808(14)>
  # DEBUG __result$_M_offset => __result$_M_offset_151
  # DEBUG __result$_M_p => __result$_M_p_156
  # DEBUG this => D#20
  # DEBUG this => D#20
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_156
  # DEBUG __y => 1 << __result$_M_offset_151
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  _154 = *__last$_M_p_153;
  _155 = prephitmp_13 & _154;
  # DEBUG this => NULL
  # DEBUG __x => _155 != 0
  if (_155 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _157 = *__result$_M_p_156;
  _158 = _157 | prephitmp_165;
  goto <bb 18>;

  <bb 17>:
  _159 = *__result$_M_p_156;
  _160 = ~prephitmp_165;
  _161 = _159 & _160;

  <bb 18>:
  # cstore_456 = PHI <_158(16), _161(17)>
  *__result$_M_p_156 = cstore_456;
  __n_162 = __n_461 + -1;
  # DEBUG __n => __n_162
  # DEBUG __result$_M_offset => __result$_M_offset_151
  # DEBUG __result$_M_p => __result$_M_p_156
  # DEBUG __last$8 => __last$8_145
  # DEBUG __last$_M_p => __last$_M_p_153
  # DEBUG __n => __n_162
  if (__n_162 <= 0)
    goto <bb 7>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 9>;

  <bb 20>:
  __n_63 = __n_62 + 64;
  # DEBUG __n => __n_63
  __last$_M_p_64 = __last$_M_p_61 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __last$_M_p_64

  <bb 21>:
  # __n_65 = PHI <__n_62(7), __n_63(20)>
  # __last$_M_p_67 = PHI <__last$_M_p_61(7), __last$_M_p_64(20)>
  # DEBUG __tmp$_M_p => __last$_M_p_67
  # DEBUG __n => __n_65
  _66 = (unsigned int) __n_65;
  # DEBUG __tmp$_M_offset => _66
  # DEBUG D#24 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#24
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#25
  # DEBUG __first => D#1045
  # DEBUG __first$D26722$_M_offset => D#1044
  # DEBUG __last$D26722$_M_p => __last$_M_p_67
  # DEBUG __last$D26722$_M_offset => _66
  # DEBUG __x => &__x
  # DEBUG __first$D26722$_M_p => D#1045
  # DEBUG __last$D26722$_M_p => __last$_M_p_67
  if (__last$_M_p_67 != __first_525)
    goto <bb 30>;
  else
    goto <bb 22>;

  <bb 22>:
  if (__x_548(D) != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  goto <bb 53>;

  <bb 24>:

  <bb 25>:
  # __first_478 = PHI <__first_525(24), __first_446(29)>
  # __first$8_472 = PHI <__first$8_480(24), __first$8_443(29)>
  # DEBUG __first$_M_offset => __first$8_472
  # DEBUG __first$_M_p => __first_478
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG __first$_M_offset => __first$8_472
  # DEBUG __first$_M_p => __first_478
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  _464 = _66 == __first$8_472;
  _463 = __last$_M_p_67 == __first_478;
  _460 = _463 & _464;
  if (_460 != 0)
    goto <bb 55>;
  else
    goto <bb 26>;

  <bb 26>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _459 = 1 << __first$8_472;
  # DEBUG this => NULL
  # DEBUG __x => __first_478
  # DEBUG __y => _459
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _458 = *__first_478;
  _457 = ~_459;
  _453 = _458 & _457;
  *__first_478 = _453;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __first$8_472 + 1
  if (__first$8_472 == 63)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  __first$8_448 = __first$8_472 + 1;
  goto <bb 29>;

  <bb 28>:
  # DEBUG __first$_M_offset => 0
  __first_447 = __first_478 + 8;
  # DEBUG __first$_M_p => __first_447

  <bb 29>:
  # __first_446 = PHI <__first_478(27), __first_447(28)>
  # __first$8_443 = PHI <__first$8_448(27), 0(28)>
  goto <bb 25>;

  <bb 30>:
  _257 = (int) __x_548(D);
  _333 = -_257;
  __first_166 = __first_525 + 8;
  # DEBUG D#75 => &D.69615
  # DEBUG __first => __first_166
  # DEBUG __last => __last$_M_p_67
  # DEBUG D#74 => D#75
  # DEBUG __value => D#74
  # DEBUG __it => __last$_M_p_67
  # DEBUG __it => __last$_M_p_67
  # DEBUG __it => __first_166
  # DEBUG __it => __first_166
  # DEBUG D#61 => D#74
  # DEBUG __first => __first_166
  # DEBUG __last => __last$_M_p_67
  # DEBUG __value => D#61
  # DEBUG __tmp => _333
  # DEBUG __first => __first_166
  if (__last$_M_p_67 == __first_166)
    goto <bb 31>;
  else
    goto <bb 39>;

  <bb 31>:
  # DEBUG this => &D.69614
  # DEBUG __x => __first_166
  # DEBUG __y => 0
  # DEBUG D#19 => &D.69614.D.26722
  # DEBUG this => D#19
  # DEBUG __x => __first_166
  # DEBUG __y => 0
  # DEBUG this => D#19
  # DEBUG __first => D#1045
  # DEBUG __first$8 => D#1044
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => D#1045
  # DEBUG __first$_M_offset => D#1044
  if (__x_548(D) != 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  goto <bb 44>;

  <bb 33>:

  <bb 34>:
  # __first_550 = PHI <__first_525(33), __first_515(38)>
  # __first$8_542 = PHI <__first$8_480(33), __first$8_509(38)>
  # DEBUG __first$_M_offset => __first$8_542
  # DEBUG __first$_M_p => __first_550
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  _316 = __first$8_542 == 0;
  _253 = __first_166 == __first_550;
  _504 = _316 & _253;
  if (_504 != 0)
    goto <bb 136>;
  else
    goto <bb 35>;

  <bb 35>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _503 = 1 << __first$8_542;
  # DEBUG this => NULL
  # DEBUG __x => __first_550
  # DEBUG __y => _503
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _502 = *__first_550;
  _501 = ~_503;
  _500 = _502 & _501;
  *__first_550 = _500;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __first$8_542 + 1
  if (__first$8_542 == 63)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG __first$_M_offset => 0
  __first_523 = __first_550 + 8;
  # DEBUG __first$_M_p => __first_523
  goto <bb 38>;

  <bb 37>:
  __first$8_517 = __first$8_542 + 1;

  <bb 38>:
  # __first_515 = PHI <__first_523(36), __first_550(37)>
  # __first$8_509 = PHI <0(36), __first$8_517(37)>
  goto <bb 34>;

  <bb 39>:
  pretmp_269 = (long unsigned int) _333;

  <bb 40>:
  # __first_492 = PHI <__first_166(39), __first_170(41)>
  # DEBUG __first => __first_492
  *__first_492 = pretmp_269;
  __first_170 = __first_492 + 8;
  # DEBUG __first => __first_170
  # DEBUG __first => __first_170
  if (__last$_M_p_67 == __first_170)
    goto <bb 31>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 40>;

  <bb 42>:
  __first$8_209 = __first$8_200 + 1;

  <bb 43>:
  # __first_192 = PHI <__first_198(42), __first_210(45)>
  # __first$8_231 = PHI <__first$8_209(42), 0(45)>

  <bb 44>:
  # __first_198 = PHI <__first_192(43), __first_525(32)>
  # __first$8_200 = PHI <__first$8_231(43), __first$8_480(32)>
  # DEBUG __first$_M_offset => __first$8_200
  # DEBUG __first$_M_p => __first_198
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  _56 = __first$8_200 == 0;
  _164 = __first_166 == __first_198;
  _561 = _56 & _164;
  if (_561 != 0)
    goto <bb 136>;
  else
    goto <bb 145>;

  <bb 45>:
  # DEBUG __first$_M_offset => 0
  __first_210 = __first_198 + 8;
  # DEBUG __first$_M_p => __first_210
  goto <bb 43>;

  <bb 46>:
  __first$_M_offset_190 = __first$_M_offset_181 + 1;

  <bb 47>:
  # __last$_M_p_212 = PHI <__last$_M_p_179(46), __last$_M_p_191(50)>
  # __first$_M_offset_211 = PHI <__first$_M_offset_190(46), 0(50)>

  <bb 48>:
  # __last$_M_p_179 = PHI <__last$_M_p_212(47), __last$_M_p_67(137)>
  # __first$_M_offset_181 = PHI <__first$_M_offset_211(47), 0(137)>
  # DEBUG __first$_M_offset => __first$_M_offset_181
  # DEBUG __first$_M_p => __last$_M_p_179
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  if (__last$_M_p_67 == __last$_M_p_179)
    goto <bb 49>;
  else
    goto <bb 146>;

  <bb 49>:
  # DEBUG __first$_M_offset => __first$_M_offset_181
  # DEBUG __first$_M_p => __last$_M_p_179
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  if (_66 == __first$_M_offset_181)
    goto <bb 147>;
  else
    goto <bb 146>;

  <bb 50>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_191 = __last$_M_p_179 + 8;
  # DEBUG __first$_M_p => __last$_M_p_191
  goto <bb 47>;

  <bb 51>:
  __first$8_228 = __first$8_219 + 1;

  <bb 52>:
  # __first_352 = PHI <__first_217(51), __first_229(54)>
  # __first$8_351 = PHI <__first$8_228(51), 0(54)>

  <bb 53>:
  # __first_217 = PHI <__first_525(23), __first_352(52)>
  # __first$8_219 = PHI <__first$8_480(23), __first$8_351(52)>
  # DEBUG __first$_M_offset => __first$8_219
  # DEBUG __first$_M_p => __first_217
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG __first$_M_offset => __first$8_219
  # DEBUG __first$_M_p => __first_217
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  _562 = _66 == __first$8_219;
  _213 = __last$_M_p_67 == __first_217;
  _214 = _213 & _562;
  if (_214 != 0)
    goto <bb 55>;
  else
    goto <bb 148>;

  <bb 54>:
  # DEBUG __first$_M_offset => 0
  __first_229 = __first_217 + 8;
  # DEBUG __first$_M_p => __first_229
  goto <bb 52>;

  <bb 55>:
  # DEBUG D#599 => &this_4(D)->D.42205._M_impl._M_finish
  # DEBUG this => D#599
  # DEBUG __i => __n.166_8
  # DEBUG D#23 => &D#599->D.26722
  # DEBUG this => D#23
  # DEBUG __i => __n.166_8
  # DEBUG D#1043 => MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_offset
  # DEBUG D#1042 => (long int) D#1043
  # DEBUG D#1041 => __n.166_8 + D#1042
  # DEBUG __n => D#1041
  # DEBUG __n => D#1041 % 64
  if (__n_73 < 0)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_p = __result$_M_p_72;
  goto <bb 58>;

  <bb 57>:
  __n_52 = __n_73 + 64;
  # DEBUG __n => __n_52
  _53 = __result$_M_p_72 + 18446744073709551608;
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_p = _53;

  <bb 58>:
  # __n_54 = PHI <__n_73(56), __n_52(57)>
  # DEBUG __n => __n_54
  _55 = (unsigned int) __n_54;
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_offset = _55;
  goto <bb 135>;

  <bb 59>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector<bool>::_M_fill_insert"
  # DEBUG D#518 => this_4(D)
  # DEBUG this => D#518
  # DEBUG D#517 => D#518
  # DEBUG __isize => 9223372036854775744
  # DEBUG D#516 => &D#517->D.42205
  # DEBUG this => D#516
  # DEBUG __a => D#515
  # DEBUG D#514 => D#515
  # DEBUG D#513 => D#514
  # DEBUG this => D#513
  # DEBUG __asize => NULL
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#106 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#106
  # DEBUG this => D#27
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#27
  # DEBUG this => this_4(D)
  # DEBUG D#105 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#105
  # DEBUG this => D#27
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#27
  # DEBUG __x => D#16
  # DEBUG __x => D#16
  # DEBUG __y => D#17
  # DEBUG __y => D#17
  _255 = 9223372036854775744 - _31;
  if (__n_2(D) > _255)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  std::__throw_length_error ("vector<bool>::_M_fill_insert");

  <bb 61>:
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#106 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#106
  # DEBUG this => D#27
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#27
  # DEBUG this => this_4(D)
  # DEBUG D#105 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#105
  # DEBUG this => D#27
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#27
  # DEBUG __x => D#16
  # DEBUG __x => D#16
  # DEBUG __y => D#17
  # DEBUG __y => D#17
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#106 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#106
  # DEBUG this => D#27
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#27
  # DEBUG this => this_4(D)
  # DEBUG D#105 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#105
  # DEBUG this => D#27
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#27
  # DEBUG __x => D#16
  # DEBUG __x => D#16
  # DEBUG __y => D#17
  # DEBUG __y => D#17
  # DEBUG __a => &D.69708
  # DEBUG __b => &__n
  _128 = MAX_EXPR <__n_2(D), _31>;
  __len_259 = _31 + _128;
  # DEBUG __len => __len_259
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#106 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#106
  # DEBUG this => D#27
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#27
  # DEBUG this => this_4(D)
  # DEBUG D#105 => &MEM[(const struct vector *)this_4(D)].D.42205._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#105
  # DEBUG this => D#27
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#27
  # DEBUG __x => D#16
  # DEBUG __x => D#16
  # DEBUG __y => D#17
  # DEBUG __y => D#17
  # DEBUG D#518 => this_4(D)
  # DEBUG this => D#518
  # DEBUG D#517 => D#518
  # DEBUG __isize => 9223372036854775744
  # DEBUG D#516 => &D#517->D.42205
  # DEBUG this => D#516
  # DEBUG __a => D#515
  # DEBUG D#514 => D#515
  # DEBUG D#513 => D#514
  # DEBUG this => D#513
  # DEBUG __asize => NULL
  _564 = __len_259 > 9223372036854775744;
  _566 = _31 > __len_259;
  _565 = _564 | _566;
  if (_565 != 0)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:
  pretmp_143 = __len_259 + 63;
  pretmp_149 = pretmp_143 >> 6;
  pretmp_563 = pretmp_149 * 8;

  <bb 63>:
  # prephitmp_147 = PHI <1152921504606846968(61), pretmp_563(62)>
  # DEBUG __len => NULL
  # DEBUG D#601 => &this_4(D)->D.42205
  # DEBUG D#526 => D#601
  # DEBUG __n => NULL
  # DEBUG this => D#526
  # DEBUG D#525 => D#526
  # DEBUG __n => NULL
  # DEBUG D#524 => &D#525->_M_impl
  # DEBUG D#523 => D#524
  # DEBUG __n => NULL
  # DEBUG __a => D#523
  # DEBUG D#522 => D#523
  # DEBUG D#520 => D#522
  # DEBUG D#521 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#520
  # DEBUG D.60242 => D#521
  # DEBUG D#519 => D#520
  # DEBUG D#513 => D#519
  # DEBUG this => D#513
  _81 = operator new (prephitmp_147);
  # DEBUG __q => _81
  # DEBUG __r => _81
  # DEBUG this => &__start
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG D#19 => &__start.D.26722
  # DEBUG this => D#19
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#19
  # DEBUG __start$_M_p => _81
  # DEBUG __start$_M_offset => 0
  # DEBUG this => &D.46254
  # DEBUG __x => &__position
  # DEBUG D#27 => &D.46254.D.26842
  # DEBUG this => D#27
  # DEBUG __x => D#1045
  # DEBUG __y => D#1044
  # DEBUG this => D#27
  # DEBUG this => this_4(D)
  SR.1081_100 = MEM[(struct vector *)this_4(D)];
  # DEBUG D#600 => MEM[(struct vector *)this_4(D) + 8B]
  # DEBUG this => &D.46253
  # DEBUG __x => &D.46252
  # DEBUG D#27 => &D.46253.D.26842
  # DEBUG this => D#27
  # DEBUG __x => SR.1081_100
  # DEBUG __y => D#600
  # DEBUG this => D#27
  # DEBUG D.60315 => D#600
  # DEBUG D#586 => this_4(D)
  # DEBUG D#587 => D.46253
  # DEBUG D#588 => D.46254
  # DEBUG D#588 => D.46254
  # DEBUG D#589 => __start
  # DEBUG this => D#586
  # DEBUG __last$D26842$_M_p => D#1045
  # DEBUG __first => SR.1081_100
  # DEBUG __last => D#1045
  # DEBUG __result => _81
  # DEBUG __it => D#1045
  # DEBUG __it => D#1045
  # DEBUG __it => SR.1081_100
  # DEBUG __it => SR.1081_100
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  # DEBUG __it => _81
  # DEBUG __it => _81
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  __last.173_235 = (long int) __first_525;
  __first.174_236 = (long int) SR.1081_100;
  _237 = __last.173_235 - __first.174_236;
  _Num_238 = _237 /[ex] 8;
  # DEBUG _Num => _Num_238
  if (_Num_238 != 0)
    goto <bb 65>;
  else
    goto <bb 64>;

  <bb 64>:
  pretmp_422 = (long unsigned int) _237;
  goto <bb 66>;

  <bb 65>:
  _239 = (long unsigned int) _237;
  __builtin_memmove (_81, SR.1081_100, _239);

  <bb 66>:
  # prephitmp_439 = PHI <pretmp_422(64), _239(65)>
  __i$D26722$_M_p_241 = _81 + prephitmp_439;
  # DEBUG __q => __i$D26722$_M_p_241
  # DEBUG this => NULL
  # DEBUG __x => __i$D26722$_M_p_241
  # DEBUG __y => 0
  # DEBUG this => D#19
  # DEBUG __x => __i$D26722$_M_p_241
  # DEBUG __y => 0
  # DEBUG this => D#19
  # DEBUG this => NULL
  # DEBUG __x => D#1045
  # DEBUG __y => 0
  # DEBUG this => D#26
  # DEBUG __x => D#1045
  # DEBUG __y => 0
  # DEBUG this => D#26
  # DEBUG D#584 => __last
  # DEBUG D#584 => __last
  # DEBUG __it$D26842$_M_p => D#1045
  # DEBUG __it$D26842$_M_offset => D#1044
  # DEBUG __it$D26842$_M_p => D#1045
  # DEBUG __it$D26842$_M_offset => 0
  # DEBUG __it$D26722$_M_p => __i$D26722$_M_p_241
  # DEBUG __it$D26722$_M_offset => 0
  # DEBUG __it$D26842$_M_p => D#1045
  # DEBUG __it$D26842$_M_offset => D#1044
  # DEBUG __it$D26842$_M_p => D#1045
  # DEBUG __it$D26842$_M_offset => 0
  # DEBUG __result => __i$D26722$_M_p_241
  # DEBUG __result$8 => 0
  # DEBUG __simple => 0
  # DEBUG __result => __i$D26722$_M_p_241
  # DEBUG __result$8 => 0
  # DEBUG __first$_M_p => D#1045
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __i$D26722$_M_p_241
  # DEBUG __result$8 => 0
  # DEBUG D#16 => &__last.D.26842
  # DEBUG D#16 => &__last.D.26842
  # DEBUG D#17 => &__first.D.26842
  # DEBUG D#17 => &__first.D.26842
  # DEBUG __x => D#16
  # DEBUG __x => D#16
  # DEBUG __y => D#17
  # DEBUG __y => D#17
  __n_276 = (_Distance) __first$8_480;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __i$D26722$_M_p_241
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => D#1045
  # DEBUG __n => __n_276
  if (__n_276 == 0)
    goto <bb 80>;
  else
    goto <bb 67>;

  <bb 67>:

  <bb 68>:
  # __n_495 = PHI <__n_276(67), __n_298(78)>
  # __first$8_496 = PHI <0(67), __first$8_300(78)>
  # __first_175 = PHI <__first_525(67), __first_299(78)>
  # __i$D26722$_M_offset_466 = PHI <0(67), __i$D26722$_M_offset_302(78)>
  # __i$D26722$_M_p_510 = PHI <__i$D26722$_M_p_241(67), __i$D26722$_M_p_301(78)>
  # DEBUG __result$8 => __i$D26722$_M_offset_466
  # DEBUG __result$_M_p => __i$D26722$_M_p_510
  # DEBUG __first$8 => __first$8_496
  # DEBUG __first$_M_p => __first_175
  # DEBUG __n => __n_495
  # DEBUG D#28 => &__first
  # DEBUG D#28 => &__first
  # DEBUG this => D#28
  # DEBUG this => D#28
  _282 = 1 << __first$8_496;
  # DEBUG this => NULL
  # DEBUG __x => __first_175
  # DEBUG __y => _282
  # DEBUG this => NULL
  _284 = *__first_175;
  _285 = _282 & _284;
  # DEBUG D#20 => &__result
  # DEBUG D#20 => &__result
  # DEBUG this => D#20
  # DEBUG this => D#20
  _287 = 1 << __i$D26722$_M_offset_466;
  # DEBUG this => NULL
  # DEBUG __x => __i$D26722$_M_p_510
  # DEBUG __y => _287
  # DEBUG this => NULL
  # DEBUG __x => _285 != 0
  if (_285 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  _289 = *__i$D26722$_M_p_510;
  _290 = _287 | _289;
  goto <bb 71>;

  <bb 70>:
  _291 = *__i$D26722$_M_p_510;
  _292 = ~_287;
  _293 = _291 & _292;

  <bb 71>:
  # cstore_499 = PHI <_290(69), _293(70)>
  *__i$D26722$_M_p_510 = cstore_499;
  # DEBUG this => &__first
  # DEBUG D#29 => &__first.D.26842
  # DEBUG this => D#29
  # DEBUG __first$8 => __first$8_496 + 1
  if (__first$8_496 == 63)
    goto <bb 73>;
  else
    goto <bb 72>;

  <bb 72>:
  __first$8_294 = __first$8_496 + 1;
  goto <bb 74>;

  <bb 73>:
  # DEBUG __first$8 => 0
  __first_295 = __first_175 + 8;
  # DEBUG __first$_M_p => __first_295

  <bb 74>:
  # __first_299 = PHI <__first_175(72), __first_295(73)>
  # __first$8_300 = PHI <__first$8_294(72), 0(73)>
  # DEBUG __first$8 => __first$8_300
  # DEBUG __first$_M_p => __first_299
  # DEBUG this => &__result
  # DEBUG D#21 => &__result.D.26722
  # DEBUG this => D#21
  # DEBUG __result$8 => __i$D26722$_M_offset_466 + 1
  if (__i$D26722$_M_offset_466 == 63)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:
  __i$D26722$_M_offset_296 = __i$D26722$_M_offset_466 + 1;
  goto <bb 77>;

  <bb 76>:
  # DEBUG __result$8 => 0
  __i$D26722$_M_p_297 = __i$D26722$_M_p_510 + 8;
  # DEBUG __result$_M_p => __i$D26722$_M_p_297

  <bb 77>:
  # __i$D26722$_M_p_301 = PHI <__i$D26722$_M_p_510(75), __i$D26722$_M_p_297(76)>
  # __i$D26722$_M_offset_302 = PHI <__i$D26722$_M_offset_296(75), 0(76)>
  # DEBUG __result$8 => __i$D26722$_M_offset_302
  # DEBUG __result$_M_p => __i$D26722$_M_p_301
  __n_298 = __n_495 + -1;
  # DEBUG __n => __n_298
  # DEBUG __result$8 => __i$D26722$_M_offset_302
  # DEBUG __result$_M_p => __i$D26722$_M_p_301
  # DEBUG __first$8 => __first$8_300
  # DEBUG __first$_M_p => __first_299
  # DEBUG __n => __n_298
  if (__n_298 == 0)
    goto <bb 79>;
  else
    goto <bb 78>;

  <bb 78>:
  goto <bb 68>;

  <bb 79>:
  # __i$D26722$_M_p_494 = PHI <__i$D26722$_M_p_301(77)>
  # __i$D26722$_M_offset_493 = PHI <__i$D26722$_M_offset_302(77)>
  pretmp_437 = (long int) __i$D26722$_M_offset_493;

  <bb 80>:
  # __i$D26722$_M_offset_315 = PHI <__i$D26722$_M_offset_493(79), 0(66)>
  # __i$D26722$_M_p_511 = PHI <__i$D26722$_M_p_494(79), __i$D26722$_M_p_241(66)>
  # prephitmp_444 = PHI <pretmp_437(79), 0(66)>
  # DEBUG __result => __i$D26722$_M_p_511
  # DEBUG __result$8 => __i$D26722$_M_offset_315
  # DEBUG __i$D26722$_M_p => __i$D26722$_M_p_511
  # DEBUG __i$D26722$_M_offset => __i$D26722$_M_offset_315
  # DEBUG __i => __i$D26722$_M_p_511
  # DEBUG __i$8 => __i$D26722$_M_offset_315
  __n.166_16 = (long int) __n_2(D);
  # DEBUG this => &__i
  # DEBUG __i => __n.166_16
  # DEBUG __tmp$_M_p => __i$D26722$_M_p_511
  # DEBUG __tmp$_M_offset => __i$D26722$_M_offset_315
  # DEBUG this => &__tmp
  # DEBUG __i => __n.166_16
  # DEBUG D#23 => &__tmp.D.26722
  # DEBUG this => D#23
  # DEBUG __i => __n.166_16
  __n_88 = __n.166_16 + prephitmp_444;
  # DEBUG __n => __n_88
  _89 = __n_88 / 64;
  _90 = (long unsigned int) _89;
  _91 = _90 * 8;
  __last$_M_p_92 = __i$D26722$_M_p_511 + _91;
  # DEBUG __tmp$_M_p => __last$_M_p_92
  __n_93 = __n_88 % 64;
  # DEBUG __n => __n_93
  if (__n_93 < 0)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  __n_94 = __n_93 + 64;
  # DEBUG __n => __n_94
  __last$_M_p_95 = __last$_M_p_92 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __last$_M_p_95

  <bb 82>:
  # __n_96 = PHI <__n_93(80), __n_94(81)>
  # __last$_M_p_98 = PHI <__last$_M_p_92(80), __last$_M_p_95(81)>
  # DEBUG __tmp$_M_p => __last$_M_p_98
  # DEBUG __n => __n_96
  _97 = (unsigned int) __n_96;
  # DEBUG __tmp$_M_offset => _97
  # DEBUG D#24 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#24
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#25
  # DEBUG __first$D26722$_M_p => __i$D26722$_M_p_511
  # DEBUG __first$D26722$_M_offset => __i$D26722$_M_offset_315
  # DEBUG __last$D26722$_M_p => __last$_M_p_98
  # DEBUG __last$D26722$_M_offset => _97
  # DEBUG __x => &__x
  # DEBUG __first$D26722$_M_p => __i$D26722$_M_p_511
  # DEBUG __last$D26722$_M_p => __last$_M_p_98
  if (__last$_M_p_98 != __i$D26722$_M_p_511)
    goto <bb 91>;
  else
    goto <bb 83>;

  <bb 83>:
  if (__x_548(D) != 0)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  goto <bb 114>;

  <bb 85>:

  <bb 86>:
  # __i$D26722$_M_p_242 = PHI <__last$_M_p_98(85), __i$D26722$_M_p_136(90)>
  # __i$D26722$_M_offset_234 = PHI <__i$D26722$_M_offset_315(85), __i$D26722$_M_offset_132(90)>
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_234
  # DEBUG __first$_M_p => __i$D26722$_M_p_242
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_234
  # DEBUG __first$_M_p => __i$D26722$_M_p_242
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  _232 = _97 == __i$D26722$_M_offset_234;
  _230 = __last$_M_p_98 == __i$D26722$_M_p_242;
  _215 = _232 & _230;
  if (_215 != 0)
    goto <bb 116>;
  else
    goto <bb 87>;

  <bb 87>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _196 = 1 << __i$D26722$_M_offset_234;
  # DEBUG this => NULL
  # DEBUG __x => __i$D26722$_M_p_242
  # DEBUG __y => _196
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _195 = *__i$D26722$_M_p_242;
  _193 = ~_196;
  _180 = _195 & _193;
  *__i$D26722$_M_p_242 = _180;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_234 + 1
  if (__i$D26722$_M_offset_234 == 63)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  __i$D26722$_M_offset_163 = __i$D26722$_M_offset_234 + 1;
  goto <bb 90>;

  <bb 89>:
  # DEBUG __first$_M_offset => 0
  __i$D26722$_M_p_140 = __i$D26722$_M_p_242 + 8;
  # DEBUG __first$_M_p => __i$D26722$_M_p_140

  <bb 90>:
  # __i$D26722$_M_p_136 = PHI <__i$D26722$_M_p_242(88), __i$D26722$_M_p_140(89)>
  # __i$D26722$_M_offset_132 = PHI <__i$D26722$_M_offset_163(88), 0(89)>
  goto <bb 86>;

  <bb 91>:
  _131 = (int) __x_548(D);
  _370 = -_131;
  __first_306 = __i$D26722$_M_p_511 + 8;
  # DEBUG D#75 => &D.69784
  # DEBUG __first => __first_306
  # DEBUG __last => __last$_M_p_98
  # DEBUG D#74 => D#75
  # DEBUG __value => D#74
  # DEBUG __it => __last$_M_p_98
  # DEBUG __it => __last$_M_p_98
  # DEBUG __it => __first_306
  # DEBUG __it => __first_306
  # DEBUG D#61 => D#74
  # DEBUG __first => __first_306
  # DEBUG __last => __last$_M_p_98
  # DEBUG __value => D#61
  # DEBUG __tmp => _370
  # DEBUG __first => __first_306
  if (__last$_M_p_98 == __first_306)
    goto <bb 92>;
  else
    goto <bb 100>;

  <bb 92>:
  # DEBUG this => &D.69783
  # DEBUG __x => __first_306
  # DEBUG __y => 0
  # DEBUG D#19 => &D.69783.D.26722
  # DEBUG this => D#19
  # DEBUG __x => __first_306
  # DEBUG __y => 0
  # DEBUG this => D#19
  # DEBUG __first => __i$D26722$_M_p_511
  # DEBUG __first$8 => __i$D26722$_M_offset_315
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => __i$D26722$_M_p_511
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_315
  if (__x_548(D) != 0)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  goto <bb 105>;

  <bb 94>:

  <bb 95>:
  # __i$D26722$_M_p_341 = PHI <__i$D26722$_M_p_511(94), __i$D26722$_M_p_265(99)>
  # __i$D26722$_M_offset_336 = PHI <__i$D26722$_M_offset_315(94), __i$D26722$_M_offset_264(99)>
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_336
  # DEBUG __first$_M_p => __i$D26722$_M_p_341
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  _322 = __i$D26722$_M_offset_336 == 0;
  _320 = __first_306 == __i$D26722$_M_p_341;
  _318 = _320 & _322;
  if (_318 != 0)
    goto <bb 149>;
  else
    goto <bb 96>;

  <bb 96>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _313 = 1 << __i$D26722$_M_offset_336;
  # DEBUG this => NULL
  # DEBUG __x => __i$D26722$_M_p_341
  # DEBUG __y => _313
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _311 = *__i$D26722$_M_p_341;
  _308 = ~_313;
  _307 = _311 & _308;
  *__i$D26722$_M_p_341 = _307;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_336 + 1
  if (__i$D26722$_M_offset_336 == 63)
    goto <bb 97>;
  else
    goto <bb 98>;

  <bb 97>:
  # DEBUG __first$_M_offset => 0
  __i$D26722$_M_p_268 = __i$D26722$_M_p_341 + 8;
  # DEBUG __first$_M_p => __i$D26722$_M_p_268
  goto <bb 99>;

  <bb 98>:
  __i$D26722$_M_offset_267 = __i$D26722$_M_offset_336 + 1;

  <bb 99>:
  # __i$D26722$_M_p_265 = PHI <__i$D26722$_M_p_268(97), __i$D26722$_M_p_341(98)>
  # __i$D26722$_M_offset_264 = PHI <0(97), __i$D26722$_M_offset_267(98)>
  goto <bb 95>;

  <bb 100>:
  pretmp_522 = (long unsigned int) _370;

  <bb 101>:
  # __first_171 = PHI <__first_306(100), __first_310(102)>
  # DEBUG __first => __first_171
  *__first_171 = pretmp_522;
  __first_310 = __first_171 + 8;
  # DEBUG __first => __first_310
  # DEBUG __first => __first_310
  if (__last$_M_p_98 == __first_310)
    goto <bb 92>;
  else
    goto <bb 102>;

  <bb 102>:
  goto <bb 101>;

  <bb 103>:
  __i$D26722$_M_offset_349 = __i$D26722$_M_offset_340 + 1;

  <bb 104>:
  # __i$D26722$_M_p_99 = PHI <__i$D26722$_M_p_338(103), __i$D26722$_M_p_350(106)>
  # __i$D26722$_M_offset_127 = PHI <__i$D26722$_M_offset_349(103), 0(106)>

  <bb 105>:
  # __i$D26722$_M_p_338 = PHI <__i$D26722$_M_p_99(104), __i$D26722$_M_p_511(93)>
  # __i$D26722$_M_offset_340 = PHI <__i$D26722$_M_offset_127(104), __i$D26722$_M_offset_315(93)>
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_340
  # DEBUG __first$_M_p => __i$D26722$_M_p_338
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  _568 = __i$D26722$_M_offset_340 == 0;
  _567 = __first_306 == __i$D26722$_M_p_338;
  _558 = _567 & _568;
  if (_558 != 0)
    goto <bb 149>;
  else
    goto <bb 158>;

  <bb 106>:
  # DEBUG __first$_M_offset => 0
  __i$D26722$_M_p_350 = __i$D26722$_M_p_338 + 8;
  # DEBUG __first$_M_p => __i$D26722$_M_p_350
  goto <bb 104>;

  <bb 107>:
  __first$_M_offset_330 = __first$_M_offset_321 + 1;

  <bb 108>:
  # __last$_M_p_332 = PHI <__last$_M_p_319(107), __last$_M_p_331(111)>
  # __first$_M_offset_371 = PHI <__first$_M_offset_330(107), 0(111)>

  <bb 109>:
  # __last$_M_p_319 = PHI <__last$_M_p_332(108), __last$_M_p_98(150)>
  # __first$_M_offset_321 = PHI <__first$_M_offset_371(108), 0(150)>
  # DEBUG __first$_M_offset => __first$_M_offset_321
  # DEBUG __first$_M_p => __last$_M_p_319
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  if (__last$_M_p_98 == __last$_M_p_319)
    goto <bb 110>;
  else
    goto <bb 160>;

  <bb 110>:
  # DEBUG __first$_M_offset => __first$_M_offset_321
  # DEBUG __first$_M_p => __last$_M_p_319
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  if (_97 == __first$_M_offset_321)
    goto <bb 159>;
  else
    goto <bb 160>;

  <bb 111>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_331 = __last$_M_p_319 + 8;
  # DEBUG __first$_M_p => __last$_M_p_331
  goto <bb 108>;

  <bb 112>:
  __i$D26722$_M_offset_368 = __i$D26722$_M_offset_359 + 1;

  <bb 113>:
  # __i$D26722$_M_p_129 = PHI <__i$D26722$_M_p_357(112), __i$D26722$_M_p_369(115)>
  # __i$D26722$_M_offset_130 = PHI <__i$D26722$_M_offset_368(112), 0(115)>

  <bb 114>:
  # __i$D26722$_M_p_357 = PHI <__last$_M_p_98(84), __i$D26722$_M_p_129(113)>
  # __i$D26722$_M_offset_359 = PHI <__i$D26722$_M_offset_315(84), __i$D26722$_M_offset_130(113)>
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_359
  # DEBUG __first$_M_p => __i$D26722$_M_p_357
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_359
  # DEBUG __first$_M_p => __i$D26722$_M_p_357
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  _15 = _97 == __i$D26722$_M_offset_359;
  _560 = __last$_M_p_98 == __i$D26722$_M_p_357;
  _559 = _15 & _560;
  if (_559 != 0)
    goto <bb 116>;
  else
    goto <bb 161>;

  <bb 115>:
  # DEBUG __first$_M_offset => 0
  __i$D26722$_M_p_369 = __i$D26722$_M_p_357 + 8;
  # DEBUG __first$_M_p => __i$D26722$_M_p_369
  goto <bb 113>;

  <bb 116>:
  # DEBUG this => &__i
  # DEBUG __i => __n.166_16
  # DEBUG __tmp$_M_p => __i$D26722$_M_p_511
  # DEBUG __tmp$_M_offset => __i$D26722$_M_offset_315
  # DEBUG this => &__tmp
  # DEBUG __i => __n.166_16
  # DEBUG D#23 => &__tmp.D.26722
  # DEBUG this => D#23
  # DEBUG __i => __n.166_16
  # DEBUG __n => __n_88
  # DEBUG __tmp$_M_p => __last$_M_p_92
  # DEBUG __n => __n_93
  if (__n_93 < 0)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  __n_82 = __n_93 + 64;
  # DEBUG __n => __n_82
  __last$_M_p_83 = __last$_M_p_92 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __last$_M_p_83

  <bb 118>:
  # __n_84 = PHI <__n_93(116), __n_82(117)>
  # __last$_M_p_86 = PHI <__last$_M_p_92(116), __last$_M_p_83(117)>
  # DEBUG __tmp$_M_p => __last$_M_p_86
  # DEBUG __n => __n_84
  __result$8_85 = (const unsigned int) __n_84;
  # DEBUG __tmp$_M_offset => __result$8_85
  # DEBUG D#24 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#24
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#25
  # DEBUG this => this_4(D)
  __it$D26722$_M_p_111 = MEM[(struct vector *)this_4(D) + 16B];
  __it$D26722$_M_offset_112 = MEM[(struct vector *)this_4(D) + 24B];
  # DEBUG D#532 => __position
  # DEBUG D#532 => __position
  # DEBUG D#533 => D.51676
  # DEBUG D#533 => D.51676
  # DEBUG D#534 => D.51675
  # DEBUG D#534 => D.51675
  # DEBUG __it$D26722$_M_p => __it$D26722$_M_p_111
  # DEBUG __it$D26722$_M_offset => __it$D26722$_M_offset_112
  # DEBUG __it$D26722$_M_p => D#1045
  # DEBUG __it$D26722$_M_offset => D#1044
  # DEBUG __it$D26722$_M_p => __last$_M_p_86
  # DEBUG __it$D26722$_M_offset => __result$8_85
  # DEBUG __it$D26722$_M_p => __it$D26722$_M_p_111
  # DEBUG __it$D26722$_M_offset => __it$D26722$_M_offset_112
  # DEBUG __it$D26722$_M_p => D#1045
  # DEBUG __it$D26722$_M_offset => D#1044
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => D#1045
  # DEBUG __first$8 => D#1044
  # DEBUG __result$_M_p => __last$_M_p_86
  # DEBUG __result$8 => __result$8_85
  # DEBUG D#16 => &__last.D.26722
  # DEBUG D#16 => &__last.D.26722
  # DEBUG D#17 => &__first.D.26722
  # DEBUG D#17 => &__first.D.26722
  # DEBUG __x => D#16
  # DEBUG __x => D#16
  # DEBUG __y => D#17
  # DEBUG __y => D#17
  _391 = (long int) __it$D26722$_M_p_111;
  _393 = _391 - __last.173_235;
  _394 = _393 * 8;
  _395 = (long int) __it$D26722$_M_offset_112;
  _396 = _394 + _395;
  __n_398 = _396 - __n_276;
  # DEBUG __n => NULL
  # DEBUG __result$8 => __result$8_85
  # DEBUG __result$_M_p => __last$_M_p_86
  # DEBUG __first$8 => D#1044
  # DEBUG __first$_M_p => D#1045
  # DEBUG __n => __n_398
  if (__n_398 <= 0)
    goto <bb 132>;
  else
    goto <bb 119>;

  <bb 119>:

  <bb 120>:
  # __n_470 = PHI <__n_398(119), __n_417(131)>
  # __first$8_471 = PHI <__first$8_480(119), __first$8_419(131)>
  # __result$8_473 = PHI <__result$8_85(119), __result$8_421(131)>
  # __first_530 = PHI <__first_525(119), __first_418(131)>
  # __last$_M_p_531 = PHI <__last$_M_p_86(119), __last$_M_p_420(131)>
  # DEBUG __result$8 => __result$8_473
  # DEBUG __result$_M_p => __last$_M_p_531
  # DEBUG __first$8 => __first$8_471
  # DEBUG __first$_M_p => __first_530
  # DEBUG __n => __n_470
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _401 = 1 << __first$8_471;
  # DEBUG this => NULL
  # DEBUG __x => __first_530
  # DEBUG __y => _401
  # DEBUG D#20 => &__result
  # DEBUG D#20 => &__result
  # DEBUG this => D#20
  # DEBUG this => D#20
  _403 = 1 << __result$8_473;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_531
  # DEBUG __y => _403
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  _405 = *__first_530;
  _406 = _401 & _405;
  # DEBUG this => NULL
  # DEBUG __x => _406 != 0
  if (_406 != 0)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  _408 = *__last$_M_p_531;
  _409 = _403 | _408;
  goto <bb 123>;

  <bb 122>:
  _410 = *__last$_M_p_531;
  _411 = ~_403;
  _412 = _410 & _411;

  <bb 123>:
  # cstore_539 = PHI <_409(121), _412(122)>
  *__last$_M_p_531 = cstore_539;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$8 => __first$8_471 + 1
  if (__first$8_471 == 63)
    goto <bb 125>;
  else
    goto <bb 124>;

  <bb 124>:
  __first$8_413 = __first$8_471 + 1;
  goto <bb 126>;

  <bb 125>:
  # DEBUG __first$8 => 0
  __first_414 = __first_530 + 8;
  # DEBUG __first$_M_p => __first_414

  <bb 126>:
  # __first_418 = PHI <__first_530(124), __first_414(125)>
  # __first$8_419 = PHI <__first$8_413(124), 0(125)>
  # DEBUG __first$8 => __first$8_419
  # DEBUG __first$_M_p => __first_418
  # DEBUG this => &__result
  # DEBUG D#21 => &__result.D.26722
  # DEBUG this => D#21
  # DEBUG __result$8 => __result$8_473 + 1
  if (__result$8_473 == 63)
    goto <bb 128>;
  else
    goto <bb 127>;

  <bb 127>:
  __result$8_415 = __result$8_473 + 1;
  goto <bb 129>;

  <bb 128>:
  # DEBUG __result$8 => 0
  __last$_M_p_416 = __last$_M_p_531 + 8;
  # DEBUG __result$_M_p => __last$_M_p_416

  <bb 129>:
  # __last$_M_p_420 = PHI <__last$_M_p_531(127), __last$_M_p_416(128)>
  # __result$8_421 = PHI <__result$8_415(127), 0(128)>
  # DEBUG __result$8 => __result$8_421
  # DEBUG __result$_M_p => __last$_M_p_420
  __n_417 = __n_470 + -1;
  # DEBUG __n => __n_417
  # DEBUG __result$8 => __result$8_421
  # DEBUG __result$_M_p => __last$_M_p_420
  # DEBUG __first$8 => __first$8_419
  # DEBUG __first$_M_p => __first_418
  # DEBUG __n => __n_417
  if (__n_417 <= 0)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # __last$_M_p_486 = PHI <__last$_M_p_420(129)>
  # __result$8_485 = PHI <__result$8_421(129)>
  goto <bb 132>;

  <bb 131>:
  goto <bb 120>;

  <bb 132>:
  # __result$8_529 = PHI <__result$8_485(130), __result$8_85(118)>
  # __last$_M_p_532 = PHI <__last$_M_p_486(130), __last$_M_p_86(118)>
  MEM[(struct _Bit_iterator *)this_4(D) + 16B] = __last$_M_p_532;
  MEM[(struct _Bit_iterator *)this_4(D) + 24B] = __result$8_529;
  # DEBUG D#1038 => &this_4(D)->D.42205
  # DEBUG this => D#1038
  if (SR.1081_100 != 0B)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  # DEBUG D#277 => &D#1038->_M_impl
  _373 = MEM[(long unsigned int * *)this_4(D) + 32B];
  # DEBUG D#177 => D#277
  # DEBUG this => D#177
  _375 = (long int) _373;
  _376 = (long int) SR.1081_100;
  _377 = _375 - _376;
  # DEBUG D#280 => _377 /[ex] 8
  # DEBUG D#279 => (const size_t) D#280
  # DEBUG __n => D#279
  _378 = (long unsigned int) _377;
  _379 = -_378;
  _380 = _373 + _379;
  # DEBUG D#278 => &D#1038->_M_impl
  # DEBUG D#275 => D#278
  # DEBUG D#276 => D#279
  # DEBUG __p => _380
  # DEBUG __a => D#275
  # DEBUG __n => D#276
  # DEBUG D#274 => D#276
  # DEBUG D#273 => D#275
  # DEBUG D#271 => D#273
  # DEBUG D#272 => D#274
  # DEBUG __p => _380
  # DEBUG this => D#271
  # DEBUG D.69837 => D#272
  operator delete (_380);

  <bb 134>:
  # DEBUG __n => NULL
  _20 = _81 + prephitmp_147;
  this_4(D)->D.42205._M_impl._M_end_of_storage = _20;
  MEM[(struct _Bit_iterator *)this_4(D)] = _81;
  MEM[(struct _Bit_iterator *)this_4(D) + 8B] = 0;
  # DEBUG D#591 => {CLOBBER}
  # DEBUG __start$_M_p => D#591
  # DEBUG D#592 => {CLOBBER}
  # DEBUG __start$_M_offset => D#592
  # DEBUG D#1039 => {CLOBBER}
  # DEBUG __i$D26722$_M_p => D#1039
  # DEBUG D#1040 => {CLOBBER}
  # DEBUG __i$D26722$_M_offset => D#1040
  # DEBUG D#593 => {CLOBBER}
  # DEBUG __i => D#593
  # DEBUG D#594 => {CLOBBER}
  # DEBUG __i$8 => D#594

  <bb 135>:
  return;

  <bb 136>:
  D.69614 ={v} {CLOBBER};
  # DEBUG this => &D.69613
  # DEBUG __x => __last$_M_p_67
  # DEBUG __y => 0
  # DEBUG D#19 => &D.69613.D.26722
  # DEBUG this => D#19
  # DEBUG __x => __last$_M_p_67
  # DEBUG __y => 0
  # DEBUG this => D#19
  # DEBUG __last$_M_p => __last$_M_p_67
  # DEBUG __last$_M_offset => _66
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => __last$_M_p_67
  # DEBUG __first$_M_offset => 0
  if (__x_548(D) != 0)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  goto <bb 48>;

  <bb 138>:

  <bb 139>:
  # __last$_M_p_508 = PHI <__last$_M_p_67(138), __last$_M_p_553(144)>
  # __first$_M_offset_505 = PHI <0(138), __first$_M_offset_552(144)>
  # DEBUG __first$_M_offset => __first$_M_offset_505
  # DEBUG __first$_M_p => __last$_M_p_508
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  if (__last$_M_p_67 == __last$_M_p_508)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  # DEBUG __first$_M_offset => __first$_M_offset_505
  # DEBUG __first$_M_p => __last$_M_p_508
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  if (_66 == __first$_M_offset_505)
    goto <bb 147>;
  else
    goto <bb 141>;

  <bb 141>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _260 = 1 << __first$_M_offset_505;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_508
  # DEBUG __y => _260
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _534 = *__last$_M_p_508;
  _549 = ~_260;
  _304 = _534 & _549;
  *__last$_M_p_508 = _304;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __first$_M_offset_505 + 1
  if (__first$_M_offset_505 == 63)
    goto <bb 143>;
  else
    goto <bb 142>;

  <bb 142>:
  __first$_M_offset_173 = __first$_M_offset_505 + 1;
  goto <bb 144>;

  <bb 143>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_554 = __last$_M_p_508 + 8;
  # DEBUG __first$_M_p => __last$_M_p_554

  <bb 144>:
  # __last$_M_p_553 = PHI <__last$_M_p_508(142), __last$_M_p_554(143)>
  # __first$_M_offset_552 = PHI <__first$_M_offset_173(142), 0(143)>
  goto <bb 139>;

  <bb 145>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _203 = 1 << __first$8_200;
  # DEBUG this => NULL
  # DEBUG __x => __first_198
  # DEBUG __y => _203
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _204 = *__first_198;
  _205 = _203 | _204;
  *__first_198 = _205;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __first$8_200 + 1
  if (__first$8_200 == 63)
    goto <bb 45>;
  else
    goto <bb 42>;

  <bb 146>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _184 = 1 << __first$_M_offset_181;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_179
  # DEBUG __y => _184
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _185 = *__last$_M_p_179;
  _186 = _184 | _185;
  *__last$_M_p_179 = _186;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __first$_M_offset_181 + 1
  if (__first$_M_offset_181 == 63)
    goto <bb 50>;
  else
    goto <bb 46>;

  <bb 147>:
  D.69613 ={v} {CLOBBER};
  goto <bb 55>;

  <bb 148>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _222 = 1 << __first$8_219;
  # DEBUG this => NULL
  # DEBUG __x => __first_217
  # DEBUG __y => _222
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _223 = *__first_217;
  _224 = _222 | _223;
  *__first_217 = _224;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __first$8_219 + 1
  if (__first$8_219 == 63)
    goto <bb 54>;
  else
    goto <bb 51>;

  <bb 149>:
  D.69783 ={v} {CLOBBER};
  # DEBUG this => &D.69782
  # DEBUG __x => __last$_M_p_98
  # DEBUG __y => 0
  # DEBUG D#19 => &D.69782.D.26722
  # DEBUG this => D#19
  # DEBUG __x => __last$_M_p_98
  # DEBUG __y => 0
  # DEBUG this => D#19
  # DEBUG __last$_M_p => __last$_M_p_98
  # DEBUG __last$_M_offset => _97
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => __last$_M_p_98
  # DEBUG __first$_M_offset => 0
  if (__x_548(D) != 0)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  goto <bb 109>;

  <bb 151>:

  <bb 152>:
  # __last$_M_p_435 = PHI <__last$_M_p_98(151), __last$_M_p_383(157)>
  # __first$_M_offset_434 = PHI <0(151), __first$_M_offset_374(157)>
  # DEBUG __first$_M_offset => __first$_M_offset_434
  # DEBUG __first$_M_p => __last$_M_p_435
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  if (__last$_M_p_98 == __last$_M_p_435)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 153>:
  # DEBUG __first$_M_offset => __first$_M_offset_434
  # DEBUG __first$_M_p => __last$_M_p_435
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  # DEBUG this => &__first.D.26722
  # DEBUG __i => &__last.D.26722
  if (_97 == __first$_M_offset_434)
    goto <bb 159>;
  else
    goto <bb 154>;

  <bb 154>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _428 = 1 << __first$_M_offset_434;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_435
  # DEBUG __y => _428
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _426 = *__last$_M_p_435;
  _424 = ~_428;
  _423 = _426 & _424;
  *__last$_M_p_435 = _423;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __first$_M_offset_434 + 1
  if (__first$_M_offset_434 == 63)
    goto <bb 156>;
  else
    goto <bb 155>;

  <bb 155>:
  __first$_M_offset_399 = __first$_M_offset_434 + 1;
  goto <bb 157>;

  <bb 156>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_384 = __last$_M_p_435 + 8;
  # DEBUG __first$_M_p => __last$_M_p_384

  <bb 157>:
  # __last$_M_p_383 = PHI <__last$_M_p_435(155), __last$_M_p_384(156)>
  # __first$_M_offset_374 = PHI <__first$_M_offset_399(155), 0(156)>
  goto <bb 152>;

  <bb 158>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _343 = 1 << __i$D26722$_M_offset_340;
  # DEBUG this => NULL
  # DEBUG __x => __i$D26722$_M_p_338
  # DEBUG __y => _343
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _344 = *__i$D26722$_M_p_338;
  _345 = _343 | _344;
  *__i$D26722$_M_p_338 = _345;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_340 + 1
  if (__i$D26722$_M_offset_340 == 63)
    goto <bb 106>;
  else
    goto <bb 103>;

  <bb 159>:
  D.69782 ={v} {CLOBBER};
  goto <bb 116>;

  <bb 160>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _324 = 1 << __first$_M_offset_321;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_319
  # DEBUG __y => _324
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _325 = *__last$_M_p_319;
  _326 = _324 | _325;
  *__last$_M_p_319 = _326;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __first$_M_offset_321 + 1
  if (__first$_M_offset_321 == 63)
    goto <bb 111>;
  else
    goto <bb 107>;

  <bb 161>:
  # DEBUG D#20 => &__first
  # DEBUG D#20 => &__first
  # DEBUG this => D#20
  # DEBUG this => D#20
  _362 = 1 << __i$D26722$_M_offset_359;
  # DEBUG this => NULL
  # DEBUG __x => __i$D26722$_M_p_357
  # DEBUG __y => _362
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _363 = *__i$D26722$_M_p_357;
  _364 = _362 | _363;
  *__i$D26722$_M_p_357 = _364;
  # DEBUG this => &__first
  # DEBUG D#21 => &__first.D.26722
  # DEBUG this => D#21
  # DEBUG __first$_M_offset => __i$D26722$_M_offset_359 + 1
  if (__i$D26722$_M_offset_359 == 63)
    goto <bb 115>;
  else
    goto <bb 112>;

}



;; Function virtual void BufferState::FeedbackSharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState26FeedbackSharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2186, decl_uid=41211, cgraph_uid=653, symbol_order=654)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void BufferState::FeedbackSharedBufferPolicy::SendingFlit(const Flit*) (struct FeedbackSharedBufferPolicy * const this, const struct Flit * const f)
{
  size_type __dnew;
  int i;
  const int vc;
  const struct string D.70085;
  const value_type D.43712;
  struct SharedBufferPolicy * _2;
  int _9;
  long unsigned int _10;
  struct deque * _11;
  struct queue * _13;
  long unsigned int _14;
  struct queue & _15;
  int * _17;
  int * _18;
  int * _19;
  int * _21;
  long unsigned int _22;
  int * _23;
  long unsigned int _24;
  int & _25;
  int _26;
  int _27;
  int * _28;
  int & _29;
  long unsigned int _31;
  int * _32;
  long unsigned int _33;
  int & _34;
  int _35;
  int _36;
  int * _37;
  int & _38;
  int _39;
  int _40;
  int _41;
  int _42;
  int & _43;
  char * const _44;
  bool _45;
  int * _46;
  int & _47;
  int _48;
  int _49;
  char * const _50;
  int * _57;
  int _59;
  char * _60;
  long unsigned int __dnew.49_61;
  long unsigned int __dnew.49_64;
  char * const _65;
  char * _66;
  int * _68;
  int * _69;
  int _70;
  int * * _71;
  int * * _72;
  int * _73;
  int * _74;
  long unsigned int _76;
  int * * _77;
  long int _78;
  int * * _79;
  long int _80;
  long int _81;
  long int _82;
  long unsigned int _83;
  long unsigned int _84;
  int * * pretmp_108;
  int * * prephitmp_109;
  int & _132;

  <bb 2>:
  _2 = &this_1(D)->D.41247;
  # DEBUG this => _2
  # DEBUG f => f_4(D)
  vc_16 = f_4(D)->vc;
  # DEBUG vc => vc_16
  _22 = (long unsigned int) vc_16;
  # DEBUG D#334 => &_2->_reserved_slots
  _23 = MEM[(int * *)this_1(D) + 192B];
  # DEBUG D#43 => D#334
  # DEBUG __n => _22
  # DEBUG this => D#43
  _24 = _22 * 4;
  _25 = _23 + _24;
  _26 = *_25;
  if (_26 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#335 => &_2->_reserved_slots
  # DEBUG D#43 => D#335
  # DEBUG __n => _22
  # DEBUG this => D#43
  _27 = _26 + -1;
  *_25 = _27;
  goto <bb 11>;

  <bb 4>:
  # DEBUG D#336 => &_2->_private_buf_vc_map
  _28 = MEM[(int * *)this_1(D) + 112B];
  # DEBUG D#43 => D#336
  # DEBUG __n => _22
  # DEBUG this => D#43
  _29 = _28 + _24;
  i_30 = *_29;
  # DEBUG i => i_30
  _31 = (long unsigned int) i_30;
  # DEBUG D#337 => &_2->_private_buf_occupancy
  _32 = MEM[(int * *)this_1(D) + 160B];
  # DEBUG D#43 => D#337
  # DEBUG __n => _31
  # DEBUG this => D#43
  _33 = _31 * 4;
  _34 = _32 + _33;
  _35 = *_34;
  _36 = _35 + 1;
  *_34 = _36;
  # DEBUG D#338 => &_2->_private_buf_occupancy
  # DEBUG D#43 => D#338
  # DEBUG __n => _31
  # DEBUG this => D#43
  # DEBUG D#339 => &_2->_private_buf_size
  _37 = MEM[(int * *)this_1(D) + 136B];
  # DEBUG D#43 => D#339
  # DEBUG __n => _31
  # DEBUG this => D#43
  _38 = _37 + _33;
  _39 = *_38;
  if (_36 > _39)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  goto <bb 11>;

  <bb 6>:
  _40 = MEM[(struct SharedBufferPolicy *)this_1(D)]._shared_buf_occupancy;
  _41 = _40 + 1;
  MEM[(struct SharedBufferPolicy *)this_1(D)]._shared_buf_occupancy = _41;
  _42 = MEM[(struct SharedBufferPolicy *)this_1(D)]._shared_buf_size;
  if (_41 > _42)
    goto <bb 7>;
  else
    goto <bb 5>;

  <bb 7>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => &D.70085
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.70085
  # DEBUG D#296 => &D.70085._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.70085.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.70085]._M_p = &D.70085.D.11539._M_local_buf;
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG this => &D.70085
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.70085
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.70085
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __ptr => "Shared buffer overflow."
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  __dnew = 23;
  _60 = std::__cxx11::basic_string<char>::_M_create (&D.70085, &__dnew, 0);
  # DEBUG D#7 => &D.70085
  # DEBUG __p => _60
  # DEBUG this => D#7
  MEM[(char * *)&D.70085] = _60;
  __dnew.49_61 = __dnew;
  # DEBUG D#8 => &D.70085
  # DEBUG __capacity => __dnew.49_61
  # DEBUG this => D#8
  MEM[(size_type *)&D.70085 + 16B] = __dnew.49_61;
  # DEBUG D#1 => &D.70085
  # DEBUG this => D#1
  # DEBUG __p => _60
  # DEBUG __k1 => "Shared buffer overflow."
  # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __d => _60
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __n => 23
  # DEBUG __s1 => _60
  # DEBUG __s2 => "Shared buffer overflow."
  # DEBUG __n => 23
  __builtin_memcpy (_60, "Shared buffer overflow.", 23);
  __dnew.49_64 = __dnew;
  # DEBUG this => &D.70085
  # DEBUG __n => __dnew.49_64
  # DEBUG D#9 => &D.70085
  # DEBUG __length => __dnew.49_64
  # DEBUG this => D#9
  MEM[(size_type *)&D.70085 + 8B] = __dnew.49_64;
  _65 = MEM[(char * *)&D.70085];
  # DEBUG D#1 => &D.70085
  # DEBUG this => D#1
  _66 = _65 + __dnew.49_64;
  # DEBUG __c1 => _66
  # DEBUG __c2 => D#10
  MEM[(char_type &)_66] = 0;
  __dnew ={v} {CLOBBER};
  Module::Error (_2, &D.70085);

  <bb 8>:
  # DEBUG this => &D.70085
  # DEBUG this => &D.70085
  # DEBUG this => &D.70085
  _44 = MEM[(char * *)&D.70085];
  # DEBUG D#1 => &D.70085
  # DEBUG this => D#1
  # DEBUG this => &D.70085
  if (&D.70085.D.11539._M_local_buf != _44)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#188 => D.70085.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.70085
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.70085
  # DEBUG this => D#1
  # DEBUG this => &D.70085
  # DEBUG D#185 => &D.70085._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _44
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _44
  # DEBUG this => D#179
  # DEBUG D.70070 => D#180
  operator delete (_44);

  <bb 10>:
  # DEBUG D#189 => &D.70085._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.70085 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL

  <bb 11>:
  _45 = f_4(D)->tail;
  if (_45 != 0)
    goto <bb 12>;
  else
    goto <bb 19>;

  <bb 12>:
  # DEBUG D#341 => &_2->_reserved_slots
  _57 = MEM[(int * *)this_1(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _22
  # DEBUG this => D#43
  _132 = _57 + _24;
  _59 = *_132;
  if (_59 != 0)
    goto <bb 13>;
  else
    goto <bb 19>;

  <bb 13>:

  <bb 14>:
  # _43 = PHI <_132(13), _47(15)>
  # _70 = PHI <_59(13), _48(15)>
  # DEBUG D#341 => &_2->_reserved_slots
  # DEBUG __n => _22
  # DEBUG this => D#43
  # DEBUG D#340 => &_2->_reserved_slots
  # DEBUG D#43 => D#340
  # DEBUG __n => _22
  # DEBUG this => D#43
  _49 = _70 + -1;
  *_43 = _49;
  BufferState::SharedBufferPolicy::ProcessFreeSlot (_2, vc_16);
  # DEBUG D#341 => &_2->_reserved_slots
  _46 = MEM[(int * *)this_1(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _22
  # DEBUG this => D#43
  _47 = _46 + _24;
  _48 = *_47;
  if (_48 != 0)
    goto <bb 15>;
  else
    goto <bb 19>;

  <bb 15>:
  goto <bb 14>;

<L1>:
  # DEBUG this => &D.70085
  # DEBUG this => &D.70085
  # DEBUG this => &D.70085
  _50 = MEM[(char * *)&D.70085];
  # DEBUG D#1 => &D.70085
  # DEBUG this => D#1
  # DEBUG this => &D.70085
  if (&D.70085.D.11539._M_local_buf != _50)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG D#188 => D.70085.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.70085
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.70085
  # DEBUG this => D#1
  # DEBUG this => &D.70085
  # DEBUG D#185 => &D.70085._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _50
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _50
  # DEBUG this => D#179
  # DEBUG D.70055 => D#180
  operator delete (_50);

  <bb 18>:
  # DEBUG D#189 => &D.70085._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.70085 ={v} {CLOBBER};
  resx 3

  <bb 19>:
  _7 = GetSimTime ();
  _9 = f_4(D)->vc;
  _10 = (long unsigned int) _9;
  # DEBUG D#622 => &this_1(D)->_flit_sent_time
  _13 = MEM[(struct queue * *)this_1(D) + 272B];
  # DEBUG D#53 => D#622
  # DEBUG __n => _10
  # DEBUG this => D#53
  _14 = _10 * 80;
  _15 = _13 + _14;
  # DEBUG this => NULL
  # DEBUG __x => &D.43712
  # DEBUG D#1068 => &_15->c
  # DEBUG this => D#1068
  # DEBUG __x => &D.43712
  _17 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_cur;
  _18 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_last;
  _19 = _18 + 18446744073709551612;
  if (_17 != _19)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 20>:
  # DEBUG D#621 => &D#1068->D.43590._M_impl
  # DEBUG D#82 => D#621
  # DEBUG __p => _17
  # DEBUG __arg => &D.43712
  # DEBUG __a => D#82
  # DEBUG D#81 => D#82
  # DEBUG D#80 => D#81
  # DEBUG __p => _17
  # DEBUG __val => &D.43712
  # DEBUG this => D#80
  # DEBUG D#11 => 4
  # DEBUG __p => _17
  # DEBUG D.53756 => D#11
  if (_17 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  *_17 = _7;

  <bb 22>:
  _21 = _17 + 4;
  MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_cur = _21;
  goto <bb 28>;

  <bb 23>:
  # DEBUG this => D#1068
  # DEBUG __t => &D.43712
  # DEBUG this => D#1068
  # DEBUG __nodes_to_add => 1
  _76 = MEM[(struct deque *)_15].D.43590._M_impl._M_map_size;
  _77 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_node;
  _78 = (long int) _77;
  _79 = MEM[(struct deque *)_15].D.43590._M_impl._M_map;
  _80 = (long int) _79;
  _81 = _78 - _80;
  _82 = _81 /[ex] -8;
  _83 = (long unsigned int) _82;
  _84 = _76 + _83;
  if (_84 <= 1)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _11 = &_15->c;
  std::deque<int, std::allocator<int> >::_M_reallocate_map (_11, 1, 0);
  pretmp_108 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_node;

  <bb 25>:
  # prephitmp_109 = PHI <pretmp_108(24), _77(23)>
  # DEBUG D#620 => &D#1068->D.43590
  # DEBUG D#392 => D#620
  # DEBUG this => D#392
  # DEBUG D#391 => D#392
  # DEBUG __size => 4
  # DEBUG D#390 => &D#391->_M_impl
  # DEBUG D#386 => D#390
  # DEBUG __n => NULL
  # DEBUG __a => D#386
  # DEBUG D#385 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#384 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#383
  # DEBUG D.70139 => D#384
  # DEBUG D#382 => D#383
  # DEBUG D#381 => D#382
  # DEBUG this => D#381
  _68 = operator new (512);
  MEM[(int * *)prephitmp_109 + 8B] = _68;
  _69 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_cur;
  # DEBUG D#619 => &D#1068->D.43590._M_impl
  # DEBUG D#80 => D#619
  # DEBUG __p => _69
  # DEBUG __val => &D.43712
  # DEBUG this => D#80
  # DEBUG D#11 => 4
  # DEBUG __p => _69
  # DEBUG D.53756 => D#11
  if (_69 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  *_69 = _7;

  <bb 27>:
  _71 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_node;
  _72 = _71 + 8;
  # DEBUG D#618 => &D#1068->D.43590._M_impl._M_finish
  # DEBUG this => D#618
  # DEBUG __new_node => _72
  MEM[(struct _Deque_iterator *)_15 + 48B]._M_node = _72;
  _73 = MEM[(int * *)_71 + 8B];
  MEM[(struct _Deque_iterator *)_15 + 48B]._M_first = _73;
  # DEBUG __size => 4
  _74 = _73 + 512;
  MEM[(struct _Deque_iterator *)_15 + 48B]._M_last = _74;
  MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_cur = _73;

  <bb 28>:
  return;

}



;; Function virtual void BufferState::SimpleFeedbackSharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState32SimpleFeedbackSharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2201, decl_uid=41268, cgraph_uid=668, symbol_order=669)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void BufferState::SimpleFeedbackSharedBufferPolicy::SendingFlit(const Flit*) (struct SimpleFeedbackSharedBufferPolicy * const this, const struct Flit * const f)
{
  size_type __dnew;
  int i;
  const int vc;
  const struct string D.70235;
  int D.70173;
  static const char __PRETTY_FUNCTION__[41] = "int BufferState::OccupancyFor(int) const";
  int _4;
  long unsigned int _5;
  long unsigned int _7;
  const struct BufferState * _8;
  int _9;
  int * const _10;
  int * const _11;
  int _12;
  struct FeedbackSharedBufferPolicy * _14;
  struct SharedBufferPolicy * _17;
  int & _18;
  int * _19;
  struct queue * _20;
  struct queue & _21;
  int & _23;
  int _24;
  int * const _26;
  long unsigned int _27;
  const int & _28;
  int _29;
  int * _31;
  long unsigned int _32;
  int & _33;
  int _34;
  int _35;
  int * _36;
  int & _37;
  long unsigned int _39;
  int * _40;
  long unsigned int _41;
  int & _42;
  int _43;
  int _44;
  int * _45;
  int & _46;
  int _47;
  int _48;
  int _49;
  int _50;
  char * const _52;
  bool _53;
  int * _54;
  int & _55;
  int _56;
  int _57;
  char * const _58;
  int _59;
  int & _60;
  int * _65;
  char * _68;
  long unsigned int __dnew.49_69;
  long unsigned int __dnew.49_72;
  char * const _73;
  char * _74;

  <bb 2>:
  # DEBUG D#623 => &f_2(D)->vc
  # DEBUG vc => D#623
  _4 = MEM[(const int &)f_2(D) + 4];
  _5 = (long unsigned int) _4;
  # DEBUG D#624 => &this_6(D)->D.41295._flit_sent_time
  _20 = MEM[(struct queue * *)this_6(D) + 272B];
  # DEBUG D#53 => D#624
  # DEBUG __n => _5
  # DEBUG this => D#53
  _7 = _5 * 80;
  _21 = _20 + _7;
  # DEBUG this => NULL
  # DEBUG this => D#90
  # DEBUG D#88 => &D#90->D.43590._M_impl._M_start
  # DEBUG D#89 => &D#90->D.43590._M_impl._M_finish
  _11 = MEM[(int * *)_21 + 48B];
  # DEBUG D#86 => D#89
  _10 = MEM[(int * *)_21 + 16B];
  # DEBUG D#87 => D#88
  # DEBUG __x => D#86
  # DEBUG __y => D#87
  if (_10 == _11)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _8 = this_6(D)->D.41295.D.41247.D.40291._buffer_state;
  # DEBUG this => _8
  # DEBUG vc => _4
  if (_4 < 0)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  _24 = _8->_vcs;
  if (_4 >= _24)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "buffer_state.hpp", 225, &__PRETTY_FUNCTION__);

  <bb 6>:
  # DEBUG D#31 => &_8->_vc_occupancy
  _26 = MEM[(int * *)_8 + 112B];
  # DEBUG D#30 => D#31
  # DEBUG __n => _5
  # DEBUG this => D#30
  _27 = _5 * 4;
  _28 = _26 + _27;
  _29 = *_28;
  if (_29 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#626 => this_6(D)
  # DEBUG D#627 => f_2(D)
  # DEBUG D#628 => D#627
  # DEBUG f => D#628
  # DEBUG D#629 => D#626
  # DEBUG this => D#629
  __assert_fail ("_buffer_state->OccupancyFor(vc) > 0", "buffer_state.cpp", 502, &__PRETTY_FUNCTION__);

  <bb 8>:
  # DEBUG D#625 => &this_6(D)->_pending_credits
  _19 = MEM[(int * *)this_6(D) + 312B];
  # DEBUG D#43 => D#625
  # DEBUG __n => _5
  # DEBUG this => D#43
  _23 = _19 + _27;
  _12 = _29 + -1;
  *_23 = _12;
  _14 = &this_6(D)->D.41295;
  BufferState::FeedbackSharedBufferPolicy::SendingFlit (_14, f_2(D));
  goto <bb 27>;

  <bb 9>:
  _17 = &this_6(D)->D.41295.D.41247;
  # DEBUG this => _17
  # DEBUG f => f_2(D)
  # DEBUG vc => _4
  # DEBUG D#334 => &_17->_reserved_slots
  _31 = MEM[(int * *)this_6(D) + 192B];
  # DEBUG D#43 => D#334
  # DEBUG __n => _5
  # DEBUG this => D#43
  _32 = _5 * 4;
  _33 = _31 + _32;
  _34 = *_33;
  if (_34 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#335 => &_17->_reserved_slots
  # DEBUG D#43 => D#335
  # DEBUG __n => _5
  # DEBUG this => D#43
  _35 = _34 + -1;
  *_33 = _35;
  goto <bb 18>;

  <bb 11>:
  # DEBUG D#336 => &_17->_private_buf_vc_map
  _36 = MEM[(int * *)this_6(D) + 112B];
  # DEBUG D#43 => D#336
  # DEBUG __n => _5
  # DEBUG this => D#43
  _37 = _36 + _32;
  i_38 = *_37;
  # DEBUG i => i_38
  _39 = (long unsigned int) i_38;
  # DEBUG D#337 => &_17->_private_buf_occupancy
  _40 = MEM[(int * *)this_6(D) + 160B];
  # DEBUG D#43 => D#337
  # DEBUG __n => _39
  # DEBUG this => D#43
  _41 = _39 * 4;
  _42 = _40 + _41;
  _43 = *_42;
  _44 = _43 + 1;
  *_42 = _44;
  # DEBUG D#338 => &_17->_private_buf_occupancy
  # DEBUG D#43 => D#338
  # DEBUG __n => _39
  # DEBUG this => D#43
  # DEBUG D#339 => &_17->_private_buf_size
  _45 = MEM[(int * *)this_6(D) + 136B];
  # DEBUG D#43 => D#339
  # DEBUG __n => _39
  # DEBUG this => D#43
  _46 = _45 + _41;
  _47 = *_46;
  if (_44 > _47)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 18>;

  <bb 13>:
  _48 = MEM[(struct SharedBufferPolicy *)this_6(D)]._shared_buf_occupancy;
  _49 = _48 + 1;
  MEM[(struct SharedBufferPolicy *)this_6(D)]._shared_buf_occupancy = _49;
  _50 = MEM[(struct SharedBufferPolicy *)this_6(D)]._shared_buf_size;
  if (_49 > _50)
    goto <bb 14>;
  else
    goto <bb 12>;

  <bb 14>:
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG this => &D.70235
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.70235
  # DEBUG D#296 => &D.70235._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.70235.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.70235]._M_p = &D.70235.D.11539._M_local_buf;
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG this => &D.70235
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.70235
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG this => &D.70235
  # DEBUG __beg => "Shared buffer overflow."
  # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __ptr => "Shared buffer overflow."
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "Shared buffer overflow."
  # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
  __dnew = 23;
  _68 = std::__cxx11::basic_string<char>::_M_create (&D.70235, &__dnew, 0);
  # DEBUG D#7 => &D.70235
  # DEBUG __p => _68
  # DEBUG this => D#7
  MEM[(char * *)&D.70235] = _68;
  __dnew.49_69 = __dnew;
  # DEBUG D#8 => &D.70235
  # DEBUG __capacity => __dnew.49_69
  # DEBUG this => D#8
  MEM[(size_type *)&D.70235 + 16B] = __dnew.49_69;
  # DEBUG D#1 => &D.70235
  # DEBUG this => D#1
  # DEBUG __p => _68
  # DEBUG __k1 => "Shared buffer overflow."
  # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
  # DEBUG __d => _68
  # DEBUG __s => "Shared buffer overflow."
  # DEBUG __n => 23
  # DEBUG __s1 => _68
  # DEBUG __s2 => "Shared buffer overflow."
  # DEBUG __n => 23
  __builtin_memcpy (_68, "Shared buffer overflow.", 23);
  __dnew.49_72 = __dnew;
  # DEBUG this => &D.70235
  # DEBUG __n => __dnew.49_72
  # DEBUG D#9 => &D.70235
  # DEBUG __length => __dnew.49_72
  # DEBUG this => D#9
  MEM[(size_type *)&D.70235 + 8B] = __dnew.49_72;
  _73 = MEM[(char * *)&D.70235];
  # DEBUG D#1 => &D.70235
  # DEBUG this => D#1
  _74 = _73 + __dnew.49_72;
  # DEBUG __c1 => _74
  # DEBUG __c2 => D#10
  MEM[(char_type &)_74] = 0;
  __dnew ={v} {CLOBBER};
  Module::Error (_17, &D.70235);

  <bb 15>:
  # DEBUG this => &D.70235
  # DEBUG this => &D.70235
  # DEBUG this => &D.70235
  _52 = MEM[(char * *)&D.70235];
  # DEBUG D#1 => &D.70235
  # DEBUG this => D#1
  # DEBUG this => &D.70235
  if (&D.70235.D.11539._M_local_buf != _52)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#188 => D.70235.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.70235
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.70235
  # DEBUG this => D#1
  # DEBUG this => &D.70235
  # DEBUG D#185 => &D.70235._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _52
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _52
  # DEBUG this => D#179
  # DEBUG D.70220 => D#180
  operator delete (_52);

  <bb 17>:
  # DEBUG D#189 => &D.70235._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.70235 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL

  <bb 18>:
  _53 = f_2(D)->tail;
  if (_53 != 0)
    goto <bb 19>;
  else
    goto <bb 26>;

  <bb 19>:
  # DEBUG D#341 => &_17->_reserved_slots
  _65 = MEM[(int * *)this_6(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _5
  # DEBUG this => D#43
  _60 = _65 + _32;
  _59 = *_60;
  if (_59 != 0)
    goto <bb 20>;
  else
    goto <bb 26>;

  <bb 20>:

  <bb 21>:
  # _18 = PHI <_60(20), _55(22)>
  # _9 = PHI <_59(20), _56(22)>
  # DEBUG D#341 => &_17->_reserved_slots
  # DEBUG __n => _5
  # DEBUG this => D#43
  # DEBUG D#340 => &_17->_reserved_slots
  # DEBUG D#43 => D#340
  # DEBUG __n => _5
  # DEBUG this => D#43
  _57 = _9 + -1;
  *_18 = _57;
  BufferState::SharedBufferPolicy::ProcessFreeSlot (_17, _4);
  # DEBUG D#341 => &_17->_reserved_slots
  _54 = MEM[(int * *)this_6(D) + 192B];
  # DEBUG D#43 => D#341
  # DEBUG __n => _5
  # DEBUG this => D#43
  _55 = _54 + _32;
  _56 = *_55;
  if (_56 != 0)
    goto <bb 22>;
  else
    goto <bb 26>;

  <bb 22>:
  goto <bb 21>;

<L5>:
  # DEBUG this => &D.70235
  # DEBUG this => &D.70235
  # DEBUG this => &D.70235
  _58 = MEM[(char * *)&D.70235];
  # DEBUG D#1 => &D.70235
  # DEBUG this => D#1
  # DEBUG this => &D.70235
  if (&D.70235.D.11539._M_local_buf != _58)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#188 => D.70235.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.70235
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.70235
  # DEBUG this => D#1
  # DEBUG this => &D.70235
  # DEBUG D#185 => &D.70235._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _58
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _58
  # DEBUG this => D#179
  # DEBUG D.70205 => D#180
  operator delete (_58);

  <bb 25>:
  # DEBUG D#189 => &D.70235._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.70235 ={v} {CLOBBER};
  resx 1

  <bb 26>:

  <bb 27>:
  return;

}



;; Function std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = int] (_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_, funcdef_no=2853, decl_uid=47472, cgraph_uid=1320, symbol_order=1321)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = int] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  int * * __first$_M_node;
  int * const __first$_M_last;
  int * __first$_M_first;
  int * const __first$_M_cur;
  const difference_type __offset;
  struct _Self & D.70314;
  const difference_type __offset;
  struct _Self & D.70307;
  const ptrdiff_t _Num;
  const difference_type __clen;
  difference_type __len;
  const long int D.47683;
  const long int D.47684;
  long int _8;
  long int _10;
  long int _11;
  long int _15;
  long int _17;
  long int _18;
  long int _21;
  int * * _22;
  long unsigned int __clen.112_26;
  long unsigned int _27;
  long int _30;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  int * _42;
  long int _43;
  int * _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _50;
  long int _52;
  long int _53;
  long int _54;
  long int __len.111_56;
  long int _57;
  int * * _65;
  int * _73;
  long int _74;
  long int _75;
  long int _76;
  int * _81;
  long int iftmp.117_82;
  long unsigned int _84;
  long unsigned int _85;
  long int _86;
  long int iftmp.117_87;
  int * * _88;
  long int iftmp.117_89;
  long unsigned int __node_offset.119_90;
  long unsigned int _91;
  int * * _92;
  int * _93;
  int * _94;
  long int _95;
  long int _96;
  long unsigned int _97;
  long unsigned int _98;
  int * _99;
  long int _102;
  long int _103;
  long int _104;
  long int iftmp.107_110;
  long unsigned int _112;
  long unsigned int _113;
  long int _114;
  long int iftmp.107_115;
  long int iftmp.107_117;
  long unsigned int __node_offset.109_118;
  long unsigned int _119;
  long int _123;
  long int _124;
  long unsigned int _125;
  long unsigned int _126;
  unsigned long _143;
  unsigned long _144;
  int * pretmp_214;
  int * prephitmp_215;
  long int pretmp_216;
  long int prephitmp_217;
  int * const prephitmp_227;
  int * const pretmp_228;
  int * const prephitmp_229;
  int * const prephitmp_230;
  int * const prephitmp_238;
  int * const prephitmp_239;
  int * const prephitmp_240;
  int * const pretmp_241;
  int * const prephitmp_242;
  int * const pretmp_243;
  int * const prephitmp_244;
  int * const pretmp_245;
  int * const prephitmp_246;
  int * pretmp_247;
  int * prephitmp_248;
  int * pretmp_249;
  int * prephitmp_250;

  <bb 2>:
  __first$_M_cur_78 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_78
  __first$_M_first_146 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first$_M_first => __first$_M_first_146
  __first$_M_last_145 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_145
  __first$_M_node_147 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_147
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _22 = __last._M_node;
  _21 = (long int) _22;
  _37 = (long int) __first$_M_node_147;
  _38 = _21 - _37;
  _39 = _38 /[ex] 8;
  _40 = _39 + -1;
  _41 = _40 * 128;
  _42 = __last._M_cur;
  _43 = (long int) _42;
  _44 = __last._M_first;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 4;
  _48 = _41 + _47;
  _50 = (long int) __first$_M_last_145;
  _52 = (long int) __first$_M_cur_78;
  _53 = _50 - _52;
  _54 = _53 /[ex] 4;
  __len_55 = _48 + _54;
  # DEBUG __len => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  pretmp_241 = MEM[(const struct iterator &)__result_6(D)]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)__result_6(D)]._M_first;
  pretmp_245 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 19>;

  <bb 4>:
  pretmp_247 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  pretmp_249 = MEM[(const struct iterator &)__result_6(D)]._M_cur;

  <bb 5>:
  # __len.111_56 = PHI <__len_55(4), __len_32(17)>
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_node => __first$_M_node_23
  # DEBUG __first$_M_last => __first$_M_last_130
  # DEBUG __first$_M_first => __first$_M_first_132
  # DEBUG __first$_M_cur => __first$_M_cur_129
  _8 = (long int) prephitmp_248;
  # DEBUG D#1081 => *__result_6(D)._M_cur
  _10 = (long int) prephitmp_250;
  _11 = _8 - _10;
  _12 = _11 /[ex] 4;
  _15 = (long int) __first$_M_last_130;
  _17 = (long int) __first$_M_cur_129;
  _18 = _15 - _17;
  _19 = _18 /[ex] 4;
  # DEBUG __a => &D.47683
  # DEBUG __b => &D.47684
  _30 = MIN_EXPR <_12, __len.111_56>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clen => D#1079
  __clen.112_26 = (long unsigned int) __clen_59;
  _27 = __clen.112_26 * 4;
  # DEBUG D#1082 => __first$_M_cur_129 + _27
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#1082
  # DEBUG __result => D#1081
  # DEBUG __it => D#1082
  # DEBUG __it => D#1082
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#1082
  # DEBUG __result => D#1081
  # DEBUG __it => D#1081
  # DEBUG __it => D#1081
  # DEBUG __it => D#1082
  # DEBUG __it => D#1082
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _57 = (long int) _27;
  _Num_58 = _57 /[ex] 4;
  # DEBUG _Num => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __builtin_memmove (prephitmp_250, __first$_M_cur_129, _27);
  pretmp_214 = __result_6(D)->_M_cur;
  pretmp_216 = (long int) pretmp_214;

  <bb 7>:
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG this => &__first
  # DEBUG __n => D#1079
  _102 = (long int) __first$_M_first_132;
  _103 = _17 - _102;
  _104 = _103 /[ex] 4;
  __offset_105 = __clen_59 + _104;
  # DEBUG __offset => __offset_105
  # DEBUG __size => 4
  _143 = (unsigned long) __offset_105;
  if (_143 <= 127)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;

  <bb 9>:
  # DEBUG __size => 4
  iftmp.107_110 = __offset_105 >> 7;
  goto <bb 11>;

  <bb 10>:
  _112 = ~_143;
  # DEBUG __size => 4
  _113 = _112 >> 7;
  _114 = (long int) _113;
  iftmp.107_115 = ~_114;

  <bb 11>:
  # iftmp.107_117 = PHI <iftmp.107_110(9), iftmp.107_115(10)>

  <bb 24>:
  # DEBUG __node_offset => iftmp.107_117
  __node_offset.109_118 = (long unsigned int) iftmp.107_117;
  _119 = __node_offset.109_118 * 8;
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_120
  # DEBUG __first$_M_node => __first$_M_node_120
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_first => __first$_M_first_121
  # DEBUG __size => 4
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_last => __first$_M_last_122
  # DEBUG __size => 4
  _123 = iftmp.107_117 * 128;
  _124 = __offset_105 - _123;
  _125 = (long unsigned int) _124;
  _126 = _125 * 4;
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_cur => __first$_M_cur_127

  <bb 12>:
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
  # DEBUG __first$_M_node => __first$_M_node_106
  # DEBUG __first$_M_last => __first$_M_last_1
  # DEBUG __first$_M_first => __first$_M_first_131
  # DEBUG __first$_M_cur => __first$_M_cur_133
  # DEBUG this => __result_6(D)
  # DEBUG __n => D#1079
  _73 = *__result_6(D)._M_first;
  _74 = (long int) _73;
  _75 = prephitmp_217 - _74;
  _76 = _75 /[ex] 4;
  __offset_77 = __clen_59 + _76;
  # DEBUG __offset => __offset_77
  # DEBUG __size => 4
  _144 = (unsigned long) __offset_77;
  if (_144 <= 127)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 13>:
  # DEBUG __size => 4
  iftmp.117_82 = __offset_77 >> 7;
  goto <bb 15>;

  <bb 14>:
  _84 = ~_144;
  # DEBUG __size => 4
  _85 = _84 >> 7;
  _86 = (long int) _85;
  iftmp.117_87 = ~_86;

  <bb 15>:
  # iftmp.117_89 = PHI <iftmp.117_82(13), iftmp.117_87(14)>

  <bb 25>:
  # DEBUG __node_offset => iftmp.117_89
  _88 = *__result_6(D)._M_node;
  __node_offset.119_90 = (long unsigned int) iftmp.117_89;
  _91 = __node_offset.119_90 * 8;
  _92 = _88 + _91;
  # DEBUG this => __result_6(D)
  # DEBUG __new_node => _92
  *__result_6(D)._M_node = _92;
  _93 = *_92;
  *__result_6(D)._M_first = _93;
  # DEBUG __size => 4
  _94 = _93 + 512;
  *__result_6(D)._M_last = _94;
  # DEBUG __size => 4
  _95 = iftmp.117_89 * 128;
  _96 = __offset_77 - _95;
  _97 = (long unsigned int) _96;
  _98 = _97 * 4;
  _99 = _93 + _98;
  *__result_6(D)._M_cur = _99;

  <bb 16>:
  # prephitmp_227 = PHI <_81(21), _99(25)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
  # prephitmp_230 = PHI <_73(21), _93(25)>
  __len_32 = __len.111_56 - __clen_59;
  # DEBUG __len => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 5>;

  <bb 18>:
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>

  <bb 23>:

  <bb 19>:
  # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
  # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
  # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>

  <bb 26>:
  # DEBUG this => _34(D)
  # DEBUG __x => __result_6(D)
  _34(D)->_M_cur = prephitmp_242;
  _34(D)->_M_first = prephitmp_244;
  _34(D)->_M_last = prephitmp_246;
  _65 = MEM[(const struct iterator &)__result_6(D)]._M_node;
  _34(D)->_M_node = _65;
  # DEBUG D#1080 => {CLOBBER}
  # DEBUG __len => D#1080
  return _34(D);

  <bb 20>:
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 21>:
  _81 = prephitmp_215 + _27;
  *__result_6(D)._M_cur = _81;
  pretmp_228 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 16>;

  <bb 22>:
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIiSaIiEE24_M_new_elements_at_frontEm, funcdef_no=2895, decl_uid=43530, cgraph_uid=1362, symbol_order=1363)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  int * * _8;
  long unsigned int _10;
  long int _12;
  long unsigned int _13;
  int * * _14;
  int * _16;
  int * * _17;
  long unsigned int _18;
  sizetype _19;
  int * * _20;
  void * _23;
  int * * _25;
  long unsigned int _26;
  sizetype _27;
  int * * _28;
  int * _29;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  int * _39;
  long int _40;
  int * _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  int * _46;
  long int _47;
  int * _48;
  long int _49;
  long int _50;
  long int _51;
  difference_type _52;
  size_type _53;
  int * * _54;
  long int _55;
  long int _56;
  long int _57;
  long unsigned int _58;

  <bb 2>:
  # DEBUG D#638 => this_6(D)
  # DEBUG this => D#638
  # DEBUG D#637 => D#638
  # DEBUG D#636 => &D#637->D.43590
  # DEBUG this => D#636
  # DEBUG __a => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#381 => D#398
  # DEBUG this => D#381
  # DEBUG this => this_6(D)
  # DEBUG D#174 => &MEM[(const struct deque *)this_6(D)].D.43590._M_impl._M_start
  # DEBUG D#175 => &MEM[(const struct deque *)this_6(D)].D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _14 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _12 = (long int) _14;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _35 = _12 - _7;
  _36 = _35 /[ex] 8;
  _37 = _36 + -1;
  _38 = _37 * 128;
  _39 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _40 = (long int) _39;
  _41 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = _43 /[ex] 4;
  _45 = _38 + _44;
  _46 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _47 = (long int) _46;
  _48 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _49 = (long int) _48;
  _50 = _47 - _49;
  _51 = _50 /[ex] 4;
  _52 = _45 + _51;
  _53 = (size_type) _52;
  _10 = 4611686018427387903 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_front");

  <bb 4>:
  # DEBUG __size => 4
  _13 = __new_elems_11(D) + 127;
  # DEBUG __size => 4
  __new_nodes_15 = _13 >> 7;
  # DEBUG __new_nodes => __new_nodes_15
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_15
  _54 = this_6(D)->D.43590._M_impl._M_map;
  _55 = (long int) _54;
  _56 = _7 - _55;
  _57 = _56 /[ex] 8;
  _58 = (long unsigned int) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<int, std::allocator<int> >::_M_reallocate_map (this_6(D), __new_nodes_15, 1);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_22(11)>
  # DEBUG __i => __i_67
  _17 = this_6(D)->D.43590._M_impl._M_start._M_node;
  _18 = __i_67 * 8;
  _19 = -_18;
  _20 = _17 + _19;
  # DEBUG D#642 => &this_6(D)->D.43590
  # DEBUG D#392 => D#642
  # DEBUG this => D#392
  # DEBUG D#391 => D#392
  # DEBUG __size => 4
  # DEBUG D#390 => &D#391->_M_impl
  # DEBUG D#386 => D#390
  # DEBUG __n => NULL
  # DEBUG __a => D#386
  # DEBUG D#385 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#384 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#383
  # DEBUG D.61142 => D#384
  # DEBUG D#382 => D#383
  # DEBUG D#381 => D#382
  # DEBUG this => D#381
  _16 = operator new (512);

  <bb 10>:
  *_20 = _16;
  __i_22 = __i_67 + 1;
  # DEBUG __i => __i_22
  # DEBUG __i => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_76 = PHI <__i_67(9)>
<L5>:
  _23 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_23);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_68 = PHI <1(14), __j_31(16)>
  # DEBUG __j => __j_68
  _25 = this_6(D)->D.43590._M_impl._M_start._M_node;
  _26 = __j_68 * 8;
  _27 = -_26;
  _28 = _25 + _27;
  _29 = *_28;
  # DEBUG D#641 => &this_6(D)->D.43590
  # DEBUG this => D#641
  # DEBUG __p => _29
  # DEBUG __size => 4
  # DEBUG D#167 => &D#641->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _29
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _29
  # DEBUG this => D#140
  # DEBUG D.61152 => D#141
  operator delete (_29);
  __j_31 = __j_68 + 1;
  # DEBUG __j => __j_31
  # DEBUG __j => __j_31
  if (__j_31 >= __i_76)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIiSaIiEE23_M_new_elements_at_backEm, funcdef_no=2897, decl_uid=43533, cgraph_uid=1364, symbol_order=1365)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  int * * _8;
  long unsigned int _9;
  long int _11;
  long unsigned int _12;
  int * * _13;
  int * * _16;
  long unsigned int _17;
  int * * _18;
  void * _21;
  int * * _23;
  long unsigned int _24;
  int * * _25;
  int * _26;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  int * _35;
  long int _36;
  int * _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  int * _42;
  long int _43;
  int * _44;
  long int _45;
  long int _46;
  long int _47;
  difference_type _48;
  size_type _49;
  int * _50;
  long unsigned int _53;
  long unsigned int _54;
  int * * _57;
  long int _58;
  long int _59;
  long int _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2>:
  # DEBUG D#638 => this_6(D)
  # DEBUG this => D#638
  # DEBUG D#637 => D#638
  # DEBUG D#636 => &D#637->D.43590
  # DEBUG this => D#636
  # DEBUG __a => D#399
  # DEBUG D#398 => D#399
  # DEBUG D#381 => D#398
  # DEBUG this => D#381
  # DEBUG this => this_6(D)
  # DEBUG D#174 => &MEM[(const struct deque *)this_6(D)].D.43590._M_impl._M_start
  # DEBUG D#175 => &MEM[(const struct deque *)this_6(D)].D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _13 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _11 = (long int) _13;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _31 = _11 - _7;
  _32 = _31 /[ex] 8;
  _33 = _32 + -1;
  _34 = _33 * 128;
  _35 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _36 = (long int) _35;
  _37 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _38 = (long int) _37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 4;
  _41 = _34 + _40;
  _42 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _43 = (long int) _42;
  _44 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 4;
  _48 = _41 + _47;
  _49 = (size_type) _48;
  _9 = 4611686018427387903 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_back");

  <bb 4>:
  # DEBUG __size => 4
  _12 = __new_elems_10(D) + 127;
  # DEBUG __size => 4
  __new_nodes_14 = _12 >> 7;
  # DEBUG __new_nodes => __new_nodes_14
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_14
  _53 = __new_nodes_14 + 1;
  _54 = this_6(D)->D.43590._M_impl._M_map_size;
  _57 = this_6(D)->D.43590._M_impl._M_map;
  _58 = (long int) _57;
  _59 = _11 - _58;
  _60 = _59 /[ex] -8;
  _61 = (long unsigned int) _60;
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<int, std::allocator<int> >::_M_reallocate_map (this_6(D), __new_nodes_14, 0);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_20(11)>
  # DEBUG __i => __i_67
  _16 = this_6(D)->D.43590._M_impl._M_finish._M_node;
  _17 = __i_67 * 8;
  _18 = _16 + _17;
  # DEBUG D#640 => &this_6(D)->D.43590
  # DEBUG D#392 => D#640
  # DEBUG this => D#392
  # DEBUG D#391 => D#392
  # DEBUG __size => 4
  # DEBUG D#390 => &D#391->_M_impl
  # DEBUG D#386 => D#390
  # DEBUG __n => NULL
  # DEBUG __a => D#386
  # DEBUG D#385 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#384 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#383
  # DEBUG D.61111 => D#384
  # DEBUG D#382 => D#383
  # DEBUG D#381 => D#382
  # DEBUG this => D#381
  _50 = operator new (512);

  <bb 10>:
  *_18 = _50;
  __i_20 = __i_67 + 1;
  # DEBUG __i => __i_20
  # DEBUG __i => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_65 = PHI <__i_67(9)>
<L5>:
  _21 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_21);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_66 = PHI <1(14), __j_27(16)>
  # DEBUG __j => __j_66
  _23 = this_6(D)->D.43590._M_impl._M_finish._M_node;
  _24 = __j_66 * 8;
  _25 = _23 + _24;
  _26 = *_25;
  # DEBUG D#639 => &this_6(D)->D.43590
  # DEBUG this => D#639
  # DEBUG __p => _26
  # DEBUG __size => 4
  # DEBUG D#167 => &D#639->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _26
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _26
  # DEBUG this => D#140
  # DEBUG D.61121 => D#141
  operator delete (_26);
  __j_27 = __j_66 + 1;
  # DEBUG __j => __j_27
  # DEBUG __j => __j_27
  if (__j_27 >= __i_65)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<int, const int&, const int*>; _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<int, int&, int*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIiSaIiEE13_M_insert_auxISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_m, funcdef_no=2892, decl_uid=47910, cgraph_uid=1359, symbol_order=1360)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<int, const int&, const int*>; _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<int, int&, int*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, struct iterator & restrict __pos, struct _Deque_iterator __first, struct _Deque_iterator __last, size_type __n)
{
  int * * SR.1923;
  int * SR.1922;
  int * SR.1921;
  int * * SR.1920;
  int * SR.1919;
  int * SR.1918;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.1914;
  int * SR.1913;
  int * SR.1912;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __last$24;
  int * __last$8;
  int * __last;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __last1$_M_node;
  int * __last1$_M_last;
  int * __last1$_M_first;
  int * __last1$_M_cur;
  int * * __first1$_M_node;
  int * __first1$_M_last;
  int * __first1$_M_first;
  int * __first1$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * SR.1865;
  int * SR.1864;
  int * SR.1863;
  int * * SR.1862;
  int * SR.1861;
  int * SR.1860;
  int * * __tmp$_M_node;
  int * __tmp$_M_last;
  int * __tmp$_M_first;
  int * __tmp$_M_cur;
  int * * SR.1855;
  int * SR.1854;
  int * SR.1853;
  int * * SR.1852;
  int * SR.1851;
  int * SR.1850;
  int * SR.1849;
  int * * __tmp$_M_node;
  int * __tmp$_M_last;
  int * __tmp$_M_first;
  int * __tmp$_M_cur;
  int * * __tmp$_M_node;
  int * __tmp$_M_last;
  int * __tmp$_M_first;
  int * __tmp$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.1837;
  int * SR.1836;
  int * SR.1835;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __last$24;
  int * __last$8;
  int * __last;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * SR.1823;
  int * SR.1822;
  int * SR.1821;
  int * * SR.1820;
  int * SR.1819;
  int * SR.1818;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __last2$_M_node;
  int * __last2$_M_last;
  int * __last2$_M_first;
  int * __last2$_M_cur;
  int * * __first2$_M_node;
  int * __first2$_M_last;
  int * __first2$_M_first;
  int * __first2$_M_cur;
  int * * SR.1785;
  int * SR.1784;
  int * SR.1783;
  int * * SR.1782;
  int * SR.1781;
  int * SR.1780;
  int * * __tmp$_M_node;
  int * __tmp$_M_last;
  int * __tmp$_M_first;
  int * __tmp$_M_cur;
  int * * __tmp$_M_node;
  int * __tmp$_M_last;
  int * __tmp$_M_first;
  int * __tmp$_M_cur;
  int * * __tmp$_M_node;
  int * __tmp$_M_last;
  int * __tmp$_M_first;
  int * __tmp$_M_cur;
  int * * __tmp$_M_node;
  int * __tmp$_M_last;
  int * __tmp$_M_first;
  int * __tmp$_M_cur;
  int * * __mid$_M_node;
  int * __mid$_M_last;
  int * __mid$_M_first;
  int * __mid$_M_cur;
  int * * SR.1759;
  int * SR.1758;
  int * SR.1757;
  int * SR.1756;
  int * * __new_finish$_M_node;
  int * __new_finish$_M_last;
  int * __new_finish$_M_first;
  int * __new_finish$_M_cur;
  int * * __mid$_M_node;
  int * __mid$_M_last;
  int * __mid$_M_first;
  int * __mid$_M_cur;
  int * * SR.1747;
  int * SR.1746;
  int * SR.1745;
  int * SR.1744;
  int * * __new_start$_M_node;
  int * __new_start$_M_last;
  int * __new_start$_M_first;
  int * __new_start$_M_cur;
  _Distance __n;
  struct _Deque_iterator D.71312;
  struct _Deque_iterator D.71311;
  struct _Deque_iterator D.71310;
  struct iterator_type D.71296;
  struct iterator_type D.71295;
  struct iterator_type D.71294;
  struct _Deque_iterator D.71272;
  struct iterator_type D.71271;
  struct iterator_type D.71270;
  struct _Deque_iterator D.71252;
  struct _Deque_iterator D.71251;
  struct _Deque_iterator D.71250;
  struct _Deque_iterator D.71240;
  struct _Deque_iterator D.71239;
  struct _Deque_iterator D.71238;
  struct _Deque_iterator D.71225;
  struct _Deque_iterator D.71224;
  struct _Deque_iterator D.71223;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.71193;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.71168;
  struct _Deque_iterator D.71167;
  struct _Deque_iterator D.71166;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.71148;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.71134;
  struct _Deque_iterator D.71133;
  struct _Deque_iterator D.71132;
  const difference_type __offset;
  struct _Self & D.71121;
  struct _Deque_iterator D.71114;
  struct _Deque_iterator D.71113;
  struct _Deque_iterator D.71112;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.71111;
  struct _Deque_iterator D.71110;
  struct _Deque_iterator __first1;
  struct _Deque_iterator __last1;
  const ptrdiff_t _Num;
  int * D.71088;
  const difference_type __offset;
  struct _Self & D.71070;
  const difference_type __offset;
  struct _Self & D.71063;
  difference_type __len;
  difference_type __llen;
  int * __lend;
  difference_type __rlen;
  int * __rend;
  const difference_type __clen;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  _Distance __n;
  struct _Deque_iterator D.71014;
  struct _Deque_iterator D.71013;
  struct _Deque_iterator D.71012;
  struct iterator_type D.70998;
  struct iterator_type D.70997;
  struct iterator_type D.70996;
  struct _Deque_iterator D.70974;
  struct iterator_type D.70973;
  struct iterator_type D.70972;
  struct _Deque_iterator D.70954;
  struct _Deque_iterator D.70953;
  struct _Deque_iterator D.70952;
  struct _Deque_iterator D.70942;
  struct _Deque_iterator D.70941;
  struct _Deque_iterator D.70940;
  struct _Deque_iterator D.70927;
  struct _Deque_iterator D.70926;
  struct _Deque_iterator D.70925;
  const difference_type __offset;
  struct _Self & D.70914;
  struct _Self __tmp;
  struct _Deque_iterator D.70898;
  struct _Deque_iterator D.70897;
  struct _Deque_iterator D.70896;
  struct _Deque_iterator D.70895;
  struct _Deque_iterator D.70884;
  struct _Deque_iterator D.70883;
  struct _Deque_iterator D.70882;
  struct _Deque_iterator D.70881;
  const difference_type __offset;
  struct _Self & D.70871;
  const difference_type __offset;
  struct _Self & D.70864;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.70819;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.70794;
  struct _Deque_iterator D.70793;
  struct _Deque_iterator D.70792;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  _Distance __n;
  struct _Deque_iterator D.70755;
  struct _Deque_iterator D.70754;
  struct _Deque_iterator D.70753;
  struct iterator_type D.70739;
  struct iterator_type D.70738;
  struct iterator_type D.70737;
  struct _Deque_iterator D.70715;
  struct iterator_type D.70714;
  struct iterator_type D.70713;
  struct _Deque_iterator D.70695;
  struct _Deque_iterator D.70694;
  struct _Deque_iterator D.70693;
  struct _Deque_iterator D.70683;
  struct _Deque_iterator D.70682;
  struct _Deque_iterator D.70681;
  struct _Deque_iterator D.70668;
  struct _Deque_iterator D.70667;
  struct _Deque_iterator D.70666;
  struct _Deque_iterator D.70655;
  struct _Deque_iterator D.70654;
  struct _Deque_iterator D.70653;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.70642;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  const difference_type __offset;
  struct _Self & D.70628;
  struct _Deque_iterator D.70621;
  struct _Deque_iterator D.70620;
  struct _Deque_iterator D.70619;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.70618;
  struct _Deque_iterator D.70617;
  struct _Deque_iterator __first2;
  struct _Deque_iterator __last2;
  const difference_type __offset;
  struct _Self & D.70595;
  _Distance __n;
  struct _Deque_iterator D.70569;
  struct _Deque_iterator D.70568;
  struct _Deque_iterator D.70567;
  struct iterator_type D.70553;
  struct iterator_type D.70552;
  struct iterator_type D.70551;
  struct _Deque_iterator D.70529;
  struct iterator_type D.70528;
  struct iterator_type D.70527;
  struct _Deque_iterator D.70509;
  struct _Deque_iterator D.70508;
  struct _Deque_iterator D.70507;
  struct _Deque_iterator D.70497;
  struct _Deque_iterator D.70496;
  struct _Deque_iterator D.70495;
  struct _Deque_iterator D.70482;
  struct _Deque_iterator D.70481;
  struct _Deque_iterator D.70480;
  const difference_type __offset;
  struct _Self & D.70469;
  struct _Self __tmp;
  struct _Deque_iterator D.70455;
  struct _Deque_iterator D.70454;
  struct _Deque_iterator D.70453;
  struct _Deque_iterator D.70452;
  struct _Deque_iterator D.70441;
  struct _Deque_iterator D.70440;
  struct _Deque_iterator D.70439;
  struct _Deque_iterator D.70438;
  struct _Self __tmp;
  const difference_type __offset;
  struct _Self & D.70419;
  const difference_type __offset;
  struct _Self & D.70412;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator __mid;
  struct iterator __finish_n;
  const difference_type __elemsafter;
  struct iterator __new_finish;
  struct _Deque_iterator __mid;
  struct iterator __start_n;
  struct iterator __new_start;
  struct _Deque_iterator D.48045;
  struct _Deque_iterator D.48039;
  struct _Deque_iterator D.48040;
  struct _Deque_iterator D.48041;
  struct _Deque_iterator D.48026;
  struct _Deque_iterator D.48020;
  struct _Deque_iterator D.48021;
  struct _Deque_iterator D.48022;
  struct _Deque_iterator D.48008;
  struct _Deque_iterator D.48009;
  struct _Deque_iterator D.48010;
  struct _Self D.48005;
  struct _Deque_iterator D.47998;
  struct _Deque_iterator D.47990;
  struct _Deque_iterator D.47991;
  struct _Deque_iterator D.47994;
  struct _Self D.47974;
  struct _Deque_iterator D.47970;
  struct _Deque_iterator D.47971;
  struct _Deque_iterator D.47972;
  struct _Deque_iterator D.47958;
  struct _Deque_iterator D.47959;
  struct _Deque_iterator D.47960;
  struct _Self D.47950;
  long int _7;
  long int _8;
  long unsigned int _9;
  long unsigned int __elemsbefore.133_10;
  unsigned long _18;
  int * _22;
  int * _28;
  long int _38;
  int * _48;
  int * _57;
  long int _62;
  int * _64;
  int * _75;
  int * * _80;
  int * _82;
  long int _93;
  long int _94;
  int * _95;
  long int _96;
  int * _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  difference_type _102;
  size_type _103;
  int * * _104;
  long int _105;
  int * * _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  int * _112;
  long int _113;
  int * _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  int * _119;
  long int _120;
  int * _121;
  long int _122;
  long int _123;
  long int _124;
  difference_type _125;
  int * _133;
  int * _134;
  int * * _135;
  int * _146;
  int * * _147;
  int * _157;
  int * _161;
  int * * _162;
  int * _172;
  int * _173;
  int * _174;
  int * * _175;
  int * _179;
  int * _180;
  int * * _181;
  long int pretmp_190;
  long int pretmp_191;
  long int pretmp_192;
  long int pretmp_193;
  int * _278;
  long int _279;
  long int _280;
  long int _281;
  long unsigned int _283;
  long int __n.120_284;
  long int _289;
  long unsigned int __n.116_303;
  long unsigned int _304;
  long int iftmp.117_306;
  long unsigned int _308;
  long unsigned int _309;
  long int _310;
  long int iftmp.117_311;
  long int iftmp.117_313;
  long unsigned int __node_offset.119_314;
  long unsigned int _315;
  long int _319;
  long int _320;
  long unsigned int _321;
  long unsigned int _322;
  long unsigned int _333;
  long int iftmp.117_335;
  long unsigned int _337;
  long unsigned int _338;
  long int _339;
  long int iftmp.117_340;
  long int iftmp.117_342;
  long unsigned int __node_offset.119_343;
  long unsigned int _344;
  long int _348;
  long int _349;
  long unsigned int _350;
  long unsigned int _351;
  int * _353;
  long int _393;
  long int _395;
  long int _396;
  long int _397;
  long unsigned int _401;
  long int iftmp.117_403;
  long unsigned int _405;
  long unsigned int _406;
  long int _407;
  long int iftmp.117_408;
  long int iftmp.117_410;
  long unsigned int __node_offset.119_411;
  long unsigned int _412;
  long int _416;
  long int _417;
  long unsigned int _418;
  long unsigned int _419;
  unsigned long _478;
  unsigned long _479;
  unsigned long _480;
  unsigned long _481;
  unsigned long _482;
  unsigned long _483;
  unsigned long _485;
  unsigned long _492;
  unsigned long _495;
  unsigned long _501;
  long int _502;
  long int _505;
  long int _506;
  long int _507;
  long int _509;
  long int _512;
  long int _513;
  int _518;
  int * _519;
  int * _522;
  int * * _530;
  int * _531;
  int * _532;
  int * * _534;
  int * _535;
  int * _536;
  long int _538;
  long int _540;
  long int _541;
  long int _542;
  long unsigned int __n.116_545;
  long unsigned int _546;
  long int iftmp.117_548;
  long unsigned int _550;
  long unsigned int _551;
  long int _552;
  long int iftmp.117_553;
  long int iftmp.117_555;
  long unsigned int __node_offset.119_556;
  long unsigned int _557;
  long int _561;
  long int _562;
  long unsigned int _563;
  long unsigned int _564;
  long int _582;
  long int _584;
  long int _585;
  long int _586;
  long unsigned int __n.106_589;
  long unsigned int _590;
  long int iftmp.107_592;
  long unsigned int _594;
  long unsigned int _595;
  long int _596;
  long int iftmp.107_597;
  long int iftmp.107_599;
  long unsigned int __node_offset.109_600;
  long unsigned int _601;
  long int _605;
  long int _606;
  long unsigned int _607;
  long unsigned int _608;
  long int _698;
  long int _700;
  long int _701;
  long int _702;
  long int _703;
  long int _704;
  long int _706;
  long int _708;
  long int _709;
  long int _710;
  long int _711;
  long int _713;
  long int _715;
  long int _716;
  long int _717;
  int _722;
  int * _723;
  int * _726;
  int * * _734;
  int * _735;
  int * _736;
  int * * _738;
  int * _739;
  int * _740;
  long int _774;
  long int _777;
  long int _778;
  long int _779;
  long int _781;
  long int _784;
  long int _785;
  int _790;
  int * _794;
  int * * _806;
  int * _807;
  int * _808;
  long int _813;
  long int _819;
  long int _822;
  long int _823;
  long int _824;
  long unsigned int _826;
  long int __n.131_827;
  long unsigned int _846;
  long int iftmp.117_848;
  long unsigned int _850;
  long unsigned int _851;
  long int _852;
  long int iftmp.117_853;
  long int iftmp.117_855;
  long unsigned int __node_offset.119_856;
  long unsigned int _857;
  long int _861;
  long int _862;
  long unsigned int _863;
  long unsigned int _864;
  long unsigned int __n.116_874;
  long unsigned int _875;
  long int iftmp.117_877;
  long unsigned int _879;
  long unsigned int _880;
  long int _881;
  long int iftmp.117_882;
  long int iftmp.117_884;
  long unsigned int __node_offset.119_885;
  long unsigned int _886;
  long int _890;
  long int _891;
  long unsigned int _892;
  long unsigned int _893;
  long int _921;
  long int _927;
  long int _929;
  long int _930;
  long int _931;
  long unsigned int __n.116_934;
  long unsigned int _935;
  long int iftmp.117_937;
  long unsigned int _939;
  long unsigned int _940;
  long int _941;
  long int iftmp.117_942;
  long int iftmp.117_944;
  long unsigned int __node_offset.119_945;
  long unsigned int _946;
  long int _950;
  long int _951;
  long unsigned int _952;
  long unsigned int _953;
  long int _1041;
  long int _1043;
  long int _1045;
  long int _1046;
  long int _1047;
  int _1052;
  int * _1053;
  int * _1056;
  int * * _1064;
  int * _1065;
  int * _1066;
  int * * _1068;
  int * _1069;
  int * _1070;
  long int _1074;
  long int _1075;
  long int _1076;
  long int _1077;
  long int _1078;
  long int _1083;
  long int _1084;
  long int _1085;
  long int _1087;
  long int _1089;
  long int _1090;
  long int _1091;
  long int _1095;
  long int _1097;
  long int _1098;
  long int _1101;
  long int _1103;
  long int _1104;
  int * _1107;
  int * _1110;
  long unsigned int __clen.146_1118;
  long unsigned int _1119;
  sizetype _1120;
  int * _1122;
  long int _1124;
  int * const pretmp_1130;
  int * const prephitmp_1131;
  int * const pretmp_1132;
  int * const prephitmp_1133;
  int * const pretmp_1134;
  int * const prephitmp_1135;
  long unsigned int __n.116_1138;
  long unsigned int _1139;
  int * _1140;
  long int iftmp.117_1141;
  long int pretmp_1142;
  long unsigned int _1143;
  long unsigned int _1144;
  long int _1145;
  long int iftmp.117_1146;
  long int prephitmp_1147;
  long int iftmp.117_1148;
  long unsigned int __node_offset.119_1149;
  long unsigned int _1150;
  int * * _1151;
  int * _1152;
  long int _1154;
  long int _1155;
  long unsigned int _1156;
  long unsigned int _1157;
  int * _1158;
  long unsigned int __n.106_1167;
  long unsigned int _1168;
  long int iftmp.107_1170;
  int * * const pretmp_1171;
  long unsigned int _1172;
  long unsigned int _1173;
  long int _1174;
  long int iftmp.107_1175;
  int * * const prephitmp_1176;
  long int iftmp.107_1177;
  long unsigned int __node_offset.109_1178;
  long unsigned int _1179;
  long int _1183;
  long int _1184;
  long unsigned int _1185;
  long unsigned int _1186;
  long int __first.79_1189;
  long int _1190;
  long unsigned int _1192;
  sizetype _1193;
  int * _1194;
  long int _1214;
  long int _1216;
  long int _1217;
  long int _1218;
  long unsigned int __n.106_1221;
  long unsigned int _1222;
  long int iftmp.107_1224;
  long unsigned int _1226;
  long unsigned int _1227;
  long int _1228;
  long int iftmp.107_1229;
  long int iftmp.107_1231;
  long unsigned int __node_offset.109_1232;
  long unsigned int _1233;
  long int _1237;
  long int _1238;
  long unsigned int _1239;
  long unsigned int _1240;
  long int _1282;
  long int _1284;
  long int _1285;
  long int _1286;
  long int _1287;
  long int _1288;
  long int _1290;
  long int _1292;
  long int _1293;
  long int _1294;
  long int _1295;
  long int _1297;
  long int _1299;
  long int _1300;
  long int _1301;
  int _1306;
  int * _1310;
  int * * _1322;
  int * _1323;
  int * _1324;
  long int _1398;
  long int _1400;
  long int _1401;
  long int _1402;
  long int _1403;
  long int _1404;
  long int _1406;
  long int _1408;
  long int _1409;
  long int _1410;
  long int _1411;
  long int _1413;
  long int _1415;
  long int _1416;
  long int _1417;
  int _1422;
  int * _1423;
  int * _1426;
  int * * _1434;
  int * _1435;
  int * _1436;
  int * * _1438;
  int * _1439;
  int * _1440;
  long int pretmp_1442;
  long int _1448;
  long int pretmp_1449;
  long int prephitmp_1465;
  long int pretmp_1467;
  long int prephitmp_1468;
  long int __len.137_1507;
  int * * const prephitmp_1526;
  int * * const pretmp_1527;
  int * const prephitmp_1528;
  int * const pretmp_1529;
  int * const prephitmp_1530;
  int * const pretmp_1531;
  long int prephitmp_1534;
  long int pretmp_1535;
  int * const pretmp_1562;
  int * const prephitmp_1563;
  int * const pretmp_1564;
  int * const prephitmp_1565;
  int * const pretmp_1566;
  int * const prephitmp_1567;
  int * * const pretmp_1568;
  int * * const prephitmp_1569;
  long int pretmp_1570;
  long int pretmp_1572;
  long int pretmp_1574;
  long int pretmp_1576;
  long int prephitmp_1577;
  long int pretmp_2002;
  long int pretmp_2004;
  long int pretmp_2061;
  long int pretmp_2154;
  long int pretmp_2155;
  long int pretmp_2156;
  long int pretmp_2162;
  long int pretmp_2164;
  long int pretmp_2166;
  long int prephitmp_2167;
  long int pretmp_2168;
  long int prephitmp_2169;
  long int pretmp_2172;
  long int pretmp_2173;
  long int pretmp_2174;
  long int pretmp_2176;
  long int pretmp_2178;
  long int pretmp_2180;
  long int prephitmp_2181;
  long int pretmp_2182;
  long int prephitmp_2183;
  long int pretmp_2185;
  long int prephitmp_2187;

  <bb 2>:
  # DEBUG D#677 => &this_4(D)->D.43590._M_impl._M_start
  # DEBUG __x => __pos_6(D)
  # DEBUG __y => D#677
  # DEBUG __size => 4
  _104 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_node;
  _105 = (long int) _104;
  _106 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_node;
  _107 = (long int) _106;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _109 + -1;
  _111 = _110 * 128;
  _112 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_cur;
  _113 = (long int) _112;
  _114 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_first;
  _115 = (long int) _114;
  _116 = _113 - _115;
  _117 = _116 /[ex] 4;
  _118 = _111 + _117;
  _119 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_last;
  _120 = (long int) _119;
  _121 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_cur;
  _122 = (long int) _121;
  _123 = _120 - _122;
  _124 = _123 /[ex] 4;
  _125 = _118 + _124;
  # DEBUG __elemsbefore => _125
  # DEBUG this => this_4(D)
  # DEBUG D#174 => &MEM[(const struct deque *)this_4(D)].D.43590._M_impl._M_start
  # DEBUG D#175 => &MEM[(const struct deque *)this_4(D)].D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _80 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_node;
  _62 = (long int) _80;
  _8 = _62 - _107;
  _7 = _8 /[ex] 8;
  _93 = _7 + -1;
  _94 = _93 * 128;
  _95 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_cur;
  _96 = (long int) _95;
  _97 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_first;
  _98 = (long int) _97;
  _99 = _96 - _98;
  _100 = _99 /[ex] 4;
  _101 = _94 + _100;
  _102 = _101 + _124;
  _103 = (size_type) _102;
  # DEBUG __length => _103
  _9 = _103 >> 1;
  __elemsbefore.133_10 = (long unsigned int) _125;
  if (_9 > __elemsbefore.133_10)
    goto <bb 3>;
  else
    goto <bb 54>;

  <bb 3>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _278 = this_4(D)->D.43590._M_impl._M_start._M_first;
  _279 = (long int) _278;
  _280 = _122 - _279;
  _281 = _280 /[ex] 4;
  __vacancies_282 = (const size_type) _281;
  # DEBUG __vacancies => __vacancies_282
  if (__n_11(D) > __vacancies_282)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _283 = __n_11(D) - __vacancies_282;
  std::deque<int, std::allocator<int> >::_M_new_elements_at_front (this_4(D), _283);
  pretmp_1562 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  pretmp_1564 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  pretmp_1566 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  pretmp_1568 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  pretmp_1570 = (long int) pretmp_1562;
  pretmp_1572 = (long int) pretmp_1564;
  pretmp_1574 = pretmp_1570 - pretmp_1572;
  pretmp_1576 = pretmp_1574 /[ex] 4;

  <bb 5>:
  # prephitmp_1563 = PHI <_121(3), pretmp_1562(4)>
  # prephitmp_1565 = PHI <_278(3), pretmp_1564(4)>
  # prephitmp_1567 = PHI <_119(3), pretmp_1566(4)>
  # prephitmp_1569 = PHI <_106(3), pretmp_1568(4)>
  # prephitmp_1577 = PHI <_281(3), pretmp_1576(4)>
  __n.120_284 = (long int) __n_11(D);
  # DEBUG D#1086 => &this_4(D)->D.43590._M_impl._M_start
  # DEBUG this => D#1086
  # DEBUG __n => __n.120_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#1086
  # DEBUG D#1121 => MEM[(const struct iterator &)this_4(D) + 16]._M_cur
  # DEBUG D#1120 => MEM[(const struct iterator &)this_4(D) + 16]._M_first
  # DEBUG __tmp$_M_first => D#1120
  # DEBUG D#1119 => MEM[(const struct iterator &)this_4(D) + 16]._M_last
  # DEBUG __tmp$_M_last => D#1119
  # DEBUG D#1118 => MEM[(const struct iterator &)this_4(D) + 16]._M_node
  # DEBUG __tmp$_M_node => D#1118
  # DEBUG this => &__tmp
  # DEBUG __n => __n.120_284
  _289 = -__n.120_284;
  # DEBUG this => &__tmp
  # DEBUG __n => _289
  __offset_301 = prephitmp_1577 - __n.120_284;
  # DEBUG __offset => __offset_301
  # DEBUG __size => 4
  _485 = (unsigned long) __offset_301;
  if (_485 <= 127)
    goto <bb 119>;
  else
    goto <bb 120>;

  <bb 6>:
  # DEBUG __size => 4
  iftmp.117_306 = __offset_301 >> 7;
  goto <bb 8>;

  <bb 7>:
  _308 = ~_485;
  # DEBUG __size => 4
  _309 = _308 >> 7;
  _310 = (long int) _309;
  iftmp.117_311 = ~_310;

  <bb 8>:
  # iftmp.117_313 = PHI <iftmp.117_306(6), iftmp.117_311(7)>
  # DEBUG __node_offset => iftmp.117_313
  __node_offset.119_314 = (long unsigned int) iftmp.117_313;
  _315 = __node_offset.119_314 * 8;
  __new_start$_M_node_316 = prephitmp_1569 + _315;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_start$_M_node_316
  # DEBUG __tmp$_M_node => __new_start$_M_node_316
  __new_start$_M_first_317 = *__new_start$_M_node_316;
  # DEBUG __tmp$_M_first => __new_start$_M_first_317
  # DEBUG __size => 4
  __new_start$_M_last_318 = __new_start$_M_first_317 + 512;
  # DEBUG __tmp$_M_last => __new_start$_M_last_318
  # DEBUG __size => 4
  _319 = iftmp.117_313 * 128;
  _320 = __offset_301 - _319;
  _321 = (long unsigned int) _320;
  _322 = _321 * 4;
  __new_start$_M_cur_323 = __new_start$_M_first_317 + _322;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_323

  <bb 9>:
  # __new_start$_M_cur_91 = PHI <__new_start$_M_cur_305(119), __new_start$_M_cur_323(8)>
  # __new_start$_M_first_87 = PHI <prephitmp_1565(119), __new_start$_M_first_317(8)>
  # __new_start$_M_last_2267 = PHI <prephitmp_1567(119), __new_start$_M_last_318(8)>
  # __new_start$_M_node_2266 = PHI <prephitmp_1569(119), __new_start$_M_node_316(8)>
  # DEBUG __tmp$_M_node => __new_start$_M_node_2266
  # DEBUG __tmp$_M_last => __new_start$_M_last_2267
  # DEBUG __tmp$_M_first => __new_start$_M_first_87
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_91
  # DEBUG this => &__new_start
  # DEBUG __x => NULL
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_91
  # DEBUG __new_start$_M_first => __new_start$_M_first_87
  # DEBUG __new_start$_M_last => __new_start$_M_last_2267
  # DEBUG __new_start$_M_node => __new_start$_M_node_2266
  __tmp ={v} {CLOBBER};
  # DEBUG D#678 => &this_4(D)->D.43590._M_impl._M_start
  # DEBUG this => &__old_start
  # DEBUG __x => D#678
  # DEBUG __old_start$_M_cur => D#1121
  # DEBUG __old_start$_M_first => D#1120
  # DEBUG __old_start$_M_last => D#1119
  # DEBUG __old_start$_M_node => D#1118
  # DEBUG D#1087 => &this_4(D)->D.43590._M_impl._M_start
  # DEBUG this => D#1087
  # DEBUG __n => _125
  # DEBUG this => &__tmp
  # DEBUG __x => D#1087
  # DEBUG __tmp$_M_first => D#1120
  # DEBUG __tmp$_M_last => D#1119
  # DEBUG __tmp$_M_node => D#1118
  # DEBUG this => &__tmp
  # DEBUG __n => _125
  __offset_330 = _125 + prephitmp_1577;
  # DEBUG __offset => __offset_330
  # DEBUG __size => 4
  _483 = (unsigned long) __offset_330;
  if (_483 <= 127)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 10>:
  # DEBUG __size => 4
  iftmp.117_335 = __offset_330 >> 7;
  goto <bb 12>;

  <bb 11>:
  _337 = ~_483;
  # DEBUG __size => 4
  _338 = _337 >> 7;
  _339 = (long int) _338;
  iftmp.117_340 = ~_339;

  <bb 12>:
  # iftmp.117_342 = PHI <iftmp.117_335(10), iftmp.117_340(11)>
  # DEBUG __node_offset => iftmp.117_342
  __node_offset.119_343 = (long unsigned int) iftmp.117_342;
  _344 = __node_offset.119_343 * 8;
  SR.1747_345 = prephitmp_1569 + _344;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.1747_345
  # DEBUG __tmp$_M_node => SR.1747_345
  SR.1745_346 = *SR.1747_345;
  # DEBUG __tmp$_M_first => SR.1745_346
  # DEBUG __size => 4
  SR.1746_347 = SR.1745_346 + 512;
  # DEBUG __tmp$_M_last => SR.1746_347
  # DEBUG __size => 4
  _348 = iftmp.117_342 * 128;
  _349 = __offset_330 - _348;
  _350 = (long unsigned int) _349;
  _351 = _350 * 4;
  SR.1744_352 = SR.1745_346 + _351;
  # DEBUG __tmp$_M_cur => SR.1744_352

  <bb 13>:
  # SR.1744_1511 = PHI <SR.1744_334(121), SR.1744_352(12)>
  # SR.1745_1496 = PHI <prephitmp_1565(121), SR.1745_346(12)>
  # SR.1746_1481 = PHI <prephitmp_1567(121), SR.1746_347(12)>
  # SR.1747_92 = PHI <prephitmp_1569(121), SR.1747_345(12)>
  # DEBUG __tmp$_M_node => SR.1747_92
  # DEBUG __tmp$_M_last => SR.1746_1481
  # DEBUG __tmp$_M_first => SR.1745_1496
  # DEBUG __tmp$_M_cur => SR.1744_1511
  # DEBUG this => &D.47950
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.1744_1511;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.1745_1496;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.1746_1481;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.1747_92;
  if (_125 >= __n.120_284)
    goto <bb 14>;
  else
    goto <bb 31>;

  <bb 14>:
  # DEBUG this => D#1087
  # DEBUG __n => __n.120_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#1087
  _22 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  __tmp$_M_first_385 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  # DEBUG __tmp$_M_first => __tmp$_M_first_385
  __tmp$_M_last_386 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  # DEBUG __tmp$_M_last => __tmp$_M_last_386
  __tmp$_M_node_387 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __tmp$_M_node => __tmp$_M_node_387
  # DEBUG this => &__tmp
  # DEBUG __n => __n.120_284
  _393 = (long int) _22;
  _395 = (long int) __tmp$_M_first_385;
  _396 = _393 - _395;
  _397 = _396 /[ex] 4;
  __offset_398 = __n.120_284 + _397;
  # DEBUG __offset => __offset_398
  # DEBUG __size => 4
  _482 = (unsigned long) __offset_398;
  if (_482 <= 127)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 15>:
  # DEBUG __size => 4
  iftmp.117_403 = __offset_398 >> 7;
  goto <bb 17>;

  <bb 16>:
  _405 = ~_482;
  # DEBUG __size => 4
  _406 = _405 >> 7;
  _407 = (long int) _406;
  iftmp.117_408 = ~_407;

  <bb 17>:
  # iftmp.117_410 = PHI <iftmp.117_403(15), iftmp.117_408(16)>
  # DEBUG __node_offset => iftmp.117_410
  __node_offset.119_411 = (long unsigned int) iftmp.117_410;
  _412 = __node_offset.119_411 * 8;
  __tmp$_M_node_413 = __tmp$_M_node_387 + _412;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_413
  # DEBUG __tmp$_M_node => __tmp$_M_node_413
  __tmp$_M_first_414 = *__tmp$_M_node_413;
  # DEBUG __tmp$_M_first => __tmp$_M_first_414
  # DEBUG __size => 4
  __tmp$_M_last_415 = __tmp$_M_first_414 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_415
  # DEBUG __size => 4
  _416 = iftmp.117_410 * 128;
  _417 = __offset_398 - _416;
  _418 = (long unsigned int) _417;
  _419 = _418 * 4;
  __tmp$_M_cur_420 = __tmp$_M_first_414 + _419;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_420
  pretmp_2172 = (long int) __tmp$_M_node_413;
  pretmp_2173 = (long int) __tmp$_M_node_387;
  pretmp_2174 = pretmp_2172 - pretmp_2173;
  pretmp_2176 = pretmp_2174 /[ex] 8;
  pretmp_2178 = pretmp_2176 + -1;
  pretmp_2180 = pretmp_2178 * 128;
  pretmp_2182 = (long int) __tmp$_M_first_414;

  <bb 18>:
  # __tmp$_M_cur_2259 = PHI <__tmp$_M_cur_402(123), __tmp$_M_cur_420(17)>
  # __tmp$_M_first_2258 = PHI <__tmp$_M_first_385(123), __tmp$_M_first_414(17)>
  # __tmp$_M_last_2256 = PHI <__tmp$_M_last_386(123), __tmp$_M_last_415(17)>
  # __tmp$_M_node_2255 = PHI <__tmp$_M_node_387(123), __tmp$_M_node_413(17)>
  # prephitmp_2181 = PHI <-128(123), pretmp_2180(17)>
  # prephitmp_2183 = PHI <_395(123), pretmp_2182(17)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_2255
  # DEBUG __tmp$_M_last => __tmp$_M_last_2256
  # DEBUG __tmp$_M_first => __tmp$_M_first_2258
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_2259
  # DEBUG this => &__start_n
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  # DEBUG D#679 => &this_4(D)->D.43590
  # DEBUG this => D#679
  # DEBUG this => &D.47960
  # DEBUG __x => &__new_start
  # DEBUG this => &D.47959
  # DEBUG __x => &__start_n
  # DEBUG D#680 => &this_4(D)->D.43590._M_impl._M_start
  # DEBUG this => &D.47958
  # DEBUG __x => D#680
  # DEBUG __first => &D.47958
  # DEBUG __last => &D.47959
  # DEBUG __result => &D.47960
  # DEBUG __alloc => D#676
  # DEBUG D#675 => D#676
  # DEBUG this => &D.70453
  # DEBUG __x => &D.47960
  # DEBUG this => &D.70454
  # DEBUG __x => &D.47959
  # DEBUG this => &D.70455
  # DEBUG __x => &D.47958
  # DEBUG D#674 => D#675
  # DEBUG __first => &D.70455
  # DEBUG __last => &D.70454
  # DEBUG __result => &D.70453
  # DEBUG D.70473 => D#674
  # DEBUG this => &D.70480
  # DEBUG __x => &D.70453
  # DEBUG this => &D.70481
  # DEBUG __x => &D.70454
  # DEBUG this => &D.70482
  # DEBUG __x => &D.70455
  # DEBUG __first => &D.70482
  # DEBUG __last => &D.70481
  # DEBUG __result => &D.70480
  # DEBUG __assignable => 1
  # DEBUG this => &D.70497
  # DEBUG __x => &D.70480
  # DEBUG this => &D.70496
  # DEBUG __x => &D.70481
  # DEBUG this => &D.70495
  # DEBUG __x => &D.70482
  # DEBUG __first => &D.70495
  # DEBUG __last => &D.70496
  # DEBUG __result => &D.70497
  # DEBUG this => &D.70509
  # DEBUG __x => &D.70497
  # DEBUG this => &D.70508
  # DEBUG __x => &D.70496
  # DEBUG this => &D.70507
  # DEBUG __x => &D.70495
  # DEBUG __first => &D.70507
  # DEBUG __last => &D.70508
  # DEBUG __result => &D.70509
  # DEBUG this => &D.70529
  # DEBUG __x => &D.70509
  # DEBUG this => NULL
  # DEBUG __x => &D.70508
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70528
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.70507
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70527
  # DEBUG __x => NULL
  # DEBUG __first => &D.70527
  # DEBUG __last => &D.70528
  # DEBUG __result => &D.70529
  # DEBUG this => NULL
  # DEBUG __x => &D.70529
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70553
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.70528
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70552
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.70527
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70551
  # DEBUG __x => NULL
  # DEBUG __first => &D.70551
  # DEBUG __last => &D.70552
  # DEBUG __result => &D.70553
  # DEBUG __simple => 0
  # DEBUG this => &D.70569
  # DEBUG __x => &D.70553
  # DEBUG this => &D.70568
  # DEBUG __x => &D.70552
  # DEBUG this => &D.70567
  # DEBUG __x => &D.70551
  # DEBUG __first => &D.70567
  # DEBUG __last => &D.70568
  # DEBUG __result => &D.70569
  # DEBUG __x => &D.70568
  # DEBUG __y => &D.70567
  # DEBUG __size => 4
  _502 = (long int) __tmp$_M_cur_2259;
  _505 = _502 - prephitmp_2183;
  _506 = _505 /[ex] 4;
  _507 = _506 + prephitmp_2181;
  _509 = (long int) __tmp$_M_last_386;
  _512 = _509 - _393;
  _513 = _512 /[ex] 4;
  __n_514 = _507 + _513;
  # DEBUG __n => __n_514
  # DEBUG __n => __n_514
  if (__n_514 <= 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG this => &D.70452
  # DEBUG __x => &D.70569
  D.70567 ={v} {CLOBBER};
  D.70568 ={v} {CLOBBER};
  D.70569 ={v} {CLOBBER};
  D.70551 ={v} {CLOBBER};
  D.70552 ={v} {CLOBBER};
  D.70553 ={v} {CLOBBER};
  D.70527 ={v} {CLOBBER};
  D.70528 ={v} {CLOBBER};
  D.70529 ={v} {CLOBBER};
  D.70507 ={v} {CLOBBER};
  D.70508 ={v} {CLOBBER};
  D.70509 ={v} {CLOBBER};
  D.70495 ={v} {CLOBBER};
  D.70496 ={v} {CLOBBER};
  D.70497 ={v} {CLOBBER};
  D.70482 ={v} {CLOBBER};
  D.70481 ={v} {CLOBBER};
  D.70480 ={v} {CLOBBER};
  D.70455 ={v} {CLOBBER};
  D.70454 ={v} {CLOBBER};
  D.70453 ={v} {CLOBBER};
  D.47958 ={v} {CLOBBER};
  D.47959 ={v} {CLOBBER};
  D.47960 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_91;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_87;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_2267;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_2266;
  # DEBUG this => &D.47972
  # DEBUG __x => &__old_start
  # DEBUG this => &D.47971
  # DEBUG __x => __pos_6(D)
  _28 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _133 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _134 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _135 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG this => &D.47970
  # DEBUG __x => &__start_n
  # DEBUG __first => &D.47970
  # DEBUG __last => &D.47971
  # DEBUG __result => &D.47972
  # DEBUG this => &D.70441
  # DEBUG __x => &D.47972
  D.70441._M_cur = prephitmp_1563;
  D.70441._M_first = prephitmp_1565;
  D.70441._M_last = prephitmp_1567;
  D.70441._M_node = prephitmp_1569;
  # DEBUG this => &D.70440
  # DEBUG __x => &D.47971
  D.70440._M_cur = _28;
  D.70440._M_first = _133;
  D.70440._M_last = _134;
  D.70440._M_node = _135;
  # DEBUG this => &D.70439
  # DEBUG __x => &D.47970
  D.70439._M_cur = __tmp$_M_cur_2259;
  D.70439._M_first = __tmp$_M_first_2258;
  D.70439._M_last = __tmp$_M_last_2256;
  D.70439._M_node = __tmp$_M_node_2255;
  D.70438 = std::copy<int> (D.70439, D.70440, &D.70441); [return slot optimization]
  D.70439 ={v} {CLOBBER};
  D.70440 ={v} {CLOBBER};
  D.70441 ={v} {CLOBBER};
  D.47970 ={v} {CLOBBER};
  D.47971 ={v} {CLOBBER};
  D.47972 ={v} {CLOBBER};
  # DEBUG this => __pos_6(D)
  # DEBUG __n => __n.120_284
  # DEBUG this => &__tmp
  # DEBUG __x => __pos_6(D)
  _353 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  __tmp$_M_first_354 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  # DEBUG __tmp$_M_first => __tmp$_M_first_354
  __tmp$_M_last_355 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  # DEBUG __tmp$_M_last => __tmp$_M_last_355
  __tmp$_M_node_356 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __tmp$_M_node => __tmp$_M_node_356
  # DEBUG this => &__tmp
  # DEBUG __n => __n.120_284
  # DEBUG this => &__tmp
  # DEBUG __n => _289
  _538 = (long int) _353;
  _540 = (long int) __tmp$_M_first_354;
  _541 = _538 - _540;
  _542 = _541 /[ex] 4;
  __offset_543 = _542 - __n.120_284;
  # DEBUG __offset => __offset_543
  # DEBUG __size => 4
  _480 = (unsigned long) __offset_543;
  if (_480 <= 127)
    goto <bb 125>;
  else
    goto <bb 126>;

  <bb 20>:

  <bb 21>:
  # __n_1477 = PHI <__n_514(20), __n_524(26)>
  # SR.1780_2253 = PHI <_22(20), SR.1780_2248(26)>
  # SR.1781_2247 = PHI <__tmp$_M_last_386(20), SR.1781_2245(26)>
  # SR.1782_2152 = PHI <__tmp$_M_node_387(20), SR.1782_2151(26)>
  # SR.1783_2149 = PHI <__new_start$_M_cur_91(20), SR.1783_2148(26)>
  # SR.1784_2147 = PHI <__new_start$_M_last_2267(20), SR.1784_2146(26)>
  # SR.1785_2144 = PHI <__new_start$_M_node_2266(20), SR.1785_2143(26)>
  # DEBUG __n => __n_1477
  # DEBUG D#100 => &D.70569
  # DEBUG this => D#100
  # DEBUG D#100 => &D.70567
  # DEBUG this => D#100
  _518 = *SR.1780_2253;
  *SR.1783_2149 = _518;
  # DEBUG this => &D.70567
  _519 = SR.1780_2253 + 4;
  if (_519 == SR.1781_2247)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG this => &D.70567
  _530 = SR.1782_2152 + 8;
  # DEBUG this => &D.70567
  # DEBUG __new_node => _530
  _531 = MEM[(int * *)SR.1782_2152 + 8B];
  # DEBUG __size => 4
  _532 = _531 + 512;

  <bb 23>:
  # SR.1780_2248 = PHI <_519(21), _531(22)>
  # SR.1781_2245 = PHI <SR.1781_2247(21), _532(22)>
  # SR.1782_2151 = PHI <SR.1782_2152(21), _530(22)>
  # DEBUG this => &D.70569
  _522 = SR.1783_2149 + 4;
  if (_522 == SR.1784_2147)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG this => &D.70569
  _534 = SR.1785_2144 + 8;
  # DEBUG this => &D.70569
  # DEBUG __new_node => _534
  _535 = MEM[(int * *)SR.1785_2144 + 8B];
  # DEBUG __size => 4
  _536 = _535 + 512;

  <bb 25>:
  # SR.1783_2148 = PHI <_522(23), _535(24)>
  # SR.1784_2146 = PHI <SR.1784_2147(23), _536(24)>
  # SR.1785_2143 = PHI <SR.1785_2144(23), _534(24)>
  __n_524 = __n_1477 + -1;
  # DEBUG __n => __n_524
  # DEBUG __n => __n_524
  if (__n_524 <= 0)
    goto <bb 19>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 21>;

  <bb 27>:
  # DEBUG __size => 4
  iftmp.117_548 = __offset_543 >> 7;
  goto <bb 29>;

  <bb 28>:
  _550 = ~_480;
  # DEBUG __size => 4
  _551 = _550 >> 7;
  _552 = (long int) _551;
  iftmp.117_553 = ~_552;

  <bb 29>:
  # iftmp.117_555 = PHI <iftmp.117_548(27), iftmp.117_553(28)>
  # DEBUG __node_offset => iftmp.117_555
  __node_offset.119_556 = (long unsigned int) iftmp.117_555;
  _557 = __node_offset.119_556 * 8;
  __tmp$_M_node_558 = __tmp$_M_node_356 + _557;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_558
  # DEBUG __tmp$_M_node => __tmp$_M_node_558
  __tmp$_M_first_559 = *__tmp$_M_node_558;
  # DEBUG __tmp$_M_first => __tmp$_M_first_559
  # DEBUG __size => 4
  __tmp$_M_last_560 = __tmp$_M_first_559 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_560
  # DEBUG __size => 4
  _561 = iftmp.117_555 * 128;
  _562 = __offset_543 - _561;
  _563 = (long unsigned int) _562;
  _564 = _563 * 4;
  __tmp$_M_cur_565 = __tmp$_M_first_559 + _564;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_565

  <bb 30>:
  # __tmp$_M_cur_2264 = PHI <__tmp$_M_cur_547(125), __tmp$_M_cur_565(29)>
  # __tmp$_M_first_2263 = PHI <__tmp$_M_first_354(125), __tmp$_M_first_559(29)>
  # __tmp$_M_last_2262 = PHI <__tmp$_M_last_355(125), __tmp$_M_last_560(29)>
  # __tmp$_M_node_2261 = PHI <__tmp$_M_node_356(125), __tmp$_M_node_558(29)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_2261
  # DEBUG __tmp$_M_last => __tmp$_M_last_2262
  # DEBUG __tmp$_M_first => __tmp$_M_first_2263
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_2264
  # DEBUG this => &D.47974
  # DEBUG __x => NULL
  D.47974._M_cur = __tmp$_M_cur_2264;
  D.47974._M_first = __tmp$_M_first_2263;
  D.47974._M_last = __tmp$_M_last_2262;
  D.47974._M_node = __tmp$_M_node_2261;
  __tmp ={v} {CLOBBER};
  std::copy<int> (__first, __last, &D.47974);
  D.47974 ={v} {CLOBBER};
  __start_n ={v} {CLOBBER};
  goto <bb 53>;

  <bb 31>:
  __mid = __first;
  __mid$_M_cur_1508 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __mid$_M_cur => __mid$_M_cur_1508
  __mid$_M_first_17 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __mid$_M_first => __mid$_M_first_17
  __mid$_M_last_16 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __mid$_M_last => __mid$_M_last_16
  __mid$_M_node_1505 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __mid$_M_node => __mid$_M_node_1505
  _38 = __n.120_284 - _125;
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  # DEBUG __d => _38
  # DEBUG D#630 => &__mid
  # DEBUG D.61175 => D#630
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  # DEBUG this => &__mid
  # DEBUG __n => _38
  _582 = (long int) __mid$_M_cur_1508;
  _584 = (long int) __mid$_M_first_17;
  _585 = _582 - _584;
  _586 = _585 /[ex] 4;
  __offset_587 = _38 + _586;
  # DEBUG __offset => __offset_587
  # DEBUG __size => 4
  _481 = (unsigned long) __offset_587;
  if (_481 <= 127)
    goto <bb 127>;
  else
    goto <bb 128>;

  <bb 32>:
  # DEBUG __size => 4
  iftmp.107_592 = __offset_587 >> 7;
  goto <bb 34>;

  <bb 33>:
  _594 = ~_481;
  # DEBUG __size => 4
  _595 = _594 >> 7;
  _596 = (long int) _595;
  iftmp.107_597 = ~_596;

  <bb 34>:
  # iftmp.107_599 = PHI <iftmp.107_592(32), iftmp.107_597(33)>
  # DEBUG __node_offset => iftmp.107_599
  __node_offset.109_600 = (long unsigned int) iftmp.107_599;
  _601 = __node_offset.109_600 * 8;
  __mid$_M_node_602 = __mid$_M_node_1505 + _601;
  # DEBUG this => &__mid
  # DEBUG __new_node => __mid$_M_node_602
  # DEBUG __mid$_M_node => __mid$_M_node_602
  __mid$_M_first_603 = *__mid$_M_node_602;
  # DEBUG __mid$_M_first => __mid$_M_first_603
  # DEBUG __size => 4
  __mid$_M_last_604 = __mid$_M_first_603 + 512;
  # DEBUG __mid$_M_last => __mid$_M_last_604
  # DEBUG __size => 4
  _605 = iftmp.107_599 * 128;
  _606 = __offset_587 - _605;
  _607 = (long unsigned int) _606;
  _608 = _607 * 4;
  __mid$_M_cur_609 = __mid$_M_first_603 + _608;
  # DEBUG __mid$_M_cur => __mid$_M_cur_609
  pretmp_2154 = (long int) __mid$_M_node_602;
  pretmp_2155 = (long int) __mid$_M_node_1505;
  pretmp_2156 = pretmp_2154 - pretmp_2155;
  pretmp_2162 = pretmp_2156 /[ex] 8;
  pretmp_2164 = pretmp_2162 + -1;
  pretmp_2166 = pretmp_2164 * 128;
  pretmp_2168 = (long int) __mid$_M_first_603;

  <bb 35>:
  # __mid$_M_cur_2090 = PHI <__mid$_M_cur_591(127), __mid$_M_cur_609(34)>
  # __mid$_M_first_2073 = PHI <__mid$_M_first_17(127), __mid$_M_first_603(34)>
  # __mid$_M_last_2067 = PHI <__mid$_M_last_16(127), __mid$_M_last_604(34)>
  # __mid$_M_node_1915 = PHI <__mid$_M_node_1505(127), __mid$_M_node_602(34)>
  # prephitmp_2167 = PHI <-128(127), pretmp_2166(34)>
  # prephitmp_2169 = PHI <_584(127), pretmp_2168(34)>
  # DEBUG __mid$_M_node => __mid$_M_node_1915
  # DEBUG __mid$_M_last => __mid$_M_last_2067
  # DEBUG __mid$_M_first => __mid$_M_first_2073
  # DEBUG __mid$_M_cur => __mid$_M_cur_2090
  # DEBUG D#681 => &this_4(D)->D.43590
  # DEBUG this => D#681
  # DEBUG D#1091 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG this => &D.47994
  # DEBUG __x => &__new_start
  # DEBUG this => &D.47991
  # DEBUG __x => __pos_6(D)
  # DEBUG D#682 => &this_4(D)->D.43590._M_impl._M_start
  # DEBUG this => &D.47990
  # DEBUG __x => D#682
  _48 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  _146 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  _147 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __first1 => &D.47990
  # DEBUG __last1 => &D.47991
  # DEBUG __first2$_M_cur => __mid$_M_cur_1508
  # DEBUG __first2$_M_first => __mid$_M_first_17
  # DEBUG __first2$_M_last => __mid$_M_last_16
  # DEBUG __first2$_M_node => __mid$_M_node_1505
  # DEBUG __last2$_M_cur => __mid$_M_cur_2090
  # DEBUG __last2$_M_first => __mid$_M_first_2073
  # DEBUG __last2$_M_last => __mid$_M_last_2067
  # DEBUG __last2$_M_node => __mid$_M_node_1915
  # DEBUG __result => &D.47994
  # DEBUG __alloc => D#1091
  # DEBUG this => &D.70621
  # DEBUG __x => &D.47994
  # DEBUG this => &D.70620
  # DEBUG __x => &D.47991
  # DEBUG this => &D.70619
  # DEBUG __x => &D.47990
  # DEBUG D#676 => D#1091
  # DEBUG __first => &D.70619
  # DEBUG __last => &D.70620
  # DEBUG __result => &D.70621
  # DEBUG __alloc => D#676
  # DEBUG D#675 => D#676
  # DEBUG this => &D.70653
  # DEBUG __x => &D.70621
  # DEBUG this => &D.70654
  # DEBUG __x => &D.70620
  # DEBUG this => &D.70655
  # DEBUG __x => &D.70619
  # DEBUG D#674 => D#675
  # DEBUG __first => &D.70655
  # DEBUG __last => &D.70654
  # DEBUG __result => &D.70653
  # DEBUG D.70659 => D#674
  # DEBUG this => &D.70666
  # DEBUG __x => &D.70653
  # DEBUG this => &D.70667
  # DEBUG __x => &D.70654
  # DEBUG this => &D.70668
  # DEBUG __x => &D.70655
  # DEBUG __first => &D.70668
  # DEBUG __last => &D.70667
  # DEBUG __result => &D.70666
  # DEBUG __assignable => 1
  # DEBUG this => &D.70683
  # DEBUG __x => &D.70666
  # DEBUG this => &D.70682
  # DEBUG __x => &D.70667
  # DEBUG this => &D.70681
  # DEBUG __x => &D.70668
  # DEBUG __first => &D.70681
  # DEBUG __last => &D.70682
  # DEBUG __result => &D.70683
  # DEBUG this => &D.70695
  # DEBUG __x => &D.70683
  # DEBUG this => &D.70694
  # DEBUG __x => &D.70682
  # DEBUG this => &D.70693
  # DEBUG __x => &D.70681
  # DEBUG __first => &D.70693
  # DEBUG __last => &D.70694
  # DEBUG __result => &D.70695
  # DEBUG this => &D.70715
  # DEBUG __x => &D.70695
  # DEBUG this => NULL
  # DEBUG __x => &D.70694
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70714
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.70693
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70713
  # DEBUG __x => NULL
  # DEBUG __first => &D.70713
  # DEBUG __last => &D.70714
  # DEBUG __result => &D.70715
  # DEBUG this => NULL
  # DEBUG __x => &D.70715
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70739
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.70714
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70738
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.70713
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70737
  # DEBUG __x => NULL
  # DEBUG __first => &D.70737
  # DEBUG __last => &D.70738
  # DEBUG __result => &D.70739
  # DEBUG __simple => 0
  # DEBUG this => &D.70755
  # DEBUG __x => &D.70739
  # DEBUG this => &D.70754
  # DEBUG __x => &D.70738
  # DEBUG this => &D.70753
  # DEBUG __x => &D.70737
  # DEBUG __first => &D.70753
  # DEBUG __last => &D.70754
  # DEBUG __result => &D.70755
  # DEBUG __x => &D.70754
  # DEBUG __y => &D.70753
  # DEBUG __size => 4
  _698 = (long int) SR.1747_92;
  _700 = (long int) _147;
  _701 = _698 - _700;
  _702 = _701 /[ex] 8;
  _703 = _702 + -1;
  _704 = _703 * 128;
  _706 = (long int) SR.1744_1511;
  _708 = (long int) SR.1745_1496;
  _709 = _706 - _708;
  _710 = _709 /[ex] 4;
  _711 = _704 + _710;
  _713 = (long int) _146;
  _715 = (long int) _48;
  _716 = _713 - _715;
  _717 = _716 /[ex] 4;
  __n_718 = _711 + _717;
  # DEBUG __n => __n_718
  # DEBUG __n => __n_718
  if (__n_718 <= 0)
    goto <bb 44>;
  else
    goto <bb 36>;

  <bb 36>:

  <bb 37>:
  # __n_1896 = PHI <__n_718(36), __n_728(43)>
  # SR.1818_2140 = PHI <_48(36), SR.1818_2139(43)>
  # SR.1819_2138 = PHI <_146(36), SR.1819_2136(43)>
  # SR.1820_2131 = PHI <_147(36), SR.1820_2130(43)>
  # SR.1821_2129 = PHI <__new_start$_M_cur_91(36), SR.1821_2128(43)>
  # SR.1822_2112 = PHI <__new_start$_M_last_2267(36), SR.1822_2107(43)>
  # SR.1823_2105 = PHI <__new_start$_M_node_2266(36), SR.1823_2104(43)>
  # DEBUG __n => __n_1896
  # DEBUG D#100 => &D.70755
  # DEBUG this => D#100
  # DEBUG D#100 => &D.70753
  # DEBUG this => D#100
  _722 = *SR.1818_2140;
  *SR.1821_2129 = _722;
  # DEBUG this => &D.70753
  _723 = SR.1818_2140 + 4;
  if (_723 == SR.1819_2138)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG this => &D.70753
  _734 = SR.1820_2131 + 8;
  # DEBUG this => &D.70753
  # DEBUG __new_node => _734
  _735 = MEM[(int * *)SR.1820_2131 + 8B];
  # DEBUG __size => 4
  _736 = _735 + 512;

  <bb 39>:
  # SR.1818_2139 = PHI <_723(37), _735(38)>
  # SR.1819_2136 = PHI <SR.1819_2138(37), _736(38)>
  # SR.1820_2130 = PHI <SR.1820_2131(37), _734(38)>
  # DEBUG this => &D.70755
  _726 = SR.1821_2129 + 4;
  if (_726 == SR.1822_2112)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # DEBUG this => &D.70755
  _738 = SR.1823_2105 + 8;
  # DEBUG this => &D.70755
  # DEBUG __new_node => _738
  _739 = MEM[(int * *)SR.1823_2105 + 8B];
  # DEBUG __size => 4
  _740 = _739 + 512;

  <bb 41>:
  # SR.1821_2128 = PHI <_726(39), _739(40)>
  # SR.1822_2107 = PHI <SR.1822_2112(39), _740(40)>
  # SR.1823_2104 = PHI <SR.1823_2105(39), _738(40)>
  __n_728 = __n_1896 + -1;
  # DEBUG __n => __n_728
  # DEBUG __n => __n_728
  if (__n_728 <= 0)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # SR.1823_1973 = PHI <SR.1823_2104(41)>
  # SR.1822_1972 = PHI <SR.1822_2107(41)>
  # SR.1821_1971 = PHI <SR.1821_2128(41)>
  goto <bb 44>;

  <bb 43>:
  goto <bb 37>;

  <bb 44>:
  # SR.1821_2113 = PHI <SR.1821_1971(42), __new_start$_M_cur_91(35)>
  # SR.1822_2106 = PHI <SR.1822_1972(42), __new_start$_M_last_2267(35)>
  # SR.1823_2099 = PHI <SR.1823_1973(42), __new_start$_M_node_2266(35)>
  # DEBUG this => &__mid
  # DEBUG __x => &D.70755
  D.70753 ={v} {CLOBBER};
  D.70754 ={v} {CLOBBER};
  D.70755 ={v} {CLOBBER};
  D.70737 ={v} {CLOBBER};
  D.70738 ={v} {CLOBBER};
  D.70739 ={v} {CLOBBER};
  D.70713 ={v} {CLOBBER};
  D.70714 ={v} {CLOBBER};
  D.70715 ={v} {CLOBBER};
  D.70693 ={v} {CLOBBER};
  D.70694 ={v} {CLOBBER};
  D.70695 ={v} {CLOBBER};
  D.70681 ={v} {CLOBBER};
  D.70682 ={v} {CLOBBER};
  D.70683 ={v} {CLOBBER};
  D.70668 ={v} {CLOBBER};
  D.70667 ={v} {CLOBBER};
  D.70666 ={v} {CLOBBER};
  D.70655 ={v} {CLOBBER};
  D.70654 ={v} {CLOBBER};
  D.70653 ={v} {CLOBBER};
  D.70619 ={v} {CLOBBER};
  D.70620 ={v} {CLOBBER};
  D.70621 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG __x => &__mid
  # DEBUG D#603 => D#1091
  # DEBUG __first$_M_cur => __mid$_M_cur_1508
  # DEBUG __first$_M_first => __mid$_M_first_17
  # DEBUG __first$_M_last => __mid$_M_last_16
  # DEBUG __first$_M_node => __mid$_M_node_1505
  # DEBUG __last$_M_cur => __mid$_M_cur_2090
  # DEBUG __last$_M_first => __mid$_M_first_2073
  # DEBUG __last$_M_last => __mid$_M_last_2067
  # DEBUG __last$_M_node => __mid$_M_node_1915
  # DEBUG __result => NULL
  # DEBUG D.70611 => D#603
  # DEBUG this => &D.70618
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __mid$_M_cur_1508
  # DEBUG __first$_M_first => __mid$_M_first_17
  # DEBUG __first$_M_last => __mid$_M_last_16
  # DEBUG __first$_M_node => __mid$_M_node_1505
  # DEBUG __last$_M_cur => __mid$_M_cur_2090
  # DEBUG __last$_M_first => __mid$_M_first_2073
  # DEBUG __last$_M_last => __mid$_M_last_2067
  # DEBUG __last$_M_node => __mid$_M_node_1915
  # DEBUG __result => &D.70618
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.70618
  # DEBUG __first$_M_cur => __mid$_M_cur_1508
  # DEBUG __first$_M_first => __mid$_M_first_17
  # DEBUG __first$_M_last => __mid$_M_last_16
  # DEBUG __first$_M_node => __mid$_M_node_1505
  # DEBUG __last$_M_cur => __mid$_M_cur_2090
  # DEBUG __last$_M_first => __mid$_M_first_2073
  # DEBUG __last$_M_last => __mid$_M_last_2067
  # DEBUG __last$_M_node => __mid$_M_node_1915
  # DEBUG __result => NULL
  # DEBUG this => &D.70642
  # DEBUG __x => NULL
  # DEBUG __first => __mid$_M_cur_1508
  # DEBUG __first$8 => __mid$_M_first_17
  # DEBUG __first$16 => __mid$_M_last_16
  # DEBUG __first$24 => __mid$_M_node_1505
  # DEBUG __last => __mid$_M_cur_2090
  # DEBUG __last$8 => __mid$_M_first_2073
  # DEBUG __last$_M_last => __mid$_M_last_2067
  # DEBUG __last$24 => __mid$_M_node_1915
  # DEBUG __result => &D.70642
  # DEBUG this => &D.70794
  # DEBUG __x => &D.70642
  # DEBUG __it => __mid$_M_cur_2090
  # DEBUG __it$8 => __mid$_M_first_2073
  # DEBUG D#1090 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#1090
  # DEBUG __it$24 => __mid$_M_node_1915
  # DEBUG __it$_M_cur => __mid$_M_cur_2090
  # DEBUG __it$_M_first => __mid$_M_first_2073
  # DEBUG __it$_M_last => D#1090
  # DEBUG __it$_M_node => __mid$_M_node_1915
  # DEBUG __it => __mid$_M_cur_1508
  # DEBUG __it$8 => __mid$_M_first_17
  # DEBUG __it$16 => __mid$_M_last_16
  # DEBUG __it$24 => __mid$_M_node_1505
  # DEBUG __it$_M_cur => __mid$_M_cur_1508
  # DEBUG __it$_M_first => __mid$_M_first_17
  # DEBUG __it$_M_last => __mid$_M_last_16
  # DEBUG __it$_M_node => __mid$_M_node_1505
  # DEBUG __result => &D.70794
  # DEBUG this => NULL
  # DEBUG __x => &D.70794
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __mid$_M_cur_2090
  # DEBUG __it$8 => __mid$_M_first_2073
  # DEBUG __it$16 => D#1090
  # DEBUG __it$24 => __mid$_M_node_1915
  # DEBUG __it$_M_cur => __mid$_M_cur_2090
  # DEBUG __it$_M_first => __mid$_M_first_2073
  # DEBUG __it$_M_last => D#1090
  # DEBUG __it$_M_node => __mid$_M_node_1915
  # DEBUG __it => __mid$_M_cur_1508
  # DEBUG __it$8 => __mid$_M_first_17
  # DEBUG __it$16 => __mid$_M_last_16
  # DEBUG __it$24 => __mid$_M_node_1505
  # DEBUG __it$_M_cur => __mid$_M_cur_1508
  # DEBUG __it$_M_first => __mid$_M_first_17
  # DEBUG __it$_M_last => __mid$_M_last_16
  # DEBUG __it$_M_node => __mid$_M_node_1505
  # DEBUG __first => __mid$_M_cur_1508
  # DEBUG __first$8 => __mid$_M_first_17
  # DEBUG __first$16 => __mid$_M_last_16
  # DEBUG __first$24 => __mid$_M_node_1505
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.70819
  # DEBUG __x => NULL
  # DEBUG __first => __mid$_M_cur_1508
  # DEBUG __first$_M_first => __mid$_M_first_17
  # DEBUG __first$_M_last => __mid$_M_last_16
  # DEBUG __first$_M_node => __mid$_M_node_1505
  # DEBUG __result => &D.70819
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _774 = (long int) __mid$_M_cur_2090;
  _777 = _774 - prephitmp_2169;
  _778 = _777 /[ex] 4;
  _779 = _778 + prephitmp_2167;
  _781 = (long int) __mid$_M_last_16;
  _784 = _781 - _582;
  _785 = _784 /[ex] 4;
  __n_786 = _779 + _785;
  # DEBUG __n => __n_786
  # DEBUG __n => __n_786
  if (__n_786 <= 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG this => &D.70617
  # DEBUG __x => &D.70819
  D.70819 ={v} {CLOBBER};
  D.70794 ={v} {CLOBBER};
  D.70642 ={v} {CLOBBER};
  D.70618 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.47990 ={v} {CLOBBER};
  D.47991 ={v} {CLOBBER};
  D.47994 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_91;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_87;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_2267;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_2266;
  # DEBUG this => &D.47998
  # DEBUG __x => &__old_start
  D.47998._M_cur = prephitmp_1563;
  D.47998._M_first = prephitmp_1565;
  D.47998._M_last = prephitmp_1567;
  D.47998._M_node = prephitmp_1569;
  MEM[(struct _Deque_iterator *)&__mid] = __mid$_M_cur_2090;
  MEM[(struct _Deque_iterator *)&__mid + 8B] = __mid$_M_first_2073;
  MEM[(struct _Deque_iterator *)&__mid + 16B] = __mid$_M_last_2067;
  MEM[(struct _Deque_iterator *)&__mid + 24B] = __mid$_M_node_1915;
  std::copy<int> (__mid, __last, &D.47998);
  D.47998 ={v} {CLOBBER};
  # DEBUG D#1097 => {CLOBBER}
  # DEBUG __mid$_M_cur => D#1097
  # DEBUG D#1098 => {CLOBBER}
  # DEBUG __mid$_M_first => D#1098
  # DEBUG D#1099 => {CLOBBER}
  # DEBUG __mid$_M_last => D#1099
  # DEBUG D#1100 => {CLOBBER}
  # DEBUG __mid$_M_node => D#1100
  goto <bb 53>;

  <bb 46>:

  <bb 47>:
  # __n_1492 = PHI <__n_786(46), __n_796(52)>
  # SR.1835_2098 = PHI <SR.1821_2113(46), SR.1835_2096(52)>
  # SR.1836_2094 = PHI <SR.1822_2106(46), SR.1836_2093(52)>
  # SR.1837_2092 = PHI <SR.1823_2099(46), SR.1837_2091(52)>
  # __first_2088 = PHI <__mid$_M_cur_1508(46), __first_2077(52)>
  # __first$_M_last_2075 = PHI <__mid$_M_last_16(46), __first$_M_last_2074(52)>
  # __first$_M_node_2071 = PHI <__mid$_M_node_1505(46), __first$_M_node_2069(52)>
  # DEBUG __first$_M_node => __first$_M_node_2071
  # DEBUG __first$_M_last => __first$_M_last_2075
  # DEBUG __first => __first_2088
  # DEBUG __n => __n_1492
  # DEBUG D#100 => &D.70819
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _790 = MEM[(const int &)__first_2088];
  *SR.1835_2098 = _790;
  # DEBUG this => &__first
  __first_791 = __first_2088 + 4;
  # DEBUG __first => __first_791
  if (__first_791 == __first$_M_last_2075)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG this => &__first
  __first$_M_node_802 = __first$_M_node_2071 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_802
  # DEBUG __first$_M_node => __first$_M_node_802
  __first_803 = MEM[(int * *)__first$_M_node_2071 + 8B];
  # DEBUG __size => 4
  __first$_M_last_804 = __first_803 + 512;
  # DEBUG __first$_M_last => __first$_M_last_804
  # DEBUG __first => __first_803

  <bb 49>:
  # __first_2077 = PHI <__first_791(47), __first_803(48)>
  # __first$_M_last_2074 = PHI <__first$_M_last_2075(47), __first$_M_last_804(48)>
  # __first$_M_node_2069 = PHI <__first$_M_node_2071(47), __first$_M_node_802(48)>
  # DEBUG __first$_M_node => __first$_M_node_2069
  # DEBUG __first$_M_last => __first$_M_last_2074
  # DEBUG __first => __first_2077
  # DEBUG this => &D.70819
  _794 = SR.1835_2098 + 4;
  if (_794 == SR.1836_2094)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  # DEBUG this => &D.70819
  _806 = SR.1837_2092 + 8;
  # DEBUG this => &D.70819
  # DEBUG __new_node => _806
  _807 = MEM[(int * *)SR.1837_2092 + 8B];
  # DEBUG __size => 4
  _808 = _807 + 512;

  <bb 51>:
  # SR.1835_2096 = PHI <_794(49), _807(50)>
  # SR.1836_2093 = PHI <SR.1836_2094(49), _808(50)>
  # SR.1837_2091 = PHI <SR.1837_2092(49), _806(50)>
  __n_796 = __n_1492 + -1;
  # DEBUG __n => __n_796
  # DEBUG __n => __n_796
  if (__n_796 <= 0)
    goto <bb 45>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 47>;

  <bb 53>:
  # DEBUG D#1101 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#1101
  # DEBUG D#1102 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#1102
  # DEBUG D#1103 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#1103
  # DEBUG D#1104 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#1104
  return;

  <bb 54>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _57 = this_4(D)->D.43590._M_impl._M_finish._M_last;
  _819 = (long int) _57;
  _822 = _819 - _96;
  _823 = _822 /[ex] 4;
  _824 = _823 + -1;
  __vacancies_825 = (const size_type) _824;
  # DEBUG __vacancies => __vacancies_825
  if (__n_11(D) > __vacancies_825)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  _826 = __n_11(D) - __vacancies_825;
  std::deque<int, std::allocator<int> >::_M_new_elements_at_back (this_4(D), _826);
  pretmp_1130 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  pretmp_1132 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  pretmp_1134 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  pretmp_1171 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  pretmp_2002 = (long int) pretmp_1130;
  pretmp_2004 = (long int) pretmp_1132;
  pretmp_2061 = pretmp_2002 - pretmp_2004;
  pretmp_1142 = pretmp_2061 /[ex] 4;

  <bb 56>:
  # prephitmp_1131 = PHI <_95(54), pretmp_1130(55)>
  # prephitmp_1133 = PHI <_97(54), pretmp_1132(55)>
  # prephitmp_1135 = PHI <_57(54), pretmp_1134(55)>
  # prephitmp_1176 = PHI <_80(54), pretmp_1171(55)>
  # prephitmp_1147 = PHI <_100(54), pretmp_1142(55)>
  __n.131_827 = (long int) __n_11(D);
  # DEBUG D#1088 => &this_4(D)->D.43590._M_impl._M_finish
  # DEBUG this => D#1088
  # DEBUG __n => __n.131_827
  # DEBUG this => &__tmp
  # DEBUG __x => D#1088
  # DEBUG D#1117 => MEM[(const struct iterator &)this_4(D) + 48]._M_cur
  # DEBUG D#1116 => MEM[(const struct iterator &)this_4(D) + 48]._M_first
  # DEBUG __tmp$_M_first => D#1116
  # DEBUG D#1115 => MEM[(const struct iterator &)this_4(D) + 48]._M_last
  # DEBUG __tmp$_M_last => D#1115
  # DEBUG D#1114 => MEM[(const struct iterator &)this_4(D) + 48]._M_node
  # DEBUG __tmp$_M_node => D#1114
  # DEBUG this => &__tmp
  # DEBUG __n => __n.131_827
  __offset_843 = __n.131_827 + prephitmp_1147;
  # DEBUG __offset => __offset_843
  # DEBUG __size => 4
  _478 = (unsigned long) __offset_843;
  if (_478 <= 127)
    goto <bb 129>;
  else
    goto <bb 130>;

  <bb 57>:
  # DEBUG __size => 4
  iftmp.117_848 = __offset_843 >> 7;
  goto <bb 59>;

  <bb 58>:
  _850 = ~_478;
  # DEBUG __size => 4
  _851 = _850 >> 7;
  _852 = (long int) _851;
  iftmp.117_853 = ~_852;

  <bb 59>:
  # iftmp.117_855 = PHI <iftmp.117_848(57), iftmp.117_853(58)>
  # DEBUG __node_offset => iftmp.117_855
  __node_offset.119_856 = (long unsigned int) iftmp.117_855;
  _857 = __node_offset.119_856 * 8;
  __new_finish$_M_node_858 = prephitmp_1176 + _857;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_finish$_M_node_858
  # DEBUG __tmp$_M_node => __new_finish$_M_node_858
  __new_finish$_M_first_859 = *__new_finish$_M_node_858;
  # DEBUG __tmp$_M_first => __new_finish$_M_first_859
  # DEBUG __size => 4
  __new_finish$_M_last_860 = __new_finish$_M_first_859 + 512;
  # DEBUG __tmp$_M_last => __new_finish$_M_last_860
  # DEBUG __size => 4
  _861 = iftmp.117_855 * 128;
  _862 = __offset_843 - _861;
  _863 = (long unsigned int) _862;
  _864 = _863 * 4;
  __new_finish$_M_cur_865 = __new_finish$_M_first_859 + _864;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_865

  <bb 60>:
  # __new_finish$_M_cur_2051 = PHI <__new_finish$_M_cur_847(129), __new_finish$_M_cur_865(59)>
  # __new_finish$_M_first_2050 = PHI <prephitmp_1133(129), __new_finish$_M_first_859(59)>
  # __new_finish$_M_last_2049 = PHI <prephitmp_1135(129), __new_finish$_M_last_860(59)>
  # __new_finish$_M_node_2047 = PHI <prephitmp_1176(129), __new_finish$_M_node_858(59)>
  # DEBUG __tmp$_M_node => __new_finish$_M_node_2047
  # DEBUG __tmp$_M_last => __new_finish$_M_last_2049
  # DEBUG __tmp$_M_first => __new_finish$_M_first_2050
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_2051
  # DEBUG this => &__new_finish
  # DEBUG __x => NULL
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_2051
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_2050
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_2049
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_2047
  __tmp ={v} {CLOBBER};
  # DEBUG D#683 => &this_4(D)->D.43590._M_impl._M_finish
  # DEBUG this => &__old_finish
  # DEBUG __x => D#683
  # DEBUG __old_finish$_M_cur => D#1117
  # DEBUG __old_finish$_M_first => D#1116
  # DEBUG __old_finish$_M_last => D#1115
  # DEBUG __old_finish$_M_node => D#1114
  __elemsafter_55 = _102 - _125;
  # DEBUG __elemsafter => __elemsafter_55
  # DEBUG D#1089 => &this_4(D)->D.43590._M_impl._M_finish
  # DEBUG this => D#1089
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __x => D#1089
  # DEBUG __tmp$_M_first => D#1116
  # DEBUG __tmp$_M_last => D#1115
  # DEBUG __tmp$_M_node => D#1114
  # DEBUG this => &__tmp
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __n => -__elemsafter_55
  __offset_872 = prephitmp_1147 - __elemsafter_55;
  # DEBUG __offset => __offset_872
  # DEBUG __size => 4
  _479 = (unsigned long) __offset_872;
  if (_479 <= 127)
    goto <bb 132>;
  else
    goto <bb 131>;

  <bb 61>:
  # DEBUG __size => 4
  iftmp.117_877 = __offset_872 >> 7;
  goto <bb 63>;

  <bb 62>:
  _879 = ~_479;
  # DEBUG __size => 4
  _880 = _879 >> 7;
  _881 = (long int) _880;
  iftmp.117_882 = ~_881;

  <bb 63>:
  # iftmp.117_884 = PHI <iftmp.117_877(61), iftmp.117_882(62)>
  # DEBUG __node_offset => iftmp.117_884
  __node_offset.119_885 = (long unsigned int) iftmp.117_884;
  _886 = __node_offset.119_885 * 8;
  SR.1759_887 = prephitmp_1176 + _886;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.1759_887
  # DEBUG __tmp$_M_node => SR.1759_887
  SR.1757_888 = *SR.1759_887;
  # DEBUG __tmp$_M_first => SR.1757_888
  # DEBUG __size => 4
  SR.1758_889 = SR.1757_888 + 512;
  # DEBUG __tmp$_M_last => SR.1758_889
  # DEBUG __size => 4
  _890 = iftmp.117_884 * 128;
  _891 = __offset_872 - _890;
  _892 = (long unsigned int) _891;
  _893 = _892 * 4;
  SR.1756_894 = SR.1757_888 + _893;
  # DEBUG __tmp$_M_cur => SR.1756_894

  <bb 64>:
  # SR.1756_2068 = PHI <SR.1756_876(132), SR.1756_894(63)>
  # SR.1757_2059 = PHI <prephitmp_1133(132), SR.1757_888(63)>
  # SR.1758_2053 = PHI <prephitmp_1135(132), SR.1758_889(63)>
  # SR.1759_2052 = PHI <prephitmp_1176(132), SR.1759_887(63)>
  # DEBUG __tmp$_M_node => SR.1759_2052
  # DEBUG __tmp$_M_last => SR.1758_2053
  # DEBUG __tmp$_M_first => SR.1757_2059
  # DEBUG __tmp$_M_cur => SR.1756_2068
  # DEBUG this => &D.48005
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.1756_2068;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.1757_2059;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.1758_2053;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.1759_2052;
  if (__elemsafter_55 > __n.131_827)
    goto <bb 65>;
  else
    goto <bb 97>;

  <bb 65>:
  # DEBUG this => D#1089
  # DEBUG __n => __n.131_827
  # DEBUG this => &__tmp
  # DEBUG __x => D#1089
  _64 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  SR.1850_918 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  # DEBUG __tmp$_M_first => SR.1850_918
  SR.1851_919 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  # DEBUG __tmp$_M_last => SR.1851_919
  SR.1852_920 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG __tmp$_M_node => SR.1852_920
  # DEBUG this => &__tmp
  # DEBUG __n => __n.131_827
  # DEBUG this => &__tmp
  # DEBUG __n => -__n.131_827
  _927 = (long int) _64;
  _929 = (long int) SR.1850_918;
  _930 = _927 - _929;
  _931 = _930 /[ex] 4;
  __offset_932 = _931 - __n.131_827;
  # DEBUG __offset => __offset_932
  # DEBUG __size => 4
  _18 = (unsigned long) __offset_932;
  if (_18 <= 127)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 66>:
  # DEBUG __size => 4
  iftmp.117_937 = __offset_932 >> 7;
  goto <bb 68>;

  <bb 67>:
  _939 = ~_18;
  # DEBUG __size => 4
  _940 = _939 >> 7;
  _941 = (long int) _940;
  iftmp.117_942 = ~_941;

  <bb 68>:
  # iftmp.117_944 = PHI <iftmp.117_937(66), iftmp.117_942(67)>
  # DEBUG __node_offset => iftmp.117_944
  __node_offset.119_945 = (long unsigned int) iftmp.117_944;
  _946 = __node_offset.119_945 * 8;
  SR.1852_947 = SR.1852_920 + _946;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.1852_947
  # DEBUG __tmp$_M_node => SR.1852_947
  SR.1850_948 = *SR.1852_947;
  # DEBUG __tmp$_M_first => SR.1850_948
  # DEBUG __size => 4
  SR.1851_949 = SR.1850_948 + 512;
  # DEBUG __tmp$_M_last => SR.1851_949
  # DEBUG __size => 4
  _950 = iftmp.117_944 * 128;
  _951 = __offset_932 - _950;
  _952 = (long unsigned int) _951;
  _953 = _952 * 4;
  SR.1849_954 = SR.1850_948 + _953;
  # DEBUG __tmp$_M_cur => SR.1849_954
  pretmp_193 = (long int) SR.1852_920;
  pretmp_192 = (long int) SR.1852_947;
  pretmp_191 = pretmp_193 - pretmp_192;
  pretmp_190 = pretmp_191 /[ex] 8;
  pretmp_1449 = pretmp_190 + -1;
  pretmp_1442 = pretmp_1449 * 128;
  pretmp_1467 = (long int) SR.1850_948;

  <bb 69>:
  # SR.1849_2015 = PHI <SR.1849_936(133), SR.1849_954(68)>
  # SR.1850_2014 = PHI <SR.1850_918(133), SR.1850_948(68)>
  # SR.1851_2012 = PHI <SR.1851_919(133), SR.1851_949(68)>
  # SR.1852_2011 = PHI <SR.1852_920(133), SR.1852_947(68)>
  # prephitmp_1468 = PHI <-128(133), pretmp_1442(68)>
  # prephitmp_1465 = PHI <_929(133), pretmp_1467(68)>
  # prephitmp_2187 = PHI <pretmp_2185(133), pretmp_192(68)>
  # DEBUG __tmp$_M_node => SR.1852_2011
  # DEBUG __tmp$_M_last => SR.1851_2012
  # DEBUG __tmp$_M_first => SR.1850_2014
  # DEBUG __tmp$_M_cur => SR.1849_2015
  # DEBUG this => &__finish_n
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  # DEBUG D#684 => &this_4(D)->D.43590
  # DEBUG this => D#684
  # DEBUG D#685 => &this_4(D)->D.43590._M_impl._M_finish
  # DEBUG this => &D.48010
  # DEBUG __x => D#685
  # DEBUG D#686 => &this_4(D)->D.43590._M_impl._M_finish
  # DEBUG this => &D.48009
  # DEBUG __x => D#686
  # DEBUG this => &D.48008
  # DEBUG __x => &__finish_n
  # DEBUG __first => &D.48008
  # DEBUG __last => &D.48009
  # DEBUG __result => &D.48010
  # DEBUG __alloc => D#676
  # DEBUG D#675 => D#676
  # DEBUG this => &D.70896
  # DEBUG __x => &D.48010
  # DEBUG this => &D.70897
  # DEBUG __x => &D.48009
  # DEBUG this => &D.70898
  # DEBUG __x => &D.48008
  # DEBUG D#674 => D#675
  # DEBUG __first => &D.70898
  # DEBUG __last => &D.70897
  # DEBUG __result => &D.70896
  # DEBUG D.70918 => D#674
  # DEBUG this => &D.70925
  # DEBUG __x => &D.70896
  # DEBUG this => &D.70926
  # DEBUG __x => &D.70897
  # DEBUG this => &D.70927
  # DEBUG __x => &D.70898
  # DEBUG __first => &D.70927
  # DEBUG __last => &D.70926
  # DEBUG __result => &D.70925
  # DEBUG __assignable => 1
  # DEBUG this => &D.70942
  # DEBUG __x => &D.70925
  # DEBUG this => &D.70941
  # DEBUG __x => &D.70926
  # DEBUG this => &D.70940
  # DEBUG __x => &D.70927
  # DEBUG __first => &D.70940
  # DEBUG __last => &D.70941
  # DEBUG __result => &D.70942
  # DEBUG this => &D.70954
  # DEBUG __x => &D.70942
  # DEBUG this => &D.70953
  # DEBUG __x => &D.70941
  # DEBUG this => &D.70952
  # DEBUG __x => &D.70940
  # DEBUG __first => &D.70952
  # DEBUG __last => &D.70953
  # DEBUG __result => &D.70954
  # DEBUG this => &D.70974
  # DEBUG __x => &D.70954
  # DEBUG this => NULL
  # DEBUG __x => &D.70953
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70973
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.70952
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70972
  # DEBUG __x => NULL
  # DEBUG __first => &D.70972
  # DEBUG __last => &D.70973
  # DEBUG __result => &D.70974
  # DEBUG this => NULL
  # DEBUG __x => &D.70974
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70998
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.70973
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70997
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.70972
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.70996
  # DEBUG __x => NULL
  # DEBUG __first => &D.70996
  # DEBUG __last => &D.70997
  # DEBUG __result => &D.70998
  # DEBUG __simple => 0
  # DEBUG this => &D.71014
  # DEBUG __x => &D.70998
  # DEBUG this => &D.71013
  # DEBUG __x => &D.70997
  # DEBUG this => &D.71012
  # DEBUG __x => &D.70996
  # DEBUG __first => &D.71012
  # DEBUG __last => &D.71013
  # DEBUG __result => &D.71014
  # DEBUG __x => &D.71013
  # DEBUG __y => &D.71012
  # DEBUG __size => 4
  _1041 = _931 + prephitmp_1468;
  _1043 = (long int) SR.1851_2012;
  _1045 = (long int) SR.1849_2015;
  _1046 = _1043 - _1045;
  _1047 = _1046 /[ex] 4;
  __n_1048 = _1041 + _1047;
  # DEBUG __n => __n_1048
  # DEBUG __n => __n_1048
  if (__n_1048 <= 0)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  # DEBUG this => &D.70895
  # DEBUG __x => &D.71014
  D.71012 ={v} {CLOBBER};
  D.71013 ={v} {CLOBBER};
  D.71014 ={v} {CLOBBER};
  D.70996 ={v} {CLOBBER};
  D.70997 ={v} {CLOBBER};
  D.70998 ={v} {CLOBBER};
  D.70972 ={v} {CLOBBER};
  D.70973 ={v} {CLOBBER};
  D.70974 ={v} {CLOBBER};
  D.70952 ={v} {CLOBBER};
  D.70953 ={v} {CLOBBER};
  D.70954 ={v} {CLOBBER};
  D.70940 ={v} {CLOBBER};
  D.70941 ={v} {CLOBBER};
  D.70942 ={v} {CLOBBER};
  D.70927 ={v} {CLOBBER};
  D.70926 ={v} {CLOBBER};
  D.70925 ={v} {CLOBBER};
  D.70898 ={v} {CLOBBER};
  D.70897 ={v} {CLOBBER};
  D.70896 ={v} {CLOBBER};
  D.48008 ={v} {CLOBBER};
  D.48009 ={v} {CLOBBER};
  D.48010 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_2051;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_2050;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_2049;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_2047;
  # DEBUG this => &D.48022
  # DEBUG __x => &__old_finish
  # DEBUG this => &D.48021
  # DEBUG __x => &__finish_n
  # DEBUG this => &D.48020
  # DEBUG __x => __pos_6(D)
  _75 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _161 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _162 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __first => &D.48020
  # DEBUG __last => &D.48021
  # DEBUG __result => &D.48022
  # DEBUG this => &D.70884
  # DEBUG __x => &D.48022
  # DEBUG this => &D.70883
  # DEBUG __x => &D.48021
  # DEBUG this => &D.70882
  # DEBUG __x => &D.48020
  # DEBUG __last$_M_cur => SR.1849_2015
  # DEBUG __last$_M_first => SR.1850_2014
  # DEBUG __last$_M_last => SR.1851_2012
  # DEBUG __last$_M_node => SR.1852_2011
  # DEBUG __result => &D.70884
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _1074 = (long int) _162;
  _1075 = prephitmp_2187 - _1074;
  _1076 = _1075 /[ex] 8;
  _1077 = _1076 + -1;
  _1078 = _1077 * 128;
  _1083 = _1045 - prephitmp_1465;
  _1084 = _1083 /[ex] 4;
  _1085 = _1078 + _1084;
  _1087 = (long int) _161;
  _1089 = (long int) _75;
  _1090 = _1087 - _1089;
  _1091 = _1090 /[ex] 4;
  __len_1092 = _1085 + _1091;
  # DEBUG __len => __len_1092
  if (__len_1092 <= 0)
    goto <bb 96>;
  else
    goto <bb 78>;

  <bb 71>:

  <bb 72>:
  # __n_1911 = PHI <__n_1048(71), __n_1058(77)>
  # SR.1860_2009 = PHI <SR.1849_2015(71), SR.1860_2008(77)>
  # SR.1861_2006 = PHI <SR.1851_2012(71), SR.1861_2001(77)>
  # SR.1862_2000 = PHI <SR.1852_2011(71), SR.1862_1998(77)>
  # SR.1863_1919 = PHI <_64(71), SR.1863_1918(77)>
  # SR.1864_1917 = PHI <SR.1851_919(71), SR.1864_1916(77)>
  # SR.1865_1914 = PHI <SR.1852_920(71), SR.1865_1913(77)>
  # DEBUG __n => __n_1911
  # DEBUG D#100 => &D.71014
  # DEBUG this => D#100
  # DEBUG D#100 => &D.71012
  # DEBUG this => D#100
  _1052 = *SR.1860_2009;
  *SR.1863_1919 = _1052;
  # DEBUG this => &D.71012
  _1053 = SR.1860_2009 + 4;
  if (_1053 == SR.1861_2006)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # DEBUG this => &D.71012
  _1064 = SR.1862_2000 + 8;
  # DEBUG this => &D.71012
  # DEBUG __new_node => _1064
  _1065 = MEM[(int * *)SR.1862_2000 + 8B];
  # DEBUG __size => 4
  _1066 = _1065 + 512;

  <bb 74>:
  # SR.1860_2008 = PHI <_1053(72), _1065(73)>
  # SR.1861_2001 = PHI <SR.1861_2006(72), _1066(73)>
  # SR.1862_1998 = PHI <SR.1862_2000(72), _1064(73)>
  # DEBUG this => &D.71014
  _1056 = SR.1863_1919 + 4;
  if (_1056 == SR.1864_1917)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  # DEBUG this => &D.71014
  _1068 = SR.1865_1914 + 8;
  # DEBUG this => &D.71014
  # DEBUG __new_node => _1068
  _1069 = MEM[(int * *)SR.1865_1914 + 8B];
  # DEBUG __size => 4
  _1070 = _1069 + 512;

  <bb 76>:
  # SR.1863_1918 = PHI <_1056(74), _1069(75)>
  # SR.1864_1916 = PHI <SR.1864_1917(74), _1070(75)>
  # SR.1865_1913 = PHI <SR.1865_1914(74), _1068(75)>
  __n_1058 = __n_1911 + -1;
  # DEBUG __n => __n_1058
  # DEBUG __n => __n_1058
  if (__n_1058 <= 0)
    goto <bb 70>;
  else
    goto <bb 77>;

  <bb 77>:
  goto <bb 72>;

  <bb 78>:

  <bb 79>:
  # __len.137_1507 = PHI <__len_1092(78), __len_1125(94)>
  # __rend_2046 = PHI <prephitmp_1131(78), SR.1853_68(94)>
  # SR.1854_2020 = PHI <prephitmp_1133(78), SR.1854_2019(94)>
  # SR.1855_2017 = PHI <prephitmp_1176(78), SR.1855_2016(94)>
  # SR.1849_1912 = PHI <SR.1849_2015(78), SR.1849_59(94)>
  # SR.1850_58 = PHI <SR.1850_2014(78), SR.1850_1909(94)>
  # SR.1852_1908 = PHI <SR.1852_2011(78), SR.1852_1907(94)>
  # DEBUG __last$_M_node => SR.1852_1908
  # DEBUG __last$_M_first => SR.1850_58
  # DEBUG __last$_M_cur => SR.1849_1912
  _1095 = (long int) SR.1849_1912;
  _1097 = (long int) SR.1850_58;
  _1098 = _1095 - _1097;
  __llen_1099 = _1098 /[ex] 4;
  # DEBUG __llen => __llen_1099
  # DEBUG __lend => SR.1849_1912
  _1101 = (long int) __rend_2046;
  _1103 = (long int) SR.1854_2020;
  _1104 = _1101 - _1103;
  __rlen_1105 = _1104 /[ex] 4;
  # DEBUG __rlen => __rlen_1105
  # DEBUG __rend => __rend_2046
  if (__llen_1099 == 0)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  # DEBUG __size => 4
  # DEBUG __llen => 128
  _1107 = MEM[(int * *)SR.1852_1908 + -8B];
  SR.1849_1108 = _1107 + 512;
  # DEBUG __lend => SR.1849_1108
  pretmp_1535 = (long int) SR.1849_1108;

  <bb 81>:
  # SR.1849_1121 = PHI <SR.1849_1912(79), SR.1849_1108(80)>
  # __llen_2086 = PHI <__llen_1099(79), 128(80)>
  # prephitmp_1534 = PHI <_1095(79), pretmp_1535(80)>
  # DEBUG __llen => __llen_2086
  # DEBUG __lend => SR.1849_1121
  if (__rlen_1105 == 0)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  # DEBUG __size => 4
  # DEBUG __rlen => 128
  _1110 = MEM[(int * *)SR.1855_2017 + -8B];
  __rend_1111 = _1110 + 512;
  # DEBUG __rend => __rend_1111

  <bb 83>:
  # __rend_1123 = PHI <__rend_2046(81), __rend_1111(82)>
  # __rlen_2081 = PHI <__rlen_1105(81), 128(82)>
  # DEBUG __rlen => __rlen_2081
  # DEBUG __rend => __rend_1123
  # DEBUG __a => &__llen
  # DEBUG __b => &__rlen
  _1448 = MIN_EXPR <__len.137_1507, __llen_2086>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_493 = MIN_EXPR <_1448, __rlen_2081>;
  # DEBUG __clen => D#1085
  __clen.146_1118 = (long unsigned int) __clen_493;
  _1119 = __clen.146_1118 * 4;
  _1120 = -_1119;
  _1122 = SR.1849_1121 + _1120;
  # DEBUG __first => _1122
  # DEBUG __last => SR.1849_1121
  # DEBUG __result => __rend_1123
  # DEBUG __it => SR.1849_1121
  # DEBUG __it => SR.1849_1121
  # DEBUG __it => _1122
  # DEBUG __it => _1122
  # DEBUG __first => _1122
  # DEBUG __last => SR.1849_1121
  # DEBUG __result => __rend_1123
  # DEBUG __it => __rend_1123
  # DEBUG __it => __rend_1123
  # DEBUG __it => SR.1849_1121
  # DEBUG __it => SR.1849_1121
  # DEBUG __it => _1122
  # DEBUG __it => _1122
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __first.79_1189 = (long int) _1122;
  _1190 = prephitmp_1534 - __first.79_1189;
  _Num_1191 = _1190 /[ex] 4;
  # DEBUG _Num => _Num_1191
  if (_Num_1191 != 0)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  _1192 = (long unsigned int) _1190;
  _1193 = -_1192;
  _1194 = __rend_1123 + _1193;
  __builtin_memmove (_1194, _1122, _1192);

  <bb 85>:
  # DEBUG this => &__last
  # DEBUG __n => D#1085
  _1124 = -__clen_493;
  # DEBUG this => &__last
  # DEBUG __n => _1124
  __offset_1165 = __llen_1099 - __clen_493;
  # DEBUG __offset => __offset_1165
  # DEBUG __size => 4
  _501 = (unsigned long) __offset_1165;
  if (_501 <= 127)
    goto <bb 135>;
  else
    goto <bb 136>;

  <bb 86>:
  # DEBUG __size => 4
  iftmp.107_1170 = __offset_1165 >> 7;
  goto <bb 88>;

  <bb 87>:
  _1172 = ~_501;
  # DEBUG __size => 4
  _1173 = _1172 >> 7;
  _1174 = (long int) _1173;
  iftmp.107_1175 = ~_1174;

  <bb 88>:
  # iftmp.107_1177 = PHI <iftmp.107_1170(86), iftmp.107_1175(87)>
  # DEBUG __node_offset => iftmp.107_1177
  __node_offset.109_1178 = (long unsigned int) iftmp.107_1177;
  _1179 = __node_offset.109_1178 * 8;
  SR.1852_1180 = SR.1852_1908 + _1179;
  # DEBUG this => &__last
  # DEBUG __new_node => SR.1852_1180
  # DEBUG __last$_M_node => SR.1852_1180
  SR.1850_1181 = *SR.1852_1180;
  # DEBUG __last$_M_first => SR.1850_1181
  # DEBUG __size => 4
  # DEBUG __size => 4
  _1183 = iftmp.107_1177 * 128;
  _1184 = __offset_1165 - _1183;
  _1185 = (long unsigned int) _1184;
  _1186 = _1185 * 4;
  SR.1849_1187 = SR.1850_1181 + _1186;
  # DEBUG __last$_M_cur => SR.1849_1187

  <bb 89>:
  # SR.1849_59 = PHI <SR.1849_1169(135), SR.1849_1187(88)>
  # SR.1850_1909 = PHI <SR.1850_58(135), SR.1850_1181(88)>
  # SR.1852_1907 = PHI <SR.1852_1908(135), SR.1852_1180(88)>
  # DEBUG __last$_M_node => SR.1852_1907
  # DEBUG __last$_M_first => SR.1850_1909
  # DEBUG __last$_M_cur => SR.1849_59
  # DEBUG this => &D.70884
  # DEBUG __n => D#1085
  # DEBUG this => &D.70884
  # DEBUG __n => _1124
  __offset_1136 = __rlen_1105 - __clen_493;
  # DEBUG __offset => __offset_1136
  # DEBUG __size => 4
  _495 = (unsigned long) __offset_1136;
  if (_495 <= 127)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 90>:
  # DEBUG __size => 4
  iftmp.117_1141 = __offset_1136 >> 7;
  goto <bb 92>;

  <bb 91>:
  _1143 = ~_495;
  # DEBUG __size => 4
  _1144 = _1143 >> 7;
  _1145 = (long int) _1144;
  iftmp.117_1146 = ~_1145;

  <bb 92>:
  # iftmp.117_1148 = PHI <iftmp.117_1141(90), iftmp.117_1146(91)>
  # DEBUG __node_offset => iftmp.117_1148
  __node_offset.119_1149 = (long unsigned int) iftmp.117_1148;
  _1150 = __node_offset.119_1149 * 8;
  _1151 = SR.1855_2017 + _1150;
  # DEBUG this => &D.70884
  # DEBUG __new_node => _1151
  _1152 = *_1151;
  # DEBUG __size => 4
  # DEBUG __size => 4
  _1154 = iftmp.117_1148 * 128;
  _1155 = __offset_1136 - _1154;
  _1156 = (long unsigned int) _1155;
  _1157 = _1156 * 4;
  _1158 = _1152 + _1157;

  <bb 93>:
  # SR.1853_68 = PHI <_1140(137), _1158(92)>
  # SR.1854_2019 = PHI <SR.1854_2020(137), _1152(92)>
  # SR.1855_2016 = PHI <SR.1855_2017(137), _1151(92)>
  __len_1125 = __len.137_1507 - __clen_493;
  # DEBUG __len => __len_1125
  # DEBUG D#1094 => {CLOBBER}
  # DEBUG __llen => D#1094
  # DEBUG D#1095 => {CLOBBER}
  # DEBUG __rlen => D#1095
  if (__len_1125 <= 0)
    goto <bb 95>;
  else
    goto <bb 94>;

  <bb 94>:
  goto <bb 79>;

  <bb 95>:
  pretmp_1531 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  pretmp_1529 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  pretmp_1527 = MEM[(const struct iterator &)__pos_6(D)]._M_node;

  <bb 96>:
  # prephitmp_1530 = PHI <pretmp_1531(95), _75(70)>
  # prephitmp_1528 = PHI <pretmp_1529(95), _161(70)>
  # prephitmp_1526 = PHI <pretmp_1527(95), _162(70)>
  # DEBUG this => &D.70881
  # DEBUG __x => &D.70884
  # DEBUG D#1096 => {CLOBBER}
  # DEBUG __len => D#1096
  D.70882 ={v} {CLOBBER};
  D.70884 ={v} {CLOBBER};
  D.48020 ={v} {CLOBBER};
  D.48021 ={v} {CLOBBER};
  D.48022 ={v} {CLOBBER};
  # DEBUG this => &D.48026
  # DEBUG __x => __pos_6(D)
  D.48026._M_cur = prephitmp_1530;
  _157 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.48026._M_first = _157;
  D.48026._M_last = prephitmp_1528;
  D.48026._M_node = prephitmp_1526;
  std::copy<int> (__first, __last, &D.48026);
  D.48026 ={v} {CLOBBER};
  __finish_n ={v} {CLOBBER};
  goto <bb 53>;

  <bb 97>:
  __mid = __first;
  __mid$_M_cur_211 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __mid$_M_cur => __mid$_M_cur_211
  __mid$_M_first_212 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __mid$_M_first => __mid$_M_first_212
  __mid$_M_last_149 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __mid$_M_last => __mid$_M_last_149
  __mid$_M_node_213 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __mid$_M_node => __mid$_M_node_213
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  # DEBUG __d => __elemsafter_55
  # DEBUG D#630 => &__mid
  # DEBUG D.61175 => D#630
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__mid
  # DEBUG __n => __elemsafter_55
  _1214 = (long int) __mid$_M_cur_211;
  _1216 = (long int) __mid$_M_first_212;
  _1217 = _1214 - _1216;
  _1218 = _1217 /[ex] 4;
  __offset_1219 = __elemsafter_55 + _1218;
  # DEBUG __offset => __offset_1219
  # DEBUG __size => 4
  _492 = (unsigned long) __offset_1219;
  if (_492 <= 127)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 98>:
  # DEBUG __size => 4
  iftmp.107_1224 = __offset_1219 >> 7;
  goto <bb 100>;

  <bb 99>:
  _1226 = ~_492;
  # DEBUG __size => 4
  _1227 = _1226 >> 7;
  _1228 = (long int) _1227;
  iftmp.107_1229 = ~_1228;

  <bb 100>:
  # iftmp.107_1231 = PHI <iftmp.107_1224(98), iftmp.107_1229(99)>
  # DEBUG __node_offset => iftmp.107_1231
  __node_offset.109_1232 = (long unsigned int) iftmp.107_1231;
  _1233 = __node_offset.109_1232 * 8;
  __mid$_M_node_1234 = __mid$_M_node_213 + _1233;
  # DEBUG this => &__mid
  # DEBUG __new_node => __mid$_M_node_1234
  # DEBUG __mid$_M_node => __mid$_M_node_1234
  __mid$_M_first_1235 = *__mid$_M_node_1234;
  # DEBUG __mid$_M_first => __mid$_M_first_1235
  # DEBUG __size => 4
  __mid$_M_last_1236 = __mid$_M_first_1235 + 512;
  # DEBUG __mid$_M_last => __mid$_M_last_1236
  # DEBUG __size => 4
  _1237 = iftmp.107_1231 * 128;
  _1238 = __offset_1219 - _1237;
  _1239 = (long unsigned int) _1238;
  _1240 = _1239 * 4;
  __mid$_M_cur_1241 = __mid$_M_first_1235 + _1240;
  # DEBUG __mid$_M_cur => __mid$_M_cur_1241

  <bb 101>:
  # __mid$_M_cur_1900 = PHI <__mid$_M_cur_1223(139), __mid$_M_cur_1241(100)>
  # __mid$_M_first_1885 = PHI <__mid$_M_first_212(139), __mid$_M_first_1235(100)>
  # __mid$_M_last_1673 = PHI <__mid$_M_last_149(139), __mid$_M_last_1236(100)>
  # __mid$_M_node_1662 = PHI <__mid$_M_node_213(139), __mid$_M_node_1234(100)>
  # DEBUG __mid$_M_node => __mid$_M_node_1662
  # DEBUG __mid$_M_last => __mid$_M_last_1673
  # DEBUG __mid$_M_first => __mid$_M_first_1885
  # DEBUG __mid$_M_cur => __mid$_M_cur_1900
  # DEBUG D#687 => &this_4(D)->D.43590
  # DEBUG this => D#687
  # DEBUG D#1093 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG D#688 => &this_4(D)->D.43590._M_impl._M_finish
  # DEBUG this => &D.48041
  # DEBUG __x => D#688
  _82 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  _179 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  _180 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  _181 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG D#689 => &this_4(D)->D.43590._M_impl._M_finish
  # DEBUG this => &D.48040
  # DEBUG __x => D#689
  # DEBUG this => &D.48039
  # DEBUG __x => __pos_6(D)
  # DEBUG __first1$_M_cur => __mid$_M_cur_1900
  # DEBUG __first1$_M_first => __mid$_M_first_1885
  # DEBUG __first1$_M_last => __mid$_M_last_1673
  # DEBUG __first1$_M_node => __mid$_M_node_1662
  __last_1684 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last1$_M_cur => __last_1684
  __last$8_1685 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last1$_M_first => __last$8_1685
  # DEBUG D#1113 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last1$_M_last => D#1113
  __last$24_1687 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last1$_M_node => __last$24_1687
  # DEBUG __first2 => &D.48039
  # DEBUG __last2 => &D.48040
  # DEBUG __result => &D.48041
  # DEBUG __alloc => D#1093
  # DEBUG this => NULL
  # DEBUG __x => &D.48041
  # DEBUG D#603 => D#1093
  # DEBUG __first$_M_cur => __mid$_M_cur_1900
  # DEBUG __first$_M_first => __mid$_M_first_1885
  # DEBUG __first$_M_last => __mid$_M_last_1673
  # DEBUG __first$_M_node => __mid$_M_node_1662
  # DEBUG __last$_M_cur => __last_1684
  # DEBUG __last$_M_first => __last$8_1685
  # DEBUG __last$_M_last => D#1113
  # DEBUG __last$_M_node => __last$24_1687
  # DEBUG __result => NULL
  # DEBUG D.71098 => D#603
  # DEBUG this => &D.71111
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __mid$_M_cur_1900
  # DEBUG __first$_M_first => __mid$_M_first_1885
  # DEBUG __first$_M_last => __mid$_M_last_1673
  # DEBUG __first$_M_node => __mid$_M_node_1662
  # DEBUG __last$_M_cur => __last_1684
  # DEBUG __last$_M_first => __last$8_1685
  # DEBUG __last$_M_last => D#1113
  # DEBUG __last$_M_node => __last$24_1687
  # DEBUG __result => &D.71111
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.71111
  # DEBUG __first$_M_cur => __mid$_M_cur_1900
  # DEBUG __first$_M_first => __mid$_M_first_1885
  # DEBUG __first$_M_last => __mid$_M_last_1673
  # DEBUG __first$_M_node => __mid$_M_node_1662
  # DEBUG __last$_M_cur => __last_1684
  # DEBUG __last$_M_first => __last$8_1685
  # DEBUG __last$_M_last => D#1113
  # DEBUG __last$_M_node => __last$24_1687
  # DEBUG __result => NULL
  # DEBUG this => &D.71148
  # DEBUG __x => NULL
  # DEBUG __first => __mid$_M_cur_1900
  # DEBUG __first$8 => __mid$_M_first_1885
  # DEBUG __first$16 => __mid$_M_last_1673
  # DEBUG __first$24 => __mid$_M_node_1662
  # DEBUG __last => __last_1684
  # DEBUG __last$8 => __last$8_1685
  # DEBUG __last$_M_last => D#1113
  # DEBUG __last$24 => __last$24_1687
  # DEBUG __result => &D.71148
  # DEBUG this => &D.71168
  # DEBUG __x => &D.71148
  # DEBUG __it => __last_1684
  # DEBUG __it$8 => __last$8_1685
  # DEBUG D#1092 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#1092
  # DEBUG __it$24 => __last$24_1687
  # DEBUG __it$_M_cur => __last_1684
  # DEBUG __it$_M_first => __last$8_1685
  # DEBUG __it$_M_last => D#1092
  # DEBUG __it$_M_node => __last$24_1687
  # DEBUG __it => __mid$_M_cur_1900
  # DEBUG __it$8 => __mid$_M_first_1885
  # DEBUG __it$16 => __mid$_M_last_1673
  # DEBUG __it$24 => __mid$_M_node_1662
  # DEBUG __it$_M_cur => __mid$_M_cur_1900
  # DEBUG __it$_M_first => __mid$_M_first_1885
  # DEBUG __it$_M_last => __mid$_M_last_1673
  # DEBUG __it$_M_node => __mid$_M_node_1662
  # DEBUG __result => &D.71168
  # DEBUG this => NULL
  # DEBUG __x => &D.71168
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_1684
  # DEBUG __it$8 => __last$8_1685
  # DEBUG __it$16 => D#1092
  # DEBUG __it$24 => __last$24_1687
  # DEBUG __it$_M_cur => __last_1684
  # DEBUG __it$_M_first => __last$8_1685
  # DEBUG __it$_M_last => D#1092
  # DEBUG __it$_M_node => __last$24_1687
  # DEBUG __it => __mid$_M_cur_1900
  # DEBUG __it$8 => __mid$_M_first_1885
  # DEBUG __it$16 => __mid$_M_last_1673
  # DEBUG __it$24 => __mid$_M_node_1662
  # DEBUG __it$_M_cur => __mid$_M_cur_1900
  # DEBUG __it$_M_first => __mid$_M_first_1885
  # DEBUG __it$_M_last => __mid$_M_last_1673
  # DEBUG __it$_M_node => __mid$_M_node_1662
  # DEBUG __first => __mid$_M_cur_1900
  # DEBUG __first$8 => __mid$_M_first_1885
  # DEBUG __first$16 => __mid$_M_last_1673
  # DEBUG __first$24 => __mid$_M_node_1662
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.71193
  # DEBUG __x => NULL
  # DEBUG __first => __mid$_M_cur_1900
  # DEBUG __first$_M_first => __mid$_M_first_1885
  # DEBUG __first$_M_last => __mid$_M_last_1673
  # DEBUG __first$_M_node => __mid$_M_node_1662
  # DEBUG __result => &D.71193
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _1282 = (long int) __last$24_1687;
  _1284 = (long int) __mid$_M_node_1662;
  _1285 = _1282 - _1284;
  _1286 = _1285 /[ex] 8;
  _1287 = _1286 + -1;
  _1288 = _1287 * 128;
  _1290 = (long int) __last_1684;
  _1292 = (long int) __last$8_1685;
  _1293 = _1290 - _1292;
  _1294 = _1293 /[ex] 4;
  _1295 = _1288 + _1294;
  _1297 = (long int) __mid$_M_last_1673;
  _1299 = (long int) __mid$_M_cur_1900;
  _1300 = _1297 - _1299;
  _1301 = _1300 /[ex] 4;
  __n_1302 = _1295 + _1301;
  # DEBUG __n => __n_1302
  # DEBUG __n => __n_1302
  if (__n_1302 <= 0)
    goto <bb 110>;
  else
    goto <bb 102>;

  <bb 102>:

  <bb 103>:
  # __n_81 = PHI <__n_1302(102), __n_1312(109)>
  # SR.1912_1906 = PHI <_82(102), SR.1912_1904(109)>
  # SR.1913_1902 = PHI <_180(102), SR.1913_1901(109)>
  # SR.1914_1898 = PHI <_181(102), SR.1914_1897(109)>
  # __mid$_M_cur_1893 = PHI <__mid$_M_cur_1900(102), __mid$_M_cur_1892(109)>
  # __mid$_M_last_1891 = PHI <__mid$_M_last_1673(102), __mid$_M_last_1889(109)>
  # __mid$_M_node_1888 = PHI <__mid$_M_node_1662(102), __mid$_M_node_1887(109)>
  # DEBUG __first$_M_node => __mid$_M_node_1888
  # DEBUG __first$_M_last => __mid$_M_last_1891
  # DEBUG __first => __mid$_M_cur_1893
  # DEBUG __n => __n_81
  # DEBUG D#100 => &D.71193
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _1306 = MEM[(const int &)__mid$_M_cur_1893];
  *SR.1912_1906 = _1306;
  # DEBUG this => &__first
  __mid$_M_cur_1307 = __mid$_M_cur_1893 + 4;
  # DEBUG __first => __mid$_M_cur_1307
  if (__mid$_M_cur_1307 == __mid$_M_last_1891)
    goto <bb 104>;
  else
    goto <bb 105>;

  <bb 104>:
  # DEBUG this => &__first
  __mid$_M_node_1318 = __mid$_M_node_1888 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __mid$_M_node_1318
  # DEBUG __first$_M_node => __mid$_M_node_1318
  __mid$_M_cur_1319 = MEM[(int * *)__mid$_M_node_1888 + 8B];
  # DEBUG __size => 4
  __mid$_M_last_1320 = __mid$_M_cur_1319 + 512;
  # DEBUG __first$_M_last => __mid$_M_last_1320
  # DEBUG __first => __mid$_M_cur_1319

  <bb 105>:
  # __mid$_M_cur_1892 = PHI <__mid$_M_cur_1307(103), __mid$_M_cur_1319(104)>
  # __mid$_M_last_1889 = PHI <__mid$_M_last_1891(103), __mid$_M_last_1320(104)>
  # __mid$_M_node_1887 = PHI <__mid$_M_node_1888(103), __mid$_M_node_1318(104)>
  # DEBUG __first$_M_node => __mid$_M_node_1887
  # DEBUG __first$_M_last => __mid$_M_last_1889
  # DEBUG __first => __mid$_M_cur_1892
  # DEBUG this => &D.71193
  _1310 = SR.1912_1906 + 4;
  if (_1310 == SR.1913_1902)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  # DEBUG this => &D.71193
  _1322 = SR.1914_1898 + 8;
  # DEBUG this => &D.71193
  # DEBUG __new_node => _1322
  _1323 = MEM[(int * *)SR.1914_1898 + 8B];
  # DEBUG __size => 4
  _1324 = _1323 + 512;

  <bb 107>:
  # SR.1912_1904 = PHI <_1310(105), _1323(106)>
  # SR.1913_1901 = PHI <SR.1913_1902(105), _1324(106)>
  # SR.1914_1897 = PHI <SR.1914_1898(105), _1322(106)>
  __n_1312 = __n_81 + -1;
  # DEBUG __n => __n_1312
  # DEBUG __n => __n_1312
  if (__n_1312 <= 0)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  # SR.1914_1976 = PHI <SR.1914_1897(107)>
  # SR.1913_1975 = PHI <SR.1913_1901(107)>
  # SR.1912_1974 = PHI <SR.1912_1904(107)>
  goto <bb 110>;

  <bb 109>:
  goto <bb 103>;

  <bb 110>:
  # SR.1912_1903 = PHI <SR.1912_1974(108), _82(101)>
  # SR.1913_1899 = PHI <SR.1913_1975(108), _180(101)>
  # SR.1914_1894 = PHI <SR.1914_1976(108), _181(101)>
  # DEBUG this => &__mid
  # DEBUG __x => &D.71193
  D.71193 ={v} {CLOBBER};
  D.71168 ={v} {CLOBBER};
  D.71148 ={v} {CLOBBER};
  D.71111 ={v} {CLOBBER};
  # DEBUG this => &D.71114
  # DEBUG __x => &__mid
  # DEBUG this => &D.71113
  # DEBUG __x => &D.48040
  # DEBUG this => &D.71112
  # DEBUG __x => &D.48039
  # DEBUG D#676 => D#1093
  # DEBUG __first => &D.71112
  # DEBUG __last => &D.71113
  # DEBUG __result => &D.71114
  # DEBUG __alloc => D#676
  # DEBUG D#675 => D#676
  # DEBUG this => &D.71132
  # DEBUG __x => &D.71114
  # DEBUG this => &D.71133
  # DEBUG __x => &D.71113
  # DEBUG this => &D.71134
  # DEBUG __x => &D.71112
  # DEBUG D#674 => D#675
  # DEBUG __first => &D.71134
  # DEBUG __last => &D.71133
  # DEBUG __result => &D.71132
  # DEBUG D.71216 => D#674
  # DEBUG this => &D.71223
  # DEBUG __x => &D.71132
  # DEBUG this => &D.71224
  # DEBUG __x => &D.71133
  # DEBUG this => &D.71225
  # DEBUG __x => &D.71134
  # DEBUG __first => &D.71225
  # DEBUG __last => &D.71224
  # DEBUG __result => &D.71223
  # DEBUG __assignable => 1
  # DEBUG this => &D.71240
  # DEBUG __x => &D.71223
  # DEBUG this => &D.71239
  # DEBUG __x => &D.71224
  # DEBUG this => &D.71238
  # DEBUG __x => &D.71225
  # DEBUG __first => &D.71238
  # DEBUG __last => &D.71239
  # DEBUG __result => &D.71240
  # DEBUG this => &D.71252
  # DEBUG __x => &D.71240
  # DEBUG this => &D.71251
  # DEBUG __x => &D.71239
  # DEBUG this => &D.71250
  # DEBUG __x => &D.71238
  # DEBUG __first => &D.71250
  # DEBUG __last => &D.71251
  # DEBUG __result => &D.71252
  # DEBUG this => &D.71272
  # DEBUG __x => &D.71252
  # DEBUG this => NULL
  # DEBUG __x => &D.71251
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.71271
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.71250
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.71270
  # DEBUG __x => NULL
  # DEBUG __first => &D.71270
  # DEBUG __last => &D.71271
  # DEBUG __result => &D.71272
  # DEBUG this => NULL
  # DEBUG __x => &D.71272
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.71296
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.71271
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.71295
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.71270
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.71294
  # DEBUG __x => NULL
  # DEBUG __first => &D.71294
  # DEBUG __last => &D.71295
  # DEBUG __result => &D.71296
  # DEBUG __simple => 0
  # DEBUG this => &D.71312
  # DEBUG __x => &D.71296
  # DEBUG this => &D.71311
  # DEBUG __x => &D.71295
  # DEBUG this => &D.71310
  # DEBUG __x => &D.71294
  # DEBUG __first => &D.71310
  # DEBUG __last => &D.71311
  # DEBUG __result => &D.71312
  # DEBUG __x => &D.71311
  # DEBUG __y => &D.71310
  # DEBUG __size => 4
  _1398 = (long int) _181;
  _1400 = (long int) SR.1759_2052;
  _1401 = _1398 - _1400;
  _1402 = _1401 /[ex] 8;
  _1403 = _1402 + -1;
  _1404 = _1403 * 128;
  _1406 = (long int) _82;
  _1408 = (long int) _179;
  _1409 = _1406 - _1408;
  _1410 = _1409 /[ex] 4;
  _1411 = _1404 + _1410;
  _1413 = (long int) SR.1758_2053;
  _1415 = (long int) SR.1756_2068;
  _1416 = _1413 - _1415;
  _1417 = _1416 /[ex] 4;
  __n_1418 = _1411 + _1417;
  # DEBUG __n => __n_1418
  # DEBUG __n => __n_1418
  if (__n_1418 <= 0)
    goto <bb 111>;
  else
    goto <bb 112>;

  <bb 111>:
  # DEBUG this => &D.71110
  # DEBUG __x => &D.71312
  D.71310 ={v} {CLOBBER};
  D.71311 ={v} {CLOBBER};
  D.71312 ={v} {CLOBBER};
  D.71294 ={v} {CLOBBER};
  D.71295 ={v} {CLOBBER};
  D.71296 ={v} {CLOBBER};
  D.71270 ={v} {CLOBBER};
  D.71271 ={v} {CLOBBER};
  D.71272 ={v} {CLOBBER};
  D.71250 ={v} {CLOBBER};
  D.71251 ={v} {CLOBBER};
  D.71252 ={v} {CLOBBER};
  D.71238 ={v} {CLOBBER};
  D.71239 ={v} {CLOBBER};
  D.71240 ={v} {CLOBBER};
  D.71225 ={v} {CLOBBER};
  D.71224 ={v} {CLOBBER};
  D.71223 ={v} {CLOBBER};
  D.71134 ={v} {CLOBBER};
  D.71133 ={v} {CLOBBER};
  D.71132 ={v} {CLOBBER};
  D.71112 ={v} {CLOBBER};
  D.71113 ={v} {CLOBBER};
  D.71114 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.48039 ={v} {CLOBBER};
  D.48040 ={v} {CLOBBER};
  D.48041 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_2051;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_2050;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_2049;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_2047;
  # DEBUG this => &D.48045
  # DEBUG __x => __pos_6(D)
  _172 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  D.48045._M_cur = _172;
  _173 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.48045._M_first = _173;
  _174 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  D.48045._M_last = _174;
  _175 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  D.48045._M_node = _175;
  MEM[(struct _Deque_iterator *)&__mid] = __mid$_M_cur_1900;
  MEM[(struct _Deque_iterator *)&__mid + 8B] = __mid$_M_first_1885;
  MEM[(struct _Deque_iterator *)&__mid + 16B] = __mid$_M_last_1673;
  MEM[(struct _Deque_iterator *)&__mid + 24B] = __mid$_M_node_1662;
  std::copy<int> (__first, __mid, &D.48045);
  D.48045 ={v} {CLOBBER};
  # DEBUG D#1105 => {CLOBBER}
  # DEBUG __mid$_M_cur => D#1105
  # DEBUG D#1106 => {CLOBBER}
  # DEBUG __mid$_M_first => D#1106
  # DEBUG D#1107 => {CLOBBER}
  # DEBUG __mid$_M_last => D#1107
  # DEBUG D#1108 => {CLOBBER}
  # DEBUG __mid$_M_node => D#1108
  goto <bb 53>;

  <bb 112>:

  <bb 113>:
  # __n_252 = PHI <__n_1418(112), __n_1428(118)>
  # SR.1918_1886 = PHI <SR.1756_2068(112), SR.1918_1884(118)>
  # SR.1919_1883 = PHI <SR.1758_2053(112), SR.1919_1882(118)>
  # SR.1920_52 = PHI <SR.1759_2052(112), SR.1920_51(118)>
  # SR.1921_47 = PHI <SR.1912_1903(112), SR.1921_1870(118)>
  # SR.1922_1869 = PHI <SR.1913_1899(112), SR.1922_1867(118)>
  # SR.1923_1866 = PHI <SR.1914_1894(112), SR.1923_1865(118)>
  # DEBUG __n => __n_252
  # DEBUG D#100 => &D.71312
  # DEBUG this => D#100
  # DEBUG D#100 => &D.71310
  # DEBUG this => D#100
  _1422 = *SR.1918_1886;
  *SR.1921_47 = _1422;
  # DEBUG this => &D.71310
  _1423 = SR.1918_1886 + 4;
  if (_1423 == SR.1919_1883)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  # DEBUG this => &D.71310
  _1434 = SR.1920_52 + 8;
  # DEBUG this => &D.71310
  # DEBUG __new_node => _1434
  _1435 = MEM[(int * *)SR.1920_52 + 8B];
  # DEBUG __size => 4
  _1436 = _1435 + 512;

  <bb 115>:
  # SR.1918_1884 = PHI <_1423(113), _1435(114)>
  # SR.1919_1882 = PHI <SR.1919_1883(113), _1436(114)>
  # SR.1920_51 = PHI <SR.1920_52(113), _1434(114)>
  # DEBUG this => &D.71312
  _1426 = SR.1921_47 + 4;
  if (_1426 == SR.1922_1869)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG this => &D.71312
  _1438 = SR.1923_1866 + 8;
  # DEBUG this => &D.71312
  # DEBUG __new_node => _1438
  _1439 = MEM[(int * *)SR.1923_1866 + 8B];
  # DEBUG __size => 4
  _1440 = _1439 + 512;

  <bb 117>:
  # SR.1921_1870 = PHI <_1426(115), _1439(116)>
  # SR.1922_1867 = PHI <SR.1922_1869(115), _1440(116)>
  # SR.1923_1865 = PHI <SR.1923_1866(115), _1438(116)>
  __n_1428 = __n_252 + -1;
  # DEBUG __n => __n_1428
  # DEBUG __n => __n_1428
  if (__n_1428 <= 0)
    goto <bb 111>;
  else
    goto <bb 118>;

  <bb 118>:
  goto <bb 113>;

  <bb 119>:
  __n.116_303 = (long unsigned int) _289;
  _304 = __n.116_303 * 4;
  __new_start$_M_cur_305 = prephitmp_1563 + _304;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_305
  goto <bb 9>;

  <bb 120>:
  if (__offset_301 > 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 121>:
  _333 = __elemsbefore.133_10 * 4;
  SR.1744_334 = prephitmp_1563 + _333;
  # DEBUG __tmp$_M_cur => SR.1744_334
  goto <bb 13>;

  <bb 122>:
  if (__offset_330 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 123>:
  _401 = __n_11(D) * 4;
  __tmp$_M_cur_402 = _22 + _401;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_402
  goto <bb 18>;

  <bb 124>:
  if (__offset_398 > 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 125>:
  __n.116_545 = (long unsigned int) _289;
  _546 = __n.116_545 * 4;
  __tmp$_M_cur_547 = _353 + _546;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_547
  goto <bb 30>;

  <bb 126>:
  if (__offset_543 > 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 127>:
  __n.106_589 = (long unsigned int) _38;
  _590 = __n.106_589 * 4;
  __mid$_M_cur_591 = __mid$_M_cur_1508 + _590;
  # DEBUG __mid$_M_cur => __mid$_M_cur_591
  goto <bb 35>;

  <bb 128>:
  if (__offset_587 > 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 129>:
  _846 = __n_11(D) * 4;
  __new_finish$_M_cur_847 = prephitmp_1131 + _846;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_847
  goto <bb 60>;

  <bb 130>:
  if (__offset_843 > 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 131>:
  if (__offset_872 > 0)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 132>:
  _813 = -__elemsafter_55;
  __n.116_874 = (long unsigned int) _813;
  _875 = __n.116_874 * 4;
  SR.1756_876 = prephitmp_1131 + _875;
  # DEBUG __tmp$_M_cur => SR.1756_876
  goto <bb 64>;

  <bb 133>:
  _921 = -__n.131_827;
  __n.116_934 = (long unsigned int) _921;
  _935 = __n.116_934 * 4;
  SR.1849_936 = _64 + _935;
  # DEBUG __tmp$_M_cur => SR.1849_936
  pretmp_2185 = (long int) SR.1852_920;
  goto <bb 69>;

  <bb 134>:
  if (__offset_932 > 0)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 135>:
  __n.106_1167 = (long unsigned int) _1124;
  _1168 = __n.106_1167 * 4;
  SR.1849_1169 = SR.1849_1912 + _1168;
  # DEBUG __last$_M_cur => SR.1849_1169
  goto <bb 89>;

  <bb 136>:
  if (__offset_1165 > 0)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 137>:
  __n.116_1138 = (long unsigned int) _1124;
  _1139 = __n.116_1138 * 4;
  _1140 = __rend_2046 + _1139;
  goto <bb 93>;

  <bb 138>:
  if (__offset_1136 > 0)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 139>:
  __n.106_1221 = (long unsigned int) __elemsafter_55;
  _1222 = __n.106_1221 * 4;
  __mid$_M_cur_1223 = __mid$_M_cur_211 + _1222;
  # DEBUG __mid$_M_cur => __mid$_M_cur_1223
  goto <bb 101>;

  <bb 140>:
  if (__offset_1219 > 0)
    goto <bb 98>;
  else
    goto <bb 99>;

}



;; Function std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = int; _Alloc = std::allocator<int>] (_ZNSt5dequeIiSaIiEEaSERKS1_, funcdef_no=2820, decl_uid=43169, cgraph_uid=1287, symbol_order=1288)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = int; _Alloc = std::allocator<int>] (struct deque * const this, const struct deque & __x)
{
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.2108;
  int * SR.2107;
  int * SR.2106;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __last$24;
  int * __last$8;
  int * __last;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __tmp$_M_node;
  int * __tmp$_M_last;
  int * __tmp$_M_first;
  int * __tmp$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.2063;
  int * SR.2062;
  int * SR.2061;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __last$24;
  int * __last$8;
  int * __last;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __tmp$_M_node;
  int * __tmp$_M_last;
  int * __tmp$_M_first;
  int * __tmp$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __new_finish$_M_node;
  int * __new_finish$_M_last;
  int * __new_finish$_M_first;
  int * __new_finish$_M_cur;
  int * * __new_start$_M_node;
  int * __new_start$_M_last;
  int * __new_start$_M_first;
  int * __new_start$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __first$_M_node;
  int * const __first$16;
  int * __first$_M_first;
  int * const __first;
  int * * __tmp$_M_node;
  int * __tmp$_M_last;
  int * __tmp$_M_first;
  int * __tmp$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __last$_M_node;
  int * __last$_M_last;
  int * __last$_M_first;
  int * __last$_M_cur;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * __first$_M_first;
  int * __first$_M_cur;
  int * * SR.1985;
  int * SR.1984;
  int * SR.1983;
  int * SR.1982;
  int * * SR.1981;
  int * SR.1980;
  int * SR.1979;
  int * SR.1978;
  int * * __mid$_M_node;
  int * __mid$_M_last;
  int * __mid$_M_first;
  int * __mid$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.71844;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.71819;
  struct _Deque_iterator D.71818;
  struct _Deque_iterator D.71817;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.71799;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  const difference_type __offset;
  struct _Self & D.71785;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.71768;
  struct _Deque_iterator D.71767;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.71741;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.71716;
  struct _Deque_iterator D.71715;
  struct _Deque_iterator D.71714;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.71696;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  const difference_type __offset;
  struct _Self & D.71682;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.71663;
  struct _Deque_iterator D.71662;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.71655;
  struct _Deque_iterator D.71654;
  struct iterator D.71653;
  const size_type __n;
  struct iterator __new_start;
  struct iterator __new_finish;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct forward_iterator_tag D.71641;
  const difference_type __offset;
  struct _Self & D.71636;
  struct _Self __tmp;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct forward_iterator_tag D.71626;
  struct iterator D.71625;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  int * * __nstart;
  struct const_iterator __mid;
  struct iterator D.47491;
  struct _Deque_iterator D.50409;
  struct _Deque_iterator D.50408;
  struct _Deque_iterator D.47483;
  struct const_iterator D.47479;
  struct _Deque_iterator D.50405;
  struct _Deque_iterator D.50404;
  struct _Deque_iterator D.47476;
  struct _Deque_iterator D.47477;
  long int _5;
  int * * _6;
  int * _13;
  int * _17;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  int * _28;
  long int _29;
  int * _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _36;
  long int _38;
  long int _39;
  long int _40;
  difference_type _41;
  size_type _42;
  int * * _43;
  long int _44;
  int * * _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  int * _51;
  long int _52;
  int * _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  int * _58;
  long int _59;
  int * _60;
  long int _61;
  long int _62;
  long int _63;
  difference_type _64;
  size_type _65;
  int * _66;
  int * _67;
  int * _68;
  int * _70;
  int * _72;
  int * * _74;
  int * _78;
  int * * _114;
  int * * _115;
  int * * _116;
  int * _119;
  long int _126;
  long int _127;
  long int _128;
  long unsigned int _132;
  long int iftmp.107_134;
  long unsigned int _136;
  long unsigned int _137;
  long int _138;
  long int iftmp.107_139;
  long int iftmp.107_141;
  long unsigned int __node_offset.109_142;
  long unsigned int _143;
  long int _147;
  long int _148;
  long unsigned int _149;
  long unsigned int _150;
  long int _158;
  long int _160;
  long int _161;
  long int _162;
  long int _163;
  long int _164;
  long int _165;
  long int _166;
  long int _167;
  long int _168;
  long int _170;
  long int _171;
  long int _172;
  difference_type _173;
  int * _176;
  long int _194;
  int * _195;
  long int _196;
  long int _197;
  long int _198;
  long unsigned int _200;
  long int _207;
  long int _214;
  long int _217;
  long int _218;
  long unsigned int __n.116_221;
  long unsigned int _222;
  long int iftmp.117_224;
  long unsigned int _226;
  long unsigned int _227;
  long int _228;
  long int iftmp.117_229;
  long int iftmp.117_231;
  long unsigned int __node_offset.119_232;
  long unsigned int _233;
  long int _237;
  long int _238;
  long unsigned int _239;
  long unsigned int _240;
  int _295;
  int * _299;
  int * * _311;
  int * _312;
  int * _313;
  long int _319;
  long int _321;
  long int _322;
  long int _323;
  long int _324;
  long unsigned int _326;
  long int _341;
  long int _342;
  long int _343;
  long unsigned int _347;
  long int iftmp.117_349;
  long unsigned int _351;
  long unsigned int _352;
  long int _353;
  long int iftmp.117_354;
  long int iftmp.117_356;
  long unsigned int __node_offset.119_357;
  long unsigned int _358;
  long int _362;
  long int _363;
  long unsigned int _364;
  long unsigned int _365;
  unsigned long _369;
  unsigned long _370;
  unsigned long _372;
  int * const prephitmp_377;
  int * const pretmp_402;
  int * const prephitmp_404;
  int * const pretmp_406;
  int * const prephitmp_407;
  long int pretmp_408;
  long int prephitmp_409;
  int _420;
  int * _424;
  int * * _436;
  int * _437;
  int * _438;
  long int pretmp_503;
  long int prephitmp_504;
  long int pretmp_505;
  long int prephitmp_508;
  int * const pretmp_509;
  int * const prephitmp_510;
  int * const pretmp_511;
  long int pretmp_512;
  long int prephitmp_513;

  <bb 2>:
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 45>;

  <bb 3>:
  # DEBUG this => this_3(D)
  # DEBUG D#174 => &MEM[(const struct deque *)this_3(D)].D.43590._M_impl._M_start
  # DEBUG D#175 => &MEM[(const struct deque *)this_3(D)].D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _43 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node;
  _44 = (long int) _43;
  _45 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node;
  _46 = (long int) _45;
  _47 = _44 - _46;
  _48 = _47 /[ex] 8;
  _49 = _48 + -1;
  _50 = _49 * 128;
  _51 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur;
  _52 = (long int) _51;
  _53 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first;
  _54 = (long int) _53;
  _55 = _52 - _54;
  _56 = _55 /[ex] 4;
  _57 = _50 + _56;
  _58 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last;
  _59 = (long int) _58;
  _60 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur;
  _61 = (long int) _60;
  _62 = _59 - _61;
  _63 = _62 /[ex] 4;
  _64 = _57 + _63;
  _65 = (size_type) _64;
  # DEBUG __len => _65
  # DEBUG this => __x_2(D)
  # DEBUG D#174 => &__x_2(D)->D.43590._M_impl._M_start
  # DEBUG D#175 => &__x_2(D)->D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _6 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _5 = (long int) _6;
  SR.1981_22 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _23 = (long int) SR.1981_22;
  _24 = _5 - _23;
  _25 = _24 /[ex] 8;
  _26 = _25 + -1;
  _27 = _26 * 128;
  _28 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _29 = (long int) _28;
  _30 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _31 = (long int) _30;
  _32 = _29 - _31;
  _33 = _32 /[ex] 4;
  _34 = _27 + _33;
  SR.1980_35 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _36 = (long int) SR.1980_35;
  SR.1978_37 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _38 = (long int) SR.1978_37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 4;
  _41 = _34 + _40;
  _42 = (size_type) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:
  # DEBUG D#696 => &this_3(D)->D.43590._M_impl._M_start
  # DEBUG this => &D.47476
  # DEBUG __x => D#696
  D.47476._M_cur = _60;
  _68 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.47476._M_first = _68;
  D.47476._M_last = _58;
  D.47476._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#83 => &__x_2(D)->D.43590._M_impl._M_finish
  # DEBUG this => &D.50404
  # DEBUG __x => D#83
  D.50404._M_cur = _28;
  D.50404._M_first = _30;
  _67 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  D.50404._M_last = _67;
  D.50404._M_node = _6;
  # DEBUG this => __x_2(D)
  # DEBUG D#84 => &__x_2(D)->D.43590._M_impl._M_start
  # DEBUG this => &D.50405
  # DEBUG __x => D#84
  D.50405._M_cur = SR.1978_37;
  _66 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.50405._M_first = _66;
  D.50405._M_last = SR.1980_35;
  D.50405._M_node = SR.1981_22;
  D.47477 = std::copy<int> (D.50405, D.50404, &D.47476); [return slot optimization]
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.47477
  # DEBUG D#485 => &this_3(D)->D.43590
  # DEBUG this => D#485
  # DEBUG this => this_3(D)
  # DEBUG D#66 => &this_3(D)->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#492 => MEM[(const struct iterator &)this_3(D) + 48]._M_cur
  # DEBUG D.58025 => D#492
  # DEBUG D#491 => MEM[(const struct iterator &)this_3(D) + 48]._M_first
  # DEBUG D.58026 => D#491
  # DEBUG D#490 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
  # DEBUG D.58027 => D#490
  _114 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG D.58028 => _114
  # DEBUG this => NULL
  # DEBUG __x => &D.47477
  # DEBUG D#489 => MEM[(const struct iterator &)&D.47477]._M_cur
  # DEBUG D.58029 => D#489
  # DEBUG D#488 => MEM[(const struct iterator &)&D.47477]._M_first
  # DEBUG D.58030 => D#488
  # DEBUG D#487 => MEM[(const struct iterator &)&D.47477]._M_last
  # DEBUG D.58031 => D#487
  _115 = MEM[(const struct iterator &)&D.47477]._M_node;
  # DEBUG D.58032 => _115
  # DEBUG D#68 => this_3(D)
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.58014 => D#71
  _116 = _114 + 8;
  __nstart_117 = _115 + 8;
  # DEBUG D#486 => &this_3(D)->D.43590
  # DEBUG this => D#486
  # DEBUG __nstart => __nstart_117
  # DEBUG __nfinish => _116
  # DEBUG __n => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  this_3(D)->D.43590._M_impl._M_finish = MEM[(const struct _Deque_iterator &)&D.47477];
  D.47477 ={v} {CLOBBER};
  D.47476 ={v} {CLOBBER};
  goto <bb 45>;

  <bb 6>:

  <bb 7>:
  # __nstart_100 = PHI <__nstart_117(6), __nstart_120(8)>
  # DEBUG __n => __nstart_100
  _119 = *__nstart_100;
  # DEBUG this => D#486
  # DEBUG __p => _119
  # DEBUG __size => 4
  # DEBUG D#167 => &D#486->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _119
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _119
  # DEBUG this => D#140
  # DEBUG D.71609 => D#141
  operator delete (_119);
  __nstart_120 = __nstart_100 + 8;
  # DEBUG __n => __nstart_120
  # DEBUG __n => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # DEBUG this => __x_2(D)
  # DEBUG D#84 => &__x_2(D)->D.43590._M_impl._M_start
  # DEBUG this => &D.47479
  # DEBUG __x => D#84
  SR.1979_81 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  # DEBUG this => &D.47479
  # DEBUG __n => _64
  # DEBUG __tmp$_M_cur => SR.1978_37
  # DEBUG __tmp$_M_first => SR.1979_81
  # DEBUG __tmp$_M_last => SR.1980_35
  # DEBUG __tmp$_M_node => SR.1981_22
  # DEBUG this => &__tmp
  # DEBUG __n => _64
  _126 = (long int) SR.1979_81;
  _127 = _38 - _126;
  _128 = _127 /[ex] 4;
  __offset_129 = _64 + _128;
  # DEBUG __offset => __offset_129
  # DEBUG __size => 4
  _372 = (unsigned long) __offset_129;
  if (_372 <= 127)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 10>:
  # DEBUG __size => 4
  iftmp.107_134 = __offset_129 >> 7;
  goto <bb 12>;

  <bb 11>:
  _136 = ~_372;
  # DEBUG __size => 4
  _137 = _136 >> 7;
  _138 = (long int) _137;
  iftmp.107_139 = ~_138;

  <bb 12>:
  # iftmp.107_141 = PHI <iftmp.107_134(10), iftmp.107_139(11)>
  # DEBUG __node_offset => iftmp.107_141
  __node_offset.109_142 = (long unsigned int) iftmp.107_141;
  _143 = __node_offset.109_142 * 8;
  __tmp$_M_node_144 = SR.1981_22 + _143;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_144
  # DEBUG __tmp$_M_node => __tmp$_M_node_144
  __tmp$_M_first_145 = *__tmp$_M_node_144;
  # DEBUG __tmp$_M_first => __tmp$_M_first_145
  # DEBUG __size => 4
  __tmp$_M_last_146 = __tmp$_M_first_145 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_146
  # DEBUG __size => 4
  _147 = iftmp.107_141 * 128;
  _148 = __offset_129 - _147;
  _149 = (long unsigned int) _148;
  _150 = _149 * 4;
  __tmp$_M_cur_151 = __tmp$_M_first_145 + _150;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_151
  pretmp_503 = (long int) __tmp$_M_node_144;
  pretmp_505 = (long int) __tmp$_M_last_146;

  <bb 13>:
  # __tmp$_M_cur_477 = PHI <__tmp$_M_cur_133(46), __tmp$_M_cur_151(12)>
  # __tmp$_M_first_569 = PHI <SR.1979_81(46), __tmp$_M_first_145(12)>
  # __tmp$_M_last_453 = PHI <SR.1980_35(46), __tmp$_M_last_146(12)>
  # __tmp$_M_node_16 = PHI <SR.1981_22(46), __tmp$_M_node_144(12)>
  # prephitmp_504 = PHI <_23(46), pretmp_503(12)>
  # prephitmp_508 = PHI <_36(46), pretmp_505(12)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_16
  # DEBUG __tmp$_M_last => __tmp$_M_last_453
  # DEBUG __tmp$_M_first => __tmp$_M_first_569
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_477
  # DEBUG __mid$_M_cur => __tmp$_M_cur_477
  # DEBUG __mid$_M_first => __tmp$_M_first_569
  # DEBUG __mid$_M_last => __tmp$_M_last_453
  # DEBUG __mid$_M_node => __tmp$_M_node_16
  # DEBUG D#1132 => {CLOBBER}
  # DEBUG __tmp$_M_cur => D#1132
  # DEBUG D#1133 => {CLOBBER}
  # DEBUG __tmp$_M_first => D#1133
  # DEBUG D#1134 => {CLOBBER}
  # DEBUG __tmp$_M_last => D#1134
  # DEBUG D#1135 => {CLOBBER}
  # DEBUG __tmp$_M_node => D#1135
  # DEBUG D#694 => &this_3(D)->D.43590._M_impl._M_start
  # DEBUG this => &D.47483
  # DEBUG __x => D#694
  D.47483._M_cur = _60;
  _78 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.47483._M_first = _78;
  D.47483._M_last = _58;
  D.47483._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#84 => &__x_2(D)->D.43590._M_impl._M_start
  # DEBUG this => &D.50408
  # DEBUG __x => D#84
  D.50408._M_cur = SR.1978_37;
  D.50408._M_first = SR.1979_81;
  D.50408._M_last = SR.1980_35;
  D.50408._M_node = SR.1981_22;
  MEM[(struct _Deque_iterator *)&__mid] = __tmp$_M_cur_477;
  MEM[(struct _Deque_iterator *)&__mid + 8B] = __tmp$_M_first_569;
  MEM[(struct _Deque_iterator *)&__mid + 16B] = __tmp$_M_last_453;
  MEM[(struct _Deque_iterator *)&__mid + 24B] = __tmp$_M_node_16;
  std::copy<int> (D.50408, __mid, &D.47483);
  D.47483 ={v} {CLOBBER};
  # DEBUG this => __x_2(D)
  # DEBUG D#83 => &__x_2(D)->D.43590._M_impl._M_finish
  # DEBUG this => &D.50409
  # DEBUG __x => D#83
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _72 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#1148 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _74 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG D#695 => &this_3(D)->D.43590._M_impl._M_finish
  # DEBUG this => &D.47491
  # DEBUG __x => D#695
  _17 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  # DEBUG this => this_3(D)
  # DEBUG __position => &D.47491
  # DEBUG __first$_M_cur => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$_M_last => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$_M_node => _74
  # DEBUG this => NULL
  # DEBUG __x => &D.47491
  # DEBUG this => this_3(D)
  # DEBUG __pos => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$_M_last => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$_M_node => _74
  # DEBUG this => &D.71625
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.71625
  # DEBUG __first => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$16 => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$_M_node => _74
  # DEBUG D#634 => __first
  # DEBUG D#634 => __first
  # DEBUG D#634 => __first
  # DEBUG D#635 => __last
  # DEBUG D#635 => __last
  # DEBUG D#635 => __last
  # DEBUG D.61049 => D#630
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __size => 4
  _158 = (long int) _74;
  _160 = _158 - prephitmp_504;
  _161 = _160 /[ex] 8;
  _162 = _161 + -1;
  _163 = _162 * 128;
  _164 = (long int) _13;
  _165 = (long int) _72;
  _166 = _164 - _165;
  _167 = _166 /[ex] 4;
  _168 = _163 + _167;
  _170 = (long int) __tmp$_M_cur_477;
  _171 = prephitmp_508 - _170;
  _172 = _171 /[ex] 4;
  _173 = _168 + _172;
  __n_174 = (const size_type) _173;
  # DEBUG __n => __n_174
  _176 = this_3(D)->D.43590._M_impl._M_start._M_cur;
  if (_17 == _176)
    goto <bb 14>;
  else
    goto <bb 29>;

  <bb 14>:
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_174
  _194 = (long int) _17;
  _195 = this_3(D)->D.43590._M_impl._M_start._M_first;
  _196 = (long int) _195;
  _197 = _194 - _196;
  _198 = _197 /[ex] 4;
  __vacancies_199 = (const size_type) _198;
  # DEBUG __vacancies => __vacancies_199
  if (__n_174 > __vacancies_199)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _200 = __n_174 - __vacancies_199;
  std::deque<int, std::allocator<int> >::_M_new_elements_at_front (this_3(D), _200);
  pretmp_402 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  pretmp_406 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  pretmp_408 = (long int) pretmp_406;

  <bb 16>:
  # prephitmp_404 = PHI <_176(14), pretmp_402(15)>
  # prephitmp_407 = PHI <_195(14), pretmp_406(15)>
  # prephitmp_409 = PHI <_196(14), pretmp_408(15)>
  # DEBUG D#1129 => &this_3(D)->D.43590._M_impl._M_start
  # DEBUG this => D#1129
  # DEBUG __n => _173
  # DEBUG this => &__tmp
  # DEBUG __x => D#1129
  # DEBUG D#1149 => MEM[(const struct iterator &)this_3(D) + 16]._M_first
  # DEBUG __tmp$_M_first => D#1149
  __new_start$_M_last_205 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  # DEBUG __tmp$_M_last => __new_start$_M_last_205
  __new_start$_M_node_206 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  # DEBUG __tmp$_M_node => __new_start$_M_node_206
  # DEBUG this => &__tmp
  # DEBUG __n => _173
  # DEBUG this => &__tmp
  # DEBUG __n => -_173
  _214 = (long int) prephitmp_404;
  _217 = _214 - prephitmp_409;
  _218 = _217 /[ex] 4;
  __offset_219 = _218 - _173;
  # DEBUG __offset => __offset_219
  # DEBUG __size => 4
  _369 = (unsigned long) __offset_219;
  if (_369 <= 127)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 17>:
  # DEBUG __size => 4
  iftmp.117_224 = __offset_219 >> 7;
  goto <bb 19>;

  <bb 18>:
  _226 = ~_369;
  # DEBUG __size => 4
  _227 = _226 >> 7;
  _228 = (long int) _227;
  iftmp.117_229 = ~_228;

  <bb 19>:
  # iftmp.117_231 = PHI <iftmp.117_224(17), iftmp.117_229(18)>
  # DEBUG __node_offset => iftmp.117_231
  __node_offset.119_232 = (long unsigned int) iftmp.117_231;
  _233 = __node_offset.119_232 * 8;
  __new_start$_M_node_234 = __new_start$_M_node_206 + _233;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_start$_M_node_234
  # DEBUG __tmp$_M_node => __new_start$_M_node_234
  __new_start$_M_first_235 = *__new_start$_M_node_234;
  # DEBUG __tmp$_M_first => __new_start$_M_first_235
  # DEBUG __size => 4
  __new_start$_M_last_236 = __new_start$_M_first_235 + 512;
  # DEBUG __tmp$_M_last => __new_start$_M_last_236
  # DEBUG __size => 4
  _237 = iftmp.117_231 * 128;
  _238 = __offset_219 - _237;
  _239 = (long unsigned int) _238;
  _240 = _239 * 4;
  __new_start$_M_cur_241 = __new_start$_M_first_235 + _240;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_241

  <bb 20>:
  # __new_start$_M_cur_557 = PHI <__new_start$_M_cur_223(48), __new_start$_M_cur_241(19)>
  # __new_start$_M_first_556 = PHI <prephitmp_407(48), __new_start$_M_first_235(19)>
  # __new_start$_M_last_546 = PHI <__new_start$_M_last_205(48), __new_start$_M_last_236(19)>
  # __new_start$_M_node_545 = PHI <__new_start$_M_node_206(48), __new_start$_M_node_234(19)>
  # DEBUG __tmp$_M_node => __new_start$_M_node_545
  # DEBUG __tmp$_M_last => __new_start$_M_last_546
  # DEBUG __tmp$_M_first => __new_start$_M_first_556
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_557
  # DEBUG this => &__new_start
  # DEBUG __x => NULL
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_557
  # DEBUG __new_start$_M_first => __new_start$_M_first_556
  # DEBUG __new_start$_M_last => __new_start$_M_last_546
  # DEBUG __new_start$_M_node => __new_start$_M_node_545
  __tmp ={v} {CLOBBER};
  # DEBUG D#690 => &this_3(D)->D.43590
  # DEBUG this => D#690
  # DEBUG this => &D.71655
  # DEBUG __x => &__new_start
  # DEBUG __first$_M_cur => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$_M_last => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$_M_node => _74
  # DEBUG __result => &D.71655
  # DEBUG D.71659 => D#603
  # DEBUG this => &D.71663
  # DEBUG __x => &D.71655
  # DEBUG __first$_M_cur => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$_M_last => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$_M_node => _74
  # DEBUG __result => &D.71663
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.71663
  # DEBUG __first$_M_cur => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$_M_last => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$_M_node => _74
  # DEBUG __result => NULL
  # DEBUG this => &D.71696
  # DEBUG __x => NULL
  # DEBUG __first => __tmp$_M_cur_477
  # DEBUG __first$8 => __tmp$_M_first_569
  # DEBUG __first$16 => __tmp$_M_last_453
  # DEBUG __first$24 => __tmp$_M_node_16
  # DEBUG __last => _13
  # DEBUG __last$8 => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$24 => _74
  # DEBUG __result => &D.71696
  # DEBUG this => &D.71716
  # DEBUG __x => &D.71696
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG D#1130 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#1130
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1130
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_477
  # DEBUG __it$8 => __tmp$_M_first_569
  # DEBUG __it$16 => __tmp$_M_last_453
  # DEBUG __it$24 => __tmp$_M_node_16
  # DEBUG __it$_M_cur => __tmp$_M_cur_477
  # DEBUG __it$_M_first => __tmp$_M_first_569
  # DEBUG __it$_M_last => __tmp$_M_last_453
  # DEBUG __it$_M_node => __tmp$_M_node_16
  # DEBUG __result => &D.71716
  # DEBUG this => NULL
  # DEBUG __x => &D.71716
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG __it$16 => D#1130
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1130
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_477
  # DEBUG __it$8 => __tmp$_M_first_569
  # DEBUG __it$16 => __tmp$_M_last_453
  # DEBUG __it$24 => __tmp$_M_node_16
  # DEBUG __it$_M_cur => __tmp$_M_cur_477
  # DEBUG __it$_M_first => __tmp$_M_first_569
  # DEBUG __it$_M_last => __tmp$_M_last_453
  # DEBUG __it$_M_node => __tmp$_M_node_16
  # DEBUG __first => __tmp$_M_cur_477
  # DEBUG __first$8 => __tmp$_M_first_569
  # DEBUG __first$16 => __tmp$_M_last_453
  # DEBUG __first$24 => __tmp$_M_node_16
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.71741
  # DEBUG __x => NULL
  # DEBUG __first => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$_M_last => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __result => &D.71741
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  # DEBUG __n => _173
  # DEBUG __n => _173
  if (_173 <= 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG this => &D.71662
  # DEBUG __x => &D.71741
  D.71741 ={v} {CLOBBER};
  D.71716 ={v} {CLOBBER};
  D.71696 ={v} {CLOBBER};
  D.71663 ={v} {CLOBBER};
  D.71655 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 16B] = __new_start$_M_cur_557;
  MEM[(struct deque *)this_3(D) + 24B] = __new_start$_M_first_556;
  MEM[(struct deque *)this_3(D) + 32B] = __new_start$_M_last_546;
  MEM[(struct deque *)this_3(D) + 40B] = __new_start$_M_node_545;
  # DEBUG D#1140 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#1140
  # DEBUG D#1141 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#1141
  # DEBUG D#1142 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#1142
  # DEBUG D#1143 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#1143
  goto <bb 44>;

  <bb 22>:

  <bb 23>:
  # __n_71 = PHI <_173(22), __n_301(28)>
  # SR.2061_543 = PHI <__new_start$_M_cur_557(22), SR.2061_542(28)>
  # SR.2062_541 = PHI <__new_start$_M_last_546(22), SR.2062_540(28)>
  # SR.2063_538 = PHI <__new_start$_M_node_545(22), SR.2063_537(28)>
  # __mid$_M_cur_534 = PHI <__tmp$_M_cur_477(22), __mid$_M_cur_533(28)>
  # __mid$_M_last_532 = PHI <__tmp$_M_last_453(22), __mid$_M_last_530(28)>
  # __mid$_M_node_525 = PHI <__tmp$_M_node_16(22), __mid$_M_node_524(28)>
  # DEBUG __first$_M_node => __mid$_M_node_525
  # DEBUG __first$_M_last => __mid$_M_last_532
  # DEBUG __first => __mid$_M_cur_534
  # DEBUG __n => __n_71
  # DEBUG D#100 => &D.71741
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _295 = MEM[(const int &)__mid$_M_cur_534];
  *SR.2061_543 = _295;
  # DEBUG this => &__first
  __mid$_M_cur_296 = __mid$_M_cur_534 + 4;
  # DEBUG __first => __mid$_M_cur_296
  if (__mid$_M_cur_296 == __mid$_M_last_532)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG this => &__first
  __mid$_M_node_307 = __mid$_M_node_525 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __mid$_M_node_307
  # DEBUG __first$_M_node => __mid$_M_node_307
  __mid$_M_cur_308 = MEM[(int * *)__mid$_M_node_525 + 8B];
  # DEBUG __size => 4
  __mid$_M_last_309 = __mid$_M_cur_308 + 512;
  # DEBUG __first$_M_last => __mid$_M_last_309
  # DEBUG __first => __mid$_M_cur_308

  <bb 25>:
  # __mid$_M_cur_533 = PHI <__mid$_M_cur_296(23), __mid$_M_cur_308(24)>
  # __mid$_M_last_530 = PHI <__mid$_M_last_532(23), __mid$_M_last_309(24)>
  # __mid$_M_node_524 = PHI <__mid$_M_node_525(23), __mid$_M_node_307(24)>
  # DEBUG __first$_M_node => __mid$_M_node_524
  # DEBUG __first$_M_last => __mid$_M_last_530
  # DEBUG __first => __mid$_M_cur_533
  # DEBUG this => &D.71741
  _299 = SR.2061_543 + 4;
  if (_299 == SR.2062_541)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG this => &D.71741
  _311 = SR.2063_538 + 8;
  # DEBUG this => &D.71741
  # DEBUG __new_node => _311
  _312 = MEM[(int * *)SR.2063_538 + 8B];
  # DEBUG __size => 4
  _313 = _312 + 512;

  <bb 27>:
  # SR.2061_542 = PHI <_299(25), _312(26)>
  # SR.2062_540 = PHI <SR.2062_541(25), _313(26)>
  # SR.2063_537 = PHI <SR.2063_538(25), _311(26)>
  __n_301 = __n_71 + -1;
  # DEBUG __n => __n_301
  # DEBUG __n => __n_301
  if (__n_301 <= 0)
    goto <bb 21>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 23>;

  <bb 29>:
  _70 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_174
  _319 = (long int) _70;
  _321 = (long int) _17;
  _322 = _319 - _321;
  _323 = _322 /[ex] 4;
  _324 = _323 + -1;
  __vacancies_325 = (const size_type) _324;
  # DEBUG __vacancies => __vacancies_325
  if (__n_174 > __vacancies_325)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  _326 = __n_174 - __vacancies_325;
  std::deque<int, std::allocator<int> >::_M_new_elements_at_back (this_3(D), _326);
  pretmp_509 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  pretmp_511 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  pretmp_512 = (long int) pretmp_509;

  <bb 31>:
  # prephitmp_510 = PHI <_17(29), pretmp_509(30)>
  # prephitmp_377 = PHI <_70(29), pretmp_511(30)>
  # prephitmp_513 = PHI <_321(29), pretmp_512(30)>
  # DEBUG D#1128 => &this_3(D)->D.43590._M_impl._M_finish
  # DEBUG this => D#1128
  # DEBUG __n => _173
  # DEBUG this => &__tmp
  # DEBUG __x => D#1128
  __new_finish$_M_first_330 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  # DEBUG __tmp$_M_first => __new_finish$_M_first_330
  # DEBUG D#1150 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
  # DEBUG __tmp$_M_last => D#1150
  __new_finish$_M_node_332 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG __tmp$_M_node => __new_finish$_M_node_332
  # DEBUG this => &__tmp
  # DEBUG __n => _173
  _341 = (long int) __new_finish$_M_first_330;
  _342 = prephitmp_513 - _341;
  _343 = _342 /[ex] 4;
  __offset_344 = _173 + _343;
  # DEBUG __offset => __offset_344
  # DEBUG __size => 4
  _370 = (unsigned long) __offset_344;
  if (_370 <= 127)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 32>:
  # DEBUG __size => 4
  iftmp.117_349 = __offset_344 >> 7;
  goto <bb 34>;

  <bb 33>:
  _351 = ~_370;
  # DEBUG __size => 4
  _352 = _351 >> 7;
  _353 = (long int) _352;
  iftmp.117_354 = ~_353;

  <bb 34>:
  # iftmp.117_356 = PHI <iftmp.117_349(32), iftmp.117_354(33)>
  # DEBUG __node_offset => iftmp.117_356
  __node_offset.119_357 = (long unsigned int) iftmp.117_356;
  _358 = __node_offset.119_357 * 8;
  __new_finish$_M_node_359 = __new_finish$_M_node_332 + _358;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_finish$_M_node_359
  # DEBUG __tmp$_M_node => __new_finish$_M_node_359
  __new_finish$_M_first_360 = *__new_finish$_M_node_359;
  # DEBUG __tmp$_M_first => __new_finish$_M_first_360
  # DEBUG __size => 4
  __new_finish$_M_last_361 = __new_finish$_M_first_360 + 512;
  # DEBUG __tmp$_M_last => __new_finish$_M_last_361
  # DEBUG __size => 4
  _362 = iftmp.117_356 * 128;
  _363 = __offset_344 - _362;
  _364 = (long unsigned int) _363;
  _365 = _364 * 4;
  __new_finish$_M_cur_366 = __new_finish$_M_first_360 + _365;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_366

  <bb 35>:
  # __new_finish$_M_cur_523 = PHI <__new_finish$_M_cur_348(50), __new_finish$_M_cur_366(34)>
  # __new_finish$_M_first_522 = PHI <__new_finish$_M_first_330(50), __new_finish$_M_first_360(34)>
  # __new_finish$_M_last_507 = PHI <prephitmp_377(50), __new_finish$_M_last_361(34)>
  # __new_finish$_M_node_506 = PHI <__new_finish$_M_node_332(50), __new_finish$_M_node_359(34)>
  # DEBUG __tmp$_M_node => __new_finish$_M_node_506
  # DEBUG __tmp$_M_last => __new_finish$_M_last_507
  # DEBUG __tmp$_M_first => __new_finish$_M_first_522
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_523
  # DEBUG this => &__new_finish
  # DEBUG __x => NULL
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_523
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_522
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_507
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_506
  __tmp ={v} {CLOBBER};
  # DEBUG D#691 => &this_3(D)->D.43590
  # DEBUG this => D#691
  # DEBUG D#692 => &this_3(D)->D.43590._M_impl._M_finish
  # DEBUG this => &D.71654
  # DEBUG __x => D#692
  # DEBUG __first$_M_cur => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$_M_last => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$_M_node => _74
  # DEBUG __result => &D.71654
  # DEBUG D.71764 => D#603
  # DEBUG this => &D.71768
  # DEBUG __x => &D.71654
  # DEBUG __first$_M_cur => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$_M_last => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$_M_node => _74
  # DEBUG __result => &D.71768
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.71768
  # DEBUG __first$_M_cur => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$_M_last => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$_M_node => _74
  # DEBUG __result => NULL
  # DEBUG this => &D.71799
  # DEBUG __x => NULL
  # DEBUG __first => __tmp$_M_cur_477
  # DEBUG __first$8 => __tmp$_M_first_569
  # DEBUG __first$16 => __tmp$_M_last_453
  # DEBUG __first$24 => __tmp$_M_node_16
  # DEBUG __last => _13
  # DEBUG __last$8 => _72
  # DEBUG __last$_M_last => D#1148
  # DEBUG __last$24 => _74
  # DEBUG __result => &D.71799
  # DEBUG this => &D.71819
  # DEBUG __x => &D.71799
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG D#1131 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#1131
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1131
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_477
  # DEBUG __it$8 => __tmp$_M_first_569
  # DEBUG __it$16 => __tmp$_M_last_453
  # DEBUG __it$24 => __tmp$_M_node_16
  # DEBUG __it$_M_cur => __tmp$_M_cur_477
  # DEBUG __it$_M_first => __tmp$_M_first_569
  # DEBUG __it$_M_last => __tmp$_M_last_453
  # DEBUG __it$_M_node => __tmp$_M_node_16
  # DEBUG __result => &D.71819
  # DEBUG this => NULL
  # DEBUG __x => &D.71819
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG __it$16 => D#1131
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1131
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_477
  # DEBUG __it$8 => __tmp$_M_first_569
  # DEBUG __it$16 => __tmp$_M_last_453
  # DEBUG __it$24 => __tmp$_M_node_16
  # DEBUG __it$_M_cur => __tmp$_M_cur_477
  # DEBUG __it$_M_first => __tmp$_M_first_569
  # DEBUG __it$_M_last => __tmp$_M_last_453
  # DEBUG __it$_M_node => __tmp$_M_node_16
  # DEBUG __first => __tmp$_M_cur_477
  # DEBUG __first$8 => __tmp$_M_first_569
  # DEBUG __first$16 => __tmp$_M_last_453
  # DEBUG __first$24 => __tmp$_M_node_16
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.71844
  # DEBUG __x => NULL
  # DEBUG __first => __tmp$_M_cur_477
  # DEBUG __first$_M_first => __tmp$_M_first_569
  # DEBUG __first$_M_last => __tmp$_M_last_453
  # DEBUG __first$_M_node => __tmp$_M_node_16
  # DEBUG __result => &D.71844
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  # DEBUG __n => _173
  # DEBUG __n => _173
  if (_173 <= 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG this => &D.71767
  # DEBUG __x => &D.71844
  D.71844 ={v} {CLOBBER};
  D.71819 ={v} {CLOBBER};
  D.71799 ={v} {CLOBBER};
  D.71768 ={v} {CLOBBER};
  D.71654 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 48B] = __new_finish$_M_cur_523;
  MEM[(struct deque *)this_3(D) + 56B] = __new_finish$_M_first_522;
  MEM[(struct deque *)this_3(D) + 64B] = __new_finish$_M_last_507;
  MEM[(struct deque *)this_3(D) + 72B] = __new_finish$_M_node_506;
  # DEBUG D#1136 => {CLOBBER}
  # DEBUG __new_finish$_M_cur => D#1136
  # DEBUG D#1137 => {CLOBBER}
  # DEBUG __new_finish$_M_first => D#1137
  # DEBUG D#1138 => {CLOBBER}
  # DEBUG __new_finish$_M_last => D#1138
  # DEBUG D#1139 => {CLOBBER}
  # DEBUG __new_finish$_M_node => D#1139
  goto <bb 44>;

  <bb 37>:

  <bb 38>:
  # __n_101 = PHI <_173(37), __n_426(43)>
  # SR.2106_501 = PHI <prephitmp_510(37), SR.2106_500(43)>
  # SR.2107_499 = PHI <prephitmp_377(37), SR.2107_498(43)>
  # SR.2108_493 = PHI <__new_finish$_M_node_332(37), SR.2108_492(43)>
  # __mid$_M_cur_486 = PHI <__tmp$_M_cur_477(37), __mid$_M_cur_485(43)>
  # __mid$_M_last_484 = PHI <__tmp$_M_last_453(37), __mid$_M_last_483(43)>
  # __mid$_M_node_481 = PHI <__tmp$_M_node_16(37), __mid$_M_node_480(43)>
  # DEBUG __first$_M_node => __mid$_M_node_481
  # DEBUG __first$_M_last => __mid$_M_last_484
  # DEBUG __first => __mid$_M_cur_486
  # DEBUG __n => __n_101
  # DEBUG D#100 => &D.71844
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _420 = MEM[(const int &)__mid$_M_cur_486];
  *SR.2106_501 = _420;
  # DEBUG this => &__first
  __mid$_M_cur_421 = __mid$_M_cur_486 + 4;
  # DEBUG __first => __mid$_M_cur_421
  if (__mid$_M_cur_421 == __mid$_M_last_484)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG this => &__first
  __mid$_M_node_432 = __mid$_M_node_481 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __mid$_M_node_432
  # DEBUG __first$_M_node => __mid$_M_node_432
  __mid$_M_cur_433 = MEM[(int * *)__mid$_M_node_481 + 8B];
  # DEBUG __size => 4
  __mid$_M_last_434 = __mid$_M_cur_433 + 512;
  # DEBUG __first$_M_last => __mid$_M_last_434
  # DEBUG __first => __mid$_M_cur_433

  <bb 40>:
  # __mid$_M_cur_485 = PHI <__mid$_M_cur_421(38), __mid$_M_cur_433(39)>
  # __mid$_M_last_483 = PHI <__mid$_M_last_484(38), __mid$_M_last_434(39)>
  # __mid$_M_node_480 = PHI <__mid$_M_node_481(38), __mid$_M_node_432(39)>
  # DEBUG __first$_M_node => __mid$_M_node_480
  # DEBUG __first$_M_last => __mid$_M_last_483
  # DEBUG __first => __mid$_M_cur_485
  # DEBUG this => &D.71844
  _424 = SR.2106_501 + 4;
  if (_424 == SR.2107_499)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG this => &D.71844
  _436 = SR.2108_493 + 8;
  # DEBUG this => &D.71844
  # DEBUG __new_node => _436
  _437 = MEM[(int * *)SR.2108_493 + 8B];
  # DEBUG __size => 4
  _438 = _437 + 512;

  <bb 42>:
  # SR.2106_500 = PHI <_424(40), _437(41)>
  # SR.2107_498 = PHI <SR.2107_499(40), _438(41)>
  # SR.2108_492 = PHI <SR.2108_493(40), _436(41)>
  __n_426 = __n_101 + -1;
  # DEBUG __n => __n_426
  # DEBUG __n => __n_426
  if (__n_426 <= 0)
    goto <bb 36>;
  else
    goto <bb 43>;

  <bb 43>:
  goto <bb 38>;

  <bb 44>:
  D.71625 ={v} {CLOBBER};
  D.47491 ={v} {CLOBBER};
  # DEBUG D#1144 => {CLOBBER}
  # DEBUG __mid$_M_cur => D#1144
  # DEBUG D#1145 => {CLOBBER}
  # DEBUG __mid$_M_first => D#1145
  # DEBUG D#1146 => {CLOBBER}
  # DEBUG __mid$_M_last => D#1146
  # DEBUG D#1147 => {CLOBBER}
  # DEBUG __mid$_M_node => D#1147

  <bb 45>:
  return this_3(D);

  <bb 46>:
  _132 = _65 * 4;
  __tmp$_M_cur_133 = SR.1978_37 + _132;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_133
  goto <bb 13>;

  <bb 47>:
  if (__offset_129 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 48>:
  _207 = -_173;
  __n.116_221 = (long unsigned int) _207;
  _222 = __n.116_221 * 4;
  __new_start$_M_cur_223 = prephitmp_404 + _222;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_223
  goto <bb 20>;

  <bb 49>:
  if (__offset_219 > 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 50>:
  _347 = __n_174 * 4;
  __new_finish$_M_cur_348 = prephitmp_510 + _347;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_348
  goto <bb 35>;

  <bb 51>:
  if (__offset_344 > 0)
    goto <bb 32>;
  else
    goto <bb 33>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<int>; _Alloc = std::allocator<std::queue<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<int>*, std::vector<std::queue<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<int>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<int>] (_ZNSt6vectorISt5queueIiSt5dequeIiSaIiEEESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_, funcdef_no=2585, decl_uid=41118, cgraph_uid=1052, symbol_order=1053)

Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is not innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is not innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is not innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 27 as candidate
loop 27 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 24 as candidate
loop 24 is innermost
loop is not parallel according to graphite
Trying loop 25 as candidate
loop 25 is not innermost
loop is not parallel according to graphite
Trying loop 26 as candidate
loop 26 is innermost
loop is not parallel according to graphite
Trying loop 21 as candidate
loop 21 is innermost
loop is not parallel according to graphite
Trying loop 22 as candidate
loop 22 is not innermost
loop is not parallel according to graphite
Trying loop 23 as candidate
loop 23 is innermost
loop is not parallel according to graphite
Trying loop 18 as candidate
loop 18 is innermost
loop is not parallel according to graphite
Trying loop 19 as candidate
loop 19 is not innermost
loop is not parallel according to graphite
Trying loop 20 as candidate
loop 20 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<int>; _Alloc = std::allocator<std::queue<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<int>*, std::vector<std::queue<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<int>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<int>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.2208;
  int * SR.2207;
  int * SR.2206;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.2198;
  int * SR.2197;
  int * SR.2196;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.2188;
  int * SR.2187;
  int * SR.2186;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.2178;
  int * SR.2177;
  int * SR.2176;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.2168;
  int * SR.2167;
  int * SR.2166;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.2158;
  int * SR.2157;
  int * SR.2156;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.2148;
  int * SR.2147;
  int * SR.2146;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __nstart;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72958;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72933;
  struct _Deque_iterator D.72932;
  struct _Deque_iterator D.72931;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72913;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72899;
  struct _Deque_iterator D.72898;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72891;
  struct _Deque_iterator D.72890;
  struct _Deque_iterator D.72889;
  struct queue * D.72865;
  struct queue * __first;
  struct queue * __result;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72829;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72804;
  struct _Deque_iterator D.72803;
  struct _Deque_iterator D.72802;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72784;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72770;
  struct _Deque_iterator D.72769;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72762;
  struct _Deque_iterator D.72761;
  struct _Deque_iterator D.72760;
  struct queue * D.72736;
  struct queue * __first;
  struct queue * __result;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72700;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72675;
  struct _Deque_iterator D.72674;
  struct _Deque_iterator D.72673;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72655;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72641;
  struct _Deque_iterator D.72640;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72633;
  struct _Deque_iterator D.72632;
  struct _Deque_iterator D.72631;
  const long unsigned int D.72610;
  const size_type __len;
  size_type D.72609;
  size_type __n;
  struct queue * D.72600;
  struct queue * D.72588;
  struct queue * __first;
  long unsigned int __n;
  int * * __nstart;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72525;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72500;
  struct _Deque_iterator D.72499;
  struct _Deque_iterator D.72498;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72480;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72466;
  struct _Deque_iterator D.72465;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72458;
  struct _Deque_iterator D.72457;
  struct _Deque_iterator D.72456;
  struct queue * D.72432;
  struct queue * __first;
  struct queue * __result;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72396;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72371;
  struct _Deque_iterator D.72370;
  struct _Deque_iterator D.72369;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72351;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72337;
  struct _Deque_iterator D.72336;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72329;
  struct _Deque_iterator D.72328;
  struct _Deque_iterator D.72327;
  struct queue * D.72303;
  struct queue * __first;
  long unsigned int __n;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72267;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72242;
  struct _Deque_iterator D.72241;
  struct _Deque_iterator D.72240;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72222;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72208;
  struct _Deque_iterator D.72207;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72200;
  struct _Deque_iterator D.72199;
  struct _Deque_iterator D.72198;
  struct queue * D.72174;
  struct queue * __first;
  struct queue * __result;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72138;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72113;
  struct _Deque_iterator D.72112;
  struct _Deque_iterator D.72111;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.72093;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72079;
  struct _Deque_iterator D.72078;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.72071;
  struct _Deque_iterator D.72070;
  struct _Deque_iterator D.72069;
  struct queue * const __position;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  difference_type __n;
  struct queue * __last;
  struct queue * __new_finish;
  const size_type __elems_before;
  struct queue * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct queue * _10;
  long int _11;
  struct queue * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  int * * _17;
  long int __last.100_21;
  struct queue * const _24;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  long unsigned int _33;
  long int _35;
  struct queue * _36;
  long int _37;
  struct queue * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct queue * _51;
  struct queue * pretmp_53;
  const struct deque * _56;
  long unsigned int _59;
  sizetype _60;
  struct queue * _63;
  struct queue * _67;
  struct queue * prephitmp_69;
  long int _73;
  struct queue * _74;
  long unsigned int _75;
  struct queue * _76;
  struct deque * _80;
  struct deque * _83;
  struct deque * _87;
  bool _93;
  struct _Deque_base * _97;
  struct _Deque_base * _100;
  int * * prephitmp_107;
  int * * _110;
  int * * _111;
  int * * _124;
  int * * _127;
  int * * _128;
  int * * _136;
  long int _137;
  int * * _138;
  long int _139;
  long int _140;
  long int _141;
  long int _142;
  long int _143;
  int * _144;
  long int _145;
  int * _146;
  long int _147;
  long int _148;
  long int _149;
  long int _150;
  int * _151;
  long int _152;
  int * _153;
  long int _154;
  long int _155;
  long int _156;
  difference_type _157;
  size_type _158;
  int * _160;
  int * _162;
  int * * _163;
  int * _164;
  int * _165;
  int * * _167;
  long int _204;
  long int _206;
  long int _207;
  long int _208;
  long int _209;
  long int _210;
  long int _212;
  long int _214;
  long int _215;
  long int _216;
  long int _217;
  long int _219;
  long int _221;
  long int _222;
  long int _223;
  int _228;
  int * _232;
  int * * _244;
  int * _245;
  int * _246;
  struct queue * prephitmp_247;
  void * _253;
  struct _Deque_base * _255;
  long int _257;
  int * * _258;
  long int _259;
  long int _260;
  long int _261;
  long int _262;
  long int _263;
  int * _264;
  long int _265;
  int * _266;
  long int _267;
  long int _268;
  long int _269;
  long int _270;
  int * _271;
  long int _272;
  int * _273;
  long int _274;
  long int _275;
  long int _276;
  difference_type _277;
  size_type _278;
  struct _Deque_base * _279;
  int * _280;
  int * _282;
  int * * _283;
  int * _284;
  int * _285;
  int * * _287;
  long int _325;
  long int _327;
  long int _328;
  long int _329;
  long int _330;
  long int _331;
  long int _333;
  long int _335;
  long int _336;
  long int _337;
  long int _338;
  long int _340;
  long int _342;
  long int _343;
  long int _344;
  int _349;
  int * _353;
  int * * _365;
  int * _366;
  int * _367;
  void * _374;
  struct _Deque_base * _376;
  long int _378;
  int * * _379;
  long int _380;
  long int _381;
  long int _382;
  long int _383;
  long int _384;
  int * _385;
  long int _386;
  int * _387;
  long int _388;
  long int _389;
  long int _390;
  long int _391;
  int * _392;
  long int _393;
  int * _394;
  long int _395;
  long int _396;
  long int _397;
  difference_type _398;
  size_type _399;
  struct _Deque_base * _400;
  int * _401;
  int * _403;
  int * * _404;
  int * _405;
  int * _406;
  int * * _408;
  long int _446;
  long int _448;
  long int _449;
  long int _450;
  long int _451;
  long int _452;
  long int _454;
  long int _456;
  long int _457;
  long int _458;
  long int _459;
  long int _461;
  long int _463;
  long int _464;
  long int _465;
  int _470;
  int * _474;
  int * * _486;
  int * _487;
  int * _488;
  void * _495;
  struct queue * pretmp_496;
  struct _Deque_base * _497;
  long int _499;
  int * * _500;
  long int _501;
  long int _502;
  long int _503;
  long int _504;
  long int _505;
  int * _506;
  long int _507;
  int * _508;
  long int _509;
  long int _510;
  long int _511;
  long int _512;
  int * _513;
  long int _514;
  int * _515;
  long int _516;
  long int _517;
  long int _518;
  difference_type _519;
  size_type _520;
  struct _Deque_base * _521;
  int * _522;
  int * _524;
  int * * _525;
  int * _526;
  int * _527;
  int * * _529;
  long int _567;
  long int _569;
  long int _570;
  long int _571;
  long int _572;
  long int _573;
  long int _575;
  long int _577;
  long int _578;
  long int _579;
  long int _580;
  long int _582;
  long int _584;
  long int _585;
  long int _586;
  int _591;
  int * _595;
  int * * _607;
  int * _608;
  int * _609;
  int * * _610;
  int * * _611;
  int * * _612;
  int * _615;
  void * _623;
  struct _Deque_base * _625;
  struct queue * _627;
  long int _631;
  long int _632;
  long int _633;
  long unsigned int _635;
  long int _641;
  int * * _642;
  long int _643;
  long int _644;
  long int _645;
  long int _646;
  long int _647;
  int * _648;
  long int _649;
  int * _650;
  long int _651;
  long int _652;
  long int _653;
  long int _654;
  int * _655;
  long int _656;
  int * _657;
  long int _658;
  long int _659;
  long int _660;
  difference_type _661;
  size_type _662;
  struct _Deque_base * _663;
  int * _664;
  int * _666;
  int * * _667;
  int * _668;
  int * _669;
  int * * _671;
  long unsigned int _676;
  long unsigned int prephitmp_678;
  bool _679;
  long int _697;
  difference_type _703;
  long int _707;
  long int _708;
  long int _709;
  long int _711;
  long int _712;
  long int _713;
  long int _714;
  long int _715;
  long int _717;
  long int _719;
  long int _720;
  long int _721;
  long int _722;
  long int _724;
  long int _726;
  long int _727;
  long int _728;
  int _733;
  int * _737;
  void * _741;
  int * * _749;
  int * _750;
  int * _751;
  void * _758;
  struct _Deque_base * _760;
  long int _762;
  int * * _763;
  long int _764;
  long int _765;
  long int _766;
  long int _767;
  long int _768;
  int * _769;
  long int _770;
  int * _771;
  long int _772;
  long int _773;
  long int _774;
  long int _775;
  int * _776;
  long int _777;
  int * _778;
  long int _779;
  long int _780;
  long int _781;
  difference_type _782;
  size_type _783;
  struct _Deque_base * _784;
  int * _785;
  int * _787;
  int * * _788;
  int * _789;
  int * _790;
  int * * _792;
  bool _827;
  long int _830;
  long int _832;
  long int _833;
  long int _834;
  long int _835;
  long int _836;
  long int _838;
  long int _840;
  long int _841;
  long int _842;
  long int _843;
  long int _845;
  long int _847;
  long int _848;
  long int _849;
  int * * pretmp_853;
  int _854;
  int * _858;
  int * * _870;
  int * _871;
  int * _872;
  void * _879;
  struct _Deque_base * _881;
  long int _883;
  int * * _884;
  long int _885;
  long int _886;
  long int _887;
  long int _888;
  long int _889;
  int * _890;
  long int _891;
  int * _892;
  long int _893;
  long int _894;
  long int _895;
  long int _896;
  int * _897;
  long int _898;
  int * _899;
  long int _900;
  long int _901;
  long int _902;
  difference_type _903;
  size_type _904;
  struct _Deque_base * _905;
  int * _906;
  int * _908;
  int * * _909;
  int * _910;
  int * _911;
  int * * _913;
  long int _938;
  long int _939;
  long int _940;
  difference_type _941;
  long int _951;
  long int _953;
  long int _954;
  long int _955;
  long int _956;
  long int _957;
  long int _959;
  long int _961;
  long int _962;
  long int _963;
  long int _964;
  long int _966;
  long int _968;
  long int _969;
  long int _970;
  int _975;
  int * _979;
  int * * _991;
  int * _992;
  int * _993;
  int * * _994;
  int * * _995;
  int * * _996;
  int * _999;
  struct queue * pretmp_1005;
  long unsigned int pretmp_1336;
  long unsigned int prephitmp_1337;
  int * * pretmp_1338;
  int * * prephitmp_1339;
  struct queue * prephitmp_1354;
  long unsigned int _1490;
  struct queue * _1494;
  void * _1627;

  <bb 2>:
  # DEBUG D#1186 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#1186
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 191>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.41195._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.41195._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 80;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 107>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG D.61746 => __x_29(D)
  # DEBUG D#1158 => &MEM[(const struct queue &)__x_29(D)].c
  # DEBUG this => &__x_copy.c
  # DEBUG __x => D#1158
  # DEBUG this => D#1158
  # DEBUG D#174 => &D#1158->D.43590._M_impl._M_start
  # DEBUG D#175 => &D#1158->D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _136 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_node;
  _137 = (long int) _136;
  _138 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_node;
  _139 = (long int) _138;
  _140 = _137 - _139;
  _141 = _140 /[ex] 8;
  _142 = _141 + -1;
  _143 = _142 * 128;
  _144 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_cur;
  _145 = (long int) _144;
  _146 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_first;
  _147 = (long int) _146;
  _148 = _145 - _147;
  _149 = _148 /[ex] 4;
  _150 = _143 + _149;
  _151 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_last;
  _152 = (long int) _151;
  _153 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_cur;
  _154 = (long int) _153;
  _155 = _152 - _154;
  _156 = _155 /[ex] 4;
  _157 = _150 + _156;
  _158 = (size_type) _157;
  # DEBUG D#604 => &D#1158->D.43590
  # DEBUG this => D#604
  # DEBUG __a => NULL
  # DEBUG this => &MEM[(struct deque *)&__x_copy].D.43590
  # DEBUG __a => NULL
  # DEBUG __num_elements => _158
  # DEBUG D#484 => &MEM[(struct _Deque_base *)&__x_copy]._M_impl
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG D.55189 => NULL
  MEM[(struct _Deque_impl *)&__x_copy]._M_map = 0B;
  MEM[(struct _Deque_impl *)&__x_copy]._M_map_size = 0;
  # DEBUG D#241 => &D#484->_M_start
  # DEBUG this => D#241
  MEM[(struct _Deque_iterator *)&__x_copy + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&__x_copy + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&__x_copy + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&__x_copy + 16B]._M_node = 0B;
  # DEBUG D#240 => &D#484->_M_finish
  # DEBUG this => D#240
  MEM[(struct _Deque_iterator *)&__x_copy + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&__x_copy + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&__x_copy + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&__x_copy + 48B]._M_node = 0B;
  std::_Deque_base<int, std::allocator<int> >::_M_initialize_map (&MEM[(struct deque *)&__x_copy].D.43590, _158);
  # DEBUG D#605 => &MEM[(struct deque *)&__x_copy].D.43590
  # DEBUG this => D#605
  # DEBUG D#606 => &MEM[(struct deque *)&__x_copy].D.43590._M_impl._M_start
  # DEBUG this => &D.72071
  # DEBUG __x => D#606
  _160 = MEM[(const struct iterator &)&__x_copy + 16]._M_cur;
  _162 = MEM[(const struct iterator &)&__x_copy + 16]._M_last;
  _163 = MEM[(const struct iterator &)&__x_copy + 16]._M_node;
  # DEBUG this => D#1158
  # DEBUG D#83 => &D#1158->D.43590._M_impl._M_finish
  # DEBUG this => &D.72070
  # DEBUG __x => D#83
  _164 = MEM[(const struct iterator &)__x_29(D) + 48]._M_cur;
  _165 = MEM[(const struct iterator &)__x_29(D) + 48]._M_first;
  # DEBUG D#1174 => MEM[(const struct iterator &)__x_29(D) + 48]._M_last
  _167 = MEM[(const struct iterator &)__x_29(D) + 48]._M_node;
  # DEBUG this => D#1158
  # DEBUG D#84 => &D#1158->D.43590._M_impl._M_start
  # DEBUG this => &D.72069
  # DEBUG __x => D#84
  __first_168 = MEM[(const struct iterator &)__x_29(D) + 16]._M_cur;
  # DEBUG D#1181 => MEM[(const struct iterator &)__x_29(D) + 16]._M_first
  __first$_M_last_170 = MEM[(const struct iterator &)__x_29(D) + 16]._M_last;
  __first$_M_node_171 = MEM[(const struct iterator &)__x_29(D) + 16]._M_node;
  # DEBUG __result => &D.72071
  # DEBUG D.72075 => D#603
  # DEBUG this => &D.72079
  # DEBUG __x => &D.72071
  # DEBUG __result => &D.72079
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.72079
  # DEBUG __result => NULL
  # DEBUG this => &D.72093
  # DEBUG __x => NULL
  # DEBUG __result => &D.72093
  # DEBUG this => &D.72113
  # DEBUG __x => &D.72093
  # DEBUG __it => _164
  # DEBUG __it$8 => _165
  # DEBUG __it$16 => D#1174
  # DEBUG __it$24 => _167
  # DEBUG __it$_M_cur => _164
  # DEBUG __it$_M_first => _165
  # DEBUG __it$_M_last => D#1174
  # DEBUG __it$_M_node => _167
  # DEBUG __it => __first_168
  # DEBUG __it$8 => D#1181
  # DEBUG __it$16 => __first$_M_last_170
  # DEBUG __it$24 => __first$_M_node_171
  # DEBUG __it$_M_cur => __first_168
  # DEBUG __it$_M_first => D#1181
  # DEBUG __it$_M_last => __first$_M_last_170
  # DEBUG __it$_M_node => __first$_M_node_171
  # DEBUG __result => &D.72113
  # DEBUG this => NULL
  # DEBUG __x => &D.72113
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _164
  # DEBUG __it$8 => _165
  # DEBUG __it$16 => D#1174
  # DEBUG __it$24 => _167
  # DEBUG __it$_M_cur => _164
  # DEBUG __it$_M_first => _165
  # DEBUG __it$_M_last => D#1174
  # DEBUG __it$_M_node => _167
  # DEBUG __it => __first_168
  # DEBUG __it$8 => D#1181
  # DEBUG __it$16 => __first$_M_last_170
  # DEBUG __it$24 => __first$_M_node_171
  # DEBUG __it$_M_cur => __first_168
  # DEBUG __it$_M_first => D#1181
  # DEBUG __it$_M_last => __first$_M_last_170
  # DEBUG __it$_M_node => __first$_M_node_171
  # DEBUG __first => __first_168
  # DEBUG __first$8 => D#1181
  # DEBUG __first$16 => __first$_M_last_170
  # DEBUG __first$24 => __first$_M_node_171
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.72138
  # DEBUG __x => NULL
  # DEBUG __first => __first_168
  # DEBUG __first$_M_first => D#1181
  # DEBUG __first$_M_last => __first$_M_last_170
  # DEBUG __first$_M_node => __first$_M_node_171
  # DEBUG __result => &D.72138
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _204 = (long int) _167;
  _206 = (long int) __first$_M_node_171;
  _207 = _204 - _206;
  _208 = _207 /[ex] 8;
  _209 = _208 + -1;
  _210 = _209 * 128;
  _212 = (long int) _164;
  _214 = (long int) _165;
  _215 = _212 - _214;
  _216 = _215 /[ex] 4;
  _217 = _210 + _216;
  _219 = (long int) __first$_M_last_170;
  _221 = (long int) __first_168;
  _222 = _219 - _221;
  _223 = _222 /[ex] 4;
  __n_224 = _217 + _223;
  # DEBUG __n => __n_224
  # DEBUG __n => __n_224
  if (__n_224 <= 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &D.72078
  # DEBUG __x => &D.72138
  D.72138 ={v} {CLOBBER};
  D.72113 ={v} {CLOBBER};
  D.72093 ={v} {CLOBBER};
  D.72079 ={v} {CLOBBER};
  D.72071 ={v} {CLOBBER};
  # DEBUG this => this_9(D)
  # DEBUG D#85 => &this_9(D)->D.41195._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#85
  __old_finish_26 = MEM[(struct queue * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.46169
  # DEBUG __rhs => &__position
  # DEBUG this => &D.46169
  _37 = (long int) __old_finish_26;
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = _37 - _35;
  _30 = _31 /[ex] 80;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_26
  if (__n_7(D) < __elems_after_57)
    goto <bb 13>;
  else
    goto <bb 48>;

  <bb 6>:

  <bb 7>:
  # __n_250 = PHI <__n_224(6), __n_234(12)>
  # SR.2146_1317 = PHI <_160(6), SR.2146_1316(12)>
  # SR.2147_1314 = PHI <_162(6), SR.2147_1313(12)>
  # SR.2148_1312 = PHI <_163(6), SR.2148_1311(12)>
  # __first_1309 = PHI <__first_168(6), __first_1308(12)>
  # __first$_M_last_1305 = PHI <__first$_M_last_170(6), __first$_M_last_1304(12)>
  # __first$_M_node_1303 = PHI <__first$_M_node_171(6), __first$_M_node_1301(12)>
  # DEBUG __first$_M_node => __first$_M_node_1303
  # DEBUG __first$_M_last => __first$_M_last_1305
  # DEBUG __first => __first_1309
  # DEBUG __n => __n_250
  # DEBUG D#100 => &D.72138
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _228 = MEM[(const int &)__first_1309];
  *SR.2146_1317 = _228;
  # DEBUG this => &__first
  __first_229 = __first_1309 + 4;
  # DEBUG __first => __first_229
  if (__first_229 == __first$_M_last_1305)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG this => &__first
  __first$_M_node_240 = __first$_M_node_1303 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_240
  # DEBUG __first$_M_node => __first$_M_node_240
  __first_241 = MEM[(int * *)__first$_M_node_1303 + 8B];
  # DEBUG __size => 4
  __first$_M_last_242 = __first_241 + 512;
  # DEBUG __first$_M_last => __first$_M_last_242
  # DEBUG __first => __first_241

  <bb 9>:
  # __first_1308 = PHI <__first_229(7), __first_241(8)>
  # __first$_M_last_1304 = PHI <__first$_M_last_1305(7), __first$_M_last_242(8)>
  # __first$_M_node_1301 = PHI <__first$_M_node_1303(7), __first$_M_node_240(8)>
  # DEBUG __first$_M_node => __first$_M_node_1301
  # DEBUG __first$_M_last => __first$_M_last_1304
  # DEBUG __first => __first_1308
  # DEBUG this => &D.72138
  _232 = SR.2146_1317 + 4;
  if (_232 == SR.2147_1314)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &D.72138
  _244 = SR.2148_1312 + 8;
  # DEBUG this => &D.72138
  # DEBUG __new_node => _244
  _245 = MEM[(int * *)SR.2148_1312 + 8B];
  # DEBUG __size => 4
  _246 = _245 + 512;

  <bb 11>:
  # SR.2146_1316 = PHI <_232(9), _245(10)>
  # SR.2147_1313 = PHI <SR.2147_1314(9), _246(10)>
  # SR.2148_1311 = PHI <SR.2148_1312(9), _244(10)>
  __n_234 = __n_250 + -1;
  # DEBUG __n => __n_234
  # DEBUG __n => __n_234
  if (__n_234 <= 0)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 7>;

  <bb 13>:
  # DEBUG D#701 => &this_9(D)->D.41195
  # DEBUG this => D#701
  _59 = __n_7(D) * 80;
  _60 = -_59;
  __last_61 = __old_finish_26 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __alloc => D#609
  # DEBUG D#608 => D#609
  # DEBUG D#607 => D#608
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG D.61759 => D#607
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __cur => __old_finish_26
  # DEBUG __cur => __old_finish_26
  # DEBUG __first => __last_61
  if (__old_finish_26 == __last_61)
    goto <bb 29>;
  else
    goto <bb 14>;

  <bb 14>:

  <bb 15>:
  # __last_1063 = PHI <__last_61(14), __last_251(27)>
  # __old_finish_665 = PHI <__old_finish_26(14), __old_finish_252(27)>
  # DEBUG __cur => __old_finish_665
  # DEBUG __first => __last_1063
  # DEBUG __r => __old_finish_665
  # DEBUG __p => NULL
  # DEBUG __value => __last_1063
  # DEBUG D#11 => 80
  # DEBUG __p => NULL
  # DEBUG D.60612 => D#11
  if (__old_finish_665 != 0B)
    goto <bb 16>;
  else
    goto <bb 26>;

  <bb 16>:
  # DEBUG this => NULL
  # DEBUG D.72172 => __last_1063
  # DEBUG D#1159 => &MEM[(const struct queue &)__last_1063].c
  # DEBUG D#1171 => &__old_finish_665->c
  # DEBUG this => D#1171
  # DEBUG __x => D#1159
  # DEBUG this => D#1159
  # DEBUG D#174 => &D#1159->D.43590._M_impl._M_start
  # DEBUG D#175 => &D#1159->D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _124 = MEM[(const struct _Deque_iterator &)__last_1063 + 48]._M_node;
  _257 = (long int) _124;
  _258 = MEM[(const struct _Deque_iterator &)__last_1063 + 16]._M_node;
  _259 = (long int) _258;
  _260 = _257 - _259;
  _261 = _260 /[ex] 8;
  _262 = _261 + -1;
  _263 = _262 * 128;
  _264 = MEM[(const struct _Deque_iterator &)__last_1063 + 48]._M_cur;
  _265 = (long int) _264;
  _266 = MEM[(const struct _Deque_iterator &)__last_1063 + 48]._M_first;
  _267 = (long int) _266;
  _268 = _265 - _267;
  _269 = _268 /[ex] 4;
  _270 = _263 + _269;
  _271 = MEM[(const struct _Deque_iterator &)__last_1063 + 16]._M_last;
  _272 = (long int) _271;
  _273 = MEM[(const struct _Deque_iterator &)__last_1063 + 16]._M_cur;
  _274 = (long int) _273;
  _275 = _272 - _274;
  _276 = _275 /[ex] 4;
  _277 = _270 + _276;
  _278 = (size_type) _277;
  # DEBUG D#604 => &D#1159->D.43590
  # DEBUG this => D#604
  # DEBUG __a => NULL
  _279 = &MEM[(struct deque *)__old_finish_665].D.43590;
  # DEBUG this => _279
  # DEBUG __a => NULL
  # DEBUG __num_elements => _278
  # DEBUG D#484 => &_279->_M_impl
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG D.55189 => NULL
  MEM[(struct _Deque_impl *)__old_finish_665]._M_map = 0B;
  MEM[(struct _Deque_impl *)__old_finish_665]._M_map_size = 0;
  # DEBUG D#241 => &D#484->_M_start
  # DEBUG this => D#241
  MEM[(struct _Deque_iterator *)__old_finish_665 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_665 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_665 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_665 + 16B]._M_node = 0B;
  # DEBUG D#240 => &D#484->_M_finish
  # DEBUG this => D#240
  MEM[(struct _Deque_iterator *)__old_finish_665 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_665 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_665 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_665 + 48B]._M_node = 0B;
  std::_Deque_base<int, std::allocator<int> >::_M_initialize_map (_279, _278);

  <bb 17>:
  # DEBUG D#605 => &D#1171->D.43590
  # DEBUG this => D#605
  # DEBUG D#606 => &D#1171->D.43590._M_impl._M_start
  # DEBUG this => &D.72200
  # DEBUG __x => D#606
  _280 = MEM[(const struct iterator &)__old_finish_665 + 16]._M_cur;
  _282 = MEM[(const struct iterator &)__old_finish_665 + 16]._M_last;
  _283 = MEM[(const struct iterator &)__old_finish_665 + 16]._M_node;
  # DEBUG this => D#1159
  # DEBUG D#83 => &D#1159->D.43590._M_impl._M_finish
  # DEBUG this => &D.72199
  # DEBUG __x => D#83
  _284 = MEM[(const struct iterator &)__last_1063 + 48]._M_cur;
  _285 = MEM[(const struct iterator &)__last_1063 + 48]._M_first;
  # DEBUG D#1168 => MEM[(const struct iterator &)__last_1063 + 48]._M_last
  _287 = MEM[(const struct iterator &)__last_1063 + 48]._M_node;
  # DEBUG this => D#1159
  # DEBUG D#84 => &D#1159->D.43590._M_impl._M_start
  # DEBUG this => &D.72198
  # DEBUG __x => D#84
  __first_288 = MEM[(const struct iterator &)__last_1063 + 16]._M_cur;
  # DEBUG D#1178 => MEM[(const struct iterator &)__last_1063 + 16]._M_first
  __first$_M_last_290 = MEM[(const struct iterator &)__last_1063 + 16]._M_last;
  __first$_M_node_291 = MEM[(const struct iterator &)__last_1063 + 16]._M_node;
  # DEBUG __result => &D.72200
  # DEBUG D.72204 => D#603
  # DEBUG this => &D.72208
  # DEBUG __x => &D.72200
  # DEBUG __result => &D.72208
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.72208
  # DEBUG __result => NULL
  # DEBUG this => &D.72222
  # DEBUG __x => NULL
  # DEBUG __result => &D.72222
  # DEBUG this => &D.72242
  # DEBUG __x => &D.72222
  # DEBUG __it => _284
  # DEBUG __it$8 => _285
  # DEBUG __it$16 => D#1168
  # DEBUG __it$24 => _287
  # DEBUG __it$_M_cur => _284
  # DEBUG __it$_M_first => _285
  # DEBUG __it$_M_last => D#1168
  # DEBUG __it$_M_node => _287
  # DEBUG __it => __first_288
  # DEBUG __it$8 => D#1178
  # DEBUG __it$16 => __first$_M_last_290
  # DEBUG __it$24 => __first$_M_node_291
  # DEBUG __it$_M_cur => __first_288
  # DEBUG __it$_M_first => D#1178
  # DEBUG __it$_M_last => __first$_M_last_290
  # DEBUG __it$_M_node => __first$_M_node_291
  # DEBUG __result => &D.72242
  # DEBUG this => NULL
  # DEBUG __x => &D.72242
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _284
  # DEBUG __it$8 => _285
  # DEBUG __it$16 => D#1168
  # DEBUG __it$24 => _287
  # DEBUG __it$_M_cur => _284
  # DEBUG __it$_M_first => _285
  # DEBUG __it$_M_last => D#1168
  # DEBUG __it$_M_node => _287
  # DEBUG __it => __first_288
  # DEBUG __it$8 => D#1178
  # DEBUG __it$16 => __first$_M_last_290
  # DEBUG __it$24 => __first$_M_node_291
  # DEBUG __it$_M_cur => __first_288
  # DEBUG __it$_M_first => D#1178
  # DEBUG __it$_M_last => __first$_M_last_290
  # DEBUG __it$_M_node => __first$_M_node_291
  # DEBUG __first => __first_288
  # DEBUG __first$8 => D#1178
  # DEBUG __first$16 => __first$_M_last_290
  # DEBUG __first$24 => __first$_M_node_291
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.72267
  # DEBUG __x => NULL
  # DEBUG __first => __first_288
  # DEBUG __first$_M_first => D#1178
  # DEBUG __first$_M_last => __first$_M_last_290
  # DEBUG __first$_M_node => __first$_M_node_291
  # DEBUG __result => &D.72267
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _325 = (long int) _287;
  _327 = (long int) __first$_M_node_291;
  _328 = _325 - _327;
  _329 = _328 /[ex] 8;
  _330 = _329 + -1;
  _331 = _330 * 128;
  _333 = (long int) _284;
  _335 = (long int) _285;
  _336 = _333 - _335;
  _337 = _336 /[ex] 4;
  _338 = _331 + _337;
  _340 = (long int) __first$_M_last_290;
  _342 = (long int) __first_288;
  _343 = _340 - _342;
  _344 = _343 /[ex] 4;
  __n_345 = _338 + _344;
  # DEBUG __n => __n_345
  # DEBUG __n => __n_345
  if (__n_345 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG this => &D.72207
  # DEBUG __x => &D.72267
  D.72267 ={v} {CLOBBER};
  D.72242 ={v} {CLOBBER};
  D.72222 ={v} {CLOBBER};
  D.72208 ={v} {CLOBBER};
  D.72200 ={v} {CLOBBER};
  goto <bb 26>;

  <bb 19>:

  <bb 20>:
  # __n_1065 = PHI <__n_345(19), __n_355(25)>
  # SR.2156_1296 = PHI <_280(19), SR.2156_1295(25)>
  # SR.2157_1294 = PHI <_282(19), SR.2157_1293(25)>
  # SR.2158_1223 = PHI <_283(19), SR.2158_1222(25)>
  # __first_1220 = PHI <__first_288(19), __first_1219(25)>
  # __first$_M_last_1218 = PHI <__first$_M_last_290(19), __first$_M_last_1217(25)>
  # __first$_M_node_1215 = PHI <__first$_M_node_291(19), __first$_M_node_1214(25)>
  # DEBUG __first$_M_node => __first$_M_node_1215
  # DEBUG __first$_M_last => __first$_M_last_1218
  # DEBUG __first => __first_1220
  # DEBUG __n => __n_1065
  # DEBUG D#100 => &D.72267
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _349 = MEM[(const int &)__first_1220];
  *SR.2156_1296 = _349;
  # DEBUG this => &__first
  __first_350 = __first_1220 + 4;
  # DEBUG __first => __first_350
  if (__first_350 == __first$_M_last_1218)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG this => &__first
  __first$_M_node_361 = __first$_M_node_1215 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_361
  # DEBUG __first$_M_node => __first$_M_node_361
  __first_362 = MEM[(int * *)__first$_M_node_1215 + 8B];
  # DEBUG __size => 4
  __first$_M_last_363 = __first_362 + 512;
  # DEBUG __first$_M_last => __first$_M_last_363
  # DEBUG __first => __first_362

  <bb 22>:
  # __first_1219 = PHI <__first_350(20), __first_362(21)>
  # __first$_M_last_1217 = PHI <__first$_M_last_1218(20), __first$_M_last_363(21)>
  # __first$_M_node_1214 = PHI <__first$_M_node_1215(20), __first$_M_node_361(21)>
  # DEBUG __first$_M_node => __first$_M_node_1214
  # DEBUG __first$_M_last => __first$_M_last_1217
  # DEBUG __first => __first_1219
  # DEBUG this => &D.72267
  _353 = SR.2156_1296 + 4;
  if (_353 == SR.2157_1294)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG this => &D.72267
  _365 = SR.2158_1223 + 8;
  # DEBUG this => &D.72267
  # DEBUG __new_node => _365
  _366 = MEM[(int * *)SR.2158_1223 + 8B];
  # DEBUG __size => 4
  _367 = _366 + 512;

  <bb 24>:
  # SR.2156_1295 = PHI <_353(22), _366(23)>
  # SR.2157_1293 = PHI <SR.2157_1294(22), _367(23)>
  # SR.2158_1222 = PHI <SR.2158_1223(22), _365(23)>
  __n_355 = __n_1065 + -1;
  # DEBUG __n => __n_355
  # DEBUG __n => __n_355
  if (__n_355 <= 0)
    goto <bb 18>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 20>;

  <bb 26>:
  __last_251 = __last_1063 + 80;
  # DEBUG __first => __last_251
  __old_finish_252 = __old_finish_665 + 80;
  # DEBUG __cur => __old_finish_252
  # DEBUG __cur => __old_finish_252
  # DEBUG __first => __last_251
  if (__old_finish_26 == __last_251)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 15>;

  <bb 28>:
  pretmp_1005 = this_9(D)->D.41195._M_impl._M_finish;

  <bb 29>:
  # prephitmp_247 = PHI <pretmp_1005(28), __old_finish_26(13)>
  _63 = prephitmp_247 + _59;
  this_9(D)->D.41195._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#1186
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#1186
  # DEBUG __it => D#1186
  # DEBUG __first => D#1186
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#1186
  # DEBUG __it => D#1186
  # DEBUG __first => D#1186
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __simple => 0
  # DEBUG __first => D#1186
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  __last.100_21 = (long int) __last_61;
  _73 = __last.100_21 - _35;
  __n_72 = _73 /[ex] 80;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => __old_finish_26
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 30>;
  else
    goto <bb 37>;

  <bb 30>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#1186
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1186
  if (__position_23 == _67)
    goto <bb 42>;
  else
    goto <bb 43>;

  # __old_finish_1042 = PHI <__old_finish_665(16)>
<L19>:
  _253 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_253);
  # DEBUG __first => __old_finish_26
  # DEBUG __last => __old_finish_1042
  # DEBUG __first => __old_finish_26
  # DEBUG __last => __old_finish_1042
  # DEBUG __first => __old_finish_26
  if (__old_finish_26 == __old_finish_1042)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  __cxa_rethrow ();

  <bb 33>:

  <bb 34>:
  # __old_finish_1064 = PHI <__old_finish_26(33), __old_finish_256(35)>
  # DEBUG __first => __old_finish_1064
  # DEBUG __r => __old_finish_1064
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  _255 = &MEM[(struct deque *)__old_finish_1064].D.43590;
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (_255);
  MEM[(struct  &)__old_finish_1064] ={v} {CLOBBER};
  __old_finish_256 = __old_finish_1064 + 80;
  # DEBUG __first => __old_finish_256
  # DEBUG __first => __old_finish_256
  if (__old_finish_256 == __old_finish_1042)
    goto <bb 32>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 34>;

<L21>:
  __cxa_end_catch ();
  resx 13

  <bb 37>:

  <bb 38>:
  # __old_finish_1401 = PHI <__old_finish_26(37), __old_finish_58(41)>
  # __last_1403 = PHI <__last_61(37), __last_66(41)>
  # __n_1407 = PHI <__n_72(37), __n_81(41)>
  # DEBUG __n => __n_1407
  # DEBUG __result => __old_finish_1401
  # DEBUG __last => __last_1403
  __last_66 = __last_1403 + 18446744073709551536;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_1401 + 18446744073709551536;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG D.61789 => __last_66
  _56 = &MEM[(const struct queue &)__last_66].c;
  _80 = &__old_finish_58->c;
  std::deque<int, std::allocator<int> >::operator= (_80, _56);
  goto <bb 40>;

<L40>:
  goto <bb 193> (<L10>);

  <bb 40>:
  __n_81 = __n_1407 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 30>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 38>;

  <bb 42>:
  goto <bb 99>;

  <bb 43>:

  <bb 44>:
  # __position_1419 = PHI <__position_23(43), __position_84(47)>
  # DEBUG __first => __position_1419
  # DEBUG this => __position_1419
  # DEBUG D.61800 => &__x_copy
  _83 = &__position_1419->c;
  std::deque<int, std::allocator<int> >::operator= (_83, &__x_copy.c);
  goto <bb 46>;

<L41>:
  goto <bb 193> (<L10>);

  <bb 46>:
  __position_84 = __position_1419 + 80;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 42>;
  else
    goto <bb 47>;

  <bb 47>:
  goto <bb 44>;

  <bb 48>:
  # DEBUG D#702 => &this_9(D)->D.41195
  # DEBUG this => D#702
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_26
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.61809 => D#612
  # DEBUG __first => __old_finish_26
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __old_finish_26
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => __old_finish_26
  # DEBUG __cur => __old_finish_26
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 64>;
  else
    goto <bb 49>;

  <bb 49>:

  <bb 50>:
  # __n_1066 = PHI <__n_70(49), __n_372(63)>
  # __old_finish_1067 = PHI <__old_finish_26(49), __old_finish_373(63)>
  # DEBUG __cur => __old_finish_1067
  # DEBUG __n => __n_1066
  # DEBUG __r => __old_finish_1067
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#11 => 80
  # DEBUG __p => NULL
  # DEBUG D.60612 => D#11
  if (__old_finish_1067 != 0B)
    goto <bb 51>;
  else
    goto <bb 61>;

  <bb 51>:
  # DEBUG this => NULL
  # DEBUG D.72301 => &__x_copy
  # DEBUG D#1172 => &__old_finish_1067->c
  # DEBUG this => D#1172
  # DEBUG __x => &__x_copy.c
  # DEBUG this => &__x_copy.c
  # DEBUG D#174 => &MEM[(const struct deque *)&__x_copy].D.43590._M_impl._M_start
  # DEBUG D#175 => &MEM[(const struct deque *)&__x_copy].D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _127 = MEM[(const struct _Deque_iterator &)&__x_copy + 48]._M_node;
  _378 = (long int) _127;
  _379 = MEM[(const struct _Deque_iterator &)&__x_copy + 16]._M_node;
  _380 = (long int) _379;
  _381 = _378 - _380;
  _382 = _381 /[ex] 8;
  _383 = _382 + -1;
  _384 = _383 * 128;
  _385 = MEM[(const struct _Deque_iterator &)&__x_copy + 48]._M_cur;
  _386 = (long int) _385;
  _387 = MEM[(const struct _Deque_iterator &)&__x_copy + 48]._M_first;
  _388 = (long int) _387;
  _389 = _386 - _388;
  _390 = _389 /[ex] 4;
  _391 = _384 + _390;
  _392 = MEM[(const struct _Deque_iterator &)&__x_copy + 16]._M_last;
  _393 = (long int) _392;
  _394 = MEM[(const struct _Deque_iterator &)&__x_copy + 16]._M_cur;
  _395 = (long int) _394;
  _396 = _393 - _395;
  _397 = _396 /[ex] 4;
  _398 = _391 + _397;
  _399 = (size_type) _398;
  # DEBUG D#604 => &MEM[(const struct deque *)&__x_copy].D.43590
  # DEBUG this => D#604
  # DEBUG __a => NULL
  _400 = &MEM[(struct deque *)__old_finish_1067].D.43590;
  # DEBUG this => _400
  # DEBUG __a => NULL
  # DEBUG __num_elements => _399
  # DEBUG D#484 => &_400->_M_impl
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG D.55189 => NULL
  MEM[(struct _Deque_impl *)__old_finish_1067]._M_map = 0B;
  MEM[(struct _Deque_impl *)__old_finish_1067]._M_map_size = 0;
  # DEBUG D#241 => &D#484->_M_start
  # DEBUG this => D#241
  MEM[(struct _Deque_iterator *)__old_finish_1067 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1067 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1067 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1067 + 16B]._M_node = 0B;
  # DEBUG D#240 => &D#484->_M_finish
  # DEBUG this => D#240
  MEM[(struct _Deque_iterator *)__old_finish_1067 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1067 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1067 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1067 + 48B]._M_node = 0B;
  std::_Deque_base<int, std::allocator<int> >::_M_initialize_map (_400, _399);

  <bb 52>:
  # DEBUG D#605 => &D#1172->D.43590
  # DEBUG this => D#605
  # DEBUG D#606 => &D#1172->D.43590._M_impl._M_start
  # DEBUG this => &D.72329
  # DEBUG __x => D#606
  _401 = MEM[(const struct iterator &)__old_finish_1067 + 16]._M_cur;
  _403 = MEM[(const struct iterator &)__old_finish_1067 + 16]._M_last;
  _404 = MEM[(const struct iterator &)__old_finish_1067 + 16]._M_node;
  # DEBUG this => &__x_copy.c
  # DEBUG D#83 => &MEM[(const struct deque *)&__x_copy].D.43590._M_impl._M_finish
  # DEBUG this => &D.72328
  # DEBUG __x => D#83
  _405 = MEM[(const struct iterator &)&__x_copy + 48]._M_cur;
  _406 = MEM[(const struct iterator &)&__x_copy + 48]._M_first;
  # DEBUG D#1169 => MEM[(const struct iterator &)&__x_copy + 48]._M_last
  _408 = MEM[(const struct iterator &)&__x_copy + 48]._M_node;
  # DEBUG this => &__x_copy.c
  # DEBUG D#84 => &MEM[(const struct deque *)&__x_copy].D.43590._M_impl._M_start
  # DEBUG this => &D.72327
  # DEBUG __x => D#84
  __first_409 = MEM[(const struct iterator &)&__x_copy + 16]._M_cur;
  # DEBUG D#1179 => MEM[(const struct iterator &)&__x_copy + 16]._M_first
  __first$_M_last_411 = MEM[(const struct iterator &)&__x_copy + 16]._M_last;
  __first$_M_node_412 = MEM[(const struct iterator &)&__x_copy + 16]._M_node;
  # DEBUG __result => &D.72329
  # DEBUG D.72333 => D#603
  # DEBUG this => &D.72337
  # DEBUG __x => &D.72329
  # DEBUG __result => &D.72337
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.72337
  # DEBUG __result => NULL
  # DEBUG this => &D.72351
  # DEBUG __x => NULL
  # DEBUG __result => &D.72351
  # DEBUG this => &D.72371
  # DEBUG __x => &D.72351
  # DEBUG __it => _405
  # DEBUG __it$8 => _406
  # DEBUG __it$16 => D#1169
  # DEBUG __it$24 => _408
  # DEBUG __it$_M_cur => _405
  # DEBUG __it$_M_first => _406
  # DEBUG __it$_M_last => D#1169
  # DEBUG __it$_M_node => _408
  # DEBUG __it => __first_409
  # DEBUG __it$8 => D#1179
  # DEBUG __it$16 => __first$_M_last_411
  # DEBUG __it$24 => __first$_M_node_412
  # DEBUG __it$_M_cur => __first_409
  # DEBUG __it$_M_first => D#1179
  # DEBUG __it$_M_last => __first$_M_last_411
  # DEBUG __it$_M_node => __first$_M_node_412
  # DEBUG __result => &D.72371
  # DEBUG this => NULL
  # DEBUG __x => &D.72371
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _405
  # DEBUG __it$8 => _406
  # DEBUG __it$16 => D#1169
  # DEBUG __it$24 => _408
  # DEBUG __it$_M_cur => _405
  # DEBUG __it$_M_first => _406
  # DEBUG __it$_M_last => D#1169
  # DEBUG __it$_M_node => _408
  # DEBUG __it => __first_409
  # DEBUG __it$8 => D#1179
  # DEBUG __it$16 => __first$_M_last_411
  # DEBUG __it$24 => __first$_M_node_412
  # DEBUG __it$_M_cur => __first_409
  # DEBUG __it$_M_first => D#1179
  # DEBUG __it$_M_last => __first$_M_last_411
  # DEBUG __it$_M_node => __first$_M_node_412
  # DEBUG __first => __first_409
  # DEBUG __first$8 => D#1179
  # DEBUG __first$16 => __first$_M_last_411
  # DEBUG __first$24 => __first$_M_node_412
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.72396
  # DEBUG __x => NULL
  # DEBUG __first => __first_409
  # DEBUG __first$_M_first => D#1179
  # DEBUG __first$_M_last => __first$_M_last_411
  # DEBUG __first$_M_node => __first$_M_node_412
  # DEBUG __result => &D.72396
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _446 = (long int) _408;
  _448 = (long int) __first$_M_node_412;
  _449 = _446 - _448;
  _450 = _449 /[ex] 8;
  _451 = _450 + -1;
  _452 = _451 * 128;
  _454 = (long int) _405;
  _456 = (long int) _406;
  _457 = _454 - _456;
  _458 = _457 /[ex] 4;
  _459 = _452 + _458;
  _461 = (long int) __first$_M_last_411;
  _463 = (long int) __first_409;
  _464 = _461 - _463;
  _465 = _464 /[ex] 4;
  __n_466 = _459 + _465;
  # DEBUG __n => __n_466
  # DEBUG __n => __n_466
  if (__n_466 <= 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG this => &D.72336
  # DEBUG __x => &D.72396
  D.72396 ={v} {CLOBBER};
  D.72371 ={v} {CLOBBER};
  D.72351 ={v} {CLOBBER};
  D.72337 ={v} {CLOBBER};
  D.72329 ={v} {CLOBBER};
  goto <bb 61>;

  <bb 54>:

  <bb 55>:
  # __n_1069 = PHI <__n_466(54), __n_476(60)>
  # SR.2166_1211 = PHI <_401(54), SR.2166_1210(60)>
  # SR.2167_1209 = PHI <_403(54), SR.2167_1207(60)>
  # SR.2168_1202 = PHI <_404(54), SR.2168_1201(60)>
  # __first_1200 = PHI <__first_409(54), __first_1199(60)>
  # __first$_M_last_1129 = PHI <__first$_M_last_411(54), __first$_M_last_1128(60)>
  # __first$_M_node_1126 = PHI <__first$_M_node_412(54), __first$_M_node_1125(60)>
  # DEBUG __first$_M_node => __first$_M_node_1126
  # DEBUG __first$_M_last => __first$_M_last_1129
  # DEBUG __first => __first_1200
  # DEBUG __n => __n_1069
  # DEBUG D#100 => &D.72396
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _470 = MEM[(const int &)__first_1200];
  *SR.2166_1211 = _470;
  # DEBUG this => &__first
  __first_471 = __first_1200 + 4;
  # DEBUG __first => __first_471
  if (__first_471 == __first$_M_last_1129)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # DEBUG this => &__first
  __first$_M_node_482 = __first$_M_node_1126 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_482
  # DEBUG __first$_M_node => __first$_M_node_482
  __first_483 = MEM[(int * *)__first$_M_node_1126 + 8B];
  # DEBUG __size => 4
  __first$_M_last_484 = __first_483 + 512;
  # DEBUG __first$_M_last => __first$_M_last_484
  # DEBUG __first => __first_483

  <bb 57>:
  # __first_1199 = PHI <__first_471(55), __first_483(56)>
  # __first$_M_last_1128 = PHI <__first$_M_last_1129(55), __first$_M_last_484(56)>
  # __first$_M_node_1125 = PHI <__first$_M_node_1126(55), __first$_M_node_482(56)>
  # DEBUG __first$_M_node => __first$_M_node_1125
  # DEBUG __first$_M_last => __first$_M_last_1128
  # DEBUG __first => __first_1199
  # DEBUG this => &D.72396
  _474 = SR.2166_1211 + 4;
  if (_474 == SR.2167_1209)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG this => &D.72396
  _486 = SR.2168_1202 + 8;
  # DEBUG this => &D.72396
  # DEBUG __new_node => _486
  _487 = MEM[(int * *)SR.2168_1202 + 8B];
  # DEBUG __size => 4
  _488 = _487 + 512;

  <bb 59>:
  # SR.2166_1210 = PHI <_474(57), _487(58)>
  # SR.2167_1207 = PHI <SR.2167_1209(57), _488(58)>
  # SR.2168_1201 = PHI <SR.2168_1202(57), _486(58)>
  __n_476 = __n_1069 + -1;
  # DEBUG __n => __n_476
  # DEBUG __n => __n_476
  if (__n_476 <= 0)
    goto <bb 53>;
  else
    goto <bb 60>;

  <bb 60>:
  goto <bb 55>;

  <bb 61>:
  __n_372 = __n_1066 + 18446744073709551615;
  # DEBUG __n => __n_372
  __old_finish_373 = __old_finish_1067 + 80;
  # DEBUG __cur => __old_finish_373
  # DEBUG __cur => __old_finish_373
  # DEBUG __n => __n_372
  if (__n_372 == 0)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # __old_finish_1043 = PHI <__old_finish_373(61)>
  goto <bb 64>;

  <bb 63>:
  goto <bb 50>;

  <bb 64>:
  # __old_finish_1068 = PHI <__old_finish_1043(62), __old_finish_26(48)>
  this_9(D)->D.41195._M_impl._M_finish = __old_finish_1068;
  # DEBUG D#703 => &this_9(D)->D.41195
  # DEBUG this => D#703
  # DEBUG this => &__position
  # DEBUG __first => D#1186
  # DEBUG __last => __old_finish_26
  # DEBUG __result => NULL
  # DEBUG __alloc => D#609
  # DEBUG D#608 => D#609
  # DEBUG D#607 => D#608
  # DEBUG __first => D#1186
  # DEBUG __last => __old_finish_26
  # DEBUG __result => NULL
  # DEBUG D.61822 => D#607
  # DEBUG __first => D#1186
  # DEBUG __last => __old_finish_26
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1186
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_1068
  # DEBUG __cur => __old_finish_1068
  # DEBUG __first => D#1186
  if (__position_23 == __old_finish_26)
    goto <bb 210>;
  else
    goto <bb 72>;

  # __old_finish_1032 = PHI <__old_finish_1067(51)>
<L22>:
  _374 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_374);
  # DEBUG __first => __old_finish_26
  # DEBUG __last => __old_finish_1032
  # DEBUG __first => __old_finish_26
  # DEBUG __last => __old_finish_1032
  # DEBUG __first => __old_finish_26
  if (__old_finish_26 == __old_finish_1032)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  __cxa_rethrow ();

  <bb 67>:

  <bb 68>:
  # __old_finish_670 = PHI <__old_finish_26(67), __old_finish_377(69)>
  # DEBUG __first => __old_finish_670
  # DEBUG __r => __old_finish_670
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  _376 = &MEM[(struct deque *)__old_finish_670].D.43590;
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (_376);
  MEM[(struct  &)__old_finish_670] ={v} {CLOBBER};
  __old_finish_377 = __old_finish_670 + 80;
  # DEBUG __first => __old_finish_377
  # DEBUG __first => __old_finish_377
  if (__old_finish_377 == __old_finish_1032)
    goto <bb 66>;
  else
    goto <bb 69>;

  <bb 69>:
  goto <bb 68>;

<L24>:
  __cxa_end_catch ();
  resx 16

<L42>:
  goto <bb 193> (<L10>);

  <bb 72>:

  <bb 73>:
  # __position_1070 = PHI <__position_23(72), __position_493(85)>
  # __old_finish_1071 = PHI <__old_finish_1068(72), __old_finish_494(85)>
  # DEBUG __cur => __old_finish_1071
  # DEBUG __first => __position_1070
  # DEBUG __r => __old_finish_1071
  # DEBUG __p => NULL
  # DEBUG __value => __position_1070
  # DEBUG D#11 => 80
  # DEBUG __p => NULL
  # DEBUG D.60612 => D#11
  if (__old_finish_1071 != 0B)
    goto <bb 74>;
  else
    goto <bb 84>;

  <bb 74>:
  # DEBUG this => NULL
  # DEBUG D.72430 => __position_1070
  # DEBUG D#1160 => &MEM[(const struct queue &)__position_1070].c
  # DEBUG D#1167 => &__old_finish_1071->c
  # DEBUG this => D#1167
  # DEBUG __x => D#1160
  # DEBUG this => D#1160
  # DEBUG D#174 => &D#1160->D.43590._M_impl._M_start
  # DEBUG D#175 => &D#1160->D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _128 = MEM[(const struct _Deque_iterator &)__position_1070 + 48]._M_node;
  _499 = (long int) _128;
  _500 = MEM[(const struct _Deque_iterator &)__position_1070 + 16]._M_node;
  _501 = (long int) _500;
  _502 = _499 - _501;
  _503 = _502 /[ex] 8;
  _504 = _503 + -1;
  _505 = _504 * 128;
  _506 = MEM[(const struct _Deque_iterator &)__position_1070 + 48]._M_cur;
  _507 = (long int) _506;
  _508 = MEM[(const struct _Deque_iterator &)__position_1070 + 48]._M_first;
  _509 = (long int) _508;
  _510 = _507 - _509;
  _511 = _510 /[ex] 4;
  _512 = _505 + _511;
  _513 = MEM[(const struct _Deque_iterator &)__position_1070 + 16]._M_last;
  _514 = (long int) _513;
  _515 = MEM[(const struct _Deque_iterator &)__position_1070 + 16]._M_cur;
  _516 = (long int) _515;
  _517 = _514 - _516;
  _518 = _517 /[ex] 4;
  _519 = _512 + _518;
  _520 = (size_type) _519;
  # DEBUG D#604 => &D#1160->D.43590
  # DEBUG this => D#604
  # DEBUG __a => NULL
  _521 = &MEM[(struct deque *)__old_finish_1071].D.43590;
  # DEBUG this => _521
  # DEBUG __a => NULL
  # DEBUG __num_elements => _520
  # DEBUG D#484 => &_521->_M_impl
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG D.55189 => NULL
  MEM[(struct _Deque_impl *)__old_finish_1071]._M_map = 0B;
  MEM[(struct _Deque_impl *)__old_finish_1071]._M_map_size = 0;
  # DEBUG D#241 => &D#484->_M_start
  # DEBUG this => D#241
  MEM[(struct _Deque_iterator *)__old_finish_1071 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1071 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1071 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1071 + 16B]._M_node = 0B;
  # DEBUG D#240 => &D#484->_M_finish
  # DEBUG this => D#240
  MEM[(struct _Deque_iterator *)__old_finish_1071 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1071 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1071 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_1071 + 48B]._M_node = 0B;
  std::_Deque_base<int, std::allocator<int> >::_M_initialize_map (_521, _520);

  <bb 75>:
  # DEBUG D#605 => &D#1167->D.43590
  # DEBUG this => D#605
  # DEBUG D#606 => &D#1167->D.43590._M_impl._M_start
  # DEBUG this => &D.72458
  # DEBUG __x => D#606
  _522 = MEM[(const struct iterator &)__old_finish_1071 + 16]._M_cur;
  _524 = MEM[(const struct iterator &)__old_finish_1071 + 16]._M_last;
  _525 = MEM[(const struct iterator &)__old_finish_1071 + 16]._M_node;
  # DEBUG this => D#1160
  # DEBUG D#83 => &D#1160->D.43590._M_impl._M_finish
  # DEBUG this => &D.72457
  # DEBUG __x => D#83
  _526 = MEM[(const struct iterator &)__position_1070 + 48]._M_cur;
  _527 = MEM[(const struct iterator &)__position_1070 + 48]._M_first;
  # DEBUG D#1166 => MEM[(const struct iterator &)__position_1070 + 48]._M_last
  _529 = MEM[(const struct iterator &)__position_1070 + 48]._M_node;
  # DEBUG this => D#1160
  # DEBUG D#84 => &D#1160->D.43590._M_impl._M_start
  # DEBUG this => &D.72456
  # DEBUG __x => D#84
  __first_530 = MEM[(const struct iterator &)__position_1070 + 16]._M_cur;
  # DEBUG D#1177 => MEM[(const struct iterator &)__position_1070 + 16]._M_first
  __first$_M_last_532 = MEM[(const struct iterator &)__position_1070 + 16]._M_last;
  __first$_M_node_533 = MEM[(const struct iterator &)__position_1070 + 16]._M_node;
  # DEBUG __result => &D.72458
  # DEBUG D.72462 => D#603
  # DEBUG this => &D.72466
  # DEBUG __x => &D.72458
  # DEBUG __result => &D.72466
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.72466
  # DEBUG __result => NULL
  # DEBUG this => &D.72480
  # DEBUG __x => NULL
  # DEBUG __result => &D.72480
  # DEBUG this => &D.72500
  # DEBUG __x => &D.72480
  # DEBUG __it => _526
  # DEBUG __it$8 => _527
  # DEBUG __it$16 => D#1166
  # DEBUG __it$24 => _529
  # DEBUG __it$_M_cur => _526
  # DEBUG __it$_M_first => _527
  # DEBUG __it$_M_last => D#1166
  # DEBUG __it$_M_node => _529
  # DEBUG __it => __first_530
  # DEBUG __it$8 => D#1177
  # DEBUG __it$16 => __first$_M_last_532
  # DEBUG __it$24 => __first$_M_node_533
  # DEBUG __it$_M_cur => __first_530
  # DEBUG __it$_M_first => D#1177
  # DEBUG __it$_M_last => __first$_M_last_532
  # DEBUG __it$_M_node => __first$_M_node_533
  # DEBUG __result => &D.72500
  # DEBUG this => NULL
  # DEBUG __x => &D.72500
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _526
  # DEBUG __it$8 => _527
  # DEBUG __it$16 => D#1166
  # DEBUG __it$24 => _529
  # DEBUG __it$_M_cur => _526
  # DEBUG __it$_M_first => _527
  # DEBUG __it$_M_last => D#1166
  # DEBUG __it$_M_node => _529
  # DEBUG __it => __first_530
  # DEBUG __it$8 => D#1177
  # DEBUG __it$16 => __first$_M_last_532
  # DEBUG __it$24 => __first$_M_node_533
  # DEBUG __it$_M_cur => __first_530
  # DEBUG __it$_M_first => D#1177
  # DEBUG __it$_M_last => __first$_M_last_532
  # DEBUG __it$_M_node => __first$_M_node_533
  # DEBUG __first => __first_530
  # DEBUG __first$8 => D#1177
  # DEBUG __first$16 => __first$_M_last_532
  # DEBUG __first$24 => __first$_M_node_533
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.72525
  # DEBUG __x => NULL
  # DEBUG __first => __first_530
  # DEBUG __first$_M_first => D#1177
  # DEBUG __first$_M_last => __first$_M_last_532
  # DEBUG __first$_M_node => __first$_M_node_533
  # DEBUG __result => &D.72525
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _567 = (long int) _529;
  _569 = (long int) __first$_M_node_533;
  _570 = _567 - _569;
  _571 = _570 /[ex] 8;
  _572 = _571 + -1;
  _573 = _572 * 128;
  _575 = (long int) _526;
  _577 = (long int) _527;
  _578 = _575 - _577;
  _579 = _578 /[ex] 4;
  _580 = _573 + _579;
  _582 = (long int) __first$_M_last_532;
  _584 = (long int) __first_530;
  _585 = _582 - _584;
  _586 = _585 /[ex] 4;
  __n_587 = _580 + _586;
  # DEBUG __n => __n_587
  # DEBUG __n => __n_587
  if (__n_587 <= 0)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  # DEBUG this => &D.72465
  # DEBUG __x => &D.72525
  D.72525 ={v} {CLOBBER};
  D.72500 ={v} {CLOBBER};
  D.72480 ={v} {CLOBBER};
  D.72466 ={v} {CLOBBER};
  D.72458 ={v} {CLOBBER};
  goto <bb 84>;

  <bb 77>:

  <bb 78>:
  # __n_1073 = PHI <__n_587(77), __n_597(83)>
  # SR.2176_1124 = PHI <_522(77), SR.2176_1123(83)>
  # SR.2177_1121 = PHI <_524(77), SR.2177_1120(83)>
  # SR.2178_1117 = PHI <_525(77), SR.2178_1116(83)>
  # __first_1115 = PHI <__first_530(77), __first_1113(83)>
  # __first$_M_last_1108 = PHI <__first$_M_last_532(77), __first$_M_last_1107(83)>
  # __first$_M_node_1106 = PHI <__first$_M_node_533(77), __first$_M_node_1105(83)>
  # DEBUG __first$_M_node => __first$_M_node_1106
  # DEBUG __first$_M_last => __first$_M_last_1108
  # DEBUG __first => __first_1115
  # DEBUG __n => __n_1073
  # DEBUG D#100 => &D.72525
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _591 = MEM[(const int &)__first_1115];
  *SR.2176_1124 = _591;
  # DEBUG this => &__first
  __first_592 = __first_1115 + 4;
  # DEBUG __first => __first_592
  if (__first_592 == __first$_M_last_1108)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  # DEBUG this => &__first
  __first$_M_node_603 = __first$_M_node_1106 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_603
  # DEBUG __first$_M_node => __first$_M_node_603
  __first_604 = MEM[(int * *)__first$_M_node_1106 + 8B];
  # DEBUG __size => 4
  __first$_M_last_605 = __first_604 + 512;
  # DEBUG __first$_M_last => __first$_M_last_605
  # DEBUG __first => __first_604

  <bb 80>:
  # __first_1113 = PHI <__first_592(78), __first_604(79)>
  # __first$_M_last_1107 = PHI <__first$_M_last_1108(78), __first$_M_last_605(79)>
  # __first$_M_node_1105 = PHI <__first$_M_node_1106(78), __first$_M_node_603(79)>
  # DEBUG __first$_M_node => __first$_M_node_1105
  # DEBUG __first$_M_last => __first$_M_last_1107
  # DEBUG __first => __first_1113
  # DEBUG this => &D.72525
  _595 = SR.2176_1124 + 4;
  if (_595 == SR.2177_1121)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  # DEBUG this => &D.72525
  _607 = SR.2178_1117 + 8;
  # DEBUG this => &D.72525
  # DEBUG __new_node => _607
  _608 = MEM[(int * *)SR.2178_1117 + 8B];
  # DEBUG __size => 4
  _609 = _608 + 512;

  <bb 82>:
  # SR.2176_1123 = PHI <_595(80), _608(81)>
  # SR.2177_1120 = PHI <SR.2177_1121(80), _609(81)>
  # SR.2178_1116 = PHI <SR.2178_1117(80), _607(81)>
  __n_597 = __n_1073 + -1;
  # DEBUG __n => __n_597
  # DEBUG __n => __n_597
  if (__n_597 <= 0)
    goto <bb 76>;
  else
    goto <bb 83>;

  <bb 83>:
  goto <bb 78>;

  <bb 84>:
  __position_493 = __position_1070 + 80;
  # DEBUG __first => __position_493
  __old_finish_494 = __old_finish_1071 + 80;
  # DEBUG __cur => __old_finish_494
  # DEBUG __cur => __old_finish_494
  # DEBUG __first => __position_493
  if (__old_finish_26 == __position_493)
    goto <bb 86>;
  else
    goto <bb 85>;

  <bb 85>:
  goto <bb 73>;

  <bb 86>:
  _74 = this_9(D)->D.41195._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.41195._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#1186
  # DEBUG __last => __old_finish_26
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1186
  if (__position_23 == __old_finish_26)
    goto <bb 42>;
  else
    goto <bb 94>;

  # __old_finish_1031 = PHI <__old_finish_1071(74)>
<L25>:
  _495 = __builtin_eh_pointer (20);
  __cxa_begin_catch (_495);
  # DEBUG __first => __old_finish_1068
  # DEBUG __last => __old_finish_1031
  # DEBUG __first => __old_finish_1068
  # DEBUG __last => __old_finish_1031
  # DEBUG __first => __old_finish_1068
  if (__old_finish_1068 == __old_finish_1031)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  __cxa_rethrow ();

  <bb 89>:

  <bb 90>:
  # __old_finish_1072 = PHI <__old_finish_1068(89), __old_finish_498(91)>
  # DEBUG __first => __old_finish_1072
  # DEBUG __r => __old_finish_1072
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  _497 = &MEM[(struct deque *)__old_finish_1072].D.43590;
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (_497);
  MEM[(struct  &)__old_finish_1072] ={v} {CLOBBER};
  __old_finish_498 = __old_finish_1072 + 80;
  # DEBUG __first => __old_finish_498
  # DEBUG __first => __old_finish_498
  if (__old_finish_498 == __old_finish_1031)
    goto <bb 88>;
  else
    goto <bb 91>;

  <bb 91>:
  goto <bb 90>;

<L27>:
  __cxa_end_catch ();
  resx 19

<L43>:
  goto <bb 193> (<L10>);

  <bb 94>:

  <bb 95>:
  # __position_236 = PHI <__position_23(94), __position_88(98)>
  # DEBUG __first => __position_236
  # DEBUG this => __position_236
  # DEBUG D.61843 => &__x_copy
  _87 = &__position_236->c;
  std::deque<int, std::allocator<int> >::operator= (_87, &__x_copy.c);
  goto <bb 97>;

<L44>:
  goto <bb 193> (<L10>);

  <bb 97>:
  __position_88 = __position_236 + 80;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__old_finish_26 == __position_88)
    goto <bb 42>;
  else
    goto <bb 98>;

  <bb 98>:
  goto <bb 95>;

  <bb 99>:
  # DEBUG this => &__x_copy
  # DEBUG D#458 => &__x_copy.c
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  # DEBUG this => &MEM[(struct deque *)&__x_copy].D.43590
  _610 = MEM[(struct _Deque_base *)&__x_copy]._M_impl._M_map;
  if (_610 != 0B)
    goto <bb 100>;
  else
    goto <bb 106>;

  <bb 100>:
  _611 = MEM[(struct _Deque_base *)&__x_copy]._M_impl._M_finish._M_node;
  _612 = _611 + 8;
  __nstart_613 = MEM[(struct _Deque_base *)&__x_copy]._M_impl._M_start._M_node;
  # DEBUG this => &MEM[(struct deque *)&__x_copy].D.43590
  # DEBUG __nstart => __nstart_613
  # DEBUG __nfinish => _612
  # DEBUG __n => __nstart_613
  # DEBUG __n => __nstart_613
  if (_612 <= __nstart_613)
    goto <bb 105>;
  else
    goto <bb 101>;

  <bb 101>:

  <bb 102>:
  # __nstart_1074 = PHI <__nstart_613(101), __nstart_616(103)>
  # DEBUG __n => __nstart_1074
  _615 = *__nstart_1074;
  # DEBUG this => &MEM[(struct deque *)&__x_copy].D.43590
  # DEBUG __p => _615
  # DEBUG __size => 4
  # DEBUG D#167 => &MEM[(struct _Deque_base *)&__x_copy]._M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _615
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _615
  # DEBUG this => D#140
  # DEBUG D.72560 => D#141
  operator delete (_615);
  __nstart_616 = __nstart_1074 + 8;
  # DEBUG __n => __nstart_616
  # DEBUG __n => __nstart_616
  if (_612 <= __nstart_616)
    goto <bb 104>;
  else
    goto <bb 103>;

  <bb 103>:
  goto <bb 102>;

  <bb 104>:
  pretmp_1338 = MEM[(struct _Deque_base *)&__x_copy]._M_impl._M_map;

  <bb 105>:
  # prephitmp_1339 = PHI <pretmp_1338(104), _610(100)>
  # DEBUG D#447 => MEM[(struct _Deque_base *)&__x_copy]._M_impl._M_map_size
  # DEBUG D#1182 => MEM[(struct _Deque_base *)&__x_copy]._M_impl._M_map
  # DEBUG D#445 => &MEM[(struct deque *)&__x_copy].D.43590
  # DEBUG D#446 => D#447
  # DEBUG __p => D#1182
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#1182
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#1182
  # DEBUG this => D#261
  # DEBUG D.72570 => D#262
  operator delete (prephitmp_1339);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 106>:
  # DEBUG D#448 => &MEM[(struct _Deque_base *)&__x_copy]._M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  __x_copy ={v} {CLOBBER};
  goto <bb 191>;

  <bb 107>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#498 => this_9(D)
  # DEBUG this => D#498
  # DEBUG D#497 => D#498
  # DEBUG D#496 => &D#497->D.41195
  # DEBUG this => D#496
  # DEBUG __a => D#495
  # DEBUG D#494 => D#495
  # DEBUG D#493 => D#494
  # DEBUG this => D#493
  _24 = MEM[(struct queue * *)this_9(D)];
  # DEBUG D#72 => this_9(D)
  # DEBUG D#72 => this_9(D)
  # DEBUG this => D#72
  # DEBUG this => D#72
  _631 = (long int) _24;
  _632 = _13 - _631;
  _633 = _632 /[ex] 80;
  _634 = (const long unsigned int) _633;
  _635 = 230584300921369395 - _634;
  if (__n_7(D) > _635)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 109>:
  # DEBUG D#72 => this_9(D)
  # DEBUG D#72 => this_9(D)
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG D#72 => this_9(D)
  # DEBUG D#72 => this_9(D)
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG __a => &D.72610
  # DEBUG __b => &__n
  _676 = MAX_EXPR <__n_7(D), _634>;
  __len_639 = _634 + _676;
  # DEBUG __len => __len_639
  # DEBUG D#72 => this_9(D)
  # DEBUG D#72 => this_9(D)
  # DEBUG this => D#72
  # DEBUG this => D#72
  # DEBUG D#498 => this_9(D)
  # DEBUG this => D#498
  # DEBUG D#497 => D#498
  # DEBUG D#496 => &D#497->D.41195
  # DEBUG this => D#496
  # DEBUG __a => D#495
  # DEBUG D#494 => D#495
  # DEBUG D#493 => D#494
  # DEBUG this => D#493
  _679 = __len_639 > 230584300921369395;
  _827 = _634 > __len_639;
  _93 = _679 | _827;
  if (_93 != 0)
    goto <bb 208>;
  else
    goto <bb 209>;

  <bb 110>:
  pretmp_1336 = __len_639 * 80;

  <bb 111>:
  # __elems_before_1050 = PHI <__elems_before_704(208), __elems_before_699(110)>
  # _938 = PHI <_708(208), _940(110)>
  # prephitmp_1337 = PHI <18446744073709551600(208), pretmp_1336(110)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#176 => &this_9(D)->D.41195._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#176
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.46202
  # DEBUG this => &__position
  # DEBUG this => &D.46202
  # DEBUG __elems_before => __elems_before_1050
  # DEBUG D#713 => &this_9(D)->D.41195
  # DEBUG D#506 => D#713
  # DEBUG __n => NULL
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  # DEBUG D#504 => &D#505->_M_impl
  # DEBUG D#503 => D#504
  # DEBUG __n => NULL
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG D#500 => D#502
  # DEBUG D#501 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#500
  # DEBUG D.72598 => D#501
  # DEBUG D#499 => D#500
  # DEBUG D#493 => D#499
  # DEBUG this => D#493
  _627 = operator new (prephitmp_1337);

  <bb 112>:
  # __new_finish_628 = PHI <0B(209), _627(111)>
  # __elems_before_936 = PHI <__elems_before_699(209), __elems_before_1050(111)>
  # _939 = PHI <_940(209), _938(111)>
  # prephitmp_678 = PHI <0(209), prephitmp_1337(111)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#697 => &this_9(D)->D.41195
  # DEBUG this => D#697
  _27 = (long unsigned int) _939;
  __first_28 = __new_finish_628 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.61852 => D#612
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __cur => __first_28
  # DEBUG __n => __n_7(D)

  <bb 113>:
  # __n_937 = PHI <__n_621(125), __n_7(D)(112)>
  # __first_931 = PHI <__first_622(125), __first_28(112)>
  # DEBUG __cur => __first_931
  # DEBUG __n => __n_937
  # DEBUG __r => __first_931
  # DEBUG __p => NULL
  # DEBUG __value => __x_29(D)
  # DEBUG D#11 => 80
  # DEBUG __p => NULL
  # DEBUG D.60612 => D#11
  if (__first_931 != 0B)
    goto <bb 114>;
  else
    goto <bb 124>;

  <bb 114>:
  # DEBUG this => NULL
  # DEBUG D.72586 => __x_29(D)
  # DEBUG D#1155 => &MEM[(const struct queue &)__x_29(D)].c
  # DEBUG D#1173 => &__first_931->c
  # DEBUG this => D#1173
  # DEBUG __x => D#1155
  # DEBUG this => D#1155
  # DEBUG D#174 => &D#1155->D.43590._M_impl._M_start
  # DEBUG D#175 => &D#1155->D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _17 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_node;
  _641 = (long int) _17;
  _642 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_node;
  _643 = (long int) _642;
  _644 = _641 - _643;
  _645 = _644 /[ex] 8;
  _646 = _645 + -1;
  _647 = _646 * 128;
  _648 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_cur;
  _649 = (long int) _648;
  _650 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_first;
  _651 = (long int) _650;
  _652 = _649 - _651;
  _653 = _652 /[ex] 4;
  _654 = _647 + _653;
  _655 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_last;
  _656 = (long int) _655;
  _657 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_cur;
  _658 = (long int) _657;
  _659 = _656 - _658;
  _660 = _659 /[ex] 4;
  _661 = _654 + _660;
  _662 = (size_type) _661;
  # DEBUG D#604 => &D#1155->D.43590
  # DEBUG this => D#604
  # DEBUG __a => NULL
  _663 = &MEM[(struct deque *)__first_931].D.43590;
  # DEBUG this => _663
  # DEBUG __a => NULL
  # DEBUG __num_elements => _662
  # DEBUG D#484 => &_663->_M_impl
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG D.55189 => NULL
  MEM[(struct _Deque_impl *)__first_931]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_931]._M_map_size = 0;
  # DEBUG D#241 => &D#484->_M_start
  # DEBUG this => D#241
  MEM[(struct _Deque_iterator *)__first_931 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_931 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_931 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_931 + 16B]._M_node = 0B;
  # DEBUG D#240 => &D#484->_M_finish
  # DEBUG this => D#240
  MEM[(struct _Deque_iterator *)__first_931 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_931 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_931 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_931 + 48B]._M_node = 0B;
  std::_Deque_base<int, std::allocator<int> >::_M_initialize_map (_663, _662);

  <bb 115>:
  # DEBUG D#605 => &D#1173->D.43590
  # DEBUG this => D#605
  # DEBUG D#606 => &D#1173->D.43590._M_impl._M_start
  # DEBUG this => &D.72633
  # DEBUG __x => D#606
  _664 = MEM[(const struct iterator &)__first_931 + 16]._M_cur;
  _666 = MEM[(const struct iterator &)__first_931 + 16]._M_last;
  _667 = MEM[(const struct iterator &)__first_931 + 16]._M_node;
  # DEBUG this => D#1155
  # DEBUG D#83 => &D#1155->D.43590._M_impl._M_finish
  # DEBUG this => &D.72632
  # DEBUG __x => D#83
  _668 = MEM[(const struct iterator &)__x_29(D) + 48]._M_cur;
  _669 = MEM[(const struct iterator &)__x_29(D) + 48]._M_first;
  # DEBUG D#1170 => MEM[(const struct iterator &)__x_29(D) + 48]._M_last
  _671 = MEM[(const struct iterator &)__x_29(D) + 48]._M_node;
  # DEBUG this => D#1155
  # DEBUG D#84 => &D#1155->D.43590._M_impl._M_start
  # DEBUG this => &D.72631
  # DEBUG __x => D#84
  __first_672 = MEM[(const struct iterator &)__x_29(D) + 16]._M_cur;
  # DEBUG D#1180 => MEM[(const struct iterator &)__x_29(D) + 16]._M_first
  __first$_M_last_674 = MEM[(const struct iterator &)__x_29(D) + 16]._M_last;
  __first$_M_node_675 = MEM[(const struct iterator &)__x_29(D) + 16]._M_node;
  # DEBUG __result => &D.72633
  # DEBUG D.72637 => D#603
  # DEBUG this => &D.72641
  # DEBUG __x => &D.72633
  # DEBUG __result => &D.72641
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.72641
  # DEBUG __result => NULL
  # DEBUG this => &D.72655
  # DEBUG __x => NULL
  # DEBUG __result => &D.72655
  # DEBUG this => &D.72675
  # DEBUG __x => &D.72655
  # DEBUG __it => _668
  # DEBUG __it$8 => _669
  # DEBUG __it$16 => D#1170
  # DEBUG __it$24 => _671
  # DEBUG __it$_M_cur => _668
  # DEBUG __it$_M_first => _669
  # DEBUG __it$_M_last => D#1170
  # DEBUG __it$_M_node => _671
  # DEBUG __it => __first_672
  # DEBUG __it$8 => D#1180
  # DEBUG __it$16 => __first$_M_last_674
  # DEBUG __it$24 => __first$_M_node_675
  # DEBUG __it$_M_cur => __first_672
  # DEBUG __it$_M_first => D#1180
  # DEBUG __it$_M_last => __first$_M_last_674
  # DEBUG __it$_M_node => __first$_M_node_675
  # DEBUG __result => &D.72675
  # DEBUG this => NULL
  # DEBUG __x => &D.72675
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _668
  # DEBUG __it$8 => _669
  # DEBUG __it$16 => D#1170
  # DEBUG __it$24 => _671
  # DEBUG __it$_M_cur => _668
  # DEBUG __it$_M_first => _669
  # DEBUG __it$_M_last => D#1170
  # DEBUG __it$_M_node => _671
  # DEBUG __it => __first_672
  # DEBUG __it$8 => D#1180
  # DEBUG __it$16 => __first$_M_last_674
  # DEBUG __it$24 => __first$_M_node_675
  # DEBUG __it$_M_cur => __first_672
  # DEBUG __it$_M_first => D#1180
  # DEBUG __it$_M_last => __first$_M_last_674
  # DEBUG __it$_M_node => __first$_M_node_675
  # DEBUG __first => __first_672
  # DEBUG __first$8 => D#1180
  # DEBUG __first$16 => __first$_M_last_674
  # DEBUG __first$24 => __first$_M_node_675
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.72700
  # DEBUG __x => NULL
  # DEBUG __first => __first_672
  # DEBUG __first$_M_first => D#1180
  # DEBUG __first$_M_last => __first$_M_last_674
  # DEBUG __first$_M_node => __first$_M_node_675
  # DEBUG __result => &D.72700
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _709 = (long int) _671;
  _711 = (long int) __first$_M_node_675;
  _712 = _709 - _711;
  _713 = _712 /[ex] 8;
  _714 = _713 + -1;
  _715 = _714 * 128;
  _717 = (long int) _668;
  _719 = (long int) _669;
  _720 = _717 - _719;
  _721 = _720 /[ex] 4;
  _722 = _715 + _721;
  _724 = (long int) __first$_M_last_674;
  _726 = (long int) __first_672;
  _727 = _724 - _726;
  _728 = _727 /[ex] 4;
  __n_729 = _722 + _728;
  # DEBUG __n => __n_729
  # DEBUG __n => __n_729
  if (__n_729 <= 0)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG this => &D.72640
  # DEBUG __x => &D.72700
  D.72700 ={v} {CLOBBER};
  D.72675 ={v} {CLOBBER};
  D.72655 ={v} {CLOBBER};
  D.72641 ={v} {CLOBBER};
  D.72633 ={v} {CLOBBER};
  goto <bb 124>;

  <bb 117>:

  <bb 118>:
  # __n_1076 = PHI <__n_729(117), __n_739(123)>
  # SR.2186_1693 = PHI <_664(117), SR.2186_1692(123)>
  # SR.2187_1690 = PHI <_666(117), SR.2187_1689(123)>
  # SR.2188_1688 = PHI <_667(117), SR.2188_1687(123)>
  # __first_1685 = PHI <__first_672(117), __first_1684(123)>
  # __first$_M_last_1681 = PHI <__first$_M_last_674(117), __first$_M_last_1680(123)>
  # __first$_M_node_1679 = PHI <__first$_M_node_675(117), __first$_M_node_1677(123)>
  # DEBUG __first$_M_node => __first$_M_node_1679
  # DEBUG __first$_M_last => __first$_M_last_1681
  # DEBUG __first => __first_1685
  # DEBUG __n => __n_1076
  # DEBUG D#100 => &D.72700
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _733 = MEM[(const int &)__first_1685];
  *SR.2186_1693 = _733;
  # DEBUG this => &__first
  __first_734 = __first_1685 + 4;
  # DEBUG __first => __first_734
  if (__first_734 == __first$_M_last_1681)
    goto <bb 119>;
  else
    goto <bb 120>;

  <bb 119>:
  # DEBUG this => &__first
  __first$_M_node_745 = __first$_M_node_1679 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_745
  # DEBUG __first$_M_node => __first$_M_node_745
  __first_746 = MEM[(int * *)__first$_M_node_1679 + 8B];
  # DEBUG __size => 4
  __first$_M_last_747 = __first_746 + 512;
  # DEBUG __first$_M_last => __first$_M_last_747
  # DEBUG __first => __first_746

  <bb 120>:
  # __first_1684 = PHI <__first_734(118), __first_746(119)>
  # __first$_M_last_1680 = PHI <__first$_M_last_1681(118), __first$_M_last_747(119)>
  # __first$_M_node_1677 = PHI <__first$_M_node_1679(118), __first$_M_node_745(119)>
  # DEBUG __first$_M_node => __first$_M_node_1677
  # DEBUG __first$_M_last => __first$_M_last_1680
  # DEBUG __first => __first_1684
  # DEBUG this => &D.72700
  _737 = SR.2186_1693 + 4;
  if (_737 == SR.2187_1690)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  # DEBUG this => &D.72700
  _749 = SR.2188_1688 + 8;
  # DEBUG this => &D.72700
  # DEBUG __new_node => _749
  _750 = MEM[(int * *)SR.2188_1688 + 8B];
  # DEBUG __size => 4
  _751 = _750 + 512;

  <bb 122>:
  # SR.2186_1692 = PHI <_737(120), _750(121)>
  # SR.2187_1689 = PHI <SR.2187_1690(120), _751(121)>
  # SR.2188_1687 = PHI <SR.2188_1688(120), _749(121)>
  __n_739 = __n_1076 + -1;
  # DEBUG __n => __n_739
  # DEBUG __n => __n_739
  if (__n_739 <= 0)
    goto <bb 116>;
  else
    goto <bb 123>;

  <bb 123>:
  goto <bb 118>;

  <bb 124>:
  __n_621 = __n_937 + 18446744073709551615;
  # DEBUG __n => __n_621
  __first_622 = __first_931 + 80;
  # DEBUG __cur => __first_622
  # DEBUG __cur => __first_622
  # DEBUG __n => __n_621
  if (__n_621 == 0)
    goto <bb 126>;
  else
    goto <bb 125>;

  <bb 125>:
  goto <bb 113>;

  <bb 126>:
  # DEBUG __new_finish => 0B
  # DEBUG D#698 => &this_9(D)->D.41195
  # DEBUG this => D#698
  # DEBUG this => &__position
  __first_32 = this_9(D)->D.41195._M_impl._M_start;
  # DEBUG __first => __first_32
  # DEBUG __last => D#1186
  # DEBUG __result => NULL
  # DEBUG __alloc => D#611
  # DEBUG D#610 => D#611
  # DEBUG D#607 => D#610
  # DEBUG __first => __first_32
  # DEBUG __last => D#1186
  # DEBUG __result => NULL
  # DEBUG D.61873 => D#607
  # DEBUG __first => __first_32
  # DEBUG __last => D#1186
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => __first_32
  # DEBUG __last => D#1186
  # DEBUG __result => __new_finish_628
  # DEBUG __cur => __new_finish_628
  # DEBUG __first => __first_32
  if (__position_23 == __first_32)
    goto <bb 148>;
  else
    goto <bb 133>;

  # __first_1036 = PHI <__first_931(114)>
<L28>:
  _623 = __builtin_eh_pointer (23);
  __cxa_begin_catch (_623);
  # DEBUG __first => __first_28
  # DEBUG __last => __first_1036
  # DEBUG __first => __first_28
  # DEBUG __last => __first_1036
  # DEBUG __first => __first_28
  if (__first_28 == __first_1036)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  __cxa_rethrow ();

  <bb 129>:

  <bb 130>:
  # __first_1075 = PHI <__first_28(129), __first_626(131)>
  # DEBUG __first => __first_1075
  # DEBUG __r => __first_1075
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  _625 = &MEM[(struct deque *)__first_1075].D.43590;
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (_625);
  MEM[(struct  &)__first_1075] ={v} {CLOBBER};
  __first_626 = __first_1075 + 80;
  # DEBUG __first => __first_626
  # DEBUG __first => __first_626
  if (__first_626 == __first_1036)
    goto <bb 128>;
  else
    goto <bb 131>;

  <bb 131>:
  goto <bb 130>;

<L30>:
  __cxa_end_catch ();
  resx 22

  <bb 133>:

  <bb 134>:
  # __first_1077 = PHI <__first_32(133), __first_756(147)>
  # __new_finish_1078 = PHI <__new_finish_628(133), __new_finish_757(147)>
  # DEBUG __cur => __new_finish_1078
  # DEBUG __first => __first_1077
  # DEBUG __r => __new_finish_1078
  # DEBUG __p => NULL
  # DEBUG __value => __first_1077
  # DEBUG D#11 => 80
  # DEBUG __p => NULL
  # DEBUG D.60612 => D#11
  if (__new_finish_1078 != 0B)
    goto <bb 135>;
  else
    goto <bb 145>;

  <bb 135>:
  # DEBUG this => NULL
  # DEBUG D.72734 => __first_1077
  # DEBUG D#1156 => &MEM[(const struct queue &)__first_1077].c
  # DEBUG D#1165 => &__new_finish_1078->c
  # DEBUG this => D#1165
  # DEBUG __x => D#1156
  # DEBUG this => D#1156
  # DEBUG D#174 => &D#1156->D.43590._M_impl._M_start
  # DEBUG D#175 => &D#1156->D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _110 = MEM[(const struct _Deque_iterator &)__first_1077 + 48]._M_node;
  _762 = (long int) _110;
  _763 = MEM[(const struct _Deque_iterator &)__first_1077 + 16]._M_node;
  _764 = (long int) _763;
  _765 = _762 - _764;
  _766 = _765 /[ex] 8;
  _767 = _766 + -1;
  _768 = _767 * 128;
  _769 = MEM[(const struct _Deque_iterator &)__first_1077 + 48]._M_cur;
  _770 = (long int) _769;
  _771 = MEM[(const struct _Deque_iterator &)__first_1077 + 48]._M_first;
  _772 = (long int) _771;
  _773 = _770 - _772;
  _774 = _773 /[ex] 4;
  _775 = _768 + _774;
  _776 = MEM[(const struct _Deque_iterator &)__first_1077 + 16]._M_last;
  _777 = (long int) _776;
  _778 = MEM[(const struct _Deque_iterator &)__first_1077 + 16]._M_cur;
  _779 = (long int) _778;
  _780 = _777 - _779;
  _781 = _780 /[ex] 4;
  _782 = _775 + _781;
  _783 = (size_type) _782;
  # DEBUG D#604 => &D#1156->D.43590
  # DEBUG this => D#604
  # DEBUG __a => NULL
  _784 = &MEM[(struct deque *)__new_finish_1078].D.43590;
  # DEBUG this => _784
  # DEBUG __a => NULL
  # DEBUG __num_elements => _783
  # DEBUG D#484 => &_784->_M_impl
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG D.55189 => NULL
  MEM[(struct _Deque_impl *)__new_finish_1078]._M_map = 0B;
  MEM[(struct _Deque_impl *)__new_finish_1078]._M_map_size = 0;
  # DEBUG D#241 => &D#484->_M_start
  # DEBUG this => D#241
  MEM[(struct _Deque_iterator *)__new_finish_1078 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1078 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1078 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1078 + 16B]._M_node = 0B;
  # DEBUG D#240 => &D#484->_M_finish
  # DEBUG this => D#240
  MEM[(struct _Deque_iterator *)__new_finish_1078 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1078 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1078 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1078 + 48B]._M_node = 0B;
  std::_Deque_base<int, std::allocator<int> >::_M_initialize_map (_784, _783);

  <bb 136>:
  # DEBUG D#605 => &D#1165->D.43590
  # DEBUG this => D#605
  # DEBUG D#606 => &D#1165->D.43590._M_impl._M_start
  # DEBUG this => &D.72762
  # DEBUG __x => D#606
  _785 = MEM[(const struct iterator &)__new_finish_1078 + 16]._M_cur;
  _787 = MEM[(const struct iterator &)__new_finish_1078 + 16]._M_last;
  _788 = MEM[(const struct iterator &)__new_finish_1078 + 16]._M_node;
  # DEBUG this => D#1156
  # DEBUG D#83 => &D#1156->D.43590._M_impl._M_finish
  # DEBUG this => &D.72761
  # DEBUG __x => D#83
  _789 = MEM[(const struct iterator &)__first_1077 + 48]._M_cur;
  _790 = MEM[(const struct iterator &)__first_1077 + 48]._M_first;
  # DEBUG D#1164 => MEM[(const struct iterator &)__first_1077 + 48]._M_last
  _792 = MEM[(const struct iterator &)__first_1077 + 48]._M_node;
  # DEBUG this => D#1156
  # DEBUG D#84 => &D#1156->D.43590._M_impl._M_start
  # DEBUG this => &D.72760
  # DEBUG __x => D#84
  __first_793 = MEM[(const struct iterator &)__first_1077 + 16]._M_cur;
  # DEBUG D#1176 => MEM[(const struct iterator &)__first_1077 + 16]._M_first
  __first$_M_last_795 = MEM[(const struct iterator &)__first_1077 + 16]._M_last;
  __first$_M_node_796 = MEM[(const struct iterator &)__first_1077 + 16]._M_node;
  # DEBUG __result => &D.72762
  # DEBUG D.72766 => D#603
  # DEBUG this => &D.72770
  # DEBUG __x => &D.72762
  # DEBUG __result => &D.72770
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.72770
  # DEBUG __result => NULL
  # DEBUG this => &D.72784
  # DEBUG __x => NULL
  # DEBUG __result => &D.72784
  # DEBUG this => &D.72804
  # DEBUG __x => &D.72784
  # DEBUG __it => _789
  # DEBUG __it$8 => _790
  # DEBUG __it$16 => D#1164
  # DEBUG __it$24 => _792
  # DEBUG __it$_M_cur => _789
  # DEBUG __it$_M_first => _790
  # DEBUG __it$_M_last => D#1164
  # DEBUG __it$_M_node => _792
  # DEBUG __it => __first_793
  # DEBUG __it$8 => D#1176
  # DEBUG __it$16 => __first$_M_last_795
  # DEBUG __it$24 => __first$_M_node_796
  # DEBUG __it$_M_cur => __first_793
  # DEBUG __it$_M_first => D#1176
  # DEBUG __it$_M_last => __first$_M_last_795
  # DEBUG __it$_M_node => __first$_M_node_796
  # DEBUG __result => &D.72804
  # DEBUG this => NULL
  # DEBUG __x => &D.72804
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _789
  # DEBUG __it$8 => _790
  # DEBUG __it$16 => D#1164
  # DEBUG __it$24 => _792
  # DEBUG __it$_M_cur => _789
  # DEBUG __it$_M_first => _790
  # DEBUG __it$_M_last => D#1164
  # DEBUG __it$_M_node => _792
  # DEBUG __it => __first_793
  # DEBUG __it$8 => D#1176
  # DEBUG __it$16 => __first$_M_last_795
  # DEBUG __it$24 => __first$_M_node_796
  # DEBUG __it$_M_cur => __first_793
  # DEBUG __it$_M_first => D#1176
  # DEBUG __it$_M_last => __first$_M_last_795
  # DEBUG __it$_M_node => __first$_M_node_796
  # DEBUG __first => __first_793
  # DEBUG __first$8 => D#1176
  # DEBUG __first$16 => __first$_M_last_795
  # DEBUG __first$24 => __first$_M_node_796
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.72829
  # DEBUG __x => NULL
  # DEBUG __first => __first_793
  # DEBUG __first$_M_first => D#1176
  # DEBUG __first$_M_last => __first$_M_last_795
  # DEBUG __first$_M_node => __first$_M_node_796
  # DEBUG __result => &D.72829
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _830 = (long int) _792;
  _832 = (long int) __first$_M_node_796;
  _833 = _830 - _832;
  _834 = _833 /[ex] 8;
  _835 = _834 + -1;
  _836 = _835 * 128;
  _838 = (long int) _789;
  _840 = (long int) _790;
  _841 = _838 - _840;
  _842 = _841 /[ex] 4;
  _843 = _836 + _842;
  _845 = (long int) __first$_M_last_795;
  _847 = (long int) __first_793;
  _848 = _845 - _847;
  _849 = _848 /[ex] 4;
  __n_850 = _843 + _849;
  # DEBUG __n => __n_850
  # DEBUG __n => __n_850
  if (__n_850 <= 0)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  # DEBUG this => &D.72769
  # DEBUG __x => &D.72829
  D.72829 ={v} {CLOBBER};
  D.72804 ={v} {CLOBBER};
  D.72784 ={v} {CLOBBER};
  D.72770 ={v} {CLOBBER};
  D.72762 ={v} {CLOBBER};
  goto <bb 145>;

  <bb 138>:

  <bb 139>:
  # __n_1081 = PHI <__n_850(138), __n_860(144)>
  # SR.2196_1672 = PHI <_785(138), SR.2196_1671(144)>
  # SR.2197_1670 = PHI <_787(138), SR.2197_1669(144)>
  # SR.2198_1599 = PHI <_788(138), SR.2198_1598(144)>
  # __first_1596 = PHI <__first_793(138), __first_1595(144)>
  # __first$_M_last_1594 = PHI <__first$_M_last_795(138), __first$_M_last_1593(144)>
  # __first$_M_node_1591 = PHI <__first$_M_node_796(138), __first$_M_node_1590(144)>
  # DEBUG __first$_M_node => __first$_M_node_1591
  # DEBUG __first$_M_last => __first$_M_last_1594
  # DEBUG __first => __first_1596
  # DEBUG __n => __n_1081
  # DEBUG D#100 => &D.72829
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _854 = MEM[(const int &)__first_1596];
  *SR.2196_1672 = _854;
  # DEBUG this => &__first
  __first_855 = __first_1596 + 4;
  # DEBUG __first => __first_855
  if (__first_855 == __first$_M_last_1594)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  # DEBUG this => &__first
  __first$_M_node_866 = __first$_M_node_1591 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_866
  # DEBUG __first$_M_node => __first$_M_node_866
  __first_867 = MEM[(int * *)__first$_M_node_1591 + 8B];
  # DEBUG __size => 4
  __first$_M_last_868 = __first_867 + 512;
  # DEBUG __first$_M_last => __first$_M_last_868
  # DEBUG __first => __first_867

  <bb 141>:
  # __first_1595 = PHI <__first_855(139), __first_867(140)>
  # __first$_M_last_1593 = PHI <__first$_M_last_1594(139), __first$_M_last_868(140)>
  # __first$_M_node_1590 = PHI <__first$_M_node_1591(139), __first$_M_node_866(140)>
  # DEBUG __first$_M_node => __first$_M_node_1590
  # DEBUG __first$_M_last => __first$_M_last_1593
  # DEBUG __first => __first_1595
  # DEBUG this => &D.72829
  _858 = SR.2196_1672 + 4;
  if (_858 == SR.2197_1670)
    goto <bb 142>;
  else
    goto <bb 143>;

  <bb 142>:
  # DEBUG this => &D.72829
  _870 = SR.2198_1599 + 8;
  # DEBUG this => &D.72829
  # DEBUG __new_node => _870
  _871 = MEM[(int * *)SR.2198_1599 + 8B];
  # DEBUG __size => 4
  _872 = _871 + 512;

  <bb 143>:
  # SR.2196_1671 = PHI <_858(141), _871(142)>
  # SR.2197_1669 = PHI <SR.2197_1670(141), _872(142)>
  # SR.2198_1598 = PHI <SR.2198_1599(141), _870(142)>
  __n_860 = __n_1081 + -1;
  # DEBUG __n => __n_860
  # DEBUG __n => __n_860
  if (__n_860 <= 0)
    goto <bb 137>;
  else
    goto <bb 144>;

  <bb 144>:
  goto <bb 139>;

  <bb 145>:
  __first_756 = __first_1077 + 80;
  # DEBUG __first => __first_756
  __new_finish_757 = __new_finish_1078 + 80;
  # DEBUG __cur => __new_finish_757
  # DEBUG __cur => __new_finish_757
  # DEBUG __first => __first_756
  if (__position_23 == __first_756)
    goto <bb 146>;
  else
    goto <bb 147>;

  <bb 146>:
  # __new_finish_1038 = PHI <__new_finish_757(145)>
  goto <bb 148>;

  <bb 147>:
  goto <bb 134>;

  <bb 148>:
  # __new_finish_1079 = PHI <__new_finish_1038(146), __new_finish_628(126)>
  # DEBUG __new_finish => NULL
  _33 = __n_7(D) * 80;
  __new_finish_34 = __new_finish_1079 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#699 => &this_9(D)->D.41195
  # DEBUG this => D#699
  _36 = this_9(D)->D.41195._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#1186
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#611
  # DEBUG D#610 => D#611
  # DEBUG D#607 => D#610
  # DEBUG __first => D#1186
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.61892 => D#607
  # DEBUG __first => D#1186
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  # DEBUG __first => D#1186
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __cur => __new_finish_34
  # DEBUG __first => D#1186
  if (__position_23 == _36)
    goto <bb 170>;
  else
    goto <bb 155>;

  # __new_finish_1030 = PHI <__new_finish_1078(135)>
<L31>:
  _758 = __builtin_eh_pointer (26);
  __cxa_begin_catch (_758);
  # DEBUG __first => __new_finish_628
  # DEBUG __last => __new_finish_1030
  # DEBUG __first => __new_finish_628
  # DEBUG __last => __new_finish_1030
  # DEBUG __first => __new_finish_628
  if (__new_finish_628 == __new_finish_1030)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  __cxa_rethrow ();

  <bb 151>:

  <bb 152>:
  # __new_finish_1080 = PHI <__new_finish_628(151), __new_finish_761(153)>
  # DEBUG __first => __new_finish_1080
  # DEBUG __r => __new_finish_1080
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  _760 = &MEM[(struct deque *)__new_finish_1080].D.43590;
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (_760);
  MEM[(struct  &)__new_finish_1080] ={v} {CLOBBER};
  __new_finish_761 = __new_finish_1080 + 80;
  # DEBUG __first => __new_finish_761
  # DEBUG __first => __new_finish_761
  if (__new_finish_761 == __new_finish_1030)
    goto <bb 150>;
  else
    goto <bb 153>;

  <bb 153>:
  goto <bb 152>;

<L33>:
  __cxa_end_catch ();
  resx 25

  <bb 155>:

  <bb 156>:
  # __position_1082 = PHI <__position_23(155), __position_877(168)>
  # __new_finish_1083 = PHI <__new_finish_34(155), __new_finish_878(168)>
  # DEBUG __cur => __new_finish_1083
  # DEBUG __first => __position_1082
  # DEBUG __r => __new_finish_1083
  # DEBUG __p => NULL
  # DEBUG __value => __position_1082
  # DEBUG D#11 => 80
  # DEBUG __p => NULL
  # DEBUG D.60612 => D#11
  if (__new_finish_1083 != 0B)
    goto <bb 157>;
  else
    goto <bb 167>;

  <bb 157>:
  # DEBUG this => NULL
  # DEBUG D.72863 => __position_1082
  # DEBUG D#1157 => &MEM[(const struct queue &)__position_1082].c
  # DEBUG D#1163 => &__new_finish_1083->c
  # DEBUG this => D#1163
  # DEBUG __x => D#1157
  # DEBUG this => D#1157
  # DEBUG D#174 => &D#1157->D.43590._M_impl._M_start
  # DEBUG D#175 => &D#1157->D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _111 = MEM[(const struct _Deque_iterator &)__position_1082 + 48]._M_node;
  _883 = (long int) _111;
  _884 = MEM[(const struct _Deque_iterator &)__position_1082 + 16]._M_node;
  _885 = (long int) _884;
  _886 = _883 - _885;
  _887 = _886 /[ex] 8;
  _888 = _887 + -1;
  _889 = _888 * 128;
  _890 = MEM[(const struct _Deque_iterator &)__position_1082 + 48]._M_cur;
  _891 = (long int) _890;
  _892 = MEM[(const struct _Deque_iterator &)__position_1082 + 48]._M_first;
  _893 = (long int) _892;
  _894 = _891 - _893;
  _895 = _894 /[ex] 4;
  _896 = _889 + _895;
  _897 = MEM[(const struct _Deque_iterator &)__position_1082 + 16]._M_last;
  _898 = (long int) _897;
  _899 = MEM[(const struct _Deque_iterator &)__position_1082 + 16]._M_cur;
  _900 = (long int) _899;
  _901 = _898 - _900;
  _902 = _901 /[ex] 4;
  _903 = _896 + _902;
  _904 = (size_type) _903;
  # DEBUG D#604 => &D#1157->D.43590
  # DEBUG this => D#604
  # DEBUG __a => NULL
  _905 = &MEM[(struct deque *)__new_finish_1083].D.43590;
  # DEBUG this => _905
  # DEBUG __a => NULL
  # DEBUG __num_elements => _904
  # DEBUG D#484 => &_905->_M_impl
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG D.55189 => NULL
  MEM[(struct _Deque_impl *)__new_finish_1083]._M_map = 0B;
  MEM[(struct _Deque_impl *)__new_finish_1083]._M_map_size = 0;
  # DEBUG D#241 => &D#484->_M_start
  # DEBUG this => D#241
  MEM[(struct _Deque_iterator *)__new_finish_1083 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1083 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1083 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1083 + 16B]._M_node = 0B;
  # DEBUG D#240 => &D#484->_M_finish
  # DEBUG this => D#240
  MEM[(struct _Deque_iterator *)__new_finish_1083 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1083 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1083 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__new_finish_1083 + 48B]._M_node = 0B;
  std::_Deque_base<int, std::allocator<int> >::_M_initialize_map (_905, _904);

  <bb 158>:
  # DEBUG D#605 => &D#1163->D.43590
  # DEBUG this => D#605
  # DEBUG D#606 => &D#1163->D.43590._M_impl._M_start
  # DEBUG this => &D.72891
  # DEBUG __x => D#606
  _906 = MEM[(const struct iterator &)__new_finish_1083 + 16]._M_cur;
  _908 = MEM[(const struct iterator &)__new_finish_1083 + 16]._M_last;
  _909 = MEM[(const struct iterator &)__new_finish_1083 + 16]._M_node;
  # DEBUG this => D#1157
  # DEBUG D#83 => &D#1157->D.43590._M_impl._M_finish
  # DEBUG this => &D.72890
  # DEBUG __x => D#83
  _910 = MEM[(const struct iterator &)__position_1082 + 48]._M_cur;
  _911 = MEM[(const struct iterator &)__position_1082 + 48]._M_first;
  # DEBUG D#1161 => MEM[(const struct iterator &)__position_1082 + 48]._M_last
  _913 = MEM[(const struct iterator &)__position_1082 + 48]._M_node;
  # DEBUG this => D#1157
  # DEBUG D#84 => &D#1157->D.43590._M_impl._M_start
  # DEBUG this => &D.72889
  # DEBUG __x => D#84
  __first_914 = MEM[(const struct iterator &)__position_1082 + 16]._M_cur;
  # DEBUG D#1175 => MEM[(const struct iterator &)__position_1082 + 16]._M_first
  __first$_M_last_916 = MEM[(const struct iterator &)__position_1082 + 16]._M_last;
  __first$_M_node_917 = MEM[(const struct iterator &)__position_1082 + 16]._M_node;
  # DEBUG __result => &D.72891
  # DEBUG D.72895 => D#603
  # DEBUG this => &D.72899
  # DEBUG __x => &D.72891
  # DEBUG __result => &D.72899
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.72899
  # DEBUG __result => NULL
  # DEBUG this => &D.72913
  # DEBUG __x => NULL
  # DEBUG __result => &D.72913
  # DEBUG this => &D.72933
  # DEBUG __x => &D.72913
  # DEBUG __it => _910
  # DEBUG __it$8 => _911
  # DEBUG __it$16 => D#1161
  # DEBUG __it$24 => _913
  # DEBUG __it$_M_cur => _910
  # DEBUG __it$_M_first => _911
  # DEBUG __it$_M_last => D#1161
  # DEBUG __it$_M_node => _913
  # DEBUG __it => __first_914
  # DEBUG __it$8 => D#1175
  # DEBUG __it$16 => __first$_M_last_916
  # DEBUG __it$24 => __first$_M_node_917
  # DEBUG __it$_M_cur => __first_914
  # DEBUG __it$_M_first => D#1175
  # DEBUG __it$_M_last => __first$_M_last_916
  # DEBUG __it$_M_node => __first$_M_node_917
  # DEBUG __result => &D.72933
  # DEBUG this => NULL
  # DEBUG __x => &D.72933
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _910
  # DEBUG __it$8 => _911
  # DEBUG __it$16 => D#1161
  # DEBUG __it$24 => _913
  # DEBUG __it$_M_cur => _910
  # DEBUG __it$_M_first => _911
  # DEBUG __it$_M_last => D#1161
  # DEBUG __it$_M_node => _913
  # DEBUG __it => __first_914
  # DEBUG __it$8 => D#1175
  # DEBUG __it$16 => __first$_M_last_916
  # DEBUG __it$24 => __first$_M_node_917
  # DEBUG __it$_M_cur => __first_914
  # DEBUG __it$_M_first => D#1175
  # DEBUG __it$_M_last => __first$_M_last_916
  # DEBUG __it$_M_node => __first$_M_node_917
  # DEBUG __first => __first_914
  # DEBUG __first$8 => D#1175
  # DEBUG __first$16 => __first$_M_last_916
  # DEBUG __first$24 => __first$_M_node_917
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.72958
  # DEBUG __x => NULL
  # DEBUG __first => __first_914
  # DEBUG __first$_M_first => D#1175
  # DEBUG __first$_M_last => __first$_M_last_916
  # DEBUG __first$_M_node => __first$_M_node_917
  # DEBUG __result => &D.72958
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _951 = (long int) _913;
  _953 = (long int) __first$_M_node_917;
  _954 = _951 - _953;
  _955 = _954 /[ex] 8;
  _956 = _955 + -1;
  _957 = _956 * 128;
  _959 = (long int) _910;
  _961 = (long int) _911;
  _962 = _959 - _961;
  _963 = _962 /[ex] 4;
  _964 = _957 + _963;
  _966 = (long int) __first$_M_last_916;
  _968 = (long int) __first_914;
  _969 = _966 - _968;
  _970 = _969 /[ex] 4;
  __n_971 = _964 + _970;
  # DEBUG __n => __n_971
  # DEBUG __n => __n_971
  if (__n_971 <= 0)
    goto <bb 159>;
  else
    goto <bb 160>;

  <bb 159>:
  # DEBUG this => &D.72898
  # DEBUG __x => &D.72958
  D.72958 ={v} {CLOBBER};
  D.72933 ={v} {CLOBBER};
  D.72913 ={v} {CLOBBER};
  D.72899 ={v} {CLOBBER};
  D.72891 ={v} {CLOBBER};
  goto <bb 167>;

  <bb 160>:

  <bb 161>:
  # __n_1086 = PHI <__n_971(160), __n_981(166)>
  # SR.2206_1587 = PHI <_906(160), SR.2206_1586(166)>
  # SR.2207_1585 = PHI <_908(160), SR.2207_1583(166)>
  # SR.2208_1578 = PHI <_909(160), SR.2208_1577(166)>
  # __first_1576 = PHI <__first_914(160), __first_1575(166)>
  # __first$_M_last_1505 = PHI <__first$_M_last_916(160), __first$_M_last_1504(166)>
  # __first$_M_node_1502 = PHI <__first$_M_node_917(160), __first$_M_node_1501(166)>
  # DEBUG __first$_M_node => __first$_M_node_1502
  # DEBUG __first$_M_last => __first$_M_last_1505
  # DEBUG __first => __first_1576
  # DEBUG __n => __n_1086
  # DEBUG D#100 => &D.72958
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _975 = MEM[(const int &)__first_1576];
  *SR.2206_1587 = _975;
  # DEBUG this => &__first
  __first_976 = __first_1576 + 4;
  # DEBUG __first => __first_976
  if (__first_976 == __first$_M_last_1505)
    goto <bb 162>;
  else
    goto <bb 163>;

  <bb 162>:
  # DEBUG this => &__first
  __first$_M_node_987 = __first$_M_node_1502 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_987
  # DEBUG __first$_M_node => __first$_M_node_987
  __first_988 = MEM[(int * *)__first$_M_node_1502 + 8B];
  # DEBUG __size => 4
  __first$_M_last_989 = __first_988 + 512;
  # DEBUG __first$_M_last => __first$_M_last_989
  # DEBUG __first => __first_988

  <bb 163>:
  # __first_1575 = PHI <__first_976(161), __first_988(162)>
  # __first$_M_last_1504 = PHI <__first$_M_last_1505(161), __first$_M_last_989(162)>
  # __first$_M_node_1501 = PHI <__first$_M_node_1502(161), __first$_M_node_987(162)>
  # DEBUG __first$_M_node => __first$_M_node_1501
  # DEBUG __first$_M_last => __first$_M_last_1504
  # DEBUG __first => __first_1575
  # DEBUG this => &D.72958
  _979 = SR.2206_1587 + 4;
  if (_979 == SR.2207_1585)
    goto <bb 164>;
  else
    goto <bb 165>;

  <bb 164>:
  # DEBUG this => &D.72958
  _991 = SR.2208_1578 + 8;
  # DEBUG this => &D.72958
  # DEBUG __new_node => _991
  _992 = MEM[(int * *)SR.2208_1578 + 8B];
  # DEBUG __size => 4
  _993 = _992 + 512;

  <bb 165>:
  # SR.2206_1586 = PHI <_979(163), _992(164)>
  # SR.2207_1583 = PHI <SR.2207_1585(163), _993(164)>
  # SR.2208_1577 = PHI <SR.2208_1578(163), _991(164)>
  __n_981 = __n_1086 + -1;
  # DEBUG __n => __n_981
  # DEBUG __n => __n_981
  if (__n_981 <= 0)
    goto <bb 159>;
  else
    goto <bb 166>;

  <bb 166>:
  goto <bb 161>;

  <bb 167>:
  __position_877 = __position_1082 + 80;
  # DEBUG __first => __position_877
  __new_finish_878 = __new_finish_1083 + 80;
  # DEBUG __cur => __new_finish_878
  # DEBUG __cur => __new_finish_878
  # DEBUG __first => __position_877
  if (_36 == __position_877)
    goto <bb 169>;
  else
    goto <bb 168>;

  <bb 168>:
  goto <bb 156>;

  <bb 169>:
  # __new_finish_1037 = PHI <__new_finish_878(167)>
  pretmp_53 = this_9(D)->D.41195._M_impl._M_finish;

  <bb 170>:
  # __new_finish_1084 = PHI <__new_finish_1037(169), __new_finish_34(148)>
  # prephitmp_69 = PHI <pretmp_53(169), _36(148)>
  # DEBUG __new_finish => NULL
  # DEBUG D#700 => &this_9(D)->D.41195
  # DEBUG this => D#700
  # DEBUG D#1185 => this_9(D)->D.41195._M_impl._M_finish
  __first_39 = this_9(D)->D.41195._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => D#1185
  # DEBUG __first => __first_39
  if (__first_39 == prephitmp_69)
    goto <bb 188>;
  else
    goto <bb 177>;

  # __new_finish_1026 = PHI <__new_finish_1083(157)>
<L34>:
  _879 = __builtin_eh_pointer (29);
  __cxa_begin_catch (_879);
  # DEBUG __first => __new_finish_34
  # DEBUG __last => __new_finish_1026
  # DEBUG __first => __new_finish_34
  # DEBUG __last => __new_finish_1026
  # DEBUG __first => __new_finish_34
  if (__new_finish_34 == __new_finish_1026)
    goto <bb 172>;
  else
    goto <bb 173>;

  <bb 172>:
  __cxa_rethrow ();

  <bb 173>:

  <bb 174>:
  # __new_finish_1085 = PHI <__new_finish_34(173), __new_finish_882(175)>
  # DEBUG __first => __new_finish_1085
  # DEBUG __r => __new_finish_1085
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  _881 = &MEM[(struct deque *)__new_finish_1085].D.43590;
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (_881);
  MEM[(struct  &)__new_finish_1085] ={v} {CLOBBER};
  __new_finish_882 = __new_finish_1085 + 80;
  # DEBUG __first => __new_finish_882
  # DEBUG __first => __new_finish_882
  if (__new_finish_882 == __new_finish_1026)
    goto <bb 172>;
  else
    goto <bb 175>;

  <bb 175>:
  goto <bb 174>;

<L36>:
  __cxa_end_catch ();
  resx 28

  <bb 177>:

  <bb 178>:
  # __first_1398 = PHI <__first_39(177), __first_96(186)>
  # DEBUG __first => __first_1398
  # DEBUG __r => __first_1398
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  # DEBUG D#1162 => &MEM[(struct deque *)__first_1398].D.43590
  # DEBUG this => D#1162
  _994 = MEM[(struct _Deque_base *)__first_1398]._M_impl._M_map;
  if (_994 != 0B)
    goto <bb 179>;
  else
    goto <bb 185>;

  <bb 179>:
  _995 = MEM[(struct _Deque_base *)__first_1398]._M_impl._M_finish._M_node;
  _996 = _995 + 8;
  __nstart_997 = MEM[(struct _Deque_base *)__first_1398]._M_impl._M_start._M_node;
  # DEBUG this => D#1162
  # DEBUG __nstart => __nstart_997
  # DEBUG __nfinish => _996
  # DEBUG __n => __nstart_997
  # DEBUG __n => __nstart_997
  if (_996 <= __nstart_997)
    goto <bb 184>;
  else
    goto <bb 180>;

  <bb 180>:

  <bb 181>:
  # __nstart_1087 = PHI <__nstart_997(180), __nstart_1000(182)>
  # DEBUG __n => __nstart_1087
  _999 = *__nstart_1087;
  # DEBUG this => D#1162
  # DEBUG __p => _999
  # DEBUG __size => 4
  # DEBUG D#167 => &D#1162->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _999
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _999
  # DEBUG this => D#140
  # DEBUG D.72993 => D#141
  operator delete (_999);
  __nstart_1000 = __nstart_1087 + 8;
  # DEBUG __n => __nstart_1000
  # DEBUG __n => __nstart_1000
  if (_996 <= __nstart_1000)
    goto <bb 183>;
  else
    goto <bb 182>;

  <bb 182>:
  goto <bb 181>;

  <bb 183>:
  pretmp_853 = MEM[(struct _Deque_base *)__first_1398]._M_impl._M_map;

  <bb 184>:
  # prephitmp_107 = PHI <pretmp_853(183), _994(179)>
  # DEBUG D#447 => D#1162->_M_impl._M_map_size
  # DEBUG D#1184 => MEM[(struct _Deque_base *)__first_1398]._M_impl._M_map
  # DEBUG D#445 => D#1162
  # DEBUG D#446 => D#447
  # DEBUG __p => D#1184
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#1184
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#1184
  # DEBUG this => D#261
  # DEBUG D.73003 => D#262
  operator delete (prephitmp_107);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 185>:
  # DEBUG D#448 => &D#1162->_M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  MEM[(struct  &)__first_1398] ={v} {CLOBBER};
  __first_96 = __first_1398 + 80;
  # DEBUG __first => __first_96
  # DEBUG __first => __first_96
  if (prephitmp_69 == __first_96)
    goto <bb 187>;
  else
    goto <bb 186>;

  <bb 186>:
  goto <bb 178>;

  <bb 187>:
  pretmp_496 = this_9(D)->D.41195._M_impl._M_start;

  <bb 188>:
  # prephitmp_1354 = PHI <pretmp_496(187), __first_39(170)>
  # DEBUG D#711 => this_9(D)->D.41195._M_impl._M_end_of_storage
  # DEBUG D#710 => (long int) D#711
  # DEBUG D#1183 => this_9(D)->D.41195._M_impl._M_start
  # DEBUG D#709 => (long int) D#1183
  # DEBUG D#708 => D#710 - D#709
  # DEBUG D#707 => D#708 /[ex] 80
  # DEBUG D#706 => &this_9(D)->D.41195
  # DEBUG D#253 => D#706
  # DEBUG D#254 => (long unsigned int) D#707
  # DEBUG __p => D#1183
  # DEBUG this => D#253
  # DEBUG __n => D#254
  # DEBUG D#252 => D#254
  # DEBUG D#251 => D#253
  if (prephitmp_1354 != 0B)
    goto <bb 189>;
  else
    goto <bb 190>;

  <bb 189>:
  # DEBUG D#250 => &D#251->_M_impl
  # DEBUG D#248 => D#250
  # DEBUG D#249 => D#252
  # DEBUG __p => D#1183
  # DEBUG __a => D#248
  # DEBUG __n => D#249
  # DEBUG D#247 => D#249
  # DEBUG D#246 => D#248
  # DEBUG D#244 => D#246
  # DEBUG D#245 => D#247
  # DEBUG __p => D#1183
  # DEBUG this => D#244
  # DEBUG D.61915 => D#245
  operator delete (prephitmp_1354);

  <bb 190>:
  this_9(D)->D.41195._M_impl._M_start = __new_finish_628;
  this_9(D)->D.41195._M_impl._M_finish = __new_finish_1084;
  _45 = __new_finish_628 + prephitmp_678;
  this_9(D)->D.41195._M_impl._M_end_of_storage = _45;

  <bb 191>:
  return;

<L39>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#458 => &__x_copy.c
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.43590);
  resx 2

<L13>:
  # DEBUG __new_finish => __new_finish_34
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_34 == 0B)
    goto <bb 197>;
  else
    goto <bb 195>;

  <bb 195>:
  # DEBUG __first => __new_finish_628
  if (__new_finish_34 == __new_finish_628)
    goto <bb 196>;
  else
    goto <bb 202>;

  <bb 196>:
  # DEBUG D#712 => &this_9(D)->D.41195
  # DEBUG D#253 => D#712
  # DEBUG __p => NULL
  # DEBUG this => D#253
  # DEBUG __n => D#254
  # DEBUG D#252 => D#254
  # DEBUG D#251 => D#253
  if (__new_finish_628 != 0B)
    goto <bb 205>;
  else
    goto <bb 206>;

  <bb 197>:

  <bb 198>:
  # DEBUG __new_finish => 0B
  # DEBUG D#704 => &this_9(D)->D.41195
  # DEBUG this => D#704
  _49 = __n_7(D) + __elems_before_936;
  _50 = _49 * 80;
  _51 = __new_finish_628 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51
  # DEBUG __first => __first_28
  if (__first_28 == _51)
    goto <bb 196>;
  else
    goto <bb 199>;

  <bb 199>:

  <bb 200>:
  # __first_235 = PHI <__first_28(199), __first_98(201)>
  # DEBUG __first => __first_235
  # DEBUG __r => __first_235
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  _97 = &MEM[(struct deque *)__first_235].D.43590;
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (_97);
  MEM[(struct  &)__first_235] ={v} {CLOBBER};
  __first_98 = __first_235 + 80;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (_51 == __first_98)
    goto <bb 196>;
  else
    goto <bb 201>;

  <bb 201>:
  goto <bb 200>;

  <bb 202>:

  <bb 203>:
  # __new_finish_1420 = PHI <__new_finish_628(202), __new_finish_101(204)>
  # DEBUG __first => __new_finish_1420
  # DEBUG __r => __new_finish_1420
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  _100 = &MEM[(struct deque *)__new_finish_1420].D.43590;
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (_100);
  MEM[(struct  &)__new_finish_1420] ={v} {CLOBBER};
  __new_finish_101 = __new_finish_1420 + 80;
  # DEBUG __first => __new_finish_101
  # DEBUG __first => __new_finish_101
  if (__new_finish_34 == __new_finish_101)
    goto <bb 196>;
  else
    goto <bb 204>;

  <bb 204>:
  goto <bb 203>;

  <bb 205>:
  # DEBUG D#250 => &D#251->_M_impl
  # DEBUG D#248 => D#250
  # DEBUG D#249 => D#252
  # DEBUG __p => NULL
  # DEBUG __a => D#248
  # DEBUG __n => D#249
  # DEBUG D#247 => D#249
  # DEBUG D#246 => D#248
  # DEBUG D#244 => D#246
  # DEBUG D#245 => D#247
  # DEBUG __p => NULL
  # DEBUG this => D#244
  # DEBUG D.61966 => D#245
  operator delete (__new_finish_628);

  <bb 206>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 208>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#176 => &this_9(D)->D.41195._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#176
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.46202
  # DEBUG this => &__position
  _707 = (long int) __position_23;
  # DEBUG this => &D.46202
  _708 = _707 - _631;
  _703 = _708 /[ex] 80;
  __elems_before_704 = (const size_type) _703;
  # DEBUG __elems_before => __elems_before_704
  # DEBUG D#713 => &this_9(D)->D.41195
  # DEBUG D#506 => D#713
  # DEBUG __n => NULL
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  goto <bb 111>;

  <bb 209>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#176 => &this_9(D)->D.41195._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#176
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.46202
  # DEBUG this => &__position
  _697 = (long int) __position_23;
  # DEBUG this => &D.46202
  _940 = _697 - _631;
  _941 = _940 /[ex] 80;
  __elems_before_699 = (const size_type) _941;
  # DEBUG __elems_before => __elems_before_699
  # DEBUG D#713 => &this_9(D)->D.41195
  # DEBUG D#506 => D#713
  # DEBUG __n => NULL
  # DEBUG this => D#506
  # DEBUG D#505 => D#506
  if (__len_639 != 0)
    goto <bb 110>;
  else
    goto <bb 112>;

  <bb 210>:
  _1490 = (long unsigned int) _31;
  _1494 = __old_finish_1068 + _1490;
  this_9(D)->D.41195._M_impl._M_finish = _1494;
  # DEBUG this => &__position
  # DEBUG __first => D#1186
  # DEBUG __last => __old_finish_26
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1186
  goto <bb 99>;

<L37>:
  # DEBUG __new_finish => 0B
  _741 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_741);
  goto <bb 198>;

<L38>:
  # DEBUG __new_finish => __new_finish_628
  _1627 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_1627);
  if (__new_finish_628 == 0B)
    goto <bb 197>;
  else
    goto <bb 196>;

}



;; Function BufferState::FeedbackSharedBufferPolicy::FeedbackSharedBufferPolicy(const Configuration&, BufferState*, const string&) (_ZN11BufferState26FeedbackSharedBufferPolicyC2ERK13ConfigurationPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2183, decl_uid=41242, cgraph_uid=650, symbol_order=651)

Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
BufferState::FeedbackSharedBufferPolicy::FeedbackSharedBufferPolicy(const Configuration&, BufferState*, const string&) (struct FeedbackSharedBufferPolicy * const this, const struct Configuration & config, struct BufferState * parent, const struct string & name)
{
  int * * __first$_M_node;
  int * __first$_M_last;
  int * const __first;
  int * * SR.2458;
  int * SR.2457;
  int * SR.2456;
  int * * __first$24;
  int * __first$16;
  int * __first$8;
  int * __first;
  int * * __nstart;
  struct queue * __first;
  int * * __nstart;
  int * * __nstart;
  int * * __nstart;
  struct iterator __position;
  struct queue * __pos;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.73597;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.73572;
  struct _Deque_iterator D.73571;
  struct _Deque_iterator D.73570;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  int * __it;
  int * __it$8;
  int * __it$16;
  int * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.73552;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.73538;
  struct _Deque_iterator D.73537;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.73530;
  struct _Deque_iterator D.73529;
  struct _Deque_iterator D.73528;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  struct deque D.43702;
  struct value_type D.43701;
  const struct string D.43699;
  const struct string D.43697;
  const struct string D.43695;
  struct SharedBufferPolicy * _4;
  int _15;
  char * const _18;
  int _22;
  char * const _25;
  int _29;
  char * const _32;
  int _33;
  long unsigned int _35;
  struct vector * _36;
  int * const _37;
  struct vector * _40;
  int * * _41;
  int _42;
  long unsigned int _43;
  struct vector * _44;
  int * * _45;
  char * const _46;
  int _49;
  int _50;
  int _51;
  int * _55;
  char * const _60;
  char * const _62;
  int * * _64;
  int * _65;
  int * * pretmp_82;
  int * * prephitmp_83;
  int pretmp_90;
  long unsigned int pretmp_92;
  long unsigned int prephitmp_93;
  struct queue * _106;
  int * * _109;
  struct queue * pretmp_140;
  struct queue * prephitmp_141;
  char * _152;
  long unsigned int __dnew.49_153;
  long unsigned int __dnew.49_156;
  char * const _157;
  char * _158;
  int * * prephitmp_180;
  int * const _191;
  int * const _192;
  long int _193;
  long int _194;
  long int _195;
  long int _196;
  size_type _197;
  long unsigned int _198;
  long unsigned int _199;
  int * _200;
  int * const _201;
  long int _202;
  long int _203;
  long int _204;
  long int _205;
  size_type _206;
  long unsigned int _207;
  long unsigned int _208;
  int * _209;
  long int _210;
  int * * _211;
  long int _212;
  long int _213;
  long int _214;
  long int _215;
  long int _216;
  int * _217;
  long int _218;
  int * _219;
  long int _220;
  long int _221;
  long int _222;
  long int _223;
  int * _224;
  long int _225;
  int * _226;
  long int _227;
  long int _228;
  long int _229;
  difference_type _230;
  size_type _231;
  int * _233;
  int * * prephitmp_234;
  int * _235;
  int * * _236;
  int * _237;
  int * _238;
  int * * _240;
  long int _277;
  long int _279;
  long int _280;
  long int _281;
  long int _282;
  long int _283;
  long int _285;
  long int _287;
  long int _288;
  long int _289;
  long int _290;
  long int _292;
  long int _294;
  long int _295;
  long int _296;
  int _301;
  int * _305;
  int * * _317;
  int * _318;
  int * _319;
  struct queue * const _320;
  struct queue * const _321;
  long int _322;
  long int _323;
  long int _324;
  long int _325;
  size_type _326;
  long unsigned int _327;
  long unsigned int _328;
  int * * _333;
  int * * _334;
  int * _337;
  int * * _340;
  int * * _341;
  int * * _342;
  int * _345;
  int * * _348;
  int * * _349;
  int * _352;
  int * * _360;
  int * * _361;
  int * _364;
  int * * pretmp_369;
  int * * pretmp_430;
  int * * pretmp_512;
  int * * prephitmp_513;
  int pretmp_519;
  int prephitmp_520;

  <bb 2>:
  _4 = &this_3(D)->D.41247;
  BufferState::SharedBufferPolicy::SharedBufferPolicy (_4, config_6(D), parent_7(D), name_8(D));
  this_3(D)->D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyE + 16B];
  # DEBUG D#718 => &this_3(D)->_occupancy_limit
  # DEBUG this => D#718
  # DEBUG D#229 => &D#718->D.40238
  # DEBUG this => D#229
  # DEBUG D#228 => &D#229->_M_impl
  # DEBUG this => D#228
  # DEBUG this => D#228
  # DEBUG this => D#228
  MEM[(struct _Vector_impl *)this_3(D) + 224B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 224B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 224B]._M_end_of_storage = 0B;
  # DEBUG D#717 => &this_3(D)->_round_trip_time
  # DEBUG this => D#717
  # DEBUG D#229 => &D#717->D.40238
  # DEBUG this => D#229
  # DEBUG D#228 => &D#229->_M_impl
  # DEBUG this => D#228
  # DEBUG this => D#228
  # DEBUG this => D#228
  MEM[(struct _Vector_impl *)this_3(D) + 248B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 248B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 248B]._M_end_of_storage = 0B;
  # DEBUG D#716 => &this_3(D)->_flit_sent_time
  # DEBUG this => D#716
  # DEBUG D#243 => &D#716->D.41195
  # DEBUG this => D#243
  # DEBUG D#242 => &D#243->_M_impl
  # DEBUG this => D#242
  # DEBUG this => D#242
  # DEBUG this => D#242
  MEM[(struct _Vector_impl *)this_3(D) + 272B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 272B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 272B]._M_end_of_storage = 0B;
  # DEBUG D#63 => &D.43696
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.43696
  # DEBUG this => &D.43695
  # DEBUG __s => "feedback_aging_scale"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.43695
  # DEBUG D#296 => &D.43695._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.43695.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.43695]._M_p = &D.43695.D.11539._M_local_buf;
  # DEBUG __s => "feedback_aging_scale"
  # DEBUG this => &D.43695
  # DEBUG __beg => "feedback_aging_scale"
  # DEBUG __end => &MEM[(void *)"feedback_aging_scale" + 20B]
  # DEBUG this => &D.43695
  # DEBUG __beg => "feedback_aging_scale"
  # DEBUG __end => &MEM[(void *)"feedback_aging_scale" + 20B]
  # DEBUG this => &D.43695
  # DEBUG __beg => "feedback_aging_scale"
  # DEBUG __end => &MEM[(void *)"feedback_aging_scale" + 20B]
  # DEBUG __ptr => "feedback_aging_scale"
  # DEBUG __first => "feedback_aging_scale"
  # DEBUG __last => &MEM[(void *)"feedback_aging_scale" + 20B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "feedback_aging_scale"
  # DEBUG __last => &MEM[(void *)"feedback_aging_scale" + 20B]
  __dnew = 20;
  _152 = std::__cxx11::basic_string<char>::_M_create (&D.43695, &__dnew, 0);

  <bb 3>:
  # DEBUG D#7 => &D.43695
  # DEBUG __p => _152
  # DEBUG this => D#7
  MEM[(char * *)&D.43695] = _152;
  __dnew.49_153 = __dnew;
  # DEBUG D#8 => &D.43695
  # DEBUG __capacity => __dnew.49_153
  # DEBUG this => D#8
  MEM[(size_type *)&D.43695 + 16B] = __dnew.49_153;
  # DEBUG D#1 => &D.43695
  # DEBUG this => D#1
  # DEBUG __p => _152
  # DEBUG __k1 => "feedback_aging_scale"
  # DEBUG __k2 => &MEM[(void *)"feedback_aging_scale" + 20B]
  # DEBUG __d => _152
  # DEBUG __s => "feedback_aging_scale"
  # DEBUG __n => 20
  # DEBUG __s1 => _152
  # DEBUG __s2 => "feedback_aging_scale"
  # DEBUG __n => 20
  __builtin_memcpy (_152, "feedback_aging_scale", 20);
  __dnew.49_156 = __dnew;
  # DEBUG this => &D.43695
  # DEBUG __n => __dnew.49_156
  # DEBUG D#9 => &D.43695
  # DEBUG __length => __dnew.49_156
  # DEBUG this => D#9
  MEM[(size_type *)&D.43695 + 8B] = __dnew.49_156;
  _157 = MEM[(char * *)&D.43695];
  # DEBUG D#1 => &D.43695
  # DEBUG this => D#1
  _158 = _157 + __dnew.49_156;
  # DEBUG __c1 => _158
  # DEBUG __c2 => D#10
  MEM[(char_type &)_158] = 0;
  __dnew ={v} {CLOBBER};
  _15 = Configuration::GetInt (config_6(D), &D.43695);

  <bb 4>:
  this_3(D)->_aging_scale = _15;
  # DEBUG this => &D.43695
  # DEBUG this => &D.43695
  # DEBUG this => &D.43695
  _18 = MEM[(char * *)&D.43695];
  # DEBUG D#1 => &D.43695
  # DEBUG this => D#1
  # DEBUG this => &D.43695
  if (&D.43695.D.11539._M_local_buf != _18)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#188 => D.43695.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43695
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43695
  # DEBUG this => D#1
  # DEBUG this => &D.43695
  # DEBUG D#185 => &D.43695._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _18
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _18
  # DEBUG this => D#179
  # DEBUG D.62039 => D#180
  operator delete (_18);

  <bb 6>:
  # DEBUG D#189 => &D.43695._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43695 ={v} {CLOBBER};
  # DEBUG this => &D.43696
  # DEBUG this => &D.43696
  # DEBUG D#63 => &D.43698
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.43698
  # DEBUG this => &D.43697
  # DEBUG __s => "feedback_offset"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.43697
  # DEBUG D#296 => &D.43697._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.43697.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.43697]._M_p = &D.43697.D.11539._M_local_buf;
  # DEBUG __s => "feedback_offset"
  # DEBUG this => &D.43697
  # DEBUG __beg => "feedback_offset"
  # DEBUG __end => &MEM[(void *)"feedback_offset" + 15B]
  # DEBUG this => &D.43697
  # DEBUG __beg => "feedback_offset"
  # DEBUG __end => &MEM[(void *)"feedback_offset" + 15B]
  # DEBUG this => &D.43697
  # DEBUG __beg => "feedback_offset"
  # DEBUG __end => &MEM[(void *)"feedback_offset" + 15B]
  # DEBUG __ptr => "feedback_offset"
  # DEBUG __first => "feedback_offset"
  # DEBUG __last => &MEM[(void *)"feedback_offset" + 15B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "feedback_offset"
  # DEBUG __last => &MEM[(void *)"feedback_offset" + 15B]
  # DEBUG __dnew => 15
  # DEBUG D#1 => &D.43697
  # DEBUG this => D#1
  # DEBUG __p => &D.43697.D.11539._M_local_buf
  # DEBUG __k1 => "feedback_offset"
  # DEBUG __k2 => &MEM[(void *)"feedback_offset" + 15B]
  # DEBUG __d => &D.43697.D.11539._M_local_buf
  # DEBUG __s => "feedback_offset"
  # DEBUG __n => 15
  # DEBUG __s1 => &D.43697.D.11539._M_local_buf
  # DEBUG __s2 => "feedback_offset"
  # DEBUG __n => 15
  __builtin_memcpy (&D.43697.D.11539._M_local_buf, "feedback_offset", 15);
  # DEBUG this => &D.43697
  # DEBUG __n => 15
  # DEBUG D#9 => &D.43697
  # DEBUG __length => 15
  # DEBUG this => D#9
  MEM[(size_type *)&D.43697 + 8B] = 15;
  # DEBUG D#1 => &D.43697
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.43697 + 31B]
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.43697 + 31] = 0;
  # DEBUG D#1205 => {CLOBBER}
  # DEBUG __dnew => D#1205
  _22 = Configuration::GetInt (config_6(D), &D.43697);

  <bb 7>:
  this_3(D)->_offset = _22;
  # DEBUG this => &D.43697
  # DEBUG this => &D.43697
  # DEBUG this => &D.43697
  _25 = MEM[(char * *)&D.43697];
  # DEBUG D#1 => &D.43697
  # DEBUG this => D#1
  # DEBUG this => &D.43697
  if (&D.43697.D.11539._M_local_buf != _25)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG D#188 => D.43697.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43697
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43697
  # DEBUG this => D#1
  # DEBUG this => &D.43697
  # DEBUG D#185 => &D.43697._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _25
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _25
  # DEBUG this => D#179
  # DEBUG D.62057 => D#180
  operator delete (_25);

  <bb 9>:
  # DEBUG D#189 => &D.43697._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43697 ={v} {CLOBBER};
  # DEBUG this => &D.43698
  # DEBUG this => &D.43698
  # DEBUG D#63 => &D.43700
  # DEBUG this => D#63
  # DEBUG D#62 => D#63
  # DEBUG this => D#62
  # DEBUG D#299 => &D.43700
  # DEBUG this => &D.43699
  # DEBUG __s => "num_vcs"
  # DEBUG __a => D#299
  # DEBUG D#298 => D#299
  # DEBUG this => &D.43699
  # DEBUG D#296 => &D.43699._M_dataplus
  # DEBUG D#126 => D#298
  # DEBUG this => D#296
  # DEBUG __dat => &D.43699.D.11539._M_local_buf
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#296
  # DEBUG D#124 => D#125
  # DEBUG this => D#123
  # DEBUG __a => D#124
  # DEBUG D#122 => D#124
  # DEBUG D#121 => D#123
  # DEBUG this => D#121
  # DEBUG D.54050 => D#122
  MEM[(struct _Alloc_hider *)&D.43699]._M_p = &D.43699.D.11539._M_local_buf;
  # DEBUG __s => "num_vcs"
  # DEBUG this => &D.43699
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG this => &D.43699
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG this => &D.43699
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG __ptr => "num_vcs"
  # DEBUG __first => "num_vcs"
  # DEBUG __last => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG D#316 => &__first
  # DEBUG D.55911 => D#316
  # DEBUG __first => "num_vcs"
  # DEBUG __last => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#1 => &D.43699
  # DEBUG this => D#1
  # DEBUG __p => &D.43699.D.11539._M_local_buf
  # DEBUG __k1 => "num_vcs"
  # DEBUG __k2 => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG __d => &D.43699.D.11539._M_local_buf
  # DEBUG __s => "num_vcs"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.43699.D.11539._M_local_buf
  # DEBUG __s2 => "num_vcs"
  # DEBUG __n => 7
  __builtin_memcpy (&D.43699.D.11539._M_local_buf, "num_vcs", 7);
  # DEBUG this => &D.43699
  # DEBUG __n => 7
  # DEBUG D#9 => &D.43699
  # DEBUG __length => 7
  # DEBUG this => D#9
  MEM[(size_type *)&D.43699 + 8B] = 7;
  # DEBUG D#1 => &D.43699
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.43699 + 23B]
  # DEBUG __c2 => D#10
  MEM[(char_type &)&D.43699 + 23] = 0;
  # DEBUG D#1206 => {CLOBBER}
  # DEBUG __dnew => D#1206
  _29 = Configuration::GetInt (config_6(D), &D.43699);

  <bb 10>:
  this_3(D)->_vcs = _29;
  # DEBUG this => &D.43699
  # DEBUG this => &D.43699
  # DEBUG this => &D.43699
  _32 = MEM[(char * *)&D.43699];
  # DEBUG D#1 => &D.43699
  # DEBUG this => D#1
  # DEBUG this => &D.43699
  if (&D.43699.D.11539._M_local_buf != _32)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#188 => D.43699.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43699
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43699
  # DEBUG this => D#1
  # DEBUG this => &D.43699
  # DEBUG D#185 => &D.43699._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _32
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _32
  # DEBUG this => D#179
  # DEBUG D.62074 => D#180
  operator delete (_32);
  pretmp_519 = this_3(D)->_vcs;

  <bb 12>:
  # prephitmp_520 = PHI <_29(10), pretmp_519(11)>
  # DEBUG D#189 => &D.43699._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43699 ={v} {CLOBBER};
  # DEBUG this => &D.43700
  # DEBUG this => &D.43700
  _33 = this_3(D)->D.41247._buf_size;
  _35 = (long unsigned int) prephitmp_520;
  # DEBUG D#1216 => &this_3(D)->_occupancy_limit
  # DEBUG this => D#1216
  # DEBUG __new_size => _35
  __x = _33;
  # DEBUG __x => __x
  _191 = MEM[(int * *)this_3(D) + 224B];
  # DEBUG D#64 => D#1216
  _192 = MEM[(int * *)this_3(D) + 232B];
  # DEBUG D#64 => D#1216
  # DEBUG this => D#64
  # DEBUG this => D#64
  _193 = (long int) _192;
  _194 = (long int) _191;
  _195 = _193 - _194;
  _196 = _195 /[ex] 4;
  _197 = (size_type) _196;
  if (_35 > _197)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 13>:
  # DEBUG D#64 => D#1216
  # DEBUG D#64 => D#1216
  # DEBUG this => D#64
  # DEBUG this => D#64
  _198 = _35 - _197;
  # DEBUG this => D#1216
  # DEBUG D#76 => &D#1216->D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  # DEBUG this => D#1216
  MEM[(struct __normal_iterator *)&__position] = _192;
  # DEBUG __n => _198
  # DEBUG __x => &__x
  _36 = &this_3(D)->_occupancy_limit;
  std::vector<int>::_M_fill_insert (_36, __position, _198, &__x);
  goto <bb 15>;

<L13>:
  goto <bb 84> (<L8>);

  <bb 15>:
  pretmp_90 = this_3(D)->_vcs;
  pretmp_92 = (long unsigned int) pretmp_90;
  goto <bb 18>;

  <bb 16>:
  # DEBUG D#64 => D#1216
  # DEBUG D#64 => D#1216
  # DEBUG this => D#64
  # DEBUG this => D#64
  if (_35 < _197)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _199 = _35 * 4;
  _200 = _191 + _199;
  # DEBUG D#139 => D#1216
  # DEBUG __pos => _200
  # DEBUG D#138 => D#139
  # DEBUG this => D#138
  # DEBUG D#136 => &D#138->D.40238
  # DEBUG this => D#136
  # DEBUG D#137 => D#138->D.40238._M_impl._M_finish
  # DEBUG __first => _200
  # DEBUG __last => D#137
  # DEBUG D.54135 => NULL
  # DEBUG D#134 => _200
  # DEBUG D#135 => D#137
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  MEM[(int * *)this_3(D) + 232B] = _200;

  <bb 18>:
  # prephitmp_93 = PHI <_35(16), pretmp_92(15), _35(17)>
  # DEBUG D#1213 => this_3(D)->_vcs
  # DEBUG D#1215 => &this_3(D)->_round_trip_time
  # DEBUG this => D#1215
  # DEBUG __new_size => (long unsigned int) D#1213
  __x = -1;
  # DEBUG __x => __x
  _37 = MEM[(int * *)this_3(D) + 248B];
  # DEBUG D#64 => D#1215
  _201 = MEM[(int * *)this_3(D) + 256B];
  # DEBUG D#64 => D#1215
  # DEBUG this => D#64
  # DEBUG this => D#64
  _202 = (long int) _201;
  _203 = (long int) _37;
  _204 = _202 - _203;
  _205 = _204 /[ex] 4;
  _206 = (size_type) _205;
  if (prephitmp_93 > _206)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG D#64 => D#1215
  # DEBUG D#64 => D#1215
  # DEBUG this => D#64
  # DEBUG this => D#64
  _207 = prephitmp_93 - _206;
  # DEBUG this => D#1215
  # DEBUG D#76 => &D#1215->D.40238._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#76
  # DEBUG this => D#1215
  MEM[(struct __normal_iterator *)&__position] = _201;
  # DEBUG __n => _207
  # DEBUG __x => &__x
  _40 = &this_3(D)->_round_trip_time;
  std::vector<int>::_M_fill_insert (_40, __position, _207, &__x);
  goto <bb 21>;

<L14>:
  goto <bb 84> (<L8>);

  <bb 21>:
  goto <bb 24>;

  <bb 22>:
  # DEBUG D#64 => D#1215
  # DEBUG D#64 => D#1215
  # DEBUG this => D#64
  # DEBUG this => D#64
  if (prephitmp_93 < _206)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 23>:
  _208 = prephitmp_93 * 4;
  _209 = _37 + _208;
  # DEBUG D#139 => D#1215
  # DEBUG __pos => _209
  # DEBUG D#138 => D#139
  # DEBUG this => D#138
  # DEBUG D#136 => &D#138->D.40238
  # DEBUG this => D#136
  # DEBUG D#137 => D#138->D.40238._M_impl._M_finish
  # DEBUG __first => _209
  # DEBUG __last => D#137
  # DEBUG D.54135 => NULL
  # DEBUG D#134 => _209
  # DEBUG D#135 => D#137
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  MEM[(int * *)this_3(D) + 256B] = _209;

  <bb 24>:
  # DEBUG this => &D.43702
  # DEBUG this => &D.43702.D.43590
  # DEBUG D#482 => &MEM[(struct _Deque_base *)&D.43702]._M_impl
  # DEBUG this => D#482
  # DEBUG this => D#482
  # DEBUG this => D#482
  MEM[(struct _Deque_impl *)&D.43702]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.43702]._M_map_size = 0;
  # DEBUG D#231 => &D#482->_M_start
  # DEBUG this => D#231
  MEM[(struct _Deque_iterator *)&D.43702 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.43702 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.43702 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.43702 + 16B]._M_node = 0B;
  # DEBUG D#230 => &D#482->_M_finish
  # DEBUG this => D#230
  MEM[(struct _Deque_iterator *)&D.43702 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.43702 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.43702 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.43702 + 48B]._M_node = 0B;
  std::_Deque_base<int, std::allocator<int> >::_M_initialize_map (&D.43702.D.43590, 0);
  goto <bb 26>;

<L15>:
  goto <bb 84> (<L8>);

  <bb 26>:
  # DEBUG this => &D.43701
  # DEBUG __c => &D.43702
  # DEBUG this => &D.43701.c
  # DEBUG __x => &D.43702
  # DEBUG this => &D.43702
  # DEBUG D#174 => &D.43702.D.43590._M_impl._M_start
  # DEBUG D#175 => &D.43702.D.43590._M_impl._M_finish
  # DEBUG __x => D#175
  # DEBUG __y => D#174
  # DEBUG __size => 4
  _41 = MEM[(const struct _Deque_iterator &)&D.43702 + 48]._M_node;
  _210 = (long int) _41;
  _211 = MEM[(const struct _Deque_iterator &)&D.43702 + 16]._M_node;
  _212 = (long int) _211;
  _213 = _210 - _212;
  _214 = _213 /[ex] 8;
  _215 = _214 + -1;
  _216 = _215 * 128;
  _217 = MEM[(const struct _Deque_iterator &)&D.43702 + 48]._M_cur;
  _218 = (long int) _217;
  _219 = MEM[(const struct _Deque_iterator &)&D.43702 + 48]._M_first;
  _220 = (long int) _219;
  _221 = _218 - _220;
  _222 = _221 /[ex] 4;
  _223 = _216 + _222;
  _224 = MEM[(const struct _Deque_iterator &)&D.43702 + 16]._M_last;
  _225 = (long int) _224;
  _226 = MEM[(const struct _Deque_iterator &)&D.43702 + 16]._M_cur;
  _227 = (long int) _226;
  _228 = _225 - _227;
  _229 = _228 /[ex] 4;
  _230 = _223 + _229;
  _231 = (size_type) _230;
  # DEBUG D#604 => &D.43702.D.43590
  # DEBUG this => D#604
  # DEBUG __a => NULL
  # DEBUG this => &MEM[(struct deque *)&D.43701].D.43590
  # DEBUG __a => NULL
  # DEBUG __num_elements => _231
  # DEBUG D#484 => &MEM[(struct _Deque_base *)&D.43701]._M_impl
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG __a => NULL
  # DEBUG this => D#484
  # DEBUG D.55189 => NULL
  MEM[(struct _Deque_impl *)&D.43701]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.43701]._M_map_size = 0;
  # DEBUG D#241 => &D#484->_M_start
  # DEBUG this => D#241
  MEM[(struct _Deque_iterator *)&D.43701 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.43701 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.43701 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.43701 + 16B]._M_node = 0B;
  # DEBUG D#240 => &D#484->_M_finish
  # DEBUG this => D#240
  MEM[(struct _Deque_iterator *)&D.43701 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.43701 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.43701 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.43701 + 48B]._M_node = 0B;
  std::_Deque_base<int, std::allocator<int> >::_M_initialize_map (&MEM[(struct deque *)&D.43701].D.43590, _231);

  <bb 27>:
  # DEBUG D#605 => &MEM[(struct deque *)&D.43701].D.43590
  # DEBUG this => D#605
  # DEBUG D#606 => &MEM[(struct deque *)&D.43701].D.43590._M_impl._M_start
  # DEBUG this => &D.73530
  # DEBUG __x => D#606
  _233 = MEM[(const struct iterator &)&D.43701 + 16]._M_cur;
  _235 = MEM[(const struct iterator &)&D.43701 + 16]._M_last;
  _236 = MEM[(const struct iterator &)&D.43701 + 16]._M_node;
  # DEBUG this => &D.43702
  # DEBUG D#83 => &D.43702.D.43590._M_impl._M_finish
  # DEBUG this => &D.73529
  # DEBUG __x => D#83
  _237 = MEM[(const struct iterator &)&D.43702 + 48]._M_cur;
  _238 = MEM[(const struct iterator &)&D.43702 + 48]._M_first;
  # DEBUG D#1202 => MEM[(const struct iterator &)&D.43702 + 48]._M_last
  _240 = MEM[(const struct iterator &)&D.43702 + 48]._M_node;
  # DEBUG this => &D.43702
  # DEBUG D#84 => &D.43702.D.43590._M_impl._M_start
  # DEBUG this => &D.73528
  # DEBUG __x => D#84
  __first_241 = MEM[(const struct iterator &)&D.43702 + 16]._M_cur;
  # DEBUG D#1207 => MEM[(const struct iterator &)&D.43702 + 16]._M_first
  __first$_M_last_243 = MEM[(const struct iterator &)&D.43702 + 16]._M_last;
  __first$_M_node_244 = MEM[(const struct iterator &)&D.43702 + 16]._M_node;
  # DEBUG __result => &D.73530
  # DEBUG D.73534 => D#603
  # DEBUG this => &D.73538
  # DEBUG __x => &D.73530
  # DEBUG __result => &D.73538
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.73538
  # DEBUG __result => NULL
  # DEBUG this => &D.73552
  # DEBUG __x => NULL
  # DEBUG __result => &D.73552
  # DEBUG this => &D.73572
  # DEBUG __x => &D.73552
  # DEBUG __it => _237
  # DEBUG __it$8 => _238
  # DEBUG __it$16 => D#1202
  # DEBUG __it$24 => _240
  # DEBUG __it$_M_cur => _237
  # DEBUG __it$_M_first => _238
  # DEBUG __it$_M_last => D#1202
  # DEBUG __it$_M_node => _240
  # DEBUG __it => __first_241
  # DEBUG __it$8 => D#1207
  # DEBUG __it$16 => __first$_M_last_243
  # DEBUG __it$24 => __first$_M_node_244
  # DEBUG __it$_M_cur => __first_241
  # DEBUG __it$_M_first => D#1207
  # DEBUG __it$_M_last => __first$_M_last_243
  # DEBUG __it$_M_node => __first$_M_node_244
  # DEBUG __result => &D.73572
  # DEBUG this => NULL
  # DEBUG __x => &D.73572
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _237
  # DEBUG __it$8 => _238
  # DEBUG __it$16 => D#1202
  # DEBUG __it$24 => _240
  # DEBUG __it$_M_cur => _237
  # DEBUG __it$_M_first => _238
  # DEBUG __it$_M_last => D#1202
  # DEBUG __it$_M_node => _240
  # DEBUG __it => __first_241
  # DEBUG __it$8 => D#1207
  # DEBUG __it$16 => __first$_M_last_243
  # DEBUG __it$24 => __first$_M_node_244
  # DEBUG __it$_M_cur => __first_241
  # DEBUG __it$_M_first => D#1207
  # DEBUG __it$_M_last => __first$_M_last_243
  # DEBUG __it$_M_node => __first$_M_node_244
  # DEBUG __first => __first_241
  # DEBUG __first$8 => D#1207
  # DEBUG __first$16 => __first$_M_last_243
  # DEBUG __first$24 => __first$_M_node_244
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.73597
  # DEBUG __x => NULL
  # DEBUG __first => __first_241
  # DEBUG __first$_M_first => D#1207
  # DEBUG __first$_M_last => __first$_M_last_243
  # DEBUG __first$_M_node => __first$_M_node_244
  # DEBUG __result => &D.73597
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 4
  _277 = (long int) _240;
  _279 = (long int) __first$_M_node_244;
  _280 = _277 - _279;
  _281 = _280 /[ex] 8;
  _282 = _281 + -1;
  _283 = _282 * 128;
  _285 = (long int) _237;
  _287 = (long int) _238;
  _288 = _285 - _287;
  _289 = _288 /[ex] 4;
  _290 = _283 + _289;
  _292 = (long int) __first$_M_last_243;
  _294 = (long int) __first_241;
  _295 = _292 - _294;
  _296 = _295 /[ex] 4;
  __n_297 = _290 + _296;
  # DEBUG __n => __n_297
  # DEBUG __n => __n_297
  if (__n_297 <= 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG this => &D.73537
  # DEBUG __x => &D.73597
  D.73597 ={v} {CLOBBER};
  D.73572 ={v} {CLOBBER};
  D.73552 ={v} {CLOBBER};
  D.73538 ={v} {CLOBBER};
  D.73530 ={v} {CLOBBER};
  _42 = this_3(D)->_vcs;
  _43 = (long unsigned int) _42;
  # DEBUG D#1214 => &this_3(D)->_flit_sent_time
  # DEBUG this => D#1214
  # DEBUG __new_size => _43
  # DEBUG __x => &D.43701
  _320 = MEM[(struct queue * *)this_3(D) + 272B];
  # DEBUG D#72 => D#1214
  _321 = MEM[(struct queue * *)this_3(D) + 280B];
  # DEBUG D#72 => D#1214
  # DEBUG this => D#72
  # DEBUG this => D#72
  _322 = (long int) _321;
  _323 = (long int) _320;
  _324 = _322 - _323;
  _325 = _324 /[ex] 80;
  _326 = (size_type) _325;
  if (_43 > _326)
    goto <bb 36>;
  else
    goto <bb 38>;

  <bb 29>:

  <bb 30>:
  # __n_436 = PHI <__n_297(29), __n_307(35)>
  # SR.2456_496 = PHI <_233(29), SR.2456_495(35)>
  # SR.2457_493 = PHI <_235(29), SR.2457_492(35)>
  # SR.2458_491 = PHI <_236(29), SR.2458_490(35)>
  # __first_488 = PHI <__first_241(29), __first_487(35)>
  # __first$_M_last_484 = PHI <__first$_M_last_243(29), __first$_M_last_483(35)>
  # __first$_M_node_482 = PHI <__first$_M_node_244(29), __first$_M_node_480(35)>
  # DEBUG __first$_M_node => __first$_M_node_482
  # DEBUG __first$_M_last => __first$_M_last_484
  # DEBUG __first => __first_488
  # DEBUG __n => __n_436
  # DEBUG D#100 => &D.73597
  # DEBUG this => D#100
  # DEBUG D#91 => &__first
  # DEBUG this => D#91
  _301 = MEM[(const int &)__first_488];
  *SR.2456_496 = _301;
  # DEBUG this => &__first
  __first_302 = __first_488 + 4;
  # DEBUG __first => __first_302
  if (__first_302 == __first$_M_last_484)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG this => &__first
  __first$_M_node_313 = __first$_M_node_482 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_313
  # DEBUG __first$_M_node => __first$_M_node_313
  __first_314 = MEM[(int * *)__first$_M_node_482 + 8B];
  # DEBUG __size => 4
  __first$_M_last_315 = __first_314 + 512;
  # DEBUG __first$_M_last => __first$_M_last_315
  # DEBUG __first => __first_314

  <bb 32>:
  # __first_487 = PHI <__first_302(30), __first_314(31)>
  # __first$_M_last_483 = PHI <__first$_M_last_484(30), __first$_M_last_315(31)>
  # __first$_M_node_480 = PHI <__first$_M_node_482(30), __first$_M_node_313(31)>
  # DEBUG __first$_M_node => __first$_M_node_480
  # DEBUG __first$_M_last => __first$_M_last_483
  # DEBUG __first => __first_487
  # DEBUG this => &D.73597
  _305 = SR.2456_496 + 4;
  if (_305 == SR.2457_493)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG this => &D.73597
  _317 = SR.2458_491 + 8;
  # DEBUG this => &D.73597
  # DEBUG __new_node => _317
  _318 = MEM[(int * *)SR.2458_491 + 8B];
  # DEBUG __size => 4
  _319 = _318 + 512;

  <bb 34>:
  # SR.2456_495 = PHI <_305(32), _318(33)>
  # SR.2457_492 = PHI <SR.2457_493(32), _319(33)>
  # SR.2458_490 = PHI <SR.2458_491(32), _317(33)>
  __n_307 = __n_436 + -1;
  # DEBUG __n => __n_307
  # DEBUG __n => __n_307
  if (__n_307 <= 0)
    goto <bb 28>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 30>;

  <bb 36>:
  # DEBUG D#72 => D#1214
  # DEBUG D#72 => D#1214
  # DEBUG this => D#72
  # DEBUG this => D#72
  _327 = _43 - _326;
  # DEBUG this => D#1214
  # DEBUG D#85 => &D#1214->D.41195._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#85
  # DEBUG this => D#1214
  MEM[(struct __normal_iterator *)&__position] = _321;
  # DEBUG __n => _327
  # DEBUG __x => &D.43701
  _44 = &this_3(D)->_flit_sent_time;
  std::vector<std::queue<int> >::_M_fill_insert (_44, __position, _327, &D.43701);

  <bb 37>:
  goto <bb 51>;

  <bb 38>:
  # DEBUG D#72 => D#1214
  # DEBUG D#72 => D#1214
  # DEBUG this => D#72
  # DEBUG this => D#72
  if (_43 < _326)
    goto <bb 39>;
  else
    goto <bb 37>;

  <bb 39>:
  _328 = _43 * 80;
  __pos_329 = _320 + _328;
  # DEBUG D#462 => D#1214
  # DEBUG __pos => __pos_329
  # DEBUG D#461 => D#462
  # DEBUG this => D#461
  # DEBUG D#460 => &D#461->D.41195
  # DEBUG this => D#460
  # DEBUG __first => __pos_329
  # DEBUG __last => _321
  # DEBUG __first => __pos_329
  if (_321 == __pos_329)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  MEM[(struct queue * *)this_3(D) + 280B] = __pos_329;
  goto <bb 51>;

  <bb 41>:

  <bb 42>:
  # __pos_437 = PHI <__pos_329(41), __pos_332(50)>
  # DEBUG __first => __pos_437
  # DEBUG __r => __pos_437
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  # DEBUG D#1201 => &MEM[(struct deque *)__pos_437].D.43590
  # DEBUG this => D#1201
  _45 = MEM[(struct _Deque_base *)__pos_437]._M_impl._M_map;
  if (_45 != 0B)
    goto <bb 43>;
  else
    goto <bb 49>;

  <bb 43>:
  _333 = MEM[(struct _Deque_base *)__pos_437]._M_impl._M_finish._M_node;
  _334 = _333 + 8;
  __nstart_335 = MEM[(struct _Deque_base *)__pos_437]._M_impl._M_start._M_node;
  # DEBUG this => D#1201
  # DEBUG __nstart => __nstart_335
  # DEBUG __nfinish => _334
  # DEBUG __n => __nstart_335
  # DEBUG __n => __nstart_335
  if (_334 <= __nstart_335)
    goto <bb 48>;
  else
    goto <bb 44>;

  <bb 44>:

  <bb 45>:
  # __nstart_438 = PHI <__nstart_335(44), __nstart_338(46)>
  # DEBUG __n => __nstart_438
  _337 = *__nstart_438;
  # DEBUG this => D#1201
  # DEBUG __p => _337
  # DEBUG __size => 4
  # DEBUG D#167 => &D#1201->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _337
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _337
  # DEBUG this => D#140
  # DEBUG D.73654 => D#141
  operator delete (_337);
  __nstart_338 = __nstart_438 + 8;
  # DEBUG __n => __nstart_338
  # DEBUG __n => __nstart_338
  if (_334 <= __nstart_338)
    goto <bb 47>;
  else
    goto <bb 46>;

  <bb 46>:
  goto <bb 45>;

  <bb 47>:
  pretmp_430 = MEM[(struct _Deque_base *)__pos_437]._M_impl._M_map;

  <bb 48>:
  # prephitmp_234 = PHI <pretmp_430(47), _45(43)>
  # DEBUG D#447 => D#1201->_M_impl._M_map_size
  # DEBUG D#1212 => MEM[(struct _Deque_base *)__pos_437]._M_impl._M_map
  # DEBUG D#445 => D#1201
  # DEBUG D#446 => D#447
  # DEBUG __p => D#1212
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#1212
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#1212
  # DEBUG this => D#261
  # DEBUG D.73664 => D#262
  operator delete (prephitmp_234);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 49>:
  # DEBUG D#448 => &D#1201->_M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  MEM[(struct  &)__pos_437] ={v} {CLOBBER};
  __pos_332 = __pos_437 + 80;
  # DEBUG __first => __pos_332
  # DEBUG __first => __pos_332
  if (_321 == __pos_332)
    goto <bb 40>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 42>;

  <bb 51>:
  # DEBUG this => &D.43701
  # DEBUG D#458 => &D.43701.c
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  # DEBUG this => &MEM[(struct deque *)&D.43701].D.43590
  _109 = MEM[(struct _Deque_base *)&D.43701]._M_impl._M_map;
  if (_109 != 0B)
    goto <bb 52>;
  else
    goto <bb 58>;

  <bb 52>:
  _348 = MEM[(struct _Deque_base *)&D.43701]._M_impl._M_finish._M_node;
  _349 = _348 + 8;
  __nstart_350 = MEM[(struct _Deque_base *)&D.43701]._M_impl._M_start._M_node;
  # DEBUG this => &MEM[(struct deque *)&D.43701].D.43590
  # DEBUG __nstart => __nstart_350
  # DEBUG __nfinish => _349
  # DEBUG __n => __nstart_350
  # DEBUG __n => __nstart_350
  if (_349 <= __nstart_350)
    goto <bb 57>;
  else
    goto <bb 53>;

  <bb 53>:

  <bb 54>:
  # __nstart_440 = PHI <__nstart_350(53), __nstart_353(55)>
  # DEBUG __n => __nstart_440
  _352 = *__nstart_440;
  # DEBUG this => &MEM[(struct deque *)&D.43701].D.43590
  # DEBUG __p => _352
  # DEBUG __size => 4
  # DEBUG D#167 => &MEM[(struct _Deque_base *)&D.43701]._M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _352
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _352
  # DEBUG this => D#140
  # DEBUG D.73708 => D#141
  operator delete (_352);
  __nstart_353 = __nstart_440 + 8;
  # DEBUG __n => __nstart_353
  # DEBUG __n => __nstart_353
  if (_349 <= __nstart_353)
    goto <bb 56>;
  else
    goto <bb 55>;

  <bb 55>:
  goto <bb 54>;

  <bb 56>:
  pretmp_369 = MEM[(struct _Deque_base *)&D.43701]._M_impl._M_map;

  <bb 57>:
  # prephitmp_180 = PHI <pretmp_369(56), _109(52)>
  # DEBUG D#447 => MEM[(struct _Deque_base *)&D.43701]._M_impl._M_map_size
  # DEBUG D#1211 => MEM[(struct _Deque_base *)&D.43701]._M_impl._M_map
  # DEBUG D#445 => &MEM[(struct deque *)&D.43701].D.43590
  # DEBUG D#446 => D#447
  # DEBUG __p => D#1211
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#1211
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#1211
  # DEBUG this => D#261
  # DEBUG D.73718 => D#262
  operator delete (prephitmp_180);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 58>:
  # DEBUG D#448 => &MEM[(struct _Deque_base *)&D.43701]._M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  D.43701 ={v} {CLOBBER};
  # DEBUG this => &D.43702
  # DEBUG D#449 => &D.43702.D.43590
  # DEBUG this => D#449
  # DEBUG this => &D.43702
  # DEBUG D#66 => &D.43702.D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)&D.43702 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)&D.43702 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)&D.43702 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)&D.43702 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => &D.43702
  # DEBUG D#67 => &D.43702.D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)&D.43702 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)&D.43702 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)&D.43702 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)&D.43702 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => &D.43702
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  # DEBUG this => &D.43702.D.43590
  _340 = MEM[(struct _Deque_base *)&D.43702]._M_impl._M_map;
  if (_340 != 0B)
    goto <bb 59>;
  else
    goto <bb 65>;

  <bb 59>:
  _341 = MEM[(struct _Deque_base *)&D.43702]._M_impl._M_finish._M_node;
  _342 = _341 + 8;
  __nstart_343 = MEM[(struct _Deque_base *)&D.43702]._M_impl._M_start._M_node;
  # DEBUG this => &D.43702.D.43590
  # DEBUG __nstart => __nstart_343
  # DEBUG __nfinish => _342
  # DEBUG __n => __nstart_343
  # DEBUG __n => __nstart_343
  if (_342 <= __nstart_343)
    goto <bb 64>;
  else
    goto <bb 60>;

  <bb 60>:

  <bb 61>:
  # __nstart_439 = PHI <__nstart_343(60), __nstart_346(62)>
  # DEBUG __n => __nstart_439
  _345 = *__nstart_439;
  # DEBUG this => &D.43702.D.43590
  # DEBUG __p => _345
  # DEBUG __size => 4
  # DEBUG D#167 => &MEM[(struct _Deque_base *)&D.43702]._M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _345
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _345
  # DEBUG this => D#140
  # DEBUG D.73681 => D#141
  operator delete (_345);
  __nstart_346 = __nstart_439 + 8;
  # DEBUG __n => __nstart_346
  # DEBUG __n => __nstart_346
  if (_342 <= __nstart_346)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:
  goto <bb 61>;

  <bb 63>:
  pretmp_82 = MEM[(struct _Deque_base *)&D.43702]._M_impl._M_map;

  <bb 64>:
  # prephitmp_83 = PHI <pretmp_82(63), _340(59)>
  # DEBUG D#447 => MEM[(struct _Deque_base *)&D.43702]._M_impl._M_map_size
  # DEBUG D#1210 => MEM[(struct _Deque_base *)&D.43702]._M_impl._M_map
  # DEBUG D#445 => &D.43702.D.43590
  # DEBUG D#446 => D#447
  # DEBUG __p => D#1210
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#1210
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#1210
  # DEBUG this => D#261
  # DEBUG D.73691 => D#262
  operator delete (prephitmp_83);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 65>:
  # DEBUG D#448 => &MEM[(struct _Deque_base *)&D.43702]._M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  D.43702 ={v} {CLOBBER};
  _49 = this_3(D)->D.41247._buf_size;
  _50 = this_3(D)->_vcs;
  _51 = _49 * _50;
  this_3(D)->_total_mapped_size = _51;
  this_3(D)->_min_latency = -1;
  return;

<L0>:
  # DEBUG this => &D.43695
  # DEBUG this => &D.43695
  # DEBUG this => &D.43695
  _46 = MEM[(char * *)&D.43695];
  # DEBUG D#1 => &D.43695
  # DEBUG this => D#1
  # DEBUG this => &D.43695
  if (&D.43695.D.11539._M_local_buf != _46)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  # DEBUG D#188 => D.43695.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43695
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43695
  # DEBUG this => D#1
  # DEBUG this => &D.43695
  # DEBUG D#185 => &D.43695._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _46
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _46
  # DEBUG this => D#179
  # DEBUG D.62099 => D#180
  operator delete (_46);

  <bb 68>:
  # DEBUG D#189 => &D.43695._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43695 ={v} {CLOBBER};
  resx 6

<L17>:
  goto <bb 84> (<L8>);

<L2>:
  # DEBUG this => &D.43697
  # DEBUG this => &D.43697
  # DEBUG this => &D.43697
  _62 = MEM[(char * *)&D.43697];
  # DEBUG D#1 => &D.43697
  # DEBUG this => D#1
  # DEBUG this => &D.43697
  if (&D.43697.D.11539._M_local_buf != _62)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # DEBUG D#188 => D.43697.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43697
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43697
  # DEBUG this => D#1
  # DEBUG this => &D.43697
  # DEBUG D#185 => &D.43697._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _62
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _62
  # DEBUG this => D#179
  # DEBUG D.62116 => D#180
  operator delete (_62);

  <bb 72>:
  # DEBUG D#189 => &D.43697._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43697 ={v} {CLOBBER};
  resx 10

<L18>:
  goto <bb 84> (<L8>);

<L4>:
  # DEBUG this => &D.43699
  # DEBUG this => &D.43699
  # DEBUG this => &D.43699
  _60 = MEM[(char * *)&D.43699];
  # DEBUG D#1 => &D.43699
  # DEBUG this => D#1
  # DEBUG this => &D.43699
  if (&D.43699.D.11539._M_local_buf != _60)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  # DEBUG D#188 => D.43699.D.11539._M_allocated_capacity
  # DEBUG D#187 => D#188
  # DEBUG this => &D.43699
  # DEBUG __size => D#187
  # DEBUG D#186 => D#187
  # DEBUG D#1 => &D.43699
  # DEBUG this => D#1
  # DEBUG this => &D.43699
  # DEBUG D#185 => &D.43699._M_dataplus
  # DEBUG D#183 => D#185
  # DEBUG D#184 => D#186 + 1
  # DEBUG __p => _60
  # DEBUG __a => D#183
  # DEBUG __n => D#184
  # DEBUG D#182 => D#184
  # DEBUG D#181 => D#183
  # DEBUG D#179 => D#181
  # DEBUG D#180 => D#182
  # DEBUG __p => _60
  # DEBUG this => D#179
  # DEBUG D.62133 => D#180
  operator delete (_60);

  <bb 76>:
  # DEBUG D#189 => &D.43699._M_dataplus
  # DEBUG this => D#189
  # DEBUG this => D#189
  # DEBUG this => D#189
  D.43699 ={v} {CLOBBER};
  resx 14

<L19>:
  goto <bb 84> (<L8>);

<L6>:
  # DEBUG this => &D.43701
  # DEBUG D#458 => &D.43701.c
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (&MEM[(struct deque *)&D.43701].D.43590);
  D.43701 ={v} {CLOBBER};
  resx 18

<L20>:
  goto <bb 81> (<L7>);

<L16>:

<L7>:
  # DEBUG this => &D.43702
  # DEBUG D#449 => &D.43702.D.43590
  # DEBUG this => D#449
  # DEBUG this => &D.43702
  # DEBUG D#66 => &D.43702.D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)&D.43702 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)&D.43702 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)&D.43702 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)&D.43702 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => &D.43702
  # DEBUG D#67 => &D.43702.D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)&D.43702 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)&D.43702 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)&D.43702 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)&D.43702 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => &D.43702
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  std::_Deque_base<int, std::allocator<int> >::~_Deque_base (&D.43702.D.43590);
  D.43702 ={v} {CLOBBER};
  resx 17

<L21>:
  goto <bb 84> (<L8>);

<L12>:

<L8>:
  # DEBUG D#1204 => &this_3(D)->_flit_sent_time
  # DEBUG this => D#1204
  # DEBUG D#463 => &D#1204->D.41195
  # DEBUG this => D#463
  _106 = MEM[(struct vector *)this_3(D) + 272B].D.41195._M_impl._M_finish;
  __first_355 = MEM[(struct vector *)this_3(D) + 272B].D.41195._M_impl._M_start;
  # DEBUG __first => __first_355
  # DEBUG __last => _106
  # DEBUG __first => __first_355
  if (_106 == __first_355)
    goto <bb 96>;
  else
    goto <bb 85>;

  <bb 85>:

  <bb 86>:
  # __first_441 = PHI <__first_355(85), __first_358(94)>
  # DEBUG __first => __first_441
  # DEBUG __r => __first_441
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#458
  # DEBUG D#449 => &D#458->D.43590
  # DEBUG this => D#449
  # DEBUG this => D#458
  # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#66
  # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
  # DEBUG D.57660 => D#457
  # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
  # DEBUG D.57661 => D#456
  # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
  # DEBUG D.57662 => D#455
  # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
  # DEBUG D.57663 => D#454
  # DEBUG this => D#458
  # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
  # DEBUG D.57656 => D#453
  # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
  # DEBUG D.57657 => D#452
  # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
  # DEBUG D.57658 => D#451
  # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
  # DEBUG D.57659 => D#450
  # DEBUG D#68 => D#458
  # DEBUG this => D#68
  # DEBUG __first => D#69
  # DEBUG __last => D#70
  # DEBUG D.57644 => D#71
  # DEBUG D#1203 => &MEM[(struct deque *)__first_441].D.43590
  # DEBUG this => D#1203
  _64 = MEM[(struct _Deque_base *)__first_441]._M_impl._M_map;
  if (_64 != 0B)
    goto <bb 87>;
  else
    goto <bb 93>;

  <bb 87>:
  _360 = MEM[(struct _Deque_base *)__first_441]._M_impl._M_finish._M_node;
  _361 = _360 + 8;
  __nstart_362 = MEM[(struct _Deque_base *)__first_441]._M_impl._M_start._M_node;
  # DEBUG this => D#1203
  # DEBUG __nstart => __nstart_362
  # DEBUG __nfinish => _361
  # DEBUG __n => __nstart_362
  # DEBUG __n => __nstart_362
  if (_361 <= __nstart_362)
    goto <bb 92>;
  else
    goto <bb 88>;

  <bb 88>:

  <bb 89>:
  # __nstart_442 = PHI <__nstart_362(88), __nstart_365(90)>
  # DEBUG __n => __nstart_442
  _364 = *__nstart_442;
  # DEBUG this => D#1203
  # DEBUG __p => _364
  # DEBUG __size => 4
  # DEBUG D#167 => &D#1203->_M_impl
  # DEBUG D#144 => D#167
  # DEBUG __p => _364
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _364
  # DEBUG this => D#140
  # DEBUG D.73761 => D#141
  operator delete (_364);
  __nstart_365 = __nstart_442 + 8;
  # DEBUG __n => __nstart_365
  # DEBUG __n => __nstart_365
  if (_361 <= __nstart_365)
    goto <bb 91>;
  else
    goto <bb 90>;

  <bb 90>:
  goto <bb 89>;

  <bb 91>:
  pretmp_512 = MEM[(struct _Deque_base *)__first_441]._M_impl._M_map;

  <bb 92>:
  # prephitmp_513 = PHI <pretmp_512(91), _64(87)>
  # DEBUG D#447 => D#1203->_M_impl._M_map_size
  # DEBUG D#1209 => MEM[(struct _Deque_base *)__first_441]._M_impl._M_map
  # DEBUG D#445 => D#1203
  # DEBUG D#446 => D#447
  # DEBUG __p => D#1209
  # DEBUG this => D#445
  # DEBUG __n => D#446
  # DEBUG D#444 => D#446
  # DEBUG D#443 => D#445
  # DEBUG D#442 => D#443
  # DEBUG this => D#442
  # DEBUG D#441 => D#442
  # DEBUG this => D#441
  # DEBUG this => NULL
  # DEBUG D.57578 => NULL
  # DEBUG this => NULL
  # DEBUG D#265 => &__map_alloc
  # DEBUG D#266 => D#444
  # DEBUG __p => D#1209
  # DEBUG __a => D#265
  # DEBUG __n => D#266
  # DEBUG D#264 => D#266
  # DEBUG D#263 => D#265
  # DEBUG D#261 => D#263
  # DEBUG D#262 => D#264
  # DEBUG __p => D#1209
  # DEBUG this => D#261
  # DEBUG D.73771 => D#262
  operator delete (prephitmp_513);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 93>:
  # DEBUG D#448 => &D#1203->_M_impl
  # DEBUG this => D#448
  # DEBUG this => D#448
  # DEBUG this => D#448
  MEM[(struct  &)__first_441] ={v} {CLOBBER};
  __first_358 = __first_441 + 80;
  # DEBUG __first => __first_358
  # DEBUG __first => __first_358
  if (_106 == __first_358)
    goto <bb 95>;
  else
    goto <bb 94>;

  <bb 94>:
  goto <bb 86>;

  <bb 95>:
  pretmp_140 = MEM[(struct _Vector_base *)this_3(D) + 272B]._M_impl._M_start;

  <bb 96>:
  # prephitmp_141 = PHI <pretmp_140(95), __first_355(84)>
  # DEBUG D#464 => &D#1204->D.41195
  # DEBUG this => D#464
  # DEBUG D#260 => D#464->_M_impl._M_end_of_storage
  # DEBUG D#259 => (long int) D#260
  # DEBUG D#1208 => MEM[(struct _Vector_base *)this_3(D) + 272B]._M_impl._M_start
  # DEBUG D#258 => (long int) D#1208
  # DEBUG D#257 => D#259 - D#258
  # DEBUG D#256 => D#257 /[ex] 80
  # DEBUG D#253 => D#464
  # DEBUG D#254 => (long unsigned int) D#256
  # DEBUG __p => D#1208
  # DEBUG this => D#253
  # DEBUG __n => D#254
  # DEBUG D#252 => D#254
  # DEBUG D#251 => D#253
  if (prephitmp_141 != 0B)
    goto <bb 97>;
  else
    goto <bb 98>;

  <bb 97>:
  # DEBUG D#250 => &D#251->_M_impl
  # DEBUG D#248 => D#250
  # DEBUG D#249 => D#252
  # DEBUG __p => D#1208
  # DEBUG __a => D#248
  # DEBUG __n => D#249
  # DEBUG D#247 => D#249
  # DEBUG D#246 => D#248
  # DEBUG D#244 => D#246
  # DEBUG D#245 => D#247
  # DEBUG __p => D#1208
  # DEBUG this => D#244
  # DEBUG D.73741 => D#245
  operator delete (prephitmp_141);

  <bb 98>:
  # DEBUG D#255 => &D#464->_M_impl
  # DEBUG this => D#255
  # DEBUG this => D#255
  # DEBUG this => D#255
  MEM[(struct  &)this_3(D) + 272] ={v} {CLOBBER};
  resx 4

<L9>:
  # DEBUG D#715 => &this_3(D)->_round_trip_time
  # DEBUG this => D#715
  # DEBUG D#154 => &D#715->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#715->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#715->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#715->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _55 = MEM[(struct _Vector_base *)this_3(D) + 248B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _55
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _55
  # DEBUG __n => D#148
  if (_55 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _55
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _55
  # DEBUG this => D#140
  # DEBUG D.62155 => D#141
  operator delete (_55);

  <bb 101>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_3(D) + 248] ={v} {CLOBBER};
  resx 3

<L10>:
  # DEBUG D#714 => &this_3(D)->_occupancy_limit
  # DEBUG this => D#714
  # DEBUG D#154 => &D#714->D.40238
  # DEBUG this => D#154
  # DEBUG D#157 => D#714->D.40238._M_impl._M_finish
  # DEBUG D#156 => D#714->D.40238._M_impl._M_start
  # DEBUG __first => D#156
  # DEBUG __last => D#157
  # DEBUG D.54209 => NULL
  # DEBUG D#134 => D#156
  # DEBUG D#135 => D#157
  # DEBUG __first => D#134
  # DEBUG __last => D#135
  # DEBUG D#133 => D#135
  # DEBUG D#132 => D#134
  # DEBUG D#130 => D#132
  # DEBUG D#131 => D#133
  # DEBUG D.54119 => D#130
  # DEBUG D.54118 => D#131
  # DEBUG D#155 => &D#714->D.40238
  # DEBUG this => D#155
  # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
  # DEBUG D#152 => (long int) D#153
  _65 = MEM[(struct _Vector_base *)this_3(D) + 224B]._M_impl._M_start;
  # DEBUG D#151 => (long int) _65
  # DEBUG D#150 => D#152 - D#151
  # DEBUG D#149 => D#150 /[ex] 4
  # DEBUG D#148 => (long unsigned int) D#149
  # DEBUG this => D#155
  # DEBUG __p => _65
  # DEBUG __n => D#148
  if (_65 != 0B)
    goto <bb 103>;
  else
    goto <bb 104>;

  <bb 103>:
  # DEBUG D#146 => &D#155->_M_impl
  # DEBUG D#144 => D#146
  # DEBUG D#145 => D#148
  # DEBUG __p => _65
  # DEBUG __a => D#144
  # DEBUG __n => D#145
  # DEBUG D#143 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#140 => D#142
  # DEBUG D#141 => D#143
  # DEBUG __p => _65
  # DEBUG this => D#140
  # DEBUG D.62170 => D#141
  operator delete (_65);

  <bb 104>:
  # DEBUG D#147 => &D#155->_M_impl
  # DEBUG this => D#147
  # DEBUG this => D#147
  # DEBUG this => D#147
  MEM[(struct  &)this_3(D) + 224] ={v} {CLOBBER};
  resx 2

<L11>:
  BufferState::SharedBufferPolicy::~SharedBufferPolicy (_4);
  resx 1

}


