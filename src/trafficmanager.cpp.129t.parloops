
;; Function virtual void TrafficManager::DisplayOverallStats(std::ostream&) const (_ZNK14TrafficManager19DisplayOverallStatsERSo, funcdef_no=2488, decl_uid=65043, cgraph_uid=736, symbol_order=737)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void TrafficManager::DisplayOverallStats(std::ostream&) const (const struct TrafficManager * const this, struct ostream & os)
{
  int c;
  long unsigned int _8;
  int _9;
  struct basic_ostream & _12;
  double _13;
  int _14;
  double _15;
  double _16;
  struct __ostream_type & _17;
  struct basic_ostream & _19;
  const double & _20;
  double _21;
  int _22;
  double _23;
  double _24;
  struct __ostream_type & _25;
  struct basic_ostream & _27;
  double _28;
  int _29;
  double _30;
  double _31;
  struct __ostream_type & _32;
  struct basic_ostream & _34;
  double _35;
  int _36;
  double _37;
  double _38;
  struct __ostream_type & _39;
  struct basic_ostream & _41;
  const double & _42;
  double _43;
  int _44;
  double _45;
  double _46;
  struct __ostream_type & _47;
  struct basic_ostream & _49;
  double _50;
  int _51;
  double _52;
  double _53;
  struct __ostream_type & _54;
  struct basic_ostream & _56;
  double _57;
  int _58;
  double _59;
  double _60;
  struct __ostream_type & _61;
  struct basic_ostream & _63;
  double _64;
  int _65;
  double _66;
  double _67;
  struct __ostream_type & _68;
  struct basic_ostream & _70;
  double _71;
  int _72;
  double _73;
  double _74;
  struct __ostream_type & _75;
  struct basic_ostream & _77;
  double _78;
  int _79;
  double _80;
  double _81;
  struct __ostream_type & _82;
  struct basic_ostream & _84;
  const double & _85;
  double _86;
  int _87;
  double _88;
  double _89;
  struct __ostream_type & _90;
  struct basic_ostream & _92;
  double _93;
  int _94;
  double _95;
  double _96;
  struct __ostream_type & _97;
  struct basic_ostream & _99;
  double _100;
  int _101;
  double _102;
  double _103;
  struct __ostream_type & _104;
  struct basic_ostream & _106;
  const double & _107;
  double _108;
  int _109;
  double _110;
  double _111;
  struct __ostream_type & _112;
  struct basic_ostream & _114;
  double _115;
  int _116;
  double _117;
  double _118;
  struct __ostream_type & _119;
  struct basic_ostream & _121;
  double _122;
  int _123;
  double _124;
  double _125;
  struct __ostream_type & _126;
  struct basic_ostream & _128;
  double _129;
  int _130;
  double _131;
  double _132;
  struct __ostream_type & _133;
  struct basic_ostream & _135;
  double _136;
  int _137;
  double _138;
  double _139;
  struct __ostream_type & _140;
  struct basic_ostream & _142;
  double _143;
  int _144;
  double _145;
  double _146;
  struct __ostream_type & _147;
  struct basic_ostream & _149;
  const double & _150;
  double _151;
  int _152;
  double _153;
  double _154;
  struct __ostream_type & _155;
  struct basic_ostream & _157;
  double _158;
  int _159;
  double _160;
  double _161;
  struct __ostream_type & _162;
  struct basic_ostream & _164;
  double _165;
  int _166;
  double _167;
  double _168;
  struct __ostream_type & _169;
  struct basic_ostream & _171;
  double _172;
  int _173;
  double _174;
  double _175;
  struct __ostream_type & _176;
  struct basic_ostream & _178;
  double _179;
  int _180;
  double _181;
  double _182;
  struct __ostream_type & _183;
  struct basic_ostream & _185;
  int _186;
  double _187;
  const int & _188;
  double _189;
  double _190;
  struct __ostream_type & _191;
  struct basic_ostream & _193;
  int _194;
  long unsigned int _195;
  double _196;
  double _197;
  double _198;
  struct __ostream_type & _199;
  struct basic_ostream & _201;
  double _202;
  int _203;
  double _204;
  double _205;
  struct __ostream_type & _206;
  struct basic_ostream & _208;
  int * const _210;
  double * const _211;
  double * const _212;
  double * const _213;
  double * const _214;
  double * const _215;
  double * const _216;
  double * const _217;
  double * const _218;
  double * const _219;
  double * const _220;
  double * const _221;
  double * const _222;
  double * const _223;
  double * const _224;
  double * const _225;
  double * const _226;
  double * const _227;
  double * const _228;
  double * const _229;
  double * const _230;
  double * const _231;
  double * const _232;
  double * const _233;
  double * const _234;
  double * const _235;
  double * const _236;
  double * const _237;
  double * const _238;
  double * const _239;
  const double & _240;
  const double & _241;
  const double & _242;
  const double & _243;
  const double & _244;
  const double & _245;
  const double & _246;
  const double & _247;
  const double & _248;
  const double & _249;
  const double & _250;
  const double & _251;
  const double & _252;
  const double & _253;
  const double & _254;
  const double & _255;
  const double & _256;
  const double & _257;
  const double & _258;
  const double & _259;
  const double & _260;
  const double & _261;
  const double & _262;
  long unsigned int _263;
  const double & _264;
  int _406;
  const int prephitmp_415;
  const int pretmp_417;
  const int prephitmp_418;

  <bb 2>:
  # DEBUG __out => os_5(D)
  # DEBUG __s => "====== Overall Traffic Statistics ======"
  # DEBUG __s => "====== Overall Traffic Statistics ======"
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "====== Overall Traffic Statistics ======", 40);
  # DEBUG this => os_5(D)
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (os_5(D));
  # DEBUG c => 0
  # DEBUG c => 0
  _406 = this_6(D)->_classes;
  if (_406 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # c_407 = PHI <0(4), c_209(8)>
  # prephitmp_415 = PHI <_406(4), prephitmp_418(8)>
  # DEBUG c => c_407
  _8 = (long unsigned int) c_407;
  # DEBUG D#160 => &this_6(D)->_measure_stats
  _210 = MEM[(int * *)this_6(D) + 1880B];
  # DEBUG D#61 => D#160
  # DEBUG __n => _8
  # DEBUG this => D#61
  _195 = _8 * 4;
  _188 = _210 + _195;
  _9 = *_188;
  if (_9 == 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  # DEBUG __out => os_5(D)
  # DEBUG __s => "====== Traffic class "
  # DEBUG __s => "====== Traffic class "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "====== Traffic class ", 21);
  _12 = std::basic_ostream<char>::operator<< (os_5(D), c_407);
  # DEBUG __out => _12
  # DEBUG __s => " ======"
  # DEBUG __s => " ======"
  std::__ostream_insert<char, std::char_traits<char> > (_12, " ======", 7);
  # DEBUG this => _12
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_12);
  # DEBUG D#161 => &this_6(D)->_overall_avg_plat
  _211 = MEM[(double * *)this_6(D) + 904B];
  # DEBUG D#159 => D#161
  # DEBUG __n => _8
  # DEBUG this => D#159
  _263 = _8 * 8;
  _264 = _211 + _263;
  _13 = *_264;
  _14 = this_6(D)->_total_sims;
  _15 = (double) _14;
  _16 = _13 / _15;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Packet latency average = "
  # DEBUG __s => "Packet latency average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Packet latency average = ", 25);
  # DEBUG this => os_5(D)
  # DEBUG __f => _16
  _17 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _16);
  # DEBUG __out => _17
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_17, " (", 2);
  _19 = std::basic_ostream<char>::operator<< (_17, _14);
  # DEBUG __out => _19
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_19, " samples)", 9);
  # DEBUG this => _19
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_19);
  # DEBUG D#162 => &this_6(D)->_overall_min_plat
  _212 = MEM[(double * *)this_6(D) + 880B];
  # DEBUG D#159 => D#162
  # DEBUG __n => _8
  # DEBUG this => D#159
  _262 = _212 + _263;
  _21 = *_262;
  _22 = this_6(D)->_total_sims;
  _23 = (double) _22;
  _24 = _21 / _23;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tminimum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _24
  _25 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _24);
  # DEBUG __out => _25
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_25, " (", 2);
  _27 = std::basic_ostream<char>::operator<< (_25, _22);
  # DEBUG __out => _27
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_27, " samples)", 9);
  # DEBUG this => _27
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_27);
  # DEBUG D#163 => &this_6(D)->_overall_max_plat
  _213 = MEM[(double * *)this_6(D) + 928B];
  # DEBUG D#159 => D#163
  # DEBUG __n => _8
  # DEBUG this => D#159
  _261 = _213 + _263;
  _28 = *_261;
  _29 = this_6(D)->_total_sims;
  _30 = (double) _29;
  _31 = _28 / _30;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tmaximum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _31
  _32 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _31);
  # DEBUG __out => _32
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_32, " (", 2);
  _34 = std::basic_ostream<char>::operator<< (_32, _29);
  # DEBUG __out => _34
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_34, " samples)", 9);
  # DEBUG this => _34
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_34);
  # DEBUG D#164 => &this_6(D)->_overall_avg_nlat
  _214 = MEM[(double * *)this_6(D) + 1000B];
  # DEBUG D#159 => D#164
  # DEBUG __n => _8
  # DEBUG this => D#159
  _260 = _214 + _263;
  _35 = *_260;
  _36 = this_6(D)->_total_sims;
  _37 = (double) _36;
  _38 = _35 / _37;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Network latency average = "
  # DEBUG __s => "Network latency average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Network latency average = ", 26);
  # DEBUG this => os_5(D)
  # DEBUG __f => _38
  _39 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _38);
  # DEBUG __out => _39
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_39, " (", 2);
  _41 = std::basic_ostream<char>::operator<< (_39, _36);
  # DEBUG __out => _41
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_41, " samples)", 9);
  # DEBUG this => _41
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_41);
  # DEBUG D#165 => &this_6(D)->_overall_min_nlat
  _215 = MEM[(double * *)this_6(D) + 976B];
  # DEBUG D#159 => D#165
  # DEBUG __n => _8
  # DEBUG this => D#159
  _259 = _215 + _263;
  _43 = *_259;
  _44 = this_6(D)->_total_sims;
  _45 = (double) _44;
  _46 = _43 / _45;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tminimum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _46
  _47 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _46);
  # DEBUG __out => _47
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_47, " (", 2);
  _49 = std::basic_ostream<char>::operator<< (_47, _44);
  # DEBUG __out => _49
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_49, " samples)", 9);
  # DEBUG this => _49
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_49);
  # DEBUG D#166 => &this_6(D)->_overall_max_nlat
  _216 = MEM[(double * *)this_6(D) + 1024B];
  # DEBUG D#159 => D#166
  # DEBUG __n => _8
  # DEBUG this => D#159
  _258 = _216 + _263;
  _50 = *_258;
  _51 = this_6(D)->_total_sims;
  _52 = (double) _51;
  _53 = _50 / _52;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tmaximum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _53
  _54 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _53);
  # DEBUG __out => _54
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_54, " (", 2);
  _56 = std::basic_ostream<char>::operator<< (_54, _51);
  # DEBUG __out => _56
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_56, " samples)", 9);
  # DEBUG this => _56
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_56);
  # DEBUG D#167 => &this_6(D)->_overall_avg_flat
  _217 = MEM[(double * *)this_6(D) + 1096B];
  # DEBUG D#159 => D#167
  # DEBUG __n => _8
  # DEBUG this => D#159
  _257 = _217 + _263;
  _57 = *_257;
  _58 = this_6(D)->_total_sims;
  _59 = (double) _58;
  _60 = _57 / _59;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Flit latency average = "
  # DEBUG __s => "Flit latency average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Flit latency average = ", 23);
  # DEBUG this => os_5(D)
  # DEBUG __f => _60
  _61 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _60);
  # DEBUG __out => _61
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_61, " (", 2);
  _63 = std::basic_ostream<char>::operator<< (_61, _58);
  # DEBUG __out => _63
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_63, " samples)", 9);
  # DEBUG this => _63
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_63);
  # DEBUG D#168 => &this_6(D)->_overall_min_flat
  _218 = MEM[(double * *)this_6(D) + 1072B];
  # DEBUG D#159 => D#168
  # DEBUG __n => _8
  # DEBUG this => D#159
  _256 = _218 + _263;
  _64 = *_256;
  _65 = this_6(D)->_total_sims;
  _66 = (double) _65;
  _67 = _64 / _66;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tminimum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _67
  _68 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _67);
  # DEBUG __out => _68
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_68, " (", 2);
  _70 = std::basic_ostream<char>::operator<< (_68, _65);
  # DEBUG __out => _70
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_70, " samples)", 9);
  # DEBUG this => _70
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_70);
  # DEBUG D#169 => &this_6(D)->_overall_max_flat
  _219 = MEM[(double * *)this_6(D) + 1120B];
  # DEBUG D#159 => D#169
  # DEBUG __n => _8
  # DEBUG this => D#159
  _255 = _219 + _263;
  _71 = *_255;
  _72 = this_6(D)->_total_sims;
  _73 = (double) _72;
  _74 = _71 / _73;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tmaximum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _74
  _75 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _74);
  # DEBUG __out => _75
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_75, " (", 2);
  _77 = std::basic_ostream<char>::operator<< (_75, _72);
  # DEBUG __out => _77
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_77, " samples)", 9);
  # DEBUG this => _77
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_77);
  # DEBUG D#170 => &this_6(D)->_overall_avg_frag
  _220 = MEM[(double * *)this_6(D) + 1192B];
  # DEBUG D#159 => D#170
  # DEBUG __n => _8
  # DEBUG this => D#159
  _254 = _220 + _263;
  _78 = *_254;
  _79 = this_6(D)->_total_sims;
  _80 = (double) _79;
  _81 = _78 / _80;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Fragmentation average = "
  # DEBUG __s => "Fragmentation average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Fragmentation average = ", 24);
  # DEBUG this => os_5(D)
  # DEBUG __f => _81
  _82 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _81);
  # DEBUG __out => _82
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_82, " (", 2);
  _84 = std::basic_ostream<char>::operator<< (_82, _79);
  # DEBUG __out => _84
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_84, " samples)", 9);
  # DEBUG this => _84
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_84);
  # DEBUG D#171 => &this_6(D)->_overall_min_frag
  _221 = MEM[(double * *)this_6(D) + 1168B];
  # DEBUG D#159 => D#171
  # DEBUG __n => _8
  # DEBUG this => D#159
  _253 = _221 + _263;
  _86 = *_253;
  _87 = this_6(D)->_total_sims;
  _88 = (double) _87;
  _89 = _86 / _88;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tminimum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _89
  _90 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _89);
  # DEBUG __out => _90
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_90, " (", 2);
  _92 = std::basic_ostream<char>::operator<< (_90, _87);
  # DEBUG __out => _92
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_92, " samples)", 9);
  # DEBUG this => _92
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_92);
  # DEBUG D#172 => &this_6(D)->_overall_max_frag
  _222 = MEM[(double * *)this_6(D) + 1216B];
  # DEBUG D#159 => D#172
  # DEBUG __n => _8
  # DEBUG this => D#159
  _252 = _222 + _263;
  _93 = *_252;
  _94 = this_6(D)->_total_sims;
  _95 = (double) _94;
  _96 = _93 / _95;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tmaximum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _96
  _97 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _96);
  # DEBUG __out => _97
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_97, " (", 2);
  _99 = std::basic_ostream<char>::operator<< (_97, _94);
  # DEBUG __out => _99
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_99, " samples)", 9);
  # DEBUG this => _99
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_99);
  # DEBUG D#173 => &this_6(D)->_overall_avg_sent_packets
  _223 = MEM[(double * *)this_6(D) + 1408B];
  # DEBUG D#159 => D#173
  # DEBUG __n => _8
  # DEBUG this => D#159
  _251 = _223 + _263;
  _100 = *_251;
  _101 = this_6(D)->_total_sims;
  _102 = (double) _101;
  _103 = _100 / _102;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Injected packet rate average = "
  # DEBUG __s => "Injected packet rate average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Injected packet rate average = ", 31);
  # DEBUG this => os_5(D)
  # DEBUG __f => _103
  _104 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _103);
  # DEBUG __out => _104
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_104, " (", 2);
  _106 = std::basic_ostream<char>::operator<< (_104, _101);
  # DEBUG __out => _106
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_106, " samples)", 9);
  # DEBUG this => _106
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_106);
  # DEBUG D#174 => &this_6(D)->_overall_min_sent_packets
  _224 = MEM[(double * *)this_6(D) + 1384B];
  # DEBUG D#159 => D#174
  # DEBUG __n => _8
  # DEBUG this => D#159
  _250 = _224 + _263;
  _108 = *_250;
  _109 = this_6(D)->_total_sims;
  _110 = (double) _109;
  _111 = _108 / _110;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tminimum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _111
  _112 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _111);
  # DEBUG __out => _112
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_112, " (", 2);
  _114 = std::basic_ostream<char>::operator<< (_112, _109);
  # DEBUG __out => _114
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_114, " samples)", 9);
  # DEBUG this => _114
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_114);
  # DEBUG D#175 => &this_6(D)->_overall_max_sent_packets
  _225 = MEM[(double * *)this_6(D) + 1432B];
  # DEBUG D#159 => D#175
  # DEBUG __n => _8
  # DEBUG this => D#159
  _249 = _225 + _263;
  _115 = *_249;
  _116 = this_6(D)->_total_sims;
  _117 = (double) _116;
  _118 = _115 / _117;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tmaximum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _118
  _119 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _118);
  # DEBUG __out => _119
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_119, " (", 2);
  _121 = std::basic_ostream<char>::operator<< (_119, _116);
  # DEBUG __out => _121
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_121, " samples)", 9);
  # DEBUG this => _121
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_121);
  # DEBUG D#176 => &this_6(D)->_overall_avg_accepted_packets
  _226 = MEM[(double * *)this_6(D) + 1504B];
  # DEBUG D#159 => D#176
  # DEBUG __n => _8
  # DEBUG this => D#159
  _248 = _226 + _263;
  _122 = *_248;
  _123 = this_6(D)->_total_sims;
  _124 = (double) _123;
  _125 = _122 / _124;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Accepted packet rate average = "
  # DEBUG __s => "Accepted packet rate average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Accepted packet rate average = ", 31);
  # DEBUG this => os_5(D)
  # DEBUG __f => _125
  _126 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _125);
  # DEBUG __out => _126
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_126, " (", 2);
  _128 = std::basic_ostream<char>::operator<< (_126, _123);
  # DEBUG __out => _128
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_128, " samples)", 9);
  # DEBUG this => _128
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_128);
  # DEBUG D#177 => &this_6(D)->_overall_min_accepted_packets
  _227 = MEM[(double * *)this_6(D) + 1480B];
  # DEBUG D#159 => D#177
  # DEBUG __n => _8
  # DEBUG this => D#159
  _247 = _227 + _263;
  _129 = *_247;
  _130 = this_6(D)->_total_sims;
  _131 = (double) _130;
  _132 = _129 / _131;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tminimum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _132
  _133 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _132);
  # DEBUG __out => _133
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_133, " (", 2);
  _135 = std::basic_ostream<char>::operator<< (_133, _130);
  # DEBUG __out => _135
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_135, " samples)", 9);
  # DEBUG this => _135
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_135);
  # DEBUG D#178 => &this_6(D)->_overall_max_accepted_packets
  _228 = MEM[(double * *)this_6(D) + 1528B];
  # DEBUG D#159 => D#178
  # DEBUG __n => _8
  # DEBUG this => D#159
  _246 = _228 + _263;
  _136 = *_246;
  _137 = this_6(D)->_total_sims;
  _138 = (double) _137;
  _139 = _136 / _138;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tmaximum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _139
  _140 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _139);
  # DEBUG __out => _140
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_140, " (", 2);
  _142 = std::basic_ostream<char>::operator<< (_140, _137);
  # DEBUG __out => _142
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_142, " samples)", 9);
  # DEBUG this => _142
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_142);
  # DEBUG D#179 => &this_6(D)->_overall_avg_sent
  _229 = MEM[(double * *)this_6(D) + 1600B];
  # DEBUG D#159 => D#179
  # DEBUG __n => _8
  # DEBUG this => D#159
  _245 = _229 + _263;
  _143 = *_245;
  _144 = this_6(D)->_total_sims;
  _145 = (double) _144;
  _146 = _143 / _145;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Injected flit rate average = "
  # DEBUG __s => "Injected flit rate average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Injected flit rate average = ", 29);
  # DEBUG this => os_5(D)
  # DEBUG __f => _146
  _147 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _146);
  # DEBUG __out => _147
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_147, " (", 2);
  _149 = std::basic_ostream<char>::operator<< (_147, _144);
  # DEBUG __out => _149
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_149, " samples)", 9);
  # DEBUG this => _149
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_149);
  # DEBUG D#180 => &this_6(D)->_overall_min_sent
  _230 = MEM[(double * *)this_6(D) + 1576B];
  # DEBUG D#159 => D#180
  # DEBUG __n => _8
  # DEBUG this => D#159
  _244 = _230 + _263;
  _151 = *_244;
  _152 = this_6(D)->_total_sims;
  _153 = (double) _152;
  _154 = _151 / _153;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tminimum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _154
  _155 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _154);
  # DEBUG __out => _155
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_155, " (", 2);
  _157 = std::basic_ostream<char>::operator<< (_155, _152);
  # DEBUG __out => _157
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_157, " samples)", 9);
  # DEBUG this => _157
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_157);
  # DEBUG D#181 => &this_6(D)->_overall_max_sent
  _231 = MEM[(double * *)this_6(D) + 1624B];
  # DEBUG D#159 => D#181
  # DEBUG __n => _8
  # DEBUG this => D#159
  _243 = _231 + _263;
  _158 = *_243;
  _159 = this_6(D)->_total_sims;
  _160 = (double) _159;
  _161 = _158 / _160;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tmaximum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _161
  _162 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _161);
  # DEBUG __out => _162
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_162, " (", 2);
  _164 = std::basic_ostream<char>::operator<< (_162, _159);
  # DEBUG __out => _164
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_164, " samples)", 9);
  # DEBUG this => _164
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_164);
  # DEBUG D#182 => &this_6(D)->_overall_avg_accepted
  _232 = MEM[(double * *)this_6(D) + 1696B];
  # DEBUG D#159 => D#182
  # DEBUG __n => _8
  # DEBUG this => D#159
  _242 = _232 + _263;
  _165 = *_242;
  _166 = this_6(D)->_total_sims;
  _167 = (double) _166;
  _168 = _165 / _167;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Accepted flit rate average = "
  # DEBUG __s => "Accepted flit rate average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Accepted flit rate average = ", 29);
  # DEBUG this => os_5(D)
  # DEBUG __f => _168
  _169 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _168);
  # DEBUG __out => _169
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_169, " (", 2);
  _171 = std::basic_ostream<char>::operator<< (_169, _166);
  # DEBUG __out => _171
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_171, " samples)", 9);
  # DEBUG this => _171
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_171);
  # DEBUG D#183 => &this_6(D)->_overall_min_accepted
  _233 = MEM[(double * *)this_6(D) + 1672B];
  # DEBUG D#159 => D#183
  # DEBUG __n => _8
  # DEBUG this => D#159
  _241 = _233 + _263;
  _172 = *_241;
  _173 = this_6(D)->_total_sims;
  _174 = (double) _173;
  _175 = _172 / _174;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tminimum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _175
  _176 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _175);
  # DEBUG __out => _176
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_176, " (", 2);
  _178 = std::basic_ostream<char>::operator<< (_176, _173);
  # DEBUG __out => _178
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_178, " samples)", 9);
  # DEBUG this => _178
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_178);
  # DEBUG D#184 => &this_6(D)->_overall_max_accepted
  _234 = MEM[(double * *)this_6(D) + 1720B];
  # DEBUG D#159 => D#184
  # DEBUG __n => _8
  # DEBUG this => D#159
  _240 = _234 + _263;
  _179 = *_240;
  _180 = this_6(D)->_total_sims;
  _181 = (double) _180;
  _182 = _179 / _181;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "\tmaximum = ", 11);
  # DEBUG this => os_5(D)
  # DEBUG __f => _182
  _183 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _182);
  # DEBUG __out => _183
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_183, " (", 2);
  _185 = std::basic_ostream<char>::operator<< (_183, _180);
  # DEBUG __out => _185
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_185, " samples)", 9);
  # DEBUG this => _185
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_185);
  _186 = this_6(D)->_total_sims;
  # DEBUG D#185 => &this_6(D)->_overall_avg_sent
  _235 = MEM[(double * *)this_6(D) + 1600B];
  # DEBUG D#159 => D#185
  # DEBUG __n => _8
  # DEBUG this => D#159
  _20 = _235 + _263;
  _187 = *_20;
  # DEBUG D#186 => &this_6(D)->_overall_avg_sent_packets
  _236 = MEM[(double * *)this_6(D) + 1408B];
  # DEBUG D#159 => D#186
  # DEBUG __n => _8
  # DEBUG this => D#159
  _42 = _236 + _263;
  _189 = *_42;
  _190 = _187 / _189;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Injected packet size average = "
  # DEBUG __s => "Injected packet size average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Injected packet size average = ", 31);
  # DEBUG this => os_5(D)
  # DEBUG __f => _190
  _191 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _190);
  # DEBUG __out => _191
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_191, " (", 2);
  _193 = std::basic_ostream<char>::operator<< (_191, _186);
  # DEBUG __out => _193
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_193, " samples)", 9);
  # DEBUG this => _193
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_193);
  _194 = this_6(D)->_total_sims;
  # DEBUG D#187 => &this_6(D)->_overall_avg_accepted
  _237 = MEM[(double * *)this_6(D) + 1696B];
  # DEBUG D#159 => D#187
  # DEBUG __n => _8
  # DEBUG this => D#159
  _85 = _237 + _263;
  _196 = *_85;
  # DEBUG D#188 => &this_6(D)->_overall_avg_accepted_packets
  _238 = MEM[(double * *)this_6(D) + 1504B];
  # DEBUG D#159 => D#188
  # DEBUG __n => _8
  # DEBUG this => D#159
  _107 = _238 + _263;
  _197 = *_107;
  _198 = _196 / _197;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Accepted packet size average = "
  # DEBUG __s => "Accepted packet size average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Accepted packet size average = ", 31);
  # DEBUG this => os_5(D)
  # DEBUG __f => _198
  _199 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _198);
  # DEBUG __out => _199
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_199, " (", 2);
  _201 = std::basic_ostream<char>::operator<< (_199, _194);
  # DEBUG __out => _201
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_201, " samples)", 9);
  # DEBUG this => _201
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_201);
  # DEBUG D#189 => &this_6(D)->_overall_hop_stats
  _239 = MEM[(double * *)this_6(D) + 1336B];
  # DEBUG D#159 => D#189
  # DEBUG __n => _8
  # DEBUG this => D#159
  _150 = _239 + _263;
  _202 = *_150;
  _203 = this_6(D)->_total_sims;
  _204 = (double) _203;
  _205 = _202 / _204;
  # DEBUG __out => os_5(D)
  # DEBUG __s => "Hops average = "
  # DEBUG __s => "Hops average = "
  std::__ostream_insert<char, std::char_traits<char> > (os_5(D), "Hops average = ", 15);
  # DEBUG this => os_5(D)
  # DEBUG __f => _205
  _206 = std::basic_ostream<char>::_M_insert<double> (os_5(D), _205);
  # DEBUG __out => _206
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_206, " (", 2);
  _208 = std::basic_ostream<char>::operator<< (_206, _203);
  # DEBUG __out => _208
  # DEBUG __s => " samples)"
  # DEBUG __s => " samples)"
  std::__ostream_insert<char, std::char_traits<char> > (_208, " samples)", 9);
  # DEBUG this => _208
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_208);
  pretmp_417 = this_6(D)->_classes;

  <bb 7>:
  # prephitmp_418 = PHI <prephitmp_415(5), pretmp_417(6)>
  c_209 = c_407 + 1;
  # DEBUG c => c_209
  # DEBUG c => c_209
  if (c_209 >= prephitmp_418)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 5>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_assign(std::size_t, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>] (_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi.constprop.677, funcdef_no=6227, decl_uid=156143, cgraph_uid=3782, symbol_order=9138)

Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_assign(std::size_t, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>] (struct vector * const this, size_t __n, const value_type & __val)
{
  int * D.156883;
  int * __first;
  size_type __n;
  int * __tmp;
  int * __tmp;
  int * __tmp;
  struct vector __tmp;
  long unsigned int __n;
  int * __first;
  int * __first;
  int * __first;
  int * const _3;
  long int _4;
  long int _5;
  long int _6;
  long int _7;
  size_type _8;
  long int _12;
  long int _13;
  long int _14;
  size_type _15;
  long unsigned int _16;
  unsigned long _17;
  const int _20;
  int * _21;
  unsigned long _22;
  int * _27;
  unsigned long _30;
  sizetype _42;
  sizetype _44;
  int * _51;
  const int _52;
  long unsigned int _55;
  int * _56;
  sizetype _63;
  int * _76;
  long unsigned int _79;
  unsigned long _80;
  long unsigned int _81;
  int * pretmp_82;
  int * prephitmp_83;
  long unsigned int _98;
  sizetype _100;

  <bb 2>:
  __first_2 = MEM[(int * *)this_1(D)];
  # DEBUG D#198 => this_1(D)
  _3 = MEM[(int * *)this_1(D) + 16B];
  # DEBUG D#198 => this_1(D)
  # DEBUG this => D#198
  # DEBUG this => D#198
  _4 = (long int) _3;
  _5 = (long int) __first_2;
  _6 = _4 - _5;
  _7 = _6 /[ex] 4;
  _8 = (size_type) _7;
  if (_8 < __n_9(D))
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 3>:
  # DEBUG this => this_1(D)
  # DEBUG __n => __n_9(D)
  # DEBUG __val => __val_10(D)
  # DEBUG D#1273 => &this_1(D)->D.45977
  # DEBUG this => D#1273
  # DEBUG D#3139 => &MEM[(struct _Vector_base *)this_1(D)]._M_impl
  # DEBUG this => &__tmp
  # DEBUG __n => __n_9(D)
  # DEBUG __value => __val_10(D)
  # DEBUG __a => D#3139
  # DEBUG D#1272 => &__tmp.D.45977
  # DEBUG this => D#1272
  # DEBUG __n => __n_9(D)
  # DEBUG __a => D#3139
  # DEBUG D#1271 => &D#1272->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => D#3139
  # DEBUG this => D#1271
  # DEBUG __a => D#3139
  # DEBUG this => D#1271
  # DEBUG D.119037 => D#3139
  # DEBUG this => D#1272
  # DEBUG __n => __n_9(D)
  # DEBUG D#1269 => D#1272
  # DEBUG __n => __n_9(D)
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (__n_9(D) != 0)
    goto <bb 4>;
  else
    goto <bb 24>;

  <bb 4>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => __n_9(D)
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => __n_9(D)
  # DEBUG this => D#1263
  # DEBUG D.156881 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (__n_9(D) > 4611686018427387903)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::__throw_bad_alloc ();

  <bb 6>:
  _55 = __n_9(D) * 4;
  _56 = operator new (_55);
  _51 = _56 + _55;
  # DEBUG D#1252 => &__tmp
  # DEBUG D#1252 => &__tmp
  _52 = MEM[(const int &)__val_10(D)];
  # DEBUG D#1253 => __val_10(D)
  # DEBUG __n => __n_9(D)
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.156856 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG __value => D#1144
  # DEBUG __tmp => _52
  # DEBUG __niter => __n_9(D)
  # DEBUG __niter => __n_9(D)
  # DEBUG __first => _56
  # DEBUG D#1252 => &__tmp
  # DEBUG D#1253 => __val_10(D)
  # DEBUG __n => __n_9(D)
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.156856 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __n => __n_9(D)
  # DEBUG __value => D#1144
  # DEBUG __tmp => _52
  # DEBUG __niter => __n_9(D)
  # DEBUG __first => _56

  <bb 7>:
  # __n_71 = PHI <__n_9(D)(6), __n_53(8)>
  # __first_72 = PHI <_56(6), __first_54(8)>
  # DEBUG __niter => __n_71
  # DEBUG __first => __first_72
  *__first_72 = _52;
  __n_53 = __n_71 + 18446744073709551615;
  # DEBUG __niter => __n_53
  __first_54 = __first_72 + 4;
  # DEBUG __first => __first_54
  # DEBUG __niter => __n_53
  # DEBUG __first => __first_54
  if (__n_53 == 0)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  _79 = __n_9(D) * 4;
  __first_102 = _56 + _79;
  pretmp_82 = MEM[(int * &)this_1(D)];

  <bb 10>:
  # __first_45 = PHI <__first_102(9), 0B(24)>
  # _27 = PHI <_51(9), _76(24)>
  # __first_26 = PHI <_56(9), 0B(24)>
  # prephitmp_83 = PHI <pretmp_82(9), __first_2(24)>
  # DEBUG D#1275 => &this_1(D)->D.45977._M_impl
  # DEBUG this => &__tmp.D.45977._M_impl
  # DEBUG __x => D#1275
  # DEBUG D#1143 => &D#1275->_M_start
  # DEBUG D#1142 => &MEM[(struct _Vector_impl *)&__tmp]._M_start
  # DEBUG __a => D#1142
  # DEBUG __b => D#1143
  # DEBUG __tmp => __first_26
  # DEBUG D#3141 => MEM[(int * &)this_1(D)]
  MEM[(int * &)this_1(D)] = __first_26;
  # DEBUG D#1141 => &D#1275->_M_finish
  # DEBUG D#1140 => &MEM[(struct _Vector_impl *)&__tmp]._M_finish
  # DEBUG __a => D#1140
  # DEBUG __b => D#1141
  # DEBUG __tmp => __first_45
  MEM[(int * &)this_1(D) + 8] = __first_45;
  # DEBUG D#1139 => &D#1275->_M_end_of_storage
  # DEBUG D#1138 => &MEM[(struct _Vector_impl *)&__tmp]._M_end_of_storage
  # DEBUG __a => D#1138
  # DEBUG __b => D#1139
  # DEBUG __tmp => _27
  MEM[(int * &)this_1(D) + 16] = _27;
  # DEBUG this => &__tmp
  # DEBUG D#476 => &__tmp.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => __tmp.D.45977._M_impl._M_finish
  # DEBUG D#478 => __tmp.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &__tmp.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  # DEBUG D#473 => (long int) D#3141
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => D#3141
  # DEBUG __n => D#470
  if (prephitmp_83 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => D#3141
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => D#3141
  # DEBUG this => D#462
  # DEBUG D.156813 => D#463
  operator delete (prephitmp_83);

  <bb 12>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  __tmp ={v} {CLOBBER};
  goto <bb 23>;

  <bb 13>:
  # DEBUG D#68 => this_1(D)
  __first_11 = MEM[(int * *)this_1(D) + 8B];
  # DEBUG D#68 => this_1(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  _12 = (long int) __first_11;
  _13 = _12 - _5;
  _14 = _13 /[ex] 4;
  _15 = (size_type) _14;
  if (__n_9(D) > _15)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG __niter => __n_9(D)
  # DEBUG __first => __first_2
  if (__n_9(D) == 0)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 15>:
  # DEBUG __first => __first_2
  if (__first_2 == __first_11)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#1274 => &this_1(D)->D.45977
  # DEBUG this => D#1274
  # DEBUG D#68 => this_1(D)
  # DEBUG D#68 => this_1(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  __n_19 = __n_9(D) - _15;
  _20 = MEM[(const int &)__val_10(D)];
  # DEBUG D#1247 => __val_10(D)
  # DEBUG __first => __first_11
  # DEBUG __n => __n_19
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.156403 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => __first_11
  # DEBUG __n => __n_19
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => __first_11
  # DEBUG __n => __n_19
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => __first_11
  # DEBUG __n => __n_19
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => __first_11
  # DEBUG __it => __first_11
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_19
  # DEBUG __value => D#1144
  # DEBUG __tmp => _20
  # DEBUG __niter => __n_19
  # DEBUG __niter => __n_19
  # DEBUG __first => __first_11
  goto <bb 19>;

  <bb 17>:
  _80 = (unsigned long) __first_11;
  _21 = __first_2 + 4;
  _22 = (unsigned long) _21;
  _17 = _80 - _22;
  _30 = _17 /[ex] 4;
  _100 = _30 & 4611686018427387903;
  _44 = _100 + 1;
  _42 = _44 * 4;
  __builtin_memset (__first_2, 0, _42);
  goto <bb 16>;

  <bb 18>:

  <bb 19>:
  # __n_99 = PHI <__n_23(18), __n_19(16)>
  # __first_95 = PHI <__first_24(18), __first_11(16)>
  # DEBUG __niter => __n_99
  # DEBUG __first => __first_95
  *__first_95 = _20;
  __n_23 = __n_99 + 18446744073709551615;
  # DEBUG __niter => __n_23
  __first_24 = __first_95 + 4;
  # DEBUG __first => __first_24
  # DEBUG __niter => __n_23
  # DEBUG __first => __first_24
  if (__n_23 == 0)
    goto <bb 20>;
  else
    goto <bb 18>;

  <bb 20>:
  _98 = __n_19 * 4;
  __first_59 = __first_11 + _98;
  this_1(D)->D.45977._M_impl._M_finish = __first_59;
  goto <bb 23>;

  <bb 21>:
  _63 = __n_9(D) * 4;
  __builtin_memset (__first_2, 0, _63);
  _81 = __n_9(D) * 4;
  __first_43 = __first_2 + _81;

  <bb 22>:
  # __first_62 = PHI <__first_43(21), __first_2(14)>
  # DEBUG D#396 => this_1(D)
  # DEBUG __pos => __first_62
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => __first_62
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => __first_62
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)this_1(D) + 8B] = __first_62;

  <bb 23>:
  return;

  <bb 24>:
  _16 = __n_9(D) * 4;
  _76 = (int *) _16;
  # DEBUG D#1252 => &__tmp
  # DEBUG D#1252 => &__tmp
  # DEBUG D#3140 => MEM[(const int &)__val_10(D)]
  # DEBUG D#1253 => __val_10(D)
  # DEBUG __n => __n_9(D)
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.156856 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_9(D)
  # DEBUG __value => D#1144
  # DEBUG __tmp => D#3140
  # DEBUG __niter => __n_9(D)
  # DEBUG __niter => __n_9(D)
  # DEBUG __first => 0B
  goto <bb 10>;

}



;; Function virtual void TrafficManager::DisplayOverallStatsCSV(std::ostream&) const (_ZNK14TrafficManager22DisplayOverallStatsCSVERSo, funcdef_no=2490, decl_uid=65046, cgraph_uid=738, symbol_order=739)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void TrafficManager::DisplayOverallStatsCSV(std::ostream&) const (const struct TrafficManager * const this, struct ostream & os)
{
  char_type D.156953;
  char __c;
  char_type D.156950;
  char __c;
  char_type D.156947;
  struct basic_ostream & D.156941;
  char __c;
  int c;
  struct string D.74749;
  int _6;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () _8;
  struct basic_ostream & _11;
  struct basic_ostream & _13;
  const size_type _14;
  char * const _15;
  char * const _16;
  long int _21;
  char * const _22;
  struct basic_ostream & _23;
  const struct __ctype_type * _29;
  int prephitmp_31;
  int pretmp_38;
  int pretmp_39;
  int (*__vtbl_ptr_type) () * _40;
  long int _41;
  sizetype _42;
  struct basic_ios * _43;
  struct basic_ostream & _46;
  char _48;
  char_type _51;
  int (*__vtbl_ptr_type) () * _56;
  int (*__vtbl_ptr_type) () _57;
  void * PROF_61;
  char_type _63;
  int _70;

  <bb 2>:
  # DEBUG c => 0
  # DEBUG c => 0
  _70 = this_5(D)->_classes;
  if (_70 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:

  <bb 35>:
  return;

  <bb 4>:

  <bb 5>:
  # c_44 = PHI <0(4), c_18(30)>
  # DEBUG c => c_44
  _7 = this_5(D)->D.65070._vptr.Module;
  _8 = MEM[(int (*__vtbl_ptr_type) () *)_7 + 64B];
  D.74749 = OBJ_TYPE_REF(_8;(const struct TrafficManager)this_5(D)->8) (this_5(D), 0); [return slot optimization]
  # DEBUG __out => os_10(D)
  # DEBUG __s => "results:"
  # DEBUG __s => "results:"
  std::__ostream_insert<char, std::char_traits<char> > (os_10(D), "results:", 8);

  <bb 6>:
  _13 = std::basic_ostream<char>::operator<< (os_10(D), c_44);
  goto <bb 8>;

<L5>:
  goto <bb 32> (<L3>);

  <bb 8>:
  # DEBUG __out => _13
  __c = 44;
  # DEBUG __c => __c
  _11 = std::__ostream_insert<char, std::char_traits<char> > (_13, &__c, 1);
  goto <bb 10>;

<L6>:
  goto <bb 32> (<L3>);

  <bb 10>:
  # DEBUG __os => _11
  # DEBUG __str => &D.74749
  _14 = MEM[(long unsigned int *)&D.74749 + 8B];
  # DEBUG D#3 => &D.74749
  # DEBUG this => D#3
  _21 = (long int) _14;
  # DEBUG this => &D.74749
  _22 = MEM[(char * *)&D.74749];
  # DEBUG D#1 => &D.74749
  # DEBUG this => D#1
  _23 = std::__ostream_insert<char, std::char_traits<char> > (_11, _22, _21);
  goto <bb 12>;

<L7>:
  goto <bb 32> (<L3>);

  <bb 12>:
  # DEBUG this => _23
  # DEBUG __pf => endl
  # DEBUG __os => _23
  _40 = _23->_vptr.basic_ostream;
  _41 = MEM[(long int *)_40 + -24B];
  _42 = (sizetype) _41;
  _43 = _23 + _42;
  # DEBUG this => _43
  # DEBUG __c => 10
  _29 = MEM[(const struct basic_ios *)_43]._M_ctype;
  # DEBUG __f => _29
  if (_29 == 0B)
    goto <bb 13>;
  else
    goto <bb 15>;

  <bb 13>:
  std::__throw_bad_cast ();

<L8>:
  goto <bb 32> (<L3>);

  <bb 15>:
  # DEBUG this => _29
  # DEBUG __c => 10
  _48 = MEM[(const struct ctype *)_29]._M_widen_ok;
  if (_48 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _51 = MEM[(const struct ctype *)_29]._M_widen[10];
  pretmp_38 = (int) _51;
  goto <bb 23>;

  <bb 17>:
  # DEBUG this => _29
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_29);
  goto <bb 19>;

<L9>:
  goto <bb 32> (<L3>);

  <bb 19>:
  _56 = MEM[(const struct ctype *)_29].D.16885._vptr.facet;
  _57 = MEM[(int (*__vtbl_ptr_type) () *)_56 + 48B];
  PROF_61 = [obj_type_ref] OBJ_TYPE_REF(_57;(const struct ctype)_29->6);
  if (PROF_61 == do_widen)
    goto <bb 23>;
  else
    goto <bb 20>;

  <bb 20>:
  _63 = OBJ_TYPE_REF(_57;(const struct ctype)_29->6) (_29, 10);
  goto <bb 22>;

<L10>:
  goto <bb 32> (<L3>);

  <bb 22>:
  pretmp_39 = (int) _63;

  <bb 23>:
  # prephitmp_31 = PHI <pretmp_38(16), 10(19), pretmp_39(22)>
  _46 = std::basic_ostream<char>::put (_23, prephitmp_31);
  goto <bb 25>;

<L11>:
  goto <bb 32> (<L3>);

  <bb 25>:
  # DEBUG __os => _46
  std::basic_ostream<char>::flush (_46);
  goto <bb 27>;

<L12>:
  goto <bb 32> (<L3>);

  <bb 27>:
  # DEBUG this => &D.74749
  # DEBUG this => &D.74749
  # DEBUG this => &D.74749
  _15 = MEM[(char * *)&D.74749];
  # DEBUG D#1 => &D.74749
  # DEBUG this => D#1
  # DEBUG this => &D.74749
  if (&D.74749.D.11539._M_local_buf != _15)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG D#629 => D.74749.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74749
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74749
  # DEBUG this => D#1
  # DEBUG this => &D.74749
  # DEBUG D#626 => &D.74749._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _15
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _15
  # DEBUG this => D#620
  # DEBUG D.115903 => D#621
  operator delete (_15);

  <bb 29>:
  # DEBUG D#630 => &D.74749._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74749 ={v} {CLOBBER};
  c_18 = c_44 + 1;
  # DEBUG c => c_18
  # DEBUG c => c_18
  _6 = this_5(D)->_classes;
  if (_6 <= c_18)
    goto <bb 3>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 5>;

<L4>:

<L3>:
  # DEBUG this => &D.74749
  # DEBUG this => &D.74749
  # DEBUG this => &D.74749
  _16 = MEM[(char * *)&D.74749];
  # DEBUG D#1 => &D.74749
  # DEBUG this => D#1
  # DEBUG this => &D.74749
  if (&D.74749.D.11539._M_local_buf != _16)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#629 => D.74749.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74749
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74749
  # DEBUG this => D#1
  # DEBUG this => &D.74749
  # DEBUG D#626 => &D.74749._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _16
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _16
  # DEBUG this => D#620
  # DEBUG D.115918 => D#621
  operator delete (_16);

  <bb 34>:
  # DEBUG D#630 => &D.74749._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74749 ={v} {CLOBBER};
  resx 1

}



;; Function virtual void TrafficManager::WriteStats(std::ostream&) const (_ZNK14TrafficManager10WriteStatsERSo, funcdef_no=2485, decl_uid=65035, cgraph_uid=733, symbol_order=734)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
virtual void TrafficManager::WriteStats(std::ostream&) const (const struct TrafficManager * const this, struct ostream & os)
{
  struct basic_ostream & D.157064;
  struct basic_ostream & D.157060;
  struct basic_ostream & D.157056;
  struct basic_ostream & D.157052;
  struct basic_ostream & D.157048;
  struct basic_ostream & D.157044;
  struct basic_ostream & D.157040;
  struct basic_ostream & D.157036;
  struct basic_ostream & D.157032;
  struct basic_ostream & D.157028;
  struct basic_ostream & D.157024;
  struct basic_ostream & D.157020;
  struct basic_ostream & D.157016;
  struct basic_ostream & D.157012;
  struct basic_ostream & D.157008;
  struct basic_ostream & D.157004;
  struct basic_ostream & D.157000;
  struct basic_ostream & D.156996;
  struct basic_ostream & D.156992;
  struct basic_ostream & D.156988;
  int d;
  int d;
  int d;
  int d;
  int d;
  int d;
  int j;
  int i;
  int j;
  int i;
  int j;
  int i;
  int j;
  int i;
  double time_delta;
  int c;
  long unsigned int _38;
  int _39;
  int _40;
  struct Stats * _41;
  struct Stats * _43;
  struct Stats * _44;
  double _46;
  struct Stats * _47;
  double _49;
  struct Stats * _50;
  double _52;
  int _53;
  struct basic_ostream & _55;
  struct __ostream_type & _56;
  struct __ostream_type & _57;
  struct basic_ostream & _59;
  struct ostream & _61;
  struct __ostream_type & _62;
  struct basic_ostream & _64;
  struct __ostream_type & _65;
  struct __ostream_type & _66;
  struct basic_ostream & _68;
  struct ostream & _70;
  struct __ostream_type & _71;
  struct basic_ostream & _73;
  struct __ostream_type & _74;
  struct __ostream_type & _75;
  struct basic_ostream & _77;
  struct ostream & _79;
  struct __ostream_type & _80;
  struct basic_ostream & _82;
  struct ostream & _84;
  struct __ostream_type & _85;
  struct basic_ostream & _87;
  struct ostream & _89;
  bool _90;
  struct basic_ostream & _92;
  int _95;
  int _96;
  int _97;
  long unsigned int _98;
  struct Stats * _99;
  int _101;
  struct basic_ostream & _103;
  struct __ostream_type & _107;
  struct __ostream_type & _108;
  struct basic_ostream & _110;
  int _113;
  int _114;
  int _115;
  long unsigned int _116;
  struct Stats * _117;
  double _119;
  struct __ostream_type & _123;
  struct __ostream_type & _124;
  struct basic_ostream & _126;
  int _127;
  int _129;
  int _130;
  int _131;
  long unsigned int _132;
  struct Stats * _133;
  double _135;
  struct __ostream_type & _139;
  struct __ostream_type & _140;
  struct basic_ostream & _142;
  int _145;
  int _146;
  int _147;
  long unsigned int _148;
  struct Stats * _149;
  double _151;
  int _155;
  int _156;
  int _157;
  struct __ostream_type & _159;
  struct __ostream_type & _160;
  struct basic_ostream & _162;
  int _164;
  long unsigned int _165;
  int _166;
  double _167;
  double _168;
  struct __ostream_type & _171;
  struct __ostream_type & _172;
  struct basic_ostream & _174;
  int _176;
  long unsigned int _177;
  int _178;
  double _179;
  double _180;
  struct __ostream_type & _183;
  struct __ostream_type & _184;
  struct basic_ostream & _186;
  int _188;
  long unsigned int _189;
  int _190;
  double _191;
  double _192;
  struct __ostream_type & _195;
  struct __ostream_type & _196;
  struct basic_ostream & _198;
  int _200;
  long unsigned int _201;
  int _202;
  double _203;
  double _204;
  struct __ostream_type & _207;
  struct __ostream_type & _208;
  struct basic_ostream & _210;
  int _212;
  long unsigned int _213;
  int _214;
  double _215;
  int _216;
  double _217;
  double _218;
  struct __ostream_type & _221;
  struct __ostream_type & _222;
  struct basic_ostream & _224;
  int _226;
  long unsigned int _227;
  const int & _228;
  long unsigned int _229;
  int _230;
  double _231;
  int _232;
  double _233;
  double _234;
  int * const _239;
  int * const _240;
  int * const _241;
  int * const _242;
  int * const _243;
  int * const _244;
  int * const _245;
  int * const _246;
  int * const _247;
  struct Stats * * const _248;
  struct Stats * * const _249;
  struct Stats * * const _250;
  struct Stats * * const _251;
  struct Stats * * const _252;
  struct Stats * * const _253;
  struct Stats * * const _254;
  struct Stats * * const _255;
  struct Stats * * const _256;
  struct vector * const _257;
  struct vector * const _258;
  struct vector * const _259;
  struct vector * const _260;
  struct vector * const _261;
  struct vector * const _262;
  struct vector * const _263;
  struct vector * const _264;
  struct vector * const _265;
  struct vector * const _266;
  struct vector * const _267;
  struct vector * const _268;
  struct Stats * const & _269;
  struct Stats * const & _270;
  struct Stats * const & _271;
  struct Stats * const & _272;
  int _273;
  long unsigned int _274;
  struct Stats * const & _275;
  long unsigned int _276;
  struct Stats * const & _277;
  const struct vector & _279;
  long unsigned int _280;
  struct Stats * const & _281;
  const struct vector & _283;
  long unsigned int _284;
  struct Stats * const & _285;
  const struct vector & _287;
  long unsigned int _288;
  struct Stats * const & _289;
  const struct vector & _291;
  long unsigned int _292;
  const int & _293;
  const struct vector & _295;
  long unsigned int _296;
  const int & _297;
  const struct vector & _299;
  long unsigned int _300;
  const int & _301;
  const struct vector & _303;
  long unsigned int _304;
  const int & _305;
  const struct vector & _307;
  const int & _308;
  const struct vector & _309;
  long unsigned int _310;
  const int & _311;
  const struct vector & _313;
  const int & _314;
  const struct vector & _315;
  long unsigned int _316;
  const int & _317;
  const struct vector & _319;
  int _397;
  int _400;
  int _403;
  int _406;
  int _418;
  int _436;
  int _442;
  int _454;
  int _480;
  int _481;
  int _482;
  int _483;
  const int prephitmp_626;
  int pretmp_627;
  int prephitmp_628;
  long unsigned int pretmp_632;
  long unsigned int pretmp_637;
  long unsigned int pretmp_642;
  long unsigned int pretmp_647;
  long unsigned int pretmp_652;
  long unsigned int pretmp_657;
  const int prephitmp_660;
  const int prephitmp_669;
  long unsigned int pretmp_671;
  const int prephitmp_673;
  int _676;
  int _677;
  int _678;
  int _679;
  const int prephitmp_681;
  long unsigned int pretmp_683;
  const int prephitmp_685;
  const int prephitmp_693;
  long unsigned int pretmp_695;
  const int prephitmp_697;
  const int prephitmp_705;
  long unsigned int pretmp_707;
  const int pretmp_708;
  const int prephitmp_709;

  <bb 2>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "%================================="
  # DEBUG __s => "%================================="
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "%=================================", 34);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (os_34(D));
  # DEBUG c => 0
  # DEBUG c => 0
  _418 = this_36(D)->_classes;
  if (_418 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # c_408 = PHI <0(4), prephitmp_628(70)>
  # prephitmp_626 = PHI <_418(4), prephitmp_709(70)>
  # DEBUG c => c_408
  _38 = (long unsigned int) c_408;
  # DEBUG D#135 => &this_36(D)->_measure_stats
  _239 = MEM[(int * *)this_36(D) + 1880B];
  # DEBUG D#61 => D#135
  # DEBUG __n => _38
  # DEBUG this => D#61
  _229 = _38 * 4;
  _228 = _239 + _229;
  _40 = *_228;
  if (_40 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  pretmp_627 = c_408 + 1;
  goto <bb 69>;

  <bb 7>:
  # DEBUG D#136 => &this_36(D)->_hop_stats
  _248 = MEM[(struct Stats * * *)this_36(D) + 1312B];
  # DEBUG D#132 => D#136
  # DEBUG __n => _38
  # DEBUG this => D#132
  _274 = _38 * 8;
  _275 = _248 + _274;
  _41 = *_275;
  # DEBUG D#137 => &this_36(D)->_frag_stats
  _249 = MEM[(struct Stats * * *)this_36(D) + 1144B];
  # DEBUG D#132 => D#137
  # DEBUG __n => _38
  # DEBUG this => D#132
  _272 = _249 + _274;
  _43 = *_272;
  # DEBUG D#138 => &this_36(D)->_flat_stats
  _250 = MEM[(struct Stats * * *)this_36(D) + 1048B];
  # DEBUG D#132 => D#138
  # DEBUG __n => _38
  # DEBUG this => D#132
  _271 = _250 + _274;
  _44 = *_271;
  # DEBUG D#139 => &this_36(D)->_flat_stats
  # DEBUG D#132 => D#139
  # DEBUG __n => _38
  # DEBUG this => D#132
  _46 = Stats::Average (_44);
  # DEBUG D#140 => &this_36(D)->_nlat_stats
  _251 = MEM[(struct Stats * * *)this_36(D) + 952B];
  # DEBUG D#132 => D#140
  # DEBUG __n => _38
  # DEBUG this => D#132
  _270 = _251 + _274;
  _47 = *_270;
  # DEBUG D#141 => &this_36(D)->_nlat_stats
  # DEBUG D#132 => D#141
  # DEBUG __n => _38
  # DEBUG this => D#132
  _49 = Stats::Average (_47);
  # DEBUG D#142 => &this_36(D)->_plat_stats
  _252 = MEM[(struct Stats * * *)this_36(D) + 856B];
  # DEBUG D#132 => D#142
  # DEBUG __n => _38
  # DEBUG this => D#132
  _269 = _252 + _274;
  _50 = *_269;
  # DEBUG D#143 => &this_36(D)->_plat_stats
  # DEBUG D#132 => D#143
  # DEBUG __n => _38
  # DEBUG this => D#132
  _52 = Stats::Average (_50);
  _53 = c_408 + 1;
  # DEBUG __out => os_34(D)
  # DEBUG __s => "plat("
  # DEBUG __s => "plat("
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "plat(", 5);
  _55 = std::basic_ostream<char>::operator<< (os_34(D), _53);
  # DEBUG __out => _55
  # DEBUG __s => ") = "
  # DEBUG __s => ") = "
  std::__ostream_insert<char, std::char_traits<char> > (_55, ") = ", 4);
  # DEBUG this => _55
  # DEBUG __f => _52
  _56 = std::basic_ostream<char>::_M_insert<double> (_55, _52);
  # DEBUG __out => _56
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_56, ";", 1);
  # DEBUG this => _56
  # DEBUG __pf => endl
  _57 = std::endl<char, std::char_traits<char> > (_56);
  # DEBUG __out => _57
  # DEBUG __s => "plat_hist("
  # DEBUG __s => "plat_hist("
  std::__ostream_insert<char, std::char_traits<char> > (_57, "plat_hist(", 10);
  _59 = std::basic_ostream<char>::operator<< (_57, _53);
  # DEBUG __out => _59
  # DEBUG __s => ",:) = "
  # DEBUG __s => ",:) = "
  std::__ostream_insert<char, std::char_traits<char> > (_59, ",:) = ", 6);
  _61 = operator<< (_59, _50);
  # DEBUG __out => _61
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_61, ";", 1);
  # DEBUG this => _61
  # DEBUG __pf => endl
  _62 = std::endl<char, std::char_traits<char> > (_61);
  # DEBUG __out => _62
  # DEBUG __s => "nlat("
  # DEBUG __s => "nlat("
  std::__ostream_insert<char, std::char_traits<char> > (_62, "nlat(", 5);
  _64 = std::basic_ostream<char>::operator<< (_62, _53);
  # DEBUG __out => _64
  # DEBUG __s => ") = "
  # DEBUG __s => ") = "
  std::__ostream_insert<char, std::char_traits<char> > (_64, ") = ", 4);
  # DEBUG this => _64
  # DEBUG __f => _49
  _65 = std::basic_ostream<char>::_M_insert<double> (_64, _49);
  # DEBUG __out => _65
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_65, ";", 1);
  # DEBUG this => _65
  # DEBUG __pf => endl
  _66 = std::endl<char, std::char_traits<char> > (_65);
  # DEBUG __out => _66
  # DEBUG __s => "nlat_hist("
  # DEBUG __s => "nlat_hist("
  std::__ostream_insert<char, std::char_traits<char> > (_66, "nlat_hist(", 10);
  _68 = std::basic_ostream<char>::operator<< (_66, _53);
  # DEBUG __out => _68
  # DEBUG __s => ",:) = "
  # DEBUG __s => ",:) = "
  std::__ostream_insert<char, std::char_traits<char> > (_68, ",:) = ", 6);
  _70 = operator<< (_68, _47);
  # DEBUG __out => _70
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_70, ";", 1);
  # DEBUG this => _70
  # DEBUG __pf => endl
  _71 = std::endl<char, std::char_traits<char> > (_70);
  # DEBUG __out => _71
  # DEBUG __s => "flat("
  # DEBUG __s => "flat("
  std::__ostream_insert<char, std::char_traits<char> > (_71, "flat(", 5);
  _73 = std::basic_ostream<char>::operator<< (_71, _53);
  # DEBUG __out => _73
  # DEBUG __s => ") = "
  # DEBUG __s => ") = "
  std::__ostream_insert<char, std::char_traits<char> > (_73, ") = ", 4);
  # DEBUG this => _73
  # DEBUG __f => _46
  _74 = std::basic_ostream<char>::_M_insert<double> (_73, _46);
  # DEBUG __out => _74
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_74, ";", 1);
  # DEBUG this => _74
  # DEBUG __pf => endl
  _75 = std::endl<char, std::char_traits<char> > (_74);
  # DEBUG __out => _75
  # DEBUG __s => "flat_hist("
  # DEBUG __s => "flat_hist("
  std::__ostream_insert<char, std::char_traits<char> > (_75, "flat_hist(", 10);
  _77 = std::basic_ostream<char>::operator<< (_75, _53);
  # DEBUG __out => _77
  # DEBUG __s => ",:) = "
  # DEBUG __s => ",:) = "
  std::__ostream_insert<char, std::char_traits<char> > (_77, ",:) = ", 6);
  _79 = operator<< (_77, _44);
  # DEBUG __out => _79
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_79, ";", 1);
  # DEBUG this => _79
  # DEBUG __pf => endl
  _80 = std::endl<char, std::char_traits<char> > (_79);
  # DEBUG __out => _80
  # DEBUG __s => "frag_hist("
  # DEBUG __s => "frag_hist("
  std::__ostream_insert<char, std::char_traits<char> > (_80, "frag_hist(", 10);
  _82 = std::basic_ostream<char>::operator<< (_80, _53);
  # DEBUG __out => _82
  # DEBUG __s => ",:) = "
  # DEBUG __s => ",:) = "
  std::__ostream_insert<char, std::char_traits<char> > (_82, ",:) = ", 6);
  _84 = operator<< (_82, _43);
  # DEBUG __out => _84
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_84, ";", 1);
  # DEBUG this => _84
  # DEBUG __pf => endl
  _85 = std::endl<char, std::char_traits<char> > (_84);
  # DEBUG __out => _85
  # DEBUG __s => "hops("
  # DEBUG __s => "hops("
  std::__ostream_insert<char, std::char_traits<char> > (_85, "hops(", 5);
  _87 = std::basic_ostream<char>::operator<< (_85, _53);
  # DEBUG __out => _87
  # DEBUG __s => ",:) = "
  # DEBUG __s => ",:) = "
  std::__ostream_insert<char, std::char_traits<char> > (_87, ",:) = ", 6);
  _89 = operator<< (_87, _41);
  # DEBUG __out => _89
  # DEBUG __s => ";"
  # DEBUG __s => ";"
  std::__ostream_insert<char, std::char_traits<char> > (_89, ";", 1);
  # DEBUG this => _89
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_89);
  _90 = this_36(D)->_pair_stats;
  if (_90 != 0)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  _155 = this_36(D)->_drain_time;
  _156 = this_36(D)->_reset_time;
  _157 = _155 - _156;
  time_delta_158 = (double) _157;
  # DEBUG time_delta => time_delta_158
  # DEBUG __out => os_34(D)
  # DEBUG __s => "];"
  # DEBUG __s => "];"
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "];", 2);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  _160 = std::endl<char, std::char_traits<char> > (os_34(D));
  # DEBUG __out => _160
  # DEBUG __s => "sent_packets("
  # DEBUG __s => "sent_packets("
  std::__ostream_insert<char, std::char_traits<char> > (_160, "sent_packets(", 13);
  _162 = std::basic_ostream<char>::operator<< (_160, _53);
  # DEBUG __out => _162
  # DEBUG __s => ",:) = [ "
  # DEBUG __s => ",:) = [ "
  std::__ostream_insert<char, std::char_traits<char> > (_162, ",:) = [ ", 8);
  # DEBUG d => 0
  _273 = this_36(D)->_nodes;
  if (_273 <= 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 9>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "pair_sent("
  # DEBUG __s => "pair_sent("
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "pair_sent(", 10);
  _92 = std::basic_ostream<char>::operator<< (os_34(D), _53);
  # DEBUG __out => _92
  # DEBUG __s => ",:) = [ "
  # DEBUG __s => ",:) = [ "
  std::__ostream_insert<char, std::char_traits<char> > (_92, ",:) = [ ", 8);
  # DEBUG i => 0
  _406 = this_36(D)->_nodes;
  if (_406 <= 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "];"
  # DEBUG __s => "];"
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "];", 2);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  _108 = std::endl<char, std::char_traits<char> > (os_34(D));
  # DEBUG __out => _108
  # DEBUG __s => "pair_plat("
  # DEBUG __s => "pair_plat("
  std::__ostream_insert<char, std::char_traits<char> > (_108, "pair_plat(", 10);
  _110 = std::basic_ostream<char>::operator<< (_108, _53);
  # DEBUG __out => _110
  # DEBUG __s => ",:) = [ "
  # DEBUG __s => ",:) = [ "
  std::__ostream_insert<char, std::char_traits<char> > (_110, ",:) = [ ", 8);
  # DEBUG i => 0
  _403 = this_36(D)->_nodes;
  if (_403 <= 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 11>:
  pretmp_707 = _38 * 24;

  <bb 12>:
  # i_187 = PHI <0(11), i_106(18)>
  # prephitmp_697 = PHI <_406(11), prephitmp_705(18)>
  # DEBUG i => i_187
  # DEBUG j => 0
  if (prephitmp_697 <= 0)
    goto <bb 17>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # j_409 = PHI <0(13), j_105(16)>
  # _480 = PHI <prephitmp_697(13), _95(16)>
  # DEBUG j => j_409
  _96 = i_187 * _480;
  _97 = _96 + j_409;
  _98 = (long unsigned int) _97;
  # DEBUG D#144 => &this_36(D)->_pair_plat
  _257 = MEM[(struct vector * *)this_36(D) + 1240B];
  # DEBUG D#133 => D#144
  # DEBUG __n => _38
  # DEBUG this => D#133
  _279 = _257 + pretmp_707;
  _253 = MEM[(struct Stats * * *)_279];
  # DEBUG __n => _98
  # DEBUG this => D#132
  _276 = _98 * 8;
  _277 = _253 + _276;
  _99 = *_277;
  _101 = Stats::NumSamples (_99);
  _103 = std::basic_ostream<char>::operator<< (os_34(D), _101);
  # DEBUG __out => _103
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_103, " ", 1);
  j_105 = j_409 + 1;
  # DEBUG j => j_105
  # DEBUG j => j_105
  _95 = this_36(D)->_nodes;
  if (_95 <= j_105)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # _679 = PHI <_95(14)>
  goto <bb 17>;

  <bb 16>:
  goto <bb 14>;

  <bb 17>:
  # prephitmp_705 = PHI <_679(15), prephitmp_697(12)>
  i_106 = i_187 + 1;
  # DEBUG i => i_106
  # DEBUG i => i_106
  if (i_106 >= prephitmp_705)
    goto <bb 10>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 12>;

  <bb 19>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "];"
  # DEBUG __s => "];"
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "];", 2);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  _124 = std::endl<char, std::char_traits<char> > (os_34(D));
  # DEBUG __out => _124
  # DEBUG __s => "pair_nlat("
  # DEBUG __s => "pair_nlat("
  std::__ostream_insert<char, std::char_traits<char> > (_124, "pair_nlat(", 10);
  _126 = std::basic_ostream<char>::operator<< (_124, _53);
  # DEBUG __out => _126
  # DEBUG __s => ",:) = [ "
  # DEBUG __s => ",:) = [ "
  std::__ostream_insert<char, std::char_traits<char> > (_126, ",:) = [ ", 8);
  # DEBUG i => 0
  _127 = this_36(D)->_nodes;
  if (_127 <= 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 20>:
  pretmp_695 = _38 * 24;

  <bb 21>:
  # i_193 = PHI <0(20), i_122(27)>
  # prephitmp_685 = PHI <_403(20), prephitmp_693(27)>
  # DEBUG i => i_193
  # DEBUG j => 0
  if (prephitmp_685 <= 0)
    goto <bb 26>;
  else
    goto <bb 22>;

  <bb 22>:

  <bb 23>:
  # j_410 = PHI <0(22), j_121(25)>
  # _481 = PHI <prephitmp_685(22), _113(25)>
  # DEBUG j => j_410
  _114 = i_193 * _481;
  _115 = _114 + j_410;
  _116 = (long unsigned int) _115;
  # DEBUG D#145 => &this_36(D)->_pair_plat
  _258 = MEM[(struct vector * *)this_36(D) + 1240B];
  # DEBUG D#133 => D#145
  # DEBUG __n => _38
  # DEBUG this => D#133
  _283 = _258 + pretmp_695;
  _254 = MEM[(struct Stats * * *)_283];
  # DEBUG __n => _116
  # DEBUG this => D#132
  _280 = _116 * 8;
  _281 = _254 + _280;
  _117 = *_281;
  _119 = Stats::Average (_117);
  # DEBUG this => os_34(D)
  # DEBUG __f => _119
  _107 = std::basic_ostream<char>::_M_insert<double> (os_34(D), _119);
  # DEBUG __out => _107
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_107, " ", 1);
  j_121 = j_410 + 1;
  # DEBUG j => j_121
  # DEBUG j => j_121
  _113 = this_36(D)->_nodes;
  if (_113 <= j_121)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # _678 = PHI <_113(23)>
  goto <bb 26>;

  <bb 25>:
  goto <bb 23>;

  <bb 26>:
  # prephitmp_693 = PHI <_678(24), prephitmp_685(21)>
  i_122 = i_193 + 1;
  # DEBUG i => i_122
  # DEBUG i => i_122
  if (i_122 >= prephitmp_693)
    goto <bb 19>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 21>;

  <bb 28>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "];"
  # DEBUG __s => "];"
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "];", 2);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  _140 = std::endl<char, std::char_traits<char> > (os_34(D));
  # DEBUG __out => _140
  # DEBUG __s => "pair_flat("
  # DEBUG __s => "pair_flat("
  std::__ostream_insert<char, std::char_traits<char> > (_140, "pair_flat(", 10);
  _142 = std::basic_ostream<char>::operator<< (_140, _53);
  # DEBUG __out => _142
  # DEBUG __s => ",:) = [ "
  # DEBUG __s => ",:) = [ "
  std::__ostream_insert<char, std::char_traits<char> > (_142, ",:) = [ ", 8);
  # DEBUG i => 0
  _436 = this_36(D)->_nodes;
  if (_436 <= 0)
    goto <bb 8>;
  else
    goto <bb 37>;

  <bb 29>:
  pretmp_683 = _38 * 24;

  <bb 30>:
  # i_199 = PHI <0(29), i_138(36)>
  # prephitmp_673 = PHI <_127(29), prephitmp_681(36)>
  # DEBUG i => i_199
  # DEBUG j => 0
  if (prephitmp_673 <= 0)
    goto <bb 35>;
  else
    goto <bb 31>;

  <bb 31>:

  <bb 32>:
  # j_411 = PHI <0(31), j_137(34)>
  # _482 = PHI <prephitmp_673(31), _129(34)>
  # DEBUG j => j_411
  _130 = i_199 * _482;
  _131 = _130 + j_411;
  _132 = (long unsigned int) _131;
  # DEBUG D#146 => &this_36(D)->_pair_nlat
  _259 = MEM[(struct vector * *)this_36(D) + 1264B];
  # DEBUG D#133 => D#146
  # DEBUG __n => _38
  # DEBUG this => D#133
  _287 = _259 + pretmp_683;
  _255 = MEM[(struct Stats * * *)_287];
  # DEBUG __n => _132
  # DEBUG this => D#132
  _284 = _132 * 8;
  _285 = _255 + _284;
  _133 = *_285;
  _135 = Stats::Average (_133);
  # DEBUG this => os_34(D)
  # DEBUG __f => _135
  _123 = std::basic_ostream<char>::_M_insert<double> (os_34(D), _135);
  # DEBUG __out => _123
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_123, " ", 1);
  j_137 = j_411 + 1;
  # DEBUG j => j_137
  # DEBUG j => j_137
  _129 = this_36(D)->_nodes;
  if (_129 <= j_137)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # _677 = PHI <_129(32)>
  goto <bb 35>;

  <bb 34>:
  goto <bb 32>;

  <bb 35>:
  # prephitmp_681 = PHI <_677(33), prephitmp_673(30)>
  i_138 = i_199 + 1;
  # DEBUG i => i_138
  # DEBUG i => i_138
  if (i_138 >= prephitmp_681)
    goto <bb 28>;
  else
    goto <bb 36>;

  <bb 36>:
  goto <bb 30>;

  <bb 37>:
  pretmp_671 = _38 * 24;

  <bb 38>:
  # i_205 = PHI <0(37), i_154(44)>
  # prephitmp_660 = PHI <_436(37), prephitmp_669(44)>
  # DEBUG i => i_205
  # DEBUG j => 0
  if (prephitmp_660 <= 0)
    goto <bb 43>;
  else
    goto <bb 39>;

  <bb 39>:

  <bb 40>:
  # j_412 = PHI <0(39), j_153(42)>
  # _483 = PHI <prephitmp_660(39), _145(42)>
  # DEBUG j => j_412
  _146 = i_205 * _483;
  _147 = _146 + j_412;
  _148 = (long unsigned int) _147;
  # DEBUG D#147 => &this_36(D)->_pair_flat
  _260 = MEM[(struct vector * *)this_36(D) + 1288B];
  # DEBUG D#133 => D#147
  # DEBUG __n => _38
  # DEBUG this => D#133
  _291 = _260 + pretmp_671;
  _256 = MEM[(struct Stats * * *)_291];
  # DEBUG __n => _148
  # DEBUG this => D#132
  _288 = _148 * 8;
  _289 = _256 + _288;
  _149 = *_289;
  _151 = Stats::Average (_149);
  # DEBUG this => os_34(D)
  # DEBUG __f => _151
  _139 = std::basic_ostream<char>::_M_insert<double> (os_34(D), _151);
  # DEBUG __out => _139
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_139, " ", 1);
  j_153 = j_412 + 1;
  # DEBUG j => j_153
  # DEBUG j => j_153
  _145 = this_36(D)->_nodes;
  if (_145 <= j_153)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # _676 = PHI <_145(40)>
  goto <bb 43>;

  <bb 42>:
  goto <bb 40>;

  <bb 43>:
  # prephitmp_669 = PHI <_676(41), prephitmp_660(38)>
  i_154 = i_205 + 1;
  # DEBUG i => i_154
  # DEBUG i => i_154
  if (i_154 >= prephitmp_669)
    goto <bb 8>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 38>;

  <bb 45>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "];"
  # DEBUG __s => "];"
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "];", 2);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  _172 = std::endl<char, std::char_traits<char> > (os_34(D));
  # DEBUG __out => _172
  # DEBUG __s => "accepted_packets("
  # DEBUG __s => "accepted_packets("
  std::__ostream_insert<char, std::char_traits<char> > (_172, "accepted_packets(", 17);
  _174 = std::basic_ostream<char>::operator<< (_172, _53);
  # DEBUG __out => _174
  # DEBUG __s => ",:) = [ "
  # DEBUG __s => ",:) = [ "
  std::__ostream_insert<char, std::char_traits<char> > (_174, ",:) = [ ", 8);
  # DEBUG d => 0
  _442 = this_36(D)->_nodes;
  if (_442 <= 0)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 46>:
  pretmp_657 = _38 * 24;

  <bb 47>:
  # d_211 = PHI <0(46), d_170(48)>
  # DEBUG d => d_211
  _165 = (long unsigned int) d_211;
  # DEBUG D#148 => &this_36(D)->_sent_packets
  _261 = MEM[(struct vector * *)this_36(D) + 1360B];
  # DEBUG D#134 => D#148
  # DEBUG __n => _38
  # DEBUG this => D#134
  _295 = _261 + pretmp_657;
  _240 = MEM[(int * *)_295];
  # DEBUG __n => _165
  # DEBUG this => D#61
  _292 = _165 * 4;
  _293 = _240 + _292;
  _166 = *_293;
  _167 = (double) _166;
  _168 = _167 / time_delta_158;
  # DEBUG this => os_34(D)
  # DEBUG __f => _168
  _159 = std::basic_ostream<char>::_M_insert<double> (os_34(D), _168);
  # DEBUG __out => _159
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_159, " ", 1);
  d_170 = d_211 + 1;
  # DEBUG d => d_170
  # DEBUG d => d_170
  _164 = this_36(D)->_nodes;
  if (_164 <= d_170)
    goto <bb 45>;
  else
    goto <bb 48>;

  <bb 48>:
  goto <bb 47>;

  <bb 49>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "];"
  # DEBUG __s => "];"
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "];", 2);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  _184 = std::endl<char, std::char_traits<char> > (os_34(D));
  # DEBUG __out => _184
  # DEBUG __s => "sent_flits("
  # DEBUG __s => "sent_flits("
  std::__ostream_insert<char, std::char_traits<char> > (_184, "sent_flits(", 11);
  _186 = std::basic_ostream<char>::operator<< (_184, _53);
  # DEBUG __out => _186
  # DEBUG __s => ",:) = [ "
  # DEBUG __s => ",:) = [ "
  std::__ostream_insert<char, std::char_traits<char> > (_186, ",:) = [ ", 8);
  # DEBUG d => 0
  _400 = this_36(D)->_nodes;
  if (_400 <= 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 50>:
  pretmp_652 = _38 * 24;

  <bb 51>:
  # d_413 = PHI <0(50), d_182(52)>
  # DEBUG d => d_413
  _177 = (long unsigned int) d_413;
  # DEBUG D#149 => &this_36(D)->_accepted_packets
  _262 = MEM[(struct vector * *)this_36(D) + 1456B];
  # DEBUG D#134 => D#149
  # DEBUG __n => _38
  # DEBUG this => D#134
  _299 = _262 + pretmp_652;
  _241 = MEM[(int * *)_299];
  # DEBUG __n => _177
  # DEBUG this => D#61
  _296 = _177 * 4;
  _297 = _241 + _296;
  _178 = *_297;
  _179 = (double) _178;
  _180 = _179 / time_delta_158;
  # DEBUG this => os_34(D)
  # DEBUG __f => _180
  _171 = std::basic_ostream<char>::_M_insert<double> (os_34(D), _180);
  # DEBUG __out => _171
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_171, " ", 1);
  d_182 = d_413 + 1;
  # DEBUG d => d_182
  # DEBUG d => d_182
  _176 = this_36(D)->_nodes;
  if (_176 <= d_182)
    goto <bb 49>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 51>;

  <bb 53>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "];"
  # DEBUG __s => "];"
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "];", 2);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  _196 = std::endl<char, std::char_traits<char> > (os_34(D));
  # DEBUG __out => _196
  # DEBUG __s => "accepted_flits("
  # DEBUG __s => "accepted_flits("
  std::__ostream_insert<char, std::char_traits<char> > (_196, "accepted_flits(", 15);
  _198 = std::basic_ostream<char>::operator<< (_196, _53);
  # DEBUG __out => _198
  # DEBUG __s => ",:) = [ "
  # DEBUG __s => ",:) = [ "
  std::__ostream_insert<char, std::char_traits<char> > (_198, ",:) = [ ", 8);
  # DEBUG d => 0
  _39 = this_36(D)->_nodes;
  if (_39 <= 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 54>:
  pretmp_647 = _38 * 24;

  <bb 55>:
  # d_219 = PHI <0(54), d_194(56)>
  # DEBUG d => d_219
  _189 = (long unsigned int) d_219;
  # DEBUG D#150 => &this_36(D)->_sent_flits
  _263 = MEM[(struct vector * *)this_36(D) + 1552B];
  # DEBUG D#134 => D#150
  # DEBUG __n => _38
  # DEBUG this => D#134
  _303 = _263 + pretmp_647;
  _242 = MEM[(int * *)_303];
  # DEBUG __n => _189
  # DEBUG this => D#61
  _300 = _189 * 4;
  _301 = _242 + _300;
  _190 = *_301;
  _191 = (double) _190;
  _192 = _191 / time_delta_158;
  # DEBUG this => os_34(D)
  # DEBUG __f => _192
  _183 = std::basic_ostream<char>::_M_insert<double> (os_34(D), _192);
  # DEBUG __out => _183
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_183, " ", 1);
  d_194 = d_219 + 1;
  # DEBUG d => d_194
  # DEBUG d => d_194
  _188 = this_36(D)->_nodes;
  if (_188 <= d_194)
    goto <bb 53>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 55>;

  <bb 57>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "];"
  # DEBUG __s => "];"
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "];", 2);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  _208 = std::endl<char, std::char_traits<char> > (os_34(D));
  # DEBUG __out => _208
  # DEBUG __s => "sent_packet_size("
  # DEBUG __s => "sent_packet_size("
  std::__ostream_insert<char, std::char_traits<char> > (_208, "sent_packet_size(", 17);
  _210 = std::basic_ostream<char>::operator<< (_208, _53);
  # DEBUG __out => _210
  # DEBUG __s => ",:) = [ "
  # DEBUG __s => ",:) = [ "
  std::__ostream_insert<char, std::char_traits<char> > (_210, ",:) = [ ", 8);
  # DEBUG d => 0
  _454 = this_36(D)->_nodes;
  if (_454 <= 0)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 58>:
  pretmp_642 = _38 * 24;

  <bb 59>:
  # d_414 = PHI <0(58), d_206(60)>
  # DEBUG d => d_414
  _201 = (long unsigned int) d_414;
  # DEBUG D#151 => &this_36(D)->_accepted_flits
  _264 = MEM[(struct vector * *)this_36(D) + 1648B];
  # DEBUG D#134 => D#151
  # DEBUG __n => _38
  # DEBUG this => D#134
  _307 = _264 + pretmp_642;
  _243 = MEM[(int * *)_307];
  # DEBUG __n => _201
  # DEBUG this => D#61
  _304 = _201 * 4;
  _305 = _243 + _304;
  _202 = *_305;
  _203 = (double) _202;
  _204 = _203 / time_delta_158;
  # DEBUG this => os_34(D)
  # DEBUG __f => _204
  _195 = std::basic_ostream<char>::_M_insert<double> (os_34(D), _204);
  # DEBUG __out => _195
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_195, " ", 1);
  d_206 = d_414 + 1;
  # DEBUG d => d_206
  # DEBUG d => d_206
  _200 = this_36(D)->_nodes;
  if (_200 <= d_206)
    goto <bb 57>;
  else
    goto <bb 60>;

  <bb 60>:
  goto <bb 59>;

  <bb 61>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "];"
  # DEBUG __s => "];"
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "];", 2);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  _222 = std::endl<char, std::char_traits<char> > (os_34(D));
  # DEBUG __out => _222
  # DEBUG __s => "accepted_packet_size("
  # DEBUG __s => "accepted_packet_size("
  std::__ostream_insert<char, std::char_traits<char> > (_222, "accepted_packet_size(", 21);
  _224 = std::basic_ostream<char>::operator<< (_222, _53);
  # DEBUG __out => _224
  # DEBUG __s => ",:) = [ "
  # DEBUG __s => ",:) = [ "
  std::__ostream_insert<char, std::char_traits<char> > (_224, ",:) = [ ", 8);
  # DEBUG d => 0
  _397 = this_36(D)->_nodes;
  if (_397 <= 0)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 62>:
  pretmp_637 = _38 * 24;

  <bb 63>:
  # d_225 = PHI <0(62), d_220(64)>
  # DEBUG d => d_225
  _213 = (long unsigned int) d_225;
  # DEBUG D#152 => &this_36(D)->_sent_flits
  _265 = MEM[(struct vector * *)this_36(D) + 1552B];
  # DEBUG D#134 => D#152
  # DEBUG __n => _38
  # DEBUG this => D#134
  _313 = _265 + pretmp_637;
  _244 = MEM[(int * *)_313];
  # DEBUG __n => _213
  # DEBUG this => D#61
  _310 = _213 * 4;
  _311 = _244 + _310;
  _214 = *_311;
  _215 = (double) _214;
  # DEBUG D#153 => &this_36(D)->_sent_packets
  _266 = MEM[(struct vector * *)this_36(D) + 1360B];
  # DEBUG D#134 => D#153
  # DEBUG __n => _38
  # DEBUG this => D#134
  _309 = _266 + pretmp_637;
  _245 = MEM[(int * *)_309];
  # DEBUG __n => _213
  # DEBUG this => D#61
  _308 = _245 + _310;
  _216 = *_308;
  _217 = (double) _216;
  _218 = _215 / _217;
  # DEBUG this => os_34(D)
  # DEBUG __f => _218
  _207 = std::basic_ostream<char>::_M_insert<double> (os_34(D), _218);
  # DEBUG __out => _207
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_207, " ", 1);
  d_220 = d_225 + 1;
  # DEBUG d => d_220
  # DEBUG d => d_220
  _212 = this_36(D)->_nodes;
  if (_212 <= d_220)
    goto <bb 61>;
  else
    goto <bb 64>;

  <bb 64>:
  goto <bb 63>;

  <bb 65>:
  # DEBUG __out => os_34(D)
  # DEBUG __s => "];"
  # DEBUG __s => "];"
  std::__ostream_insert<char, std::char_traits<char> > (os_34(D), "];", 2);
  # DEBUG this => os_34(D)
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (os_34(D));
  pretmp_708 = this_36(D)->_classes;
  goto <bb 69>;

  <bb 66>:
  pretmp_632 = _38 * 24;

  <bb 67>:
  # d_415 = PHI <0(66), d_236(68)>
  # DEBUG d => d_415
  _227 = (long unsigned int) d_415;
  # DEBUG D#154 => &this_36(D)->_accepted_flits
  _267 = MEM[(struct vector * *)this_36(D) + 1648B];
  # DEBUG D#134 => D#154
  # DEBUG __n => _38
  # DEBUG this => D#134
  _319 = _267 + pretmp_632;
  _246 = MEM[(int * *)_319];
  # DEBUG __n => _227
  # DEBUG this => D#61
  _316 = _227 * 4;
  _317 = _246 + _316;
  _230 = *_317;
  _231 = (double) _230;
  # DEBUG D#155 => &this_36(D)->_accepted_packets
  _268 = MEM[(struct vector * *)this_36(D) + 1456B];
  # DEBUG D#134 => D#155
  # DEBUG __n => _38
  # DEBUG this => D#134
  _315 = _268 + pretmp_632;
  _247 = MEM[(int * *)_315];
  # DEBUG __n => _227
  # DEBUG this => D#61
  _314 = _247 + _316;
  _232 = *_314;
  _233 = (double) _232;
  _234 = _231 / _233;
  # DEBUG this => os_34(D)
  # DEBUG __f => _234
  _221 = std::basic_ostream<char>::_M_insert<double> (os_34(D), _234);
  # DEBUG __out => _221
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_221, " ", 1);
  d_236 = d_415 + 1;
  # DEBUG d => d_236
  # DEBUG d => d_236
  _226 = this_36(D)->_nodes;
  if (_226 <= d_236)
    goto <bb 65>;
  else
    goto <bb 68>;

  <bb 68>:
  goto <bb 67>;

  <bb 69>:
  # prephitmp_628 = PHI <pretmp_627(6), _53(65)>
  # prephitmp_709 = PHI <prephitmp_626(6), pretmp_708(65)>
  # DEBUG D#3179 => c_408 + 1
  # DEBUG c => D#3179
  # DEBUG c => D#3179
  if (prephitmp_628 >= prephitmp_709)
    goto <bb 3>;
  else
    goto <bb 70>;

  <bb 70>:
  goto <bb 5>;

}



;; Function virtual void TrafficManager::_UpdateOverallStats() (_ZN14TrafficManager19_UpdateOverallStatsEv, funcdef_no=2484, decl_uid=65011, cgraph_uid=732, symbol_order=733)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
virtual void TrafficManager::_UpdateOverallStats() (struct TrafficManager * const this)
{
  int curr;
  int i;
  const int count;
  int curr;
  int i;
  const int count;
  int curr;
  int i;
  const int count;
  int curr;
  int i;
  const int count;
  double time_delta;
  double rate_avg;
  double rate_max;
  double rate_sum;
  double rate_min;
  int count_max;
  int count_sum;
  int count_min;
  int c;
  long unsigned int _7;
  int _8;
  double & _9;
  struct Stats * _10;
  double _12;
  double _13;
  double _14;
  struct Stats * _16;
  double _18;
  struct Stats * & _19;
  double _20;
  double _21;
  struct Stats * _23;
  double _25;
  double _26;
  double _27;
  double & _29;
  struct Stats * _30;
  double _32;
  double _33;
  double _34;
  struct Stats * _36;
  double _38;
  struct Stats * & _39;
  double _40;
  double _41;
  struct Stats * _43;
  double _45;
  double _46;
  double _47;
  double & _49;
  struct Stats * _50;
  double _52;
  double _53;
  double _54;
  struct Stats * _56;
  double _58;
  struct Stats * & _59;
  double _60;
  double _61;
  struct Stats * _63;
  double _65;
  double _66;
  double _67;
  double & _69;
  struct Stats * _70;
  double _72;
  double _73;
  double _74;
  struct Stats * _76;
  double _78;
  struct Stats * & _79;
  double _80;
  double _81;
  struct Stats * _83;
  double _85;
  double _86;
  double _87;
  double & _89;
  struct Stats * _90;
  double _92;
  double _93;
  double _94;
  int _96;
  int _97;
  int _98;
  double _102;
  double _105;
  double _108;
  int _110;
  double _111;
  struct Stats * & _113;
  double _114;
  double _115;
  double _117;
  double _118;
  double _120;
  double _121;
  double & _123;
  int * const _124;
  double _126;
  double _129;
  double _132;
  double _137;
  double _138;
  double _140;
  double _141;
  struct Stats * & _143;
  double _144;
  double _145;
  int * const _147;
  double _149;
  double _152;
  double _155;
  double _160;
  double _161;
  struct Stats * & _163;
  double _164;
  double _165;
  long unsigned int _167;
  double _168;
  double _169;
  int * const _171;
  double _173;
  double _176;
  double _179;
  int & _184;
  double _185;
  double _186;
  long unsigned int _188;
  double _189;
  double _190;
  double _192;
  double _193;
  int * _202;
  struct vector * _203;
  struct vector * _204;
  struct vector * _205;
  struct vector * _206;
  double * _207;
  double * _208;
  double * _209;
  double * _210;
  double * _211;
  double * _212;
  double * _213;
  double * _214;
  double * _215;
  double * _216;
  double * _217;
  double * _218;
  double * _219;
  double * _220;
  double * _221;
  double * _222;
  double * _223;
  double * _224;
  double * _225;
  double * _226;
  double * _227;
  double * _228;
  double * _229;
  double * _230;
  double * _231;
  struct Stats * * _232;
  struct Stats * * _233;
  struct Stats * * _234;
  struct Stats * * _235;
  struct Stats * * _236;
  struct Stats * * _237;
  struct Stats * * _238;
  struct Stats * * _239;
  struct Stats * * _240;
  struct Stats * * _241;
  struct Stats * * _242;
  struct Stats * * _243;
  struct Stats * * _244;
  struct Stats * & _245;
  double & _246;
  struct Stats * & _247;
  double & _248;
  struct Stats * & _249;
  double & _250;
  struct Stats * & _251;
  double & _252;
  struct Stats * & _253;
  double & _254;
  struct Stats * & _255;
  double & _256;
  double & _257;
  double & _258;
  double & _259;
  struct vector & _260;
  double & _261;
  double & _262;
  double & _263;
  struct vector & _264;
  double & _265;
  double & _266;
  double & _267;
  struct vector & _268;
  double & _269;
  double & _270;
  double & _271;
  long unsigned int _272;
  struct vector & _273;
  double & _274;
  int * const _275;
  int * const _276;
  long int _277;
  long int _278;
  long int _279;
  long int _280;
  long unsigned int _286;
  long unsigned int _287;
  const int & _288;
  int * const _295;
  long int _296;
  long int _297;
  long int _298;
  long int _299;
  long unsigned int _305;
  long unsigned int _306;
  const int & _307;
  int * const _314;
  long int _315;
  long int _316;
  long int _317;
  long int _318;
  long unsigned int _324;
  long unsigned int _325;
  const int & _326;
  int * const _333;
  long int _334;
  long int _335;
  long int _336;
  long int _337;
  long unsigned int _343;
  long unsigned int _344;
  const int & _345;
  int _377;
  int prephitmp_474;
  int pretmp_501;
  int prephitmp_502;

  <bb 2>:
  # DEBUG c => 0
  # DEBUG c => 0
  _377 = this_5(D)->_classes;
  if (_377 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:

  <bb 39>:
  return;

  <bb 4>:

  <bb 5>:
  # c_423 = PHI <0(4), c_201(33)>
  # prephitmp_474 = PHI <_377(4), prephitmp_502(33)>
  # DEBUG c => c_423
  _7 = (long unsigned int) c_423;
  # DEBUG D#81 => &this_5(D)->_measure_stats
  _202 = MEM[(int * *)this_5(D) + 1880B];
  # DEBUG D#63 => D#81
  # DEBUG __n => _7
  # DEBUG this => D#63
  _188 = _7 * 4;
  _184 = _202 + _188;
  _8 = *_184;
  if (_8 == 0)
    goto <bb 32>;
  else
    goto <bb 6>;

  <bb 6>:
  # DEBUG D#82 => &this_5(D)->_plat_stats
  _232 = MEM[(struct Stats * * *)this_5(D) + 856B];
  # DEBUG D#80 => D#82
  # DEBUG __n => _7
  # DEBUG this => D#80
  _167 = _7 * 8;
  _163 = _232 + _167;
  _10 = *_163;
  _12 = Stats::Min (_10);
  # DEBUG D#83 => &this_5(D)->_overall_min_plat
  _207 = MEM[(double * *)this_5(D) + 880B];
  # DEBUG D#69 => D#83
  # DEBUG __n => _7
  # DEBUG this => D#69
  _123 = _207 + _167;
  _13 = *_123;
  _14 = _12 + _13;
  *_123 = _14;
  # DEBUG D#84 => &this_5(D)->_plat_stats
  _233 = MEM[(struct Stats * * *)this_5(D) + 856B];
  # DEBUG D#80 => D#84
  # DEBUG __n => _7
  # DEBUG this => D#80
  _143 = _233 + _167;
  _16 = *_143;
  _18 = Stats::Average (_16);
  # DEBUG D#85 => &this_5(D)->_overall_avg_plat
  _208 = MEM[(double * *)this_5(D) + 904B];
  # DEBUG D#69 => D#85
  # DEBUG __n => _7
  # DEBUG this => D#69
  _89 = _208 + _167;
  _20 = *_89;
  _21 = _18 + _20;
  *_89 = _21;
  # DEBUG D#86 => &this_5(D)->_plat_stats
  _234 = MEM[(struct Stats * * *)this_5(D) + 856B];
  # DEBUG D#80 => D#86
  # DEBUG __n => _7
  # DEBUG this => D#80
  _113 = _234 + _167;
  _23 = *_113;
  _25 = Stats::Max (_23);
  # DEBUG D#87 => &this_5(D)->_overall_max_plat
  _209 = MEM[(double * *)this_5(D) + 928B];
  # DEBUG D#69 => D#87
  # DEBUG __n => _7
  # DEBUG this => D#69
  _69 = _209 + _167;
  _26 = *_69;
  _27 = _25 + _26;
  *_69 = _27;
  # DEBUG D#88 => &this_5(D)->_nlat_stats
  _235 = MEM[(struct Stats * * *)this_5(D) + 952B];
  # DEBUG D#80 => D#88
  # DEBUG __n => _7
  # DEBUG this => D#80
  _79 = _235 + _167;
  _30 = *_79;
  _32 = Stats::Min (_30);
  # DEBUG D#89 => &this_5(D)->_overall_min_nlat
  _210 = MEM[(double * *)this_5(D) + 976B];
  # DEBUG D#69 => D#89
  # DEBUG __n => _7
  # DEBUG this => D#69
  _49 = _210 + _167;
  _33 = *_49;
  _34 = _32 + _33;
  *_49 = _34;
  # DEBUG D#90 => &this_5(D)->_nlat_stats
  _236 = MEM[(struct Stats * * *)this_5(D) + 952B];
  # DEBUG D#80 => D#90
  # DEBUG __n => _7
  # DEBUG this => D#80
  _59 = _236 + _167;
  _36 = *_59;
  _38 = Stats::Average (_36);
  # DEBUG D#91 => &this_5(D)->_overall_avg_nlat
  _211 = MEM[(double * *)this_5(D) + 1000B];
  # DEBUG D#69 => D#91
  # DEBUG __n => _7
  # DEBUG this => D#69
  _29 = _211 + _167;
  _40 = *_29;
  _41 = _38 + _40;
  *_29 = _41;
  # DEBUG D#92 => &this_5(D)->_nlat_stats
  _237 = MEM[(struct Stats * * *)this_5(D) + 952B];
  # DEBUG D#80 => D#92
  # DEBUG __n => _7
  # DEBUG this => D#80
  _39 = _237 + _167;
  _43 = *_39;
  _45 = Stats::Max (_43);
  # DEBUG D#93 => &this_5(D)->_overall_max_nlat
  _212 = MEM[(double * *)this_5(D) + 1024B];
  # DEBUG D#69 => D#93
  # DEBUG __n => _7
  # DEBUG this => D#69
  _9 = _212 + _167;
  _46 = *_9;
  _47 = _45 + _46;
  *_9 = _47;
  # DEBUG D#94 => &this_5(D)->_flat_stats
  _238 = MEM[(struct Stats * * *)this_5(D) + 1048B];
  # DEBUG D#80 => D#94
  # DEBUG __n => _7
  # DEBUG this => D#80
  _19 = _238 + _167;
  _50 = *_19;
  _52 = Stats::Min (_50);
  # DEBUG D#95 => &this_5(D)->_overall_min_flat
  _213 = MEM[(double * *)this_5(D) + 1072B];
  # DEBUG D#69 => D#95
  # DEBUG __n => _7
  # DEBUG this => D#69
  _246 = _213 + _167;
  _53 = *_246;
  _54 = _52 + _53;
  *_246 = _54;
  # DEBUG D#96 => &this_5(D)->_flat_stats
  _239 = MEM[(struct Stats * * *)this_5(D) + 1048B];
  # DEBUG D#80 => D#96
  # DEBUG __n => _7
  # DEBUG this => D#80
  _245 = _239 + _167;
  _56 = *_245;
  _58 = Stats::Average (_56);
  # DEBUG D#97 => &this_5(D)->_overall_avg_flat
  _214 = MEM[(double * *)this_5(D) + 1096B];
  # DEBUG D#69 => D#97
  # DEBUG __n => _7
  # DEBUG this => D#69
  _248 = _214 + _167;
  _60 = *_248;
  _61 = _58 + _60;
  *_248 = _61;
  # DEBUG D#98 => &this_5(D)->_flat_stats
  _240 = MEM[(struct Stats * * *)this_5(D) + 1048B];
  # DEBUG D#80 => D#98
  # DEBUG __n => _7
  # DEBUG this => D#80
  _247 = _240 + _167;
  _63 = *_247;
  _65 = Stats::Max (_63);
  # DEBUG D#99 => &this_5(D)->_overall_max_flat
  _215 = MEM[(double * *)this_5(D) + 1120B];
  # DEBUG D#69 => D#99
  # DEBUG __n => _7
  # DEBUG this => D#69
  _250 = _215 + _167;
  _66 = *_250;
  _67 = _65 + _66;
  *_250 = _67;
  # DEBUG D#100 => &this_5(D)->_frag_stats
  _241 = MEM[(struct Stats * * *)this_5(D) + 1144B];
  # DEBUG D#80 => D#100
  # DEBUG __n => _7
  # DEBUG this => D#80
  _249 = _241 + _167;
  _70 = *_249;
  _72 = Stats::Min (_70);
  # DEBUG D#101 => &this_5(D)->_overall_min_frag
  _216 = MEM[(double * *)this_5(D) + 1168B];
  # DEBUG D#69 => D#101
  # DEBUG __n => _7
  # DEBUG this => D#69
  _252 = _216 + _167;
  _73 = *_252;
  _74 = _72 + _73;
  *_252 = _74;
  # DEBUG D#102 => &this_5(D)->_frag_stats
  _242 = MEM[(struct Stats * * *)this_5(D) + 1144B];
  # DEBUG D#80 => D#102
  # DEBUG __n => _7
  # DEBUG this => D#80
  _251 = _242 + _167;
  _76 = *_251;
  _78 = Stats::Average (_76);
  # DEBUG D#103 => &this_5(D)->_overall_avg_frag
  _217 = MEM[(double * *)this_5(D) + 1192B];
  # DEBUG D#69 => D#103
  # DEBUG __n => _7
  # DEBUG this => D#69
  _254 = _217 + _167;
  _80 = *_254;
  _81 = _78 + _80;
  *_254 = _81;
  # DEBUG D#104 => &this_5(D)->_frag_stats
  _243 = MEM[(struct Stats * * *)this_5(D) + 1144B];
  # DEBUG D#80 => D#104
  # DEBUG __n => _7
  # DEBUG this => D#80
  _253 = _243 + _167;
  _83 = *_253;
  _85 = Stats::Max (_83);
  # DEBUG D#105 => &this_5(D)->_overall_max_frag
  _218 = MEM[(double * *)this_5(D) + 1216B];
  # DEBUG D#69 => D#105
  # DEBUG __n => _7
  # DEBUG this => D#69
  _256 = _218 + _167;
  _86 = *_256;
  _87 = _85 + _86;
  *_256 = _87;
  # DEBUG D#106 => &this_5(D)->_hop_stats
  _244 = MEM[(struct Stats * * *)this_5(D) + 1312B];
  # DEBUG D#80 => D#106
  # DEBUG __n => _7
  # DEBUG this => D#80
  _255 = _244 + _167;
  _90 = *_255;
  _92 = Stats::Average (_90);
  # DEBUG D#107 => &this_5(D)->_overall_hop_stats
  _219 = MEM[(double * *)this_5(D) + 1336B];
  # DEBUG D#69 => D#107
  # DEBUG __n => _7
  # DEBUG this => D#69
  _274 = _219 + _167;
  _93 = *_274;
  _94 = _92 + _93;
  *_274 = _94;
  _96 = this_5(D)->_drain_time;
  _97 = this_5(D)->_reset_time;
  _98 = _96 - _97;
  time_delta_99 = (double) _98;
  # DEBUG time_delta => time_delta_99
  # DEBUG D#108 => &this_5(D)->_sent_flits
  _203 = MEM[(struct vector * *)this_5(D) + 1552B];
  # DEBUG D#67 => D#108
  # DEBUG __n => _7
  # DEBUG this => D#67
  _272 = _7 * 24;
  _273 = _203 + _272;
  # DEBUG stats => _273
  # DEBUG sum => &count_sum
  # DEBUG min => &count_min
  # DEBUG max => &count_max
  # DEBUG max_pos => 0B
  # DEBUG min_pos => 0B
  _124 = MEM[(int * *)_273];
  # DEBUG D#68 => _273
  _333 = MEM[(int * *)_273 + 8B];
  # DEBUG D#68 => _273
  # DEBUG this => D#68
  # DEBUG this => D#68
  _334 = (long int) _333;
  _335 = (long int) _124;
  _336 = _334 - _335;
  _337 = _336 /[ex] 4;
  count_338 = (const int) _337;
  # DEBUG count => count_338
  if (count_338 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("count > 0", "trafficmanager.cpp", 1353, &__PRETTY_FUNCTION__);

  <bb 8>:
  # DEBUG D#61 => _273
  # DEBUG __n => 0
  # DEBUG this => D#61
  count_min_339 = MEM[(const int &)_124];
  # DEBUG count_min => count_min_339
  # DEBUG D#61 => _273
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_max => count_min_339
  # DEBUG D#61 => _273
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_sum => count_min_339
  # DEBUG i => 1
  # DEBUG count_max => count_min_339
  # DEBUG count_sum => count_min_339
  # DEBUG count_min => count_min_339
  # DEBUG i => 1
  if (count_338 <= 1)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:

  <bb 10>:
  # count_min_401 = PHI <count_min_339(9), count_min_134(12)>
  # i_309 = PHI <1(9), i_351(12)>
  # count_max_310 = PHI <count_min_339(9), count_max_340(12)>
  # count_sum_107 = PHI <count_min_339(9), count_sum_350(12)>
  # DEBUG count_max => count_max_310
  # DEBUG count_sum => count_sum_107
  # DEBUG count_min => count_min_401
  # DEBUG i => i_309
  _343 = (long unsigned int) i_309;
  # DEBUG D#61 => _273
  # DEBUG __n => _343
  # DEBUG this => D#61
  _344 = _343 * 4;
  _345 = _124 + _344;
  count_min_346 = *_345;
  # DEBUG curr => count_min_346
  count_min_134 = MIN_EXPR <count_min_346, count_min_401>;
  # DEBUG count_min => count_min_134
  count_max_340 = MAX_EXPR <count_max_310, count_min_346>;
  # DEBUG count_max => count_max_340
  count_sum_350 = count_sum_107 + count_min_346;
  # DEBUG count_sum => count_sum_350
  i_351 = i_309 + 1;
  # DEBUG i => i_351
  # DEBUG count_max => count_max_340
  # DEBUG count_sum => count_sum_350
  # DEBUG count_min => count_min_134
  # DEBUG i => i_351
  if (count_338 <= i_351)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # count_min_465 = PHI <count_min_134(10)>
  # count_max_456 = PHI <count_max_340(10)>
  # count_sum_454 = PHI <count_sum_350(10)>

  <bb 37>:
  goto <bb 13>;

  <bb 12>:
  goto <bb 10>;

  <bb 13>:
  # count_min_290 = PHI <count_min_465(37), count_min_339(8)>
  # count_max_397 = PHI <count_max_456(37), count_min_339(8)>
  # count_sum_416 = PHI <count_sum_454(37), count_min_339(8)>
  _102 = (double) count_min_290;
  rate_min_103 = _102 / time_delta_99;
  # DEBUG rate_min => rate_min_103
  _105 = (double) count_sum_416;
  rate_sum_106 = _105 / time_delta_99;
  # DEBUG rate_sum => rate_sum_106
  _108 = (double) count_max_397;
  rate_max_109 = _108 / time_delta_99;
  # DEBUG rate_max => rate_max_109
  _110 = this_5(D)->_nodes;
  _111 = (double) _110;
  rate_avg_112 = rate_sum_106 / _111;
  # DEBUG rate_avg => rate_avg_112
  # DEBUG D#109 => &this_5(D)->_overall_min_sent
  _220 = MEM[(double * *)this_5(D) + 1576B];
  # DEBUG D#69 => D#109
  # DEBUG __n => _7
  # DEBUG this => D#69
  _271 = _220 + _167;
  _114 = *_271;
  _115 = rate_min_103 + _114;
  *_271 = _115;
  # DEBUG D#110 => &this_5(D)->_overall_avg_sent
  _221 = MEM[(double * *)this_5(D) + 1600B];
  # DEBUG D#69 => D#110
  # DEBUG __n => _7
  # DEBUG this => D#69
  _270 = _221 + _167;
  _117 = *_270;
  _118 = rate_avg_112 + _117;
  *_270 = _118;
  # DEBUG D#111 => &this_5(D)->_overall_max_sent
  _222 = MEM[(double * *)this_5(D) + 1624B];
  # DEBUG D#69 => D#111
  # DEBUG __n => _7
  # DEBUG this => D#69
  _269 = _222 + _167;
  _120 = *_269;
  _121 = rate_max_109 + _120;
  *_269 = _121;
  # DEBUG D#112 => &this_5(D)->_sent_packets
  _204 = MEM[(struct vector * *)this_5(D) + 1360B];
  # DEBUG D#67 => D#112
  # DEBUG __n => _7
  # DEBUG this => D#67
  _268 = _204 + _272;
  # DEBUG stats => _268
  # DEBUG sum => &count_sum
  # DEBUG min => &count_min
  # DEBUG max => &count_max
  # DEBUG max_pos => 0B
  # DEBUG min_pos => 0B
  _147 = MEM[(int * *)_268];
  # DEBUG D#68 => _268
  _314 = MEM[(int * *)_268 + 8B];
  # DEBUG D#68 => _268
  # DEBUG this => D#68
  # DEBUG this => D#68
  _315 = (long int) _314;
  _316 = (long int) _147;
  _317 = _315 - _316;
  _318 = _317 /[ex] 4;
  count_319 = (const int) _318;
  # DEBUG count => count_319
  if (count_319 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG D#61 => _268
  # DEBUG __n => 0
  # DEBUG this => D#61
  count_min_320 = MEM[(const int &)_147];
  # DEBUG count_min => count_min_320
  # DEBUG D#61 => _268
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_max => count_min_320
  # DEBUG D#61 => _268
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_sum => count_min_320
  # DEBUG i => 1
  # DEBUG count_max => count_min_320
  # DEBUG count_sum => count_min_320
  # DEBUG count_min => count_min_320
  # DEBUG i => 1
  if (count_319 <= 1)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # count_min_404 = PHI <count_min_320(15), count_min_158(18)>
  # i_395 = PHI <1(15), i_332(18)>
  # count_max_172 = PHI <count_min_320(15), count_max_135(18)>
  # count_sum_414 = PHI <count_min_320(15), count_sum_331(18)>
  # DEBUG count_max => count_max_172
  # DEBUG count_sum => count_sum_414
  # DEBUG count_min => count_min_404
  # DEBUG i => i_395
  _324 = (long unsigned int) i_395;
  # DEBUG D#61 => _268
  # DEBUG __n => _324
  # DEBUG this => D#61
  _325 = _324 * 4;
  _326 = _147 + _325;
  count_min_327 = *_326;
  # DEBUG curr => count_min_327
  count_min_158 = MIN_EXPR <count_min_327, count_min_404>;
  # DEBUG count_min => count_min_158
  count_max_135 = MAX_EXPR <count_max_172, count_min_327>;
  # DEBUG count_max => count_max_135
  count_sum_331 = count_min_327 + count_sum_414;
  # DEBUG count_sum => count_sum_331
  i_332 = i_395 + 1;
  # DEBUG i => i_332
  # DEBUG count_max => count_max_135
  # DEBUG count_sum => count_sum_331
  # DEBUG count_min => count_min_158
  # DEBUG i => i_332
  if (count_319 <= i_332)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # count_max_464 = PHI <count_max_135(16)>
  # count_min_463 = PHI <count_min_158(16)>
  # count_sum_457 = PHI <count_sum_331(16)>

  <bb 36>:
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # count_min_402 = PHI <count_min_463(36), count_min_320(14)>
  # count_max_396 = PHI <count_max_464(36), count_min_320(14)>
  # count_sum_415 = PHI <count_sum_457(36), count_min_320(14)>
  _126 = (double) count_min_402;
  rate_min_127 = _126 / time_delta_99;
  # DEBUG rate_min => rate_min_127
  _129 = (double) count_sum_415;
  rate_sum_130 = _129 / time_delta_99;
  # DEBUG rate_sum => rate_sum_130
  _132 = (double) count_max_396;
  rate_max_133 = _132 / time_delta_99;
  # DEBUG rate_max => rate_max_133
  rate_avg_136 = rate_sum_130 / _111;
  # DEBUG rate_avg => rate_avg_136
  # DEBUG D#113 => &this_5(D)->_overall_min_sent_packets
  _223 = MEM[(double * *)this_5(D) + 1384B];
  # DEBUG D#69 => D#113
  # DEBUG __n => _7
  # DEBUG this => D#69
  _267 = _223 + _167;
  _137 = *_267;
  _138 = rate_min_127 + _137;
  *_267 = _138;
  # DEBUG D#114 => &this_5(D)->_overall_avg_sent_packets
  _224 = MEM[(double * *)this_5(D) + 1408B];
  # DEBUG D#69 => D#114
  # DEBUG __n => _7
  # DEBUG this => D#69
  _266 = _224 + _167;
  _140 = *_266;
  _141 = rate_avg_136 + _140;
  *_266 = _141;
  # DEBUG D#115 => &this_5(D)->_overall_max_sent_packets
  _225 = MEM[(double * *)this_5(D) + 1432B];
  # DEBUG D#69 => D#115
  # DEBUG __n => _7
  # DEBUG this => D#69
  _265 = _225 + _167;
  _144 = *_265;
  _145 = rate_max_133 + _144;
  *_265 = _145;
  # DEBUG D#116 => &this_5(D)->_accepted_flits
  _205 = MEM[(struct vector * *)this_5(D) + 1648B];
  # DEBUG D#67 => D#116
  # DEBUG __n => _7
  # DEBUG this => D#67
  _264 = _205 + _272;
  # DEBUG stats => _264
  # DEBUG sum => &count_sum
  # DEBUG min => &count_min
  # DEBUG max => &count_max
  # DEBUG max_pos => 0B
  # DEBUG min_pos => 0B
  _171 = MEM[(int * *)_264];
  # DEBUG D#68 => _264
  _295 = MEM[(int * *)_264 + 8B];
  # DEBUG D#68 => _264
  # DEBUG this => D#68
  # DEBUG this => D#68
  _296 = (long int) _295;
  _297 = (long int) _171;
  _298 = _296 - _297;
  _299 = _298 /[ex] 4;
  count_300 = (const int) _299;
  # DEBUG count => count_300
  if (count_300 <= 0)
    goto <bb 7>;
  else
    goto <bb 20>;

  <bb 20>:
  # DEBUG D#61 => _264
  # DEBUG __n => 0
  # DEBUG this => D#61
  count_min_301 = MEM[(const int &)_171];
  # DEBUG count_min => count_min_301
  # DEBUG D#61 => _264
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_max => count_min_301
  # DEBUG D#61 => _264
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_sum => count_min_301
  # DEBUG i => 1
  # DEBUG count_max => count_min_301
  # DEBUG count_sum => count_min_301
  # DEBUG count_min => count_min_301
  # DEBUG i => 1
  if (count_300 <= 1)
    goto <bb 25>;
  else
    goto <bb 21>;

  <bb 21>:

  <bb 22>:
  # count_min_292 = PHI <count_min_301(21), count_min_341(24)>
  # i_394 = PHI <1(21), i_313(24)>
  # count_max_175 = PHI <count_min_301(21), count_max_283(24)>
  # count_sum_413 = PHI <count_min_301(21), count_sum_312(24)>
  # DEBUG count_max => count_max_175
  # DEBUG count_sum => count_sum_413
  # DEBUG count_min => count_min_292
  # DEBUG i => i_394
  _305 = (long unsigned int) i_394;
  # DEBUG D#61 => _264
  # DEBUG __n => _305
  # DEBUG this => D#61
  _306 = _305 * 4;
  _307 = _171 + _306;
  count_min_308 = *_307;
  # DEBUG curr => count_min_308
  count_min_341 = MIN_EXPR <count_min_292, count_min_308>;
  # DEBUG count_min => count_min_341
  count_max_283 = MAX_EXPR <count_max_175, count_min_308>;
  # DEBUG count_max => count_max_283
  count_sum_312 = count_min_308 + count_sum_413;
  # DEBUG count_sum => count_sum_312
  i_313 = i_394 + 1;
  # DEBUG i => i_313
  # DEBUG count_max => count_max_283
  # DEBUG count_sum => count_sum_312
  # DEBUG count_min => count_min_341
  # DEBUG i => i_313
  if (count_300 <= i_313)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # count_max_462 = PHI <count_max_283(22)>
  # count_sum_459 = PHI <count_sum_312(22)>
  # count_min_455 = PHI <count_min_341(22)>

  <bb 35>:
  goto <bb 25>;

  <bb 24>:
  goto <bb 22>;

  <bb 25>:
  # count_min_432 = PHI <count_min_455(35), count_min_301(20)>
  # count_max_367 = PHI <count_max_462(35), count_min_301(20)>
  # count_sum_428 = PHI <count_sum_459(35), count_min_301(20)>
  _149 = (double) count_min_432;
  rate_min_150 = _149 / time_delta_99;
  # DEBUG rate_min => rate_min_150
  _152 = (double) count_sum_428;
  rate_sum_153 = _152 / time_delta_99;
  # DEBUG rate_sum => rate_sum_153
  _155 = (double) count_max_367;
  rate_max_156 = _155 / time_delta_99;
  # DEBUG rate_max => rate_max_156
  rate_avg_159 = rate_sum_153 / _111;
  # DEBUG rate_avg => rate_avg_159
  # DEBUG D#117 => &this_5(D)->_overall_min_accepted
  _226 = MEM[(double * *)this_5(D) + 1672B];
  # DEBUG D#69 => D#117
  # DEBUG __n => _7
  # DEBUG this => D#69
  _263 = _226 + _167;
  _160 = *_263;
  _161 = rate_min_150 + _160;
  *_263 = _161;
  # DEBUG D#118 => &this_5(D)->_overall_avg_accepted
  _227 = MEM[(double * *)this_5(D) + 1696B];
  # DEBUG D#69 => D#118
  # DEBUG __n => _7
  # DEBUG this => D#69
  _262 = _227 + _167;
  _164 = *_262;
  _165 = rate_avg_159 + _164;
  *_262 = _165;
  # DEBUG D#119 => &this_5(D)->_overall_max_accepted
  _228 = MEM[(double * *)this_5(D) + 1720B];
  # DEBUG D#69 => D#119
  # DEBUG __n => _7
  # DEBUG this => D#69
  _261 = _228 + _167;
  _168 = *_261;
  _169 = rate_max_156 + _168;
  *_261 = _169;
  # DEBUG D#120 => &this_5(D)->_accepted_packets
  _206 = MEM[(struct vector * *)this_5(D) + 1456B];
  # DEBUG D#67 => D#120
  # DEBUG __n => _7
  # DEBUG this => D#67
  _260 = _206 + _272;
  # DEBUG stats => _260
  # DEBUG sum => &count_sum
  # DEBUG min => &count_min
  # DEBUG max => &count_max
  # DEBUG max_pos => 0B
  # DEBUG min_pos => 0B
  _275 = MEM[(int * *)_260];
  # DEBUG D#68 => _260
  _276 = MEM[(int * *)_260 + 8B];
  # DEBUG D#68 => _260
  # DEBUG this => D#68
  # DEBUG this => D#68
  _277 = (long int) _276;
  _278 = (long int) _275;
  _279 = _277 - _278;
  _280 = _279 /[ex] 4;
  count_281 = (const int) _280;
  # DEBUG count => count_281
  if (count_281 <= 0)
    goto <bb 7>;
  else
    goto <bb 26>;

  <bb 26>:
  # DEBUG D#61 => _260
  # DEBUG __n => 0
  # DEBUG this => D#61
  count_min_282 = MEM[(const int &)_275];
  # DEBUG count_min => count_min_282
  # DEBUG D#61 => _260
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_max => count_min_282
  # DEBUG D#61 => _260
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_sum => count_min_282
  # DEBUG i => 1
  # DEBUG count_max => count_min_282
  # DEBUG count_sum => count_min_282
  # DEBUG count_min => count_min_282
  # DEBUG i => 1
  if (count_281 <= 1)
    goto <bb 31>;
  else
    goto <bb 27>;

  <bb 27>:

  <bb 28>:
  # i_393 = PHI <1(27), i_294(30)>
  # count_max_410 = PHI <count_min_282(27), count_max_321(30)>
  # count_sum_311 = PHI <count_min_282(27), count_sum_293(30)>
  # count_min_366 = PHI <count_min_282(27), count_min_302(30)>
  # DEBUG count_max => count_max_410
  # DEBUG count_sum => count_sum_311
  # DEBUG count_min => count_min_366
  # DEBUG i => i_393
  _286 = (long unsigned int) i_393;
  # DEBUG D#61 => _260
  # DEBUG __n => _286
  # DEBUG this => D#61
  _287 = _286 * 4;
  _288 = _275 + _287;
  count_min_289 = *_288;
  # DEBUG curr => count_min_289
  count_min_302 = MIN_EXPR <count_min_289, count_min_366>;
  # DEBUG count_min => count_min_302
  count_max_321 = MAX_EXPR <count_min_289, count_max_410>;
  # DEBUG count_max => count_max_321
  count_sum_293 = count_min_289 + count_sum_311;
  # DEBUG count_sum => count_sum_293
  i_294 = i_393 + 1;
  # DEBUG i => i_294
  # DEBUG count_max => count_max_321
  # DEBUG count_sum => count_sum_293
  # DEBUG count_min => count_min_302
  # DEBUG i => i_294
  if (count_281 <= i_294)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # count_sum_461 = PHI <count_sum_293(28)>
  # count_min_460 = PHI <count_min_302(28)>
  # count_max_458 = PHI <count_max_321(28)>

  <bb 34>:
  goto <bb 31>;

  <bb 30>:
  goto <bb 28>;

  <bb 31>:
  # count_max_104 = PHI <count_max_458(34), count_min_282(26)>
  # count_sum_427 = PHI <count_sum_461(34), count_min_282(26)>
  # count_min_412 = PHI <count_min_460(34), count_min_282(26)>

  <bb 38>:
  _173 = (double) count_min_412;
  rate_min_174 = _173 / time_delta_99;
  # DEBUG rate_min => rate_min_174
  _176 = (double) count_sum_427;
  rate_sum_177 = _176 / time_delta_99;
  # DEBUG rate_sum => rate_sum_177
  _179 = (double) count_max_104;
  rate_max_180 = _179 / time_delta_99;
  # DEBUG rate_max => rate_max_180
  rate_avg_183 = rate_sum_177 / _111;
  # DEBUG rate_avg => rate_avg_183
  # DEBUG D#121 => &this_5(D)->_overall_min_accepted_packets
  _229 = MEM[(double * *)this_5(D) + 1480B];
  # DEBUG D#69 => D#121
  # DEBUG __n => _7
  # DEBUG this => D#69
  _259 = _229 + _167;
  _185 = *_259;
  _186 = rate_min_174 + _185;
  *_259 = _186;
  # DEBUG D#122 => &this_5(D)->_overall_avg_accepted_packets
  _230 = MEM[(double * *)this_5(D) + 1504B];
  # DEBUG D#69 => D#122
  # DEBUG __n => _7
  # DEBUG this => D#69
  _258 = _230 + _167;
  _189 = *_258;
  _190 = rate_avg_183 + _189;
  *_258 = _190;
  # DEBUG D#123 => &this_5(D)->_overall_max_accepted_packets
  _231 = MEM[(double * *)this_5(D) + 1528B];
  # DEBUG D#69 => D#123
  # DEBUG __n => _7
  # DEBUG this => D#69
  _257 = _231 + _167;
  _192 = *_257;
  _193 = rate_max_180 + _192;
  *_257 = _193;
  # DEBUG D#3192 => {CLOBBER}
  # DEBUG count_min => D#3192
  # DEBUG D#3193 => {CLOBBER}
  # DEBUG count_sum => D#3193
  # DEBUG D#3194 => {CLOBBER}
  # DEBUG count_max => D#3194
  pretmp_501 = this_5(D)->_classes;

  <bb 32>:
  # prephitmp_502 = PHI <pretmp_501(38), prephitmp_474(5)>
  c_201 = c_423 + 1;
  # DEBUG c => c_201
  # DEBUG c => c_201
  if (c_201 >= prephitmp_502)
    goto <bb 3>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 5>;

}



;; Function void TrafficManager::_DisplayRemaining(std::ostream&) const (_ZNK14TrafficManager17_DisplayRemainingERSo.constprop.674, funcdef_no=6230, decl_uid=156140, cgraph_uid=1078, symbol_order=9135)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void TrafficManager::_DisplayRemaining(std::ostream&) const (const struct TrafficManager * const this)
{
  char_type D.157429;
  char __c;
  char_type D.157426;
  char __c;
  char_type D.157423;
  struct basic_ostream & D.157417;
  struct basic_ostream & D.157414;
  struct basic_ostream & D.157410;
  char_type D.157406;
  char __c;
  char_type D.157403;
  char __c;
  char_type D.157400;
  struct basic_ostream & D.157394;
  struct basic_ostream & D.157391;
  struct basic_ostream & D.157387;
  struct basic_ostream & D.157383;
  char_type D.157379;
  char __c;
  char_type D.157376;
  char __c;
  char_type D.157373;
  struct basic_ostream & D.157367;
  struct basic_ostream & D.157364;
  int c;
  int i;
  const struct _Rb_tree_node_base * const iter$_M_node;
  int _2;
  int prephitmp_3;
  struct basic_ostream & _4;
  long unsigned int _5;
  struct map * const _6;
  long unsigned int _7;
  const struct map & _8;
  struct map * const _10;
  const struct map & _11;
  const struct _Rb_tree_node_base * _12;
  const struct map & _13;
  struct map * const prephitmp_14;
  int _15;
  int _16;
  struct basic_ostream & _17;
  const size_type _20;
  const size_type _23;
  struct __ostream_type & _24;
  struct map * const _25;
  const struct map & _26;
  struct map * const _28;
  const struct map & _29;
  const struct _Rb_tree_node_base * _30;
  struct map * const pretmp_31;
  int pretmp_32;
  struct map * const prephitmp_33;
  int _34;
  struct basic_ostream & _35;
  const size_type _38;
  const size_type _41;
  struct __ostream_type & _42;
  int pretmp_45;
  const struct __ctype_type * _53;
  int (*__vtbl_ptr_type) () * _54;
  struct map * const prephitmp_56;
  const struct __ctype_type * _61;
  int (*__vtbl_ptr_type) () * _62;
  int (*__vtbl_ptr_type) () * _65;
  const struct __ctype_type * _69;
  long int _72;
  sizetype _73;
  struct basic_ios * _74;
  struct basic_ostream & _77;
  bool _78;
  char _79;
  const struct map & _80;
  char_type _82;
  int pretmp_84;
  const struct map & _86;
  int (*__vtbl_ptr_type) () * _87;
  int (*__vtbl_ptr_type) () _88;
  int pretmp_90;
  const struct map & _91;
  void * PROF_92;
  char_type _94;
  struct map * const pretmp_98;
  int pretmp_99;
  long int _101;
  sizetype _102;
  struct basic_ios * _103;
  bool _104;
  struct basic_ostream & _106;
  bool _107;
  char _108;
  int prephitmp_109;
  char_type _111;
  int (*__vtbl_ptr_type) () * _116;
  int (*__vtbl_ptr_type) () _117;
  const struct _Rb_tree_node_base * _119;
  void * PROF_121;
  char_type _123;
  long int _129;
  sizetype _130;
  struct basic_ios * _131;
  struct basic_ostream & _134;
  struct map * const pretmp_135;
  char _136;
  char_type _139;
  bool _141;
  int (*__vtbl_ptr_type) () * _144;
  int (*__vtbl_ptr_type) () _145;
  struct map * const prephitmp_148;
  void * PROF_149;
  char_type _151;
  int prephitmp_160;
  bool _168;
  int pretmp_170;
  struct map * const pretmp_175;
  bool _178;
  const struct _Rb_tree_node_base * _188;

  <bb 2>:
  # DEBUG os => &cout
  # DEBUG c => 0
  _15 = this_1(D)->_classes;
  if (_15 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:

  <bb 39>:
  return;

  <bb 4>:

  <bb 5>:
  # c_192 = PHI <0(4), c_43(26)>
  # DEBUG c => c_192
  # DEBUG this => &iter
  # DEBUG iter$_M_node => 0B
  # DEBUG __out => &cout
  # DEBUG __s => "Class "
  # DEBUG __s => "Class "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Class ", 6);
  _4 = std::basic_ostream<char>::operator<< (&cout, c_192);
  # DEBUG __out => _4
  # DEBUG __s => ":"
  # DEBUG __s => ":"
  std::__ostream_insert<char, std::char_traits<char> > (_4, ":", 1);
  # DEBUG this => _4
  # DEBUG __pf => endl
  # DEBUG __os => _4
  _54 = _4->_vptr.basic_ostream;
  _72 = MEM[(long int *)_54 + -24B];
  _73 = (sizetype) _72;
  _74 = _4 + _73;
  # DEBUG this => _74
  # DEBUG __c => 10
  _53 = MEM[(const struct basic_ios *)_74]._M_ctype;
  # DEBUG __f => _53
  if (_53 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  std::__throw_bad_cast ();

  <bb 7>:
  # DEBUG this => _53
  # DEBUG __c => 10
  _79 = MEM[(const struct ctype *)_53]._M_widen_ok;
  if (_79 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _82 = MEM[(const struct ctype *)_53]._M_widen[10];
  pretmp_45 = (int) _82;
  goto <bb 11>;

  <bb 9>:
  # DEBUG this => _53
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_53);
  _87 = MEM[(const struct ctype *)_53].D.16885._vptr.facet;
  _88 = MEM[(int (*__vtbl_ptr_type) () *)_87 + 48B];
  PROF_92 = [obj_type_ref] OBJ_TYPE_REF(_88;(const struct ctype)_53->6);
  if (PROF_92 == do_widen)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  _94 = OBJ_TYPE_REF(_88;(const struct ctype)_53->6) (_53, 10);
  pretmp_32 = (int) _94;

  <bb 11>:
  # prephitmp_3 = PHI <pretmp_45(8), 10(9), pretmp_32(10)>
  _77 = std::basic_ostream<char>::put (_4, prephitmp_3);
  # DEBUG __os => _77
  std::basic_ostream<char>::flush (_77);
  # DEBUG __s => "Remaining flits: "
  # DEBUG __out => &cout
  # DEBUG __s => "Remaining flits: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Remaining flits: ", 17);
  _5 = (long unsigned int) c_192;
  # DEBUG D#363 => &this_1(D)->_total_in_flight_flits
  _6 = MEM[(struct map * *)this_1(D) + 672B];
  # DEBUG D#129 => D#363
  # DEBUG __n => _5
  # DEBUG this => D#129
  _7 = _5 * 48;
  _8 = _6 + _7;
  # DEBUG this => NULL
  iter$_M_node_9 = MEM[(struct _Rb_tree_node_base * *)_8 + 24B];
  # DEBUG D#337 => D#338
  # DEBUG this => D#337
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_9
  # DEBUG iter$_M_node => iter$_M_node_9
  # DEBUG i => 0
  # DEBUG iter$_M_node => iter$_M_node_9
  # DEBUG i => 0
  # DEBUG D#365 => &this_1(D)->_total_in_flight_flits
  # DEBUG D#129 => D#365
  # DEBUG __n => _5
  # DEBUG this => D#129
  # DEBUG this => NULL
  # DEBUG this => D#336
  _119 = &MEM[(const struct _Rb_tree *)_8]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _119
  # DEBUG this => &iter
  # DEBUG __x => NULL
  if (iter$_M_node_9 != _119)
    goto <bb 27>;
  else
    goto <bb 31>;

  <bb 12>:
  # DEBUG __s => "[...] "
  # DEBUG __out => &cout
  # DEBUG __s => "[...] "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "[...] ", 6);
  pretmp_31 = MEM[(struct map * *)this_1(D) + 672B];
  pretmp_175 = pretmp_31 + _7;

  <bb 13>:
  # prephitmp_148 = PHI <prephitmp_14(31), pretmp_175(12)>
  # DEBUG D#367 => &this_1(D)->_total_in_flight_flits
  # DEBUG D#129 => D#367
  # DEBUG __n => _5
  # DEBUG this => D#129
  # DEBUG this => NULL
  _23 = MEM[(long unsigned int *)prephitmp_148 + 40B];
  # DEBUG D#229 => D#230
  # DEBUG this => D#229
  # DEBUG __out => &cout
  # DEBUG __s => "("
  # DEBUG __s => "("
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "(", 1);
  # DEBUG this => &cout
  # DEBUG __n => _23
  _24 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, _23);
  # DEBUG __out => _24
  # DEBUG __s => " flits)"
  # DEBUG __s => " flits)"
  std::__ostream_insert<char, std::char_traits<char> > (_24, " flits)", 7);
  # DEBUG this => _24
  # DEBUG __pf => endl
  # DEBUG __os => _24
  _62 = MEM[(struct basic_ostream *)_24]._vptr.basic_ostream;
  _101 = MEM[(long int *)_62 + -24B];
  _102 = (sizetype) _101;
  _103 = _24 + _102;
  # DEBUG this => _103
  # DEBUG __c => 10
  _61 = MEM[(const struct basic_ios *)_103]._M_ctype;
  # DEBUG __f => _61
  if (_61 == 0B)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => _61
  # DEBUG __c => 10
  _108 = MEM[(const struct ctype *)_61]._M_widen_ok;
  if (_108 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _111 = MEM[(const struct ctype *)_61]._M_widen[10];
  pretmp_90 = (int) _111;
  goto <bb 18>;

  <bb 16>:
  # DEBUG this => _61
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_61);
  _116 = MEM[(const struct ctype *)_61].D.16885._vptr.facet;
  _117 = MEM[(int (*__vtbl_ptr_type) () *)_116 + 48B];
  PROF_121 = [obj_type_ref] OBJ_TYPE_REF(_117;(const struct ctype)_61->6);
  if (PROF_121 == do_widen)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  _123 = OBJ_TYPE_REF(_117;(const struct ctype)_61->6) (_61, 10);
  pretmp_84 = (int) _123;

  <bb 18>:
  # prephitmp_160 = PHI <pretmp_90(15), 10(16), pretmp_84(17)>
  _106 = std::basic_ostream<char>::put (_24, prephitmp_160);
  # DEBUG __os => _106
  std::basic_ostream<char>::flush (_106);
  # DEBUG __s => "Measured flits: "
  # DEBUG __out => &cout
  # DEBUG __s => "Measured flits: "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Measured flits: ", 16);
  # DEBUG D#368 => &this_1(D)->_measured_in_flight_flits
  _25 = MEM[(struct map * *)this_1(D) + 696B];
  # DEBUG D#129 => D#368
  # DEBUG __n => _5
  # DEBUG this => D#129
  _26 = _25 + _7;
  # DEBUG this => NULL
  iter$_M_node_27 = MEM[(struct _Rb_tree_node_base * *)_26 + 24B];
  # DEBUG D#337 => D#338
  # DEBUG this => D#337
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_27
  # DEBUG iter$_M_node => iter$_M_node_27
  # DEBUG i => 0
  # DEBUG iter$_M_node => iter$_M_node_27
  # DEBUG i => 0
  # DEBUG D#370 => &this_1(D)->_measured_in_flight_flits
  # DEBUG D#129 => D#370
  # DEBUG __n => _5
  # DEBUG this => D#129
  # DEBUG this => NULL
  # DEBUG this => D#336
  _188 = &MEM[(const struct _Rb_tree *)_26]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _188
  # DEBUG this => &iter
  # DEBUG __x => NULL
  if (iter$_M_node_27 != _188)
    goto <bb 32>;
  else
    goto <bb 36>;

  <bb 19>:
  # DEBUG __s => "[...] "
  # DEBUG __out => &cout
  # DEBUG __s => "[...] "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "[...] ", 6);
  pretmp_135 = MEM[(struct map * *)this_1(D) + 696B];
  pretmp_98 = pretmp_135 + _7;

  <bb 20>:
  # prephitmp_56 = PHI <prephitmp_33(36), pretmp_98(19)>
  # DEBUG D#372 => &this_1(D)->_measured_in_flight_flits
  # DEBUG D#129 => D#372
  # DEBUG __n => _5
  # DEBUG this => D#129
  # DEBUG this => NULL
  _41 = MEM[(long unsigned int *)prephitmp_56 + 40B];
  # DEBUG D#229 => D#230
  # DEBUG this => D#229
  # DEBUG __out => &cout
  # DEBUG __s => "("
  # DEBUG __s => "("
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "(", 1);
  # DEBUG this => &cout
  # DEBUG __n => _41
  _42 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, _41);
  # DEBUG __out => _42
  # DEBUG __s => " flits)"
  # DEBUG __s => " flits)"
  std::__ostream_insert<char, std::char_traits<char> > (_42, " flits)", 7);
  # DEBUG this => _42
  # DEBUG __pf => endl
  # DEBUG __os => _42
  _65 = MEM[(struct basic_ostream *)_42]._vptr.basic_ostream;
  _129 = MEM[(long int *)_65 + -24B];
  _130 = (sizetype) _129;
  _131 = _42 + _130;
  # DEBUG this => _131
  # DEBUG __c => 10
  _69 = MEM[(const struct basic_ios *)_131]._M_ctype;
  # DEBUG __f => _69
  if (_69 == 0B)
    goto <bb 6>;
  else
    goto <bb 21>;

  <bb 21>:
  # DEBUG this => _69
  # DEBUG __c => 10
  _136 = MEM[(const struct ctype *)_69]._M_widen_ok;
  if (_136 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _139 = MEM[(const struct ctype *)_69]._M_widen[10];
  pretmp_99 = (int) _139;
  goto <bb 25>;

  <bb 23>:
  # DEBUG this => _69
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_69);
  _144 = MEM[(const struct ctype *)_69].D.16885._vptr.facet;
  _145 = MEM[(int (*__vtbl_ptr_type) () *)_144 + 48B];
  PROF_149 = [obj_type_ref] OBJ_TYPE_REF(_145;(const struct ctype)_69->6);
  if (PROF_149 == do_widen)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:
  _151 = OBJ_TYPE_REF(_145;(const struct ctype)_69->6) (_69, 10);
  pretmp_170 = (int) _151;

  <bb 25>:
  # prephitmp_109 = PHI <pretmp_99(22), 10(23), pretmp_170(24)>
  _134 = std::basic_ostream<char>::put (_42, prephitmp_109);
  # DEBUG __os => _134
  std::basic_ostream<char>::flush (_134);
  # DEBUG D#373 => {CLOBBER}
  # DEBUG iter$_M_node => D#373
  c_43 = c_192 + 1;
  # DEBUG c => c_43
  # DEBUG c => c_43
  _2 = this_1(D)->_classes;
  if (_2 <= c_43)
    goto <bb 3>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 5>;

  <bb 27>:

  <bb 28>:
  # iter$_M_node_81 = PHI <iter$_M_node_9(27), iter$_M_node_18(30)>
  # i_83 = PHI <0(27), i_19(30)>
  # DEBUG iter$_M_node => iter$_M_node_81
  # DEBUG i => i_83
  # DEBUG D#365 => &this_1(D)->_total_in_flight_flits
  # DEBUG D#129 => D#365
  # DEBUG __n => _5
  # DEBUG this => D#129
  # DEBUG this => NULL
  # DEBUG this => D#336
  # DEBUG this => NULL
  # DEBUG __x => _119
  # DEBUG this => &iter
  # DEBUG __x => NULL
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_81
  # DEBUG D#364 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_81]._M_value_field
  # DEBUG __r => D#364
  _16 = MEM[(const struct pair *)iter$_M_node_81 + 32B].first;
  _17 = std::basic_ostream<char>::operator<< (&cout, _16);
  # DEBUG __out => _17
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_17, " ", 1);
  # DEBUG this => &iter
  iter$_M_node_18 = std::_Rb_tree_increment (iter$_M_node_81);
  # DEBUG iter$_M_node => iter$_M_node_18
  i_19 = i_83 + 1;
  # DEBUG i => i_19
  # DEBUG iter$_M_node => iter$_M_node_18
  # DEBUG i => i_19
  # DEBUG D#365 => &this_1(D)->_total_in_flight_flits
  _10 = MEM[(struct map * *)this_1(D) + 672B];
  # DEBUG D#129 => D#365
  # DEBUG __n => _5
  # DEBUG this => D#129
  _11 = _10 + _7;
  # DEBUG this => NULL
  # DEBUG this => D#336
  _12 = &MEM[(const struct _Rb_tree *)_11]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _12
  # DEBUG this => &iter
  # DEBUG __x => NULL
  _104 = i_19 <= 9;
  _168 = _12 != iter$_M_node_18;
  _178 = _104 & _168;
  if (_178 != 0)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  # _91 = PHI <_11(28)>

  <bb 38>:
  goto <bb 31>;

  <bb 30>:
  goto <bb 28>;

  <bb 31>:
  # _80 = PHI <_91(38), _8(11)>
  # prephitmp_14 = PHI <_91(38), _8(11)>
  # DEBUG D#366 => &this_1(D)->_total_in_flight_flits
  # DEBUG D#129 => D#366
  # DEBUG __n => _5
  # DEBUG this => D#129
  # DEBUG this => NULL
  _20 = MEM[(long unsigned int *)_80 + 40B];
  # DEBUG D#229 => D#230
  # DEBUG this => D#229
  if (_20 > 10)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 32>:

  <bb 33>:
  # iter$_M_node_89 = PHI <iter$_M_node_27(32), iter$_M_node_36(35)>
  # i_93 = PHI <0(32), i_37(35)>
  # DEBUG iter$_M_node => iter$_M_node_89
  # DEBUG i => i_93
  # DEBUG D#370 => &this_1(D)->_measured_in_flight_flits
  # DEBUG D#129 => D#370
  # DEBUG __n => _5
  # DEBUG this => D#129
  # DEBUG this => NULL
  # DEBUG this => D#336
  # DEBUG this => NULL
  # DEBUG __x => _188
  # DEBUG this => &iter
  # DEBUG __x => NULL
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_89
  # DEBUG D#369 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_89]._M_value_field
  # DEBUG __r => D#369
  _34 = MEM[(const struct pair *)iter$_M_node_89 + 32B].first;
  _35 = std::basic_ostream<char>::operator<< (&cout, _34);
  # DEBUG __out => _35
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_35, " ", 1);
  # DEBUG this => &iter
  iter$_M_node_36 = std::_Rb_tree_increment (iter$_M_node_89);
  # DEBUG iter$_M_node => iter$_M_node_36
  i_37 = i_93 + 1;
  # DEBUG i => i_37
  # DEBUG iter$_M_node => iter$_M_node_36
  # DEBUG i => i_37
  # DEBUG D#370 => &this_1(D)->_measured_in_flight_flits
  _28 = MEM[(struct map * *)this_1(D) + 696B];
  # DEBUG D#129 => D#370
  # DEBUG __n => _5
  # DEBUG this => D#129
  _29 = _28 + _7;
  # DEBUG this => NULL
  # DEBUG this => D#336
  _30 = &MEM[(const struct _Rb_tree *)_29]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _30
  # DEBUG this => &iter
  # DEBUG __x => NULL
  _141 = i_37 <= 9;
  _78 = _30 != iter$_M_node_36;
  _107 = _78 & _141;
  if (_107 != 0)
    goto <bb 35>;
  else
    goto <bb 34>;

  <bb 34>:
  # _13 = PHI <_29(33)>

  <bb 37>:
  goto <bb 36>;

  <bb 35>:
  goto <bb 33>;

  <bb 36>:
  # _86 = PHI <_13(37), _26(18)>
  # prephitmp_33 = PHI <_13(37), _26(18)>
  # DEBUG D#371 => &this_1(D)->_measured_in_flight_flits
  # DEBUG D#129 => D#371
  # DEBUG __n => _5
  # DEBUG this => D#129
  # DEBUG this => NULL
  _38 = MEM[(long unsigned int *)_86 + 40B];
  # DEBUG D#229 => D#230
  # DEBUG this => D#229
  if (_38 > 10)
    goto <bb 19>;
  else
    goto <bb 20>;

}



;; Function virtual void TrafficManager::DisplayStats(std::ostream&) const (_ZNK14TrafficManager12DisplayStatsERSo, funcdef_no=2487, decl_uid=65040, cgraph_uid=735, symbol_order=736)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
virtual void TrafficManager::DisplayStats(std::ostream&) const (const struct TrafficManager * const this, struct ostream & os)
{
  const int count;
  int i;
  int curr;
  static const char __PRETTY_FUNCTION__[96] = "void TrafficManager::_ComputeStats(const std::vector<int>&, int*, int*, int*, int*, int*) const";
  const int count;
  int i;
  int curr;
  static const char __PRETTY_FUNCTION__[96] = "void TrafficManager::_ComputeStats(const std::vector<int>&, int*, int*, int*, int*, int*) const";
  const int count;
  int i;
  int curr;
  static const char __PRETTY_FUNCTION__[96] = "void TrafficManager::_ComputeStats(const std::vector<int>&, int*, int*, int*, int*, int*) const";
  const int count;
  int i;
  int curr;
  static const char __PRETTY_FUNCTION__[96] = "void TrafficManager::_ComputeStats(const std::vector<int>&, int*, int*, int*, int*, int*) const";
  double time_delta;
  int max_pos;
  int min_pos;
  double rate_avg;
  double rate_max;
  double rate_min;
  double rate_sum;
  int count_max;
  int count_min;
  int count_sum;
  int c;
  long unsigned int _7;
  struct Stats * const & _8;
  int _9;
  struct basic_ostream & _11;
  struct Stats * _12;
  double _14;
  struct Stats * _15;
  double _17;
  const int & _18;
  struct Stats * _19;
  double _21;
  int _22;
  struct Stats * _23;
  double _25;
  struct Stats * const & _26;
  struct Stats * _27;
  double _29;
  struct Stats * _30;
  double _32;
  int _33;
  struct Stats * const & _34;
  struct Stats * _35;
  double _37;
  struct Stats * _38;
  double _40;
  struct Stats * _41;
  double _43;
  struct Stats * const & _44;
  struct Stats * _45;
  double _47;
  struct Stats * _48;
  double _50;
  struct Stats * _51;
  double _53;
  struct __ostream_type & _54;
  struct __ostream_type & _55;
  struct __ostream_type & _56;
  struct __ostream_type & _57;
  struct __ostream_type & _58;
  struct __ostream_type & _59;
  struct __ostream_type & _60;
  struct __ostream_type & _61;
  struct __ostream_type & _62;
  struct __ostream_type & _63;
  struct __ostream_type & _64;
  struct __ostream_type & _65;
  struct __ostream_type & _66;
  struct basic_ostream & _68;
  struct __ostream_type & _69;
  struct __ostream_type & _70;
  struct __ostream_type & _71;
  struct __ostream_type & _72;
  struct __ostream_type & _73;
  struct __ostream_type & _74;
  struct __ostream_type & _75;
  struct basic_ostream & _77;
  struct __ostream_type & _78;
  struct __ostream_type & _79;
  struct __ostream_type & _80;
  struct __ostream_type & _81;
  struct __ostream_type & _82;
  int _83;
  int _84;
  int _85;
  struct Stats * const & _87;
  double _90;
  double _93;
  double _96;
  int _98;
  double _99;
  struct __ostream_type & _103;
  struct __ostream_type & _104;
  struct basic_ostream & _106;
  struct __ostream_type & _107;
  struct __ostream_type & _108;
  struct basic_ostream & _110;
  long unsigned int _111;
  int * const _112;
  double _114;
  double _117;
  double _120;
  int _122;
  double _123;
  struct __ostream_type & _127;
  struct __ostream_type & _128;
  struct basic_ostream & _130;
  struct __ostream_type & _131;
  struct __ostream_type & _132;
  struct basic_ostream & _134;
  int * const _135;
  double _137;
  double _140;
  double _143;
  int _145;
  double _146;
  struct __ostream_type & _150;
  struct __ostream_type & _151;
  struct basic_ostream & _153;
  struct __ostream_type & _154;
  struct __ostream_type & _155;
  struct basic_ostream & _157;
  int * const _158;
  double _160;
  double _163;
  double _166;
  int _168;
  double _169;
  struct __ostream_type & _173;
  struct __ostream_type & _174;
  struct basic_ostream & _176;
  struct __ostream_type & _177;
  struct __ostream_type & _178;
  struct basic_ostream & _180;
  double _181;
  double _182;
  struct __ostream_type & _183;
  struct __ostream_type & _184;
  struct __ostream_type & _185;
  const int & _186;
  long unsigned int _187;
  const size_type _188;
  struct __ostream_type & _189;
  int * const _201;
  int * const _202;
  int * const _203;
  struct map * const _204;
  struct map * const _205;
  struct Stats * * const _206;
  struct Stats * * const _207;
  struct Stats * * const _208;
  struct Stats * * const _209;
  struct Stats * * const _210;
  struct Stats * * const _211;
  struct Stats * * const _212;
  struct Stats * * const _213;
  struct Stats * * const _214;
  struct Stats * * const _215;
  struct Stats * * const _216;
  struct Stats * * const _217;
  struct vector * const _218;
  struct vector * const _219;
  struct vector * const _220;
  struct vector * const _221;
  struct Stats * const & _222;
  struct Stats * const & _223;
  const int & _224;
  struct Stats * const & _225;
  struct Stats * const & _226;
  struct Stats * const & _227;
  struct Stats * const & _228;
  struct Stats * const & _229;
  long unsigned int _230;
  const struct vector & _231;
  struct __ostream_type & _232;
  const struct vector & _233;
  struct __ostream_type & _234;
  const struct vector & _235;
  struct __ostream_type & _236;
  const struct vector & _237;
  struct __ostream_type & _238;
  const struct map & _239;
  const size_type _240;
  long unsigned int _241;
  const struct map & _242;
  struct __ostream_type & _243;
  int * const _351;
  int * const _352;
  long int _353;
  long int _354;
  long int _355;
  long int _356;
  long unsigned int _362;
  long unsigned int _363;
  const int & _364;
  int * const _371;
  long int _372;
  long int _373;
  long int _374;
  long int _375;
  long unsigned int _381;
  long unsigned int _382;
  const int & _383;
  int * const _390;
  long int _391;
  long int _392;
  long int _393;
  long int _394;
  long unsigned int _400;
  long unsigned int _401;
  const int & _402;
  int * const _409;
  long int _410;
  long int _411;
  long int _412;
  long int _413;
  long unsigned int _419;
  long unsigned int _420;
  const int & _421;
  int _448;
  const int prephitmp_536;
  const int pretmp_555;
  const int prephitmp_556;

  <bb 2>:
  # DEBUG c => 0
  # DEBUG c => 0
  _448 = this_5(D)->_classes;
  if (_448 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:

  <bb 54>:
  return;

  <bb 4>:

  <bb 5>:
  # c_126 = PHI <0(4), c_200(49)>
  # prephitmp_536 = PHI <_448(4), prephitmp_556(49)>
  # DEBUG c => c_126
  _7 = (long unsigned int) c_126;
  # DEBUG D#231 => &this_5(D)->_measure_stats
  _201 = MEM[(int * *)this_5(D) + 1880B];
  # DEBUG D#61 => D#231
  # DEBUG __n => _7
  # DEBUG this => D#61
  _187 = _7 * 4;
  _186 = _201 + _187;
  _9 = *_186;
  if (_9 == 0)
    goto <bb 48>;
  else
    goto <bb 6>;

  <bb 6>:
  # DEBUG __out => &cout
  # DEBUG __s => "Class "
  # DEBUG __s => "Class "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Class ", 6);
  _11 = std::basic_ostream<char>::operator<< (&cout, c_126);
  # DEBUG __out => _11
  # DEBUG __s => ":"
  # DEBUG __s => ":"
  std::__ostream_insert<char, std::char_traits<char> > (_11, ":", 1);
  # DEBUG this => _11
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_11);
  # DEBUG D#232 => &this_5(D)->_frag_stats
  _206 = MEM[(struct Stats * * *)this_5(D) + 1144B];
  # DEBUG D#132 => D#232
  # DEBUG __n => _7
  # DEBUG this => D#132
  _111 = _7 * 8;
  _87 = _206 + _111;
  _12 = *_87;
  _14 = Stats::Max (_12);
  # DEBUG D#233 => &this_5(D)->_frag_stats
  _207 = MEM[(struct Stats * * *)this_5(D) + 1144B];
  # DEBUG D#132 => D#233
  # DEBUG __n => _7
  # DEBUG this => D#132
  _44 = _207 + _111;
  _15 = *_44;
  _17 = Stats::Min (_15);
  # DEBUG D#234 => &this_5(D)->_frag_stats
  _208 = MEM[(struct Stats * * *)this_5(D) + 1144B];
  # DEBUG D#132 => D#234
  # DEBUG __n => _7
  # DEBUG this => D#132
  _34 = _208 + _111;
  _19 = *_34;
  _21 = Stats::Average (_19);
  # DEBUG D#235 => &this_5(D)->_slowest_flit
  _202 = MEM[(int * *)this_5(D) + 1768B];
  # DEBUG D#61 => D#235
  # DEBUG __n => _7
  # DEBUG this => D#61
  _18 = _202 + _187;
  _22 = *_18;
  # DEBUG D#236 => &this_5(D)->_flat_stats
  _209 = MEM[(struct Stats * * *)this_5(D) + 1048B];
  # DEBUG D#132 => D#236
  # DEBUG __n => _7
  # DEBUG this => D#132
  _26 = _209 + _111;
  _23 = *_26;
  _25 = Stats::Max (_23);
  # DEBUG D#237 => &this_5(D)->_flat_stats
  _210 = MEM[(struct Stats * * *)this_5(D) + 1048B];
  # DEBUG D#132 => D#237
  # DEBUG __n => _7
  # DEBUG this => D#132
  _8 = _210 + _111;
  _27 = *_8;
  _29 = Stats::Min (_27);
  # DEBUG D#238 => &this_5(D)->_flat_stats
  _211 = MEM[(struct Stats * * *)this_5(D) + 1048B];
  # DEBUG D#132 => D#238
  # DEBUG __n => _7
  # DEBUG this => D#132
  _222 = _211 + _111;
  _30 = *_222;
  _32 = Stats::Average (_30);
  # DEBUG D#239 => &this_5(D)->_slowest_packet
  _203 = MEM[(int * *)this_5(D) + 1744B];
  # DEBUG D#61 => D#239
  # DEBUG __n => _7
  # DEBUG this => D#61
  _224 = _203 + _187;
  _33 = *_224;
  # DEBUG D#240 => &this_5(D)->_nlat_stats
  _212 = MEM[(struct Stats * * *)this_5(D) + 952B];
  # DEBUG D#132 => D#240
  # DEBUG __n => _7
  # DEBUG this => D#132
  _223 = _212 + _111;
  _35 = *_223;
  _37 = Stats::Max (_35);
  # DEBUG D#241 => &this_5(D)->_nlat_stats
  _213 = MEM[(struct Stats * * *)this_5(D) + 952B];
  # DEBUG D#132 => D#241
  # DEBUG __n => _7
  # DEBUG this => D#132
  _225 = _213 + _111;
  _38 = *_225;
  _40 = Stats::Min (_38);
  # DEBUG D#242 => &this_5(D)->_nlat_stats
  _214 = MEM[(struct Stats * * *)this_5(D) + 952B];
  # DEBUG D#132 => D#242
  # DEBUG __n => _7
  # DEBUG this => D#132
  _226 = _214 + _111;
  _41 = *_226;
  _43 = Stats::Average (_41);
  # DEBUG D#243 => &this_5(D)->_plat_stats
  _215 = MEM[(struct Stats * * *)this_5(D) + 856B];
  # DEBUG D#132 => D#243
  # DEBUG __n => _7
  # DEBUG this => D#132
  _227 = _215 + _111;
  _45 = *_227;
  _47 = Stats::Max (_45);
  # DEBUG D#244 => &this_5(D)->_plat_stats
  _216 = MEM[(struct Stats * * *)this_5(D) + 856B];
  # DEBUG D#132 => D#244
  # DEBUG __n => _7
  # DEBUG this => D#132
  _228 = _216 + _111;
  _48 = *_228;
  _50 = Stats::Min (_48);
  # DEBUG D#245 => &this_5(D)->_plat_stats
  _217 = MEM[(struct Stats * * *)this_5(D) + 856B];
  # DEBUG D#132 => D#245
  # DEBUG __n => _7
  # DEBUG this => D#132
  _229 = _217 + _111;
  _51 = *_229;
  _53 = Stats::Average (_51);
  # DEBUG __out => &cout
  # DEBUG __s => "Packet latency average = "
  # DEBUG __s => "Packet latency average = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Packet latency average = ", 25);
  # DEBUG this => &cout
  # DEBUG __f => _53
  _54 = std::basic_ostream<char>::_M_insert<double> (&cout, _53);
  # DEBUG this => _54
  # DEBUG __pf => endl
  _55 = std::endl<char, std::char_traits<char> > (_54);
  # DEBUG __out => _55
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (_55, "\tminimum = ", 11);
  # DEBUG this => _55
  # DEBUG __f => _50
  _56 = std::basic_ostream<char>::_M_insert<double> (_55, _50);
  # DEBUG this => _56
  # DEBUG __pf => endl
  _57 = std::endl<char, std::char_traits<char> > (_56);
  # DEBUG __out => _57
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (_57, "\tmaximum = ", 11);
  # DEBUG this => _57
  # DEBUG __f => _47
  _58 = std::basic_ostream<char>::_M_insert<double> (_57, _47);
  # DEBUG this => _58
  # DEBUG __pf => endl
  _59 = std::endl<char, std::char_traits<char> > (_58);
  # DEBUG __out => _59
  # DEBUG __s => "Network latency average = "
  # DEBUG __s => "Network latency average = "
  std::__ostream_insert<char, std::char_traits<char> > (_59, "Network latency average = ", 26);
  # DEBUG this => _59
  # DEBUG __f => _43
  _60 = std::basic_ostream<char>::_M_insert<double> (_59, _43);
  # DEBUG this => _60
  # DEBUG __pf => endl
  _61 = std::endl<char, std::char_traits<char> > (_60);
  # DEBUG __out => _61
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (_61, "\tminimum = ", 11);
  # DEBUG this => _61
  # DEBUG __f => _40
  _62 = std::basic_ostream<char>::_M_insert<double> (_61, _40);
  # DEBUG this => _62
  # DEBUG __pf => endl
  _63 = std::endl<char, std::char_traits<char> > (_62);
  # DEBUG __out => _63
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (_63, "\tmaximum = ", 11);
  # DEBUG this => _63
  # DEBUG __f => _37
  _64 = std::basic_ostream<char>::_M_insert<double> (_63, _37);
  # DEBUG this => _64
  # DEBUG __pf => endl
  _65 = std::endl<char, std::char_traits<char> > (_64);
  # DEBUG __out => _65
  # DEBUG __s => "Slowest packet = "
  # DEBUG __s => "Slowest packet = "
  std::__ostream_insert<char, std::char_traits<char> > (_65, "Slowest packet = ", 17);
  _68 = std::basic_ostream<char>::operator<< (_65, _33);
  # DEBUG this => _68
  # DEBUG __pf => endl
  _66 = std::endl<char, std::char_traits<char> > (_68);
  # DEBUG __out => _66
  # DEBUG __s => "Flit latency average = "
  # DEBUG __s => "Flit latency average = "
  std::__ostream_insert<char, std::char_traits<char> > (_66, "Flit latency average = ", 23);
  # DEBUG this => _66
  # DEBUG __f => _32
  _69 = std::basic_ostream<char>::_M_insert<double> (_66, _32);
  # DEBUG this => _69
  # DEBUG __pf => endl
  _70 = std::endl<char, std::char_traits<char> > (_69);
  # DEBUG __out => _70
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (_70, "\tminimum = ", 11);
  # DEBUG this => _70
  # DEBUG __f => _29
  _71 = std::basic_ostream<char>::_M_insert<double> (_70, _29);
  # DEBUG this => _71
  # DEBUG __pf => endl
  _72 = std::endl<char, std::char_traits<char> > (_71);
  # DEBUG __out => _72
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (_72, "\tmaximum = ", 11);
  # DEBUG this => _72
  # DEBUG __f => _25
  _73 = std::basic_ostream<char>::_M_insert<double> (_72, _25);
  # DEBUG this => _73
  # DEBUG __pf => endl
  _74 = std::endl<char, std::char_traits<char> > (_73);
  # DEBUG __out => _74
  # DEBUG __s => "Slowest flit = "
  # DEBUG __s => "Slowest flit = "
  std::__ostream_insert<char, std::char_traits<char> > (_74, "Slowest flit = ", 15);
  _77 = std::basic_ostream<char>::operator<< (_74, _22);
  # DEBUG this => _77
  # DEBUG __pf => endl
  _75 = std::endl<char, std::char_traits<char> > (_77);
  # DEBUG __out => _75
  # DEBUG __s => "Fragmentation average = "
  # DEBUG __s => "Fragmentation average = "
  std::__ostream_insert<char, std::char_traits<char> > (_75, "Fragmentation average = ", 24);
  # DEBUG this => _75
  # DEBUG __f => _21
  _78 = std::basic_ostream<char>::_M_insert<double> (_75, _21);
  # DEBUG this => _78
  # DEBUG __pf => endl
  _79 = std::endl<char, std::char_traits<char> > (_78);
  # DEBUG __out => _79
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (_79, "\tminimum = ", 11);
  # DEBUG this => _79
  # DEBUG __f => _17
  _80 = std::basic_ostream<char>::_M_insert<double> (_79, _17);
  # DEBUG this => _80
  # DEBUG __pf => endl
  _81 = std::endl<char, std::char_traits<char> > (_80);
  # DEBUG __out => _81
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (_81, "\tmaximum = ", 11);
  # DEBUG this => _81
  # DEBUG __f => _14
  _82 = std::basic_ostream<char>::_M_insert<double> (_81, _14);
  # DEBUG this => _82
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_82);
  _83 = this_5(D)->_time;
  _84 = this_5(D)->_reset_time;
  _85 = _83 - _84;
  time_delta_86 = (double) _85;
  # DEBUG time_delta => time_delta_86
  # DEBUG D#246 => &this_5(D)->_sent_packets
  _218 = MEM[(struct vector * *)this_5(D) + 1360B];
  # DEBUG D#134 => D#246
  # DEBUG __n => _7
  # DEBUG this => D#134
  _230 = _7 * 24;
  _231 = _218 + _230;
  # DEBUG this => this_5(D)
  # DEBUG stats => _231
  # DEBUG sum => &count_sum
  # DEBUG min => &count_min
  # DEBUG max => &count_max
  # DEBUG min_pos => &min_pos
  # DEBUG max_pos => &max_pos
  _112 = MEM[(int * *)_231];
  # DEBUG D#68 => _231
  _409 = MEM[(int * *)_231 + 8B];
  # DEBUG D#68 => _231
  # DEBUG this => D#68
  # DEBUG this => D#68
  _410 = (long int) _409;
  _411 = (long int) _112;
  _412 = _410 - _411;
  _413 = _412 /[ex] 4;
  count_414 = (const int) _413;
  # DEBUG count => count_414
  if (count_414 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("count > 0", "trafficmanager.cpp", 1353, &__PRETTY_FUNCTION__);

  <bb 8>:
  # DEBUG min_pos => 0
  # DEBUG max_pos => 0
  # DEBUG D#61 => _231
  # DEBUG __n => 0
  # DEBUG this => D#61
  count_min_415 = MEM[(const int &)_112];
  # DEBUG count_min => count_min_415
  # DEBUG D#61 => _231
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_max => count_min_415
  # DEBUG D#61 => _231
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_sum => count_min_415
  # DEBUG i => 1
  # DEBUG max_pos => 0
  # DEBUG min_pos => 0
  # DEBUG count_max => count_min_415
  # DEBUG count_min => count_min_415
  # DEBUG count_sum => count_min_415
  # DEBUG i => 1
  if (count_414 <= 1)
    goto <bb 17>;
  else
    goto <bb 9>;

  <bb 9>:

  <bb 10>:
  # count_min_367 = PHI <count_min_415(9), count_min_194(16)>
  # count_sum_385 = PHI <count_min_415(9), count_sum_426(16)>
  # min_pos_498 = PHI <1(9), min_pos_427(16)>
  # max_pos_159 = PHI <0(9), max_pos_459(16)>
  # min_pos_148 = PHI <0(9), min_pos_467(16)>
  # count_max_442 = PHI <count_min_415(9), count_max_475(16)>
  # DEBUG max_pos => max_pos_159
  # DEBUG min_pos => min_pos_148
  # DEBUG count_max => count_max_442
  # DEBUG count_min => count_min_367
  # DEBUG count_sum => count_sum_385
  # DEBUG i => min_pos_498
  _419 = (long unsigned int) min_pos_498;
  # DEBUG D#61 => _231
  # DEBUG __n => _419
  # DEBUG this => D#61
  _420 = _419 * 4;
  _421 = _112 + _420;
  count_min_422 = *_421;
  # DEBUG curr => count_min_422
  if (count_min_367 > count_min_422)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # count_min_194 = PHI <count_min_367(11), count_min_422(10)>
  # min_pos_467 = PHI <min_pos_148(11), min_pos_498(10)>
  # DEBUG min_pos => min_pos_467
  # DEBUG count_min => count_min_194
  if (count_min_422 > count_max_442)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # count_max_475 = PHI <count_min_422(12), count_max_442(13)>
  # max_pos_459 = PHI <min_pos_498(12), max_pos_159(13)>
  # DEBUG max_pos => max_pos_459
  # DEBUG count_max => count_max_475
  count_sum_426 = count_sum_385 + count_min_422;
  # DEBUG count_sum => count_sum_426
  min_pos_427 = min_pos_498 + 1;
  # DEBUG i => min_pos_427
  # DEBUG max_pos => max_pos_459
  # DEBUG min_pos => min_pos_467
  # DEBUG count_max => count_max_475
  # DEBUG count_min => count_min_194
  # DEBUG count_sum => count_sum_426
  # DEBUG i => min_pos_427
  if (count_414 <= min_pos_427)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # count_min_492 = PHI <count_min_194(14)>
  # count_sum_474 = PHI <count_sum_426(14)>
  # max_pos_466 = PHI <max_pos_459(14)>
  # min_pos_458 = PHI <min_pos_467(14)>
  # count_max_449 = PHI <count_max_475(14)>

  <bb 53>:
  goto <bb 17>;

  <bb 16>:
  goto <bb 10>;

  <bb 17>:
  # count_min_494 = PHI <count_min_492(53), count_min_415(8)>
  # count_sum_440 = PHI <count_sum_474(53), count_min_415(8)>
  # max_pos_502 = PHI <max_pos_466(53), 0(8)>
  # min_pos_486 = PHI <min_pos_458(53), 0(8)>
  # count_max_441 = PHI <count_max_449(53), count_min_415(8)>
  _90 = (double) count_sum_440;
  rate_sum_91 = _90 / time_delta_86;
  # DEBUG rate_sum => rate_sum_91
  _93 = (double) count_min_494;
  rate_min_94 = _93 / time_delta_86;
  # DEBUG rate_min => rate_min_94
  _96 = (double) count_max_441;
  rate_max_97 = _96 / time_delta_86;
  # DEBUG rate_max => rate_max_97
  _98 = this_5(D)->_nodes;
  _99 = (double) _98;
  rate_avg_100 = rate_sum_91 / _99;
  # DEBUG rate_avg => rate_avg_100
  # DEBUG sent_packets => count_sum_440
  # DEBUG __out => &cout
  # DEBUG __s => "Injected packet rate average = "
  # DEBUG __s => "Injected packet rate average = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Injected packet rate average = ", 31);
  # DEBUG this => &cout
  # DEBUG __f => rate_avg_100
  _232 = std::basic_ostream<char>::_M_insert<double> (&cout, rate_avg_100);
  # DEBUG this => _232
  # DEBUG __pf => endl
  _103 = std::endl<char, std::char_traits<char> > (_232);
  # DEBUG __out => _103
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (_103, "\tminimum = ", 11);
  # DEBUG this => _103
  # DEBUG __f => rate_min_94
  _104 = std::basic_ostream<char>::_M_insert<double> (_103, rate_min_94);
  # DEBUG __out => _104
  # DEBUG __s => " (at node "
  # DEBUG __s => " (at node "
  std::__ostream_insert<char, std::char_traits<char> > (_104, " (at node ", 10);
  _106 = std::basic_ostream<char>::operator<< (_104, min_pos_486);
  # DEBUG __out => _106
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_106, ")", 1);
  # DEBUG this => _106
  # DEBUG __pf => endl
  _107 = std::endl<char, std::char_traits<char> > (_106);
  # DEBUG __out => _107
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (_107, "\tmaximum = ", 11);
  # DEBUG this => _107
  # DEBUG __f => rate_max_97
  _108 = std::basic_ostream<char>::_M_insert<double> (_107, rate_max_97);
  # DEBUG __out => _108
  # DEBUG __s => " (at node "
  # DEBUG __s => " (at node "
  std::__ostream_insert<char, std::char_traits<char> > (_108, " (at node ", 10);
  _110 = std::basic_ostream<char>::operator<< (_108, max_pos_502);
  # DEBUG __out => _110
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_110, ")", 1);
  # DEBUG this => _110
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_110);
  # DEBUG D#247 => &this_5(D)->_accepted_packets
  _219 = MEM[(struct vector * *)this_5(D) + 1456B];
  # DEBUG D#134 => D#247
  # DEBUG __n => _7
  # DEBUG this => D#134
  _233 = _219 + _230;
  # DEBUG this => this_5(D)
  # DEBUG stats => _233
  # DEBUG sum => &count_sum
  # DEBUG min => &count_min
  # DEBUG max => &count_max
  # DEBUG min_pos => &min_pos
  # DEBUG max_pos => &max_pos
  _135 = MEM[(int * *)_233];
  # DEBUG D#68 => _233
  _390 = MEM[(int * *)_233 + 8B];
  # DEBUG D#68 => _233
  # DEBUG this => D#68
  # DEBUG this => D#68
  _391 = (long int) _390;
  _392 = (long int) _135;
  _393 = _391 - _392;
  _394 = _393 /[ex] 4;
  count_395 = (const int) _394;
  # DEBUG count => count_395
  if (count_395 <= 0)
    goto <bb 7>;
  else
    goto <bb 18>;

  <bb 18>:
  # DEBUG min_pos => 0
  # DEBUG max_pos => 0
  # DEBUG D#61 => _233
  # DEBUG __n => 0
  # DEBUG this => D#61
  count_min_396 = MEM[(const int &)_135];
  # DEBUG count_min => count_min_396
  # DEBUG D#61 => _233
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_max => count_min_396
  # DEBUG D#61 => _233
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_sum => count_min_396
  # DEBUG i => 1
  # DEBUG max_pos => 0
  # DEBUG min_pos => 0
  # DEBUG count_max => count_min_396
  # DEBUG count_min => count_min_396
  # DEBUG count_sum => count_min_396
  # DEBUG i => 1
  if (count_395 <= 1)
    goto <bb 27>;
  else
    goto <bb 19>;

  <bb 19>:

  <bb 20>:
  # count_min_116 = PHI <count_min_396(19), count_min_192(26)>
  # count_sum_496 = PHI <count_min_396(19), count_sum_407(26)>
  # min_pos_507 = PHI <1(19), min_pos_408(26)>
  # max_pos_508 = PHI <0(19), max_pos_457(26)>
  # min_pos_149 = PHI <0(19), min_pos_465(26)>
  # count_max_452 = PHI <count_min_396(19), count_max_473(26)>
  # DEBUG max_pos => max_pos_508
  # DEBUG min_pos => min_pos_149
  # DEBUG count_max => count_max_452
  # DEBUG count_min => count_min_116
  # DEBUG count_sum => count_sum_496
  # DEBUG i => min_pos_507
  _400 = (long unsigned int) min_pos_507;
  # DEBUG D#61 => _233
  # DEBUG __n => _400
  # DEBUG this => D#61
  _401 = _400 * 4;
  _402 = _135 + _401;
  count_min_403 = *_402;
  # DEBUG curr => count_min_403
  if (count_min_116 > count_min_403)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:

  <bb 22>:
  # count_min_192 = PHI <count_min_116(21), count_min_403(20)>
  # min_pos_465 = PHI <min_pos_149(21), min_pos_507(20)>
  # DEBUG min_pos => min_pos_465
  # DEBUG count_min => count_min_192
  if (count_min_403 > count_max_452)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # count_max_473 = PHI <count_min_403(22), count_max_452(23)>
  # max_pos_457 = PHI <min_pos_507(22), max_pos_508(23)>
  # DEBUG max_pos => max_pos_457
  # DEBUG count_max => count_max_473
  count_sum_407 = count_min_403 + count_sum_496;
  # DEBUG count_sum => count_sum_407
  min_pos_408 = min_pos_507 + 1;
  # DEBUG i => min_pos_408
  # DEBUG max_pos => max_pos_457
  # DEBUG min_pos => min_pos_465
  # DEBUG count_max => count_max_473
  # DEBUG count_min => count_min_192
  # DEBUG count_sum => count_sum_407
  # DEBUG i => min_pos_408
  if (count_395 <= min_pos_408)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # count_min_499 = PHI <count_min_192(24)>
  # count_sum_476 = PHI <count_sum_407(24)>
  # max_pos_468 = PHI <max_pos_457(24)>
  # min_pos_460 = PHI <min_pos_465(24)>
  # count_max_450 = PHI <count_max_473(24)>

  <bb 52>:
  goto <bb 27>;

  <bb 26>:
  goto <bb 20>;

  <bb 27>:
  # count_min_488 = PHI <count_min_499(52), count_min_396(18)>
  # count_sum_483 = PHI <count_sum_476(52), count_min_396(18)>
  # max_pos_501 = PHI <max_pos_468(52), 0(18)>
  # min_pos_101 = PHI <min_pos_460(52), 0(18)>
  # count_max_451 = PHI <count_max_450(52), count_min_396(18)>
  _114 = (double) count_sum_483;
  rate_sum_115 = _114 / time_delta_86;
  # DEBUG rate_sum => rate_sum_115
  _117 = (double) count_min_488;
  rate_min_118 = _117 / time_delta_86;
  # DEBUG rate_min => rate_min_118
  _120 = (double) count_max_451;
  rate_max_121 = _120 / time_delta_86;
  # DEBUG rate_max => rate_max_121
  _122 = this_5(D)->_nodes;
  _123 = (double) _122;
  rate_avg_124 = rate_sum_115 / _123;
  # DEBUG rate_avg => rate_avg_124
  # DEBUG accepted_packets => count_sum_483
  # DEBUG __out => &cout
  # DEBUG __s => "Accepted packet rate average = "
  # DEBUG __s => "Accepted packet rate average = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Accepted packet rate average = ", 31);
  # DEBUG this => &cout
  # DEBUG __f => rate_avg_124
  _234 = std::basic_ostream<char>::_M_insert<double> (&cout, rate_avg_124);
  # DEBUG this => _234
  # DEBUG __pf => endl
  _127 = std::endl<char, std::char_traits<char> > (_234);
  # DEBUG __out => _127
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (_127, "\tminimum = ", 11);
  # DEBUG this => _127
  # DEBUG __f => rate_min_118
  _128 = std::basic_ostream<char>::_M_insert<double> (_127, rate_min_118);
  # DEBUG __out => _128
  # DEBUG __s => " (at node "
  # DEBUG __s => " (at node "
  std::__ostream_insert<char, std::char_traits<char> > (_128, " (at node ", 10);
  _130 = std::basic_ostream<char>::operator<< (_128, min_pos_101);
  # DEBUG __out => _130
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_130, ")", 1);
  # DEBUG this => _130
  # DEBUG __pf => endl
  _131 = std::endl<char, std::char_traits<char> > (_130);
  # DEBUG __out => _131
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (_131, "\tmaximum = ", 11);
  # DEBUG this => _131
  # DEBUG __f => rate_max_121
  _132 = std::basic_ostream<char>::_M_insert<double> (_131, rate_max_121);
  # DEBUG __out => _132
  # DEBUG __s => " (at node "
  # DEBUG __s => " (at node "
  std::__ostream_insert<char, std::char_traits<char> > (_132, " (at node ", 10);
  _134 = std::basic_ostream<char>::operator<< (_132, max_pos_501);
  # DEBUG __out => _134
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_134, ")", 1);
  # DEBUG this => _134
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_134);
  # DEBUG D#248 => &this_5(D)->_sent_flits
  _220 = MEM[(struct vector * *)this_5(D) + 1552B];
  # DEBUG D#134 => D#248
  # DEBUG __n => _7
  # DEBUG this => D#134
  _235 = _220 + _230;
  # DEBUG this => this_5(D)
  # DEBUG stats => _235
  # DEBUG sum => &count_sum
  # DEBUG min => &count_min
  # DEBUG max => &count_max
  # DEBUG min_pos => &min_pos
  # DEBUG max_pos => &max_pos
  _158 = MEM[(int * *)_235];
  # DEBUG D#68 => _235
  _371 = MEM[(int * *)_235 + 8B];
  # DEBUG D#68 => _235
  # DEBUG this => D#68
  # DEBUG this => D#68
  _372 = (long int) _371;
  _373 = (long int) _158;
  _374 = _372 - _373;
  _375 = _374 /[ex] 4;
  count_376 = (const int) _375;
  # DEBUG count => count_376
  if (count_376 <= 0)
    goto <bb 7>;
  else
    goto <bb 28>;

  <bb 28>:
  # DEBUG min_pos => 0
  # DEBUG max_pos => 0
  # DEBUG D#61 => _235
  # DEBUG __n => 0
  # DEBUG this => D#61
  count_min_377 = MEM[(const int &)_158];
  # DEBUG count_min => count_min_377
  # DEBUG D#61 => _235
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_max => count_min_377
  # DEBUG D#61 => _235
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_sum => count_min_377
  # DEBUG i => 1
  # DEBUG max_pos => 0
  # DEBUG min_pos => 0
  # DEBUG count_max => count_min_377
  # DEBUG count_min => count_min_377
  # DEBUG count_sum => count_min_377
  # DEBUG i => 1
  if (count_376 <= 1)
    goto <bb 37>;
  else
    goto <bb 29>;

  <bb 29>:

  <bb 30>:
  # count_min_119 = PHI <count_min_377(29), count_min_190(36)>
  # count_sum_386 = PHI <count_min_377(29), count_sum_388(36)>
  # min_pos_406 = PHI <1(29), min_pos_389(36)>
  # max_pos_497 = PHI <0(29), max_pos_455(36)>
  # min_pos_366 = PHI <0(29), min_pos_463(36)>
  # count_max_171 = PHI <count_min_377(29), count_max_471(36)>
  # DEBUG max_pos => max_pos_497
  # DEBUG min_pos => min_pos_366
  # DEBUG count_max => count_max_171
  # DEBUG count_min => count_min_119
  # DEBUG count_sum => count_sum_386
  # DEBUG i => min_pos_406
  _381 = (long unsigned int) min_pos_406;
  # DEBUG D#61 => _235
  # DEBUG __n => _381
  # DEBUG this => D#61
  _382 = _381 * 4;
  _383 = _158 + _382;
  count_min_384 = *_383;
  # DEBUG curr => count_min_384
  if (count_min_119 > count_min_384)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:

  <bb 32>:
  # count_min_190 = PHI <count_min_119(31), count_min_384(30)>
  # min_pos_463 = PHI <min_pos_366(31), min_pos_406(30)>
  # DEBUG min_pos => min_pos_463
  # DEBUG count_min => count_min_190
  if (count_max_171 < count_min_384)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:

  <bb 34>:
  # count_max_471 = PHI <count_min_384(32), count_max_171(33)>
  # max_pos_455 = PHI <min_pos_406(32), max_pos_497(33)>
  # DEBUG max_pos => max_pos_455
  # DEBUG count_max => count_max_471
  count_sum_388 = count_min_384 + count_sum_386;
  # DEBUG count_sum => count_sum_388
  min_pos_389 = min_pos_406 + 1;
  # DEBUG i => min_pos_389
  # DEBUG max_pos => max_pos_455
  # DEBUG min_pos => min_pos_463
  # DEBUG count_max => count_max_471
  # DEBUG count_min => count_min_190
  # DEBUG count_sum => count_sum_388
  # DEBUG i => min_pos_389
  if (count_376 <= min_pos_389)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # count_min_500 = PHI <count_min_190(34)>
  # count_sum_478 = PHI <count_sum_388(34)>
  # max_pos_470 = PHI <max_pos_455(34)>
  # min_pos_462 = PHI <min_pos_463(34)>
  # count_max_454 = PHI <count_max_471(34)>

  <bb 51>:
  goto <bb 37>;

  <bb 36>:
  goto <bb 30>;

  <bb 37>:
  # count_min_113 = PHI <count_min_500(51), count_min_377(28)>
  # count_sum_439 = PHI <count_sum_478(51), count_min_377(28)>
  # max_pos_487 = PHI <max_pos_470(51), 0(28)>
  # min_pos_405 = PHI <min_pos_462(51), 0(28)>
  # count_max_172 = PHI <count_max_454(51), count_min_377(28)>
  _137 = (double) count_sum_439;
  rate_sum_138 = _137 / time_delta_86;
  # DEBUG rate_sum => rate_sum_138
  _140 = (double) count_min_113;
  rate_min_141 = _140 / time_delta_86;
  # DEBUG rate_min => rate_min_141
  _143 = (double) count_max_172;
  rate_max_144 = _143 / time_delta_86;
  # DEBUG rate_max => rate_max_144
  _145 = this_5(D)->_nodes;
  _146 = (double) _145;
  rate_avg_147 = rate_sum_138 / _146;
  # DEBUG rate_avg => rate_avg_147
  # DEBUG sent_flits => count_sum_439
  # DEBUG __out => &cout
  # DEBUG __s => "Injected flit rate average = "
  # DEBUG __s => "Injected flit rate average = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Injected flit rate average = ", 29);
  # DEBUG this => &cout
  # DEBUG __f => rate_avg_147
  _236 = std::basic_ostream<char>::_M_insert<double> (&cout, rate_avg_147);
  # DEBUG this => _236
  # DEBUG __pf => endl
  _150 = std::endl<char, std::char_traits<char> > (_236);
  # DEBUG __out => _150
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (_150, "\tminimum = ", 11);
  # DEBUG this => _150
  # DEBUG __f => rate_min_141
  _151 = std::basic_ostream<char>::_M_insert<double> (_150, rate_min_141);
  # DEBUG __out => _151
  # DEBUG __s => " (at node "
  # DEBUG __s => " (at node "
  std::__ostream_insert<char, std::char_traits<char> > (_151, " (at node ", 10);
  _153 = std::basic_ostream<char>::operator<< (_151, min_pos_405);
  # DEBUG __out => _153
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_153, ")", 1);
  # DEBUG this => _153
  # DEBUG __pf => endl
  _154 = std::endl<char, std::char_traits<char> > (_153);
  # DEBUG __out => _154
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (_154, "\tmaximum = ", 11);
  # DEBUG this => _154
  # DEBUG __f => rate_max_144
  _155 = std::basic_ostream<char>::_M_insert<double> (_154, rate_max_144);
  # DEBUG __out => _155
  # DEBUG __s => " (at node "
  # DEBUG __s => " (at node "
  std::__ostream_insert<char, std::char_traits<char> > (_155, " (at node ", 10);
  _157 = std::basic_ostream<char>::operator<< (_155, max_pos_487);
  # DEBUG __out => _157
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_157, ")", 1);
  # DEBUG this => _157
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_157);
  # DEBUG D#249 => &this_5(D)->_accepted_flits
  _221 = MEM[(struct vector * *)this_5(D) + 1648B];
  # DEBUG D#134 => D#249
  # DEBUG __n => _7
  # DEBUG this => D#134
  _237 = _221 + _230;
  # DEBUG this => this_5(D)
  # DEBUG stats => _237
  # DEBUG sum => &count_sum
  # DEBUG min => &count_min
  # DEBUG max => &count_max
  # DEBUG min_pos => &min_pos
  # DEBUG max_pos => &max_pos
  _351 = MEM[(int * *)_237];
  # DEBUG D#68 => _237
  _352 = MEM[(int * *)_237 + 8B];
  # DEBUG D#68 => _237
  # DEBUG this => D#68
  # DEBUG this => D#68
  _353 = (long int) _352;
  _354 = (long int) _351;
  _355 = _353 - _354;
  _356 = _355 /[ex] 4;
  count_357 = (const int) _356;
  # DEBUG count => count_357
  if (count_357 <= 0)
    goto <bb 7>;
  else
    goto <bb 38>;

  <bb 38>:
  # DEBUG min_pos => 0
  # DEBUG max_pos => 0
  # DEBUG D#61 => _237
  # DEBUG __n => 0
  # DEBUG this => D#61
  count_min_358 = MEM[(const int &)_351];
  # DEBUG count_min => count_min_358
  # DEBUG D#61 => _237
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_max => count_min_358
  # DEBUG D#61 => _237
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG count_sum => count_min_358
  # DEBUG i => 1
  # DEBUG max_pos => 0
  # DEBUG min_pos => 0
  # DEBUG count_max => count_min_358
  # DEBUG count_min => count_min_358
  # DEBUG count_sum => count_min_358
  # DEBUG i => 1
  if (count_357 <= 1)
    goto <bb 47>;
  else
    goto <bb 39>;

  <bb 39>:

  <bb 40>:
  # count_sum_506 = PHI <count_min_358(39), count_sum_369(46)>
  # min_pos_493 = PHI <1(39), min_pos_370(46)>
  # max_pos_387 = PHI <0(39), max_pos_453(46)>
  # min_pos_503 = PHI <0(39), min_pos_461(46)>
  # count_max_92 = PHI <count_min_358(39), count_max_469(46)>
  # count_min_489 = PHI <count_min_358(39), count_min_477(46)>
  # DEBUG max_pos => max_pos_387
  # DEBUG min_pos => min_pos_503
  # DEBUG count_max => count_max_92
  # DEBUG count_min => count_min_489
  # DEBUG count_sum => count_sum_506
  # DEBUG i => min_pos_493
  _362 = (long unsigned int) min_pos_493;
  # DEBUG D#61 => _237
  # DEBUG __n => _362
  # DEBUG this => D#61
  _363 = _362 * 4;
  _364 = _351 + _363;
  count_min_365 = *_364;
  # DEBUG curr => count_min_365
  if (count_min_365 < count_min_489)
    goto <bb 42>;
  else
    goto <bb 41>;

  <bb 41>:

  <bb 42>:
  # count_min_477 = PHI <count_min_489(41), count_min_365(40)>
  # min_pos_461 = PHI <min_pos_503(41), min_pos_493(40)>
  # DEBUG min_pos => min_pos_461
  # DEBUG count_min => count_min_477
  if (count_max_92 < count_min_365)
    goto <bb 44>;
  else
    goto <bb 43>;

  <bb 43>:

  <bb 44>:
  # count_max_469 = PHI <count_min_365(42), count_max_92(43)>
  # max_pos_453 = PHI <min_pos_493(42), max_pos_387(43)>
  # DEBUG max_pos => max_pos_453
  # DEBUG count_max => count_max_469
  count_sum_369 = count_min_365 + count_sum_506;
  # DEBUG count_sum => count_sum_369
  min_pos_370 = min_pos_493 + 1;
  # DEBUG i => min_pos_370
  # DEBUG max_pos => max_pos_453
  # DEBUG min_pos => min_pos_461
  # DEBUG count_max => count_max_469
  # DEBUG count_min => count_min_477
  # DEBUG count_sum => count_sum_369
  # DEBUG i => min_pos_370
  if (count_357 <= min_pos_370)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # count_sum_484 = PHI <count_sum_369(44)>
  # max_pos_472 = PHI <max_pos_453(44)>
  # min_pos_464 = PHI <min_pos_461(44)>
  # count_max_456 = PHI <count_max_469(44)>
  # count_min_447 = PHI <count_min_477(44)>

  <bb 50>:
  goto <bb 47>;

  <bb 46>:
  goto <bb 40>;

  <bb 47>:
  # count_sum_495 = PHI <count_sum_484(50), count_min_358(38)>
  # max_pos_102 = PHI <max_pos_472(50), 0(38)>
  # min_pos_485 = PHI <min_pos_464(50), 0(38)>
  # count_max_95 = PHI <count_max_456(50), count_min_358(38)>
  # count_min_490 = PHI <count_min_447(50), count_min_358(38)>
  _160 = (double) count_sum_495;
  rate_sum_161 = _160 / time_delta_86;
  # DEBUG rate_sum => rate_sum_161
  _163 = (double) count_min_490;
  rate_min_164 = _163 / time_delta_86;
  # DEBUG rate_min => rate_min_164
  _166 = (double) count_max_95;
  rate_max_167 = _166 / time_delta_86;
  # DEBUG rate_max => rate_max_167
  _168 = this_5(D)->_nodes;
  _169 = (double) _168;
  rate_avg_170 = rate_sum_161 / _169;
  # DEBUG rate_avg => rate_avg_170
  # DEBUG accepted_flits => count_sum_495
  # DEBUG __out => &cout
  # DEBUG __s => "Accepted flit rate average= "
  # DEBUG __s => "Accepted flit rate average= "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Accepted flit rate average= ", 28);
  # DEBUG this => &cout
  # DEBUG __f => rate_avg_170
  _238 = std::basic_ostream<char>::_M_insert<double> (&cout, rate_avg_170);
  # DEBUG this => _238
  # DEBUG __pf => endl
  _173 = std::endl<char, std::char_traits<char> > (_238);
  # DEBUG __out => _173
  # DEBUG __s => "\tminimum = "
  # DEBUG __s => "\tminimum = "
  std::__ostream_insert<char, std::char_traits<char> > (_173, "\tminimum = ", 11);
  # DEBUG this => _173
  # DEBUG __f => rate_min_164
  _174 = std::basic_ostream<char>::_M_insert<double> (_173, rate_min_164);
  # DEBUG __out => _174
  # DEBUG __s => " (at node "
  # DEBUG __s => " (at node "
  std::__ostream_insert<char, std::char_traits<char> > (_174, " (at node ", 10);
  _176 = std::basic_ostream<char>::operator<< (_174, min_pos_485);
  # DEBUG __out => _176
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_176, ")", 1);
  # DEBUG this => _176
  # DEBUG __pf => endl
  _177 = std::endl<char, std::char_traits<char> > (_176);
  # DEBUG __out => _177
  # DEBUG __s => "\tmaximum = "
  # DEBUG __s => "\tmaximum = "
  std::__ostream_insert<char, std::char_traits<char> > (_177, "\tmaximum = ", 11);
  # DEBUG this => _177
  # DEBUG __f => rate_max_167
  _178 = std::basic_ostream<char>::_M_insert<double> (_177, rate_max_167);
  # DEBUG __out => _178
  # DEBUG __s => " (at node "
  # DEBUG __s => " (at node "
  std::__ostream_insert<char, std::char_traits<char> > (_178, " (at node ", 10);
  _180 = std::basic_ostream<char>::operator<< (_178, max_pos_102);
  # DEBUG __out => _180
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_180, ")", 1);
  # DEBUG this => _180
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_180);
  _181 = _160 / _114;
  _182 = _137 / _90;
  # DEBUG __out => &cout
  # DEBUG __s => "Injected packet length average = "
  # DEBUG __s => "Injected packet length average = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Injected packet length average = ", 33);
  # DEBUG this => &cout
  # DEBUG __f => _182
  _183 = std::basic_ostream<char>::_M_insert<double> (&cout, _182);
  # DEBUG this => _183
  # DEBUG __pf => endl
  _184 = std::endl<char, std::char_traits<char> > (_183);
  # DEBUG __out => _184
  # DEBUG __s => "Accepted packet length average = "
  # DEBUG __s => "Accepted packet length average = "
  std::__ostream_insert<char, std::char_traits<char> > (_184, "Accepted packet length average = ", 33);
  # DEBUG this => _184
  # DEBUG __f => _181
  _185 = std::basic_ostream<char>::_M_insert<double> (_184, _181);
  # DEBUG this => _185
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_185);
  # DEBUG D#250 => &this_5(D)->_measured_in_flight_flits
  _204 = MEM[(struct map * *)this_5(D) + 696B];
  # DEBUG D#129 => D#250
  # DEBUG __n => _7
  # DEBUG this => D#129
  _241 = _7 * 48;
  _242 = _204 + _241;
  # DEBUG this => NULL
  _240 = MEM[(long unsigned int *)_242 + 40B];
  # DEBUG D#229 => D#230
  # DEBUG this => D#229
  # DEBUG D#251 => &this_5(D)->_total_in_flight_flits
  _205 = MEM[(struct map * *)this_5(D) + 672B];
  # DEBUG D#129 => D#251
  # DEBUG __n => _7
  # DEBUG this => D#129
  _239 = _205 + _241;
  # DEBUG this => NULL
  _188 = MEM[(long unsigned int *)_239 + 40B];
  # DEBUG D#229 => D#230
  # DEBUG this => D#229
  # DEBUG __out => &cout
  # DEBUG __s => "Total in-flight flits = "
  # DEBUG __s => "Total in-flight flits = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Total in-flight flits = ", 24);
  # DEBUG this => &cout
  # DEBUG __n => _188
  _243 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, _188);
  # DEBUG __out => _243
  # DEBUG __s => " ("
  # DEBUG __s => " ("
  std::__ostream_insert<char, std::char_traits<char> > (_243, " (", 2);
  # DEBUG this => _243
  # DEBUG __n => _240
  _189 = std::basic_ostream<char>::_M_insert<long unsigned int> (_243, _240);
  # DEBUG __out => _189
  # DEBUG __s => " measured)"
  # DEBUG __s => " measured)"
  std::__ostream_insert<char, std::char_traits<char> > (_189, " measured)", 10);
  # DEBUG this => _189
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_189);
  # DEBUG D#3246 => {CLOBBER}
  # DEBUG count_sum => D#3246
  # DEBUG D#3247 => {CLOBBER}
  # DEBUG count_min => D#3247
  # DEBUG D#3248 => {CLOBBER}
  # DEBUG count_max => D#3248
  # DEBUG D#3249 => {CLOBBER}
  # DEBUG min_pos => D#3249
  # DEBUG D#3250 => {CLOBBER}
  # DEBUG max_pos => D#3250
  pretmp_555 = this_5(D)->_classes;

  <bb 48>:
  # prephitmp_556 = PHI <pretmp_555(47), prephitmp_536(5)>
  c_200 = c_126 + 1;
  # DEBUG c => c_200
  # DEBUG c => c_200
  if (c_200 >= prephitmp_556)
    goto <bb 3>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 5>;

}



;; Function bool TrafficManager::_PacketsOutstanding() const (_ZNK14TrafficManager19_PacketsOutstandingEv, funcdef_no=2478, decl_uid=64981, cgraph_uid=726, symbol_order=727)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
bool TrafficManager::_PacketsOutstanding() const (const struct TrafficManager * const this)
{
  int s;
  int c;
  bool _3;
  long unsigned int _11;
  int _12;
  const size_type _14;
  const int & _15;
  long unsigned int _17;
  long unsigned int _18;
  struct map * const _22;
  _Bit_type * const _24;
  long unsigned int _25;
  const struct map & _26;
  _Bit_type * _31;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  const struct vector & _36;
  int _38;
  int * const pretmp_39;
  int _42;
  struct vector * const _44;
  _Bit_type * const _47;
  unsigned int _48;
  unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  _Bit_type * _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;

  <bb 2>:
  # DEBUG c => 0
  # DEBUG c => 0
  _38 = this_9(D)->_classes;
  if (_38 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:

  <bb 17>:
  goto <bb 15>;

  <bb 4>:
  pretmp_39 = MEM[(int * *)this_9(D) + 1880B];

  <bb 5>:
  # c_56 = PHI <0(4), c_13(14)>
  # DEBUG c => c_56
  _11 = (long unsigned int) c_56;
  # DEBUG D#224 => &this_9(D)->_measure_stats
  # DEBUG D#61 => D#224
  # DEBUG __n => _11
  # DEBUG this => D#61
  _18 = _11 * 4;
  _15 = pretmp_39 + _18;
  _12 = *_15;
  if (_12 != 0)
    goto <bb 6>;
  else
    goto <bb 13>;

  <bb 6>:
  # DEBUG D#225 => &this_9(D)->_measured_in_flight_flits
  _22 = MEM[(struct map * *)this_9(D) + 696B];
  # DEBUG D#129 => D#225
  # DEBUG __n => _11
  # DEBUG this => D#129
  _25 = _11 * 48;
  _26 = _22 + _25;
  # DEBUG this => NULL
  _14 = MEM[(long unsigned int *)_26 + 40B];
  # DEBUG D#222 => D#223
  # DEBUG this => D#222
  if (_14 == 0)
    goto <bb 7>;
  else
    goto <bb 15>;

  <bb 7>:
  # DEBUG s => 0
  _42 = this_9(D)->_nodes;
  if (_42 <= 0)
    goto <bb 13>;
  else
    goto <bb 8>;

  <bb 8>:
  # DEBUG D#226 => &this_9(D)->_qdrained
  _44 = MEM[(struct vector * *)this_9(D) + 624B];
  # DEBUG D#130 => D#226
  # DEBUG __n => 0
  # DEBUG this => D#130
  _47 = MEM[(_Bit_type * *)_44];
  # DEBUG __n => _11
  # DEBUG this => D#131
  _48 = (unsigned int) _11;
  _49 = _48 & 63;
  _50 = _11 >> 6;
  _51 = _50 * 8;
  _52 = _47 + _51;
  # DEBUG this => NULL
  # DEBUG __x => _52
  # DEBUG __y => _49
  # DEBUG this => D#47
  # DEBUG __x => _52
  # DEBUG __y => _49
  # DEBUG this => D#47
  # DEBUG this => D#49
  # DEBUG this => D#49
  _53 = 1 << _49;
  # DEBUG this => NULL
  # DEBUG __x => _52
  # DEBUG __y => _53
  # DEBUG this => NULL
  _54 = *_52;
  _55 = _53 & _54;
  if (_55 == 0)
    goto <bb 15>;
  else
    goto <bb 11>;

  <bb 9>:
  _17 = (long unsigned int) s_20;
  # DEBUG D#226 => &this_9(D)->_qdrained
  # DEBUG D#130 => D#226
  # DEBUG __n => _17
  # DEBUG this => D#130
  _35 = _17 * 40;
  _36 = _44 + _35;
  _24 = MEM[(_Bit_type * *)_36];
  # DEBUG __n => _11
  # DEBUG this => D#131
  _31 = _24 + _51;
  # DEBUG this => NULL
  # DEBUG __x => _31
  # DEBUG __y => _49
  # DEBUG this => D#47
  # DEBUG __x => _31
  # DEBUG __y => _49
  # DEBUG this => D#47
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => NULL
  # DEBUG __x => _31
  # DEBUG __y => _53
  # DEBUG this => NULL
  _33 = *_31;
  _34 = _33 & _53;
  if (_34 == 0)
    goto <bb 15>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 12>;

  <bb 11>:

  <bb 12>:
  # s_57 = PHI <0(11), s_20(10)>
  # DEBUG s => s_57
  # DEBUG D#226 => &this_9(D)->_qdrained
  # DEBUG D#130 => D#226
  # DEBUG __n => 0
  # DEBUG this => D#130
  # DEBUG __n => _11
  # DEBUG this => D#131
  # DEBUG this => NULL
  # DEBUG __x => _52
  # DEBUG __y => _49
  # DEBUG this => D#47
  # DEBUG __x => _52
  # DEBUG __y => _49
  # DEBUG this => D#47
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => NULL
  # DEBUG __x => _52
  # DEBUG __y => _53
  # DEBUG this => NULL
  s_20 = s_57 + 1;
  # DEBUG s => s_20
  # DEBUG s => s_20
  if (s_20 >= _42)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 13>:
  c_13 = c_56 + 1;
  # DEBUG c => c_13
  # DEBUG c => c_13
  if (c_13 >= _38)
    goto <bb 3>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 5>;

  <bb 15>:
  # _3 = PHI <0(17), 1(8), 1(6), 1(9)>

  <bb 16>:
  return _3;

}



;; Function void TrafficManager::_ComputeStats(const std::vector<int>&, int*, int*, int*, int*, int*) const (_ZNK14TrafficManager13_ComputeStatsERKSt6vectorIiSaIiEEPiS5_S5_S5_S5_, funcdef_no=2480, decl_uid=65001, cgraph_uid=728, symbol_order=729)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void TrafficManager::_ComputeStats(const std::vector<int>&, int*, int*, int*, int*, int*) const (const struct TrafficManager * const this, const struct vector & stats, int * sum, int * min, int * max, int * min_pos, int * max_pos)
{
  int curr;
  int i;
  static const char __PRETTY_FUNCTION__[96] = "void TrafficManager::_ComputeStats(const std::vector<int>&, int*, int*, int*, int*, int*) const";
  const int count;
  const int & _6;
  long int _11;
  long int _18;
  int _19;
  int _22;
  long int _24;
  int _25;
  long unsigned int _28;
  int _30;
  int _33;
  int _36;
  int _37;
  int * const _41;
  int * const _42;
  long int _43;
  long unsigned int _44;
  const int & _45;
  int _50;
  int _51;
  long unsigned int _52;
  long unsigned int _55;
  int _68;
  long unsigned int _71;
  long unsigned int _72;
  const int & _73;
  int _85;
  int _86;
  long unsigned int _91;
  long unsigned int _92;
  const int & _93;
  int _101;
  int _105;
  int _106;
  long unsigned int _111;
  long unsigned int _112;
  const int & _113;
  int _115;
  int _120;
  int _125;
  int _126;
  long unsigned int _131;
  long unsigned int _132;
  const int & _133;
  int _136;
  int _145;
  int _146;
  long unsigned int _151;
  long unsigned int _152;
  const int & _153;
  int _155;
  int _165;
  int _166;
  long unsigned int _171;
  long unsigned int _172;
  const int & _173;
  int _176;
  int _181;
  int _185;
  int _186;
  long unsigned int _191;
  long unsigned int _192;
  const int & _193;
  int _195;
  int _205;
  int _206;
  long unsigned int _211;
  long unsigned int _212;
  const int & _213;
  int _216;
  int _225;
  int _226;
  long unsigned int _231;
  long unsigned int _232;
  const int & _233;
  int _235;
  int _240;
  int _245;
  int _246;

  <bb 2>:
  _41 = MEM[(int * *)stats_10(D)];
  # DEBUG D#68 => stats_10(D)
  _42 = MEM[(int * *)stats_10(D) + 8B];
  # DEBUG D#68 => stats_10(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  _24 = (long int) _42;
  _18 = (long int) _41;
  _11 = _24 - _18;
  _43 = _11 /[ex] 4;
  count_12 = (const int) _43;
  # DEBUG count => count_12
  if (count_12 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __assert_fail ("count > 0", "trafficmanager.cpp", 1353, &__PRETTY_FUNCTION__);

  <bb 4>:
  if (min_pos_13(D) != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  *min_pos_13(D) = 0;

  <bb 6>:
  if (max_pos_15(D) != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  *max_pos_15(D) = 0;

  <bb 8>:
  if (min_17(D) != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => 0
  # DEBUG this => D#61
  _19 = MEM[(const int &)_41];
  *min_17(D) = _19;

  <bb 10>:
  if (max_21(D) != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => 0
  # DEBUG this => D#61
  _22 = MEM[(const int &)_41];
  *max_21(D) = _22;

  <bb 12>:
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => 0
  # DEBUG this => D#61
  _25 = MEM[(const int &)_41];
  *sum_26(D) = _25;
  # DEBUG i => 1
  # DEBUG i => 1
  if (count_12 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  return;

  <bb 14>:
  if (min_17(D) != 0B)
    goto <bb 30>;
  else
    goto <bb 15>;

  <bb 15>:
  if (max_21(D) != 0B)
    goto <bb 19>;
  else
    goto <bb 16>;

  <bb 16>:

  <bb 17>:
  # i_69 = PHI <1(16), i_88(18)>
  # DEBUG i => i_69
  _71 = (long unsigned int) i_69;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _71
  # DEBUG this => D#61
  _72 = _71 * 4;
  _73 = _41 + _72;
  curr_74 = *_73;
  # DEBUG curr => curr_74
  _85 = *sum_26(D);
  _86 = curr_74 + _85;
  *sum_26(D) = _86;
  i_88 = i_69 + 1;
  # DEBUG i => i_88
  # DEBUG i => i_88
  if (count_12 <= i_88)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 17>;

  <bb 19>:
  if (max_pos_15(D) != 0B)
    goto <bb 25>;
  else
    goto <bb 20>;

  <bb 20>:

  <bb 21>:
  # i_89 = PHI <1(20), i_108(24)>
  # DEBUG i => i_89
  _91 = (long unsigned int) i_89;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _91
  # DEBUG this => D#61
  _92 = _91 * 4;
  _93 = _41 + _92;
  curr_94 = *_93;
  # DEBUG curr => curr_94
  _101 = *max_21(D);
  if (curr_94 > _101)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  _105 = *sum_26(D);
  _106 = curr_94 + _105;
  *sum_26(D) = _106;
  i_108 = i_89 + 1;
  # DEBUG i => i_108
  # DEBUG i => i_108
  if (count_12 <= i_108)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 23>:
  *max_21(D) = curr_94;
  goto <bb 22>;

  <bb 24>:
  goto <bb 21>;

  <bb 25>:

  <bb 26>:
  # i_49 = PHI <1(25), i_47(29)>
  # DEBUG i => i_49
  _55 = (long unsigned int) i_49;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _55
  # DEBUG this => D#61
  _52 = _55 * 4;
  _6 = _41 + _52;
  curr_1 = *_6;
  # DEBUG curr => curr_1
  _68 = *max_21(D);
  if (curr_1 > _68)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  *max_21(D) = curr_1;
  *max_pos_15(D) = i_49;

  <bb 28>:
  _50 = *sum_26(D);
  _51 = curr_1 + _50;
  *sum_26(D) = _51;
  i_47 = i_49 + 1;
  # DEBUG i => i_47
  # DEBUG i => i_47
  if (count_12 <= i_47)
    goto <bb 13>;
  else
    goto <bb 29>;

  <bb 29>:
  goto <bb 26>;

  <bb 30>:
  if (max_pos_15(D) != 0B)
    goto <bb 58>;
  else
    goto <bb 31>;

  <bb 31>:
  if (max_21(D) != 0B)
    goto <bb 43>;
  else
    goto <bb 32>;

  <bb 32>:
  if (min_pos_13(D) != 0B)
    goto <bb 38>;
  else
    goto <bb 33>;

  <bb 33>:

  <bb 34>:
  # i_149 = PHI <1(33), i_168(37)>
  # DEBUG i => i_149
  _151 = (long unsigned int) i_149;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _151
  # DEBUG this => D#61
  _152 = _151 * 4;
  _153 = _41 + _152;
  curr_154 = *_153;
  # DEBUG curr => curr_154
  _155 = *min_17(D);
  if (curr_154 < _155)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  *min_17(D) = curr_154;

  <bb 36>:
  _165 = *sum_26(D);
  _166 = curr_154 + _165;
  *sum_26(D) = _166;
  i_168 = i_149 + 1;
  # DEBUG i => i_168
  # DEBUG i => i_168
  if (count_12 <= i_168)
    goto <bb 13>;
  else
    goto <bb 37>;

  <bb 37>:
  goto <bb 34>;

  <bb 38>:

  <bb 39>:
  # i_129 = PHI <1(38), i_148(42)>
  # DEBUG i => i_129
  _131 = (long unsigned int) i_129;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _131
  # DEBUG this => D#61
  _132 = _131 * 4;
  _133 = _41 + _132;
  curr_134 = *_133;
  # DEBUG curr => curr_134
  _136 = *min_17(D);
  if (curr_134 < _136)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  *min_17(D) = curr_134;
  *min_pos_13(D) = i_129;

  <bb 41>:
  _145 = *sum_26(D);
  _146 = curr_134 + _145;
  *sum_26(D) = _146;
  i_148 = i_129 + 1;
  # DEBUG i => i_148
  # DEBUG i => i_148
  if (count_12 <= i_148)
    goto <bb 13>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 39>;

  <bb 43>:
  if (min_pos_13(D) != 0B)
    goto <bb 51>;
  else
    goto <bb 44>;

  <bb 44>:

  <bb 45>:
  # i_169 = PHI <1(44), i_188(50)>
  # DEBUG i => i_169
  _171 = (long unsigned int) i_169;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _171
  # DEBUG this => D#61
  _172 = _171 * 4;
  _173 = _41 + _172;
  curr_174 = *_173;
  # DEBUG curr => curr_174
  _176 = *min_17(D);
  if (curr_174 < _176)
    goto <bb 47>;
  else
    goto <bb 46>;

  <bb 46>:
  _181 = *max_21(D);
  if (curr_174 > _181)
    goto <bb 49>;
  else
    goto <bb 48>;

  <bb 47>:
  *min_17(D) = curr_174;
  goto <bb 46>;

  <bb 48>:
  _185 = *sum_26(D);
  _186 = curr_174 + _185;
  *sum_26(D) = _186;
  i_188 = i_169 + 1;
  # DEBUG i => i_188
  # DEBUG i => i_188
  if (count_12 <= i_188)
    goto <bb 13>;
  else
    goto <bb 50>;

  <bb 49>:
  *max_21(D) = curr_174;
  goto <bb 48>;

  <bb 50>:
  goto <bb 45>;

  <bb 51>:

  <bb 52>:
  # i_109 = PHI <1(51), i_128(57)>
  # DEBUG i => i_109
  _111 = (long unsigned int) i_109;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _111
  # DEBUG this => D#61
  _112 = _111 * 4;
  _113 = _41 + _112;
  curr_114 = *_113;
  # DEBUG curr => curr_114
  _115 = *min_17(D);
  if (curr_114 < _115)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  *min_17(D) = curr_114;
  *min_pos_13(D) = i_109;

  <bb 54>:
  _120 = *max_21(D);
  if (curr_114 > _120)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  *max_21(D) = curr_114;

  <bb 56>:
  _125 = *sum_26(D);
  _126 = curr_114 + _125;
  *sum_26(D) = _126;
  i_128 = i_109 + 1;
  # DEBUG i => i_128
  # DEBUG i => i_128
  if (count_12 <= i_128)
    goto <bb 13>;
  else
    goto <bb 57>;

  <bb 57>:
  goto <bb 52>;

  <bb 58>:
  if (max_21(D) != 0B)
    goto <bb 70>;
  else
    goto <bb 59>;

  <bb 59>:
  if (min_pos_13(D) != 0B)
    goto <bb 65>;
  else
    goto <bb 60>;

  <bb 60>:

  <bb 61>:
  # i_209 = PHI <1(60), i_228(64)>
  # DEBUG i => i_209
  _211 = (long unsigned int) i_209;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _211
  # DEBUG this => D#61
  _212 = _211 * 4;
  _213 = _41 + _212;
  curr_214 = *_213;
  # DEBUG curr => curr_214
  _216 = *min_17(D);
  if (curr_214 < _216)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:
  _225 = *sum_26(D);
  _226 = curr_214 + _225;
  *sum_26(D) = _226;
  i_228 = i_209 + 1;
  # DEBUG i => i_228
  # DEBUG i => i_228
  if (count_12 <= i_228)
    goto <bb 13>;
  else
    goto <bb 64>;

  <bb 63>:
  *min_17(D) = curr_214;
  goto <bb 62>;

  <bb 64>:
  goto <bb 61>;

  <bb 65>:

  <bb 66>:
  # i_189 = PHI <1(65), i_208(69)>
  # DEBUG i => i_189
  _191 = (long unsigned int) i_189;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _191
  # DEBUG this => D#61
  _192 = _191 * 4;
  _193 = _41 + _192;
  curr_194 = *_193;
  # DEBUG curr => curr_194
  _195 = *min_17(D);
  if (curr_194 < _195)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  *min_17(D) = curr_194;
  *min_pos_13(D) = i_189;

  <bb 68>:
  _205 = *sum_26(D);
  _206 = curr_194 + _205;
  *sum_26(D) = _206;
  i_208 = i_189 + 1;
  # DEBUG i => i_208
  # DEBUG i => i_208
  if (count_12 <= i_208)
    goto <bb 13>;
  else
    goto <bb 69>;

  <bb 69>:
  goto <bb 66>;

  <bb 70>:
  if (min_pos_13(D) != 0B)
    goto <bb 78>;
  else
    goto <bb 71>;

  <bb 71>:

  <bb 72>:
  # i_229 = PHI <1(71), i_248(77)>
  # DEBUG i => i_229
  _231 = (long unsigned int) i_229;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _231
  # DEBUG this => D#61
  _232 = _231 * 4;
  _233 = _41 + _232;
  curr_234 = *_233;
  # DEBUG curr => curr_234
  _235 = *min_17(D);
  if (curr_234 < _235)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  *min_17(D) = curr_234;

  <bb 74>:
  _240 = *max_21(D);
  if (curr_234 > _240)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  *max_21(D) = curr_234;
  *max_pos_15(D) = i_229;

  <bb 76>:
  _245 = *sum_26(D);
  _246 = curr_234 + _245;
  *sum_26(D) = _246;
  i_248 = i_229 + 1;
  # DEBUG i => i_248
  # DEBUG i => i_248
  if (count_12 <= i_248)
    goto <bb 13>;
  else
    goto <bb 77>;

  <bb 77>:
  goto <bb 72>;

  <bb 78>:

  <bb 79>:
  # i_63 = PHI <1(78), i_39(84)>
  # DEBUG i => i_63
  _28 = (long unsigned int) i_63;
  # DEBUG D#61 => stats_10(D)
  # DEBUG __n => _28
  # DEBUG this => D#61
  _44 = _28 * 4;
  _45 = _41 + _44;
  curr_29 = *_45;
  # DEBUG curr => curr_29
  _30 = *min_17(D);
  if (curr_29 < _30)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  *min_17(D) = curr_29;
  *min_pos_13(D) = i_63;

  <bb 81>:
  _33 = *max_21(D);
  if (curr_29 > _33)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  *max_21(D) = curr_29;
  *max_pos_15(D) = i_63;

  <bb 83>:
  _36 = *sum_26(D);
  _37 = curr_29 + _36;
  *sum_26(D) = _37;
  i_39 = i_63 + 1;
  # DEBUG i => i_39
  # DEBUG i => i_39
  if (count_12 <= i_39)
    goto <bb 13>;
  else
    goto <bb 84>;

  <bb 84>:
  goto <bb 79>;

}



;; Function void TrafficManager::_DisplayRemaining(std::ostream&) const (_ZNK14TrafficManager17_DisplayRemainingERSo, funcdef_no=2481, decl_uid=65006, cgraph_uid=729, symbol_order=730)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void TrafficManager::_DisplayRemaining(std::ostream&) const (const struct TrafficManager * const this, struct ostream & os)
{
  char_type D.157792;
  char __c;
  char_type D.157789;
  char __c;
  char_type D.157786;
  struct basic_ostream & D.157780;
  struct basic_ostream & D.157777;
  struct basic_ostream & D.157773;
  char_type D.157769;
  char __c;
  char_type D.157766;
  char __c;
  char_type D.157763;
  struct basic_ostream & D.157757;
  struct basic_ostream & D.157754;
  struct basic_ostream & D.157750;
  struct basic_ostream & D.157746;
  char_type D.157742;
  char __c;
  char_type D.157739;
  char __c;
  char_type D.157736;
  struct basic_ostream & D.157730;
  struct basic_ostream & D.157727;
  const struct _Rb_tree_node_base * const iter$_M_node;
  int i;
  int c;
  int prephitmp_1;
  struct map * const prephitmp_2;
  int pretmp_3;
  int _4;
  struct map * const prephitmp_5;
  const struct map & _7;
  struct map * const pretmp_9;
  int _13;
  struct basic_ostream & _16;
  int (*__vtbl_ptr_type) () * _18;
  long unsigned int _19;
  int _21;
  struct basic_ostream & _23;
  int prephitmp_24;
  const size_type _25;
  const struct map & _28;
  const size_type _29;
  int (*__vtbl_ptr_type) () * _31;
  const struct _Rb_tree_node_base * _32;
  int _33;
  struct basic_ostream & _35;
  const size_type _37;
  const struct map & _39;
  long unsigned int _40;
  int (*__vtbl_ptr_type) () * _41;
  const size_type _43;
  int pretmp_46;
  struct map * const _47;
  struct map * const _48;
  struct map * const _50;
  struct map * const _51;
  struct __ostream_type & _54;
  const struct map & _55;
  const struct _Rb_tree_node_base * _56;
  const struct map & _57;
  struct __ostream_type & _60;
  const struct __ctype_type * _63;
  const struct __ctype_type * _67;
  const struct __ctype_type * _71;
  struct map * const pretmp_72;
  struct map * const prephitmp_73;
  long int _74;
  sizetype _75;
  struct basic_ios * _76;
  bool _77;
  struct basic_ostream & _79;
  bool _80;
  char _81;
  char_type _84;
  int (*__vtbl_ptr_type) () * _89;
  int (*__vtbl_ptr_type) () _90;
  const struct map & _91;
  int pretmp_92;
  const struct _Rb_tree_node_base * _93;
  void * PROF_94;
  char_type _96;
  int pretmp_99;
  int pretmp_100;
  long int _103;
  sizetype _104;
  struct basic_ios * _105;
  struct basic_ostream & _108;
  bool _109;
  char _110;
  const struct map & _112;
  char_type _113;
  int (*__vtbl_ptr_type) () * _118;
  int (*__vtbl_ptr_type) () _119;
  void * PROF_123;
  char_type _125;
  long int _131;
  sizetype _132;
  struct basic_ios * _133;
  struct basic_ostream & _136;
  struct map * const pretmp_137;
  char _138;
  char_type _141;
  int (*__vtbl_ptr_type) () * _146;
  int (*__vtbl_ptr_type) () _147;
  struct map * const pretmp_149;
  struct map * const prephitmp_150;
  void * PROF_151;
  char_type _153;
  const struct map & _161;
  bool _162;
  int prephitmp_172;
  int pretmp_176;
  bool _177;
  const struct _Rb_tree_node_base * _180;
  bool _182;

  <bb 2>:
  # DEBUG c => 0
  # DEBUG c => 0
  _4 = this_12(D)->_classes;
  if (_4 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:

  <bb 39>:
  return;

  <bb 4>:

  <bb 5>:
  # c_190 = PHI <0(4), c_45(26)>
  # DEBUG c => c_190
  # DEBUG this => &iter
  # DEBUG iter$_M_node => 0B
  # DEBUG __out => os_14(D)
  # DEBUG __s => "Class "
  # DEBUG __s => "Class "
  std::__ostream_insert<char, std::char_traits<char> > (os_14(D), "Class ", 6);
  _16 = std::basic_ostream<char>::operator<< (os_14(D), c_190);
  # DEBUG __out => _16
  # DEBUG __s => ":"
  # DEBUG __s => ":"
  std::__ostream_insert<char, std::char_traits<char> > (_16, ":", 1);
  # DEBUG this => _16
  # DEBUG __pf => endl
  # DEBUG __os => _16
  _18 = _16->_vptr.basic_ostream;
  _74 = MEM[(long int *)_18 + -24B];
  _75 = (sizetype) _74;
  _76 = _16 + _75;
  # DEBUG this => _76
  # DEBUG __c => 10
  _63 = MEM[(const struct basic_ios *)_76]._M_ctype;
  # DEBUG __f => _63
  if (_63 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  std::__throw_bad_cast ();

  <bb 7>:
  # DEBUG this => _63
  # DEBUG __c => 10
  _81 = MEM[(const struct ctype *)_63]._M_widen_ok;
  if (_81 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _84 = MEM[(const struct ctype *)_63]._M_widen[10];
  pretmp_46 = (int) _84;
  goto <bb 11>;

  <bb 9>:
  # DEBUG this => _63
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_63);
  _89 = MEM[(const struct ctype *)_63].D.16885._vptr.facet;
  _90 = MEM[(int (*__vtbl_ptr_type) () *)_89 + 48B];
  PROF_94 = [obj_type_ref] OBJ_TYPE_REF(_90;(const struct ctype)_63->6);
  if (PROF_94 == do_widen)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  _96 = OBJ_TYPE_REF(_90;(const struct ctype)_63->6) (_63, 10);
  pretmp_3 = (int) _96;

  <bb 11>:
  # prephitmp_1 = PHI <pretmp_46(8), 10(9), pretmp_3(10)>
  _79 = std::basic_ostream<char>::put (_16, prephitmp_1);
  # DEBUG __os => _79
  std::basic_ostream<char>::flush (_79);
  # DEBUG __out => os_14(D)
  # DEBUG __s => "Remaining flits: "
  # DEBUG __s => "Remaining flits: "
  std::__ostream_insert<char, std::char_traits<char> > (os_14(D), "Remaining flits: ", 17);
  _19 = (long unsigned int) c_190;
  # DEBUG D#363 => &this_12(D)->_total_in_flight_flits
  _47 = MEM[(struct map * *)this_12(D) + 672B];
  # DEBUG D#129 => D#363
  # DEBUG __n => _19
  # DEBUG this => D#129
  _40 = _19 * 48;
  _39 = _47 + _40;
  # DEBUG this => NULL
  iter$_M_node_17 = MEM[(struct _Rb_tree_node_base * *)_39 + 24B];
  # DEBUG D#337 => D#338
  # DEBUG this => D#337
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_17
  # DEBUG iter$_M_node => iter$_M_node_17
  # DEBUG i => 0
  # DEBUG iter$_M_node => iter$_M_node_17
  # DEBUG i => 0
  # DEBUG D#365 => &this_12(D)->_total_in_flight_flits
  # DEBUG D#129 => D#365
  # DEBUG __n => _19
  # DEBUG this => D#129
  # DEBUG this => NULL
  # DEBUG this => D#336
  _93 = &MEM[(const struct _Rb_tree *)_39]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _93
  # DEBUG this => &iter
  # DEBUG __x => &D.74528
  if (iter$_M_node_17 != _93)
    goto <bb 27>;
  else
    goto <bb 31>;

  <bb 12>:
  # DEBUG __out => os_14(D)
  # DEBUG __s => "[...] "
  # DEBUG __s => "[...] "
  std::__ostream_insert<char, std::char_traits<char> > (os_14(D), "[...] ", 6);
  pretmp_9 = MEM[(struct map * *)this_12(D) + 672B];
  pretmp_149 = pretmp_9 + _40;

  <bb 13>:
  # prephitmp_150 = PHI <prephitmp_2(31), pretmp_149(12)>
  # DEBUG D#367 => &this_12(D)->_total_in_flight_flits
  # DEBUG D#129 => D#367
  # DEBUG __n => _19
  # DEBUG this => D#129
  # DEBUG this => NULL
  _29 = MEM[(long unsigned int *)prephitmp_150 + 40B];
  # DEBUG D#229 => D#230
  # DEBUG this => D#229
  # DEBUG __out => os_14(D)
  # DEBUG __s => "("
  # DEBUG __s => "("
  std::__ostream_insert<char, std::char_traits<char> > (os_14(D), "(", 1);
  # DEBUG this => os_14(D)
  # DEBUG __n => _29
  _54 = std::basic_ostream<char>::_M_insert<long unsigned int> (os_14(D), _29);
  # DEBUG __out => _54
  # DEBUG __s => " flits)"
  # DEBUG __s => " flits)"
  std::__ostream_insert<char, std::char_traits<char> > (_54, " flits)", 7);
  # DEBUG this => _54
  # DEBUG __pf => endl
  # DEBUG __os => _54
  _31 = MEM[(struct basic_ostream *)_54]._vptr.basic_ostream;
  _103 = MEM[(long int *)_31 + -24B];
  _104 = (sizetype) _103;
  _105 = _54 + _104;
  # DEBUG this => _105
  # DEBUG __c => 10
  _67 = MEM[(const struct basic_ios *)_105]._M_ctype;
  # DEBUG __f => _67
  if (_67 == 0B)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => _67
  # DEBUG __c => 10
  _110 = MEM[(const struct ctype *)_67]._M_widen_ok;
  if (_110 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _113 = MEM[(const struct ctype *)_67]._M_widen[10];
  pretmp_92 = (int) _113;
  goto <bb 18>;

  <bb 16>:
  # DEBUG this => _67
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_67);
  _118 = MEM[(const struct ctype *)_67].D.16885._vptr.facet;
  _119 = MEM[(int (*__vtbl_ptr_type) () *)_118 + 48B];
  PROF_123 = [obj_type_ref] OBJ_TYPE_REF(_119;(const struct ctype)_67->6);
  if (PROF_123 == do_widen)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  _125 = OBJ_TYPE_REF(_119;(const struct ctype)_67->6) (_67, 10);
  pretmp_176 = (int) _125;

  <bb 18>:
  # prephitmp_172 = PHI <pretmp_92(15), 10(16), pretmp_176(17)>
  _108 = std::basic_ostream<char>::put (_54, prephitmp_172);
  # DEBUG __os => _108
  std::basic_ostream<char>::flush (_108);
  # DEBUG __out => os_14(D)
  # DEBUG __s => "Measured flits: "
  # DEBUG __s => "Measured flits: "
  std::__ostream_insert<char, std::char_traits<char> > (os_14(D), "Measured flits: ", 16);
  # DEBUG D#368 => &this_12(D)->_measured_in_flight_flits
  _50 = MEM[(struct map * *)this_12(D) + 696B];
  # DEBUG D#129 => D#368
  # DEBUG __n => _19
  # DEBUG this => D#129
  _55 = _50 + _40;
  # DEBUG this => NULL
  iter$_M_node_30 = MEM[(struct _Rb_tree_node_base * *)_55 + 24B];
  # DEBUG D#337 => D#338
  # DEBUG this => D#337
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_30
  # DEBUG iter$_M_node => iter$_M_node_30
  # DEBUG i => 0
  # DEBUG iter$_M_node => iter$_M_node_30
  # DEBUG i => 0
  # DEBUG D#370 => &this_12(D)->_measured_in_flight_flits
  # DEBUG D#129 => D#370
  # DEBUG __n => _19
  # DEBUG this => D#129
  # DEBUG this => NULL
  # DEBUG this => D#336
  _180 = &MEM[(const struct _Rb_tree *)_55]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _180
  # DEBUG this => &iter
  # DEBUG __x => &D.74530
  if (iter$_M_node_30 != _180)
    goto <bb 32>;
  else
    goto <bb 36>;

  <bb 19>:
  # DEBUG __out => os_14(D)
  # DEBUG __s => "[...] "
  # DEBUG __s => "[...] "
  std::__ostream_insert<char, std::char_traits<char> > (os_14(D), "[...] ", 6);
  pretmp_137 = MEM[(struct map * *)this_12(D) + 696B];
  pretmp_72 = pretmp_137 + _40;

  <bb 20>:
  # prephitmp_73 = PHI <prephitmp_5(36), pretmp_72(19)>
  # DEBUG D#372 => &this_12(D)->_measured_in_flight_flits
  # DEBUG D#129 => D#372
  # DEBUG __n => _19
  # DEBUG this => D#129
  # DEBUG this => NULL
  _43 = MEM[(long unsigned int *)prephitmp_73 + 40B];
  # DEBUG D#229 => D#230
  # DEBUG this => D#229
  # DEBUG __out => os_14(D)
  # DEBUG __s => "("
  # DEBUG __s => "("
  std::__ostream_insert<char, std::char_traits<char> > (os_14(D), "(", 1);
  # DEBUG this => os_14(D)
  # DEBUG __n => _43
  _60 = std::basic_ostream<char>::_M_insert<long unsigned int> (os_14(D), _43);
  # DEBUG __out => _60
  # DEBUG __s => " flits)"
  # DEBUG __s => " flits)"
  std::__ostream_insert<char, std::char_traits<char> > (_60, " flits)", 7);
  # DEBUG this => _60
  # DEBUG __pf => endl
  # DEBUG __os => _60
  _41 = MEM[(struct basic_ostream *)_60]._vptr.basic_ostream;
  _131 = MEM[(long int *)_41 + -24B];
  _132 = (sizetype) _131;
  _133 = _60 + _132;
  # DEBUG this => _133
  # DEBUG __c => 10
  _71 = MEM[(const struct basic_ios *)_133]._M_ctype;
  # DEBUG __f => _71
  if (_71 == 0B)
    goto <bb 6>;
  else
    goto <bb 21>;

  <bb 21>:
  # DEBUG this => _71
  # DEBUG __c => 10
  _138 = MEM[(const struct ctype *)_71]._M_widen_ok;
  if (_138 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _141 = MEM[(const struct ctype *)_71]._M_widen[10];
  pretmp_99 = (int) _141;
  goto <bb 25>;

  <bb 23>:
  # DEBUG this => _71
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_71);
  _146 = MEM[(const struct ctype *)_71].D.16885._vptr.facet;
  _147 = MEM[(int (*__vtbl_ptr_type) () *)_146 + 48B];
  PROF_151 = [obj_type_ref] OBJ_TYPE_REF(_147;(const struct ctype)_71->6);
  if (PROF_151 == do_widen)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:
  _153 = OBJ_TYPE_REF(_147;(const struct ctype)_71->6) (_71, 10);
  pretmp_100 = (int) _153;

  <bb 25>:
  # prephitmp_24 = PHI <pretmp_99(22), 10(23), pretmp_100(24)>
  _136 = std::basic_ostream<char>::put (_60, prephitmp_24);
  # DEBUG __os => _136
  std::basic_ostream<char>::flush (_136);
  # DEBUG D#373 => {CLOBBER}
  # DEBUG iter$_M_node => D#373
  c_45 = c_190 + 1;
  # DEBUG c => c_45
  # DEBUG c => c_45
  _13 = this_12(D)->_classes;
  if (_13 <= c_45)
    goto <bb 3>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 5>;

  <bb 27>:

  <bb 28>:
  # i_143 = PHI <0(27), i_26(30)>
  # iter$_M_node_98 = PHI <iter$_M_node_17(27), iter$_M_node_20(30)>
  # DEBUG iter$_M_node => iter$_M_node_98
  # DEBUG i => i_143
  # DEBUG D#365 => &this_12(D)->_total_in_flight_flits
  # DEBUG D#129 => D#365
  # DEBUG __n => _19
  # DEBUG this => D#129
  # DEBUG this => NULL
  # DEBUG this => D#336
  # DEBUG this => NULL
  # DEBUG __x => _93
  # DEBUG this => &iter
  # DEBUG __x => &D.74528
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_98
  # DEBUG D#364 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_98]._M_value_field
  # DEBUG __r => D#364
  _21 = MEM[(const struct pair *)iter$_M_node_98 + 32B].first;
  _23 = std::basic_ostream<char>::operator<< (os_14(D), _21);
  # DEBUG __out => _23
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_23, " ", 1);
  # DEBUG this => &iter
  iter$_M_node_20 = std::_Rb_tree_increment (iter$_M_node_98);
  # DEBUG iter$_M_node => iter$_M_node_20
  i_26 = i_143 + 1;
  # DEBUG i => i_26
  # DEBUG iter$_M_node => iter$_M_node_20
  # DEBUG i => i_26
  # DEBUG D#365 => &this_12(D)->_total_in_flight_flits
  _48 = MEM[(struct map * *)this_12(D) + 672B];
  # DEBUG D#129 => D#365
  # DEBUG __n => _19
  # DEBUG this => D#129
  _28 = _48 + _40;
  # DEBUG this => NULL
  # DEBUG this => D#336
  _32 = &MEM[(const struct _Rb_tree *)_28]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _32
  # DEBUG this => &iter
  # DEBUG __x => &D.74528
  _162 = i_26 <= 9;
  _77 = iter$_M_node_20 != _32;
  _177 = _77 & _162;
  if (_177 != 0)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  # _112 = PHI <_28(28)>

  <bb 38>:
  goto <bb 31>;

  <bb 30>:
  goto <bb 28>;

  <bb 31>:
  # _91 = PHI <_112(38), _39(11)>
  # prephitmp_2 = PHI <_112(38), _39(11)>
  # DEBUG D#366 => &this_12(D)->_total_in_flight_flits
  # DEBUG D#129 => D#366
  # DEBUG __n => _19
  # DEBUG this => D#129
  # DEBUG this => NULL
  _25 = MEM[(long unsigned int *)_91 + 40B];
  # DEBUG D#229 => D#230
  # DEBUG this => D#229
  if (_25 > 10)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 32>:

  <bb 33>:
  # i_191 = PHI <0(32), i_38(35)>
  # iter$_M_node_95 = PHI <iter$_M_node_30(32), iter$_M_node_58(35)>
  # DEBUG iter$_M_node => iter$_M_node_95
  # DEBUG i => i_191
  # DEBUG D#370 => &this_12(D)->_measured_in_flight_flits
  # DEBUG D#129 => D#370
  # DEBUG __n => _19
  # DEBUG this => D#129
  # DEBUG this => NULL
  # DEBUG this => D#336
  # DEBUG this => NULL
  # DEBUG __x => _180
  # DEBUG this => &iter
  # DEBUG __x => &D.74530
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_95
  # DEBUG D#369 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_95]._M_value_field
  # DEBUG __r => D#369
  _33 = MEM[(const struct pair *)iter$_M_node_95 + 32B].first;
  _35 = std::basic_ostream<char>::operator<< (os_14(D), _33);
  # DEBUG __out => _35
  # DEBUG __s => " "
  # DEBUG __s => " "
  std::__ostream_insert<char, std::char_traits<char> > (_35, " ", 1);
  # DEBUG this => &iter
  iter$_M_node_58 = std::_Rb_tree_increment (iter$_M_node_95);
  # DEBUG iter$_M_node => iter$_M_node_58
  i_38 = i_191 + 1;
  # DEBUG i => i_38
  # DEBUG iter$_M_node => iter$_M_node_58
  # DEBUG i => i_38
  # DEBUG D#370 => &this_12(D)->_measured_in_flight_flits
  _51 = MEM[(struct map * *)this_12(D) + 696B];
  # DEBUG D#129 => D#370
  # DEBUG __n => _19
  # DEBUG this => D#129
  _57 = _51 + _40;
  # DEBUG this => NULL
  # DEBUG this => D#336
  _56 = &MEM[(const struct _Rb_tree *)_57]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _56
  # DEBUG this => &iter
  # DEBUG __x => &D.74530
  _182 = i_38 <= 9;
  _80 = _56 != iter$_M_node_58;
  _109 = _80 & _182;
  if (_109 != 0)
    goto <bb 35>;
  else
    goto <bb 34>;

  <bb 34>:
  # _7 = PHI <_57(33)>

  <bb 37>:
  goto <bb 36>;

  <bb 35>:
  goto <bb 33>;

  <bb 36>:
  # _161 = PHI <_7(37), _55(18)>
  # prephitmp_5 = PHI <_7(37), _55(18)>
  # DEBUG D#371 => &this_12(D)->_measured_in_flight_flits
  # DEBUG D#129 => D#371
  # DEBUG __n => _19
  # DEBUG this => D#129
  # DEBUG this => NULL
  _37 = MEM[(long unsigned int *)_161 + 40B];
  # DEBUG D#229 => D#230
  # DEBUG this => D#229
  if (_37 > 10)
    goto <bb 19>;
  else
    goto <bb 20>;

}



;; Function int TrafficManager::_GetNextPacketSize(int) const (_ZNK14TrafficManager18_GetNextPacketSizeEi, funcdef_no=2492, decl_uid=65017, cgraph_uid=740, symbol_order=741)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int TrafficManager::_GetNextPacketSize(int) const (const struct TrafficManager * const this, int cl)
{
  const int limit;
  int i;
  int pct;
  int max_val;
  int sizes;
  static const char __PRETTY_FUNCTION__[50] = "int TrafficManager::_GetNextPacketSize(int) const";
  int _3;
  int _9;
  long unsigned int _10;
  long unsigned int _11;
  int _13;
  long int _14;
  long int _15;
  long unsigned int _18;
  long int _19;
  int _23;
  long int _24;
  int _25;
  int _26;
  int * const _29;
  int * const _31;
  int * const _32;
  int * const _33;
  struct vector * const _34;
  struct vector * const _35;
  const struct vector & _36;
  long int _37;
  int _38;
  long int _39;
  long int _40;
  long unsigned int _42;
  const int & _43;
  const struct vector & _44;
  long unsigned int _45;
  const int & _46;
  const int & _47;
  int * const _48;
  int * const _49;
  int _53;
  int * const _58;
  long unsigned int _64;
  long unsigned int _67;

  <bb 2>:
  if (cl_6(D) < 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _9 = this_8(D)->_classes;
  if (cl_6(D) >= _9)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  __assert_fail ("cl >= 0 && cl < _classes", "trafficmanager.cpp", 2265, &__PRETTY_FUNCTION__);

  <bb 5>:
  _10 = (long unsigned int) cl_6(D);
  # DEBUG D#278 => &this_8(D)->_packet_size
  _34 = MEM[(struct vector * *)this_8(D) + 96B];
  # DEBUG D#134 => D#278
  # DEBUG __n => _10
  # DEBUG this => D#134
  _11 = _10 * 24;
  _36 = _34 + _11;
  # DEBUG psize => NULL
  _32 = MEM[(int * *)_36];
  _33 = MEM[(int * *)_36 + 8B];
  # DEBUG this => D#68
  # DEBUG this => D#68
  _24 = (long int) _33;
  _19 = (long int) _32;
  _15 = _24 - _19;
  _14 = _15 /[ex] 4;
  sizes_12 = (int) _14;
  # DEBUG sizes => sizes_12
  if (sizes_12 == 1)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG __n => 0
  # DEBUG this => D#61
  _13 = MEM[(const int &)_32];
  goto <bb 19>;

  <bb 7>:
  # DEBUG D#279 => &this_8(D)->_packet_size_rate
  _35 = MEM[(struct vector * *)this_8(D) + 120B];
  # DEBUG D#134 => D#279
  # DEBUG __n => _10
  # DEBUG this => D#134
  _44 = _35 + _11;
  # DEBUG prate => NULL
  # DEBUG D#280 => &this_8(D)->_packet_size_max_val
  _29 = MEM[(int * *)this_8(D) + 144B];
  # DEBUG D#61 => D#280
  # DEBUG __n => _10
  # DEBUG this => D#61
  _42 = _10 * 4;
  _43 = _29 + _42;
  max_val_16 = *_43;
  # DEBUG max_val => max_val_16
  # DEBUG max => max_val_16
  _37 = ran_next ();
  _38 = max_val_16 + 1;
  _39 = (long int) _38;
  _40 = _37 % _39;
  pct_41 = (int) _40;
  # DEBUG pct => pct_41
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG pct => pct_41
  _53 = sizes_12 + -1;
  if (_53 <= 0)
    goto <bb 16>;
  else
    goto <bb 8>;

  <bb 8>:
  _58 = MEM[(int * *)_44];
  # DEBUG __n => 0
  # DEBUG this => D#61
  limit_57 = MEM[(const int &)_58];
  # DEBUG limit => limit_57
  if (pct_41 < limit_57)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 9>:
  _18 = (long unsigned int) i_22;
  # DEBUG __n => _18
  # DEBUG this => D#61
  _45 = _18 * 4;
  _46 = _58 + _45;
  limit_20 = *_46;
  # DEBUG limit => limit_20
  if (limit_20 > pct_21)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 14>;

  <bb 11>:
  # _64 = PHI <_45(9)>

  <bb 12>:
  # _67 = PHI <_64(11), 0(8)>

  <bb 20>:
  _31 = MEM[(int * *)_36];
  # DEBUG __n => 0
  # DEBUG this => D#61
  _47 = _31 + _67;
  _23 = *_47;
  goto <bb 19>;

  <bb 13>:

  <bb 14>:
  # pct_56 = PHI <pct_41(13), pct_21(10)>
  # i_62 = PHI <0(13), i_22(10)>
  # limit_66 = PHI <limit_57(13), limit_20(10)>
  # DEBUG i => i_62
  # DEBUG pct => pct_56
  # DEBUG __n => 0
  # DEBUG this => D#61
  # DEBUG limit => limit_66
  pct_21 = pct_56 - limit_66;
  # DEBUG pct => pct_21
  i_22 = i_62 + 1;
  # DEBUG i => i_22
  # DEBUG i => i_22
  # DEBUG pct => pct_21
  if (i_22 >= _53)
    goto <bb 15>;
  else
    goto <bb 9>;

  <bb 15>:
  # pct_65 = PHI <pct_21(14)>

  <bb 16>:
  # pct_61 = PHI <pct_65(15), pct_41(7)>
  # DEBUG this => _44
  _48 = MEM[(int * *)_44 + 8B];
  # DEBUG D#276 => _44
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _25 = MEM[(const int &)_48 + 18446744073709551612];
  if (_25 <= pct_61)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  __assert_fail ("prate.back() > pct", "trafficmanager.cpp", 2287, &__PRETTY_FUNCTION__);

  <bb 18>:
  # DEBUG this => _36
  _49 = MEM[(int * *)_36 + 8B];
  # DEBUG D#276 => _36
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _26 = MEM[(const int &)_49 + 18446744073709551612];

  <bb 19>:
  # _3 = PHI <_13(6), _23(20), _26(18)>

  <bb 21>:
  return _3;

}



;; Function double TrafficManager::_GetAveragePacketSize(int) const (_ZNK14TrafficManager21_GetAveragePacketSizeEi, funcdef_no=2493, decl_uid=65020, cgraph_uid=741, symbol_order=742)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
double TrafficManager::_GetAveragePacketSize(int) const (const struct TrafficManager * const this, int cl)
{
  bool Close_Phi.4838_I_lsm.4844;
  int Close_Phi.4838_I_lsm.4843;
  bool phi_out_of_ssa.4837_I_lsm.4842;
  int phi_out_of_ssa.4837_I_lsm.4841;
  signed long graphite_IV.4840;
  int Cross_BB_scalar_dependence.4839[1];
  int D.157851;
  int D.157850;
  int D.157849;
  int D.157848;
  int D.157847;
  int D.157846;
  int Close_Phi.4838[1];
  int phi_out_of_ssa.4837[1];
  int i;
  int sum;
  int sizes;
  double _3;
  signed long _4;
  signed long _5;
  long unsigned int _7;
  long int _10;
  long int _12;
  int _13;
  double _14;
  long int _15;
  long int _18;
  int _23;
  int _24;
  int _25;
  double _26;
  double _27;
  int * _28;
  int * const _29;
  int * const _30;
  int * const _31;
  struct vector * const _32;
  struct vector * const _33;
  long unsigned int _34;
  const struct vector & _35;
  const struct vector & _36;
  long unsigned int _40;
  const int & _41;
  bool _42;
  signed long _43;
  signed long _45;
  signed long _48;
  double pretmp_58;
  double prephitmp_59;
  sizetype _60;
  int _61;
  int * const pretmp_62;
  sizetype _63;
  sizetype _71;
  sizetype _72;
  int * _73;
  int _74;

  <bb 2>:
  _7 = (long unsigned int) cl_6(D);
  # DEBUG D#156 => &this_8(D)->_packet_size
  _32 = MEM[(struct vector * *)this_8(D) + 96B];
  # DEBUG D#134 => D#156
  # DEBUG __n => _7
  # DEBUG this => D#134
  _34 = _7 * 24;
  _35 = _32 + _34;
  # DEBUG psize => NULL
  _30 = MEM[(int * *)_35];
  _31 = MEM[(int * *)_35 + 8B];
  # DEBUG this => D#68
  # DEBUG this => D#68
  _18 = (long int) _31;
  _15 = (long int) _30;
  _12 = _18 - _15;
  _10 = _12 /[ex] 4;
  sizes_11 = (int) _10;
  # DEBUG sizes => sizes_11
  if (sizes_11 == 1)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG __n => 0
  # DEBUG this => D#61
  _13 = MEM[(const int &)_30];
  _14 = (double) _13;
  goto <bb 12>;

  <bb 4>:
  # DEBUG D#157 => &this_8(D)->_packet_size_rate
  _33 = MEM[(struct vector * *)this_8(D) + 120B];
  # DEBUG D#134 => D#157
  # DEBUG __n => _7
  # DEBUG this => D#134
  _36 = _33 + _34;
  # DEBUG prate => NULL
  # DEBUG sum => 0
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG sum => 0
  if (sizes_11 <= 0)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_62 = MEM[(int * *)_36];
  phi_out_of_ssa.4837[0] = 0;
  _48 = -9223372036854775808 - _10;
  _45 = _48 % 4294967296;
  _43 = 4294967296 - _45;
  _42 = _43 > 0;
  if (_42 != 0)
    goto <bb 6>;
  else
    goto <bb 10>;

  <bb 6>:
  _5 = _48 % 4294967296;
  _4 = 4294967295 - _5;
  phi_out_of_ssa.4837_I_lsm.4841_49 = phi_out_of_ssa.4837[0];

  <bb 7>:
  # graphite_IV.4840_2 = PHI <0(6), graphite_IV.4840_1(8)>
  # phi_out_of_ssa.4837_I_lsm.4841_77 = PHI <phi_out_of_ssa.4837_I_lsm.4841_49(6), sum_75(8)>
  # DEBUG i => NULL
  # DEBUG sum => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _60 = (sizetype) graphite_IV.4840_2;
  _63 = _60 * 4;
  _28 = _30 + _63;
  _61 = MEM[(const int &)_28];
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _71 = (sizetype) graphite_IV.4840_2;
  _72 = _71 * 4;
  _73 = pretmp_62 + _72;
  _23 = MEM[(const int &)_73];
  _74 = _23 * _61;
  sum_75 = _74 + phi_out_of_ssa.4837_I_lsm.4841_77;
  # DEBUG sum => NULL
  # DEBUG i => NULL
  # DEBUG i => NULL
  # DEBUG sum => NULL
  graphite_IV.4840_1 = graphite_IV.4840_2 + 1;
  if (graphite_IV.4840_2 < _4)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # Close_Phi.4838_I_lsm.4843_20 = PHI <sum_75(7)>
  Close_Phi.4838[0] = Close_Phi.4838_I_lsm.4843_20;

  <bb 10>:
  sum_80 = Close_Phi.4838[0];
  Cross_BB_scalar_dependence.4839[0] = sum_80;
  sum_51 = Cross_BB_scalar_dependence.4839[0];
  pretmp_58 = (double) sum_51;

  <bb 11>:
  # prephitmp_59 = PHI <pretmp_58(10), 0.0(4)>
  # DEBUG D#158 => &this_8(D)->_packet_size_max_val
  _29 = MEM[(int * *)this_8(D) + 144B];
  # DEBUG D#61 => D#158
  # DEBUG __n => _7
  # DEBUG this => D#61
  _40 = _7 * 4;
  _41 = _29 + _40;
  _24 = *_41;
  _25 = _24 + 1;
  _26 = (double) _25;
  _27 = prephitmp_59 / _26;

  <bb 12>:
  # _3 = PHI <_14(3), _27(11)>
  return _3;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >] (_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev, funcdef_no=2556, decl_uid=53333, cgraph_uid=804, symbol_order=805)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >] (struct vector * const this)
{
  struct vector * __first;
  struct vector * _4;
  int * _8;
  struct vector * pretmp_14;
  struct vector * prephitmp_15;

  <bb 2>:
  # DEBUG D#690 => &this_1(D)->D.53336
  # DEBUG this => D#690
  _4 = this_1(D)->D.53336._M_impl._M_finish;
  __first_5 = this_1(D)->D.53336._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_26 = PHI <__first_5(3), __first_9(7)>
  # DEBUG __first => __first_26
  # DEBUG __r => __first_26
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _8 = MEM[(struct _Vector_base *)__first_26]._M_impl._M_start;
  # DEBUG D#473 => (long int) _8
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _8
  # DEBUG __n => D#470
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _8
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _8
  # DEBUG this => D#462
  # DEBUG D.116396 => D#463
  operator delete (_8);

  <bb 6>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__first_26] ={v} {CLOBBER};
  __first_9 = __first_26 + 24;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 12>:
  pretmp_14 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 9>:
  # prephitmp_15 = PHI <pretmp_14(12), __first_5(2)>
  # DEBUG D#691 => &this_1(D)->D.53336
  # DEBUG this => D#691
  # DEBUG D#685 => D#691->_M_impl._M_end_of_storage
  # DEBUG D#684 => (long int) D#685
  # DEBUG D#3280 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#683 => (long int) D#3280
  # DEBUG D#682 => D#684 - D#683
  # DEBUG D#681 => D#682 /[ex] 24
  # DEBUG D#678 => D#691
  # DEBUG D#679 => (long unsigned int) D#681
  # DEBUG __p => D#3280
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (prephitmp_15 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => D#3280
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => D#3280
  # DEBUG this => D#669
  # DEBUG D.116372 => D#670
  operator delete (prephitmp_15);

  <bb 11>:
  # DEBUG D#680 => &D#691->_M_impl
  # DEBUG this => D#680
  # DEBUG this => D#680
  # DEBUG this => D#680
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >] (_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev, funcdef_no=2580, decl_uid=56329, cgraph_uid=828, symbol_order=829)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >] (struct vector * const this)
{
  struct basic_string * __first;
  struct basic_string * _4;
  char * const _8;
  const char * _9;
  struct basic_string * pretmp_15;
  struct basic_string * prephitmp_16;

  <bb 2>:
  # DEBUG D#744 => &this_1(D)->D.56332
  # DEBUG this => D#744
  _4 = this_1(D)->D.56332._M_impl._M_finish;
  __first_5 = this_1(D)->D.56332._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_26 = PHI <__first_5(3), __first_10(7)>
  # DEBUG __first => __first_26
  # DEBUG __r => __first_26
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _8 = MEM[(char * *)__first_26];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _9 = &MEM[(const struct basic_string *)__first_26].D.11539._M_local_buf;
  if (_8 != _9)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _8
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _8
  # DEBUG this => D#620
  # DEBUG D.116973 => D#621
  operator delete (_8);

  <bb 6>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__first_26] ={v} {CLOBBER};
  __first_10 = __first_26 + 32;
  # DEBUG __first => __first_10
  # DEBUG __first => __first_10
  if (_4 == __first_10)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 12>:
  pretmp_15 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 9>:
  # prephitmp_16 = PHI <pretmp_15(12), __first_5(2)>
  # DEBUG D#745 => &this_1(D)->D.56332
  # DEBUG this => D#745
  # DEBUG D#535 => D#745->_M_impl._M_end_of_storage
  # DEBUG D#534 => (long int) D#535
  # DEBUG D#3282 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#533 => (long int) D#3282
  # DEBUG D#532 => D#534 - D#533
  # DEBUG D#531 => D#532 /[ex] 32
  # DEBUG D#528 => D#745
  # DEBUG D#529 => (long unsigned int) D#531
  # DEBUG __p => D#3282
  # DEBUG this => D#528
  # DEBUG __n => D#529
  # DEBUG D#527 => D#529
  # DEBUG D#526 => D#528
  if (prephitmp_16 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#525 => &D#526->_M_impl
  # DEBUG D#523 => D#525
  # DEBUG D#524 => D#527
  # DEBUG __p => D#3282
  # DEBUG __a => D#523
  # DEBUG __n => D#524
  # DEBUG D#522 => D#524
  # DEBUG D#521 => D#523
  # DEBUG D#519 => D#521
  # DEBUG D#520 => D#522
  # DEBUG __p => D#3282
  # DEBUG this => D#519
  # DEBUG D.116951 => D#520
  operator delete (prephitmp_16);

  <bb 11>:
  # DEBUG D#530 => &D#745->_M_impl
  # DEBUG this => D#530
  # DEBUG this => D#530
  # DEBUG this => D#530
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::vector<Stats*>; _Alloc = std::allocator<std::vector<Stats*> >] (_ZNSt6vectorIS_IP5StatsSaIS1_EESaIS3_EED2Ev, funcdef_no=2640, decl_uid=63850, cgraph_uid=888, symbol_order=889)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::vector<Stats*>; _Alloc = std::allocator<std::vector<Stats*> >] (struct vector * const this)
{
  struct vector * __first;
  struct vector * _4;
  struct Stats * * _8;
  struct vector * pretmp_14;
  struct vector * prephitmp_15;

  <bb 2>:
  # DEBUG D#947 => &this_1(D)->D.63853
  # DEBUG this => D#947
  _4 = this_1(D)->D.63853._M_impl._M_finish;
  __first_5 = this_1(D)->D.63853._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_26 = PHI <__first_5(3), __first_9(7)>
  # DEBUG __first => __first_26
  # DEBUG __r => __first_26
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#920
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _8 = MEM[(struct _Vector_base *)__first_26]._M_impl._M_start;
  # DEBUG D#917 => (long int) _8
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _8
  # DEBUG __n => D#914
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _8
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _8
  # DEBUG this => D#906
  # DEBUG D.117977 => D#907
  operator delete (_8);

  <bb 6>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)__first_26] ={v} {CLOBBER};
  __first_9 = __first_26 + 24;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 12>:
  pretmp_14 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 9>:
  # prephitmp_15 = PHI <pretmp_14(12), __first_5(2)>
  # DEBUG D#948 => &this_1(D)->D.63853
  # DEBUG this => D#948
  # DEBUG D#942 => D#948->_M_impl._M_end_of_storage
  # DEBUG D#941 => (long int) D#942
  # DEBUG D#3284 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#940 => (long int) D#3284
  # DEBUG D#939 => D#941 - D#940
  # DEBUG D#938 => D#939 /[ex] 24
  # DEBUG D#935 => D#948
  # DEBUG D#936 => (long unsigned int) D#938
  # DEBUG __p => D#3284
  # DEBUG this => D#935
  # DEBUG __n => D#936
  # DEBUG D#934 => D#936
  # DEBUG D#933 => D#935
  if (prephitmp_15 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#932 => &D#933->_M_impl
  # DEBUG D#930 => D#932
  # DEBUG D#931 => D#934
  # DEBUG __p => D#3284
  # DEBUG __a => D#930
  # DEBUG __n => D#931
  # DEBUG D#929 => D#931
  # DEBUG D#928 => D#930
  # DEBUG D#926 => D#928
  # DEBUG D#927 => D#929
  # DEBUG __p => D#3284
  # DEBUG this => D#926
  # DEBUG D.117953 => D#927
  operator delete (prephitmp_15);

  <bb 11>:
  # DEBUG D#937 => &D#948->_M_impl
  # DEBUG this => D#937
  # DEBUG this => D#937
  # DEBUG this => D#937
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::list<Flit*>; _Alloc = std::allocator<std::__cxx11::list<Flit*> >] (_ZNSt6vectorINSt7__cxx114listIP4FlitSaIS3_EEESaIS5_EED2Ev, funcdef_no=2753, decl_uid=70698, cgraph_uid=1001, symbol_order=1002)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::list<Flit*>; _Alloc = std::allocator<std::__cxx11::list<Flit*> >] (struct vector * const this)
{
  struct _Node * __tmp;
  struct list * __first;
  struct list * _4;
  struct list * pretmp_9;
  struct list * prephitmp_17;
  struct _List_node_base * _30;

  <bb 2>:
  # DEBUG D#1061 => &this_1(D)->D.70701
  # DEBUG this => D#1061
  _4 = this_1(D)->D.70701._M_impl._M_finish;
  __first_5 = this_1(D)->D.70701._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_27 = PHI <__first_5(3), __first_12(6)>
  # DEBUG __first => __first_27
  # DEBUG __r => __first_27
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_8 = MEM[(struct _List_base *)__first_27]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_8
  # DEBUG __cur => __tmp_8
  _30 = &MEM[(struct _List_base *)__first_27]._M_impl._M_node.D.37893;
  if (__tmp_8 == _30)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__first_27] ={v} {CLOBBER};
  __first_12 = __first_27 + 24;
  # DEBUG __first => __first_12
  # DEBUG __first => __first_12
  if (_4 == __first_12)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  <bb 7>:

  <bb 8>:
  # __tmp_33 = PHI <__tmp_8(7), __tmp_11(9)>
  # DEBUG __cur => __tmp_33
  # DEBUG __tmp => __tmp_33
  __tmp_11 = __tmp_33->D.82395._M_next;
  # DEBUG __cur => __tmp_11
  # DEBUG D#1054 => &__tmp_33->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_33
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_33
  # DEBUG this => D#559
  # DEBUG D.120186 => D#560
  operator delete (__tmp_33);
  # DEBUG __cur => __tmp_11
  if (__tmp_11 == _30)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  pretmp_9 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 11>:
  # prephitmp_17 = PHI <pretmp_9(10), __first_5(2)>
  # DEBUG D#1062 => &this_1(D)->D.70701
  # DEBUG this => D#1062
  # DEBUG D#1049 => D#1062->_M_impl._M_end_of_storage
  # DEBUG D#1048 => (long int) D#1049
  # DEBUG D#3298 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#1047 => (long int) D#3298
  # DEBUG D#1046 => D#1048 - D#1047
  # DEBUG D#1045 => D#1046 /[ex] 24
  # DEBUG D#1042 => D#1062
  # DEBUG D#1043 => (long unsigned int) D#1045
  # DEBUG __p => D#3298
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (prephitmp_17 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => D#3298
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => D#3298
  # DEBUG this => D#1033
  # DEBUG D.120163 => D#1034
  operator delete (prephitmp_17);

  <bb 13>:
  # DEBUG D#1044 => &D#1062->_M_impl
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*] (_ZNSt8_Rb_treeIN9OutputSet11sSetElementES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E, funcdef_no=2943, decl_uid=42159, cgraph_uid=1191, symbol_order=1192)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#254 => __x_68
  # DEBUG __x => D#254
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#255 => __x_68
  # DEBUG __x => D#255
  # DEBUG __y => NULL
  # DEBUG D#1634 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#1634
  # DEBUG D#1633 => D#1634
  # DEBUG D#1632 => D#1634
  # DEBUG D#1631 => D#1634
  # DEBUG D#1629 => D#1631
  # DEBUG D#1630 => __x_68
  # DEBUG this => D#1629
  # DEBUG __p => D#1630
  # DEBUG D#1628 => D#1629
  # DEBUG D#1627 => D#1630
  # DEBUG D#1626 => D#1630
  # DEBUG this => D#1626
  # DEBUG D#1625 => &D#1627->_M_value_field
  # DEBUG __r => D#1625
  # DEBUG D#1624 => D#1628
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG D#664 => D#1625
  # DEBUG this => D#663
  # DEBUG __p => D#664
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1632
  # DEBUG __p => __x_68
  # DEBUG this => D#1633
  # DEBUG D#1152 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#1151
  # DEBUG __n => D#1152
  # DEBUG D#1150 => D#1152
  # DEBUG D#1149 => D#1151
  # DEBUG D#1147 => D#1149
  # DEBUG D#1148 => D#1150
  # DEBUG __p => __x_68
  # DEBUG this => D#1147
  # DEBUG D.128646 => D#1148
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#254 => __x_72
  # DEBUG __x => D#254
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#255 => __x_72
  # DEBUG __x => D#255
  # DEBUG __y => NULL
  # DEBUG D#1634 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#1634
  # DEBUG D#1633 => D#1634
  # DEBUG D#1632 => D#1634
  # DEBUG D#1631 => D#1634
  # DEBUG D#1629 => D#1631
  # DEBUG D#1630 => __x_72
  # DEBUG this => D#1629
  # DEBUG __p => D#1630
  # DEBUG D#1628 => D#1629
  # DEBUG D#1627 => D#1630
  # DEBUG D#1626 => D#1630
  # DEBUG this => D#1626
  # DEBUG D#1625 => &D#1627->_M_value_field
  # DEBUG __r => D#1625
  # DEBUG D#1624 => D#1628
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG D#664 => D#1625
  # DEBUG this => D#663
  # DEBUG __p => D#664
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1632
  # DEBUG __p => __x_72
  # DEBUG this => D#1633
  # DEBUG D#1152 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#1151
  # DEBUG __n => D#1152
  # DEBUG D#1150 => D#1152
  # DEBUG D#1149 => D#1151
  # DEBUG D#1147 => D#1149
  # DEBUG D#1148 => D#1150
  # DEBUG __p => __x_72
  # DEBUG this => D#1147
  # DEBUG D.158534 => D#1148
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#254 => __x_71
  # DEBUG __x => D#254
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#255 => __x_71
  # DEBUG __x => D#255
  # DEBUG __y => NULL
  # DEBUG D#1634 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#1634
  # DEBUG D#1633 => D#1634
  # DEBUG D#1632 => D#1634
  # DEBUG D#1631 => D#1634
  # DEBUG D#1629 => D#1631
  # DEBUG D#1630 => __x_71
  # DEBUG this => D#1629
  # DEBUG __p => D#1630
  # DEBUG D#1628 => D#1629
  # DEBUG D#1627 => D#1630
  # DEBUG D#1626 => D#1630
  # DEBUG this => D#1626
  # DEBUG D#1625 => &D#1627->_M_value_field
  # DEBUG __r => D#1625
  # DEBUG D#1624 => D#1628
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG D#664 => D#1625
  # DEBUG this => D#663
  # DEBUG __p => D#664
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1632
  # DEBUG __p => __x_71
  # DEBUG this => D#1633
  # DEBUG D#1152 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#1151
  # DEBUG __n => D#1152
  # DEBUG D#1150 => D#1152
  # DEBUG D#1149 => D#1151
  # DEBUG D#1147 => D#1149
  # DEBUG D#1148 => D#1150
  # DEBUG __p => __x_71
  # DEBUG this => D#1147
  # DEBUG D.158547 => D#1148
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#254 => __x_77
  # DEBUG __x => D#254
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#255 => __x_77
  # DEBUG __x => D#255
  # DEBUG __y => NULL
  # DEBUG D#1634 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#1634
  # DEBUG D#1633 => D#1634
  # DEBUG D#1632 => D#1634
  # DEBUG D#1631 => D#1634
  # DEBUG D#1629 => D#1631
  # DEBUG D#1630 => __x_77
  # DEBUG this => D#1629
  # DEBUG __p => D#1630
  # DEBUG D#1628 => D#1629
  # DEBUG D#1627 => D#1630
  # DEBUG D#1626 => D#1630
  # DEBUG this => D#1626
  # DEBUG D#1625 => &D#1627->_M_value_field
  # DEBUG __r => D#1625
  # DEBUG D#1624 => D#1628
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG D#664 => D#1625
  # DEBUG this => D#663
  # DEBUG __p => D#664
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1632
  # DEBUG __p => __x_77
  # DEBUG this => D#1633
  # DEBUG D#1152 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#1151
  # DEBUG __n => D#1152
  # DEBUG D#1150 => D#1152
  # DEBUG D#1149 => D#1151
  # DEBUG D#1147 => D#1149
  # DEBUG D#1148 => D#1150
  # DEBUG __p => __x_77
  # DEBUG this => D#1147
  # DEBUG D.158560 => D#1148
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#254 => __x_80
  # DEBUG __x => D#254
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#255 => __x_80
  # DEBUG __x => D#255
  # DEBUG __y => NULL
  # DEBUG D#1634 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#1634
  # DEBUG D#1633 => D#1634
  # DEBUG D#1632 => D#1634
  # DEBUG D#1631 => D#1634
  # DEBUG D#1629 => D#1631
  # DEBUG D#1630 => __x_80
  # DEBUG this => D#1629
  # DEBUG __p => D#1630
  # DEBUG D#1628 => D#1629
  # DEBUG D#1627 => D#1630
  # DEBUG D#1626 => D#1630
  # DEBUG this => D#1626
  # DEBUG D#1625 => &D#1627->_M_value_field
  # DEBUG __r => D#1625
  # DEBUG D#1624 => D#1628
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG D#664 => D#1625
  # DEBUG this => D#663
  # DEBUG __p => D#664
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1632
  # DEBUG __p => __x_80
  # DEBUG this => D#1633
  # DEBUG D#1152 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#1151
  # DEBUG __n => D#1152
  # DEBUG D#1150 => D#1152
  # DEBUG D#1149 => D#1151
  # DEBUG D#1147 => D#1149
  # DEBUG D#1148 => D#1150
  # DEBUG __p => __x_80
  # DEBUG this => D#1147
  # DEBUG D.158573 => D#1148
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#254 => __x_83
  # DEBUG __x => D#254
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#255 => __x_83
  # DEBUG __x => D#255
  # DEBUG __y => NULL
  # DEBUG D#1634 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#1634
  # DEBUG D#1633 => D#1634
  # DEBUG D#1632 => D#1634
  # DEBUG D#1631 => D#1634
  # DEBUG D#1629 => D#1631
  # DEBUG D#1630 => __x_83
  # DEBUG this => D#1629
  # DEBUG __p => D#1630
  # DEBUG D#1628 => D#1629
  # DEBUG D#1627 => D#1630
  # DEBUG D#1626 => D#1630
  # DEBUG this => D#1626
  # DEBUG D#1625 => &D#1627->_M_value_field
  # DEBUG __r => D#1625
  # DEBUG D#1624 => D#1628
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG D#664 => D#1625
  # DEBUG this => D#663
  # DEBUG __p => D#664
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1632
  # DEBUG __p => __x_83
  # DEBUG this => D#1633
  # DEBUG D#1152 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#1151
  # DEBUG __n => D#1152
  # DEBUG D#1150 => D#1152
  # DEBUG D#1149 => D#1151
  # DEBUG D#1147 => D#1149
  # DEBUG D#1148 => D#1150
  # DEBUG __p => __x_83
  # DEBUG this => D#1147
  # DEBUG D.158586 => D#1148
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#254 => __x_86
  # DEBUG __x => D#254
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#255 => __x_86
  # DEBUG __x => D#255
  # DEBUG __y => NULL
  # DEBUG D#1634 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#1634
  # DEBUG D#1633 => D#1634
  # DEBUG D#1632 => D#1634
  # DEBUG D#1631 => D#1634
  # DEBUG D#1629 => D#1631
  # DEBUG D#1630 => __x_86
  # DEBUG this => D#1629
  # DEBUG __p => D#1630
  # DEBUG D#1628 => D#1629
  # DEBUG D#1627 => D#1630
  # DEBUG D#1626 => D#1630
  # DEBUG this => D#1626
  # DEBUG D#1625 => &D#1627->_M_value_field
  # DEBUG __r => D#1625
  # DEBUG D#1624 => D#1628
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG D#664 => D#1625
  # DEBUG this => D#663
  # DEBUG __p => D#664
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1632
  # DEBUG __p => __x_86
  # DEBUG this => D#1633
  # DEBUG D#1152 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#1151
  # DEBUG __n => D#1152
  # DEBUG D#1150 => D#1152
  # DEBUG D#1149 => D#1151
  # DEBUG D#1147 => D#1149
  # DEBUG D#1148 => D#1150
  # DEBUG __p => __x_86
  # DEBUG this => D#1147
  # DEBUG D.158599 => D#1148
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#254 => __x_89
  # DEBUG __x => D#254
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#255 => __x_89
  # DEBUG __x => D#255
  # DEBUG __y => NULL
  # DEBUG D#1634 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#1634
  # DEBUG D#1633 => D#1634
  # DEBUG D#1632 => D#1634
  # DEBUG D#1631 => D#1634
  # DEBUG D#1629 => D#1631
  # DEBUG D#1630 => __x_89
  # DEBUG this => D#1629
  # DEBUG __p => D#1630
  # DEBUG D#1628 => D#1629
  # DEBUG D#1627 => D#1630
  # DEBUG D#1626 => D#1630
  # DEBUG this => D#1626
  # DEBUG D#1625 => &D#1627->_M_value_field
  # DEBUG __r => D#1625
  # DEBUG D#1624 => D#1628
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG D#664 => D#1625
  # DEBUG this => D#663
  # DEBUG __p => D#664
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1632
  # DEBUG __p => __x_89
  # DEBUG this => D#1633
  # DEBUG D#1152 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#1151
  # DEBUG __n => D#1152
  # DEBUG D#1150 => D#1152
  # DEBUG D#1149 => D#1151
  # DEBUG D#1147 => D#1149
  # DEBUG D#1148 => D#1150
  # DEBUG __p => __x_89
  # DEBUG this => D#1147
  # DEBUG D.158612 => D#1148
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#254 => __x_92
  # DEBUG __x => D#254
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#255 => __x_92
  # DEBUG __x => D#255
  # DEBUG __y => NULL
  # DEBUG D#1634 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#1634
  # DEBUG D#1633 => D#1634
  # DEBUG D#1632 => D#1634
  # DEBUG D#1631 => D#1634
  # DEBUG D#1629 => D#1631
  # DEBUG D#1630 => __x_92
  # DEBUG this => D#1629
  # DEBUG __p => D#1630
  # DEBUG D#1628 => D#1629
  # DEBUG D#1627 => D#1630
  # DEBUG D#1626 => D#1630
  # DEBUG this => D#1626
  # DEBUG D#1625 => &D#1627->_M_value_field
  # DEBUG __r => D#1625
  # DEBUG D#1624 => D#1628
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG D#664 => D#1625
  # DEBUG this => D#663
  # DEBUG __p => D#664
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1632
  # DEBUG __p => __x_92
  # DEBUG this => D#1633
  # DEBUG D#1152 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#1151
  # DEBUG __n => D#1152
  # DEBUG D#1150 => D#1152
  # DEBUG D#1149 => D#1151
  # DEBUG D#1147 => D#1149
  # DEBUG D#1148 => D#1150
  # DEBUG __p => __x_92
  # DEBUG this => D#1147
  # DEBUG D.158625 => D#1148
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE, funcdef_no=2948, decl_uid=43331, cgraph_uid=1196, symbol_order=1197)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#256 => __x_68
  # DEBUG __x => D#256
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#257 => __x_68
  # DEBUG __x => D#257
  # DEBUG __y => NULL
  # DEBUG D#1170 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#1170
  # DEBUG D#1169 => D#1170
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1170
  # DEBUG D#1159 => D#1167
  # DEBUG D#1160 => __x_68
  # DEBUG this => D#1159
  # DEBUG __p => D#1160
  # DEBUG D#1158 => D#1159
  # DEBUG D#1157 => D#1160
  # DEBUG D#1156 => D#1160
  # DEBUG this => D#1156
  # DEBUG D#1155 => &D#1157->_M_value_field
  # DEBUG __r => D#1155
  # DEBUG D#1154 => D#1158
  # DEBUG this => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG this => D#1153
  # DEBUG this => NULL
  # DEBUG D.121417 => NULL
  # DEBUG this => NULL
  # DEBUG D#488 => D#1155
  # DEBUG this => D#487
  # DEBUG __p => D#488
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1168
  # DEBUG __p => __x_68
  # DEBUG this => D#1169
  # DEBUG D#1166 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#1165
  # DEBUG __n => D#1166
  # DEBUG D#1164 => D#1166
  # DEBUG D#1163 => D#1165
  # DEBUG D#1161 => D#1163
  # DEBUG D#1162 => D#1164
  # DEBUG __p => __x_68
  # DEBUG this => D#1161
  # DEBUG D.121516 => D#1162
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#256 => __x_72
  # DEBUG __x => D#256
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#257 => __x_72
  # DEBUG __x => D#257
  # DEBUG __y => NULL
  # DEBUG D#1170 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#1170
  # DEBUG D#1169 => D#1170
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1170
  # DEBUG D#1159 => D#1167
  # DEBUG D#1160 => __x_72
  # DEBUG this => D#1159
  # DEBUG __p => D#1160
  # DEBUG D#1158 => D#1159
  # DEBUG D#1157 => D#1160
  # DEBUG D#1156 => D#1160
  # DEBUG this => D#1156
  # DEBUG D#1155 => &D#1157->_M_value_field
  # DEBUG __r => D#1155
  # DEBUG D#1154 => D#1158
  # DEBUG this => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG this => D#1153
  # DEBUG this => NULL
  # DEBUG D.121417 => NULL
  # DEBUG this => NULL
  # DEBUG D#488 => D#1155
  # DEBUG this => D#487
  # DEBUG __p => D#488
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1168
  # DEBUG __p => __x_72
  # DEBUG this => D#1169
  # DEBUG D#1166 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#1165
  # DEBUG __n => D#1166
  # DEBUG D#1164 => D#1166
  # DEBUG D#1163 => D#1165
  # DEBUG D#1161 => D#1163
  # DEBUG D#1162 => D#1164
  # DEBUG __p => __x_72
  # DEBUG this => D#1161
  # DEBUG D.158657 => D#1162
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#256 => __x_71
  # DEBUG __x => D#256
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#257 => __x_71
  # DEBUG __x => D#257
  # DEBUG __y => NULL
  # DEBUG D#1170 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#1170
  # DEBUG D#1169 => D#1170
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1170
  # DEBUG D#1159 => D#1167
  # DEBUG D#1160 => __x_71
  # DEBUG this => D#1159
  # DEBUG __p => D#1160
  # DEBUG D#1158 => D#1159
  # DEBUG D#1157 => D#1160
  # DEBUG D#1156 => D#1160
  # DEBUG this => D#1156
  # DEBUG D#1155 => &D#1157->_M_value_field
  # DEBUG __r => D#1155
  # DEBUG D#1154 => D#1158
  # DEBUG this => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG this => D#1153
  # DEBUG this => NULL
  # DEBUG D.121417 => NULL
  # DEBUG this => NULL
  # DEBUG D#488 => D#1155
  # DEBUG this => D#487
  # DEBUG __p => D#488
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1168
  # DEBUG __p => __x_71
  # DEBUG this => D#1169
  # DEBUG D#1166 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#1165
  # DEBUG __n => D#1166
  # DEBUG D#1164 => D#1166
  # DEBUG D#1163 => D#1165
  # DEBUG D#1161 => D#1163
  # DEBUG D#1162 => D#1164
  # DEBUG __p => __x_71
  # DEBUG this => D#1161
  # DEBUG D.158670 => D#1162
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#256 => __x_77
  # DEBUG __x => D#256
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#257 => __x_77
  # DEBUG __x => D#257
  # DEBUG __y => NULL
  # DEBUG D#1170 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#1170
  # DEBUG D#1169 => D#1170
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1170
  # DEBUG D#1159 => D#1167
  # DEBUG D#1160 => __x_77
  # DEBUG this => D#1159
  # DEBUG __p => D#1160
  # DEBUG D#1158 => D#1159
  # DEBUG D#1157 => D#1160
  # DEBUG D#1156 => D#1160
  # DEBUG this => D#1156
  # DEBUG D#1155 => &D#1157->_M_value_field
  # DEBUG __r => D#1155
  # DEBUG D#1154 => D#1158
  # DEBUG this => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG this => D#1153
  # DEBUG this => NULL
  # DEBUG D.121417 => NULL
  # DEBUG this => NULL
  # DEBUG D#488 => D#1155
  # DEBUG this => D#487
  # DEBUG __p => D#488
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1168
  # DEBUG __p => __x_77
  # DEBUG this => D#1169
  # DEBUG D#1166 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#1165
  # DEBUG __n => D#1166
  # DEBUG D#1164 => D#1166
  # DEBUG D#1163 => D#1165
  # DEBUG D#1161 => D#1163
  # DEBUG D#1162 => D#1164
  # DEBUG __p => __x_77
  # DEBUG this => D#1161
  # DEBUG D.158683 => D#1162
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#256 => __x_80
  # DEBUG __x => D#256
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#257 => __x_80
  # DEBUG __x => D#257
  # DEBUG __y => NULL
  # DEBUG D#1170 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#1170
  # DEBUG D#1169 => D#1170
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1170
  # DEBUG D#1159 => D#1167
  # DEBUG D#1160 => __x_80
  # DEBUG this => D#1159
  # DEBUG __p => D#1160
  # DEBUG D#1158 => D#1159
  # DEBUG D#1157 => D#1160
  # DEBUG D#1156 => D#1160
  # DEBUG this => D#1156
  # DEBUG D#1155 => &D#1157->_M_value_field
  # DEBUG __r => D#1155
  # DEBUG D#1154 => D#1158
  # DEBUG this => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG this => D#1153
  # DEBUG this => NULL
  # DEBUG D.121417 => NULL
  # DEBUG this => NULL
  # DEBUG D#488 => D#1155
  # DEBUG this => D#487
  # DEBUG __p => D#488
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1168
  # DEBUG __p => __x_80
  # DEBUG this => D#1169
  # DEBUG D#1166 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#1165
  # DEBUG __n => D#1166
  # DEBUG D#1164 => D#1166
  # DEBUG D#1163 => D#1165
  # DEBUG D#1161 => D#1163
  # DEBUG D#1162 => D#1164
  # DEBUG __p => __x_80
  # DEBUG this => D#1161
  # DEBUG D.158696 => D#1162
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#256 => __x_83
  # DEBUG __x => D#256
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#257 => __x_83
  # DEBUG __x => D#257
  # DEBUG __y => NULL
  # DEBUG D#1170 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#1170
  # DEBUG D#1169 => D#1170
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1170
  # DEBUG D#1159 => D#1167
  # DEBUG D#1160 => __x_83
  # DEBUG this => D#1159
  # DEBUG __p => D#1160
  # DEBUG D#1158 => D#1159
  # DEBUG D#1157 => D#1160
  # DEBUG D#1156 => D#1160
  # DEBUG this => D#1156
  # DEBUG D#1155 => &D#1157->_M_value_field
  # DEBUG __r => D#1155
  # DEBUG D#1154 => D#1158
  # DEBUG this => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG this => D#1153
  # DEBUG this => NULL
  # DEBUG D.121417 => NULL
  # DEBUG this => NULL
  # DEBUG D#488 => D#1155
  # DEBUG this => D#487
  # DEBUG __p => D#488
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1168
  # DEBUG __p => __x_83
  # DEBUG this => D#1169
  # DEBUG D#1166 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#1165
  # DEBUG __n => D#1166
  # DEBUG D#1164 => D#1166
  # DEBUG D#1163 => D#1165
  # DEBUG D#1161 => D#1163
  # DEBUG D#1162 => D#1164
  # DEBUG __p => __x_83
  # DEBUG this => D#1161
  # DEBUG D.158709 => D#1162
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#256 => __x_86
  # DEBUG __x => D#256
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#257 => __x_86
  # DEBUG __x => D#257
  # DEBUG __y => NULL
  # DEBUG D#1170 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#1170
  # DEBUG D#1169 => D#1170
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1170
  # DEBUG D#1159 => D#1167
  # DEBUG D#1160 => __x_86
  # DEBUG this => D#1159
  # DEBUG __p => D#1160
  # DEBUG D#1158 => D#1159
  # DEBUG D#1157 => D#1160
  # DEBUG D#1156 => D#1160
  # DEBUG this => D#1156
  # DEBUG D#1155 => &D#1157->_M_value_field
  # DEBUG __r => D#1155
  # DEBUG D#1154 => D#1158
  # DEBUG this => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG this => D#1153
  # DEBUG this => NULL
  # DEBUG D.121417 => NULL
  # DEBUG this => NULL
  # DEBUG D#488 => D#1155
  # DEBUG this => D#487
  # DEBUG __p => D#488
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1168
  # DEBUG __p => __x_86
  # DEBUG this => D#1169
  # DEBUG D#1166 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#1165
  # DEBUG __n => D#1166
  # DEBUG D#1164 => D#1166
  # DEBUG D#1163 => D#1165
  # DEBUG D#1161 => D#1163
  # DEBUG D#1162 => D#1164
  # DEBUG __p => __x_86
  # DEBUG this => D#1161
  # DEBUG D.158722 => D#1162
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#256 => __x_89
  # DEBUG __x => D#256
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#257 => __x_89
  # DEBUG __x => D#257
  # DEBUG __y => NULL
  # DEBUG D#1170 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#1170
  # DEBUG D#1169 => D#1170
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1170
  # DEBUG D#1159 => D#1167
  # DEBUG D#1160 => __x_89
  # DEBUG this => D#1159
  # DEBUG __p => D#1160
  # DEBUG D#1158 => D#1159
  # DEBUG D#1157 => D#1160
  # DEBUG D#1156 => D#1160
  # DEBUG this => D#1156
  # DEBUG D#1155 => &D#1157->_M_value_field
  # DEBUG __r => D#1155
  # DEBUG D#1154 => D#1158
  # DEBUG this => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG this => D#1153
  # DEBUG this => NULL
  # DEBUG D.121417 => NULL
  # DEBUG this => NULL
  # DEBUG D#488 => D#1155
  # DEBUG this => D#487
  # DEBUG __p => D#488
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1168
  # DEBUG __p => __x_89
  # DEBUG this => D#1169
  # DEBUG D#1166 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#1165
  # DEBUG __n => D#1166
  # DEBUG D#1164 => D#1166
  # DEBUG D#1163 => D#1165
  # DEBUG D#1161 => D#1163
  # DEBUG D#1162 => D#1164
  # DEBUG __p => __x_89
  # DEBUG this => D#1161
  # DEBUG D.158735 => D#1162
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#256 => __x_92
  # DEBUG __x => D#256
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#257 => __x_92
  # DEBUG __x => D#257
  # DEBUG __y => NULL
  # DEBUG D#1170 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#1170
  # DEBUG D#1169 => D#1170
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1170
  # DEBUG D#1159 => D#1167
  # DEBUG D#1160 => __x_92
  # DEBUG this => D#1159
  # DEBUG __p => D#1160
  # DEBUG D#1158 => D#1159
  # DEBUG D#1157 => D#1160
  # DEBUG D#1156 => D#1160
  # DEBUG this => D#1156
  # DEBUG D#1155 => &D#1157->_M_value_field
  # DEBUG __r => D#1155
  # DEBUG D#1154 => D#1158
  # DEBUG this => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG this => D#1153
  # DEBUG this => NULL
  # DEBUG D.121417 => NULL
  # DEBUG this => NULL
  # DEBUG D#488 => D#1155
  # DEBUG this => D#487
  # DEBUG __p => D#488
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1168
  # DEBUG __p => __x_92
  # DEBUG this => D#1169
  # DEBUG D#1166 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#1165
  # DEBUG __n => D#1166
  # DEBUG D#1164 => D#1166
  # DEBUG D#1163 => D#1165
  # DEBUG D#1161 => D#1163
  # DEBUG D#1162 => D#1164
  # DEBUG __p => __x_92
  # DEBUG this => D#1161
  # DEBUG D.158748 => D#1162
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, Stats*>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, Stats*> >*] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P5StatsESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E, funcdef_no=3172, decl_uid=64458, cgraph_uid=1420, symbol_order=1421)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, Stats*>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, Stats*> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  char * const _7;
  char * const _11;
  const char * _12;
  const char * _16;
  char * const _21;
  const char * _22;
  char * const _27;
  const char * _28;
  char * const _33;
  const char * _34;
  char * const _39;
  const char * _40;
  char * const _45;
  const char * _46;
  char * const _51;
  const char * _52;
  struct _Rb_tree_node_base * _54;
  char * const _57;
  const char * _58;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_149 = PHI <__x_3(D)(4), __x_10(56)>
  # DEBUG __x => __x_149
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 24B];
  # DEBUG D#270 => __x_149
  # DEBUG __x => D#270
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_10 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 16B];
  # DEBUG D#271 => __x_149
  # DEBUG __x => D#271
  # DEBUG __y => NULL
  # DEBUG D#1656 => this_6(D)
  # DEBUG __p => __x_149
  # DEBUG this => D#1656
  # DEBUG D#1655 => D#1656
  # DEBUG D#1654 => D#1656
  # DEBUG D#1653 => D#1654
  # DEBUG __p => __x_149
  # DEBUG this => D#1653
  # DEBUG D#1652 => D#1653
  # DEBUG this => __x_149
  # DEBUG D#1651 => &__x_149->_M_value_field
  # DEBUG __r => D#1651
  # DEBUG D#1650 => D#1652
  # DEBUG this => D#1650
  # DEBUG D#1649 => D#1650
  # DEBUG this => D#1649
  # DEBUG this => NULL
  # DEBUG D.128763 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1651
  # DEBUG this => D#951
  # DEBUG this => D#1651
  # DEBUG D#637 => &D#1651->first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  _11 = MEM[(char * *)__x_149 + 32B];
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  _12 = &MEM[(const struct basic_string *)__x_149 + 32B].D.11539._M_local_buf;
  if (_11 != _12)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 7>:

  <bb 8>:
  # __x_152 = PHI <__x_9(7), __x_14(53)>
  # DEBUG __x => __x_152
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 24B];
  # DEBUG D#270 => __x_152
  # DEBUG __x => D#270
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_14 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 16B];
  # DEBUG D#271 => __x_152
  # DEBUG __x => D#271
  # DEBUG __y => NULL
  # DEBUG D#1656 => this_6(D)
  # DEBUG __p => __x_152
  # DEBUG this => D#1656
  # DEBUG D#1655 => D#1656
  # DEBUG D#1654 => D#1656
  # DEBUG D#1653 => D#1654
  # DEBUG __p => __x_152
  # DEBUG this => D#1653
  # DEBUG D#1652 => D#1653
  # DEBUG this => __x_152
  # DEBUG D#1651 => &__x_152->_M_value_field
  # DEBUG __r => D#1651
  # DEBUG D#1650 => D#1652
  # DEBUG this => D#1650
  # DEBUG D#1649 => D#1650
  # DEBUG this => D#1649
  # DEBUG this => NULL
  # DEBUG D.128763 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1651
  # DEBUG this => D#951
  # DEBUG this => D#1651
  # DEBUG D#637 => &D#1651->first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  _7 = MEM[(char * *)__x_152 + 32B];
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  _16 = &MEM[(const struct basic_string *)__x_152 + 32B].D.11539._M_local_buf;
  if (_7 != _16)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 10>:

  <bb 11>:
  # __x_155 = PHI <__x_13(10), __x_19(50)>
  # DEBUG __x => __x_155
  __x_18 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 24B];
  # DEBUG D#270 => __x_155
  # DEBUG __x => D#270
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_18
  # DEBUG __x => __x_18
  if (__x_18 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 16B];
  # DEBUG D#271 => __x_155
  # DEBUG __x => D#271
  # DEBUG __y => NULL
  # DEBUG D#1656 => this_6(D)
  # DEBUG __p => __x_155
  # DEBUG this => D#1656
  # DEBUG D#1655 => D#1656
  # DEBUG D#1654 => D#1656
  # DEBUG D#1653 => D#1654
  # DEBUG __p => __x_155
  # DEBUG this => D#1653
  # DEBUG D#1652 => D#1653
  # DEBUG this => __x_155
  # DEBUG D#1651 => &__x_155->_M_value_field
  # DEBUG __r => D#1651
  # DEBUG D#1650 => D#1652
  # DEBUG this => D#1650
  # DEBUG D#1649 => D#1650
  # DEBUG this => D#1649
  # DEBUG this => NULL
  # DEBUG D.128763 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1651
  # DEBUG this => D#951
  # DEBUG this => D#1651
  # DEBUG D#637 => &D#1651->first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  _21 = MEM[(char * *)__x_155 + 32B];
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  _22 = &MEM[(const struct basic_string *)__x_155 + 32B].D.11539._M_local_buf;
  if (_21 != _22)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 13>:

  <bb 14>:
  # __x_158 = PHI <__x_18(13), __x_25(47)>
  # DEBUG __x => __x_158
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 24B];
  # DEBUG D#270 => __x_158
  # DEBUG __x => D#270
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_25 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 16B];
  # DEBUG D#271 => __x_158
  # DEBUG __x => D#271
  # DEBUG __y => NULL
  # DEBUG D#1656 => this_6(D)
  # DEBUG __p => __x_158
  # DEBUG this => D#1656
  # DEBUG D#1655 => D#1656
  # DEBUG D#1654 => D#1656
  # DEBUG D#1653 => D#1654
  # DEBUG __p => __x_158
  # DEBUG this => D#1653
  # DEBUG D#1652 => D#1653
  # DEBUG this => __x_158
  # DEBUG D#1651 => &__x_158->_M_value_field
  # DEBUG __r => D#1651
  # DEBUG D#1650 => D#1652
  # DEBUG this => D#1650
  # DEBUG D#1649 => D#1650
  # DEBUG this => D#1649
  # DEBUG this => NULL
  # DEBUG D.128763 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1651
  # DEBUG this => D#951
  # DEBUG this => D#1651
  # DEBUG D#637 => &D#1651->first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  _27 = MEM[(char * *)__x_158 + 32B];
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  _28 = &MEM[(const struct basic_string *)__x_158 + 32B].D.11539._M_local_buf;
  if (_27 != _28)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 16>:

  <bb 17>:
  # __x_161 = PHI <__x_24(16), __x_31(44)>
  # DEBUG __x => __x_161
  __x_30 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 24B];
  # DEBUG D#270 => __x_161
  # DEBUG __x => D#270
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_30
  # DEBUG __x => __x_30
  if (__x_30 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 16B];
  # DEBUG D#271 => __x_161
  # DEBUG __x => D#271
  # DEBUG __y => NULL
  # DEBUG D#1656 => this_6(D)
  # DEBUG __p => __x_161
  # DEBUG this => D#1656
  # DEBUG D#1655 => D#1656
  # DEBUG D#1654 => D#1656
  # DEBUG D#1653 => D#1654
  # DEBUG __p => __x_161
  # DEBUG this => D#1653
  # DEBUG D#1652 => D#1653
  # DEBUG this => __x_161
  # DEBUG D#1651 => &__x_161->_M_value_field
  # DEBUG __r => D#1651
  # DEBUG D#1650 => D#1652
  # DEBUG this => D#1650
  # DEBUG D#1649 => D#1650
  # DEBUG this => D#1649
  # DEBUG this => NULL
  # DEBUG D.128763 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1651
  # DEBUG this => D#951
  # DEBUG this => D#1651
  # DEBUG D#637 => &D#1651->first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  _33 = MEM[(char * *)__x_161 + 32B];
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  _34 = &MEM[(const struct basic_string *)__x_161 + 32B].D.11539._M_local_buf;
  if (_33 != _34)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 19>:

  <bb 20>:
  # __x_164 = PHI <__x_30(19), __x_37(41)>
  # DEBUG __x => __x_164
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 24B];
  # DEBUG D#270 => __x_164
  # DEBUG __x => D#270
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_37 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 16B];
  # DEBUG D#271 => __x_164
  # DEBUG __x => D#271
  # DEBUG __y => NULL
  # DEBUG D#1656 => this_6(D)
  # DEBUG __p => __x_164
  # DEBUG this => D#1656
  # DEBUG D#1655 => D#1656
  # DEBUG D#1654 => D#1656
  # DEBUG D#1653 => D#1654
  # DEBUG __p => __x_164
  # DEBUG this => D#1653
  # DEBUG D#1652 => D#1653
  # DEBUG this => __x_164
  # DEBUG D#1651 => &__x_164->_M_value_field
  # DEBUG __r => D#1651
  # DEBUG D#1650 => D#1652
  # DEBUG this => D#1650
  # DEBUG D#1649 => D#1650
  # DEBUG this => D#1649
  # DEBUG this => NULL
  # DEBUG D.128763 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1651
  # DEBUG this => D#951
  # DEBUG this => D#1651
  # DEBUG D#637 => &D#1651->first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  _39 = MEM[(char * *)__x_164 + 32B];
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  _40 = &MEM[(const struct basic_string *)__x_164 + 32B].D.11539._M_local_buf;
  if (_39 != _40)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 22>:

  <bb 23>:
  # __x_167 = PHI <__x_36(22), __x_43(38)>
  # DEBUG __x => __x_167
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 24B];
  # DEBUG D#270 => __x_167
  # DEBUG __x => D#270
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_42
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_43 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 16B];
  # DEBUG D#271 => __x_167
  # DEBUG __x => D#271
  # DEBUG __y => NULL
  # DEBUG D#1656 => this_6(D)
  # DEBUG __p => __x_167
  # DEBUG this => D#1656
  # DEBUG D#1655 => D#1656
  # DEBUG D#1654 => D#1656
  # DEBUG D#1653 => D#1654
  # DEBUG __p => __x_167
  # DEBUG this => D#1653
  # DEBUG D#1652 => D#1653
  # DEBUG this => __x_167
  # DEBUG D#1651 => &__x_167->_M_value_field
  # DEBUG __r => D#1651
  # DEBUG D#1650 => D#1652
  # DEBUG this => D#1650
  # DEBUG D#1649 => D#1650
  # DEBUG this => D#1649
  # DEBUG this => NULL
  # DEBUG D.128763 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1651
  # DEBUG this => D#951
  # DEBUG this => D#1651
  # DEBUG D#637 => &D#1651->first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  _45 = MEM[(char * *)__x_167 + 32B];
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  _46 = &MEM[(const struct basic_string *)__x_167 + 32B].D.11539._M_local_buf;
  if (_45 != _46)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 25>:

  <bb 26>:
  # __x_170 = PHI <__x_42(25), __x_49(35)>
  # DEBUG __x => __x_170
  __x_48 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 24B];
  # DEBUG D#270 => __x_170
  # DEBUG __x => D#270
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_48
  # DEBUG __x => __x_48
  if (__x_48 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_49 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 16B];
  # DEBUG D#271 => __x_170
  # DEBUG __x => D#271
  # DEBUG __y => NULL
  # DEBUG D#1656 => this_6(D)
  # DEBUG __p => __x_170
  # DEBUG this => D#1656
  # DEBUG D#1655 => D#1656
  # DEBUG D#1654 => D#1656
  # DEBUG D#1653 => D#1654
  # DEBUG __p => __x_170
  # DEBUG this => D#1653
  # DEBUG D#1652 => D#1653
  # DEBUG this => __x_170
  # DEBUG D#1651 => &__x_170->_M_value_field
  # DEBUG __r => D#1651
  # DEBUG D#1650 => D#1652
  # DEBUG this => D#1650
  # DEBUG D#1649 => D#1650
  # DEBUG this => D#1649
  # DEBUG this => NULL
  # DEBUG D.128763 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1651
  # DEBUG this => D#951
  # DEBUG this => D#1651
  # DEBUG D#637 => &D#1651->first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  _51 = MEM[(char * *)__x_170 + 32B];
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  _52 = &MEM[(const struct basic_string *)__x_170 + 32B].D.11539._M_local_buf;
  if (_51 != _52)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 28>:

  <bb 29>:
  # __x_173 = PHI <__x_48(28), __x_55(32)>
  # DEBUG __x => __x_173
  _54 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 24B];
  # DEBUG D#270 => __x_173
  # DEBUG __x => D#270
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, Stats*>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> > >::_M_erase (this_6(D), _54);
  __x_55 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 16B];
  # DEBUG D#271 => __x_173
  # DEBUG __x => D#271
  # DEBUG __y => NULL
  # DEBUG D#1656 => this_6(D)
  # DEBUG __p => __x_173
  # DEBUG this => D#1656
  # DEBUG D#1655 => D#1656
  # DEBUG D#1654 => D#1656
  # DEBUG D#1653 => D#1654
  # DEBUG __p => __x_173
  # DEBUG this => D#1653
  # DEBUG D#1652 => D#1653
  # DEBUG this => __x_173
  # DEBUG D#1651 => &__x_173->_M_value_field
  # DEBUG __r => D#1651
  # DEBUG D#1650 => D#1652
  # DEBUG this => D#1650
  # DEBUG D#1649 => D#1650
  # DEBUG this => D#1649
  # DEBUG this => NULL
  # DEBUG D.128763 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1651
  # DEBUG this => D#951
  # DEBUG this => D#1651
  # DEBUG D#637 => &D#1651->first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  _57 = MEM[(char * *)__x_173 + 32B];
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  _58 = &MEM[(const struct basic_string *)__x_173 + 32B].D.11539._M_local_buf;
  if (_57 != _58)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _57
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _57
  # DEBUG this => D#620
  # DEBUG D.159038 => D#621
  operator delete (_57);

  <bb 31>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__x_173 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1241 => D#1655
  # DEBUG __p => __x_173
  # DEBUG this => D#1241
  # DEBUG D#1240 => D#1241
  # DEBUG this => D#1240
  # DEBUG D#1239 => 1
  # DEBUG __p => __x_173
  # DEBUG __a => D#1238
  # DEBUG __n => D#1239
  # DEBUG D#1237 => D#1239
  # DEBUG D#1236 => D#1238
  # DEBUG D#1234 => D#1236
  # DEBUG D#1235 => D#1237
  # DEBUG __p => __x_173
  # DEBUG this => D#1234
  # DEBUG D.159051 => D#1235
  operator delete (__x_173);
  # DEBUG __x => __x_55
  if (__x_55 == 0B)
    goto <bb 27>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 29>;

  <bb 33>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _51
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _51
  # DEBUG this => D#620
  # DEBUG D.159005 => D#621
  operator delete (_51);

  <bb 34>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__x_170 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1241 => D#1655
  # DEBUG __p => __x_170
  # DEBUG this => D#1241
  # DEBUG D#1240 => D#1241
  # DEBUG this => D#1240
  # DEBUG D#1239 => 1
  # DEBUG __p => __x_170
  # DEBUG __a => D#1238
  # DEBUG __n => D#1239
  # DEBUG D#1237 => D#1239
  # DEBUG D#1236 => D#1238
  # DEBUG D#1234 => D#1236
  # DEBUG D#1235 => D#1237
  # DEBUG __p => __x_170
  # DEBUG this => D#1234
  # DEBUG D.159018 => D#1235
  operator delete (__x_170);
  # DEBUG __x => __x_49
  if (__x_49 == 0B)
    goto <bb 24>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 26>;

  <bb 36>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _45
  # DEBUG this => D#620
  # DEBUG D.158972 => D#621
  operator delete (_45);

  <bb 37>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__x_167 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1241 => D#1655
  # DEBUG __p => __x_167
  # DEBUG this => D#1241
  # DEBUG D#1240 => D#1241
  # DEBUG this => D#1240
  # DEBUG D#1239 => 1
  # DEBUG __p => __x_167
  # DEBUG __a => D#1238
  # DEBUG __n => D#1239
  # DEBUG D#1237 => D#1239
  # DEBUG D#1236 => D#1238
  # DEBUG D#1234 => D#1236
  # DEBUG D#1235 => D#1237
  # DEBUG __p => __x_167
  # DEBUG this => D#1234
  # DEBUG D.158985 => D#1235
  operator delete (__x_167);
  # DEBUG __x => __x_43
  if (__x_43 == 0B)
    goto <bb 21>;
  else
    goto <bb 38>;

  <bb 38>:
  goto <bb 23>;

  <bb 39>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _39
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _39
  # DEBUG this => D#620
  # DEBUG D.158939 => D#621
  operator delete (_39);

  <bb 40>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__x_164 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1241 => D#1655
  # DEBUG __p => __x_164
  # DEBUG this => D#1241
  # DEBUG D#1240 => D#1241
  # DEBUG this => D#1240
  # DEBUG D#1239 => 1
  # DEBUG __p => __x_164
  # DEBUG __a => D#1238
  # DEBUG __n => D#1239
  # DEBUG D#1237 => D#1239
  # DEBUG D#1236 => D#1238
  # DEBUG D#1234 => D#1236
  # DEBUG D#1235 => D#1237
  # DEBUG __p => __x_164
  # DEBUG this => D#1234
  # DEBUG D.158952 => D#1235
  operator delete (__x_164);
  # DEBUG __x => __x_37
  if (__x_37 == 0B)
    goto <bb 18>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 20>;

  <bb 42>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _33
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _33
  # DEBUG this => D#620
  # DEBUG D.158906 => D#621
  operator delete (_33);

  <bb 43>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__x_161 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1241 => D#1655
  # DEBUG __p => __x_161
  # DEBUG this => D#1241
  # DEBUG D#1240 => D#1241
  # DEBUG this => D#1240
  # DEBUG D#1239 => 1
  # DEBUG __p => __x_161
  # DEBUG __a => D#1238
  # DEBUG __n => D#1239
  # DEBUG D#1237 => D#1239
  # DEBUG D#1236 => D#1238
  # DEBUG D#1234 => D#1236
  # DEBUG D#1235 => D#1237
  # DEBUG __p => __x_161
  # DEBUG this => D#1234
  # DEBUG D.158919 => D#1235
  operator delete (__x_161);
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 15>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 17>;

  <bb 45>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _27
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _27
  # DEBUG this => D#620
  # DEBUG D.158873 => D#621
  operator delete (_27);

  <bb 46>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__x_158 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1241 => D#1655
  # DEBUG __p => __x_158
  # DEBUG this => D#1241
  # DEBUG D#1240 => D#1241
  # DEBUG this => D#1240
  # DEBUG D#1239 => 1
  # DEBUG __p => __x_158
  # DEBUG __a => D#1238
  # DEBUG __n => D#1239
  # DEBUG D#1237 => D#1239
  # DEBUG D#1236 => D#1238
  # DEBUG D#1234 => D#1236
  # DEBUG D#1235 => D#1237
  # DEBUG __p => __x_158
  # DEBUG this => D#1234
  # DEBUG D.158886 => D#1235
  operator delete (__x_158);
  # DEBUG __x => __x_25
  if (__x_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 47>;

  <bb 47>:
  goto <bb 14>;

  <bb 48>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _21
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _21
  # DEBUG this => D#620
  # DEBUG D.158840 => D#621
  operator delete (_21);

  <bb 49>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__x_155 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1241 => D#1655
  # DEBUG __p => __x_155
  # DEBUG this => D#1241
  # DEBUG D#1240 => D#1241
  # DEBUG this => D#1240
  # DEBUG D#1239 => 1
  # DEBUG __p => __x_155
  # DEBUG __a => D#1238
  # DEBUG __n => D#1239
  # DEBUG D#1237 => D#1239
  # DEBUG D#1236 => D#1238
  # DEBUG D#1234 => D#1236
  # DEBUG D#1235 => D#1237
  # DEBUG __p => __x_155
  # DEBUG this => D#1234
  # DEBUG D.158853 => D#1235
  operator delete (__x_155);
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 9>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 11>;

  <bb 51>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _7
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _7
  # DEBUG this => D#620
  # DEBUG D.158807 => D#621
  operator delete (_7);

  <bb 52>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__x_152 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1241 => D#1655
  # DEBUG __p => __x_152
  # DEBUG this => D#1241
  # DEBUG D#1240 => D#1241
  # DEBUG this => D#1240
  # DEBUG D#1239 => 1
  # DEBUG __p => __x_152
  # DEBUG __a => D#1238
  # DEBUG __n => D#1239
  # DEBUG D#1237 => D#1239
  # DEBUG D#1236 => D#1238
  # DEBUG D#1234 => D#1236
  # DEBUG D#1235 => D#1237
  # DEBUG __p => __x_152
  # DEBUG this => D#1234
  # DEBUG D.158820 => D#1235
  operator delete (__x_152);
  # DEBUG __x => __x_14
  if (__x_14 == 0B)
    goto <bb 6>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 8>;

  <bb 54>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _11
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _11
  # DEBUG this => D#620
  # DEBUG D.158774 => D#621
  operator delete (_11);

  <bb 55>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__x_149 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1241 => D#1655
  # DEBUG __p => __x_149
  # DEBUG this => D#1241
  # DEBUG D#1240 => D#1241
  # DEBUG this => D#1240
  # DEBUG D#1239 => 1
  # DEBUG __p => __x_149
  # DEBUG __a => D#1238
  # DEBUG __n => D#1239
  # DEBUG D#1237 => D#1239
  # DEBUG D#1236 => D#1238
  # DEBUG D#1234 => D#1236
  # DEBUG D#1235 => D#1237
  # DEBUG __p => __x_149
  # DEBUG this => D#1234
  # DEBUG D.158787 => D#1235
  operator delete (__x_149);
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 3>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 5>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Flit*> >*] (_ZNSt8_Rb_treeIiSt4pairIKiP4FlitESt10_Select1stIS4_ESt4lessIiESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E, funcdef_no=3410, decl_uid=71892, cgraph_uid=1658, symbol_order=1659)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Flit*> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#314 => __x_68
  # DEBUG __x => D#314
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#315 => __x_68
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_68
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_68
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_68
  # DEBUG this => D#1529
  # DEBUG D.132656 => D#1530
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#314 => __x_72
  # DEBUG __x => D#314
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#315 => __x_72
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_72
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_72
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_72
  # DEBUG this => D#1529
  # DEBUG D.159211 => D#1530
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#314 => __x_71
  # DEBUG __x => D#314
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#315 => __x_71
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_71
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_71
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_71
  # DEBUG this => D#1529
  # DEBUG D.159224 => D#1530
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#314 => __x_77
  # DEBUG __x => D#314
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#315 => __x_77
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_77
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_77
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_77
  # DEBUG this => D#1529
  # DEBUG D.159237 => D#1530
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#314 => __x_80
  # DEBUG __x => D#314
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#315 => __x_80
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_80
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_80
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_80
  # DEBUG this => D#1529
  # DEBUG D.159250 => D#1530
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#314 => __x_83
  # DEBUG __x => D#314
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#315 => __x_83
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_83
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_83
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_83
  # DEBUG this => D#1529
  # DEBUG D.159263 => D#1530
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#314 => __x_86
  # DEBUG __x => D#314
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#315 => __x_86
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_86
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_86
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_86
  # DEBUG this => D#1529
  # DEBUG D.159276 => D#1530
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#314 => __x_89
  # DEBUG __x => D#314
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#315 => __x_89
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_89
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_89
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_89
  # DEBUG this => D#1529
  # DEBUG D.159289 => D#1530
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#314 => __x_92
  # DEBUG __x => D#314
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#315 => __x_92
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_92
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_92
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_92
  # DEBUG this => D#1529
  # DEBUG D.159302 => D#1530
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::map<int, Flit*>; _Alloc = std::allocator<std::map<int, Flit*> >] (_ZNSt6vectorISt3mapIiP4FlitSt4lessIiESaISt4pairIKiS2_EEESaIS9_EED2Ev, funcdef_no=2622, decl_uid=61582, cgraph_uid=870, symbol_order=871)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::map<int, Flit*>; _Alloc = std::allocator<std::map<int, Flit*> >] (struct vector * const this)
{
  struct _Rb_tree_node * __x;
  struct map * __first;
  struct map * _4;
  struct _Rep_type * _8;
  struct map * pretmp_14;
  struct map * prephitmp_15;
  struct _Rb_tree_node_base * _25;

  <bb 2>:
  # DEBUG D#1917 => &this_1(D)->D.61585
  # DEBUG this => D#1917
  _4 = this_1(D)->D.61585._M_impl._M_finish;
  __first_5 = this_1(D)->D.61585._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_29 = PHI <__first_5(3), __first_10(6)>
  # DEBUG __first => __first_29
  # DEBUG __r => __first_29
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _8 = &__first_29->_M_t;
  # DEBUG this => _8
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__first_29 + 16B];
  # DEBUG D#214 => _8
  # DEBUG this => D#214
  # DEBUG this => _8
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)_8]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  MEM[(struct  &)__first_29] ={v} {CLOBBER};
  __first_10 = __first_29 + 48;
  # DEBUG __first => __first_10
  # DEBUG __first => __first_10
  if (_4 == __first_10)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  <bb 7>:

  <bb 8>:
  # __x_36 = PHI <__x_9(7), __x_26(9)>
  # DEBUG __x => __x_36
  _25 = MEM[(struct _Rb_tree_node_base * *)__x_36 + 24B];
  # DEBUG D#314 => __x_36
  # DEBUG __x => D#314
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_8, _25);
  __x_26 = MEM[(struct _Rb_tree_node_base * *)__x_36 + 16B];
  # DEBUG D#315 => __x_36
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => _8
  # DEBUG __p => __x_36
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_36
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_36
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_36
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_36
  # DEBUG this => D#1529
  # DEBUG D.159318 => D#1530
  operator delete (__x_36);
  # DEBUG __x => __x_26
  # DEBUG __x => __x_26
  if (__x_26 == 0B)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  pretmp_14 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 11>:
  # prephitmp_15 = PHI <pretmp_14(10), __first_5(2)>
  # DEBUG D#1918 => &this_1(D)->D.61585
  # DEBUG this => D#1918
  # DEBUG D#884 => D#1918->_M_impl._M_end_of_storage
  # DEBUG D#883 => (long int) D#884
  # DEBUG D#3315 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#882 => (long int) D#3315
  # DEBUG D#881 => D#883 - D#882
  # DEBUG D#880 => D#881 /[ex] 48
  # DEBUG D#877 => D#1918
  # DEBUG D#878 => (long unsigned int) D#880
  # DEBUG __p => D#3315
  # DEBUG this => D#877
  # DEBUG __n => D#878
  # DEBUG D#876 => D#878
  # DEBUG D#875 => D#877
  if (prephitmp_15 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#874 => &D#875->_M_impl
  # DEBUG D#872 => D#874
  # DEBUG D#873 => D#876
  # DEBUG __p => D#3315
  # DEBUG __a => D#872
  # DEBUG __n => D#873
  # DEBUG D#871 => D#873
  # DEBUG D#870 => D#872
  # DEBUG D#868 => D#870
  # DEBUG D#869 => D#871
  # DEBUG __p => D#3315
  # DEBUG this => D#868
  # DEBUG D.132780 => D#869
  operator delete (prephitmp_15);

  <bb 13>:
  # DEBUG D#879 => &D#1918->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function TrafficManager::~TrafficManager() (_ZN14TrafficManagerD2Ev, funcdef_no=2467, decl_uid=65067, cgraph_uid=715, symbol_order=716)

Trying loop 25 as candidate
loop 25 is innermost
loop is not parallel according to graphite
Trying loop 24 as candidate
loop 24 is innermost
loop is not parallel according to graphite
Trying loop 22 as candidate
loop 22 is not innermost
loop is not parallel according to graphite
Trying loop 23 as candidate
loop 23 is innermost
loop is not parallel according to graphite
Trying loop 21 as candidate
loop 21 is innermost
loop is not parallel according to graphite
Trying loop 18 as candidate
loop 18 is not innermost
loop is not parallel according to graphite
Trying loop 19 as candidate
loop 19 is not innermost
loop is not parallel according to graphite
Trying loop 20 as candidate
loop 20 is innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is not innermost
loop is not parallel according to graphite
Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is not innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is not innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is not innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
TrafficManager::~TrafficManager() (struct TrafficManager * const this)
{
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct _Node * __tmp;
  struct list * __first;
  struct vector * __first;
  struct list * __first;
  struct _Node * __tmp;
  struct vector * __first;
  struct vector * __first;
  struct _Node * __tmp;
  struct list * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct list * __first;
  struct _Node * __tmp;
  int j;
  int i;
  int c;
  int subnet;
  int source;
  long unsigned int _31;
  struct Stats * & _33;
  struct BufferState * _34;
  int (*__vtbl_ptr_type) () * _35;
  int (*__vtbl_ptr_type) () _36;
  int _40;
  long unsigned int _41;
  struct Stats * _42;
  int (*__vtbl_ptr_type) () * _43;
  int (*__vtbl_ptr_type) () _44;
  bool _46;
  struct Stats * & _47;
  struct Stats * _48;
  int (*__vtbl_ptr_type) () * _49;
  int (*__vtbl_ptr_type) () _50;
  struct Stats * _52;
  int (*__vtbl_ptr_type) () * _53;
  int (*__vtbl_ptr_type) () _54;
  struct Stats * _56;
  int (*__vtbl_ptr_type) () * _57;
  int (*__vtbl_ptr_type) () _58;
  struct Stats * & _60;
  struct Stats * _61;
  int (*__vtbl_ptr_type) () * _62;
  int (*__vtbl_ptr_type) () _63;
  long unsigned int _65;
  struct TrafficPattern * _66;
  int (*__vtbl_ptr_type) () * _67;
  int (*__vtbl_ptr_type) () _68;
  struct InjectionProcess * _71;
  int (*__vtbl_ptr_type) () * _72;
  int (*__vtbl_ptr_type) () _73;
  bool _75;
  int _78;
  int _79;
  long unsigned int _80;
  struct vector & _81;
  struct Stats * _83;
  int (*__vtbl_ptr_type) () * _84;
  int (*__vtbl_ptr_type) () _85;
  int _88;
  int _89;
  long unsigned int _90;
  bool _91;
  struct BufferState * & _92;
  struct Stats * _93;
  int (*__vtbl_ptr_type) () * _94;
  int (*__vtbl_ptr_type) () _95;
  long unsigned int _101;
  struct Stats * _103;
  int (*__vtbl_ptr_type) () * _104;
  int (*__vtbl_ptr_type) () _105;
  struct ostream * gWatchOut.426_110;
  int (*__vtbl_ptr_type) () * _111;
  int (*__vtbl_ptr_type) () _112;
  struct ostream * _114;
  int (*__vtbl_ptr_type) () * _115;
  int (*__vtbl_ptr_type) () _116;
  struct _Rep_type * _121;
  struct _Rep_type * _122;
  struct _Rep_type * _123;
  double * _124;
  double * _125;
  double * _126;
  double * _127;
  double * _128;
  int * _129;
  struct _Rep_type * _130;
  int * _131;
  int * _132;
  double * _133;
  double * _134;
  struct vector * _135;
  double * _137;
  double * _138;
  double * _139;
  struct vector * _140;
  double * _142;
  double * _143;
  double * _144;
  struct vector * _145;
  double * _147;
  double * _148;
  double * _149;
  struct vector * _150;
  double * _152;
  double * _153;
  struct vector * _154;
  struct vector * _156;
  struct vector * _158;
  struct Stats * * _160;
  double * _161;
  double * _162;
  double * _163;
  struct Stats * * _164;
  double * _165;
  double * _166;
  double * _167;
  struct Stats * * _168;
  double * _169;
  double * _170;
  double * _171;
  struct Stats * * _172;
  double * _173;
  double * _174;
  double * _175;
  struct Stats * * _176;
  bool _177;
  struct vector * _178;
  int * _179;
  int * _180;
  struct vector * _181;
  struct vector * _183;
  struct vector * _185;
  bool _187;
  struct list * _188;
  struct vector * _190;
  struct vector * _191;
  struct vector * _194;
  struct vector * _196;
  int * _197;
  struct InjectionProcess * * _198;
  struct vector * _199;
  struct TrafficPattern * * _201;
  struct vector * _202;
  int * _204;
  int * _205;
  int * _206;
  int * _207;
  int * _208;
  double * _209;
  int * _210;
  struct Module * * _212;
  double * _213;
  struct Network * * _214;
  struct vector * _215;
  struct vector * _217;
  struct list * _220;
  struct _Rep_type * _222;
  double * _223;
  double * _224;
  double * _225;
  double * _226;
  double * _227;
  int * _228;
  struct _Rep_type * _229;
  int * _230;
  int * _231;
  double * _232;
  double * _233;
  double * _234;
  double * _235;
  struct vector * _236;
  double * _238;
  double * _239;
  double * _240;
  struct vector * _241;
  double * _243;
  double * _244;
  double * _245;
  struct vector * _246;
  double * _248;
  double * _249;
  double * _250;
  struct vector * _251;
  struct Stats * * _253;
  double * _254;
  struct vector * _255;
  struct vector * _257;
  struct vector * _259;
  double * _261;
  double * _262;
  struct Stats * * _263;
  double * _264;
  double * _265;
  double * _266;
  struct Stats * * _267;
  double * _268;
  double * _269;
  double * _270;
  struct Stats * * _271;
  double * _272;
  double * _273;
  double * _274;
  struct Stats * * _275;
  int * _276;
  int * _277;
  struct vector * _279;
  int * _280;
  struct InjectionProcess * * _281;
  struct vector * _282;
  struct vector * _284;
  struct vector * _286;
  struct list * _289;
  _Bit_type * _291;
  struct vector * _292;
  struct vector * _295;
  struct vector * _297;
  struct TrafficPattern * * _298;
  int * _299;
  struct vector * _300;
  int * _302;
  struct vector * _303;
  int * _305;
  int * _306;
  int * _307;
  double * _308;
  int * _309;
  double * _310;
  struct Network * * _311;
  struct Module * * _313;
  int * _314;
  struct vector * _316;
  struct vector * _318;
  struct TrafficPattern * * _322;
  struct InjectionProcess * * _323;
  struct vector * _324;
  struct BufferState * * _325;
  struct Stats * * _326;
  struct Stats * * _327;
  struct Stats * * _328;
  struct Stats * * _329;
  struct Stats * * _330;
  struct Stats * * _331;
  struct Stats * * _332;
  struct Stats * * _333;
  struct vector * _334;
  struct vector * _335;
  struct vector * _336;
  struct Stats * & _337;
  struct Stats * & _338;
  struct TrafficPattern * & _339;
  struct InjectionProcess * & _340;
  long unsigned int _341;
  struct Stats * & _342;
  struct vector & _344;
  long unsigned int _345;
  struct Stats * & _346;
  struct vector & _347;
  struct Stats * & _349;
  struct vector & _350;
  int * _351;
  struct _Rb_tree_node_base * _352;
  struct _Rb_tree_node_base * _353;
  struct _Rb_tree_node_base * _354;
  struct _Rb_tree_node_base * _355;
  struct _Rb_tree_node_base * _356;
  struct _Rb_tree_node_base * _357;
  int prephitmp_473;
  int prephitmp_482;
  long unsigned int pretmp_484;
  long unsigned int pretmp_485;
  int prephitmp_491;
  int pretmp_497;
  int prephitmp_500;
  int pretmp_501;
  int prephitmp_502;
  int pretmp_503;
  int prephitmp_506;
  int pretmp_507;
  int prephitmp_508;
  struct list * pretmp_1030;
  struct list * prephitmp_1031;
  struct vector * pretmp_1034;
  struct vector * prephitmp_1035;
  struct vector * pretmp_1037;
  struct vector * prephitmp_1040;
  struct vector * pretmp_1041;
  struct vector * prephitmp_1042;
  struct vector * pretmp_1046;
  struct vector * prephitmp_1047;
  struct vector * pretmp_1049;
  struct vector * pretmp_1065;
  struct vector * prephitmp_1066;
  struct vector * pretmp_1067;
  struct vector * prephitmp_1070;
  struct vector * pretmp_1072;
  struct vector * prephitmp_1073;
  struct vector * pretmp_1077;
  struct vector * prephitmp_1078;
  struct vector * pretmp_1082;
  struct vector * prephitmp_1083;
  struct list * pretmp_1096;
  struct list * prephitmp_1097;
  struct list * _1135;
  struct BufferState * * _1146;
  _Bit_type * _1170;
  long unsigned int * const _1171;
  long int _1173;
  long int _1174;
  long int _1175;
  long unsigned int _1176;
  sizetype _1177;
  long unsigned int * _1178;
  struct vector * _1179;
  int * _1182;
  struct vector * _1185;
  struct Router * * _1188;
  char * const _1191;
  const char * _1192;
  char * const _1193;
  const char * _1194;
  struct vector * _1215;
  long unsigned int * const _1221;
  long int _1223;
  long int _1224;
  long int _1225;
  long unsigned int _1226;
  sizetype _1227;
  long unsigned int * _1228;
  struct vector * _1229;
  int * _1236;
  struct vector * _1239;
  struct BufferState * * _1242;
  struct Router * * _1247;
  char * const _1250;
  const char * _1251;
  char * const _1252;
  const char * _1253;
  int pretmp_1305;
  int prephitmp_1306;
  int pretmp_1317;
  long unsigned int pretmp_1319;
  long unsigned int pretmp_1323;
  long unsigned int prephitmp_1324;
  int pretmp_1335;
  int prephitmp_1336;
  int pretmp_1337;
  int prephitmp_1366;
  int prephitmp_1378;
  long unsigned int pretmp_1379;
  struct vector * prephitmp_1412;
  struct vector * pretmp_1414;
  struct vector * prephitmp_1415;
  int prephitmp_1425;
  int prephitmp_1426;
  struct list * pretmp_1430;
  struct list * prephitmp_1431;
  struct list * pretmp_1472;
  struct list * prephitmp_1473;
  struct vector * pretmp_1474;
  struct vector * prephitmp_1475;
  int prephitmp_1498;
  bool _1507;
  bool _1508;
  int _1621;
  struct _List_node_base * _1640;
  int _1688;
  int _1693;
  int _1698;
  struct _List_node_base * _1700;
  struct _List_node_base * _1705;
  struct _List_node_base * _1710;

  <bb 2>:
  this_27(D)->D.65070._vptr.Module = &MEM[(void *)&_ZTV14TrafficManager + 16B];
  # DEBUG source => 0
  # DEBUG source => 0
  _1688 = this_27(D)->_nodes;
  if (_1688 <= 0)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_501 = this_27(D)->_subnets;

  <bb 4>:
  # source_1627 = PHI <0(3), source_39(15)>
  # prephitmp_473 = PHI <_1688(3), prephitmp_506(15)>
  # prephitmp_502 = PHI <pretmp_501(3), prephitmp_482(15)>
  # DEBUG source => source_1627
  # DEBUG subnet => 0
  if (prephitmp_502 <= 0)
    goto <bb 14>;
  else
    goto <bb 7>;

  <bb 5>:
  # DEBUG c => 0
  _1698 = this_27(D)->_classes;
  if (_1698 <= 0)
    goto <bb 6>;
  else
    goto <bb 16>;

  <bb 6>:
  gWatchOut.426_110 = gWatchOut;
  _1507 = gWatchOut.426_110 != &cout;
  _46 = gWatchOut.426_110 != 0B;
  _1508 = _46 & _1507;
  if (_1508 != 0)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 7>:
  pretmp_484 = (long unsigned int) source_1627;
  pretmp_485 = pretmp_484 * 24;

  <bb 8>:
  # subnet_1626 = PHI <0(7), subnet_38(12)>
  # prephitmp_491 = PHI <prephitmp_502(7), prephitmp_508(12)>
  # DEBUG subnet => subnet_1626
  _31 = (long unsigned int) subnet_1626;
  # DEBUG D#1919 => &this_27(D)->_buf_states
  _324 = MEM[(struct vector * *)this_27(D) + 536B];
  # DEBUG D#72 => D#1919
  # DEBUG __n => (long unsigned int) source_1627
  # DEBUG this => D#72
  _81 = _324 + pretmp_485;
  _325 = MEM[(struct BufferState * * *)_81];
  # DEBUG __n => _31
  # DEBUG this => D#76
  _101 = _31 * 8;
  _92 = _325 + _101;
  _34 = *_92;
  if (_34 != 0B)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:
  _35 = _34->D.51627._vptr.Module;
  _36 = MEM[(int (*__vtbl_ptr_type) () *)_35 + 8B];
  OBJ_TYPE_REF(_36;(struct BufferState)_34->1) (_34);

  <bb 10>:
  pretmp_507 = this_27(D)->_subnets;

  <bb 11>:
  # prephitmp_508 = PHI <prephitmp_491(8), pretmp_507(10)>
  subnet_38 = subnet_1626 + 1;
  # DEBUG subnet => subnet_38
  # DEBUG subnet => subnet_38
  if (subnet_38 >= prephitmp_508)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 8>;

  <bb 13>:
  # prephitmp_1426 = PHI <prephitmp_508(11)>
  pretmp_503 = this_27(D)->_nodes;

  <bb 14>:
  # prephitmp_482 = PHI <prephitmp_1426(13), prephitmp_502(4)>
  # prephitmp_506 = PHI <pretmp_503(13), prephitmp_473(4)>
  source_39 = source_1627 + 1;
  # DEBUG source => source_39
  # DEBUG source => source_39
  if (source_39 >= prephitmp_506)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 4>;

  <bb 16>:

  <bb 17>:
  # c_1684 = PHI <0(16), c_109(40)>
  # DEBUG c => c_1684
  _41 = (long unsigned int) c_1684;
  # DEBUG D#1920 => &this_27(D)->_plat_stats
  _326 = MEM[(struct Stats * * *)this_27(D) + 856B];
  # DEBUG D#80 => D#1920
  # DEBUG __n => _41
  # DEBUG this => D#80
  _65 = _41 * 8;
  _60 = _326 + _65;
  _42 = *_60;
  if (_42 != 0B)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  # DEBUG D#1921 => &this_27(D)->_nlat_stats
  _327 = MEM[(struct Stats * * *)this_27(D) + 952B];
  # DEBUG D#80 => D#1921
  # DEBUG __n => _41
  # DEBUG this => D#80
  _47 = _327 + _65;
  _48 = *_47;
  if (_48 != 0B)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 19>:
  _43 = _42->D.51727._vptr.Module;
  _44 = MEM[(int (*__vtbl_ptr_type) () *)_43 + 8B];
  OBJ_TYPE_REF(_44;(struct Stats)_42->1) (_42);
  goto <bb 18>;

<L151>:
  goto <bb 259> (<L71>);

  <bb 21>:
  # DEBUG D#1922 => &this_27(D)->_flat_stats
  _328 = MEM[(struct Stats * * *)this_27(D) + 1048B];
  # DEBUG D#80 => D#1922
  # DEBUG __n => _41
  # DEBUG this => D#80
  _33 = _328 + _65;
  _52 = *_33;
  if (_52 != 0B)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 22>:
  _49 = _48->D.51727._vptr.Module;
  _50 = MEM[(int (*__vtbl_ptr_type) () *)_49 + 8B];
  OBJ_TYPE_REF(_50;(struct Stats)_48->1) (_48);
  goto <bb 21>;

<L152>:
  goto <bb 259> (<L71>);

  <bb 24>:
  # DEBUG D#1923 => &this_27(D)->_frag_stats
  _329 = MEM[(struct Stats * * *)this_27(D) + 1144B];
  # DEBUG D#80 => D#1923
  # DEBUG __n => _41
  # DEBUG this => D#80
  _337 = _329 + _65;
  _56 = *_337;
  if (_56 != 0B)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 25>:
  _53 = _52->D.51727._vptr.Module;
  _54 = MEM[(int (*__vtbl_ptr_type) () *)_53 + 8B];
  OBJ_TYPE_REF(_54;(struct Stats)_52->1) (_52);
  goto <bb 24>;

<L153>:
  goto <bb 259> (<L71>);

  <bb 27>:
  # DEBUG D#1924 => &this_27(D)->_hop_stats
  _330 = MEM[(struct Stats * * *)this_27(D) + 1312B];
  # DEBUG D#80 => D#1924
  # DEBUG __n => _41
  # DEBUG this => D#80
  _338 = _330 + _65;
  _61 = *_338;
  if (_61 != 0B)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 28>:
  _57 = _56->D.51727._vptr.Module;
  _58 = MEM[(int (*__vtbl_ptr_type) () *)_57 + 8B];
  OBJ_TYPE_REF(_58;(struct Stats)_56->1) (_56);
  goto <bb 27>;

<L154>:
  goto <bb 259> (<L71>);

  <bb 30>:
  # DEBUG D#1925 => &this_27(D)->_traffic_pattern
  _322 = MEM[(struct TrafficPattern * * *)this_27(D) + 480B];
  # DEBUG D#70 => D#1925
  # DEBUG __n => _41
  # DEBUG this => D#70
  _339 = _322 + _65;
  _66 = *_339;
  if (_66 != 0B)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 31>:
  _62 = _61->D.51727._vptr.Module;
  _63 = MEM[(int (*__vtbl_ptr_type) () *)_62 + 8B];
  OBJ_TYPE_REF(_63;(struct Stats)_61->1) (_61);
  goto <bb 30>;

<L155>:
  goto <bb 259> (<L71>);

  <bb 33>:
  # DEBUG D#1926 => &this_27(D)->_injection_process
  _323 = MEM[(struct InjectionProcess * * *)this_27(D) + 504B];
  # DEBUG D#71 => D#1926
  # DEBUG __n => _41
  # DEBUG this => D#71
  _340 = _323 + _65;
  _71 = *_340;
  if (_71 != 0B)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 34>:
  _67 = _66->_vptr.TrafficPattern;
  _68 = MEM[(int (*__vtbl_ptr_type) () *)_67 + 8B];
  OBJ_TYPE_REF(_68;(struct TrafficPattern)_66->1) (_66);
  goto <bb 33>;

<L156>:
  goto <bb 259> (<L71>);

  <bb 36>:
  _75 = this_27(D)->_pair_stats;
  if (_75 != 0)
    goto <bb 41>;
  else
    goto <bb 39>;

  <bb 37>:
  _72 = _71->_vptr.InjectionProcess;
  _73 = MEM[(int (*__vtbl_ptr_type) () *)_72 + 8B];
  OBJ_TYPE_REF(_73;(struct InjectionProcess)_71->1) (_71);
  goto <bb 36>;

<L157>:
  goto <bb 259> (<L71>);

  <bb 39>:
  c_109 = c_1684 + 1;
  # DEBUG c => c_109
  # DEBUG c => c_109
  _40 = this_27(D)->_classes;
  if (_40 <= c_109)
    goto <bb 6>;
  else
    goto <bb 40>;

  <bb 40>:
  goto <bb 17>;

  <bb 41>:
  # DEBUG i => 0
  _1693 = this_27(D)->_nodes;
  if (_1693 <= 0)
    goto <bb 39>;
  else
    goto <bb 42>;

  <bb 42>:
  pretmp_1379 = _41 * 24;

  <bb 43>:
  # i_1682 = PHI <0(42), i_108(61)>
  # prephitmp_1498 = PHI <_1693(42), prephitmp_1378(61)>
  # DEBUG i => i_1682
  # DEBUG j => 0
  if (prephitmp_1498 <= 0)
    goto <bb 60>;
  else
    goto <bb 44>;

  <bb 44>:

  <bb 45>:
  # j_1683 = PHI <0(44), j_107(59)>
  # _1621 = PHI <prephitmp_1498(44), prephitmp_1306(59)>
  # prephitmp_1366 = PHI <prephitmp_1498(44), prephitmp_1306(59)>
  # DEBUG j => j_1683
  _78 = _1621 * i_1682;
  _79 = _78 + j_1683;
  _80 = (long unsigned int) _79;
  # DEBUG D#1927 => &this_27(D)->_pair_plat
  _334 = MEM[(struct vector * *)this_27(D) + 1240B];
  # DEBUG D#124 => D#1927
  # DEBUG __n => _41
  # DEBUG this => D#124
  _344 = _334 + pretmp_1379;
  _331 = MEM[(struct Stats * * *)_344];
  # DEBUG __n => _80
  # DEBUG this => D#80
  _341 = _80 * 8;
  _342 = _331 + _341;
  _83 = *_342;
  if (_83 != 0B)
    goto <bb 46>;
  else
    goto <bb 49>;

  <bb 46>:
  _84 = _83->D.51727._vptr.Module;
  _85 = MEM[(int (*__vtbl_ptr_type) () *)_84 + 8B];
  OBJ_TYPE_REF(_85;(struct Stats)_83->1) (_83);
  goto <bb 48>;

<L158>:
  goto <bb 259> (<L71>);

  <bb 48>:
  pretmp_497 = this_27(D)->_nodes;

  <bb 49>:
  # prephitmp_500 = PHI <prephitmp_1366(45), pretmp_497(48)>
  _88 = prephitmp_500 * i_1682;
  _89 = _88 + j_1683;
  _90 = (long unsigned int) _89;
  # DEBUG D#1928 => &this_27(D)->_pair_nlat
  _335 = MEM[(struct vector * *)this_27(D) + 1264B];
  # DEBUG D#124 => D#1928
  # DEBUG __n => _41
  # DEBUG this => D#124
  _347 = _335 + pretmp_1379;
  _332 = MEM[(struct Stats * * *)_347];
  # DEBUG __n => _90
  # DEBUG this => D#80
  _345 = _90 * 8;
  _346 = _332 + _345;
  _93 = *_346;
  if (_93 != 0B)
    goto <bb 50>;
  else
    goto <bb 53>;

  <bb 50>:
  _94 = _93->D.51727._vptr.Module;
  _95 = MEM[(int (*__vtbl_ptr_type) () *)_94 + 8B];
  OBJ_TYPE_REF(_95;(struct Stats)_93->1) (_93);
  goto <bb 52>;

<L159>:
  goto <bb 259> (<L71>);

  <bb 52>:
  pretmp_1335 = this_27(D)->_nodes;
  pretmp_1337 = pretmp_1335 * i_1682;
  pretmp_1317 = pretmp_1337 + j_1683;
  pretmp_1319 = (long unsigned int) pretmp_1317;
  pretmp_1323 = pretmp_1319 * 8;

  <bb 53>:
  # prephitmp_1336 = PHI <prephitmp_500(49), pretmp_1335(52)>
  # prephitmp_1324 = PHI <_345(49), pretmp_1323(52)>
  # DEBUG D#3351 => this_27(D)->_nodes
  # DEBUG D#3350 => D#3351 * i_1682
  # DEBUG D#3349 => D#3350 + j_1683
  # DEBUG D#1929 => &this_27(D)->_pair_flat
  _336 = MEM[(struct vector * *)this_27(D) + 1288B];
  # DEBUG D#124 => D#1929
  # DEBUG __n => _41
  # DEBUG this => D#124
  _350 = _336 + pretmp_1379;
  _333 = MEM[(struct Stats * * *)_350];
  # DEBUG __n => (long unsigned int) D#3349
  # DEBUG this => D#80
  _349 = _333 + prephitmp_1324;
  _103 = *_349;
  if (_103 != 0B)
    goto <bb 54>;
  else
    goto <bb 57>;

  <bb 54>:
  _104 = _103->D.51727._vptr.Module;
  _105 = MEM[(int (*__vtbl_ptr_type) () *)_104 + 8B];
  OBJ_TYPE_REF(_105;(struct Stats)_103->1) (_103);
  goto <bb 56>;

<L160>:
  goto <bb 259> (<L71>);

  <bb 56>:
  pretmp_1305 = this_27(D)->_nodes;

  <bb 57>:
  # prephitmp_1306 = PHI <prephitmp_1336(53), pretmp_1305(56)>
  j_107 = j_1683 + 1;
  # DEBUG j => j_107
  # DEBUG j => j_107
  if (j_107 >= prephitmp_1306)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # prephitmp_1425 = PHI <prephitmp_1306(57)>
  goto <bb 60>;

  <bb 59>:
  goto <bb 45>;

  <bb 60>:
  # prephitmp_1378 = PHI <prephitmp_1425(58), prephitmp_1498(43)>
  i_108 = i_1682 + 1;
  # DEBUG i => i_108
  # DEBUG i => i_108
  if (i_108 >= prephitmp_1378)
    goto <bb 39>;
  else
    goto <bb 61>;

  <bb 61>:
  goto <bb 43>;

  <bb 62>:
  _114 = this_27(D)->_stats_out;
  _91 = _114 != &cout;
  _177 = _114 != 0B;
  _187 = _91 & _177;
  if (_187 != 0)
    goto <bb 66>;
  else
    goto <bb 65>;

  <bb 63>:
  _111 = gWatchOut.426_110->_vptr.basic_ostream;
  _112 = MEM[(int (*__vtbl_ptr_type) () *)_111 + 8B];
  OBJ_TYPE_REF(_112;(struct basic_ostream)gWatchOut.426_110->1) (gWatchOut.426_110);
  goto <bb 62>;

<L161>:
  goto <bb 259> (<L71>);

  <bb 65>:
  PacketReplyInfo::FreeAll ();
  goto <bb 69>;

  <bb 66>:
  _115 = _114->_vptr.basic_ostream;
  _116 = MEM[(int (*__vtbl_ptr_type) () *)_115 + 8B];
  OBJ_TYPE_REF(_116;(struct basic_ostream)_114->1) (_114);
  goto <bb 65>;

<L162>:
  goto <bb 259> (<L71>);

<L163>:
  goto <bb 259> (<L71>);

  <bb 69>:
  Flit::FreeAll ();
  goto <bb 71>;

<L164>:
  goto <bb 259> (<L71>);

  <bb 71>:
  Credit::FreeAll ();
  goto <bb 73>;

<L165>:
  goto <bb 259> (<L71>);

  <bb 73>:
  # DEBUG D#2036 => &this_27(D)->_packets_to_watch
  # DEBUG this => D#2036
  _122 = &MEM[(struct set *)this_27(D) + 2096B]._M_t;
  # DEBUG this => _122
  _354 = MEM[(struct _Rb_tree_node_base * *)this_27(D) + 2112B];
  # DEBUG D#193 => _122
  # DEBUG this => D#193
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_122, _354);
  # DEBUG D#1171 => &MEM[(struct _Rb_tree *)_122]._M_impl
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  MEM[(struct  &)this_27(D) + 2096] ={v} {CLOBBER};
  # DEBUG D#2035 => &this_27(D)->_flits_to_watch
  # DEBUG this => D#2035
  _123 = &MEM[(struct set *)this_27(D) + 2048B]._M_t;
  # DEBUG this => _123
  _353 = MEM[(struct _Rb_tree_node_base * *)this_27(D) + 2064B];
  # DEBUG D#193 => _123
  # DEBUG this => D#193
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_123, _353);
  # DEBUG D#1171 => &MEM[(struct _Rb_tree *)_123]._M_impl
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  MEM[(struct  &)this_27(D) + 2048] ={v} {CLOBBER};
  # DEBUG D#2034 => &this_27(D)->_acc_warmup_threshold
  # DEBUG this => D#2034
  # DEBUG D#503 => &D#2034->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2034->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2034->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2034->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _124 = MEM[(struct _Vector_base *)this_27(D) + 2008B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _124
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _124
  # DEBUG __n => D#497
  if (_124 != 0B)
    goto <bb 74>;
  else
    goto <bb 75>;

  <bb 74>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _124
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _124
  # DEBUG this => D#489
  # DEBUG D.133657 => D#490
  operator delete (_124);

  <bb 75>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 2008] ={v} {CLOBBER};
  # DEBUG D#2033 => &this_27(D)->_warmup_threshold
  # DEBUG this => D#2033
  # DEBUG D#503 => &D#2033->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2033->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2033->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2033->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _125 = MEM[(struct _Vector_base *)this_27(D) + 1984B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _125
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _125
  # DEBUG __n => D#497
  if (_125 != 0B)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _125
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _125
  # DEBUG this => D#489
  # DEBUG D.133642 => D#490
  operator delete (_125);

  <bb 77>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1984] ={v} {CLOBBER};
  # DEBUG D#2031 => &this_27(D)->_acc_stopping_threshold
  # DEBUG this => D#2031
  # DEBUG D#503 => &D#2031->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2031->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2031->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2031->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _126 = MEM[(struct _Vector_base *)this_27(D) + 1960B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _126
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _126
  # DEBUG __n => D#497
  if (_126 != 0B)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _126
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _126
  # DEBUG this => D#489
  # DEBUG D.133627 => D#490
  operator delete (_126);

  <bb 79>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1960] ={v} {CLOBBER};
  # DEBUG D#2030 => &this_27(D)->_stopping_threshold
  # DEBUG this => D#2030
  # DEBUG D#503 => &D#2030->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2030->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2030->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2030->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _127 = MEM[(struct _Vector_base *)this_27(D) + 1936B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _127
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _127
  # DEBUG __n => D#497
  if (_127 != 0B)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _127
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _127
  # DEBUG this => D#489
  # DEBUG D.133612 => D#490
  operator delete (_127);

  <bb 81>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1936] ={v} {CLOBBER};
  # DEBUG D#2028 => &this_27(D)->_latency_thres
  # DEBUG this => D#2028
  # DEBUG D#503 => &D#2028->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2028->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2028->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2028->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _128 = MEM[(struct _Vector_base *)this_27(D) + 1912B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _128
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _128
  # DEBUG __n => D#497
  if (_128 != 0B)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _128
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _128
  # DEBUG this => D#489
  # DEBUG D.133597 => D#490
  operator delete (_128);

  <bb 83>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1912] ={v} {CLOBBER};
  # DEBUG D#2027 => &this_27(D)->_measure_stats
  # DEBUG this => D#2027
  # DEBUG D#476 => &D#2027->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2027->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2027->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2027->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _129 = MEM[(struct _Vector_base *)this_27(D) + 1880B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _129
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _129
  # DEBUG __n => D#470
  if (_129 != 0B)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _129
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _129
  # DEBUG this => D#462
  # DEBUG D.133582 => D#463
  operator delete (_129);

  <bb 85>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 1880] ={v} {CLOBBER};
  # DEBUG D#2025 => &this_27(D)->_stats
  # DEBUG this => D#2025
  _130 = &MEM[(struct map *)this_27(D) + 1792B]._M_t;
  # DEBUG this => _130
  _352 = MEM[(struct _Rb_tree_node_base * *)this_27(D) + 1808B];
  # DEBUG D#197 => _130
  # DEBUG this => D#197
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, Stats*>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> > >::_M_erase (_130, _352);
  # DEBUG D#1657 => &MEM[(struct _Rb_tree *)_130]._M_impl
  # DEBUG this => D#1657
  # DEBUG this => D#1657
  # DEBUG this => D#1657
  MEM[(struct  &)this_27(D) + 1792] ={v} {CLOBBER};
  # DEBUG D#2024 => &this_27(D)->_slowest_flit
  # DEBUG this => D#2024
  # DEBUG D#476 => &D#2024->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2024->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2024->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2024->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _131 = MEM[(struct _Vector_base *)this_27(D) + 1768B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _131
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _131
  # DEBUG __n => D#470
  if (_131 != 0B)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _131
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _131
  # DEBUG this => D#462
  # DEBUG D.133562 => D#463
  operator delete (_131);

  <bb 87>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 1768] ={v} {CLOBBER};
  # DEBUG D#2023 => &this_27(D)->_slowest_packet
  # DEBUG this => D#2023
  # DEBUG D#476 => &D#2023->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2023->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2023->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2023->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _132 = MEM[(struct _Vector_base *)this_27(D) + 1744B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _132
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _132
  # DEBUG __n => D#470
  if (_132 != 0B)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _132
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _132
  # DEBUG this => D#462
  # DEBUG D.133547 => D#463
  operator delete (_132);

  <bb 89>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 1744] ={v} {CLOBBER};
  # DEBUG D#2021 => &this_27(D)->_overall_max_accepted
  # DEBUG this => D#2021
  # DEBUG D#503 => &D#2021->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2021->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2021->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2021->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _133 = MEM[(struct _Vector_base *)this_27(D) + 1720B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _133
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _133
  # DEBUG __n => D#497
  if (_133 != 0B)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _133
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _133
  # DEBUG this => D#489
  # DEBUG D.133532 => D#490
  operator delete (_133);

  <bb 91>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1720] ={v} {CLOBBER};
  # DEBUG D#2019 => &this_27(D)->_overall_avg_accepted
  # DEBUG this => D#2019
  # DEBUG D#503 => &D#2019->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2019->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2019->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2019->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _134 = MEM[(struct _Vector_base *)this_27(D) + 1696B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _134
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _134
  # DEBUG __n => D#497
  if (_134 != 0B)
    goto <bb 92>;
  else
    goto <bb 93>;

  <bb 92>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _134
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _134
  # DEBUG this => D#489
  # DEBUG D.133517 => D#490
  operator delete (_134);

  <bb 93>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1696] ={v} {CLOBBER};
  # DEBUG D#2018 => &this_27(D)->_overall_min_accepted
  # DEBUG this => D#2018
  # DEBUG D#503 => &D#2018->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2018->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2018->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2018->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _137 = MEM[(struct _Vector_base *)this_27(D) + 1672B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _137
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _137
  # DEBUG __n => D#497
  if (_137 != 0B)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _137
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _137
  # DEBUG this => D#489
  # DEBUG D.133502 => D#490
  operator delete (_137);

  <bb 95>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1672] ={v} {CLOBBER};
  _135 = &this_27(D)->_accepted_flits;
  std::vector<std::vector<int> >::~vector (_135);
  # DEBUG D#2016 => &this_27(D)->_overall_max_sent
  # DEBUG this => D#2016
  # DEBUG D#503 => &D#2016->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2016->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2016->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2016->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _138 = MEM[(struct _Vector_base *)this_27(D) + 1624B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _138
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _138
  # DEBUG __n => D#497
  if (_138 != 0B)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _138
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _138
  # DEBUG this => D#489
  # DEBUG D.133487 => D#490
  operator delete (_138);

  <bb 97>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1624] ={v} {CLOBBER};
  # DEBUG D#2015 => &this_27(D)->_overall_avg_sent
  # DEBUG this => D#2015
  # DEBUG D#503 => &D#2015->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2015->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2015->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2015->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _139 = MEM[(struct _Vector_base *)this_27(D) + 1600B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _139
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _139
  # DEBUG __n => D#497
  if (_139 != 0B)
    goto <bb 98>;
  else
    goto <bb 99>;

  <bb 98>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _139
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _139
  # DEBUG this => D#489
  # DEBUG D.133472 => D#490
  operator delete (_139);

  <bb 99>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1600] ={v} {CLOBBER};
  # DEBUG D#2013 => &this_27(D)->_overall_min_sent
  # DEBUG this => D#2013
  # DEBUG D#503 => &D#2013->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2013->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2013->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2013->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _142 = MEM[(struct _Vector_base *)this_27(D) + 1576B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _142
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _142
  # DEBUG __n => D#497
  if (_142 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _142
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _142
  # DEBUG this => D#489
  # DEBUG D.133457 => D#490
  operator delete (_142);

  <bb 101>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1576] ={v} {CLOBBER};
  _140 = &this_27(D)->_sent_flits;
  std::vector<std::vector<int> >::~vector (_140);
  # DEBUG D#2012 => &this_27(D)->_overall_max_accepted_packets
  # DEBUG this => D#2012
  # DEBUG D#503 => &D#2012->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2012->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2012->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2012->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _143 = MEM[(struct _Vector_base *)this_27(D) + 1528B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _143
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _143
  # DEBUG __n => D#497
  if (_143 != 0B)
    goto <bb 102>;
  else
    goto <bb 103>;

  <bb 102>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _143
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _143
  # DEBUG this => D#489
  # DEBUG D.133442 => D#490
  operator delete (_143);

  <bb 103>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1528] ={v} {CLOBBER};
  # DEBUG D#2010 => &this_27(D)->_overall_avg_accepted_packets
  # DEBUG this => D#2010
  # DEBUG D#503 => &D#2010->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2010->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2010->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2010->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _144 = MEM[(struct _Vector_base *)this_27(D) + 1504B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _144
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _144
  # DEBUG __n => D#497
  if (_144 != 0B)
    goto <bb 104>;
  else
    goto <bb 105>;

  <bb 104>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _144
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _144
  # DEBUG this => D#489
  # DEBUG D.133427 => D#490
  operator delete (_144);

  <bb 105>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1504] ={v} {CLOBBER};
  # DEBUG D#2009 => &this_27(D)->_overall_min_accepted_packets
  # DEBUG this => D#2009
  # DEBUG D#503 => &D#2009->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2009->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2009->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2009->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _147 = MEM[(struct _Vector_base *)this_27(D) + 1480B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _147
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _147
  # DEBUG __n => D#497
  if (_147 != 0B)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _147
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _147
  # DEBUG this => D#489
  # DEBUG D.133412 => D#490
  operator delete (_147);

  <bb 107>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1480] ={v} {CLOBBER};
  _145 = &this_27(D)->_accepted_packets;
  std::vector<std::vector<int> >::~vector (_145);
  # DEBUG D#2007 => &this_27(D)->_overall_max_sent_packets
  # DEBUG this => D#2007
  # DEBUG D#503 => &D#2007->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2007->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2007->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2007->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _148 = MEM[(struct _Vector_base *)this_27(D) + 1432B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _148
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _148
  # DEBUG __n => D#497
  if (_148 != 0B)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _148
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _148
  # DEBUG this => D#489
  # DEBUG D.133397 => D#490
  operator delete (_148);

  <bb 109>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1432] ={v} {CLOBBER};
  # DEBUG D#2006 => &this_27(D)->_overall_avg_sent_packets
  # DEBUG this => D#2006
  # DEBUG D#503 => &D#2006->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2006->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2006->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2006->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _149 = MEM[(struct _Vector_base *)this_27(D) + 1408B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _149
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _149
  # DEBUG __n => D#497
  if (_149 != 0B)
    goto <bb 110>;
  else
    goto <bb 111>;

  <bb 110>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _149
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _149
  # DEBUG this => D#489
  # DEBUG D.133382 => D#490
  operator delete (_149);

  <bb 111>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1408] ={v} {CLOBBER};
  # DEBUG D#2005 => &this_27(D)->_overall_min_sent_packets
  # DEBUG this => D#2005
  # DEBUG D#503 => &D#2005->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2005->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2005->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2005->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _152 = MEM[(struct _Vector_base *)this_27(D) + 1384B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _152
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _152
  # DEBUG __n => D#497
  if (_152 != 0B)
    goto <bb 112>;
  else
    goto <bb 113>;

  <bb 112>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _152
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _152
  # DEBUG this => D#489
  # DEBUG D.133367 => D#490
  operator delete (_152);

  <bb 113>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1384] ={v} {CLOBBER};
  _150 = &this_27(D)->_sent_packets;
  std::vector<std::vector<int> >::~vector (_150);
  # DEBUG D#2003 => &this_27(D)->_overall_hop_stats
  # DEBUG this => D#2003
  # DEBUG D#503 => &D#2003->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2003->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2003->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2003->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _153 = MEM[(struct _Vector_base *)this_27(D) + 1336B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _153
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _153
  # DEBUG __n => D#497
  if (_153 != 0B)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _153
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _153
  # DEBUG this => D#489
  # DEBUG D.133352 => D#490
  operator delete (_153);

  <bb 115>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1336] ={v} {CLOBBER};
  # DEBUG D#2002 => &this_27(D)->_hop_stats
  # DEBUG this => D#2002
  # DEBUG D#920 => &D#2002->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#2002->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#2002->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#2002->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _160 = MEM[(struct _Vector_base *)this_27(D) + 1312B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _160
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _160
  # DEBUG __n => D#914
  if (_160 != 0B)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _160
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _160
  # DEBUG this => D#906
  # DEBUG D.133337 => D#907
  operator delete (_160);

  <bb 117>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_27(D) + 1312] ={v} {CLOBBER};
  _154 = &this_27(D)->_pair_flat;
  std::vector<std::vector<Stats*> >::~vector (_154);
  _156 = &this_27(D)->_pair_nlat;
  std::vector<std::vector<Stats*> >::~vector (_156);
  _158 = &this_27(D)->_pair_plat;
  std::vector<std::vector<Stats*> >::~vector (_158);
  # DEBUG D#2000 => &this_27(D)->_overall_max_frag
  # DEBUG this => D#2000
  # DEBUG D#503 => &D#2000->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2000->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2000->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2000->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _161 = MEM[(struct _Vector_base *)this_27(D) + 1216B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _161
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _161
  # DEBUG __n => D#497
  if (_161 != 0B)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _161
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _161
  # DEBUG this => D#489
  # DEBUG D.133322 => D#490
  operator delete (_161);

  <bb 119>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1216] ={v} {CLOBBER};
  # DEBUG D#1999 => &this_27(D)->_overall_avg_frag
  # DEBUG this => D#1999
  # DEBUG D#503 => &D#1999->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1999->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1999->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1999->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _162 = MEM[(struct _Vector_base *)this_27(D) + 1192B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _162
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _162
  # DEBUG __n => D#497
  if (_162 != 0B)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _162
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _162
  # DEBUG this => D#489
  # DEBUG D.133307 => D#490
  operator delete (_162);

  <bb 121>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1192] ={v} {CLOBBER};
  # DEBUG D#1997 => &this_27(D)->_overall_min_frag
  # DEBUG this => D#1997
  # DEBUG D#503 => &D#1997->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1997->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1997->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1997->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _163 = MEM[(struct _Vector_base *)this_27(D) + 1168B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _163
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _163
  # DEBUG __n => D#497
  if (_163 != 0B)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _163
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _163
  # DEBUG this => D#489
  # DEBUG D.133292 => D#490
  operator delete (_163);

  <bb 123>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1168] ={v} {CLOBBER};
  # DEBUG D#1996 => &this_27(D)->_frag_stats
  # DEBUG this => D#1996
  # DEBUG D#920 => &D#1996->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#1996->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#1996->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#1996->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _164 = MEM[(struct _Vector_base *)this_27(D) + 1144B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _164
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _164
  # DEBUG __n => D#914
  if (_164 != 0B)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _164
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _164
  # DEBUG this => D#906
  # DEBUG D.133277 => D#907
  operator delete (_164);

  <bb 125>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_27(D) + 1144] ={v} {CLOBBER};
  # DEBUG D#1995 => &this_27(D)->_overall_max_flat
  # DEBUG this => D#1995
  # DEBUG D#503 => &D#1995->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1995->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1995->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1995->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _165 = MEM[(struct _Vector_base *)this_27(D) + 1120B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _165
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _165
  # DEBUG __n => D#497
  if (_165 != 0B)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _165
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _165
  # DEBUG this => D#489
  # DEBUG D.133262 => D#490
  operator delete (_165);

  <bb 127>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1120] ={v} {CLOBBER};
  # DEBUG D#1993 => &this_27(D)->_overall_avg_flat
  # DEBUG this => D#1993
  # DEBUG D#503 => &D#1993->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1993->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1993->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1993->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _166 = MEM[(struct _Vector_base *)this_27(D) + 1096B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _166
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _166
  # DEBUG __n => D#497
  if (_166 != 0B)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _166
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _166
  # DEBUG this => D#489
  # DEBUG D.133247 => D#490
  operator delete (_166);

  <bb 129>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1096] ={v} {CLOBBER};
  # DEBUG D#1992 => &this_27(D)->_overall_min_flat
  # DEBUG this => D#1992
  # DEBUG D#503 => &D#1992->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1992->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1992->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1992->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _167 = MEM[(struct _Vector_base *)this_27(D) + 1072B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _167
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _167
  # DEBUG __n => D#497
  if (_167 != 0B)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _167
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _167
  # DEBUG this => D#489
  # DEBUG D.133232 => D#490
  operator delete (_167);

  <bb 131>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1072] ={v} {CLOBBER};
  # DEBUG D#1990 => &this_27(D)->_flat_stats
  # DEBUG this => D#1990
  # DEBUG D#920 => &D#1990->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#1990->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#1990->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#1990->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _168 = MEM[(struct _Vector_base *)this_27(D) + 1048B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _168
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _168
  # DEBUG __n => D#914
  if (_168 != 0B)
    goto <bb 132>;
  else
    goto <bb 133>;

  <bb 132>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _168
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _168
  # DEBUG this => D#906
  # DEBUG D.133217 => D#907
  operator delete (_168);

  <bb 133>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_27(D) + 1048] ={v} {CLOBBER};
  # DEBUG D#1989 => &this_27(D)->_overall_max_nlat
  # DEBUG this => D#1989
  # DEBUG D#503 => &D#1989->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1989->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1989->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1989->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _169 = MEM[(struct _Vector_base *)this_27(D) + 1024B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _169
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _169
  # DEBUG __n => D#497
  if (_169 != 0B)
    goto <bb 134>;
  else
    goto <bb 135>;

  <bb 134>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _169
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _169
  # DEBUG this => D#489
  # DEBUG D.133202 => D#490
  operator delete (_169);

  <bb 135>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1024] ={v} {CLOBBER};
  # DEBUG D#1987 => &this_27(D)->_overall_avg_nlat
  # DEBUG this => D#1987
  # DEBUG D#503 => &D#1987->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1987->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1987->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1987->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _170 = MEM[(struct _Vector_base *)this_27(D) + 1000B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _170
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _170
  # DEBUG __n => D#497
  if (_170 != 0B)
    goto <bb 136>;
  else
    goto <bb 137>;

  <bb 136>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _170
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _170
  # DEBUG this => D#489
  # DEBUG D.133187 => D#490
  operator delete (_170);

  <bb 137>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1000] ={v} {CLOBBER};
  # DEBUG D#1986 => &this_27(D)->_overall_min_nlat
  # DEBUG this => D#1986
  # DEBUG D#503 => &D#1986->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1986->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1986->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1986->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _171 = MEM[(struct _Vector_base *)this_27(D) + 976B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _171
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _171
  # DEBUG __n => D#497
  if (_171 != 0B)
    goto <bb 138>;
  else
    goto <bb 139>;

  <bb 138>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _171
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _171
  # DEBUG this => D#489
  # DEBUG D.133172 => D#490
  operator delete (_171);

  <bb 139>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 976] ={v} {CLOBBER};
  # DEBUG D#1985 => &this_27(D)->_nlat_stats
  # DEBUG this => D#1985
  # DEBUG D#920 => &D#1985->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#1985->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#1985->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#1985->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _172 = MEM[(struct _Vector_base *)this_27(D) + 952B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _172
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _172
  # DEBUG __n => D#914
  if (_172 != 0B)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _172
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _172
  # DEBUG this => D#906
  # DEBUG D.133157 => D#907
  operator delete (_172);

  <bb 141>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_27(D) + 952] ={v} {CLOBBER};
  # DEBUG D#1983 => &this_27(D)->_overall_max_plat
  # DEBUG this => D#1983
  # DEBUG D#503 => &D#1983->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1983->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1983->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1983->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _173 = MEM[(struct _Vector_base *)this_27(D) + 928B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _173
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _173
  # DEBUG __n => D#497
  if (_173 != 0B)
    goto <bb 142>;
  else
    goto <bb 143>;

  <bb 142>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _173
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _173
  # DEBUG this => D#489
  # DEBUG D.133142 => D#490
  operator delete (_173);

  <bb 143>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 928] ={v} {CLOBBER};
  # DEBUG D#1982 => &this_27(D)->_overall_avg_plat
  # DEBUG this => D#1982
  # DEBUG D#503 => &D#1982->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1982->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1982->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1982->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _174 = MEM[(struct _Vector_base *)this_27(D) + 904B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _174
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _174
  # DEBUG __n => D#497
  if (_174 != 0B)
    goto <bb 144>;
  else
    goto <bb 145>;

  <bb 144>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _174
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _174
  # DEBUG this => D#489
  # DEBUG D.133127 => D#490
  operator delete (_174);

  <bb 145>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 904] ={v} {CLOBBER};
  # DEBUG D#1980 => &this_27(D)->_overall_min_plat
  # DEBUG this => D#1980
  # DEBUG D#503 => &D#1980->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1980->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1980->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1980->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _175 = MEM[(struct _Vector_base *)this_27(D) + 880B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _175
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _175
  # DEBUG __n => D#497
  if (_175 != 0B)
    goto <bb 146>;
  else
    goto <bb 147>;

  <bb 146>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _175
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _175
  # DEBUG this => D#489
  # DEBUG D.133112 => D#490
  operator delete (_175);

  <bb 147>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 880] ={v} {CLOBBER};
  # DEBUG D#1979 => &this_27(D)->_plat_stats
  # DEBUG this => D#1979
  # DEBUG D#920 => &D#1979->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#1979->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#1979->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#1979->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _176 = MEM[(struct _Vector_base *)this_27(D) + 856B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _176
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _176
  # DEBUG __n => D#914
  if (_176 != 0B)
    goto <bb 148>;
  else
    goto <bb 149>;

  <bb 148>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _176
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _176
  # DEBUG this => D#906
  # DEBUG D.133097 => D#907
  operator delete (_176);

  <bb 149>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_27(D) + 856] ={v} {CLOBBER};
  # DEBUG D#1977 => &this_27(D)->_requestsOutstanding
  # DEBUG this => D#1977
  # DEBUG D#476 => &D#1977->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1977->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1977->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1977->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _179 = MEM[(struct _Vector_base *)this_27(D) + 832B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _179
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _179
  # DEBUG __n => D#470
  if (_179 != 0B)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _179
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _179
  # DEBUG this => D#462
  # DEBUG D.133082 => D#463
  operator delete (_179);

  <bb 151>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 832] ={v} {CLOBBER};
  # DEBUG D#3332 => &this_27(D)->_repliesPending
  # DEBUG this => D#3332
  # DEBUG D#1089 => &D#3332->D.62343
  # DEBUG this => D#1089
  _1135 = MEM[(struct vector *)this_27(D) + 808B].D.62343._M_impl._M_finish;
  __first_1136 = MEM[(struct vector *)this_27(D) + 808B].D.62343._M_impl._M_start;
  # DEBUG __first => __first_1136
  # DEBUG __last => _1135
  # DEBUG __first => __first_1136
  if (_1135 == __first_1136)
    goto <bb 160>;
  else
    goto <bb 152>;

  <bb 152>:

  <bb 153>:
  # __first_1618 = PHI <__first_1136(152), __first_1142(155)>
  # DEBUG __first => __first_1618
  # DEBUG __r => __first_1618
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_1138 = MEM[(struct _List_base *)__first_1618]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_1138
  # DEBUG __cur => __tmp_1138
  _1700 = &MEM[(struct _List_base *)__first_1618]._M_impl._M_node.D.37893;
  if (__tmp_1138 == _1700)
    goto <bb 154>;
  else
    goto <bb 156>;

  <bb 154>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__first_1618] ={v} {CLOBBER};
  __first_1142 = __first_1618 + 24;
  # DEBUG __first => __first_1142
  # DEBUG __first => __first_1142
  if (_1135 == __first_1142)
    goto <bb 159>;
  else
    goto <bb 155>;

  <bb 155>:
  goto <bb 153>;

  <bb 156>:

  <bb 157>:
  # __tmp_1617 = PHI <__tmp_1138(156), __tmp_1141(158)>
  # DEBUG __cur => __tmp_1617
  # DEBUG __tmp => __tmp_1617
  __tmp_1141 = __tmp_1617->D.82523._M_next;
  # DEBUG __cur => __tmp_1141
  # DEBUG D#1082 => &__tmp_1617->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_1617
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_1617
  # DEBUG this => D#567
  # DEBUG D.159349 => D#568
  operator delete (__tmp_1617);
  # DEBUG __cur => __tmp_1141
  if (__tmp_1141 == _1700)
    goto <bb 154>;
  else
    goto <bb 158>;

  <bb 158>:
  goto <bb 157>;

  <bb 159>:
  pretmp_1472 = MEM[(struct _Vector_base *)this_27(D) + 808B]._M_impl._M_start;

  <bb 160>:
  # prephitmp_1473 = PHI <pretmp_1472(159), __first_1136(151)>
  # DEBUG D#1090 => &D#3332->D.62343
  # DEBUG this => D#1090
  # DEBUG D#903 => D#1090->_M_impl._M_end_of_storage
  # DEBUG D#902 => (long int) D#903
  # DEBUG D#3348 => MEM[(struct _Vector_base *)this_27(D) + 808B]._M_impl._M_start
  # DEBUG D#901 => (long int) D#3348
  # DEBUG D#900 => D#902 - D#901
  # DEBUG D#899 => D#900 /[ex] 24
  # DEBUG D#896 => D#1090
  # DEBUG D#897 => (long unsigned int) D#899
  # DEBUG __p => D#3348
  # DEBUG this => D#896
  # DEBUG __n => D#897
  # DEBUG D#895 => D#897
  # DEBUG D#894 => D#896
  if (prephitmp_1473 != 0B)
    goto <bb 161>;
  else
    goto <bb 162>;

  <bb 161>:
  # DEBUG D#893 => &D#894->_M_impl
  # DEBUG D#891 => D#893
  # DEBUG D#892 => D#895
  # DEBUG __p => D#3348
  # DEBUG __a => D#891
  # DEBUG __n => D#892
  # DEBUG D#890 => D#892
  # DEBUG D#889 => D#891
  # DEBUG D#887 => D#889
  # DEBUG D#888 => D#890
  # DEBUG __p => D#3348
  # DEBUG this => D#887
  # DEBUG D.159363 => D#888
  operator delete (prephitmp_1473);

  <bb 162>:
  # DEBUG D#898 => &D#1090->_M_impl
  # DEBUG this => D#898
  # DEBUG this => D#898
  # DEBUG this => D#898
  MEM[(struct  &)this_27(D) + 808] ={v} {CLOBBER};
  # DEBUG D#1976 => &this_27(D)->_packet_seq_no
  # DEBUG this => D#1976
  # DEBUG D#476 => &D#1976->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1976->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1976->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1976->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _180 = MEM[(struct _Vector_base *)this_27(D) + 784B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _180
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _180
  # DEBUG __n => D#470
  if (_180 != 0B)
    goto <bb 163>;
  else
    goto <bb 164>;

  <bb 163>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _180
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _180
  # DEBUG this => D#462
  # DEBUG D.133067 => D#463
  operator delete (_180);

  <bb 164>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 784] ={v} {CLOBBER};
  # DEBUG D#1975 => &this_27(D)->_subnet
  # DEBUG this => D#1975
  # DEBUG D#476 => &D#1975->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1975->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1975->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1975->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _197 = MEM[(struct _Vector_base *)this_27(D) + 752B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _197
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _197
  # DEBUG __n => D#470
  if (_197 != 0B)
    goto <bb 165>;
  else
    goto <bb 166>;

  <bb 165>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _197
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _197
  # DEBUG this => D#462
  # DEBUG D.133052 => D#463
  operator delete (_197);

  <bb 166>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 752] ={v} {CLOBBER};
  _181 = &this_27(D)->_retired_packets;
  std::vector<std::map<int, Flit*> >::~vector (_181);
  _183 = &this_27(D)->_measured_in_flight_flits;
  std::vector<std::map<int, Flit*> >::~vector (_183);
  _185 = &this_27(D)->_total_in_flight_flits;
  std::vector<std::map<int, Flit*> >::~vector (_185);
  # DEBUG D#3331 => &this_27(D)->_partial_packets
  # DEBUG this => D#3331
  # DEBUG D#1067 => &D#3331->D.60835
  # DEBUG this => D#1067
  _190 = MEM[(struct vector *)this_27(D) + 648B].D.60835._M_impl._M_finish;
  __first_1158 = MEM[(struct vector *)this_27(D) + 648B].D.60835._M_impl._M_start;
  # DEBUG __first => __first_1158
  # DEBUG __last => _190
  # DEBUG __first => __first_1158
  if (_190 == __first_1158)
    goto <bb 182>;
  else
    goto <bb 167>;

  <bb 167>:

  <bb 168>:
  # __first_1613 = PHI <__first_1158(167), __first_1160(180)>
  # DEBUG __first => __first_1613
  # DEBUG __r => __first_1613
  # DEBUG __pointer => NULL
  # DEBUG this => __first_1613
  # DEBUG D#1061 => &__first_1613->D.70701
  # DEBUG this => D#1061
  _188 = __first_1613->D.70701._M_impl._M_finish;
  __first_1162 = __first_1613->D.70701._M_impl._M_start;
  # DEBUG __first => __first_1162
  # DEBUG __last => _188
  # DEBUG __first => __first_1162
  if (_188 == __first_1162)
    goto <bb 177>;
  else
    goto <bb 169>;

  <bb 169>:

  <bb 170>:
  # __first_1612 = PHI <__first_1162(169), __first_1168(172)>
  # DEBUG __first => __first_1612
  # DEBUG __r => __first_1612
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_1164 = MEM[(struct _List_base *)__first_1612]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_1164
  # DEBUG __cur => __tmp_1164
  _1705 = &MEM[(struct _List_base *)__first_1612]._M_impl._M_node.D.37893;
  if (__tmp_1164 == _1705)
    goto <bb 171>;
  else
    goto <bb 173>;

  <bb 171>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__first_1612] ={v} {CLOBBER};
  __first_1168 = __first_1612 + 24;
  # DEBUG __first => __first_1168
  # DEBUG __first => __first_1168
  if (_188 == __first_1168)
    goto <bb 176>;
  else
    goto <bb 172>;

  <bb 172>:
  goto <bb 170>;

  <bb 173>:

  <bb 174>:
  # __tmp_1611 = PHI <__tmp_1164(173), __tmp_1167(175)>
  # DEBUG __cur => __tmp_1611
  # DEBUG __tmp => __tmp_1611
  __tmp_1167 = __tmp_1611->D.82395._M_next;
  # DEBUG __cur => __tmp_1167
  # DEBUG D#1054 => &__tmp_1611->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_1611
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_1611
  # DEBUG this => D#559
  # DEBUG D.159503 => D#560
  operator delete (__tmp_1611);
  # DEBUG __cur => __tmp_1167
  if (__tmp_1167 == _1705)
    goto <bb 171>;
  else
    goto <bb 175>;

  <bb 175>:
  goto <bb 174>;

  <bb 176>:
  pretmp_1096 = MEM[(struct _Vector_base *)__first_1613]._M_impl._M_start;

  <bb 177>:
  # prephitmp_1097 = PHI <pretmp_1096(176), __first_1162(168)>
  # DEBUG D#1062 => &__first_1613->D.70701
  # DEBUG this => D#1062
  # DEBUG D#1049 => D#1062->_M_impl._M_end_of_storage
  # DEBUG D#1048 => (long int) D#1049
  # DEBUG D#3347 => MEM[(struct _Vector_base *)__first_1613]._M_impl._M_start
  # DEBUG D#1047 => (long int) D#3347
  # DEBUG D#1046 => D#1048 - D#1047
  # DEBUG D#1045 => D#1046 /[ex] 24
  # DEBUG D#1042 => D#1062
  # DEBUG D#1043 => (long unsigned int) D#1045
  # DEBUG __p => D#3347
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (prephitmp_1097 != 0B)
    goto <bb 178>;
  else
    goto <bb 179>;

  <bb 178>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => D#3347
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => D#3347
  # DEBUG this => D#1033
  # DEBUG D.159517 => D#1034
  operator delete (prephitmp_1097);

  <bb 179>:
  # DEBUG D#1044 => &D#1062->_M_impl
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  MEM[(struct  &)__first_1613] ={v} {CLOBBER};
  __first_1160 = __first_1613 + 24;
  # DEBUG __first => __first_1160
  # DEBUG __first => __first_1160
  if (_190 == __first_1160)
    goto <bb 181>;
  else
    goto <bb 180>;

  <bb 180>:
  goto <bb 168>;

  <bb 181>:
  pretmp_1474 = MEM[(struct _Vector_base *)this_27(D) + 648B]._M_impl._M_start;

  <bb 182>:
  # prephitmp_1475 = PHI <pretmp_1474(181), __first_1158(166)>
  # DEBUG D#1068 => &D#3331->D.60835
  # DEBUG this => D#1068
  # DEBUG D#867 => D#1068->_M_impl._M_end_of_storage
  # DEBUG D#866 => (long int) D#867
  # DEBUG D#3346 => MEM[(struct _Vector_base *)this_27(D) + 648B]._M_impl._M_start
  # DEBUG D#865 => (long int) D#3346
  # DEBUG D#864 => D#866 - D#865
  # DEBUG D#863 => D#864 /[ex] 24
  # DEBUG D#860 => D#1068
  # DEBUG D#861 => (long unsigned int) D#863
  # DEBUG __p => D#3346
  # DEBUG this => D#860
  # DEBUG __n => D#861
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#860
  if (prephitmp_1475 != 0B)
    goto <bb 183>;
  else
    goto <bb 184>;

  <bb 183>:
  # DEBUG D#857 => &D#858->_M_impl
  # DEBUG D#855 => D#857
  # DEBUG D#856 => D#859
  # DEBUG __p => D#3346
  # DEBUG __a => D#855
  # DEBUG __n => D#856
  # DEBUG D#854 => D#856
  # DEBUG D#853 => D#855
  # DEBUG D#851 => D#853
  # DEBUG D#852 => D#854
  # DEBUG __p => D#3346
  # DEBUG this => D#851
  # DEBUG D.159479 => D#852
  operator delete (prephitmp_1475);

  <bb 184>:
  # DEBUG D#862 => &D#1068->_M_impl
  # DEBUG this => D#862
  # DEBUG this => D#862
  # DEBUG this => D#862
  MEM[(struct  &)this_27(D) + 648] ={v} {CLOBBER};
  # DEBUG D#3330 => &this_27(D)->_qdrained
  # DEBUG this => D#3330
  # DEBUG D#1024 => &D#3330->D.60085
  # DEBUG this => D#1024
  _194 = MEM[(struct vector *)this_27(D) + 624B].D.60085._M_impl._M_finish;
  __first_1153 = MEM[(struct vector *)this_27(D) + 624B].D.60085._M_impl._M_start;
  # DEBUG __first => __first_1153
  # DEBUG __last => _194
  # DEBUG __first => __first_1153
  if (_194 == __first_1153)
    goto <bb 191>;
  else
    goto <bb 185>;

  <bb 185>:

  <bb 186>:
  # __first_1614 = PHI <__first_1153(185), __first_1156(189)>
  # DEBUG __first => __first_1614
  # DEBUG __r => __first_1614
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG D#3317 => &__first_1614->D.48430
  # DEBUG this => D#3317
  # DEBUG this => D#3317
  _1170 = MEM[(struct _Bvector_base *)__first_1614]._M_impl._M_start.D.33184._M_p;
  if (_1170 != 0B)
    goto <bb 187>;
  else
    goto <bb 188>;

  <bb 187>:
  # DEBUG D#1015 => &D#3317->_M_impl
  _1171 = MEM[(long unsigned int * *)__first_1614 + 32B];
  # DEBUG D#375 => D#1015
  # DEBUG this => D#375
  _1173 = (long int) _1171;
  _1174 = (long int) _1170;
  _1175 = _1173 - _1174;
  # DEBUG D#1018 => _1175 /[ex] 8
  # DEBUG D#1017 => (const size_t) D#1018
  # DEBUG __n => D#1017
  _1176 = (long unsigned int) _1175;
  _1177 = -_1176;
  _1178 = _1171 + _1177;
  # DEBUG D#1016 => &D#3317->_M_impl
  # DEBUG D#1013 => D#1016
  # DEBUG D#1014 => D#1017
  # DEBUG __p => _1178
  # DEBUG __a => D#1013
  # DEBUG __n => D#1014
  # DEBUG D#1012 => D#1014
  # DEBUG D#1011 => D#1013
  # DEBUG D#1009 => D#1011
  # DEBUG D#1010 => D#1012
  # DEBUG __p => _1178
  # DEBUG this => D#1009
  # DEBUG D.159529 => D#1010
  operator delete (_1178);

  <bb 188>:
  # DEBUG D#1019 => &D#3317->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__first_1614] ={v} {CLOBBER};
  __first_1156 = __first_1614 + 40;
  # DEBUG __first => __first_1156
  # DEBUG __first => __first_1156
  if (_194 == __first_1156)
    goto <bb 190>;
  else
    goto <bb 189>;

  <bb 189>:
  goto <bb 186>;

  <bb 190>:
  pretmp_1065 = MEM[(struct _Vector_base *)this_27(D) + 624B]._M_impl._M_start;

  <bb 191>:
  # prephitmp_1066 = PHI <pretmp_1065(190), __first_1153(184)>
  # DEBUG D#1025 => &D#3330->D.60085
  # DEBUG this => D#1025
  # DEBUG D#848 => D#1025->_M_impl._M_end_of_storage
  # DEBUG D#847 => (long int) D#848
  # DEBUG D#3345 => MEM[(struct _Vector_base *)this_27(D) + 624B]._M_impl._M_start
  # DEBUG D#846 => (long int) D#3345
  # DEBUG D#845 => D#847 - D#846
  # DEBUG D#844 => D#845 /[ex] 40
  # DEBUG D#841 => D#1025
  # DEBUG D#842 => (long unsigned int) D#844
  # DEBUG __p => D#3345
  # DEBUG this => D#841
  # DEBUG __n => D#842
  # DEBUG D#840 => D#842
  # DEBUG D#839 => D#841
  if (prephitmp_1066 != 0B)
    goto <bb 192>;
  else
    goto <bb 193>;

  <bb 192>:
  # DEBUG D#838 => &D#839->_M_impl
  # DEBUG D#836 => D#838
  # DEBUG D#837 => D#840
  # DEBUG __p => D#3345
  # DEBUG __a => D#836
  # DEBUG __n => D#837
  # DEBUG D#835 => D#837
  # DEBUG D#834 => D#836
  # DEBUG D#832 => D#834
  # DEBUG D#833 => D#835
  # DEBUG __p => D#3345
  # DEBUG this => D#832
  # DEBUG D.159455 => D#833
  operator delete (prephitmp_1066);

  <bb 193>:
  # DEBUG D#843 => &D#1025->_M_impl
  # DEBUG this => D#843
  # DEBUG this => D#843
  # DEBUG this => D#843
  MEM[(struct  &)this_27(D) + 624] ={v} {CLOBBER};
  _191 = &this_27(D)->_qtime;
  std::vector<std::vector<int> >::~vector (_191);
  # DEBUG D#3329 => &this_27(D)->_last_vc
  # DEBUG this => D#3329
  # DEBUG D#828 => &D#3329->D.59334
  # DEBUG this => D#828
  _196 = MEM[(struct vector *)this_27(D) + 560B].D.59334._M_impl._M_finish;
  __first_1149 = MEM[(struct vector *)this_27(D) + 560B].D.59334._M_impl._M_start;
  # DEBUG __first => __first_1149
  # DEBUG __last => _196
  # DEBUG __first => __first_1149
  if (_196 == __first_1149)
    goto <bb 207>;
  else
    goto <bb 194>;

  <bb 194>:

  <bb 195>:
  # __first_1615 = PHI <__first_1149(194), __first_1151(205)>
  # DEBUG __first => __first_1615
  # DEBUG __r => __first_1615
  # DEBUG __pointer => NULL
  # DEBUG this => __first_1615
  # DEBUG D#690 => &__first_1615->D.53336
  # DEBUG this => D#690
  _1179 = __first_1615->D.53336._M_impl._M_finish;
  __first_1180 = __first_1615->D.53336._M_impl._M_start;
  # DEBUG __first => __first_1180
  # DEBUG __last => _1179
  # DEBUG __first => __first_1180
  if (_1179 == __first_1180)
    goto <bb 202>;
  else
    goto <bb 196>;

  <bb 196>:

  <bb 197>:
  # __first_1610 = PHI <__first_1180(196), __first_1183(200)>
  # DEBUG __first => __first_1610
  # DEBUG __r => __first_1610
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1182 = MEM[(struct _Vector_base *)__first_1610]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1182
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1182
  # DEBUG __n => D#470
  if (_1182 != 0B)
    goto <bb 198>;
  else
    goto <bb 199>;

  <bb 198>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1182
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1182
  # DEBUG this => D#462
  # DEBUG D.159551 => D#463
  operator delete (_1182);

  <bb 199>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__first_1610] ={v} {CLOBBER};
  __first_1183 = __first_1610 + 24;
  # DEBUG __first => __first_1183
  # DEBUG __first => __first_1183
  if (_1179 == __first_1183)
    goto <bb 201>;
  else
    goto <bb 200>;

  <bb 200>:
  goto <bb 197>;

  <bb 201>:
  pretmp_1082 = MEM[(struct _Vector_base *)__first_1615]._M_impl._M_start;

  <bb 202>:
  # prephitmp_1083 = PHI <pretmp_1082(201), __first_1180(195)>
  # DEBUG D#691 => &__first_1615->D.53336
  # DEBUG this => D#691
  # DEBUG D#685 => D#691->_M_impl._M_end_of_storage
  # DEBUG D#684 => (long int) D#685
  # DEBUG D#3344 => MEM[(struct _Vector_base *)__first_1615]._M_impl._M_start
  # DEBUG D#683 => (long int) D#3344
  # DEBUG D#682 => D#684 - D#683
  # DEBUG D#681 => D#682 /[ex] 24
  # DEBUG D#678 => D#691
  # DEBUG D#679 => (long unsigned int) D#681
  # DEBUG __p => D#3344
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (prephitmp_1083 != 0B)
    goto <bb 203>;
  else
    goto <bb 204>;

  <bb 203>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => D#3344
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => D#3344
  # DEBUG this => D#669
  # DEBUG D.159565 => D#670
  operator delete (prephitmp_1083);

  <bb 204>:
  # DEBUG D#680 => &D#691->_M_impl
  # DEBUG this => D#680
  # DEBUG this => D#680
  # DEBUG this => D#680
  MEM[(struct  &)__first_1615] ={v} {CLOBBER};
  __first_1151 = __first_1615 + 24;
  # DEBUG __first => __first_1151
  # DEBUG __first => __first_1151
  if (_196 == __first_1151)
    goto <bb 206>;
  else
    goto <bb 205>;

  <bb 205>:
  goto <bb 195>;

  <bb 206>:
  pretmp_1067 = MEM[(struct _Vector_base *)this_27(D) + 560B]._M_impl._M_start;

  <bb 207>:
  # prephitmp_1070 = PHI <pretmp_1067(206), __first_1149(193)>
  # DEBUG D#829 => &D#3329->D.59334
  # DEBUG this => D#829
  # DEBUG D#823 => D#829->_M_impl._M_end_of_storage
  # DEBUG D#822 => (long int) D#823
  # DEBUG D#3343 => MEM[(struct _Vector_base *)this_27(D) + 560B]._M_impl._M_start
  # DEBUG D#821 => (long int) D#3343
  # DEBUG D#820 => D#822 - D#821
  # DEBUG D#819 => D#820 /[ex] 24
  # DEBUG D#816 => D#829
  # DEBUG D#817 => (long unsigned int) D#819
  # DEBUG __p => D#3343
  # DEBUG this => D#816
  # DEBUG __n => D#817
  # DEBUG D#815 => D#817
  # DEBUG D#814 => D#816
  if (prephitmp_1070 != 0B)
    goto <bb 208>;
  else
    goto <bb 209>;

  <bb 208>:
  # DEBUG D#813 => &D#814->_M_impl
  # DEBUG D#811 => D#813
  # DEBUG D#812 => D#815
  # DEBUG __p => D#3343
  # DEBUG __a => D#811
  # DEBUG __n => D#812
  # DEBUG D#810 => D#812
  # DEBUG D#809 => D#811
  # DEBUG D#807 => D#809
  # DEBUG D#808 => D#810
  # DEBUG __p => D#3343
  # DEBUG this => D#807
  # DEBUG D.159426 => D#808
  operator delete (prephitmp_1070);

  <bb 209>:
  # DEBUG D#818 => &D#829->_M_impl
  # DEBUG this => D#818
  # DEBUG this => D#818
  # DEBUG this => D#818
  MEM[(struct  &)this_27(D) + 560] ={v} {CLOBBER};
  # DEBUG D#3328 => &this_27(D)->_buf_states
  # DEBUG this => D#3328
  # DEBUG D#1006 => &D#3328->D.58587
  # DEBUG this => D#1006
  _178 = MEM[(struct vector *)this_27(D) + 536B].D.58587._M_impl._M_finish;
  __first_1144 = MEM[(struct vector *)this_27(D) + 536B].D.58587._M_impl._M_start;
  # DEBUG __first => __first_1144
  # DEBUG __last => _178
  # DEBUG __first => __first_1144
  if (_178 == __first_1144)
    goto <bb 216>;
  else
    goto <bb 210>;

  <bb 210>:

  <bb 211>:
  # __first_1616 = PHI <__first_1144(210), __first_1147(214)>
  # DEBUG __first => __first_1616
  # DEBUG __r => __first_1616
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#998
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _1146 = MEM[(struct _Vector_base *)__first_1616]._M_impl._M_start;
  # DEBUG D#995 => (long int) _1146
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _1146
  # DEBUG __n => D#992
  if (_1146 != 0B)
    goto <bb 212>;
  else
    goto <bb 213>;

  <bb 212>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _1146
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _1146
  # DEBUG this => D#984
  # DEBUG D.159388 => D#985
  operator delete (_1146);

  <bb 213>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  MEM[(struct  &)__first_1616] ={v} {CLOBBER};
  __first_1147 = __first_1616 + 24;
  # DEBUG __first => __first_1147
  # DEBUG __first => __first_1147
  if (_178 == __first_1147)
    goto <bb 215>;
  else
    goto <bb 214>;

  <bb 214>:
  goto <bb 211>;

  <bb 215>:
  pretmp_1072 = MEM[(struct _Vector_base *)this_27(D) + 536B]._M_impl._M_start;

  <bb 216>:
  # prephitmp_1073 = PHI <pretmp_1072(215), __first_1144(209)>
  # DEBUG D#1007 => &D#3328->D.58587
  # DEBUG this => D#1007
  # DEBUG D#804 => D#1007->_M_impl._M_end_of_storage
  # DEBUG D#803 => (long int) D#804
  # DEBUG D#3342 => MEM[(struct _Vector_base *)this_27(D) + 536B]._M_impl._M_start
  # DEBUG D#802 => (long int) D#3342
  # DEBUG D#801 => D#803 - D#802
  # DEBUG D#800 => D#801 /[ex] 24
  # DEBUG D#797 => D#1007
  # DEBUG D#798 => (long unsigned int) D#800
  # DEBUG __p => D#3342
  # DEBUG this => D#797
  # DEBUG __n => D#798
  # DEBUG D#796 => D#798
  # DEBUG D#795 => D#797
  if (prephitmp_1073 != 0B)
    goto <bb 217>;
  else
    goto <bb 218>;

  <bb 217>:
  # DEBUG D#794 => &D#795->_M_impl
  # DEBUG D#792 => D#794
  # DEBUG D#793 => D#796
  # DEBUG __p => D#3342
  # DEBUG __a => D#792
  # DEBUG __n => D#793
  # DEBUG D#791 => D#793
  # DEBUG D#790 => D#792
  # DEBUG D#788 => D#790
  # DEBUG D#789 => D#791
  # DEBUG __p => D#3342
  # DEBUG this => D#788
  # DEBUG D.159402 => D#789
  operator delete (prephitmp_1073);

  <bb 218>:
  # DEBUG D#799 => &D#1007->_M_impl
  # DEBUG this => D#799
  # DEBUG this => D#799
  # DEBUG this => D#799
  MEM[(struct  &)this_27(D) + 536] ={v} {CLOBBER};
  # DEBUG D#1973 => &this_27(D)->_injection_process
  # DEBUG this => D#1973
  # DEBUG D#782 => &D#1973->D.57828
  # DEBUG this => D#782
  # DEBUG D#785 => D#1973->D.57828._M_impl._M_finish
  # DEBUG D#784 => D#1973->D.57828._M_impl._M_start
  # DEBUG __first => D#784
  # DEBUG __last => D#785
  # DEBUG D.117129 => NULL
  # DEBUG D#442 => D#784
  # DEBUG D#443 => D#785
  # DEBUG __first => D#442
  # DEBUG __last => D#443
  # DEBUG D#441 => D#443
  # DEBUG D#440 => D#442
  # DEBUG D#438 => D#440
  # DEBUG D#439 => D#441
  # DEBUG D.114659 => D#438
  # DEBUG D.114658 => D#439
  # DEBUG D#783 => &D#1973->D.57828
  # DEBUG this => D#783
  # DEBUG D#781 => D#783->_M_impl._M_end_of_storage
  # DEBUG D#780 => (long int) D#781
  _198 = MEM[(struct _Vector_base *)this_27(D) + 504B]._M_impl._M_start;
  # DEBUG D#779 => (long int) _198
  # DEBUG D#778 => D#780 - D#779
  # DEBUG D#777 => D#778 /[ex] 8
  # DEBUG D#776 => (long unsigned int) D#777
  # DEBUG this => D#783
  # DEBUG __p => _198
  # DEBUG __n => D#776
  if (_198 != 0B)
    goto <bb 219>;
  else
    goto <bb 220>;

  <bb 219>:
  # DEBUG D#774 => &D#783->_M_impl
  # DEBUG D#772 => D#774
  # DEBUG D#773 => D#776
  # DEBUG __p => _198
  # DEBUG __a => D#772
  # DEBUG __n => D#773
  # DEBUG D#771 => D#773
  # DEBUG D#770 => D#772
  # DEBUG D#768 => D#770
  # DEBUG D#769 => D#771
  # DEBUG __p => _198
  # DEBUG this => D#768
  # DEBUG D.133037 => D#769
  operator delete (_198);

  <bb 220>:
  # DEBUG D#775 => &D#783->_M_impl
  # DEBUG this => D#775
  # DEBUG this => D#775
  # DEBUG this => D#775
  MEM[(struct  &)this_27(D) + 504] ={v} {CLOBBER};
  # DEBUG D#1972 => &this_27(D)->_traffic_pattern
  # DEBUG this => D#1972
  # DEBUG D#762 => &D#1972->D.57081
  # DEBUG this => D#762
  # DEBUG D#765 => D#1972->D.57081._M_impl._M_finish
  # DEBUG D#764 => D#1972->D.57081._M_impl._M_start
  # DEBUG __first => D#764
  # DEBUG __last => D#765
  # DEBUG D.117054 => NULL
  # DEBUG D#432 => D#764
  # DEBUG D#433 => D#765
  # DEBUG __first => D#432
  # DEBUG __last => D#433
  # DEBUG D#431 => D#433
  # DEBUG D#430 => D#432
  # DEBUG D#428 => D#430
  # DEBUG D#429 => D#431
  # DEBUG D.114615 => D#428
  # DEBUG D.114614 => D#429
  # DEBUG D#763 => &D#1972->D.57081
  # DEBUG this => D#763
  # DEBUG D#761 => D#763->_M_impl._M_end_of_storage
  # DEBUG D#760 => (long int) D#761
  _201 = MEM[(struct _Vector_base *)this_27(D) + 480B]._M_impl._M_start;
  # DEBUG D#759 => (long int) _201
  # DEBUG D#758 => D#760 - D#759
  # DEBUG D#757 => D#758 /[ex] 8
  # DEBUG D#756 => (long unsigned int) D#757
  # DEBUG this => D#763
  # DEBUG __p => _201
  # DEBUG __n => D#756
  if (_201 != 0B)
    goto <bb 221>;
  else
    goto <bb 222>;

  <bb 221>:
  # DEBUG D#754 => &D#763->_M_impl
  # DEBUG D#752 => D#754
  # DEBUG D#753 => D#756
  # DEBUG __p => _201
  # DEBUG __a => D#752
  # DEBUG __n => D#753
  # DEBUG D#751 => D#753
  # DEBUG D#750 => D#752
  # DEBUG D#748 => D#750
  # DEBUG D#749 => D#751
  # DEBUG __p => _201
  # DEBUG this => D#748
  # DEBUG D.133022 => D#749
  operator delete (_201);

  <bb 222>:
  # DEBUG D#755 => &D#763->_M_impl
  # DEBUG this => D#755
  # DEBUG this => D#755
  # DEBUG this => D#755
  MEM[(struct  &)this_27(D) + 480] ={v} {CLOBBER};
  _199 = &this_27(D)->_last_class;
  std::vector<std::vector<int> >::~vector (_199);
  # DEBUG D#1970 => &this_27(D)->_class_priority
  # DEBUG this => D#1970
  # DEBUG D#476 => &D#1970->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1970->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1970->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1970->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _204 = MEM[(struct _Vector_base *)this_27(D) + 432B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _204
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _204
  # DEBUG __n => D#470
  if (_204 != 0B)
    goto <bb 223>;
  else
    goto <bb 224>;

  <bb 223>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _204
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _204
  # DEBUG this => D#462
  # DEBUG D.133007 => D#463
  operator delete (_204);

  <bb 224>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 432] ={v} {CLOBBER};
  _202 = &this_27(D)->_traffic;
  std::vector<std::__cxx11::basic_string<char> >::~vector (_202);
  # DEBUG D#1969 => &this_27(D)->_write_reply_size
  # DEBUG this => D#1969
  # DEBUG D#476 => &D#1969->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1969->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1969->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1969->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _205 = MEM[(struct _Vector_base *)this_27(D) + 384B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _205
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _205
  # DEBUG __n => D#470
  if (_205 != 0B)
    goto <bb 225>;
  else
    goto <bb 226>;

  <bb 225>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _205
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _205
  # DEBUG this => D#462
  # DEBUG D.132992 => D#463
  operator delete (_205);

  <bb 226>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 384] ={v} {CLOBBER};
  # DEBUG D#1968 => &this_27(D)->_write_request_size
  # DEBUG this => D#1968
  # DEBUG D#476 => &D#1968->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1968->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1968->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1968->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _206 = MEM[(struct _Vector_base *)this_27(D) + 360B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _206
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _206
  # DEBUG __n => D#470
  if (_206 != 0B)
    goto <bb 227>;
  else
    goto <bb 228>;

  <bb 227>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _206
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _206
  # DEBUG this => D#462
  # DEBUG D.132977 => D#463
  operator delete (_206);

  <bb 228>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 360] ={v} {CLOBBER};
  # DEBUG D#1967 => &this_27(D)->_read_reply_size
  # DEBUG this => D#1967
  # DEBUG D#476 => &D#1967->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1967->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1967->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1967->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _207 = MEM[(struct _Vector_base *)this_27(D) + 336B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _207
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _207
  # DEBUG __n => D#470
  if (_207 != 0B)
    goto <bb 229>;
  else
    goto <bb 230>;

  <bb 229>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _207
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _207
  # DEBUG this => D#462
  # DEBUG D.132962 => D#463
  operator delete (_207);

  <bb 230>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 336] ={v} {CLOBBER};
  # DEBUG D#1966 => &this_27(D)->_read_request_size
  # DEBUG this => D#1966
  # DEBUG D#476 => &D#1966->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1966->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1966->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1966->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _208 = MEM[(struct _Vector_base *)this_27(D) + 312B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _208
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _208
  # DEBUG __n => D#470
  if (_208 != 0B)
    goto <bb 231>;
  else
    goto <bb 232>;

  <bb 231>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _208
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _208
  # DEBUG this => D#462
  # DEBUG D.132947 => D#463
  operator delete (_208);

  <bb 232>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 312] ={v} {CLOBBER};
  # DEBUG D#1964 => &this_27(D)->_write_fraction
  # DEBUG this => D#1964
  # DEBUG D#503 => &D#1964->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1964->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1964->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1964->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _209 = MEM[(struct _Vector_base *)this_27(D) + 288B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _209
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _209
  # DEBUG __n => D#497
  if (_209 != 0B)
    goto <bb 233>;
  else
    goto <bb 234>;

  <bb 233>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _209
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _209
  # DEBUG this => D#489
  # DEBUG D.132932 => D#490
  operator delete (_209);

  <bb 234>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 288] ={v} {CLOBBER};
  # DEBUG D#1963 => &this_27(D)->_use_read_write
  # DEBUG this => D#1963
  # DEBUG D#476 => &D#1963->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1963->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1963->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1963->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _210 = MEM[(struct _Vector_base *)this_27(D) + 264B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _210
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _210
  # DEBUG __n => D#470
  if (_210 != 0B)
    goto <bb 235>;
  else
    goto <bb 236>;

  <bb 235>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _210
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _210
  # DEBUG this => D#462
  # DEBUG D.132917 => D#463
  operator delete (_210);

  <bb 236>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 264] ={v} {CLOBBER};
  # DEBUG D#1961 => &this_27(D)->_load
  # DEBUG this => D#1961
  # DEBUG D#503 => &D#1961->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1961->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1961->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1961->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _213 = MEM[(struct _Vector_base *)this_27(D) + 240B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _213
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _213
  # DEBUG __n => D#497
  if (_213 != 0B)
    goto <bb 237>;
  else
    goto <bb 238>;

  <bb 237>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _213
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _213
  # DEBUG this => D#489
  # DEBUG D.132902 => D#490
  operator delete (_213);

  <bb 238>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 240] ={v} {CLOBBER};
  # DEBUG D#3327 => &this_27(D)->_router
  # DEBUG this => D#3327
  # DEBUG D#736 => &D#3327->D.54835
  # DEBUG this => D#736
  _1185 = MEM[(struct vector *)this_27(D) + 208B].D.54835._M_impl._M_finish;
  __first_1186 = MEM[(struct vector *)this_27(D) + 208B].D.54835._M_impl._M_start;
  # DEBUG __first => __first_1186
  # DEBUG __last => _1185
  # DEBUG __first => __first_1186
  if (_1185 == __first_1186)
    goto <bb 245>;
  else
    goto <bb 239>;

  <bb 239>:

  <bb 240>:
  # __first_1609 = PHI <__first_1186(239), __first_1189(243)>
  # DEBUG __first => __first_1609
  # DEBUG __r => __first_1609
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#599
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _1188 = MEM[(struct _Vector_base *)__first_1609]._M_impl._M_start;
  # DEBUG D#596 => (long int) _1188
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _1188
  # DEBUG __n => D#593
  if (_1188 != 0B)
    goto <bb 241>;
  else
    goto <bb 242>;

  <bb 241>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _1188
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _1188
  # DEBUG this => D#585
  # DEBUG D.159590 => D#586
  operator delete (_1188);

  <bb 242>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  MEM[(struct  &)__first_1609] ={v} {CLOBBER};
  __first_1189 = __first_1609 + 24;
  # DEBUG __first => __first_1189
  # DEBUG __first => __first_1189
  if (_1185 == __first_1189)
    goto <bb 244>;
  else
    goto <bb 243>;

  <bb 243>:
  goto <bb 240>;

  <bb 244>:
  pretmp_1077 = MEM[(struct _Vector_base *)this_27(D) + 208B]._M_impl._M_start;

  <bb 245>:
  # prephitmp_1078 = PHI <pretmp_1077(244), __first_1186(238)>
  # DEBUG D#737 => &D#3327->D.54835
  # DEBUG this => D#737
  # DEBUG D#731 => D#737->_M_impl._M_end_of_storage
  # DEBUG D#730 => (long int) D#731
  # DEBUG D#3341 => MEM[(struct _Vector_base *)this_27(D) + 208B]._M_impl._M_start
  # DEBUG D#729 => (long int) D#3341
  # DEBUG D#728 => D#730 - D#729
  # DEBUG D#727 => D#728 /[ex] 24
  # DEBUG D#724 => D#737
  # DEBUG D#725 => (long unsigned int) D#727
  # DEBUG __p => D#3341
  # DEBUG this => D#724
  # DEBUG __n => D#725
  # DEBUG D#723 => D#725
  # DEBUG D#722 => D#724
  if (prephitmp_1078 != 0B)
    goto <bb 246>;
  else
    goto <bb 247>;

  <bb 246>:
  # DEBUG D#721 => &D#722->_M_impl
  # DEBUG D#719 => D#721
  # DEBUG D#720 => D#723
  # DEBUG __p => D#3341
  # DEBUG __a => D#719
  # DEBUG __n => D#720
  # DEBUG D#718 => D#720
  # DEBUG D#717 => D#719
  # DEBUG D#715 => D#717
  # DEBUG D#716 => D#718
  # DEBUG __p => D#3341
  # DEBUG this => D#715
  # DEBUG D.159604 => D#716
  operator delete (prephitmp_1078);

  <bb 247>:
  # DEBUG D#726 => &D#737->_M_impl
  # DEBUG this => D#726
  # DEBUG this => D#726
  # DEBUG this => D#726
  MEM[(struct  &)this_27(D) + 208] ={v} {CLOBBER};
  # DEBUG D#1960 => &this_27(D)->_net
  # DEBUG this => D#1960
  # DEBUG D#709 => &D#1960->D.54088
  # DEBUG this => D#709
  # DEBUG D#712 => D#1960->D.54088._M_impl._M_finish
  # DEBUG D#711 => D#1960->D.54088._M_impl._M_start
  # DEBUG D#415 => D#711
  # DEBUG D#416 => D#712
  # DEBUG __first => D#415
  # DEBUG __last => D#416
  # DEBUG D.116485 => D#417
  # DEBUG D#414 => D#416
  # DEBUG D#413 => D#415
  # DEBUG D#411 => D#413
  # DEBUG D#412 => D#414
  # DEBUG __first => D#411
  # DEBUG __last => D#412
  # DEBUG D#410 => D#412
  # DEBUG D#409 => D#411
  # DEBUG D#407 => D#409
  # DEBUG D#408 => D#410
  # DEBUG D.114527 => D#407
  # DEBUG D.114526 => D#408
  # DEBUG D#710 => &D#1960->D.54088
  # DEBUG this => D#710
  # DEBUG D#708 => D#710->_M_impl._M_end_of_storage
  # DEBUG D#707 => (long int) D#708
  _214 = MEM[(struct _Vector_base *)this_27(D) + 184B]._M_impl._M_start;
  # DEBUG D#706 => (long int) _214
  # DEBUG D#705 => D#707 - D#706
  # DEBUG D#704 => D#705 /[ex] 8
  # DEBUG D#701 => D#710
  # DEBUG D#702 => (long unsigned int) D#704
  # DEBUG __p => _214
  # DEBUG this => D#701
  # DEBUG __n => D#702
  # DEBUG D#700 => D#702
  # DEBUG D#699 => D#701
  if (_214 != 0B)
    goto <bb 248>;
  else
    goto <bb 249>;

  <bb 248>:
  # DEBUG D#698 => &D#699->_M_impl
  # DEBUG D#696 => D#698
  # DEBUG D#697 => D#700
  # DEBUG __p => _214
  # DEBUG __a => D#696
  # DEBUG __n => D#697
  # DEBUG D#695 => D#697
  # DEBUG D#694 => D#696
  # DEBUG D#692 => D#694
  # DEBUG D#693 => D#695
  # DEBUG __p => _214
  # DEBUG this => D#692
  # DEBUG D.132887 => D#693
  operator delete (_214);

  <bb 249>:
  # DEBUG D#703 => &D#710->_M_impl
  # DEBUG this => D#703
  # DEBUG this => D#703
  # DEBUG this => D#703
  MEM[(struct  &)this_27(D) + 184] ={v} {CLOBBER};
  # DEBUG D#1958 => &this_27(D)->_packet_size_max_val
  # DEBUG this => D#1958
  # DEBUG D#476 => &D#1958->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1958->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1958->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1958->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _351 = MEM[(struct _Vector_base *)this_27(D) + 144B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _351
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _351
  # DEBUG __n => D#470
  if (_351 != 0B)
    goto <bb 250>;
  else
    goto <bb 251>;

  <bb 250>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _351
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _351
  # DEBUG this => D#462
  # DEBUG D.132872 => D#463
  operator delete (_351);

  <bb 251>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 144] ={v} {CLOBBER};
  _215 = &this_27(D)->_packet_size_rate;
  std::vector<std::vector<int> >::~vector (_215);
  _217 = &this_27(D)->_packet_size;
  std::vector<std::vector<int> >::~vector (_217);
  # DEBUG D#3326 => &this_27(D)->D.65070
  # DEBUG this => D#3326
  MEM[(struct Module *)this_27(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#661 => &D#3326->_children
  # DEBUG this => D#661
  # DEBUG D#655 => &D#661->D.39983
  # DEBUG this => D#655
  # DEBUG D#658 => D#661->D.39983._M_impl._M_finish
  # DEBUG D#657 => D#661->D.39983._M_impl._M_start
  # DEBUG D#384 => D#657
  # DEBUG D#385 => D#658
  # DEBUG __first => D#384
  # DEBUG __last => D#385
  # DEBUG D.116000 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#382 => D#384
  # DEBUG D#380 => D#382
  # DEBUG D#381 => D#383
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.114372 => D#376
  # DEBUG D.114371 => D#377
  # DEBUG D#656 => &D#661->D.39983
  # DEBUG this => D#656
  # DEBUG D#654 => D#656->_M_impl._M_end_of_storage
  # DEBUG D#653 => (long int) D#654
  _212 = MEM[(struct _Vector_base *)this_27(D) + 72B]._M_impl._M_start;
  # DEBUG D#652 => (long int) _212
  # DEBUG D#651 => D#653 - D#652
  # DEBUG D#650 => D#651 /[ex] 8
  # DEBUG D#647 => D#656
  # DEBUG D#648 => (long unsigned int) D#650
  # DEBUG __p => _212
  # DEBUG this => D#647
  # DEBUG __n => D#648
  # DEBUG D#646 => D#648
  # DEBUG D#645 => D#647
  if (_212 != 0B)
    goto <bb 252>;
  else
    goto <bb 253>;

  <bb 252>:
  # DEBUG D#644 => &D#645->_M_impl
  # DEBUG D#642 => D#644
  # DEBUG D#643 => D#646
  # DEBUG __p => _212
  # DEBUG __a => D#642
  # DEBUG __n => D#643
  # DEBUG D#641 => D#643
  # DEBUG D#640 => D#642
  # DEBUG D#638 => D#640
  # DEBUG D#639 => D#641
  # DEBUG __p => _212
  # DEBUG this => D#638
  # DEBUG D.159620 => D#639
  operator delete (_212);

  <bb 253>:
  # DEBUG D#649 => &D#656->_M_impl
  # DEBUG this => D#649
  # DEBUG this => D#649
  # DEBUG this => D#649
  MEM[(struct  &)this_27(D) + 72] ={v} {CLOBBER};
  # DEBUG D#660 => &D#3326->_fullname
  # DEBUG this => D#660
  # DEBUG this => D#660
  # DEBUG this => D#660
  _1191 = MEM[(char * *)this_27(D) + 40B];
  # DEBUG D#1 => D#660
  # DEBUG this => D#1
  # DEBUG this => D#660
  _1192 = &MEM[(const struct basic_string *)this_27(D) + 40B].D.11539._M_local_buf;
  if (_1191 != _1192)
    goto <bb 254>;
  else
    goto <bb 255>;

  <bb 254>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#660].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#660
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#660
  # DEBUG this => D#1
  # DEBUG this => D#660
  # DEBUG D#626 => &MEM[(struct basic_string *)D#660]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1191
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1191
  # DEBUG this => D#620
  # DEBUG D.159633 => D#621
  operator delete (_1191);

  <bb 255>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#660]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)this_27(D) + 40] ={v} {CLOBBER};
  # DEBUG D#659 => &D#3326->_name
  # DEBUG this => D#659
  # DEBUG this => D#659
  # DEBUG this => D#659
  _1193 = MEM[(char * *)this_27(D) + 8B];
  # DEBUG D#1 => D#659
  # DEBUG this => D#1
  # DEBUG this => D#659
  _1194 = &MEM[(const struct basic_string *)this_27(D) + 8B].D.11539._M_local_buf;
  if (_1193 != _1194)
    goto <bb 256>;
  else
    goto <bb 257>;

  <bb 256>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#659].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#659
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#659
  # DEBUG this => D#1
  # DEBUG this => D#659
  # DEBUG D#626 => &MEM[(struct basic_string *)D#659]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1193
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1193
  # DEBUG this => D#620
  # DEBUG D.159648 => D#621
  operator delete (_1193);

  <bb 257>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#659]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)this_27(D)] ={v} {CLOBBER};
  return;

<L150>:

<L71>:
  # DEBUG D#2041 => &this_27(D)->_packets_to_watch
  # DEBUG this => D#2041
  _121 = &MEM[(struct set *)this_27(D) + 2096B]._M_t;
  # DEBUG this => _121
  _355 = MEM[(struct _Rb_tree_node_base * *)this_27(D) + 2112B];
  # DEBUG D#193 => _121
  # DEBUG this => D#193
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_121, _355);
  # DEBUG D#1171 => &MEM[(struct _Rb_tree *)_121]._M_impl
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  MEM[(struct  &)this_27(D) + 2096] ={v} {CLOBBER};
  resx 79

<L72>:
  # DEBUG D#2040 => &this_27(D)->_flits_to_watch
  # DEBUG this => D#2040
  _222 = &MEM[(struct set *)this_27(D) + 2048B]._M_t;
  # DEBUG this => _222
  _356 = MEM[(struct _Rb_tree_node_base * *)this_27(D) + 2064B];
  # DEBUG D#193 => _222
  # DEBUG this => D#193
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_222, _356);
  # DEBUG D#1171 => &MEM[(struct _Rb_tree *)_222]._M_impl
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  MEM[(struct  &)this_27(D) + 2048] ={v} {CLOBBER};
  resx 78

<L73>:
  # DEBUG D#2039 => &this_27(D)->_acc_warmup_threshold
  # DEBUG this => D#2039
  # DEBUG D#503 => &D#2039->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2039->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2039->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2039->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _223 = MEM[(struct _Vector_base *)this_27(D) + 2008B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _223
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _223
  # DEBUG __n => D#497
  if (_223 != 0B)
    goto <bb 262>;
  else
    goto <bb 263>;

  <bb 262>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _223
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _223
  # DEBUG this => D#489
  # DEBUG D.133692 => D#490
  operator delete (_223);

  <bb 263>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 2008] ={v} {CLOBBER};
  resx 77

<L74>:
  # DEBUG D#2038 => &this_27(D)->_warmup_threshold
  # DEBUG this => D#2038
  # DEBUG D#503 => &D#2038->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2038->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2038->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2038->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _224 = MEM[(struct _Vector_base *)this_27(D) + 1984B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _224
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _224
  # DEBUG __n => D#497
  if (_224 != 0B)
    goto <bb 265>;
  else
    goto <bb 266>;

  <bb 265>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _224
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _224
  # DEBUG this => D#489
  # DEBUG D.133707 => D#490
  operator delete (_224);

  <bb 266>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1984] ={v} {CLOBBER};
  resx 76

<L75>:
  # DEBUG D#2037 => &this_27(D)->_acc_stopping_threshold
  # DEBUG this => D#2037
  # DEBUG D#503 => &D#2037->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2037->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2037->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2037->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _225 = MEM[(struct _Vector_base *)this_27(D) + 1960B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _225
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _225
  # DEBUG __n => D#497
  if (_225 != 0B)
    goto <bb 268>;
  else
    goto <bb 269>;

  <bb 268>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _225
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _225
  # DEBUG this => D#489
  # DEBUG D.133722 => D#490
  operator delete (_225);

  <bb 269>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1960] ={v} {CLOBBER};
  resx 75

<L76>:
  # DEBUG D#2032 => &this_27(D)->_stopping_threshold
  # DEBUG this => D#2032
  # DEBUG D#503 => &D#2032->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2032->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2032->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2032->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _226 = MEM[(struct _Vector_base *)this_27(D) + 1936B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _226
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _226
  # DEBUG __n => D#497
  if (_226 != 0B)
    goto <bb 271>;
  else
    goto <bb 272>;

  <bb 271>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _226
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _226
  # DEBUG this => D#489
  # DEBUG D.133737 => D#490
  operator delete (_226);

  <bb 272>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1936] ={v} {CLOBBER};
  resx 74

<L77>:
  # DEBUG D#2029 => &this_27(D)->_latency_thres
  # DEBUG this => D#2029
  # DEBUG D#503 => &D#2029->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2029->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2029->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2029->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _227 = MEM[(struct _Vector_base *)this_27(D) + 1912B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _227
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _227
  # DEBUG __n => D#497
  if (_227 != 0B)
    goto <bb 274>;
  else
    goto <bb 275>;

  <bb 274>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _227
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _227
  # DEBUG this => D#489
  # DEBUG D.133752 => D#490
  operator delete (_227);

  <bb 275>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1912] ={v} {CLOBBER};
  resx 73

<L78>:
  # DEBUG D#2026 => &this_27(D)->_measure_stats
  # DEBUG this => D#2026
  # DEBUG D#476 => &D#2026->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2026->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2026->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2026->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _228 = MEM[(struct _Vector_base *)this_27(D) + 1880B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _228
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _228
  # DEBUG __n => D#470
  if (_228 != 0B)
    goto <bb 277>;
  else
    goto <bb 278>;

  <bb 277>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _228
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _228
  # DEBUG this => D#462
  # DEBUG D.133767 => D#463
  operator delete (_228);

  <bb 278>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 1880] ={v} {CLOBBER};
  resx 72

<L79>:
  # DEBUG D#2022 => &this_27(D)->_stats
  # DEBUG this => D#2022
  _229 = &MEM[(struct map *)this_27(D) + 1792B]._M_t;
  # DEBUG this => _229
  _357 = MEM[(struct _Rb_tree_node_base * *)this_27(D) + 1808B];
  # DEBUG D#197 => _229
  # DEBUG this => D#197
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, Stats*>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> > >::_M_erase (_229, _357);
  # DEBUG D#1657 => &MEM[(struct _Rb_tree *)_229]._M_impl
  # DEBUG this => D#1657
  # DEBUG this => D#1657
  # DEBUG this => D#1657
  MEM[(struct  &)this_27(D) + 1792] ={v} {CLOBBER};
  resx 71

<L80>:
  # DEBUG D#2020 => &this_27(D)->_slowest_flit
  # DEBUG this => D#2020
  # DEBUG D#476 => &D#2020->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2020->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2020->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2020->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _230 = MEM[(struct _Vector_base *)this_27(D) + 1768B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _230
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _230
  # DEBUG __n => D#470
  if (_230 != 0B)
    goto <bb 281>;
  else
    goto <bb 282>;

  <bb 281>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _230
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _230
  # DEBUG this => D#462
  # DEBUG D.133787 => D#463
  operator delete (_230);

  <bb 282>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 1768] ={v} {CLOBBER};
  resx 70

<L81>:
  # DEBUG D#2017 => &this_27(D)->_slowest_packet
  # DEBUG this => D#2017
  # DEBUG D#476 => &D#2017->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2017->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2017->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2017->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _231 = MEM[(struct _Vector_base *)this_27(D) + 1744B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _231
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _231
  # DEBUG __n => D#470
  if (_231 != 0B)
    goto <bb 284>;
  else
    goto <bb 285>;

  <bb 284>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _231
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _231
  # DEBUG this => D#462
  # DEBUG D.133802 => D#463
  operator delete (_231);

  <bb 285>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 1744] ={v} {CLOBBER};
  resx 69

<L82>:
  # DEBUG D#2014 => &this_27(D)->_overall_max_accepted
  # DEBUG this => D#2014
  # DEBUG D#503 => &D#2014->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2014->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2014->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2014->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _232 = MEM[(struct _Vector_base *)this_27(D) + 1720B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _232
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _232
  # DEBUG __n => D#497
  if (_232 != 0B)
    goto <bb 287>;
  else
    goto <bb 288>;

  <bb 287>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _232
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _232
  # DEBUG this => D#489
  # DEBUG D.133817 => D#490
  operator delete (_232);

  <bb 288>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1720] ={v} {CLOBBER};
  resx 68

<L83>:
  # DEBUG D#2011 => &this_27(D)->_overall_avg_accepted
  # DEBUG this => D#2011
  # DEBUG D#503 => &D#2011->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2011->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2011->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2011->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _233 = MEM[(struct _Vector_base *)this_27(D) + 1696B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _233
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _233
  # DEBUG __n => D#497
  if (_233 != 0B)
    goto <bb 290>;
  else
    goto <bb 291>;

  <bb 290>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _233
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _233
  # DEBUG this => D#489
  # DEBUG D.133832 => D#490
  operator delete (_233);

  <bb 291>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1696] ={v} {CLOBBER};
  resx 67

<L84>:
  # DEBUG D#2008 => &this_27(D)->_overall_min_accepted
  # DEBUG this => D#2008
  # DEBUG D#503 => &D#2008->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2008->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2008->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2008->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _234 = MEM[(struct _Vector_base *)this_27(D) + 1672B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _234
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _234
  # DEBUG __n => D#497
  if (_234 != 0B)
    goto <bb 293>;
  else
    goto <bb 294>;

  <bb 293>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _234
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _234
  # DEBUG this => D#489
  # DEBUG D.133847 => D#490
  operator delete (_234);

  <bb 294>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1672] ={v} {CLOBBER};
  resx 66

<L85>:
  _236 = &this_27(D)->_accepted_flits;
  std::vector<std::vector<int> >::~vector (_236);
  resx 65

<L86>:
  # DEBUG D#2004 => &this_27(D)->_overall_max_sent
  # DEBUG this => D#2004
  # DEBUG D#503 => &D#2004->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2004->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2004->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2004->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _235 = MEM[(struct _Vector_base *)this_27(D) + 1624B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _235
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _235
  # DEBUG __n => D#497
  if (_235 != 0B)
    goto <bb 297>;
  else
    goto <bb 298>;

  <bb 297>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _235
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _235
  # DEBUG this => D#489
  # DEBUG D.133862 => D#490
  operator delete (_235);

  <bb 298>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1624] ={v} {CLOBBER};
  resx 64

<L87>:
  # DEBUG D#2001 => &this_27(D)->_overall_avg_sent
  # DEBUG this => D#2001
  # DEBUG D#503 => &D#2001->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2001->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2001->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2001->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _238 = MEM[(struct _Vector_base *)this_27(D) + 1600B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _238
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _238
  # DEBUG __n => D#497
  if (_238 != 0B)
    goto <bb 300>;
  else
    goto <bb 301>;

  <bb 300>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _238
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _238
  # DEBUG this => D#489
  # DEBUG D.133877 => D#490
  operator delete (_238);

  <bb 301>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1600] ={v} {CLOBBER};
  resx 63

<L88>:
  # DEBUG D#1998 => &this_27(D)->_overall_min_sent
  # DEBUG this => D#1998
  # DEBUG D#503 => &D#1998->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1998->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1998->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1998->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _239 = MEM[(struct _Vector_base *)this_27(D) + 1576B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _239
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _239
  # DEBUG __n => D#497
  if (_239 != 0B)
    goto <bb 303>;
  else
    goto <bb 304>;

  <bb 303>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _239
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _239
  # DEBUG this => D#489
  # DEBUG D.133892 => D#490
  operator delete (_239);

  <bb 304>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1576] ={v} {CLOBBER};
  resx 62

<L89>:
  _241 = &this_27(D)->_sent_flits;
  std::vector<std::vector<int> >::~vector (_241);
  resx 61

<L90>:
  # DEBUG D#1994 => &this_27(D)->_overall_max_accepted_packets
  # DEBUG this => D#1994
  # DEBUG D#503 => &D#1994->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1994->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1994->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1994->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _240 = MEM[(struct _Vector_base *)this_27(D) + 1528B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _240
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _240
  # DEBUG __n => D#497
  if (_240 != 0B)
    goto <bb 307>;
  else
    goto <bb 308>;

  <bb 307>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _240
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _240
  # DEBUG this => D#489
  # DEBUG D.133907 => D#490
  operator delete (_240);

  <bb 308>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1528] ={v} {CLOBBER};
  resx 60

<L91>:
  # DEBUG D#1991 => &this_27(D)->_overall_avg_accepted_packets
  # DEBUG this => D#1991
  # DEBUG D#503 => &D#1991->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1991->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1991->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1991->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _243 = MEM[(struct _Vector_base *)this_27(D) + 1504B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _243
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _243
  # DEBUG __n => D#497
  if (_243 != 0B)
    goto <bb 310>;
  else
    goto <bb 311>;

  <bb 310>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _243
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _243
  # DEBUG this => D#489
  # DEBUG D.133922 => D#490
  operator delete (_243);

  <bb 311>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1504] ={v} {CLOBBER};
  resx 59

<L92>:
  # DEBUG D#1988 => &this_27(D)->_overall_min_accepted_packets
  # DEBUG this => D#1988
  # DEBUG D#503 => &D#1988->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1988->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1988->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1988->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _244 = MEM[(struct _Vector_base *)this_27(D) + 1480B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _244
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _244
  # DEBUG __n => D#497
  if (_244 != 0B)
    goto <bb 313>;
  else
    goto <bb 314>;

  <bb 313>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _244
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _244
  # DEBUG this => D#489
  # DEBUG D.133937 => D#490
  operator delete (_244);

  <bb 314>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1480] ={v} {CLOBBER};
  resx 58

<L93>:
  _246 = &this_27(D)->_accepted_packets;
  std::vector<std::vector<int> >::~vector (_246);
  resx 57

<L94>:
  # DEBUG D#1984 => &this_27(D)->_overall_max_sent_packets
  # DEBUG this => D#1984
  # DEBUG D#503 => &D#1984->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1984->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1984->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1984->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _245 = MEM[(struct _Vector_base *)this_27(D) + 1432B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _245
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _245
  # DEBUG __n => D#497
  if (_245 != 0B)
    goto <bb 317>;
  else
    goto <bb 318>;

  <bb 317>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _245
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _245
  # DEBUG this => D#489
  # DEBUG D.133952 => D#490
  operator delete (_245);

  <bb 318>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1432] ={v} {CLOBBER};
  resx 56

<L95>:
  # DEBUG D#1981 => &this_27(D)->_overall_avg_sent_packets
  # DEBUG this => D#1981
  # DEBUG D#503 => &D#1981->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1981->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1981->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1981->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _248 = MEM[(struct _Vector_base *)this_27(D) + 1408B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _248
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _248
  # DEBUG __n => D#497
  if (_248 != 0B)
    goto <bb 320>;
  else
    goto <bb 321>;

  <bb 320>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _248
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _248
  # DEBUG this => D#489
  # DEBUG D.133967 => D#490
  operator delete (_248);

  <bb 321>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1408] ={v} {CLOBBER};
  resx 55

<L96>:
  # DEBUG D#1978 => &this_27(D)->_overall_min_sent_packets
  # DEBUG this => D#1978
  # DEBUG D#503 => &D#1978->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1978->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1978->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1978->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _249 = MEM[(struct _Vector_base *)this_27(D) + 1384B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _249
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _249
  # DEBUG __n => D#497
  if (_249 != 0B)
    goto <bb 323>;
  else
    goto <bb 324>;

  <bb 323>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _249
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _249
  # DEBUG this => D#489
  # DEBUG D.133982 => D#490
  operator delete (_249);

  <bb 324>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1384] ={v} {CLOBBER};
  resx 54

<L97>:
  _251 = &this_27(D)->_sent_packets;
  std::vector<std::vector<int> >::~vector (_251);
  resx 53

<L98>:
  # DEBUG D#1974 => &this_27(D)->_overall_hop_stats
  # DEBUG this => D#1974
  # DEBUG D#503 => &D#1974->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1974->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1974->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1974->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _250 = MEM[(struct _Vector_base *)this_27(D) + 1336B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _250
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _250
  # DEBUG __n => D#497
  if (_250 != 0B)
    goto <bb 327>;
  else
    goto <bb 328>;

  <bb 327>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _250
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _250
  # DEBUG this => D#489
  # DEBUG D.133997 => D#490
  operator delete (_250);

  <bb 328>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1336] ={v} {CLOBBER};
  resx 52

<L99>:
  # DEBUG D#1971 => &this_27(D)->_hop_stats
  # DEBUG this => D#1971
  # DEBUG D#920 => &D#1971->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#1971->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#1971->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#1971->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _253 = MEM[(struct _Vector_base *)this_27(D) + 1312B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _253
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _253
  # DEBUG __n => D#914
  if (_253 != 0B)
    goto <bb 330>;
  else
    goto <bb 331>;

  <bb 330>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _253
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _253
  # DEBUG this => D#906
  # DEBUG D.134012 => D#907
  operator delete (_253);

  <bb 331>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_27(D) + 1312] ={v} {CLOBBER};
  resx 51

<L100>:
  _255 = &this_27(D)->_pair_flat;
  std::vector<std::vector<Stats*> >::~vector (_255);
  resx 50

<L101>:
  _257 = &this_27(D)->_pair_nlat;
  std::vector<std::vector<Stats*> >::~vector (_257);
  resx 49

<L102>:
  _259 = &this_27(D)->_pair_plat;
  std::vector<std::vector<Stats*> >::~vector (_259);
  resx 48

<L103>:
  # DEBUG D#1965 => &this_27(D)->_overall_max_frag
  # DEBUG this => D#1965
  # DEBUG D#503 => &D#1965->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1965->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1965->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1965->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _254 = MEM[(struct _Vector_base *)this_27(D) + 1216B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _254
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _254
  # DEBUG __n => D#497
  if (_254 != 0B)
    goto <bb 336>;
  else
    goto <bb 337>;

  <bb 336>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _254
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _254
  # DEBUG this => D#489
  # DEBUG D.134027 => D#490
  operator delete (_254);

  <bb 337>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1216] ={v} {CLOBBER};
  resx 47

<L104>:
  # DEBUG D#1962 => &this_27(D)->_overall_avg_frag
  # DEBUG this => D#1962
  # DEBUG D#503 => &D#1962->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1962->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1962->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1962->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _261 = MEM[(struct _Vector_base *)this_27(D) + 1192B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _261
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _261
  # DEBUG __n => D#497
  if (_261 != 0B)
    goto <bb 339>;
  else
    goto <bb 340>;

  <bb 339>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _261
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _261
  # DEBUG this => D#489
  # DEBUG D.134042 => D#490
  operator delete (_261);

  <bb 340>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1192] ={v} {CLOBBER};
  resx 46

<L105>:
  # DEBUG D#1959 => &this_27(D)->_overall_min_frag
  # DEBUG this => D#1959
  # DEBUG D#503 => &D#1959->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1959->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1959->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1959->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _262 = MEM[(struct _Vector_base *)this_27(D) + 1168B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _262
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _262
  # DEBUG __n => D#497
  if (_262 != 0B)
    goto <bb 342>;
  else
    goto <bb 343>;

  <bb 342>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _262
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _262
  # DEBUG this => D#489
  # DEBUG D.134057 => D#490
  operator delete (_262);

  <bb 343>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1168] ={v} {CLOBBER};
  resx 45

<L106>:
  # DEBUG D#1957 => &this_27(D)->_frag_stats
  # DEBUG this => D#1957
  # DEBUG D#920 => &D#1957->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#1957->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#1957->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#1957->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _263 = MEM[(struct _Vector_base *)this_27(D) + 1144B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _263
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _263
  # DEBUG __n => D#914
  if (_263 != 0B)
    goto <bb 345>;
  else
    goto <bb 346>;

  <bb 345>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _263
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _263
  # DEBUG this => D#906
  # DEBUG D.134072 => D#907
  operator delete (_263);

  <bb 346>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_27(D) + 1144] ={v} {CLOBBER};
  resx 44

<L107>:
  # DEBUG D#1956 => &this_27(D)->_overall_max_flat
  # DEBUG this => D#1956
  # DEBUG D#503 => &D#1956->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1956->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1956->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1956->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _264 = MEM[(struct _Vector_base *)this_27(D) + 1120B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _264
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _264
  # DEBUG __n => D#497
  if (_264 != 0B)
    goto <bb 348>;
  else
    goto <bb 349>;

  <bb 348>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _264
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _264
  # DEBUG this => D#489
  # DEBUG D.134087 => D#490
  operator delete (_264);

  <bb 349>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1120] ={v} {CLOBBER};
  resx 43

<L108>:
  # DEBUG D#1955 => &this_27(D)->_overall_avg_flat
  # DEBUG this => D#1955
  # DEBUG D#503 => &D#1955->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1955->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1955->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1955->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _265 = MEM[(struct _Vector_base *)this_27(D) + 1096B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _265
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _265
  # DEBUG __n => D#497
  if (_265 != 0B)
    goto <bb 351>;
  else
    goto <bb 352>;

  <bb 351>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _265
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _265
  # DEBUG this => D#489
  # DEBUG D.134102 => D#490
  operator delete (_265);

  <bb 352>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1096] ={v} {CLOBBER};
  resx 42

<L109>:
  # DEBUG D#1954 => &this_27(D)->_overall_min_flat
  # DEBUG this => D#1954
  # DEBUG D#503 => &D#1954->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1954->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1954->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1954->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _266 = MEM[(struct _Vector_base *)this_27(D) + 1072B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _266
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _266
  # DEBUG __n => D#497
  if (_266 != 0B)
    goto <bb 354>;
  else
    goto <bb 355>;

  <bb 354>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _266
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _266
  # DEBUG this => D#489
  # DEBUG D.134117 => D#490
  operator delete (_266);

  <bb 355>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1072] ={v} {CLOBBER};
  resx 41

<L110>:
  # DEBUG D#1953 => &this_27(D)->_flat_stats
  # DEBUG this => D#1953
  # DEBUG D#920 => &D#1953->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#1953->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#1953->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#1953->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _267 = MEM[(struct _Vector_base *)this_27(D) + 1048B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _267
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _267
  # DEBUG __n => D#914
  if (_267 != 0B)
    goto <bb 357>;
  else
    goto <bb 358>;

  <bb 357>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _267
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _267
  # DEBUG this => D#906
  # DEBUG D.134132 => D#907
  operator delete (_267);

  <bb 358>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_27(D) + 1048] ={v} {CLOBBER};
  resx 40

<L111>:
  # DEBUG D#1952 => &this_27(D)->_overall_max_nlat
  # DEBUG this => D#1952
  # DEBUG D#503 => &D#1952->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1952->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1952->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1952->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _268 = MEM[(struct _Vector_base *)this_27(D) + 1024B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _268
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _268
  # DEBUG __n => D#497
  if (_268 != 0B)
    goto <bb 360>;
  else
    goto <bb 361>;

  <bb 360>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _268
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _268
  # DEBUG this => D#489
  # DEBUG D.134147 => D#490
  operator delete (_268);

  <bb 361>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1024] ={v} {CLOBBER};
  resx 39

<L112>:
  # DEBUG D#1951 => &this_27(D)->_overall_avg_nlat
  # DEBUG this => D#1951
  # DEBUG D#503 => &D#1951->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1951->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1951->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1951->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _269 = MEM[(struct _Vector_base *)this_27(D) + 1000B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _269
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _269
  # DEBUG __n => D#497
  if (_269 != 0B)
    goto <bb 363>;
  else
    goto <bb 364>;

  <bb 363>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _269
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _269
  # DEBUG this => D#489
  # DEBUG D.134162 => D#490
  operator delete (_269);

  <bb 364>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 1000] ={v} {CLOBBER};
  resx 38

<L113>:
  # DEBUG D#1950 => &this_27(D)->_overall_min_nlat
  # DEBUG this => D#1950
  # DEBUG D#503 => &D#1950->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1950->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1950->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1950->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _270 = MEM[(struct _Vector_base *)this_27(D) + 976B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _270
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _270
  # DEBUG __n => D#497
  if (_270 != 0B)
    goto <bb 366>;
  else
    goto <bb 367>;

  <bb 366>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _270
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _270
  # DEBUG this => D#489
  # DEBUG D.134177 => D#490
  operator delete (_270);

  <bb 367>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 976] ={v} {CLOBBER};
  resx 37

<L114>:
  # DEBUG D#1949 => &this_27(D)->_nlat_stats
  # DEBUG this => D#1949
  # DEBUG D#920 => &D#1949->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#1949->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#1949->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#1949->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _271 = MEM[(struct _Vector_base *)this_27(D) + 952B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _271
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _271
  # DEBUG __n => D#914
  if (_271 != 0B)
    goto <bb 369>;
  else
    goto <bb 370>;

  <bb 369>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _271
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _271
  # DEBUG this => D#906
  # DEBUG D.134192 => D#907
  operator delete (_271);

  <bb 370>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_27(D) + 952] ={v} {CLOBBER};
  resx 36

<L115>:
  # DEBUG D#1948 => &this_27(D)->_overall_max_plat
  # DEBUG this => D#1948
  # DEBUG D#503 => &D#1948->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1948->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1948->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1948->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _272 = MEM[(struct _Vector_base *)this_27(D) + 928B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _272
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _272
  # DEBUG __n => D#497
  if (_272 != 0B)
    goto <bb 372>;
  else
    goto <bb 373>;

  <bb 372>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _272
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _272
  # DEBUG this => D#489
  # DEBUG D.134207 => D#490
  operator delete (_272);

  <bb 373>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 928] ={v} {CLOBBER};
  resx 35

<L116>:
  # DEBUG D#1947 => &this_27(D)->_overall_avg_plat
  # DEBUG this => D#1947
  # DEBUG D#503 => &D#1947->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1947->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1947->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1947->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _273 = MEM[(struct _Vector_base *)this_27(D) + 904B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _273
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _273
  # DEBUG __n => D#497
  if (_273 != 0B)
    goto <bb 375>;
  else
    goto <bb 376>;

  <bb 375>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _273
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _273
  # DEBUG this => D#489
  # DEBUG D.134222 => D#490
  operator delete (_273);

  <bb 376>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 904] ={v} {CLOBBER};
  resx 34

<L117>:
  # DEBUG D#1946 => &this_27(D)->_overall_min_plat
  # DEBUG this => D#1946
  # DEBUG D#503 => &D#1946->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1946->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1946->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1946->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _274 = MEM[(struct _Vector_base *)this_27(D) + 880B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _274
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _274
  # DEBUG __n => D#497
  if (_274 != 0B)
    goto <bb 378>;
  else
    goto <bb 379>;

  <bb 378>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _274
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _274
  # DEBUG this => D#489
  # DEBUG D.134237 => D#490
  operator delete (_274);

  <bb 379>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 880] ={v} {CLOBBER};
  resx 33

<L118>:
  # DEBUG D#1945 => &this_27(D)->_plat_stats
  # DEBUG this => D#1945
  # DEBUG D#920 => &D#1945->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#1945->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#1945->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#1945->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _275 = MEM[(struct _Vector_base *)this_27(D) + 856B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _275
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _275
  # DEBUG __n => D#914
  if (_275 != 0B)
    goto <bb 381>;
  else
    goto <bb 382>;

  <bb 381>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _275
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _275
  # DEBUG this => D#906
  # DEBUG D.134252 => D#907
  operator delete (_275);

  <bb 382>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_27(D) + 856] ={v} {CLOBBER};
  resx 32

<L119>:
  # DEBUG D#1944 => &this_27(D)->_requestsOutstanding
  # DEBUG this => D#1944
  # DEBUG D#476 => &D#1944->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1944->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1944->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1944->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _276 = MEM[(struct _Vector_base *)this_27(D) + 832B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _276
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _276
  # DEBUG __n => D#470
  if (_276 != 0B)
    goto <bb 384>;
  else
    goto <bb 385>;

  <bb 384>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _276
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _276
  # DEBUG this => D#462
  # DEBUG D.134267 => D#463
  operator delete (_276);

  <bb 385>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 832] ={v} {CLOBBER};
  resx 31

<L120>:
  # DEBUG D#3325 => &this_27(D)->_repliesPending
  # DEBUG this => D#3325
  # DEBUG D#1089 => &D#3325->D.62343
  # DEBUG this => D#1089
  _220 = MEM[(struct vector *)this_27(D) + 808B].D.62343._M_impl._M_finish;
  __first_1195 = MEM[(struct vector *)this_27(D) + 808B].D.62343._M_impl._M_start;
  # DEBUG __first => __first_1195
  # DEBUG __last => _220
  # DEBUG __first => __first_1195
  if (_220 == __first_1195)
    goto <bb 395>;
  else
    goto <bb 387>;

  <bb 387>:

  <bb 388>:
  # __first_1608 = PHI <__first_1195(387), __first_1201(390)>
  # DEBUG __first => __first_1608
  # DEBUG __r => __first_1608
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_1197 = MEM[(struct _List_base *)__first_1608]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_1197
  # DEBUG __cur => __tmp_1197
  _1710 = &MEM[(struct _List_base *)__first_1608]._M_impl._M_node.D.37893;
  if (__tmp_1197 == _1710)
    goto <bb 389>;
  else
    goto <bb 391>;

  <bb 389>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__first_1608] ={v} {CLOBBER};
  __first_1201 = __first_1608 + 24;
  # DEBUG __first => __first_1201
  # DEBUG __first => __first_1201
  if (_220 == __first_1201)
    goto <bb 394>;
  else
    goto <bb 390>;

  <bb 390>:
  goto <bb 388>;

  <bb 391>:

  <bb 392>:
  # __tmp_1607 = PHI <__tmp_1197(391), __tmp_1200(393)>
  # DEBUG __cur => __tmp_1607
  # DEBUG __tmp => __tmp_1607
  __tmp_1200 = __tmp_1607->D.82523._M_next;
  # DEBUG __cur => __tmp_1200
  # DEBUG D#1082 => &__tmp_1607->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_1607
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_1607
  # DEBUG this => D#567
  # DEBUG D.159674 => D#568
  operator delete (__tmp_1607);
  # DEBUG __cur => __tmp_1200
  if (__tmp_1200 == _1710)
    goto <bb 389>;
  else
    goto <bb 393>;

  <bb 393>:
  goto <bb 392>;

  <bb 394>:
  pretmp_1030 = MEM[(struct _Vector_base *)this_27(D) + 808B]._M_impl._M_start;

  <bb 395>:
  # prephitmp_1031 = PHI <pretmp_1030(394), __first_1195(386)>
  # DEBUG D#1090 => &D#3325->D.62343
  # DEBUG this => D#1090
  # DEBUG D#903 => D#1090->_M_impl._M_end_of_storage
  # DEBUG D#902 => (long int) D#903
  # DEBUG D#3340 => MEM[(struct _Vector_base *)this_27(D) + 808B]._M_impl._M_start
  # DEBUG D#901 => (long int) D#3340
  # DEBUG D#900 => D#902 - D#901
  # DEBUG D#899 => D#900 /[ex] 24
  # DEBUG D#896 => D#1090
  # DEBUG D#897 => (long unsigned int) D#899
  # DEBUG __p => D#3340
  # DEBUG this => D#896
  # DEBUG __n => D#897
  # DEBUG D#895 => D#897
  # DEBUG D#894 => D#896
  if (prephitmp_1031 != 0B)
    goto <bb 396>;
  else
    goto <bb 397>;

  <bb 396>:
  # DEBUG D#893 => &D#894->_M_impl
  # DEBUG D#891 => D#893
  # DEBUG D#892 => D#895
  # DEBUG __p => D#3340
  # DEBUG __a => D#891
  # DEBUG __n => D#892
  # DEBUG D#890 => D#892
  # DEBUG D#889 => D#891
  # DEBUG D#887 => D#889
  # DEBUG D#888 => D#890
  # DEBUG __p => D#3340
  # DEBUG this => D#887
  # DEBUG D.159688 => D#888
  operator delete (prephitmp_1031);

  <bb 397>:
  # DEBUG D#898 => &D#1090->_M_impl
  # DEBUG this => D#898
  # DEBUG this => D#898
  # DEBUG this => D#898
  MEM[(struct  &)this_27(D) + 808] ={v} {CLOBBER};
  resx 30

<L121>:
  # DEBUG D#1943 => &this_27(D)->_packet_seq_no
  # DEBUG this => D#1943
  # DEBUG D#476 => &D#1943->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1943->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1943->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1943->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _277 = MEM[(struct _Vector_base *)this_27(D) + 784B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _277
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _277
  # DEBUG __n => D#470
  if (_277 != 0B)
    goto <bb 399>;
  else
    goto <bb 400>;

  <bb 399>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _277
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _277
  # DEBUG this => D#462
  # DEBUG D.134282 => D#463
  operator delete (_277);

  <bb 400>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 784] ={v} {CLOBBER};
  resx 29

<L122>:
  # DEBUG D#1942 => &this_27(D)->_subnet
  # DEBUG this => D#1942
  # DEBUG D#476 => &D#1942->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1942->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1942->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1942->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _280 = MEM[(struct _Vector_base *)this_27(D) + 752B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _280
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _280
  # DEBUG __n => D#470
  if (_280 != 0B)
    goto <bb 402>;
  else
    goto <bb 403>;

  <bb 402>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _280
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _280
  # DEBUG this => D#462
  # DEBUG D.134297 => D#463
  operator delete (_280);

  <bb 403>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 752] ={v} {CLOBBER};
  resx 28

<L123>:
  _282 = &this_27(D)->_retired_packets;
  std::vector<std::map<int, Flit*> >::~vector (_282);
  resx 27

<L124>:
  _284 = &this_27(D)->_measured_in_flight_flits;
  std::vector<std::map<int, Flit*> >::~vector (_284);
  resx 26

<L125>:
  _286 = &this_27(D)->_total_in_flight_flits;
  std::vector<std::map<int, Flit*> >::~vector (_286);
  resx 25

<L126>:
  # DEBUG D#3324 => &this_27(D)->_partial_packets
  # DEBUG this => D#3324
  # DEBUG D#1067 => &D#3324->D.60835
  # DEBUG this => D#1067
  _279 = MEM[(struct vector *)this_27(D) + 648B].D.60835._M_impl._M_finish;
  __first_1203 = MEM[(struct vector *)this_27(D) + 648B].D.60835._M_impl._M_start;
  # DEBUG __first => __first_1203
  # DEBUG __last => _279
  # DEBUG __first => __first_1203
  if (_279 == __first_1203)
    goto <bb 423>;
  else
    goto <bb 408>;

  <bb 408>:

  <bb 409>:
  # __first_1606 = PHI <__first_1203(408), __first_1205(421)>
  # DEBUG __first => __first_1606
  # DEBUG __r => __first_1606
  # DEBUG __pointer => NULL
  # DEBUG this => __first_1606
  # DEBUG D#1061 => &__first_1606->D.70701
  # DEBUG this => D#1061
  _289 = __first_1606->D.70701._M_impl._M_finish;
  __first_1207 = __first_1606->D.70701._M_impl._M_start;
  # DEBUG __first => __first_1207
  # DEBUG __last => _289
  # DEBUG __first => __first_1207
  if (_289 == __first_1207)
    goto <bb 418>;
  else
    goto <bb 410>;

  <bb 410>:

  <bb 411>:
  # __first_1605 = PHI <__first_1207(410), __first_1213(413)>
  # DEBUG __first => __first_1605
  # DEBUG __r => __first_1605
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_1209 = MEM[(struct _List_base *)__first_1605]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_1209
  # DEBUG __cur => __tmp_1209
  _1640 = &MEM[(struct _List_base *)__first_1605]._M_impl._M_node.D.37893;
  if (__tmp_1209 == _1640)
    goto <bb 412>;
  else
    goto <bb 414>;

  <bb 412>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__first_1605] ={v} {CLOBBER};
  __first_1213 = __first_1605 + 24;
  # DEBUG __first => __first_1213
  # DEBUG __first => __first_1213
  if (_289 == __first_1213)
    goto <bb 417>;
  else
    goto <bb 413>;

  <bb 413>:
  goto <bb 411>;

  <bb 414>:

  <bb 415>:
  # __tmp_1604 = PHI <__tmp_1209(414), __tmp_1212(416)>
  # DEBUG __cur => __tmp_1604
  # DEBUG __tmp => __tmp_1604
  __tmp_1212 = __tmp_1604->D.82395._M_next;
  # DEBUG __cur => __tmp_1212
  # DEBUG D#1054 => &__tmp_1604->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_1604
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_1604
  # DEBUG this => D#559
  # DEBUG D.159736 => D#560
  operator delete (__tmp_1604);
  # DEBUG __cur => __tmp_1212
  if (__tmp_1212 == _1640)
    goto <bb 412>;
  else
    goto <bb 416>;

  <bb 416>:
  goto <bb 415>;

  <bb 417>:
  pretmp_1430 = MEM[(struct _Vector_base *)__first_1606]._M_impl._M_start;

  <bb 418>:
  # prephitmp_1431 = PHI <pretmp_1430(417), __first_1207(409)>
  # DEBUG D#1062 => &__first_1606->D.70701
  # DEBUG this => D#1062
  # DEBUG D#1049 => D#1062->_M_impl._M_end_of_storage
  # DEBUG D#1048 => (long int) D#1049
  # DEBUG D#3339 => MEM[(struct _Vector_base *)__first_1606]._M_impl._M_start
  # DEBUG D#1047 => (long int) D#3339
  # DEBUG D#1046 => D#1048 - D#1047
  # DEBUG D#1045 => D#1046 /[ex] 24
  # DEBUG D#1042 => D#1062
  # DEBUG D#1043 => (long unsigned int) D#1045
  # DEBUG __p => D#3339
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (prephitmp_1431 != 0B)
    goto <bb 419>;
  else
    goto <bb 420>;

  <bb 419>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => D#3339
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => D#3339
  # DEBUG this => D#1033
  # DEBUG D.159750 => D#1034
  operator delete (prephitmp_1431);

  <bb 420>:
  # DEBUG D#1044 => &D#1062->_M_impl
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  MEM[(struct  &)__first_1606] ={v} {CLOBBER};
  __first_1205 = __first_1606 + 24;
  # DEBUG __first => __first_1205
  # DEBUG __first => __first_1205
  if (_279 == __first_1205)
    goto <bb 422>;
  else
    goto <bb 421>;

  <bb 421>:
  goto <bb 409>;

  <bb 422>:
  pretmp_1034 = MEM[(struct _Vector_base *)this_27(D) + 648B]._M_impl._M_start;

  <bb 423>:
  # prephitmp_1035 = PHI <pretmp_1034(422), __first_1203(407)>
  # DEBUG D#1068 => &D#3324->D.60835
  # DEBUG this => D#1068
  # DEBUG D#867 => D#1068->_M_impl._M_end_of_storage
  # DEBUG D#866 => (long int) D#867
  # DEBUG D#3338 => MEM[(struct _Vector_base *)this_27(D) + 648B]._M_impl._M_start
  # DEBUG D#865 => (long int) D#3338
  # DEBUG D#864 => D#866 - D#865
  # DEBUG D#863 => D#864 /[ex] 24
  # DEBUG D#860 => D#1068
  # DEBUG D#861 => (long unsigned int) D#863
  # DEBUG __p => D#3338
  # DEBUG this => D#860
  # DEBUG __n => D#861
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#860
  if (prephitmp_1035 != 0B)
    goto <bb 424>;
  else
    goto <bb 425>;

  <bb 424>:
  # DEBUG D#857 => &D#858->_M_impl
  # DEBUG D#855 => D#857
  # DEBUG D#856 => D#859
  # DEBUG __p => D#3338
  # DEBUG __a => D#855
  # DEBUG __n => D#856
  # DEBUG D#854 => D#856
  # DEBUG D#853 => D#855
  # DEBUG D#851 => D#853
  # DEBUG D#852 => D#854
  # DEBUG __p => D#3338
  # DEBUG this => D#851
  # DEBUG D.159712 => D#852
  operator delete (prephitmp_1035);

  <bb 425>:
  # DEBUG D#862 => &D#1068->_M_impl
  # DEBUG this => D#862
  # DEBUG this => D#862
  # DEBUG this => D#862
  MEM[(struct  &)this_27(D) + 648] ={v} {CLOBBER};
  resx 24

<L127>:
  # DEBUG D#3323 => &this_27(D)->_qdrained
  # DEBUG this => D#3323
  # DEBUG D#1024 => &D#3323->D.60085
  # DEBUG this => D#1024
  _1215 = MEM[(struct vector *)this_27(D) + 624B].D.60085._M_impl._M_finish;
  __first_1216 = MEM[(struct vector *)this_27(D) + 624B].D.60085._M_impl._M_start;
  # DEBUG __first => __first_1216
  # DEBUG __last => _1215
  # DEBUG __first => __first_1216
  if (_1215 == __first_1216)
    goto <bb 433>;
  else
    goto <bb 427>;

  <bb 427>:

  <bb 428>:
  # __first_1603 = PHI <__first_1216(427), __first_1219(431)>
  # DEBUG __first => __first_1603
  # DEBUG __r => __first_1603
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG D#3318 => &__first_1603->D.48430
  # DEBUG this => D#3318
  # DEBUG this => D#3318
  _291 = MEM[(struct _Bvector_base *)__first_1603]._M_impl._M_start.D.33184._M_p;
  if (_291 != 0B)
    goto <bb 429>;
  else
    goto <bb 430>;

  <bb 429>:
  # DEBUG D#1015 => &D#3318->_M_impl
  _1221 = MEM[(long unsigned int * *)__first_1603 + 32B];
  # DEBUG D#375 => D#1015
  # DEBUG this => D#375
  _1223 = (long int) _1221;
  _1224 = (long int) _291;
  _1225 = _1223 - _1224;
  # DEBUG D#1018 => _1225 /[ex] 8
  # DEBUG D#1017 => (const size_t) D#1018
  # DEBUG __n => D#1017
  _1226 = (long unsigned int) _1225;
  _1227 = -_1226;
  _1228 = _1221 + _1227;
  # DEBUG D#1016 => &D#3318->_M_impl
  # DEBUG D#1013 => D#1016
  # DEBUG D#1014 => D#1017
  # DEBUG __p => _1228
  # DEBUG __a => D#1013
  # DEBUG __n => D#1014
  # DEBUG D#1012 => D#1014
  # DEBUG D#1011 => D#1013
  # DEBUG D#1009 => D#1011
  # DEBUG D#1010 => D#1012
  # DEBUG __p => _1228
  # DEBUG this => D#1009
  # DEBUG D.159791 => D#1010
  operator delete (_1228);

  <bb 430>:
  # DEBUG D#1019 => &D#3318->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__first_1603] ={v} {CLOBBER};
  __first_1219 = __first_1603 + 40;
  # DEBUG __first => __first_1219
  # DEBUG __first => __first_1219
  if (_1215 == __first_1219)
    goto <bb 432>;
  else
    goto <bb 431>;

  <bb 431>:
  goto <bb 428>;

  <bb 432>:
  pretmp_1037 = MEM[(struct _Vector_base *)this_27(D) + 624B]._M_impl._M_start;

  <bb 433>:
  # prephitmp_1040 = PHI <pretmp_1037(432), __first_1216(426)>
  # DEBUG D#1025 => &D#3323->D.60085
  # DEBUG this => D#1025
  # DEBUG D#848 => D#1025->_M_impl._M_end_of_storage
  # DEBUG D#847 => (long int) D#848
  # DEBUG D#3337 => MEM[(struct _Vector_base *)this_27(D) + 624B]._M_impl._M_start
  # DEBUG D#846 => (long int) D#3337
  # DEBUG D#845 => D#847 - D#846
  # DEBUG D#844 => D#845 /[ex] 40
  # DEBUG D#841 => D#1025
  # DEBUG D#842 => (long unsigned int) D#844
  # DEBUG __p => D#3337
  # DEBUG this => D#841
  # DEBUG __n => D#842
  # DEBUG D#840 => D#842
  # DEBUG D#839 => D#841
  if (prephitmp_1040 != 0B)
    goto <bb 434>;
  else
    goto <bb 435>;

  <bb 434>:
  # DEBUG D#838 => &D#839->_M_impl
  # DEBUG D#836 => D#838
  # DEBUG D#837 => D#840
  # DEBUG __p => D#3337
  # DEBUG __a => D#836
  # DEBUG __n => D#837
  # DEBUG D#835 => D#837
  # DEBUG D#834 => D#836
  # DEBUG D#832 => D#834
  # DEBUG D#833 => D#835
  # DEBUG __p => D#3337
  # DEBUG this => D#832
  # DEBUG D.159779 => D#833
  operator delete (prephitmp_1040);

  <bb 435>:
  # DEBUG D#843 => &D#1025->_M_impl
  # DEBUG this => D#843
  # DEBUG this => D#843
  # DEBUG this => D#843
  MEM[(struct  &)this_27(D) + 624] ={v} {CLOBBER};
  resx 23

<L128>:
  _292 = &this_27(D)->_qtime;
  std::vector<std::vector<int> >::~vector (_292);
  resx 22

<L129>:
  # DEBUG D#3322 => &this_27(D)->_last_vc
  # DEBUG this => D#3322
  # DEBUG D#828 => &D#3322->D.59334
  # DEBUG this => D#828
  _1229 = MEM[(struct vector *)this_27(D) + 560B].D.59334._M_impl._M_finish;
  __first_1230 = MEM[(struct vector *)this_27(D) + 560B].D.59334._M_impl._M_start;
  # DEBUG __first => __first_1230
  # DEBUG __last => _1229
  # DEBUG __first => __first_1230
  if (_1229 == __first_1230)
    goto <bb 451>;
  else
    goto <bb 438>;

  <bb 438>:

  <bb 439>:
  # __first_1602 = PHI <__first_1230(438), __first_1232(449)>
  # DEBUG __first => __first_1602
  # DEBUG __r => __first_1602
  # DEBUG __pointer => NULL
  # DEBUG this => __first_1602
  # DEBUG D#690 => &__first_1602->D.53336
  # DEBUG this => D#690
  _295 = __first_1602->D.53336._M_impl._M_finish;
  __first_1234 = __first_1602->D.53336._M_impl._M_start;
  # DEBUG __first => __first_1234
  # DEBUG __last => _295
  # DEBUG __first => __first_1234
  if (_295 == __first_1234)
    goto <bb 446>;
  else
    goto <bb 440>;

  <bb 440>:

  <bb 441>:
  # __first_1601 = PHI <__first_1234(440), __first_1237(444)>
  # DEBUG __first => __first_1601
  # DEBUG __r => __first_1601
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1236 = MEM[(struct _Vector_base *)__first_1601]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1236
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1236
  # DEBUG __n => D#470
  if (_1236 != 0B)
    goto <bb 442>;
  else
    goto <bb 443>;

  <bb 442>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1236
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1236
  # DEBUG this => D#462
  # DEBUG D.159837 => D#463
  operator delete (_1236);

  <bb 443>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__first_1601] ={v} {CLOBBER};
  __first_1237 = __first_1601 + 24;
  # DEBUG __first => __first_1237
  # DEBUG __first => __first_1237
  if (_295 == __first_1237)
    goto <bb 445>;
  else
    goto <bb 444>;

  <bb 444>:
  goto <bb 441>;

  <bb 445>:
  pretmp_1414 = MEM[(struct _Vector_base *)__first_1602]._M_impl._M_start;

  <bb 446>:
  # prephitmp_1415 = PHI <pretmp_1414(445), __first_1234(439)>
  # DEBUG D#691 => &__first_1602->D.53336
  # DEBUG this => D#691
  # DEBUG D#685 => D#691->_M_impl._M_end_of_storage
  # DEBUG D#684 => (long int) D#685
  # DEBUG D#3336 => MEM[(struct _Vector_base *)__first_1602]._M_impl._M_start
  # DEBUG D#683 => (long int) D#3336
  # DEBUG D#682 => D#684 - D#683
  # DEBUG D#681 => D#682 /[ex] 24
  # DEBUG D#678 => D#691
  # DEBUG D#679 => (long unsigned int) D#681
  # DEBUG __p => D#3336
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (prephitmp_1415 != 0B)
    goto <bb 447>;
  else
    goto <bb 448>;

  <bb 447>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => D#3336
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => D#3336
  # DEBUG this => D#669
  # DEBUG D.159851 => D#670
  operator delete (prephitmp_1415);

  <bb 448>:
  # DEBUG D#680 => &D#691->_M_impl
  # DEBUG this => D#680
  # DEBUG this => D#680
  # DEBUG this => D#680
  MEM[(struct  &)__first_1602] ={v} {CLOBBER};
  __first_1232 = __first_1602 + 24;
  # DEBUG __first => __first_1232
  # DEBUG __first => __first_1232
  if (_1229 == __first_1232)
    goto <bb 450>;
  else
    goto <bb 449>;

  <bb 449>:
  goto <bb 439>;

  <bb 450>:
  pretmp_1041 = MEM[(struct _Vector_base *)this_27(D) + 560B]._M_impl._M_start;

  <bb 451>:
  # prephitmp_1042 = PHI <pretmp_1041(450), __first_1230(437)>
  # DEBUG D#829 => &D#3322->D.59334
  # DEBUG this => D#829
  # DEBUG D#823 => D#829->_M_impl._M_end_of_storage
  # DEBUG D#822 => (long int) D#823
  # DEBUG D#3335 => MEM[(struct _Vector_base *)this_27(D) + 560B]._M_impl._M_start
  # DEBUG D#821 => (long int) D#3335
  # DEBUG D#820 => D#822 - D#821
  # DEBUG D#819 => D#820 /[ex] 24
  # DEBUG D#816 => D#829
  # DEBUG D#817 => (long unsigned int) D#819
  # DEBUG __p => D#3335
  # DEBUG this => D#816
  # DEBUG __n => D#817
  # DEBUG D#815 => D#817
  # DEBUG D#814 => D#816
  if (prephitmp_1042 != 0B)
    goto <bb 452>;
  else
    goto <bb 453>;

  <bb 452>:
  # DEBUG D#813 => &D#814->_M_impl
  # DEBUG D#811 => D#813
  # DEBUG D#812 => D#815
  # DEBUG __p => D#3335
  # DEBUG __a => D#811
  # DEBUG __n => D#812
  # DEBUG D#810 => D#812
  # DEBUG D#809 => D#811
  # DEBUG D#807 => D#809
  # DEBUG D#808 => D#810
  # DEBUG __p => D#3335
  # DEBUG this => D#807
  # DEBUG D.159812 => D#808
  operator delete (prephitmp_1042);

  <bb 453>:
  # DEBUG D#818 => &D#829->_M_impl
  # DEBUG this => D#818
  # DEBUG this => D#818
  # DEBUG this => D#818
  MEM[(struct  &)this_27(D) + 560] ={v} {CLOBBER};
  resx 21

<L130>:
  # DEBUG D#3321 => &this_27(D)->_buf_states
  # DEBUG this => D#3321
  # DEBUG D#1006 => &D#3321->D.58587
  # DEBUG this => D#1006
  _1239 = MEM[(struct vector *)this_27(D) + 536B].D.58587._M_impl._M_finish;
  __first_1240 = MEM[(struct vector *)this_27(D) + 536B].D.58587._M_impl._M_start;
  # DEBUG __first => __first_1240
  # DEBUG __last => _1239
  # DEBUG __first => __first_1240
  if (_1239 == __first_1240)
    goto <bb 461>;
  else
    goto <bb 455>;

  <bb 455>:

  <bb 456>:
  # __first_1600 = PHI <__first_1240(455), __first_1243(459)>
  # DEBUG __first => __first_1600
  # DEBUG __r => __first_1600
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#998
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _1242 = MEM[(struct _Vector_base *)__first_1600]._M_impl._M_start;
  # DEBUG D#995 => (long int) _1242
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _1242
  # DEBUG __n => D#992
  if (_1242 != 0B)
    goto <bb 457>;
  else
    goto <bb 458>;

  <bb 457>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _1242
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _1242
  # DEBUG this => D#984
  # DEBUG D.159876 => D#985
  operator delete (_1242);

  <bb 458>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  MEM[(struct  &)__first_1600] ={v} {CLOBBER};
  __first_1243 = __first_1600 + 24;
  # DEBUG __first => __first_1243
  # DEBUG __first => __first_1243
  if (_1239 == __first_1243)
    goto <bb 460>;
  else
    goto <bb 459>;

  <bb 459>:
  goto <bb 456>;

  <bb 460>:
  pretmp_1046 = MEM[(struct _Vector_base *)this_27(D) + 536B]._M_impl._M_start;

  <bb 461>:
  # prephitmp_1047 = PHI <pretmp_1046(460), __first_1240(454)>
  # DEBUG D#1007 => &D#3321->D.58587
  # DEBUG this => D#1007
  # DEBUG D#804 => D#1007->_M_impl._M_end_of_storage
  # DEBUG D#803 => (long int) D#804
  # DEBUG D#3334 => MEM[(struct _Vector_base *)this_27(D) + 536B]._M_impl._M_start
  # DEBUG D#802 => (long int) D#3334
  # DEBUG D#801 => D#803 - D#802
  # DEBUG D#800 => D#801 /[ex] 24
  # DEBUG D#797 => D#1007
  # DEBUG D#798 => (long unsigned int) D#800
  # DEBUG __p => D#3334
  # DEBUG this => D#797
  # DEBUG __n => D#798
  # DEBUG D#796 => D#798
  # DEBUG D#795 => D#797
  if (prephitmp_1047 != 0B)
    goto <bb 462>;
  else
    goto <bb 463>;

  <bb 462>:
  # DEBUG D#794 => &D#795->_M_impl
  # DEBUG D#792 => D#794
  # DEBUG D#793 => D#796
  # DEBUG __p => D#3334
  # DEBUG __a => D#792
  # DEBUG __n => D#793
  # DEBUG D#791 => D#793
  # DEBUG D#790 => D#792
  # DEBUG D#788 => D#790
  # DEBUG D#789 => D#791
  # DEBUG __p => D#3334
  # DEBUG this => D#788
  # DEBUG D.159890 => D#789
  operator delete (prephitmp_1047);

  <bb 463>:
  # DEBUG D#799 => &D#1007->_M_impl
  # DEBUG this => D#799
  # DEBUG this => D#799
  # DEBUG this => D#799
  MEM[(struct  &)this_27(D) + 536] ={v} {CLOBBER};
  resx 20

<L131>:
  # DEBUG D#1941 => &this_27(D)->_injection_process
  # DEBUG this => D#1941
  # DEBUG D#782 => &D#1941->D.57828
  # DEBUG this => D#782
  # DEBUG D#785 => D#1941->D.57828._M_impl._M_finish
  # DEBUG D#784 => D#1941->D.57828._M_impl._M_start
  # DEBUG __first => D#784
  # DEBUG __last => D#785
  # DEBUG D.117129 => NULL
  # DEBUG D#442 => D#784
  # DEBUG D#443 => D#785
  # DEBUG __first => D#442
  # DEBUG __last => D#443
  # DEBUG D#441 => D#443
  # DEBUG D#440 => D#442
  # DEBUG D#438 => D#440
  # DEBUG D#439 => D#441
  # DEBUG D.114659 => D#438
  # DEBUG D.114658 => D#439
  # DEBUG D#783 => &D#1941->D.57828
  # DEBUG this => D#783
  # DEBUG D#781 => D#783->_M_impl._M_end_of_storage
  # DEBUG D#780 => (long int) D#781
  _281 = MEM[(struct _Vector_base *)this_27(D) + 504B]._M_impl._M_start;
  # DEBUG D#779 => (long int) _281
  # DEBUG D#778 => D#780 - D#779
  # DEBUG D#777 => D#778 /[ex] 8
  # DEBUG D#776 => (long unsigned int) D#777
  # DEBUG this => D#783
  # DEBUG __p => _281
  # DEBUG __n => D#776
  if (_281 != 0B)
    goto <bb 465>;
  else
    goto <bb 466>;

  <bb 465>:
  # DEBUG D#774 => &D#783->_M_impl
  # DEBUG D#772 => D#774
  # DEBUG D#773 => D#776
  # DEBUG __p => _281
  # DEBUG __a => D#772
  # DEBUG __n => D#773
  # DEBUG D#771 => D#773
  # DEBUG D#770 => D#772
  # DEBUG D#768 => D#770
  # DEBUG D#769 => D#771
  # DEBUG __p => _281
  # DEBUG this => D#768
  # DEBUG D.134312 => D#769
  operator delete (_281);

  <bb 466>:
  # DEBUG D#775 => &D#783->_M_impl
  # DEBUG this => D#775
  # DEBUG this => D#775
  # DEBUG this => D#775
  MEM[(struct  &)this_27(D) + 504] ={v} {CLOBBER};
  resx 19

<L132>:
  # DEBUG D#1940 => &this_27(D)->_traffic_pattern
  # DEBUG this => D#1940
  # DEBUG D#762 => &D#1940->D.57081
  # DEBUG this => D#762
  # DEBUG D#765 => D#1940->D.57081._M_impl._M_finish
  # DEBUG D#764 => D#1940->D.57081._M_impl._M_start
  # DEBUG __first => D#764
  # DEBUG __last => D#765
  # DEBUG D.117054 => NULL
  # DEBUG D#432 => D#764
  # DEBUG D#433 => D#765
  # DEBUG __first => D#432
  # DEBUG __last => D#433
  # DEBUG D#431 => D#433
  # DEBUG D#430 => D#432
  # DEBUG D#428 => D#430
  # DEBUG D#429 => D#431
  # DEBUG D.114615 => D#428
  # DEBUG D.114614 => D#429
  # DEBUG D#763 => &D#1940->D.57081
  # DEBUG this => D#763
  # DEBUG D#761 => D#763->_M_impl._M_end_of_storage
  # DEBUG D#760 => (long int) D#761
  _298 = MEM[(struct _Vector_base *)this_27(D) + 480B]._M_impl._M_start;
  # DEBUG D#759 => (long int) _298
  # DEBUG D#758 => D#760 - D#759
  # DEBUG D#757 => D#758 /[ex] 8
  # DEBUG D#756 => (long unsigned int) D#757
  # DEBUG this => D#763
  # DEBUG __p => _298
  # DEBUG __n => D#756
  if (_298 != 0B)
    goto <bb 468>;
  else
    goto <bb 469>;

  <bb 468>:
  # DEBUG D#754 => &D#763->_M_impl
  # DEBUG D#752 => D#754
  # DEBUG D#753 => D#756
  # DEBUG __p => _298
  # DEBUG __a => D#752
  # DEBUG __n => D#753
  # DEBUG D#751 => D#753
  # DEBUG D#750 => D#752
  # DEBUG D#748 => D#750
  # DEBUG D#749 => D#751
  # DEBUG __p => _298
  # DEBUG this => D#748
  # DEBUG D.134327 => D#749
  operator delete (_298);

  <bb 469>:
  # DEBUG D#755 => &D#763->_M_impl
  # DEBUG this => D#755
  # DEBUG this => D#755
  # DEBUG this => D#755
  MEM[(struct  &)this_27(D) + 480] ={v} {CLOBBER};
  resx 18

<L133>:
  _300 = &this_27(D)->_last_class;
  std::vector<std::vector<int> >::~vector (_300);
  resx 17

<L134>:
  # DEBUG D#1939 => &this_27(D)->_class_priority
  # DEBUG this => D#1939
  # DEBUG D#476 => &D#1939->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1939->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1939->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1939->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _299 = MEM[(struct _Vector_base *)this_27(D) + 432B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _299
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _299
  # DEBUG __n => D#470
  if (_299 != 0B)
    goto <bb 472>;
  else
    goto <bb 473>;

  <bb 472>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _299
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _299
  # DEBUG this => D#462
  # DEBUG D.134342 => D#463
  operator delete (_299);

  <bb 473>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 432] ={v} {CLOBBER};
  resx 16

<L135>:
  _303 = &this_27(D)->_traffic;
  std::vector<std::__cxx11::basic_string<char> >::~vector (_303);
  resx 15

<L136>:
  # DEBUG D#1938 => &this_27(D)->_write_reply_size
  # DEBUG this => D#1938
  # DEBUG D#476 => &D#1938->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1938->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1938->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1938->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _302 = MEM[(struct _Vector_base *)this_27(D) + 384B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _302
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _302
  # DEBUG __n => D#470
  if (_302 != 0B)
    goto <bb 476>;
  else
    goto <bb 477>;

  <bb 476>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _302
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _302
  # DEBUG this => D#462
  # DEBUG D.134357 => D#463
  operator delete (_302);

  <bb 477>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 384] ={v} {CLOBBER};
  resx 14

<L137>:
  # DEBUG D#1937 => &this_27(D)->_write_request_size
  # DEBUG this => D#1937
  # DEBUG D#476 => &D#1937->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1937->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1937->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1937->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _305 = MEM[(struct _Vector_base *)this_27(D) + 360B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _305
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _305
  # DEBUG __n => D#470
  if (_305 != 0B)
    goto <bb 479>;
  else
    goto <bb 480>;

  <bb 479>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _305
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _305
  # DEBUG this => D#462
  # DEBUG D.134372 => D#463
  operator delete (_305);

  <bb 480>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 360] ={v} {CLOBBER};
  resx 13

<L138>:
  # DEBUG D#1936 => &this_27(D)->_read_reply_size
  # DEBUG this => D#1936
  # DEBUG D#476 => &D#1936->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1936->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1936->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1936->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _306 = MEM[(struct _Vector_base *)this_27(D) + 336B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _306
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _306
  # DEBUG __n => D#470
  if (_306 != 0B)
    goto <bb 482>;
  else
    goto <bb 483>;

  <bb 482>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _306
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _306
  # DEBUG this => D#462
  # DEBUG D.134387 => D#463
  operator delete (_306);

  <bb 483>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 336] ={v} {CLOBBER};
  resx 12

<L139>:
  # DEBUG D#1935 => &this_27(D)->_read_request_size
  # DEBUG this => D#1935
  # DEBUG D#476 => &D#1935->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1935->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1935->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1935->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _307 = MEM[(struct _Vector_base *)this_27(D) + 312B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _307
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _307
  # DEBUG __n => D#470
  if (_307 != 0B)
    goto <bb 485>;
  else
    goto <bb 486>;

  <bb 485>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _307
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _307
  # DEBUG this => D#462
  # DEBUG D.134402 => D#463
  operator delete (_307);

  <bb 486>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 312] ={v} {CLOBBER};
  resx 11

<L140>:
  # DEBUG D#1934 => &this_27(D)->_write_fraction
  # DEBUG this => D#1934
  # DEBUG D#503 => &D#1934->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1934->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1934->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1934->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _308 = MEM[(struct _Vector_base *)this_27(D) + 288B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _308
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _308
  # DEBUG __n => D#497
  if (_308 != 0B)
    goto <bb 488>;
  else
    goto <bb 489>;

  <bb 488>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _308
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _308
  # DEBUG this => D#489
  # DEBUG D.134417 => D#490
  operator delete (_308);

  <bb 489>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 288] ={v} {CLOBBER};
  resx 10

<L141>:
  # DEBUG D#1933 => &this_27(D)->_use_read_write
  # DEBUG this => D#1933
  # DEBUG D#476 => &D#1933->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1933->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1933->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1933->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _309 = MEM[(struct _Vector_base *)this_27(D) + 264B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _309
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _309
  # DEBUG __n => D#470
  if (_309 != 0B)
    goto <bb 491>;
  else
    goto <bb 492>;

  <bb 491>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _309
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _309
  # DEBUG this => D#462
  # DEBUG D.134432 => D#463
  operator delete (_309);

  <bb 492>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 264] ={v} {CLOBBER};
  resx 9

<L142>:
  # DEBUG D#1932 => &this_27(D)->_load
  # DEBUG this => D#1932
  # DEBUG D#503 => &D#1932->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#1932->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#1932->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#1932->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _310 = MEM[(struct _Vector_base *)this_27(D) + 240B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _310
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _310
  # DEBUG __n => D#497
  if (_310 != 0B)
    goto <bb 494>;
  else
    goto <bb 495>;

  <bb 494>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _310
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _310
  # DEBUG this => D#489
  # DEBUG D.134447 => D#490
  operator delete (_310);

  <bb 495>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_27(D) + 240] ={v} {CLOBBER};
  resx 8

<L143>:
  # DEBUG D#3320 => &this_27(D)->_router
  # DEBUG this => D#3320
  # DEBUG D#736 => &D#3320->D.54835
  # DEBUG this => D#736
  _297 = MEM[(struct vector *)this_27(D) + 208B].D.54835._M_impl._M_finish;
  __first_1245 = MEM[(struct vector *)this_27(D) + 208B].D.54835._M_impl._M_start;
  # DEBUG __first => __first_1245
  # DEBUG __last => _297
  # DEBUG __first => __first_1245
  if (_297 == __first_1245)
    goto <bb 503>;
  else
    goto <bb 497>;

  <bb 497>:

  <bb 498>:
  # __first_1599 = PHI <__first_1245(497), __first_1248(501)>
  # DEBUG __first => __first_1599
  # DEBUG __r => __first_1599
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#599
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _1247 = MEM[(struct _Vector_base *)__first_1599]._M_impl._M_start;
  # DEBUG D#596 => (long int) _1247
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _1247
  # DEBUG __n => D#593
  if (_1247 != 0B)
    goto <bb 499>;
  else
    goto <bb 500>;

  <bb 499>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _1247
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _1247
  # DEBUG this => D#585
  # DEBUG D.159915 => D#586
  operator delete (_1247);

  <bb 500>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  MEM[(struct  &)__first_1599] ={v} {CLOBBER};
  __first_1248 = __first_1599 + 24;
  # DEBUG __first => __first_1248
  # DEBUG __first => __first_1248
  if (_297 == __first_1248)
    goto <bb 502>;
  else
    goto <bb 501>;

  <bb 501>:
  goto <bb 498>;

  <bb 502>:
  pretmp_1049 = MEM[(struct _Vector_base *)this_27(D) + 208B]._M_impl._M_start;

  <bb 503>:
  # prephitmp_1412 = PHI <pretmp_1049(502), __first_1245(496)>
  # DEBUG D#737 => &D#3320->D.54835
  # DEBUG this => D#737
  # DEBUG D#731 => D#737->_M_impl._M_end_of_storage
  # DEBUG D#730 => (long int) D#731
  # DEBUG D#3333 => MEM[(struct _Vector_base *)this_27(D) + 208B]._M_impl._M_start
  # DEBUG D#729 => (long int) D#3333
  # DEBUG D#728 => D#730 - D#729
  # DEBUG D#727 => D#728 /[ex] 24
  # DEBUG D#724 => D#737
  # DEBUG D#725 => (long unsigned int) D#727
  # DEBUG __p => D#3333
  # DEBUG this => D#724
  # DEBUG __n => D#725
  # DEBUG D#723 => D#725
  # DEBUG D#722 => D#724
  if (prephitmp_1412 != 0B)
    goto <bb 504>;
  else
    goto <bb 505>;

  <bb 504>:
  # DEBUG D#721 => &D#722->_M_impl
  # DEBUG D#719 => D#721
  # DEBUG D#720 => D#723
  # DEBUG __p => D#3333
  # DEBUG __a => D#719
  # DEBUG __n => D#720
  # DEBUG D#718 => D#720
  # DEBUG D#717 => D#719
  # DEBUG D#715 => D#717
  # DEBUG D#716 => D#718
  # DEBUG __p => D#3333
  # DEBUG this => D#715
  # DEBUG D.159929 => D#716
  operator delete (prephitmp_1412);

  <bb 505>:
  # DEBUG D#726 => &D#737->_M_impl
  # DEBUG this => D#726
  # DEBUG this => D#726
  # DEBUG this => D#726
  MEM[(struct  &)this_27(D) + 208] ={v} {CLOBBER};
  resx 7

<L144>:
  # DEBUG D#1931 => &this_27(D)->_net
  # DEBUG this => D#1931
  # DEBUG D#709 => &D#1931->D.54088
  # DEBUG this => D#709
  # DEBUG D#712 => D#1931->D.54088._M_impl._M_finish
  # DEBUG D#711 => D#1931->D.54088._M_impl._M_start
  # DEBUG D#415 => D#711
  # DEBUG D#416 => D#712
  # DEBUG __first => D#415
  # DEBUG __last => D#416
  # DEBUG D.116485 => D#417
  # DEBUG D#414 => D#416
  # DEBUG D#413 => D#415
  # DEBUG D#411 => D#413
  # DEBUG D#412 => D#414
  # DEBUG __first => D#411
  # DEBUG __last => D#412
  # DEBUG D#410 => D#412
  # DEBUG D#409 => D#411
  # DEBUG D#407 => D#409
  # DEBUG D#408 => D#410
  # DEBUG D.114527 => D#407
  # DEBUG D.114526 => D#408
  # DEBUG D#710 => &D#1931->D.54088
  # DEBUG this => D#710
  # DEBUG D#708 => D#710->_M_impl._M_end_of_storage
  # DEBUG D#707 => (long int) D#708
  _311 = MEM[(struct _Vector_base *)this_27(D) + 184B]._M_impl._M_start;
  # DEBUG D#706 => (long int) _311
  # DEBUG D#705 => D#707 - D#706
  # DEBUG D#704 => D#705 /[ex] 8
  # DEBUG D#701 => D#710
  # DEBUG D#702 => (long unsigned int) D#704
  # DEBUG __p => _311
  # DEBUG this => D#701
  # DEBUG __n => D#702
  # DEBUG D#700 => D#702
  # DEBUG D#699 => D#701
  if (_311 != 0B)
    goto <bb 507>;
  else
    goto <bb 508>;

  <bb 507>:
  # DEBUG D#698 => &D#699->_M_impl
  # DEBUG D#696 => D#698
  # DEBUG D#697 => D#700
  # DEBUG __p => _311
  # DEBUG __a => D#696
  # DEBUG __n => D#697
  # DEBUG D#695 => D#697
  # DEBUG D#694 => D#696
  # DEBUG D#692 => D#694
  # DEBUG D#693 => D#695
  # DEBUG __p => _311
  # DEBUG this => D#692
  # DEBUG D.134462 => D#693
  operator delete (_311);

  <bb 508>:
  # DEBUG D#703 => &D#710->_M_impl
  # DEBUG this => D#703
  # DEBUG this => D#703
  # DEBUG this => D#703
  MEM[(struct  &)this_27(D) + 184] ={v} {CLOBBER};
  resx 6

<L145>:
  # DEBUG D#1930 => &this_27(D)->_packet_size_max_val
  # DEBUG this => D#1930
  # DEBUG D#476 => &D#1930->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#1930->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#1930->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#1930->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _314 = MEM[(struct _Vector_base *)this_27(D) + 144B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _314
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _314
  # DEBUG __n => D#470
  if (_314 != 0B)
    goto <bb 510>;
  else
    goto <bb 511>;

  <bb 510>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _314
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _314
  # DEBUG this => D#462
  # DEBUG D.134477 => D#463
  operator delete (_314);

  <bb 511>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_27(D) + 144] ={v} {CLOBBER};
  resx 5

<L146>:
  _316 = &this_27(D)->_packet_size_rate;
  std::vector<std::vector<int> >::~vector (_316);
  resx 4

<L147>:
  _318 = &this_27(D)->_packet_size;
  std::vector<std::vector<int> >::~vector (_318);
  resx 3

<L148>:
  # DEBUG D#3319 => &this_27(D)->D.65070
  # DEBUG this => D#3319
  MEM[(struct Module *)this_27(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#661 => &D#3319->_children
  # DEBUG this => D#661
  # DEBUG D#655 => &D#661->D.39983
  # DEBUG this => D#655
  # DEBUG D#658 => D#661->D.39983._M_impl._M_finish
  # DEBUG D#657 => D#661->D.39983._M_impl._M_start
  # DEBUG D#384 => D#657
  # DEBUG D#385 => D#658
  # DEBUG __first => D#384
  # DEBUG __last => D#385
  # DEBUG D.116000 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#382 => D#384
  # DEBUG D#380 => D#382
  # DEBUG D#381 => D#383
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.114372 => D#376
  # DEBUG D.114371 => D#377
  # DEBUG D#656 => &D#661->D.39983
  # DEBUG this => D#656
  # DEBUG D#654 => D#656->_M_impl._M_end_of_storage
  # DEBUG D#653 => (long int) D#654
  _313 = MEM[(struct _Vector_base *)this_27(D) + 72B]._M_impl._M_start;
  # DEBUG D#652 => (long int) _313
  # DEBUG D#651 => D#653 - D#652
  # DEBUG D#650 => D#651 /[ex] 8
  # DEBUG D#647 => D#656
  # DEBUG D#648 => (long unsigned int) D#650
  # DEBUG __p => _313
  # DEBUG this => D#647
  # DEBUG __n => D#648
  # DEBUG D#646 => D#648
  # DEBUG D#645 => D#647
  if (_313 != 0B)
    goto <bb 515>;
  else
    goto <bb 516>;

  <bb 515>:
  # DEBUG D#644 => &D#645->_M_impl
  # DEBUG D#642 => D#644
  # DEBUG D#643 => D#646
  # DEBUG __p => _313
  # DEBUG __a => D#642
  # DEBUG __n => D#643
  # DEBUG D#641 => D#643
  # DEBUG D#640 => D#642
  # DEBUG D#638 => D#640
  # DEBUG D#639 => D#641
  # DEBUG __p => _313
  # DEBUG this => D#638
  # DEBUG D.159945 => D#639
  operator delete (_313);

  <bb 516>:
  # DEBUG D#649 => &D#656->_M_impl
  # DEBUG this => D#649
  # DEBUG this => D#649
  # DEBUG this => D#649
  MEM[(struct  &)this_27(D) + 72] ={v} {CLOBBER};
  # DEBUG D#660 => &D#3319->_fullname
  # DEBUG this => D#660
  # DEBUG this => D#660
  # DEBUG this => D#660
  _1250 = MEM[(char * *)this_27(D) + 40B];
  # DEBUG D#1 => D#660
  # DEBUG this => D#1
  # DEBUG this => D#660
  _1251 = &MEM[(const struct basic_string *)this_27(D) + 40B].D.11539._M_local_buf;
  if (_1250 != _1251)
    goto <bb 517>;
  else
    goto <bb 518>;

  <bb 517>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#660].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#660
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#660
  # DEBUG this => D#1
  # DEBUG this => D#660
  # DEBUG D#626 => &MEM[(struct basic_string *)D#660]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1250
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1250
  # DEBUG this => D#620
  # DEBUG D.159958 => D#621
  operator delete (_1250);

  <bb 518>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#660]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)this_27(D) + 40] ={v} {CLOBBER};
  # DEBUG D#659 => &D#3319->_name
  # DEBUG this => D#659
  # DEBUG this => D#659
  # DEBUG this => D#659
  _1252 = MEM[(char * *)this_27(D) + 8B];
  # DEBUG D#1 => D#659
  # DEBUG this => D#1
  # DEBUG this => D#659
  _1253 = &MEM[(const struct basic_string *)this_27(D) + 8B].D.11539._M_local_buf;
  if (_1252 != _1253)
    goto <bb 519>;
  else
    goto <bb 520>;

  <bb 519>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#659].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#659
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#659
  # DEBUG this => D#1
  # DEBUG this => D#659
  # DEBUG D#626 => &MEM[(struct basic_string *)D#659]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1252
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1252
  # DEBUG this => D#620
  # DEBUG D.159973 => D#621
  operator delete (_1252);

  <bb 520>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#659]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)this_27(D)] ={v} {CLOBBER};
  resx 2

}



;; Function std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi, funcdef_no=3470, decl_uid=43397, cgraph_uid=1718, symbol_order=1719)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>] (struct _Rb_tree * const this, const int & __v)
{
  struct _Rb_tree_node_base * SR.5056;
  struct _Rb_tree_node_base * SR.5055;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  bool __insert_left;
  struct iterator D.160216;
  struct pair D.160189;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct _Rb_tree_node_base * SR.3777;
  struct _Rb_tree_node_base * __res$second;
  struct _Rb_tree_node_base * __res$first;
  struct pair __res;
  struct iterator D.82739;
  struct pair D.100231;
  const int pretmp_15;
  struct _Rb_tree_node_base * _18;
  int prephitmp_20;
  const int _22;
  struct _Rb_tree_node_base * _24;
  struct _Rb_tree_node_base * _25;
  const int pretmp_26;
  struct _Rb_tree_node_base * _27;
  struct _Rb_tree_node_base * const _33;
  const int _36;
  const int _37;
  struct _Rb_tree_node * _38;
  int _40;
  long unsigned int _44;
  long unsigned int _45;
  const int prephitmp_47;
  const int _48;
  const int prephitmp_49;
  const int pretmp_51;
  int pretmp_72;

  <bb 2>:
  # DEBUG D#328 => &D.82682
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#328
  # DEBUG this => this_4(D)
  # DEBUG __k => __v_3(D)
  _18 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 16B];
  # DEBUG D#193 => this_4(D)
  # DEBUG this => D#193
  # DEBUG __x => NULL
  # DEBUG this => this_4(D)
  __j$_M_node_19 = &this_4(D)->_M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_19
  # DEBUG __x => _18
  if (_18 == 0B)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_51 = *__v_3(D);
  goto <bb 6>;

  <bb 4>:
  # _33 = PHI <_24(7), _25(8)>
  # DEBUG __comp => D#3363 < _22
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => _33
  if (_33 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __j$_M_node_59 = PHI <_18(3), _33(5)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_59
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG this => __j$_M_node_59
  # DEBUG D#1594 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_59]._M_value_field
  # DEBUG __r => D#1594
  # DEBUG __x => D#1594
  # DEBUG this => D#328
  # DEBUG D#1598 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#333 => D#1598
  # DEBUG D#3363 => *__v_3(D)
  # DEBUG D#334 => __v_3(D)
  _22 = MEM[(const int &)__j$_M_node_59 + 32];
  # DEBUG D#335 => D#1594
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  # DEBUG __comp => NULL
  if (_22 > pretmp_51)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _24 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 16B];
  # DEBUG D#257 => __j$_M_node_59
  # DEBUG __x => D#257
  goto <bb 4>;

  <bb 8>:
  _25 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 24B];
  # DEBUG D#256 => __j$_M_node_59
  # DEBUG __x => D#256
  goto <bb 4>;

  <bb 9>:
  # _48 = PHI <_22(4)>
  # __j$_M_node_23 = PHI <__j$_M_node_59(4)>

  <bb 19>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_23
  # DEBUG __j$_M_node => __j$_M_node_23
  if (_48 > pretmp_51)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  # __j$_M_node_73 = PHI <__j$_M_node_23(19), __j$_M_node_19(2)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_73
  # DEBUG __j$_M_node => __j$_M_node_73
  _27 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 24B];
  # DEBUG D#610 => this_4(D)
  # DEBUG this => D#610
  # DEBUG this => NULL
  # DEBUG __x => _27
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_27 == __j$_M_node_73)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 11>:
  # DEBUG this => &__j
  __j$_M_node_29 = std::_Rb_tree_decrement (__j$_M_node_73);
  # DEBUG __j$_M_node => __j$_M_node_29
  pretmp_15 = *__v_3(D);
  pretmp_26 = MEM[(const int &)__j$_M_node_29 + 32];

  <bb 12>:
  # __j$_M_node_30 = PHI <__j$_M_node_23(19), __j$_M_node_29(11)>
  # __j$_M_node_63 = PHI <__j$_M_node_23(19), __j$_M_node_73(11)>
  # prephitmp_47 = PHI <pretmp_51(19), pretmp_15(11)>
  # prephitmp_49 = PHI <_48(19), pretmp_26(11)>
  # DEBUG __j$_M_node => __j$_M_node_30
  # DEBUG __x => __j$_M_node_30
  # DEBUG __x => __j$_M_node_30
  # DEBUG this => __j$_M_node_30
  # DEBUG D#1595 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_30]._M_value_field
  # DEBUG __r => D#1595
  # DEBUG __x => D#1595
  # DEBUG this => D#328
  # DEBUG D#1597 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#333 => D#1597
  # DEBUG D#334 => D#1595
  # DEBUG D#335 => __v_3(D)
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (prephitmp_47 > prephitmp_49)
    goto <bb 13>;
  else
    goto <bb 17>;

  <bb 13>:
  # __res$second_52 = PHI <_27(10), __j$_M_node_63(12)>
  # DEBUG D#1596 => {CLOBBER}
  # DEBUG __j$_M_node => D#1596
  # DEBUG __res => 0B
  # DEBUG __res$8 => __res$second_52
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __res$second_52
  if (__res$second_52 != 0B)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  # DEBUG this => &__an
  # DEBUG __t => this_4(D)
  # DEBUG __an$_M_t => this_4(D)
  # DEBUG D#2333 => &__an
  # DEBUG this => this_4(D)
  # DEBUG __x => 0B
  # DEBUG __p => __res$second_52
  # DEBUG __v => __v_3(D)
  # DEBUG __node_gen => D#2333
  # DEBUG D#2332 => D#2333
  # DEBUG this => this_4(D)
  if (__j$_M_node_19 == __res$second_52)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __res$second_52
  # DEBUG __x => __res$second_52
  # DEBUG this => __res$second_52
  # DEBUG D#2330 => &MEM[(const struct _Rb_tree_node *)__res$second_52]._M_value_field
  # DEBUG __r => D#2330
  # DEBUG __x => D#2330
  # DEBUG this => D#328
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#328
  # DEBUG D#2331 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#333 => D#2331
  _36 = *__v_3(D);
  _37 = MEM[(const int &)__res$second_52 + 32];
  # DEBUG D#335 => D#2330
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  __insert_left_35 = _36 < _37;
  pretmp_72 = (int) __insert_left_35;

  <bb 16>:
  # prephitmp_20 = PHI <pretmp_72(15), 1(14)>
  # DEBUG __insert_left => NULL
  # DEBUG D#2329 => D#2332
  # DEBUG __arg => __v_3(D)
  # DEBUG this => D#2329
  # DEBUG D#2328 => D#2329
  # DEBUG D#2327 => D#2328->_M_t
  # DEBUG D#2326 => D#2327
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#2326
  # DEBUG D#2325 => D#2326
  # DEBUG D#2324 => D#2326
  # DEBUG D#2323 => D#2324
  # DEBUG this => D#2323
  # DEBUG D#2322 => D#2323
  # DEBUG this => D#2322
  # DEBUG __n => 1
  # DEBUG __a => D#2321
  # DEBUG D#2320 => D#2321
  # DEBUG D#2318 => D#2320
  # DEBUG D#2319 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#2318
  # DEBUG D.160206 => D#2319
  # DEBUG D#2317 => D#2318
  # DEBUG D#2316 => D#2317
  # DEBUG this => D#2316
  _38 = operator new (40);
  # DEBUG __tmp => _38
  # DEBUG D#1570 => D#2325
  # DEBUG __node => _38
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#1570
  # DEBUG D#1569 => D#1570
  # DEBUG this => _38
  # DEBUG D#3362 => &_38->_M_value_field
  # DEBUG __r => D#3362
  # DEBUG D#1154 => D#1569
  # DEBUG this => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG this => D#1153
  # DEBUG this => NULL
  # DEBUG D.121417 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#3362
  # DEBUG __val => __v_3(D)
  # DEBUG this => D#281
  # DEBUG D#20 => 4
  # DEBUG __p => D#3362
  # DEBUG D.113271 => D#20
  _40 = *__v_3(D);
  MEM[(int *)_38 + 32B] = _40;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _38
  std::_Rb_tree_insert_and_rebalance (prephitmp_20, _38, __res$second_52, __j$_M_node_19);
  _44 = this_4(D)->_M_impl._M_node_count;
  _45 = _44 + 1;
  this_4(D)->_M_impl._M_node_count = _45;
  # DEBUG this => NULL
  # DEBUG __x => _38
  # DEBUG this => &D.82741
  # DEBUG __a => &D.82739
  # DEBUG __b => &D.82740
  MEM[(struct pair *)&D.100231] = _38;
  MEM[(struct pair *)&D.100231 + 8B] = 1;
  D.82739 ={v} {CLOBBER};
  goto <bb 18>;

  <bb 17>:
  # __res$first_74 = PHI <0B(13), __j$_M_node_30(12)>

  <bb 21>:
  # DEBUG D#1596 => {CLOBBER}
  # DEBUG __j$_M_node => D#1596
  # DEBUG __res => __res$first_74
  # DEBUG __res$8 => NULL
  # DEBUG __res$first => __res$first_74
  # DEBUG __res$second => NULL
  # DEBUG this => &D.82751
  # DEBUG __x => __res$first_74
  # DEBUG this => &D.82753
  # DEBUG __a => &D.82751
  # DEBUG __b => &D.82752
  MEM[(struct pair *)&D.100231] = __res$first_74;
  MEM[(struct pair *)&D.100231 + 8B] = 0;

  <bb 18>:

  <bb 20>:
  # DEBUG D#2336 => {CLOBBER}
  # DEBUG __res$first => D#2336
  # DEBUG D#2337 => {CLOBBER}
  # DEBUG __res$second => D#2337
  return D.100231;

}



;; Function void TrafficManager::_LoadWatchList(const string&) (_ZN14TrafficManager14_LoadWatchListERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2491, decl_uid=65009, cgraph_uid=739, symbol_order=740)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void TrafficManager::_LoadWatchList(const string&) (struct TrafficManager * const this, const struct string & filename)
{
  struct basic_string & D.160309;
  char_type D.160269;
  char __c;
  char_type D.160266;
  char __c;
  char_type D.160263;
  struct basic_istream & D.160257;
  struct pair __p;
  struct pair __p;
  struct string line;
  struct ifstream watch_list;
  struct basic_string D.74792;
  const value_type D.74790;
  const value_type D.74788;
  int (*__vtbl_ptr_type) () * _7;
  const iostate _11;
  char * const _12;
  int _14;
  const struct __ctype_type * _15;
  char * const _16;
  long int _17;
  char _18;
  long int _19;
  char * const _22;
  int _25;
  const char * _26;
  const size_type _30;
  struct Module * _31;
  char * const _33;
  char * const _35;
  char * const _37;
  const void * pretmp_38;
  bool _43;
  int __a.580_44;
  int _45;
  int _47;
  struct _Rep_type * _48;
  struct _Rep_type * _49;
  struct __filebuf_type * _87;
  int (*__vtbl_ptr_type) () * _88;
  long int _89;
  sizetype _90;
  struct basic_ios * _91;
  int (*__vtbl_ptr_type) () * iftmp.572_93;
  long int _94;
  sizetype iftmp.573_95;
  struct basic_ios * _96;
  int (*__vtbl_ptr_type) () * iftmp.574_97;
  long int _98;
  sizetype iftmp.575_99;
  struct basic_ios * _100;
  long int _104;
  sizetype iftmp.577_105;
  struct basic_ios * _106;
  long int _107;
  sizetype _108;
  struct basic_ios * _109;
  const iostate _110;
  int __a.19_111;
  int _112;
  _Ios_Iostate _113;
  int (*__vtbl_ptr_type) () * _114;
  long int _115;
  sizetype _116;
  struct basic_ios * _117;
  char _121;
  char_type _124;
  int (*__vtbl_ptr_type) () * _129;
  int (*__vtbl_ptr_type) () _130;
  const void * prephitmp_132;
  void * PROF_134;
  char_type _136;
  const size_type _141;
  long unsigned int _142;
  const size_type _143;
  char * const _144;
  char * const _145;
  long unsigned int _146;
  long int _151;
  sizetype iftmp.577_152;
  struct basic_ios * _153;
  long int _158;
  sizetype iftmp.577_159;
  struct basic_ios * _160;
  int pretmp_164;
  int prephitmp_165;
  const void * prephitmp_168;
  const void * pretmp_196;
  int pretmp_206;

  <bb 2>:
  # DEBUG this => &watch_list
  # DEBUG D#15 => &watch_list.D.27501
  # DEBUG this => D#15
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&watch_list + 256B].D.19921);
  MEM[(struct basic_ios *)&watch_list + 256B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&watch_list + 256B]._M_tie = 0B;
  MEM[(struct basic_ios *)&watch_list + 256B]._M_fill = 0;
  MEM[(struct basic_ios *)&watch_list + 256B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&watch_list + 256B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&watch_list + 256B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&watch_list + 256B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&watch_list + 256B]._M_num_get = 0B;
  # DEBUG this => &watch_list.D.27498
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B]
  iftmp.572_93 = MEM[(const void * *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B];
  MEM[(struct basic_istream *)&watch_list]._vptr.basic_istream = iftmp.572_93;
  _94 = MEM[(long int *)iftmp.572_93 + -24B];
  iftmp.573_95 = (sizetype) _94;
  _96 = &watch_list.D.27498 + iftmp.573_95;
  iftmp.574_97 = MEM[(const void * *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 16B];
  _96->D.19921._vptr.ios_base = iftmp.574_97;
  MEM[(struct basic_istream *)&watch_list]._M_gcount = 0;
  _98 = MEM[(long int *)iftmp.572_93 + -24B];
  iftmp.575_99 = (sizetype) _98;
  _100 = &watch_list.D.27498 + iftmp.575_99;
  std::basic_ios<char>::init (_100, 0B);

  <bb 3>:
  watch_list.D.27498._vptr.basic_istream = &MEM[(void *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE + 24B];
  MEM[(struct basic_ios *)&watch_list + 256B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE + 64B];
  std::basic_filebuf<char>::basic_filebuf (&watch_list._M_filebuf);

  <bb 4>:
  std::basic_ios<char>::init (&MEM[(void *)&watch_list + 256B], &watch_list._M_filebuf.D.27407);
  goto <bb 12>;

<L18>:
  std::basic_filebuf<char>::~basic_filebuf (&watch_list._M_filebuf);
  resx 17

<L28>:
  goto <bb 8> (<L19>);

<L27>:

<L19>:
  # DEBUG this => &watch_list.D.27498
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B]
  _104 = MEM[(long int *)iftmp.572_93 + -24B];
  iftmp.577_105 = (sizetype) _104;
  _106 = &watch_list.D.27498 + iftmp.577_105;
  _106->D.19921._vptr.ios_base = iftmp.574_97;
  MEM[(struct  &)&watch_list] ={v} {CLOBBER};
  resx 15

<L29>:
  goto <bb 11> (<L20>);

<L26>:

<L20>:
  # DEBUG D#14 => &watch_list.D.27501
  # DEBUG this => D#14
  MEM[(struct basic_ios *)&watch_list + 256B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&watch_list + 256B].D.19921);
  resx 14

  <bb 12>:
  # DEBUG this => filename_8(D)
  _12 = MEM[(char * *)filename_8(D)];
  # DEBUG D#1 => filename_8(D)
  # DEBUG this => D#1
  # DEBUG this => &watch_list
  # DEBUG __s => _12
  # DEBUG __mode => 8
  # DEBUG __a => 8
  # DEBUG __b => 8
  _87 = std::basic_filebuf<char>::open (&watch_list._M_filebuf, _12, 8);

  <bb 13>:
  if (_87 == 0B)
    goto <bb 14>;
  else
    goto <bb 18>;

  <bb 14>:
  # DEBUG D#33 => _12
  # DEBUG D#34 => 8
  # DEBUG this => &watch_list
  # DEBUG D#35 => D#34
  # DEBUG __mode => D#35
  # DEBUG D#36 => D#33
  # DEBUG __s => D#36
  _7 = watch_list.D.27498._vptr.basic_istream;
  _107 = MEM[(long int *)_7 + -24B];
  _108 = (sizetype) _107;
  _109 = &watch_list + _108;
  # DEBUG this => _109
  # DEBUG __state => 4
  _110 = MEM[(_Ios_Iostate *)_109 + 32B];
  # DEBUG D#4 => _109
  # DEBUG this => D#4
  # DEBUG __a => _110
  # DEBUG __b => 4
  __a.19_111 = (int) _110;
  _112 = __a.19_111 | 4;
  _113 = (_Ios_Iostate) _112;
  std::basic_ios<char>::clear (_109, _113);
  goto <bb 16>;

<L31>:
  goto <bb 85> (<L16>);

  <bb 16>:
  # DEBUG this => &line
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG this => &line
  # DEBUG D#404 => &line._M_dataplus
  # DEBUG this => D#404
  # DEBUG __dat => &line.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#404
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&line]._M_p = &line.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &line
  # DEBUG __n => 0
  # DEBUG D#8 => &line
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&line + 8B] = 0;
  # DEBUG D#1 => &line
  # DEBUG this => D#1
  # DEBUG __c1 => &line.D.11539._M_local_buf
  # DEBUG __c2 => D#19
  MEM[(char_type &)&line + 16] = 0;
  # DEBUG this => &watch_list
  # DEBUG D#18 => &watch_list._M_filebuf
  # DEBUG this => D#18
  _43 = std::__basic_file<char>::is_open (&MEM[(const struct basic_filebuf *)&watch_list + 16B]._M_file);
  if (_43 != 0)
    goto <bb 17>;
  else
    goto <bb 47>;

  <bb 17>:
  goto <bb 21>;

  <bb 18>:
  _88 = watch_list.D.27498._vptr.basic_istream;
  _89 = MEM[(long int *)_88 + -24B];
  _90 = (sizetype) _89;
  _91 = &watch_list + _90;
  std::basic_ios<char>::clear (_91, 0);
  goto <bb 16>;

<L32>:
  goto <bb 85> (<L16>);

  <bb 20>:

  <bb 86>:

  <bb 21>:

  <bb 87>:

  <bb 22>:
  # DEBUG this => &watch_list.D.27501
  _11 = MEM[(_Ios_Iostate *)&watch_list + 288B];
  # DEBUG D#4 => &watch_list.D.27501
  # DEBUG this => D#4
  # DEBUG __a => _11
  # DEBUG __b => 2
  __a.580_44 = (int) _11;
  _45 = __a.580_44 & 2;
  if (_45 == 0)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  pretmp_196 = MEM[(const void * *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B];
  pretmp_38 = MEM[(const void * *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 16B];
  goto <bb 64>;

  <bb 24>:
  # DEBUG __is => &watch_list.D.27498
  # DEBUG __str => &line
  _114 = MEM[(struct basic_istream *)&watch_list]._vptr.basic_istream;
  _115 = MEM[(long int *)_114 + -24B];
  _116 = (sizetype) _115;
  _117 = &watch_list.D.27498 + _116;
  # DEBUG this => _117
  # DEBUG __c => 10
  _15 = MEM[(const struct basic_ios *)_117]._M_ctype;
  # DEBUG __f => _15
  if (_15 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  std::__throw_bad_cast ();

  <bb 26>:
  # DEBUG this => _15
  # DEBUG __c => 10
  _121 = MEM[(const struct ctype *)_15]._M_widen_ok;
  if (_121 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _124 = MEM[(const struct ctype *)_15]._M_widen[10];
  pretmp_206 = (int) _124;
  goto <bb 34>;

  <bb 28>:
  # DEBUG this => _15
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_15);
  goto <bb 30>;

<L34>:
  goto <bb 80> (<L15>);

  <bb 30>:
  _129 = MEM[(const struct ctype *)_15].D.16885._vptr.facet;
  _130 = MEM[(int (*__vtbl_ptr_type) () *)_129 + 48B];
  PROF_134 = [obj_type_ref] OBJ_TYPE_REF(_130;(const struct ctype)_15->6);
  if (PROF_134 == do_widen)
    goto <bb 34>;
  else
    goto <bb 31>;

  <bb 31>:
  _136 = OBJ_TYPE_REF(_130;(const struct ctype)_15->6) (_15, 10);
  goto <bb 33>;

<L35>:
  goto <bb 80> (<L15>);

  <bb 33>:
  pretmp_164 = (int) _136;

  <bb 34>:
  # prephitmp_165 = PHI <pretmp_206(27), 10(30), pretmp_164(33)>
  std::getline<char, std::char_traits<char>, std::allocator<char> > (&watch_list.D.27498, &line, prephitmp_165);
  goto <bb 36>;

<L36>:
  goto <bb 80> (<L15>);

  <bb 36>:
  # DEBUG __lhs => &line
  # DEBUG __rhs => ""
  # DEBUG __lhs => &line
  # DEBUG __rhs => ""
  _47 = std::__cxx11::basic_string<char>::compare (&line, "");
  goto <bb 38>;

<L37>:
  goto <bb 80> (<L15>);

  <bb 38>:
  if (_47 != 0)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:
  goto <bb 22>;

  <bb 40>:
  # DEBUG this => &line
  # DEBUG __pos => 0
  _16 = MEM[(char * *)&line];
  # DEBUG D#1 => &line
  # DEBUG this => D#1
  _18 = *_16;
  if (_18 == 112)
    goto <bb 41>;
  else
    goto <bb 44>;

  <bb 41>:
  # DEBUG this => &line
  # DEBUG D#1 => &line
  # DEBUG this => D#1
  _26 = _16 + 1;
  # DEBUG __nptr => _26
  _19 = strtol (_26, 0B, 10);
  _25 = (int) _19;
  D.74788 = _25;
  # DEBUG D#2339 => &this_21(D)->_packets_to_watch
  # DEBUG this => D#2339
  # DEBUG __x => &D.74788
  _48 = &MEM[(struct set *)this_21(D) + 2096B]._M_t;
  __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique (_48, &D.74788);
  goto <bb 43>;

<L38>:
  goto <bb 80> (<L15>);

  <bb 43>:
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#2342 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#2341 => MEM[(const bool &)&__p + 8]
  # DEBUG D#2340 => VIEW_CONVERT_EXPR<unsigned char>(D#2341)
  __p ={v} {CLOBBER};
  # DEBUG D.139590 => D#2342
  # DEBUG D.139591 => D#2340
  D.74788 ={v} {CLOBBER};
  goto <bb 20>;

  <bb 44>:
  # DEBUG this => &line
  # DEBUG D#1 => &line
  # DEBUG this => D#1
  # DEBUG __nptr => _16
  _17 = strtol (_16, 0B, 10);
  _14 = (int) _17;
  D.74790 = _14;
  # DEBUG D#2338 => &this_21(D)->_flits_to_watch
  # DEBUG this => D#2338
  # DEBUG __x => &D.74790
  _49 = &MEM[(struct set *)this_21(D) + 2048B]._M_t;
  __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique (_49, &D.74790);
  goto <bb 46>;

<L39>:
  goto <bb 80> (<L15>);

  <bb 46>:
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#2345 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#2344 => MEM[(const bool &)&__p + 8]
  # DEBUG D#2343 => VIEW_CONVERT_EXPR<unsigned char>(D#2344)
  __p ={v} {CLOBBER};
  # DEBUG D.139592 => D#2345
  # DEBUG D.139593 => D#2343
  D.74790 ={v} {CLOBBER};
  goto <bb 20>;

  <bb 47>:
  # DEBUG __lhs => "Unable to open flit watch file: "
  # DEBUG __rhs => filename_8(D)
  # DEBUG __s => "Unable to open flit watch file: "
  # DEBUG __len => NULL
  # DEBUG this => &D.74792
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG this => &D.74792
  # DEBUG D#404 => &D.74792._M_dataplus
  # DEBUG this => D#404
  # DEBUG __dat => &D.74792.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#404
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.74792]._M_p = &D.74792.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.74792
  # DEBUG __n => 0
  # DEBUG D#8 => &D.74792
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&D.74792 + 8B] = 0;
  # DEBUG D#1 => &D.74792
  # DEBUG this => D#1
  # DEBUG __c1 => &D.74792.D.11539._M_local_buf
  # DEBUG __c2 => D#19
  MEM[(char_type &)&D.74792 + 16] = 0;
  _141 = MEM[(long unsigned int *)filename_8(D) + 8B];
  # DEBUG D#3 => filename_8(D)
  # DEBUG this => D#3
  _142 = _141 + 32;
  std::__cxx11::basic_string<char>::reserve (&D.74792, _142);

  <bb 48>:
  # DEBUG this => &D.74792
  # DEBUG __s => "Unable to open flit watch file: "
  # DEBUG __n => 32
  # DEBUG this => &D.74792
  # DEBUG __n1 => 0
  # DEBUG __n2 => 32
  # DEBUG __s => "basic_string::append"
  # DEBUG D#1260 => &D.74792
  # DEBUG this => D#1260
  # DEBUG D#1259 => D#1260
  # DEBUG D#1258 => D#1260
  # DEBUG this => D#1258
  # DEBUG D#1257 => &D#1259->_M_dataplus
  # DEBUG D#1256 => D#1257
  # DEBUG __a => D#1256
  # DEBUG D#1255 => D#1256
  # DEBUG D#1254 => D#1255
  # DEBUG this => D#1254
  _30 = MEM[(long unsigned int *)&D.74792 + 8B];
  # DEBUG D#3 => &D.74792
  # DEBUG this => D#3
  _146 = 9223372036854775807 - _30;
  if (_146 <= 31)
    goto <bb 49>;
  else
    goto <bb 51>;

  <bb 49>:
  std::__throw_length_error ("basic_string::append");

<L41>:
  goto <bb 56> (<L21>);

  <bb 51>:
  std::__cxx11::basic_string<char>::_M_append (&D.74792, "Unable to open flit watch file: ", 32);
  goto <bb 53>;

<L42>:
  goto <bb 56> (<L21>);

  <bb 53>:
  # DEBUG this => &D.74792
  # DEBUG __str => filename_8(D)
  _143 = MEM[(long unsigned int *)filename_8(D) + 8B];
  # DEBUG D#3 => filename_8(D)
  # DEBUG this => D#3
  _144 = MEM[(char * *)filename_8(D)];
  # DEBUG D#1 => filename_8(D)
  # DEBUG this => D#1
  std::__cxx11::basic_string<char>::_M_append (&D.74792, _144, _143);
  goto <bb 60>;

<L43>:
  goto <bb 56> (<L21>);

<L40>:

<L21>:
  # DEBUG this => &D.74792
  # DEBUG this => &D.74792
  # DEBUG this => &D.74792
  _145 = MEM[(char * *)&D.74792];
  # DEBUG D#1 => &D.74792
  # DEBUG this => D#1
  # DEBUG this => &D.74792
  if (&D.74792.D.11539._M_local_buf != _145)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG D#629 => D.74792.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74792
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74792
  # DEBUG this => D#1
  # DEBUG this => &D.74792
  # DEBUG D#626 => &D.74792._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _145
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _145
  # DEBUG this => D#620
  # DEBUG D.160285 => D#621
  operator delete (_145);

  <bb 58>:
  # DEBUG D#630 => &D.74792._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  resx 18

<L44>:
  goto <bb 80> (<L15>);

  <bb 60>:
  _31 = &this_21(D)->D.65070;
  Module::Error (_31, &D.74792);

  <bb 61>:
  # DEBUG this => &D.74792
  # DEBUG this => &D.74792
  # DEBUG this => &D.74792
  _22 = MEM[(char * *)&D.74792];
  # DEBUG D#1 => &D.74792
  # DEBUG this => D#1
  # DEBUG this => &D.74792
  if (&D.74792.D.11539._M_local_buf != _22)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # DEBUG D#629 => D.74792.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74792
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74792
  # DEBUG this => D#1
  # DEBUG this => &D.74792
  # DEBUG D#626 => &D.74792._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _22
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _22
  # DEBUG this => D#620
  # DEBUG D.139538 => D#621
  operator delete (_22);

  <bb 63>:
  # DEBUG D#630 => &D.74792._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74792 ={v} {CLOBBER};

  <bb 64>:
  # prephitmp_132 = PHI <pretmp_196(23), iftmp.572_93(63)>
  # prephitmp_168 = PHI <pretmp_38(23), iftmp.574_97(63)>
  # DEBUG this => &line
  # DEBUG this => &line
  # DEBUG this => &line
  _33 = MEM[(char * *)&line];
  # DEBUG D#1 => &line
  # DEBUG this => D#1
  # DEBUG this => &line
  if (&line.D.11539._M_local_buf != _33)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  # DEBUG D#629 => line.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &line
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &line
  # DEBUG this => D#1
  # DEBUG this => &line
  # DEBUG D#626 => &line._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _33
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _33
  # DEBUG this => D#620
  # DEBUG D.139553 => D#621
  operator delete (_33);

  <bb 66>:
  # DEBUG D#630 => &line._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&line] ={v} {CLOBBER};
  # DEBUG this => &watch_list
  watch_list.D.27498._vptr.basic_istream = &MEM[(void *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE + 24B];
  MEM[(struct basic_ios *)&watch_list + 256B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE + 64B];
  # DEBUG this => &watch_list._M_filebuf
  MEM[(struct basic_filebuf *)&watch_list + 16B].D.27407._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt13basic_filebufIcSt11char_traitsIcEE + 16B];
  std::basic_filebuf<char>::close (&watch_list._M_filebuf);

  <bb 67>:
  std::__basic_file<char>::~__basic_file (&MEM[(struct basic_filebuf *)&watch_list + 16B]._M_file);

  <bb 68>:
  # DEBUG D#11 => &MEM[(struct basic_filebuf *)&watch_list + 16B].D.27407
  # DEBUG this => D#11
  MEM[(struct basic_streambuf *)&watch_list + 16B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&watch_list + 16B]._M_buf_locale);
  MEM[(struct  &)&watch_list + 16] ={v} {CLOBBER};
  # DEBUG this => &watch_list.D.27498
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B]
  _151 = MEM[(long int *)prephitmp_132 + -24B];
  iftmp.577_152 = (sizetype) _151;
  _153 = &watch_list.D.27498 + iftmp.577_152;
  _153->D.19921._vptr.ios_base = prephitmp_168;
  MEM[(struct  &)&watch_list] ={v} {CLOBBER};
  # DEBUG D#17 => &watch_list.D.27501
  # DEBUG this => D#17
  MEM[(struct basic_ios *)&watch_list + 256B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&watch_list + 256B].D.19921);
  watch_list ={v} {CLOBBER};
  line ={v} {CLOBBER};
  return;

<L24>:
  std::__basic_file<char>::~__basic_file (&MEM[(struct basic_filebuf *)&watch_list + 16B]._M_file);
  resx 24

<L46>:
  goto <bb 72> (<L25>);

<L45>:

<L25>:
  # DEBUG D#12 => &MEM[(struct basic_filebuf *)&watch_list + 16B].D.27407
  # DEBUG this => D#12
  MEM[(struct basic_streambuf *)&watch_list + 16B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&watch_list + 16B]._M_buf_locale);
  MEM[(struct  &)&watch_list + 16] ={v} {CLOBBER};
  resx 22

<L22>:
  # DEBUG this => &watch_list.D.27498
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE + 8B]
  _158 = MEM[(long int *)prephitmp_132 + -24B];
  iftmp.577_159 = (sizetype) _158;
  _160 = &watch_list.D.27498 + iftmp.577_159;
  _160->D.19921._vptr.ios_base = prephitmp_168;
  MEM[(struct  &)&watch_list] ={v} {CLOBBER};
  resx 21

<L23>:
  # DEBUG D#16 => &watch_list.D.27501
  # DEBUG this => D#16
  MEM[(struct basic_ios *)&watch_list + 256B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&watch_list + 256B].D.19921);
  resx 20

<L14>:
  # DEBUG this => &D.74792
  # DEBUG this => &D.74792
  # DEBUG this => &D.74792
  _37 = MEM[(char * *)&D.74792];
  # DEBUG D#1 => &D.74792
  # DEBUG this => D#1
  # DEBUG this => &D.74792
  if (&D.74792.D.11539._M_local_buf != _37)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  # DEBUG D#629 => D.74792.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74792
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74792
  # DEBUG this => D#1
  # DEBUG this => &D.74792
  # DEBUG D#626 => &D.74792._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _37
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _37
  # DEBUG this => D#620
  # DEBUG D.139568 => D#621
  operator delete (_37);

  <bb 77>:
  # DEBUG D#630 => &D.74792._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74792 ={v} {CLOBBER};
  resx 8

<L47>:
  goto <bb 80> (<L15>);

<L33>:

<L15>:
  D.74790 ={v} {CLOBBER};
  D.74788 ={v} {CLOBBER};
  # DEBUG this => &line
  # DEBUG this => &line
  # DEBUG this => &line
  _35 = MEM[(char * *)&line];
  # DEBUG D#1 => &line
  # DEBUG this => D#1
  # DEBUG this => &line
  if (&line.D.11539._M_local_buf != _35)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  # DEBUG D#629 => line.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &line
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &line
  # DEBUG this => D#1
  # DEBUG this => &line
  # DEBUG D#626 => &line._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _35
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _35
  # DEBUG this => D#620
  # DEBUG D.139583 => D#621
  operator delete (_35);

  <bb 82>:
  # DEBUG D#630 => &line._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&line] ={v} {CLOBBER};
  resx 3

<L48>:
  goto <bb 85> (<L16>);

<L30>:

<L16>:
  std::basic_ifstream<char>::~basic_ifstream (&watch_list);
  resx 2

}



;; Function std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const _Key&) [with _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type = long unsigned int] (_ZNSt8_Rb_treeIiSt4pairIKiP4FlitESt10_Select1stIS4_ESt4lessIiESaIS4_EE5eraseERS1_, funcdef_no=3502, decl_uid=72031, cgraph_uid=1750, symbol_order=1751)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const _Key&) [with _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type = long unsigned int] (struct _Rb_tree * const this, const int & __x)
{
  struct _Rb_tree_node_base * SR.5064;
  struct _Rb_tree_node_base * SR.5063;
  struct _Rb_tree_node_base * const __p$8;
  struct _Rb_tree_node_base * const __p;
  struct _Rb_tree_node * __y;
  struct const_iterator __position;
  struct pair D.160417;
  struct _Rb_tree_node * __x;
  struct const_iterator __position;
  const struct _Rb_tree_node_base * const __first$_M_node;
  const struct _Rb_tree_node_base * const __last$_M_node;
  struct const_iterator __first;
  struct const_iterator __last;
  struct _Rb_tree_node_base * const __last$_M_node;
  struct _Rb_tree_node_base * const __first$_M_node;
  struct const_iterator D.134615;
  struct const_iterator D.134614;
  struct pair __p;
  const size_type _7;
  struct _Rb_tree_node_base * _18;
  bool _19;
  const int _26;
  bool prephitmp_32;
  const int _33;
  const int _37;
  size_type prephitmp_40;
  const int pretmp_41;
  long unsigned int _42;
  bool _53;
  long unsigned int _55;
  long unsigned int _56;
  size_type pretmp_57;
  bool pretmp_65;
  bool pretmp_77;
  bool prephitmp_96;

  <bb 2>:
  # DEBUG this => this_2(D)
  # DEBUG __k => __x_3(D)
  __p_13 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 16B];
  # DEBUG D#214 => this_2(D)
  # DEBUG this => D#214
  # DEBUG __x => NULL
  # DEBUG this => this_2(D)
  __p_24 = &this_2(D)->_M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __y => __p_24
  # DEBUG __x => __p_13
  if (__p_13 == 0B)
    goto <bb 28>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_41 = *__x_3(D);
  goto <bb 7>;

  <bb 4>:
  # __p_50 = PHI <__p_28(8), __p_29(10)>
  # __p_49 = PHI <__p_80(8), __p_68(10)>
  # DEBUG __y => __p_49
  # DEBUG __x => __p_50
  if (__p_50 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # __p_51 = PHI <__p_49(4)>
  pretmp_77 = __p_24 == __p_51;
  goto <bb 28>;

  <bb 6>:

  <bb 7>:
  # __p_68 = PHI <__p_13(3), __p_50(6)>
  # __p_80 = PHI <__p_24(3), __p_49(6)>
  # DEBUG __y => __p_80
  # DEBUG __x => __p_68
  # DEBUG __x => __p_68
  # DEBUG __x => __p_68
  # DEBUG this => __p_68
  # DEBUG D#1100 => &MEM[(const struct _Rb_tree_node *)__p_68]._M_value_field
  # DEBUG __r => D#1100
  # DEBUG __x => D#1100
  # DEBUG this => D#353
  # DEBUG D#1118 => &MEM[(const struct pair &)__p_68 + 32].first
  # DEBUG D#1121 => &this_2(D)->_M_impl._M_key_compare
  # DEBUG D#333 => D#1121
  _26 = MEM[(const int &)__p_68 + 32];
  # DEBUG D#334 => D#1118
  # DEBUG D#335 => __x_3(D)
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (_26 < pretmp_41)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __p_28 = MEM[(struct _Rb_tree_node_base * *)__p_68 + 24B];
  # DEBUG D#314 => __p_68
  # DEBUG __x => D#314
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 9>:
  # DEBUG __x => __p_68
  # DEBUG __x => __p_68
  # DEBUG this => __p_68
  # DEBUG D#1100 => &MEM[(const struct _Rb_tree_node *)__p_68]._M_value_field
  # DEBUG __r => D#1100
  # DEBUG __x => D#1100
  # DEBUG this => D#353
  # DEBUG D#1119 => &MEM[(const struct pair &)__p_68 + 32].first
  # DEBUG D#1120 => &this_2(D)->_M_impl._M_key_compare
  # DEBUG D#333 => D#1120
  # DEBUG D#334 => __x_3(D)
  # DEBUG D#335 => D#1119
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (_26 > pretmp_41)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG __y => __p_68
  __p_29 = MEM[(struct _Rb_tree_node_base * *)__p_68 + 16B];
  # DEBUG D#315 => __p_68
  # DEBUG __x => D#315
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 11>:
  # __p_25 = PHI <__p_68(9)>
  # __p_21 = PHI <__p_80(9)>
  # DEBUG __xu => __p_25
  # DEBUG __yu => __p_21
  # DEBUG __y => __p_25
  __p_30 = MEM[(struct _Rb_tree_node_base * *)__p_25 + 16B];
  # DEBUG D#315 => __p_25
  # DEBUG __x => D#315
  # DEBUG __x => NULL
  __p_31 = MEM[(struct _Rb_tree_node_base * *)__p_25 + 24B];
  # DEBUG D#314 => __p_25
  # DEBUG __x => D#314
  # DEBUG __xu => NULL
  # DEBUG D#1113 => this_2(D)
  # DEBUG __x => NULL
  # DEBUG __y => __p_21
  # DEBUG __k => __x_3(D)
  # DEBUG __y => __p_21
  # DEBUG __x => __p_31
  if (__p_31 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 12>:
  # __p_46 = PHI <__p_34(18), __p_35(19)>
  # __p_45 = PHI <__p_20(18), __p_81(19)>
  # DEBUG __y => __p_45
  # DEBUG __x => __p_46
  if (__p_46 == 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # __p_58 = PHI <__p_45(12)>

  <bb 39>:
  goto <bb 15>;

  <bb 14>:
  goto <bb 17>;

  <bb 15>:
  # __p_86 = PHI <__p_58(39), __p_21(11)>
  # DEBUG __y => __p_25
  # DEBUG __x => __p_30
  if (__p_30 == 0B)
    goto <bb 27>;
  else
    goto <bb 23>;

  <bb 16>:

  <bb 17>:
  # __p_20 = PHI <__p_31(16), __p_46(14)>
  # __p_81 = PHI <__p_21(16), __p_45(14)>
  # DEBUG __y => __p_81
  # DEBUG __x => __p_20
  # DEBUG __x => __p_20
  # DEBUG __x => __p_20
  # DEBUG this => __p_20
  # DEBUG D#1100 => &MEM[(const struct _Rb_tree_node *)__p_20]._M_value_field
  # DEBUG __r => D#1100
  # DEBUG __x => D#1100
  # DEBUG this => D#353
  # DEBUG D#1110 => &MEM[(const struct pair &)__p_20 + 32].first
  # DEBUG D#1111 => &D#1112->_M_impl._M_key_compare
  # DEBUG D#333 => D#1111
  # DEBUG D#334 => __x_3(D)
  _33 = MEM[(const int &)__p_20 + 32];
  # DEBUG D#335 => D#1110
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (_33 > pretmp_41)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG __y => __p_20
  __p_34 = MEM[(struct _Rb_tree_node_base * *)__p_20 + 16B];
  # DEBUG D#315 => __p_20
  # DEBUG __x => D#315
  # DEBUG __x => NULL
  goto <bb 12>;

  <bb 19>:
  __p_35 = MEM[(struct _Rb_tree_node_base * *)__p_20 + 24B];
  # DEBUG D#314 => __p_20
  # DEBUG __x => D#314
  # DEBUG __x => NULL
  goto <bb 12>;

  <bb 20>:
  # __p_44 = PHI <__p_38(25), __p_39(26)>
  # __p_43 = PHI <__p_23(25), __p_48(26)>
  # DEBUG __y => __p_43
  # DEBUG __x => __p_44
  if (__p_44 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # __p_60 = PHI <__p_43(20)>

  <bb 38>:
  goto <bb 27>;

  <bb 22>:
  goto <bb 24>;

  <bb 23>:

  <bb 24>:
  # __p_23 = PHI <__p_30(23), __p_44(22)>
  # __p_48 = PHI <__p_25(23), __p_43(22)>
  # DEBUG __y => __p_48
  # DEBUG __x => __p_23
  # DEBUG __x => __p_23
  # DEBUG __x => __p_23
  # DEBUG this => __p_23
  # DEBUG D#1100 => &MEM[(const struct _Rb_tree_node *)__p_23]._M_value_field
  # DEBUG __r => D#1100
  # DEBUG __x => D#1100
  # DEBUG this => D#353
  # DEBUG D#1114 => &MEM[(const struct pair &)__p_23 + 32].first
  # DEBUG D#1115 => &D#1116->_M_impl._M_key_compare
  # DEBUG D#333 => D#1115
  _37 = MEM[(const int &)__p_23 + 32];
  # DEBUG D#334 => D#1114
  # DEBUG D#335 => __x_3(D)
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (_37 >= pretmp_41)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG __y => __p_23
  __p_38 = MEM[(struct _Rb_tree_node_base * *)__p_23 + 16B];
  # DEBUG D#315 => __p_23
  # DEBUG __x => D#315
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 26>:
  __p_39 = MEM[(struct _Rb_tree_node_base * *)__p_23 + 24B];
  # DEBUG D#314 => __p_23
  # DEBUG __x => D#314
  # DEBUG __x => NULL
  goto <bb 20>;

  <bb 27>:
  # __p_87 = PHI <__p_60(38), __p_25(15)>

  <bb 40>:
  # DEBUG this => NULL
  # DEBUG __x => __p_87
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => NULL
  pretmp_65 = __p_24 == __p_86;
  goto <bb 29>;

  <bb 28>:
  # __p_82 = PHI <__p_51(5), __p_24(2)>
  # prephitmp_32 = PHI <pretmp_77(5), 1(2)>

  <bb 41>:
  # DEBUG this => NULL
  # DEBUG __x => __p_82
  # DEBUG this => NULL
  # DEBUG __x => __p_82
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => NULL

  <bb 29>:
  # __p_6 = PHI <__p_87(40), __p_82(41)>
  # __p$8_64 = PHI <__p_86(40), __p_82(41)>
  # prephitmp_96 = PHI <pretmp_65(40), prephitmp_32(41)>
  # DEBUG __p => __p_6
  # DEBUG __p$8 => __p$8_64
  _7 = MEM[(long unsigned int *)this_2(D) + 40B];
  # DEBUG D#229 => this_2(D)
  # DEBUG this => D#229
  # DEBUG __old_size => NULL
  # DEBUG this => this_2(D)
  # DEBUG __first$_M_node => __p_6
  # DEBUG __last$_M_node => __p$8_64
  # DEBUG this => &D.134615
  # DEBUG __it => &__last
  # DEBUG this => &D.134614
  # DEBUG __it => &__first
  # DEBUG this => this_2(D)
  # DEBUG __first$_M_node => __p_6
  # DEBUG __last$_M_node => __p$8_64
  _18 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 24B];
  # DEBUG D#339 => this_2(D)
  # DEBUG this => D#339
  # DEBUG this => NULL
  # DEBUG __x => _18
  # DEBUG this => NULL
  # DEBUG __it => NULL
  # DEBUG this => &__first
  # DEBUG __x => NULL
  # DEBUG this => this_2(D)
  # DEBUG this => NULL
  # DEBUG __x => __p_24
  # DEBUG this => NULL
  # DEBUG __it => NULL
  # DEBUG this => &__last
  # DEBUG __x => NULL
  _19 = __p_6 == _18;
  _53 = _19 & prephitmp_96;
  if (_53 != 0)
    goto <bb 36>;
  else
    goto <bb 30>;

  <bb 30>:
  # DEBUG __first$_M_node => __p_6
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (__p_6 != __p$8_64)
    goto <bb 31>;
  else
    goto <bb 35>;

  <bb 31>:

  <bb 32>:
  # __p_67 = PHI <__p_6(31), __p_22(33)>
  # DEBUG __first$_M_node => __p_67
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG D#1132 => 0
  # DEBUG this => &__first
  # DEBUG D.160380 => D#1132
  # DEBUG __tmp$_M_node => __p_67
  __p_22 = std::_Rb_tree_increment (__p_67);
  # DEBUG __first$_M_node => __p_22
  # DEBUG D#1131 => {CLOBBER}
  # DEBUG __tmp$_M_node => D#1131
  # DEBUG this => this_2(D)
  # DEBUG this => this_2(D)
  __y_54 = std::_Rb_tree_rebalance_for_erase (__p_67, __p_24);
  # DEBUG __y => __y_54
  # DEBUG D#1911 => this_2(D)
  # DEBUG __p => __y_54
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __y_54
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __y_54
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __y_54
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __y_54
  # DEBUG this => D#1529
  # DEBUG D.160477 => D#1530
  operator delete (__y_54);
  _55 = this_2(D)->_M_impl._M_node_count;
  _56 = _55 + 18446744073709551615;
  this_2(D)->_M_impl._M_node_count = _56;
  # DEBUG __first$_M_node => __p_22
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (__p_22 != __p$8_64)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # _42 = PHI <_56(32)>

  <bb 37>:
  pretmp_57 = _7 - _42;

  <bb 35>:
  # prephitmp_40 = PHI <pretmp_57(37), _7(36), 0(30)>
  D.134614 ={v} {CLOBBER};
  D.134615 ={v} {CLOBBER};
  # DEBUG D#229 => this_2(D)
  # DEBUG this => D#229
  # DEBUG D#3369 => {CLOBBER}
  # DEBUG __p => D#3369
  # DEBUG D#3370 => {CLOBBER}
  # DEBUG __p$8 => D#3370
  return prephitmp_40;

  <bb 36>:
  # DEBUG this => this_2(D)
  # DEBUG this => this_2(D)
  # DEBUG D#214 => this_2(D)
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (this_2(D), __p_13);
  # DEBUG D#2042 => &this_2(D)->_M_impl
  # DEBUG this => D#2042
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_header._M_left = __p_24;
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_header._M_right = __p_24;
  MEM[(struct _Rb_tree_impl *)this_2(D)]._M_node_count = 0;
  goto <bb 35>;

}



;; Function std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >] (_ZNSt8_Rb_treeIiSt4pairIKiP4FlitESt10_Select1stIS4_ESt4lessIiESaIS4_EE16_M_insert_uniqueERKS4_, funcdef_no=3512, decl_uid=71958, cgraph_uid=1760, symbol_order=1761)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >] (struct _Rb_tree * const this, const struct pair & __v)
{
  struct _Rb_tree_node_base * SR.5070;
  struct _Rb_tree_node_base * SR.5069;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  bool __insert_left;
  struct iterator D.160544;
  struct pair D.160517;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct _Rb_tree_node_base * SR.3887;
  struct _Rb_tree_node_base * __res$second;
  struct _Rb_tree_node_base * __res$first;
  struct pair __res;
  struct iterator D.82963;
  struct pair D.103404;
  const int pretmp_16;
  struct _Rb_tree_node_base * _19;
  int prephitmp_21;
  const int _23;
  struct _Rb_tree_node_base * _25;
  struct _Rb_tree_node_base * _26;
  const int pretmp_27;
  struct _Rb_tree_node_base * _28;
  struct _Rb_tree_node_base * const _34;
  const int _37;
  const int _38;
  struct _Rb_tree_node * _39;
  long unsigned int _44;
  long unsigned int _45;
  const int prephitmp_47;
  const int _48;
  const int prephitmp_49;
  const int pretmp_51;
  int pretmp_71;

  <bb 2>:
  # DEBUG D#353 => &D.82924
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#353
  # DEBUG D#3373 => &__v_3(D)->first
  # DEBUG this => this_5(D)
  # DEBUG __k => D#3373
  _19 = MEM[(struct _Rb_tree_node_base * *)this_5(D) + 16B];
  # DEBUG D#214 => this_5(D)
  # DEBUG this => D#214
  # DEBUG __x => NULL
  # DEBUG this => this_5(D)
  __j$_M_node_20 = &this_5(D)->_M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_20
  # DEBUG __x => _19
  if (_19 == 0B)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_51 = MEM[(const int &)__v_3(D)];
  goto <bb 6>;

  <bb 4>:
  # _34 = PHI <_25(7), _26(8)>
  # DEBUG __comp => D#3375 < _23
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => _34
  if (_34 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __j$_M_node_59 = PHI <_19(3), _34(5)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_59
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG this => __j$_M_node_59
  # DEBUG D#1100 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_59]._M_value_field
  # DEBUG __r => D#1100
  # DEBUG __x => D#1100
  # DEBUG this => D#353
  # DEBUG D#1126 => &MEM[(const struct pair &)__j$_M_node_59 + 32].first
  # DEBUG D#1130 => &this_5(D)->_M_impl._M_key_compare
  # DEBUG D#333 => D#1130
  # DEBUG D#3375 => MEM[(const int &)__v_3(D)]
  # DEBUG D#334 => D#3373
  _23 = MEM[(const int &)__j$_M_node_59 + 32];
  # DEBUG D#335 => D#1126
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  # DEBUG __comp => NULL
  if (_23 > pretmp_51)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _25 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 16B];
  # DEBUG D#315 => __j$_M_node_59
  # DEBUG __x => D#315
  goto <bb 4>;

  <bb 8>:
  _26 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 24B];
  # DEBUG D#314 => __j$_M_node_59
  # DEBUG __x => D#314
  goto <bb 4>;

  <bb 9>:
  # _48 = PHI <_23(4)>
  # __j$_M_node_24 = PHI <__j$_M_node_59(4)>

  <bb 19>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_24
  # DEBUG __j$_M_node => __j$_M_node_24
  if (_48 > pretmp_51)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  # __j$_M_node_72 = PHI <__j$_M_node_24(19), __j$_M_node_20(2)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_72
  # DEBUG __j$_M_node => __j$_M_node_72
  _28 = MEM[(struct _Rb_tree_node_base * *)this_5(D) + 24B];
  # DEBUG D#339 => this_5(D)
  # DEBUG this => D#339
  # DEBUG this => NULL
  # DEBUG __x => _28
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_28 == __j$_M_node_72)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 11>:
  # DEBUG this => &__j
  __j$_M_node_30 = std::_Rb_tree_decrement (__j$_M_node_72);
  # DEBUG __j$_M_node => __j$_M_node_30
  pretmp_16 = MEM[(const int &)__v_3(D)];
  pretmp_27 = MEM[(const int &)__j$_M_node_30 + 32];

  <bb 12>:
  # __j$_M_node_31 = PHI <__j$_M_node_24(19), __j$_M_node_30(11)>
  # __j$_M_node_62 = PHI <__j$_M_node_24(19), __j$_M_node_72(11)>
  # prephitmp_47 = PHI <pretmp_51(19), pretmp_16(11)>
  # prephitmp_49 = PHI <_48(19), pretmp_27(11)>
  # DEBUG __j$_M_node => __j$_M_node_31
  # DEBUG __x => __j$_M_node_31
  # DEBUG __x => __j$_M_node_31
  # DEBUG this => __j$_M_node_31
  # DEBUG D#615 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_31]._M_value_field
  # DEBUG __r => D#615
  # DEBUG __x => D#615
  # DEBUG this => D#353
  # DEBUG D#1127 => &MEM[(const struct pair &)__j$_M_node_31 + 32].first
  # DEBUG D#1129 => &this_5(D)->_M_impl._M_key_compare
  # DEBUG D#333 => D#1129
  # DEBUG D#334 => D#1127
  # DEBUG D#335 => D#3373
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (prephitmp_47 > prephitmp_49)
    goto <bb 13>;
  else
    goto <bb 17>;

  <bb 13>:
  # __res$second_52 = PHI <_28(10), __j$_M_node_62(12)>
  # DEBUG D#1128 => {CLOBBER}
  # DEBUG __j$_M_node => D#1128
  # DEBUG __res => 0B
  # DEBUG __res$8 => __res$second_52
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __res$second_52
  if (__res$second_52 != 0B)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  # DEBUG this => &__an
  # DEBUG __t => this_5(D)
  # DEBUG __an$_M_t => this_5(D)
  # DEBUG D#2427 => &__an
  # DEBUG this => this_5(D)
  # DEBUG __x => 0B
  # DEBUG __p => __res$second_52
  # DEBUG __v => __v_3(D)
  # DEBUG __node_gen => D#2427
  # DEBUG D#2426 => D#2427
  # DEBUG this => this_5(D)
  if (__j$_M_node_20 == __res$second_52)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __res$second_52
  # DEBUG __x => __res$second_52
  # DEBUG this => __res$second_52
  # DEBUG D#615 => &MEM[(const struct _Rb_tree_node *)__res$second_52]._M_value_field
  # DEBUG __r => D#615
  # DEBUG __x => D#615
  # DEBUG this => D#353
  # DEBUG D#2424 => &MEM[(const struct pair &)__res$second_52 + 32].first
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#353
  # DEBUG D#2425 => &this_5(D)->_M_impl._M_key_compare
  # DEBUG D#333 => D#2425
  _37 = MEM[(const int &)__v_3(D)];
  _38 = MEM[(const int &)__res$second_52 + 32];
  # DEBUG D#335 => D#2424
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  __insert_left_35 = _37 < _38;
  pretmp_71 = (int) __insert_left_35;

  <bb 16>:
  # prephitmp_21 = PHI <pretmp_71(15), 1(14)>
  # DEBUG __insert_left => NULL
  # DEBUG D#2405 => D#2426
  # DEBUG __arg => __v_3(D)
  # DEBUG this => D#2405
  # DEBUG D#2404 => D#2405
  # DEBUG D#2403 => D#2404->_M_t
  # DEBUG D#2402 => D#2403
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#2402
  # DEBUG D#2401 => D#2402
  # DEBUG D#2400 => D#2402
  # DEBUG D#2399 => D#2400
  # DEBUG this => D#2399
  # DEBUG D#2398 => D#2399
  # DEBUG this => D#2398
  # DEBUG __n => 1
  # DEBUG __a => D#2397
  # DEBUG D#2396 => D#2397
  # DEBUG D#2394 => D#2396
  # DEBUG D#2395 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#2394
  # DEBUG D.160534 => D#2395
  # DEBUG D#2393 => D#2394
  # DEBUG D#2392 => D#2393
  # DEBUG this => D#2392
  _39 = operator new (48);
  # DEBUG __tmp => _39
  # DEBUG D#2149 => D#2401
  # DEBUG __node => _39
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#2149
  # DEBUG D#2148 => D#2149
  # DEBUG this => _39
  # DEBUG D#3374 => &_39->_M_value_field
  # DEBUG __r => D#3374
  # DEBUG D#1901 => D#2148
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#3374
  # DEBUG __val => __v_3(D)
  # DEBUG this => D#2147
  # DEBUG D#20 => 16
  # DEBUG __p => D#3374
  # DEBUG D.135975 => D#20
  MEM[(struct pair *)_39 + 32B] = *__v_3(D);
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _39
  std::_Rb_tree_insert_and_rebalance (prephitmp_21, _39, __res$second_52, __j$_M_node_20);
  _44 = this_5(D)->_M_impl._M_node_count;
  _45 = _44 + 1;
  this_5(D)->_M_impl._M_node_count = _45;
  # DEBUG this => NULL
  # DEBUG __x => _39
  # DEBUG this => &D.82965
  # DEBUG __a => &D.82963
  # DEBUG __b => &D.82964
  MEM[(struct pair *)&D.103404] = _39;
  MEM[(struct pair *)&D.103404 + 8B] = 1;
  D.82963 ={v} {CLOBBER};
  goto <bb 18>;

  <bb 17>:
  # __res$first_73 = PHI <0B(13), __j$_M_node_31(12)>

  <bb 21>:
  # DEBUG D#1128 => {CLOBBER}
  # DEBUG __j$_M_node => D#1128
  # DEBUG __res => __res$first_73
  # DEBUG __res$8 => NULL
  # DEBUG __res$first => __res$first_73
  # DEBUG __res$second => NULL
  # DEBUG this => &D.82966
  # DEBUG __x => __res$first_73
  # DEBUG this => &D.82968
  # DEBUG __a => &D.82966
  # DEBUG __b => &D.82967
  MEM[(struct pair *)&D.103404] = __res$first_73;
  MEM[(struct pair *)&D.103404 + 8B] = 0;

  <bb 18>:

  <bb 20>:
  # DEBUG D#2430 => {CLOBBER}
  # DEBUG __res$first => D#2430
  # DEBUG D#2431 => {CLOBBER}
  # DEBUG __res$second => D#2431
  return D.103404;

}



;; Function virtual void TrafficManager::_RetireFlit(Flit*, int) (_ZN14TrafficManager11_RetireFlitEP4Fliti, funcdef_no=2470, decl_uid=64975, cgraph_uid=718, symbol_order=719)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void TrafficManager::_RetireFlit(Flit*, int) (struct TrafficManager * const this, struct Flit * f, int dest)
{
  struct iterator __position;
  struct _Rb_tree_node * __y;
  struct const_iterator __position;
  struct pair D.141603;
  struct _List_iterator D.141532;
  struct const_iterator D.141478;
  struct _Rb_tree_node * __y;
  const struct _Rb_tree_node * __y;
  const struct _Rb_tree_node * __y;
  struct PacketReplyInfo * rinfo;
  struct ostringstream err;
  static const char __PRETTY_FUNCTION__[53] = "virtual void TrafficManager::_RetireFlit(Flit*, int)";
  const struct value_type D.74157;
  struct __string_type D.74022;
  int _24;
  long unsigned int _25;
  const int _27;
  int * _28;
  bool _30;
  int _31;
  long unsigned int _32;
  bool _37;
  int _38;
  int _39;
  int _40;
  int _41;
  int _42;
  int _43;
  int _44;
  int _45;
  int _47;
  struct ostream * gWatchOut.430_48;
  struct basic_ostream & _50;
  struct basic_ostream & _53;
  struct basic_ostream & _55;
  struct basic_ostream & _57;
  struct basic_ostream & _59;
  struct basic_ostream & _61;
  struct basic_ostream & _63;
  struct basic_ostream & _65;
  bool _66;
  int _67;
  int _69;
  struct basic_ostream & _71;
  char * const _73;
  struct Module * _74;
  int _82;
  long unsigned int _83;
  int _85;
  const int _86;
  struct Stats * _87;
  double _89;
  int _90;
  int _91;
  int _92;
  double _93;
  int _97;
  int _102;
  long unsigned int _103;
  struct Stats * _105;
  bool _106;
  int _107;
  int _108;
  int _109;
  int _110;
  int _111;
  int _112;
  int _113;
  long unsigned int _114;
  int _115;
  long unsigned int _116;
  struct Stats * _118;
  bool _119;
  bool _120;
  int _121;
  long unsigned int _122;
  struct _Rep_type * _123;
  struct map & _124;
  long unsigned int _126;
  bool _127;
  int _128;
  int _129;
  bool _133;
  int _134;
  int _135;
  int _136;
  int _137;
  int _138;
  int _139;
  int _140;
  int _141;
  int _142;
  int _143;
  int _144;
  int _145;
  int _146;
  int _147;
  int _149;
  struct ostream * gWatchOut.430_150;
  struct basic_ostream & _152;
  struct _List_node_base * _153;
  struct basic_ostream & _155;
  struct basic_ostream & _157;
  struct basic_ostream & _159;
  struct basic_ostream & _161;
  struct basic_ostream & _163;
  struct basic_ostream & _165;
  struct basic_ostream & _167;
  FlitType _168;
  int _175;
  int _177;
  bool _179;
  FlitType _181;
  long unsigned int _183;
  long unsigned int _188;
  int _190;
  int _191;
  int _193;
  long unsigned int _194;
  int _196;
  int _197;
  eSimState _199;
  bool _200;
  int _201;
  int _202;
  long unsigned int _203;
  struct Stats * _205;
  int _206;
  long unsigned int _207;
  int _209;
  const int _210;
  struct Stats * _211;
  double _213;
  int _214;
  int _215;
  int _216;
  double _217;
  int _221;
  int _224;
  int _225;
  int _226;
  long unsigned int _227;
  struct Stats * _229;
  int _230;
  int _231;
  int _232;
  int _233;
  long unsigned int _234;
  struct Stats * _236;
  int _237;
  int _238;
  int _239;
  int _240;
  int _241;
  int _242;
  int _243;
  int _244;
  long unsigned int _245;
  struct Stats * _247;
  bool _248;
  int _249;
  int _250;
  int _251;
  int _252;
  int _253;
  int _254;
  int _255;
  long unsigned int _256;
  int _257;
  long unsigned int _258;
  const int _260;
  struct Stats * _261;
  int _262;
  int _263;
  int _264;
  int _265;
  int _266;
  int _267;
  int _268;
  long unsigned int _269;
  int _270;
  long unsigned int _271;
  struct Stats * _274;
  bool _276;
  bool _277;
  int _278;
  char * const _279;
  int _280;
  long unsigned int _281;
  int * _286;
  int * _288;
  int * _289;
  int * _290;
  struct Stats * * _292;
  struct Stats * * _293;
  struct Stats * * _294;
  struct Stats * * _295;
  struct Stats * * _296;
  struct Stats * * _297;
  struct Stats * * _298;
  struct Stats * * _299;
  struct Stats * * _300;
  struct Stats * * _301;
  struct vector * _302;
  struct vector * _303;
  struct vector * _304;
  struct map * _305;
  struct map * _306;
  struct map * _307;
  struct map * _308;
  struct list * _309;
  long unsigned int _313;
  struct map & _314;
  struct _Rep_type * _315;
  long unsigned int _316;
  int & _317;
  long unsigned int _318;
  struct Stats * & _319;
  long unsigned int _323;
  struct Stats * & _324;
  double _325;
  long unsigned int _326;
  struct Stats * & _327;
  long unsigned int _328;
  struct vector & _329;
  const int _333;
  const int _339;
  long unsigned int _342;
  struct map & _343;
  long unsigned int _345;
  struct list & _346;
  long unsigned int _347;
  int & _348;
  long unsigned int _349;
  int & _350;
  long unsigned int _351;
  int & _352;
  double _353;
  long unsigned int _354;
  struct Stats * & _355;
  long unsigned int _356;
  struct Stats * & _357;
  double _360;
  long unsigned int _361;
  struct Stats * & _362;
  double _363;
  long unsigned int _364;
  struct Stats * & _365;
  double _366;
  long unsigned int _367;
  struct Stats * & _368;
  double _369;
  long unsigned int _370;
  struct Stats * & _371;
  long unsigned int _372;
  struct vector & _373;
  double _374;
  long unsigned int _375;
  struct Stats * & _376;
  long unsigned int _377;
  struct vector & _378;
  struct _Rep_type * _379;
  long unsigned int _380;
  struct map & _381;
  FlitType _407;
  struct _List_node * _412;
  long unsigned int _439;
  long unsigned int _440;
  struct _List_node_base * _444;
  long unsigned int _445;
  long unsigned int _446;
  int pretmp_464;
  int * pretmp_467;
  long unsigned int pretmp_472;
  bool _474;
  int * pretmp_481;
  long unsigned int pretmp_482;
  int pretmp_484;
  int pretmp_488;
  int * prephitmp_490;
  double pretmp_494;
  const int pretmp_514;
  int pretmp_520;
  double prephitmp_521;
  int pretmp_544;
  long unsigned int pretmp_546;
  int * pretmp_548;
  long unsigned int pretmp_550;
  int * pretmp_552;
  int * prephitmp_553;
  int pretmp_554;
  int prephitmp_555;
  const int pretmp_556;
  const int pretmp_558;

  <bb 2>:
  this_21(D)->_deadlock_timer = 0;
  # DEBUG D#2432 => &f_23(D)->id
  _24 = f_23(D)->cl;
  _25 = (long unsigned int) _24;
  # DEBUG D#2433 => &this_21(D)->_total_in_flight_flits
  _305 = MEM[(struct map * *)this_21(D) + 672B];
  # DEBUG D#125 => D#2433
  # DEBUG __n => _25
  # DEBUG this => D#125
  _126 = _25 * 48;
  _124 = _305 + _126;
  # DEBUG this => NULL
  # DEBUG __x => D#2432
  # DEBUG this => D#1108
  __y_282 = &MEM[(const struct _Rb_tree *)_124]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_282
  # DEBUG this => D#1109
  # DEBUG __k => D#2432
  # DEBUG this => D#1109
  __y_273 = MEM[(struct _Rb_tree_node_base * *)_124 + 16B];
  # DEBUG D#317 => D#1109
  # DEBUG this => D#317
  # DEBUG D#1104 => D#1109
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => D#2432
  # DEBUG __y => __y_282
  # DEBUG __x => __y_273
  if (__y_273 == 0B)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_514 = MEM[(const int &)f_23(D) + 28];
  goto <bb 6>;

  <bb 4>:
  # __y_195 = PHI <__y_235(8), __y_246(7)>
  # __y_189 = PHI <__y_184(8), __y_504(7)>
  # DEBUG __y => __y_189
  # DEBUG __x => __y_195
  if (__y_195 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __y_184 = PHI <__y_282(3), __y_189(5)>
  # __y_504 = PHI <__y_273(3), __y_195(5)>
  # DEBUG __y => __y_184
  # DEBUG __x => __y_504
  # DEBUG __x => __y_504
  # DEBUG __x => __y_504
  # DEBUG this => __y_504
  # DEBUG D#1100 => &__y_504->_M_value_field
  # DEBUG __r => D#1100
  # DEBUG __x => D#1100
  # DEBUG this => D#353
  # DEBUG D#1101 => &MEM[(const struct pair &)__y_504 + 32].first
  # DEBUG D#1102 => &D#1103->_M_impl._M_key_compare
  # DEBUG D#333 => D#1102
  _260 = MEM[(const int &)__y_504 + 32];
  # DEBUG D#334 => D#1101
  # DEBUG D#335 => D#2432
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (_260 >= pretmp_514)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG __y => __y_504
  __y_246 = MEM[(struct _Rb_tree_node_base * *)__y_504 + 16B];
  # DEBUG D#613 => __y_504
  # DEBUG __x => D#613
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 8>:
  __y_235 = MEM[(struct _Rb_tree_node_base * *)__y_504 + 24B];
  # DEBUG D#614 => __y_504
  # DEBUG __x => D#614
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 9>:
  # __y_411 = PHI <__y_189(4)>

  <bb 96>:
  # DEBUG this => NULL
  # DEBUG __x => __y_411
  # DEBUG __j$_M_node => __y_411
  # DEBUG this => D#1109
  # DEBUG this => NULL
  # DEBUG __x => __y_282
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_411 == __y_282)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  # DEBUG __x => __y_411
  # DEBUG __x => __y_411
  # DEBUG this => __y_411
  # DEBUG D#615 => &__y_411->_M_value_field
  # DEBUG __r => D#615
  # DEBUG __x => D#615
  # DEBUG this => D#353
  # DEBUG D#1105 => &MEM[(const struct pair &)__y_411 + 32].first
  # DEBUG D#1107 => &MEM[(const struct _Rb_tree *)D#1109]._M_impl._M_key_compare
  # DEBUG D#333 => D#1107
  # DEBUG D#334 => D#2432
  _210 = MEM[(const int &)__y_411 + 32];
  # DEBUG D#335 => D#1105
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  # DEBUG D#1106 => {CLOBBER}
  # DEBUG __j$_M_node => D#1106
  # DEBUG this => NULL
  # DEBUG __x => NULL
  if (_210 > pretmp_514)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  __assert_fail ("_total_in_flight_flits[f->cl].count(f->id) > 0", "trafficmanager.cpp", 651, &__PRETTY_FUNCTION__);

  <bb 12>:
  _28 = &f_23(D)->id;
  # DEBUG D#2434 => &this_21(D)->_total_in_flight_flits
  # DEBUG D#125 => D#2434
  # DEBUG __n => _25
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG __x => _28
  _123 = &_124->_M_t;
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::erase (_123, _28);
  _30 = f_23(D)->record;
  if (_30 != 0)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 13>:
  # DEBUG D#2435 => &f_23(D)->id
  _31 = f_23(D)->cl;
  _32 = (long unsigned int) _31;
  # DEBUG D#2436 => &this_21(D)->_measured_in_flight_flits
  _306 = MEM[(struct map * *)this_21(D) + 696B];
  # DEBUG D#125 => D#2436
  # DEBUG __n => _32
  # DEBUG this => D#125
  _313 = _32 * 48;
  _314 = _306 + _313;
  # DEBUG this => NULL
  # DEBUG __x => D#2435
  # DEBUG this => D#1108
  __y_117 = &MEM[(const struct _Rb_tree *)_314]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_117
  # DEBUG this => D#1109
  # DEBUG __k => D#2435
  # DEBUG this => D#1109
  __y_104 = MEM[(struct _Rb_tree_node_base * *)_314 + 16B];
  # DEBUG D#317 => D#1109
  # DEBUG this => D#317
  # DEBUG D#1104 => D#1109
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => D#2435
  # DEBUG __y => __y_117
  # DEBUG __x => __y_104
  if (__y_104 == 0B)
    goto <bb 22>;
  else
    goto <bb 14>;

  <bb 14>:
  pretmp_558 = MEM[(const int &)f_23(D) + 28];
  goto <bb 17>;

  <bb 15>:
  # __y_311 = PHI <__y_34(19), __y_35(18)>
  # __y_312 = PHI <__y_459(19), __y_471(18)>
  # DEBUG __y => __y_312
  # DEBUG __x => __y_311
  if (__y_311 == 0B)
    goto <bb 20>;
  else
    goto <bb 16>;

  <bb 16>:

  <bb 17>:
  # __y_459 = PHI <__y_117(14), __y_312(16)>
  # __y_471 = PHI <__y_104(14), __y_311(16)>
  # DEBUG __y => __y_459
  # DEBUG __x => __y_471
  # DEBUG __x => __y_471
  # DEBUG __x => __y_471
  # DEBUG this => __y_471
  # DEBUG D#1100 => &__y_471->_M_value_field
  # DEBUG __r => D#1100
  # DEBUG __x => D#1100
  # DEBUG this => D#353
  # DEBUG D#1101 => &MEM[(const struct pair &)__y_471 + 32].first
  # DEBUG D#1102 => &D#1103->_M_impl._M_key_compare
  # DEBUG D#333 => D#1102
  _86 = MEM[(const int &)__y_471 + 32];
  # DEBUG D#334 => D#1101
  # DEBUG D#335 => D#2435
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (_86 >= pretmp_558)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG __y => __y_471
  __y_35 = MEM[(struct _Rb_tree_node_base * *)__y_471 + 16B];
  # DEBUG D#613 => __y_471
  # DEBUG __x => D#613
  # DEBUG __x => NULL
  goto <bb 15>;

  <bb 19>:
  __y_34 = MEM[(struct _Rb_tree_node_base * *)__y_471 + 24B];
  # DEBUG D#614 => __y_471
  # DEBUG __x => D#614
  # DEBUG __x => NULL
  goto <bb 15>;

  <bb 20>:
  # __y_540 = PHI <__y_312(15)>

  <bb 95>:
  # DEBUG this => NULL
  # DEBUG __x => __y_540
  # DEBUG __j$_M_node => __y_540
  # DEBUG this => D#1109
  # DEBUG this => NULL
  # DEBUG __x => __y_117
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_117 == __y_540)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  # DEBUG __x => __y_540
  # DEBUG __x => __y_540
  # DEBUG this => __y_540
  # DEBUG D#615 => &__y_540->_M_value_field
  # DEBUG __r => D#615
  # DEBUG __x => D#615
  # DEBUG this => D#353
  # DEBUG D#1105 => &MEM[(const struct pair &)__y_540 + 32].first
  # DEBUG D#1107 => &MEM[(const struct _Rb_tree *)D#1109]._M_impl._M_key_compare
  # DEBUG D#333 => D#1107
  # DEBUG D#334 => D#2435
  _27 = MEM[(const int &)__y_540 + 32];
  # DEBUG D#335 => D#1105
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  # DEBUG D#1106 => {CLOBBER}
  # DEBUG __j$_M_node => D#1106
  # DEBUG this => NULL
  # DEBUG __x => NULL
  if (_27 > pretmp_558)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  __assert_fail ("_measured_in_flight_flits[f->cl].count(f->id) > 0", "trafficmanager.cpp", 655, &__PRETTY_FUNCTION__);

  <bb 23>:
  # DEBUG D#2437 => &this_21(D)->_measured_in_flight_flits
  # DEBUG D#125 => D#2437
  # DEBUG __n => _32
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG __x => _28
  _315 = &_314->_M_t;
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::erase (_315, _28);

  <bb 24>:
  _37 = f_23(D)->watch;
  if (_37 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  _38 = f_23(D)->atime;
  _39 = f_23(D)->itime;
  _40 = _38 - _39;
  _41 = f_23(D)->hops;
  _42 = f_23(D)->dest;
  _43 = f_23(D)->src;
  _44 = f_23(D)->pid;
  _45 = f_23(D)->id;
  _47 = GetSimTime ();
  gWatchOut.430_48 = gWatchOut;
  _50 = std::basic_ostream<char>::operator<< (gWatchOut.430_48, _47);
  # DEBUG __out => _50
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_50, " | ", 3);
  # DEBUG __out => _50
  # DEBUG __s => "node"
  # DEBUG __s => "node"
  std::__ostream_insert<char, std::char_traits<char> > (_50, "node", 4);
  _53 = std::basic_ostream<char>::operator<< (_50, dest_51(D));
  # DEBUG __out => _53
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_53, " | ", 3);
  # DEBUG __out => _53
  # DEBUG __s => "Retiring flit "
  # DEBUG __s => "Retiring flit "
  std::__ostream_insert<char, std::char_traits<char> > (_53, "Retiring flit ", 14);
  _55 = std::basic_ostream<char>::operator<< (_53, _45);
  # DEBUG __out => _55
  # DEBUG __s => " (packet "
  # DEBUG __s => " (packet "
  std::__ostream_insert<char, std::char_traits<char> > (_55, " (packet ", 9);
  _57 = std::basic_ostream<char>::operator<< (_55, _44);
  # DEBUG __out => _57
  # DEBUG __s => ", src = "
  # DEBUG __s => ", src = "
  std::__ostream_insert<char, std::char_traits<char> > (_57, ", src = ", 8);
  _59 = std::basic_ostream<char>::operator<< (_57, _43);
  # DEBUG __out => _59
  # DEBUG __s => ", dest = "
  # DEBUG __s => ", dest = "
  std::__ostream_insert<char, std::char_traits<char> > (_59, ", dest = ", 9);
  _61 = std::basic_ostream<char>::operator<< (_59, _42);
  # DEBUG __out => _61
  # DEBUG __s => ", hops = "
  # DEBUG __s => ", hops = "
  std::__ostream_insert<char, std::char_traits<char> > (_61, ", hops = ", 9);
  _63 = std::basic_ostream<char>::operator<< (_61, _41);
  # DEBUG __out => _63
  # DEBUG __s => ", flat = "
  # DEBUG __s => ", flat = "
  std::__ostream_insert<char, std::char_traits<char> > (_63, ", flat = ", 9);
  _65 = std::basic_ostream<char>::operator<< (_63, _40);
  # DEBUG __out => _65
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_65, ").", 2);
  # DEBUG this => _65
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_65);

  <bb 26>:
  _66 = f_23(D)->head;
  if (_66 != 0)
    goto <bb 27>;
  else
    goto <bb 41>;

  <bb 27>:
  _67 = f_23(D)->dest;
  if (dest_51(D) != _67)
    goto <bb 28>;
  else
    goto <bb 41>;

  <bb 28>:
  std::__cxx11::basic_ostringstream<char>::__comp_ctor .constprop (&err);
  _69 = f_23(D)->id;
  # DEBUG __out => &err.D.23228
  # DEBUG __s => "Flit "
  # DEBUG __s => "Flit "
  std::__ostream_insert<char, std::char_traits<char> > (&err.D.23228, "Flit ", 5);

  <bb 29>:
  _71 = std::basic_ostream<char>::operator<< (&err.D.23228, _69);
  goto <bb 31>;

<L79>:
  goto <bb 90> (<L72>);

  <bb 31>:
  # DEBUG __out => _71
  # DEBUG __s => " arrived at incorrect output "
  # DEBUG __s => " arrived at incorrect output "
  std::__ostream_insert<char, std::char_traits<char> > (_71, " arrived at incorrect output ", 29);
  goto <bb 33>;

<L80>:
  goto <bb 90> (<L72>);

  <bb 33>:
  std::basic_ostream<char>::operator<< (_71, dest_51(D));
  goto <bb 35>;

<L81>:
  goto <bb 90> (<L72>);

  <bb 35>:
  # DEBUG this => &err
  D.74022 = std::__cxx11::basic_stringbuf<char>::str (&err._M_stringbuf); [return slot optimization]
  goto <bb 37>;

<L82>:
  goto <bb 90> (<L72>);

  <bb 37>:
  _74 = &this_21(D)->D.65070;
  Module::Error (_74, &D.74022);

  <bb 38>:
  # DEBUG this => &D.74022
  # DEBUG this => &D.74022
  # DEBUG this => &D.74022
  _73 = MEM[(char * *)&D.74022];
  # DEBUG D#1 => &D.74022
  # DEBUG this => D#1
  # DEBUG this => &D.74022
  if (&D.74022.D.11539._M_local_buf != _73)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#629 => D.74022.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74022
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74022
  # DEBUG this => D#1
  # DEBUG this => &D.74022
  # DEBUG D#626 => &D.74022._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _73
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _73
  # DEBUG this => D#620
  # DEBUG D.141408 => D#621
  operator delete (_73);

  <bb 40>:
  # DEBUG D#630 => &D.74022._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74022 ={v} {CLOBBER};
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&err);
  err ={v} {CLOBBER};

  <bb 41>:
  _82 = f_23(D)->cl;
  _83 = (long unsigned int) _82;
  # DEBUG D#2438 => &this_21(D)->_slowest_flit
  _286 = MEM[(int * *)this_21(D) + 1768B];
  # DEBUG D#63 => D#2438
  # DEBUG __n => _83
  # DEBUG this => D#63
  _316 = _83 * 4;
  _317 = _286 + _316;
  _85 = *_317;
  if (_85 < 0)
    goto <bb 91>;
  else
    goto <bb 42>;

  <bb 42>:
  # DEBUG D#2439 => &this_21(D)->_flat_stats
  _292 = MEM[(struct Stats * * *)this_21(D) + 1048B];
  # DEBUG D#80 => D#2439
  # DEBUG __n => _83
  # DEBUG this => D#80
  _318 = _83 * 8;
  _319 = _292 + _318;
  _87 = *_319;
  _89 = Stats::Max (_87);
  _90 = f_23(D)->atime;
  _91 = f_23(D)->itime;
  _92 = _90 - _91;
  _93 = (double) _92;
  if (_89 < _93)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  pretmp_464 = f_23(D)->cl;
  pretmp_472 = (long unsigned int) pretmp_464;
  pretmp_481 = MEM[(int * *)this_21(D) + 1768B];
  pretmp_482 = pretmp_472 * 4;
  pretmp_467 = pretmp_481 + pretmp_482;
  goto <bb 91>;

  <bb 44>:
  # prephitmp_521 = PHI <_93(42), pretmp_494(97)>
  # DEBUG D#3381 => f_23(D)->atime
  # DEBUG D#3380 => f_23(D)->itime
  _102 = f_23(D)->cl;
  _103 = (long unsigned int) _102;
  # DEBUG D#2441 => &this_21(D)->_flat_stats
  _293 = MEM[(struct Stats * * *)this_21(D) + 1048B];
  # DEBUG D#80 => D#2441
  # DEBUG __n => _103
  # DEBUG this => D#80
  _323 = _103 * 8;
  _324 = _293 + _323;
  _105 = *_324;
  # DEBUG this => _105
  # DEBUG val => D#3381 - D#3380
  Stats::AddSample (_105, prephitmp_521);
  _106 = this_21(D)->_pair_stats;
  if (_106 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  _107 = f_23(D)->atime;
  _108 = f_23(D)->itime;
  _109 = _107 - _108;
  _110 = f_23(D)->src;
  _111 = this_21(D)->_nodes;
  _112 = _110 * _111;
  _113 = dest_51(D) + _112;
  _114 = (long unsigned int) _113;
  _115 = f_23(D)->cl;
  _116 = (long unsigned int) _115;
  # DEBUG D#2442 => &this_21(D)->_pair_flat
  _302 = MEM[(struct vector * *)this_21(D) + 1288B];
  # DEBUG D#124 => D#2442
  # DEBUG __n => _116
  # DEBUG this => D#124
  _328 = _116 * 24;
  _329 = _302 + _328;
  _294 = MEM[(struct Stats * * *)_329];
  # DEBUG __n => _114
  # DEBUG this => D#80
  _326 = _114 * 8;
  _327 = _294 + _326;
  _118 = *_327;
  # DEBUG this => _118
  # DEBUG val => _109
  _325 = (double) _109;
  Stats::AddSample (_118, _325);

  <bb 46>:
  _119 = f_23(D)->tail;
  if (_119 != 0)
    goto <bb 47>;
  else
    goto <bb 93>;

  <bb 47>:
  _120 = f_23(D)->head;
  if (_120 != 0)
    goto <bb 62>;
  else
    goto <bb 48>;

  <bb 48>:
  # DEBUG D#2443 => &f_23(D)->pid
  _121 = f_23(D)->cl;
  _122 = (long unsigned int) _121;
  # DEBUG D#2444 => &this_21(D)->_retired_packets
  _307 = MEM[(struct map * *)this_21(D) + 720B];
  # DEBUG D#125 => D#2444
  # DEBUG __n => _122
  # DEBUG this => D#125
  _342 = _122 * 48;
  _343 = _307 + _342;
  # DEBUG this => NULL
  # DEBUG __x => D#2443
  # DEBUG this => D#1125
  # DEBUG __k => D#2443
  # DEBUG this => D#1125
  __y_330 = &MEM[(struct _Rb_tree *)_343]._M_impl._M_header;
  __y_331 = MEM[(struct _Rb_tree_node_base * *)_343 + 16B];
  # DEBUG D#214 => D#1125
  # DEBUG this => D#214
  # DEBUG D#1117 => D#1125
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => D#2443
  # DEBUG __y => __y_330
  # DEBUG __x => __y_331
  if (__y_331 == 0B)
    goto <bb 57>;
  else
    goto <bb 49>;

  <bb 49>:
  pretmp_556 = MEM[(const int &)f_23(D) + 32];
  goto <bb 52>;

  <bb 50>:
  # __y_341 = PHI <__y_336(54), __y_335(53)>
  # __y_7 = PHI <__y_451(54), __y_425(53)>
  # DEBUG __y => __y_7
  # DEBUG __x => __y_341
  if (__y_341 == 0B)
    goto <bb 55>;
  else
    goto <bb 51>;

  <bb 51>:

  <bb 52>:
  # __y_425 = PHI <__y_331(49), __y_341(51)>
  # __y_451 = PHI <__y_330(49), __y_7(51)>
  # DEBUG __y => __y_451
  # DEBUG __x => __y_425
  # DEBUG __x => __y_425
  # DEBUG __x => __y_425
  # DEBUG this => __y_425
  # DEBUG D#1100 => &MEM[(const struct _Rb_tree_node *)__y_425]._M_value_field
  # DEBUG __r => D#1100
  # DEBUG __x => D#1100
  # DEBUG this => D#353
  # DEBUG D#1114 => &MEM[(const struct pair &)__y_425 + 32].first
  # DEBUG D#1115 => &D#1116->_M_impl._M_key_compare
  # DEBUG D#333 => D#1115
  _333 = MEM[(const int &)__y_425 + 32];
  # DEBUG D#334 => D#1114
  # DEBUG D#335 => D#2443
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (_333 >= pretmp_556)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG __y => __y_425
  __y_335 = MEM[(struct _Rb_tree_node_base * *)__y_425 + 16B];
  # DEBUG D#315 => __y_425
  # DEBUG __x => D#315
  # DEBUG __x => NULL
  goto <bb 50>;

  <bb 54>:
  __y_336 = MEM[(struct _Rb_tree_node_base * *)__y_425 + 24B];
  # DEBUG D#314 => __y_425
  # DEBUG __x => D#314
  # DEBUG __x => NULL
  goto <bb 50>;

  <bb 55>:
  # __y_344 = PHI <__y_7(50)>

  <bb 94>:
  # DEBUG this => NULL
  # DEBUG __x => __y_344
  # DEBUG __j$_M_node => __y_344
  # DEBUG this => D#1125
  # DEBUG this => NULL
  # DEBUG __x => __y_330
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_344 == __y_330)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  # DEBUG __x => __y_344
  # DEBUG __x => __y_344
  # DEBUG this => __y_344
  # DEBUG D#615 => &MEM[(const struct _Rb_tree_node *)__y_344]._M_value_field
  # DEBUG __r => D#615
  # DEBUG __x => D#615
  # DEBUG this => D#353
  # DEBUG D#1122 => &MEM[(const struct pair &)__y_344 + 32].first
  # DEBUG D#1124 => &MEM[(struct _Rb_tree *)D#1125]._M_impl._M_key_compare
  # DEBUG D#333 => D#1124
  # DEBUG D#334 => D#2443
  _339 = MEM[(const int &)__y_344 + 32];
  # DEBUG D#335 => D#1122
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  # DEBUG D#1123 => {CLOBBER}
  # DEBUG __j$_M_node => D#1123
  # DEBUG iter$_M_node => __y_344
  # DEBUG D#2445 => &this_21(D)->_retired_packets
  # DEBUG D#125 => D#2445
  # DEBUG __n => _122
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG this => D#341
  # DEBUG this => NULL
  # DEBUG __x => __y_330
  # DEBUG this => &iter
  # DEBUG __x => &D.74026
  if (_339 <= pretmp_556)
    goto <bb 58>;
  else
    goto <bb 57>;

  <bb 57>:
  # DEBUG D#1123 => {CLOBBER}
  # DEBUG __j$_M_node => D#1123
  # DEBUG iter$_M_node => NULL
  # DEBUG D#2445 => &this_21(D)->_retired_packets
  # DEBUG D#125 => D#2445
  # DEBUG __n => _122
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG this => D#341
  # DEBUG this => NULL
  # DEBUG __x => __y_330
  # DEBUG this => &iter
  # DEBUG __x => &D.74026
  __assert_fail ("iter != _retired_packets[f->cl].end()", "trafficmanager.cpp", 691, &__PRETTY_FUNCTION__);

  <bb 58>:
  # DEBUG this => &iter
  # DEBUG this => __y_344
  # DEBUG D#2446 => &__y_344->_M_value_field
  # DEBUG __r => D#2446
  f_125 = MEM[(struct pair *)__y_344 + 32B].second;
  # DEBUG head => f_125
  # DEBUG D#2447 => &this_21(D)->_retired_packets
  # DEBUG D#125 => D#2447
  # DEBUG __n => _122
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG __position => __y_344
  # DEBUG D#3377 => &_343->_M_t
  # DEBUG this => D#3377
  # DEBUG __position$_M_node => __y_344
  # DEBUG this => &D.141478
  # DEBUG __it => &__position
  # DEBUG this => D#3377
  __y_438 = std::_Rb_tree_rebalance_for_erase (__y_344, __y_330);
  # DEBUG __y => __y_438
  # DEBUG D#1911 => D#3377
  # DEBUG __p => __y_438
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __y_438
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __y_438
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __y_438
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __y_438
  # DEBUG this => D#1529
  # DEBUG D.160569 => D#1530
  operator delete (__y_438);
  _439 = MEM[(struct _Rb_tree *)_343]._M_impl._M_node_count;
  _440 = _439 + 18446744073709551615;
  MEM[(struct _Rb_tree *)_343]._M_impl._M_node_count = _440;
  D.141478 ={v} {CLOBBER};
  _127 = f_125->head;
  if (_127 != 0)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  __assert_fail ("head->head", "trafficmanager.cpp", 694, &__PRETTY_FUNCTION__);

  <bb 60>:
  _128 = f_23(D)->pid;
  _129 = f_125->pid;
  if (_128 != _129)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  __assert_fail ("f->pid == head->pid", "trafficmanager.cpp", 695, &__PRETTY_FUNCTION__);

  <bb 62>:
  # f_1 = PHI <f_23(D)(47), f_125(60)>
  # DEBUG head => f_1
  _133 = f_23(D)->watch;
  if (_133 != 0)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  _134 = f_1->dest;
  _135 = f_1->src;
  _136 = f_23(D)->atime;
  _137 = f_1->atime;
  _138 = _136 - _137;
  _139 = f_1->id;
  _140 = f_23(D)->id;
  _141 = _139 - _140;
  _142 = _138 + _141;
  _143 = f_1->itime;
  _144 = _136 - _143;
  _145 = f_1->ctime;
  _146 = _136 - _145;
  _147 = f_23(D)->pid;
  _149 = GetSimTime ();
  gWatchOut.430_150 = gWatchOut;
  _152 = std::basic_ostream<char>::operator<< (gWatchOut.430_150, _149);
  # DEBUG __out => _152
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_152, " | ", 3);
  # DEBUG __out => _152
  # DEBUG __s => "node"
  # DEBUG __s => "node"
  std::__ostream_insert<char, std::char_traits<char> > (_152, "node", 4);
  _155 = std::basic_ostream<char>::operator<< (_152, dest_51(D));
  # DEBUG __out => _155
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_155, " | ", 3);
  # DEBUG __out => _155
  # DEBUG __s => "Retiring packet "
  # DEBUG __s => "Retiring packet "
  std::__ostream_insert<char, std::char_traits<char> > (_155, "Retiring packet ", 16);
  _157 = std::basic_ostream<char>::operator<< (_155, _147);
  # DEBUG __out => _157
  # DEBUG __s => " (plat = "
  # DEBUG __s => " (plat = "
  std::__ostream_insert<char, std::char_traits<char> > (_157, " (plat = ", 9);
  _159 = std::basic_ostream<char>::operator<< (_157, _146);
  # DEBUG __out => _159
  # DEBUG __s => ", nlat = "
  # DEBUG __s => ", nlat = "
  std::__ostream_insert<char, std::char_traits<char> > (_159, ", nlat = ", 9);
  _161 = std::basic_ostream<char>::operator<< (_159, _144);
  # DEBUG __out => _161
  # DEBUG __s => ", frag = "
  # DEBUG __s => ", frag = "
  std::__ostream_insert<char, std::char_traits<char> > (_161, ", frag = ", 9);
  _163 = std::basic_ostream<char>::operator<< (_161, _142);
  # DEBUG __out => _163
  # DEBUG __s => ", src = "
  # DEBUG __s => ", src = "
  std::__ostream_insert<char, std::char_traits<char> > (_163, ", src = ", 8);
  _165 = std::basic_ostream<char>::operator<< (_163, _135);
  # DEBUG __out => _165
  # DEBUG __s => ", dest = "
  # DEBUG __s => ", dest = "
  std::__ostream_insert<char, std::char_traits<char> > (_165, ", dest = ", 9);
  _167 = std::basic_ostream<char>::operator<< (_165, _134);
  # DEBUG __out => _167
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_167, ").", 2);
  # DEBUG this => _167
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_167);

  <bb 64>:
  _168 = f_23(D)->type;
  _407 = _168 & 4294967293;
  if (_407 == 0)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  rinfo_173 = PacketReplyInfo::New ();
  # DEBUG rinfo => rinfo_173
  _175 = f_23(D)->src;
  rinfo_173->source = _175;
  _177 = f_23(D)->atime;
  rinfo_173->time = _177;
  _179 = f_23(D)->record;
  rinfo_173->record = _179;
  _181 = f_23(D)->type;
  rinfo_173->type = _181;
  _183 = (long unsigned int) dest_51(D);
  # DEBUG D#2448 => &this_21(D)->_repliesPending
  _309 = MEM[(struct list * *)this_21(D) + 808B];
  # DEBUG D#126 => D#2448
  # DEBUG __n => _183
  # DEBUG this => D#126
  _345 = _183 * 24;
  _346 = _309 + _345;
  # DEBUG this => NULL
  # DEBUG __x => &rinfo
  # DEBUG this => NULL
  _153 = &_346->D.73144._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _153
  # DEBUG this => _346
  # DEBUG __x => &rinfo
  # DEBUG D#1584 => _346
  # DEBUG __x => &rinfo
  # DEBUG this => D#1584
  # DEBUG D#1583 => D#1584
  # DEBUG D#1582 => D#1584
  # DEBUG D#1581 => &D#1582->D.73144
  # DEBUG D#1579 => D#1581
  # DEBUG this => D#1579
  # DEBUG D#1578 => D#1579
  # DEBUG D#1577 => &D#1578->_M_impl
  # DEBUG D#1575 => D#1577
  # DEBUG D#1576 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1575
  # DEBUG D.160580 => D#1576
  # DEBUG D#1574 => D#1575
  # DEBUG D#1573 => D#1574
  # DEBUG this => D#1573
  _412 = operator new (24);
  # DEBUG __p => _412
  # DEBUG D#3378 => &MEM[(struct _Node *)_412]._M_data
  # DEBUG __r => D#3378
  # DEBUG D#1580 => &D#1583->D.73144
  # DEBUG D#1081 => D#1580
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => &rinfo
  # DEBUG this => D#616
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115696 => D#20
  MEM[(struct PacketReplyInfo * *)_412 + 16B] = rinfo_173;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _412
  _444 = &MEM[(struct _Node *)_412].D.82523;
  std::__detail::_List_node_base::_M_hook (_444, _153);
  # DEBUG D#1585 => &_346->D.73144
  # DEBUG D#352 => D#1585
  # DEBUG __n => 1
  # DEBUG this => D#352
  _445 = MEM[(long unsigned int *)_346 + 16B];
  _446 = _445 + 1;
  MEM[(long unsigned int *)_346 + 16B] = _446;
  # DEBUG D#3376 => {CLOBBER}
  # DEBUG rinfo => D#3376
  goto <bb 101>;

  <bb 66>:
  if (_407 == 1)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  _188 = (long unsigned int) dest_51(D);
  # DEBUG D#2449 => &this_21(D)->_requestsOutstanding
  _288 = MEM[(int * *)this_21(D) + 832B];
  # DEBUG D#63 => D#2449
  # DEBUG __n => _188
  # DEBUG this => D#63
  _347 = _188 * 4;
  _348 = _288 + _347;
  _190 = *_348;
  _191 = _190 + -1;
  *_348 = _191;
  goto <bb 70>;

  <bb 68>:
  if (_168 == 4)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  _193 = f_23(D)->src;
  _194 = (long unsigned int) _193;
  # DEBUG D#2450 => &this_21(D)->_requestsOutstanding
  _289 = MEM[(int * *)this_21(D) + 832B];
  # DEBUG D#63 => D#2450
  # DEBUG __n => _194
  # DEBUG this => D#63
  _349 = _194 * 4;
  _350 = _289 + _349;
  _196 = *_350;
  _197 = _196 + -1;
  *_350 = _197;

  <bb 70>:

  <bb 101>:
  _199 = this_21(D)->_sim_state;
  if (_199 == 0)
    goto <bb 73>;
  else
    goto <bb 71>;

  <bb 71>:
  _200 = f_23(D)->record;
  if (_200 != 0)
    goto <bb 73>;
  else
    goto <bb 72>;

  <bb 72>:

  <bb 99>:
  goto <bb 78>;

  <bb 73>:
  _201 = f_23(D)->hops;
  _202 = f_23(D)->cl;
  _203 = (long unsigned int) _202;
  # DEBUG D#2451 => &this_21(D)->_hop_stats
  _295 = MEM[(struct Stats * * *)this_21(D) + 1312B];
  # DEBUG D#80 => D#2451
  # DEBUG __n => _203
  # DEBUG this => D#80
  _354 = _203 * 8;
  _355 = _295 + _354;
  _205 = *_355;
  # DEBUG this => _205
  # DEBUG val => _201
  _353 = (double) _201;
  Stats::AddSample (_205, _353);
  _206 = f_23(D)->cl;
  _207 = (long unsigned int) _206;
  # DEBUG D#2452 => &this_21(D)->_slowest_packet
  _290 = MEM[(int * *)this_21(D) + 1744B];
  # DEBUG D#63 => D#2452
  # DEBUG __n => _207
  # DEBUG this => D#63
  _351 = _207 * 4;
  _352 = _290 + _351;
  _209 = *_352;
  if (_209 < 0)
    goto <bb 92>;
  else
    goto <bb 74>;

  <bb 74>:
  # DEBUG D#2453 => &this_21(D)->_plat_stats
  _296 = MEM[(struct Stats * * *)this_21(D) + 856B];
  # DEBUG D#80 => D#2453
  # DEBUG __n => _207
  # DEBUG this => D#80
  _356 = _207 * 8;
  _357 = _296 + _356;
  _211 = *_357;
  _213 = Stats::Max (_211);
  _214 = f_23(D)->atime;
  _215 = f_1->itime;
  _216 = _214 - _215;
  _217 = (double) _216;
  if (_213 < _217)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  pretmp_544 = f_23(D)->cl;
  pretmp_546 = (long unsigned int) pretmp_544;
  pretmp_548 = MEM[(int * *)this_21(D) + 1744B];
  pretmp_550 = pretmp_546 * 4;
  pretmp_552 = pretmp_548 + pretmp_550;
  goto <bb 92>;

  <bb 76>:
  # prephitmp_555 = PHI <_214(74), pretmp_554(98)>
  _224 = f_1->ctime;
  _225 = prephitmp_555 - _224;
  _226 = f_23(D)->cl;
  _227 = (long unsigned int) _226;
  # DEBUG D#2455 => &this_21(D)->_plat_stats
  _297 = MEM[(struct Stats * * *)this_21(D) + 856B];
  # DEBUG D#80 => D#2455
  # DEBUG __n => _227
  # DEBUG this => D#80
  _367 = _227 * 8;
  _368 = _297 + _367;
  _229 = *_368;
  # DEBUG this => _229
  # DEBUG val => _225
  _366 = (double) _225;
  Stats::AddSample (_229, _366);
  _230 = f_23(D)->atime;
  _231 = f_1->itime;
  _232 = _230 - _231;
  _233 = f_23(D)->cl;
  _234 = (long unsigned int) _233;
  # DEBUG D#2456 => &this_21(D)->_nlat_stats
  _298 = MEM[(struct Stats * * *)this_21(D) + 952B];
  # DEBUG D#80 => D#2456
  # DEBUG __n => _234
  # DEBUG this => D#80
  _364 = _234 * 8;
  _365 = _298 + _364;
  _236 = *_365;
  # DEBUG this => _236
  # DEBUG val => _232
  _363 = (double) _232;
  Stats::AddSample (_236, _363);
  _237 = f_23(D)->atime;
  _238 = f_1->atime;
  _239 = _237 - _238;
  _240 = f_1->id;
  _241 = f_23(D)->id;
  _242 = _240 - _241;
  _243 = _239 + _242;
  _244 = f_23(D)->cl;
  _245 = (long unsigned int) _244;
  # DEBUG D#2457 => &this_21(D)->_frag_stats
  _299 = MEM[(struct Stats * * *)this_21(D) + 1144B];
  # DEBUG D#80 => D#2457
  # DEBUG __n => _245
  # DEBUG this => D#80
  _361 = _245 * 8;
  _362 = _299 + _361;
  _247 = *_362;
  # DEBUG this => _247
  # DEBUG val => _243
  _360 = (double) _243;
  Stats::AddSample (_247, _360);
  _248 = this_21(D)->_pair_stats;
  if (_248 != 0)
    goto <bb 77>;
  else
    goto <bb 72>;

  <bb 77>:
  _249 = f_23(D)->atime;
  _250 = f_1->ctime;
  _251 = _249 - _250;
  _252 = f_23(D)->src;
  _253 = this_21(D)->_nodes;
  _254 = _252 * _253;
  _255 = dest_51(D) + _254;
  _256 = (long unsigned int) _255;
  _257 = f_23(D)->cl;
  _258 = (long unsigned int) _257;
  # DEBUG D#2458 => &this_21(D)->_pair_plat
  _303 = MEM[(struct vector * *)this_21(D) + 1240B];
  # DEBUG D#124 => D#2458
  # DEBUG __n => _258
  # DEBUG this => D#124
  _377 = _258 * 24;
  _378 = _303 + _377;
  _300 = MEM[(struct Stats * * *)_378];
  # DEBUG __n => _256
  # DEBUG this => D#80
  _375 = _256 * 8;
  _376 = _300 + _375;
  _261 = *_376;
  # DEBUG this => _261
  # DEBUG val => _251
  _374 = (double) _251;
  Stats::AddSample (_261, _374);
  _262 = f_23(D)->atime;
  _263 = f_1->itime;
  _264 = _262 - _263;
  _265 = f_23(D)->src;
  _266 = this_21(D)->_nodes;
  _267 = _265 * _266;
  _268 = dest_51(D) + _267;
  _269 = (long unsigned int) _268;
  _270 = f_23(D)->cl;
  _271 = (long unsigned int) _270;
  # DEBUG D#2459 => &this_21(D)->_pair_nlat
  _304 = MEM[(struct vector * *)this_21(D) + 1264B];
  # DEBUG D#124 => D#2459
  # DEBUG __n => _271
  # DEBUG this => D#124
  _372 = _271 * 24;
  _373 = _304 + _372;
  _301 = MEM[(struct Stats * * *)_373];
  # DEBUG __n => _269
  # DEBUG this => D#80
  _370 = _269 * 8;
  _371 = _301 + _370;
  _274 = *_371;
  # DEBUG this => _274
  # DEBUG val => _264
  _369 = (double) _264;
  Stats::AddSample (_274, _369);

  <bb 78>:
  if (f_1 != f_23(D))
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  Flit::Free (f_1);

  <bb 80>:
  _276 = f_23(D)->head;
  if (_276 != 0)
    goto <bb 81>;
  else
    goto <bb 83>;

  <bb 81>:
  _277 = f_23(D)->tail;
  if (_277 != 0)
    goto <bb 83>;
  else
    goto <bb 82>;

  <bb 82>:
  _278 = f_23(D)->pid;
  # DEBUG __x => _278
  # DEBUG __y => f_23(D)
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG this => &D.74157
  # DEBUG __p => &D.74138
  D.74157.first = _278;
  D.74157.second = f_23(D);
  _280 = f_23(D)->cl;
  _281 = (long unsigned int) _280;
  # DEBUG D#2460 => &this_21(D)->_retired_packets
  _308 = MEM[(struct map * *)this_21(D) + 720B];
  # DEBUG D#125 => D#2460
  # DEBUG __n => _281
  # DEBUG this => D#125
  _380 = _281 * 48;
  _381 = _308 + _380;
  # DEBUG this => NULL
  # DEBUG __x => &D.74157
  _379 = &_381->_M_t;
  D.141603 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_insert_unique (_379, &D.74157);
  D.74157 ={v} {CLOBBER};
  goto <bb 84>;

  <bb 83>:
  Flit::Free (f_23(D));

  <bb 84>:

  <bb 100>:
  return;

<L71>:
  # DEBUG this => &D.74022
  # DEBUG this => &D.74022
  # DEBUG this => &D.74022
  _279 = MEM[(char * *)&D.74022];
  # DEBUG D#1 => &D.74022
  # DEBUG this => D#1
  # DEBUG this => &D.74022
  if (&D.74022.D.11539._M_local_buf != _279)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG D#629 => D.74022.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74022
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74022
  # DEBUG this => D#1
  # DEBUG this => &D.74022
  # DEBUG D#626 => &D.74022._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _279
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _279
  # DEBUG this => D#620
  # DEBUG D.141625 => D#621
  operator delete (_279);

  <bb 87>:
  # DEBUG D#630 => &D.74022._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74022 ={v} {CLOBBER};
  resx 3

<L83>:
  goto <bb 90> (<L72>);

<L78>:

<L72>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&err);
  resx 2

  <bb 91>:
  # prephitmp_490 = PHI <_317(41), pretmp_467(43)>

  <bb 97>:
  # DEBUG D#3382 => f_23(D)->cl
  # DEBUG D#2440 => &this_21(D)->_slowest_flit
  # DEBUG D#63 => D#2440
  # DEBUG __n => (long unsigned int) D#3382
  # DEBUG this => D#63
  _97 = f_23(D)->id;
  *prephitmp_490 = _97;
  pretmp_488 = f_23(D)->atime;
  pretmp_484 = f_23(D)->itime;
  pretmp_520 = pretmp_488 - pretmp_484;
  pretmp_494 = (double) pretmp_520;
  goto <bb 44>;

  <bb 92>:
  # prephitmp_553 = PHI <_352(73), pretmp_552(75)>

  <bb 98>:
  # DEBUG D#3379 => f_23(D)->cl
  # DEBUG D#2454 => &this_21(D)->_slowest_packet
  # DEBUG D#63 => D#2454
  # DEBUG __n => (long unsigned int) D#3379
  # DEBUG this => D#63
  _221 = f_23(D)->pid;
  *prephitmp_553 = _221;
  pretmp_554 = f_23(D)->atime;
  goto <bb 76>;

  <bb 93>:
  _474 = f_23(D)->head;
  if (_474 != 0)
    goto <bb 82>;
  else
    goto <bb 83>;

}



;; Function void TrafficManager::_GeneratePacket(int, int, int, int) (_ZN14TrafficManager15_GeneratePacketEiiii, funcdef_no=2472, decl_uid=64991, cgraph_uid=720, symbol_order=721)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void TrafficManager::_GeneratePacket(int, int, int, int) (struct TrafficManager * const this, int source, int stype, int cl, int time)
{
  struct iterator __position;
  char_type D.160686;
  char __c;
  char_type D.160683;
  char __c;
  char_type D.160680;
  struct basic_ostream & D.160674;
  char_type D.160671;
  char __c;
  char_type D.160668;
  char __c;
  char_type D.160665;
  struct basic_ostream & D.160659;
  struct _List_iterator D.141889;
  struct pair D.141824;
  struct pair D.141808;
  const struct _Rb_tree_node * __y;
  const struct _Rb_tree_node * __y;
  struct Flit * f;
  int i;
  struct ostringstream err;
  struct ostringstream err;
  struct PacketReplyInfo * rinfo;
  struct ostringstream err;
  int subnetwork;
  bool watch;
  bool record;
  int packet_destination;
  int size;
  FlitType packet_type;
  static const char __PRETTY_FUNCTION__[57] = "void TrafficManager::_GeneratePacket(int, int, int, int)";
  const struct value_type D.74246;
  const struct value_type D.74243;
  struct __string_type D.74238;
  struct __string_type D.74236;
  struct __string_type D.74233;
  bool iftmp.474_12;
  int _35;
  int _36;
  long unsigned int _38;
  struct TrafficPattern * _39;
  int (*__vtbl_ptr_type) () * _40;
  int (*__vtbl_ptr_type) () _41;
  struct ostream * gWatchOut.467_45;
  int & _46;
  long unsigned int _47;
  int _48;
  long unsigned int _50;
  FlitType _54;
  const int _57;
  FlitType _60;
  int _61;
  char * const _63;
  struct Module * _64;
  char * const _69;
  int (*__vtbl_ptr_type) () * _75;
  char * const _81;
  struct Module * _82;
  struct _List_node_base * _84;
  char * const _88;
  int _92;
  int packet_type.469_94;
  struct basic_ostream & _96;
  char * const _98;
  struct Module * _99;
  eSimState _107;
  int _108;
  int _110;
  int _112;
  long unsigned int _113;
  int _117;
  struct ostream * gWatchOut.467_118;
  struct basic_ostream & _120;
  struct basic_ostream & _122;
  struct basic_ostream & _124;
  struct basic_ostream & _126;
  int _131;
  int _132;
  struct ostream * gWatchOut.467_136;
  bool _138;
  struct _Rep_type * _145;
  long unsigned int _146;
  int _149;
  int _150;
  long unsigned int _151;
  const int _152;
  bool gTrace.475_154;
  int _156;
  struct basic_ostream & _158;
  bool cstore_163;
  int cstore_164;
  ePriority _165;
  int _168;
  int _173;
  long unsigned int _178;
  struct TrafficPattern * & _179;
  int _180;
  int _181;
  int _186;
  bool _193;
  int _194;
  int _195;
  int _197;
  struct ostream * gWatchOut.467_198;
  struct basic_ostream & _200;
  struct basic_ostream & _202;
  struct basic_ostream & _204;
  struct basic_ostream & _206;
  struct basic_ostream & _208;
  struct _List_node_base * _209;
  long unsigned int _210;
  long unsigned int _211;
  int * _217;
  int * _218;
  int * _219;
  int * _220;
  int * _221;
  int * _222;
  int * _223;
  int * _224;
  int * _225;
  struct TrafficPattern * * _226;
  struct vector * _227;
  struct map * _228;
  struct map * _229;
  struct list * _230;
  struct list * _232;
  int & _233;
  int & _234;
  long unsigned int _235;
  struct list & _236;
  int & _237;
  int & _238;
  int & _240;
  long int _241;
  long int _242;
  long int _243;
  long unsigned int _245;
  int & _246;
  const int _249;
  const int _253;
  struct _Rep_type * _258;
  long unsigned int _259;
  struct map & _260;
  struct map & _261;
  int & _262;
  long unsigned int _263;
  int & _264;
  long unsigned int _265;
  struct list & _266;
  long unsigned int _267;
  struct vector & _268;
  char * const _269;
  int pretmp_278;
  int prephitmp_279;
  unsigned int _286;
  struct list * pretmp_290;
  struct list * pretmp_292;
  struct list * prephitmp_293;
  unsigned int _295;
  int pretmp_303;
  int pretmp_304;
  int prephitmp_305;
  int pretmp_306;
  const struct __ctype_type * _327;
  const struct __ctype_type * _335;
  long unsigned int _339;
  long unsigned int _340;
  long int _341;
  sizetype _342;
  struct basic_ios * _343;
  struct basic_ostream & _346;
  char _348;
  char_type _351;
  int (*__vtbl_ptr_type) () * _356;
  int (*__vtbl_ptr_type) () _357;
  void * PROF_361;
  char_type _363;
  int (*__vtbl_ptr_type) () * _366;
  long int _367;
  sizetype _368;
  struct basic_ios * _369;
  struct basic_ostream & _372;
  struct _List_node_base * pretmp_373;
  char _374;
  char_type _377;
  int (*__vtbl_ptr_type) () * _382;
  int (*__vtbl_ptr_type) () _383;
  void * PROF_387;
  char_type _389;
  struct _List_node * _392;
  struct _List_node_base * _396;
  long unsigned int _397;
  long unsigned int _398;
  struct _List_node_base * prephitmp_455;
  bool _457;
  bool _464;

  <bb 2>:
  if (stype_29(D) == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __assert_fail ("stype!=0", "trafficmanager.cpp", 792, &__PRETTY_FUNCTION__);

  <bb 4>:
  # DEBUG packet_type => 4
  size_34 = TrafficManager::_GetNextPacketSize (this_31(D), cl_32(D));
  # DEBUG size => size_34
  _35 = this_31(D)->_cur_pid;
  _36 = _35 + 1;
  this_31(D)->_cur_pid = _36;
  # DEBUG pid => _35
  if (_36 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __assert_fail ("_cur_pid", "trafficmanager.cpp", 797, &__PRETTY_FUNCTION__);

  <bb 6>:
  _38 = (long unsigned int) cl_32(D);
  # DEBUG D#2464 => &this_31(D)->_traffic_pattern
  _226 = MEM[(struct TrafficPattern * * *)this_31(D) + 480B];
  # DEBUG D#70 => D#2464
  # DEBUG __n => _38
  # DEBUG this => D#70
  _211 = _38 * 8;
  _179 = _226 + _211;
  _39 = *_179;
  _40 = _39->_vptr.TrafficPattern;
  _41 = MEM[(int (*__vtbl_ptr_type) () *)_40 + 24B];
  packet_destination_44 = OBJ_TYPE_REF(_41;(struct TrafficPattern)_39->3) (_39, source_42(D));
  # DEBUG packet_destination => packet_destination_44
  # DEBUG record => 0
  gWatchOut.467_45 = gWatchOut;
  if (gWatchOut.467_45 != 0B)
    goto <bb 7>;
  else
    goto <bb 16>;

  <bb 7>:
  # DEBUG D#2465 => &this_31(D)->_packets_to_watch
  # DEBUG this => D#2465
  # DEBUG __x => &pid
  # DEBUG D#1602 => &MEM[(const struct set *)D#2465]._M_t
  # DEBUG this => D#1602
  __y_177 = &MEM[(const struct _Rb_tree *)this_31(D) + 2096B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_177
  # DEBUG D#1603 => &MEM[(const struct set *)D#2465]._M_t
  # DEBUG this => D#1603
  # DEBUG __k => &pid
  # DEBUG this => D#1603
  __y_172 = MEM[(struct _Rb_tree_node_base * *)this_31(D) + 2112B];
  # DEBUG D#354 => D#1603
  # DEBUG this => D#354
  # DEBUG D#1593 => D#1603
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &pid
  # DEBUG __y => __y_177
  # DEBUG __x => __y_172
  if (__y_172 == 0B)
    goto <bb 16>;
  else
    goto <bb 10>;

  <bb 8>:
  # __y_256 = PHI <__y_114(13), __y_137(12)>
  # __y_51 = PHI <__y_393(13), __y_400(12)>
  # DEBUG __y => __y_51
  # DEBUG __x => __y_256
  if (__y_256 == 0B)
    goto <bb 14>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 11>;

  <bb 10>:

  <bb 11>:
  # __y_393 = PHI <__y_177(10), __y_51(9)>
  # __y_400 = PHI <__y_172(10), __y_256(9)>
  # DEBUG __y => __y_393
  # DEBUG __x => __y_400
  # DEBUG __x => __y_400
  # DEBUG __x => __y_400
  # DEBUG this => __y_400
  # DEBUG D#1590 => &__y_400->_M_value_field
  # DEBUG __r => D#1590
  # DEBUG __x => D#1590
  # DEBUG this => D#328
  # DEBUG D#1591 => &D#1592->_M_impl._M_key_compare
  # DEBUG D#333 => D#1591
  _152 = MEM[(const int &)__y_400 + 32];
  # DEBUG D#334 => D#1590
  # DEBUG D#335 => &pid
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (_35 <= _152)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG __y => __y_400
  __y_137 = MEM[(struct _Rb_tree_node_base * *)__y_400 + 16B];
  # DEBUG D#617 => __y_400
  # DEBUG __x => D#617
  # DEBUG __x => NULL
  goto <bb 8>;

  <bb 13>:
  __y_114 = MEM[(struct _Rb_tree_node_base * *)__y_400 + 24B];
  # DEBUG D#618 => __y_400
  # DEBUG __x => D#618
  # DEBUG __x => NULL
  goto <bb 8>;

  <bb 14>:
  # __y_296 = PHI <__y_51(8)>
  # DEBUG this => NULL
  # DEBUG __x => __y_296
  # DEBUG __j$_M_node => __y_296
  # DEBUG this => D#1603
  # DEBUG this => NULL
  # DEBUG __x => __y_177
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_296 == __y_177)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __y_296
  # DEBUG __x => __y_296
  # DEBUG this => __y_296
  # DEBUG D#1599 => &__y_296->_M_value_field
  # DEBUG __r => D#1599
  # DEBUG __x => D#1599
  # DEBUG this => D#328
  # DEBUG D#1601 => &MEM[(const struct _Rb_tree *)D#1603]._M_impl._M_key_compare
  # DEBUG D#333 => D#1601
  # DEBUG D#334 => &pid
  _57 = MEM[(const int &)__y_296 + 32];
  # DEBUG D#335 => D#1599
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  # DEBUG D#1600 => {CLOBBER}
  # DEBUG __j$_M_node => D#1600
  # DEBUG this => NULL
  # DEBUG __x => NULL
  watch_454 = _35 >= _57;

  <bb 16>:
  # watch_10 = PHI <watch_454(15), 0(7), 0(6), 0(14)>
  # DEBUG watch => watch_10
  # DEBUG D#2466 => &this_31(D)->_use_read_write
  _217 = MEM[(int * *)this_31(D) + 264B];
  # DEBUG D#63 => D#2466
  # DEBUG __n => _38
  # DEBUG this => D#63
  _47 = _38 * 4;
  _46 = _217 + _47;
  _48 = *_46;
  if (_48 != 0)
    goto <bb 17>;
  else
    goto <bb 45>;

  <bb 17>:
  if (stype_29(D) > 0)
    goto <bb 18>;
  else
    goto <bb 31>;

  <bb 18>:
  if (stype_29(D) == 1)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG packet_type => 0
  # DEBUG D#2472 => &this_31(D)->_read_request_size
  _218 = MEM[(int * *)this_31(D) + 312B];
  # DEBUG D#63 => D#2472
  # DEBUG __n => _38
  # DEBUG this => D#63
  _233 = _218 + _47;
  size_91 = *_233;
  # DEBUG size => size_91
  goto <bb 45>;

  <bb 20>:
  if (stype_29(D) == 2)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG packet_type => 2
  # DEBUG D#2471 => &this_31(D)->_write_request_size
  _219 = MEM[(int * *)this_31(D) + 360B];
  # DEBUG D#63 => D#2471
  # DEBUG __n => _38
  # DEBUG this => D#63
  _234 = _219 + _47;
  size_78 = *_234;
  # DEBUG size => size_78
  goto <bb 45>;

  <bb 22>:
  std::__cxx11::basic_ostringstream<char>::__comp_ctor .constprop (&err);
  # DEBUG __out => &err.D.23228
  # DEBUG __s => "Invalid packet type: "
  # DEBUG __s => "Invalid packet type: "
  std::__ostream_insert<char, std::char_traits<char> > (&err.D.23228, "Invalid packet type: ", 21);

  <bb 23>:
  std::basic_ostream<char>::operator<< (&err.D.23228, 4);
  goto <bb 25>;

<L90>:
  goto <bb 119> (<L75>);

  <bb 25>:
  # DEBUG this => &err
  D.74233 = std::__cxx11::basic_stringbuf<char>::str (&err._M_stringbuf); [return slot optimization]
  goto <bb 27>;

<L91>:
  goto <bb 119> (<L75>);

  <bb 27>:
  _82 = &this_31(D)->D.65070;
  Module::Error (_82, &D.74233);

  <bb 28>:
  # DEBUG this => &D.74233
  # DEBUG this => &D.74233
  # DEBUG this => &D.74233
  _81 = MEM[(char * *)&D.74233];
  # DEBUG D#1 => &D.74233
  # DEBUG this => D#1
  # DEBUG this => &D.74233
  if (&D.74233.D.11539._M_local_buf != _81)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#629 => D.74233.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74233
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74233
  # DEBUG this => D#1
  # DEBUG this => &D.74233
  # DEBUG D#626 => &D.74233._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _81
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _81
  # DEBUG this => D#620
  # DEBUG D.141687 => D#621
  operator delete (_81);

  <bb 30>:
  # DEBUG D#630 => &D.74233._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74233 ={v} {CLOBBER};
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&err);
  err ={v} {CLOBBER};
  goto <bb 45>;

  <bb 31>:
  _50 = (long unsigned int) source_42(D);
  # DEBUG D#2467 => &this_31(D)->_repliesPending
  _230 = MEM[(struct list * *)this_31(D) + 808B];
  # DEBUG D#126 => D#2467
  # DEBUG __n => _50
  # DEBUG this => D#126
  _235 = _50 * 24;
  _236 = _230 + _235;
  # DEBUG this => NULL
  _84 = MEM[(struct _List_node_base * *)_236];
  # DEBUG this => D#342
  # DEBUG this => NULL
  # DEBUG __x => _84
  # DEBUG this => NULL
  rinfo_53 = MEM[(struct PacketReplyInfo * &)_84 + 16];
  # DEBUG rinfo => rinfo_53
  _54 = rinfo_53->type;
  if (_54 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # DEBUG D#2468 => &this_31(D)->_read_reply_size
  _220 = MEM[(int * *)this_31(D) + 336B];
  # DEBUG D#63 => D#2468
  # DEBUG __n => _38
  # DEBUG this => D#63
  _237 = _220 + _47;
  size_56 = *_237;
  # DEBUG size => size_56
  # DEBUG packet_type => 1
  goto <bb 44>;

  <bb 33>:
  if (_54 == 2)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # DEBUG D#2469 => &this_31(D)->_write_reply_size
  _221 = MEM[(int * *)this_31(D) + 384B];
  # DEBUG D#63 => D#2469
  # DEBUG __n => _38
  # DEBUG this => D#63
  _238 = _221 + _47;
  size_58 = *_238;
  # DEBUG size => size_58
  # DEBUG packet_type => 3
  goto <bb 44>;

  <bb 35>:
  std::__cxx11::basic_ostringstream<char>::__comp_ctor .constprop (&err);
  _60 = rinfo_53->type;
  _61 = (int) _60;
  # DEBUG __out => &err.D.23228
  # DEBUG __s => "Invalid packet type: "
  # DEBUG __s => "Invalid packet type: "
  std::__ostream_insert<char, std::char_traits<char> > (&err.D.23228, "Invalid packet type: ", 21);

  <bb 36>:
  std::basic_ostream<char>::operator<< (&err.D.23228, _61);
  goto <bb 38>;

<L93>:
  goto <bb 125> (<L78>);

  <bb 38>:
  # DEBUG this => &err
  D.74236 = std::__cxx11::basic_stringbuf<char>::str (&err._M_stringbuf); [return slot optimization]
  goto <bb 40>;

<L94>:
  goto <bb 125> (<L78>);

  <bb 40>:
  _64 = &this_31(D)->D.65070;
  Module::Error (_64, &D.74236);

  <bb 41>:
  # DEBUG this => &D.74236
  # DEBUG this => &D.74236
  # DEBUG this => &D.74236
  _63 = MEM[(char * *)&D.74236];
  # DEBUG D#1 => &D.74236
  # DEBUG this => D#1
  # DEBUG this => &D.74236
  if (&D.74236.D.11539._M_local_buf != _63)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#629 => D.74236.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74236
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74236
  # DEBUG this => D#1
  # DEBUG this => &D.74236
  # DEBUG D#626 => &D.74236._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _63
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _63
  # DEBUG this => D#620
  # DEBUG D.141722 => D#621
  operator delete (_63);

  <bb 43>:
  # DEBUG D#630 => &D.74236._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74236 ={v} {CLOBBER};
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&err);
  err ={v} {CLOBBER};
  pretmp_290 = MEM[(struct list * *)this_31(D) + 808B];
  pretmp_292 = pretmp_290 + _235;
  pretmp_373 = MEM[(struct _List_node_base * *)pretmp_292];

  <bb 44>:
  # packet_type_2 = PHI <1(32), 3(34), 4(43)>
  # size_4 = PHI <size_56(32), size_58(34), size_34(43)>
  # prephitmp_293 = PHI <_236(32), _236(34), pretmp_292(43)>
  # prephitmp_455 = PHI <_84(32), _84(34), pretmp_373(43)>
  # DEBUG size => size_4
  # DEBUG packet_type => packet_type_2
  packet_destination_72 = rinfo_53->source;
  # DEBUG packet_destination => packet_destination_72
  time_73 = rinfo_53->time;
  # DEBUG time => time_73
  record_74 = rinfo_53->record;
  # DEBUG record => record_74
  # DEBUG D#2470 => &this_31(D)->_repliesPending
  # DEBUG D#3415 => MEM[(struct list * *)this_31(D) + 808B]
  # DEBUG D#126 => D#2470
  # DEBUG __n => _50
  # DEBUG this => D#126
  # DEBUG D#3414 => D#3415 + _235
  # DEBUG this => D#3414
  # DEBUG D#3413 => MEM[(struct _List_node_base * *)D#3414]
  # DEBUG D#356 => D#3414
  # DEBUG this => D#356
  # DEBUG this => NULL
  # DEBUG __x => D#3413
  # DEBUG this => D#3414
  # DEBUG __position => D#3413
  # DEBUG __position$_M_node => D#3413
  # DEBUG D#1069 => &MEM[(struct list *)D#3414].D.71295
  # DEBUG D#362 => D#1069
  # DEBUG __n => 1
  # DEBUG this => D#362
  _339 = MEM[(long unsigned int *)prephitmp_293 + 16B];
  _340 = _339 + 18446744073709551615;
  MEM[(long unsigned int *)prephitmp_293 + 16B] = _340;
  std::__detail::_List_node_base::_M_unhook (prephitmp_455);
  # DEBUG __n => D#3413
  # DEBUG D#1070 => &MEM[(struct _Node *)D#3413]._M_data
  # DEBUG __r => D#1070
  # DEBUG D#1072 => &MEM[(struct list *)D#3414].D.71295
  # DEBUG D#1053 => D#1072
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1071 => &MEM[(struct list *)D#3414].D.71295
  # DEBUG D#563 => D#1071
  # DEBUG __p => D#3413
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => D#3413
  # DEBUG this => D#559
  # DEBUG D.160655 => D#560
  operator delete (prephitmp_455);
  PacketReplyInfo::Free (rinfo_53);

  <bb 45>:
  # time_1 = PHI <time_49(D)(16), time_73(44), time_49(D)(21), time_49(D)(30), time_49(D)(19)>
  # packet_type_3 = PHI <4(16), packet_type_2(44), 2(21), 4(30), 0(19)>
  # size_5 = PHI <size_34(16), size_4(44), size_78(21), size_34(30), size_91(19)>
  # packet_destination_6 = PHI <packet_destination_44(16), packet_destination_72(44), packet_destination_44(21), packet_destination_44(30), packet_destination_44(19)>
  # record_7 = PHI <0(16), record_74(44), 0(21), 0(30), 0(19)>
  # DEBUG record => record_7
  # DEBUG packet_destination => packet_destination_6
  # DEBUG size => size_5
  # DEBUG packet_type => packet_type_3
  # DEBUG time => time_1
  if (packet_destination_6 < 0)
    goto <bb 47>;
  else
    goto <bb 46>;

  <bb 46>:
  _92 = this_31(D)->_nodes;
  if (packet_destination_6 >= _92)
    goto <bb 47>;
  else
    goto <bb 60>;

  <bb 47>:
  std::__cxx11::basic_ostringstream<char>::__comp_ctor .constprop (&err);
  packet_type.469_94 = (int) packet_type_3;
  # DEBUG __out => &err.D.23228
  # DEBUG __s => "Incorrect packet destination "
  # DEBUG __s => "Incorrect packet destination "
  std::__ostream_insert<char, std::char_traits<char> > (&err.D.23228, "Incorrect packet destination ", 29);

  <bb 48>:
  _96 = std::basic_ostream<char>::operator<< (&err.D.23228, packet_destination_6);
  goto <bb 50>;

<L96>:
  goto <bb 131> (<L81>);

  <bb 50>:
  # DEBUG __out => _96
  # DEBUG __s => " for stype "
  # DEBUG __s => " for stype "
  std::__ostream_insert<char, std::char_traits<char> > (_96, " for stype ", 11);
  goto <bb 52>;

<L97>:
  goto <bb 131> (<L81>);

  <bb 52>:
  std::basic_ostream<char>::operator<< (_96, packet_type.469_94);
  goto <bb 54>;

<L98>:
  goto <bb 131> (<L81>);

  <bb 54>:
  # DEBUG this => &err
  D.74238 = std::__cxx11::basic_stringbuf<char>::str (&err._M_stringbuf); [return slot optimization]
  goto <bb 56>;

<L99>:
  goto <bb 131> (<L81>);

  <bb 56>:
  _99 = &this_31(D)->D.65070;
  Module::Error (_99, &D.74238);

  <bb 57>:
  # DEBUG this => &D.74238
  # DEBUG this => &D.74238
  # DEBUG this => &D.74238
  _98 = MEM[(char * *)&D.74238];
  # DEBUG D#1 => &D.74238
  # DEBUG this => D#1
  # DEBUG this => &D.74238
  if (&D.74238.D.11539._M_local_buf != _98)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#629 => D.74238.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74238
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74238
  # DEBUG this => D#1
  # DEBUG this => &D.74238
  # DEBUG D#626 => &D.74238._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _98
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _98
  # DEBUG this => D#620
  # DEBUG D.141750 => D#621
  operator delete (_98);

  <bb 59>:
  # DEBUG D#630 => &D.74238._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74238 ={v} {CLOBBER};
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&err);
  err ={v} {CLOBBER};

  <bb 60>:
  _107 = this_31(D)->_sim_state;
  if (_107 == 1)
    goto <bb 63>;
  else
    goto <bb 61>;

  <bb 61>:
  if (_107 == 2)
    goto <bb 62>;
  else
    goto <bb 64>;

  <bb 62>:
  _108 = this_31(D)->_drain_time;
  if (time_1 < _108)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG D#2473 => &this_31(D)->_measure_stats
  _222 = MEM[(int * *)this_31(D) + 1880B];
  # DEBUG D#63 => D#2473
  # DEBUG __n => _38
  # DEBUG this => D#63
  _240 = _222 + _47;
  _110 = *_240;
  record_111 = _110 != 0;
  # DEBUG record => record_111

  <bb 64>:
  # record_8 = PHI <record_7(61), record_7(62), record_111(63)>
  # DEBUG record => record_8
  if (packet_type_3 == 4)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  _112 = this_31(D)->_subnets;
  # DEBUG max => _112 + -1
  _241 = ran_next ();
  _242 = (long int) _112;
  _243 = _241 % _242;
  subnetwork_244 = (int) _243;
  goto <bb 67>;

  <bb 66>:
  _113 = (long unsigned int) packet_type_3;
  # DEBUG D#2474 => &this_31(D)->_subnet
  _223 = MEM[(int * *)this_31(D) + 752B];
  # DEBUG D#63 => D#2474
  # DEBUG __n => _113
  # DEBUG this => D#63
  _245 = _113 * 4;
  _246 = _223 + _245;
  subnetwork_115 = *_246;

  <bb 67>:
  # subnetwork_11 = PHI <subnetwork_244(65), subnetwork_115(66)>
  # DEBUG subnetwork => subnetwork_11
  if (watch_10 != 0)
    goto <bb 68>;
  else
    goto <bb 69>;

  <bb 68>:
  _117 = GetSimTime ();
  gWatchOut.467_118 = gWatchOut;
  _120 = std::basic_ostream<char>::operator<< (gWatchOut.467_118, _117);
  # DEBUG __out => _120
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_120, " | ", 3);
  # DEBUG __out => _120
  # DEBUG __s => "node"
  # DEBUG __s => "node"
  std::__ostream_insert<char, std::char_traits<char> > (_120, "node", 4);
  _122 = std::basic_ostream<char>::operator<< (_120, source_42(D));
  # DEBUG __out => _122
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_122, " | ", 3);
  # DEBUG __out => _122
  # DEBUG __s => "Enqueuing packet "
  # DEBUG __s => "Enqueuing packet "
  std::__ostream_insert<char, std::char_traits<char> > (_122, "Enqueuing packet ", 17);
  _124 = std::basic_ostream<char>::operator<< (_122, _35);
  # DEBUG __out => _124
  # DEBUG __s => " at time "
  # DEBUG __s => " at time "
  std::__ostream_insert<char, std::char_traits<char> > (_124, " at time ", 9);
  _126 = std::basic_ostream<char>::operator<< (_124, time_1);
  # DEBUG __out => _126
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_126, ".", 1);
  # DEBUG this => _126
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_126);

  <bb 69>:
  # DEBUG i => 0
  if (size_5 <= 0)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  # DEBUG D#2462 => {CLOBBER}
  # DEBUG pid => D#2462
  return;

  <bb 71>:
  _259 = _38 * 48;
  _295 = (unsigned int) time_1;
  _286 = 2147483647 - _295;
  _173 = (int) _286;
  _178 = (long unsigned int) source_42(D);
  _263 = _178 * 4;
  _210 = (long unsigned int) source_42(D);
  _267 = _210 * 24;
  _265 = _38 * 24;

  <bb 72>:
  # i_347 = PHI <0(71), i_213(113)>
  # DEBUG i => i_347
  f_129 = Flit::New ();
  # DEBUG f => f_129
  _131 = this_31(D)->_cur_id;
  _132 = _131 + 1;
  this_31(D)->_cur_id = _132;
  f_129->id = _131;
  if (_132 == 0)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  __assert_fail ("_cur_id", "trafficmanager.cpp", 862, &__PRETTY_FUNCTION__);

  <bb 74>:
  f_129->pid = _35;
  gWatchOut.467_136 = gWatchOut;
  if (gWatchOut.467_136 != 0B)
    goto <bb 75>;
  else
    goto <bb 84>;

  <bb 75>:
  # DEBUG D#2475 => &f_129->id
  # DEBUG D#2476 => &this_31(D)->_flits_to_watch
  # DEBUG this => D#2476
  # DEBUG __x => D#2475
  # DEBUG D#1602 => &MEM[(const struct set *)D#2476]._M_t
  # DEBUG this => D#1602
  __y_127 = &MEM[(const struct _Rb_tree *)this_31(D) + 2048B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_127
  # DEBUG D#1603 => &MEM[(const struct set *)D#2476]._M_t
  # DEBUG this => D#1603
  # DEBUG __k => D#2475
  # DEBUG this => D#1603
  __y_247 = MEM[(struct _Rb_tree_node_base * *)this_31(D) + 2064B];
  # DEBUG D#354 => D#1603
  # DEBUG this => D#354
  # DEBUG D#1593 => D#1603
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => D#2475
  # DEBUG __y => __y_127
  # DEBUG __x => __y_247
  if (__y_247 == 0B)
    goto <bb 84>;
  else
    goto <bb 78>;

  <bb 76>:
  # __y_18 = PHI <__y_251(81), __y_250(80)>
  # __y_13 = PHI <__y_434(81), __y_450(80)>
  # DEBUG __y => __y_13
  # DEBUG __x => __y_18
  if (__y_18 == 0B)
    goto <bb 82>;
  else
    goto <bb 77>;

  <bb 77>:
  goto <bb 79>;

  <bb 78>:

  <bb 79>:
  # __y_450 = PHI <__y_247(78), __y_18(77)>
  # __y_434 = PHI <__y_127(78), __y_13(77)>
  # DEBUG __y => __y_434
  # DEBUG __x => __y_450
  # DEBUG __x => __y_450
  # DEBUG __x => __y_450
  # DEBUG this => __y_450
  # DEBUG D#1590 => &__y_450->_M_value_field
  # DEBUG __r => D#1590
  # DEBUG __x => D#1590
  # DEBUG this => D#328
  # DEBUG D#1591 => &D#1592->_M_impl._M_key_compare
  # DEBUG D#333 => D#1591
  _249 = MEM[(const int &)__y_450 + 32];
  # DEBUG D#334 => D#1590
  # DEBUG D#335 => D#2475
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (_131 <= _249)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  # DEBUG __y => __y_450
  __y_250 = MEM[(struct _Rb_tree_node_base * *)__y_450 + 16B];
  # DEBUG D#617 => __y_450
  # DEBUG __x => D#617
  # DEBUG __x => NULL
  goto <bb 76>;

  <bb 81>:
  __y_251 = MEM[(struct _Rb_tree_node_base * *)__y_450 + 24B];
  # DEBUG D#618 => __y_450
  # DEBUG __x => D#618
  # DEBUG __x => NULL
  goto <bb 76>;

  <bb 82>:
  # __y_297 = PHI <__y_13(76)>
  # DEBUG this => NULL
  # DEBUG __x => __y_297
  # DEBUG __j$_M_node => __y_297
  # DEBUG this => D#1603
  # DEBUG this => NULL
  # DEBUG __x => __y_127
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_297 == __y_127)
    goto <bb 84>;
  else
    goto <bb 83>;

  <bb 83>:
  # DEBUG __x => __y_297
  # DEBUG __x => __y_297
  # DEBUG this => __y_297
  # DEBUG D#1599 => &__y_297->_M_value_field
  # DEBUG __r => D#1599
  # DEBUG __x => D#1599
  # DEBUG this => D#328
  # DEBUG D#1601 => &MEM[(const struct _Rb_tree *)D#1603]._M_impl._M_key_compare
  # DEBUG D#333 => D#1601
  # DEBUG D#334 => D#2475
  _253 = MEM[(const int &)__y_297 + 32];
  # DEBUG D#335 => D#1599
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  # DEBUG D#1600 => {CLOBBER}
  # DEBUG __j$_M_node => D#1600
  # DEBUG this => NULL
  # DEBUG __x => NULL
  _464 = _131 >= _253;

  <bb 84>:
  # iftmp.474_12 = PHI <_464(83), 0(75), 0(74), 0(82)>
  _138 = watch_10 | iftmp.474_12;
  f_129->watch = _138;
  f_129->subnetwork = subnetwork_11;
  f_129->src = source_42(D);
  f_129->ctime = time_1;
  f_129->record = record_8;
  f_129->cl = cl_32(D);
  # DEBUG __x => _131
  # DEBUG __y => f_129
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG this => &D.74243
  # DEBUG __p => &D.74242
  D.74243.first = _131;
  D.74243.second = f_129;
  # DEBUG D#2477 => &this_31(D)->_total_in_flight_flits
  _228 = MEM[(struct map * *)this_31(D) + 672B];
  # DEBUG D#125 => D#2477
  # DEBUG __n => _38
  # DEBUG this => D#125
  _260 = _228 + _259;
  # DEBUG this => NULL
  # DEBUG __x => &D.74243
  _258 = &_260->_M_t;
  D.141808 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_insert_unique (_258, &D.74243);
  D.74243 ={v} {CLOBBER};
  if (record_8 != 0)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  _149 = f_129->id;
  # DEBUG __x => _149
  # DEBUG __y => f_129
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG this => &D.74246
  # DEBUG __p => &D.74245
  D.74246.first = _149;
  D.74246.second = f_129;
  _150 = f_129->cl;
  _151 = (long unsigned int) _150;
  # DEBUG D#2478 => &this_31(D)->_measured_in_flight_flits
  _229 = MEM[(struct map * *)this_31(D) + 696B];
  # DEBUG D#125 => D#2478
  # DEBUG __n => _151
  # DEBUG this => D#125
  _146 = _151 * 48;
  _261 = _229 + _146;
  # DEBUG this => NULL
  # DEBUG __x => &D.74246
  _145 = &_261->_M_t;
  D.141824 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_insert_unique (_145, &D.74246);
  D.74246 ={v} {CLOBBER};

  <bb 86>:
  gTrace.475_154 = gTrace;
  if (gTrace.475_154 != 0)
    goto <bb 87>;
  else
    goto <bb 94>;

  <bb 87>:
  _156 = f_129->src;
  # DEBUG __out => &cout
  # DEBUG __s => "New Flit "
  # DEBUG __s => "New Flit "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "New Flit ", 9);
  _158 = std::basic_ostream<char>::operator<< (&cout, _156);
  # DEBUG this => _158
  # DEBUG __pf => endl
  # DEBUG __os => _158
  _75 = _158->_vptr.basic_ostream;
  _341 = MEM[(long int *)_75 + -24B];
  _342 = (sizetype) _341;
  _343 = _158 + _342;
  # DEBUG this => _343
  # DEBUG __c => 10
  _327 = MEM[(const struct basic_ios *)_343]._M_ctype;
  # DEBUG __f => _327
  if (_327 == 0B)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  std::__throw_bad_cast ();

  <bb 89>:
  # DEBUG this => _327
  # DEBUG __c => 10
  _348 = MEM[(const struct ctype *)_327]._M_widen_ok;
  if (_348 != 0)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  _351 = MEM[(const struct ctype *)_327]._M_widen[10];
  pretmp_306 = (int) _351;
  goto <bb 93>;

  <bb 91>:
  # DEBUG this => _327
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_327);
  _356 = MEM[(const struct ctype *)_327].D.16885._vptr.facet;
  _357 = MEM[(int (*__vtbl_ptr_type) () *)_356 + 48B];
  PROF_361 = [obj_type_ref] OBJ_TYPE_REF(_357;(const struct ctype)_327->6);
  if (PROF_361 == do_widen)
    goto <bb 93>;
  else
    goto <bb 92>;

  <bb 92>:
  _363 = OBJ_TYPE_REF(_357;(const struct ctype)_327->6) (_327, 10);
  pretmp_278 = (int) _363;

  <bb 93>:
  # prephitmp_279 = PHI <pretmp_306(90), 10(91), pretmp_278(92)>
  _346 = std::basic_ostream<char>::put (_158, prephitmp_279);
  # DEBUG __os => _346
  std::basic_ostream<char>::flush (_346);

  <bb 94>:
  f_129->type = packet_type_3;
  if (i_347 == 0)
    goto <bb 96>;
  else
    goto <bb 95>;

  <bb 95>:

  <bb 96>:
  # cstore_163 = PHI <1(94), 0(95)>
  # cstore_164 = PHI <packet_destination_6(94), -1(95)>
  f_129->dest = cstore_164;
  f_129->head = cstore_163;
  _165 = this_31(D)->_pri_type;
  switch (_165) <default: <L65>, case 0: <L56>, case 1: <L59>, case 6: <L62>>

<L56>:
  # DEBUG D#2479 => &this_31(D)->_class_priority
  _224 = MEM[(int * *)this_31(D) + 432B];
  # DEBUG D#63 => D#2479
  # DEBUG __n => _38
  # DEBUG this => D#63
  _262 = _224 + _47;
  _168 = *_262;
  f_129->pri = _168;
  if (_168 < 0)
    goto <bb 99>;
  else
    goto <bb 98>;

  <bb 98>:
  goto <bb 105>;

  <bb 99>:
  __assert_fail ("f->pri >= 0", "trafficmanager.cpp", 892, &__PRETTY_FUNCTION__);

<L59>:
  f_129->pri = _173;
  if (_173 < 0)
    goto <bb 101>;
  else
    goto <bb 98>;

  <bb 101>:
  __assert_fail ("f->pri >= 0", "trafficmanager.cpp", 896, &__PRETTY_FUNCTION__);

<L62>:
  # DEBUG D#2480 => &this_31(D)->_packet_seq_no
  _225 = MEM[(int * *)this_31(D) + 784B];
  # DEBUG D#63 => D#2480
  # DEBUG __n => (long unsigned int) source_42(D)
  # DEBUG this => D#63
  _264 = _225 + _263;
  _180 = *_264;
  _181 = 2147483647 - _180;
  f_129->pri = _181;
  if (_181 < 0)
    goto <bb 103>;
  else
    goto <bb 98>;

  <bb 103>:
  __assert_fail ("f->pri >= 0", "trafficmanager.cpp", 900, &__PRETTY_FUNCTION__);

<L65>:
  f_129->pri = 0;

  <bb 105>:
  _186 = size_5 + -1;
  _457 = _186 == i_347;
  f_129->tail = _457;
  f_129->vc = -1;
  _193 = f_129->watch;
  if (_193 != 0)
    goto <bb 106>;
  else
    goto <bb 112>;

  <bb 106>:
  _194 = f_129->pid;
  _195 = f_129->id;
  _197 = GetSimTime ();
  gWatchOut.467_198 = gWatchOut;
  _200 = std::basic_ostream<char>::operator<< (gWatchOut.467_198, _197);
  # DEBUG __out => _200
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_200, " | ", 3);
  # DEBUG __out => _200
  # DEBUG __s => "node"
  # DEBUG __s => "node"
  std::__ostream_insert<char, std::char_traits<char> > (_200, "node", 4);
  _202 = std::basic_ostream<char>::operator<< (_200, source_42(D));
  # DEBUG __out => _202
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_202, " | ", 3);
  # DEBUG __out => _202
  # DEBUG __s => "Enqueuing flit "
  # DEBUG __s => "Enqueuing flit "
  std::__ostream_insert<char, std::char_traits<char> > (_202, "Enqueuing flit ", 15);
  _204 = std::basic_ostream<char>::operator<< (_202, _195);
  # DEBUG __out => _204
  # DEBUG __s => " (packet "
  # DEBUG __s => " (packet "
  std::__ostream_insert<char, std::char_traits<char> > (_204, " (packet ", 9);
  _206 = std::basic_ostream<char>::operator<< (_204, _194);
  # DEBUG __out => _206
  # DEBUG __s => ") at time "
  # DEBUG __s => ") at time "
  std::__ostream_insert<char, std::char_traits<char> > (_206, ") at time ", 10);
  _208 = std::basic_ostream<char>::operator<< (_206, time_1);
  # DEBUG __out => _208
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_208, ".", 1);
  # DEBUG this => _208
  # DEBUG __pf => endl
  # DEBUG __os => _208
  _366 = _208->_vptr.basic_ostream;
  _367 = MEM[(long int *)_366 + -24B];
  _368 = (sizetype) _367;
  _369 = _208 + _368;
  # DEBUG this => _369
  # DEBUG __c => 10
  _335 = MEM[(const struct basic_ios *)_369]._M_ctype;
  # DEBUG __f => _335
  if (_335 == 0B)
    goto <bb 88>;
  else
    goto <bb 107>;

  <bb 107>:
  # DEBUG this => _335
  # DEBUG __c => 10
  _374 = MEM[(const struct ctype *)_335]._M_widen_ok;
  if (_374 != 0)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  _377 = MEM[(const struct ctype *)_335]._M_widen[10];
  pretmp_303 = (int) _377;
  goto <bb 111>;

  <bb 109>:
  # DEBUG this => _335
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_335);
  _382 = MEM[(const struct ctype *)_335].D.16885._vptr.facet;
  _383 = MEM[(int (*__vtbl_ptr_type) () *)_382 + 48B];
  PROF_387 = [obj_type_ref] OBJ_TYPE_REF(_383;(const struct ctype)_335->6);
  if (PROF_387 == do_widen)
    goto <bb 111>;
  else
    goto <bb 110>;

  <bb 110>:
  _389 = OBJ_TYPE_REF(_383;(const struct ctype)_335->6) (_335, 10);
  pretmp_304 = (int) _389;

  <bb 111>:
  # prephitmp_305 = PHI <pretmp_303(108), 10(109), pretmp_304(110)>
  _372 = std::basic_ostream<char>::put (_208, prephitmp_305);
  # DEBUG __os => _372
  std::basic_ostream<char>::flush (_372);

  <bb 112>:
  # DEBUG D#2481 => &this_31(D)->_partial_packets
  _227 = MEM[(struct vector * *)this_31(D) + 648B];
  # DEBUG D#78 => D#2481
  # DEBUG __n => (long unsigned int) source_42(D)
  # DEBUG this => D#78
  _268 = _227 + _267;
  _232 = MEM[(struct list * *)_268];
  # DEBUG __n => _38
  # DEBUG this => D#127
  _266 = _232 + _265;
  # DEBUG this => NULL
  # DEBUG __x => &f
  # DEBUG this => NULL
  _209 = &_266->D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _209
  # DEBUG this => _266
  # DEBUG __x => &f
  # DEBUG D#1615 => _266
  # DEBUG __x => &f
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.160696 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _392 = operator new (24);
  # DEBUG __p => _392
  # DEBUG D#3412 => &MEM[(struct _Node *)_392]._M_data
  # DEBUG __r => D#3412
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => &f
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  MEM[(struct Flit * *)_392 + 16B] = f_129;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _392
  _396 = &MEM[(struct _Node *)_392].D.82395;
  std::__detail::_List_node_base::_M_hook (_396, _209);
  # DEBUG D#1616 => &_266->D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _397 = MEM[(long unsigned int *)_266 + 16B];
  _398 = _397 + 1;
  MEM[(long unsigned int *)_266 + 16B] = _398;
  # DEBUG D#3411 => {CLOBBER}
  # DEBUG f => D#3411
  i_213 = i_347 + 1;
  # DEBUG i => i_213
  # DEBUG i => i_213
  if (size_5 <= i_213)
    goto <bb 70>;
  else
    goto <bb 113>;

  <bb 113>:
  goto <bb 72>;

<L74>:
  # DEBUG this => &D.74233
  # DEBUG this => &D.74233
  # DEBUG this => &D.74233
  _269 = MEM[(char * *)&D.74233];
  # DEBUG D#1 => &D.74233
  # DEBUG this => D#1
  # DEBUG this => &D.74233
  if (&D.74233.D.11539._M_local_buf != _269)
    goto <bb 115>;
  else
    goto <bb 116>;

  <bb 115>:
  # DEBUG D#629 => D.74233.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74233
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74233
  # DEBUG this => D#1
  # DEBUG this => &D.74233
  # DEBUG D#626 => &D.74233._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _269
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _269
  # DEBUG this => D#620
  # DEBUG D.141906 => D#621
  operator delete (_269);

  <bb 116>:
  # DEBUG D#630 => &D.74233._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74233 ={v} {CLOBBER};
  resx 4

<L100>:
  goto <bb 119> (<L75>);

<L89>:

<L75>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&err);
  resx 3

<L77>:
  # DEBUG this => &D.74236
  # DEBUG this => &D.74236
  # DEBUG this => &D.74236
  _88 = MEM[(char * *)&D.74236];
  # DEBUG D#1 => &D.74236
  # DEBUG this => D#1
  # DEBUG this => &D.74236
  if (&D.74236.D.11539._M_local_buf != _88)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  # DEBUG D#629 => D.74236.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74236
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74236
  # DEBUG this => D#1
  # DEBUG this => &D.74236
  # DEBUG D#626 => &D.74236._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _88
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _88
  # DEBUG this => D#620
  # DEBUG D.141921 => D#621
  operator delete (_88);

  <bb 122>:
  # DEBUG D#630 => &D.74236._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74236 ={v} {CLOBBER};
  resx 10

<L101>:
  goto <bb 125> (<L78>);

<L92>:

<L78>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&err);
  resx 9

<L80>:
  # DEBUG this => &D.74238
  # DEBUG this => &D.74238
  # DEBUG this => &D.74238
  _69 = MEM[(char * *)&D.74238];
  # DEBUG D#1 => &D.74238
  # DEBUG this => D#1
  # DEBUG this => &D.74238
  if (&D.74238.D.11539._M_local_buf != _69)
    goto <bb 127>;
  else
    goto <bb 128>;

  <bb 127>:
  # DEBUG D#629 => D.74238.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.74238
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.74238
  # DEBUG this => D#1
  # DEBUG this => &D.74238
  # DEBUG D#626 => &D.74238._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _69
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _69
  # DEBUG this => D#620
  # DEBUG D.141936 => D#621
  operator delete (_69);

  <bb 128>:
  # DEBUG D#630 => &D.74238._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.74238 ={v} {CLOBBER};
  resx 16

<L102>:
  goto <bb 131> (<L81>);

<L95>:

<L81>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&err);
  resx 15

}



;; Function void TrafficManager::_Inject() (_ZN14TrafficManager7_InjectEv, funcdef_no=2473, decl_uid=64977, cgraph_uid=721, symbol_order=722)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void TrafficManager::_Inject() (struct TrafficManager * const this)
{
  int result;
  int D.160803;
  int stype;
  bool generated;
  int c;
  int input;
  int iftmp.482_6;
  long unsigned int _20;
  int & _22;
  struct vector & _24;
  int _25;
  int _26;
  int (*__vtbl_ptr_type) () * _27;
  int (*__vtbl_ptr_type) () _28;
  int _31;
  int iftmp.482_34;
  int iftmp.482_35;
  struct list & _37;
  int _38;
  long unsigned int _39;
  int _42;
  eSimState _44;
  const struct _List_node_base * _45;
  int _46;
  int _47;
  struct _List_node_base * _48;
  unsigned int _49;
  int * _52;
  int * _53;
  int * _54;
  int * _56;
  struct vector * _57;
  struct vector * _58;
  struct vector * _60;
  struct vector * _61;
  struct vector * _62;
  struct list * _63;
  _Bit_type * _64;
  struct vector & _65;
  int & _67;
  struct vector & _68;
  int & _70;
  int & _74;
  struct vector & _75;
  long unsigned int _76;
  long unsigned int _77;
  unsigned int _78;
  long unsigned int _79;
  long unsigned int _80;
  _Bit_type * _81;
  long unsigned int _82;
  long unsigned int _83;
  struct vector & _84;
  void * PROF_86;
  int * _91;
  int & _93;
  int _94;
  struct list * _96;
  struct list & _98;
  struct _List_node_base * _99;
  const struct _List_node_base * _100;
  struct PacketReplyInfo * _101;
  int _102;
  struct InjectionProcess * * _104;
  long unsigned int _105;
  struct InjectionProcess * & _106;
  struct InjectionProcess * _107;
  int (*__vtbl_ptr_type) () * _108;
  int (*__vtbl_ptr_type) () _109;
  bool _110;
  double _111;
  double * _112;
  double & _113;
  double _114;
  int * _115;
  long unsigned int _116;
  int & _117;
  int _118;
  int _119;
  struct InjectionProcess * * _120;
  long unsigned int _121;
  struct InjectionProcess * & _122;
  struct InjectionProcess * _123;
  int (*__vtbl_ptr_type) () * _124;
  int (*__vtbl_ptr_type) () _125;
  bool _126;
  int * _128;
  long unsigned int _129;
  int & _130;
  int _131;
  int _132;
  bool _133;
  int * _135;
  int & _137;
  int _138;
  int _139;
  bool _156;
  bool _160;
  int prephitmp_165;
  int _171;
  int prephitmp_208;
  int prephitmp_213;
  long unsigned int pretmp_215;
  long unsigned int pretmp_216;
  int prephitmp_223;
  long unsigned int pretmp_227;
  long unsigned int prephitmp_249;
  long unsigned int pretmp_250;
  long unsigned int prephitmp_251;
  struct vector * pretmp_252;
  struct vector * pretmp_254;
  int * pretmp_256;
  int * pretmp_258;
  int * prephitmp_259;
  int pretmp_260;
  int prephitmp_261;
  int pretmp_267;
  int prephitmp_268;
  int pretmp_269;
  int prephitmp_270;
  int pretmp_271;
  int pretmp_272;
  int prephitmp_274;
  struct vector * pretmp_275;
  struct vector * pretmp_277;
  int * pretmp_279;
  int * pretmp_281;
  int * prephitmp_282;
  int pretmp_283;
  int prephitmp_284;
  struct vector * pretmp_285;
  struct vector * pretmp_287;
  int * pretmp_289;
  int * pretmp_291;
  int * prephitmp_292;
  int pretmp_293;
  int prephitmp_294;
  struct vector * pretmp_295;
  struct vector * pretmp_297;
  int * pretmp_299;
  int * pretmp_301;
  int * prephitmp_302;
  int pretmp_303;
  int prephitmp_304;

  <bb 2>:
  # DEBUG input => 0
  # DEBUG input => 0
  _171 = this_17(D)->_nodes;
  if (_171 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:
  pretmp_267 = this_17(D)->_classes;

  <bb 5>:
  # input_163 = PHI <0(4), input_51(34)>
  # prephitmp_208 = PHI <_171(4), prephitmp_270(34)>
  # prephitmp_268 = PHI <pretmp_267(4), prephitmp_213(34)>
  # DEBUG input => input_163
  # DEBUG c => 0
  if (prephitmp_268 <= 0)
    goto <bb 33>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_215 = (long unsigned int) input_163;
  pretmp_216 = pretmp_215 * 24;
  _129 = pretmp_215 * 4;
  _116 = pretmp_215 * 4;
  pretmp_250 = pretmp_215 * 4;
  _83 = pretmp_215 * 40;

  <bb 7>:
  # c_142 = PHI <0(6), c_50(31)>
  # prephitmp_223 = PHI <prephitmp_268(6), prephitmp_274(31)>
  # DEBUG c => c_142
  _20 = (long unsigned int) c_142;
  # DEBUG D#3420 => (long unsigned int) input_163
  # DEBUG D#2482 => &this_17(D)->_partial_packets
  _62 = MEM[(struct vector * *)this_17(D) + 648B];
  # DEBUG D#78 => D#2482
  # DEBUG __n => D#3420
  # DEBUG this => D#78
  _24 = _62 + pretmp_216;
  _63 = MEM[(struct list * *)_24];
  # DEBUG __n => _20
  # DEBUG this => D#127
  _39 = _20 * 24;
  _37 = _63 + _39;
  # DEBUG this => NULL
  _48 = MEM[(const struct list *)_37].D.71295._M_impl._M_node.D.37893._M_next;
  _45 = &MEM[(const struct list *)_37].D.71295._M_impl._M_node.D.37893;
  if (_45 == _48)
    goto <bb 8>;
  else
    goto <bb 30>;

  <bb 8>:
  pretmp_227 = _20 * 4;
  _121 = _20 * 8;
  _105 = _20 * 8;
  goto <bb 11>;

  <bb 9>:
  # generated_97 = PHI <1(27), generated_127(42)>
  # DEBUG generated => generated_97
  if (generated_97 != 0)
    goto <bb 35>;
  else
    goto <bb 10>;

  <bb 10>:

  <bb 11>:
  # DEBUG generated => 0
  # DEBUG D#2486 => &this_17(D)->_qtime
  _57 = MEM[(struct vector * *)this_17(D) + 600B];
  # DEBUG D#67 => D#2486
  # DEBUG __n => D#3420
  # DEBUG this => D#67
  _65 = _57 + pretmp_216;
  _52 = MEM[(int * *)_65];
  # DEBUG __n => _20
  # DEBUG this => D#63
  _22 = _52 + pretmp_227;
  _25 = *_22;
  _26 = this_17(D)->_time;
  if (_25 <= _26)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 12>:
  # DEBUG this => this_17(D)
  # DEBUG source => input_163
  # DEBUG cl => c_142
  # DEBUG result => 0
  # DEBUG D#343 => &this_17(D)->_use_read_write
  _91 = MEM[(int * *)this_17(D) + 264B];
  # DEBUG D#63 => D#343
  # DEBUG __n => _20
  # DEBUG this => D#63
  _93 = _91 + pretmp_227;
  _94 = *_93;
  if (_94 != 0)
    goto <bb 13>;
  else
    goto <bb 20>;

  <bb 13>:
  # DEBUG D#344 => &this_17(D)->_repliesPending
  _96 = MEM[(struct list * *)this_17(D) + 808B];
  # DEBUG D#126 => D#344
  # DEBUG __n => D#3420
  # DEBUG this => D#126
  _98 = _96 + pretmp_216;
  # DEBUG this => NULL
  _99 = MEM[(const struct list *)_98].D.73144._M_impl._M_node.D.37893._M_next;
  _100 = &MEM[(const struct list *)_98].D.73144._M_impl._M_node.D.37893;
  if (_99 != _100)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#348 => &this_17(D)->_repliesPending
  # DEBUG D#126 => D#348
  # DEBUG __n => D#3420
  # DEBUG this => D#126
  # DEBUG this => NULL
  # DEBUG this => D#342
  # DEBUG this => NULL
  # DEBUG __x => _99
  # DEBUG this => NULL
  _101 = MEM[(struct PacketReplyInfo * &)_99 + 16];
  _102 = _101->time;
  if (_26 >= _102)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 15>:
  # DEBUG D#345 => &this_17(D)->_injection_process
  _104 = MEM[(struct InjectionProcess * * *)this_17(D) + 504B];
  # DEBUG D#71 => D#345
  # DEBUG __n => _20
  # DEBUG this => D#71
  _106 = _104 + _105;
  _107 = *_106;
  _108 = _107->_vptr.InjectionProcess;
  _109 = MEM[(int (*__vtbl_ptr_type) () *)_108 + 16B];
  _110 = OBJ_TYPE_REF(_109;(struct InjectionProcess)_107->2) (_107, input_163);
  if (_110 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  pretmp_252 = MEM[(struct vector * *)this_17(D) + 600B];
  pretmp_254 = pretmp_252 + pretmp_216;
  pretmp_256 = MEM[(int * *)pretmp_254];
  pretmp_258 = pretmp_256 + pretmp_227;
  pretmp_260 = *pretmp_258;
  goto <bb 37>;

  <bb 17>:
  _111 = ranf_next ();
  # DEBUG D#349 => &this_17(D)->_write_fraction
  _112 = MEM[(double * *)this_17(D) + 288B];
  # DEBUG D#69 => D#349
  # DEBUG __n => _20
  # DEBUG this => D#69
  _113 = _112 + _105;
  _114 = *_113;
  if (_111 < _114)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:

  <bb 19>:
  # stype_140 = PHI <2(17), 1(18)>
  # DEBUG result => stype_140
  # DEBUG D#350 => &this_17(D)->_requestsOutstanding
  _115 = MEM[(int * *)this_17(D) + 832B];
  # DEBUG D#63 => D#350
  # DEBUG __n => D#3420
  # DEBUG this => D#63
  _117 = _115 + _116;
  _118 = *_117;
  _119 = _118 + 1;
  *_117 = _119;
  goto <bb 38>;

  <bb 20>:
  # DEBUG D#346 => &this_17(D)->_injection_process
  _120 = MEM[(struct InjectionProcess * * *)this_17(D) + 504B];
  # DEBUG D#71 => D#346
  # DEBUG __n => _20
  # DEBUG this => D#71
  _122 = _120 + _121;
  _123 = *_122;
  _124 = _123->_vptr.InjectionProcess;
  _125 = MEM[(int (*__vtbl_ptr_type) () *)_124 + 16B];
  _126 = OBJ_TYPE_REF(_125;(struct InjectionProcess)_123->2) (_123, input_163);
  stype_89 = (int) _126;
  # DEBUG result => stype_89
  # DEBUG D#347 => &this_17(D)->_requestsOutstanding
  _128 = MEM[(int * *)this_17(D) + 832B];
  # DEBUG D#63 => D#347
  # DEBUG __n => D#3420
  # DEBUG this => D#63
  _130 = _128 + _129;
  _131 = *_130;
  _132 = _131 + 1;
  *_130 = _132;
  # DEBUG result => stype_89
  if (_126 != 0)
    goto <bb 21>;
  else
    goto <bb 39>;

  <bb 21>:
  # stype_154 = PHI <stype_89(20), stype_40(38)>
  # prephitmp_249 = PHI <_129(20), prephitmp_251(38)>
  # DEBUG result => stype_154
  # DEBUG D#351 => &this_17(D)->_packet_seq_no
  _135 = MEM[(int * *)this_17(D) + 784B];
  # DEBUG D#63 => D#351
  # DEBUG __n => D#3420
  # DEBUG this => D#63
  _137 = _135 + prephitmp_249;
  _138 = *_137;
  _139 = _138 + 1;
  *_137 = _139;
  goto <bb 23>;

  <bb 22>:
  stype_88 = OBJ_TYPE_REF(_28;(struct TrafficManager)this_17(D)->4) (this_17(D), input_163, c_142);

  <bb 23>:
  # stype_30 = PHI <stype_88(22), stype_154(21)>
  # DEBUG stype => stype_30
  if (stype_30 != 0)
    goto <bb 24>;
  else
    goto <bb 44>;

  <bb 24>:
  _31 = this_17(D)->_include_queuing;
  if (_31 == 1)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#2483 => &this_17(D)->_qtime
  _58 = MEM[(struct vector * *)this_17(D) + 600B];
  # DEBUG D#67 => D#2483
  # DEBUG __n => D#3420
  # DEBUG this => D#67
  _68 = _58 + pretmp_216;
  _53 = MEM[(int * *)_68];
  # DEBUG __n => _20
  # DEBUG this => D#63
  _67 = _53 + pretmp_227;
  iftmp.482_34 = *_67;
  goto <bb 27>;

  <bb 26>:
  iftmp.482_35 = this_17(D)->_time;

  <bb 27>:
  # iftmp.482_6 = PHI <iftmp.482_34(25), iftmp.482_35(26)>
  TrafficManager::_GeneratePacket (this_17(D), input_163, stype_30, c_142, iftmp.482_6);
  # DEBUG generated => 1
  # DEBUG generated => 1
  # DEBUG D#2484 => &this_17(D)->_use_read_write
  _54 = MEM[(int * *)this_17(D) + 264B];
  # DEBUG D#63 => D#2484
  # DEBUG __n => _20
  # DEBUG this => D#63
  _70 = _54 + pretmp_227;
  _38 = *_70;
  _133 = stype_30 >= 0;
  _156 = _38 == 0;
  _160 = _133 | _156;
  if (_160 != 0)
    goto <bb 41>;
  else
    goto <bb 9>;

  <bb 28>:
  # DEBUG D#2487 => &this_17(D)->_qtime
  _60 = MEM[(struct vector * *)this_17(D) + 600B];
  # DEBUG D#67 => D#2487
  # DEBUG __n => D#3420
  # DEBUG this => D#67
  _75 = _60 + pretmp_216;
  _56 = MEM[(int * *)_75];
  # DEBUG __n => _20
  # DEBUG this => D#63
  _74 = _56 + pretmp_227;
  _46 = *_74;
  _47 = this_17(D)->_drain_time;
  if (_46 > _47)
    goto <bb 43>;
  else
    goto <bb 29>;

  <bb 29>:
  pretmp_272 = this_17(D)->_classes;

  <bb 30>:
  # prephitmp_274 = PHI <prephitmp_223(7), pretmp_271(43), pretmp_272(29)>
  c_50 = c_142 + 1;
  # DEBUG c => c_50
  # DEBUG c => c_50
  if (c_50 >= prephitmp_274)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 7>;

  <bb 32>:
  # prephitmp_165 = PHI <prephitmp_274(30)>
  pretmp_269 = this_17(D)->_nodes;

  <bb 33>:
  # prephitmp_213 = PHI <prephitmp_165(32), prephitmp_268(5)>
  # prephitmp_270 = PHI <pretmp_269(32), prephitmp_208(5)>
  input_51 = input_163 + 1;
  # DEBUG input => input_51
  # DEBUG input => input_51
  if (input_51 >= prephitmp_270)
    goto <bb 3>;
  else
    goto <bb 34>;

  <bb 34>:
  goto <bb 5>;

  <bb 35>:
  _44 = this_17(D)->_sim_state;
  if (_44 == 2)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 36>:
  _27 = this_17(D)->D.65070._vptr.Module;
  _28 = MEM[(int (*__vtbl_ptr_type) () *)_27 + 32B];
  PROF_86 = [obj_type_ref] OBJ_TYPE_REF(_28;(struct TrafficManager)this_17(D)->4);
  if (PROF_86 == _IssuePacket)
    goto <bb 12>;
  else
    goto <bb 22>;

  <bb 37>:
  # prephitmp_259 = PHI <pretmp_258(16), _22(14)>
  # prephitmp_261 = PHI <pretmp_260(16), _25(14)>
  # DEBUG result => 0
  goto <bb 40>;

  <bb 38>:
  # stype_40 = PHI <stype_140(19), -1(14)>
  # prephitmp_251 = PHI <_116(19), pretmp_250(14)>
  # DEBUG result => stype_40
  goto <bb 21>;

  <bb 39>:
  pretmp_275 = MEM[(struct vector * *)this_17(D) + 600B];
  pretmp_277 = pretmp_275 + pretmp_216;
  pretmp_279 = MEM[(int * *)pretmp_277];
  pretmp_281 = pretmp_279 + pretmp_227;
  pretmp_283 = *pretmp_281;

  <bb 40>:
  # prephitmp_282 = PHI <prephitmp_259(37), pretmp_281(39)>
  # prephitmp_284 = PHI <prephitmp_261(37), pretmp_283(39)>
  # DEBUG result => NULL
  # DEBUG stype => 0
  goto <bb 45>;

  <bb 41>:
  pretmp_295 = MEM[(struct vector * *)this_17(D) + 600B];
  pretmp_297 = pretmp_295 + pretmp_216;
  pretmp_299 = MEM[(int * *)pretmp_297];
  pretmp_301 = pretmp_299 + pretmp_227;
  pretmp_303 = *pretmp_301;

  <bb 42>:
  # generated_127 = PHI <1(41), 0(45)>
  # prephitmp_302 = PHI <pretmp_301(41), prephitmp_292(45)>
  # prephitmp_304 = PHI <pretmp_303(41), prephitmp_294(45)>
  # DEBUG generated => generated_127
  # DEBUG D#2484 => &this_17(D)->_use_read_write
  # DEBUG D#63 => D#2484
  # DEBUG __n => _20
  # DEBUG this => D#63
  # DEBUG D#2485 => &this_17(D)->_qtime
  # DEBUG D#67 => D#2485
  # DEBUG __n => D#3420
  # DEBUG this => D#67
  # DEBUG __n => _20
  # DEBUG this => D#63
  _42 = prephitmp_304 + 1;
  *prephitmp_302 = _42;
  goto <bb 9>;

  <bb 43>:
  # DEBUG D#2488 => &this_17(D)->_qdrained
  _61 = MEM[(struct vector * *)this_17(D) + 624B];
  # DEBUG D#77 => D#2488
  # DEBUG __n => D#3420
  # DEBUG this => D#77
  _84 = _61 + _83;
  _64 = MEM[(_Bit_type * *)_84];
  # DEBUG __n => _20
  # DEBUG this => D#128
  _49 = (unsigned int) _20;
  _78 = _49 & 63;
  _79 = _20 >> 6;
  _80 = _79 * 8;
  _81 = _64 + _80;
  # DEBUG this => NULL
  # DEBUG __x => _81
  # DEBUG __y => _78
  # DEBUG this => D#40
  # DEBUG __x => _81
  # DEBUG __y => _78
  # DEBUG this => D#40
  # DEBUG this => D#41
  # DEBUG this => D#41
  _82 = 1 << _78;
  # DEBUG this => NULL
  # DEBUG __x => _81
  # DEBUG __y => _82
  # DEBUG this => &D.74262
  # DEBUG __x => 1
  _76 = *_81;
  _77 = _76 | _82;
  *_81 = _77;
  pretmp_271 = this_17(D)->_classes;
  goto <bb 30>;

  <bb 44>:
  pretmp_285 = MEM[(struct vector * *)this_17(D) + 600B];
  pretmp_287 = pretmp_285 + pretmp_216;
  pretmp_289 = MEM[(int * *)pretmp_287];
  pretmp_291 = pretmp_289 + pretmp_227;
  pretmp_293 = *pretmp_291;

  <bb 45>:
  # prephitmp_292 = PHI <pretmp_291(44), prephitmp_282(40)>
  # prephitmp_294 = PHI <pretmp_293(44), prephitmp_284(40)>
  # DEBUG generated => 0
  # DEBUG D#2484 => &this_17(D)->_use_read_write
  # DEBUG D#63 => D#2484
  # DEBUG __n => _20
  # DEBUG this => D#63
  goto <bb 42>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=3749, decl_uid=45900, cgraph_uid=1997, symbol_order=1998)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.160885;
  const size_type __len;
  size_type D.160884;
  size_type __n;
  int * D.160875;
  const ptrdiff_t _Num;
  int * D.160866;
  int * const __position;
  int * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  int * __first;
  long unsigned int __n;
  int * __first;
  const ptrdiff_t _Num;
  int * __first;
  int * __new_finish;
  const size_type __elems_after;
  value_type __x_copy;
  int * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  int * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  int * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  int * _41;
  int * _43;
  long int _47;
  int * _48;
  long int __first.80_49;
  int * _53;
  const int _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  int * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  int * _108;
  int * _112;
  int * iftmp.77_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  int * prephitmp_146;
  int * pretmp_147;
  int * prephitmp_148;
  int * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  int * pretmp_166;
  int * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  int * pretmp_173;
  int * prephitmp_174;

  <bb 2>:
  # DEBUG D#3426 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3426
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.45977._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.45977._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 4;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#272 => &this_4(D)->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG __lhs => &D.83640
  # DEBUG __rhs => &__position
  # DEBUG this => &D.83640
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 4;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#1321 => &this_4(D)->D.45977
  # DEBUG this => D#1321
  _39 = __n_2(D) * 4;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#969
  # DEBUG D#968 => D#969
  # DEBUG D#965 => D#968
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.123640 => D#965
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __first.80_49 = (long int) _41;
  _47 = _8 - __first.80_49;
  _Num_45 = _47 /[ex] 4;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.45977._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.45977._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#3426
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3426
  # DEBUG __it => D#3426
  # DEBUG __first => D#3426
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3426
  # DEBUG __it => D#3426
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _104 = __first.80_49 - _27;
  _Num_105 = _104 /[ex] 4;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#956 => &__x_copy
  # DEBUG __first => D#3426
  # DEBUG __last => _48
  # DEBUG D#955 => D#956
  # DEBUG __value => D#955
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#3426
  # DEBUG __it => D#3426
  # DEBUG D#954 => D#955
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __value => D#954
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3426
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 4;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#1322 => &this_4(D)->D.45977
  # DEBUG this => D#1322
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#1247 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.123725 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_50
  # DEBUG __value => D#1144
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 4;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 4;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.45977._M_impl._M_finish = __first_125;
  # DEBUG D#1323 => &this_4(D)->D.45977
  # DEBUG this => D#1323
  # DEBUG this => &__position
  # DEBUG __first => D#3426
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#969
  # DEBUG D#968 => D#969
  # DEBUG D#965 => D#968
  # DEBUG __first => D#3426
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.123687 => D#965
  # DEBUG __first => D#3426
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#3426
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#3426
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3426
  # DEBUG __it => D#3426
  # DEBUG __first => D#3426
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3426
  # DEBUG __it => D#3426
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.45977._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.45977._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#956 => &__x_copy
  # DEBUG __first => D#3426
  # DEBUG __last => __first_7
  # DEBUG D#955 => D#956
  # DEBUG __value => D#955
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3426
  # DEBUG __it => D#3426
  # DEBUG D#954 => D#955
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __value => D#954
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3426
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 4;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1297 => this_4(D)
  # DEBUG this => D#1297
  # DEBUG D#1296 => D#1297
  # DEBUG D#1295 => &D#1296->D.45977
  # DEBUG this => D#1295
  # DEBUG __a => D#1294
  # DEBUG D#1293 => D#1294
  # DEBUG D#1261 => D#1293
  # DEBUG this => D#1261
  _17 = MEM[(int * *)this_4(D)];
  # DEBUG D#68 => this_4(D)
  # DEBUG D#68 => this_4(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 4;
  _119 = (const long unsigned int) _118;
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#68 => this_4(D)
  # DEBUG D#68 => this_4(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  # DEBUG D#68 => this_4(D)
  # DEBUG D#68 => this_4(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  # DEBUG __a => &D.160885
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#68 => this_4(D)
  # DEBUG D#68 => this_4(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  # DEBUG D#1297 => this_4(D)
  # DEBUG this => D#1297
  # DEBUG D#1296 => D#1297
  # DEBUG D#1295 => &D#1296->D.45977
  # DEBUG this => D#1295
  # DEBUG __a => D#1294
  # DEBUG D#1293 => D#1294
  # DEBUG D#1261 => D#1293
  # DEBUG this => D#1261
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 4;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551612(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#273 => &this_4(D)->D.45977._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#273
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.83663
  # DEBUG this => &__position
  # DEBUG this => &D.83663
  # DEBUG D#1334 => _157 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1334
  # DEBUG D#1333 => &this_4(D)->D.45977
  # DEBUG D#1269 => D#1333
  # DEBUG __n => NULL
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => NULL
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1263
  # DEBUG D.160873 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.45977._M_impl._M_start;
  pretmp_147 = this_4(D)->D.45977._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.77_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1317 => &this_4(D)->D.45977
  # DEBUG this => D#1317
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.77_113 + _19;
  _56 = MEM[(const int &)__x_21(D)];
  # DEBUG D#1247 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.123842 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#1144
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 4;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1318 => &this_4(D)->D.45977
  # DEBUG this => D#1318
  # DEBUG this => &__position
  # DEBUG D#3425 => this_4(D)->D.45977._M_impl._M_start
  # DEBUG __first => D#3425
  # DEBUG __last => D#3426
  # DEBUG __result => NULL
  # DEBUG __alloc => D#967
  # DEBUG D#966 => D#967
  # DEBUG D#965 => D#966
  # DEBUG __first => D#3425
  # DEBUG __last => D#3426
  # DEBUG __result => NULL
  # DEBUG D.123804 => D#965
  # DEBUG __first => D#3425
  # DEBUG __last => D#3426
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3425
  # DEBUG __last => D#3426
  # DEBUG __result => NULL
  # DEBUG __first => D#3425
  # DEBUG __last => D#3426
  # DEBUG __result => NULL
  # DEBUG __it => D#3426
  # DEBUG __it => D#3426
  # DEBUG __it => D#3425
  # DEBUG __it => D#3425
  # DEBUG __first => D#3425
  # DEBUG __last => D#3426
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3426
  # DEBUG __it => D#3426
  # DEBUG __it => D#3425
  # DEBUG __it => D#3425
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG D#3424 => (long int) D#3425
  # DEBUG D#3423 => _158 - D#3424
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.77_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#3422 => (long unsigned int) D#3423
  # DEBUG __new_finish => iftmp.77_113 + D#3422
  _25 = __n_2(D) * 4;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.77_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#1319 => &this_4(D)->D.45977
  # DEBUG this => D#1319
  # DEBUG D#3421 => this_4(D)->D.45977._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#3426
  # DEBUG __last => D#3421
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#967
  # DEBUG D#966 => D#967
  # DEBUG D#965 => D#966
  # DEBUG __first => D#3426
  # DEBUG __last => D#3421
  # DEBUG __result => __new_finish_26
  # DEBUG D.123765 => D#965
  # DEBUG __first => D#3426
  # DEBUG __last => D#3421
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#3426
  # DEBUG __last => D#3421
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#3426
  # DEBUG __last => D#3421
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#3421
  # DEBUG __it => D#3421
  # DEBUG __it => D#3426
  # DEBUG __it => D#3426
  # DEBUG __first => D#3426
  # DEBUG __last => D#3421
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#3421
  # DEBUG __it => D#3421
  # DEBUG __it => D#3426
  # DEBUG __it => D#3426
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 4;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#1320 => &this_4(D)->D.45977
  # DEBUG this => D#1320
  # DEBUG D#1332 => this_4(D)->D.45977._M_impl._M_finish
  # DEBUG D#1331 => this_4(D)->D.45977._M_impl._M_start
  # DEBUG __first => D#1331
  # DEBUG __last => D#1332
  # DEBUG D.123758 => NULL
  # DEBUG D#391 => D#1331
  # DEBUG D#392 => D#1332
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#1330 => this_4(D)->D.45977._M_impl._M_end_of_storage
  # DEBUG D#1329 => (long int) D#1330
  # DEBUG D#1328 => (long int) D#3425
  # DEBUG D#1327 => D#1329 - D#1328
  # DEBUG D#1326 => D#1327 /[ex] 4
  # DEBUG D#1325 => (long unsigned int) D#1326
  # DEBUG D#1324 => &this_4(D)->D.45977
  # DEBUG this => D#1324
  # DEBUG __p => D#3425
  # DEBUG __n => D#1325
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#468 => &D#1324->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#1325
  # DEBUG __p => D#3425
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => D#3425
  # DEBUG this => D#462
  # DEBUG D.123754 => D#463
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.45977._M_impl._M_start = iftmp.77_113;
  this_4(D)->D.45977._M_impl._M_finish = _70;
  this_4(D)->D.45977._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#273 => &this_4(D)->D.45977._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#273
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.83663
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.83663
  _143 = _144 - _116;
  # DEBUG D#1334 => _143 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1334
  # DEBUG D#1333 => &this_4(D)->D.45977
  # DEBUG D#1269 => D#1333
  # DEBUG __n => NULL
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#273 => &this_4(D)->D.45977._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#273
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.83663
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.83663
  _150 = _151 - _116;
  # DEBUG D#1334 => _150 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1334
  # DEBUG D#1333 => &this_4(D)->D.45977
  # DEBUG D#1269 => D#1333
  # DEBUG __n => NULL
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = double; _Alloc = std::allocator<double>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = double*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = double] (_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd, funcdef_no=3802, decl_uid=55504, cgraph_uid=2050, symbol_order=2051)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = double; _Alloc = std::allocator<double>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = double*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = double] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.161042;
  const size_type __len;
  size_type D.161041;
  size_type __n;
  struct Stats * * D.161032;
  const ptrdiff_t _Num;
  struct Stats * * D.161023;
  double * const __position;
  double * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  double * __first;
  long unsigned int __n;
  double * __first;
  const ptrdiff_t _Num;
  double * __first;
  double * __new_finish;
  const size_type __elems_after;
  value_type __x_copy;
  double * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Stats * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  double * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  double * _41;
  double * _43;
  long int _47;
  double * _48;
  long int __first.322_49;
  double * _53;
  const double _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  double * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct Stats * * _108;
  struct Stats * * _112;
  struct Stats * * iftmp.356_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  double * prephitmp_146;
  double * pretmp_147;
  struct Stats * * prephitmp_148;
  struct Stats * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  double * pretmp_166;
  double * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  double * pretmp_173;
  double * prephitmp_174;

  <bb 2>:
  # DEBUG D#3494 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3494
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.55581._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.55581._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#286 => &this_4(D)->D.55581._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#286
  # DEBUG __lhs => &D.83932
  # DEBUG __rhs => &__position
  # DEBUG this => &D.83932
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#2165 => &this_4(D)->D.55581
  # DEBUG this => D#2165
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#974
  # DEBUG D#973 => D#974
  # DEBUG D#970 => D#973
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.136183 => D#970
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __first.322_49 = (long int) _41;
  _47 = _8 - __first.322_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.55581._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.55581._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#3494
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3494
  # DEBUG __it => D#3494
  # DEBUG __first => D#3494
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3494
  # DEBUG __it => D#3494
  # DEBUG __first => D#3494
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#3494
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.322_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#977 => &__x_copy
  # DEBUG __first => D#3494
  # DEBUG __last => _48
  # DEBUG D#976 => D#977
  # DEBUG __value => D#976
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#3494
  # DEBUG __it => D#3494
  # DEBUG D#975 => D#976
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __value => D#975
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3494
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#2166 => &this_4(D)->D.55581
  # DEBUG this => D#2166
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#2158 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2157 => D#2158
  # DEBUG __x => D#2157
  # DEBUG D.136268 => D#2159
  # DEBUG D#2156 => D#2157
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2155 => D#2156
  # DEBUG __x => D#2155
  # DEBUG __assignable => 1
  # DEBUG D#2154 => D#2155
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2153 => D#2154
  # DEBUG __x => D#2153
  # DEBUG D#2152 => D#2153
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2151 => D#2152
  # DEBUG __value => D#2151
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#2150 => D#2151
  # DEBUG __first => NULL
  # DEBUG __n => __n_50
  # DEBUG __value => D#2150
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.55581._M_impl._M_finish = __first_125;
  # DEBUG D#2167 => &this_4(D)->D.55581
  # DEBUG this => D#2167
  # DEBUG this => &__position
  # DEBUG __first => D#3494
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#974
  # DEBUG D#973 => D#974
  # DEBUG D#970 => D#973
  # DEBUG __first => D#3494
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.136230 => D#970
  # DEBUG __first => D#3494
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#3494
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#3494
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3494
  # DEBUG __it => D#3494
  # DEBUG __first => D#3494
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3494
  # DEBUG __it => D#3494
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.55581._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.55581._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#977 => &__x_copy
  # DEBUG __first => D#3494
  # DEBUG __last => __first_7
  # DEBUG D#976 => D#977
  # DEBUG __value => D#976
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3494
  # DEBUG __it => D#3494
  # DEBUG D#975 => D#976
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __value => D#975
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3494
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2131 => this_4(D)
  # DEBUG this => D#2131
  # DEBUG D#2130 => D#2131
  # DEBUG D#2129 => &D#2130->D.63091
  # DEBUG this => D#2129
  # DEBUG __a => D#2128
  # DEBUG D#2127 => D#2128
  # DEBUG D#2116 => D#2127
  # DEBUG this => D#2116
  _17 = MEM[(struct Stats * * *)this_4(D)];
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG __a => &D.161042
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG D#2131 => this_4(D)
  # DEBUG this => D#2131
  # DEBUG D#2130 => D#2131
  # DEBUG D#2129 => &D#2130->D.63091
  # DEBUG this => D#2129
  # DEBUG __a => D#2128
  # DEBUG D#2127 => D#2128
  # DEBUG D#2116 => D#2127
  # DEBUG this => D#2116
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#287 => &this_4(D)->D.55581._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#287
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.83945
  # DEBUG this => &__position
  # DEBUG this => &D.83945
  # DEBUG D#2178 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2178
  # DEBUG D#2177 => &this_4(D)->D.55581
  # DEBUG D#1343 => D#2177
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => NULL
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2118
  # DEBUG D.161030 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.55581._M_impl._M_start;
  pretmp_147 = this_4(D)->D.55581._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.356_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2161 => &this_4(D)->D.55581
  # DEBUG this => D#2161
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.356_113 + _19;
  _56 = MEM[(const double &)__x_21(D)];
  # DEBUG D#2158 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2157 => D#2158
  # DEBUG __x => D#2157
  # DEBUG D.136385 => D#2159
  # DEBUG D#2156 => D#2157
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2155 => D#2156
  # DEBUG __x => D#2155
  # DEBUG __assignable => 1
  # DEBUG D#2154 => D#2155
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2153 => D#2154
  # DEBUG __x => D#2153
  # DEBUG D#2152 => D#2153
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2151 => D#2152
  # DEBUG __value => D#2151
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#2150 => D#2151
  # DEBUG __first => NULL
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#2150
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2162 => &this_4(D)->D.55581
  # DEBUG this => D#2162
  # DEBUG this => &__position
  # DEBUG D#3493 => this_4(D)->D.55581._M_impl._M_start
  # DEBUG __first => D#3493
  # DEBUG __last => D#3494
  # DEBUG __result => NULL
  # DEBUG __alloc => D#972
  # DEBUG D#971 => D#972
  # DEBUG D#970 => D#971
  # DEBUG __first => D#3493
  # DEBUG __last => D#3494
  # DEBUG __result => NULL
  # DEBUG D.136347 => D#970
  # DEBUG __first => D#3493
  # DEBUG __last => D#3494
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3493
  # DEBUG __last => D#3494
  # DEBUG __result => NULL
  # DEBUG __first => D#3493
  # DEBUG __last => D#3494
  # DEBUG __result => NULL
  # DEBUG __it => D#3494
  # DEBUG __it => D#3494
  # DEBUG __it => D#3493
  # DEBUG __it => D#3493
  # DEBUG __first => D#3493
  # DEBUG __last => D#3494
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3494
  # DEBUG __it => D#3494
  # DEBUG __it => D#3493
  # DEBUG __it => D#3493
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG D#3492 => (long int) D#3493
  # DEBUG D#3491 => _158 - D#3492
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.356_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#3490 => (long unsigned int) D#3491
  # DEBUG __new_finish => iftmp.356_113 + D#3490
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.356_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2163 => &this_4(D)->D.55581
  # DEBUG this => D#2163
  # DEBUG D#3489 => this_4(D)->D.55581._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#3494
  # DEBUG __last => D#3489
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#972
  # DEBUG D#971 => D#972
  # DEBUG D#970 => D#971
  # DEBUG __first => D#3494
  # DEBUG __last => D#3489
  # DEBUG __result => __new_finish_26
  # DEBUG D.136308 => D#970
  # DEBUG __first => D#3494
  # DEBUG __last => D#3489
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#3494
  # DEBUG __last => D#3489
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#3494
  # DEBUG __last => D#3489
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#3489
  # DEBUG __it => D#3489
  # DEBUG __it => D#3494
  # DEBUG __it => D#3494
  # DEBUG __first => D#3494
  # DEBUG __last => D#3489
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#3489
  # DEBUG __it => D#3489
  # DEBUG __it => D#3494
  # DEBUG __it => D#3494
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#2164 => &this_4(D)->D.55581
  # DEBUG this => D#2164
  # DEBUG D#2176 => this_4(D)->D.55581._M_impl._M_finish
  # DEBUG D#2175 => this_4(D)->D.55581._M_impl._M_start
  # DEBUG __first => D#2175
  # DEBUG __last => D#2176
  # DEBUG D.136301 => NULL
  # DEBUG D#422 => D#2175
  # DEBUG D#423 => D#2176
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#2174 => this_4(D)->D.55581._M_impl._M_end_of_storage
  # DEBUG D#2173 => (long int) D#2174
  # DEBUG D#2172 => (long int) D#3493
  # DEBUG D#2171 => D#2173 - D#2172
  # DEBUG D#2170 => D#2171 /[ex] 8
  # DEBUG D#2169 => (long unsigned int) D#2170
  # DEBUG D#2168 => &this_4(D)->D.55581
  # DEBUG this => D#2168
  # DEBUG __p => D#3493
  # DEBUG __n => D#2169
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#495 => &D#2168->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#2169
  # DEBUG __p => D#3493
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => D#3493
  # DEBUG this => D#489
  # DEBUG D.136297 => D#490
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.55581._M_impl._M_start = iftmp.356_113;
  this_4(D)->D.55581._M_impl._M_finish = _70;
  this_4(D)->D.55581._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#287 => &this_4(D)->D.55581._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#287
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.83945
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.83945
  _143 = _144 - _116;
  # DEBUG D#2178 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2178
  # DEBUG D#2177 => &this_4(D)->D.55581
  # DEBUG D#1343 => D#2177
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#287 => &this_4(D)->D.55581._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#287
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.83945
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.83945
  _150 = _151 - _116;
  # DEBUG D#2178 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2178
  # DEBUG D#2177 => &this_4(D)->D.55581
  # DEBUG D#1343 => D#2177
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = TrafficPattern*; _Alloc = std::allocator<TrafficPattern*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<TrafficPattern**, std::vector<TrafficPattern*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = TrafficPattern**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = TrafficPattern*] (_ZNSt6vectorIP14TrafficPatternSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3845, decl_uid=57004, cgraph_uid=2093, symbol_order=2094)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = TrafficPattern*; _Alloc = std::allocator<TrafficPattern*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<TrafficPattern**, std::vector<TrafficPattern*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = TrafficPattern**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = TrafficPattern*] (struct vector * const this, struct iterator __position, size_type __n, struct TrafficPattern * const & __x)
{
  const long unsigned int D.161185;
  const size_type __len;
  size_type D.161184;
  size_type __n;
  struct Stats * * D.161175;
  const ptrdiff_t _Num;
  struct Stats * * D.161166;
  struct TrafficPattern * * const __position;
  struct TrafficPattern * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct TrafficPattern * * __first;
  long unsigned int __n;
  struct TrafficPattern * * __first;
  const ptrdiff_t _Num;
  struct TrafficPattern * * __first;
  struct TrafficPattern * * __new_finish;
  const size_type __elems_after;
  struct TrafficPattern * __x_copy;
  struct TrafficPattern * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Stats * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct TrafficPattern * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct TrafficPattern * * _41;
  struct TrafficPattern * * _43;
  long int _47;
  struct TrafficPattern * * _48;
  long int __first.109_49;
  struct TrafficPattern * * _53;
  struct TrafficPattern * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct TrafficPattern * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct Stats * * _108;
  struct Stats * * _112;
  struct Stats * * iftmp.356_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct TrafficPattern * * prephitmp_146;
  struct TrafficPattern * * pretmp_147;
  struct Stats * * prephitmp_148;
  struct Stats * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct TrafficPattern * * pretmp_166;
  struct TrafficPattern * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct TrafficPattern * * pretmp_173;
  struct TrafficPattern * * prephitmp_174;

  <bb 2>:
  # DEBUG D#3534 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3534
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.57081._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.57081._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#297 => &this_4(D)->D.57081._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#297
  # DEBUG __lhs => &D.84236
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84236
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#2721 => &this_4(D)->D.57081
  # DEBUG this => D#2721
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2713
  # DEBUG D#2712 => D#2713
  # DEBUG D#2711 => D#2712
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.146561 => D#2711
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.109_49 = (long int) _41;
  _47 = _8 - __first.109_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.57081._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.57081._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#3534
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3534
  # DEBUG __it => D#3534
  # DEBUG __first => D#3534
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3534
  # DEBUG __it => D#3534
  # DEBUG __first => D#3534
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#3534
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.109_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#1486 => &__x_copy
  # DEBUG __first => D#3534
  # DEBUG __last => _48
  # DEBUG D#1485 => D#1486
  # DEBUG __value => D#1485
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#3534
  # DEBUG __it => D#3534
  # DEBUG D#980 => D#1485
  # DEBUG __first => D#3534
  # DEBUG __last => _48
  # DEBUG __value => D#980
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3534
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#2722 => &this_4(D)->D.57081
  # DEBUG this => D#2722
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#2209 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2208 => D#2209
  # DEBUG __x => D#2208
  # DEBUG D.146646 => D#2210
  # DEBUG D#2207 => D#2208
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2206 => D#2207
  # DEBUG __x => D#2206
  # DEBUG __assignable => 1
  # DEBUG D#2205 => D#2206
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2204 => D#2205
  # DEBUG __x => D#2204
  # DEBUG D#2203 => D#2204
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2202 => D#2203
  # DEBUG __value => D#2202
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#2201 => D#2202
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#2201
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.57081._M_impl._M_finish = __first_125;
  # DEBUG D#2723 => &this_4(D)->D.57081
  # DEBUG this => D#2723
  # DEBUG this => &__position
  # DEBUG __first => D#3534
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#2713
  # DEBUG D#2712 => D#2713
  # DEBUG D#2711 => D#2712
  # DEBUG __first => D#3534
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.146608 => D#2711
  # DEBUG __first => D#3534
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#3534
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#3534
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3534
  # DEBUG __it => D#3534
  # DEBUG __first => D#3534
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3534
  # DEBUG __it => D#3534
  # DEBUG __first => D#3534
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#3534
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.57081._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.57081._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#1486 => &__x_copy
  # DEBUG __first => D#3534
  # DEBUG __last => __first_7
  # DEBUG D#1485 => D#1486
  # DEBUG __value => D#1485
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3534
  # DEBUG __it => D#3534
  # DEBUG D#980 => D#1485
  # DEBUG __first => D#3534
  # DEBUG __last => __first_7
  # DEBUG __value => D#980
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3534
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2131 => this_4(D)
  # DEBUG this => D#2131
  # DEBUG D#2130 => D#2131
  # DEBUG D#2129 => &D#2130->D.63091
  # DEBUG this => D#2129
  # DEBUG __a => D#2128
  # DEBUG D#2127 => D#2128
  # DEBUG D#2116 => D#2127
  # DEBUG this => D#2116
  _17 = MEM[(struct Stats * * *)this_4(D)];
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG __a => &D.161185
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG D#2131 => this_4(D)
  # DEBUG this => D#2131
  # DEBUG D#2130 => D#2131
  # DEBUG D#2129 => &D#2130->D.63091
  # DEBUG this => D#2129
  # DEBUG __a => D#2128
  # DEBUG D#2127 => D#2128
  # DEBUG D#2116 => D#2127
  # DEBUG this => D#2116
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#536 => &this_4(D)->D.57081._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#536
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84269
  # DEBUG this => &__position
  # DEBUG this => &D.84269
  # DEBUG D#2734 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2734
  # DEBUG D#2733 => &this_4(D)->D.57081
  # DEBUG D#1708 => D#2733
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => NULL
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2118
  # DEBUG D.161173 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.57081._M_impl._M_start;
  pretmp_147 = this_4(D)->D.57081._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.356_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2717 => &this_4(D)->D.57081
  # DEBUG this => D#2717
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.356_113 + _19;
  _56 = MEM[(struct TrafficPattern * const &)__x_21(D)];
  # DEBUG D#2209 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2208 => D#2209
  # DEBUG __x => D#2208
  # DEBUG D.146763 => D#2210
  # DEBUG D#2207 => D#2208
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2206 => D#2207
  # DEBUG __x => D#2206
  # DEBUG __assignable => 1
  # DEBUG D#2205 => D#2206
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2204 => D#2205
  # DEBUG __x => D#2204
  # DEBUG D#2203 => D#2204
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2202 => D#2203
  # DEBUG __value => D#2202
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#2201 => D#2202
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#2201
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2718 => &this_4(D)->D.57081
  # DEBUG this => D#2718
  # DEBUG this => &__position
  # DEBUG D#3533 => this_4(D)->D.57081._M_impl._M_start
  # DEBUG __first => D#3533
  # DEBUG __last => D#3534
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2715
  # DEBUG D#2714 => D#2715
  # DEBUG D#2711 => D#2714
  # DEBUG __first => D#3533
  # DEBUG __last => D#3534
  # DEBUG __result => NULL
  # DEBUG D.146725 => D#2711
  # DEBUG __first => D#3533
  # DEBUG __last => D#3534
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3533
  # DEBUG __last => D#3534
  # DEBUG __result => NULL
  # DEBUG __first => D#3533
  # DEBUG __last => D#3534
  # DEBUG __result => NULL
  # DEBUG __it => D#3534
  # DEBUG __it => D#3534
  # DEBUG __it => D#3533
  # DEBUG __it => D#3533
  # DEBUG __first => D#3533
  # DEBUG __last => D#3534
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3534
  # DEBUG __it => D#3534
  # DEBUG __it => D#3533
  # DEBUG __it => D#3533
  # DEBUG __first => D#3533
  # DEBUG __last => D#3534
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3533
  # DEBUG __last => D#3534
  # DEBUG __result => NULL
  # DEBUG D#3532 => (long int) D#3533
  # DEBUG D#3531 => _158 - D#3532
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.356_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#3530 => (long unsigned int) D#3531
  # DEBUG __new_finish => iftmp.356_113 + D#3530
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.356_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2719 => &this_4(D)->D.57081
  # DEBUG this => D#2719
  # DEBUG D#3529 => this_4(D)->D.57081._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#3534
  # DEBUG __last => D#3529
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#2715
  # DEBUG D#2714 => D#2715
  # DEBUG D#2711 => D#2714
  # DEBUG __first => D#3534
  # DEBUG __last => D#3529
  # DEBUG __result => __new_finish_26
  # DEBUG D.146686 => D#2711
  # DEBUG __first => D#3534
  # DEBUG __last => D#3529
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#3534
  # DEBUG __last => D#3529
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#3534
  # DEBUG __last => D#3529
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#3529
  # DEBUG __it => D#3529
  # DEBUG __it => D#3534
  # DEBUG __it => D#3534
  # DEBUG __first => D#3534
  # DEBUG __last => D#3529
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#3529
  # DEBUG __it => D#3529
  # DEBUG __it => D#3534
  # DEBUG __it => D#3534
  # DEBUG __first => D#3534
  # DEBUG __last => D#3529
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#3534
  # DEBUG __last => D#3529
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#2720 => &this_4(D)->D.57081
  # DEBUG this => D#2720
  # DEBUG D#2732 => this_4(D)->D.57081._M_impl._M_finish
  # DEBUG D#2731 => this_4(D)->D.57081._M_impl._M_start
  # DEBUG __first => D#2731
  # DEBUG __last => D#2732
  # DEBUG D.146679 => NULL
  # DEBUG D#432 => D#2731
  # DEBUG D#433 => D#2732
  # DEBUG __first => D#432
  # DEBUG __last => D#433
  # DEBUG D#431 => D#433
  # DEBUG D#430 => D#432
  # DEBUG D#428 => D#430
  # DEBUG D#429 => D#431
  # DEBUG D.114615 => D#428
  # DEBUG D.114614 => D#429
  # DEBUG D#2730 => this_4(D)->D.57081._M_impl._M_end_of_storage
  # DEBUG D#2729 => (long int) D#2730
  # DEBUG D#2728 => (long int) D#3533
  # DEBUG D#2727 => D#2729 - D#2728
  # DEBUG D#2726 => D#2727 /[ex] 8
  # DEBUG D#2725 => (long unsigned int) D#2726
  # DEBUG D#2724 => &this_4(D)->D.57081
  # DEBUG this => D#2724
  # DEBUG __p => D#3533
  # DEBUG __n => D#2725
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#754 => &D#2724->_M_impl
  # DEBUG D#752 => D#754
  # DEBUG D#753 => D#2725
  # DEBUG __p => D#3533
  # DEBUG __a => D#752
  # DEBUG __n => D#753
  # DEBUG D#751 => D#753
  # DEBUG D#750 => D#752
  # DEBUG D#748 => D#750
  # DEBUG D#749 => D#751
  # DEBUG __p => D#3533
  # DEBUG this => D#748
  # DEBUG D.146675 => D#749
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.57081._M_impl._M_start = iftmp.356_113;
  this_4(D)->D.57081._M_impl._M_finish = _70;
  this_4(D)->D.57081._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#536 => &this_4(D)->D.57081._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#536
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84269
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.84269
  _143 = _144 - _116;
  # DEBUG D#2734 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2734
  # DEBUG D#2733 => &this_4(D)->D.57081
  # DEBUG D#1708 => D#2733
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#536 => &this_4(D)->D.57081._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#536
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84269
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.84269
  _150 = _151 - _116;
  # DEBUG D#2734 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2734
  # DEBUG D#2733 => &this_4(D)->D.57081
  # DEBUG D#1708 => D#2733
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = InjectionProcess*; _Alloc = std::allocator<InjectionProcess*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<InjectionProcess**, std::vector<InjectionProcess*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = InjectionProcess**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = InjectionProcess*] (_ZNSt6vectorIP16InjectionProcessSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3849, decl_uid=57751, cgraph_uid=2097, symbol_order=2098)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = InjectionProcess*; _Alloc = std::allocator<InjectionProcess*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<InjectionProcess**, std::vector<InjectionProcess*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = InjectionProcess**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = InjectionProcess*] (struct vector * const this, struct iterator __position, size_type __n, struct InjectionProcess * const & __x)
{
  const long unsigned int D.161313;
  const size_type __len;
  size_type D.161312;
  size_type __n;
  struct Stats * * D.161303;
  const ptrdiff_t _Num;
  struct Stats * * D.161294;
  struct InjectionProcess * * const __position;
  struct InjectionProcess * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct InjectionProcess * * __first;
  long unsigned int __n;
  struct InjectionProcess * * __first;
  const ptrdiff_t _Num;
  struct InjectionProcess * * __first;
  struct InjectionProcess * * __new_finish;
  const size_type __elems_after;
  struct InjectionProcess * __x_copy;
  struct InjectionProcess * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Stats * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct InjectionProcess * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct InjectionProcess * * _41;
  struct InjectionProcess * * _43;
  long int _47;
  struct InjectionProcess * * _48;
  long int __first.140_49;
  struct InjectionProcess * * _53;
  struct InjectionProcess * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct InjectionProcess * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct Stats * * _108;
  struct Stats * * _112;
  struct Stats * * iftmp.356_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct InjectionProcess * * prephitmp_146;
  struct InjectionProcess * * pretmp_147;
  struct Stats * * prephitmp_148;
  struct Stats * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct InjectionProcess * * pretmp_166;
  struct InjectionProcess * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct InjectionProcess * * pretmp_173;
  struct InjectionProcess * * prephitmp_174;

  <bb 2>:
  # DEBUG D#3574 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3574
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.57828._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.57828._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#298 => &this_4(D)->D.57828._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#298
  # DEBUG __lhs => &D.84283
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84283
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#2745 => &this_4(D)->D.57828
  # DEBUG this => D#2745
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2737
  # DEBUG D#2736 => D#2737
  # DEBUG D#2735 => D#2736
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.147148 => D#2735
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.140_49 = (long int) _41;
  _47 = _8 - __first.140_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.57828._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.57828._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#3574
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG __first => D#3574
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG __first => D#3574
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#3574
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.140_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#1488 => &__x_copy
  # DEBUG __first => D#3574
  # DEBUG __last => _48
  # DEBUG D#1487 => D#1488
  # DEBUG __value => D#1487
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG D#981 => D#1487
  # DEBUG __first => D#3574
  # DEBUG __last => _48
  # DEBUG __value => D#981
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3574
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#2746 => &this_4(D)->D.57828
  # DEBUG this => D#2746
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#2219 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2218 => D#2219
  # DEBUG __x => D#2218
  # DEBUG D.147233 => D#2220
  # DEBUG D#2217 => D#2218
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2216 => D#2217
  # DEBUG __x => D#2216
  # DEBUG __assignable => 1
  # DEBUG D#2215 => D#2216
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2214 => D#2215
  # DEBUG __x => D#2214
  # DEBUG D#2213 => D#2214
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2212 => D#2213
  # DEBUG __value => D#2212
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#2211 => D#2212
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#2211
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.57828._M_impl._M_finish = __first_125;
  # DEBUG D#2747 => &this_4(D)->D.57828
  # DEBUG this => D#2747
  # DEBUG this => &__position
  # DEBUG __first => D#3574
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#2737
  # DEBUG D#2736 => D#2737
  # DEBUG D#2735 => D#2736
  # DEBUG __first => D#3574
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.147195 => D#2735
  # DEBUG __first => D#3574
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#3574
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#3574
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG __first => D#3574
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG __first => D#3574
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#3574
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.57828._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.57828._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#1488 => &__x_copy
  # DEBUG __first => D#3574
  # DEBUG __last => __first_7
  # DEBUG D#1487 => D#1488
  # DEBUG __value => D#1487
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG D#981 => D#1487
  # DEBUG __first => D#3574
  # DEBUG __last => __first_7
  # DEBUG __value => D#981
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3574
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2131 => this_4(D)
  # DEBUG this => D#2131
  # DEBUG D#2130 => D#2131
  # DEBUG D#2129 => &D#2130->D.63091
  # DEBUG this => D#2129
  # DEBUG __a => D#2128
  # DEBUG D#2127 => D#2128
  # DEBUG D#2116 => D#2127
  # DEBUG this => D#2116
  _17 = MEM[(struct Stats * * *)this_4(D)];
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG __a => &D.161313
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG D#2131 => this_4(D)
  # DEBUG this => D#2131
  # DEBUG D#2130 => D#2131
  # DEBUG D#2129 => &D#2130->D.63091
  # DEBUG this => D#2129
  # DEBUG __a => D#2128
  # DEBUG D#2127 => D#2128
  # DEBUG D#2116 => D#2127
  # DEBUG this => D#2116
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#537 => &this_4(D)->D.57828._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#537
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84316
  # DEBUG this => &__position
  # DEBUG this => &D.84316
  # DEBUG D#2758 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2758
  # DEBUG D#2757 => &this_4(D)->D.57828
  # DEBUG D#1722 => D#2757
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => NULL
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2118
  # DEBUG D.161301 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.57828._M_impl._M_start;
  pretmp_147 = this_4(D)->D.57828._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.356_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2741 => &this_4(D)->D.57828
  # DEBUG this => D#2741
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.356_113 + _19;
  _56 = MEM[(struct InjectionProcess * const &)__x_21(D)];
  # DEBUG D#2219 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2218 => D#2219
  # DEBUG __x => D#2218
  # DEBUG D.147350 => D#2220
  # DEBUG D#2217 => D#2218
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2216 => D#2217
  # DEBUG __x => D#2216
  # DEBUG __assignable => 1
  # DEBUG D#2215 => D#2216
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2214 => D#2215
  # DEBUG __x => D#2214
  # DEBUG D#2213 => D#2214
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2212 => D#2213
  # DEBUG __value => D#2212
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#2211 => D#2212
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#2211
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2742 => &this_4(D)->D.57828
  # DEBUG this => D#2742
  # DEBUG this => &__position
  # DEBUG D#3573 => this_4(D)->D.57828._M_impl._M_start
  # DEBUG __first => D#3573
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2739
  # DEBUG D#2738 => D#2739
  # DEBUG D#2735 => D#2738
  # DEBUG __first => D#3573
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG D.147312 => D#2735
  # DEBUG __first => D#3573
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3573
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG __first => D#3573
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG __it => D#3573
  # DEBUG __it => D#3573
  # DEBUG __first => D#3573
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG __it => D#3573
  # DEBUG __it => D#3573
  # DEBUG __first => D#3573
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3573
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG D#3572 => (long int) D#3573
  # DEBUG D#3571 => _158 - D#3572
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.356_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#3570 => (long unsigned int) D#3571
  # DEBUG __new_finish => iftmp.356_113 + D#3570
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.356_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2743 => &this_4(D)->D.57828
  # DEBUG this => D#2743
  # DEBUG D#3569 => this_4(D)->D.57828._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#3574
  # DEBUG __last => D#3569
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#2739
  # DEBUG D#2738 => D#2739
  # DEBUG D#2735 => D#2738
  # DEBUG __first => D#3574
  # DEBUG __last => D#3569
  # DEBUG __result => __new_finish_26
  # DEBUG D.147273 => D#2735
  # DEBUG __first => D#3574
  # DEBUG __last => D#3569
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#3574
  # DEBUG __last => D#3569
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#3574
  # DEBUG __last => D#3569
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#3569
  # DEBUG __it => D#3569
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG __first => D#3574
  # DEBUG __last => D#3569
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#3569
  # DEBUG __it => D#3569
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG __first => D#3574
  # DEBUG __last => D#3569
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#3574
  # DEBUG __last => D#3569
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#2744 => &this_4(D)->D.57828
  # DEBUG this => D#2744
  # DEBUG D#2756 => this_4(D)->D.57828._M_impl._M_finish
  # DEBUG D#2755 => this_4(D)->D.57828._M_impl._M_start
  # DEBUG __first => D#2755
  # DEBUG __last => D#2756
  # DEBUG D.147266 => NULL
  # DEBUG D#442 => D#2755
  # DEBUG D#443 => D#2756
  # DEBUG __first => D#442
  # DEBUG __last => D#443
  # DEBUG D#441 => D#443
  # DEBUG D#440 => D#442
  # DEBUG D#438 => D#440
  # DEBUG D#439 => D#441
  # DEBUG D.114659 => D#438
  # DEBUG D.114658 => D#439
  # DEBUG D#2754 => this_4(D)->D.57828._M_impl._M_end_of_storage
  # DEBUG D#2753 => (long int) D#2754
  # DEBUG D#2752 => (long int) D#3573
  # DEBUG D#2751 => D#2753 - D#2752
  # DEBUG D#2750 => D#2751 /[ex] 8
  # DEBUG D#2749 => (long unsigned int) D#2750
  # DEBUG D#2748 => &this_4(D)->D.57828
  # DEBUG this => D#2748
  # DEBUG __p => D#3573
  # DEBUG __n => D#2749
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#774 => &D#2748->_M_impl
  # DEBUG D#772 => D#774
  # DEBUG D#773 => D#2749
  # DEBUG __p => D#3573
  # DEBUG __a => D#772
  # DEBUG __n => D#773
  # DEBUG D#771 => D#773
  # DEBUG D#770 => D#772
  # DEBUG D#768 => D#770
  # DEBUG D#769 => D#771
  # DEBUG __p => D#3573
  # DEBUG this => D#768
  # DEBUG D.147262 => D#769
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.57828._M_impl._M_start = iftmp.356_113;
  this_4(D)->D.57828._M_impl._M_finish = _70;
  this_4(D)->D.57828._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#537 => &this_4(D)->D.57828._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#537
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84316
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.84316
  _143 = _144 - _116;
  # DEBUG D#2758 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2758
  # DEBUG D#2757 => &this_4(D)->D.57828
  # DEBUG D#1722 => D#2757
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#537 => &this_4(D)->D.57828._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#537
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84316
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.84316
  _150 = _151 - _116;
  # DEBUG D#2758 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2758
  # DEBUG D#2757 => &this_4(D)->D.57828
  # DEBUG D#1722 => D#2757
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = BufferState*; _Alloc = std::allocator<BufferState*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<BufferState**, std::vector<BufferState*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = BufferState**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = BufferState*] (_ZNSt6vectorIP11BufferStateSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3885, decl_uid=68740, cgraph_uid=2133, symbol_order=2134)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = BufferState*; _Alloc = std::allocator<BufferState*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<BufferState**, std::vector<BufferState*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = BufferState**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = BufferState*] (struct vector * const this, struct iterator __position, size_type __n, struct BufferState * const & __x)
{
  const long unsigned int D.161441;
  const size_type __len;
  size_type D.161440;
  size_type __n;
  struct Stats * * D.161431;
  const ptrdiff_t _Num;
  struct Stats * * D.161422;
  struct BufferState * * const __position;
  struct BufferState * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct BufferState * * __first;
  long unsigned int __n;
  struct BufferState * * __first;
  const ptrdiff_t _Num;
  struct BufferState * * __first;
  struct BufferState * * __new_finish;
  const size_type __elems_after;
  struct BufferState * __x_copy;
  struct BufferState * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Stats * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct BufferState * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct BufferState * * _41;
  struct BufferState * * _43;
  long int _47;
  struct BufferState * * _48;
  long int __first.152_49;
  struct BufferState * * _53;
  struct BufferState * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct BufferState * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct Stats * * _108;
  struct Stats * * _112;
  struct Stats * * iftmp.356_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct BufferState * * prephitmp_146;
  struct BufferState * * pretmp_147;
  struct Stats * * prephitmp_148;
  struct Stats * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct BufferState * * pretmp_166;
  struct BufferState * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct BufferState * * pretmp_173;
  struct BufferState * * prephitmp_174;

  <bb 2>:
  # DEBUG D#3614 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3614
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.68817._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.68817._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#305 => &this_4(D)->D.68817._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#305
  # DEBUG __lhs => &D.84493
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84493
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#2284 => &this_4(D)->D.68817
  # DEBUG this => D#2284
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2276
  # DEBUG D#2275 => D#2276
  # DEBUG D#2274 => D#2275
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.138791 => D#2274
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.152_49 = (long int) _41;
  _47 = _8 - __first.152_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.68817._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.68817._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#3614
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3614
  # DEBUG __it => D#3614
  # DEBUG __first => D#3614
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3614
  # DEBUG __it => D#3614
  # DEBUG __first => D#3614
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#3614
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.152_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#1495 => &__x_copy
  # DEBUG __first => D#3614
  # DEBUG __last => _48
  # DEBUG D#1494 => D#1495
  # DEBUG __value => D#1494
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#3614
  # DEBUG __it => D#3614
  # DEBUG D#1008 => D#1494
  # DEBUG __first => D#3614
  # DEBUG __last => _48
  # DEBUG __value => D#1008
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3614
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#2285 => &this_4(D)->D.68817
  # DEBUG this => D#2285
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#2229 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2228 => D#2229
  # DEBUG __x => D#2228
  # DEBUG D.138876 => D#2230
  # DEBUG D#2227 => D#2228
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2226 => D#2227
  # DEBUG __x => D#2226
  # DEBUG __assignable => 1
  # DEBUG D#2225 => D#2226
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2224 => D#2225
  # DEBUG __x => D#2224
  # DEBUG D#2223 => D#2224
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2222 => D#2223
  # DEBUG __value => D#2222
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#2221 => D#2222
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#2221
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.68817._M_impl._M_finish = __first_125;
  # DEBUG D#2286 => &this_4(D)->D.68817
  # DEBUG this => D#2286
  # DEBUG this => &__position
  # DEBUG __first => D#3614
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#2276
  # DEBUG D#2275 => D#2276
  # DEBUG D#2274 => D#2275
  # DEBUG __first => D#3614
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.138838 => D#2274
  # DEBUG __first => D#3614
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#3614
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#3614
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3614
  # DEBUG __it => D#3614
  # DEBUG __first => D#3614
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3614
  # DEBUG __it => D#3614
  # DEBUG __first => D#3614
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#3614
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.68817._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.68817._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#1495 => &__x_copy
  # DEBUG __first => D#3614
  # DEBUG __last => __first_7
  # DEBUG D#1494 => D#1495
  # DEBUG __value => D#1494
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3614
  # DEBUG __it => D#3614
  # DEBUG D#1008 => D#1494
  # DEBUG __first => D#3614
  # DEBUG __last => __first_7
  # DEBUG __value => D#1008
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3614
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2131 => this_4(D)
  # DEBUG this => D#2131
  # DEBUG D#2130 => D#2131
  # DEBUG D#2129 => &D#2130->D.63091
  # DEBUG this => D#2129
  # DEBUG __a => D#2128
  # DEBUG D#2127 => D#2128
  # DEBUG D#2116 => D#2127
  # DEBUG this => D#2116
  _17 = MEM[(struct Stats * * *)this_4(D)];
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG __a => &D.161441
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG D#2131 => this_4(D)
  # DEBUG this => D#2131
  # DEBUG D#2130 => D#2131
  # DEBUG D#2129 => &D#2130->D.63091
  # DEBUG this => D#2129
  # DEBUG __a => D#2128
  # DEBUG D#2127 => D#2128
  # DEBUG D#2116 => D#2127
  # DEBUG this => D#2116
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#550 => &this_4(D)->D.68817._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#550
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84526
  # DEBUG this => &__position
  # DEBUG this => &D.84526
  # DEBUG D#2297 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2297
  # DEBUG D#2296 => &this_4(D)->D.68817
  # DEBUG D#1731 => D#2296
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => NULL
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2118
  # DEBUG D.161429 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.68817._M_impl._M_start;
  pretmp_147 = this_4(D)->D.68817._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.356_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2280 => &this_4(D)->D.68817
  # DEBUG this => D#2280
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.356_113 + _19;
  _56 = MEM[(struct BufferState * const &)__x_21(D)];
  # DEBUG D#2229 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2228 => D#2229
  # DEBUG __x => D#2228
  # DEBUG D.138993 => D#2230
  # DEBUG D#2227 => D#2228
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2226 => D#2227
  # DEBUG __x => D#2226
  # DEBUG __assignable => 1
  # DEBUG D#2225 => D#2226
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2224 => D#2225
  # DEBUG __x => D#2224
  # DEBUG D#2223 => D#2224
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2222 => D#2223
  # DEBUG __value => D#2222
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#2221 => D#2222
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#2221
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2281 => &this_4(D)->D.68817
  # DEBUG this => D#2281
  # DEBUG this => &__position
  # DEBUG D#3613 => this_4(D)->D.68817._M_impl._M_start
  # DEBUG __first => D#3613
  # DEBUG __last => D#3614
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2278
  # DEBUG D#2277 => D#2278
  # DEBUG D#2274 => D#2277
  # DEBUG __first => D#3613
  # DEBUG __last => D#3614
  # DEBUG __result => NULL
  # DEBUG D.138955 => D#2274
  # DEBUG __first => D#3613
  # DEBUG __last => D#3614
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3613
  # DEBUG __last => D#3614
  # DEBUG __result => NULL
  # DEBUG __first => D#3613
  # DEBUG __last => D#3614
  # DEBUG __result => NULL
  # DEBUG __it => D#3614
  # DEBUG __it => D#3614
  # DEBUG __it => D#3613
  # DEBUG __it => D#3613
  # DEBUG __first => D#3613
  # DEBUG __last => D#3614
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3614
  # DEBUG __it => D#3614
  # DEBUG __it => D#3613
  # DEBUG __it => D#3613
  # DEBUG __first => D#3613
  # DEBUG __last => D#3614
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3613
  # DEBUG __last => D#3614
  # DEBUG __result => NULL
  # DEBUG D#3612 => (long int) D#3613
  # DEBUG D#3611 => _158 - D#3612
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.356_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#3610 => (long unsigned int) D#3611
  # DEBUG __new_finish => iftmp.356_113 + D#3610
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.356_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2282 => &this_4(D)->D.68817
  # DEBUG this => D#2282
  # DEBUG D#3609 => this_4(D)->D.68817._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#3614
  # DEBUG __last => D#3609
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#2278
  # DEBUG D#2277 => D#2278
  # DEBUG D#2274 => D#2277
  # DEBUG __first => D#3614
  # DEBUG __last => D#3609
  # DEBUG __result => __new_finish_26
  # DEBUG D.138916 => D#2274
  # DEBUG __first => D#3614
  # DEBUG __last => D#3609
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#3614
  # DEBUG __last => D#3609
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#3614
  # DEBUG __last => D#3609
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#3609
  # DEBUG __it => D#3609
  # DEBUG __it => D#3614
  # DEBUG __it => D#3614
  # DEBUG __first => D#3614
  # DEBUG __last => D#3609
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#3609
  # DEBUG __it => D#3609
  # DEBUG __it => D#3614
  # DEBUG __it => D#3614
  # DEBUG __first => D#3614
  # DEBUG __last => D#3609
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#3614
  # DEBUG __last => D#3609
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#2283 => &this_4(D)->D.68817
  # DEBUG this => D#2283
  # DEBUG D#2295 => this_4(D)->D.68817._M_impl._M_finish
  # DEBUG D#2294 => this_4(D)->D.68817._M_impl._M_start
  # DEBUG __first => D#2294
  # DEBUG __last => D#2295
  # DEBUG D.138909 => NULL
  # DEBUG D#542 => D#2294
  # DEBUG D#543 => D#2295
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG D#2293 => this_4(D)->D.68817._M_impl._M_end_of_storage
  # DEBUG D#2292 => (long int) D#2293
  # DEBUG D#2291 => (long int) D#3613
  # DEBUG D#2290 => D#2292 - D#2291
  # DEBUG D#2289 => D#2290 /[ex] 8
  # DEBUG D#2288 => (long unsigned int) D#2289
  # DEBUG D#2287 => &this_4(D)->D.68817
  # DEBUG this => D#2287
  # DEBUG __p => D#3613
  # DEBUG __n => D#2288
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#990 => &D#2287->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#2288
  # DEBUG __p => D#3613
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => D#3613
  # DEBUG this => D#984
  # DEBUG D.138905 => D#985
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.68817._M_impl._M_start = iftmp.356_113;
  this_4(D)->D.68817._M_impl._M_finish = _70;
  this_4(D)->D.68817._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#550 => &this_4(D)->D.68817._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#550
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84526
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.84526
  _143 = _144 - _116;
  # DEBUG D#2297 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2297
  # DEBUG D#2296 => &this_4(D)->D.68817
  # DEBUG D#1731 => D#2296
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#550 => &this_4(D)->D.68817._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#550
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84526
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.84526
  _150 = _151 - _116;
  # DEBUG D#2297 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2297
  # DEBUG D#2296 => &this_4(D)->D.68817
  # DEBUG D#1731 => D#2296
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<bool, _Alloc>::_M_fill_insert(std::vector<bool, _Alloc>::iterator, std::vector<bool, _Alloc>::size_type, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator; std::vector<bool, _Alloc>::size_type = long unsigned int] (_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb, funcdef_no=3944, decl_uid=48335, cgraph_uid=2192, symbol_order=2193)

Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<bool, _Alloc>::_M_fill_insert(std::vector<bool, _Alloc>::iterator, std::vector<bool, _Alloc>::size_type, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator; std::vector<bool, _Alloc>::size_type = long unsigned int] (struct vector * const this, struct iterator __position, size_type __n, bool __x)
{
  const unsigned int __first$8;
  _Bit_type * __first;
  const unsigned int __last$_M_offset;
  _Bit_type * const __last$_M_p;
  unsigned int __last$D33184$_M_offset;
  _Bit_type * __last$D33184$_M_p;
  unsigned int __first$D33184$_M_offset;
  _Bit_type * __first$D33184$_M_p;
  unsigned int SR.5494;
  _Bit_type * SR.5493;
  const unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.5490;
  _Bit_type * SR.5489;
  unsigned int SR.5488;
  _Bit_type * SR.5487;
  unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.5484;
  _Bit_type * SR.5483;
  unsigned int SR.5482;
  _Bit_type * SR.5481;
  const unsigned int __first$8;
  const unsigned int __first$8;
  _Bit_type * __first;
  const unsigned int __last$_M_offset;
  _Bit_type * const __last$_M_p;
  unsigned int __last$D33184$_M_offset;
  _Bit_type * __last$D33184$_M_p;
  unsigned int __first$D33184$_M_offset;
  _Bit_type * __first;
  unsigned int SR.5471;
  _Bit_type * SR.5470;
  unsigned int SR.5469;
  _Bit_type * SR.5468;
  unsigned int __i$D33184$_M_offset;
  _Bit_type * __i$D33184$_M_p;
  unsigned int __position$8;
  _Bit_type * __position;
  struct _Bit_iterator D.161903;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  struct _Bit_iterator D.161867;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.161866;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  struct _Bit_iterator D.161797;
  struct _Bit_iterator D.161796;
  long unsigned int * __first;
  _Bit_type * __first$D33184$_M_p;
  _Bit_type * __last$D33184$_M_p;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator D.161771;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.161746;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.161745;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  const long unsigned int D.161722;
  const size_type __len;
  size_type D.161721;
  size_type __n;
  _Bit_type * __last$D33304$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D33304$_M_offset;
  struct _Bit_iterator D.161699;
  struct iterator D.161698;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  struct _Bit_iterator D.161628;
  struct _Bit_iterator D.161627;
  long unsigned int * __first;
  _Bit_type * __first$D33184$_M_p;
  _Bit_type * __last$D33184$_M_p;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator D.161602;
  difference_type __n;
  _Bit_type * __last$_M_p;
  const unsigned int __last$8;
  _Bit_type * __result$_M_p;
  unsigned int __result$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  struct _Bit_iterator D.161567;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.161566;
  _Bit_type * SR.3314;
  unsigned int SR.3307;
  _Bit_type * SR.3306;
  unsigned int SR.3305;
  _Bit_type * SR.3304;
  unsigned int __i$8;
  _Bit_type * __i;
  unsigned int __position$8;
  _Bit_type * __position;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  struct _Bit_iterator D.132213;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  struct _Bit_iterator D.132175;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator __i;
  struct _Bit_iterator D.97653;
  struct _Bit_iterator D.97649;
  long unsigned int _7;
  long int __n.241_8;
  long unsigned int prephitmp_13;
  bool _15;
  long int __n.241_16;
  long unsigned int * _20;
  long int _25;
  long int _26;
  long int _27;
  long int _28;
  long int _29;
  ptrdiff_t _30;
  unsigned int _32;
  _Bit_type * _33;
  long unsigned int * const _34;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  ptrdiff_t _41;
  size_type _42;
  _Bit_type * _53;
  unsigned int _55;
  bool _56;
  long int _58;
  long unsigned int _59;
  long unsigned int _60;
  unsigned int _66;
  long int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int * _81;
  long int _89;
  long unsigned int _90;
  long unsigned int _91;
  unsigned int _97;
  long unsigned int _128;
  int _131;
  long int _133;
  long int _134;
  long int _135;
  long int _137;
  long int _138;
  long unsigned int pretmp_143;
  long unsigned int prephitmp_147;
  size_t pretmp_149;
  long unsigned int _154;
  long unsigned int _155;
  long unsigned int _157;
  long unsigned int _158;
  long unsigned int _159;
  long unsigned int _160;
  long unsigned int _161;
  bool _164;
  long unsigned int prephitmp_165;
  long unsigned int pretmp_172;
  long unsigned int _180;
  long unsigned int _184;
  long unsigned int _185;
  long unsigned int _186;
  long unsigned int _193;
  long unsigned int _195;
  long unsigned int _196;
  long unsigned int _203;
  long unsigned int _204;
  long unsigned int _205;
  bool _213;
  bool _214;
  bool _215;
  long unsigned int _222;
  long unsigned int _223;
  long unsigned int _224;
  bool _230;
  bool _232;
  long int __last.195_235;
  long int __first.196_236;
  long int _237;
  long unsigned int _239;
  bool _253;
  long unsigned int _255;
  int _257;
  long unsigned int _260;
  long unsigned int pretmp_269;
  long unsigned int _282;
  long unsigned int _284;
  long unsigned int _285;
  long unsigned int _287;
  long unsigned int _289;
  long unsigned int _290;
  long unsigned int _291;
  long unsigned int _292;
  long unsigned int _293;
  long unsigned int _304;
  long unsigned int _307;
  long unsigned int _308;
  long unsigned int _311;
  long unsigned int _313;
  bool _316;
  bool _318;
  bool _320;
  bool _322;
  long unsigned int _324;
  long unsigned int _325;
  long unsigned int _326;
  int _333;
  long unsigned int _343;
  long unsigned int _344;
  long unsigned int _345;
  long unsigned int _362;
  long unsigned int _363;
  long unsigned int _364;
  int _370;
  long unsigned int * const _373;
  long int _375;
  long int _376;
  long int _377;
  long unsigned int _378;
  sizetype _379;
  long unsigned int * _380;
  long int _391;
  long int _393;
  long int _394;
  long int _395;
  long int _396;
  long unsigned int _401;
  long unsigned int _403;
  long unsigned int _405;
  long unsigned int _406;
  long unsigned int _408;
  long unsigned int _409;
  long unsigned int _410;
  long unsigned int _411;
  long unsigned int _412;
  long unsigned int pretmp_422;
  long unsigned int _423;
  long unsigned int _424;
  long unsigned int _426;
  long unsigned int _428;
  long int pretmp_437;
  long unsigned int prephitmp_439;
  long int prephitmp_444;
  long unsigned int _453;
  _Bit_type cstore_456;
  long unsigned int _457;
  long unsigned int _458;
  long unsigned int _459;
  bool _460;
  bool _463;
  bool _464;
  long unsigned int pretmp_487;
  _Bit_type cstore_499;
  long unsigned int _500;
  long unsigned int _501;
  long unsigned int _502;
  long unsigned int _503;
  bool _504;
  long unsigned int pretmp_522;
  long unsigned int _534;
  _Bit_type cstore_539;
  long unsigned int _549;
  bool _558;
  bool _559;
  bool _560;
  bool _561;
  bool _562;
  long unsigned int pretmp_563;
  bool _564;
  bool _565;
  bool _566;
  bool _567;
  bool _568;

  <bb 2>:
  # DEBUG D#3658 => MEM[(struct _Bit_iterator *)&__position]
  # DEBUG __position => D#3658
  # DEBUG D#3657 => MEM[(struct _Bit_iterator *)&__position + 8B]
  # DEBUG __position$8 => D#3657
  # DEBUG __position => D#3658
  # DEBUG __position$8 => D#3657
  if (__n_2(D) == 0)
    goto <bb 135>;
  else
    goto <bb 3>;

  <bb 3>:
  __first_525 = MEM[(struct _Bit_iterator *)&__position];
  __first$8_480 = MEM[(struct _Bit_iterator *)&__position + 8B];
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#208 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _32 = MEM[(const struct _Bit_iterator *)this_4(D)].D.33184._M_offset;
  _33 = MEM[(const struct _Bit_iterator *)this_4(D)].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#48
  # DEBUG D#557 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl
  _34 = MEM[(long unsigned int * *)this_4(D) + 32B];
  # DEBUG D#375 => D#557
  # DEBUG this => D#375
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _36 = (long int) _34;
  _37 = (long int) _33;
  _38 = _36 - _37;
  _39 = _38 * 8;
  _40 = (long int) _32;
  _41 = _39 - _40;
  _42 = (size_type) _41;
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#208 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG this => D#48
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#48
  # DEBUG this => this_4(D)
  # DEBUG D#209 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  __last$8_6 = MEM[(const struct _Bit_iterator *)this_4(D) + 16B].D.33184._M_offset;
  __last$_M_p_5 = MEM[(const struct _Bit_iterator *)this_4(D) + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _25 = (long int) __last$_M_p_5;
  _26 = _25 - _37;
  _27 = _26 * 8;
  _28 = (long int) __last$8_6;
  _29 = _27 + _28;
  _30 = _29 - _40;
  _31 = (const long unsigned int) _30;
  _7 = _42 - _31;
  if (__n_2(D) <= _7)
    goto <bb 4>;
  else
    goto <bb 59>;

  <bb 4>:
  __n.241_8 = (long int) __n_2(D);
  # DEBUG D#1879 => &this_4(D)->D.48430._M_impl._M_finish
  # DEBUG this => D#1879
  # DEBUG __i => __n.241_8
  # DEBUG __tmp$_M_p => __last$_M_p_5
  # DEBUG __tmp$_M_offset => __last$8_6
  # DEBUG this => &__tmp
  # DEBUG __i => __n.241_8
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => __n.241_8
  __n_68 = __n.241_8 + _28;
  # DEBUG __n => __n_68
  _69 = __n_68 / 64;
  _70 = (long unsigned int) _69;
  _71 = _70 * 8;
  __result$_M_p_72 = __last$_M_p_5 + _71;
  # DEBUG __tmp$_M_p => __result$_M_p_72
  __n_73 = __n_68 % 64;
  # DEBUG __n => __n_73
  if (__n_73 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __n_74 = __n_73 + 64;
  # DEBUG __n => __n_74
  __result$_M_p_75 = __result$_M_p_72 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __result$_M_p_75

  <bb 6>:
  # __n_76 = PHI <__n_73(4), __n_74(5)>
  # __result$_M_p_78 = PHI <__result$_M_p_72(4), __result$_M_p_75(5)>
  # DEBUG __tmp$_M_p => __result$_M_p_78
  # DEBUG __n => __n_76
  __result$_M_offset_77 = (unsigned int) __n_76;
  # DEBUG __tmp$_M_offset => __result$_M_offset_77
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  # DEBUG this => this_4(D)
  # DEBUG D#1870 => __position
  # DEBUG D#1870 => __position
  # DEBUG D#1871 => D.97648
  # DEBUG D#1871 => D.97648
  # DEBUG D#1872 => D.97647
  # DEBUG D#1872 => D.97647
  # DEBUG __it$D33184$_M_p => __last$_M_p_5
  # DEBUG __it$D33184$_M_offset => __last$8_6
  # DEBUG __it$D33184$_M_p => D#3658
  # DEBUG __it$D33184$_M_offset => D#3657
  # DEBUG __it$D33184$_M_p => __result$_M_p_78
  # DEBUG __it$D33184$_M_offset => __result$_M_offset_77
  # DEBUG __it$D33184$_M_p => __last$_M_p_5
  # DEBUG __it$D33184$_M_offset => __last$8_6
  # DEBUG __it$D33184$_M_p => D#3658
  # DEBUG __it$D33184$_M_offset => D#3657
  # DEBUG __simple => 0
  # DEBUG __last$_M_p => __last$_M_p_5
  # DEBUG __last$8 => __last$8_6
  # DEBUG __result$_M_p => __result$_M_p_78
  # DEBUG __result$_M_offset => __result$_M_offset_77
  # DEBUG D#37 => &__last.D.33184
  # DEBUG D#37 => &__last.D.33184
  # DEBUG D#38 => &__first.D.33184
  # DEBUG D#38 => &__first.D.33184
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _133 = (long int) __first_525;
  _134 = _25 - _133;
  _135 = _134 * 8;
  _137 = _28 + _135;
  _138 = (long int) __first$8_480;
  __n_139 = _137 - _138;
  # DEBUG __n => NULL
  # DEBUG __result$_M_offset => __result$_M_offset_77
  # DEBUG __result$_M_p => __result$_M_p_78
  # DEBUG __last$8 => __last$8_6
  # DEBUG __last$_M_p => __last$_M_p_5
  # DEBUG __n => __n_139
  if (__n_139 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  # DEBUG __i => __n.241_8
  # DEBUG __tmp$_M_p => D#3658
  # DEBUG __tmp$_M_offset => D#3657
  # DEBUG this => &__tmp
  # DEBUG __i => __n.241_8
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => __n.241_8
  __n_57 = __n.241_8 + _138;
  # DEBUG __n => __n_57
  _58 = __n_57 / 64;
  _59 = (long unsigned int) _58;
  _60 = _59 * 8;
  __last$_M_p_61 = __first_525 + _60;
  # DEBUG __tmp$_M_p => __last$_M_p_61
  __n_62 = __n_57 % 64;
  # DEBUG __n => __n_62
  if (__n_62 < 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 8>:

  <bb 9>:
  # __n_461 = PHI <__n_139(8), __n_162(19)>
  # __last$8_462 = PHI <__last$8_6(8), __last$8_145(19)>
  # __last$_M_p_489 = PHI <__last$_M_p_5(8), __last$_M_p_153(19)>
  # __result$_M_offset_490 = PHI <__result$_M_offset_77(8), __result$_M_offset_151(19)>
  # __result$_M_p_491 = PHI <__result$_M_p_78(8), __result$_M_p_156(19)>
  # DEBUG __result$_M_offset => __result$_M_offset_490
  # DEBUG __result$_M_p => __result$_M_p_491
  # DEBUG __last$8 => __last$8_462
  # DEBUG __last$_M_p => __last$_M_p_489
  # DEBUG __n => __n_461
  # DEBUG this => &__last
  # DEBUG D#43 => &__last.D.33184
  # DEBUG this => D#43
  # DEBUG __last$8 => __last$8_462 + 4294967295
  if (__last$8_462 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  __last$8_142 = __last$8_462 + 4294967295;
  pretmp_487 = 1 << __last$8_142;
  goto <bb 12>;

  <bb 11>:
  # DEBUG __last$8 => 63
  __last$_M_p_144 = __last$_M_p_489 + 18446744073709551608;
  # DEBUG __last$_M_p => __last$_M_p_144

  <bb 12>:
  # __last$_M_p_153 = PHI <__last$_M_p_489(10), __last$_M_p_144(11)>
  # __last$8_145 = PHI <__last$8_142(10), 63(11)>
  # prephitmp_13 = PHI <pretmp_487(10), 9223372036854775808(11)>
  # DEBUG __last$8 => __last$8_145
  # DEBUG __last$_M_p => __last$_M_p_153
  # DEBUG this => D#41
  # DEBUG this => D#41
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_153
  # DEBUG __y => 1 << __last$8_145
  # DEBUG this => &__result
  # DEBUG D#43 => &__result.D.33184
  # DEBUG this => D#43
  # DEBUG __result$_M_offset => __result$_M_offset_490 + 4294967295
  if (__result$_M_offset_490 == 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  __result$_M_offset_148 = __result$_M_offset_490 + 4294967295;
  pretmp_172 = 1 << __result$_M_offset_148;
  goto <bb 15>;

  <bb 14>:
  # DEBUG __result$_M_offset => 63
  __result$_M_p_150 = __result$_M_p_491 + 18446744073709551608;
  # DEBUG __result$_M_p => __result$_M_p_150

  <bb 15>:
  # __result$_M_p_156 = PHI <__result$_M_p_491(13), __result$_M_p_150(14)>
  # __result$_M_offset_151 = PHI <__result$_M_offset_148(13), 63(14)>
  # prephitmp_165 = PHI <pretmp_172(13), 9223372036854775808(14)>
  # DEBUG __result$_M_offset => __result$_M_offset_151
  # DEBUG __result$_M_p => __result$_M_p_156
  # DEBUG this => D#41
  # DEBUG this => D#41
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_156
  # DEBUG __y => 1 << __result$_M_offset_151
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  _154 = *__last$_M_p_153;
  _155 = prephitmp_13 & _154;
  # DEBUG this => NULL
  # DEBUG __x => _155 != 0
  if (_155 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _157 = *__result$_M_p_156;
  _158 = _157 | prephitmp_165;
  goto <bb 18>;

  <bb 17>:
  _159 = *__result$_M_p_156;
  _160 = ~prephitmp_165;
  _161 = _159 & _160;

  <bb 18>:
  # cstore_456 = PHI <_158(16), _161(17)>
  *__result$_M_p_156 = cstore_456;
  __n_162 = __n_461 + -1;
  # DEBUG __n => __n_162
  # DEBUG __result$_M_offset => __result$_M_offset_151
  # DEBUG __result$_M_p => __result$_M_p_156
  # DEBUG __last$8 => __last$8_145
  # DEBUG __last$_M_p => __last$_M_p_153
  # DEBUG __n => __n_162
  if (__n_162 <= 0)
    goto <bb 7>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 9>;

  <bb 20>:
  __n_63 = __n_62 + 64;
  # DEBUG __n => __n_63
  __last$_M_p_64 = __last$_M_p_61 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __last$_M_p_64

  <bb 21>:
  # __n_65 = PHI <__n_62(7), __n_63(20)>
  # __last$_M_p_67 = PHI <__last$_M_p_61(7), __last$_M_p_64(20)>
  # DEBUG __tmp$_M_p => __last$_M_p_67
  # DEBUG __n => __n_65
  _66 = (unsigned int) __n_65;
  # DEBUG __tmp$_M_offset => _66
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  # DEBUG __first => D#3658
  # DEBUG __first$D33184$_M_offset => D#3657
  # DEBUG __last$D33184$_M_p => __last$_M_p_67
  # DEBUG __last$D33184$_M_offset => _66
  # DEBUG __x => &__x
  # DEBUG __first$D33184$_M_p => D#3658
  # DEBUG __last$D33184$_M_p => __last$_M_p_67
  if (__last$_M_p_67 != __first_525)
    goto <bb 30>;
  else
    goto <bb 22>;

  <bb 22>:
  if (__x_548(D) != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  goto <bb 53>;

  <bb 24>:

  <bb 25>:
  # __first_478 = PHI <__first_525(24), __first_446(29)>
  # __first$8_472 = PHI <__first$8_480(24), __first$8_443(29)>
  # DEBUG __first$_M_offset => __first$8_472
  # DEBUG __first$_M_p => __first_478
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG __first$_M_offset => __first$8_472
  # DEBUG __first$_M_p => __first_478
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  _464 = _66 == __first$8_472;
  _463 = __last$_M_p_67 == __first_478;
  _460 = _463 & _464;
  if (_460 != 0)
    goto <bb 55>;
  else
    goto <bb 26>;

  <bb 26>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _459 = 1 << __first$8_472;
  # DEBUG this => NULL
  # DEBUG __x => __first_478
  # DEBUG __y => _459
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _458 = *__first_478;
  _457 = ~_459;
  _453 = _458 & _457;
  *__first_478 = _453;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __first$8_472 + 1
  if (__first$8_472 == 63)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  __first$8_448 = __first$8_472 + 1;
  goto <bb 29>;

  <bb 28>:
  # DEBUG __first$_M_offset => 0
  __first_447 = __first_478 + 8;
  # DEBUG __first$_M_p => __first_447

  <bb 29>:
  # __first_446 = PHI <__first_478(27), __first_447(28)>
  # __first$8_443 = PHI <__first$8_448(27), 0(28)>
  goto <bb 25>;

  <bb 30>:
  _257 = (int) __x_548(D);
  _333 = -_257;
  __first_166 = __first_525 + 8;
  # DEBUG D#253 => &D.161629
  # DEBUG __first => __first_166
  # DEBUG __last => __last$_M_p_67
  # DEBUG D#252 => D#253
  # DEBUG __value => D#252
  # DEBUG __it => __last$_M_p_67
  # DEBUG __it => __last$_M_p_67
  # DEBUG __it => __first_166
  # DEBUG __it => __first_166
  # DEBUG D#191 => D#252
  # DEBUG __first => __first_166
  # DEBUG __last => __last$_M_p_67
  # DEBUG __value => D#191
  # DEBUG __tmp => _333
  # DEBUG __first => __first_166
  if (__last$_M_p_67 == __first_166)
    goto <bb 31>;
  else
    goto <bb 39>;

  <bb 31>:
  # DEBUG this => &D.161628
  # DEBUG __x => __first_166
  # DEBUG __y => 0
  # DEBUG D#40 => &D.161628.D.33184
  # DEBUG this => D#40
  # DEBUG __x => __first_166
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __first => D#3658
  # DEBUG __first$8 => D#3657
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => D#3658
  # DEBUG __first$_M_offset => D#3657
  if (__x_548(D) != 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  goto <bb 44>;

  <bb 33>:

  <bb 34>:
  # __first_550 = PHI <__first_525(33), __first_515(38)>
  # __first$8_542 = PHI <__first$8_480(33), __first$8_509(38)>
  # DEBUG __first$_M_offset => __first$8_542
  # DEBUG __first$_M_p => __first_550
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  _316 = __first$8_542 == 0;
  _253 = __first_166 == __first_550;
  _504 = _316 & _253;
  if (_504 != 0)
    goto <bb 136>;
  else
    goto <bb 35>;

  <bb 35>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _503 = 1 << __first$8_542;
  # DEBUG this => NULL
  # DEBUG __x => __first_550
  # DEBUG __y => _503
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _502 = *__first_550;
  _501 = ~_503;
  _500 = _502 & _501;
  *__first_550 = _500;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __first$8_542 + 1
  if (__first$8_542 == 63)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG __first$_M_offset => 0
  __first_523 = __first_550 + 8;
  # DEBUG __first$_M_p => __first_523
  goto <bb 38>;

  <bb 37>:
  __first$8_517 = __first$8_542 + 1;

  <bb 38>:
  # __first_515 = PHI <__first_523(36), __first_550(37)>
  # __first$8_509 = PHI <0(36), __first$8_517(37)>
  goto <bb 34>;

  <bb 39>:
  pretmp_269 = (long unsigned int) _333;

  <bb 40>:
  # __first_492 = PHI <__first_166(39), __first_170(41)>
  # DEBUG __first => __first_492
  *__first_492 = pretmp_269;
  __first_170 = __first_492 + 8;
  # DEBUG __first => __first_170
  # DEBUG __first => __first_170
  if (__last$_M_p_67 == __first_170)
    goto <bb 31>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 40>;

  <bb 42>:
  __first$8_209 = __first$8_200 + 1;

  <bb 43>:
  # __first_192 = PHI <__first_198(42), __first_210(45)>
  # __first$8_231 = PHI <__first$8_209(42), 0(45)>

  <bb 44>:
  # __first_198 = PHI <__first_192(43), __first_525(32)>
  # __first$8_200 = PHI <__first$8_231(43), __first$8_480(32)>
  # DEBUG __first$_M_offset => __first$8_200
  # DEBUG __first$_M_p => __first_198
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  _56 = __first$8_200 == 0;
  _164 = __first_166 == __first_198;
  _561 = _56 & _164;
  if (_561 != 0)
    goto <bb 136>;
  else
    goto <bb 145>;

  <bb 45>:
  # DEBUG __first$_M_offset => 0
  __first_210 = __first_198 + 8;
  # DEBUG __first$_M_p => __first_210
  goto <bb 43>;

  <bb 46>:
  __first$_M_offset_190 = __first$_M_offset_181 + 1;

  <bb 47>:
  # __last$_M_p_212 = PHI <__last$_M_p_179(46), __last$_M_p_191(50)>
  # __first$_M_offset_211 = PHI <__first$_M_offset_190(46), 0(50)>

  <bb 48>:
  # __last$_M_p_179 = PHI <__last$_M_p_212(47), __last$_M_p_67(137)>
  # __first$_M_offset_181 = PHI <__first$_M_offset_211(47), 0(137)>
  # DEBUG __first$_M_offset => __first$_M_offset_181
  # DEBUG __first$_M_p => __last$_M_p_179
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  if (__last$_M_p_67 == __last$_M_p_179)
    goto <bb 49>;
  else
    goto <bb 146>;

  <bb 49>:
  # DEBUG __first$_M_offset => __first$_M_offset_181
  # DEBUG __first$_M_p => __last$_M_p_179
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  if (_66 == __first$_M_offset_181)
    goto <bb 147>;
  else
    goto <bb 146>;

  <bb 50>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_191 = __last$_M_p_179 + 8;
  # DEBUG __first$_M_p => __last$_M_p_191
  goto <bb 47>;

  <bb 51>:
  __first$8_228 = __first$8_219 + 1;

  <bb 52>:
  # __first_352 = PHI <__first_217(51), __first_229(54)>
  # __first$8_351 = PHI <__first$8_228(51), 0(54)>

  <bb 53>:
  # __first_217 = PHI <__first_525(23), __first_352(52)>
  # __first$8_219 = PHI <__first$8_480(23), __first$8_351(52)>
  # DEBUG __first$_M_offset => __first$8_219
  # DEBUG __first$_M_p => __first_217
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG __first$_M_offset => __first$8_219
  # DEBUG __first$_M_p => __first_217
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  _562 = _66 == __first$8_219;
  _213 = __last$_M_p_67 == __first_217;
  _214 = _213 & _562;
  if (_214 != 0)
    goto <bb 55>;
  else
    goto <bb 148>;

  <bb 54>:
  # DEBUG __first$_M_offset => 0
  __first_229 = __first_217 + 8;
  # DEBUG __first$_M_p => __first_229
  goto <bb 52>;

  <bb 55>:
  # DEBUG D#1888 => &this_4(D)->D.48430._M_impl._M_finish
  # DEBUG this => D#1888
  # DEBUG __i => __n.241_8
  # DEBUG D#44 => &D#1888->D.33184
  # DEBUG this => D#44
  # DEBUG __i => __n.241_8
  # DEBUG D#3656 => MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_offset
  # DEBUG D#3655 => (long int) D#3656
  # DEBUG D#3654 => __n.241_8 + D#3655
  # DEBUG __n => D#3654
  # DEBUG __n => D#3654 % 64
  if (__n_73 < 0)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_p = __result$_M_p_72;
  goto <bb 58>;

  <bb 57>:
  __n_52 = __n_73 + 64;
  # DEBUG __n => __n_52
  _53 = __result$_M_p_72 + 18446744073709551608;
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_p = _53;

  <bb 58>:
  # __n_54 = PHI <__n_73(56), __n_52(57)>
  # DEBUG __n => __n_54
  _55 = (unsigned int) __n_54;
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_offset = _55;
  goto <bb 135>;

  <bb 59>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector<bool>::_M_fill_insert"
  # DEBUG D#1528 => this_4(D)
  # DEBUG this => D#1528
  # DEBUG D#1527 => D#1528
  # DEBUG __isize => 9223372036854775744
  # DEBUG D#1526 => &D#1527->D.48430
  # DEBUG this => D#1526
  # DEBUG __a => D#1525
  # DEBUG D#1524 => D#1525
  # DEBUG D#1496 => D#1524
  # DEBUG this => D#1496
  # DEBUG __asize => NULL
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#208 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG this => D#48
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#48
  # DEBUG this => this_4(D)
  # DEBUG D#209 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  # DEBUG this => D#48
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _255 = 9223372036854775744 - _31;
  if (__n_2(D) > _255)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  std::__throw_length_error ("vector<bool>::_M_fill_insert");

  <bb 61>:
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#208 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG this => D#48
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#48
  # DEBUG this => this_4(D)
  # DEBUG D#209 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  # DEBUG this => D#48
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#208 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG this => D#48
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#48
  # DEBUG this => this_4(D)
  # DEBUG D#209 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  # DEBUG this => D#48
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  # DEBUG __a => &D.161722
  # DEBUG __b => &__n
  _128 = MAX_EXPR <__n_2(D), _31>;
  __len_259 = _31 + _128;
  # DEBUG __len => __len_259
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#208 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG this => D#48
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#48
  # DEBUG this => this_4(D)
  # DEBUG D#209 => &MEM[(const struct vector *)this_4(D)].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  # DEBUG this => D#48
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  # DEBUG D#1528 => this_4(D)
  # DEBUG this => D#1528
  # DEBUG D#1527 => D#1528
  # DEBUG __isize => 9223372036854775744
  # DEBUG D#1526 => &D#1527->D.48430
  # DEBUG this => D#1526
  # DEBUG __a => D#1525
  # DEBUG D#1524 => D#1525
  # DEBUG D#1496 => D#1524
  # DEBUG this => D#1496
  # DEBUG __asize => NULL
  _564 = __len_259 > 9223372036854775744;
  _566 = _31 > __len_259;
  _565 = _564 | _566;
  if (_565 != 0)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:
  pretmp_143 = __len_259 + 63;
  pretmp_149 = pretmp_143 >> 6;
  pretmp_563 = pretmp_149 * 8;

  <bb 63>:
  # prephitmp_147 = PHI <1152921504606846968(61), pretmp_563(62)>
  # DEBUG __len => NULL
  # DEBUG D#1890 => &this_4(D)->D.48430
  # DEBUG D#1504 => D#1890
  # DEBUG __n => NULL
  # DEBUG this => D#1504
  # DEBUG D#1503 => D#1504
  # DEBUG __n => NULL
  # DEBUG D#1502 => &D#1503->_M_impl
  # DEBUG D#1501 => D#1502
  # DEBUG __n => NULL
  # DEBUG __a => D#1501
  # DEBUG D#1500 => D#1501
  # DEBUG D#1498 => D#1500
  # DEBUG D#1499 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1498
  # DEBUG D.132201 => D#1499
  # DEBUG D#1497 => D#1498
  # DEBUG D#1496 => D#1497
  # DEBUG this => D#1496
  _81 = operator new (prephitmp_147);
  # DEBUG __q => _81
  # DEBUG __r => _81
  # DEBUG this => &__start
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG D#40 => &__start.D.33184
  # DEBUG this => D#40
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __start$_M_p => _81
  # DEBUG __start$_M_offset => 0
  # DEBUG this => &D.84782
  # DEBUG __x => &__position
  # DEBUG D#48 => &D.84782.D.33304
  # DEBUG this => D#48
  # DEBUG __x => D#3658
  # DEBUG __y => D#3657
  # DEBUG this => D#48
  # DEBUG this => this_4(D)
  SR.3314_100 = MEM[(struct vector *)this_4(D)];
  # DEBUG D#1889 => MEM[(struct vector *)this_4(D) + 8B]
  # DEBUG this => &D.84781
  # DEBUG __x => &D.84780
  # DEBUG D#48 => &D.84781.D.33304
  # DEBUG this => D#48
  # DEBUG __x => SR.3314_100
  # DEBUG __y => D#1889
  # DEBUG this => D#48
  # DEBUG D.132274 => D#1889
  # DEBUG D#1515 => this_4(D)
  # DEBUG D#1516 => D.84781
  # DEBUG D#1517 => D.84782
  # DEBUG D#1517 => D.84782
  # DEBUG D#1518 => __start
  # DEBUG this => D#1515
  # DEBUG __last$D33304$_M_p => D#3658
  # DEBUG __first => SR.3314_100
  # DEBUG __last => D#3658
  # DEBUG __result => _81
  # DEBUG __it => D#3658
  # DEBUG __it => D#3658
  # DEBUG __it => SR.3314_100
  # DEBUG __it => SR.3314_100
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  # DEBUG __it => _81
  # DEBUG __it => _81
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  __last.195_235 = (long int) __first_525;
  __first.196_236 = (long int) SR.3314_100;
  _237 = __last.195_235 - __first.196_236;
  _Num_238 = _237 /[ex] 8;
  # DEBUG _Num => _Num_238
  if (_Num_238 != 0)
    goto <bb 65>;
  else
    goto <bb 64>;

  <bb 64>:
  pretmp_422 = (long unsigned int) _237;
  goto <bb 66>;

  <bb 65>:
  _239 = (long unsigned int) _237;
  __builtin_memmove (_81, SR.3314_100, _239);

  <bb 66>:
  # prephitmp_439 = PHI <pretmp_422(64), _239(65)>
  __i$D33184$_M_p_241 = _81 + prephitmp_439;
  # DEBUG __q => __i$D33184$_M_p_241
  # DEBUG this => NULL
  # DEBUG __x => __i$D33184$_M_p_241
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => __i$D33184$_M_p_241
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG this => NULL
  # DEBUG __x => D#3658
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => D#3658
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG D#1513 => __last
  # DEBUG D#1513 => __last
  # DEBUG __it$D33304$_M_p => D#3658
  # DEBUG __it$D33304$_M_offset => D#3657
  # DEBUG __it$D33304$_M_p => D#3658
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __it$D33184$_M_p => __i$D33184$_M_p_241
  # DEBUG __it$D33184$_M_offset => 0
  # DEBUG __it$D33304$_M_p => D#3658
  # DEBUG __it$D33304$_M_offset => D#3657
  # DEBUG __it$D33304$_M_p => D#3658
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __result => __i$D33184$_M_p_241
  # DEBUG __result$8 => 0
  # DEBUG __simple => 0
  # DEBUG __result => __i$D33184$_M_p_241
  # DEBUG __result$8 => 0
  # DEBUG __first$_M_p => D#3658
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __i$D33184$_M_p_241
  # DEBUG __result$8 => 0
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  __n_276 = (_Distance) __first$8_480;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __i$D33184$_M_p_241
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => D#3658
  # DEBUG __n => __n_276
  if (__n_276 == 0)
    goto <bb 80>;
  else
    goto <bb 67>;

  <bb 67>:

  <bb 68>:
  # __n_495 = PHI <__n_276(67), __n_298(78)>
  # __first$8_496 = PHI <0(67), __first$8_300(78)>
  # __first_175 = PHI <__first_525(67), __first_299(78)>
  # __i$D33184$_M_offset_466 = PHI <0(67), __i$D33184$_M_offset_302(78)>
  # __i$D33184$_M_p_510 = PHI <__i$D33184$_M_p_241(67), __i$D33184$_M_p_301(78)>
  # DEBUG __result$8 => __i$D33184$_M_offset_466
  # DEBUG __result$_M_p => __i$D33184$_M_p_510
  # DEBUG __first$8 => __first$8_496
  # DEBUG __first$_M_p => __first_175
  # DEBUG __n => __n_495
  # DEBUG D#49 => &__first
  # DEBUG D#49 => &__first
  # DEBUG this => D#49
  # DEBUG this => D#49
  _282 = 1 << __first$8_496;
  # DEBUG this => NULL
  # DEBUG __x => __first_175
  # DEBUG __y => _282
  # DEBUG this => NULL
  _284 = *__first_175;
  _285 = _282 & _284;
  # DEBUG D#41 => &__result
  # DEBUG D#41 => &__result
  # DEBUG this => D#41
  # DEBUG this => D#41
  _287 = 1 << __i$D33184$_M_offset_466;
  # DEBUG this => NULL
  # DEBUG __x => __i$D33184$_M_p_510
  # DEBUG __y => _287
  # DEBUG this => NULL
  # DEBUG __x => _285 != 0
  if (_285 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  _289 = *__i$D33184$_M_p_510;
  _290 = _287 | _289;
  goto <bb 71>;

  <bb 70>:
  _291 = *__i$D33184$_M_p_510;
  _292 = ~_287;
  _293 = _291 & _292;

  <bb 71>:
  # cstore_499 = PHI <_290(69), _293(70)>
  *__i$D33184$_M_p_510 = cstore_499;
  # DEBUG this => &__first
  # DEBUG D#50 => &__first.D.33304
  # DEBUG this => D#50
  # DEBUG __first$8 => __first$8_496 + 1
  if (__first$8_496 == 63)
    goto <bb 73>;
  else
    goto <bb 72>;

  <bb 72>:
  __first$8_294 = __first$8_496 + 1;
  goto <bb 74>;

  <bb 73>:
  # DEBUG __first$8 => 0
  __first_295 = __first_175 + 8;
  # DEBUG __first$_M_p => __first_295

  <bb 74>:
  # __first_299 = PHI <__first_175(72), __first_295(73)>
  # __first$8_300 = PHI <__first$8_294(72), 0(73)>
  # DEBUG __first$8 => __first$8_300
  # DEBUG __first$_M_p => __first_299
  # DEBUG this => &__result
  # DEBUG D#42 => &__result.D.33184
  # DEBUG this => D#42
  # DEBUG __result$8 => __i$D33184$_M_offset_466 + 1
  if (__i$D33184$_M_offset_466 == 63)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:
  __i$D33184$_M_offset_296 = __i$D33184$_M_offset_466 + 1;
  goto <bb 77>;

  <bb 76>:
  # DEBUG __result$8 => 0
  __i$D33184$_M_p_297 = __i$D33184$_M_p_510 + 8;
  # DEBUG __result$_M_p => __i$D33184$_M_p_297

  <bb 77>:
  # __i$D33184$_M_p_301 = PHI <__i$D33184$_M_p_510(75), __i$D33184$_M_p_297(76)>
  # __i$D33184$_M_offset_302 = PHI <__i$D33184$_M_offset_296(75), 0(76)>
  # DEBUG __result$8 => __i$D33184$_M_offset_302
  # DEBUG __result$_M_p => __i$D33184$_M_p_301
  __n_298 = __n_495 + -1;
  # DEBUG __n => __n_298
  # DEBUG __result$8 => __i$D33184$_M_offset_302
  # DEBUG __result$_M_p => __i$D33184$_M_p_301
  # DEBUG __first$8 => __first$8_300
  # DEBUG __first$_M_p => __first_299
  # DEBUG __n => __n_298
  if (__n_298 == 0)
    goto <bb 79>;
  else
    goto <bb 78>;

  <bb 78>:
  goto <bb 68>;

  <bb 79>:
  # __i$D33184$_M_p_494 = PHI <__i$D33184$_M_p_301(77)>
  # __i$D33184$_M_offset_493 = PHI <__i$D33184$_M_offset_302(77)>
  pretmp_437 = (long int) __i$D33184$_M_offset_493;

  <bb 80>:
  # __i$D33184$_M_offset_315 = PHI <__i$D33184$_M_offset_493(79), 0(66)>
  # __i$D33184$_M_p_511 = PHI <__i$D33184$_M_p_494(79), __i$D33184$_M_p_241(66)>
  # prephitmp_444 = PHI <pretmp_437(79), 0(66)>
  # DEBUG __result => __i$D33184$_M_p_511
  # DEBUG __result$8 => __i$D33184$_M_offset_315
  # DEBUG __i$D33184$_M_p => __i$D33184$_M_p_511
  # DEBUG __i$D33184$_M_offset => __i$D33184$_M_offset_315
  # DEBUG __i => __i$D33184$_M_p_511
  # DEBUG __i$8 => __i$D33184$_M_offset_315
  __n.241_16 = (long int) __n_2(D);
  # DEBUG this => &__i
  # DEBUG __i => __n.241_16
  # DEBUG __tmp$_M_p => __i$D33184$_M_p_511
  # DEBUG __tmp$_M_offset => __i$D33184$_M_offset_315
  # DEBUG this => &__tmp
  # DEBUG __i => __n.241_16
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => __n.241_16
  __n_88 = __n.241_16 + prephitmp_444;
  # DEBUG __n => __n_88
  _89 = __n_88 / 64;
  _90 = (long unsigned int) _89;
  _91 = _90 * 8;
  __last$_M_p_92 = __i$D33184$_M_p_511 + _91;
  # DEBUG __tmp$_M_p => __last$_M_p_92
  __n_93 = __n_88 % 64;
  # DEBUG __n => __n_93
  if (__n_93 < 0)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  __n_94 = __n_93 + 64;
  # DEBUG __n => __n_94
  __last$_M_p_95 = __last$_M_p_92 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __last$_M_p_95

  <bb 82>:
  # __n_96 = PHI <__n_93(80), __n_94(81)>
  # __last$_M_p_98 = PHI <__last$_M_p_92(80), __last$_M_p_95(81)>
  # DEBUG __tmp$_M_p => __last$_M_p_98
  # DEBUG __n => __n_96
  _97 = (unsigned int) __n_96;
  # DEBUG __tmp$_M_offset => _97
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  # DEBUG __first$D33184$_M_p => __i$D33184$_M_p_511
  # DEBUG __first$D33184$_M_offset => __i$D33184$_M_offset_315
  # DEBUG __last$D33184$_M_p => __last$_M_p_98
  # DEBUG __last$D33184$_M_offset => _97
  # DEBUG __x => &__x
  # DEBUG __first$D33184$_M_p => __i$D33184$_M_p_511
  # DEBUG __last$D33184$_M_p => __last$_M_p_98
  if (__last$_M_p_98 != __i$D33184$_M_p_511)
    goto <bb 91>;
  else
    goto <bb 83>;

  <bb 83>:
  if (__x_548(D) != 0)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  goto <bb 114>;

  <bb 85>:

  <bb 86>:
  # __i$D33184$_M_p_242 = PHI <__last$_M_p_98(85), __i$D33184$_M_p_136(90)>
  # __i$D33184$_M_offset_234 = PHI <__i$D33184$_M_offset_315(85), __i$D33184$_M_offset_132(90)>
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_234
  # DEBUG __first$_M_p => __i$D33184$_M_p_242
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_234
  # DEBUG __first$_M_p => __i$D33184$_M_p_242
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  _232 = _97 == __i$D33184$_M_offset_234;
  _230 = __last$_M_p_98 == __i$D33184$_M_p_242;
  _215 = _232 & _230;
  if (_215 != 0)
    goto <bb 116>;
  else
    goto <bb 87>;

  <bb 87>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _196 = 1 << __i$D33184$_M_offset_234;
  # DEBUG this => NULL
  # DEBUG __x => __i$D33184$_M_p_242
  # DEBUG __y => _196
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _195 = *__i$D33184$_M_p_242;
  _193 = ~_196;
  _180 = _195 & _193;
  *__i$D33184$_M_p_242 = _180;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_234 + 1
  if (__i$D33184$_M_offset_234 == 63)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  __i$D33184$_M_offset_163 = __i$D33184$_M_offset_234 + 1;
  goto <bb 90>;

  <bb 89>:
  # DEBUG __first$_M_offset => 0
  __i$D33184$_M_p_140 = __i$D33184$_M_p_242 + 8;
  # DEBUG __first$_M_p => __i$D33184$_M_p_140

  <bb 90>:
  # __i$D33184$_M_p_136 = PHI <__i$D33184$_M_p_242(88), __i$D33184$_M_p_140(89)>
  # __i$D33184$_M_offset_132 = PHI <__i$D33184$_M_offset_163(88), 0(89)>
  goto <bb 86>;

  <bb 91>:
  _131 = (int) __x_548(D);
  _370 = -_131;
  __first_306 = __i$D33184$_M_p_511 + 8;
  # DEBUG D#253 => &D.161798
  # DEBUG __first => __first_306
  # DEBUG __last => __last$_M_p_98
  # DEBUG D#252 => D#253
  # DEBUG __value => D#252
  # DEBUG __it => __last$_M_p_98
  # DEBUG __it => __last$_M_p_98
  # DEBUG __it => __first_306
  # DEBUG __it => __first_306
  # DEBUG D#191 => D#252
  # DEBUG __first => __first_306
  # DEBUG __last => __last$_M_p_98
  # DEBUG __value => D#191
  # DEBUG __tmp => _370
  # DEBUG __first => __first_306
  if (__last$_M_p_98 == __first_306)
    goto <bb 92>;
  else
    goto <bb 100>;

  <bb 92>:
  # DEBUG this => &D.161797
  # DEBUG __x => __first_306
  # DEBUG __y => 0
  # DEBUG D#40 => &D.161797.D.33184
  # DEBUG this => D#40
  # DEBUG __x => __first_306
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __first => __i$D33184$_M_p_511
  # DEBUG __first$8 => __i$D33184$_M_offset_315
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => __i$D33184$_M_p_511
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_315
  if (__x_548(D) != 0)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  goto <bb 105>;

  <bb 94>:

  <bb 95>:
  # __i$D33184$_M_p_341 = PHI <__i$D33184$_M_p_511(94), __i$D33184$_M_p_265(99)>
  # __i$D33184$_M_offset_336 = PHI <__i$D33184$_M_offset_315(94), __i$D33184$_M_offset_264(99)>
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_336
  # DEBUG __first$_M_p => __i$D33184$_M_p_341
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  _322 = __i$D33184$_M_offset_336 == 0;
  _320 = __first_306 == __i$D33184$_M_p_341;
  _318 = _320 & _322;
  if (_318 != 0)
    goto <bb 149>;
  else
    goto <bb 96>;

  <bb 96>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _313 = 1 << __i$D33184$_M_offset_336;
  # DEBUG this => NULL
  # DEBUG __x => __i$D33184$_M_p_341
  # DEBUG __y => _313
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _311 = *__i$D33184$_M_p_341;
  _308 = ~_313;
  _307 = _311 & _308;
  *__i$D33184$_M_p_341 = _307;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_336 + 1
  if (__i$D33184$_M_offset_336 == 63)
    goto <bb 97>;
  else
    goto <bb 98>;

  <bb 97>:
  # DEBUG __first$_M_offset => 0
  __i$D33184$_M_p_268 = __i$D33184$_M_p_341 + 8;
  # DEBUG __first$_M_p => __i$D33184$_M_p_268
  goto <bb 99>;

  <bb 98>:
  __i$D33184$_M_offset_267 = __i$D33184$_M_offset_336 + 1;

  <bb 99>:
  # __i$D33184$_M_p_265 = PHI <__i$D33184$_M_p_268(97), __i$D33184$_M_p_341(98)>
  # __i$D33184$_M_offset_264 = PHI <0(97), __i$D33184$_M_offset_267(98)>
  goto <bb 95>;

  <bb 100>:
  pretmp_522 = (long unsigned int) _370;

  <bb 101>:
  # __first_171 = PHI <__first_306(100), __first_310(102)>
  # DEBUG __first => __first_171
  *__first_171 = pretmp_522;
  __first_310 = __first_171 + 8;
  # DEBUG __first => __first_310
  # DEBUG __first => __first_310
  if (__last$_M_p_98 == __first_310)
    goto <bb 92>;
  else
    goto <bb 102>;

  <bb 102>:
  goto <bb 101>;

  <bb 103>:
  __i$D33184$_M_offset_349 = __i$D33184$_M_offset_340 + 1;

  <bb 104>:
  # __i$D33184$_M_p_99 = PHI <__i$D33184$_M_p_338(103), __i$D33184$_M_p_350(106)>
  # __i$D33184$_M_offset_127 = PHI <__i$D33184$_M_offset_349(103), 0(106)>

  <bb 105>:
  # __i$D33184$_M_p_338 = PHI <__i$D33184$_M_p_99(104), __i$D33184$_M_p_511(93)>
  # __i$D33184$_M_offset_340 = PHI <__i$D33184$_M_offset_127(104), __i$D33184$_M_offset_315(93)>
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_340
  # DEBUG __first$_M_p => __i$D33184$_M_p_338
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  _568 = __i$D33184$_M_offset_340 == 0;
  _567 = __first_306 == __i$D33184$_M_p_338;
  _558 = _567 & _568;
  if (_558 != 0)
    goto <bb 149>;
  else
    goto <bb 158>;

  <bb 106>:
  # DEBUG __first$_M_offset => 0
  __i$D33184$_M_p_350 = __i$D33184$_M_p_338 + 8;
  # DEBUG __first$_M_p => __i$D33184$_M_p_350
  goto <bb 104>;

  <bb 107>:
  __first$_M_offset_330 = __first$_M_offset_321 + 1;

  <bb 108>:
  # __last$_M_p_332 = PHI <__last$_M_p_319(107), __last$_M_p_331(111)>
  # __first$_M_offset_371 = PHI <__first$_M_offset_330(107), 0(111)>

  <bb 109>:
  # __last$_M_p_319 = PHI <__last$_M_p_332(108), __last$_M_p_98(150)>
  # __first$_M_offset_321 = PHI <__first$_M_offset_371(108), 0(150)>
  # DEBUG __first$_M_offset => __first$_M_offset_321
  # DEBUG __first$_M_p => __last$_M_p_319
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  if (__last$_M_p_98 == __last$_M_p_319)
    goto <bb 110>;
  else
    goto <bb 160>;

  <bb 110>:
  # DEBUG __first$_M_offset => __first$_M_offset_321
  # DEBUG __first$_M_p => __last$_M_p_319
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  if (_97 == __first$_M_offset_321)
    goto <bb 159>;
  else
    goto <bb 160>;

  <bb 111>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_331 = __last$_M_p_319 + 8;
  # DEBUG __first$_M_p => __last$_M_p_331
  goto <bb 108>;

  <bb 112>:
  __i$D33184$_M_offset_368 = __i$D33184$_M_offset_359 + 1;

  <bb 113>:
  # __i$D33184$_M_p_129 = PHI <__i$D33184$_M_p_357(112), __i$D33184$_M_p_369(115)>
  # __i$D33184$_M_offset_130 = PHI <__i$D33184$_M_offset_368(112), 0(115)>

  <bb 114>:
  # __i$D33184$_M_p_357 = PHI <__last$_M_p_98(84), __i$D33184$_M_p_129(113)>
  # __i$D33184$_M_offset_359 = PHI <__i$D33184$_M_offset_315(84), __i$D33184$_M_offset_130(113)>
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_359
  # DEBUG __first$_M_p => __i$D33184$_M_p_357
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_359
  # DEBUG __first$_M_p => __i$D33184$_M_p_357
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  _15 = _97 == __i$D33184$_M_offset_359;
  _560 = __last$_M_p_98 == __i$D33184$_M_p_357;
  _559 = _15 & _560;
  if (_559 != 0)
    goto <bb 116>;
  else
    goto <bb 161>;

  <bb 115>:
  # DEBUG __first$_M_offset => 0
  __i$D33184$_M_p_369 = __i$D33184$_M_p_357 + 8;
  # DEBUG __first$_M_p => __i$D33184$_M_p_369
  goto <bb 113>;

  <bb 116>:
  # DEBUG this => &__i
  # DEBUG __i => __n.241_16
  # DEBUG __tmp$_M_p => __i$D33184$_M_p_511
  # DEBUG __tmp$_M_offset => __i$D33184$_M_offset_315
  # DEBUG this => &__tmp
  # DEBUG __i => __n.241_16
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => __n.241_16
  # DEBUG __n => __n_88
  # DEBUG __tmp$_M_p => __last$_M_p_92
  # DEBUG __n => __n_93
  if (__n_93 < 0)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  __n_82 = __n_93 + 64;
  # DEBUG __n => __n_82
  __last$_M_p_83 = __last$_M_p_92 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __last$_M_p_83

  <bb 118>:
  # __n_84 = PHI <__n_93(116), __n_82(117)>
  # __last$_M_p_86 = PHI <__last$_M_p_92(116), __last$_M_p_83(117)>
  # DEBUG __tmp$_M_p => __last$_M_p_86
  # DEBUG __n => __n_84
  __result$8_85 = (const unsigned int) __n_84;
  # DEBUG __tmp$_M_offset => __result$8_85
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  # DEBUG this => this_4(D)
  __it$D33184$_M_p_111 = MEM[(struct vector *)this_4(D) + 16B];
  __it$D33184$_M_offset_112 = MEM[(struct vector *)this_4(D) + 24B];
  # DEBUG D#1876 => __position
  # DEBUG D#1876 => __position
  # DEBUG D#1877 => D.97655
  # DEBUG D#1877 => D.97655
  # DEBUG D#1878 => D.97654
  # DEBUG D#1878 => D.97654
  # DEBUG __it$D33184$_M_p => __it$D33184$_M_p_111
  # DEBUG __it$D33184$_M_offset => __it$D33184$_M_offset_112
  # DEBUG __it$D33184$_M_p => D#3658
  # DEBUG __it$D33184$_M_offset => D#3657
  # DEBUG __it$D33184$_M_p => __last$_M_p_86
  # DEBUG __it$D33184$_M_offset => __result$8_85
  # DEBUG __it$D33184$_M_p => __it$D33184$_M_p_111
  # DEBUG __it$D33184$_M_offset => __it$D33184$_M_offset_112
  # DEBUG __it$D33184$_M_p => D#3658
  # DEBUG __it$D33184$_M_offset => D#3657
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => D#3658
  # DEBUG __first$8 => D#3657
  # DEBUG __result$_M_p => __last$_M_p_86
  # DEBUG __result$8 => __result$8_85
  # DEBUG D#37 => &__last.D.33184
  # DEBUG D#37 => &__last.D.33184
  # DEBUG D#38 => &__first.D.33184
  # DEBUG D#38 => &__first.D.33184
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _391 = (long int) __it$D33184$_M_p_111;
  _393 = _391 - __last.195_235;
  _394 = _393 * 8;
  _395 = (long int) __it$D33184$_M_offset_112;
  _396 = _394 + _395;
  __n_398 = _396 - __n_276;
  # DEBUG __n => NULL
  # DEBUG __result$8 => __result$8_85
  # DEBUG __result$_M_p => __last$_M_p_86
  # DEBUG __first$8 => D#3657
  # DEBUG __first$_M_p => D#3658
  # DEBUG __n => __n_398
  if (__n_398 <= 0)
    goto <bb 132>;
  else
    goto <bb 119>;

  <bb 119>:

  <bb 120>:
  # __n_470 = PHI <__n_398(119), __n_417(131)>
  # __first$8_471 = PHI <__first$8_480(119), __first$8_419(131)>
  # __result$8_473 = PHI <__result$8_85(119), __result$8_421(131)>
  # __first_530 = PHI <__first_525(119), __first_418(131)>
  # __last$_M_p_531 = PHI <__last$_M_p_86(119), __last$_M_p_420(131)>
  # DEBUG __result$8 => __result$8_473
  # DEBUG __result$_M_p => __last$_M_p_531
  # DEBUG __first$8 => __first$8_471
  # DEBUG __first$_M_p => __first_530
  # DEBUG __n => __n_470
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _401 = 1 << __first$8_471;
  # DEBUG this => NULL
  # DEBUG __x => __first_530
  # DEBUG __y => _401
  # DEBUG D#41 => &__result
  # DEBUG D#41 => &__result
  # DEBUG this => D#41
  # DEBUG this => D#41
  _403 = 1 << __result$8_473;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_531
  # DEBUG __y => _403
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  _405 = *__first_530;
  _406 = _401 & _405;
  # DEBUG this => NULL
  # DEBUG __x => _406 != 0
  if (_406 != 0)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  _408 = *__last$_M_p_531;
  _409 = _403 | _408;
  goto <bb 123>;

  <bb 122>:
  _410 = *__last$_M_p_531;
  _411 = ~_403;
  _412 = _410 & _411;

  <bb 123>:
  # cstore_539 = PHI <_409(121), _412(122)>
  *__last$_M_p_531 = cstore_539;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$8 => __first$8_471 + 1
  if (__first$8_471 == 63)
    goto <bb 125>;
  else
    goto <bb 124>;

  <bb 124>:
  __first$8_413 = __first$8_471 + 1;
  goto <bb 126>;

  <bb 125>:
  # DEBUG __first$8 => 0
  __first_414 = __first_530 + 8;
  # DEBUG __first$_M_p => __first_414

  <bb 126>:
  # __first_418 = PHI <__first_530(124), __first_414(125)>
  # __first$8_419 = PHI <__first$8_413(124), 0(125)>
  # DEBUG __first$8 => __first$8_419
  # DEBUG __first$_M_p => __first_418
  # DEBUG this => &__result
  # DEBUG D#42 => &__result.D.33184
  # DEBUG this => D#42
  # DEBUG __result$8 => __result$8_473 + 1
  if (__result$8_473 == 63)
    goto <bb 128>;
  else
    goto <bb 127>;

  <bb 127>:
  __result$8_415 = __result$8_473 + 1;
  goto <bb 129>;

  <bb 128>:
  # DEBUG __result$8 => 0
  __last$_M_p_416 = __last$_M_p_531 + 8;
  # DEBUG __result$_M_p => __last$_M_p_416

  <bb 129>:
  # __last$_M_p_420 = PHI <__last$_M_p_531(127), __last$_M_p_416(128)>
  # __result$8_421 = PHI <__result$8_415(127), 0(128)>
  # DEBUG __result$8 => __result$8_421
  # DEBUG __result$_M_p => __last$_M_p_420
  __n_417 = __n_470 + -1;
  # DEBUG __n => __n_417
  # DEBUG __result$8 => __result$8_421
  # DEBUG __result$_M_p => __last$_M_p_420
  # DEBUG __first$8 => __first$8_419
  # DEBUG __first$_M_p => __first_418
  # DEBUG __n => __n_417
  if (__n_417 <= 0)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # __last$_M_p_486 = PHI <__last$_M_p_420(129)>
  # __result$8_485 = PHI <__result$8_421(129)>
  goto <bb 132>;

  <bb 131>:
  goto <bb 120>;

  <bb 132>:
  # __result$8_529 = PHI <__result$8_485(130), __result$8_85(118)>
  # __last$_M_p_532 = PHI <__last$_M_p_486(130), __last$_M_p_86(118)>
  MEM[(struct _Bit_iterator *)this_4(D) + 16B] = __last$_M_p_532;
  MEM[(struct _Bit_iterator *)this_4(D) + 24B] = __result$8_529;
  # DEBUG D#3651 => &this_4(D)->D.48430
  # DEBUG this => D#3651
  if (SR.3314_100 != 0B)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  # DEBUG D#1015 => &D#3651->_M_impl
  _373 = MEM[(long unsigned int * *)this_4(D) + 32B];
  # DEBUG D#375 => D#1015
  # DEBUG this => D#375
  _375 = (long int) _373;
  _376 = (long int) SR.3314_100;
  _377 = _375 - _376;
  # DEBUG D#1018 => _377 /[ex] 8
  # DEBUG D#1017 => (const size_t) D#1018
  # DEBUG __n => D#1017
  _378 = (long unsigned int) _377;
  _379 = -_378;
  _380 = _373 + _379;
  # DEBUG D#1016 => &D#3651->_M_impl
  # DEBUG D#1013 => D#1016
  # DEBUG D#1014 => D#1017
  # DEBUG __p => _380
  # DEBUG __a => D#1013
  # DEBUG __n => D#1014
  # DEBUG D#1012 => D#1014
  # DEBUG D#1011 => D#1013
  # DEBUG D#1009 => D#1011
  # DEBUG D#1010 => D#1012
  # DEBUG __p => _380
  # DEBUG this => D#1009
  # DEBUG D.161851 => D#1010
  operator delete (_380);

  <bb 134>:
  # DEBUG __n => NULL
  _20 = _81 + prephitmp_147;
  this_4(D)->D.48430._M_impl._M_end_of_storage = _20;
  MEM[(struct _Bit_iterator *)this_4(D)] = _81;
  MEM[(struct _Bit_iterator *)this_4(D) + 8B] = 0;
  # DEBUG D#1880 => {CLOBBER}
  # DEBUG __start$_M_p => D#1880
  # DEBUG D#1881 => {CLOBBER}
  # DEBUG __start$_M_offset => D#1881
  # DEBUG D#3652 => {CLOBBER}
  # DEBUG __i$D33184$_M_p => D#3652
  # DEBUG D#3653 => {CLOBBER}
  # DEBUG __i$D33184$_M_offset => D#3653
  # DEBUG D#1882 => {CLOBBER}
  # DEBUG __i => D#1882
  # DEBUG D#1883 => {CLOBBER}
  # DEBUG __i$8 => D#1883

  <bb 135>:
  return;

  <bb 136>:
  D.161628 ={v} {CLOBBER};
  # DEBUG this => &D.161627
  # DEBUG __x => __last$_M_p_67
  # DEBUG __y => 0
  # DEBUG D#40 => &D.161627.D.33184
  # DEBUG this => D#40
  # DEBUG __x => __last$_M_p_67
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __last$_M_p => __last$_M_p_67
  # DEBUG __last$_M_offset => _66
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => __last$_M_p_67
  # DEBUG __first$_M_offset => 0
  if (__x_548(D) != 0)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  goto <bb 48>;

  <bb 138>:

  <bb 139>:
  # __last$_M_p_508 = PHI <__last$_M_p_67(138), __last$_M_p_553(144)>
  # __first$_M_offset_505 = PHI <0(138), __first$_M_offset_552(144)>
  # DEBUG __first$_M_offset => __first$_M_offset_505
  # DEBUG __first$_M_p => __last$_M_p_508
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  if (__last$_M_p_67 == __last$_M_p_508)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  # DEBUG __first$_M_offset => __first$_M_offset_505
  # DEBUG __first$_M_p => __last$_M_p_508
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  if (_66 == __first$_M_offset_505)
    goto <bb 147>;
  else
    goto <bb 141>;

  <bb 141>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _260 = 1 << __first$_M_offset_505;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_508
  # DEBUG __y => _260
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _534 = *__last$_M_p_508;
  _549 = ~_260;
  _304 = _534 & _549;
  *__last$_M_p_508 = _304;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __first$_M_offset_505 + 1
  if (__first$_M_offset_505 == 63)
    goto <bb 143>;
  else
    goto <bb 142>;

  <bb 142>:
  __first$_M_offset_173 = __first$_M_offset_505 + 1;
  goto <bb 144>;

  <bb 143>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_554 = __last$_M_p_508 + 8;
  # DEBUG __first$_M_p => __last$_M_p_554

  <bb 144>:
  # __last$_M_p_553 = PHI <__last$_M_p_508(142), __last$_M_p_554(143)>
  # __first$_M_offset_552 = PHI <__first$_M_offset_173(142), 0(143)>
  goto <bb 139>;

  <bb 145>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _203 = 1 << __first$8_200;
  # DEBUG this => NULL
  # DEBUG __x => __first_198
  # DEBUG __y => _203
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _204 = *__first_198;
  _205 = _203 | _204;
  *__first_198 = _205;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __first$8_200 + 1
  if (__first$8_200 == 63)
    goto <bb 45>;
  else
    goto <bb 42>;

  <bb 146>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _184 = 1 << __first$_M_offset_181;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_179
  # DEBUG __y => _184
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _185 = *__last$_M_p_179;
  _186 = _184 | _185;
  *__last$_M_p_179 = _186;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __first$_M_offset_181 + 1
  if (__first$_M_offset_181 == 63)
    goto <bb 50>;
  else
    goto <bb 46>;

  <bb 147>:
  D.161627 ={v} {CLOBBER};
  goto <bb 55>;

  <bb 148>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _222 = 1 << __first$8_219;
  # DEBUG this => NULL
  # DEBUG __x => __first_217
  # DEBUG __y => _222
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _223 = *__first_217;
  _224 = _222 | _223;
  *__first_217 = _224;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __first$8_219 + 1
  if (__first$8_219 == 63)
    goto <bb 54>;
  else
    goto <bb 51>;

  <bb 149>:
  D.161797 ={v} {CLOBBER};
  # DEBUG this => &D.161796
  # DEBUG __x => __last$_M_p_98
  # DEBUG __y => 0
  # DEBUG D#40 => &D.161796.D.33184
  # DEBUG this => D#40
  # DEBUG __x => __last$_M_p_98
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __last$_M_p => __last$_M_p_98
  # DEBUG __last$_M_offset => _97
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => __last$_M_p_98
  # DEBUG __first$_M_offset => 0
  if (__x_548(D) != 0)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  goto <bb 109>;

  <bb 151>:

  <bb 152>:
  # __last$_M_p_435 = PHI <__last$_M_p_98(151), __last$_M_p_383(157)>
  # __first$_M_offset_434 = PHI <0(151), __first$_M_offset_374(157)>
  # DEBUG __first$_M_offset => __first$_M_offset_434
  # DEBUG __first$_M_p => __last$_M_p_435
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  if (__last$_M_p_98 == __last$_M_p_435)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 153>:
  # DEBUG __first$_M_offset => __first$_M_offset_434
  # DEBUG __first$_M_p => __last$_M_p_435
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  # DEBUG this => &__first.D.33184
  # DEBUG __i => &__last.D.33184
  if (_97 == __first$_M_offset_434)
    goto <bb 159>;
  else
    goto <bb 154>;

  <bb 154>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _428 = 1 << __first$_M_offset_434;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_435
  # DEBUG __y => _428
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _426 = *__last$_M_p_435;
  _424 = ~_428;
  _423 = _426 & _424;
  *__last$_M_p_435 = _423;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __first$_M_offset_434 + 1
  if (__first$_M_offset_434 == 63)
    goto <bb 156>;
  else
    goto <bb 155>;

  <bb 155>:
  __first$_M_offset_399 = __first$_M_offset_434 + 1;
  goto <bb 157>;

  <bb 156>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_384 = __last$_M_p_435 + 8;
  # DEBUG __first$_M_p => __last$_M_p_384

  <bb 157>:
  # __last$_M_p_383 = PHI <__last$_M_p_435(155), __last$_M_p_384(156)>
  # __first$_M_offset_374 = PHI <__first$_M_offset_399(155), 0(156)>
  goto <bb 152>;

  <bb 158>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _343 = 1 << __i$D33184$_M_offset_340;
  # DEBUG this => NULL
  # DEBUG __x => __i$D33184$_M_p_338
  # DEBUG __y => _343
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _344 = *__i$D33184$_M_p_338;
  _345 = _343 | _344;
  *__i$D33184$_M_p_338 = _345;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_340 + 1
  if (__i$D33184$_M_offset_340 == 63)
    goto <bb 106>;
  else
    goto <bb 103>;

  <bb 159>:
  D.161796 ={v} {CLOBBER};
  goto <bb 116>;

  <bb 160>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _324 = 1 << __first$_M_offset_321;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_319
  # DEBUG __y => _324
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _325 = *__last$_M_p_319;
  _326 = _324 | _325;
  *__last$_M_p_319 = _326;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __first$_M_offset_321 + 1
  if (__first$_M_offset_321 == 63)
    goto <bb 111>;
  else
    goto <bb 107>;

  <bb 161>:
  # DEBUG D#41 => &__first
  # DEBUG D#41 => &__first
  # DEBUG this => D#41
  # DEBUG this => D#41
  _362 = 1 << __i$D33184$_M_offset_359;
  # DEBUG this => NULL
  # DEBUG __x => __i$D33184$_M_p_357
  # DEBUG __y => _362
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _363 = *__i$D33184$_M_p_357;
  _364 = _362 | _363;
  *__i$D33184$_M_p_357 = _364;
  # DEBUG this => &__first
  # DEBUG D#42 => &__first.D.33184
  # DEBUG this => D#42
  # DEBUG __first$_M_offset => __i$D33184$_M_offset_359 + 1
  if (__i$D33184$_M_offset_359 == 63)
    goto <bb 115>;
  else
    goto <bb 112>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Stats*; _Alloc = std::allocator<Stats*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Stats**, std::vector<Stats*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Stats**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Stats*] (_ZNSt6vectorIP5StatsSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=4070, decl_uid=63014, cgraph_uid=2318, symbol_order=2319)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Stats*; _Alloc = std::allocator<Stats*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Stats**, std::vector<Stats*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Stats**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Stats*] (struct vector * const this, struct iterator __position, size_type __n, struct Stats * const & __x)
{
  const long unsigned int D.162051;
  const size_type __len;
  size_type D.162050;
  size_type __n;
  struct Stats * * D.162041;
  const ptrdiff_t _Num;
  struct Stats * * D.162032;
  struct Stats * * const __position;
  struct Stats * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct Stats * * __first;
  long unsigned int __n;
  struct Stats * * __first;
  const ptrdiff_t _Num;
  struct Stats * * __first;
  struct Stats * * __new_finish;
  const size_type __elems_after;
  struct Stats * __x_copy;
  struct Stats * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Stats * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct Stats * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct Stats * * _41;
  struct Stats * * _43;
  long int _47;
  struct Stats * * _48;
  long int __first.359_49;
  struct Stats * * _53;
  struct Stats * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct Stats * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct Stats * * _108;
  struct Stats * * _112;
  struct Stats * * iftmp.356_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct Stats * * prephitmp_146;
  struct Stats * * pretmp_147;
  struct Stats * * prephitmp_148;
  struct Stats * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct Stats * * pretmp_166;
  struct Stats * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct Stats * * pretmp_173;
  struct Stats * * prephitmp_174;

  <bb 2>:
  # DEBUG D#3684 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3684
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.63091._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.63091._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#329 => &this_4(D)->D.63091._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#329
  # DEBUG __lhs => &D.85281
  # DEBUG __rhs => &__position
  # DEBUG this => &D.85281
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#2378 => &this_4(D)->D.63091
  # DEBUG this => D#2378
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2370
  # DEBUG D#2369 => D#2370
  # DEBUG D#2368 => D#2369
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.140447 => D#2368
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.359_49 = (long int) _41;
  _47 = _8 - __first.359_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.63091._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.63091._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#3684
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3684
  # DEBUG __it => D#3684
  # DEBUG __first => D#3684
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3684
  # DEBUG __it => D#3684
  # DEBUG __first => D#3684
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#3684
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.359_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#1572 => &__x_copy
  # DEBUG __first => D#3684
  # DEBUG __last => _48
  # DEBUG D#1571 => D#1572
  # DEBUG __value => D#1571
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#3684
  # DEBUG __it => D#3684
  # DEBUG D#1099 => D#1571
  # DEBUG __first => D#3684
  # DEBUG __last => _48
  # DEBUG __value => D#1099
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3684
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#2379 => &this_4(D)->D.63091
  # DEBUG this => D#2379
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#2241 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2240 => D#2241
  # DEBUG __x => D#2240
  # DEBUG D.140532 => D#2242
  # DEBUG D#2239 => D#2240
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2238 => D#2239
  # DEBUG __x => D#2238
  # DEBUG __assignable => 1
  # DEBUG D#2237 => D#2238
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2236 => D#2237
  # DEBUG __x => D#2236
  # DEBUG D#2235 => D#2236
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#2234 => D#2235
  # DEBUG __value => D#2234
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#2233 => D#2234
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#2233
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.63091._M_impl._M_finish = __first_125;
  # DEBUG D#2380 => &this_4(D)->D.63091
  # DEBUG this => D#2380
  # DEBUG this => &__position
  # DEBUG __first => D#3684
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#2370
  # DEBUG D#2369 => D#2370
  # DEBUG D#2368 => D#2369
  # DEBUG __first => D#3684
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.140494 => D#2368
  # DEBUG __first => D#3684
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#3684
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#3684
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3684
  # DEBUG __it => D#3684
  # DEBUG __first => D#3684
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3684
  # DEBUG __it => D#3684
  # DEBUG __first => D#3684
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#3684
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.63091._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.63091._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#1572 => &__x_copy
  # DEBUG __first => D#3684
  # DEBUG __last => __first_7
  # DEBUG D#1571 => D#1572
  # DEBUG __value => D#1571
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3684
  # DEBUG __it => D#3684
  # DEBUG D#1099 => D#1571
  # DEBUG __first => D#3684
  # DEBUG __last => __first_7
  # DEBUG __value => D#1099
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3684
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2131 => this_4(D)
  # DEBUG this => D#2131
  # DEBUG D#2130 => D#2131
  # DEBUG D#2129 => &D#2130->D.63091
  # DEBUG this => D#2129
  # DEBUG __a => D#2128
  # DEBUG D#2127 => D#2128
  # DEBUG D#2116 => D#2127
  # DEBUG this => D#2116
  _17 = MEM[(struct Stats * * *)this_4(D)];
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG __a => &D.162051
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#220 => this_4(D)
  # DEBUG D#220 => this_4(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG D#2131 => this_4(D)
  # DEBUG this => D#2131
  # DEBUG D#2130 => D#2131
  # DEBUG D#2129 => &D#2130->D.63091
  # DEBUG this => D#2129
  # DEBUG __a => D#2128
  # DEBUG D#2127 => D#2128
  # DEBUG D#2116 => D#2127
  # DEBUG this => D#2116
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#611 => &this_4(D)->D.63091._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#611
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85314
  # DEBUG this => &__position
  # DEBUG this => &D.85314
  # DEBUG D#2391 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2391
  # DEBUG D#2390 => &this_4(D)->D.63091
  # DEBUG D#2124 => D#2390
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => NULL
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2118
  # DEBUG D.162039 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.63091._M_impl._M_start;
  pretmp_147 = this_4(D)->D.63091._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.356_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2374 => &this_4(D)->D.63091
  # DEBUG this => D#2374
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.356_113 + _19;
  _56 = MEM[(struct Stats * const &)__x_21(D)];
  # DEBUG D#2241 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2240 => D#2241
  # DEBUG __x => D#2240
  # DEBUG D.140649 => D#2242
  # DEBUG D#2239 => D#2240
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2238 => D#2239
  # DEBUG __x => D#2238
  # DEBUG __assignable => 1
  # DEBUG D#2237 => D#2238
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2236 => D#2237
  # DEBUG __x => D#2236
  # DEBUG D#2235 => D#2236
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#2234 => D#2235
  # DEBUG __value => D#2234
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#2233 => D#2234
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#2233
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2375 => &this_4(D)->D.63091
  # DEBUG this => D#2375
  # DEBUG this => &__position
  # DEBUG D#3683 => this_4(D)->D.63091._M_impl._M_start
  # DEBUG __first => D#3683
  # DEBUG __last => D#3684
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2372
  # DEBUG D#2371 => D#2372
  # DEBUG D#2368 => D#2371
  # DEBUG __first => D#3683
  # DEBUG __last => D#3684
  # DEBUG __result => NULL
  # DEBUG D.140611 => D#2368
  # DEBUG __first => D#3683
  # DEBUG __last => D#3684
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3683
  # DEBUG __last => D#3684
  # DEBUG __result => NULL
  # DEBUG __first => D#3683
  # DEBUG __last => D#3684
  # DEBUG __result => NULL
  # DEBUG __it => D#3684
  # DEBUG __it => D#3684
  # DEBUG __it => D#3683
  # DEBUG __it => D#3683
  # DEBUG __first => D#3683
  # DEBUG __last => D#3684
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3684
  # DEBUG __it => D#3684
  # DEBUG __it => D#3683
  # DEBUG __it => D#3683
  # DEBUG __first => D#3683
  # DEBUG __last => D#3684
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3683
  # DEBUG __last => D#3684
  # DEBUG __result => NULL
  # DEBUG D#3682 => (long int) D#3683
  # DEBUG D#3681 => _158 - D#3682
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.356_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#3680 => (long unsigned int) D#3681
  # DEBUG __new_finish => iftmp.356_113 + D#3680
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.356_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2376 => &this_4(D)->D.63091
  # DEBUG this => D#2376
  # DEBUG D#3679 => this_4(D)->D.63091._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#3684
  # DEBUG __last => D#3679
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#2372
  # DEBUG D#2371 => D#2372
  # DEBUG D#2368 => D#2371
  # DEBUG __first => D#3684
  # DEBUG __last => D#3679
  # DEBUG __result => __new_finish_26
  # DEBUG D.140572 => D#2368
  # DEBUG __first => D#3684
  # DEBUG __last => D#3679
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#3684
  # DEBUG __last => D#3679
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#3684
  # DEBUG __last => D#3679
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#3679
  # DEBUG __it => D#3679
  # DEBUG __it => D#3684
  # DEBUG __it => D#3684
  # DEBUG __first => D#3684
  # DEBUG __last => D#3679
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#3679
  # DEBUG __it => D#3679
  # DEBUG __it => D#3684
  # DEBUG __it => D#3684
  # DEBUG __first => D#3684
  # DEBUG __last => D#3679
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#3684
  # DEBUG __last => D#3679
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#2377 => &this_4(D)->D.63091
  # DEBUG this => D#2377
  # DEBUG D#2389 => this_4(D)->D.63091._M_impl._M_finish
  # DEBUG D#2388 => this_4(D)->D.63091._M_impl._M_start
  # DEBUG __first => D#2388
  # DEBUG __last => D#2389
  # DEBUG D.140565 => NULL
  # DEBUG D#452 => D#2388
  # DEBUG D#453 => D#2389
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#2387 => this_4(D)->D.63091._M_impl._M_end_of_storage
  # DEBUG D#2386 => (long int) D#2387
  # DEBUG D#2385 => (long int) D#3683
  # DEBUG D#2384 => D#2386 - D#2385
  # DEBUG D#2383 => D#2384 /[ex] 8
  # DEBUG D#2382 => (long unsigned int) D#2383
  # DEBUG D#2381 => &this_4(D)->D.63091
  # DEBUG this => D#2381
  # DEBUG __p => D#3683
  # DEBUG __n => D#2382
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#912 => &D#2381->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#2382
  # DEBUG __p => D#3683
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => D#3683
  # DEBUG this => D#906
  # DEBUG D.140561 => D#907
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.63091._M_impl._M_start = iftmp.356_113;
  this_4(D)->D.63091._M_impl._M_finish = _70;
  this_4(D)->D.63091._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#611 => &this_4(D)->D.63091._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#611
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85314
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.85314
  _143 = _144 - _116;
  # DEBUG D#2391 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2391
  # DEBUG D#2390 => &this_4(D)->D.63091
  # DEBUG D#2124 => D#2390
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#611 => &this_4(D)->D.63091._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#611
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85314
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.85314
  _150 = _151 - _116;
  # DEBUG D#2391 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2391
  # DEBUG D#2390 => &this_4(D)->D.63091
  # DEBUG D#2124 => D#2390
  # DEBUG __n => NULL
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_assign(std::size_t, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi, funcdef_no=4157, decl_uid=45840, cgraph_uid=2405, symbol_order=2406)

Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_assign(std::size_t, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, size_t __n, const value_type & __val)
{
  int * D.162294;
  int * __first;
  size_type __n;
  int * __tmp;
  int * __tmp;
  int * __tmp;
  struct vector __tmp;
  int * __first;
  int * __first;
  int * __first;
  long unsigned int __n;
  long int _3;
  long int _5;
  long int _9;
  int * const _14;
  const int _15;
  const int _16;
  long int _18;
  size_type _19;
  long int _21;
  long int _22;
  long int _23;
  size_type _24;
  int * pretmp_25;
  int * prephitmp_26;
  int * _31;
  long unsigned int _42;
  long unsigned int _46;
  int * _51;
  const int _52;
  long unsigned int _55;
  int * _56;
  int * _76;
  const int pretmp_80;
  const int prephitmp_81;
  long unsigned int _83;
  long unsigned int _98;

  <bb 2>:
  __first_13 = MEM[(int * *)this_2(D)];
  # DEBUG D#198 => this_2(D)
  _14 = MEM[(int * *)this_2(D) + 16B];
  # DEBUG D#198 => this_2(D)
  # DEBUG this => D#198
  # DEBUG this => D#198
  _9 = (long int) _14;
  _5 = (long int) __first_13;
  _3 = _9 - _5;
  _18 = _3 /[ex] 4;
  _19 = (size_type) _18;
  if (__n_4(D) > _19)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 3>:
  # DEBUG this => this_2(D)
  # DEBUG __n => __n_4(D)
  # DEBUG __val => __val_6(D)
  # DEBUG D#1273 => &this_2(D)->D.45977
  # DEBUG this => D#1273
  # DEBUG D#3719 => &MEM[(struct _Vector_base *)this_2(D)]._M_impl
  # DEBUG this => &__tmp
  # DEBUG __n => __n_4(D)
  # DEBUG __value => __val_6(D)
  # DEBUG __a => D#3719
  # DEBUG D#1272 => &__tmp.D.45977
  # DEBUG this => D#1272
  # DEBUG __n => __n_4(D)
  # DEBUG __a => D#3719
  # DEBUG D#1271 => &D#1272->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => D#3719
  # DEBUG this => D#1271
  # DEBUG __a => D#3719
  # DEBUG this => D#1271
  # DEBUG D.119037 => D#3719
  # DEBUG this => D#1272
  # DEBUG __n => __n_4(D)
  # DEBUG D#1269 => D#1272
  # DEBUG __n => __n_4(D)
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (__n_4(D) != 0)
    goto <bb 4>;
  else
    goto <bb 30>;

  <bb 4>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => __n_4(D)
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => __n_4(D)
  # DEBUG this => D#1263
  # DEBUG D.162292 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (__n_4(D) > 4611686018427387903)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::__throw_bad_alloc ();

  <bb 6>:
  _55 = __n_4(D) * 4;
  _56 = operator new (_55);
  _51 = _56 + _55;
  # DEBUG D#1252 => &__tmp
  # DEBUG D#1252 => &__tmp
  _52 = MEM[(const int &)__val_6(D)];
  # DEBUG D#1253 => __val_6(D)
  # DEBUG __n => __n_4(D)
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.162267 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG __value => D#1144
  # DEBUG __tmp => _52
  # DEBUG __niter => __n_4(D)
  # DEBUG __niter => __n_4(D)
  # DEBUG __first => _56
  # DEBUG D#1252 => &__tmp
  # DEBUG D#1253 => __val_6(D)
  # DEBUG __n => __n_4(D)
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.162267 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __n => __n_4(D)
  # DEBUG __value => D#1144
  # DEBUG __tmp => _52
  # DEBUG __niter => __n_4(D)
  # DEBUG __first => _56

  <bb 7>:
  # __n_71 = PHI <__n_4(D)(6), __n_53(8)>
  # __first_72 = PHI <_56(6), __first_54(8)>
  # DEBUG __niter => __n_71
  # DEBUG __first => __first_72
  *__first_72 = _52;
  __n_53 = __n_71 + 18446744073709551615;
  # DEBUG __niter => __n_53
  __first_54 = __first_72 + 4;
  # DEBUG __first => __first_54
  # DEBUG __niter => __n_53
  # DEBUG __first => __first_54
  if (__n_53 == 0)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 31>:
  _42 = __n_4(D) * 4;
  __first_17 = _56 + _42;
  pretmp_25 = MEM[(int * &)this_2(D)];

  <bb 10>:
  # __first_45 = PHI <__first_17(31), 0B(30)>
  # _31 = PHI <_51(31), _76(30)>
  # __first_8 = PHI <_56(31), 0B(30)>
  # prephitmp_26 = PHI <pretmp_25(31), __first_13(30)>
  # DEBUG D#1275 => &this_2(D)->D.45977._M_impl
  # DEBUG this => &__tmp.D.45977._M_impl
  # DEBUG __x => D#1275
  # DEBUG D#1143 => &D#1275->_M_start
  # DEBUG D#1142 => &MEM[(struct _Vector_impl *)&__tmp]._M_start
  # DEBUG __a => D#1142
  # DEBUG __b => D#1143
  # DEBUG __tmp => __first_8
  # DEBUG D#3722 => MEM[(int * &)this_2(D)]
  MEM[(int * &)this_2(D)] = __first_8;
  # DEBUG D#1141 => &D#1275->_M_finish
  # DEBUG D#1140 => &MEM[(struct _Vector_impl *)&__tmp]._M_finish
  # DEBUG __a => D#1140
  # DEBUG __b => D#1141
  # DEBUG __tmp => __first_45
  MEM[(int * &)this_2(D) + 8] = __first_45;
  # DEBUG D#1139 => &D#1275->_M_end_of_storage
  # DEBUG D#1138 => &MEM[(struct _Vector_impl *)&__tmp]._M_end_of_storage
  # DEBUG __a => D#1138
  # DEBUG __b => D#1139
  # DEBUG __tmp => _31
  MEM[(int * &)this_2(D) + 16] = _31;
  # DEBUG this => &__tmp
  # DEBUG D#476 => &__tmp.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => __tmp.D.45977._M_impl._M_finish
  # DEBUG D#478 => __tmp.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &__tmp.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  # DEBUG D#473 => (long int) D#3722
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => D#3722
  # DEBUG __n => D#470
  if (prephitmp_26 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => D#3722
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => D#3722
  # DEBUG this => D#462
  # DEBUG D.162224 => D#463
  operator delete (prephitmp_26);

  <bb 12>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  __tmp ={v} {CLOBBER};
  goto <bb 29>;

  <bb 13>:
  # DEBUG D#68 => this_2(D)
  __first_12 = MEM[(int * *)this_2(D) + 8B];
  # DEBUG D#68 => this_2(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  _21 = (long int) __first_12;
  _22 = _21 - _5;
  _23 = _22 /[ex] 4;
  _24 = (size_type) _23;
  if (__n_4(D) > _24)
    goto <bb 14>;
  else
    goto <bb 23>;

  <bb 14>:
  # DEBUG this => this_2(D)
  # DEBUG D#272 => &this_2(D)->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => this_2(D)
  # DEBUG D#273 => &this_2(D)->D.45977._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#273
  _15 = MEM[(const int &)__val_6(D)];
  # DEBUG D#964 => __val_6(D)
  # DEBUG __first => __first_13
  # DEBUG __last => __first_12
  # DEBUG D#963 => D#964
  # DEBUG __value => D#963
  # DEBUG __it => __first_12
  # DEBUG __it => __first_12
  # DEBUG this => NULL
  # DEBUG __it => __first_13
  # DEBUG __it => __first_13
  # DEBUG this => NULL
  # DEBUG D#954 => D#963
  # DEBUG __first => __first_13
  # DEBUG __last => __first_12
  # DEBUG __value => D#954
  # DEBUG __tmp => _15
  # DEBUG __first => __first_13
  if (__first_12 == __first_13)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __first_41 = PHI <__first_13(15), __first_30(17)>
  # DEBUG __first => __first_41
  *__first_41 = _15;
  __first_30 = __first_41 + 4;
  # DEBUG __first => __first_30
  # DEBUG __first => __first_30
  if (__first_12 == __first_30)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 16>;

  <bb 18>:

  <bb 33>:
  pretmp_80 = MEM[(const int &)__val_6(D)];

  <bb 19>:
  # prephitmp_81 = PHI <pretmp_80(33), _15(14)>

  <bb 35>:
  # DEBUG D#1274 => &this_2(D)->D.45977
  # DEBUG this => D#1274
  # DEBUG D#68 => this_2(D)
  # DEBUG D#68 => this_2(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  __n_10 = __n_4(D) - _24;
  # DEBUG D#3721 => MEM[(const int &)__val_6(D)]
  # DEBUG D#1247 => __val_6(D)
  # DEBUG __first => __first_12
  # DEBUG __n => __n_10
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.123018 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => __first_12
  # DEBUG __n => __n_10
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => __first_12
  # DEBUG __n => __n_10
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => __first_12
  # DEBUG __n => __n_10
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => __first_12
  # DEBUG __it => __first_12
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_10
  # DEBUG __value => D#1144
  # DEBUG __tmp => D#3721
  # DEBUG __niter => __n_10
  # DEBUG __niter => __n_10
  # DEBUG __first => __first_12

  <bb 20>:
  # __n_97 = PHI <__n_27(21), __n_10(35)>
  # __first_96 = PHI <__first_28(21), __first_12(35)>
  # DEBUG __niter => __n_97
  # DEBUG __first => __first_96
  *__first_96 = prephitmp_81;
  __n_27 = __n_97 + 18446744073709551615;
  # DEBUG __niter => __n_27
  __first_28 = __first_96 + 4;
  # DEBUG __first => __first_28
  # DEBUG __niter => __n_27
  # DEBUG __first => __first_28
  if (__n_27 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 20>;

  <bb 22>:

  <bb 32>:
  _83 = __n_10 * 4;
  __first_59 = __first_12 + _83;
  this_2(D)->D.45977._M_impl._M_finish = __first_59;
  goto <bb 29>;

  <bb 23>:
  _16 = MEM[(const int &)__val_6(D)];
  # DEBUG D#1146 => __val_6(D)
  # DEBUG __first => __first_13
  # DEBUG __n => __n_4(D)
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => __first_13
  # DEBUG __it => __first_13
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG __value => D#1144
  # DEBUG __tmp => _16
  # DEBUG __niter => __n_4(D)
  # DEBUG __niter => __n_4(D)
  # DEBUG __first => __first_13
  if (__n_4(D) == 0)
    goto <bb 28>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __n_35 = PHI <__n_4(D)(24), __n_32(27)>
  # __first_61 = PHI <__first_13(24), __first_33(27)>
  # DEBUG __niter => __n_35
  # DEBUG __first => __first_61
  *__first_61 = _16;
  __n_32 = __n_35 + 18446744073709551615;
  # DEBUG __niter => __n_32
  __first_33 = __first_61 + 4;
  # DEBUG __first => __first_33
  # DEBUG __niter => __n_32
  # DEBUG __first => __first_33
  if (__n_32 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:

  <bb 34>:
  _98 = __n_4(D) * 4;
  __first_43 = __first_13 + _98;
  goto <bb 28>;

  <bb 27>:
  goto <bb 25>;

  <bb 28>:
  # __first_62 = PHI <__first_43(34), __first_13(23)>

  <bb 36>:
  # DEBUG D#396 => this_2(D)
  # DEBUG __pos => __first_62
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => __first_62
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => __first_62
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)this_2(D) + 8B] = __first_62;

  <bb 29>:

  <bb 37>:
  return;

  <bb 30>:
  _46 = __n_4(D) * 4;
  _76 = (int *) _46;
  # DEBUG D#1252 => &__tmp
  # DEBUG D#1252 => &__tmp
  # DEBUG D#3720 => MEM[(const int &)__val_6(D)]
  # DEBUG D#1253 => __val_6(D)
  # DEBUG __n => __n_4(D)
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.162267 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_4(D)
  # DEBUG __value => D#1144
  # DEBUG __tmp => D#3720
  # DEBUG __niter => __n_4(D)
  # DEBUG __niter => __n_4(D)
  # DEBUG __first => 0B
  goto <bb 10>;

}



;; Function virtual void TrafficManager::_ClearStats() (_ZN14TrafficManager11_ClearStatsEv, funcdef_no=2479, decl_uid=64993, cgraph_uid=727, symbol_order=728)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
virtual void TrafficManager::_ClearStats() (struct TrafficManager * const this)
{
  int __val;
  int __val;
  int __val;
  int __val;
  int __val;
  int __val;
  int j;
  int i;
  int c;
  int _10;
  struct vector * _11;
  long unsigned int _12;
  int _13;
  struct vector * _14;
  long unsigned int _15;
  int _16;
  long unsigned int _17;
  struct Stats * & _18;
  struct Stats * _19;
  struct Stats * _22;
  struct Stats * _24;
  struct vector & _26;
  struct Stats * _27;
  int _29;
  long unsigned int _30;
  int _31;
  long unsigned int _32;
  int _33;
  struct vector & _34;
  int _35;
  bool _36;
  int _38;
  int _39;
  int _40;
  long unsigned int _41;
  long unsigned int _42;
  struct vector & _43;
  struct Stats * _44;
  int _46;
  int _47;
  int _48;
  long unsigned int _49;
  long unsigned int _50;
  struct Stats * _51;
  int _53;
  int _54;
  int _55;
  long unsigned int _56;
  struct vector & _57;
  struct Stats * _58;
  long unsigned int _62;
  struct Stats * _63;
  int _66;
  struct vector * _68;
  struct vector * _69;
  struct vector * _70;
  struct vector * _71;
  struct Stats * * _72;
  struct Stats * * _73;
  struct Stats * * _74;
  struct Stats * * _75;
  struct Stats * * _76;
  struct Stats * * _77;
  struct Stats * * _78;
  struct Stats * * _79;
  struct vector * _80;
  struct vector * _81;
  struct vector * _82;
  struct Stats * & _83;
  struct Stats * & _84;
  long unsigned int _86;
  struct Stats * & _87;
  long unsigned int _88;
  struct Stats * & _89;
  struct vector & _90;
  long unsigned int _91;
  struct Stats * & _92;
  struct vector & _93;
  long unsigned int _94;
  struct Stats * & _95;
  struct vector & _96;
  struct Stats * & _97;
  int _116;
  int _117;
  int _126;
  int _142;
  int prephitmp_149;
  int prephitmp_157;

  <bb 2>:
  _10 = this_9(D)->_classes;
  _11 = &this_9(D)->_slowest_flit;
  # DEBUG this => _11
  # DEBUG __first => _10
  # DEBUG __last => -1
  # DEBUG this => _11
  # DEBUG __n => _10
  __val = -1;
  # DEBUG __val => __val
  _15 = (long unsigned int) _10;
  std::vector<int>::_M_fill_assign (_11, _15, &__val);
  _13 = this_9(D)->_classes;
  _14 = &this_9(D)->_slowest_packet;
  # DEBUG this => _14
  # DEBUG __first => _13
  # DEBUG __last => -1
  # DEBUG this => _14
  # DEBUG __n => _13
  __val = -1;
  # DEBUG __val => __val
  _62 = (long unsigned int) _13;
  std::vector<int>::_M_fill_assign (_14, _62, &__val);
  # DEBUG c => 0
  # DEBUG c => 0
  _117 = this_9(D)->_classes;
  if (_117 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _66 = this_9(D)->_time;
  this_9(D)->_reset_time = _66;
  return;

  <bb 4>:

  <bb 5>:
  # c_119 = PHI <0(4), c_65(7)>
  # DEBUG c => c_119
  _17 = (long unsigned int) c_119;
  # DEBUG D#1277 => &this_9(D)->_plat_stats
  _72 = MEM[(struct Stats * * *)this_9(D) + 856B];
  # DEBUG D#80 => D#1277
  # DEBUG __n => _17
  # DEBUG this => D#80
  _86 = _17 * 8;
  _87 = _72 + _86;
  _19 = *_87;
  Stats::Clear (_19);
  # DEBUG D#1278 => &this_9(D)->_nlat_stats
  _73 = MEM[(struct Stats * * *)this_9(D) + 952B];
  # DEBUG D#80 => D#1278
  # DEBUG __n => _17
  # DEBUG this => D#80
  _84 = _73 + _86;
  _22 = *_84;
  Stats::Clear (_22);
  # DEBUG D#1279 => &this_9(D)->_flat_stats
  _74 = MEM[(struct Stats * * *)this_9(D) + 1048B];
  # DEBUG D#80 => D#1279
  # DEBUG __n => _17
  # DEBUG this => D#80
  _83 = _74 + _86;
  _24 = *_83;
  Stats::Clear (_24);
  # DEBUG D#1280 => &this_9(D)->_frag_stats
  _75 = MEM[(struct Stats * * *)this_9(D) + 1144B];
  # DEBUG D#80 => D#1280
  # DEBUG __n => _17
  # DEBUG this => D#80
  _18 = _75 + _86;
  _27 = *_18;
  Stats::Clear (_27);
  _29 = this_9(D)->_nodes;
  # DEBUG D#1281 => &this_9(D)->_sent_packets
  _68 = MEM[(struct vector * *)this_9(D) + 1360B];
  # DEBUG D#67 => D#1281
  # DEBUG __n => _17
  # DEBUG this => D#67
  _30 = _17 * 24;
  _26 = _68 + _30;
  # DEBUG this => NULL
  # DEBUG __first => _29
  # DEBUG __last => 0
  # DEBUG this => NULL
  # DEBUG __n => _29
  __val = 0;
  # DEBUG __val => __val
  _32 = (long unsigned int) _29;
  std::vector<int>::_M_fill_assign.constprop (_26, _32, &__val);
  _31 = this_9(D)->_nodes;
  # DEBUG D#1282 => &this_9(D)->_accepted_packets
  _69 = MEM[(struct vector * *)this_9(D) + 1456B];
  # DEBUG D#67 => D#1282
  # DEBUG __n => _17
  # DEBUG this => D#67
  _34 = _69 + _30;
  # DEBUG this => NULL
  # DEBUG __first => _31
  # DEBUG __last => 0
  # DEBUG this => NULL
  # DEBUG __n => _31
  __val = 0;
  # DEBUG __val => __val
  _42 = (long unsigned int) _31;
  std::vector<int>::_M_fill_assign.constprop (_34, _42, &__val);
  _33 = this_9(D)->_nodes;
  # DEBUG D#1283 => &this_9(D)->_sent_flits
  _70 = MEM[(struct vector * *)this_9(D) + 1552B];
  # DEBUG D#67 => D#1283
  # DEBUG __n => _17
  # DEBUG this => D#67
  _43 = _70 + _30;
  # DEBUG this => NULL
  # DEBUG __first => _33
  # DEBUG __last => 0
  # DEBUG this => NULL
  # DEBUG __n => _33
  __val = 0;
  # DEBUG __val => __val
  _50 = (long unsigned int) _33;
  std::vector<int>::_M_fill_assign.constprop (_43, _50, &__val);
  _35 = this_9(D)->_nodes;
  # DEBUG D#1284 => &this_9(D)->_accepted_flits
  _71 = MEM[(struct vector * *)this_9(D) + 1648B];
  # DEBUG D#67 => D#1284
  # DEBUG __n => _17
  # DEBUG this => D#67
  _57 = _71 + _30;
  # DEBUG this => NULL
  # DEBUG __first => _35
  # DEBUG __last => 0
  # DEBUG this => NULL
  # DEBUG __n => _35
  __val = 0;
  # DEBUG __val => __val
  _12 = (long unsigned int) _35;
  std::vector<int>::_M_fill_assign.constprop (_57, _12, &__val);
  _36 = this_9(D)->_pair_stats;
  if (_36 != 0)
    goto <bb 8>;
  else
    goto <bb 6>;

  <bb 6>:
  # DEBUG D#1288 => &this_9(D)->_hop_stats
  _79 = MEM[(struct Stats * * *)this_9(D) + 1312B];
  # DEBUG D#80 => D#1288
  # DEBUG __n => _17
  # DEBUG this => D#80
  _97 = _79 + _86;
  _63 = *_97;
  Stats::Clear (_63);
  c_65 = c_119 + 1;
  # DEBUG c => c_65
  # DEBUG c => c_65
  _16 = this_9(D)->_classes;
  if (_16 <= c_65)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 5>;

  <bb 8>:
  # DEBUG i => 0
  _116 = this_9(D)->_nodes;
  if (_116 <= 0)
    goto <bb 6>;
  else
    goto <bb 9>;

  <bb 9>:

  <bb 10>:
  # i_120 = PHI <0(9), i_61(16)>
  # prephitmp_149 = PHI <_116(9), prephitmp_157(16)>
  # DEBUG i => i_120
  # DEBUG j => 0
  if (prephitmp_149 <= 0)
    goto <bb 15>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # j_121 = PHI <0(11), j_60(14)>
  # _126 = PHI <prephitmp_149(11), _38(14)>
  # DEBUG j => j_121
  _39 = i_120 * _126;
  _40 = _39 + j_121;
  _41 = (long unsigned int) _40;
  # DEBUG D#1285 => &this_9(D)->_pair_plat
  _80 = MEM[(struct vector * *)this_9(D) + 1240B];
  # DEBUG D#124 => D#1285
  # DEBUG __n => _17
  # DEBUG this => D#124
  _96 = _80 + _30;
  _76 = MEM[(struct Stats * * *)_96];
  # DEBUG __n => _41
  # DEBUG this => D#80
  _94 = _41 * 8;
  _95 = _76 + _94;
  _44 = *_95;
  Stats::Clear (_44);
  _46 = this_9(D)->_nodes;
  _47 = _46 * i_120;
  _48 = _47 + j_121;
  _49 = (long unsigned int) _48;
  # DEBUG D#1286 => &this_9(D)->_pair_nlat
  _81 = MEM[(struct vector * *)this_9(D) + 1264B];
  # DEBUG D#124 => D#1286
  # DEBUG __n => _17
  # DEBUG this => D#124
  _93 = _81 + _30;
  _77 = MEM[(struct Stats * * *)_93];
  # DEBUG __n => _49
  # DEBUG this => D#80
  _91 = _49 * 8;
  _92 = _77 + _91;
  _51 = *_92;
  Stats::Clear (_51);
  _53 = this_9(D)->_nodes;
  _54 = _53 * i_120;
  _55 = _54 + j_121;
  _56 = (long unsigned int) _55;
  # DEBUG D#1287 => &this_9(D)->_pair_flat
  _82 = MEM[(struct vector * *)this_9(D) + 1288B];
  # DEBUG D#124 => D#1287
  # DEBUG __n => _17
  # DEBUG this => D#124
  _90 = _82 + _30;
  _78 = MEM[(struct Stats * * *)_90];
  # DEBUG __n => _56
  # DEBUG this => D#80
  _88 = _56 * 8;
  _89 = _78 + _88;
  _58 = *_89;
  Stats::Clear (_58);
  j_60 = j_121 + 1;
  # DEBUG j => j_60
  # DEBUG j => j_60
  _38 = this_9(D)->_nodes;
  if (_38 <= j_60)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # _142 = PHI <_38(12)>
  goto <bb 15>;

  <bb 14>:
  goto <bb 12>;

  <bb 15>:
  # prephitmp_157 = PHI <_142(13), prephitmp_149(10)>
  i_61 = i_120 + 1;
  # DEBUG i => i_61
  # DEBUG i => i_61
  if (i_61 >= prephitmp_157)
    goto <bb 6>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 10>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EET0_T_SA_S9_, funcdef_no=4388, decl_uid=84226, cgraph_uid=2636, symbol_order=2637)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false] (struct basic_string * __first, struct basic_string * __last, struct basic_string * __result)
{
  size_type __dnew;
  char * const pretmp_3;
  char * _8;
  size_type pretmp_9;
  void * _12;
  char * const _17;
  const size_type _18;
  char * _19;
  char * const _20;
  const char * _21;
  size_type prephitmp_23;
  char * _37;
  long unsigned int __dnew.120_38;
  const char_type _40;
  char * _43;
  bool _56;
  bool _57;
  char * const _61;
  char * const prephitmp_63;
  bool _64;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 15>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_35 = PHI <__first_5(D)(3), __first_10(14)>
  # __result_32 = PHI <__result_4(D)(3), __result_11(14)>
  # DEBUG __cur => __result_32
  # DEBUG __first => __first_35
  # DEBUG __r => __result_32
  # DEBUG __p => NULL
  # DEBUG __value => __first_35
  # DEBUG D#20 => 32
  # DEBUG __p => NULL
  # DEBUG D.121888 => D#20
  if (__result_32 != 0B)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG __str => __first_35
  # DEBUG this => __first_35
  # DEBUG D#1185 => &MEM[(const struct basic_string *)__first_35]._M_dataplus
  # DEBUG this => NULL
  _8 = &__result_32->D.11539._M_local_buf;
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => _8
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)__result_32]._M_p = _8;
  _17 = MEM[(char * *)__first_35];
  # DEBUG D#1 => __first_35
  # DEBUG this => D#1
  _18 = MEM[(long unsigned int *)__first_35 + 8B];
  # DEBUG D#2 => __first_35
  # DEBUG this => D#2
  _19 = _17 + _18;
  # DEBUG D#1 => __first_35
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG __beg => _17
  # DEBUG __end => _19
  # DEBUG this => NULL
  # DEBUG __beg => _17
  # DEBUG __end => _19
  # DEBUG this => __result_32
  # DEBUG __beg => _17
  # DEBUG __end => _19
  # DEBUG __ptr => _17
  _57 = _19 != 0B;
  _56 = _17 == 0B;
  _64 = _56 & _57;
  if (_64 != 0)
    goto <bb 25>;
  else
    goto <bb 27>;

  <bb 6>:
  _37 = std::__cxx11::basic_string<char>::_M_create (__result_32, &__dnew, 0);

  <bb 7>:
  # DEBUG D#9 => __result_32
  # DEBUG __p => _37
  # DEBUG this => D#9
  MEM[(char * *)__result_32] = _37;
  __dnew.120_38 = __dnew;
  # DEBUG D#10 => __result_32
  # DEBUG __capacity => __dnew.120_38
  # DEBUG this => D#10
  MEM[(size_type *)__result_32 + 16B] = __dnew.120_38;
  # DEBUG D#1 => __result_32
  # DEBUG this => D#1
  # DEBUG __p => _37
  # DEBUG __k1 => _17
  # DEBUG __k2 => _19
  # DEBUG __d => _37
  # DEBUG __s => _17
  # DEBUG __n => _18
  goto <bb 10>;

  <bb 8>:
  # DEBUG D#1 => __result_32
  # DEBUG this => D#1
  # DEBUG __p => _8
  # DEBUG __k1 => _17
  # DEBUG __k2 => _19
  # DEBUG __d => _8
  # DEBUG __s => _17
  # DEBUG __n => _18
  if (_18 == 1)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _40 = MEM[(const char_type &)_17];
  # DEBUG D#19 => _17
  # DEBUG __c1 => _8
  # DEBUG __c2 => D#19
  MEM[(char_type &)_8] = _40;
  goto <bb 11>;

  <bb 10>:
  # _61 = PHI <_8(8), _37(7)>
  # DEBUG D#1 => __result_32
  # DEBUG this => D#1
  # DEBUG __p => _61
  # DEBUG __k1 => _17
  # DEBUG __k2 => _19
  # DEBUG __d => _61
  # DEBUG __s => _17
  # DEBUG __n => _18
  # DEBUG __s1 => _61
  # DEBUG __s2 => _17
  # DEBUG __n => _18
  __builtin_memcpy (_61, _17, _18);
  pretmp_9 = __dnew;
  pretmp_3 = MEM[(char * *)__result_32];

  <bb 11>:
  # prephitmp_23 = PHI <_18(9), pretmp_9(10)>
  # prephitmp_63 = PHI <_8(9), pretmp_3(10)>
  # DEBUG D#3789 => __dnew
  # DEBUG this => __result_32
  # DEBUG __n => D#3789
  # DEBUG D#8 => __result_32
  # DEBUG __length => D#3789
  # DEBUG this => D#8
  MEM[(size_type *)__result_32 + 8B] = prephitmp_23;
  # DEBUG D#1 => __result_32
  # DEBUG this => D#1
  _43 = prephitmp_63 + prephitmp_23;
  # DEBUG __c1 => _43
  # DEBUG __c2 => D#19
  MEM[(char_type &)_43] = 0;
  __dnew ={v} {CLOBBER};

  <bb 12>:
  __first_10 = __first_35 + 32;
  # DEBUG __first => __first_10
  __result_11 = __result_32 + 32;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # __result_41 = PHI <__result_11(12)>
  goto <bb 15>;

  <bb 14>:
  goto <bb 4>;

  <bb 15>:
  # __result_70 = PHI <__result_41(13), __result_4(D)(2)>
  return __result_70;

  # __result_42 = PHI <__result_32(6)>
<L7>:

  # __result_2 = PHI <__result_42(16), __result_74(26)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_2
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_2
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_2)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __cxa_rethrow ();

  <bb 19>:

  <bb 20>:
  # __result_66 = PHI <__result_4(D)(19), __result_22(23)>
  # DEBUG __first => __result_66
  # DEBUG __r => __result_66
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _20 = MEM[(char * *)__result_66];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _21 = &MEM[(const struct basic_string *)__result_66].D.11539._M_local_buf;
  if (_20 != _21)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _20
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _20
  # DEBUG this => D#620
  # DEBUG D.121940 => D#621
  operator delete (_20);

  <bb 22>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__result_66] ={v} {CLOBBER};
  __result_22 = __result_66 + 32;
  # DEBUG __first => __result_22
  # DEBUG __first => __result_22
  if (__result_22 == __result_2)
    goto <bb 18>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 20>;

<L6>:
  __cxa_end_catch ();
  resx 2

  <bb 25>:
  # __result_74 = PHI <__result_32(5)>
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L8>:
  goto <bb 17> (<L4>);

  <bb 27>:
  # DEBUG __first => _17
  # DEBUG __last => _19
  # DEBUG D#1181 => &__first
  # DEBUG D.121728 => D#1181
  # DEBUG __first => _17
  # DEBUG __last => _19
  __dnew = _18;
  if (_18 > 15)
    goto <bb 6>;
  else
    goto <bb 8>;

}



;; Function std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >] (_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_, funcdef_no=2701, decl_uid=55954, cgraph_uid=949, symbol_order=950)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >] (struct vector * const this, const struct vector & __x)
{
  struct basic_string * D.162555;
  const struct basic_string * __first$_M_current;
  struct basic_string * D.162542;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct basic_string * __result;
  const struct basic_string * __last$_M_current;
  const struct basic_string * __first$_M_current;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct basic_string * __result;
  struct basic_string * D.162492;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  _Distance __n;
  struct basic_string * __first;
  struct basic_string * __result;
  _Distance __n;
  const struct basic_string * __first;
  struct basic_string * __first$_M_current;
  struct basic_string * __first;
  struct basic_string * __tmp;
  struct __normal_iterator D.93899;
  struct __normal_iterator D.93898;
  size_type _7;
  struct basic_string * const pretmp_8;
  struct basic_string * prephitmp_10;
  long int _12;
  struct basic_string * _13;
  long unsigned int _18;
  struct basic_string * _19;
  long int _21;
  long int _23;
  long int _24;
  long unsigned int _28;
  struct basic_string * _29;
  struct basic_string * const _35;
  struct basic_string * const _36;
  struct basic_string * const _39;
  long int _40;
  long int _42;
  long int _43;
  size_type _45;
  char * const _46;
  const char * _47;
  struct basic_string * prephitmp_49;
  long int _50;
  long int _51;
  size_type _53;
  long unsigned int pretmp_54;
  char * const _55;
  const char * _56;
  struct basic_string * const prephitmp_60;
  sizetype _67;
  struct basic_string * pretmp_68;
  struct basic_string * pretmp_69;
  long int pretmp_73;
  struct basic_string * pretmp_77;
  long int pretmp_82;
  struct basic_string * pretmp_90;
  sizetype _95;
  void * _102;
  struct basic_string * pretmp_103;
  struct basic_string * pretmp_105;
  char * _106;
  char * const _107;
  const size_type _108;
  char * _109;
  void * _112;
  char * const _114;
  const char * _115;
  long unsigned int _117;
  struct basic_string * _118;
  struct basic_string * prephitmp_127;
  struct basic_string * const pretmp_130;
  struct basic_string * pretmp_131;
  struct basic_string * pretmp_132;
  long int pretmp_134;
  struct basic_string * const prephitmp_149;
  long int prephitmp_150;
  long unsigned int pretmp_158;
  struct basic_string * const pretmp_160;
  long unsigned int pretmp_161;

  <bb 2>:
  if (__x_3(D) != this_4(D))
    goto <bb 3>;
  else
    goto <bb 56>;

  <bb 3>:
  __first_34 = MEM[(struct basic_string * *)__x_3(D)];
  # DEBUG D#65 => __x_3(D)
  _35 = MEM[(struct basic_string * *)__x_3(D) + 8B];
  # DEBUG D#65 => __x_3(D)
  # DEBUG this => D#65
  # DEBUG this => D#65
  _40 = (long int) _35;
  _42 = (long int) __first_34;
  _43 = _40 - _42;
  __n_44 = _43 /[ex] 32;
  _45 = (size_type) __n_44;
  # DEBUG __xlen => NULL
  __result_38 = MEM[(struct basic_string * *)this_4(D)];
  # DEBUG D#202 => this_4(D)
  _39 = MEM[(struct basic_string * *)this_4(D) + 16B];
  # DEBUG D#202 => this_4(D)
  # DEBUG this => D#202
  # DEBUG this => D#202
  _24 = (long int) _39;
  _23 = (long int) __result_38;
  _21 = _24 - _23;
  _12 = _21 /[ex] 32;
  _7 = (size_type) _12;
  if (_7 < _45)
    goto <bb 4>;
  else
    goto <bb 35>;

  <bb 4>:
  # DEBUG D#293 => __x_3(D)
  # DEBUG this => D#293
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#294 => __x_3(D)
  # DEBUG this => D#294
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#1468 => this_4(D)
  # DEBUG __n => _45
  # DEBUG this => D#1468
  # DEBUG D#1467 => D#1468
  # DEBUG D#1466 => D#1468
  # DEBUG D#1465 => D#1468
  # DEBUG D#1464 => &D#1465->D.56332
  # DEBUG D#1461 => D#1464
  # DEBUG __n => _45
  # DEBUG this => D#1461
  # DEBUG D#1460 => D#1461
  if (_45 != 0)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  # DEBUG D#1459 => &D#1460->_M_impl
  # DEBUG D#1458 => D#1459
  # DEBUG __n => _45
  # DEBUG __a => D#1458
  # DEBUG D#1457 => D#1458
  # DEBUG D#1455 => D#1457
  # DEBUG D#1456 => 0B
  # DEBUG __n => _45
  # DEBUG this => D#1455
  # DEBUG D.162553 => D#1456
  # DEBUG D#1454 => D#1455
  # DEBUG D#1453 => D#1454
  # DEBUG this => D#1453
  if (_45 > 576460752303423487)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  std::__throw_bad_alloc ();

  <bb 7>:
  _117 = (long unsigned int) _43;
  _118 = operator new (_117);

  <bb 8>:
  # __tmp_119 = PHI <0B(4), _118(7)>
  # DEBUG __result => NULL
  # DEBUG D#1462 => &D#1466->D.56332
  # DEBUG this => D#1462
  # DEBUG __first$_M_current => __first_34
  # DEBUG __last$_M_current => _35
  # DEBUG __result => NULL
  # DEBUG D.162482 => D#1385
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => NULL
  # DEBUG __first$_M_current => __first_34
  # DEBUG __cur => NULL
  # DEBUG __first$_M_current => __first_34
  # DEBUG __cur => __tmp_119
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (__first_34 != _35)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  # DEBUG __tmp => NULL
  # DEBUG D#1469 => &this_4(D)->D.56332
  # DEBUG this => D#1469
  _13 = this_4(D)->D.56332._M_impl._M_finish;
  __first_14 = this_4(D)->D.56332._M_impl._M_start;
  # DEBUG __first => __first_14
  # DEBUG __last => _13
  # DEBUG __first => __first_14
  if (_13 == __first_14)
    goto <bb 32>;
  else
    goto <bb 26>;

  <bb 10>:

  <bb 11>:
  # __first_154 = PHI <__first_34(10), __first_110(13)>
  # __tmp_155 = PHI <__tmp_119(10), __tmp_111(13)>
  # DEBUG __first$_M_current => __first_154
  # DEBUG __cur => __tmp_155
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __tmp_155
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 32
  # DEBUG __p => NULL
  # DEBUG D.121888 => D#20
  if (__tmp_155 != 0B)
    goto <bb 14>;
  else
    goto <bb 12>;

  <bb 12>:
  # DEBUG this => &__first
  __first_110 = __first_154 + 32;
  # DEBUG __first$_M_current => __first_110
  __tmp_111 = __tmp_155 + 32;
  # DEBUG __cur => __tmp_111
  # DEBUG __first$_M_current => __first_110
  # DEBUG __cur => __tmp_111
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_35 != __first_110)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 13>:
  goto <bb 11>;

  <bb 14>:
  # DEBUG this => NULL
  # DEBUG __str => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _106 = &__tmp_155->D.11539._M_local_buf;
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => _106
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)__tmp_155]._M_p = _106;
  _107 = MEM[(char * *)__first_154];
  # DEBUG this => D#1
  _108 = MEM[(long unsigned int *)__first_154 + 8B];
  # DEBUG this => D#2
  _109 = _107 + _108;
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG __beg => _107
  # DEBUG __end => _109
  # DEBUG this => NULL
  # DEBUG __beg => _107
  # DEBUG __end => _109
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (__tmp_155, _107, _109);
  goto <bb 12>;

  # __tmp_58 = PHI <__tmp_155(14)>
<L13>:
  _112 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_112);
  # DEBUG __first => NULL
  # DEBUG __last => __tmp_58
  # DEBUG __first => NULL
  # DEBUG __last => __tmp_58

  <bb 16>:
  # __tmp_113 = PHI <__tmp_119(15), __tmp_116(19)>
  # DEBUG __first => __tmp_113
  if (__tmp_113 == __tmp_58)
    goto <bb 20>;
  else
    goto <bb 17>;

  <bb 17>:
  # DEBUG __r => __tmp_113
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _114 = MEM[(char * *)__tmp_113];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _115 = &MEM[(const struct basic_string *)__tmp_113].D.11539._M_local_buf;
  if (_114 != _115)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _114
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _114
  # DEBUG this => D#620
  # DEBUG D.162516 => D#621
  operator delete (_114);

  <bb 19>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__tmp_113] ={v} {CLOBBER};
  __tmp_116 = __tmp_113 + 32;
  # DEBUG __first => __tmp_116
  goto <bb 16>;

  <bb 20>:

  <bb 58>:
  __cxa_rethrow ();

<L15>:
  __cxa_end_catch ();
  resx 5

<L10>:
  _102 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_102);
  # DEBUG D#1463 => &D#1467->D.56332
  # DEBUG D#528 => D#1463
  # DEBUG D#529 => _45
  # DEBUG __p => NULL
  # DEBUG this => D#528
  # DEBUG __n => D#529
  # DEBUG D#527 => D#529
  # DEBUG D#526 => D#528
  if (__tmp_119 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#525 => &D#526->_M_impl
  # DEBUG D#523 => D#525
  # DEBUG D#524 => D#527
  # DEBUG __p => NULL
  # DEBUG __a => D#523
  # DEBUG __n => D#524
  # DEBUG D#522 => D#524
  # DEBUG D#521 => D#523
  # DEBUG D#519 => D#521
  # DEBUG D#520 => D#522
  # DEBUG __p => NULL
  # DEBUG this => D#519
  # DEBUG D.162480 => D#520
  operator delete (__tmp_119);

  <bb 24>:
  __cxa_rethrow ();

<L12>:
  __cxa_end_catch ();
  resx 2

  <bb 26>:

  <bb 27>:
  # __first_156 = PHI <__first_14(26), __first_48(30)>
  # DEBUG __first => __first_156
  # DEBUG __r => __first_156
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _46 = MEM[(char * *)__first_156];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _47 = &MEM[(const struct basic_string *)__first_156].D.11539._M_local_buf;
  if (_46 != _47)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _46
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _46
  # DEBUG this => D#620
  # DEBUG D.126009 => D#621
  operator delete (_46);

  <bb 29>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__first_156] ={v} {CLOBBER};
  __first_48 = __first_156 + 32;
  # DEBUG __first => __first_48
  # DEBUG __first => __first_48
  if (_13 == __first_48)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 27>;

  <bb 31>:

  <bb 57>:
  pretmp_105 = this_4(D)->D.56332._M_impl._M_start;

  <bb 32>:
  # prephitmp_127 = PHI <pretmp_105(57), __first_14(9)>
  # DEBUG D#1477 => this_4(D)->D.56332._M_impl._M_end_of_storage
  # DEBUG D#1476 => (long int) D#1477
  # DEBUG D#3795 => this_4(D)->D.56332._M_impl._M_start
  # DEBUG D#1475 => (long int) D#3795
  # DEBUG D#1474 => D#1476 - D#1475
  # DEBUG D#1473 => D#1474 /[ex] 32
  # DEBUG D#1472 => &this_4(D)->D.56332
  # DEBUG D#528 => D#1472
  # DEBUG D#529 => (long unsigned int) D#1473
  # DEBUG __p => D#3795
  # DEBUG this => D#528
  # DEBUG __n => D#529
  # DEBUG D#527 => D#529
  # DEBUG D#526 => D#528
  if (prephitmp_127 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#525 => &D#526->_M_impl
  # DEBUG D#523 => D#525
  # DEBUG D#524 => D#527
  # DEBUG __p => D#3795
  # DEBUG __a => D#523
  # DEBUG __n => D#524
  # DEBUG D#522 => D#524
  # DEBUG D#521 => D#523
  # DEBUG D#519 => D#521
  # DEBUG D#520 => D#522
  # DEBUG __p => D#3795
  # DEBUG this => D#519
  # DEBUG D.125990 => D#520
  operator delete (prephitmp_127);

  <bb 34>:

  <bb 62>:
  this_4(D)->D.56332._M_impl._M_start = __tmp_119;
  _18 = (long unsigned int) _43;
  _19 = __tmp_119 + _18;
  this_4(D)->D.56332._M_impl._M_end_of_storage = _19;
  goto <bb 55>;

  <bb 35>:
  # DEBUG D#65 => this_4(D)
  _36 = MEM[(struct basic_string * *)this_4(D) + 8B];
  # DEBUG D#65 => this_4(D)
  # DEBUG this => D#65
  # DEBUG this => D#65
  _50 = (long int) _36;
  _51 = _50 - _23;
  __n_52 = _51 /[ex] 32;
  _53 = (size_type) __n_52;
  if (_45 <= _53)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  # DEBUG __n => __n_52
  # DEBUG __result => __result_38
  # DEBUG __first => __first_34
  if (__n_52 <= 0)
    goto <bb 54>;
  else
    goto <bb 50>;

  <bb 37>:
  # DEBUG __n => __n_44
  # DEBUG __result => __result_38
  # DEBUG __first => __first_34
  if (__n_44 <= 0)
    goto <bb 38>;
  else
    goto <bb 40>;

  <bb 38>:
  # __result_11 = PHI <__result_59(60), __result_38(37)>
  # DEBUG __first$_M_current => __result_11
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (__result_11 != _36)
    goto <bb 44>;
  else
    goto <bb 39>;

  <bb 39>:
  pretmp_68 = this_4(D)->D.56332._M_impl._M_start;
  pretmp_158 = (long unsigned int) _43;
  pretmp_103 = pretmp_68 + pretmp_158;
  goto <bb 55>;

  <bb 40>:

  <bb 41>:
  # __n_157 = PHI <__n_44(40), __n_63(43)>
  # __result_152 = PHI <__result_38(40), __result_62(43)>
  # __first_153 = PHI <__first_34(40), __first_61(43)>
  # DEBUG __n => __n_157
  # DEBUG __result => __result_152
  # DEBUG __first => __first_153
  # DEBUG this => __result_152
  # DEBUG __str => __first_153
  # DEBUG this => __result_152
  # DEBUG __str => __first_153
  std::__cxx11::basic_string<char>::_M_assign (__result_152, __first_153);
  __first_61 = __first_153 + 32;
  # DEBUG __first => __first_61
  __result_62 = __result_152 + 32;
  # DEBUG __result => __result_62
  __n_63 = __n_157 + -1;
  # DEBUG __n => __n_63
  # DEBUG __n => __n_63
  # DEBUG __result => __result_62
  # DEBUG __first => __first_61
  if (__n_63 <= 0)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:

  <bb 60>:
  _67 = (sizetype) __n_44;
  _95 = _67 * 32;
  __result_59 = __result_38 + _95;
  goto <bb 38>;

  <bb 43>:
  goto <bb 41>;

  <bb 44>:

  <bb 45>:
  # __result_151 = PHI <__result_11(44), __result_57(48)>
  # DEBUG __first$_M_current => __result_151
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => NULL
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _55 = MEM[(char * *)__result_151];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _56 = &MEM[(const struct basic_string *)__result_151].D.11539._M_local_buf;
  if (_55 != _56)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _55
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _55
  # DEBUG this => D#620
  # DEBUG D.126046 => D#621
  operator delete (_55);

  <bb 47>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__result_151] ={v} {CLOBBER};
  # DEBUG this => &__first
  __result_57 = __result_151 + 32;
  # DEBUG __first$_M_current => __result_57
  # DEBUG __first$_M_current => __result_57
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_36 != __result_57)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  goto <bb 45>;

  <bb 49>:

  <bb 59>:
  pretmp_90 = this_4(D)->D.56332._M_impl._M_start;
  pretmp_161 = (long unsigned int) _43;
  pretmp_132 = pretmp_90 + pretmp_161;
  goto <bb 55>;

  <bb 50>:

  <bb 51>:
  # __n_170 = PHI <__n_52(50), __n_72(52)>
  # __result_169 = PHI <__result_38(50), __result_71(52)>
  # __first_167 = PHI <__first_34(50), __first_70(52)>
  # DEBUG __n => __n_170
  # DEBUG __result => __result_169
  # DEBUG __first => __first_167
  # DEBUG this => __result_169
  # DEBUG __str => __first_167
  # DEBUG this => __result_169
  # DEBUG __str => __first_167
  std::__cxx11::basic_string<char>::_M_assign (__result_169, __first_167);
  __first_70 = __first_167 + 32;
  # DEBUG __first => __first_70
  __result_71 = __result_169 + 32;
  # DEBUG __result => __result_71
  __n_72 = __n_170 + -1;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => __result_71
  # DEBUG __first => __first_70
  if (__n_72 <= 0)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 51>;

  <bb 53>:

  <bb 61>:
  pretmp_131 = this_4(D)->D.56332._M_impl._M_finish;
  pretmp_8 = __x_3(D)->D.56332._M_impl._M_finish;
  pretmp_130 = __x_3(D)->D.56332._M_impl._M_start;
  pretmp_160 = MEM[(struct basic_string * *)this_4(D)];
  pretmp_134 = (long int) pretmp_131;
  pretmp_73 = (long int) pretmp_160;
  pretmp_82 = pretmp_134 - pretmp_73;

  <bb 54>:
  # prephitmp_10 = PHI <pretmp_131(61), _36(36)>
  # prephitmp_149 = PHI <pretmp_8(61), _35(36)>
  # prephitmp_60 = PHI <pretmp_130(61), __first_34(36)>
  # prephitmp_150 = PHI <pretmp_82(61), _51(36)>
  # DEBUG D#1471 => &this_4(D)->D.56332
  # DEBUG this => D#1471
  # DEBUG D#3794 => this_4(D)->D.56332._M_impl._M_finish
  # DEBUG D#3793 => __x_3(D)->D.56332._M_impl._M_finish
  # DEBUG D#65 => this_4(D)
  # DEBUG D#65 => this_4(D)
  # DEBUG this => D#65
  # DEBUG this => D#65
  _28 = (long unsigned int) prephitmp_150;
  _29 = prephitmp_60 + _28;
  # DEBUG __first => _29
  # DEBUG __last => D#3793
  # DEBUG __result => D#3794
  # DEBUG D.126104 => D#1188
  # DEBUG __first => _29
  # DEBUG __last => D#3793
  # DEBUG __result => D#3794
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*> (_29, prephitmp_149, prephitmp_10);
  pretmp_69 = this_4(D)->D.56332._M_impl._M_start;
  pretmp_54 = (long unsigned int) _43;
  pretmp_77 = pretmp_69 + pretmp_54;

  <bb 55>:
  # prephitmp_49 = PHI <_19(62), pretmp_132(59), pretmp_77(54), pretmp_103(39)>

  <bb 63>:
  this_4(D)->D.56332._M_impl._M_finish = prephitmp_49;

  <bb 56>:

  <bb 64>:
  return this_4(D);

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>] (_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EEmRKS5_, funcdef_no=3833, decl_uid=56255, cgraph_uid=2081, symbol_order=2082)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.162728;
  const size_type __len;
  size_type D.162727;
  size_type __n;
  struct basic_string * D.162718;
  struct basic_string * D.162706;
  struct basic_string * __first;
  long unsigned int __n;
  struct basic_string * D.162661;
  struct basic_string * __first;
  long unsigned int __n;
  struct basic_string * const __position;
  struct basic_string * __first;
  struct basic_string * __first;
  struct basic_string * __first;
  struct basic_string * __first;
  difference_type __n;
  struct basic_string * __last;
  struct basic_string * __new_finish;
  const size_type __elems_before;
  struct basic_string * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct basic_string * _10;
  long int _11;
  struct basic_string * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  long unsigned int _18;
  struct basic_string * _20;
  difference_type _21;
  struct basic_string * const _24;
  long int _25;
  long int _26;
  long unsigned int _27;
  long int _30;
  struct basic_string * _31;
  long unsigned int _32;
  long int _34;
  struct basic_string * _35;
  char * _36;
  const size_type _37;
  struct basic_string * _38;
  struct basic_string * _45;
  void * _47;
  char * const _49;
  sizetype _50;
  sizetype _51;
  struct basic_string * _52;
  long unsigned int _59;
  sizetype _60;
  struct basic_string * _62;
  struct basic_string * _63;
  struct basic_string * _67;
  long int _69;
  long int __last.128_72;
  struct basic_string * _73;
  long unsigned int _74;
  struct basic_string * _75;
  char * const _87;
  struct basic_string * _93;
  char * const _94;
  const char * _95;
  char * const _97;
  char * const _98;
  const char * _99;
  char * const _102;
  const char * _103;
  struct basic_string * pretmp_129;
  long unsigned int prephitmp_134;
  char * _157;
  char * const _158;
  const size_type _159;
  char * _160;
  void * _163;
  char * const _165;
  const char * _166;
  char * _169;
  char * const _170;
  const size_type _171;
  char * _172;
  void * _175;
  char * const _177;
  const char * _178;
  struct basic_string * _180;
  long int _184;
  long int _185;
  long int _186;
  long unsigned int _188;
  bool _208;
  struct basic_string * prephitmp_213;
  long unsigned int pretmp_214;
  long unsigned int prephitmp_215;
  bool _243;
  long int _244;
  difference_type _249;
  long int _251;
  difference_type _252;
  long int _253;
  long int _263;
  long int _264;
  bool _266;

  <bb 2>:
  # DEBUG D#3801 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3801
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 75>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.56332._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.56332._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 32;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 44>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __str => __x_29(D)
  # DEBUG this => __x_29(D)
  # DEBUG D#1185 => &MEM[(const struct basic_string *)__x_29(D)]._M_dataplus
  # DEBUG this => &__x_copy
  # DEBUG D#1186 => &__x_copy._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &__x_copy.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&__x_copy]._M_p = &__x_copy.D.11539._M_local_buf;
  _49 = MEM[(char * *)__x_29(D)];
  # DEBUG D#1 => __x_29(D)
  # DEBUG this => D#1
  _37 = MEM[(long unsigned int *)__x_29(D) + 8B];
  # DEBUG D#2 => __x_29(D)
  # DEBUG this => D#2
  _36 = _49 + _37;
  # DEBUG D#1 => __x_29(D)
  # DEBUG this => D#1
  # DEBUG this => &__x_copy
  # DEBUG __beg => _49
  # DEBUG __end => _36
  # DEBUG this => &__x_copy
  # DEBUG __beg => _49
  # DEBUG __end => _36
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (&__x_copy, _49, _36);
  # DEBUG this => this_9(D)
  # DEBUG D#295 => &this_9(D)->D.56332._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#295
  __old_finish_77 = MEM[(struct basic_string * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.84102
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84102
  _34 = (long int) __old_finish_77;
  # DEBUG this => &__position
  _30 = (long int) __position_23;
  _26 = _34 - _30;
  _21 = _26 /[ex] 32;
  __elems_after_57 = (const size_type) _21;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_77
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#1682 => &this_9(D)->D.56332
  # DEBUG this => D#1682
  _59 = __n_7(D) * 32;
  _60 = -_59;
  __last_61 = __old_finish_77 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_77
  # DEBUG __result => __old_finish_77
  # DEBUG __alloc => D#1190
  # DEBUG D#1189 => D#1190
  # DEBUG D#1188 => D#1189
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_77
  # DEBUG __result => __old_finish_77
  # DEBUG D.129421 => D#1188
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_77
  # DEBUG __result => __old_finish_77
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*> (__last_61, __old_finish_77, __old_finish_77);

  <bb 6>:
  _62 = this_9(D)->D.56332._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.56332._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3801
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_77
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3801
  # DEBUG __it => D#3801
  # DEBUG __first => D#3801
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_77
  # DEBUG __it => __old_finish_77
  # DEBUG __it => __old_finish_77
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3801
  # DEBUG __it => D#3801
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __last.128_72 = (long int) __last_61;
  _69 = __last.128_72 - _30;
  __n_68 = _69 /[ex] 32;
  # DEBUG __n => __n_68
  # DEBUG __n => __n_68
  # DEBUG __result => __old_finish_77
  # DEBUG __last => __last_61
  if (__n_68 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3801
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3801
  if (__position_23 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_272 = PHI <__old_finish_77(8), __old_finish_80(12)>
  # __last_271 = PHI <__last_61(8), __last_58(12)>
  # __n_267 = PHI <__n_68(8), __n_81(12)>
  # DEBUG __n => __n_267
  # DEBUG __result => __old_finish_272
  # DEBUG __last => __last_271
  __last_58 = __last_271 + 18446744073709551584;
  # DEBUG __last => __last_58
  __old_finish_80 = __old_finish_272 + 18446744073709551584;
  # DEBUG __result => __old_finish_80
  # DEBUG this => __old_finish_80
  # DEBUG __str => __last_58
  # DEBUG this => __old_finish_80
  # DEBUG __str => __last_58
  std::__cxx11::basic_string<char>::_M_assign (__old_finish_80, __last_58);
  goto <bb 11>;

<L26>:
  goto <bb 77> (<L10>);

  <bb 11>:
  __n_81 = __n_267 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_80
  # DEBUG __last => __last_58
  if (__n_81 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  _87 = MEM[(char * *)&__x_copy];
  # DEBUG D#1 => &__x_copy
  # DEBUG this => D#1
  # DEBUG this => &__x_copy
  if (&__x_copy.D.11539._M_local_buf != _87)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 14>:

  <bb 15>:
  # __position_205 = PHI <__position_23(14), __position_83(18)>
  # DEBUG __first => __position_205
  # DEBUG this => __position_205
  # DEBUG __str => &__x_copy
  # DEBUG this => __position_205
  # DEBUG __str => &__x_copy
  std::__cxx11::basic_string<char>::_M_assign (__position_205, &__x_copy);
  goto <bb 17>;

<L27>:
  goto <bb 77> (<L10>);

  <bb 17>:
  __position_83 = __position_205 + 32;
  # DEBUG __first => __position_83
  # DEBUG __first => __position_83
  if (_67 == __position_83)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#1683 => &this_9(D)->D.56332
  # DEBUG this => D#1683
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_77
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.129475 => D#1452
  # DEBUG __first => __old_finish_77
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __old_finish_77
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => __old_finish_77
  # DEBUG __cur => __old_finish_77
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 26>;
  else
    goto <bb 20>;

  <bb 20>:

  <bb 21>:
  # __n_247 = PHI <__n_70(20), __n_161(24)>
  # __old_finish_246 = PHI <__old_finish_77(20), __old_finish_162(24)>
  # DEBUG __cur => __old_finish_246
  # DEBUG __n => __n_247
  # DEBUG __r => __old_finish_246
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#20 => 32
  # DEBUG __p => NULL
  # DEBUG D.121888 => D#20
  if (__old_finish_246 != 0B)
    goto <bb 25>;
  else
    goto <bb 22>;

  <bb 22>:
  __n_161 = __n_247 + 18446744073709551615;
  # DEBUG __n => __n_161
  __old_finish_162 = __old_finish_246 + 32;
  # DEBUG __cur => __old_finish_162
  # DEBUG __cur => __old_finish_162
  # DEBUG __n => __n_161
  if (__n_161 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # __old_finish_154 = PHI <__old_finish_162(22)>
  goto <bb 26>;

  <bb 24>:
  goto <bb 21>;

  <bb 25>:
  # DEBUG this => NULL
  # DEBUG __str => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG D#1185 => &__x_copy._M_dataplus
  # DEBUG this => NULL
  _157 = &__old_finish_246->D.11539._M_local_buf;
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => _157
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)__old_finish_246]._M_p = _157;
  _158 = MEM[(char * *)&__x_copy];
  # DEBUG D#1 => &__x_copy
  # DEBUG this => D#1
  _159 = MEM[(long unsigned int *)&__x_copy + 8B];
  # DEBUG D#2 => &__x_copy
  # DEBUG this => D#2
  _160 = _158 + _159;
  # DEBUG D#1 => &__x_copy
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG __beg => _158
  # DEBUG __end => _160
  # DEBUG this => NULL
  # DEBUG __beg => _158
  # DEBUG __end => _160
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (__old_finish_246, _158, _160);
  goto <bb 22>;

  <bb 26>:
  # __old_finish_260 = PHI <__old_finish_154(23), __old_finish_77(19)>
  this_9(D)->D.56332._M_impl._M_finish = __old_finish_260;
  # DEBUG D#1684 => &this_9(D)->D.56332
  # DEBUG this => D#1684
  # DEBUG this => &__position
  # DEBUG __first => D#3801
  # DEBUG __last => __old_finish_77
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1190
  # DEBUG D#1189 => D#1190
  # DEBUG D#1188 => D#1189
  # DEBUG __first => D#3801
  # DEBUG __last => __old_finish_77
  # DEBUG __result => NULL
  # DEBUG D.129488 => D#1188
  # DEBUG __first => D#3801
  # DEBUG __last => __old_finish_77
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*> (__position_23, __old_finish_77, __old_finish_260);
  goto <bb 36>;

<L28>:
  goto <bb 77> (<L10>);

  # __old_finish_121 = PHI <__old_finish_246(25)>
<L19>:
  _163 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_163);
  # DEBUG __first => __old_finish_77
  # DEBUG __last => __old_finish_121
  # DEBUG __first => __old_finish_77
  # DEBUG __last => __old_finish_121

  <bb 29>:
  # __old_finish_164 = PHI <__old_finish_77(28), __old_finish_167(32)>
  # DEBUG __first => __old_finish_164
  if (__old_finish_164 == __old_finish_121)
    goto <bb 33>;
  else
    goto <bb 30>;

  <bb 30>:
  # DEBUG __r => __old_finish_164
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _165 = MEM[(char * *)__old_finish_164];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _166 = &MEM[(const struct basic_string *)__old_finish_164].D.11539._M_local_buf;
  if (_165 != _166)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _165
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _165
  # DEBUG this => D#620
  # DEBUG D.162638 => D#621
  operator delete (_165);

  <bb 32>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__old_finish_164] ={v} {CLOBBER};
  __old_finish_167 = __old_finish_164 + 32;
  # DEBUG __first => __old_finish_167
  goto <bb 29>;

  <bb 33>:
  __cxa_rethrow ();

<L21>:
  __cxa_end_catch ();
  resx 13

<L29>:
  goto <bb 77> (<L10>);

  <bb 36>:
  _73 = this_9(D)->D.56332._M_impl._M_finish;
  _74 = (long unsigned int) _26;
  _75 = _73 + _74;
  this_9(D)->D.56332._M_impl._M_finish = _75;
  # DEBUG this => &__position
  # DEBUG __first => D#3801
  # DEBUG __last => __old_finish_77
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3801
  if (__position_23 == __old_finish_77)
    goto <bb 13>;
  else
    goto <bb 37>;

  <bb 37>:

  <bb 38>:
  # __position_268 = PHI <__position_23(37), __position_86(41)>
  # DEBUG __first => __position_268
  # DEBUG this => __position_268
  # DEBUG __str => &__x_copy
  # DEBUG this => __position_268
  # DEBUG __str => &__x_copy
  std::__cxx11::basic_string<char>::_M_assign (__position_268, &__x_copy);
  goto <bb 40>;

<L30>:
  goto <bb 77> (<L10>);

  <bb 40>:
  __position_86 = __position_268 + 32;
  # DEBUG __first => __position_86
  # DEBUG __first => __position_86
  if (__old_finish_77 == __position_86)
    goto <bb 13>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 38>;

  <bb 42>:
  # DEBUG D#629 => __x_copy.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &__x_copy
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &__x_copy
  # DEBUG this => D#1
  # DEBUG this => &__x_copy
  # DEBUG D#626 => &__x_copy._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _87
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _87
  # DEBUG this => D#620
  # DEBUG D.129523 => D#621
  operator delete (_87);

  <bb 43>:
  # DEBUG D#630 => &__x_copy._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  __x_copy ={v} {CLOBBER};
  goto <bb 75>;

  <bb 44>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1484 => this_9(D)
  # DEBUG this => D#1484
  # DEBUG D#1483 => D#1484
  # DEBUG D#1482 => &D#1483->D.56332
  # DEBUG this => D#1482
  # DEBUG __a => D#1481
  # DEBUG D#1480 => D#1481
  # DEBUG D#1453 => D#1480
  # DEBUG this => D#1453
  _24 = MEM[(struct basic_string * *)this_9(D)];
  # DEBUG D#65 => this_9(D)
  # DEBUG D#65 => this_9(D)
  # DEBUG this => D#65
  # DEBUG this => D#65
  _184 = (long int) _24;
  _185 = _13 - _184;
  _186 = _185 /[ex] 32;
  _187 = (const long unsigned int) _186;
  _188 = 576460752303423487 - _187;
  if (__n_7(D) > _188)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 46>:
  # DEBUG D#65 => this_9(D)
  # DEBUG D#65 => this_9(D)
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG D#65 => this_9(D)
  # DEBUG D#65 => this_9(D)
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG __a => &D.162728
  # DEBUG __b => &__n
  _18 = MAX_EXPR <__n_7(D), _187>;
  __len_192 = _18 + _187;
  # DEBUG __len => __len_192
  # DEBUG D#65 => this_9(D)
  # DEBUG D#65 => this_9(D)
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG D#1484 => this_9(D)
  # DEBUG this => D#1484
  # DEBUG D#1483 => D#1484
  # DEBUG D#1482 => &D#1483->D.56332
  # DEBUG this => D#1482
  # DEBUG __a => D#1481
  # DEBUG D#1480 => D#1481
  # DEBUG D#1453 => D#1480
  # DEBUG this => D#1453
  _243 = __len_192 > 576460752303423487;
  _266 = _187 > __len_192;
  _208 = _243 | _266;
  if (_208 != 0)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 47>:
  pretmp_214 = __len_192 * 32;

  <bb 48>:
  # __elems_before_207 = PHI <__elems_before_250(96), __elems_before_238(47)>
  # _263 = PHI <_251(96), _25(47)>
  # prephitmp_215 = PHI <18446744073709551584(96), pretmp_214(47)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#296 => &this_9(D)->D.56332._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#296
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84135
  # DEBUG this => &__position
  # DEBUG this => &D.84135
  # DEBUG __elems_before => __elems_before_207
  # DEBUG D#1694 => &this_9(D)->D.56332
  # DEBUG D#1461 => D#1694
  # DEBUG __n => NULL
  # DEBUG this => D#1461
  # DEBUG D#1460 => D#1461
  # DEBUG D#1459 => &D#1460->_M_impl
  # DEBUG D#1458 => D#1459
  # DEBUG __n => NULL
  # DEBUG __a => D#1458
  # DEBUG D#1457 => D#1458
  # DEBUG D#1455 => D#1457
  # DEBUG D#1456 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1455
  # DEBUG D.162716 => D#1456
  # DEBUG D#1454 => D#1455
  # DEBUG D#1453 => D#1454
  # DEBUG this => D#1453
  _180 = operator new (prephitmp_215);

  <bb 49>:
  # __new_finish_181 = PHI <0B(97), _180(48)>
  # __elems_before_265 = PHI <__elems_before_238(97), __elems_before_207(48)>
  # _264 = PHI <_25(97), _263(48)>
  # prephitmp_134 = PHI <0(97), prephitmp_215(48)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1678 => &this_9(D)->D.56332
  # DEBUG this => D#1678
  _27 = (long unsigned int) _264;
  __first_28 = __new_finish_181 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.129533 => D#1452
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __cur => __first_28
  # DEBUG __n => __n_7(D)

  <bb 50>:
  # __n_237 = PHI <__n_173(52), __n_7(D)(49)>
  # __first_261 = PHI <__first_174(52), __first_28(49)>
  # DEBUG __cur => __first_261
  # DEBUG __n => __n_237
  # DEBUG __r => __first_261
  # DEBUG __p => NULL
  # DEBUG __value => __x_29(D)
  # DEBUG D#20 => 32
  # DEBUG __p => NULL
  # DEBUG D.121888 => D#20
  if (__first_261 != 0B)
    goto <bb 53>;
  else
    goto <bb 51>;

  <bb 51>:
  __n_173 = __n_237 + 18446744073709551615;
  # DEBUG __n => __n_173
  __first_174 = __first_261 + 32;
  # DEBUG __cur => __first_174
  # DEBUG __cur => __first_174
  # DEBUG __n => __n_173
  if (__n_173 == 0)
    goto <bb 54>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 50>;

  <bb 53>:
  # DEBUG this => NULL
  # DEBUG __str => __x_29(D)
  # DEBUG this => __x_29(D)
  # DEBUG D#1185 => &MEM[(const struct basic_string *)__x_29(D)]._M_dataplus
  # DEBUG this => NULL
  _169 = &__first_261->D.11539._M_local_buf;
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => _169
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)__first_261]._M_p = _169;
  _170 = MEM[(char * *)__x_29(D)];
  # DEBUG D#1 => __x_29(D)
  # DEBUG this => D#1
  _171 = MEM[(long unsigned int *)__x_29(D) + 8B];
  # DEBUG D#2 => __x_29(D)
  # DEBUG this => D#2
  _172 = _170 + _171;
  # DEBUG D#1 => __x_29(D)
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG __beg => _170
  # DEBUG __end => _172
  # DEBUG this => NULL
  # DEBUG __beg => _170
  # DEBUG __end => _172
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (__first_261, _170, _172);
  goto <bb 51>;

  <bb 54>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1679 => &this_9(D)->D.56332
  # DEBUG this => D#1679
  # DEBUG this => &__position
  _31 = this_9(D)->D.56332._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#3801
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1192
  # DEBUG D#1191 => D#1192
  # DEBUG D#1188 => D#1191
  # DEBUG __first => _31
  # DEBUG __last => D#3801
  # DEBUG __result => NULL
  # DEBUG D.129554 => D#1188
  # DEBUG __first => _31
  # DEBUG __last => D#3801
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*> (_31, __position_23, __new_finish_181);
  goto <bb 63>;

  # __first_122 = PHI <__first_261(53)>
<L22>:
  _175 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_175);
  # DEBUG __first => __first_28
  # DEBUG __last => __first_122
  # DEBUG __first => __first_28
  # DEBUG __last => __first_122

  <bb 56>:
  # __first_176 = PHI <__first_28(55), __first_179(59)>
  # DEBUG __first => __first_176
  if (__first_176 == __first_122)
    goto <bb 60>;
  else
    goto <bb 57>;

  <bb 57>:
  # DEBUG __r => __first_176
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _177 = MEM[(char * *)__first_176];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _178 = &MEM[(const struct basic_string *)__first_176].D.11539._M_local_buf;
  if (_177 != _178)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _177
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _177
  # DEBUG this => D#620
  # DEBUG D.162683 => D#621
  operator delete (_177);

  <bb 59>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__first_176] ={v} {CLOBBER};
  __first_179 = __first_176 + 32;
  # DEBUG __first => __first_179
  goto <bb 56>;

  <bb 60>:
  __cxa_rethrow ();

<L24>:
  __cxa_end_catch ();
  resx 16

<L32>:
  goto <bb 81> (<L13>);

  <bb 63>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 32;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#1680 => &this_9(D)->D.56332
  # DEBUG this => D#1680
  _35 = this_9(D)->D.56332._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3801
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#1192
  # DEBUG D#1191 => D#1192
  # DEBUG D#1188 => D#1191
  # DEBUG __first => D#3801
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.129573 => D#1188
  # DEBUG __first => D#3801
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _93 = std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*> (__position_23, _35, __new_finish_33);
  goto <bb 65>;

<L33>:
  goto <bb 81> (<L13>);

  <bb 65>:
  # DEBUG __new_finish => _93
  # DEBUG D#1681 => &this_9(D)->D.56332
  # DEBUG this => D#1681
  _38 = this_9(D)->D.56332._M_impl._M_finish;
  __first_39 = this_9(D)->D.56332._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => _38
  # DEBUG __first => __first_39
  if (_38 == __first_39)
    goto <bb 72>;
  else
    goto <bb 66>;

  <bb 66>:

  <bb 67>:
  # __first_275 = PHI <__first_39(66), __first_96(70)>
  # DEBUG __first => __first_275
  # DEBUG __r => __first_275
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _94 = MEM[(char * *)__first_275];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _95 = &MEM[(const struct basic_string *)__first_275].D.11539._M_local_buf;
  if (_94 != _95)
    goto <bb 68>;
  else
    goto <bb 69>;

  <bb 68>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _94
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _94
  # DEBUG this => D#620
  # DEBUG D.129615 => D#621
  operator delete (_94);

  <bb 69>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__first_275] ={v} {CLOBBER};
  __first_96 = __first_275 + 32;
  # DEBUG __first => __first_96
  # DEBUG __first => __first_96
  if (_38 == __first_96)
    goto <bb 71>;
  else
    goto <bb 70>;

  <bb 70>:
  goto <bb 67>;

  <bb 71>:
  pretmp_129 = this_9(D)->D.56332._M_impl._M_start;

  <bb 72>:
  # prephitmp_213 = PHI <pretmp_129(71), __first_39(65)>
  # DEBUG D#1692 => this_9(D)->D.56332._M_impl._M_end_of_storage
  # DEBUG D#1691 => (long int) D#1692
  # DEBUG D#3800 => this_9(D)->D.56332._M_impl._M_start
  # DEBUG D#1690 => (long int) D#3800
  # DEBUG D#1689 => D#1691 - D#1690
  # DEBUG D#1688 => D#1689 /[ex] 32
  # DEBUG D#1687 => &this_9(D)->D.56332
  # DEBUG D#528 => D#1687
  # DEBUG D#529 => (long unsigned int) D#1688
  # DEBUG __p => D#3800
  # DEBUG this => D#528
  # DEBUG __n => D#529
  # DEBUG D#527 => D#529
  # DEBUG D#526 => D#528
  if (prephitmp_213 != 0B)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # DEBUG D#525 => &D#526->_M_impl
  # DEBUG D#523 => D#525
  # DEBUG D#524 => D#527
  # DEBUG __p => D#3800
  # DEBUG __a => D#523
  # DEBUG __n => D#524
  # DEBUG D#522 => D#524
  # DEBUG D#521 => D#523
  # DEBUG D#519 => D#521
  # DEBUG D#520 => D#522
  # DEBUG __p => D#3800
  # DEBUG this => D#519
  # DEBUG D.129596 => D#520
  operator delete (prephitmp_213);

  <bb 74>:
  this_9(D)->D.56332._M_impl._M_start = __new_finish_181;
  this_9(D)->D.56332._M_impl._M_finish = _93;
  _45 = __new_finish_181 + prephitmp_134;
  this_9(D)->D.56332._M_impl._M_end_of_storage = _45;

  <bb 75>:
  return;

<L25>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  _97 = MEM[(char * *)&__x_copy];
  # DEBUG D#1 => &__x_copy
  # DEBUG this => D#1
  # DEBUG this => &__x_copy
  if (&__x_copy.D.11539._M_local_buf != _97)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  # DEBUG D#629 => __x_copy.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &__x_copy
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &__x_copy
  # DEBUG this => D#1
  # DEBUG this => &__x_copy
  # DEBUG D#626 => &__x_copy._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _97
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _97
  # DEBUG this => D#620
  # DEBUG D.129632 => D#621
  operator delete (_97);

  <bb 79>:
  # DEBUG D#630 => &__x_copy._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  resx 2

<L31>:

  # __new_finish_1 = PHI <__new_finish_181(62), 0B(80), __new_finish_33(64)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_1 == 0B)
    goto <bb 83>;
  else
    goto <bb 82>;

  <bb 82>:
  goto <bb 88>;

  <bb 83>:
  # DEBUG D#1685 => &this_9(D)->D.56332
  # DEBUG this => D#1685
  _50 = __n_7(D) + __elems_before_265;
  _51 = _50 * 32;
  _52 = __new_finish_181 + _51;
  # DEBUG __first => __first_28
  # DEBUG __last => _52

  <bb 84>:
  # __first_79 = PHI <__first_28(83), __first_100(87)>
  # DEBUG __first => __first_79
  if (_52 == __first_79)
    goto <bb 92>;
  else
    goto <bb 85>;

  <bb 85>:
  # DEBUG __r => __first_79
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _98 = MEM[(char * *)__first_79];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _99 = &MEM[(const struct basic_string *)__first_79].D.11539._M_local_buf;
  if (_98 != _99)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _98
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _98
  # DEBUG this => D#620
  # DEBUG D.129656 => D#621
  operator delete (_98);

  <bb 87>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__first_79] ={v} {CLOBBER};
  __first_100 = __first_79 + 32;
  # DEBUG __first => __first_100
  goto <bb 84>;

  <bb 88>:
  # __new_finish_101 = PHI <__new_finish_181(82), __new_finish_104(91)>
  # DEBUG __first => __new_finish_101
  if (__new_finish_1 == __new_finish_101)
    goto <bb 92>;
  else
    goto <bb 89>;

  <bb 89>:
  # DEBUG __r => __new_finish_101
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _102 = MEM[(char * *)__new_finish_101];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _103 = &MEM[(const struct basic_string *)__new_finish_101].D.11539._M_local_buf;
  if (_102 != _103)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _102
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _102
  # DEBUG this => D#620
  # DEBUG D.129682 => D#621
  operator delete (_102);

  <bb 91>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__new_finish_101] ={v} {CLOBBER};
  __new_finish_104 = __new_finish_101 + 32;
  # DEBUG __first => __new_finish_104
  goto <bb 88>;

  <bb 92>:
  # DEBUG D#1693 => &this_9(D)->D.56332
  # DEBUG D#528 => D#1693
  # DEBUG __p => NULL
  # DEBUG this => D#528
  # DEBUG __n => D#529
  # DEBUG D#527 => D#529
  # DEBUG D#526 => D#528
  if (__new_finish_181 != 0B)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  # DEBUG D#525 => &D#526->_M_impl
  # DEBUG D#523 => D#525
  # DEBUG D#524 => D#527
  # DEBUG __p => NULL
  # DEBUG __a => D#523
  # DEBUG __n => D#524
  # DEBUG D#522 => D#524
  # DEBUG D#521 => D#523
  # DEBUG D#519 => D#521
  # DEBUG D#520 => D#522
  # DEBUG __p => NULL
  # DEBUG this => D#519
  # DEBUG D.129699 => D#520
  operator delete (__new_finish_181);

  <bb 94>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 96>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#296 => &this_9(D)->D.56332._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#296
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84135
  # DEBUG this => &__position
  _253 = (long int) __position_23;
  # DEBUG this => &D.84135
  _251 = _253 - _184;
  _252 = _251 /[ex] 32;
  __elems_before_250 = (const size_type) _252;
  # DEBUG __elems_before => __elems_before_250
  # DEBUG D#1694 => &this_9(D)->D.56332
  # DEBUG D#1461 => D#1694
  # DEBUG __n => NULL
  # DEBUG this => D#1461
  # DEBUG D#1460 => D#1461
  goto <bb 48>;

  <bb 97>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#296 => &this_9(D)->D.56332._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#296
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84135
  # DEBUG this => &__position
  _244 = (long int) __position_23;
  # DEBUG this => &D.84135
  _25 = _244 - _184;
  _249 = _25 /[ex] 32;
  __elems_before_238 = (const size_type) _249;
  # DEBUG __elems_before => __elems_before_238
  # DEBUG D#1694 => &this_9(D)->D.56332
  # DEBUG D#1461 => D#1694
  # DEBUG __n => NULL
  # DEBUG this => D#1461
  # DEBUG D#1460 => D#1461
  if (__len_192 != 0)
    goto <bb 47>;
  else
    goto <bb 49>;

}



;; Function void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>] (_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6resizeEmS5_, funcdef_no=2699, decl_uid=55997, cgraph_uid=947, symbol_order=948)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>] (struct vector * const this, size_type __new_size, struct value_type & restrict __x)
{
  struct basic_string * __pos;
  struct iterator __position;
  long int _5;
  long unsigned int _6;
  long unsigned int _8;
  struct basic_string * const _11;
  struct basic_string * const _12;
  long int _13;
  long int _14;
  long int _15;
  size_type _16;
  char * const _18;
  const char * _19;

  <bb 2>:
  _11 = MEM[(struct basic_string * *)this_3(D)];
  # DEBUG D#65 => this_3(D)
  _12 = MEM[(struct basic_string * *)this_3(D) + 8B];
  # DEBUG D#65 => this_3(D)
  # DEBUG this => D#65
  # DEBUG this => D#65
  _5 = (long int) _12;
  _13 = (long int) _11;
  _14 = _5 - _13;
  _15 = _14 /[ex] 32;
  _16 = (size_type) _15;
  if (__new_size_4(D) > _16)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#65 => this_3(D)
  # DEBUG D#65 => this_3(D)
  # DEBUG this => D#65
  # DEBUG this => D#65
  _6 = __new_size_4(D) - _16;
  # DEBUG this => this_3(D)
  # DEBUG D#295 => &this_3(D)->D.56332._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#295
  # DEBUG this => this_3(D)
  MEM[(struct __normal_iterator *)&__position] = _12;
  # DEBUG __n => _6
  # DEBUG __x => __x_7(D)
  std::vector<std::__cxx11::basic_string<char> >::_M_fill_insert (this_3(D), __position, _6, __x_7(D));
  goto <bb 12>;

  <bb 4>:
  # DEBUG D#65 => this_3(D)
  # DEBUG D#65 => this_3(D)
  # DEBUG this => D#65
  # DEBUG this => D#65
  if (__new_size_4(D) < _16)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  _8 = __new_size_4(D) * 32;
  __pos_9 = _11 + _8;
  # DEBUG D#743 => this_3(D)
  # DEBUG __pos => __pos_9
  # DEBUG D#742 => D#743
  # DEBUG this => D#742
  # DEBUG D#741 => &D#742->D.56332
  # DEBUG this => D#741
  # DEBUG __first => __pos_9
  # DEBUG __last => _12
  # DEBUG __first => __pos_9
  if (__pos_9 == _12)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  MEM[(struct basic_string * *)this_3(D) + 8B] = __pos_9;
  goto <bb 12>;

  <bb 7>:

  <bb 8>:
  # __pos_35 = PHI <__pos_9(7), __pos_20(11)>
  # DEBUG __first => __pos_35
  # DEBUG __r => __pos_35
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _18 = MEM[(char * *)__pos_35];
  # DEBUG this => D#1
  # DEBUG this => NULL
  _19 = &MEM[(const struct basic_string *)__pos_35].D.11539._M_local_buf;
  if (_18 != _19)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#628 => D#629
  # DEBUG this => NULL
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG this => D#1
  # DEBUG this => NULL
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _18
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _18
  # DEBUG this => D#620
  # DEBUG D.129753 => D#621
  operator delete (_18);

  <bb 10>:
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)__pos_35] ={v} {CLOBBER};
  __pos_20 = __pos_35 + 32;
  # DEBUG __first => __pos_20
  # DEBUG __first => __pos_20
  if (_12 == __pos_20)
    goto <bb 6>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 8>;

  <bb 12>:
  return;

}



;; Function std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Alloc_node; _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Flit*> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::pair<const int, Flit*> >*] (_ZNSt8_Rb_treeIiSt4pairIKiP4FlitESt10_Select1stIS4_ESt4lessIiESaIS4_EE7_M_copyINSA_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS4_EPKSE_SF_RT_, funcdef_no=4546, decl_uid=84916, cgraph_uid=2794, symbol_order=2795)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Alloc_node; _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Flit*> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::pair<const int, Flit*> >*] (struct _Rb_tree * const this, const struct _Rb_tree_node * __x, struct _Rb_tree_node * __p, struct _Alloc_node & __node_gen)
{
  struct _Rb_tree_node * D.162887;
  struct _Rb_tree_node * D.162864;
  struct _Rb_tree_node_base * _15;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node * _25;
  void * _27;
  _Rb_tree_color _37;
  _Rb_tree_color _39;

  <bb 2>:
  # DEBUG D#2408 => this_8(D)
  # DEBUG D#2409 => __node_gen_10(D)
  # DEBUG __x => __x_9(D)
  # DEBUG this => D#2408
  # DEBUG __node_gen => D#2409
  # DEBUG D#2407 => D#2409
  # DEBUG this => __x_9(D)
  # DEBUG D#2406 => &__x_9(D)->_M_value_field
  # DEBUG __r => D#2406
  # DEBUG D#2405 => D#2407
  # DEBUG __arg => D#2406
  # DEBUG this => D#2405
  # DEBUG D#2404 => D#2405
  # DEBUG D#2403 => D#2404->_M_t
  # DEBUG D#2402 => D#2403
  # DEBUG __x => D#2406
  # DEBUG this => D#2402
  # DEBUG D#2401 => D#2402
  # DEBUG D#2400 => D#2402
  # DEBUG D#2399 => D#2400
  # DEBUG this => D#2399
  # DEBUG D#2398 => D#2399
  # DEBUG this => D#2398
  # DEBUG __n => 1
  # DEBUG __a => D#2397
  # DEBUG D#2396 => D#2397
  # DEBUG D#2394 => D#2396
  # DEBUG D#2395 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#2394
  # DEBUG D.162855 => D#2395
  # DEBUG D#2393 => D#2394
  # DEBUG D#2392 => D#2393
  # DEBUG this => D#2392
  __p_35 = operator new (48);
  # DEBUG __tmp => __p_35
  # DEBUG D#2149 => D#2401
  # DEBUG __node => __p_35
  # DEBUG __x => D#2406
  # DEBUG this => D#2149
  # DEBUG D#2148 => D#2149
  # DEBUG this => __p_35
  # DEBUG D#3810 => &__p_35->_M_value_field
  # DEBUG __r => D#3810
  # DEBUG D#1901 => D#2148
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#3810
  # DEBUG __val => D#2406
  # DEBUG this => D#2147
  # DEBUG D#20 => 16
  # DEBUG __p => D#3810
  # DEBUG D.135975 => D#20
  MEM[(struct pair *)__p_35 + 32B] = MEM[(const struct pair &)__x_9(D) + 32];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => __p_35
  _37 = __x_9(D)->D.80728._M_color;
  __p_35->D.80728._M_color = _37;
  __p_35->D.80728._M_left = 0B;
  __p_35->D.80728._M_right = 0B;
  # DEBUG __top => NULL
  __p_35->D.80728._M_parent = __p_13(D);
  _15 = __x_9(D)->D.80728._M_right;
  if (_15 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#614 => __x_9(D)
  # DEBUG __x => D#614
  _17 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Alloc_node> (this_8(D), _15, __p_35, __node_gen_10(D));

  <bb 4>:
  __p_35->D.80728._M_right = _17;

  <bb 5>:
  # DEBUG __p => NULL
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_9(D) + 16B];
  # DEBUG D#613 => __x_9(D)
  # DEBUG __x => D#613
  # DEBUG __x => NULL
  # DEBUG __p => __p_35
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:

  <bb 19>:
  return __p_35;

  <bb 7>:

  <bb 8>:
  # __x_19 = PHI <__x_32(7), __x_33(15)>
  # __p_56 = PHI <__p_35(7), __p_11(15)>
  # DEBUG __p => __p_56
  # DEBUG __x => __x_19
  # DEBUG D#2408 => this_8(D)
  # DEBUG D#2409 => __node_gen_10(D)
  # DEBUG __x => __x_19
  # DEBUG this => D#2408
  # DEBUG __node_gen => D#2409
  # DEBUG D#2407 => D#2409
  # DEBUG this => __x_19
  # DEBUG D#2406 => &__x_19->_M_value_field
  # DEBUG __r => D#2406
  # DEBUG D#2405 => D#2407
  # DEBUG __arg => D#2406
  # DEBUG this => D#2405
  # DEBUG D#2404 => D#2405
  # DEBUG D#2403 => D#2404->_M_t
  # DEBUG D#2402 => D#2403
  # DEBUG __x => D#2406
  # DEBUG this => D#2402
  # DEBUG D#2401 => D#2402
  # DEBUG D#2400 => D#2402
  # DEBUG D#2399 => D#2400
  # DEBUG this => D#2399
  # DEBUG D#2398 => D#2399
  # DEBUG this => D#2398
  # DEBUG __n => 1
  # DEBUG __a => D#2397
  # DEBUG D#2396 => D#2397
  # DEBUG D#2394 => D#2396
  # DEBUG D#2395 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#2394
  # DEBUG D.162878 => D#2395
  # DEBUG D#2393 => D#2394
  # DEBUG D#2392 => D#2393
  # DEBUG this => D#2392
  __p_11 = operator new (48);
  goto <bb 10>;

<L14>:
  goto <bb 17> (<L10>);

  <bb 10>:
  # DEBUG __tmp => __p_11
  # DEBUG D#2149 => D#2401
  # DEBUG __node => __p_11
  # DEBUG __x => D#2406
  # DEBUG this => D#2149
  # DEBUG D#2148 => D#2149
  # DEBUG this => __p_11
  # DEBUG D#3809 => &__p_11->_M_value_field
  # DEBUG __r => D#3809
  # DEBUG D#1901 => D#2148
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#3809
  # DEBUG __val => D#2406
  # DEBUG this => D#2147
  # DEBUG D#20 => 16
  # DEBUG __p => D#3809
  # DEBUG D.135975 => D#20
  MEM[(struct pair *)__p_11 + 32B] = MEM[(const struct pair &)__x_19 + 32];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => __p_11
  _39 = __x_19->D.80728._M_color;
  __p_11->D.80728._M_color = _39;
  __p_11->D.80728._M_left = 0B;
  __p_11->D.80728._M_right = 0B;
  # DEBUG __y => NULL
  __p_56->D.80728._M_left = __p_11;
  __p_11->D.80728._M_parent = __p_56;
  _23 = __x_19->D.80728._M_right;
  if (_23 != 0B)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 11>:
  # DEBUG D#614 => __x_19
  # DEBUG __x => D#614
  _25 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Alloc_node> (this_8(D), _23, __p_11, __node_gen_10(D));
  goto <bb 13>;

<L15>:
  goto <bb 17> (<L10>);

  <bb 13>:
  __p_11->D.80728._M_right = _25;

  <bb 14>:
  # DEBUG __p => NULL
  __x_33 = MEM[(struct _Rb_tree_node_base * *)__x_19 + 16B];
  # DEBUG D#613 => __x_19
  # DEBUG __x => D#613
  # DEBUG __x => NULL
  # DEBUG __p => __p_11
  # DEBUG __x => __x_33
  if (__x_33 == 0B)
    goto <bb 6>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 8>;

<L13>:

<L10>:
  _27 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_27);
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (this_8(D), __p_35);
  __cxa_rethrow ();

<L12>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node; _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<OutputSet::sSetElement>*] (_ZNSt8_Rb_treeIN9OutputSet11sSetElementES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_M_copyINS7_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS1_EPKSB_SC_RT_, funcdef_no=4680, decl_uid=85552, cgraph_uid=2928, symbol_order=2929)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node; _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<OutputSet::sSetElement>*] (struct _Rb_tree * const this, const struct _Rb_tree_node * __x, struct _Rb_tree_node * __p, struct _Alloc_node & __node_gen)
{
  struct _Rb_tree_node * D.162947;
  struct _Rb_tree_node * D.162924;
  struct _Rb_tree_node_base * _15;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node * _25;
  void * _27;
  _Rb_tree_color _37;
  _Rb_tree_color _39;

  <bb 2>:
  # DEBUG D#3033 => this_8(D)
  # DEBUG D#3034 => __node_gen_10(D)
  # DEBUG __x => __x_9(D)
  # DEBUG this => D#3033
  # DEBUG __node_gen => D#3034
  # DEBUG D#3032 => D#3034
  # DEBUG this => __x_9(D)
  # DEBUG D#3031 => &__x_9(D)->_M_value_field
  # DEBUG __r => D#3031
  # DEBUG D#3030 => D#3032
  # DEBUG __arg => D#3031
  # DEBUG this => D#3030
  # DEBUG D#3029 => D#3030
  # DEBUG D#3028 => D#3029->_M_t
  # DEBUG D#3027 => D#3028
  # DEBUG __x => D#3031
  # DEBUG this => D#3027
  # DEBUG D#3026 => D#3027
  # DEBUG D#3025 => D#3027
  # DEBUG D#3024 => D#3025
  # DEBUG this => D#3024
  # DEBUG D#3023 => D#3024
  # DEBUG this => D#3023
  # DEBUG __n => 1
  # DEBUG __a => D#3022
  # DEBUG D#3021 => D#3022
  # DEBUG D#3019 => D#3021
  # DEBUG D#3020 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#3019
  # DEBUG D.162915 => D#3020
  # DEBUG D#3018 => D#3019
  # DEBUG D#3017 => D#3018
  # DEBUG this => D#3017
  __p_35 = operator new (48);
  # DEBUG __tmp => __p_35
  # DEBUG D#2491 => D#3026
  # DEBUG __node => __p_35
  # DEBUG __x => D#3031
  # DEBUG this => D#2491
  # DEBUG D#2490 => D#2491
  # DEBUG this => __p_35
  # DEBUG D#3813 => &__p_35->_M_value_field
  # DEBUG __r => D#3813
  # DEBUG D#1624 => D#2490
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#3813
  # DEBUG __val => D#3031
  # DEBUG this => D#2489
  # DEBUG D#20 => 16
  # DEBUG __p => D#3813
  # DEBUG D.142024 => D#20
  MEM[(struct sSetElement *)__p_35 + 32B] = MEM[(const struct sSetElement &)__x_9(D) + 32];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => __p_35
  _37 = __x_9(D)->D.80890._M_color;
  __p_35->D.80890._M_color = _37;
  __p_35->D.80890._M_left = 0B;
  __p_35->D.80890._M_right = 0B;
  # DEBUG __top => NULL
  __p_35->D.80890._M_parent = __p_13(D);
  _15 = __x_9(D)->D.80890._M_right;
  if (_15 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#1136 => __x_9(D)
  # DEBUG __x => D#1136
  _17 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node> (this_8(D), _15, __p_35, __node_gen_10(D));

  <bb 4>:
  __p_35->D.80890._M_right = _17;

  <bb 5>:
  # DEBUG __p => NULL
  __x_33 = MEM[(struct _Rb_tree_node_base * *)__x_9(D) + 16B];
  # DEBUG D#1137 => __x_9(D)
  # DEBUG __x => D#1137
  # DEBUG __x => NULL
  # DEBUG __p => __p_35
  # DEBUG __x => __x_33
  if (__x_33 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:

  <bb 19>:
  return __p_35;

  <bb 7>:

  <bb 8>:
  # __x_19 = PHI <__x_33(7), __x_34(15)>
  # __p_56 = PHI <__p_35(7), __p_11(15)>
  # DEBUG __p => __p_56
  # DEBUG __x => __x_19
  # DEBUG D#3033 => this_8(D)
  # DEBUG D#3034 => __node_gen_10(D)
  # DEBUG __x => __x_19
  # DEBUG this => D#3033
  # DEBUG __node_gen => D#3034
  # DEBUG D#3032 => D#3034
  # DEBUG this => __x_19
  # DEBUG D#3031 => &__x_19->_M_value_field
  # DEBUG __r => D#3031
  # DEBUG D#3030 => D#3032
  # DEBUG __arg => D#3031
  # DEBUG this => D#3030
  # DEBUG D#3029 => D#3030
  # DEBUG D#3028 => D#3029->_M_t
  # DEBUG D#3027 => D#3028
  # DEBUG __x => D#3031
  # DEBUG this => D#3027
  # DEBUG D#3026 => D#3027
  # DEBUG D#3025 => D#3027
  # DEBUG D#3024 => D#3025
  # DEBUG this => D#3024
  # DEBUG D#3023 => D#3024
  # DEBUG this => D#3023
  # DEBUG __n => 1
  # DEBUG __a => D#3022
  # DEBUG D#3021 => D#3022
  # DEBUG D#3019 => D#3021
  # DEBUG D#3020 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#3019
  # DEBUG D.162938 => D#3020
  # DEBUG D#3018 => D#3019
  # DEBUG D#3017 => D#3018
  # DEBUG this => D#3017
  __p_11 = operator new (48);
  goto <bb 10>;

<L14>:
  goto <bb 17> (<L10>);

  <bb 10>:
  # DEBUG __tmp => __p_11
  # DEBUG D#2491 => D#3026
  # DEBUG __node => __p_11
  # DEBUG __x => D#3031
  # DEBUG this => D#2491
  # DEBUG D#2490 => D#2491
  # DEBUG this => __p_11
  # DEBUG D#3812 => &__p_11->_M_value_field
  # DEBUG __r => D#3812
  # DEBUG D#1624 => D#2490
  # DEBUG this => D#1624
  # DEBUG D#1623 => D#1624
  # DEBUG this => D#1623
  # DEBUG this => NULL
  # DEBUG D.128584 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#3812
  # DEBUG __val => D#3031
  # DEBUG this => D#2489
  # DEBUG D#20 => 16
  # DEBUG __p => D#3812
  # DEBUG D.142024 => D#20
  MEM[(struct sSetElement *)__p_11 + 32B] = MEM[(const struct sSetElement &)__x_19 + 32];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => __p_11
  _39 = __x_19->D.80890._M_color;
  __p_11->D.80890._M_color = _39;
  __p_11->D.80890._M_left = 0B;
  __p_11->D.80890._M_right = 0B;
  # DEBUG __y => NULL
  __p_56->D.80890._M_left = __p_11;
  __p_11->D.80890._M_parent = __p_56;
  _23 = __x_19->D.80890._M_right;
  if (_23 != 0B)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 11>:
  # DEBUG D#1136 => __x_19
  # DEBUG __x => D#1136
  _25 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node> (this_8(D), _23, __p_11, __node_gen_10(D));
  goto <bb 13>;

<L15>:
  goto <bb 17> (<L10>);

  <bb 13>:
  __p_11->D.80890._M_right = _25;

  <bb 14>:
  # DEBUG __p => NULL
  __x_34 = MEM[(struct _Rb_tree_node_base * *)__x_19 + 16B];
  # DEBUG D#1137 => __x_19
  # DEBUG __x => D#1137
  # DEBUG __x => NULL
  # DEBUG __p => __p_11
  # DEBUG __x => __x_34
  if (__x_34 == 0B)
    goto <bb 6>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 8>;

<L13>:

<L10>:
  _27 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_27);
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (this_8(D), __p_35);
  __cxa_rethrow ();

<L12>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::map<int, Flit*>*; _Size = long unsigned int; _Tp = std::map<int, Flit*>; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt3mapIiP4FlitSt4lessIiESaISt4pairIKiS4_EEEmSB_EET_SD_T0_RKT1_, funcdef_no=5065, decl_uid=88452, cgraph_uid=3313, symbol_order=3314)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::map<int, Flit*>*; _Size = long unsigned int; _Tp = std::map<int, Flit*>; bool _TrivialValueType = false] (struct map * __first, long unsigned int __n, const struct map & __x)
{
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  void * _12;
  struct _Rep_type * _17;
  struct _Rep_type * _18;
  struct _Rb_tree_node_base * _19;
  struct _Rb_tree_node_base * _29;
  struct _Rb_tree_node_base * const _30;
  long unsigned int _37;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_58 = PHI <__n_5(D)(3), __n_10(16)>
  # __first_63 = PHI <__first_4(D)(3), __first_11(16)>
  # DEBUG __cur => __first_63
  # DEBUG __n => __n_58
  # DEBUG __r => __first_63
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#20 => 48
  # DEBUG __p => NULL
  # DEBUG D.140967 => D#20
  if (__first_63 != 0B)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  goto <bb 15>;

  <bb 6>:
  # DEBUG this => NULL
  # DEBUG __x => __x_8(D)
  # DEBUG D#3815 => &__x_8(D)->_M_t
  _17 = &__first_63->_M_t;
  # DEBUG this => _17
  # DEBUG __x => D#3815
  # DEBUG this => D#3815
  # DEBUG __a => NULL
  # DEBUG D#2412 => &MEM[(const struct _Rb_tree &)D#3815]._M_impl._M_key_compare
  # DEBUG D#2411 => &MEM[(struct _Rb_tree *)_17]._M_impl
  # DEBUG this => D#2411
  # DEBUG __comp => D#2412
  # DEBUG __a => NULL
  # DEBUG this => D#2411
  # DEBUG __a => NULL
  # DEBUG this => D#2411
  # DEBUG D.120352 => NULL
  MEM[(struct _Rb_tree_impl *)__first_63]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)__first_63]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)__first_63]._M_node_count = 0;
  # DEBUG this => D#2411
  _29 = &MEM[(struct _Rb_tree_impl *)__first_63]._M_header;
  MEM[(struct _Rb_tree_impl *)__first_63]._M_header._M_left = _29;
  MEM[(struct _Rb_tree_impl *)__first_63]._M_header._M_right = _29;
  _30 = MEM[(struct _Rb_tree_node_base * *)__x_8(D) + 16B];
  # DEBUG D#316 => D#3815
  # DEBUG this => D#316
  if (_30 != 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

  <bb 7>:
  # DEBUG this => _17
  # DEBUG this => _17
  # DEBUG D#317 => D#3815
  # DEBUG this => D#317
  # DEBUG this => _17
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => _17
  __an._M_t = _17;
  __x_32 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Alloc_node> (_17, _30, _29, &__an);

  <bb 8>:
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)__first_63 + 16] = __x_32;
  # DEBUG this => _17
  # DEBUG this => _17
  # DEBUG __x => __x_32

  <bb 9>:
  # __x_33 = PHI <__x_32(8), __x_34(10)>
  # DEBUG __x => __x_33
  __x_34 = __x_33->_M_left;
  if (__x_34 == 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:
  # __x_27 = PHI <__x_33(9)>
  MEM[(struct _Rb_tree_node_base * &)__first_63 + 24] = __x_27;
  # DEBUG this => _17
  # DEBUG this => _17
  # DEBUG __x => __x_32

  <bb 12>:
  # __x_35 = PHI <__x_32(11), __x_36(13)>
  # DEBUG __x => __x_35
  __x_36 = __x_35->_M_right;
  if (__x_36 == 0B)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # __x_39 = PHI <__x_35(12)>
  MEM[(struct _Rb_tree_node_base * &)__first_63 + 32] = __x_39;
  _37 = MEM[(const struct _Rb_tree &)__x_8(D)]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)__first_63]._M_impl._M_node_count = _37;

  <bb 15>:
  __n_10 = __n_58 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_63 + 48;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __first_24 = PHI <__first_11(15)>

  <bb 18>:
  # __first_62 = PHI <__first_24(17), __first_4(D)(2)>
  return __first_62;

  # __first_40 = PHI <__first_63(7)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_40
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_40
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_40)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __first_59 = PHI <__first_4(D)(21), __first_20(23)>
  # DEBUG __first => __first_59
  # DEBUG __r => __first_59
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _18 = &__first_59->_M_t;
  # DEBUG this => _18
  _19 = MEM[(struct _Rb_tree_node_base * *)__first_59 + 16B];
  # DEBUG D#214 => _18
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_18, _19);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)_18]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  MEM[(struct  &)__first_59] ={v} {CLOBBER};
  __first_20 = __first_59 + 48;
  # DEBUG __first => __first_20
  # DEBUG __first => __first_20
  if (__first_20 == __first_40)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void TrafficManager::_Step() (_ZN14TrafficManager5_StepEv, funcdef_no=2474, decl_uid=64979, cgraph_uid=725, symbol_order=726)

Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void TrafficManager::_Step() (struct TrafficManager * const this)
{
  char_type D.163202;
  char __c;
  char_type D.163199;
  char __c;
  char_type D.163196;
  struct basic_ostream & D.163190;
  char_type D.163176;
  char __c;
  char_type D.163173;
  char __c;
  char_type D.163170;
  struct basic_ostream & D.163164;
  char_type D.163161;
  char __c;
  char_type D.163158;
  char __c;
  char_type D.163155;
  struct basic_ostream & D.163149;
  char_type D.163146;
  char __c;
  char_type D.163143;
  char __c;
  char_type D.163140;
  struct basic_ostream & D.163134;
  bool D.163131;
  static const char __PRETTY_FUNCTION__[44] = "bool BufferState::IsAvailableFor(int) const";
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  char_type D.163108;
  char __c;
  char_type D.163105;
  char __c;
  char_type D.163102;
  struct basic_ostream & D.163096;
  struct map * D.163093;
  struct basic_ostream & D.163036;
  struct pair __p;
  struct _Rb_tree_node * __y;
  struct pair D.155068;
  struct Flit * const f;
  int n;
  int subnet;
  struct Flit * const nf;
  int in_channel;
  const int c;
  const int lvc;
  int i;
  int next_output;
  const struct set sl;
  int in_channel;
  int vc_count;
  int vc_end;
  int vc_start;
  struct OutputSet route_set;
  const int c;
  int i;
  int class_limit;
  const int last_class;
  struct BufferState * const dest_buf;
  struct Flit * f;
  int n;
  int subnet;
  int n;
  int subnet;
  int c;
  static const char __PRETTY_FUNCTION__[29] = "void TrafficManager::_Step()";
  struct vector flits;
  bool flits_in_flight;
  const struct value_type D.74284;
  struct value_type D.74277;
  int iftmp.493_18;
  int _19;
  int prephitmp_23;
  bool _30;
  long unsigned int _63;
  struct vector & _64;
  bool _66;
  int _69;
  int _71;
  int _73;
  struct _Rb_tree_node_base * _76;
  int _77;
  long unsigned int _78;
  long unsigned int _79;
  int _83;
  int _85;
  struct vector & _87;
  struct Network * _89;
  int (*__vtbl_ptr_type) () * _90;
  int (*__vtbl_ptr_type) () _91;
  struct Flit * const _93;
  bool _94;
  int _95;
  int _96;
  int _97;
  int _99;
  struct ostream * gWatchOut.489_100;
  struct basic_ostream & _102;
  struct _Rep_type * _103;
  struct basic_ostream & _105;
  struct basic_ostream & _107;
  struct basic_ostream & _109;
  struct basic_ostream & _111;
  long unsigned int _112;
  long unsigned int _113;
  eSimState _115;
  long unsigned int _116;
  int _117;
  long unsigned int _118;
  int & _119;
  int _120;
  int _121;
  bool _123;
  int _124;
  long unsigned int _125;
  long unsigned int _126;
  int _127;
  int _128;
  struct Network * _130;
  int (*__vtbl_ptr_type) () * _131;
  int (*__vtbl_ptr_type) () _132;
  struct Credit * const _134;
  long unsigned int _135;
  bool _136;
  int (*__vtbl_ptr_type) () _137;
  struct BufferState * _138;
  int (*__vtbl_ptr_type) () * _143;
  struct Network * _144;
  int (*__vtbl_ptr_type) () * _145;
  int (*__vtbl_ptr_type) () _146;
  bool _149;
  int _152;
  long unsigned int _154;
  struct vector & _156;
  bool _159;
  long unsigned int _160;
  struct list & _161;
  long unsigned int _162;
  struct Flit * _163;
  bool _164;
  int _165;
  int _167;
  const struct _List_node_base * _168;
  struct _List_node_base * _169;
  struct vector & _170;
  int _171;
  int _174;
  int _175;
  long unsigned int _177;
  long unsigned int _178;
  struct BufferState * & _179;
  int _182;
  int _183;
  int _184;
  int _185;
  bool _186;
  int _187;
  const size_type _188;
  void (*<T8c16>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _189;
  const struct set & _192;
  struct vector & _193;
  int _194;
  int _197;
  bool _199;
  bool _200;
  struct Network * _201;
  int & _202;
  void (*<T8c16>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _206;
  struct OutputSet * _207;
  bool _210;
  int _211;
  int _213;
  struct ostream * gWatchOut.489_214;
  struct basic_ostream & _216;
  struct basic_ostream & _218;
  struct basic_ostream & _220;
  const struct set & _223;
  struct Network * & _225;
  int _229;
  int _231;
  int _233;
  int _234;
  bool _243;
  int _244;
  int _246;
  struct ostream * gWatchOut.489_247;
  struct basic_ostream & _249;
  const size_type _250;
  struct basic_ostream & _252;
  struct vector & _253;
  long unsigned int _254;
  bool _256;
  bool _257;
  bool _258;
  int _259;
  int _260;
  int _261;
  int iftmp.493_262;
  bool _264;
  bool _265;
  struct BufferState * & _266;
  bool _268;
  int _270;
  struct ostream * gWatchOut.489_271;
  struct basic_ostream & _273;
  const size_type _274;
  struct basic_ostream & _276;
  bool _277;
  int _279;
  struct ostream * gWatchOut.489_280;
  struct basic_ostream & _282;
  const size_type _283;
  struct basic_ostream & _285;
  bool _286;
  struct Network * & _287;
  int _289;
  struct ostream * gWatchOut.489_290;
  struct basic_ostream & _292;
  const size_type _293;
  struct basic_ostream & _295;
  int _303;
  bool _304;
  int _305;
  int _307;
  struct ostream * gWatchOut.489_308;
  struct basic_ostream & _310;
  const size_type _311;
  struct basic_ostream & _313;
  bool _314;
  int _315;
  int _316;
  int _318;
  struct ostream * gWatchOut.489_319;
  struct basic_ostream & _321;
  const size_type _322;
  struct basic_ostream & _324;
  struct basic_ostream & _326;
  int _330;
  bool _332;
  bool _333;
  bool _334;
  bool _335;
  int _336;
  int _338;
  struct ostream * gWatchOut.489_339;
  struct basic_ostream & _341;
  struct basic_ostream & _343;
  struct basic_ostream & _345;
  struct vector & _346;
  struct Network * _347;
  long unsigned int _348;
  int & _349;
  void (*<T8c16>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _351;
  struct OutputSet * _352;
  bool _354;
  int _355;
  int _357;
  struct ostream * gWatchOut.489_358;
  struct basic_ostream & _360;
  struct basic_ostream & _362;
  struct basic_ostream & _364;
  struct OutputSet * _366;
  int _368;
  long unsigned int _370;
  struct vector & _371;
  int _372;
  long unsigned int _374;
  int & _377;
  int (*__vtbl_ptr_type) () * _378;
  ePriority _380;
  int _381;
  int _382;
  bool _385;
  int _386;
  int _387;
  int _388;
  int _390;
  struct ostream * gWatchOut.489_391;
  struct basic_ostream & _393;
  struct basic_ostream & _395;
  struct basic_ostream & _397;
  struct basic_ostream & _399;
  struct basic_ostream & _401;
  struct basic_ostream & _403;
  struct _List_node_base * _404;
  int _405;
  struct map & _407;
  long unsigned int _408;
  bool _409;
  int _411;
  eSimState _413;
  int _414;
  int _415;
  bool _417;
  int _418;
  int _419;
  struct Network * _421;
  int (*__vtbl_ptr_type) () * _422;
  int (*__vtbl_ptr_type) () _423;
  int _428;
  struct Network * & _431;
  struct map & _434;
  int _436;
  bool _438;
  int _439;
  int _441;
  struct ostream * gWatchOut.489_442;
  struct basic_ostream & _444;
  struct basic_ostream & _446;
  struct basic_ostream & _448;
  struct basic_ostream & _450;
  struct _Rep_type * _451;
  struct Credit * const _453;
  int * _454;
  long unsigned int _455;
  struct Network * _456;
  int (*__vtbl_ptr_type) () * _457;
  int (*__vtbl_ptr_type) () _458;
  int (*__vtbl_ptr_type) () * _460;
  int (*__vtbl_ptr_type) () _461;
  struct Network * _468;
  int (*__vtbl_ptr_type) () * _469;
  int (*__vtbl_ptr_type) () _470;
  const size_type _472;
  struct Network * _473;
  int (*__vtbl_ptr_type) () * _474;
  int (*__vtbl_ptr_type) () _475;
  int _478;
  int _479;
  bool gTrace.502_481;
  struct basic_ostream & _483;
  struct _Rb_tree_node_base * _488;
  const struct Router * const _490;
  const struct Router * const _491;
  const int _492;
  struct BufferPolicy * const _493;
  struct BufferPolicy * const _494;
  struct BufferPolicy * const _495;
  int * _496;
  int * _497;
  int * _498;
  int * _499;
  int * _500;
  int * _501;
  int * _502;
  int * _503;
  int * _504;
  struct Network * * _505;
  struct Network * * _506;
  struct Network * * _507;
  struct Network * * _508;
  struct Network * * _509;
  struct Network * * _510;
  struct Network * * _511;
  struct Network * * _512;
  struct Network * * _513;
  struct vector * _514;
  struct vector * _515;
  struct vector * _516;
  struct vector * _517;
  struct vector * _518;
  struct vector * _519;
  struct vector * _520;
  struct vector * _521;
  struct vector * _522;
  struct vector * _523;
  struct vector * _524;
  struct vector * _525;
  struct vector * _526;
  struct vector * _527;
  struct BufferState * * _528;
  struct BufferState * * _529;
  struct vector * _530;
  struct vector * _531;
  struct vector * _532;
  struct vector * _533;
  struct map * _535;
  struct list * _538;
  struct list * _539;
  struct list * _540;
  struct list * _541;
  struct _List_node_base * const _542;
  struct _List_node_base * _543;
  const struct _List_node_base * _544;
  long unsigned int _545;
  struct list & _546;
  struct vector & _547;
  struct _Rb_tree_node_base * const _548;
  struct FlitChannel * * _549;
  long unsigned int _550;
  struct FlitChannel * & _551;
  struct FlitChannel * _552;
  struct Network * & _553;
  long int _556;
  char * const _557;
  struct basic_ostream & _558;
  int & _560;
  struct vector & _562;
  struct vector & _563;
  long int _564;
  char * const _565;
  struct basic_ostream & _566;
  int (*__vtbl_ptr_type) () * _567;
  int (*__vtbl_ptr_type) () _568;
  bool _569;
  long int _570;
  char * const _571;
  struct basic_ostream & _572;
  long int _573;
  char * const _574;
  struct basic_ostream & _575;
  struct _Rb_tree_node_base * _576;
  long int _577;
  char * const _578;
  struct basic_ostream & _579;
  int (*__vtbl_ptr_type) () * _580;
  int (*__vtbl_ptr_type) () _581;
  bool _582;
  long int _583;
  char * const _584;
  struct basic_ostream & _585;
  struct FlitChannel * * _586;
  long unsigned int _587;
  struct FlitChannel * & _588;
  struct FlitChannel * _589;
  struct Network * & _590;
  long unsigned int _591;
  int & _592;
  long unsigned int _593;
  struct vector & _594;
  struct vector & _595;
  long unsigned int _596;
  struct list & _597;
  struct vector & _598;
  int & _599;
  struct vector & _600;
  const struct _List_node_base * _601;
  struct list & _602;
  struct vector & _603;
  long unsigned int _604;
  int & _605;
  struct vector & _606;
  int & _607;
  struct vector & _608;
  struct Network * & _609;
  const int _612;
  const int _616;
  struct map & _620;
  long unsigned int _621;
  struct Network * & _622;
  long unsigned int _623;
  struct Network * & _624;
  struct _Rep_type * _625;
  struct Network * & _630;
  struct _Rb_tree_node_base * _631;
  const struct __ctype_type * _655;
  int _673;
  const struct __ctype_type * _691;
  const struct __ctype_type * _698;
  const struct __ctype_type * _724;
  const struct __ctype_type * _760;
  int iftmp.493_781;
  struct map * _787;
  struct map * _788;
  struct map * _789;
  struct map * _790;
  struct map * iftmp.269_791;
  int (*__vtbl_ptr_type) () * _792;
  long int _793;
  sizetype _794;
  struct basic_ios * _795;
  struct basic_ostream & _798;
  char _800;
  char_type _803;
  int (*__vtbl_ptr_type) () * _808;
  int (*__vtbl_ptr_type) () _809;
  void * PROF_813;
  char_type _815;
  struct _Rb_tree_node_base * const _819;
  long unsigned int _826;
  long unsigned int _827;
  int * const _828;
  long unsigned int _829;
  const int & _830;
  int _831;
  int (*__vtbl_ptr_type) () * _833;
  long int _834;
  sizetype _835;
  struct basic_ios * _836;
  struct basic_ostream & _839;
  int _840;
  char _841;
  char_type _844;
  int (*__vtbl_ptr_type) () * _849;
  int (*__vtbl_ptr_type) () _850;
  void * PROF_854;
  char_type _856;
  int (*__vtbl_ptr_type) () * _859;
  long int _860;
  sizetype _861;
  struct basic_ios * _862;
  struct basic_ostream & _865;
  char _867;
  char_type _870;
  int (*__vtbl_ptr_type) () * _875;
  int (*__vtbl_ptr_type) () _876;
  void * PROF_880;
  char_type _882;
  int (*__vtbl_ptr_type) () * _885;
  long int _886;
  sizetype _887;
  struct basic_ios * _888;
  struct basic_ostream & _891;
  char _893;
  char_type _896;
  int (*__vtbl_ptr_type) () * _901;
  int (*__vtbl_ptr_type) () _902;
  void * PROF_906;
  char_type _908;
  struct _List_node_base * _911;
  long unsigned int _912;
  long unsigned int _913;
  long int _914;
  sizetype _915;
  struct basic_ios * _916;
  int _917;
  struct basic_ostream & _919;
  char _921;
  char_type _924;
  int (*__vtbl_ptr_type) () * _929;
  int (*__vtbl_ptr_type) () _930;
  void * PROF_934;
  char_type _936;
  int _976;
  bool _1030;
  bool _1035;
  int _1067;
  long unsigned int pretmp_1311;
  long unsigned int prephitmp_1312;
  int prephitmp_1315;
  int prephitmp_1325;
  int pretmp_1328;
  int prephitmp_1329;
  long unsigned int pretmp_1330;
  long unsigned int prephitmp_1331;
  long unsigned int pretmp_1332;
  long unsigned int pretmp_1334;
  long unsigned int pretmp_1335;
  int prephitmp_1336;
  struct map * pretmp_1339;
  struct map * prephitmp_1340;
  struct map * pretmp_1341;
  struct map * prephitmp_1342;
  struct _Rb_tree_node_base * pretmp_1343;
  struct _Rb_tree_node_base * prephitmp_1344;
  struct _Rb_tree_node_base * pretmp_1345;
  struct _Rb_tree_node_base * prephitmp_1346;
  int pretmp_1348;
  int pretmp_1349;
  int prephitmp_1350;
  long unsigned int pretmp_1351;
  long unsigned int pretmp_1354;
  long unsigned int pretmp_1355;
  long unsigned int pretmp_1389;
  long unsigned int prephitmp_1390;
  int prephitmp_1403;
  struct _Rb_tree_node_base * prephitmp_1404;
  struct _Rb_tree_node_base * prephitmp_1405;
  struct map * prephitmp_1406;
  int pretmp_1408;
  int pretmp_1409;
  int prephitmp_1410;
  long unsigned int pretmp_1411;
  long unsigned int pretmp_1412;
  bool pretmp_1419;
  bool prephitmp_1420;
  int pretmp_1424;
  int pretmp_1425;
  int prephitmp_1426;
  int pretmp_1427;
  int pretmp_1428;
  int prephitmp_1429;
  const size_type prephitmp_1430;
  struct _Rb_tree_node_base * const prephitmp_1431;
  struct _Rb_tree_node_base * prephitmp_1432;
  long unsigned int pretmp_1438;
  long unsigned int pretmp_1439;
  int pretmp_1440;
  int pretmp_1441;
  int prephitmp_1442;
  long unsigned int pretmp_1443;
  long unsigned int pretmp_1445;
  long unsigned int prephitmp_1446;
  struct map * pretmp_1450;
  int pretmp_1457;
  int prephitmp_1458;
  int pretmp_1459;
  int prephitmp_1460;
  struct map * pretmp_1461;
  struct map * pretmp_1463;
  struct _Rb_tree_node_base * pretmp_1464;
  struct _Rb_tree_node_base * prephitmp_1465;
  struct _Rb_tree_node_base * pretmp_1466;
  struct _Rb_tree_node_base * prephitmp_1467;
  struct map * prephitmp_1468;
  struct map * pretmp_1469;
  struct map * prephitmp_1470;
  struct map * pretmp_1471;
  struct _Rb_tree_node_base * pretmp_1472;
  struct _Rb_tree_node_base * prephitmp_1473;
  int pretmp_1474;
  int prephitmp_1475;
  struct _Rb_tree_node_base * pretmp_1476;
  struct _Rb_tree_node_base * prephitmp_1477;

  <bb 2>:
  # DEBUG flits_in_flight => 0
  # DEBUG c => 0
  # DEBUG c => 0
  # DEBUG flits_in_flight => 0
  _1067 = this_61(D)->_classes;
  if (_1067 <= 0)
    goto <bb 506>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_1450 = MEM[(struct map * *)this_61(D) + 672B];

  <bb 4>:
  # flits_in_flight_1069 = PHI <0(3), flits_in_flight_67(5)>
  # c_1068 = PHI <0(3), c_68(5)>
  # DEBUG c => c_1068
  # DEBUG flits_in_flight => flits_in_flight_1069
  _63 = (long unsigned int) c_1068;
  # DEBUG D#3046 => &this_61(D)->_total_in_flight_flits
  # DEBUG D#125 => D#3046
  # DEBUG __n => _63
  # DEBUG this => D#125
  _455 = _63 * 48;
  _434 = pretmp_1450 + _455;
  # DEBUG this => NULL
  _472 = MEM[(long unsigned int *)_434 + 40B];
  # DEBUG D#222 => D#223
  # DEBUG this => D#222
  _66 = _472 != 0;
  flits_in_flight_67 = _66 | flits_in_flight_1069;
  # DEBUG flits_in_flight => flits_in_flight_67
  c_68 = c_1068 + 1;
  # DEBUG c => c_68
  # DEBUG c => c_68
  # DEBUG flits_in_flight => flits_in_flight_67
  if (c_68 >= _1067)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  goto <bb 4>;

  <bb 6>:
  # flits_in_flight_37 = PHI <flits_in_flight_67(4)>
  if (flits_in_flight_37 != 0)
    goto <bb 7>;
  else
    goto <bb 506>;

  <bb 7>:
  _69 = this_61(D)->_deadlock_timer;
  _71 = _69 + 1;
  this_61(D)->_deadlock_timer = _71;
  _73 = this_61(D)->_deadlock_warn_timeout;
  if (_69 >= _73)
    goto <bb 505>;
  else
    goto <bb 506>;

  <bb 8>:
  # DEBUG this => &D.74279
  # DEBUG this => &D.74279
  # DEBUG this => &D.74277
  # DEBUG D#1075 => &D.74277._M_t
  # DEBUG this => D#1075
  # DEBUG D#1074 => &MEM[(struct _Rb_tree *)D#1075]._M_impl
  # DEBUG this => D#1074
  # DEBUG this => D#1074
  # DEBUG this => D#1074
  MEM[(struct _Rb_tree_impl *)&D.74277]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&D.74277]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&D.74277]._M_node_count = 0;
  # DEBUG this => D#1074
  MEM[(struct _Rb_tree_impl *)&D.74277]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&D.74277]._M_header;
  MEM[(struct _Rb_tree_impl *)&D.74277]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&D.74277]._M_header;
  _77 = this_61(D)->_subnets;
  _78 = (long unsigned int) _77;
  # DEBUG this => &flits
  # DEBUG __n => _78
  # DEBUG __value => &D.74277
  # DEBUG __a => &D.74279
  # DEBUG D#2423 => &flits.D.61585
  # DEBUG this => D#2423
  # DEBUG __n => _78
  # DEBUG __a => &D.74279
  # DEBUG D#2058 => &D#2423->_M_impl
  # DEBUG this => D#2058
  # DEBUG __a => &D.74279
  # DEBUG this => D#2058
  # DEBUG __a => &D.74279
  # DEBUG this => D#2058
  # DEBUG D.121274 => &D.74279
  MEM[(struct _Vector_impl *)&flits]._M_start = 0B;
  MEM[(struct _Vector_impl *)&flits]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&flits]._M_end_of_storage = 0B;
  # DEBUG this => D#2423
  # DEBUG __n => _78
  # DEBUG D#2056 => D#2423
  # DEBUG __n => _78
  # DEBUG this => D#2056
  # DEBUG D#2055 => D#2056
  if (_78 != 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  pretmp_1311 = _78 * 48;
  goto <bb 14>;

  <bb 10>:
  # DEBUG D#2054 => &D#2055->_M_impl
  # DEBUG D#2053 => D#2054
  # DEBUG __n => _78
  # DEBUG __a => D#2053
  # DEBUG D#2052 => D#2053
  # DEBUG D#2050 => D#2052
  # DEBUG D#2051 => 0B
  # DEBUG __n => _78
  # DEBUG this => D#2050
  # DEBUG D.163091 => D#2051
  # DEBUG D#2049 => D#2050
  # DEBUG D#2043 => D#2049
  # DEBUG this => D#2043
  if (_78 > 384307168202282325)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  std::__throw_bad_alloc ();

  <bb 12>:
  _79 = _78 * 48;
  _790 = operator new (_79);
  goto <bb 14>;

<L209>:
  goto <bb 496> (<L194>);

  <bb 14>:
  # iftmp.269_791 = PHI <0B(9), _790(12)>
  # prephitmp_1312 = PHI <pretmp_1311(9), _79(12)>
  MEM[(struct _Vector_base *)&flits]._M_impl._M_start = iftmp.269_791;
  MEM[(struct _Vector_base *)&flits]._M_impl._M_finish = iftmp.269_791;
  _787 = iftmp.269_791 + prephitmp_1312;
  MEM[(struct _Vector_base *)&flits]._M_impl._M_end_of_storage = _787;
  # DEBUG D#2421 => &flits
  # DEBUG D#2421 => &flits
  # DEBUG __n => _78
  # DEBUG __value => &D.74277
  # DEBUG D#2420 => D#2421
  # DEBUG this => D#2420
  # DEBUG this => D#2421
  # DEBUG D#2419 => &D#2420->D.61585
  # DEBUG this => D#2419
  # DEBUG __first => NULL
  # DEBUG __n => _78
  # DEBUG __x => &D.74277
  # DEBUG D.163075 => D#2418
  # DEBUG __first => NULL
  # DEBUG __n => _78
  # DEBUG __x => &D.74277
  # DEBUG __assignable => 1
  _788 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::map<int, Flit*>*, long unsigned int, std::map<int, Flit*> > (iftmp.269_791, _78, &D.74277);

  <bb 15>:
  MEM[(struct map * *)&flits + 8B] = _788;
  # DEBUG this => &D.74277
  # DEBUG this => &D.74277._M_t
  _76 = MEM[(struct _Rb_tree_node_base * *)&D.74277 + 16B];
  # DEBUG D#214 => &D.74277._M_t
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (&D.74277._M_t, _76);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)&D.74277]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  D.74277 ={v} {CLOBBER};
  # DEBUG this => &D.74279
  # DEBUG this => &D.74279
  _83 = this_61(D)->_subnets;
  # DEBUG subnet => 0
  # DEBUG subnet => 0
  if (_83 > 0)
    goto <bb 39>;
  else
    goto <bb 43>;

<L207>:
  # DEBUG D#2422 => &flits.D.61585
  # DEBUG this => D#2422
  # DEBUG D#884 => D#2422->_M_impl._M_end_of_storage
  # DEBUG D#883 => (long int) D#884
  _789 = MEM[(struct _Vector_base *)&flits]._M_impl._M_start;
  # DEBUG D#882 => (long int) _789
  # DEBUG D#881 => D#883 - D#882
  # DEBUG D#880 => D#881 /[ex] 48
  # DEBUG D#877 => D#2422
  # DEBUG D#878 => (long unsigned int) D#880
  # DEBUG __p => _789
  # DEBUG this => D#877
  # DEBUG __n => D#878
  # DEBUG D#876 => D#878
  # DEBUG D#875 => D#877
  if (_789 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG D#874 => &D#875->_M_impl
  # DEBUG D#872 => D#874
  # DEBUG D#873 => D#876
  # DEBUG __p => _789
  # DEBUG __a => D#872
  # DEBUG __n => D#873
  # DEBUG D#871 => D#873
  # DEBUG D#870 => D#872
  # DEBUG D#868 => D#870
  # DEBUG D#869 => D#871
  # DEBUG __p => _789
  # DEBUG this => D#868
  # DEBUG D.163059 => D#869
  operator delete (_789);

  <bb 18>:
  # DEBUG D#879 => &D#2422->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)&flits] ={v} {CLOBBER};
  resx 32

<L210>:
  goto <bb 496> (<L194>);

  <bb 20>:

  <bb 21>:
  # n_1027 = PHI <0(41), n_141(20)>
  # DEBUG n => n_1027
  # DEBUG D#3825 => (long unsigned int) subnet_1050
  # DEBUG D#3040 => &this_61(D)->_net
  _505 = MEM[(struct Network * * *)this_61(D) + 184B];
  # DEBUG D#64 => D#3040
  # DEBUG __n => D#3825
  # DEBUG this => D#64
  _431 = _505 + pretmp_1439;
  _89 = *_431;
  _90 = _89->D.50340.D.43877._vptr.Module;
  _91 = MEM[(int (*__vtbl_ptr_type) () *)_90 + 72B];
  _93 = OBJ_TYPE_REF(_91;(struct Network)_89->9) (_89, n_1027);
  # DEBUG f => _93
  if (_93 != 0B)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  goto <bb 34>;

  <bb 23>:
  _94 = _93->watch;
  if (_94 != 0)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 24>:
  _95 = _93->vc;
  _96 = _93->pid;
  _97 = _93->id;
  _99 = GetSimTime ();
  gWatchOut.489_100 = gWatchOut;
  _102 = std::basic_ostream<char>::operator<< (gWatchOut.489_100, _99);
  # DEBUG __out => _102
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_102, " | ", 3);
  # DEBUG __out => _102
  # DEBUG __s => "node"
  # DEBUG __s => "node"
  std::__ostream_insert<char, std::char_traits<char> > (_102, "node", 4);
  _105 = std::basic_ostream<char>::operator<< (_102, n_1027);
  # DEBUG __out => _105
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_105, " | ", 3);
  # DEBUG __out => _105
  # DEBUG __s => "Ejecting flit "
  # DEBUG __s => "Ejecting flit "
  std::__ostream_insert<char, std::char_traits<char> > (_105, "Ejecting flit ", 14);
  _107 = std::basic_ostream<char>::operator<< (_105, _97);
  # DEBUG __out => _107
  # DEBUG __s => " (packet "
  # DEBUG __s => " (packet "
  std::__ostream_insert<char, std::char_traits<char> > (_107, " (packet ", 9);
  _109 = std::basic_ostream<char>::operator<< (_107, _96);
  # DEBUG __out => _109
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_109, ")", 1);
  # DEBUG __out => _109
  # DEBUG __s => " from VC "
  # DEBUG __s => " from VC "
  std::__ostream_insert<char, std::char_traits<char> > (_109, " from VC ", 9);
  _111 = std::basic_ostream<char>::operator<< (_109, _95);
  # DEBUG __out => _111
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_111, ".", 1);
  # DEBUG this => _111
  # DEBUG __pf => endl
  # DEBUG __os => _111
  _792 = _111->_vptr.basic_ostream;
  _793 = MEM[(long int *)_792 + -24B];
  _794 = (sizetype) _793;
  _795 = _111 + _794;
  # DEBUG this => _795
  # DEBUG __c => 10
  _655 = MEM[(const struct basic_ios *)_795]._M_ctype;
  # DEBUG __f => _655
  if (_655 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  std::__throw_bad_cast ();

  <bb 26>:
  # DEBUG this => _655
  # DEBUG __c => 10
  _800 = MEM[(const struct ctype *)_655]._M_widen_ok;
  if (_800 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _803 = MEM[(const struct ctype *)_655]._M_widen[10];
  pretmp_1440 = (int) _803;
  goto <bb 30>;

  <bb 28>:
  # DEBUG this => _655
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_655);
  _808 = MEM[(const struct ctype *)_655].D.16885._vptr.facet;
  _809 = MEM[(int (*__vtbl_ptr_type) () *)_808 + 48B];
  PROF_813 = [obj_type_ref] OBJ_TYPE_REF(_809;(const struct ctype)_655->6);
  if (PROF_813 == do_widen)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  _815 = OBJ_TYPE_REF(_809;(const struct ctype)_655->6) (_655, 10);
  pretmp_1441 = (int) _815;

  <bb 30>:
  # prephitmp_1442 = PHI <pretmp_1440(27), 10(28), pretmp_1441(29)>
  _798 = std::basic_ostream<char>::put (_111, prephitmp_1442);
  # DEBUG __os => _798
  std::basic_ostream<char>::flush (_798);

  <bb 31>:
  # DEBUG __x => n_1027
  # DEBUG __y => _93
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG this => &D.74284
  # DEBUG __p => &D.74283
  D.74284.first = n_1027;
  D.74284.second = _93;
  _535 = MEM[(struct map * *)&flits];
  # DEBUG D#125 => &flits
  # DEBUG __n => D#3825
  # DEBUG this => D#125
  _407 = _535 + _408;
  # DEBUG this => NULL
  # DEBUG __x => &D.74284
  _103 = &_407->_M_t;
  D.155068 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_insert_unique (_103, &D.74284);
  D.74284 ={v} {CLOBBER};
  _115 = this_61(D)->_sim_state;
  if (_115 <= 1)
    goto <bb 32>;
  else
    goto <bb 22>;

  <bb 32>:
  _116 = (long unsigned int) n_1027;
  _117 = _93->cl;
  _118 = (long unsigned int) _117;
  # DEBUG D#3041 => &this_61(D)->_accepted_flits
  _514 = MEM[(struct vector * *)this_61(D) + 1648B];
  # DEBUG D#67 => D#3041
  # DEBUG __n => _118
  # DEBUG this => D#67
  _374 = _118 * 24;
  _371 = _514 + _374;
  _496 = MEM[(int * *)_371];
  # DEBUG __n => _116
  # DEBUG this => D#63
  _112 = _116 * 4;
  _377 = _496 + _112;
  _120 = *_377;
  _121 = _120 + 1;
  *_377 = _121;
  _123 = _93->tail;
  if (_123 != 0)
    goto <bb 33>;
  else
    goto <bb 22>;

  <bb 33>:
  _124 = _93->cl;
  _125 = (long unsigned int) _124;
  # DEBUG D#3042 => &this_61(D)->_accepted_packets
  _515 = MEM[(struct vector * *)this_61(D) + 1456B];
  # DEBUG D#67 => D#3042
  # DEBUG __n => _125
  # DEBUG this => D#67
  _348 = _125 * 24;
  _346 = _515 + _348;
  _497 = MEM[(int * *)_346];
  # DEBUG __n => _116
  # DEBUG this => D#63
  _349 = _497 + _112;
  _127 = *_349;
  _128 = _127 + 1;
  *_349 = _128;

  <bb 34>:
  # DEBUG D#3043 => &this_61(D)->_net
  _506 = MEM[(struct Network * * *)this_61(D) + 184B];
  # DEBUG D#64 => D#3043
  # DEBUG __n => D#3825
  # DEBUG this => D#64
  _287 = _506 + pretmp_1439;
  _130 = *_287;
  _131 = _130->D.50340.D.43877._vptr.Module;
  _132 = MEM[(int (*__vtbl_ptr_type) () *)_131 + 88B];
  _134 = OBJ_TYPE_REF(_132;(struct Network)_130->11) (_130, n_1027);
  # DEBUG c => _134
  if (_134 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  _135 = (long unsigned int) n_1027;
  # DEBUG D#3044 => &this_61(D)->_buf_states
  _523 = MEM[(struct vector * *)this_61(D) + 536B];
  # DEBUG D#72 => D#3044
  # DEBUG __n => _135
  # DEBUG this => D#72
  _254 = _135 * 24;
  _253 = _523 + _254;
  _528 = MEM[(struct BufferState * * *)_253];
  # DEBUG __n => D#3825
  # DEBUG this => D#76
  _266 = _528 + pretmp_1439;
  _138 = *_266;
  BufferState::ProcessCredit (_138, _134);
  Credit::Free (_134);

  <bb 36>:
  n_141 = n_1027 + 1;
  # DEBUG n => n_141
  # DEBUG n => n_141
  _85 = this_61(D)->_nodes;
  if (_85 <= n_141)
    goto <bb 37>;
  else
    goto <bb 20>;

  <bb 37>:
  # prephitmp_1446 = PHI <pretmp_1439(36), pretmp_1445(42)>
  # DEBUG D#3045 => &this_61(D)->_net
  _507 = MEM[(struct Network * * *)this_61(D) + 184B];
  # DEBUG D#64 => D#3045
  # DEBUG __n => (long unsigned int) subnet_1050
  # DEBUG this => D#64
  _225 = _507 + prephitmp_1446;
  _144 = *_225;
  _145 = _144->D.50340.D.43877._vptr.Module;
  _146 = MEM[(int (*__vtbl_ptr_type) () *)_145 + 24B];
  OBJ_TYPE_REF(_146;(struct Network)_144->3) (_144);
  subnet_148 = subnet_1050 + 1;
  # DEBUG subnet => subnet_148
  # DEBUG subnet => subnet_148
  if (_83 > subnet_148)
    goto <bb 38>;
  else
    goto <bb 43>;

  <bb 38>:
  goto <bb 40>;

  <bb 39>:

  <bb 40>:
  # subnet_1050 = PHI <0(39), subnet_148(38)>
  # DEBUG subnet => subnet_1050
  # DEBUG n => 0
  _19 = this_61(D)->_nodes;
  if (_19 <= 0)
    goto <bb 42>;
  else
    goto <bb 41>;

  <bb 41>:
  pretmp_1438 = (long unsigned int) subnet_1050;
  pretmp_1439 = pretmp_1438 * 8;
  _408 = pretmp_1438 * 48;
  goto <bb 21>;

  <bb 42>:
  pretmp_1443 = (long unsigned int) subnet_1050;
  pretmp_1445 = pretmp_1443 * 8;
  goto <bb 37>;

  <bb 43>:
  _149 = this_61(D)->_empty_network;
  if (_149 != 0)
    goto <bb 44>;
  else
    goto <bb 46>;

  <bb 44>:
  # DEBUG subnet => 0
  _976 = this_61(D)->_subnets;
  if (_976 <= 0)
    goto <bb 45>;
  else
    goto <bb 47>;

  <bb 45>:
  _478 = this_61(D)->_time;
  _479 = _478 + 1;
  this_61(D)->_time = _479;
  if (_479 == 0)
    goto <bb 486>;
  else
    goto <bb 487>;

  <bb 46>:
  TrafficManager::_Inject (this_61(D));
  goto <bb 44>;

  <bb 47>:
  pretmp_1457 = this_61(D)->_nodes;

  <bb 48>:
  # subnet_1053 = PHI <0(47), subnet_427(418)>
  # prephitmp_1315 = PHI <_976(47), prephitmp_1460(418)>
  # prephitmp_1458 = PHI <pretmp_1457(47), prephitmp_1325(418)>
  # DEBUG subnet => subnet_1053
  # DEBUG n => 0
  if (prephitmp_1458 <= 0)
    goto <bb 417>;
  else
    goto <bb 51>;

  <bb 49>:
  # prephitmp_23 = PHI <prephitmp_1325(417)>
  # prephitmp_1403 = PHI <prephitmp_1460(417)>
  # DEBUG subnet => 0
  if (prephitmp_1403 <= 0)
    goto <bb 45>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 419>;

  <bb 51>:
  pretmp_1351 = (long unsigned int) subnet_1053;
  pretmp_1354 = pretmp_1351 * 8;
  pretmp_1355 = pretmp_1351 * 4;
  _113 = pretmp_1351 * 24;
  pretmp_1412 = pretmp_1351 * 24;
  _593 = pretmp_1351 * 24;

  <bb 52>:
  # n_1052 = PHI <0(51), n_426(312)>
  # DEBUG n => n_1052
  # DEBUG f => 0B
  # DEBUG D#3824 => (long unsigned int) subnet_1053
  _154 = (long unsigned int) n_1052;
  # DEBUG D#3047 => &this_61(D)->_buf_states
  _524 = MEM[(struct vector * *)this_61(D) + 536B];
  # DEBUG D#72 => D#3047
  # DEBUG __n => _154
  # DEBUG this => D#72
  _178 = _154 * 24;
  _170 = _524 + _178;
  _529 = MEM[(struct BufferState * * *)_170];
  # DEBUG __n => D#3824
  # DEBUG this => D#76
  _179 = _529 + pretmp_1354;
  dest_buf_155 = *_179;
  # DEBUG dest_buf => dest_buf_155
  # DEBUG D#3048 => &this_61(D)->_last_class
  _516 = MEM[(struct vector * *)this_61(D) + 456B];
  # DEBUG D#67 => D#3048
  # DEBUG __n => _154
  # DEBUG this => D#67
  _193 = _516 + _178;
  _498 = MEM[(int * *)_193];
  # DEBUG __n => D#3824
  # DEBUG this => D#63
  _202 = _498 + pretmp_1355;
  last_class_157 = *_202;
  # DEBUG last_class => last_class_157
  class_limit_158 = this_61(D)->_classes;
  # DEBUG class_limit => class_limit_158
  _159 = this_61(D)->_hold_switch_for_packet;
  if (_159 != 0)
    goto <bb 53>;
  else
    goto <bb 508>;

  <bb 53>:
  _160 = (long unsigned int) last_class_157;
  # DEBUG D#3049 => &this_61(D)->_partial_packets
  _530 = MEM[(struct vector * *)this_61(D) + 648B];
  # DEBUG D#78 => D#3049
  # DEBUG __n => _154
  # DEBUG this => D#78
  _156 = _530 + _178;
  _538 = MEM[(struct list * *)_156];
  # DEBUG __n => _160
  # DEBUG this => D#127
  _162 = _160 * 24;
  _161 = _538 + _162;
  # DEBUG pp => NULL
  # DEBUG this => NULL
  _169 = MEM[(const struct list *)_161].D.71295._M_impl._M_node.D.37893._M_next;
  _168 = &MEM[(const struct list *)_161].D.71295._M_impl._M_node.D.37893;
  if (_168 != _169)
    goto <bb 54>;
  else
    goto <bb 507>;

  <bb 54>:
  # DEBUG this => _161
  # DEBUG D#312 => _161
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => _169
  # DEBUG this => NULL
  _163 = MEM[(struct Flit * const &)_169 + 16];
  _164 = _163->head;
  if (_164 != 0)
    goto <bb 507>;
  else
    goto <bb 55>;

  <bb 55>:
  # DEBUG this => _161
  # DEBUG D#312 => _161
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => _169
  # DEBUG this => NULL
  _165 = _163->vc;
  _493 = MEM[(struct BufferPolicy * *)dest_buf_155 + 144B];
  # DEBUG D#56 => dest_buf_155
  # DEBUG vc => _165
  # DEBUG this => D#56
  _143 = _493->D.50434._vptr.Module;
  _137 = MEM[(int (*__vtbl_ptr_type) () *)_143 + 56B];
  _136 = OBJ_TYPE_REF(_137;(const struct BufferPolicy)_493->7) (_493, _165);
  goto <bb 57>;

<L212>:
  goto <bb 504> (<L205>);

  <bb 57>:
  if (_136 != 0)
    goto <bb 507>;
  else
    goto <bb 509>;

  <bb 58>:
  __assert_fail ("f->vc == _last_vc[n][subnet][last_class]", "trafficmanager.cpp", 1034, &__PRETTY_FUNCTION__);

  <bb 59>:
  class_limit_172 = class_limit_158 + -1;
  # DEBUG class_limit => class_limit_172
  # DEBUG class_limit => class_limit_172
  # DEBUG f => f_166
  # DEBUG i => 1
  # DEBUG i => 1
  # DEBUG f => f_166
  if (class_limit_172 <= 0)
    goto <bb 310>;
  else
    goto <bb 60>;

  <bb 60>:
  # f_25 = PHI <f_166(59), 0B(508)>
  # class_limit_3 = PHI <class_limit_172(59), class_limit_158(508)>
  _550 = _154 * 8;

  <bb 61>:
  # f_1034 = PHI <f_25(60), f_8(309)>
  # i_990 = PHI <1(60), i_329(309)>
  # DEBUG i => i_990
  # DEBUG f => f_1034
  _174 = last_class_157 + i_990;
  _175 = this_61(D)->_classes;
  c_176 = _174 % _175;
  # DEBUG c => c_176
  _177 = (long unsigned int) c_176;
  # DEBUG D#3051 => &this_61(D)->_partial_packets
  _531 = MEM[(struct vector * *)this_61(D) + 648B];
  # DEBUG D#78 => D#3051
  # DEBUG __n => _154
  # DEBUG this => D#78
  _547 = _531 + _178;
  _539 = MEM[(struct list * *)_547];
  # DEBUG __n => _177
  # DEBUG this => D#127
  _545 = _177 * 24;
  _546 = _539 + _545;
  # DEBUG pp => NULL
  # DEBUG this => NULL
  _543 = MEM[(const struct list *)_546].D.71295._M_impl._M_node.D.37893._M_next;
  _544 = &MEM[(const struct list *)_546].D.71295._M_impl._M_node.D.37893;
  if (_543 == _544)
    goto <bb 307>;
  else
    goto <bb 62>;

  <bb 62>:
  # DEBUG this => _546
  # DEBUG D#312 => _546
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => _543
  # DEBUG this => NULL
  f_181 = MEM[(struct Flit * const &)_543 + 16];
  # DEBUG cf => f_181
  if (f_181 == 0B)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  __assert_fail ("cf", "trafficmanager.cpp", 1053, &__PRETTY_FUNCTION__);

  <bb 64>:
  _182 = f_181->cl;
  if (c_176 != _182)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  __assert_fail ("cf->cl == c", "trafficmanager.cpp", 1054, &__PRETTY_FUNCTION__);

  <bb 66>:
  _183 = f_181->subnetwork;
  if (_183 != subnet_1053)
    goto <bb 307>;
  else
    goto <bb 67>;

  <bb 67>:
  if (f_1034 != 0B)
    goto <bb 68>;
  else
    goto <bb 69>;

  <bb 68>:
  _184 = f_1034->pri;
  _185 = f_181->pri;
  if (_184 >= _185)
    goto <bb 307>;
  else
    goto <bb 69>;

  <bb 69>:
  _186 = f_181->head;
  if (_186 != 0)
    goto <bb 70>;
  else
    goto <bb 248>;

  <bb 70>:
  _187 = f_181->vc;
  if (_187 == -1)
    goto <bb 71>;
  else
    goto <bb 281>;

  <bb 71>:
  # DEBUG this => &route_set
  # DEBUG D#1135 => &route_set._outputs
  # DEBUG this => D#1135
  # DEBUG D#1134 => &D#1135->_M_t
  # DEBUG this => D#1134
  # DEBUG D#1133 => &MEM[(struct _Rb_tree *)D#1134]._M_impl
  # DEBUG this => D#1133
  # DEBUG this => D#1133
  # DEBUG this => D#1133
  MEM[(struct _Rb_tree_impl *)&route_set]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&route_set]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&route_set]._M_node_count = 0;
  # DEBUG this => D#1133
  MEM[(struct _Rb_tree_impl *)&route_set]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&route_set]._M_header;
  MEM[(struct _Rb_tree_impl *)&route_set]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&route_set]._M_header;
  _189 = this_61(D)->_rf;
  _189 (0B, f_181, -1, &route_set, 1);

  <bb 72>:
  _192 = OutputSet::GetSet (&route_set);
  goto <bb 74>;

<L214>:
  goto <bb 498> (<L201>);

  <bb 74>:
  # DEBUG os => _192
  # DEBUG this => _192
  # DEBUG D#228 => &_192->_M_t
  _188 = MEM[(long unsigned int *)_192 + 40B];
  # DEBUG D#227 => D#228
  # DEBUG this => D#227
  if (_188 != 1)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  __assert_fail ("os.size() == 1", "trafficmanager.cpp", 1069, &__PRETTY_FUNCTION__);

  <bb 76>:
  # DEBUG this => _192
  # DEBUG D#359 => &_192->_M_t
  _548 = MEM[(struct _Rb_tree_node_base * *)_192 + 24B];
  # DEBUG D#358 => D#359
  # DEBUG this => D#358
  # DEBUG this => NULL
  # DEBUG __x => _548
  # DEBUG this => &D.74363
  # DEBUG this => _548
  # DEBUG D#3052 => &MEM[(const struct _Rb_tree_node *)_548]._M_value_field
  # DEBUG __r => D#3052
  # DEBUG se => D#3052
  _194 = MEM[(const struct sSetElement &)_548 + 32].output_port;
  if (_194 != -1)
    goto <bb 77>;
  else
    goto <bb 78>;

  <bb 77>:
  __assert_fail ("se.output_port == -1", "trafficmanager.cpp", 1071, &__PRETTY_FUNCTION__);

  <bb 78>:
  vc_start_195 = MEM[(const struct sSetElement &)_548 + 32].vc_start;
  # DEBUG vc_start => vc_start_195
  vc_end_196 = MEM[(const struct sSetElement &)_548 + 32].vc_end;
  # DEBUG vc_end => vc_end_196
  _197 = vc_end_196 - vc_start_195;
  vc_count_198 = _197 + 1;
  # DEBUG vc_count => vc_count_198
  _199 = this_61(D)->_noq;
  if (_199 != 0)
    goto <bb 79>;
  else
    goto <bb 128>;

  <bb 79>:
  _200 = this_61(D)->_lookahead_routing;
  if (_200 != 0)
    goto <bb 81>;
  else
    goto <bb 80>;

  <bb 80>:
  __assert_fail ("_lookahead_routing", "trafficmanager.cpp", 1076, &__PRETTY_FUNCTION__);

  <bb 81>:
  # DEBUG D#3053 => &this_61(D)->_net
  _508 = MEM[(struct Network * * *)this_61(D) + 184B];
  # DEBUG D#64 => D#3053
  # DEBUG __n => D#3824
  # DEBUG this => D#64
  _553 = _508 + pretmp_1354;
  _201 = *_553;
  # DEBUG this => _201
  # DEBUG index => n_1052
  # DEBUG D#58 => &_201->_inject
  _549 = MEM[(struct FlitChannel * * *)_201 + 136B];
  # DEBUG D#57 => D#58
  # DEBUG __n => _154
  # DEBUG this => D#57
  _551 = _549 + _550;
  _552 = *_551;
  # DEBUG inject => _552
  _490 = MEM[(const struct Router * *)_552 + 216B];
  # DEBUG D#51 => _552
  # DEBUG this => D#51
  # DEBUG router => NULL
  if (_490 == 0B)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  __assert_fail ("router", "trafficmanager.cpp", 1079, &__PRETTY_FUNCTION__);

  <bb 83>:
  # DEBUG this => _552
  in_channel_204 = MEM[(const int &)_552 + 224];
  # DEBUG in_channel => in_channel_204
  f_181->vc = vc_start_195;
  _206 = this_61(D)->_rf;
  _207 = &f_181->la_route_set;
  _206 (_490, f_181, in_channel_204, _207, 0);
  goto <bb 85>;

<L215>:
  goto <bb 498> (<L201>);

  <bb 85>:
  f_181->vc = -1;
  _210 = f_181->watch;
  if (_210 != 0)
    goto <bb 87>;
  else
    goto <bb 86>;

  <bb 86>:
  _223 = OutputSet::GetSet (_207);
  goto <bb 108>;

  <bb 87>:
  _211 = f_181->id;
  _213 = GetSimTime ();
  goto <bb 89>;

<L216>:
  goto <bb 498> (<L201>);

  <bb 89>:
  gWatchOut.489_214 = gWatchOut;
  _216 = std::basic_ostream<char>::operator<< (gWatchOut.489_214, _213);
  goto <bb 91>;

<L217>:
  goto <bb 498> (<L201>);

  <bb 91>:
  # DEBUG __out => _216
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_216, " | ", 3);
  goto <bb 93>;

<L218>:
  goto <bb 498> (<L201>);

  <bb 93>:
  # DEBUG __out => _216
  # DEBUG __s => "node"
  # DEBUG __s => "node"
  std::__ostream_insert<char, std::char_traits<char> > (_216, "node", 4);
  goto <bb 95>;

<L219>:
  goto <bb 498> (<L201>);

  <bb 95>:
  _218 = std::basic_ostream<char>::operator<< (_216, n_1052);
  goto <bb 97>;

<L220>:
  goto <bb 498> (<L201>);

  <bb 97>:
  # DEBUG __out => _218
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_218, " | ", 3);
  goto <bb 99>;

<L221>:
  goto <bb 498> (<L201>);

  <bb 99>:
  # DEBUG __out => _218
  # DEBUG __s => "Generating lookahead routing info for flit "
  # DEBUG __s => "Generating lookahead routing info for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_218, "Generating lookahead routing info for flit ", 43);
  goto <bb 101>;

<L222>:
  goto <bb 498> (<L201>);

  <bb 101>:
  _220 = std::basic_ostream<char>::operator<< (_218, _211);
  goto <bb 103>;

<L223>:
  goto <bb 498> (<L201>);

  <bb 103>:
  # DEBUG __out => _220
  # DEBUG __s => " (NOQ)."
  # DEBUG __s => " (NOQ)."
  std::__ostream_insert<char, std::char_traits<char> > (_220, " (NOQ).", 7);
  goto <bb 105>;

<L224>:
  goto <bb 498> (<L201>);

  <bb 105>:
  # DEBUG this => _220
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_220);
  goto <bb 86>;

<L225>:
  goto <bb 498> (<L201>);

<L226>:
  goto <bb 498> (<L201>);

  <bb 108>:
  # DEBUG this => &sl
  # DEBUG __x => _223
  # DEBUG D#3817 => &_223->_M_t
  # DEBUG this => &sl._M_t
  # DEBUG __x => D#3817
  # DEBUG this => D#3817
  # DEBUG __a => NULL
  # DEBUG D#3037 => &MEM[(const struct _Rb_tree &)D#3817]._M_impl._M_key_compare
  # DEBUG D#3036 => &MEM[(struct _Rb_tree *)&sl]._M_impl
  # DEBUG this => D#3036
  # DEBUG __comp => D#3037
  # DEBUG __a => NULL
  # DEBUG this => D#3036
  # DEBUG __a => NULL
  # DEBUG this => D#3036
  # DEBUG D.121299 => NULL
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&sl]._M_node_count = 0;
  # DEBUG this => D#3036
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&sl]._M_header;
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&sl]._M_header;
  _819 = MEM[(struct _Rb_tree_node_base * *)_223 + 16B];
  # DEBUG D#360 => D#3817
  # DEBUG this => D#360
  if (_819 != 0B)
    goto <bb 109>;
  else
    goto <bb 118>;

  <bb 109>:
  # DEBUG this => &sl._M_t
  # DEBUG this => &sl._M_t
  # DEBUG D#361 => D#3817
  # DEBUG this => D#361
  # DEBUG this => &sl._M_t
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => &sl._M_t
  __an._M_t = &sl._M_t;
  __x_821 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node> (&sl._M_t, _819, &MEM[(struct _Rb_tree *)&sl]._M_impl._M_header, &__an);
  goto <bb 111>;

<L227>:
  goto <bb 498> (<L201>);

  <bb 111>:
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)&sl + 16] = __x_821;
  # DEBUG this => &sl._M_t
  # DEBUG this => &sl._M_t
  # DEBUG __x => __x_821

  <bb 112>:
  # __x_822 = PHI <__x_821(111), __x_823(113)>
  # DEBUG __x => __x_822
  __x_823 = __x_822->_M_left;
  if (__x_823 == 0B)
    goto <bb 114>;
  else
    goto <bb 113>;

  <bb 113>:
  goto <bb 112>;

  <bb 114>:
  # __x_1049 = PHI <__x_822(112)>
  MEM[(struct _Rb_tree_node_base * &)&sl + 24] = __x_1049;
  # DEBUG this => &sl._M_t
  # DEBUG this => &sl._M_t
  # DEBUG __x => __x_821

  <bb 115>:
  # __x_824 = PHI <__x_821(114), __x_825(116)>
  # DEBUG __x => __x_824
  __x_825 = __x_824->_M_right;
  if (__x_825 == 0B)
    goto <bb 117>;
  else
    goto <bb 116>;

  <bb 116>:
  goto <bb 115>;

  <bb 117>:
  # __x_1055 = PHI <__x_824(115)>
  MEM[(struct _Rb_tree_node_base * &)&sl + 32] = __x_1055;
  _826 = MEM[(const struct _Rb_tree &)_223]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)&sl]._M_impl._M_node_count = _826;

  <bb 118>:
  # prephitmp_1430 = PHI <_826(117), 0(108)>
  # prephitmp_1431 = PHI <__x_1049(117), &MEM[(struct _Rb_tree_impl *)&sl]._M_header(108)>
  # prephitmp_1432 = PHI <__x_821(117), 0B(108)>
  # DEBUG this => &sl
  # DEBUG D#228 => &sl._M_t
  # DEBUG D#227 => D#228
  # DEBUG this => D#227
  if (prephitmp_1430 != 1)
    goto <bb 119>;
  else
    goto <bb 120>;

  <bb 119>:
  __assert_fail ("sl.size() == 1", "trafficmanager.cpp", 1096, &__PRETTY_FUNCTION__);

  <bb 120>:
  # DEBUG this => &sl
  # DEBUG D#359 => &sl._M_t
  # DEBUG D#3823 => MEM[(struct _Rb_tree_node_base * *)&sl + 24B]
  # DEBUG D#358 => D#359
  # DEBUG this => D#358
  # DEBUG this => NULL
  # DEBUG __x => D#3823
  # DEBUG this => &D.74373
  # DEBUG this => D#3823
  # DEBUG D#3054 => &MEM[(const struct _Rb_tree_node *)D#3823]._M_value_field
  # DEBUG __r => D#3054
  next_output_226 = MEM[(const struct sSetElement *)prephitmp_1431 + 32B].output_port;
  # DEBUG next_output => next_output_226
  _492 = MEM[(int *)_490 + 104B];
  # DEBUG this => D#52
  vc_count_228 = vc_count_198 / _492;
  # DEBUG vc_count => vc_count_228
  _229 = next_output_226 * vc_count_228;
  vc_start_230 = vc_start_195 + _229;
  # DEBUG vc_start => vc_start_230
  _231 = vc_count_228 + vc_start_230;
  vc_end_232 = _231 + -1;
  # DEBUG vc_end => vc_end_232
  _233 = MEM[(const struct sSetElement &)_548 + 32].vc_start;
  if (vc_start_230 < _233)
    goto <bb 122>;
  else
    goto <bb 121>;

  <bb 121>:
  _234 = MEM[(const struct sSetElement &)_548 + 32].vc_end;
  if (vc_start_230 > _234)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  __assert_fail ("vc_start >= se.vc_start && vc_start <= se.vc_end", "trafficmanager.cpp", 1101, &__PRETTY_FUNCTION__);

  <bb 123>:
  _30 = vc_end_232 > _234;
  _1035 = vc_end_232 < _233;
  _1030 = _30 | _1035;
  if (_1030 != 0)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  __assert_fail ("vc_end >= se.vc_start && vc_end <= se.vc_end", "trafficmanager.cpp", 1102, &__PRETTY_FUNCTION__);

  <bb 125>:
  if (vc_start_230 > vc_end_232)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  __assert_fail ("vc_start <= vc_end", "trafficmanager.cpp", 1103, &__PRETTY_FUNCTION__);

  <bb 127>:
  # DEBUG this => &sl
  # DEBUG this => &sl._M_t
  # DEBUG D#192 => &sl._M_t
  # DEBUG this => D#192
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&sl._M_t, prephitmp_1432);
  # DEBUG D#1635 => &MEM[(struct _Rb_tree *)&sl]._M_impl
  # DEBUG this => D#1635
  # DEBUG this => D#1635
  # DEBUG this => D#1635
  sl ={v} {CLOBBER};

  <bb 128>:
  # vc_start_11 = PHI <vc_start_195(78), vc_start_230(127)>
  # vc_end_12 = PHI <vc_end_196(78), vc_end_232(127)>
  # vc_count_13 = PHI <vc_count_198(78), vc_count_228(127)>
  # DEBUG vc_count => vc_count_13
  # DEBUG vc_end => vc_end_12
  # DEBUG vc_start => vc_start_11
  _243 = f_181->watch;
  if (_243 != 0)
    goto <bb 131>;
  else
    goto <bb 129>;

  <bb 129>:
  # DEBUG i => 1
  if (vc_count_13 <= 0)
    goto <bb 130>;
  else
    goto <bb 149>;

  <bb 130>:
  goto <bb 247>;

  <bb 131>:
  _244 = f_181->id;
  # DEBUG D#3055 => &this_61(D)->D.65070
  # DEBUG this => D#3055
  # DEBUG D#3056 => &MEM[(const struct Module *)this_61(D)]._fullname
  _246 = GetSimTime ();
  goto <bb 133>;

<L228>:
  goto <bb 498> (<L201>);

  <bb 133>:
  gWatchOut.489_247 = gWatchOut;
  _249 = std::basic_ostream<char>::operator<< (gWatchOut.489_247, _246);
  goto <bb 135>;

<L229>:
  goto <bb 498> (<L201>);

  <bb 135>:
  # DEBUG __out => _249
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_249, " | ", 3);
  goto <bb 137>;

<L230>:
  goto <bb 498> (<L201>);

  <bb 137>:
  # DEBUG __os => _249
  # DEBUG __str => D#3056
  _250 = MEM[(long unsigned int *)this_61(D) + 48B];
  # DEBUG D#3 => D#3056
  # DEBUG this => D#3
  _556 = (long int) _250;
  # DEBUG this => D#3056
  _557 = MEM[(char * *)this_61(D) + 40B];
  # DEBUG D#1 => D#3056
  # DEBUG this => D#1
  _558 = std::__ostream_insert<char, std::char_traits<char> > (_249, _557, _556);
  goto <bb 139>;

<L231>:
  goto <bb 498> (<L201>);

  <bb 139>:
  # DEBUG __out => _558
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_558, " | ", 3);
  goto <bb 141>;

<L232>:
  goto <bb 498> (<L201>);

  <bb 141>:
  # DEBUG __out => _558
  # DEBUG __s => "Finding output VC for flit "
  # DEBUG __s => "Finding output VC for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_558, "Finding output VC for flit ", 27);
  goto <bb 143>;

<L233>:
  goto <bb 498> (<L201>);

  <bb 143>:
  _252 = std::basic_ostream<char>::operator<< (_558, _244);
  goto <bb 145>;

<L234>:
  goto <bb 498> (<L201>);

  <bb 145>:
  # DEBUG __out => _252
  # DEBUG __s => ":"
  # DEBUG __s => ":"
  std::__ostream_insert<char, std::char_traits<char> > (_252, ":", 1);
  goto <bb 147>;

<L235>:
  goto <bb 498> (<L201>);

  <bb 147>:
  # DEBUG this => _252
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_252);
  goto <bb 129>;

<L236>:
  goto <bb 498> (<L201>);

  <bb 149>:
  pretmp_1411 = _177 * 4;

  <bb 150>:
  # i_1026 = PHI <1(149), i_297(246)>
  # DEBUG i => i_1026
  # DEBUG D#3057 => &this_61(D)->_last_vc
  _526 = MEM[(struct vector * *)this_61(D) + 560B];
  # DEBUG D#73 => D#3057
  # DEBUG __n => _154
  # DEBUG this => D#73
  _563 = _526 + _178;
  _518 = MEM[(struct vector * *)_563];
  # DEBUG __n => D#3824
  # DEBUG this => D#67
  _562 = _518 + pretmp_1412;
  _500 = MEM[(int * *)_562];
  # DEBUG __n => _177
  # DEBUG this => D#63
  _560 = _500 + pretmp_1411;
  lvc_255 = *_560;
  # DEBUG lvc => lvc_255
  _256 = vc_start_11 <= lvc_255;
  _257 = vc_end_12 >= lvc_255;
  _258 = _256 & _257;
  if (_258 != 0)
    goto <bb 151>;
  else
    goto <bb 152>;

  <bb 151>:
  _259 = lvc_255 - vc_start_11;
  _260 = _259 + i_1026;
  _261 = _260 % vc_count_13;
  iftmp.493_262 = vc_start_11 + _261;
  pretmp_1419 = vc_start_11 > iftmp.493_262;

  <bb 152>:
  # iftmp.493_18 = PHI <iftmp.493_262(151), vc_start_11(150)>
  # prephitmp_1420 = PHI <pretmp_1419(151), 0(150)>
  # DEBUG vc => iftmp.493_18
  _264 = vc_end_12 < iftmp.493_18;
  _265 = _264 | prephitmp_1420;
  if (_265 != 0)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 153>:
  __assert_fail ("(vc >= vc_start) && (vc <= vc_end)", "trafficmanager.cpp", 1116, &__PRETTY_FUNCTION__);

  <bb 154>:
  # DEBUG this => dest_buf_155
  # DEBUG vc => iftmp.493_18
  if (iftmp.493_18 < 0)
    goto <bb 156>;
  else
    goto <bb 155>;

  <bb 155>:
  _673 = MEM[(const struct BufferState *)dest_buf_155]._vcs;
  if (iftmp.493_18 >= _673)
    goto <bb 156>;
  else
    goto <bb 157>;

  <bb 156>:
  __assert_fail ("( vc >= 0 ) && ( vc < _vcs )", "buffer_state.hpp", 212, &__PRETTY_FUNCTION__);

  <bb 157>:
  _827 = (long unsigned int) iftmp.493_18;
  # DEBUG D#62 => &MEM[(const struct BufferState *)dest_buf_155]._in_use_by
  _828 = MEM[(int * *)dest_buf_155 + 152B];
  # DEBUG D#61 => D#62
  # DEBUG __n => _827
  # DEBUG this => D#61
  _829 = _827 * 4;
  _830 = _828 + _829;
  _831 = *_830;
  if (_831 < 0)
    goto <bb 190>;
  else
    goto <bb 158>;

  <bb 158>:
  _268 = f_181->watch;
  if (_268 != 0)
    goto <bb 159>;
  else
    goto <bb 245>;

  <bb 159>:
  # DEBUG D#3058 => &this_61(D)->D.65070
  # DEBUG this => D#3058
  # DEBUG D#3059 => &MEM[(const struct Module *)this_61(D)]._fullname
  _270 = GetSimTime ();
  goto <bb 161>;

<L237>:
  goto <bb 498> (<L201>);

  <bb 161>:
  gWatchOut.489_271 = gWatchOut;
  _273 = std::basic_ostream<char>::operator<< (gWatchOut.489_271, _270);
  goto <bb 163>;

<L238>:
  goto <bb 498> (<L201>);

  <bb 163>:
  # DEBUG __out => _273
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_273, " | ", 3);
  goto <bb 165>;

<L239>:
  goto <bb 498> (<L201>);

  <bb 165>:
  # DEBUG __os => _273
  # DEBUG __str => D#3059
  _274 = MEM[(long unsigned int *)this_61(D) + 48B];
  # DEBUG D#3 => D#3059
  # DEBUG this => D#3
  _564 = (long int) _274;
  # DEBUG this => D#3059
  _565 = MEM[(char * *)this_61(D) + 40B];
  # DEBUG D#1 => D#3059
  # DEBUG this => D#1
  _566 = std::__ostream_insert<char, std::char_traits<char> > (_273, _565, _564);
  goto <bb 167>;

<L240>:
  goto <bb 498> (<L201>);

  <bb 167>:
  # DEBUG __out => _566
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_566, " | ", 3);
  goto <bb 169>;

<L241>:
  goto <bb 498> (<L201>);

  <bb 169>:
  # DEBUG __out => _566
  # DEBUG __s => "  Output VC "
  # DEBUG __s => "  Output VC "
  std::__ostream_insert<char, std::char_traits<char> > (_566, "  Output VC ", 12);
  goto <bb 171>;

<L242>:
  goto <bb 498> (<L201>);

  <bb 171>:
  _276 = std::basic_ostream<char>::operator<< (_566, iftmp.493_18);
  goto <bb 173>;

<L243>:
  goto <bb 498> (<L201>);

  <bb 173>:
  # DEBUG __out => _276
  # DEBUG __s => " is busy."
  # DEBUG __s => " is busy."
  std::__ostream_insert<char, std::char_traits<char> > (_276, " is busy.", 9);
  goto <bb 175>;

<L244>:
  goto <bb 498> (<L201>);

  <bb 175>:
  # DEBUG this => _276
  # DEBUG __pf => endl
  # DEBUG __os => _276
  _833 = _276->_vptr.basic_ostream;
  _834 = MEM[(long int *)_833 + -24B];
  _835 = (sizetype) _834;
  _836 = _276 + _835;
  # DEBUG this => _836
  # DEBUG __c => 10
  _691 = MEM[(const struct basic_ios *)_836]._M_ctype;
  # DEBUG __f => _691
  if (_691 == 0B)
    goto <bb 176>;
  else
    goto <bb 178>;

  <bb 176>:
  std::__throw_bad_cast ();

<L245>:
  goto <bb 498> (<L201>);

  <bb 178>:
  # DEBUG this => _691
  # DEBUG __c => 10
  _841 = MEM[(const struct ctype *)_691]._M_widen_ok;
  if (_841 != 0)
    goto <bb 179>;
  else
    goto <bb 180>;

  <bb 179>:
  _844 = MEM[(const struct ctype *)_691]._M_widen[10];
  pretmp_1427 = (int) _844;
  goto <bb 186>;

  <bb 180>:
  # DEBUG this => _691
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_691);
  goto <bb 182>;

<L246>:
  goto <bb 498> (<L201>);

  <bb 182>:
  _849 = MEM[(const struct ctype *)_691].D.16885._vptr.facet;
  _850 = MEM[(int (*__vtbl_ptr_type) () *)_849 + 48B];
  PROF_854 = [obj_type_ref] OBJ_TYPE_REF(_850;(const struct ctype)_691->6);
  if (PROF_854 == do_widen)
    goto <bb 186>;
  else
    goto <bb 183>;

  <bb 183>:
  _856 = OBJ_TYPE_REF(_850;(const struct ctype)_691->6) (_691, 10);
  goto <bb 185>;

<L247>:
  goto <bb 498> (<L201>);

  <bb 185>:
  pretmp_1428 = (int) _856;

  <bb 186>:
  # prephitmp_1429 = PHI <pretmp_1427(179), 10(182), pretmp_1428(185)>
  _839 = std::basic_ostream<char>::put (_276, prephitmp_1429);
  goto <bb 188>;

<L248>:
  goto <bb 498> (<L201>);

  <bb 188>:
  # DEBUG __os => _839
  std::basic_ostream<char>::flush (_839);
  goto <bb 245>;

<L249>:
  goto <bb 498> (<L201>);

  <bb 190>:
  _494 = MEM[(struct BufferPolicy * *)dest_buf_155 + 144B];
  # DEBUG D#56 => dest_buf_155
  # DEBUG vc => iftmp.493_18
  # DEBUG this => D#56
  _567 = _494->D.50434._vptr.Module;
  _568 = MEM[(int (*__vtbl_ptr_type) () *)_567 + 56B];
  _569 = OBJ_TYPE_REF(_568;(const struct BufferPolicy)_494->7) (_494, iftmp.493_18);
  goto <bb 192>;

<L250>:
  goto <bb 498> (<L201>);

  <bb 192>:
  if (_569 != 0)
    goto <bb 193>;
  else
    goto <bb 225>;

  <bb 193>:
  _277 = f_181->watch;
  if (_277 != 0)
    goto <bb 194>;
  else
    goto <bb 245>;

  <bb 194>:
  # DEBUG D#3060 => &this_61(D)->D.65070
  # DEBUG this => D#3060
  # DEBUG D#3061 => &MEM[(const struct Module *)this_61(D)]._fullname
  _279 = GetSimTime ();
  goto <bb 196>;

<L251>:
  goto <bb 498> (<L201>);

  <bb 196>:
  gWatchOut.489_280 = gWatchOut;
  _282 = std::basic_ostream<char>::operator<< (gWatchOut.489_280, _279);
  goto <bb 198>;

<L252>:
  goto <bb 498> (<L201>);

  <bb 198>:
  # DEBUG __out => _282
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_282, " | ", 3);
  goto <bb 200>;

<L253>:
  goto <bb 498> (<L201>);

  <bb 200>:
  # DEBUG __os => _282
  # DEBUG __str => D#3061
  _283 = MEM[(long unsigned int *)this_61(D) + 48B];
  # DEBUG D#3 => D#3061
  # DEBUG this => D#3
  _570 = (long int) _283;
  # DEBUG this => D#3061
  _571 = MEM[(char * *)this_61(D) + 40B];
  # DEBUG D#1 => D#3061
  # DEBUG this => D#1
  _572 = std::__ostream_insert<char, std::char_traits<char> > (_282, _571, _570);
  goto <bb 202>;

<L254>:
  goto <bb 498> (<L201>);

  <bb 202>:
  # DEBUG __out => _572
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_572, " | ", 3);
  goto <bb 204>;

<L255>:
  goto <bb 498> (<L201>);

  <bb 204>:
  # DEBUG __out => _572
  # DEBUG __s => "  Output VC "
  # DEBUG __s => "  Output VC "
  std::__ostream_insert<char, std::char_traits<char> > (_572, "  Output VC ", 12);
  goto <bb 206>;

<L256>:
  goto <bb 498> (<L201>);

  <bb 206>:
  _285 = std::basic_ostream<char>::operator<< (_572, iftmp.493_18);
  goto <bb 208>;

<L257>:
  goto <bb 498> (<L201>);

  <bb 208>:
  # DEBUG __out => _285
  # DEBUG __s => " is full."
  # DEBUG __s => " is full."
  std::__ostream_insert<char, std::char_traits<char> > (_285, " is full.", 9);
  goto <bb 210>;

<L258>:
  goto <bb 498> (<L201>);

  <bb 210>:
  # DEBUG this => _285
  # DEBUG __pf => endl
  # DEBUG __os => _285
  _859 = _285->_vptr.basic_ostream;
  _860 = MEM[(long int *)_859 + -24B];
  _861 = (sizetype) _860;
  _862 = _285 + _861;
  # DEBUG this => _862
  # DEBUG __c => 10
  _698 = MEM[(const struct basic_ios *)_862]._M_ctype;
  # DEBUG __f => _698
  if (_698 == 0B)
    goto <bb 211>;
  else
    goto <bb 213>;

  <bb 211>:
  std::__throw_bad_cast ();

<L259>:
  goto <bb 498> (<L201>);

  <bb 213>:
  # DEBUG this => _698
  # DEBUG __c => 10
  _867 = MEM[(const struct ctype *)_698]._M_widen_ok;
  if (_867 != 0)
    goto <bb 214>;
  else
    goto <bb 215>;

  <bb 214>:
  _870 = MEM[(const struct ctype *)_698]._M_widen[10];
  pretmp_1424 = (int) _870;
  goto <bb 221>;

  <bb 215>:
  # DEBUG this => _698
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_698);
  goto <bb 217>;

<L260>:
  goto <bb 498> (<L201>);

  <bb 217>:
  _875 = MEM[(const struct ctype *)_698].D.16885._vptr.facet;
  _876 = MEM[(int (*__vtbl_ptr_type) () *)_875 + 48B];
  PROF_880 = [obj_type_ref] OBJ_TYPE_REF(_876;(const struct ctype)_698->6);
  if (PROF_880 == do_widen)
    goto <bb 221>;
  else
    goto <bb 218>;

  <bb 218>:
  _882 = OBJ_TYPE_REF(_876;(const struct ctype)_698->6) (_698, 10);
  goto <bb 220>;

<L261>:
  goto <bb 498> (<L201>);

  <bb 220>:
  pretmp_1425 = (int) _882;

  <bb 221>:
  # prephitmp_1426 = PHI <pretmp_1424(214), 10(217), pretmp_1425(220)>
  _865 = std::basic_ostream<char>::put (_285, prephitmp_1426);
  goto <bb 223>;

<L262>:
  goto <bb 498> (<L201>);

  <bb 223>:
  # DEBUG __os => _865
  std::basic_ostream<char>::flush (_865);
  goto <bb 245>;

<L263>:
  goto <bb 498> (<L201>);

  <bb 225>:
  # iftmp.493_781 = PHI <iftmp.493_18(192)>
  _286 = f_181->watch;
  if (_286 != 0)
    goto <bb 227>;
  else
    goto <bb 226>;

  <bb 226>:
  f_181->vc = iftmp.493_781;
  goto <bb 247>;

  <bb 227>:
  # DEBUG D#3062 => &this_61(D)->D.65070
  # DEBUG this => D#3062
  # DEBUG D#3063 => &MEM[(const struct Module *)this_61(D)]._fullname
  _289 = GetSimTime ();
  goto <bb 229>;

<L264>:
  goto <bb 498> (<L201>);

  <bb 229>:
  gWatchOut.489_290 = gWatchOut;
  _292 = std::basic_ostream<char>::operator<< (gWatchOut.489_290, _289);
  goto <bb 231>;

<L265>:
  goto <bb 498> (<L201>);

  <bb 231>:
  # DEBUG __out => _292
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_292, " | ", 3);
  goto <bb 233>;

<L266>:
  goto <bb 498> (<L201>);

  <bb 233>:
  # DEBUG __os => _292
  # DEBUG __str => D#3063
  _293 = MEM[(long unsigned int *)this_61(D) + 48B];
  # DEBUG D#3 => D#3063
  # DEBUG this => D#3
  _573 = (long int) _293;
  # DEBUG this => D#3063
  _574 = MEM[(char * *)this_61(D) + 40B];
  # DEBUG D#1 => D#3063
  # DEBUG this => D#1
  _575 = std::__ostream_insert<char, std::char_traits<char> > (_292, _574, _573);
  goto <bb 235>;

<L267>:
  goto <bb 498> (<L201>);

  <bb 235>:
  # DEBUG __out => _575
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_575, " | ", 3);
  goto <bb 237>;

<L268>:
  goto <bb 498> (<L201>);

  <bb 237>:
  # DEBUG __out => _575
  # DEBUG __s => "  Selected output VC "
  # DEBUG __s => "  Selected output VC "
  std::__ostream_insert<char, std::char_traits<char> > (_575, "  Selected output VC ", 21);
  goto <bb 239>;

<L269>:
  goto <bb 498> (<L201>);

  <bb 239>:
  _295 = std::basic_ostream<char>::operator<< (_575, iftmp.493_781);
  goto <bb 241>;

<L270>:
  goto <bb 498> (<L201>);

  <bb 241>:
  # DEBUG __out => _295
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_295, ".", 1);
  goto <bb 243>;

<L271>:
  goto <bb 498> (<L201>);

  <bb 243>:
  # DEBUG this => _295
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_295);
  goto <bb 226>;

<L272>:
  goto <bb 498> (<L201>);

  <bb 245>:
  i_297 = i_1026 + 1;
  # DEBUG i => i_297
  # DEBUG i => i_297
  if (vc_count_13 < i_297)
    goto <bb 130>;
  else
    goto <bb 246>;

  <bb 246>:
  goto <bb 150>;

  <bb 247>:
  # DEBUG this => &route_set
  # DEBUG D#1636 => &route_set._outputs
  # DEBUG this => D#1636
  # DEBUG this => &MEM[(struct set *)&route_set]._M_t
  _576 = MEM[(struct _Rb_tree_node_base * *)&route_set + 16B];
  # DEBUG D#192 => &MEM[(struct set *)&route_set]._M_t
  # DEBUG this => D#192
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&MEM[(struct set *)&route_set]._M_t, _576);
  # DEBUG D#1635 => &MEM[(struct _Rb_tree *)&route_set]._M_impl
  # DEBUG this => D#1635
  # DEBUG this => D#1635
  # DEBUG this => D#1635
  route_set ={v} {CLOBBER};

  <bb 248>:
  _303 = f_181->vc;
  if (_303 == -1)
    goto <bb 249>;
  else
    goto <bb 281>;

  <bb 249>:
  _304 = f_181->watch;
  if (_304 != 0)
    goto <bb 250>;
  else
    goto <bb 307>;

  <bb 250>:
  _305 = f_181->id;
  # DEBUG D#3064 => &this_61(D)->D.65070
  # DEBUG this => D#3064
  # DEBUG D#3065 => &MEM[(const struct Module *)this_61(D)]._fullname
  _307 = GetSimTime ();
  goto <bb 252>;

<L273>:
  goto <bb 504> (<L205>);

  <bb 252>:
  gWatchOut.489_308 = gWatchOut;
  _310 = std::basic_ostream<char>::operator<< (gWatchOut.489_308, _307);
  goto <bb 254>;

<L274>:
  goto <bb 504> (<L205>);

  <bb 254>:
  # DEBUG __out => _310
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_310, " | ", 3);
  goto <bb 256>;

<L275>:
  goto <bb 504> (<L205>);

  <bb 256>:
  # DEBUG __os => _310
  # DEBUG __str => D#3065
  _311 = MEM[(long unsigned int *)this_61(D) + 48B];
  # DEBUG D#3 => D#3065
  # DEBUG this => D#3
  _577 = (long int) _311;
  # DEBUG this => D#3065
  _578 = MEM[(char * *)this_61(D) + 40B];
  # DEBUG D#1 => D#3065
  # DEBUG this => D#1
  _579 = std::__ostream_insert<char, std::char_traits<char> > (_310, _578, _577);
  goto <bb 258>;

<L276>:
  goto <bb 504> (<L205>);

  <bb 258>:
  # DEBUG __out => _579
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_579, " | ", 3);
  goto <bb 260>;

<L277>:
  goto <bb 504> (<L205>);

  <bb 260>:
  # DEBUG __out => _579
  # DEBUG __s => "No output VC found for flit "
  # DEBUG __s => "No output VC found for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_579, "No output VC found for flit ", 28);
  goto <bb 262>;

<L278>:
  goto <bb 504> (<L205>);

  <bb 262>:
  _313 = std::basic_ostream<char>::operator<< (_579, _305);
  goto <bb 264>;

<L279>:
  goto <bb 504> (<L205>);

  <bb 264>:
  # DEBUG __out => _313
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_313, ".", 1);
  goto <bb 266>;

<L280>:
  goto <bb 504> (<L205>);

  <bb 266>:
  # DEBUG this => _313
  # DEBUG __pf => endl
  # DEBUG __os => _313
  _885 = _313->_vptr.basic_ostream;
  _886 = MEM[(long int *)_885 + -24B];
  _887 = (sizetype) _886;
  _888 = _313 + _887;
  # DEBUG this => _888
  # DEBUG __c => 10
  _724 = MEM[(const struct basic_ios *)_888]._M_ctype;
  # DEBUG __f => _724
  if (_724 == 0B)
    goto <bb 267>;
  else
    goto <bb 269>;

  <bb 267>:
  std::__throw_bad_cast ();

<L281>:
  goto <bb 504> (<L205>);

  <bb 269>:
  # DEBUG this => _724
  # DEBUG __c => 10
  _893 = MEM[(const struct ctype *)_724]._M_widen_ok;
  if (_893 != 0)
    goto <bb 270>;
  else
    goto <bb 271>;

  <bb 270>:
  _896 = MEM[(const struct ctype *)_724]._M_widen[10];
  pretmp_1408 = (int) _896;
  goto <bb 277>;

  <bb 271>:
  # DEBUG this => _724
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_724);
  goto <bb 273>;

<L282>:
  goto <bb 504> (<L205>);

  <bb 273>:
  _901 = MEM[(const struct ctype *)_724].D.16885._vptr.facet;
  _902 = MEM[(int (*__vtbl_ptr_type) () *)_901 + 48B];
  PROF_906 = [obj_type_ref] OBJ_TYPE_REF(_902;(const struct ctype)_724->6);
  if (PROF_906 == do_widen)
    goto <bb 277>;
  else
    goto <bb 274>;

  <bb 274>:
  _908 = OBJ_TYPE_REF(_902;(const struct ctype)_724->6) (_724, 10);
  goto <bb 276>;

<L283>:
  goto <bb 504> (<L205>);

  <bb 276>:
  pretmp_1409 = (int) _908;

  <bb 277>:
  # prephitmp_1410 = PHI <pretmp_1408(270), 10(273), pretmp_1409(276)>
  _891 = std::basic_ostream<char>::put (_313, prephitmp_1410);
  goto <bb 279>;

<L284>:
  goto <bb 504> (<L205>);

  <bb 279>:
  # DEBUG __os => _891
  std::basic_ostream<char>::flush (_891);
  goto <bb 307>;

<L285>:
  goto <bb 504> (<L205>);

  <bb 281>:
  # _840 = PHI <_303(248), _187(70)>
  _495 = MEM[(struct BufferPolicy * *)dest_buf_155 + 144B];
  # DEBUG D#56 => dest_buf_155
  # DEBUG vc => _840
  # DEBUG this => D#56
  _580 = _495->D.50434._vptr.Module;
  _581 = MEM[(int (*__vtbl_ptr_type) () *)_580 + 56B];
  _582 = OBJ_TYPE_REF(_581;(const struct BufferPolicy)_495->7) (_495, _840);
  goto <bb 283>;

<L286>:
  goto <bb 504> (<L205>);

  <bb 283>:
  if (_582 != 0)
    goto <bb 284>;
  else
    goto <bb 307>;

  <bb 284>:
  _314 = f_181->watch;
  if (_314 != 0)
    goto <bb 285>;
  else
    goto <bb 307>;

  <bb 285>:
  _315 = f_181->id;
  _316 = f_181->vc;
  # DEBUG D#3066 => &this_61(D)->D.65070
  # DEBUG this => D#3066
  # DEBUG D#3067 => &MEM[(const struct Module *)this_61(D)]._fullname
  _318 = GetSimTime ();
  goto <bb 287>;

<L287>:
  goto <bb 504> (<L205>);

  <bb 287>:
  gWatchOut.489_319 = gWatchOut;
  _321 = std::basic_ostream<char>::operator<< (gWatchOut.489_319, _318);
  goto <bb 289>;

<L288>:
  goto <bb 504> (<L205>);

  <bb 289>:
  # DEBUG __out => _321
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_321, " | ", 3);
  goto <bb 291>;

<L289>:
  goto <bb 504> (<L205>);

  <bb 291>:
  # DEBUG __os => _321
  # DEBUG __str => D#3067
  _322 = MEM[(long unsigned int *)this_61(D) + 48B];
  # DEBUG D#3 => D#3067
  # DEBUG this => D#3
  _583 = (long int) _322;
  # DEBUG this => D#3067
  _584 = MEM[(char * *)this_61(D) + 40B];
  # DEBUG D#1 => D#3067
  # DEBUG this => D#1
  _585 = std::__ostream_insert<char, std::char_traits<char> > (_321, _584, _583);
  goto <bb 293>;

<L290>:
  goto <bb 504> (<L205>);

  <bb 293>:
  # DEBUG __out => _585
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_585, " | ", 3);
  goto <bb 295>;

<L291>:
  goto <bb 504> (<L205>);

  <bb 295>:
  # DEBUG __out => _585
  # DEBUG __s => "Selected output VC "
  # DEBUG __s => "Selected output VC "
  std::__ostream_insert<char, std::char_traits<char> > (_585, "Selected output VC ", 19);
  goto <bb 297>;

<L292>:
  goto <bb 504> (<L205>);

  <bb 297>:
  _324 = std::basic_ostream<char>::operator<< (_585, _316);
  goto <bb 299>;

<L293>:
  goto <bb 504> (<L205>);

  <bb 299>:
  # DEBUG __out => _324
  # DEBUG __s => " is full for flit "
  # DEBUG __s => " is full for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_324, " is full for flit ", 18);
  goto <bb 301>;

<L294>:
  goto <bb 504> (<L205>);

  <bb 301>:
  _326 = std::basic_ostream<char>::operator<< (_324, _315);
  goto <bb 303>;

<L295>:
  goto <bb 504> (<L205>);

  <bb 303>:
  # DEBUG __out => _326
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_326, ".", 1);
  goto <bb 305>;

<L296>:
  goto <bb 504> (<L205>);

  <bb 305>:
  # DEBUG this => _326
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_326);
  goto <bb 307>;

<L297>:
  goto <bb 504> (<L205>);

  <bb 307>:
  # f_8 = PHI <f_1034(61), f_1034(66), f_1034(68), f_1034(279), f_1034(305), f_181(283), f_1034(249), f_1034(284)>
  # DEBUG f => f_8
  i_329 = i_990 + 1;
  # DEBUG i => i_329
  # DEBUG i => i_329
  # DEBUG f => f_8
  if (class_limit_3 < i_329)
    goto <bb 308>;
  else
    goto <bb 309>;

  <bb 308>:
  # f_41 = PHI <f_8(307)>
  goto <bb 310>;

  <bb 309>:
  goto <bb 61>;

  <bb 310>:
  # f_801 = PHI <f_41(308), f_166(59)>
  if (f_801 != 0B)
    goto <bb 313>;
  else
    goto <bb 311>;

  <bb 311>:
  n_426 = n_1052 + 1;
  # DEBUG n => n_426
  # DEBUG n => n_426
  _152 = this_61(D)->_nodes;
  if (_152 <= n_426)
    goto <bb 416>;
  else
    goto <bb 312>;

  <bb 312>:
  goto <bb 52>;

  <bb 313>:
  _330 = f_801->subnetwork;
  if (_330 != subnet_1053)
    goto <bb 314>;
  else
    goto <bb 315>;

  <bb 314>:
  __assert_fail ("f->subnetwork == subnet", "trafficmanager.cpp", 1162, &__PRETTY_FUNCTION__);

  <bb 315>:
  c_331 = f_801->cl;
  # DEBUG c => c_331
  _332 = f_801->head;
  if (_332 != 0)
    goto <bb 317>;
  else
    goto <bb 316>;

  <bb 316>:
  pretmp_1389 = (long unsigned int) c_331;
  goto <bb 370>;

  <bb 317>:
  _333 = this_61(D)->_lookahead_routing;
  if (_333 != 0)
    goto <bb 318>;
  else
    goto <bb 366>;

  <bb 318>:
  _334 = this_61(D)->_noq;
  if (_334 != 0)
    goto <bb 345>;
  else
    goto <bb 319>;

  <bb 319>:
  # DEBUG D#3068 => &this_61(D)->_net
  _509 = MEM[(struct Network * * *)this_61(D) + 184B];
  # DEBUG D#64 => D#3068
  # DEBUG __n => D#3824
  # DEBUG this => D#64
  _590 = _509 + pretmp_1354;
  _347 = *_590;
  # DEBUG this => _347
  # DEBUG index => n_1052
  # DEBUG D#58 => &_347->_inject
  _586 = MEM[(struct FlitChannel * * *)_347 + 136B];
  # DEBUG D#57 => D#58
  # DEBUG __n => _154
  # DEBUG this => D#57
  _587 = _154 * 8;
  _588 = _586 + _587;
  _589 = *_588;
  # DEBUG inject => _589
  _491 = MEM[(const struct Router * *)_589 + 216B];
  # DEBUG D#51 => _589
  # DEBUG this => D#51
  # DEBUG router => NULL
  if (_491 == 0B)
    goto <bb 320>;
  else
    goto <bb 321>;

  <bb 320>:
  __assert_fail ("router", "trafficmanager.cpp", 1172, &__PRETTY_FUNCTION__);

  <bb 321>:
  # DEBUG this => _589
  in_channel_350 = MEM[(const int &)_589 + 224];
  # DEBUG in_channel => in_channel_350
  _351 = this_61(D)->_rf;
  _352 = &f_801->la_route_set;
  _351 (_491, f_801, in_channel_350, _352, 0);
  goto <bb 323>;

<L298>:
  goto <bb 504> (<L205>);

  <bb 323>:
  _354 = f_801->watch;
  if (_354 != 0)
    goto <bb 325>;
  else
    goto <bb 324>;

  <bb 324>:
  _368 = f_801->vc;
  BufferState::TakeBuffer (dest_buf_155, _368, 0);
  goto <bb 369>;

  <bb 325>:
  _355 = f_801->id;
  _357 = GetSimTime ();
  goto <bb 327>;

<L299>:
  goto <bb 504> (<L205>);

  <bb 327>:
  gWatchOut.489_358 = gWatchOut;
  _360 = std::basic_ostream<char>::operator<< (gWatchOut.489_358, _357);
  goto <bb 329>;

<L300>:
  goto <bb 504> (<L205>);

  <bb 329>:
  # DEBUG __out => _360
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_360, " | ", 3);
  goto <bb 331>;

<L301>:
  goto <bb 504> (<L205>);

  <bb 331>:
  # DEBUG __out => _360
  # DEBUG __s => "node"
  # DEBUG __s => "node"
  std::__ostream_insert<char, std::char_traits<char> > (_360, "node", 4);
  goto <bb 333>;

<L302>:
  goto <bb 504> (<L205>);

  <bb 333>:
  _362 = std::basic_ostream<char>::operator<< (_360, n_1052);
  goto <bb 335>;

<L303>:
  goto <bb 504> (<L205>);

  <bb 335>:
  # DEBUG __out => _362
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_362, " | ", 3);
  goto <bb 337>;

<L304>:
  goto <bb 504> (<L205>);

  <bb 337>:
  # DEBUG __out => _362
  # DEBUG __s => "Generating lookahead routing info for flit "
  # DEBUG __s => "Generating lookahead routing info for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_362, "Generating lookahead routing info for flit ", 43);
  goto <bb 339>;

<L305>:
  goto <bb 504> (<L205>);

  <bb 339>:
  _364 = std::basic_ostream<char>::operator<< (_362, _355);
  goto <bb 341>;

<L306>:
  goto <bb 504> (<L205>);

  <bb 341>:
  # DEBUG __out => _364
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_364, ".", 1);
  goto <bb 343>;

<L307>:
  goto <bb 504> (<L205>);

  <bb 343>:
  # DEBUG this => _364
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_364);
  goto <bb 324>;

<L308>:
  goto <bb 504> (<L205>);

  <bb 345>:
  _335 = f_801->watch;
  if (_335 != 0)
    goto <bb 346>;
  else
    goto <bb 324>;

  <bb 346>:
  _336 = f_801->id;
  _338 = GetSimTime ();
  goto <bb 348>;

<L309>:
  goto <bb 504> (<L205>);

  <bb 348>:
  gWatchOut.489_339 = gWatchOut;
  _341 = std::basic_ostream<char>::operator<< (gWatchOut.489_339, _338);
  goto <bb 350>;

<L310>:
  goto <bb 504> (<L205>);

  <bb 350>:
  # DEBUG __out => _341
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_341, " | ", 3);
  goto <bb 352>;

<L311>:
  goto <bb 504> (<L205>);

  <bb 352>:
  # DEBUG __out => _341
  # DEBUG __s => "node"
  # DEBUG __s => "node"
  std::__ostream_insert<char, std::char_traits<char> > (_341, "node", 4);
  goto <bb 354>;

<L312>:
  goto <bb 504> (<L205>);

  <bb 354>:
  _343 = std::basic_ostream<char>::operator<< (_341, n_1052);
  goto <bb 356>;

<L313>:
  goto <bb 504> (<L205>);

  <bb 356>:
  # DEBUG __out => _343
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_343, " | ", 3);
  goto <bb 358>;

<L314>:
  goto <bb 504> (<L205>);

  <bb 358>:
  # DEBUG __out => _343
  # DEBUG __s => "Already generated lookahead routing info for flit "
  # DEBUG __s => "Already generated lookahead routing info for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_343, "Already generated lookahead routing info for flit ", 50);
  goto <bb 360>;

<L315>:
  goto <bb 504> (<L205>);

  <bb 360>:
  _345 = std::basic_ostream<char>::operator<< (_343, _336);
  goto <bb 362>;

<L316>:
  goto <bb 504> (<L205>);

  <bb 362>:
  # DEBUG __out => _345
  # DEBUG __s => " (NOQ)."
  # DEBUG __s => " (NOQ)."
  std::__ostream_insert<char, std::char_traits<char> > (_345, " (NOQ).", 7);
  goto <bb 364>;

<L317>:
  goto <bb 504> (<L205>);

  <bb 364>:
  # DEBUG this => _345
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_345);
  goto <bb 324>;

<L318>:
  goto <bb 504> (<L205>);

  <bb 366>:
  _366 = &f_801->la_route_set;
  OutputSet::Clear (_366);
  goto <bb 324>;

<L319>:
  goto <bb 504> (<L205>);

<L320>:
  goto <bb 504> (<L205>);

  <bb 369>:
  _370 = (long unsigned int) c_331;
  # DEBUG D#3069 => &this_61(D)->_last_vc
  _527 = MEM[(struct vector * *)this_61(D) + 560B];
  # DEBUG D#73 => D#3069
  # DEBUG __n => _154
  # DEBUG this => D#73
  _595 = _527 + _178;
  _519 = MEM[(struct vector * *)_595];
  # DEBUG __n => D#3824
  # DEBUG this => D#67
  _594 = _519 + _593;
  _501 = MEM[(int * *)_594];
  # DEBUG __n => _370
  # DEBUG this => D#63
  _591 = _370 * 4;
  _592 = _501 + _591;
  _372 = f_801->vc;
  *_592 = _372;

  <bb 370>:
  # prephitmp_1390 = PHI <pretmp_1389(316), _370(369)>
  # DEBUG D#3070 => &this_61(D)->_last_class
  _520 = MEM[(struct vector * *)this_61(D) + 456B];
  # DEBUG D#67 => D#3070
  # DEBUG __n => _154
  # DEBUG this => D#67
  _600 = _520 + _178;
  _502 = MEM[(int * *)_600];
  # DEBUG __n => D#3824
  # DEBUG this => D#63
  _599 = _502 + pretmp_1355;
  *_599 = c_331;
  # DEBUG D#3822 => (long unsigned int) c_331
  # DEBUG D#3071 => &this_61(D)->_partial_packets
  _532 = MEM[(struct vector * *)this_61(D) + 648B];
  # DEBUG D#78 => D#3071
  # DEBUG __n => _154
  # DEBUG this => D#78
  _598 = _532 + _178;
  _540 = MEM[(struct list * *)_598];
  # DEBUG __n => D#3822
  # DEBUG this => D#127
  _596 = prephitmp_1390 * 24;
  _597 = _540 + _596;
  # DEBUG this => _597
  _911 = MEM[(struct _List_node_base * *)_597];
  # DEBUG D#356 => _597
  # DEBUG this => D#356
  # DEBUG this => NULL
  # DEBUG __x => _911
  # DEBUG this => _597
  # DEBUG __position => _911
  # DEBUG __position$_M_node => _911
  # DEBUG D#1069 => &_597->D.71295
  # DEBUG D#362 => D#1069
  # DEBUG __n => 1
  # DEBUG this => D#362
  _912 = MEM[(long unsigned int *)_597 + 16B];
  _913 = _912 + 18446744073709551615;
  MEM[(long unsigned int *)_597 + 16B] = _913;
  std::__detail::_List_node_base::_M_unhook (_911);
  # DEBUG __n => _911
  # DEBUG D#1070 => &MEM[(struct _Node *)_911]._M_data
  # DEBUG __r => D#1070
  # DEBUG D#1072 => &_597->D.71295
  # DEBUG D#1053 => D#1072
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1071 => &_597->D.71295
  # DEBUG D#563 => D#1071
  # DEBUG __p => _911
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => _911
  # DEBUG this => D#559
  # DEBUG D.163186 => D#560
  operator delete (_911);
  BufferState::SendingFlit (dest_buf_155, f_801);
  goto <bb 372>;

<L321>:
  goto <bb 504> (<L205>);

  <bb 372>:
  _380 = this_61(D)->_pri_type;
  if (_380 == 2)
    goto <bb 373>;
  else
    goto <bb 375>;

  <bb 373>:
  _381 = this_61(D)->_time;
  _382 = 2147483647 - _381;
  f_801->pri = _382;
  if (_382 < 0)
    goto <bb 374>;
  else
    goto <bb 375>;

  <bb 374>:
  __assert_fail ("f->pri >= 0", "trafficmanager.cpp", 1208, &__PRETTY_FUNCTION__);

  <bb 375>:
  _385 = f_801->watch;
  if (_385 != 0)
    goto <bb 377>;
  else
    goto <bb 376>;

  <bb 376>:
  _405 = this_61(D)->_time;
  f_801->itime = _405;
  # DEBUG D#3072 => &this_61(D)->_partial_packets
  _533 = MEM[(struct vector * *)this_61(D) + 648B];
  # DEBUG D#78 => D#3072
  # DEBUG __n => _154
  # DEBUG this => D#78
  _603 = _533 + _178;
  _541 = MEM[(struct list * *)_603];
  # DEBUG __n => D#3822
  # DEBUG this => D#127
  _602 = _541 + _596;
  # DEBUG this => NULL
  _404 = MEM[(const struct list *)_602].D.71295._M_impl._M_node.D.37893._M_next;
  _601 = &MEM[(const struct list *)_602].D.71295._M_impl._M_node.D.37893;
  if (_404 != _601)
    goto <bb 409>;
  else
    goto <bb 410>;

  <bb 377>:
  _386 = f_801->pri;
  _387 = this_61(D)->_time;
  _388 = f_801->id;
  _390 = GetSimTime ();
  goto <bb 379>;

<L322>:
  goto <bb 504> (<L205>);

  <bb 379>:
  gWatchOut.489_391 = gWatchOut;
  _393 = std::basic_ostream<char>::operator<< (gWatchOut.489_391, _390);
  goto <bb 381>;

<L323>:
  goto <bb 504> (<L205>);

  <bb 381>:
  # DEBUG __out => _393
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_393, " | ", 3);
  goto <bb 383>;

<L324>:
  goto <bb 504> (<L205>);

  <bb 383>:
  # DEBUG __out => _393
  # DEBUG __s => "node"
  # DEBUG __s => "node"
  std::__ostream_insert<char, std::char_traits<char> > (_393, "node", 4);
  goto <bb 385>;

<L325>:
  goto <bb 504> (<L205>);

  <bb 385>:
  _395 = std::basic_ostream<char>::operator<< (_393, n_1052);
  goto <bb 387>;

<L326>:
  goto <bb 504> (<L205>);

  <bb 387>:
  # DEBUG __out => _395
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_395, " | ", 3);
  goto <bb 389>;

<L327>:
  goto <bb 504> (<L205>);

  <bb 389>:
  # DEBUG __out => _395
  # DEBUG __s => "Injecting flit "
  # DEBUG __s => "Injecting flit "
  std::__ostream_insert<char, std::char_traits<char> > (_395, "Injecting flit ", 15);
  goto <bb 391>;

<L328>:
  goto <bb 504> (<L205>);

  <bb 391>:
  _397 = std::basic_ostream<char>::operator<< (_395, _388);
  goto <bb 393>;

<L329>:
  goto <bb 504> (<L205>);

  <bb 393>:
  # DEBUG __out => _397
  # DEBUG __s => " into subnet "
  # DEBUG __s => " into subnet "
  std::__ostream_insert<char, std::char_traits<char> > (_397, " into subnet ", 13);
  goto <bb 395>;

<L330>:
  goto <bb 504> (<L205>);

  <bb 395>:
  _399 = std::basic_ostream<char>::operator<< (_397, subnet_1053);
  goto <bb 397>;

<L331>:
  goto <bb 504> (<L205>);

  <bb 397>:
  # DEBUG __out => _399
  # DEBUG __s => " at time "
  # DEBUG __s => " at time "
  std::__ostream_insert<char, std::char_traits<char> > (_399, " at time ", 9);
  goto <bb 399>;

<L332>:
  goto <bb 504> (<L205>);

  <bb 399>:
  _401 = std::basic_ostream<char>::operator<< (_399, _387);
  goto <bb 401>;

<L333>:
  goto <bb 504> (<L205>);

  <bb 401>:
  # DEBUG __out => _401
  # DEBUG __s => " with priority "
  # DEBUG __s => " with priority "
  std::__ostream_insert<char, std::char_traits<char> > (_401, " with priority ", 15);
  goto <bb 403>;

<L334>:
  goto <bb 504> (<L205>);

  <bb 403>:
  _403 = std::basic_ostream<char>::operator<< (_401, _386);
  goto <bb 405>;

<L335>:
  goto <bb 504> (<L205>);

  <bb 405>:
  # DEBUG __out => _403
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_403, ".", 1);
  goto <bb 407>;

<L336>:
  goto <bb 504> (<L205>);

  <bb 407>:
  # DEBUG this => _403
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_403);
  goto <bb 376>;

<L337>:
  goto <bb 504> (<L205>);

  <bb 409>:
  _409 = f_801->tail;
  if (_409 != 0)
    goto <bb 410>;
  else
    goto <bb 510>;

  <bb 410>:
  _413 = this_61(D)->_sim_state;
  if (_413 <= 1)
    goto <bb 412>;
  else
    goto <bb 411>;

  <bb 411>:
  goto <bb 414>;

  <bb 412>:
  # DEBUG D#3074 => &this_61(D)->_sent_flits
  _521 = MEM[(struct vector * *)this_61(D) + 1552B];
  # DEBUG D#67 => D#3074
  # DEBUG __n => D#3822
  # DEBUG this => D#67
  _606 = _521 + _596;
  _503 = MEM[(int * *)_606];
  # DEBUG __n => _154
  # DEBUG this => D#63
  _604 = _154 * 4;
  _605 = _503 + _604;
  _414 = *_605;
  _415 = _414 + 1;
  *_605 = _415;
  _417 = f_801->head;
  if (_417 != 0)
    goto <bb 413>;
  else
    goto <bb 411>;

  <bb 413>:
  # DEBUG D#3075 => &this_61(D)->_sent_packets
  _522 = MEM[(struct vector * *)this_61(D) + 1360B];
  # DEBUG D#67 => D#3075
  # DEBUG __n => D#3822
  # DEBUG this => D#67
  _608 = _522 + _596;
  _504 = MEM[(int * *)_608];
  # DEBUG __n => _154
  # DEBUG this => D#63
  _607 = _504 + _604;
  _418 = *_607;
  _419 = _418 + 1;
  *_607 = _419;

  <bb 414>:
  # DEBUG D#3076 => &this_61(D)->_net
  _510 = MEM[(struct Network * * *)this_61(D) + 184B];
  # DEBUG D#64 => D#3076
  # DEBUG __n => D#3824
  # DEBUG this => D#64
  _609 = _510 + pretmp_1354;
  _421 = *_609;
  _422 = _421->D.50340.D.43877._vptr.Module;
  _423 = MEM[(int (*__vtbl_ptr_type) () *)_422 + 64B];
  OBJ_TYPE_REF(_423;(struct Network)_421->8) (_421, f_801, n_1052);
  goto <bb 311>;

<L338>:
  goto <bb 504> (<L205>);

  <bb 416>:
  # _917 = PHI <_152(311)>
  pretmp_1459 = this_61(D)->_subnets;

  <bb 417>:
  # prephitmp_1325 = PHI <_917(416), prephitmp_1458(48)>
  # prephitmp_1460 = PHI <pretmp_1459(416), prephitmp_1315(48)>
  subnet_427 = subnet_1053 + 1;
  # DEBUG subnet => subnet_427
  # DEBUG subnet => subnet_427
  if (subnet_427 >= prephitmp_1460)
    goto <bb 49>;
  else
    goto <bb 418>;

  <bb 418>:
  goto <bb 48>;

  <bb 419>:
  # subnet_1051 = PHI <0(50), subnet_477(485)>
  # prephitmp_1329 = PHI <prephitmp_23(50), pretmp_1328(485)>
  # DEBUG subnet => subnet_1051
  # DEBUG n => 0
  if (prephitmp_1329 <= 0)
    goto <bb 420>;
  else
    goto <bb 421>;

  <bb 420>:
  pretmp_1330 = (long unsigned int) subnet_1051;
  pretmp_1332 = pretmp_1330 * 48;
  pretmp_1461 = MEM[(struct map * *)&flits];
  pretmp_1463 = pretmp_1461 + pretmp_1332;
  pretmp_1464 = MEM[(struct _Rb_tree_node_base * *)pretmp_1463 + 16B];
  pretmp_1466 = &MEM[(struct _Rb_tree_impl *)pretmp_1463]._M_header;
  goto <bb 480>;

  <bb 421>:
  pretmp_1334 = (long unsigned int) subnet_1051;
  pretmp_1335 = pretmp_1334 * 48;
  pretmp_1469 = MEM[(struct map * *)&flits];
  pretmp_1471 = pretmp_1469 + pretmp_1335;
  pretmp_1472 = MEM[(struct _Rb_tree_node_base * *)pretmp_1471 + 16B];
  pretmp_1476 = &MEM[(struct _Rb_tree_impl *)pretmp_1471]._M_header;
  _621 = pretmp_1334 * 8;

  <bb 422>:
  # n_1039 = PHI <0(421), n_464(478)>
  # prephitmp_1336 = PHI <prephitmp_1329(421), prephitmp_1475(478)>
  # prephitmp_1470 = PHI <pretmp_1469(421), prephitmp_1340(478)>
  # prephitmp_1473 = PHI <pretmp_1472(421), prephitmp_1344(478)>
  # prephitmp_1477 = PHI <pretmp_1476(421), prephitmp_1346(478)>
  # DEBUG n => n_1039
  # DEBUG D#3821 => (long unsigned int) subnet_1051
  # DEBUG D#125 => &flits
  # DEBUG __n => D#3821
  # DEBUG this => D#125
  _620 = prephitmp_1470 + pretmp_1335;
  # DEBUG this => NULL
  # DEBUG __x => &n
  # DEBUG this => D#1125
  # DEBUG __k => &n
  # DEBUG this => D#1125
  # DEBUG D#3820 => &MEM[(struct _Rb_tree *)_620]._M_impl._M_header
  # DEBUG D#3819 => MEM[(struct _Rb_tree_node_base * *)_620 + 16B]
  # DEBUG D#214 => D#1125
  # DEBUG this => D#214
  # DEBUG D#1117 => D#1125
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &n
  # DEBUG __y => D#3820
  # DEBUG __x => D#3819
  if (prephitmp_1473 == 0B)
    goto <bb 477>;
  else
    goto <bb 425>;

  <bb 423>:
  # __y_879 = PHI <__y_614(428), __y_613(427)>
  # __y_811 = PHI <__y_817(428), __y_1047(427)>
  # DEBUG __y => __y_811
  # DEBUG __x => __y_879
  if (__y_879 == 0B)
    goto <bb 429>;
  else
    goto <bb 424>;

  <bb 424>:
  goto <bb 426>;

  <bb 425>:

  <bb 426>:
  # __y_1047 = PHI <prephitmp_1473(425), __y_879(424)>
  # __y_817 = PHI <prephitmp_1477(425), __y_811(424)>
  # DEBUG __y => __y_817
  # DEBUG __x => __y_1047
  # DEBUG __x => __y_1047
  # DEBUG __x => __y_1047
  # DEBUG this => __y_1047
  # DEBUG D#1100 => &MEM[(const struct _Rb_tree_node *)__y_1047]._M_value_field
  # DEBUG __r => D#1100
  # DEBUG __x => D#1100
  # DEBUG this => D#353
  # DEBUG D#1114 => &MEM[(const struct pair &)__y_1047 + 32].first
  # DEBUG D#1115 => &D#1116->_M_impl._M_key_compare
  # DEBUG D#333 => D#1115
  _612 = MEM[(const int &)__y_1047 + 32];
  # DEBUG D#334 => D#1114
  # DEBUG D#335 => &n
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  if (_612 >= n_1039)
    goto <bb 427>;
  else
    goto <bb 428>;

  <bb 427>:
  # DEBUG __y => __y_1047
  __y_613 = MEM[(struct _Rb_tree_node_base * *)__y_1047 + 16B];
  # DEBUG D#315 => __y_1047
  # DEBUG __x => D#315
  # DEBUG __x => NULL
  goto <bb 423>;

  <bb 428>:
  __y_614 = MEM[(struct _Rb_tree_node_base * *)__y_1047 + 24B];
  # DEBUG D#314 => __y_1047
  # DEBUG __x => D#314
  # DEBUG __x => NULL
  goto <bb 423>;

  <bb 429>:
  # __y_75 = PHI <__y_811(423)>
  # DEBUG this => NULL
  # DEBUG __x => __y_75
  # DEBUG __j$_M_node => __y_75
  # DEBUG this => D#1125
  # DEBUG this => NULL
  # DEBUG __x => D#3820
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_75 == prephitmp_1477)
    goto <bb 477>;
  else
    goto <bb 430>;

  <bb 430>:
  # DEBUG __x => __y_75
  # DEBUG __x => __y_75
  # DEBUG this => __y_75
  # DEBUG D#615 => &MEM[(const struct _Rb_tree_node *)__y_75]._M_value_field
  # DEBUG __r => D#615
  # DEBUG __x => D#615
  # DEBUG this => D#353
  # DEBUG D#1122 => &MEM[(const struct pair &)__y_75 + 32].first
  # DEBUG D#1124 => &MEM[(struct _Rb_tree *)D#1125]._M_impl._M_key_compare
  # DEBUG D#333 => D#1124
  # DEBUG D#334 => &n
  _616 = MEM[(const int &)__y_75 + 32];
  # DEBUG D#335 => D#1122
  # DEBUG this => D#333
  # DEBUG __x => D#334
  # DEBUG __y => D#335
  # DEBUG D#1123 => {CLOBBER}
  # DEBUG __j$_M_node => D#1123
  # DEBUG this => &iter
  # DEBUG __it => &D.74444
  # DEBUG iter$_M_node => __y_75
  # DEBUG D#125 => &flits
  # DEBUG __n => D#3821
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG this => D#341
  # DEBUG this => NULL
  # DEBUG __x => D#3820
  # DEBUG this => &D.74456
  # DEBUG __it => &D.74455
  # DEBUG this => &iter
  # DEBUG __x => &D.74456
  if (_616 <= n_1039)
    goto <bb 431>;
  else
    goto <bb 477>;

  <bb 431>:
  # DEBUG this => &iter
  # DEBUG this => __y_75
  # DEBUG D#3077 => &MEM[(const struct _Rb_tree_node *)__y_75]._M_value_field
  # DEBUG __r => D#3077
  f_435 = MEM[(const struct pair *)__y_75 + 32B].second;
  # DEBUG f => f_435
  _436 = this_61(D)->_time;
  f_435->atime = _436;
  _438 = f_435->watch;
  if (_438 != 0)
    goto <bb 433>;
  else
    goto <bb 432>;

  <bb 432>:
  _453 = Credit::New ();
  goto <bb 470>;

  <bb 433>:
  _439 = f_435->vc;
  _441 = GetSimTime ();

  <bb 434>:
  gWatchOut.489_442 = gWatchOut;
  _444 = std::basic_ostream<char>::operator<< (gWatchOut.489_442, _441);
  goto <bb 436>;

<L340>:
  goto <bb 501> (<L203>);

  <bb 436>:
  # DEBUG __out => _444
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_444, " | ", 3);
  goto <bb 438>;

<L341>:
  goto <bb 501> (<L203>);

  <bb 438>:
  # DEBUG __out => _444
  # DEBUG __s => "node"
  # DEBUG __s => "node"
  std::__ostream_insert<char, std::char_traits<char> > (_444, "node", 4);
  goto <bb 440>;

<L342>:
  goto <bb 501> (<L203>);

  <bb 440>:
  _446 = std::basic_ostream<char>::operator<< (_444, n_1039);
  goto <bb 442>;

<L343>:
  goto <bb 501> (<L203>);

  <bb 442>:
  # DEBUG __out => _446
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_446, " | ", 3);
  goto <bb 444>;

<L344>:
  goto <bb 501> (<L203>);

  <bb 444>:
  # DEBUG __out => _446
  # DEBUG __s => "Injecting credit for VC "
  # DEBUG __s => "Injecting credit for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_446, "Injecting credit for VC ", 24);
  goto <bb 446>;

<L345>:
  goto <bb 501> (<L203>);

  <bb 446>:
  _448 = std::basic_ostream<char>::operator<< (_446, _439);
  goto <bb 448>;

<L346>:
  goto <bb 501> (<L203>);

  <bb 448>:
  # DEBUG __out => _448
  # DEBUG __s => " into subnet "
  # DEBUG __s => " into subnet "
  std::__ostream_insert<char, std::char_traits<char> > (_448, " into subnet ", 13);
  goto <bb 450>;

<L347>:
  goto <bb 501> (<L203>);

  <bb 450>:
  _450 = std::basic_ostream<char>::operator<< (_448, subnet_1051);
  goto <bb 452>;

<L348>:
  goto <bb 501> (<L203>);

  <bb 452>:
  # DEBUG __out => _450
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_450, ".", 1);
  goto <bb 454>;

<L349>:
  goto <bb 501> (<L203>);

  <bb 454>:
  # DEBUG this => _450
  # DEBUG __pf => endl
  # DEBUG __os => _450
  _378 = _450->_vptr.basic_ostream;
  _914 = MEM[(long int *)_378 + -24B];
  _915 = (sizetype) _914;
  _916 = _450 + _915;
  # DEBUG this => _916
  # DEBUG __c => 10
  _760 = MEM[(const struct basic_ios *)_916]._M_ctype;
  # DEBUG __f => _760
  if (_760 == 0B)
    goto <bb 455>;
  else
    goto <bb 457>;

  <bb 455>:
  std::__throw_bad_cast ();

<L350>:
  goto <bb 501> (<L203>);

  <bb 457>:
  # DEBUG this => _760
  # DEBUG __c => 10
  _921 = MEM[(const struct ctype *)_760]._M_widen_ok;
  if (_921 != 0)
    goto <bb 458>;
  else
    goto <bb 459>;

  <bb 458>:
  _924 = MEM[(const struct ctype *)_760]._M_widen[10];
  pretmp_1348 = (int) _924;
  goto <bb 465>;

  <bb 459>:
  # DEBUG this => _760
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_760);
  goto <bb 461>;

<L351>:
  goto <bb 501> (<L203>);

  <bb 461>:
  _929 = MEM[(const struct ctype *)_760].D.16885._vptr.facet;
  _930 = MEM[(int (*__vtbl_ptr_type) () *)_929 + 48B];
  PROF_934 = [obj_type_ref] OBJ_TYPE_REF(_930;(const struct ctype)_760->6);
  if (PROF_934 == do_widen)
    goto <bb 465>;
  else
    goto <bb 462>;

  <bb 462>:
  _936 = OBJ_TYPE_REF(_930;(const struct ctype)_760->6) (_760, 10);
  goto <bb 464>;

<L352>:
  goto <bb 501> (<L203>);

  <bb 464>:
  pretmp_1349 = (int) _936;

  <bb 465>:
  # prephitmp_1350 = PHI <pretmp_1348(458), 10(461), pretmp_1349(464)>
  _919 = std::basic_ostream<char>::put (_450, prephitmp_1350);
  goto <bb 467>;

<L353>:
  goto <bb 501> (<L203>);

  <bb 467>:
  # DEBUG __os => _919
  std::basic_ostream<char>::flush (_919);
  goto <bb 432>;

<L354>:
  goto <bb 501> (<L203>);

<L355>:
  goto <bb 501> (<L203>);

  <bb 470>:
  # DEBUG c => _453
  _454 = &f_435->vc;
  # DEBUG D#3078 => &_453->vc
  # DEBUG this => D#3078
  # DEBUG __x => _454
  _451 = &MEM[(struct set *)_453]._M_t;
  __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique (_451, _454);
  goto <bb 472>;

<L356>:
  goto <bb 501> (<L203>);

  <bb 472>:
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#3086 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#3085 => MEM[(const bool &)&__p + 8]
  # DEBUG D#3084 => VIEW_CONVERT_EXPR<unsigned char>(D#3085)
  __p ={v} {CLOBBER};
  # DEBUG D.155703 => D#3086
  # DEBUG D.155704 => D#3084
  # DEBUG D#3079 => &this_61(D)->_net
  _511 = MEM[(struct Network * * *)this_61(D) + 184B];
  # DEBUG D#64 => D#3079
  # DEBUG __n => D#3821
  # DEBUG this => D#64
  _622 = _511 + _621;
  _456 = *_622;
  _457 = _456->D.50340.D.43877._vptr.Module;
  _458 = MEM[(int (*__vtbl_ptr_type) () *)_457 + 80B];
  OBJ_TYPE_REF(_458;(struct Network)_456->10) (_456, _453, n_1039);
  goto <bb 474>;

<L357>:
  goto <bb 501> (<L203>);

  <bb 474>:
  _460 = this_61(D)->D.65070._vptr.Module;
  _461 = MEM[(int (*__vtbl_ptr_type) () *)_460 + 24B];
  OBJ_TYPE_REF(_461;(struct TrafficManager)this_61(D)->3) (this_61(D), f_435, n_1039);
  goto <bb 476>;

<L358>:
  goto <bb 501> (<L203>);

  <bb 476>:
  pretmp_1339 = MEM[(struct map * *)&flits];
  pretmp_1341 = pretmp_1339 + pretmp_1335;
  pretmp_1343 = MEM[(struct _Rb_tree_node_base * *)pretmp_1341 + 16B];
  pretmp_1345 = &MEM[(struct _Rb_tree_impl *)pretmp_1341]._M_header;
  pretmp_1474 = this_61(D)->_nodes;

  <bb 477>:
  # prephitmp_1340 = PHI <prephitmp_1470(430), pretmp_1339(476), prephitmp_1470(429), prephitmp_1470(422)>
  # prephitmp_1342 = PHI <_620(430), pretmp_1341(476), _620(429), _620(422)>
  # prephitmp_1344 = PHI <prephitmp_1473(430), pretmp_1343(476), prephitmp_1473(429), prephitmp_1473(422)>
  # prephitmp_1346 = PHI <prephitmp_1477(430), pretmp_1345(476), prephitmp_1477(429), prephitmp_1477(422)>
  # prephitmp_1475 = PHI <prephitmp_1336(430), pretmp_1474(476), prephitmp_1336(429), prephitmp_1336(422)>
  # DEBUG D#3083 => {CLOBBER}
  # DEBUG iter$_M_node => D#3083
  n_464 = n_1039 + 1;
  # DEBUG n => n_464
  # DEBUG n => n_464
  if (n_464 >= prephitmp_1475)
    goto <bb 479>;
  else
    goto <bb 478>;

  <bb 478>:
  goto <bb 422>;

  <bb 479>:
  # prephitmp_1406 = PHI <prephitmp_1342(477)>
  # prephitmp_1405 = PHI <prephitmp_1344(477)>
  # prephitmp_1404 = PHI <prephitmp_1346(477)>

  <bb 480>:
  # prephitmp_1331 = PHI <pretmp_1334(479), pretmp_1330(420)>
  # prephitmp_1465 = PHI <prephitmp_1405(479), pretmp_1464(420)>
  # prephitmp_1467 = PHI <prephitmp_1404(479), pretmp_1466(420)>
  # prephitmp_1468 = PHI <prephitmp_1406(479), pretmp_1463(420)>
  # DEBUG D#3039 => {CLOBBER}
  # DEBUG n => D#3039
  # DEBUG D#3818 => (long unsigned int) subnet_1051
  # DEBUG D#125 => &flits
  # DEBUG __n => D#3818
  # DEBUG this => D#125
  # DEBUG this => NULL
  _625 = &prephitmp_1468->_M_t;
  # DEBUG this => _625
  # DEBUG D#214 => _625
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_625, prephitmp_1465);
  # DEBUG D#2042 => &MEM[(struct _Rb_tree *)_625]._M_impl
  # DEBUG this => D#2042
  MEM[(struct _Rb_tree_impl *)prephitmp_1468]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)prephitmp_1468]._M_header._M_left = prephitmp_1467;
  MEM[(struct _Rb_tree_impl *)prephitmp_1468]._M_header._M_right = prephitmp_1467;
  MEM[(struct _Rb_tree_impl *)prephitmp_1468]._M_node_count = 0;
  # DEBUG D#3080 => &this_61(D)->_net
  _512 = MEM[(struct Network * * *)this_61(D) + 184B];
  # DEBUG D#64 => D#3080
  # DEBUG __n => D#3818
  # DEBUG this => D#64
  _623 = prephitmp_1331 * 8;
  _624 = _512 + _623;
  _468 = *_624;
  _469 = _468->D.50340.D.43877._vptr.Module;
  _470 = MEM[(int (*__vtbl_ptr_type) () *)_469 + 32B];
  OBJ_TYPE_REF(_470;(struct Network)_468->4) (_468);
  goto <bb 482>;

<L359>:
  goto <bb 504> (<L205>);

  <bb 482>:
  # DEBUG D#3081 => &this_61(D)->_net
  _513 = MEM[(struct Network * * *)this_61(D) + 184B];
  # DEBUG D#64 => D#3081
  # DEBUG __n => D#3818
  # DEBUG this => D#64
  _630 = _513 + _623;
  _473 = *_630;
  _474 = _473->D.50340.D.43877._vptr.Module;
  _475 = MEM[(int (*__vtbl_ptr_type) () *)_474 + 40B];
  OBJ_TYPE_REF(_475;(struct Network)_473->5) (_473);
  goto <bb 484>;

<L360>:
  goto <bb 504> (<L205>);

  <bb 484>:
  subnet_477 = subnet_1051 + 1;
  # DEBUG subnet => subnet_477
  # DEBUG subnet => subnet_477
  _428 = this_61(D)->_subnets;
  if (_428 <= subnet_477)
    goto <bb 45>;
  else
    goto <bb 485>;

  <bb 485>:
  pretmp_1328 = this_61(D)->_nodes;
  goto <bb 419>;

  <bb 486>:
  __assert_fail ("_time", "trafficmanager.cpp", 1276, &__PRETTY_FUNCTION__);

  <bb 487>:
  gTrace.502_481 = gTrace;
  if (gTrace.502_481 != 0)
    goto <bb 489>;
  else
    goto <bb 488>;

  <bb 488>:
  std::vector<std::map<int, Flit*> >::~vector (&flits);
  flits ={v} {CLOBBER};
  return;

  <bb 489>:
  # DEBUG __out => &cout
  # DEBUG __s => "TIME "
  # DEBUG __s => "TIME "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "TIME ", 5);
  goto <bb 491>;

<L361>:
  goto <bb 504> (<L205>);

  <bb 491>:
  _483 = std::basic_ostream<char>::operator<< (&cout, _479);
  goto <bb 493>;

<L362>:
  goto <bb 504> (<L205>);

  <bb 493>:
  # DEBUG this => _483
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_483);
  goto <bb 488>;

<L363>:
  goto <bb 504> (<L205>);

<L208>:

<L194>:
  # DEBUG this => &D.74277
  # DEBUG this => &D.74277._M_t
  _631 = MEM[(struct _Rb_tree_node_base * *)&D.74277 + 16B];
  # DEBUG D#214 => &D.74277._M_t
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (&D.74277._M_t, _631);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)&D.74277]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  D.74277 ={v} {CLOBBER};
  resx 3

<L213>:

<L201>:
  sl ={v} {CLOBBER};
  # DEBUG this => &route_set
  # DEBUG D#1636 => &route_set._outputs
  # DEBUG this => D#1636
  # DEBUG this => &MEM[(struct set *)&route_set]._M_t
  _488 = MEM[(struct _Rb_tree_node_base * *)&route_set + 16B];
  # DEBUG D#192 => &MEM[(struct set *)&route_set]._M_t
  # DEBUG this => D#192
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&MEM[(struct set *)&route_set]._M_t, _488);
  # DEBUG D#1635 => &MEM[(struct _Rb_tree *)&route_set]._M_impl
  # DEBUG this => D#1635
  # DEBUG this => D#1635
  # DEBUG this => D#1635
  resx 12

<L364>:
  goto <bb 504> (<L205>);

<L339>:

<L203>:
  # DEBUG D#3082 => {CLOBBER}
  # DEBUG iter$_M_node => D#3082
  # DEBUG D#3038 => {CLOBBER}
  # DEBUG n => D#3038
  resx 23

<L365>:
  goto <bb 504> (<L205>);

<L211>:

<L205>:
  route_set ={v} {CLOBBER};
  std::vector<std::map<int, Flit*> >::~vector (&flits);
  resx 9

  <bb 505>:
  this_61(D)->_deadlock_timer = 0;
  # DEBUG __s => "WARNING: Possible network deadlock.\n"
  # DEBUG __out => &cout
  # DEBUG __s => "WARNING: Possible network deadlock.\n"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "WARNING: Possible network deadlock.\n", 36);
  goto <bb 8>;

  <bb 506>:
  goto <bb 8>;

  <bb 507>:

  <bb 508>:
  # DEBUG class_limit => class_limit_158
  # DEBUG f => 0B
  # DEBUG i => 1
  # DEBUG i => 1
  # DEBUG f => 0B
  if (class_limit_158 <= 0)
    goto <bb 311>;
  else
    goto <bb 60>;

  <bb 509>:
  # DEBUG this => _161
  _542 = MEM[(struct _List_node_base * *)_161];
  # DEBUG D#312 => _161
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => _542
  # DEBUG this => NULL
  f_166 = MEM[(struct Flit * const &)_542 + 16];
  # DEBUG f => f_166
  _167 = f_166->vc;
  # DEBUG D#3050 => &this_61(D)->_last_vc
  _525 = MEM[(struct vector * *)this_61(D) + 560B];
  # DEBUG D#73 => D#3050
  # DEBUG __n => _154
  # DEBUG this => D#73
  _64 = _525 + _178;
  _517 = MEM[(struct vector * *)_64];
  # DEBUG __n => D#3824
  # DEBUG this => D#67
  _87 = _517 + _113;
  _499 = MEM[(int * *)_87];
  # DEBUG __n => _160
  # DEBUG this => D#63
  _126 = _160 * 4;
  _119 = _499 + _126;
  _171 = *_119;
  if (_167 != _171)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 510>:
  # DEBUG D#3073 => &this_61(D)->_partial_packets
  # DEBUG D#78 => D#3073
  # DEBUG __n => _154
  # DEBUG this => D#78
  # DEBUG __n => D#3822
  # DEBUG this => D#127
  # DEBUG this => NULL
  # DEBUG this => D#356
  # DEBUG this => NULL
  # DEBUG __x => _404
  # DEBUG this => NULL
  nf_410 = MEM[(struct Flit * &)_404 + 16];
  # DEBUG nf => nf_410
  _411 = f_801->vc;
  nf_410->vc = _411;
  goto <bb 410>;

}



;; Function virtual bool TrafficManager::_SingleSim() (_ZN14TrafficManager10_SingleSimEv, funcdef_no=2482, decl_uid=65003, cgraph_uid=730, symbol_order=731)

Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is not innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual bool TrafficManager::_SingleSim() (struct TrafficManager * const this)
{
  bool D__I_lsm.5941;
  int D__I_lsm.5940;
  double * prev_accepted$_M_impl$_M_start;
  double * prev_latency$_M_impl$_M_start;
  char_type D.163700;
  char __c;
  char_type D.163697;
  char __c;
  char_type D.163694;
  struct basic_ostream & D.163688;
  int s;
  int c;
  bool D.163685;
  char_type D.163670;
  char __c;
  char_type D.163667;
  char __c;
  char_type D.163664;
  struct basic_ostream & D.163658;
  char_type D.163655;
  char __c;
  char_type D.163652;
  char __c;
  char_type D.163649;
  struct basic_ostream & D.163643;
  char_type D.163640;
  char __c;
  char_type D.163637;
  char __c;
  char_type D.163634;
  struct basic_ostream & D.163628;
  int curr;
  int i;
  const int count;
  struct Stats * * D.163610;
  struct Stats * * D.163601;
  double * __first;
  size_type __n;
  double * __first;
  size_type __n;
  const struct _Rb_tree_node_base * const iter$_M_node;
  double acc_count;
  double acc_latency;
  double threshold;
  int lat_exc_class;
  int empty_steps;
  double count;
  double latency;
  double accepted_change;
  double latency_change;
  double cur_accepted;
  double total_accepted_rate;
  double cur_latency;
  void * simduid.540;
  int D.105567[32];
  struct const_iterator D.105566[32];
  int iter;
  int acc_chg_exc_class;
  int total_phases;
  bool clear_last;
  struct vector prev_accepted;
  struct vector prev_latency;
  int converged;
  const value_type D.74546;
  const value_type D.74542;
  struct .omp_data_s.539 .omp_data_o.541;
  struct _Rb_tree_node_base * _6;
  eSimState _9;
  bool _22;
  bool pretmp_23;
  size_type prephitmp_24;
  bool pretmp_25;
  bool _31;
  sizetype _34;
  bool _38;
  bool prephitmp_45;
  bool pretmp_46;
  const struct _Rb_tree_node_base * _55;
  int _58;
  long unsigned int _60;
  long unsigned int _62;
  sizetype _63;
  bool _67;
  eSimState _69;
  int _70;
  eSimState _71;
  unsigned int total_phases.519_72;
  unsigned int _73;
  int (*__vtbl_ptr_type) () * _74;
  int (*__vtbl_ptr_type) () _75;
  int _77;
  int (*__vtbl_ptr_type) () * _80;
  int (*__vtbl_ptr_type) () _81;
  int (*__vtbl_ptr_type) () _84;
  int _86;
  unsigned int _88;
  long unsigned int _89;
  int _90;
  struct Stats * _91;
  int (*__vtbl_ptr_type) () * _95;
  double _97;
  int _98;
  int _99;
  int _100;
  double _101;
  int _103;
  double _104;
  double _106;
  double _107;
  double _108;
  double _112;
  double _113;
  double _114;
  struct Stats * & _116;
  long unsigned int _118;
  struct Stats * _119;
  struct Stats * _122;
  int _124;
  struct vector & _126;
  struct _Rb_tree_node_base * _127;
  long unsigned int _129;
  double & _132;
  struct Flit * _133;
  int _134;
  int _135;
  double _136;
  double _139;
  double _140;
  struct __ostream_type & _141;
  eSimState _142;
  double _143;
  double _144;
  double & _145;
  struct __ostream_type & _146;
  eSimState _147;
  double _148;
  double _149;
  bool _151;
  long unsigned int _152;
  double _153;
  struct basic_ostream & _155;
  struct __ostream_type & _156;
  int _158;
  struct ostream * _160;
  int (*__vtbl_ptr_type) () * _161;
  int (*__vtbl_ptr_type) () _162;
  eSimState _164;
  int _165;
  int _166;
  int _168;
  struct basic_ostream & _170;
  int _180;
  bool _182;
  struct Stats * & _183;
  int _187;
  long unsigned int _189;
  struct Stats * _191;
  struct Stats * & _194;
  struct Stats * _195;
  int _197;
  struct map & _200;
  long unsigned int _202;
  struct Flit * _204;
  int _205;
  int _206;
  double _207;
  double _210;
  bool pretmp_211;
  int & _215;
  double _216;
  struct basic_ostream & _218;
  struct __ostream_type & _219;
  struct ostream * _221;
  int (*__vtbl_ptr_type) () * _222;
  int (*__vtbl_ptr_type) () _223;
  bool _232;
  int * _237;
  struct vector * _238;
  bool _239;
  bool _240;
  double * _241;
  double * _242;
  double * _243;
  double * _244;
  double * _245;
  double * _246;
  double * _247;
  double * _248;
  struct Stats * * _249;
  struct Stats * * _250;
  struct Stats * * _251;
  struct Stats * * _252;
  struct Stats * * _253;
  struct map * _254;
  struct map * _255;
  double & _256;
  double & _257;
  double & _258;
  double & _259;
  double & _260;
  long unsigned int _261;
  double & _262;
  long unsigned int _263;
  double & _264;
  struct Stats * & _265;
  struct Stats * & _266;
  long unsigned int _267;
  struct map & _268;
  double & _271;
  struct const_iterator * _279;
  const struct __ctype_type * _283;
  const struct __ctype_type * _286;
  const struct __ctype_type * _297;
  const struct __ctype_type * _304;
  bool _323;
  void * PROF_331;
  bool _333;
  long unsigned int _334;
  long unsigned int _335;
  int _338;
  size_type pretmp_343;
  struct Stats * * _348;
  eSimState prephitmp_349;
  long unsigned int _350;
  struct Stats * * _351;
  int * const _353;
  int * const _354;
  long int _355;
  long int _356;
  long int _357;
  long int _358;
  int pretmp_361;
  int _362;
  long unsigned int _364;
  long unsigned int _365;
  const int & _366;
  eSimState pretmp_369;
  int _371;
  long int _373;
  sizetype _374;
  struct basic_ios * _375;
  struct basic_ostream & _378;
  int _379;
  char _380;
  bool _382;
  char_type _383;
  int _385;
  int (*__vtbl_ptr_type) () * _388;
  int (*__vtbl_ptr_type) () _389;
  bool _392;
  void * PROF_393;
  char_type _395;
  sizetype _396;
  const struct _Rb_tree_node_base * _397;
  int (*__vtbl_ptr_type) () * _398;
  long int _399;
  sizetype _400;
  struct basic_ios * _401;
  struct basic_ostream & _404;
  eSimState _405;
  char _406;
  const struct _Rb_tree_node_base * _407;
  char_type _409;
  int (*__vtbl_ptr_type) () * _414;
  int (*__vtbl_ptr_type) () _415;
  int pretmp_417;
  void * PROF_419;
  char_type _421;
  int (*__vtbl_ptr_type) () * _424;
  long int _425;
  sizetype _426;
  struct basic_ios * _427;
  struct basic_ostream & _430;
  char _432;
  char_type _435;
  bool _436;
  int (*__vtbl_ptr_type) () * _440;
  int (*__vtbl_ptr_type) () _441;
  void * PROF_445;
  char_type _447;
  eSimState pretmp_448;
  long unsigned int _452;
  long unsigned int _454;
  const int & _455;
  int _456;
  struct map * const _457;
  long unsigned int _458;
  const struct map & _459;
  const size_type _460;
  long unsigned int _463;
  long unsigned int _465;
  const struct vector & _466;
  _Bit_type * const _467;
  _Bit_type * _472;
  long unsigned int _474;
  long unsigned int _475;
  int (*__vtbl_ptr_type) () * _480;
  long int _481;
  sizetype _482;
  struct basic_ios * _483;
  struct basic_ostream & _486;
  char _488;
  bool _490;
  char_type _491;
  bool _493;
  int (*__vtbl_ptr_type) () * _496;
  int (*__vtbl_ptr_type) () _497;
  bool _499;
  void * PROF_501;
  char_type _503;
  int _506;
  bool _508;
  int _511;
  bool _515;
  struct vector * const _517;
  _Bit_type * const _518;
  unsigned int _520;
  unsigned int _521;
  long unsigned int _522;
  long unsigned int _523;
  eSimState pretmp_527;
  _Bit_type * _528;
  long unsigned int _529;
  bool _538;
  eSimState pretmp_539;
  struct _Rb_tree_node_base * _556;
  int _562;
  bool _566;
  bool _567;
  bool _571;
  int prephitmp_573;
  int pretmp_574;
  eSimState _583;
  int pretmp_587;
  int pretmp_588;
  int prephitmp_589;
  int _593;
  int * const pretmp_596;
  long unsigned int _600;
  long unsigned int _601;
  eSimState _606;
  int prephitmp_611;
  int pretmp_613;
  int (*__vtbl_ptr_type) () * pretmp_622;
  int (*__vtbl_ptr_type) () * prephitmp_623;
  int prephitmp_633;
  int pretmp_634;
  int pretmp_635;
  int prephitmp_636;
  int pretmp_637;
  int pretmp_638;
  int prephitmp_639;
  int pretmp_640;
  int prephitmp_647;
  int pretmp_656;
  int prephitmp_657;

  <bb 2>:
  # DEBUG converged => 0
  # DEBUG this => &D.74544
  # DEBUG this => &D.74544
  _58 = this_57(D)->_classes;
  __n_59 = (size_type) _58;
  # DEBUG this => &prev_latency
  # DEBUG __n => __n_59
  # DEBUG __value => &D.74542
  # DEBUG __a => &D.74544
  # DEBUG D#2184 => &prev_latency.D.55581
  # DEBUG this => D#2184
  # DEBUG __n => __n_59
  # DEBUG __a => &D.74544
  # DEBUG D#1345 => &D#2184->_M_impl
  # DEBUG this => D#1345
  # DEBUG __a => &D.74544
  # DEBUG this => D#1345
  # DEBUG __a => &D.74544
  # DEBUG this => D#1345
  # DEBUG D.121368 => &D.74544
  # DEBUG this => D#2184
  # DEBUG __n => __n_59
  # DEBUG D#1343 => D#2184
  # DEBUG __n => __n_59
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (__n_59 != 0)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 3>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => __n_59
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => __n_59
  # DEBUG this => D#2118
  # DEBUG D.163599 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (__n_59 > 2305843009213693951)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  std::__throw_bad_alloc ();

  <bb 5>:
  _60 = __n_59 * 8;
  _348 = operator new (_60);
  # DEBUG prev_latency$_M_impl$_M_start => _348
  # DEBUG D#2182 => &prev_latency
  # DEBUG D#2182 => &prev_latency
  # DEBUG D#2183 => &D.74542
  # DEBUG __n => __n_59
  # DEBUG D#2180 => D#2182
  # DEBUG this => D#2180
  # DEBUG this => D#2182
  # DEBUG D#2181 => D#2183
  # DEBUG __value => D#2181
  # DEBUG D#2179 => &D#2180->D.55581
  # DEBUG this => D#2179
  # DEBUG D#2158 => D#2181
  # DEBUG __first => NULL
  # DEBUG __n => __n_59
  # DEBUG D#2157 => D#2158
  # DEBUG __x => D#2157
  # DEBUG D.163574 => D#2159
  # DEBUG D#2156 => D#2157
  # DEBUG __first => NULL
  # DEBUG __n => __n_59
  # DEBUG D#2155 => D#2156
  # DEBUG __x => D#2155
  # DEBUG __assignable => 1
  # DEBUG D#2154 => D#2155
  # DEBUG __first => NULL
  # DEBUG __n => __n_59
  # DEBUG D#2153 => D#2154
  # DEBUG __x => D#2153
  # DEBUG D#2152 => D#2153
  # DEBUG __first => NULL
  # DEBUG __n => __n_59
  # DEBUG D#2151 => D#2152
  # DEBUG __value => D#2151
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#2150 => D#2151
  # DEBUG __first => NULL
  # DEBUG __n => __n_59
  # DEBUG __value => D#2150
  # DEBUG __tmp => 0.0
  # DEBUG __niter => __n_59
  # DEBUG __niter => __n_59
  # DEBUG __first => _348
  # DEBUG prev_latency$_M_impl$_M_start => _348
  # DEBUG D#2182 => &prev_latency
  # DEBUG D#2183 => &D.74542
  # DEBUG __n => __n_59
  # DEBUG D#2180 => D#2182
  # DEBUG this => D#2180
  # DEBUG this => D#2182
  # DEBUG D#2181 => D#2183
  # DEBUG __value => D#2181
  # DEBUG D#2179 => &D#2180->D.55581
  # DEBUG this => D#2179
  # DEBUG D#2158 => D#2181
  # DEBUG __first => NULL
  # DEBUG __n => __n_59
  # DEBUG D#2157 => D#2158
  # DEBUG __x => D#2157
  # DEBUG D.163574 => D#2159
  # DEBUG D#2156 => D#2157
  # DEBUG __first => NULL
  # DEBUG __n => __n_59
  # DEBUG D#2155 => D#2156
  # DEBUG __x => D#2155
  # DEBUG __assignable => 1
  # DEBUG D#2154 => D#2155
  # DEBUG __first => NULL
  # DEBUG __n => __n_59
  # DEBUG D#2153 => D#2154
  # DEBUG __x => D#2153
  # DEBUG D#2152 => D#2153
  # DEBUG __first => NULL
  # DEBUG __n => __n_59
  # DEBUG D#2151 => D#2152
  # DEBUG __value => D#2151
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#2150 => D#2151
  # DEBUG __n => __n_59
  # DEBUG __value => D#2150
  # DEBUG __tmp => 0.0
  # DEBUG __niter => __n_59
  # DEBUG __first => _348
  _63 = (sizetype) _58;
  _396 = _63 * 8;
  __builtin_memset (_348, 0, _396);
  pretmp_417 = this_57(D)->_classes;
  pretmp_343 = (size_type) pretmp_417;

  <bb 6>:
  # prev_latency$_M_impl$_M_start_433 = PHI <_348(5), 0B(2)>
  # prephitmp_24 = PHI <pretmp_343(5), __n_59(2)>
  # DEBUG this => &D.74544
  # DEBUG this => &D.74544
  # DEBUG this => &D.74548
  # DEBUG this => &D.74548
  # DEBUG D#3841 => this_57(D)->_classes
  # DEBUG D#3840 => (size_type) D#3841
  # DEBUG this => &prev_accepted
  # DEBUG __n => D#3840
  # DEBUG __value => &D.74546
  # DEBUG __a => &D.74548
  # DEBUG D#2184 => &prev_accepted.D.55581
  # DEBUG this => D#2184
  # DEBUG __n => D#3840
  # DEBUG __a => &D.74548
  # DEBUG D#1345 => &D#2184->_M_impl
  # DEBUG this => D#1345
  # DEBUG __a => &D.74548
  # DEBUG this => D#1345
  # DEBUG __a => &D.74548
  # DEBUG this => D#1345
  # DEBUG D.121368 => &D.74548
  # DEBUG this => D#2184
  # DEBUG __n => D#3840
  # DEBUG D#1343 => D#2184
  # DEBUG __n => D#3840
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (prephitmp_24 != 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 7>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => D#3840
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => D#3840
  # DEBUG this => D#2118
  # DEBUG D.163608 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (prephitmp_24 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  std::__throw_bad_alloc ();

  <bb 9>:
  _350 = prephitmp_24 * 8;
  _351 = operator new (_350);
  goto <bb 11>;

<L139>:
  goto <bb 219> (<L136>);

  <bb 11>:
  # DEBUG prev_accepted$_M_impl$_M_start => _351
  # DEBUG D#2182 => &prev_accepted
  # DEBUG D#2182 => &prev_accepted
  # DEBUG D#2183 => &D.74546
  # DEBUG __n => D#3840
  # DEBUG D#2180 => D#2182
  # DEBUG this => D#2180
  # DEBUG this => D#2182
  # DEBUG D#2181 => D#2183
  # DEBUG __value => D#2181
  # DEBUG D#2179 => &D#2180->D.55581
  # DEBUG this => D#2179
  # DEBUG D#2158 => D#2181
  # DEBUG __first => NULL
  # DEBUG __n => D#3840
  # DEBUG D#2157 => D#2158
  # DEBUG __x => D#2157
  # DEBUG D.163539 => D#2159
  # DEBUG D#2156 => D#2157
  # DEBUG __first => NULL
  # DEBUG __n => D#3840
  # DEBUG D#2155 => D#2156
  # DEBUG __x => D#2155
  # DEBUG __assignable => 1
  # DEBUG D#2154 => D#2155
  # DEBUG __first => NULL
  # DEBUG __n => D#3840
  # DEBUG D#2153 => D#2154
  # DEBUG __x => D#2153
  # DEBUG D#2152 => D#2153
  # DEBUG __first => NULL
  # DEBUG __n => D#3840
  # DEBUG D#2151 => D#2152
  # DEBUG __value => D#2151
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#2150 => D#2151
  # DEBUG __first => NULL
  # DEBUG __n => D#3840
  # DEBUG __value => D#2150
  # DEBUG __tmp => 0.0
  # DEBUG __niter => D#3840
  # DEBUG __niter => D#3840
  # DEBUG __first => _351
  if (prephitmp_24 == 0)
    goto <bb 227>;
  else
    goto <bb 14>;

  <bb 12>:
  # prev_accepted$_M_impl$_M_start_422 = PHI <_351(14), 0B(6)>
  # DEBUG total_phases => 0
  # DEBUG clear_last => 0
  # DEBUG converged => 0
  _379 = this_57(D)->_max_samples;
  if (_379 <= 0)
    goto <bb 13>;
  else
    goto <bb 15>;

  <bb 13>:
  pretmp_369 = this_57(D)->_sim_state;
  goto <bb 119>;

  <bb 14>:
  _34 = prephitmp_24 * 8;
  __builtin_memset (_351, 0, _34);
  goto <bb 12>;

  <bb 15>:
  _405 = this_57(D)->_sim_state;
  goto <bb 19>;

  <bb 16>:
  _71 = this_57(D)->_sim_state;
  _571 = converged_2 > 2;
  _566 = _71 == 1;
  _490 = _566 & _571;
  if (_490 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # converged_616 = PHI <converged_2(16)>
  # _606 = PHI <_71(16)>
  goto <bb 119>;

  <bb 18>:
  goto <bb 20>;

  <bb 19>:
  # prev_accepted$_M_impl$_M_start_336 = PHI <prev_accepted$_M_impl$_M_start_422(15), _351(226)>
  # _583 = PHI <_405(15), _9(226)>

  <bb 20>:
  # converged_64 = PHI <0(19), converged_2(18)>
  # clear_last_428 = PHI <0(19), clear_last_7(18)>
  # total_phases_561 = PHI <0(19), total_phases_175(18)>
  # _69 = PHI <_583(19), _71(18)>
  # DEBUG total_phases => total_phases_561
  # DEBUG clear_last => clear_last_428
  # DEBUG converged => converged_64
  if (clear_last_428 != 0)
    goto <bb 24>;
  else
    goto <bb 21>;

  <bb 21>:
  # DEBUG total_phases => total_phases_561
  # DEBUG clear_last => clear_last_428
  # DEBUG converged => converged_64
  if (_69 == 0)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  # DEBUG clear_last => 0
  # DEBUG iter => 0
  # DEBUG iter => 0
  _562 = this_57(D)->_sample_period;
  if (_562 <= 0)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 23>:
  total_phases.519_72 = (unsigned int) total_phases_561;
  _73 = total_phases.519_72 & 1;
  if (_73 == 0)
    goto <bb 24>;
  else
    goto <bb 22>;

  <bb 24>:
  # DEBUG clear_last => 0
  _74 = this_57(D)->D.65070._vptr.Module;
  _75 = MEM[(int (*__vtbl_ptr_type) () *)_74 + 40B];
  OBJ_TYPE_REF(_75;(struct TrafficManager)this_57(D)->5) (this_57(D));
  goto <bb 22>;

  <bb 25>:
  _80 = this_57(D)->D.65070._vptr.Module;
  _81 = MEM[(int (*__vtbl_ptr_type) () *)_80 + 80B];
  PROF_331 = [obj_type_ref] OBJ_TYPE_REF(_81;(struct TrafficManager)this_57(D)->10);
  if (PROF_331 == UpdateStats)
    goto <bb 34>;
  else
    goto <bb 31>;

  <bb 26>:

  <bb 27>:
  # iter_504 = PHI <0(26), iter_79(30)>
  # DEBUG iter => iter_504
  TrafficManager::_Step (this_57(D));
  goto <bb 29>;

<L141>:
  goto <bb 214> (<L135>);

  <bb 29>:
  iter_79 = iter_504 + 1;
  # DEBUG iter => iter_79
  # DEBUG iter => iter_79
  _77 = this_57(D)->_sample_period;
  if (_77 <= iter_79)
    goto <bb 25>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 27>;

  <bb 31>:
  OBJ_TYPE_REF(_81;(struct TrafficManager)this_57(D)->10) (this_57(D));
  goto <bb 33>;

<L142>:
  goto <bb 214> (<L135>);

  <bb 33>:
  pretmp_622 = this_57(D)->D.65070._vptr.Module;

  <bb 34>:
  # prephitmp_623 = PHI <_80(25), pretmp_622(33)>
  _84 = MEM[(int (*__vtbl_ptr_type) () *)prephitmp_623 + 88B];
  OBJ_TYPE_REF(_84;(const struct TrafficManager)this_57(D)->11) (this_57(D), &cout);
  goto <bb 36>;

<L143>:
  goto <bb 214> (<L135>);

  <bb 36>:
  # DEBUG lat_exc_class => -1
  # DEBUG lat_chg_exc_class => -1
  # DEBUG acc_chg_exc_class => -1
  _86 = this_57(D)->_classes;
  # DEBUG c => 0
  # DEBUG c => 0
  # DEBUG acc_chg_exc_class => -1
  # DEBUG lat_chg_exc_class => -1
  # DEBUG lat_exc_class => -1
  if (_86 > 0)
    goto <bb 37>;
  else
    goto <bb 229>;

  <bb 37>:

  <bb 38>:
  # acc_chg_exc_class_545 = PHI <-1(37), acc_chg_exc_class_11(79)>
  # acc_chg_exc_class_437 = PHI <-1(37), acc_chg_exc_class_14(79)>
  # acc_chg_exc_class_413 = PHI <-1(37), acc_chg_exc_class_17(79)>
  # acc_chg_exc_class_384 = PHI <0(37), acc_chg_exc_class_150(79)>
  # DEBUG c => acc_chg_exc_class_384
  # DEBUG acc_chg_exc_class => acc_chg_exc_class_413
  # DEBUG lat_chg_exc_class => acc_chg_exc_class_437
  # DEBUG lat_exc_class => acc_chg_exc_class_545
  _88 = GOMP_SIMD_LANE (simduid.540_87(D));
  _89 = (long unsigned int) acc_chg_exc_class_384;
  # DEBUG D#3087 => &this_57(D)->_measure_stats
  _237 = MEM[(int * *)this_57(D) + 1880B];
  # DEBUG D#63 => D#3087
  # DEBUG __n => _89
  # DEBUG this => D#63
  _62 = _89 * 4;
  _215 = _237 + _62;
  _90 = *_215;
  if (_90 == 0)
    goto <bb 78>;
  else
    goto <bb 39>;

  <bb 39>:
  # DEBUG D#3088 => &this_57(D)->_plat_stats
  _249 = MEM[(struct Stats * * *)this_57(D) + 856B];
  # DEBUG D#80 => D#3088
  # DEBUG __n => _89
  # DEBUG this => D#80
  _118 = _89 * 8;
  _116 = _249 + _118;
  _91 = *_116;
  cur_latency_93 = Stats::Average (_91);
  # DEBUG cur_latency => cur_latency_93
  # DEBUG D#3089 => &this_57(D)->_accepted_flits
  _238 = MEM[(struct vector * *)this_57(D) + 1648B];
  # DEBUG D#67 => D#3089
  # DEBUG __n => _89
  # DEBUG this => D#67
  _129 = _89 * 24;
  _126 = _238 + _129;
  # DEBUG D#3839 => &D.105567[_88]
  # DEBUG stats => _126
  # DEBUG sum => D#3839
  # DEBUG max_pos => 0B
  # DEBUG min_pos => 0B
  # DEBUG max => 0B
  # DEBUG min => 0B
  _353 = MEM[(int * *)_126];
  # DEBUG D#68 => _126
  _354 = MEM[(int * *)_126 + 8B];
  # DEBUG D#68 => _126
  # DEBUG this => D#68
  # DEBUG this => D#68
  _355 = (long int) _354;
  _356 = (long int) _353;
  _357 = _355 - _356;
  _358 = _357 /[ex] 4;
  count_359 = (const int) _358;
  # DEBUG count => count_359
  if (count_359 <= 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  __assert_fail ("count > 0", "trafficmanager.cpp", 1353, &__PRETTY_FUNCTION__);

  <bb 41>:
  # DEBUG D#61 => _126
  # DEBUG __n => 0
  # DEBUG this => D#61
  _362 = MEM[(const int &)_353];
  # DEBUG i => 1
  # DEBUG i => 1
  if (count_359 <= 1)
    goto <bb 46>;
  else
    goto <bb 42>;

  <bb 42>:

  <bb 43>:
  # i_390 = PHI <1(42), i_372(45)>
  # prephitmp_647 = PHI <_362(42), _371(45)>
  # DEBUG i => i_390
  _364 = (long unsigned int) i_390;
  # DEBUG D#61 => _126
  # DEBUG __n => _364
  # DEBUG this => D#61
  _365 = _364 * 4;
  _366 = _353 + _365;
  curr_367 = *_366;
  # DEBUG curr => curr_367
  _371 = curr_367 + prephitmp_647;
  i_372 = i_390 + 1;
  # DEBUG i => i_372
  # DEBUG i => i_372
  if (count_359 <= i_372)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # _593 = PHI <_371(43)>
  goto <bb 46>;

  <bb 45>:
  goto <bb 43>;

  <bb 46>:
  # prephitmp_633 = PHI <_593(44), _362(41)>
  _97 = (double) prephitmp_633;
  _98 = this_57(D)->_time;
  _99 = this_57(D)->_reset_time;
  _100 = _98 - _99;
  _101 = (double) _100;
  total_accepted_rate_102 = _97 / _101;
  # DEBUG total_accepted_rate => total_accepted_rate_102
  _103 = this_57(D)->_nodes;
  _104 = (double) _103;
  cur_accepted_105 = total_accepted_rate_102 / _104;
  # DEBUG cur_accepted => cur_accepted_105
  # DEBUG D#69 => &prev_latency
  # DEBUG __n => _89
  # DEBUG this => D#69
  _132 = prev_latency$_M_impl$_M_start_433 + _118;
  _106 = *_132;
  _107 = cur_latency_93 - _106;
  _108 = _107 / cur_latency_93;
  latency_change_109 = ABS_EXPR <_108>;
  # DEBUG latency_change => latency_change_109
  # DEBUG D#69 => &prev_latency
  # DEBUG __n => _89
  # DEBUG this => D#69
  *_132 = cur_latency_93;
  # DEBUG D#69 => &prev_accepted
  # DEBUG __n => _89
  # DEBUG this => D#69
  _145 = prev_accepted$_M_impl$_M_start_336 + _118;
  _112 = *_145;
  _113 = cur_accepted_105 - _112;
  _114 = _113 / cur_accepted_105;
  accepted_change_115 = ABS_EXPR <_114>;
  # DEBUG accepted_change => accepted_change_115
  # DEBUG D#69 => &prev_accepted
  # DEBUG __n => _89
  # DEBUG this => D#69
  *_145 = cur_accepted_105;
  # DEBUG D#3090 => &this_57(D)->_plat_stats
  _250 = MEM[(struct Stats * * *)this_57(D) + 856B];
  # DEBUG D#80 => D#3090
  # DEBUG __n => _89
  # DEBUG this => D#80
  _183 = _250 + _118;
  _119 = *_183;
  latency_121 = Stats::Sum (_119);
  # DEBUG latency => latency_121
  # DEBUG D#3091 => &this_57(D)->_plat_stats
  _251 = MEM[(struct Stats * * *)this_57(D) + 856B];
  # DEBUG D#80 => D#3091
  # DEBUG __n => _89
  # DEBUG this => D#80
  _194 = _251 + _118;
  _122 = *_194;
  _124 = Stats::NumSamples (_122);
  count_125 = (double) _124;
  # DEBUG count => count_125
  # DEBUG D#3092 => &D.105566[_88]
  # DEBUG this => D#3092
  MEM[(struct _Rb_tree_const_iterator *)&D.105566][_88]._M_node = 0B;
  # DEBUG D#3093 => &this_57(D)->_total_in_flight_flits
  _254 = MEM[(struct map * *)this_57(D) + 672B];
  # DEBUG D#125 => D#3093
  # DEBUG __n => _89
  # DEBUG this => D#125
  _202 = _89 * 48;
  _200 = _254 + _202;
  # DEBUG this => NULL
  _127 = MEM[(struct _Rb_tree_node_base * *)_200 + 24B];
  # DEBUG D#339 => D#340
  # DEBUG this => D#339
  # DEBUG this => NULL
  # DEBUG __x => _127
  # DEBUG this => &iter.522
  # DEBUG __it => &D.74568
  _279 = &D.105566[_88];
  MEM[(struct _Rb_tree_const_iterator *)_279] = _127;
  # DEBUG count => count_125
  # DEBUG latency => latency_121
  # DEBUG D#3096 => &this_57(D)->_total_in_flight_flits
  # DEBUG D#125 => D#3096
  # DEBUG __n => _89
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG this => D#341
  _556 = &MEM[(struct _Rb_tree *)_200]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _556
  # DEBUG this => &D.74571
  # DEBUG __it => &D.74570
  # DEBUG D#3097 => &D.105566[_88]
  # DEBUG this => D#3097
  # DEBUG __x => &D.74571
  _407 = MEM[(const struct _Rb_tree_const_iterator *)&D.105566][_88]._M_node;
  if (_407 != _556)
    goto <bb 47>;
  else
    goto <bb 51>;

  <bb 47>:
  pretmp_640 = this_57(D)->_time;

  <bb 48>:
  # latency_39 = PHI <latency_121(47), latency_137(50)>
  # count_423 = PHI <count_125(47), count_138(50)>
  # _397 = PHI <_407(47), _55(50)>
  # DEBUG count => count_423
  # DEBUG latency => latency_39
  # DEBUG D#3096 => &this_57(D)->_total_in_flight_flits
  # DEBUG D#125 => D#3096
  # DEBUG __n => _89
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG this => D#341
  # DEBUG this => NULL
  # DEBUG __x => _556
  # DEBUG this => &D.74571
  # DEBUG __it => &D.74570
  # DEBUG D#3097 => &D.105566[_88]
  # DEBUG this => D#3097
  # DEBUG __x => &D.74571
  # DEBUG D#3094 => &D.105566[_88]
  # DEBUG this => D#3094
  # DEBUG this => _397
  # DEBUG D#3095 => &MEM[(const struct _Rb_tree_node *)_397]._M_value_field
  # DEBUG __r => D#3095
  _133 = MEM[(const struct pair *)_397 + 32B].second;
  _134 = _133->ctime;
  _135 = pretmp_640 - _134;
  _136 = (double) _135;
  latency_137 = latency_39 + _136;
  # DEBUG latency => latency_137
  count_138 = count_423 + 1.0e+0;
  # DEBUG count => count_138
  # DEBUG D#3120 => &D.105566[_88]
  # DEBUG this => D#3120
  _55 = std::_Rb_tree_increment (_397);
  MEM[(struct _Rb_tree_const_iterator *)&D.105566][_88]._M_node = _55;
  # DEBUG count => count_138
  # DEBUG latency => latency_137
  # DEBUG D#3096 => &this_57(D)->_total_in_flight_flits
  # DEBUG D#125 => D#3096
  # DEBUG __n => _89
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG this => D#341
  # DEBUG this => NULL
  # DEBUG __x => _556
  # DEBUG this => &D.74571
  # DEBUG __it => &D.74570
  # DEBUG D#3097 => &D.105566[_88]
  # DEBUG this => D#3097
  # DEBUG __x => &D.74571
  if (_55 != _556)
    goto <bb 50>;
  else
    goto <bb 49>;

  <bb 49>:
  # latency_605 = PHI <latency_137(48)>
  # count_604 = PHI <count_138(48)>
  goto <bb 51>;

  <bb 50>:
  goto <bb 48>;

  <bb 51>:
  # latency_434 = PHI <latency_605(49), latency_121(46)>
  # count_56 = PHI <count_604(49), count_125(46)>
  if (acc_chg_exc_class_545 < 0)
    goto <bb 52>;
  else
    goto <bb 55>;

  <bb 52>:
  # DEBUG D#3098 => &this_57(D)->_latency_thres
  _241 = MEM[(double * *)this_57(D) + 1912B];
  # DEBUG D#69 => D#3098
  # DEBUG __n => _89
  # DEBUG this => D#69
  _256 = _241 + _118;
  _139 = *_256;
  if (_139 >= 0.0)
    goto <bb 53>;
  else
    goto <bb 55>;

  <bb 53>:
  _140 = latency_434 / count_56;
  # DEBUG D#3099 => &this_57(D)->_latency_thres
  # DEBUG D#69 => D#3099
  # DEBUG __n => _89
  # DEBUG this => D#69
  if (_139 < _140)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:

  <bb 55>:
  # acc_chg_exc_class_10 = PHI <acc_chg_exc_class_384(54), acc_chg_exc_class_545(51), acc_chg_exc_class_545(53), acc_chg_exc_class_545(52)>
  # DEBUG lat_exc_class => acc_chg_exc_class_10
  # DEBUG __out => &cout
  # DEBUG __s => "latency change    = "
  # DEBUG __s => "latency change    = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "latency change    = ", 20);
  # DEBUG this => &cout
  # DEBUG __f => latency_change_109
  _141 = std::basic_ostream<char>::_M_insert<double> (&cout, latency_change_109);
  # DEBUG this => _141
  # DEBUG __pf => endl
  # DEBUG __os => _141
  _95 = MEM[(struct basic_ostream *)_141]._vptr.basic_ostream;
  _373 = MEM[(long int *)_95 + -24B];
  _374 = (sizetype) _373;
  _375 = _141 + _374;
  # DEBUG this => _375
  # DEBUG __c => 10
  _283 = MEM[(const struct basic_ios *)_375]._M_ctype;
  # DEBUG __f => _283
  if (_283 == 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  std::__throw_bad_cast ();

  <bb 57>:
  # DEBUG this => _283
  # DEBUG __c => 10
  _380 = MEM[(const struct ctype *)_283]._M_widen_ok;
  if (_380 != 0)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  _383 = MEM[(const struct ctype *)_283]._M_widen[10];
  pretmp_634 = (int) _383;
  goto <bb 61>;

  <bb 59>:
  # DEBUG this => _283
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_283);
  _388 = MEM[(const struct ctype *)_283].D.16885._vptr.facet;
  _389 = MEM[(int (*__vtbl_ptr_type) () *)_388 + 48B];
  PROF_393 = [obj_type_ref] OBJ_TYPE_REF(_389;(const struct ctype)_283->6);
  if (PROF_393 == do_widen)
    goto <bb 61>;
  else
    goto <bb 60>;

  <bb 60>:
  _395 = OBJ_TYPE_REF(_389;(const struct ctype)_283->6) (_283, 10);
  pretmp_635 = (int) _395;

  <bb 61>:
  # prephitmp_636 = PHI <pretmp_634(58), 10(59), pretmp_635(60)>
  _378 = std::basic_ostream<char>::put (_141, prephitmp_636);
  # DEBUG __os => _378
  std::basic_ostream<char>::flush (_378);
  if (acc_chg_exc_class_437 < 0)
    goto <bb 62>;
  else
    goto <bb 67>;

  <bb 62>:
  _142 = this_57(D)->_sim_state;
  if (_142 == 0)
    goto <bb 63>;
  else
    goto <bb 222>;

  <bb 63>:
  # DEBUG D#3100 => &this_57(D)->_warmup_threshold
  _242 = MEM[(double * *)this_57(D) + 1984B];
  # DEBUG D#69 => D#3100
  # DEBUG __n => _89
  # DEBUG this => D#69
  _257 = _242 + _118;
  _143 = *_257;
  # DEBUG D#3101 => &this_57(D)->_warmup_threshold
  # DEBUG D#69 => D#3101
  # DEBUG __n => _89
  # DEBUG this => D#69
  _499 = latency_change_109 > _143;
  _239 = _143 >= 0.0;
  _67 = _239 & _499;
  if (_67 != 0)
    goto <bb 67>;
  else
    goto <bb 64>;

  <bb 64>:
  goto <bb 67>;

  <bb 65>:
  # DEBUG D#3102 => &this_57(D)->_stopping_threshold
  _243 = MEM[(double * *)this_57(D) + 1936B];
  # DEBUG D#69 => D#3102
  # DEBUG __n => _89
  # DEBUG this => D#69
  _258 = _243 + _118;
  _144 = *_258;
  # DEBUG D#3103 => &this_57(D)->_stopping_threshold
  # DEBUG D#69 => D#3103
  # DEBUG __n => _89
  # DEBUG this => D#69
  _333 = latency_change_109 > _144;
  _508 = _144 >= 0.0;
  _38 = _333 & _508;
  if (_38 != 0)
    goto <bb 67>;
  else
    goto <bb 66>;

  <bb 66>:

  <bb 67>:
  # acc_chg_exc_class_13 = PHI <acc_chg_exc_class_437(61), acc_chg_exc_class_437(222), acc_chg_exc_class_384(63), acc_chg_exc_class_384(65), acc_chg_exc_class_437(64), acc_chg_exc_class_437(66)>
  # DEBUG lat_chg_exc_class => acc_chg_exc_class_13
  # DEBUG __out => &cout
  # DEBUG __s => "throughput change = "
  # DEBUG __s => "throughput change = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "throughput change = ", 20);
  # DEBUG this => &cout
  # DEBUG __f => accepted_change_115
  _146 = std::basic_ostream<char>::_M_insert<double> (&cout, accepted_change_115);
  # DEBUG this => _146
  # DEBUG __pf => endl
  # DEBUG __os => _146
  _398 = MEM[(struct basic_ostream *)_146]._vptr.basic_ostream;
  _399 = MEM[(long int *)_398 + -24B];
  _400 = (sizetype) _399;
  _401 = _146 + _400;
  # DEBUG this => _401
  # DEBUG __c => 10
  _286 = MEM[(const struct basic_ios *)_401]._M_ctype;
  # DEBUG __f => _286
  if (_286 == 0B)
    goto <bb 56>;
  else
    goto <bb 68>;

  <bb 68>:
  # DEBUG this => _286
  # DEBUG __c => 10
  _406 = MEM[(const struct ctype *)_286]._M_widen_ok;
  if (_406 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  _409 = MEM[(const struct ctype *)_286]._M_widen[10];
  pretmp_637 = (int) _409;
  goto <bb 72>;

  <bb 70>:
  # DEBUG this => _286
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_286);
  _414 = MEM[(const struct ctype *)_286].D.16885._vptr.facet;
  _415 = MEM[(int (*__vtbl_ptr_type) () *)_414 + 48B];
  PROF_419 = [obj_type_ref] OBJ_TYPE_REF(_415;(const struct ctype)_286->6);
  if (PROF_419 == do_widen)
    goto <bb 72>;
  else
    goto <bb 71>;

  <bb 71>:
  _421 = OBJ_TYPE_REF(_415;(const struct ctype)_286->6) (_286, 10);
  pretmp_638 = (int) _421;

  <bb 72>:
  # prephitmp_639 = PHI <pretmp_637(69), 10(70), pretmp_638(71)>
  _404 = std::basic_ostream<char>::put (_146, prephitmp_639);
  # DEBUG __os => _404
  std::basic_ostream<char>::flush (_404);
  if (acc_chg_exc_class_413 < 0)
    goto <bb 73>;
  else
    goto <bb 78>;

  <bb 73>:
  _147 = this_57(D)->_sim_state;
  if (_147 == 0)
    goto <bb 74>;
  else
    goto <bb 223>;

  <bb 74>:
  # DEBUG D#3104 => &this_57(D)->_acc_warmup_threshold
  _244 = MEM[(double * *)this_57(D) + 2008B];
  # DEBUG D#69 => D#3104
  # DEBUG __n => _89
  # DEBUG this => D#69
  _259 = _244 + _118;
  _148 = *_259;
  # DEBUG D#3105 => &this_57(D)->_acc_warmup_threshold
  # DEBUG D#69 => D#3105
  # DEBUG __n => _89
  # DEBUG this => D#69
  _31 = accepted_change_115 > _148;
  _493 = _148 >= 0.0;
  _392 = _31 & _493;
  if (_392 != 0)
    goto <bb 78>;
  else
    goto <bb 75>;

  <bb 75>:
  goto <bb 78>;

  <bb 76>:
  # DEBUG D#3106 => &this_57(D)->_acc_stopping_threshold
  _245 = MEM[(double * *)this_57(D) + 1960B];
  # DEBUG D#69 => D#3106
  # DEBUG __n => _89
  # DEBUG this => D#69
  _260 = _245 + _118;
  _149 = *_260;
  # DEBUG D#3107 => &this_57(D)->_acc_stopping_threshold
  # DEBUG D#69 => D#3107
  # DEBUG __n => _89
  # DEBUG this => D#69
  _232 = accepted_change_115 > _149;
  _515 = _149 >= 0.0;
  _538 = _232 & _515;
  if (_538 != 0)
    goto <bb 78>;
  else
    goto <bb 77>;

  <bb 77>:

  <bb 78>:
  # acc_chg_exc_class_11 = PHI <acc_chg_exc_class_10(223), acc_chg_exc_class_545(38), acc_chg_exc_class_10(72), acc_chg_exc_class_10(76), acc_chg_exc_class_10(74), acc_chg_exc_class_10(75), acc_chg_exc_class_10(77)>
  # acc_chg_exc_class_14 = PHI <acc_chg_exc_class_13(223), acc_chg_exc_class_437(38), acc_chg_exc_class_13(72), acc_chg_exc_class_13(76), acc_chg_exc_class_13(74), acc_chg_exc_class_13(75), acc_chg_exc_class_13(77)>
  # acc_chg_exc_class_17 = PHI <acc_chg_exc_class_413(223), acc_chg_exc_class_413(38), acc_chg_exc_class_413(72), acc_chg_exc_class_384(76), acc_chg_exc_class_384(74), acc_chg_exc_class_413(75), acc_chg_exc_class_413(77)>
  # DEBUG acc_chg_exc_class => acc_chg_exc_class_17
  # DEBUG lat_chg_exc_class => acc_chg_exc_class_14
  # DEBUG lat_exc_class => acc_chg_exc_class_11
  acc_chg_exc_class_150 = acc_chg_exc_class_384 + 1;
  # DEBUG c => acc_chg_exc_class_150
  # DEBUG c => acc_chg_exc_class_150
  # DEBUG acc_chg_exc_class => acc_chg_exc_class_17
  # DEBUG lat_chg_exc_class => acc_chg_exc_class_14
  # DEBUG lat_exc_class => acc_chg_exc_class_11
  if (_86 > acc_chg_exc_class_150)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  goto <bb 38>;

  <bb 80>:
  # acc_chg_exc_class_615 = PHI <acc_chg_exc_class_11(78)>
  # acc_chg_exc_class_608 = PHI <acc_chg_exc_class_14(78)>
  # acc_chg_exc_class_607 = PHI <acc_chg_exc_class_17(78)>
  _151 = this_57(D)->_measure_latency;
  _22 = acc_chg_exc_class_615 >= 0;
  _240 = _22 & _151;
  if (_240 != 0)
    goto <bb 81>;
  else
    goto <bb 97>;

  <bb 81>:
  # acc_chg_exc_class_612 = PHI <acc_chg_exc_class_615(80)>
  _152 = (long unsigned int) acc_chg_exc_class_612;
  # DEBUG D#3108 => &this_57(D)->_latency_thres
  _246 = MEM[(double * *)this_57(D) + 1912B];
  # DEBUG D#69 => D#3108
  # DEBUG __n => _152
  # DEBUG this => D#69
  _261 = _152 * 8;
  _262 = _246 + _261;
  _153 = *_262;
  # DEBUG __out => &cout
  # DEBUG __s => "Average latency for class "
  # DEBUG __s => "Average latency for class "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Average latency for class ", 26);
  goto <bb 83>;

<L144>:
  goto <bb 214> (<L135>);

  <bb 83>:
  _155 = std::basic_ostream<char>::operator<< (&cout, acc_chg_exc_class_612);
  goto <bb 85>;

<L145>:
  goto <bb 214> (<L135>);

  <bb 85>:
  # DEBUG __out => _155
  # DEBUG __s => " exceeded "
  # DEBUG __s => " exceeded "
  std::__ostream_insert<char, std::char_traits<char> > (_155, " exceeded ", 10);
  goto <bb 87>;

<L146>:
  goto <bb 214> (<L135>);

  <bb 87>:
  # DEBUG this => _155
  # DEBUG __f => _153
  _156 = std::basic_ostream<char>::_M_insert<double> (_155, _153);
  goto <bb 89>;

<L147>:
  goto <bb 214> (<L135>);

  <bb 89>:
  # DEBUG __out => _156
  # DEBUG __s => " cycles. Aborting simulation."
  # DEBUG __s => " cycles. Aborting simulation."
  std::__ostream_insert<char, std::char_traits<char> > (_156, " cycles. Aborting simulation.", 29);
  goto <bb 91>;

<L148>:
  goto <bb 214> (<L135>);

  <bb 91>:
  # DEBUG this => _156
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_156);
  goto <bb 93>;

<L149>:
  goto <bb 214> (<L135>);

  <bb 93>:
  # DEBUG converged => 0
  this_57(D)->_sim_state = 2;
  _158 = this_57(D)->_time;
  this_57(D)->_drain_time = _158;
  _160 = this_57(D)->_stats_out;
  if (_160 != 0B)
    goto <bb 94>;
  else
    goto <bb 190>;

  <bb 94>:
  _161 = this_57(D)->D.65070._vptr.Module;
  _162 = MEM[(int (*__vtbl_ptr_type) () *)_161 + 72B];
  OBJ_TYPE_REF(_162;(const struct TrafficManager)this_57(D)->9) (this_57(D), _160);

  <bb 95>:
  pretmp_448 = this_57(D)->_sim_state;
  goto <bb 119>;

<L150>:
  goto <bb 214> (<L135>);

  <bb 97>:
  # _382 = PHI <_151(80), _436(229)>
  # acc_chg_exc_class_585 = PHI <acc_chg_exc_class_607(80), -1(229)>
  # acc_chg_exc_class_586 = PHI <acc_chg_exc_class_608(80), -1(229)>
  _164 = this_57(D)->_sim_state;
  if (_164 == 0)
    goto <bb 98>;
  else
    goto <bb 113>;

  <bb 98>:
  _165 = this_57(D)->_warmup_periods;
  if (_165 > 0)
    goto <bb 99>;
  else
    goto <bb 100>;

  <bb 99>:
  _166 = total_phases_561 + 1;
  if (_165 <= _166)
    goto <bb 102>;
  else
    goto <bb 117>;

  <bb 100>:
  _567 = acc_chg_exc_class_586 < 0;
  if (_382 <= _567)
    goto <bb 101>;
  else
    goto <bb 117>;

  <bb 101>:
  if (acc_chg_exc_class_585 < 0)
    goto <bb 102>;
  else
    goto <bb 117>;

  <bb 102>:
  _168 = this_57(D)->_time;
  # DEBUG __out => &cout
  # DEBUG __s => "Warmed up ..."
  # DEBUG __s => "Warmed up ..."
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Warmed up ...", 13);
  goto <bb 104>;

<L151>:
  goto <bb 214> (<L135>);

  <bb 104>:
  # DEBUG __out => &cout
  # DEBUG __s => "Time used is "
  # DEBUG __s => "Time used is "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Time used is ", 13);
  goto <bb 106>;

<L152>:
  goto <bb 214> (<L135>);

  <bb 106>:
  _170 = std::basic_ostream<char>::operator<< (&cout, _168);
  goto <bb 108>;

<L153>:
  goto <bb 214> (<L135>);

  <bb 108>:
  # DEBUG __out => _170
  # DEBUG __s => " cycles"
  # DEBUG __s => " cycles"
  std::__ostream_insert<char, std::char_traits<char> > (_170, " cycles", 7);
  goto <bb 110>;

<L154>:
  goto <bb 214> (<L135>);

  <bb 110>:
  # DEBUG this => _170
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_170);
  goto <bb 112>;

<L155>:
  goto <bb 214> (<L135>);

  <bb 112>:
  # DEBUG clear_last => 1
  this_57(D)->_sim_state = 1;
  goto <bb 117>;

  <bb 113>:
  if (_164 == 1)
    goto <bb 114>;
  else
    goto <bb 117>;

  <bb 114>:
  _323 = acc_chg_exc_class_586 < 0;
  if (_323 >= _382)
    goto <bb 115>;
  else
    goto <bb 117>;

  <bb 115>:
  if (acc_chg_exc_class_585 < 0)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  converged_172 = converged_64 + 1;
  # DEBUG converged => converged_172

  <bb 117>:
  # converged_2 = PHI <converged_64(112), converged_64(113), converged_64(101), converged_64(99), converged_172(116), 0(115), converged_64(100), 0(114)>
  # clear_last_7 = PHI <1(112), 0(113), 0(101), 0(99), 0(116), 0(115), 0(100), 0(114)>
  # DEBUG clear_last => clear_last_7
  # DEBUG converged => converged_2
  .omp_data_o.541.total_phases = total_phases_561;
  __builtin_GOMP_parallel (_ZN14TrafficManager10_SingleSimEv._omp_fn.0, &.omp_data_o.541, 0, 0);
  total_phases_175 = .omp_data_o.541.total_phases;
  # DEBUG total_phases => total_phases_175
  .omp_data_o.541 ={v} {CLOBBER};
  # DEBUG total_phases => total_phases_175
  # DEBUG clear_last => clear_last_7
  # DEBUG converged => converged_2
  _70 = this_57(D)->_max_samples;
  if (_70 <= total_phases_175)
    goto <bb 118>;
  else
    goto <bb 16>;

  <bb 118>:
  # converged_617 = PHI <converged_2(117)>
  pretmp_539 = this_57(D)->_sim_state;

  <bb 119>:
  # converged_3 = PHI <converged_617(118), converged_616(17), 0(95), 0(228), 0(13)>
  # prev_accepted$_M_impl$_M_start_579 = PHI <prev_accepted$_M_impl$_M_start_336(118), prev_accepted$_M_impl$_M_start_336(17), prev_accepted$_M_impl$_M_start_336(95), _351(228), prev_accepted$_M_impl$_M_start_422(13)>
  # prephitmp_349 = PHI <pretmp_539(118), _606(17), pretmp_448(95), pretmp_527(228), pretmp_369(13)>
  # DEBUG converged => converged_3
  if (prephitmp_349 == 1)
    goto <bb 120>;
  else
    goto <bb 190>;

  <bb 120>:
  converged_178 = converged_3 + 1;
  # DEBUG converged => converged_178
  this_57(D)->_sim_state = 2;
  _180 = this_57(D)->_time;
  this_57(D)->_drain_time = _180;
  _182 = this_57(D)->_measure_latency;
  if (_182 != 0)
    goto <bb 122>;
  else
    goto <bb 121>;

  <bb 121>:
  pretmp_46 = converged_178 > 0;
  goto <bb 208>;

  <bb 122>:
  # DEBUG __out => &cout
  # DEBUG __s => "Draining all recorded packets ..."
  # DEBUG __s => "Draining all recorded packets ..."
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Draining all recorded packets ...", 33);
  goto <bb 124>;

<L156>:
  goto <bb 214> (<L135>);

  <bb 124>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _424 = cout._vptr.basic_ostream;
  _425 = MEM[(long int *)_424 + -24B];
  _426 = (sizetype) _425;
  _427 = &cout + _426;
  # DEBUG this => _427
  # DEBUG __c => 10
  _297 = MEM[(const struct basic_ios *)_427]._M_ctype;
  # DEBUG __f => _297
  if (_297 == 0B)
    goto <bb 125>;
  else
    goto <bb 127>;

  <bb 125>:
  std::__throw_bad_cast ();

<L157>:
  goto <bb 214> (<L135>);

  <bb 127>:
  # DEBUG this => _297
  # DEBUG __c => 10
  _432 = MEM[(const struct ctype *)_297]._M_widen_ok;
  if (_432 != 0)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  _435 = MEM[(const struct ctype *)_297]._M_widen[10];
  pretmp_587 = (int) _435;
  goto <bb 135>;

  <bb 129>:
  # DEBUG this => _297
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_297);
  goto <bb 131>;

<L158>:
  goto <bb 214> (<L135>);

  <bb 131>:
  _440 = MEM[(const struct ctype *)_297].D.16885._vptr.facet;
  _441 = MEM[(int (*__vtbl_ptr_type) () *)_440 + 48B];
  PROF_445 = [obj_type_ref] OBJ_TYPE_REF(_441;(const struct ctype)_297->6);
  if (PROF_445 == do_widen)
    goto <bb 135>;
  else
    goto <bb 132>;

  <bb 132>:
  _447 = OBJ_TYPE_REF(_441;(const struct ctype)_297->6) (_297, 10);
  goto <bb 134>;

<L159>:
  goto <bb 214> (<L135>);

  <bb 134>:
  pretmp_588 = (int) _447;

  <bb 135>:
  # prephitmp_589 = PHI <pretmp_587(128), 10(131), pretmp_588(134)>
  _430 = std::basic_ostream<char>::put (&cout, prephitmp_589);
  goto <bb 137>;

<L160>:
  goto <bb 214> (<L135>);

  <bb 137>:
  # DEBUG __os => _430
  std::basic_ostream<char>::flush (_430);

  <bb 138>:
  goto <bb 141>;

<L161>:
  goto <bb 214> (<L135>);

  <bb 140>:

  <bb 141>:
  # empty_steps_21 = PHI <0(138), empty_steps_186(140)>
  # DEBUG empty_steps => empty_steps_21
  # DEBUG this => this_57(D)
  # DEBUG c => 0
  _385 = MEM[(const struct TrafficManager *)this_57(D)]._classes;
  if (_385 <= 0)
    goto <bb 142>;
  else
    goto <bb 143>;

  <bb 142>:
  pretmp_23 = converged_178 > 0;
  goto <bb 208>;

  <bb 143>:
  pretmp_596 = MEM[(int * *)this_57(D) + 1880B];

  <bb 144>:
  # c_575 = PHI <0(143), c_477(153)>
  # DEBUG c => c_575
  _452 = (long unsigned int) c_575;
  # DEBUG D#224 => &MEM[(const struct TrafficManager *)this_57(D)]._measure_stats
  # DEBUG D#61 => D#224
  # DEBUG __n => _452
  # DEBUG this => D#61
  _454 = _452 * 4;
  _455 = pretmp_596 + _454;
  _456 = *_455;
  if (_456 != 0)
    goto <bb 145>;
  else
    goto <bb 152>;

  <bb 145>:
  # DEBUG D#225 => &MEM[(const struct TrafficManager *)this_57(D)]._measured_in_flight_flits
  _457 = MEM[(struct map * *)this_57(D) + 696B];
  # DEBUG D#129 => D#225
  # DEBUG __n => _452
  # DEBUG this => D#129
  _458 = _452 * 48;
  _459 = _457 + _458;
  # DEBUG this => NULL
  _460 = MEM[(long unsigned int *)_459 + 40B];
  # DEBUG D#222 => D#223
  # DEBUG this => D#222
  if (_460 == 0)
    goto <bb 146>;
  else
    goto <bb 224>;

  <bb 146>:
  # DEBUG s => 0
  _511 = MEM[(const struct TrafficManager *)this_57(D)]._nodes;
  if (_511 <= 0)
    goto <bb 152>;
  else
    goto <bb 147>;

  <bb 147>:
  # DEBUG D#226 => &MEM[(const struct TrafficManager *)this_57(D)]._qdrained
  _517 = MEM[(struct vector * *)this_57(D) + 624B];
  # DEBUG D#130 => D#226
  # DEBUG __n => 0
  # DEBUG this => D#130
  _518 = MEM[(_Bit_type * *)_517];
  # DEBUG __n => _452
  # DEBUG this => D#131
  _520 = (unsigned int) _452;
  _521 = _520 & 63;
  _522 = _452 >> 6;
  _523 = _522 * 8;
  _528 = _518 + _523;
  # DEBUG this => NULL
  # DEBUG __x => _528
  # DEBUG __y => _521
  # DEBUG this => D#47
  # DEBUG __x => _528
  # DEBUG __y => _521
  # DEBUG this => D#47
  # DEBUG this => D#49
  # DEBUG this => D#49
  _334 = 1 << _521;
  # DEBUG this => NULL
  # DEBUG __x => _528
  # DEBUG __y => _334
  # DEBUG this => NULL
  _335 = *_528;
  _529 = _334 & _335;
  if (_529 == 0)
    goto <bb 224>;
  else
    goto <bb 150>;

  <bb 148>:
  _463 = (long unsigned int) s_476;
  # DEBUG D#226 => &MEM[(const struct TrafficManager *)this_57(D)]._qdrained
  # DEBUG D#130 => D#226
  # DEBUG __n => _463
  # DEBUG this => D#130
  _465 = _463 * 40;
  _466 = _517 + _465;
  _467 = MEM[(_Bit_type * *)_466];
  # DEBUG __n => _452
  # DEBUG this => D#131
  _472 = _467 + _523;
  # DEBUG this => NULL
  # DEBUG __x => _472
  # DEBUG __y => _521
  # DEBUG this => D#47
  # DEBUG __x => _472
  # DEBUG __y => _521
  # DEBUG this => D#47
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => NULL
  # DEBUG __x => _472
  # DEBUG __y => _334
  # DEBUG this => NULL
  _474 = *_472;
  _475 = _334 & _474;
  if (_475 == 0)
    goto <bb 224>;
  else
    goto <bb 149>;

  <bb 149>:
  goto <bb 151>;

  <bb 150>:

  <bb 151>:
  # s_576 = PHI <0(150), s_476(149)>
  # DEBUG s => s_576
  # DEBUG D#226 => &MEM[(const struct TrafficManager *)this_57(D)]._qdrained
  # DEBUG D#130 => D#226
  # DEBUG __n => 0
  # DEBUG this => D#130
  # DEBUG __n => _452
  # DEBUG this => D#131
  # DEBUG this => NULL
  # DEBUG __x => _528
  # DEBUG __y => _521
  # DEBUG this => D#47
  # DEBUG __x => _528
  # DEBUG __y => _521
  # DEBUG this => D#47
  # DEBUG this => D#49
  # DEBUG this => D#49
  # DEBUG this => NULL
  # DEBUG __x => _528
  # DEBUG __y => _334
  # DEBUG this => NULL
  s_476 = s_576 + 1;
  # DEBUG s => s_476
  # DEBUG s => s_476
  if (s_476 >= _511)
    goto <bb 152>;
  else
    goto <bb 148>;

  <bb 152>:
  c_477 = c_575 + 1;
  # DEBUG c => c_477
  # DEBUG c => c_477
  if (_385 <= c_477)
    goto <bb 154>;
  else
    goto <bb 153>;

  <bb 153>:
  goto <bb 144>;

  <bb 154>:
  pretmp_211 = converged_178 > 0;
  goto <bb 208>;

  <bb 155>:
  empty_steps_186 = empty_steps_21 + 1;
  # DEBUG empty_steps => empty_steps_186
  _187 = empty_steps_186 % 1000;
  if (_187 == 0)
    goto <bb 156>;
  else
    goto <bb 140>;

  <bb 156>:
  # DEBUG c => 0
  _506 = this_57(D)->_classes;
  if (_506 <= 0)
    goto <bb 188>;
  else
    goto <bb 157>;

  <bb 157>:

  <bb 158>:
  # lat_exc_class_274 = PHI <0(157), lat_exc_class_212(171)>
  # prephitmp_611 = PHI <_506(157), prephitmp_657(171)>
  # DEBUG c => lat_exc_class_274
  _189 = (long unsigned int) lat_exc_class_274;
  # DEBUG D#3109 => &this_57(D)->_latency_thres
  _247 = MEM[(double * *)this_57(D) + 1912B];
  # DEBUG D#69 => D#3109
  # DEBUG __n => _189
  # DEBUG this => D#69
  _263 = _189 * 8;
  _264 = _247 + _263;
  threshold_190 = *_264;
  # DEBUG threshold => threshold_190
  if (threshold_190 < 0.0)
    goto <bb 170>;
  else
    goto <bb 159>;

  <bb 159>:
  # DEBUG D#3110 => &this_57(D)->_plat_stats
  _252 = MEM[(struct Stats * * *)this_57(D) + 856B];
  # DEBUG D#80 => D#3110
  # DEBUG __n => _189
  # DEBUG this => D#80
  _265 = _252 + _263;
  _191 = *_265;
  acc_latency_193 = Stats::Sum (_191);
  goto <bb 161>;

<L162>:
  goto <bb 214> (<L135>);

  <bb 161>:
  # DEBUG acc_latency => acc_latency_193
  # DEBUG D#3111 => &this_57(D)->_plat_stats
  _253 = MEM[(struct Stats * * *)this_57(D) + 856B];
  # DEBUG D#80 => D#3111
  # DEBUG __n => _189
  # DEBUG this => D#80
  _266 = _253 + _263;
  _195 = *_266;
  _197 = Stats::NumSamples (_195);
  goto <bb 163>;

<L163>:
  goto <bb 214> (<L135>);

  <bb 163>:
  acc_count_198 = (double) _197;
  # DEBUG acc_count => acc_count_198
  # DEBUG this => &iter
  # DEBUG iter$_M_node => 0B
  # DEBUG D#3112 => &this_57(D)->_total_in_flight_flits
  _255 = MEM[(struct map * *)this_57(D) + 672B];
  # DEBUG D#125 => D#3112
  # DEBUG __n => _189
  # DEBUG this => D#125
  _267 = _189 * 48;
  _268 = _255 + _267;
  # DEBUG this => NULL
  iter$_M_node_199 = MEM[(struct _Rb_tree_node_base * *)_268 + 24B];
  # DEBUG D#339 => D#340
  # DEBUG this => D#339
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_199
  # DEBUG this => &iter.537
  # DEBUG __it => &D.74580
  # DEBUG iter$_M_node => iter$_M_node_199
  # DEBUG iter$_M_node => iter$_M_node_199
  # DEBUG acc_count => acc_count_198
  # DEBUG acc_latency => acc_latency_193
  # DEBUG D#3114 => &this_57(D)->_total_in_flight_flits
  # DEBUG D#125 => D#3114
  # DEBUG __n => _189
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG this => D#341
  _6 = &MEM[(struct _Rb_tree *)_268]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _6
  # DEBUG this => &D.74583
  # DEBUG __it => &D.74582
  # DEBUG this => &iter
  # DEBUG __x => &D.74583
  if (_6 != iter$_M_node_199)
    goto <bb 164>;
  else
    goto <bb 168>;

  <bb 164>:
  pretmp_613 = this_57(D)->_time;

  <bb 165>:
  # acc_latency_273 = PHI <acc_latency_193(164), acc_latency_208(167)>
  # acc_count_568 = PHI <acc_count_198(164), acc_count_209(167)>
  # iter$_M_node_537 = PHI <iter$_M_node_199(164), iter$_M_node_269(167)>
  # DEBUG iter$_M_node => iter$_M_node_537
  # DEBUG acc_count => acc_count_568
  # DEBUG acc_latency => acc_latency_273
  # DEBUG D#3114 => &this_57(D)->_total_in_flight_flits
  # DEBUG D#125 => D#3114
  # DEBUG __n => _189
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG this => D#341
  # DEBUG this => NULL
  # DEBUG __x => _6
  # DEBUG this => &D.74583
  # DEBUG __it => &D.74582
  # DEBUG this => &iter
  # DEBUG __x => &D.74583
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_537
  # DEBUG D#3113 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_537]._M_value_field
  # DEBUG __r => D#3113
  _204 = MEM[(const struct pair *)iter$_M_node_537 + 32B].second;
  _205 = _204->ctime;
  _206 = pretmp_613 - _205;
  _207 = (double) _206;
  acc_latency_208 = _207 + acc_latency_273;
  # DEBUG acc_latency => acc_latency_208
  acc_count_209 = acc_count_568 + 1.0e+0;
  # DEBUG acc_count => acc_count_209
  # DEBUG this => &iter
  iter$_M_node_269 = std::_Rb_tree_increment (iter$_M_node_537);
  # DEBUG iter$_M_node => iter$_M_node_269
  # DEBUG iter$_M_node => iter$_M_node_269
  # DEBUG acc_count => acc_count_209
  # DEBUG acc_latency => acc_latency_208
  # DEBUG D#3114 => &this_57(D)->_total_in_flight_flits
  # DEBUG D#125 => D#3114
  # DEBUG __n => _189
  # DEBUG this => D#125
  # DEBUG this => NULL
  # DEBUG this => D#341
  # DEBUG this => NULL
  # DEBUG __x => _6
  # DEBUG this => &D.74583
  # DEBUG __it => &D.74582
  # DEBUG this => &iter
  # DEBUG __x => &D.74583
  if (_6 != iter$_M_node_269)
    goto <bb 167>;
  else
    goto <bb 166>;

  <bb 166>:
  # acc_latency_603 = PHI <acc_latency_208(165)>
  # acc_count_602 = PHI <acc_count_209(165)>
  goto <bb 168>;

  <bb 167>:
  goto <bb 165>;

  <bb 168>:
  # acc_latency_420 = PHI <acc_latency_603(166), acc_latency_193(163)>
  # acc_count_557 = PHI <acc_count_602(166), acc_count_198(163)>
  _210 = acc_latency_420 / acc_count_557;
  if (threshold_190 < _210)
    goto <bb 172>;
  else
    goto <bb 169>;

  <bb 169>:
  pretmp_656 = this_57(D)->_classes;

  <bb 170>:
  # prephitmp_657 = PHI <pretmp_656(169), prephitmp_611(158)>
  lat_exc_class_212 = lat_exc_class_274 + 1;
  # DEBUG c => lat_exc_class_212
  # DEBUG c => lat_exc_class_212
  if (lat_exc_class_212 >= prephitmp_657)
    goto <bb 188>;
  else
    goto <bb 171>;

  <bb 171>:
  goto <bb 158>;

  <bb 172>:
  # _601 = PHI <_263(168)>
  # lat_exc_class_599 = PHI <lat_exc_class_274(168)>
  # DEBUG lat_exc_class => lat_exc_class_599
  if (lat_exc_class_599 >= 0)
    goto <bb 173>;
  else
    goto <bb 188>;

  <bb 173>:
  # _600 = PHI <_601(172)>
  # lat_exc_class_594 = PHI <lat_exc_class_599(172)>
  # DEBUG D#3115 => &this_57(D)->_latency_thres
  _248 = MEM[(double * *)this_57(D) + 1912B];
  # DEBUG D#69 => D#3115
  # DEBUG __n => _189
  # DEBUG this => D#69
  _271 = _248 + _600;
  _216 = *_271;
  # DEBUG __out => &cout
  # DEBUG __s => "Average latency for class "
  # DEBUG __s => "Average latency for class "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Average latency for class ", 26);
  goto <bb 175>;

<L164>:
  goto <bb 214> (<L135>);

  <bb 175>:
  _218 = std::basic_ostream<char>::operator<< (&cout, lat_exc_class_594);
  goto <bb 177>;

<L165>:
  goto <bb 214> (<L135>);

  <bb 177>:
  # DEBUG __out => _218
  # DEBUG __s => " exceeded "
  # DEBUG __s => " exceeded "
  std::__ostream_insert<char, std::char_traits<char> > (_218, " exceeded ", 10);
  goto <bb 179>;

<L166>:
  goto <bb 214> (<L135>);

  <bb 179>:
  # DEBUG this => _218
  # DEBUG __f => _216
  _219 = std::basic_ostream<char>::_M_insert<double> (_218, _216);
  goto <bb 181>;

<L167>:
  goto <bb 214> (<L135>);

  <bb 181>:
  # DEBUG __out => _219
  # DEBUG __s => " cycles. Aborting simulation."
  # DEBUG __s => " cycles. Aborting simulation."
  std::__ostream_insert<char, std::char_traits<char> > (_219, " cycles. Aborting simulation.", 29);
  goto <bb 183>;

<L168>:
  goto <bb 214> (<L135>);

  <bb 183>:
  # DEBUG this => _219
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_219);
  goto <bb 185>;

<L169>:
  goto <bb 214> (<L135>);

  <bb 185>:
  # DEBUG converged => 0
  this_57(D)->_sim_state = 0;
  _221 = this_57(D)->_stats_out;
  if (_221 != 0B)
    goto <bb 186>;
  else
    goto <bb 208>;

  <bb 186>:
  _222 = this_57(D)->D.65070._vptr.Module;
  _223 = MEM[(int (*__vtbl_ptr_type) () *)_222 + 72B];
  OBJ_TYPE_REF(_223;(const struct TrafficManager)this_57(D)->9) (this_57(D), _221);
  goto <bb 208>;

<L170>:
  goto <bb 214> (<L135>);

  <bb 188>:
  # DEBUG lat_exc_class => NULL
  TrafficManager::_DisplayRemaining.constprop (this_57(D));
  goto <bb 140>;

<L171>:
  goto <bb 214> (<L135>);

  <bb 190>:
  # converged_418 = PHI <converged_3(119), 0(93)>
  # prev_accepted$_M_impl$_M_start_580 = PHI <prev_accepted$_M_impl$_M_start_579(119), prev_accepted$_M_impl$_M_start_336(93)>
  # DEBUG converged => converged_418
  # DEBUG __out => &cout
  # DEBUG __s => "Too many sample periods needed to converge"
  # DEBUG __s => "Too many sample periods needed to converge"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Too many sample periods needed to converge", 42);
  goto <bb 192>;

<L172>:
  goto <bb 214> (<L135>);

  <bb 192>:
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _480 = cout._vptr.basic_ostream;
  _481 = MEM[(long int *)_480 + -24B];
  _482 = (sizetype) _481;
  _483 = &cout + _482;
  # DEBUG this => _483
  # DEBUG __c => 10
  _304 = MEM[(const struct basic_ios *)_483]._M_ctype;
  # DEBUG __f => _304
  if (_304 == 0B)
    goto <bb 193>;
  else
    goto <bb 195>;

  <bb 193>:
  std::__throw_bad_cast ();

<L173>:
  goto <bb 214> (<L135>);

  <bb 195>:
  # DEBUG this => _304
  # DEBUG __c => 10
  _488 = MEM[(const struct ctype *)_304]._M_widen_ok;
  if (_488 != 0)
    goto <bb 196>;
  else
    goto <bb 197>;

  <bb 196>:
  _491 = MEM[(const struct ctype *)_304]._M_widen[10];
  pretmp_574 = (int) _491;
  goto <bb 203>;

  <bb 197>:
  # DEBUG this => _304
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_304);
  goto <bb 199>;

<L174>:
  goto <bb 214> (<L135>);

  <bb 199>:
  _496 = MEM[(const struct ctype *)_304].D.16885._vptr.facet;
  _497 = MEM[(int (*__vtbl_ptr_type) () *)_496 + 48B];
  PROF_501 = [obj_type_ref] OBJ_TYPE_REF(_497;(const struct ctype)_304->6);
  if (PROF_501 == do_widen)
    goto <bb 203>;
  else
    goto <bb 200>;

  <bb 200>:
  _503 = OBJ_TYPE_REF(_497;(const struct ctype)_304->6) (_304, 10);
  goto <bb 202>;

<L175>:
  goto <bb 214> (<L135>);

  <bb 202>:
  pretmp_361 = (int) _503;

  <bb 203>:
  # prephitmp_573 = PHI <pretmp_574(196), 10(199), pretmp_361(202)>
  _486 = std::basic_ostream<char>::put (&cout, prephitmp_573);
  goto <bb 205>;

<L176>:
  goto <bb 214> (<L135>);

  <bb 205>:
  # DEBUG __os => _486
  std::basic_ostream<char>::flush (_486);
  goto <bb 207>;

<L177>:
  goto <bb 214> (<L135>);

  <bb 207>:
  pretmp_25 = converged_418 > 0;

  <bb 208>:
  # prev_accepted$_M_impl$_M_start_581 = PHI <prev_accepted$_M_impl$_M_start_579(186), prev_accepted$_M_impl$_M_start_580(207), prev_accepted$_M_impl$_M_start_579(121), prev_accepted$_M_impl$_M_start_579(185), prev_accepted$_M_impl$_M_start_579(154), prev_accepted$_M_impl$_M_start_579(142)>
  # prephitmp_45 = PHI <0(186), pretmp_25(207), pretmp_46(121), 0(185), pretmp_211(154), pretmp_23(142)>
  # DEBUG converged => NULL
  # DEBUG this => &prev_accepted
  # DEBUG D#503 => &prev_accepted.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => prev_accepted.D.55581._M_impl._M_finish
  # DEBUG D#505 => prev_accepted.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &prev_accepted.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  # DEBUG D#500 => (long int) prev_accepted$_M_impl$_M_start_581
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => prev_accepted$_M_impl$_M_start_581
  # DEBUG __n => D#497
  if (prev_accepted$_M_impl$_M_start_581 != 0B)
    goto <bb 209>;
  else
    goto <bb 210>;

  <bb 209>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => prev_accepted$_M_impl$_M_start_581
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => prev_accepted$_M_impl$_M_start_581
  # DEBUG this => D#489
  # DEBUG D.155988 => D#490
  operator delete (prev_accepted$_M_impl$_M_start_581);

  <bb 210>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)&prev_accepted] ={v} {CLOBBER};
  # DEBUG this => &prev_latency
  # DEBUG D#503 => &prev_latency.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => prev_latency.D.55581._M_impl._M_finish
  # DEBUG D#505 => prev_latency.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &prev_latency.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  # DEBUG D#500 => (long int) prev_latency$_M_impl$_M_start_433
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => prev_latency$_M_impl$_M_start_433
  # DEBUG __n => D#497
  if (prev_latency$_M_impl$_M_start_433 != 0B)
    goto <bb 211>;
  else
    goto <bb 212>;

  <bb 211>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => prev_latency$_M_impl$_M_start_433
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => prev_latency$_M_impl$_M_start_433
  # DEBUG this => D#489
  # DEBUG D.155973 => D#490
  operator delete (prev_latency$_M_impl$_M_start_433);

  <bb 212>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  prev_latency ={v} {CLOBBER};
  prev_accepted ={v} {CLOBBER};
  return prephitmp_45;

<L140>:

  # prev_accepted$_M_impl$_M_start_582 = PHI <prev_accepted$_M_impl$_M_start_336(213), prev_accepted$_M_impl$_M_start_336(28), prev_accepted$_M_impl$_M_start_336(32), prev_accepted$_M_impl$_M_start_336(35), prev_accepted$_M_impl$_M_start_336(82), prev_accepted$_M_impl$_M_start_336(84), prev_accepted$_M_impl$_M_start_336(86), prev_accepted$_M_impl$_M_start_336(88), prev_accepted$_M_impl$_M_start_336(90), prev_accepted$_M_impl$_M_start_336(92), prev_accepted$_M_impl$_M_start_336(96), prev_accepted$_M_impl$_M_start_336(103), prev_accepted$_M_impl$_M_start_336(105), prev_accepted$_M_impl$_M_start_336(107), prev_accepted$_M_impl$_M_start_336(109), prev_accepted$_M_impl$_M_start_336(111), prev_accepted$_M_impl$_M_start_579(123), prev_accepted$_M_impl$_M_start_579(139), prev_accepted$_M_impl$_M_start_579(162), prev_accepted$_M_impl$_M_start_579(225), prev_accepted$_M_impl$_M_start_579(174), prev_accepted$_M_impl$_M_start_579(176), prev_accepted$_M_impl$_M_start_579(178), prev_accepted$_M_impl$_M_start_579(180), prev_accepted$_M_impl$_M_start_579(182), prev_accepted$_M_impl$_M_start_579(184), prev_accepted$_M_impl$_M_start_579(187), prev_accepted$_M_impl$_M_start_579(189), prev_accepted$_M_impl$_M_start_580(191), prev_accepted$_M_impl$_M_start_580(206), prev_accepted$_M_impl$_M_start_579(160), prev_accepted$_M_impl$_M_start_579(133), prev_accepted$_M_impl$_M_start_579(136), prev_accepted$_M_impl$_M_start_579(126), prev_accepted$_M_impl$_M_start_579(130), prev_accepted$_M_impl$_M_start_580(201), prev_accepted$_M_impl$_M_start_580(204), prev_accepted$_M_impl$_M_start_580(194), prev_accepted$_M_impl$_M_start_580(198)>
<L135>:
  # DEBUG this => &prev_accepted
  # DEBUG D#503 => &prev_accepted.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => prev_accepted.D.55581._M_impl._M_finish
  # DEBUG D#505 => prev_accepted.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &prev_accepted.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  # DEBUG D#500 => (long int) prev_accepted$_M_impl$_M_start_582
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => prev_accepted$_M_impl$_M_start_582
  # DEBUG __n => D#497
  if (prev_accepted$_M_impl$_M_start_582 != 0B)
    goto <bb 215>;
  else
    goto <bb 216>;

  <bb 215>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => prev_accepted$_M_impl$_M_start_582
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => prev_accepted$_M_impl$_M_start_582
  # DEBUG this => D#489
  # DEBUG D.156007 => D#490
  operator delete (prev_accepted$_M_impl$_M_start_582);

  <bb 216>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)&prev_accepted] ={v} {CLOBBER};
  resx 15

<L178>:
  goto <bb 219> (<L136>);

<L138>:

<L136>:
  # DEBUG this => &prev_latency
  # DEBUG D#503 => &prev_latency.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => prev_latency.D.55581._M_impl._M_finish
  # DEBUG D#505 => prev_latency.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &prev_latency.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  # DEBUG D#500 => (long int) prev_latency$_M_impl$_M_start_433
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => prev_latency$_M_impl$_M_start_433
  # DEBUG __n => D#497
  if (prev_latency$_M_impl$_M_start_433 != 0B)
    goto <bb 220>;
  else
    goto <bb 221>;

  <bb 220>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => prev_latency$_M_impl$_M_start_433
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => prev_latency$_M_impl$_M_start_433
  # DEBUG this => D#489
  # DEBUG D.156022 => D#490
  operator delete (prev_latency$_M_impl$_M_start_433);

  <bb 221>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  resx 8

  <bb 222>:
  if (_142 == 1)
    goto <bb 65>;
  else
    goto <bb 67>;

  <bb 223>:
  if (_147 == 1)
    goto <bb 76>;
  else
    goto <bb 78>;

  <bb 224>:
  TrafficManager::_Step (this_57(D));
  goto <bb 155>;

<L179>:
  goto <bb 214> (<L135>);

  <bb 226>:
  _9 = this_57(D)->_sim_state;
  goto <bb 19>;

  <bb 227>:
  # DEBUG total_phases => 0
  # DEBUG clear_last => 0
  # DEBUG converged => 0
  _338 = this_57(D)->_max_samples;
  if (_338 <= 0)
    goto <bb 228>;
  else
    goto <bb 226>;

  <bb 228>:
  pretmp_527 = this_57(D)->_sim_state;
  goto <bb 119>;

  <bb 229>:
  _436 = this_57(D)->_measure_latency;
  goto <bb 97>;

}



;; Function bool TrafficManager::Run() (_ZN14TrafficManager3RunEv, funcdef_no=2483, decl_uid=65032, cgraph_uid=731, symbol_order=732)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
bool TrafficManager::Run() (struct TrafficManager * const this)
{
  char_type D.163972;
  char __c;
  char_type D.163969;
  char __c;
  char_type D.163966;
  struct basic_ostream & D.163960;
  char_type D.163957;
  char __c;
  char_type D.163954;
  char __c;
  char_type D.163951;
  struct basic_ostream & D.163945;
  char_type D.163942;
  char __c;
  char_type D.163939;
  char __c;
  char_type D.163936;
  struct basic_ostream & D.163930;
  long unsigned int * __first;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  long unsigned int * __first;
  struct iterator __position;
  int __val;
  int __val;
  int c;
  int c;
  int c;
  int s;
  int i;
  bool packets_left;
  int empty_steps;
  int sim;
  bool _11;
  struct _List_node_base * _23;
  int _27;
  int _29;
  struct _List_node_base * _31;
  int _35;
  struct PacketReplyInfo * _38;
  struct list & _40;
  unsigned int _41;
  int _43;
  int _44;
  long unsigned int _45;
  int _46;
  long unsigned int _47;
  int (*__vtbl_ptr_type) () * _50;
  int (*__vtbl_ptr_type) () _51;
  int _53;
  long unsigned int _54;
  struct list & _55;
  struct TrafficPattern * _56;
  int (*__vtbl_ptr_type) () * _57;
  int (*__vtbl_ptr_type) () _58;
  struct InjectionProcess * _61;
  int (*__vtbl_ptr_type) () * _62;
  int (*__vtbl_ptr_type) () _63;
  int (*__vtbl_ptr_type) () * _66;
  int (*__vtbl_ptr_type) () _67;
  bool _69;
  const size_type _70;
  long unsigned int _73;
  bool _75;
  int _80;
  long unsigned int _83;
  const struct _List_node_base * _84;
  long unsigned int _85;
  bool _86;
  int _90;
  int _93;
  struct basic_ostream & _96;
  struct ostream * _97;
  int (*__vtbl_ptr_type) () * _98;
  int (*__vtbl_ptr_type) () _99;
  int (*__vtbl_ptr_type) () * _101;
  int (*__vtbl_ptr_type) () _102;
  int (*__vtbl_ptr_type) () * _105;
  int (*__vtbl_ptr_type) () _106;
  bool _108;
  int (*__vtbl_ptr_type) () * _109;
  int (*__vtbl_ptr_type) () _110;
  struct vector * _112;
  struct TrafficPattern * * _113;
  struct InjectionProcess * * _114;
  struct vector * _115;
  struct list * _118;
  long unsigned int _119;
  struct list * _120;
  long unsigned int _121;
  struct vector & _122;
  long unsigned int _123;
  long unsigned int _124;
  struct vector & _125;
  struct InjectionProcess * & _126;
  long unsigned int _127;
  struct TrafficPattern * & _128;
  long unsigned int _129;
  struct map & _130;
  const size_type _131;
  long unsigned int _132;
  struct map & _133;
  int (*__vtbl_ptr_type) () * _137;
  const struct __ctype_type * _139;
  const struct __ctype_type * _142;
  const struct __ctype_type * _144;
  struct _List_node_base * _145;
  long unsigned int _146;
  long unsigned int _147;
  unsigned int _149;
  _Bit_type * _150;
  long int _151;
  long int _152;
  long int _153;
  long int _154;
  long int _155;
  long int _156;
  long int _157;
  ptrdiff_t _158;
  size_type _159;
  long unsigned int * const _160;
  unsigned long _165;
  long unsigned int _166;
  long int __n.548_168;
  long int _170;
  long unsigned int _171;
  long unsigned int _172;
  unsigned int _178;
  long unsigned int * const _180;
  long int _186;
  sizetype _187;
  struct basic_ios * _188;
  struct basic_ostream & _191;
  char _193;
  unsigned long _194;
  char_type _196;
  long unsigned int * _197;
  unsigned long _199;
  int (*__vtbl_ptr_type) () * _201;
  int (*__vtbl_ptr_type) () _202;
  int pretmp_205;
  void * PROF_206;
  char_type _208;
  int (*__vtbl_ptr_type) () * _211;
  long int _212;
  sizetype _213;
  struct basic_ios * _214;
  struct basic_ostream & _217;
  char _219;
  char_type _222;
  int _226;
  int (*__vtbl_ptr_type) () * _227;
  int (*__vtbl_ptr_type) () _228;
  int _229;
  sizetype _230;
  void * PROF_232;
  char_type _234;
  struct list & _235;
  struct vector * pretmp_236;
  int (*__vtbl_ptr_type) () * _237;
  long int _238;
  sizetype _239;
  struct basic_ios * _240;
  struct basic_ostream & _243;
  char _245;
  long unsigned int _247;
  char_type _248;
  int pretmp_249;
  int pretmp_252;
  int (*__vtbl_ptr_type) () * _253;
  int (*__vtbl_ptr_type) () _254;
  int prephitmp_256;
  void * PROF_258;
  char_type _260;
  unsigned long _274;
  const struct _List_node_base * _280;
  sizetype _290;
  int _293;
  struct _List_node_base * _298;
  int _299;
  long unsigned int * _305;
  unsigned long _307;
  sizetype _308;
  int pretmp_310;
  int prephitmp_311;
  struct map * pretmp_314;
  sizetype _324;
  int prephitmp_325;
  struct list * _326;
  struct map * pretmp_329;
  sizetype _334;
  sizetype _335;
  unsigned long _336;
  int pretmp_337;
  int pretmp_338;
  int prephitmp_339;
  unsigned long _343;
  int prephitmp_347;
  unsigned long _348;
  struct list * prephitmp_352;
  struct list * pretmp_361;
  struct list * prephitmp_362;
  int pretmp_363;
  int prephitmp_364;

  <bb 2>:
  # DEBUG sim => 0
  # DEBUG sim => 0
  _35 = this_26(D)->_total_sims;
  if (_35 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _105 = this_26(D)->D.65070._vptr.Module;
  _106 = MEM[(int (*__vtbl_ptr_type) () *)_105 + 96B];
  OBJ_TYPE_REF(_106;(const struct TrafficManager)this_26(D)->12) (this_26(D), &cout);
  _108 = this_26(D)->_print_csv_results;
  if (_108 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 4>:
  pretmp_236 = &this_26(D)->_requestsOutstanding;

  <bb 5>:
  # sim_184 = PHI <0(4), sim_104(68)>
  # DEBUG sim => sim_184
  this_26(D)->_time = 0;
  _29 = this_26(D)->_nodes;
  # DEBUG D#3862 => &this_26(D)->_requestsOutstanding
  # DEBUG this => D#3862
  # DEBUG __first => _29
  # DEBUG __last => 0
  # DEBUG this => D#3862
  # DEBUG __n => _29
  __val = 0;
  # DEBUG __val => __val
  _85 = (long unsigned int) _29;
  std::vector<int>::_M_fill_assign.constprop (pretmp_236, _85, &__val);
  # DEBUG i => 0
  # DEBUG i => 0
  _226 = this_26(D)->_nodes;
  if (_226 <= 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  this_26(D)->_sim_state = 0;
  _50 = this_26(D)->D.65070._vptr.Module;
  _51 = MEM[(int (*__vtbl_ptr_type) () *)_50 + 40B];
  OBJ_TYPE_REF(_51;(struct TrafficManager)this_26(D)->5) (this_26(D));
  # DEBUG c => 0
  # DEBUG c => 0
  _229 = this_26(D)->_classes;
  if (_229 <= 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 7>:
  pretmp_361 = MEM[(struct list * *)this_26(D) + 808B];

  <bb 8>:
  # i_223 = PHI <0(7), i_42(15)>
  # prephitmp_347 = PHI <_226(7), prephitmp_364(15)>
  # prephitmp_362 = PHI <pretmp_361(7), prephitmp_352(15)>
  # DEBUG i => i_223
  _247 = (long unsigned int) i_223;
  # DEBUG D#3125 => &this_26(D)->_repliesPending
  # DEBUG D#126 => D#3125
  # DEBUG __n => _247
  # DEBUG this => D#126
  _119 = _247 * 24;
  _235 = prephitmp_362 + _119;
  # DEBUG this => NULL
  _23 = MEM[(const struct list *)_235].D.73144._M_impl._M_node.D.37893._M_next;
  _280 = &MEM[(const struct list *)_235].D.73144._M_impl._M_node.D.37893;
  if (_23 != _280)
    goto <bb 10>;
  else
    goto <bb 14>;

  <bb 9>:
  # prephitmp_325 = PHI <prephitmp_364(14)>
  # DEBUG s => 0
  if (prephitmp_325 <= 0)
    goto <bb 6>;
  else
    goto <bb 16>;

  <bb 10>:

  <bb 11>:
  # _298 = PHI <_23(10), _31(12)>
  # DEBUG D#3125 => &this_26(D)->_repliesPending
  # DEBUG __n => _247
  # DEBUG this => D#126
  # DEBUG this => NULL
  # DEBUG D#3123 => &this_26(D)->_repliesPending
  # DEBUG D#126 => D#3123
  # DEBUG __n => _247
  # DEBUG this => D#126
  # DEBUG this => NULL
  # DEBUG this => D#342
  # DEBUG this => NULL
  # DEBUG __x => _298
  # DEBUG this => NULL
  _38 = MEM[(struct PacketReplyInfo * &)_298 + 16];
  PacketReplyInfo::Free (_38);
  # DEBUG D#3124 => &this_26(D)->_repliesPending
  _120 = MEM[(struct list * *)this_26(D) + 808B];
  # DEBUG D#126 => D#3124
  # DEBUG __n => _247
  # DEBUG this => D#126
  _40 = _120 + _119;
  # DEBUG this => _40
  _145 = MEM[(struct _List_node_base * *)_40];
  # DEBUG D#356 => _40
  # DEBUG this => D#356
  # DEBUG this => NULL
  # DEBUG __x => _145
  # DEBUG this => _40
  # DEBUG __position => _145
  # DEBUG __position$_M_node => _145
  # DEBUG D#1069 => &MEM[(struct list *)_40].D.71295
  # DEBUG D#362 => D#1069
  # DEBUG __n => 1
  # DEBUG this => D#362
  _146 = MEM[(long unsigned int *)_40 + 16B];
  _147 = _146 + 18446744073709551615;
  MEM[(long unsigned int *)_40 + 16B] = _147;
  std::__detail::_List_node_base::_M_unhook (_145);
  # DEBUG __n => _145
  # DEBUG D#1070 => &MEM[(struct _Node *)_145]._M_data
  # DEBUG __r => D#1070
  # DEBUG D#1072 => &MEM[(struct list *)_40].D.71295
  # DEBUG D#1053 => D#1072
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1071 => &MEM[(struct list *)_40].D.71295
  # DEBUG D#563 => D#1071
  # DEBUG __p => _145
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => _145
  # DEBUG this => D#559
  # DEBUG D.163880 => D#560
  operator delete (_145);
  # DEBUG D#3125 => &this_26(D)->_repliesPending
  _118 = MEM[(struct list * *)this_26(D) + 808B];
  # DEBUG D#126 => D#3125
  # DEBUG __n => _247
  # DEBUG this => D#126
  _55 = _118 + _119;
  # DEBUG this => NULL
  _31 = MEM[(const struct list *)_55].D.73144._M_impl._M_node.D.37893._M_next;
  _84 = &MEM[(const struct list *)_55].D.73144._M_impl._M_node.D.37893;
  if (_31 != _84)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  goto <bb 11>;

  <bb 13>:
  # _326 = PHI <_118(11)>
  pretmp_363 = this_26(D)->_nodes;

  <bb 14>:
  # prephitmp_352 = PHI <_326(13), prephitmp_362(8)>
  # prephitmp_364 = PHI <pretmp_363(13), prephitmp_347(8)>
  i_42 = i_223 + 1;
  # DEBUG i => i_42
  # DEBUG i => i_42
  if (i_42 >= prephitmp_364)
    goto <bb 9>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 8>;

  <bb 16>:

  <bb 17>:
  # s_300 = PHI <0(16), s_48(27)>
  # DEBUG s => s_300
  _44 = this_26(D)->_classes;
  _45 = (long unsigned int) s_300;
  # DEBUG D#3126 => &this_26(D)->_qtime
  _112 = MEM[(struct vector * *)this_26(D) + 600B];
  # DEBUG D#67 => D#3126
  # DEBUG __n => _45
  # DEBUG this => D#67
  _124 = _45 * 24;
  _125 = _112 + _124;
  # DEBUG this => NULL
  # DEBUG __first => _44
  # DEBUG __last => 0
  # DEBUG this => NULL
  # DEBUG __n => _44
  __val = 0;
  # DEBUG __val => __val
  _123 = (long unsigned int) _44;
  std::vector<int>::_M_fill_assign.constprop (_125, _123, &__val);
  _46 = this_26(D)->_classes;
  _47 = (long unsigned int) _46;
  # DEBUG D#3127 => &this_26(D)->_qdrained
  _115 = MEM[(struct vector * *)this_26(D) + 624B];
  # DEBUG D#77 => D#3127
  # DEBUG __n => _45
  # DEBUG this => D#77
  _121 = _45 * 40;
  _122 = _115 + _121;
  # DEBUG D#1894 => &D.74604
  # DEBUG this => NULL
  # DEBUG __n => _47
  # DEBUG __x => D#1894
  # DEBUG this => _122
  # DEBUG __n => _47
  # DEBUG __x => 0
  # DEBUG this => _122
  # DEBUG this => _122
  # DEBUG D#208 => &MEM[(const struct vector *)_122].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _41 = MEM[(const struct _Bit_iterator *)_122].D.33184._M_offset;
  __first_148 = MEM[(const struct _Bit_iterator *)_122].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => __first_148
  # DEBUG __y => _41
  # DEBUG this => D#48
  # DEBUG this => _122
  # DEBUG D#209 => &MEM[(const struct vector *)_122].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  _149 = MEM[(const struct _Bit_iterator *)_122 + 16B].D.33184._M_offset;
  _150 = MEM[(const struct _Bit_iterator *)_122 + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _150
  # DEBUG __y => _149
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _151 = (long int) _150;
  _152 = (long int) __first_148;
  _153 = _151 - _152;
  _154 = _153 * 8;
  _155 = (long int) _149;
  _156 = _154 + _155;
  _157 = (long int) _41;
  _158 = _156 - _157;
  _159 = (size_type) _158;
  if (_47 > _159)
    goto <bb 18>;
  else
    goto <bb 21>;

  <bb 18>:
  # DEBUG D#1892 => &_122->D.48430._M_impl
  _160 = MEM[(long unsigned int * *)_122 + 32B];
  # DEBUG D#375 => D#1892
  # DEBUG this => D#375
  # DEBUG D#253 => &D.163925
  # DEBUG __first => __first_148
  # DEBUG __last => NULL
  # DEBUG D#252 => D#253
  # DEBUG __value => D#252
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_148
  # DEBUG __it => __first_148
  # DEBUG D#191 => D#252
  # DEBUG __first => __first_148
  # DEBUG __last => NULL
  # DEBUG __value => D#191
  # DEBUG __tmp => 0
  # DEBUG __first => __first_148
  if (__first_148 == _160)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG this => _122
  # DEBUG this => _122
  # DEBUG D#208 => &MEM[(const struct vector *)_122].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG this => D#48
  # DEBUG __x => __first_148
  # DEBUG __y => _41
  # DEBUG this => D#48
  # DEBUG this => _122
  # DEBUG D#209 => &MEM[(const struct vector *)_122].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  # DEBUG this => D#48
  # DEBUG __x => _150
  # DEBUG __y => _149
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _166 = _47 - _159;
  # DEBUG this => _122
  # DEBUG D#1891 => &__x
  # DEBUG this => _122
  MEM[(struct _Bit_iterator *)&__position] = _150;
  MEM[(struct _Bit_iterator *)&__position + 8B] = _149;
  # DEBUG __n => _166
  # DEBUG __x => D#1891
  std::vector<bool>::_M_fill_insert (_122, __position, _166, 0);
  goto <bb 26>;

  <bb 20>:
  _199 = (unsigned long) _160;
  _197 = __first_148 + 8;
  _336 = (unsigned long) _197;
  _348 = _199 - _336;
  _194 = _348 /[ex] 8;
  _335 = _194 & 2305843009213693951;
  _334 = _335 + 1;
  _308 = _334 * 8;
  __builtin_memset (__first_148, 0, _308);
  goto <bb 19>;

  <bb 21>:
  __n.548_168 = (long int) _46;
  # DEBUG this => _122
  # DEBUG this => NULL
  # DEBUG __i => __n.548_168
  # DEBUG __tmp$_M_p => __first_148
  # DEBUG __tmp$_M_offset => _41
  # DEBUG this => &__tmp
  # DEBUG __i => __n.548_168
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => __n.548_168
  __n_169 = _157 + __n.548_168;
  # DEBUG __n => __n_169
  _170 = __n_169 / 64;
  _171 = (long unsigned int) _170;
  _172 = _171 * 8;
  __tmp$_M_p_173 = __first_148 + _172;
  # DEBUG __tmp$_M_p => __tmp$_M_p_173
  __n_174 = __n_169 % 64;
  # DEBUG __n => __n_174
  if (__n_174 < 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  __n_175 = __n_174 + 64;
  # DEBUG __n => __n_175
  __tmp$_M_p_176 = __tmp$_M_p_173 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_176

  <bb 23>:
  # __n_177 = PHI <__n_174(21), __n_175(22)>
  # __tmp$_M_p_179 = PHI <__tmp$_M_p_173(21), __tmp$_M_p_176(22)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_179
  # DEBUG __n => __n_177
  _178 = (unsigned int) __n_177;
  # DEBUG __tmp$_M_offset => _178
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  # DEBUG this => _122
  MEM[(struct _Bit_iterator *)_122 + 16B] = __tmp$_M_p_179;
  MEM[(struct _Bit_iterator *)_122 + 24B] = _178;
  # DEBUG D#1893 => &_122->D.48430._M_impl
  _180 = MEM[(long unsigned int * *)_122 + 32B];
  # DEBUG D#375 => D#1893
  # DEBUG this => D#375
  # DEBUG D#253 => &D.163926
  # DEBUG __first => __first_148
  # DEBUG __last => NULL
  # DEBUG D#252 => D#253
  # DEBUG __value => D#252
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_148
  # DEBUG __it => __first_148
  # DEBUG D#191 => D#252
  # DEBUG __first => __first_148
  # DEBUG __last => NULL
  # DEBUG __value => D#191
  # DEBUG __tmp => 0
  # DEBUG __first => __first_148
  if (__first_148 == _180)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  goto <bb 26>;

  <bb 25>:
  _307 = (unsigned long) _180;
  _305 = __first_148 + 8;
  _274 = (unsigned long) _305;
  _165 = _307 - _274;
  _343 = _165 /[ex] 8;
  _290 = _343 & 2305843009213693951;
  _230 = _290 + 1;
  _324 = _230 * 8;
  __builtin_memset (__first_148, 0, _324);
  goto <bb 24>;

  <bb 26>:
  s_48 = s_300 + 1;
  # DEBUG s => s_48
  # DEBUG s => s_48
  _43 = this_26(D)->_nodes;
  if (_43 <= s_48)
    goto <bb 6>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 17>;

  <bb 28>:
  _66 = this_26(D)->D.65070._vptr.Module;
  _67 = MEM[(int (*__vtbl_ptr_type) () *)_66 + 48B];
  _69 = OBJ_TYPE_REF(_67;(struct TrafficManager)this_26(D)->6) (this_26(D));
  if (_69 != 0)
    goto <bb 39>;
  else
    goto <bb 32>;

  <bb 29>:

  <bb 30>:
  # c_224 = PHI <0(29), c_65(31)>
  # DEBUG c => c_224
  _54 = (long unsigned int) c_224;
  # DEBUG D#3128 => &this_26(D)->_traffic_pattern
  _113 = MEM[(struct TrafficPattern * * *)this_26(D) + 480B];
  # DEBUG D#70 => D#3128
  # DEBUG __n => _54
  # DEBUG this => D#70
  _127 = _54 * 8;
  _128 = _113 + _127;
  _56 = *_128;
  _57 = _56->_vptr.TrafficPattern;
  _58 = MEM[(int (*__vtbl_ptr_type) () *)_57 + 16B];
  OBJ_TYPE_REF(_58;(struct TrafficPattern)_56->2) (_56);
  # DEBUG D#3129 => &this_26(D)->_injection_process
  _114 = MEM[(struct InjectionProcess * * *)this_26(D) + 504B];
  # DEBUG D#71 => D#3129
  # DEBUG __n => _54
  # DEBUG this => D#71
  _126 = _114 + _127;
  _61 = *_126;
  _62 = _61->_vptr.InjectionProcess;
  _63 = MEM[(int (*__vtbl_ptr_type) () *)_62 + 24B];
  OBJ_TYPE_REF(_63;(struct InjectionProcess)_61->3) (_61);
  c_65 = c_224 + 1;
  # DEBUG c => c_65
  # DEBUG c => c_65
  _53 = this_26(D)->_classes;
  if (_53 <= c_65)
    goto <bb 28>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 30>;

  <bb 32>:
  # DEBUG __out => &cout
  # DEBUG __s => "Simulation unstable, ending ..."
  # DEBUG __s => "Simulation unstable, ending ..."
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Simulation unstable, ending ...", 31);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _137 = cout._vptr.basic_ostream;
  _186 = MEM[(long int *)_137 + -24B];
  _187 = (sizetype) _186;
  _188 = &cout + _187;
  # DEBUG this => _188
  # DEBUG __c => 10
  _144 = MEM[(const struct basic_ios *)_188]._M_ctype;
  # DEBUG __f => _144
  if (_144 == 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  std::__throw_bad_cast ();

  <bb 34>:
  # DEBUG this => _144
  # DEBUG __c => 10
  _193 = MEM[(const struct ctype *)_144]._M_widen_ok;
  if (_193 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  _196 = MEM[(const struct ctype *)_144]._M_widen[10];
  pretmp_337 = (int) _196;
  goto <bb 38>;

  <bb 36>:
  # DEBUG this => _144
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_144);
  _201 = MEM[(const struct ctype *)_144].D.16885._vptr.facet;
  _202 = MEM[(int (*__vtbl_ptr_type) () *)_201 + 48B];
  PROF_206 = [obj_type_ref] OBJ_TYPE_REF(_202;(const struct ctype)_144->6);
  if (PROF_206 == do_widen)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 37>:
  _208 = OBJ_TYPE_REF(_202;(const struct ctype)_144->6) (_144, 10);
  pretmp_338 = (int) _208;

  <bb 38>:
  # prephitmp_339 = PHI <pretmp_337(35), 10(36), pretmp_338(37)>
  _191 = std::basic_ostream<char>::put (&cout, prephitmp_339);
  # DEBUG __os => _191
  std::basic_ostream<char>::flush (_191);
  goto <bb 70>;

  <bb 39>:
  # DEBUG __out => &cout
  # DEBUG __s => "Draining remaining packets ..."
  # DEBUG __s => "Draining remaining packets ..."
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Draining remaining packets ...", 30);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _211 = cout._vptr.basic_ostream;
  _212 = MEM[(long int *)_211 + -24B];
  _213 = (sizetype) _212;
  _214 = &cout + _213;
  # DEBUG this => _214
  # DEBUG __c => 10
  _139 = MEM[(const struct basic_ios *)_214]._M_ctype;
  # DEBUG __f => _139
  if (_139 == 0B)
    goto <bb 33>;
  else
    goto <bb 40>;

  <bb 40>:
  # DEBUG this => _139
  # DEBUG __c => 10
  _219 = MEM[(const struct ctype *)_139]._M_widen_ok;
  if (_219 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  _222 = MEM[(const struct ctype *)_139]._M_widen[10];
  pretmp_252 = (int) _222;
  goto <bb 44>;

  <bb 42>:
  # DEBUG this => _139
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_139);
  _227 = MEM[(const struct ctype *)_139].D.16885._vptr.facet;
  _228 = MEM[(int (*__vtbl_ptr_type) () *)_227 + 48B];
  PROF_232 = [obj_type_ref] OBJ_TYPE_REF(_228;(const struct ctype)_139->6);
  if (PROF_232 == do_widen)
    goto <bb 44>;
  else
    goto <bb 43>;

  <bb 43>:
  _234 = OBJ_TYPE_REF(_228;(const struct ctype)_139->6) (_139, 10);
  pretmp_249 = (int) _234;

  <bb 44>:
  # prephitmp_256 = PHI <pretmp_252(41), 10(42), pretmp_249(43)>
  _217 = std::basic_ostream<char>::put (&cout, prephitmp_256);
  # DEBUG __os => _217
  std::basic_ostream<char>::flush (_217);
  this_26(D)->_empty_network = 1;
  # DEBUG empty_steps => 0
  # DEBUG packets_left => 0
  # DEBUG c => 0
  # DEBUG c => 0
  # DEBUG packets_left => 0
  _293 = this_26(D)->_classes;
  if (_293 <= 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  goto <bb 58>;

  <bb 46>:
  pretmp_314 = MEM[(struct map * *)this_26(D) + 672B];

  <bb 47>:
  # packets_left_303 = PHI <0(46), packets_left_76(48)>
  # c_281 = PHI <0(46), c_77(48)>
  # DEBUG c => c_281
  # DEBUG packets_left => packets_left_303
  _73 = (long unsigned int) c_281;
  # DEBUG D#3121 => &this_26(D)->_total_in_flight_flits
  # DEBUG D#125 => D#3121
  # DEBUG __n => _73
  # DEBUG this => D#125
  _129 = _73 * 48;
  _130 = pretmp_314 + _129;
  # DEBUG this => NULL
  _70 = MEM[(long unsigned int *)_130 + 40B];
  # DEBUG D#222 => D#223
  # DEBUG this => D#222
  _75 = _70 != 0;
  packets_left_76 = _75 | packets_left_303;
  # DEBUG packets_left => packets_left_76
  c_77 = c_281 + 1;
  # DEBUG c => c_77
  # DEBUG c => c_77
  # DEBUG packets_left => packets_left_76
  if (c_77 >= _293)
    goto <bb 49>;
  else
    goto <bb 48>;

  <bb 48>:
  goto <bb 47>;

  <bb 49>:
  # packets_left_333 = PHI <packets_left_76(47)>
  # DEBUG packets_left => packets_left_333
  # DEBUG empty_steps => 0
  if (packets_left_333 != 0)
    goto <bb 71>;
  else
    goto <bb 45>;

  <bb 50>:
  # DEBUG packets_left => 1
  # DEBUG empty_steps => empty_steps_14
  TrafficManager::_Step (this_26(D));
  empty_steps_79 = empty_steps_14 + 1;
  # DEBUG empty_steps => empty_steps_79
  _80 = empty_steps_79 % 1000;
  if (_80 == 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  TrafficManager::_DisplayRemaining.constprop (this_26(D));

  <bb 52>:

  <bb 53>:
  # empty_steps_14 = PHI <empty_steps_79(52), 1(71)>
  # DEBUG c => 0
  # DEBUG packets_left => 0
  _299 = this_26(D)->_classes;
  if (_299 <= 0)
    goto <bb 45>;
  else
    goto <bb 55>;

  <bb 54>:
  # packets_left_332 = PHI <packets_left_87(56)>
  # DEBUG packets_left => packets_left_332
  # DEBUG empty_steps => empty_steps_14
  if (packets_left_332 != 0)
    goto <bb 50>;
  else
    goto <bb 45>;

  <bb 55>:
  pretmp_329 = MEM[(struct map * *)this_26(D) + 672B];

  <bb 56>:
  # packets_left_163 = PHI <0(55), packets_left_87(57)>
  # c_241 = PHI <0(55), c_88(57)>
  # DEBUG c => c_241
  # DEBUG packets_left => packets_left_163
  _83 = (long unsigned int) c_241;
  # DEBUG D#3122 => &this_26(D)->_total_in_flight_flits
  # DEBUG D#125 => D#3122
  # DEBUG __n => _83
  # DEBUG this => D#125
  _132 = _83 * 48;
  _133 = pretmp_329 + _132;
  # DEBUG this => NULL
  _131 = MEM[(long unsigned int *)_133 + 40B];
  # DEBUG D#222 => D#223
  # DEBUG this => D#222
  _86 = _131 != 0;
  packets_left_87 = _86 | packets_left_163;
  # DEBUG packets_left => packets_left_87
  c_88 = c_241 + 1;
  # DEBUG c => c_88
  # DEBUG c => c_88
  # DEBUG packets_left => packets_left_87
  if (c_88 >= _299)
    goto <bb 54>;
  else
    goto <bb 57>;

  <bb 57>:
  goto <bb 56>;

  <bb 58>:
  _90 = Credit::OutStanding ();
  if (_90 != 0)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  TrafficManager::_Step (this_26(D));
  goto <bb 58>;

  <bb 60>:
  this_26(D)->_empty_network = 0;
  _93 = this_26(D)->_time;
  # DEBUG __out => &cout
  # DEBUG __s => "Time taken is "
  # DEBUG __s => "Time taken is "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Time taken is ", 14);
  _96 = std::basic_ostream<char>::operator<< (&cout, _93);
  # DEBUG __out => _96
  # DEBUG __s => " cycles"
  # DEBUG __s => " cycles"
  std::__ostream_insert<char, std::char_traits<char> > (_96, " cycles", 7);
  # DEBUG this => _96
  # DEBUG __pf => endl
  # DEBUG __os => _96
  _237 = _96->_vptr.basic_ostream;
  _238 = MEM[(long int *)_237 + -24B];
  _239 = (sizetype) _238;
  _240 = _96 + _239;
  # DEBUG this => _240
  # DEBUG __c => 10
  _142 = MEM[(const struct basic_ios *)_240]._M_ctype;
  # DEBUG __f => _142
  if (_142 == 0B)
    goto <bb 33>;
  else
    goto <bb 61>;

  <bb 61>:
  # DEBUG this => _142
  # DEBUG __c => 10
  _245 = MEM[(const struct ctype *)_142]._M_widen_ok;
  if (_245 != 0)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  _248 = MEM[(const struct ctype *)_142]._M_widen[10];
  pretmp_205 = (int) _248;
  goto <bb 65>;

  <bb 63>:
  # DEBUG this => _142
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_142);
  _253 = MEM[(const struct ctype *)_142].D.16885._vptr.facet;
  _254 = MEM[(int (*__vtbl_ptr_type) () *)_253 + 48B];
  PROF_258 = [obj_type_ref] OBJ_TYPE_REF(_254;(const struct ctype)_142->6);
  if (PROF_258 == do_widen)
    goto <bb 65>;
  else
    goto <bb 64>;

  <bb 64>:
  _260 = OBJ_TYPE_REF(_254;(const struct ctype)_142->6) (_142, 10);
  pretmp_310 = (int) _260;

  <bb 65>:
  # prephitmp_311 = PHI <pretmp_205(62), 10(63), pretmp_310(64)>
  _243 = std::basic_ostream<char>::put (_96, prephitmp_311);
  # DEBUG __os => _243
  std::basic_ostream<char>::flush (_243);
  _97 = this_26(D)->_stats_out;
  if (_97 != 0B)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  _98 = this_26(D)->D.65070._vptr.Module;
  _99 = MEM[(int (*__vtbl_ptr_type) () *)_98 + 72B];
  OBJ_TYPE_REF(_99;(const struct TrafficManager)this_26(D)->9) (this_26(D), _97);

  <bb 67>:
  _101 = this_26(D)->D.65070._vptr.Module;
  _102 = MEM[(int (*__vtbl_ptr_type) () *)_101 + 56B];
  OBJ_TYPE_REF(_102;(struct TrafficManager)this_26(D)->7) (this_26(D));
  sim_104 = sim_184 + 1;
  # DEBUG sim => sim_104
  # DEBUG sim => sim_104
  _27 = this_26(D)->_total_sims;
  if (_27 <= sim_104)
    goto <bb 3>;
  else
    goto <bb 68>;

  <bb 68>:
  goto <bb 5>;

  <bb 69>:
  _109 = this_26(D)->D.65070._vptr.Module;
  _110 = MEM[(int (*__vtbl_ptr_type) () *)_109 + 104B];
  OBJ_TYPE_REF(_110;(const struct TrafficManager)this_26(D)->13) (this_26(D), &cout);

  <bb 70>:
  # _11 = PHI <0(38), 1(69), 1(3)>
  return _11;

  <bb 71>:
  # DEBUG packets_left => 1
  # DEBUG empty_steps => 0
  TrafficManager::_Step (this_26(D));
  # DEBUG empty_steps => 1
  goto <bb 53>;

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, Stats*>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P5StatsESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_, funcdef_no=5103, decl_uid=64410, cgraph_uid=3351, symbol_order=3352)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, Stats*>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_tree * const this, const struct key_type & __k)
{
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.164086;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.164071;
  struct _Rb_tree_node_base * const __j$_M_node;
  bool __comp;
  struct _Rb_tree_node_base * const D.89657;
  struct _Rb_tree_node_base * const D.89658;
  struct pair D.101875;
  const size_type pretmp_1;
  char * const prephitmp_13;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node_base * _24;
  const size_type _34;
  char * const _37;
  long unsigned int _40;
  char * const pretmp_44;
  long unsigned int _52;
  const size_type prephitmp_61;
  char * const pretmp_64;
  char * const prephitmp_65;
  const size_type pretmp_67;
  const size_type pretmp_76;
  const size_type prephitmp_77;
  const size_type prephitmp_78;
  const size_type pretmp_79;
  char * const pretmp_80;
  char * const _83;
  const size_type _84;

  <bb 2>:
  _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
  # DEBUG D#197 => this_9(D)
  # DEBUG this => D#197
  # DEBUG __x => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#3893 => &this_9(D)->_M_impl._M_header
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => D#3893
  # DEBUG __x => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = &this_9(D)->_M_impl._M_header;
  goto <bb 15>;

  <bb 4>:
  pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_44 = MEM[(char * *)__k_12(D)];
  goto <bb 7>;

  <bb 5>:
  # _6 = PHI <_22(27), _23(28)>
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __comp => __comp_56
  # DEBUG __y => _10
  # DEBUG __x => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # _10 = PHI <_21(4), _6(6)>
  # DEBUG __comp => 1
  # DEBUG __x => _10
  # DEBUG __y => _10
  # DEBUG __x => _10
  # DEBUG __x => _10
  # DEBUG this => _10
  # DEBUG D#2185 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
  # DEBUG __r => D#2185
  # DEBUG __x => D#2185
  # DEBUG this => D#666
  # DEBUG D#3873 => &MEM[(const struct pair &)_10 + 32].first
  # DEBUG D#2192 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#665 => D#2192
  # DEBUG __x => __k_12(D)
  # DEBUG __y => D#3873
  # DEBUG this => D#665
  # DEBUG __lhs => __k_12(D)
  # DEBUG __rhs => D#3873
  # DEBUG this => __k_12(D)
  # DEBUG __str => D#3873
  # DEBUG D#3892 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#3 => __k_12(D)
  # DEBUG this => D#3
  # DEBUG __size => D#3892
  _34 = MEM[(long unsigned int *)_10 + 40B];
  # DEBUG D#3 => D#3873
  # DEBUG this => D#3
  # DEBUG __osize => _34
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __len => D#3871
  # DEBUG this => D#3873
  _37 = MEM[(char * *)_10 + 32B];
  # DEBUG D#1 => D#3873
  # DEBUG this => D#1
  # DEBUG D#3891 => MEM[(char * *)__k_12(D)]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG __s1 => D#3891
  # DEBUG __s2 => _37
  # DEBUG __n => D#3871
  __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
  # DEBUG __r => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => D#3892
  # DEBUG __n2 => _34
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_type) _40;
  # DEBUG __d => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_42 = (int) _40;

  <bb 11>:
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __r => __r_43
  # DEBUG D#3879 => {CLOBBER}
  # DEBUG __size => D#3879
  # DEBUG D#3880 => {CLOBBER}
  # DEBUG __osize => D#3880
  # DEBUG __comp => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __comp => 1
  _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
  # DEBUG D#271 => _10
  # DEBUG __x => D#271
  goto <bb 5>;

  <bb 13>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG __comp => 0
  _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
  # DEBUG D#270 => _10
  # DEBUG __x => D#270
  goto <bb 5>;

  <bb 14>:
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # _83 = PHI <_37(5)>
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>

  <bb 26>:
  # DEBUG this => &__j
  # DEBUG __x => _85
  # DEBUG __j$_M_node => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG this => &__j
  # DEBUG __x => _57
  # DEBUG __j$_M_node => _57
  _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
  # DEBUG D#1637 => this_9(D)
  # DEBUG this => D#1637
  # DEBUG this => NULL
  # DEBUG __x => _24
  # DEBUG this => &__j
  # DEBUG __x => &D.89656
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &D.89659
  # DEBUG __a => &D.89657
  # DEBUG __b => &D.89658
  MEM[(struct pair *)&D.101875] = 0B;
  MEM[(struct pair *)&D.101875 + 8B] = _57;
  goto <bb 25>;

  <bb 17>:
  # DEBUG this => &__j
  __j$_M_node_25 = std::_Rb_tree_decrement (_57);
  # DEBUG __j$_M_node => __j$_M_node_25
  pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_80 = MEM[(char * *)__k_12(D)];
  pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
  pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  <bb 18>:
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_node => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG this => __j$_M_node_20
  # DEBUG D#2189 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
  # DEBUG __r => D#2189
  # DEBUG __x => D#2189
  # DEBUG this => D#666
  # DEBUG D#3874 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
  # DEBUG D#2191 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#665 => D#2191
  # DEBUG __x => D#3874
  # DEBUG __y => __k_12(D)
  # DEBUG this => D#665
  # DEBUG __lhs => D#3874
  # DEBUG __rhs => __k_12(D)
  # DEBUG this => D#3874
  # DEBUG __str => __k_12(D)
  # DEBUG D#3890 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
  # DEBUG D#3 => D#3874
  # DEBUG this => D#3
  # DEBUG __size => D#3890
  # DEBUG D#3889 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#3 => __k_12(D)
  # DEBUG this => D#3
  # DEBUG __osize => D#3889
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#3872
  # DEBUG this => __k_12(D)
  # DEBUG D#3888 => MEM[(char * *)__k_12(D)]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG D#3887 => MEM[(char * *)__j$_M_node_20 + 32B]
  # DEBUG D#1 => D#3874
  # DEBUG this => D#1
  # DEBUG __s1 => D#3887
  # DEBUG __s2 => D#3888
  # DEBUG __n => D#3872
  __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __r => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG __n1 => D#3890
  # DEBUG __n2 => D#3889
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_type) _52;
  # DEBUG __d => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;

  <bb 20>:
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 21>:
  __r_54 = (int) _52;

  <bb 22>:
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __r => __r_55
  # DEBUG D#3885 => {CLOBBER}
  # DEBUG __size => D#3885
  # DEBUG D#3886 => {CLOBBER}
  # DEBUG __osize => D#3886
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:

  <bb 31>:
  # DEBUG __r => NULL
  # DEBUG this => &D.89662
  # DEBUG __a => &D.89660
  # DEBUG __b => &D.89661
  MEM[(struct pair *)&D.101875] = 0B;
  MEM[(struct pair *)&D.101875 + 8B] = _5;
  goto <bb 25>;

  <bb 24>:

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG this => &D.89664
  # DEBUG __a => &__j._M_node
  # DEBUG __b => &D.89663
  MEM[(struct pair *)&D.101875] = __j$_M_node_20;
  MEM[(struct pair *)&D.101875 + 8B] = 0B;

  <bb 25>:

  <bb 29>:
  # DEBUG D#2190 => {CLOBBER}
  # DEBUG __j$_M_node => D#2190
  return D.101875;

}



;; Function std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Tp = Stats*; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type = Stats*; std::map<_Key, _Tp, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP5StatsSt4lessIS5_ESaISt4pairIKS5_S7_EEEixERSB_, funcdef_no=2528, decl_uid=64763, cgraph_uid=779, symbol_order=780)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Tp = Stats*; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> >; std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type = Stats*; std::map<_Key, _Tp, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct map * const this, const struct key_type & __k)
{
  struct _Rb_tree_node_base * SR.6039;
  struct _Rb_tree_node_base * SR.6038;
  struct _Rb_tree_node_base * SR.6037;
  struct _Rb_tree_node_base * SR.6036;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  struct _Rb_tree_node_base * SR.6033;
  bool __insert_left;
  struct iterator D.164297;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.164267;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.164252;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.164237;
  struct pair D.164222;
  struct const_iterator __position;
  struct iterator D.164149;
  struct pair __res;
  struct _Rb_tree_node_base * __res$first;
  struct _Rb_tree_node_base * __res$second;
  struct const_iterator __position;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.164139;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.164124;
  struct iterator D.164109;
  struct _Rb_tree_node * __y;
  struct _Rb_tree_node_base * SR.4295;
  struct _Rb_tree_node_base * SR.4292;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct const_iterator __pos;
  struct iterator D.146197;
  struct iterator D.146157;
  struct value_type D.75172;
  struct _Rep_type * _7;
  struct Stats * & _15;
  char * _19;
  char * const _20;
  const size_type _22;
  char * const prephitmp_37;
  char * const _56;
  long unsigned int _58;
  const size_type _64;
  char * const pretmp_65;
  char * const _67;
  long unsigned int _70;
  bool _74;
  const size_type _79;
  struct _Rb_tree_node_base * _80;
  const struct first_type & _81;
  int _82;
  struct _Rb_tree_node_base * _87;
  struct _Rb_tree_node_base * _88;
  struct _Rb_tree_node_base * _91;
  struct _Rb_tree_node_base * _93;
  struct _Rb_tree_node_base * _94;
  const struct first_type & _95;
  int _96;
  struct _Rb_tree_node_base * _97;
  const size_type _98;
  const size_type _99;
  char * const _102;
  char * const _103;
  long unsigned int _105;
  const size_type _110;
  char * const _115;
  long unsigned int _117;
  long unsigned int _129;
  char * _133;
  const struct first_type & _135;
  char * _136;
  int _137;
  struct _Rb_tree_node * _138;
  int _141;
  long unsigned int _142;
  long unsigned int _143;
  struct pair * _144;
  char * _146;
  char * const _147;
  const size_type _148;
  char * _149;
  struct Stats * _150;
  void * _151;
  char * const pretmp_187;
  const size_type pretmp_190;
  char * const prephitmp_192;
  char * const pretmp_193;
  const size_type prephitmp_218;
  const size_type pretmp_219;
  bool _238;
  char * const prephitmp_241;
  bool _242;
  char * const pretmp_259;

  <bb 2>:
  # DEBUG this => this_4(D)
  # DEBUG __x => __k_5(D)
  _7 = &this_4(D)->_M_t;
  # DEBUG this => _7
  # DEBUG __k => __k_5(D)
  # DEBUG this => _7
  __i$_M_node_42 = &MEM[(struct _Rb_tree *)this_4(D)]._M_impl._M_header;
  __i$_M_node_43 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 16B];
  # DEBUG D#197 => _7
  # DEBUG this => D#197
  # DEBUG D#2188 => _7
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => __k_5(D)
  # DEBUG __y => __i$_M_node_42
  # DEBUG __x => __i$_M_node_43
  if (__i$_M_node_43 == 0B)
    goto <bb 19>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_190 = MEM[(long unsigned int *)__k_5(D) + 8B];
  pretmp_65 = MEM[(char * *)__k_5(D)];
  goto <bb 6>;

  <bb 4>:
  # __i$_M_node_51 = PHI <__i$_M_node_47(71), __i$_M_node_48(70)>
  # __i$_M_node_50 = PHI <__i$_M_node_66(71), __i$_M_node_54(70)>
  # DEBUG __y => __i$_M_node_50
  # DEBUG __x => __i$_M_node_51
  if (__i$_M_node_51 == 0B)
    goto <bb 13>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __i$_M_node_66 = PHI <__i$_M_node_43(3), __i$_M_node_51(5)>
  # __i$_M_node_54 = PHI <__i$_M_node_42(3), __i$_M_node_50(5)>
  # DEBUG __y => __i$_M_node_54
  # DEBUG __x => __i$_M_node_66
  # DEBUG __x => __i$_M_node_66
  # DEBUG __x => __i$_M_node_66
  # DEBUG this => __i$_M_node_66
  # DEBUG D#2185 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_66]._M_value_field
  # DEBUG __r => D#2185
  # DEBUG __x => D#2185
  # DEBUG this => D#666
  # DEBUG D#3901 => &MEM[(const struct pair &)__i$_M_node_66 + 32].first
  # DEBUG D#2186 => &D#2187->_M_impl._M_key_compare
  # DEBUG D#665 => D#2186
  # DEBUG __x => D#3901
  # DEBUG __y => __k_5(D)
  # DEBUG this => D#665
  # DEBUG __lhs => D#3901
  # DEBUG __rhs => __k_5(D)
  # DEBUG this => D#3901
  # DEBUG __str => __k_5(D)
  _22 = MEM[(long unsigned int *)__i$_M_node_66 + 40B];
  # DEBUG D#3 => D#3901
  # DEBUG this => D#3
  # DEBUG __size => _22
  # DEBUG D#3942 => MEM[(long unsigned int *)__k_5(D) + 8B]
  # DEBUG D#3 => __k_5(D)
  # DEBUG this => D#3
  # DEBUG __osize => D#3942
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_265 = MIN_EXPR <_22, pretmp_190>;
  # DEBUG __len => D#3896
  # DEBUG this => __k_5(D)
  # DEBUG D#3941 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  _56 = MEM[(char * *)__i$_M_node_66 + 32B];
  # DEBUG D#1 => D#3901
  # DEBUG this => D#1
  # DEBUG __s1 => _56
  # DEBUG __s2 => D#3941
  # DEBUG __n => D#3896
  __r_57 = __builtin_memcmp (_56, pretmp_65, __len_265);
  # DEBUG __r => NULL
  if (__r_57 == 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  # DEBUG __n1 => _22
  # DEBUG __n2 => D#3942
  _58 = _22 - pretmp_190;
  __d_59 = (const difference_type) _58;
  # DEBUG __d => __d_59
  if (__d_59 > 2147483647)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  if (__d_59 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  __r_60 = (int) _58;

  <bb 10>:
  # __r_61 = PHI <__r_57(6), __r_60(9)>
  # DEBUG __r => __r_61
  # DEBUG D#3909 => {CLOBBER}
  # DEBUG __size => D#3909
  # DEBUG D#3910 => {CLOBBER}
  # DEBUG __osize => D#3910
  if (__r_61 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:

  <bb 71>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_66
  __i$_M_node_47 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_66 + 16B];
  # DEBUG D#271 => __i$_M_node_66
  # DEBUG __x => D#271
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 12>:

  <bb 70>:
  # DEBUG __r => NULL
  __i$_M_node_48 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_66 + 24B];
  # DEBUG D#270 => __i$_M_node_66
  # DEBUG __x => D#270
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 13>:
  # __i$_M_node_264 = PHI <__i$_M_node_50(4)>

  <bb 69>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_264
  # DEBUG __i$_M_node => __i$_M_node_264
  # DEBUG this => this_4(D)
  # DEBUG D#397 => &this_4(D)->_M_t
  # DEBUG this => D#397
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_42
  # DEBUG this => &__i
  # DEBUG __x => &D.75107
  if (__i$_M_node_42 == __i$_M_node_264)
    goto <bb 68>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_264
  # DEBUG D#2707 => &MEM[(struct _Rb_tree_node *)__i$_M_node_264]._M_value_field
  # DEBUG __r => D#2707
  # DEBUG D#3902 => &MEM[(struct pair &)__i$_M_node_264 + 32].first
  # DEBUG D#263 => this_4(D)
  # DEBUG this => D#263
  # DEBUG D#262 => D#263
  # DEBUG D#261 => &D#262->_M_t
  # DEBUG D#260 => D#261
  # DEBUG this => D#260
  # DEBUG D#665 => &D.75161
  # DEBUG __x => __k_5(D)
  # DEBUG __y => D#3902
  # DEBUG this => D#665
  # DEBUG __lhs => __k_5(D)
  # DEBUG __rhs => D#3902
  # DEBUG this => __k_5(D)
  # DEBUG __str => D#3902
  # DEBUG D#3940 => MEM[(long unsigned int *)__k_5(D) + 8B]
  # DEBUG D#3 => __k_5(D)
  # DEBUG this => D#3
  # DEBUG __size => D#3940
  _64 = MEM[(long unsigned int *)__i$_M_node_264 + 40B];
  # DEBUG D#3 => D#3902
  # DEBUG this => D#3
  # DEBUG __osize => _64
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_266 = MIN_EXPR <_64, pretmp_190>;
  # DEBUG __len => D#3897
  # DEBUG this => D#3902
  _67 = MEM[(char * *)__i$_M_node_264 + 32B];
  # DEBUG D#1 => D#3902
  # DEBUG this => D#1
  # DEBUG D#3939 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG __s1 => D#3939
  # DEBUG __s2 => _67
  # DEBUG __n => D#3897
  __r_69 = __builtin_memcmp (pretmp_65, _67, __len_266);
  # DEBUG __r => NULL
  if (__r_69 == 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # DEBUG __n1 => D#3940
  # DEBUG __n2 => _64
  _70 = pretmp_190 - _64;
  __d_71 = (const difference_type) _70;
  # DEBUG __d => __d_71
  if (__d_71 > 2147483647)
    goto <bb 60>;
  else
    goto <bb 16>;

  <bb 16>:
  if (__d_71 < -2147483648)
    goto <bb 20>;
  else
    goto <bb 17>;

  <bb 17>:
  __r_72 = (int) _70;

  <bb 18>:
  # __r_73 = PHI <__r_69(14), __r_72(17)>
  # DEBUG __r => __r_73
  # DEBUG D#3915 => {CLOBBER}
  # DEBUG __size => D#3915
  # DEBUG D#3916 => {CLOBBER}
  # DEBUG __osize => D#3916
  if (__r_73 < 0)
    goto <bb 67>;
  else
    goto <bb 60>;

  <bb 19>:
  pretmp_219 = MEM[(long unsigned int *)__k_5(D) + 8B];
  pretmp_259 = MEM[(char * *)__k_5(D)];

  <bb 20>:
  # __i$_M_node_186 = PHI <__i$_M_node_264(16), __i$_M_node_42(19)>
  # prephitmp_218 = PHI <pretmp_190(16), pretmp_219(19)>
  # prephitmp_241 = PHI <pretmp_65(16), pretmp_259(19)>
  # DEBUG this => &D.75172
  # DEBUG __a => __k_5(D)
  # DEBUG __b => &D.75171
  # DEBUG this => &D.75172.first
  # DEBUG __str => __k_5(D)
  # DEBUG this => __k_5(D)
  # DEBUG D#1185 => &MEM[(const struct basic_string *)__k_5(D)]._M_dataplus
  # DEBUG this => &D.75172.first
  # DEBUG D#1186 => &MEM[(struct basic_string *)&D.75172]._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &MEM[(struct basic_string *)&D.75172].D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.75172]._M_p = &MEM[(struct basic_string *)&D.75172].D.11539._M_local_buf;
  # DEBUG D#3936 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG D#2 => __k_5(D)
  # DEBUG this => D#2
  _19 = prephitmp_241 + prephitmp_218;
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG this => &D.75172.first
  # DEBUG __beg => D#3936
  # DEBUG __end => _19
  # DEBUG this => &D.75172.first
  # DEBUG __beg => D#3936
  # DEBUG __end => _19
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (&D.75172.first, prephitmp_241, _19);
  D.75172.second = 0B;
  # DEBUG this => this_4(D)
  # DEBUG __position$_M_node => __i$_M_node_186
  # DEBUG __x => &D.75172
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _7
  # DEBUG __x => &D.75172
  # DEBUG this => &__an
  # DEBUG __t => _7
  # DEBUG __an$_M_t => _7
  # DEBUG D#2706 => &__an
  # DEBUG this => _7
  # DEBUG __v => &D.75172
  # DEBUG __node_gen => D#2706
  # DEBUG D#2705 => D#2706
  # DEBUG __x => &D.75172
  # DEBUG this => D#666
  # DEBUG this => _7
  # DEBUG __k => &D.75172.first
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_186
  # DEBUG __pos => __i$_M_node_186
  # DEBUG this => _7
  if (__i$_M_node_42 == __i$_M_node_186)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 21>:
  # DEBUG this => &D.75172
  # DEBUG __a => __k_5(D)
  # DEBUG __b => &D.75171
  # DEBUG this => &D.75172.first
  # DEBUG __str => __k_5(D)
  # DEBUG this => __k_5(D)
  # DEBUG D#1185 => &MEM[(const struct basic_string *)__k_5(D)]._M_dataplus
  # DEBUG this => &D.75172.first
  # DEBUG D#1186 => &MEM[(struct basic_string *)&D.75172]._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &MEM[(struct basic_string *)&D.75172].D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  # DEBUG this => D#1
  # DEBUG D#2 => __k_5(D)
  # DEBUG this => D#2
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG this => &D.75172.first
  # DEBUG __beg => NULL
  # DEBUG __end => NULL
  # DEBUG this => &D.75172.first
  # DEBUG __beg => NULL
  # DEBUG __end => NULL
  # DEBUG this => this_4(D)
  # DEBUG __position$_M_node => NULL
  # DEBUG __x => &D.75172
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _7
  # DEBUG __x => &D.75172
  # DEBUG this => &__an
  # DEBUG __t => _7
  # DEBUG __an$_M_t => _7
  # DEBUG D#2706 => &__an
  # DEBUG this => _7
  # DEBUG __v => &D.75172
  # DEBUG __node_gen => D#2706
  # DEBUG D#2705 => D#2706
  # DEBUG __x => &D.75172
  # DEBUG this => D#666
  # DEBUG this => _7
  # DEBUG __k => &D.75172.first
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __pos => NULL
  # DEBUG this => _7
  _79 = MEM[(long unsigned int *)this_4(D) + 40B];
  # DEBUG D#1172 => _7
  # DEBUG this => D#1172
  if (_79 != 0)
    goto <bb 22>;
  else
    goto <bb 65>;

  <bb 22>:
  # DEBUG this => _7
  _80 = MEM[(struct _Rb_tree_node_base * &)this_4(D) + 32];
  # DEBUG __x => _80
  # DEBUG __x => _80
  # DEBUG this => _80
  # DEBUG D#2189 => &MEM[(const struct _Rb_tree_node *)_80]._M_value_field
  # DEBUG __r => D#2189
  # DEBUG __x => D#2189
  # DEBUG this => D#666
  _81 = &MEM[(const struct pair &)_80 + 32].first;
  # DEBUG D#2198 => &MEM[(struct _Rb_tree *)_7]._M_impl._M_key_compare
  # DEBUG D#665 => D#2198
  # DEBUG __x => _81
  # DEBUG __y => &D.75172.first
  # DEBUG this => D#665
  # DEBUG __lhs => _81
  # DEBUG __rhs => &D.75172.first
  _82 = std::__cxx11::basic_string<char>::compare (_81, &D.75172.first);
  if (_82 < 0)
    goto <bb 46>;
  else
    goto <bb 65>;

  <bb 23>:
  # __i$_M_node_145 = PHI <__i$_M_node_186(20), __i$_M_node_264(67)>
  # DEBUG this => &D.75172
  # DEBUG __a => __k_5(D)
  # DEBUG __b => &D.75171
  # DEBUG this => &D.75172.first
  # DEBUG __str => __k_5(D)
  # DEBUG this => __k_5(D)
  # DEBUG D#1185 => &MEM[(const struct basic_string *)__k_5(D)]._M_dataplus
  # DEBUG this => &D.75172.first
  # DEBUG D#1186 => &MEM[(struct basic_string *)&D.75172]._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &MEM[(struct basic_string *)&D.75172].D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  # DEBUG this => D#1
  # DEBUG D#2 => __k_5(D)
  # DEBUG this => D#2
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG this => &D.75172.first
  # DEBUG __beg => NULL
  # DEBUG __end => NULL
  # DEBUG this => &D.75172.first
  # DEBUG __beg => NULL
  # DEBUG __end => NULL
  # DEBUG this => this_4(D)
  # DEBUG __position$_M_node => __i$_M_node_145
  # DEBUG __x => &D.75172
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _7
  # DEBUG __x => &D.75172
  # DEBUG this => &__an
  # DEBUG __t => _7
  # DEBUG __an$_M_t => _7
  # DEBUG D#2706 => &__an
  # DEBUG this => _7
  # DEBUG __v => &D.75172
  # DEBUG __node_gen => D#2706
  # DEBUG D#2705 => D#2706
  # DEBUG __x => &D.75172
  # DEBUG this => D#666
  # DEBUG this => _7
  # DEBUG __k => &D.75172.first
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_145
  # DEBUG __pos => __i$_M_node_145
  # DEBUG this => _7
  # DEBUG __x => __i$_M_node_145
  # DEBUG __x => __i$_M_node_145
  # DEBUG this => __i$_M_node_145
  # DEBUG D#2189 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_145]._M_value_field
  # DEBUG __r => D#2189
  # DEBUG __x => D#2189
  # DEBUG this => D#666
  # DEBUG D#3903 => &MEM[(const struct pair &)__i$_M_node_145 + 32].first
  # DEBUG D#2200 => &MEM[(struct _Rb_tree *)_7]._M_impl._M_key_compare
  # DEBUG D#665 => D#2200
  # DEBUG __x => &D.75172.first
  # DEBUG __y => D#3903
  # DEBUG this => D#665
  # DEBUG __lhs => &D.75172.first
  # DEBUG __rhs => D#3903
  # DEBUG this => &D.75172.first
  # DEBUG __str => D#3903
  _98 = MEM[(long unsigned int *)&D.75172 + 8B];
  # DEBUG D#3 => &D.75172.first
  # DEBUG this => D#3
  # DEBUG __size => _98
  _99 = MEM[(long unsigned int *)__i$_M_node_145 + 40B];
  # DEBUG D#3 => D#3903
  # DEBUG this => D#3
  # DEBUG __osize => _99
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_247 = MIN_EXPR <_98, _99>;
  # DEBUG __len => D#3898
  # DEBUG this => D#3903
  _102 = MEM[(char * *)__i$_M_node_145 + 32B];
  # DEBUG D#1 => D#3903
  # DEBUG this => D#1
  _103 = MEM[(char * *)&D.75172];
  # DEBUG D#1 => &D.75172.first
  # DEBUG this => D#1
  # DEBUG __s1 => _103
  # DEBUG __s2 => _102
  # DEBUG __n => D#3898
  __r_104 = __builtin_memcmp (_103, _102, __len_247);
  # DEBUG __r => NULL
  if (__r_104 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 24>:
  # DEBUG __n1 => _98
  # DEBUG __n2 => _99
  _105 = _98 - _99;
  __d_106 = (const difference_type) _105;
  # DEBUG __d => __d_106
  if (__d_106 > 2147483647)
    goto <bb 37>;
  else
    goto <bb 25>;

  <bb 25>:
  if (__d_106 < -2147483648)
    goto <bb 28>;
  else
    goto <bb 26>;

  <bb 26>:
  __r_107 = (int) _105;

  <bb 27>:
  # __r_108 = PHI <__r_104(23), __r_107(26)>
  # DEBUG __r => __r_108
  # DEBUG D#3921 => {CLOBBER}
  # DEBUG __size => D#3921
  # DEBUG D#3922 => {CLOBBER}
  # DEBUG __osize => D#3922
  if (__r_108 < 0)
    goto <bb 28>;
  else
    goto <bb 37>;

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __before => __i$_M_node_145
  # DEBUG this => _7
  _87 = MEM[(struct _Rb_tree_node_base * &)this_4(D) + 24];
  if (_87 == __i$_M_node_145)
    goto <bb 46>;
  else
    goto <bb 29>;

  <bb 29>:
  # DEBUG this => &__before
  _88 = std::_Rb_tree_decrement (__i$_M_node_145);
  # DEBUG __before => _88
  # DEBUG __x => _88
  # DEBUG __x => _88
  # DEBUG this => _88
  # DEBUG D#2189 => &MEM[(const struct _Rb_tree_node *)_88]._M_value_field
  # DEBUG __r => D#2189
  # DEBUG __x => D#2189
  # DEBUG this => D#666
  # DEBUG D#3904 => &MEM[(const struct pair &)_88 + 32].first
  # DEBUG D#2197 => &MEM[(struct _Rb_tree *)_7]._M_impl._M_key_compare
  # DEBUG D#665 => D#2197
  # DEBUG __x => D#3904
  # DEBUG __y => &D.75172.first
  # DEBUG this => D#665
  # DEBUG __lhs => D#3904
  # DEBUG __rhs => &D.75172.first
  # DEBUG this => D#3904
  # DEBUG __str => &D.75172.first
  _110 = MEM[(long unsigned int *)_88 + 40B];
  # DEBUG D#3 => D#3904
  # DEBUG this => D#3
  # DEBUG __size => _110
  # DEBUG D#3 => &D.75172.first
  # DEBUG this => D#3
  # DEBUG __osize => _98
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_244 = MIN_EXPR <_98, _110>;
  # DEBUG __len => D#3900
  # DEBUG this => &D.75172.first
  # DEBUG D#1 => &D.75172.first
  # DEBUG this => D#1
  _115 = MEM[(char * *)_88 + 32B];
  # DEBUG D#1 => D#3904
  # DEBUG this => D#1
  # DEBUG __s1 => _115
  # DEBUG __s2 => _103
  # DEBUG __n => D#3900
  __r_116 = __builtin_memcmp (_115, _103, __len_244);
  # DEBUG __r => NULL
  if (__r_116 == 0)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 30>:
  # DEBUG __n1 => _110
  # DEBUG __n2 => _98
  _117 = _110 - _98;
  __d_118 = (const difference_type) _117;
  # DEBUG __d => __d_118
  if (__d_118 > 2147483647)
    goto <bb 36>;
  else
    goto <bb 31>;

  <bb 31>:
  if (__d_118 < -2147483648)
    goto <bb 34>;
  else
    goto <bb 32>;

  <bb 32>:
  __r_119 = (int) _117;

  <bb 33>:
  # __r_120 = PHI <__r_116(29), __r_119(32)>
  # DEBUG __r => __r_120
  # DEBUG D#3927 => {CLOBBER}
  # DEBUG __size => D#3927
  # DEBUG D#3928 => {CLOBBER}
  # DEBUG __osize => D#3928
  if (__r_120 < 0)
    goto <bb 34>;
  else
    goto <bb 36>;

  <bb 34>:
  # DEBUG __r => NULL
  _91 = MEM[(struct _Rb_tree_node_base * *)_88 + 24B];
  # DEBUG D#270 => _88
  # DEBUG __x => D#270
  if (_91 == 0B)
    goto <bb 46>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 46>;

  <bb 36>:
  # DEBUG __r => NULL
  D.164222 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, Stats*>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> > >::_M_get_insert_unique_pos (_7, &D.75172.first);
  SR.6037_198 = MEM[(struct pair *)&D.164222];
  SR.6038_197 = MEM[(struct pair *)&D.164222 + 8B];
  goto <bb 46>;

  <bb 37>:
  # DEBUG __r => NULL
  # DEBUG __x => __i$_M_node_145
  # DEBUG __x => __i$_M_node_145
  # DEBUG this => __i$_M_node_145
  # DEBUG D#2189 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_145]._M_value_field
  # DEBUG __r => D#2189
  # DEBUG __x => D#2189
  # DEBUG this => D#666
  # DEBUG D#2199 => &MEM[(struct _Rb_tree *)_7]._M_impl._M_key_compare
  # DEBUG D#665 => D#2199
  # DEBUG __x => D#3903
  # DEBUG __y => &D.75172.first
  # DEBUG this => D#665
  # DEBUG __lhs => D#3903
  # DEBUG __rhs => &D.75172.first
  # DEBUG this => D#3903
  # DEBUG __str => &D.75172.first
  # DEBUG D#3 => D#3903
  # DEBUG this => D#3
  # DEBUG __size => _99
  # DEBUG D#3 => &D.75172.first
  # DEBUG this => D#3
  # DEBUG __osize => _98
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#3899
  # DEBUG this => &D.75172.first
  # DEBUG D#1 => &D.75172.first
  # DEBUG this => D#1
  # DEBUG D#1 => D#3903
  # DEBUG this => D#1
  # DEBUG __s1 => _102
  # DEBUG __s2 => _103
  # DEBUG __n => D#3899
  __r_128 = __builtin_memcmp (_102, _103, __len_247);
  # DEBUG __r => NULL
  if (__r_128 == 0)
    goto <bb 38>;
  else
    goto <bb 41>;

  <bb 38>:
  # DEBUG __n1 => _99
  # DEBUG __n2 => _98
  _129 = _99 - _98;
  __d_130 = (const difference_type) _129;
  # DEBUG __d => __d_130
  if (__d_130 > 2147483647)
    goto <bb 56>;
  else
    goto <bb 39>;

  <bb 39>:
  if (__d_130 < -2147483648)
    goto <bb 42>;
  else
    goto <bb 40>;

  <bb 40>:
  __r_131 = (int) _129;

  <bb 41>:
  # __r_132 = PHI <__r_128(37), __r_131(40)>
  # DEBUG __r => __r_132
  # DEBUG D#3933 => {CLOBBER}
  # DEBUG __size => D#3933
  # DEBUG D#3934 => {CLOBBER}
  # DEBUG __osize => D#3934
  if (__r_132 < 0)
    goto <bb 42>;
  else
    goto <bb 56>;

  <bb 42>:
  # DEBUG __r => NULL
  # DEBUG __after => __i$_M_node_145
  # DEBUG this => _7
  _93 = MEM[(struct _Rb_tree_node_base * &)this_4(D) + 32];
  if (_93 == __i$_M_node_145)
    goto <bb 66>;
  else
    goto <bb 43>;

  <bb 43>:
  # DEBUG this => &__after
  _94 = std::_Rb_tree_increment (__i$_M_node_145);
  # DEBUG __after => _94
  # DEBUG __x => _94
  # DEBUG __x => _94
  # DEBUG this => _94
  # DEBUG D#2189 => &MEM[(const struct _Rb_tree_node *)_94]._M_value_field
  # DEBUG __r => D#2189
  # DEBUG __x => D#2189
  # DEBUG this => D#666
  _95 = &MEM[(const struct pair &)_94 + 32].first;
  # DEBUG D#2196 => &MEM[(struct _Rb_tree *)_7]._M_impl._M_key_compare
  # DEBUG D#665 => D#2196
  # DEBUG __x => &D.75172.first
  # DEBUG __y => _95
  # DEBUG this => D#665
  # DEBUG __lhs => &D.75172.first
  # DEBUG __rhs => _95
  _96 = std::__cxx11::basic_string<char>::compare (&D.75172.first, _95);
  if (_96 < 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  _97 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_145 + 24B];
  # DEBUG D#270 => __i$_M_node_145
  # DEBUG __x => D#270
  if (_97 == 0B)
    goto <bb 66>;
  else
    goto <bb 46>;

  <bb 45>:
  D.164222 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, Stats*>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> > >::_M_get_insert_unique_pos (_7, &D.75172.first);
  SR.6037_195 = MEM[(struct pair *)&D.164222];
  SR.6038_194 = MEM[(struct pair *)&D.164222 + 8B];

  <bb 46>:
  # __res_172 = PHI <0B(22), SR.6037_217(65), __i$_M_node_145(28), 0B(34), __i$_M_node_145(35), SR.6037_198(36), _94(44), SR.6037_195(45)>
  # __res$8_220 = PHI <_80(22), SR.6038_206(65), __i$_M_node_145(28), _88(34), __i$_M_node_145(35), SR.6038_197(36), _94(44), SR.6038_194(45)>
  # DEBUG D#2195 => {CLOBBER}
  # DEBUG __pos => D#2195
  # DEBUG __res => __res_172
  # DEBUG __res$8 => __res$8_220
  # DEBUG __res$first => __res_172
  # DEBUG __res$second => __res$8_220
  if (__res$8_220 != 0B)
    goto <bb 48>;
  else
    goto <bb 47>;

  <bb 47>:
  pretmp_193 = MEM[(char * *)&D.75172];
  goto <bb 56>;

  <bb 48>:
  # DEBUG D#2700 => D#2705
  # DEBUG this => _7
  # DEBUG __x => __res_172
  # DEBUG __p => __res$8_220
  # DEBUG __v => &D.75172
  # DEBUG __node_gen => D#2700
  # DEBUG D#2699 => D#2700
  # DEBUG this => _7
  _74 = __i$_M_node_42 == __res$8_220;
  _238 = __res_172 != 0B;
  _242 = _74 | _238;
  if (_242 != 0)
    goto <bb 50>;
  else
    goto <bb 49>;

  <bb 49>:
  # __res$8_233 = PHI <__res$8_220(48), __i$_M_node_145(66)>

  <bb 74>:
  # DEBUG D#2700 => D#2705
  # DEBUG this => _7
  # DEBUG __x => NULL
  # DEBUG __p => __res$8_233
  # DEBUG __v => &D.75172
  # DEBUG __node_gen => D#2700
  # DEBUG D#2699 => D#2700
  # DEBUG this => _7
  # DEBUG __x => __res$8_233
  # DEBUG __x => __res$8_233
  # DEBUG this => __res$8_233
  # DEBUG D#2189 => &MEM[(const struct _Rb_tree_node *)__res$8_233]._M_value_field
  # DEBUG __r => D#2189
  # DEBUG __x => D#2189
  # DEBUG this => D#666
  _135 = &MEM[(const struct pair &)__res$8_233 + 32].first;
  # DEBUG __x => &D.75172
  # DEBUG this => D#666
  # DEBUG D#2698 => &MEM[(struct _Rb_tree *)_7]._M_impl._M_key_compare
  # DEBUG D#665 => D#2698
  # DEBUG __x => NULL
  # DEBUG __y => _135
  # DEBUG this => D#665
  # DEBUG __lhs => NULL
  # DEBUG __rhs => _135
  _137 = std::__cxx11::basic_string<char>::compare (&D.75172.first, _135);
  __insert_left_258 = _137 < 0;

  <bb 50>:
  # __insert_left_140 = PHI <__insert_left_258(74), 1(48)>
  # __res$8_114 = PHI <__res$8_233(74), __res$8_220(48)>
  # DEBUG __insert_left => __insert_left_140
  # DEBUG D#2697 => D#2699
  # DEBUG __arg => &D.75172
  # DEBUG this => D#2697
  # DEBUG D#2696 => D#2697
  # DEBUG D#2695 => D#2696->_M_t
  # DEBUG D#2694 => D#2695
  # DEBUG __x => &D.75172
  # DEBUG this => D#2694
  # DEBUG D#2693 => D#2694
  # DEBUG D#2692 => D#2694
  # DEBUG D#2691 => D#2692
  # DEBUG this => D#2691
  # DEBUG D#2690 => D#2691
  # DEBUG this => D#2690
  # DEBUG __n => 1
  # DEBUG __a => D#2689
  # DEBUG D#2688 => D#2689
  # DEBUG D#2686 => D#2688
  # DEBUG D#2687 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#2686
  # DEBUG D.164284 => D#2687
  # DEBUG D#2685 => D#2686
  # DEBUG D#2684 => D#2685
  # DEBUG this => D#2684
  _138 = operator new (72);

  <bb 51>:
  # DEBUG __tmp => _138
  # DEBUG D#2247 => D#2693
  # DEBUG __node => _138
  # DEBUG __x => &D.75172
  # DEBUG this => D#2247
  # DEBUG D#2246 => D#2247
  # DEBUG D#2245 => D#2247
  # DEBUG this => _138
  _144 = &_138->_M_value_field;
  # DEBUG __r => _144
  # DEBUG D#1650 => D#2245
  # DEBUG this => D#1650
  # DEBUG D#1649 => D#1650
  # DEBUG this => D#1649
  # DEBUG this => NULL
  # DEBUG D.128763 => NULL
  # DEBUG this => NULL
  # DEBUG __p => _144
  # DEBUG __val => &D.75172
  # DEBUG this => D#2244
  # DEBUG D#20 => 40
  # DEBUG __p => _144
  # DEBUG D.137564 => D#20
  # DEBUG this => _144
  # DEBUG D.164313 => &D.75172
  # DEBUG D#2243 => &D.75172.first
  # DEBUG this => _144
  # DEBUG __str => D#2243
  # DEBUG this => D#2243
  # DEBUG D#1185 => &D#2243->_M_dataplus
  # DEBUG this => _144
  _146 = &MEM[(struct basic_string *)_138 + 32B].D.11539._M_local_buf;
  # DEBUG D#1186 => &MEM[(struct basic_string *)_144]._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => _146
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)_138 + 32B]._M_p = _146;
  _147 = MEM[(char * *)&D.75172];
  # DEBUG D#1 => D#2243
  # DEBUG this => D#1
  _148 = MEM[(long unsigned int *)&D.75172 + 8B];
  # DEBUG D#2 => D#2243
  # DEBUG this => D#2
  _149 = _147 + _148;
  # DEBUG D#1 => D#2243
  # DEBUG this => D#1
  # DEBUG this => _144
  # DEBUG __beg => _147
  # DEBUG __end => _149
  # DEBUG this => _144
  # DEBUG __beg => _147
  # DEBUG __end => _149
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (_144, _147, _149);

  <bb 52>:
  _150 = D.75172.second;
  MEM[(struct pair *)_138 + 32B].second = _150;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _138
  _141 = (int) __insert_left_140;
  std::_Rb_tree_insert_and_rebalance (_141, _138, __res$8_114, __i$_M_node_42);
  _142 = MEM[(struct _Rb_tree *)this_4(D)]._M_impl._M_node_count;
  _143 = _142 + 1;
  MEM[(struct _Rb_tree *)this_4(D)]._M_impl._M_node_count = _143;
  # DEBUG this => NULL
  # DEBUG __x => _138
  pretmp_187 = MEM[(char * *)&D.75172];
  goto <bb 57>;

<L22>:
  _151 = __builtin_eh_pointer (11);
  __cxa_begin_catch (_151);
  # DEBUG D#1241 => D#2246
  # DEBUG __p => _138
  # DEBUG this => D#1241
  # DEBUG D#1240 => D#1241
  # DEBUG this => D#1240
  # DEBUG D#1239 => 1
  # DEBUG __p => _138
  # DEBUG __a => D#1238
  # DEBUG __n => D#1239
  # DEBUG D#1237 => D#1239
  # DEBUG D#1236 => D#1238
  # DEBUG D#1234 => D#1236
  # DEBUG D#1235 => D#1237
  # DEBUG __p => _138
  # DEBUG this => D#1234
  # DEBUG D.164307 => D#1235
  operator delete (_138);
  __cxa_rethrow ();

<L24>:
  __cxa_end_catch ();
  resx 12

<L26>:
  goto <bb 62> (<L19>);

  <bb 56>:
  # __res_122 = PHI <__res_172(47), __i$_M_node_145(38), 0B(66), __i$_M_node_145(41)>
  # prephitmp_192 = PHI <pretmp_193(47), _103(38), _103(66), _103(41)>

  <bb 73>:
  # DEBUG D#2195 => {CLOBBER}
  # DEBUG __pos => D#2195
  # DEBUG __res => __res_122
  # DEBUG __res$8 => NULL
  # DEBUG __res$first => __res_122
  # DEBUG __res$second => NULL
  # DEBUG this => NULL
  # DEBUG __x => __res_122

  <bb 57>:
  # SR.6036_173 = PHI <_138(52), __res_122(73)>
  # prephitmp_37 = PHI <pretmp_187(52), prephitmp_192(73)>
  # DEBUG D#2703 => {CLOBBER}
  # DEBUG __res$first => D#2703
  # DEBUG D#2704 => {CLOBBER}
  # DEBUG __res$second => D#2704
  # DEBUG __i$_M_node => SR.6036_173
  # DEBUG this => &D.75172
  # DEBUG D#637 => &D.75172.first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG D#3935 => MEM[(char * *)&D.75172]
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  if (&MEM[(const struct basic_string *)&D.75172].D.11539._M_local_buf != prephitmp_37)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => D#3935
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => D#3935
  # DEBUG this => D#620
  # DEBUG D.146208 => D#621
  operator delete (prephitmp_37);

  <bb 59>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.75172 ={v} {CLOBBER};

  <bb 60>:
  # __i$_M_node_14 = PHI <__i$_M_node_264(15), SR.6036_173(59), __i$_M_node_264(18)>

  <bb 72>:
  # DEBUG __i$_M_node => __i$_M_node_14
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_14
  # DEBUG D#2708 => &MEM[(struct _Rb_tree_node *)__i$_M_node_14]._M_value_field
  # DEBUG __r => D#2708
  _15 = &MEM[(struct pair &)__i$_M_node_14 + 32].second;
  # DEBUG D#2710 => {CLOBBER}
  # DEBUG __i$_M_node => D#2710
  return _15;

<L25>:

<L19>:
  # DEBUG this => &D.75172
  # DEBUG D#637 => &D.75172.first
  # DEBUG this => D#637
  # DEBUG this => D#637
  # DEBUG this => D#637
  _20 = MEM[(char * *)&D.75172];
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  if (&MEM[(const struct basic_string *)&D.75172].D.11539._M_local_buf != _20)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#637].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#637
  # DEBUG this => D#1
  # DEBUG this => D#637
  # DEBUG D#626 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _20
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _20
  # DEBUG this => D#620
  # DEBUG D.146227 => D#621
  operator delete (_20);

  <bb 64>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#637]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.75172 ={v} {CLOBBER};
  resx 7

  <bb 65>:
  D.164222 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, Stats*>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> > >::_M_get_insert_unique_pos (_7, &D.75172.first);
  SR.6037_217 = MEM[(struct pair *)&D.164222];
  SR.6038_206 = MEM[(struct pair *)&D.164222 + 8B];
  goto <bb 46>;

  <bb 66>:
  # DEBUG D#2195 => {CLOBBER}
  # DEBUG __pos => D#2195
  # DEBUG __res => 0B
  # DEBUG __res$8 => __i$_M_node_145
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __i$_M_node_145
  if (__i$_M_node_145 != 0B)
    goto <bb 49>;
  else
    goto <bb 56>;

  <bb 67>:
  # DEBUG this => &D.75172
  # DEBUG __a => __k_5(D)
  # DEBUG __b => &D.75171
  # DEBUG this => &D.75172.first
  # DEBUG __str => __k_5(D)
  # DEBUG this => __k_5(D)
  # DEBUG D#1185 => &MEM[(const struct basic_string *)__k_5(D)]._M_dataplus
  # DEBUG this => &D.75172.first
  # DEBUG D#1186 => &MEM[(struct basic_string *)&D.75172]._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &MEM[(struct basic_string *)&D.75172].D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.75172]._M_p = &MEM[(struct basic_string *)&D.75172].D.11539._M_local_buf;
  # DEBUG D#3938 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG D#2 => __k_5(D)
  # DEBUG this => D#2
  _133 = pretmp_65 + pretmp_190;
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG this => &D.75172.first
  # DEBUG __beg => D#3938
  # DEBUG __end => _133
  # DEBUG this => &D.75172.first
  # DEBUG __beg => D#3938
  # DEBUG __end => _133
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (&D.75172.first, pretmp_65, _133);
  D.75172.second = 0B;
  # DEBUG this => this_4(D)
  # DEBUG __position$_M_node => __i$_M_node_264
  # DEBUG __x => &D.75172
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _7
  # DEBUG __x => &D.75172
  # DEBUG this => &__an
  # DEBUG __t => _7
  # DEBUG __an$_M_t => _7
  # DEBUG D#2706 => &__an
  # DEBUG this => _7
  # DEBUG __v => &D.75172
  # DEBUG __node_gen => D#2706
  # DEBUG D#2705 => D#2706
  # DEBUG __x => &D.75172
  # DEBUG this => D#666
  # DEBUG this => _7
  # DEBUG __k => &D.75172.first
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_264
  # DEBUG __pos => __i$_M_node_264
  # DEBUG this => _7
  goto <bb 23>;

  <bb 68>:
  # DEBUG this => &D.75172
  # DEBUG __a => __k_5(D)
  # DEBUG __b => &D.75171
  # DEBUG this => &D.75172.first
  # DEBUG __str => __k_5(D)
  # DEBUG this => __k_5(D)
  # DEBUG D#1185 => &MEM[(const struct basic_string *)__k_5(D)]._M_dataplus
  # DEBUG this => &D.75172.first
  # DEBUG D#1186 => &MEM[(struct basic_string *)&D.75172]._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &MEM[(struct basic_string *)&D.75172].D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.75172]._M_p = &MEM[(struct basic_string *)&D.75172].D.11539._M_local_buf;
  # DEBUG D#3937 => MEM[(char * *)__k_5(D)]
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG D#2 => __k_5(D)
  # DEBUG this => D#2
  _136 = pretmp_65 + pretmp_190;
  # DEBUG D#1 => __k_5(D)
  # DEBUG this => D#1
  # DEBUG this => &D.75172.first
  # DEBUG __beg => D#3937
  # DEBUG __end => _136
  # DEBUG this => &D.75172.first
  # DEBUG __beg => D#3937
  # DEBUG __end => _136
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (&D.75172.first, pretmp_65, _136);
  D.75172.second = 0B;
  # DEBUG this => this_4(D)
  # DEBUG __position$_M_node => __i$_M_node_264
  # DEBUG __x => &D.75172
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => _7
  # DEBUG __x => &D.75172
  # DEBUG this => &__an
  # DEBUG __t => _7
  # DEBUG __an$_M_t => _7
  # DEBUG D#2706 => &__an
  # DEBUG this => _7
  # DEBUG __v => &D.75172
  # DEBUG __node_gen => D#2706
  # DEBUG D#2705 => D#2706
  # DEBUG __x => &D.75172
  # DEBUG this => D#666
  # DEBUG this => _7
  # DEBUG __k => &D.75172.first
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_264
  # DEBUG __pos => __i$_M_node_264
  # DEBUG this => _7
  goto <bb 21>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<int>*; _ForwardIterator = std::vector<int>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIiSaIiEES5_EET0_T_S7_S6_, funcdef_no=5136, decl_uid=88907, cgraph_uid=3384, symbol_order=3385)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<int>*; _ForwardIterator = std::vector<int>*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  int * D.164413;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  int * _8;
  void * _12;
  long unsigned int _20;
  int * const _27;
  int * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  int * _36;
  int * const _37;
  int * const _38;
  long int __last.79_39;
  long int __first.80_40;
  long int _41;
  long unsigned int _43;
  int * _45;
  int * _46;
  int * iftmp.77_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_71 = PHI <__first_5(D)(3), __first_10(17)>
  # __result_70 = PHI <__result_4(D)(3), __result_11(17)>
  # DEBUG __cur => __result_70
  # DEBUG __first => __first_71
  # DEBUG __r => __result_70
  # DEBUG __p => NULL
  # DEBUG __value => __first_71
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.124770 => D#20
  if (__result_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_70
  # DEBUG __x => __first_71
  # DEBUG D#1387 => &MEM[(const struct vector *)__first_71].D.45977
  # DEBUG this => D#1387
  # DEBUG __a => NULL
  _27 = MEM[(int * *)__first_71];
  # DEBUG D#68 => __first_71
  _28 = MEM[(int * *)__first_71 + 8B];
  # DEBUG D#68 => __first_71
  # DEBUG this => D#68
  # DEBUG this => D#68
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 4;
  _33 = (size_type) _32;
  # DEBUG D#1389 => &__result_70->D.45977
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1271 => &D#1389->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)__result_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_end_of_storage = 0B;
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG D#1269 => D#1389
  # DEBUG __n => _33
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => _33
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#1263
  # DEBUG D.164411 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (_33 > 4611686018427387903)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_9 = PHI <__result_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __result_35 = PHI <__result_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.77_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_start = iftmp.77_47;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_finish = iftmp.77_47;
  _36 = iftmp.77_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#1388 => &__result_70->D.45977
  # DEBUG this => D#1388
  _37 = MEM[(int * *)__first_71 + 8B];
  # DEBUG D#276 => __first_71
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(int * *)__first_71];
  # DEBUG D#277 => __first_71
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.164375 => D#1386
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.79_39 = (long int) _37;
  __first.80_40 = (long int) _38;
  _41 = __last.79_39 - __first.80_40;
  _Num_42 = _41 /[ex] 4;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.77_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.77_47 + prephitmp_2;
  __result_70->D.45977._M_impl._M_finish = _45;

  <bb 15>:
  __first_10 = __first_71 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_70 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __result_18 = PHI <__result_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __result_63 = PHI <__result_18(16), __result_4(D)(2)>
  return __result_63;

<L7>:

  # __result_44 = PHI <__result_35(10), __result_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __result_64 = PHI <__result_4(D)(22), __result_17(26)>
  # DEBUG __first => __result_64
  # DEBUG __r => __result_64
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _8 = MEM[(struct _Vector_base *)__result_64]._M_impl._M_start;
  # DEBUG D#473 => (long int) _8
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _8
  # DEBUG __n => D#470
  if (_8 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _8
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _8
  # DEBUG this => D#462
  # DEBUG D.124795 => D#463
  operator delete (_8);

  <bb 25>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__result_64] ={v} {CLOBBER};
  __result_17 = __result_64 + 24;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<int>*, std::vector<std::vector<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<int>*] (_ZNSt6vectorIS_IiSaIiEESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_, funcdef_no=3231, decl_uid=53264, cgraph_uid=1479, symbol_order=1480)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<int>*, std::vector<std::vector<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<int>*] (struct vector * const this, struct iterator __position, const struct vector & __x)
{
  const long unsigned int D.164561;
  const size_type __len;
  size_type D.164560;
  size_type __n;
  struct vector * D.164551;
  int * D.164542;
  const ptrdiff_t _Num;
  int * D.164492;
  const ptrdiff_t _Num;
  struct vector * const __position;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __result;
  struct vector * __new_finish;
  struct vector __x_copy;
  struct vector * _8;
  struct vector * _9;
  long unsigned int prephitmp_10;
  long unsigned int pretmp_11;
  long int __last.83_12;
  struct vector * _14;
  long unsigned int _17;
  int * _26;
  long int _28;
  struct vector * _29;
  struct vector * const _32;
  long unsigned int pretmp_33;
  long unsigned int _34;
  struct vector * _35;
  long int pretmp_37;
  struct vector * _38;
  struct vector * _41;
  long int _43;
  struct vector * _44;
  struct vector * _51;
  void * _53;
  long int __first.84_56;
  int * _60;
  int * const pretmp_61;
  struct vector * _64;
  int * _65;
  int * _67;
  int * _68;
  long int pretmp_70;
  struct vector * pretmp_73;
  long unsigned int _81;
  struct vector * prephitmp_84;
  long unsigned int pretmp_85;
  long unsigned int prephitmp_86;
  struct vector * pretmp_87;
  struct vector * prephitmp_88;
  long unsigned int prephitmp_101;
  struct vector * pretmp_102;
  int * const _118;
  int * const _119;
  long int _120;
  long int _121;
  long int _122;
  long int _123;
  size_type _124;
  long int pretmp_125;
  int * _127;
  int * _136;
  int * _137;
  int * iftmp.77_138;
  int * const _139;
  int * const _140;
  long int _141;
  long int _142;
  long int _143;
  long int _144;
  size_type _145;
  int * _148;
  int * _157;
  int * _158;
  int * iftmp.77_159;
  struct vector * _161;
  long int _164;
  long int _165;
  long int _166;
  long int _167;
  struct vector * prephitmp_169;
  long int _170;
  int * const pretmp_171;
  int * const prephitmp_172;
  const ptrdiff_t prephitmp_184;
  int * const prephitmp_195;
  long int _206;
  long int _208;
  long int _209;
  long unsigned int prephitmp_210;
  long unsigned int pretmp_214;
  long int _215;
  const ptrdiff_t pretmp_216;
  int * const pretmp_217;
  int * const pretmp_218;
  long unsigned int prephitmp_219;
  long int pretmp_232;
  long int pretmp_234;
  long int pretmp_236;
  const ptrdiff_t pretmp_238;
  const ptrdiff_t prephitmp_239;
  long unsigned int pretmp_240;
  long unsigned int prephitmp_241;

  <bb 2>:
  __position_31 = MEM[(struct __normal_iterator *)&__position];
  # DEBUG __position => __position_31
  _8 = this_7(D)->D.53336._M_impl._M_finish;
  _9 = this_7(D)->D.53336._M_impl._M_end_of_storage;
  if (_8 != _9)
    goto <bb 3>;
  else
    goto <bb 28>;

  <bb 3>:
  # DEBUG D#3947 => _8 + 18446744073709551592
  # DEBUG D#1429 => &this_7(D)->D.53336._M_impl
  # DEBUG D#1392 => D#1429
  # DEBUG __p => _8
  # DEBUG __arg => D#3947
  # DEBUG __a => D#1392
  # DEBUG D#1391 => D#1392
  # DEBUG D#1390 => D#1391
  # DEBUG __p => _8
  # DEBUG __val => D#3947
  # DEBUG this => D#1390
  # DEBUG D#20 => 24
  # DEBUG __p => _8
  # DEBUG D.124741 => D#20
  if (_8 != 0B)
    goto <bb 4>;
  else
    goto <bb 12>;

  <bb 4>:
  # DEBUG this => _8
  # DEBUG __x => D#3947
  # DEBUG D#1387 => &D#3947->D.45977
  # DEBUG this => D#1387
  # DEBUG __a => NULL
  _118 = MEM[(int * *)_8 + -24B];
  # DEBUG D#68 => D#3947
  _119 = MEM[(int * *)_8 + -16B];
  # DEBUG D#68 => D#3947
  # DEBUG this => D#68
  # DEBUG this => D#68
  _120 = (long int) _119;
  _121 = (long int) _118;
  _122 = _120 - _121;
  _123 = _122 /[ex] 4;
  _124 = (size_type) _123;
  # DEBUG D#1389 => &_8->D.45977
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1271 => &D#1389->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)_8]._M_start = 0B;
  MEM[(struct _Vector_impl *)_8]._M_finish = 0B;
  MEM[(struct _Vector_impl *)_8]._M_end_of_storage = 0B;
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG D#1269 => D#1389
  # DEBUG __n => _124
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (_124 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_11 = (long unsigned int) _122;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => _124
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => _124
  # DEBUG this => D#1263
  # DEBUG D.164490 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (_124 > 4611686018427387903)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _81 = (long unsigned int) _122;
  _137 = operator new (_81);
  pretmp_218 = MEM[(int * *)_8 + -16B];
  pretmp_61 = MEM[(int * *)_8 + -24B];
  pretmp_232 = (long int) pretmp_218;
  pretmp_234 = (long int) pretmp_61;
  pretmp_236 = pretmp_232 - pretmp_234;
  pretmp_238 = pretmp_236 /[ex] 4;
  pretmp_240 = (long unsigned int) pretmp_236;

  <bb 9>:
  # iftmp.77_138 = PHI <0B(5), _137(8)>
  # prephitmp_219 = PHI <pretmp_11(5), _81(8)>
  # prephitmp_195 = PHI <_118(5), pretmp_61(8)>
  # prephitmp_239 = PHI <_123(5), pretmp_238(8)>
  # prephitmp_241 = PHI <pretmp_11(5), pretmp_240(8)>
  MEM[(struct _Vector_base *)_8]._M_impl._M_start = iftmp.77_138;
  MEM[(struct _Vector_base *)_8]._M_impl._M_finish = iftmp.77_138;
  _127 = iftmp.77_138 + prephitmp_219;
  MEM[(struct _Vector_base *)_8]._M_impl._M_end_of_storage = _127;
  # DEBUG D#1388 => &_8->D.45977
  # DEBUG this => D#1388
  # DEBUG D#3958 => MEM[(int * *)_8 + -16B]
  # DEBUG D#276 => D#3947
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#3957 => MEM[(int * *)_8 + -24B]
  # DEBUG D#277 => D#3947
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#3957
  # DEBUG __last => D#3958
  # DEBUG __result => NULL
  # DEBUG D.164454 => D#1386
  # DEBUG __first => D#3957
  # DEBUG __last => D#3958
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3957
  # DEBUG __last => D#3958
  # DEBUG __result => NULL
  # DEBUG __first => D#3957
  # DEBUG __last => D#3958
  # DEBUG __result => NULL
  # DEBUG __it => D#3958
  # DEBUG __it$_M_current => D#3958
  # DEBUG __it => D#3957
  # DEBUG __it$_M_current => D#3957
  # DEBUG __first => D#3957
  # DEBUG __last => D#3958
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3958
  # DEBUG __it => D#3958
  # DEBUG this => NULL
  # DEBUG __it => D#3957
  # DEBUG __it => D#3957
  # DEBUG this => NULL
  # DEBUG __first => D#3957
  # DEBUG __last => D#3958
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3957
  # DEBUG __last => D#3958
  # DEBUG __result => NULL
  # DEBUG D#3956 => (long int) D#3958
  # DEBUG D#3955 => (long int) D#3957
  # DEBUG D#3954 => D#3956 - D#3955
  # DEBUG _Num => D#3954 /[ex] 4
  if (prephitmp_239 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __builtin_memmove (iftmp.77_138, prephitmp_195, prephitmp_241);

  <bb 11>:
  _136 = iftmp.77_138 + prephitmp_241;
  _8->D.45977._M_impl._M_finish = _136;
  pretmp_87 = this_7(D)->D.53336._M_impl._M_finish;

  <bb 12>:
  # prephitmp_88 = PHI <pretmp_87(11), _8(3)>
  _14 = prephitmp_88 + 24;
  this_7(D)->D.53336._M_impl._M_finish = _14;
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_16(D)
  # DEBUG D#1387 => &__x_16(D)->D.45977
  # DEBUG this => D#1387
  # DEBUG __a => NULL
  _139 = MEM[(int * *)__x_16(D)];
  # DEBUG D#68 => __x_16(D)
  _140 = MEM[(int * *)__x_16(D) + 8B];
  # DEBUG D#68 => __x_16(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  _141 = (long int) _140;
  _142 = (long int) _139;
  _143 = _141 - _142;
  _144 = _143 /[ex] 4;
  _145 = (size_type) _144;
  # DEBUG D#1389 => &__x_copy.D.45977
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1271 => &D#1389->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG D#1269 => D#1389
  # DEBUG __n => _145
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (_145 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  pretmp_33 = (long unsigned int) _143;
  goto <bb 16>;

  <bb 14>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => _145
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => _145
  # DEBUG this => D#1263
  # DEBUG D.164540 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (_145 > 4611686018427387903)
    goto <bb 7>;
  else
    goto <bb 15>;

  <bb 15>:
  _17 = (long unsigned int) _143;
  _158 = operator new (_17);
  pretmp_73 = this_7(D)->D.53336._M_impl._M_finish;
  pretmp_171 = MEM[(int * *)__x_16(D) + 8B];
  pretmp_217 = MEM[(int * *)__x_16(D)];
  pretmp_70 = (long int) pretmp_171;
  pretmp_37 = (long int) pretmp_217;
  pretmp_125 = pretmp_70 - pretmp_37;
  pretmp_216 = pretmp_125 /[ex] 4;
  pretmp_214 = (long unsigned int) pretmp_125;

  <bb 16>:
  # iftmp.77_159 = PHI <0B(13), _158(15)>
  # prephitmp_210 = PHI <pretmp_33(13), _17(15)>
  # prephitmp_169 = PHI <_14(13), pretmp_73(15)>
  # prephitmp_172 = PHI <_139(13), pretmp_217(15)>
  # prephitmp_184 = PHI <_144(13), pretmp_216(15)>
  # prephitmp_10 = PHI <pretmp_33(13), pretmp_214(15)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = iftmp.77_159;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = iftmp.77_159;
  _148 = iftmp.77_159 + prephitmp_210;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _148;
  # DEBUG D#1388 => &__x_copy.D.45977
  # DEBUG this => D#1388
  # DEBUG D#3953 => MEM[(int * *)__x_16(D) + 8B]
  # DEBUG D#276 => __x_16(D)
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#3952 => MEM[(int * *)__x_16(D)]
  # DEBUG D#277 => __x_16(D)
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#3952
  # DEBUG __last => D#3953
  # DEBUG __result => NULL
  # DEBUG D.164504 => D#1386
  # DEBUG __first => D#3952
  # DEBUG __last => D#3953
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3952
  # DEBUG __last => D#3953
  # DEBUG __result => NULL
  # DEBUG __first => D#3952
  # DEBUG __last => D#3953
  # DEBUG __result => NULL
  # DEBUG __it => D#3953
  # DEBUG __it$_M_current => D#3953
  # DEBUG __it => D#3952
  # DEBUG __it$_M_current => D#3952
  # DEBUG __first => D#3952
  # DEBUG __last => D#3953
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3953
  # DEBUG __it => D#3953
  # DEBUG this => NULL
  # DEBUG __it => D#3952
  # DEBUG __it => D#3952
  # DEBUG this => NULL
  # DEBUG __first => D#3952
  # DEBUG __last => D#3953
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3952
  # DEBUG __last => D#3953
  # DEBUG __result => NULL
  # DEBUG D#3951 => (long int) D#3953
  # DEBUG D#3950 => (long int) D#3952
  # DEBUG D#3949 => D#3951 - D#3950
  # DEBUG _Num => D#3949 /[ex] 4
  if (prephitmp_184 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  __builtin_memmove (iftmp.77_159, prephitmp_172, prephitmp_10);

  <bb 18>:
  _157 = iftmp.77_159 + prephitmp_10;
  __x_copy.D.45977._M_impl._M_finish = _157;
  __result_19 = prephitmp_169 + 18446744073709551592;
  __last_20 = prephitmp_169 + 18446744073709551568;
  # DEBUG this => &__position
  # DEBUG __first => __position_31
  # DEBUG __last => __last_20
  # DEBUG __result => __result_19
  # DEBUG __it => __last_20
  # DEBUG __it => __last_20
  # DEBUG __it => __position_31
  # DEBUG __it => __position_31
  # DEBUG __first => __position_31
  # DEBUG __last => __last_20
  # DEBUG __result => __result_19
  # DEBUG __it => __result_19
  # DEBUG __it => __result_19
  # DEBUG __it => __last_20
  # DEBUG __it => __last_20
  # DEBUG __it => __position_31
  # DEBUG __it => __position_31
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __last.83_12 = (long int) __last_20;
  __first.84_56 = (long int) __position_31;
  _43 = __last.83_12 - __first.84_56;
  __n_42 = _43 /[ex] 24;
  # DEBUG __n => __n_42
  # DEBUG __n => __n_42
  # DEBUG __result => __result_19
  # DEBUG __last => __last_20
  if (__n_42 <= 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG this => &__position
  std::vector<int>::operator= (__position_31, &__x_copy);
  goto <bb 25>;

  <bb 20>:

  <bb 21>:
  # __result_62 = PHI <__result_19(20), __result_22(23)>
  # __last_24 = PHI <__last_20(20), __last_36(23)>
  # __n_231 = PHI <__n_42(20), __n_21(23)>
  # DEBUG __n => __n_231
  # DEBUG __result => __result_62
  # DEBUG __last => __last_24
  __last_36 = __last_24 + 18446744073709551592;
  # DEBUG __last => __last_36
  __result_22 = __result_62 + 18446744073709551592;
  # DEBUG __result => __result_22
  std::vector<int>::operator= (__result_22, __last_36);

  <bb 22>:
  __n_21 = __n_231 + -1;
  # DEBUG __n => __n_21
  # DEBUG __n => __n_21
  # DEBUG __result => __result_22
  # DEBUG __last => __last_36
  if (__n_21 <= 0)
    goto <bb 19>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 21>;

<L12>:
  goto <bb 51> (<L3>);

  <bb 25>:
  # DEBUG this => &__x_copy
  # DEBUG D#476 => &__x_copy.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => __x_copy.D.45977._M_impl._M_finish
  # DEBUG D#478 => __x_copy.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &__x_copy.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _60 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#473 => (long int) _60
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _60
  # DEBUG __n => D#470
  if (_60 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _60
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _60
  # DEBUG this => D#462
  # DEBUG D.125211 => D#463
  operator delete (_60);

  <bb 27>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  __x_copy ={v} {CLOBBER};
  goto <bb 49>;

  <bb 28>:
  # DEBUG this => this_7(D)
  # DEBUG __n => 1
  # DEBUG __n => 1
  # DEBUG __s => "vector::_M_insert_aux"
  # DEBUG D#2138 => this_7(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _32 = MEM[(struct vector * *)this_7(D)];
  # DEBUG D#221 => this_7(D)
  # DEBUG D#221 => this_7(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _164 = (long int) _8;
  _165 = (long int) _32;
  _166 = _164 - _165;
  _167 = _166 /[ex] 24;
  _168 = (const long unsigned int) _167;
  # DEBUG D#221 => this_7(D)
  # DEBUG D#221 => this_7(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => this_7(D)
  # DEBUG D#221 => this_7(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.164561
  # DEBUG __b => &__n
  if (_168 == 0)
    goto <bb 71>;
  else
    goto <bb 29>;

  <bb 29>:
  __len_173 = _168 + _168;
  # DEBUG __len => __len_173
  # DEBUG D#221 => this_7(D)
  # DEBUG D#221 => this_7(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  if (_168 > __len_173)
    goto <bb 70>;
  else
    goto <bb 30>;

  <bb 30>:
  # DEBUG __len => __len_173
  # DEBUG D#221 => this_7(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#2138 => this_7(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  if (__len_173 > 768614336404564650)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 31>:
  pretmp_85 = __len_30 * 24;

  <bb 32>:
  # _206 = PHI <_170(70), _215(31)>
  # prephitmp_86 = PHI <18446744073709551600(70), pretmp_85(31)>
  # DEBUG __len => NULL
  # DEBUG this => this_7(D)
  # DEBUG D#292 => &this_7(D)->D.53336._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#292
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.81974
  # DEBUG this => &__position
  # DEBUG this => &D.81974
  # DEBUG D#1432 => _206 /[ex] 24
  # DEBUG __elems_before => (const size_type) D#1432
  # DEBUG D#1431 => &this_7(D)->D.53336
  # DEBUG D#1382 => D#1431
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => NULL
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2140
  # DEBUG D.164549 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  _161 = operator new (prephitmp_86);

  <bb 33>:
  # __new_finish_162 = PHI <0B(71), _161(32)>
  # _208 = PHI <_215(71), _206(32)>
  # prephitmp_101 = PHI <0(71), prephitmp_86(32)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  _34 = (long unsigned int) _208;
  _35 = __new_finish_162 + _34;
  # DEBUG D#1430 => &this_7(D)->D.53336._M_impl
  # DEBUG D#1392 => D#1430
  # DEBUG __p => _35
  # DEBUG __arg => __x_16(D)
  # DEBUG __a => D#1392
  # DEBUG D#1391 => D#1392
  # DEBUG D#1390 => D#1391
  # DEBUG __p => _35
  # DEBUG __val => __x_16(D)
  # DEBUG this => D#1390
  # DEBUG D#20 => 24
  # DEBUG __p => _35
  # DEBUG D.124741 => D#20
  if (_35 != 0B)
    goto <bb 35>;
  else
    goto <bb 34>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1417 => &this_7(D)->D.53336
  # DEBUG this => D#1417
  # DEBUG this => &__position
  _38 = this_7(D)->D.53336._M_impl._M_start;
  # DEBUG __first => _38
  # DEBUG __last => __position_31
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1395
  # DEBUG D#1394 => D#1395
  # DEBUG D#1393 => D#1394
  # DEBUG __first => _38
  # DEBUG __last => __position_31
  # DEBUG __result => NULL
  # DEBUG D.125234 => D#1393
  # DEBUG __first => _38
  # DEBUG __last => __position_31
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _29 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (_38, __position_31, __new_finish_162);
  goto <bb 37>;

  <bb 35>:
  std::vector<int>::vector (_35, __x_16(D));
  goto <bb 34>;

<L14>:
  goto <bb 55> (<L5>);

  <bb 37>:
  # DEBUG __new_finish => _29
  __new_finish_39 = _29 + 24;
  # DEBUG __new_finish => __new_finish_39
  # DEBUG D#1418 => &this_7(D)->D.53336
  # DEBUG this => D#1418
  _41 = this_7(D)->D.53336._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => __position_31
  # DEBUG __last => _41
  # DEBUG __result => __new_finish_39
  # DEBUG __alloc => D#1395
  # DEBUG D#1394 => D#1395
  # DEBUG D#1393 => D#1394
  # DEBUG __first => __position_31
  # DEBUG __last => _41
  # DEBUG __result => __new_finish_39
  # DEBUG D.125253 => D#1393
  # DEBUG __first => __position_31
  # DEBUG __last => _41
  # DEBUG __result => __new_finish_39
  # DEBUG __assignable => 1
  _64 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (__position_31, _41, __new_finish_39);
  goto <bb 39>;

<L15>:
  goto <bb 55> (<L5>);

  <bb 39>:
  # DEBUG __new_finish => _64
  # DEBUG D#1419 => &this_7(D)->D.53336
  # DEBUG this => D#1419
  _44 = this_7(D)->D.53336._M_impl._M_finish;
  __first_45 = this_7(D)->D.53336._M_impl._M_start;
  # DEBUG __first => __first_45
  # DEBUG __last => _44
  # DEBUG __first => __first_45
  if (_44 == __first_45)
    goto <bb 46>;
  else
    goto <bb 40>;

  <bb 40>:

  <bb 41>:
  # __first_225 = PHI <__first_45(40), __first_66(44)>
  # DEBUG __first => __first_225
  # DEBUG __r => __first_225
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _65 = MEM[(struct _Vector_base *)__first_225]._M_impl._M_start;
  # DEBUG D#473 => (long int) _65
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _65
  # DEBUG __n => D#470
  if (_65 != 0B)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _65
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _65
  # DEBUG this => D#462
  # DEBUG D.125297 => D#463
  operator delete (_65);

  <bb 43>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__first_225] ={v} {CLOBBER};
  __first_66 = __first_225 + 24;
  # DEBUG __first => __first_66
  # DEBUG __first => __first_66
  if (_44 == __first_66)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 41>;

  <bb 45>:
  pretmp_102 = this_7(D)->D.53336._M_impl._M_start;

  <bb 46>:
  # prephitmp_84 = PHI <pretmp_102(45), __first_45(39)>
  # DEBUG D#1426 => this_7(D)->D.53336._M_impl._M_end_of_storage
  # DEBUG D#1425 => (long int) D#1426
  # DEBUG D#3948 => this_7(D)->D.53336._M_impl._M_start
  # DEBUG D#1424 => (long int) D#3948
  # DEBUG D#1423 => D#1425 - D#1424
  # DEBUG D#1422 => D#1423 /[ex] 24
  # DEBUG D#1421 => &this_7(D)->D.53336
  # DEBUG D#678 => D#1421
  # DEBUG D#679 => (long unsigned int) D#1422
  # DEBUG __p => D#3948
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (prephitmp_84 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => D#3948
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => D#3948
  # DEBUG this => D#669
  # DEBUG D.125276 => D#670
  operator delete (prephitmp_84);

  <bb 48>:
  this_7(D)->D.53336._M_impl._M_start = __new_finish_162;
  this_7(D)->D.53336._M_impl._M_finish = _64;
  _51 = __new_finish_162 + prephitmp_101;
  this_7(D)->D.53336._M_impl._M_end_of_storage = _51;

  <bb 49>:
  return;

<L11>:

<L3>:
  # DEBUG this => &__x_copy
  # DEBUG D#476 => &__x_copy.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => __x_copy.D.45977._M_impl._M_finish
  # DEBUG D#478 => __x_copy.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &__x_copy.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _67 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#473 => (long int) _67
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _67
  # DEBUG __n => D#470
  if (_67 != 0B)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _67
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _67
  # DEBUG this => D#462
  # DEBUG D.125314 => D#463
  operator delete (_67);

  <bb 53>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  resx 2

<L13>:

  # __new_finish_1 = PHI <__new_finish_162(54), 0B(36), __new_finish_39(38)>
<L5>:
  # DEBUG __new_finish => __new_finish_1
  _53 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_53);
  if (__new_finish_1 == 0B)
    goto <bb 58>;
  else
    goto <bb 56>;

  <bb 56>:
  # DEBUG __first => __new_finish_162
  if (__new_finish_1 == __new_finish_162)
    goto <bb 57>;
  else
    goto <bb 61>;

  <bb 57>:
  goto <bb 66>;

  <bb 58>:
  # DEBUG D#1427 => &this_7(D)->D.53336._M_impl
  # DEBUG D#518 => D#1427
  # DEBUG __p => _35
  # DEBUG __a => D#518
  # DEBUG D#517 => D#518
  # DEBUG D#516 => D#517
  # DEBUG __p => _35
  # DEBUG this => D#516
  # DEBUG this => _35
  # DEBUG D#476 => &_35->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => _35->D.45977._M_impl._M_finish
  # DEBUG D#478 => _35->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &_35->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _26 = MEM[(struct _Vector_base *)_35]._M_impl._M_start;
  # DEBUG D#473 => (long int) _26
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _26
  # DEBUG __n => D#470
  if (_26 != 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _26
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _26
  # DEBUG this => D#462
  # DEBUG D.125333 => D#463
  operator delete (_26);

  <bb 60>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)_35] ={v} {CLOBBER};
  goto <bb 66>;

  <bb 61>:

  <bb 62>:
  # __new_finish_226 = PHI <__new_finish_162(61), __new_finish_69(65)>
  # DEBUG __first => __new_finish_226
  # DEBUG __r => __new_finish_226
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _68 = MEM[(struct _Vector_base *)__new_finish_226]._M_impl._M_start;
  # DEBUG D#473 => (long int) _68
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _68
  # DEBUG __n => D#470
  if (_68 != 0B)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _68
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _68
  # DEBUG this => D#462
  # DEBUG D.125357 => D#463
  operator delete (_68);

  <bb 64>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__new_finish_226] ={v} {CLOBBER};
  __new_finish_69 = __new_finish_226 + 24;
  # DEBUG __first => __new_finish_69
  # DEBUG __first => __new_finish_69
  if (__new_finish_1 == __new_finish_69)
    goto <bb 57>;
  else
    goto <bb 65>;

  <bb 65>:
  goto <bb 62>;

  <bb 66>:
  # DEBUG D#1428 => &this_7(D)->D.53336
  # DEBUG D#678 => D#1428
  # DEBUG __p => NULL
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (__new_finish_162 != 0B)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => NULL
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => NULL
  # DEBUG this => D#669
  # DEBUG D.125372 => D#670
  operator delete (__new_finish_162);

  <bb 68>:
  __cxa_rethrow ();

<L10>:
  __cxa_end_catch ();
  resx 7

  <bb 70>:
  # DEBUG __len => NULL
  # DEBUG this => this_7(D)
  # DEBUG D#292 => &this_7(D)->D.53336._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#292
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.81974
  # DEBUG this => &__position
  _28 = (long int) __position_31;
  # DEBUG this => &D.81974
  _170 = _28 - _165;
  # DEBUG D#1432 => _170 /[ex] 24
  # DEBUG __elems_before => (const size_type) D#1432
  # DEBUG D#1431 => &this_7(D)->D.53336
  # DEBUG D#1382 => D#1431
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  goto <bb 32>;

  <bb 71>:
  # __len_30 = PHI <__len_173(30), 1(28)>
  # DEBUG __len => __len_30
  # DEBUG D#221 => this_7(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#2138 => this_7(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  # DEBUG __len => NULL
  # DEBUG this => this_7(D)
  # DEBUG D#292 => &this_7(D)->D.53336._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#292
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.81974
  # DEBUG this => &__position
  _209 = (long int) __position_31;
  # DEBUG this => &D.81974
  _215 = _209 - _165;
  # DEBUG D#1432 => _215 /[ex] 24
  # DEBUG __elems_before => (const size_type) D#1432
  # DEBUG D#1431 => &this_7(D)->D.53336
  # DEBUG D#1382 => D#1431
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (__len_30 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<int>*, std::vector<std::vector<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<int>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<int>] (_ZNSt6vectorIS_IiSaIiEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3829, decl_uid=53259, cgraph_uid=2077, symbol_order=2078)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<int>*, std::vector<std::vector<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<int>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<int>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  int * D.164864;
  const ptrdiff_t _Num;
  const long unsigned int D.164814;
  const size_type __len;
  size_type D.164813;
  size_type __n;
  struct vector * D.164804;
  struct vector * D.164792;
  struct vector * __first;
  long unsigned int __n;
  int * D.164764;
  const ptrdiff_t _Num;
  struct vector * D.164711;
  struct vector * __first;
  long unsigned int __n;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  int * const _17;
  int * const pretmp_18;
  struct vector * _20;
  struct vector * const _23;
  bool _24;
  long int __last.83_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  long int _48;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long int pretmp_56;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  const ptrdiff_t prephitmp_66;
  struct vector * _67;
  long unsigned int pretmp_69;
  const ptrdiff_t pretmp_72;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  long unsigned int prephitmp_83;
  int * _85;
  long int _87;
  long unsigned int _90;
  struct vector * _91;
  int * _92;
  int * _94;
  int * _95;
  int * _98;
  int * const _138;
  struct vector * pretmp_154;
  void * _157;
  int * _159;
  int * const _161;
  long int _162;
  long int _163;
  long int _164;
  long int _165;
  size_type _166;
  int * _169;
  int * const _170;
  int * const _171;
  long int __last.79_172;
  long int __first.80_173;
  long int _174;
  long unsigned int _176;
  int * _178;
  long unsigned int _179;
  int * _180;
  int * iftmp.77_181;
  long unsigned int pretmp_183;
  void * _186;
  int * _188;
  struct vector * _190;
  long int pretmp_193;
  long int _194;
  long int _195;
  long int _196;
  long unsigned int _198;
  int * const pretmp_200;
  int * const prephitmp_201;
  int * const _204;
  long int _205;
  long int _206;
  long int _207;
  long int _208;
  size_type _209;
  int * _212;
  int * _221;
  long unsigned int _222;
  int * _223;
  int * iftmp.77_224;
  struct vector * prephitmp_225;
  long int pretmp_233;
  bool _299;
  long int _300;
  long unsigned int pretmp_301;
  long unsigned int prephitmp_302;
  long unsigned int prephitmp_303;
  difference_type _304;
  long int _306;
  difference_type _307;
  long int _308;
  long unsigned int prephitmp_310;
  long unsigned int pretmp_312;
  long unsigned int prephitmp_313;
  long unsigned int prephitmp_314;
  long unsigned int pretmp_315;
  long int _320;
  long int _321;
  bool _323;

  <bb 2>:
  # DEBUG D#3970 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3970
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 95>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.53336._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.53336._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 54>;

  <bb 4>:
  std::vector<int>::vector (&__x_copy, __x_28(D));
  # DEBUG this => this_9(D)
  # DEBUG D#291 => &this_9(D)->D.53336._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#291
  __old_finish_29 = MEM[(struct vector * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.84069
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84069
  _48 = (long int) __old_finish_29;
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = _48 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_29
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#1439 => &this_9(D)->D.53336
  # DEBUG this => D#1439
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = __old_finish_29 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG __alloc => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG D#1393 => D#1396
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG D.125460 => D#1393
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (__last_61, __old_finish_29, __old_finish_29);

  <bb 6>:
  _62 = this_9(D)->D.53336._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.53336._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3970
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3970
  # DEBUG __it => D#3970
  # DEBUG __first => D#3970
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __it => __old_finish_29
  # DEBUG __it => __old_finish_29
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3970
  # DEBUG __it => D#3970
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __last.83_25 = (long int) __last_61;
  _78 = __last.83_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => __old_finish_29
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3970
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3970
  if (__position_22 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_331 = PHI <__old_finish_29(8), __old_finish_65(12)>
  # __last_332 = PHI <__last_61(8), __last_68(12)>
  # __n_326 = PHI <__n_73(8), __n_58(12)>
  # DEBUG __n => __n_326
  # DEBUG __result => __old_finish_331
  # DEBUG __last => __last_332
  __last_68 = __last_332 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_331 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<int>::operator= (__old_finish_65, __last_68);
  goto <bb 11>;

<L24>:
  goto <bb 97> (<L9>);

  <bb 11>:
  __n_58 = __n_326 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG D#476 => &__x_copy.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => __x_copy.D.45977._M_impl._M_finish
  # DEBUG D#478 => __x_copy.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &__x_copy.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _85 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#473 => (long int) _85
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _85
  # DEBUG __n => D#470
  if (_85 != 0B)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 14>:

  <bb 15>:
  # __position_330 = PHI <__position_22(14), __position_81(18)>
  # DEBUG __first => __position_330
  std::vector<int>::operator= (__position_330, &__x_copy);
  goto <bb 17>;

<L25>:
  goto <bb 97> (<L9>);

  <bb 17>:
  __position_81 = __position_330 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#1440 => &this_9(D)->D.53336
  # DEBUG this => D#1440
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_29
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.125506 => D#1434
  # DEBUG __first => __old_finish_29
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __old_finish_29
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => __old_finish_29
  # DEBUG __cur => __old_finish_29
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 35>;
  else
    goto <bb 20>;

  <bb 20>:

  <bb 21>:
  # __n_325 = PHI <__n_70(20), __n_155(34)>
  # __old_finish_267 = PHI <__old_finish_29(20), __old_finish_156(34)>
  # DEBUG __cur => __old_finish_267
  # DEBUG __n => __n_325
  # DEBUG __r => __old_finish_267
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.124770 => D#20
  if (__old_finish_267 != 0B)
    goto <bb 22>;
  else
    goto <bb 32>;

  <bb 22>:
  # DEBUG this => __old_finish_267
  # DEBUG __x => &__x_copy
  # DEBUG D#1387 => &__x_copy.D.45977
  # DEBUG this => D#1387
  # DEBUG __a => NULL
  _138 = MEM[(int * *)&__x_copy];
  # DEBUG D#68 => &__x_copy
  _161 = MEM[(int * *)&__x_copy + 8B];
  # DEBUG D#68 => &__x_copy
  # DEBUG this => D#68
  # DEBUG this => D#68
  _162 = (long int) _161;
  _163 = (long int) _138;
  _164 = _162 - _163;
  _165 = _164 /[ex] 4;
  _166 = (size_type) _165;
  # DEBUG D#1389 => &__old_finish_267->D.45977
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1271 => &D#1389->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)__old_finish_267]._M_start = 0B;
  MEM[(struct _Vector_impl *)__old_finish_267]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__old_finish_267]._M_end_of_storage = 0B;
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG D#1269 => D#1389
  # DEBUG __n => _166
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (_166 != 0)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  pretmp_301 = (long unsigned int) _164;
  goto <bb 28>;

  <bb 24>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => _166
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => _166
  # DEBUG this => D#1263
  # DEBUG D.164762 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (_166 > 4611686018427387903)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # __old_finish_152 = PHI <__old_finish_267(24)>
  std::__throw_bad_alloc ();

  <bb 26>:
  _179 = (long unsigned int) _164;
  _180 = operator new (_179);
  goto <bb 28>;

  # __old_finish_151 = PHI <__old_finish_267(26)>
<L27>:
  goto <bb 38> (<L17>);

  <bb 28>:
  # iftmp.77_181 = PHI <0B(23), _180(26)>
  # prephitmp_314 = PHI <pretmp_301(23), _179(26)>
  MEM[(struct _Vector_base *)__old_finish_267]._M_impl._M_start = iftmp.77_181;
  MEM[(struct _Vector_base *)__old_finish_267]._M_impl._M_finish = iftmp.77_181;
  _169 = iftmp.77_181 + prephitmp_314;
  MEM[(struct _Vector_base *)__old_finish_267]._M_impl._M_end_of_storage = _169;
  # DEBUG D#1388 => &__old_finish_267->D.45977
  # DEBUG this => D#1388
  _170 = MEM[(int * *)&__x_copy + 8B];
  # DEBUG D#276 => &__x_copy
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _171 = MEM[(int * *)&__x_copy];
  # DEBUG D#277 => &__x_copy
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _171
  # DEBUG __last => _170
  # DEBUG __result => NULL
  # DEBUG D.164726 => D#1386
  # DEBUG __first => _171
  # DEBUG __last => _170
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _171
  # DEBUG __last => _170
  # DEBUG __result => NULL
  # DEBUG __first => _171
  # DEBUG __last => _170
  # DEBUG __result => NULL
  # DEBUG __it => _170
  # DEBUG __it$_M_current => _170
  # DEBUG __it => _171
  # DEBUG __it$_M_current => _171
  # DEBUG __first => _171
  # DEBUG __last => _170
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _170
  # DEBUG __it => _170
  # DEBUG this => NULL
  # DEBUG __it => _171
  # DEBUG __it => _171
  # DEBUG this => NULL
  # DEBUG __first => _171
  # DEBUG __last => _170
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _171
  # DEBUG __last => _170
  # DEBUG __result => NULL
  __last.79_172 = (long int) _170;
  __first.80_173 = (long int) _171;
  _174 = __last.79_172 - __first.80_173;
  _Num_175 = _174 /[ex] 4;
  # DEBUG _Num => _Num_175
  if (_Num_175 != 0)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  pretmp_312 = (long unsigned int) _174;
  goto <bb 31>;

  <bb 30>:
  _176 = (long unsigned int) _174;
  __builtin_memmove (iftmp.77_181, _171, _176);

  <bb 31>:
  # prephitmp_313 = PHI <pretmp_312(29), _176(30)>
  _178 = iftmp.77_181 + prephitmp_313;
  __old_finish_267->D.45977._M_impl._M_finish = _178;

  <bb 32>:
  __n_155 = __n_325 + 18446744073709551615;
  # DEBUG __n => __n_155
  __old_finish_156 = __old_finish_267 + 24;
  # DEBUG __cur => __old_finish_156
  # DEBUG __cur => __old_finish_156
  # DEBUG __n => __n_155
  if (__n_155 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # __old_finish_153 = PHI <__old_finish_156(32)>
  goto <bb 35>;

  <bb 34>:
  goto <bb 21>;

  <bb 35>:
  # __old_finish_19 = PHI <__old_finish_153(33), __old_finish_29(19)>
  this_9(D)->D.53336._M_impl._M_finish = __old_finish_19;
  # DEBUG D#1441 => &this_9(D)->D.53336
  # DEBUG this => D#1441
  # DEBUG this => &__position
  # DEBUG __first => D#3970
  # DEBUG __last => __old_finish_29
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG D#1393 => D#1396
  # DEBUG __first => D#3970
  # DEBUG __last => __old_finish_29
  # DEBUG __result => NULL
  # DEBUG D.125519 => D#1393
  # DEBUG __first => D#3970
  # DEBUG __last => __old_finish_29
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (__position_22, __old_finish_29, __old_finish_19);
  goto <bb 46>;

<L28>:
  goto <bb 97> (<L9>);

<L26>:

  # __old_finish_148 = PHI <__old_finish_151(27), __old_finish_152(37)>
<L17>:
  _157 = __builtin_eh_pointer (12);
  __cxa_begin_catch (_157);
  # DEBUG __first => __old_finish_29
  # DEBUG __last => __old_finish_148
  # DEBUG __first => __old_finish_29
  # DEBUG __last => __old_finish_148

  <bb 39>:
  # __old_finish_158 = PHI <__old_finish_29(38), __old_finish_160(42)>
  # DEBUG __first => __old_finish_158
  if (__old_finish_158 == __old_finish_148)
    goto <bb 43>;
  else
    goto <bb 40>;

  <bb 40>:
  # DEBUG __r => __old_finish_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _159 = MEM[(struct _Vector_base *)__old_finish_158]._M_impl._M_start;
  # DEBUG D#473 => (long int) _159
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _159
  # DEBUG __n => D#470
  if (_159 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _159
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _159
  # DEBUG this => D#462
  # DEBUG D.164704 => D#463
  operator delete (_159);

  <bb 42>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__old_finish_158] ={v} {CLOBBER};
  __old_finish_160 = __old_finish_158 + 24;
  # DEBUG __first => __old_finish_160
  goto <bb 39>;

  <bb 43>:
  __cxa_rethrow ();

<L19>:
  __cxa_end_catch ();
  resx 11

<L29>:
  goto <bb 97> (<L9>);

  <bb 46>:
  _74 = this_9(D)->D.53336._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.53336._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#3970
  # DEBUG __last => __old_finish_29
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3970
  if (__position_22 == __old_finish_29)
    goto <bb 13>;
  else
    goto <bb 47>;

  <bb 47>:

  <bb 48>:
  # __position_327 = PHI <__position_22(47), __position_84(51)>
  # DEBUG __first => __position_327
  std::vector<int>::operator= (__position_327, &__x_copy);
  goto <bb 50>;

<L30>:
  goto <bb 97> (<L9>);

  <bb 50>:
  __position_84 = __position_327 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__old_finish_29 == __position_84)
    goto <bb 13>;
  else
    goto <bb 51>;

  <bb 51>:
  goto <bb 48>;

  <bb 52>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _85
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _85
  # DEBUG this => D#462
  # DEBUG D.125552 => D#463
  operator delete (_85);

  <bb 53>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  __x_copy ={v} {CLOBBER};
  goto <bb 95>;

  <bb 54>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _194 = (long int) _23;
  _195 = _13 - _194;
  _196 = _195 /[ex] 24;
  _197 = (const long unsigned int) _196;
  _198 = 768614336404564650 - _197;
  if (__n_7(D) > _198)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 56>:
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.164814
  # DEBUG __b => &__n
  _90 = MAX_EXPR <__n_7(D), _197>;
  __len_202 = _90 + _197;
  # DEBUG __len => __len_202
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _299 = __len_202 > 768614336404564650;
  _323 = _197 > __len_202;
  _24 = _299 | _323;
  if (_24 != 0)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 57>:
  pretmp_183 = __len_202 * 24;

  <bb 58>:
  # __elems_before_245 = PHI <__elems_before_305(116), __elems_before_293(57)>
  # _320 = PHI <_306(116), _87(57)>
  # prephitmp_302 = PHI <18446744073709551600(116), pretmp_183(57)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#292 => &this_9(D)->D.53336._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#292
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84092
  # DEBUG this => &__position
  # DEBUG this => &D.84092
  # DEBUG __elems_before => __elems_before_245
  # DEBUG D#1451 => &this_9(D)->D.53336
  # DEBUG D#1382 => D#1451
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => NULL
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2140
  # DEBUG D.164802 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  _190 = operator new (prephitmp_302);

  <bb 59>:
  # __new_finish_191 = PHI <0B(117), _190(58)>
  # __elems_before_322 = PHI <__elems_before_293(117), __elems_before_245(58)>
  # _321 = PHI <_87(117), _320(58)>
  # prephitmp_83 = PHI <0(117), prephitmp_302(58)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1435 => &this_9(D)->D.53336
  # DEBUG this => D#1435
  _26 = (long unsigned int) _321;
  __first_27 = __new_finish_191 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.125560 => D#1434
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 60>:
  # __n_334 = PHI <__n_184(72), __n_7(D)(59)>
  # __first_333 = PHI <__first_185(72), __first_27(59)>
  # DEBUG __cur => __first_333
  # DEBUG __n => __n_334
  # DEBUG __r => __first_333
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.124770 => D#20
  if (__first_333 != 0B)
    goto <bb 61>;
  else
    goto <bb 71>;

  <bb 61>:
  # DEBUG this => __first_333
  # DEBUG __x => __x_28(D)
  # DEBUG D#1387 => &MEM[(const struct vector *)__x_28(D)].D.45977
  # DEBUG this => D#1387
  # DEBUG __a => NULL
  _17 = MEM[(int * *)__x_28(D)];
  # DEBUG D#68 => __x_28(D)
  _204 = MEM[(int * *)__x_28(D) + 8B];
  # DEBUG D#68 => __x_28(D)
  # DEBUG this => D#68
  # DEBUG this => D#68
  _205 = (long int) _204;
  _206 = (long int) _17;
  _207 = _205 - _206;
  _208 = _207 /[ex] 4;
  _209 = (size_type) _208;
  # DEBUG D#1389 => &__first_333->D.45977
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1271 => &D#1389->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)__first_333]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_333]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_333]._M_end_of_storage = 0B;
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG D#1269 => D#1389
  # DEBUG __n => _209
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (_209 != 0)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:
  pretmp_69 = (long unsigned int) _207;
  goto <bb 68>;

  <bb 63>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => _209
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => _209
  # DEBUG this => D#1263
  # DEBUG D.164862 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (_209 > 4611686018427387903)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  # __first_150 = PHI <__first_333(63)>
  std::__throw_bad_alloc ();

  <bb 65>:
  _222 = (long unsigned int) _207;
  _223 = operator new (_222);
  goto <bb 67>;

  # __first_149 = PHI <__first_333(65)>
<L32>:
  goto <bb 75> (<L20>);

  <bb 67>:
  pretmp_200 = MEM[(int * *)__x_28(D) + 8B];
  pretmp_18 = MEM[(int * *)__x_28(D)];
  pretmp_233 = (long int) pretmp_200;
  pretmp_56 = (long int) pretmp_18;
  pretmp_193 = pretmp_233 - pretmp_56;
  pretmp_72 = pretmp_193 /[ex] 4;
  pretmp_315 = (long unsigned int) pretmp_193;

  <bb 68>:
  # iftmp.77_224 = PHI <0B(62), _223(67)>
  # prephitmp_201 = PHI <_17(62), pretmp_18(67)>
  # prephitmp_66 = PHI <_208(62), pretmp_72(67)>
  # prephitmp_303 = PHI <pretmp_69(62), _222(67)>
  # prephitmp_310 = PHI <pretmp_69(62), pretmp_315(67)>
  MEM[(struct _Vector_base *)__first_333]._M_impl._M_start = iftmp.77_224;
  MEM[(struct _Vector_base *)__first_333]._M_impl._M_finish = iftmp.77_224;
  _212 = iftmp.77_224 + prephitmp_303;
  MEM[(struct _Vector_base *)__first_333]._M_impl._M_end_of_storage = _212;
  # DEBUG D#1388 => &__first_333->D.45977
  # DEBUG this => D#1388
  # DEBUG D#3969 => MEM[(int * *)__x_28(D) + 8B]
  # DEBUG D#276 => __x_28(D)
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#3968 => MEM[(int * *)__x_28(D)]
  # DEBUG D#277 => __x_28(D)
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#3968
  # DEBUG __last => D#3969
  # DEBUG __result => NULL
  # DEBUG D.164826 => D#1386
  # DEBUG __first => D#3968
  # DEBUG __last => D#3969
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3968
  # DEBUG __last => D#3969
  # DEBUG __result => NULL
  # DEBUG __first => D#3968
  # DEBUG __last => D#3969
  # DEBUG __result => NULL
  # DEBUG __it => D#3969
  # DEBUG __it$_M_current => D#3969
  # DEBUG __it => D#3968
  # DEBUG __it$_M_current => D#3968
  # DEBUG __first => D#3968
  # DEBUG __last => D#3969
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3969
  # DEBUG __it => D#3969
  # DEBUG this => NULL
  # DEBUG __it => D#3968
  # DEBUG __it => D#3968
  # DEBUG this => NULL
  # DEBUG __first => D#3968
  # DEBUG __last => D#3969
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3968
  # DEBUG __last => D#3969
  # DEBUG __result => NULL
  # DEBUG D#3967 => (long int) D#3969
  # DEBUG D#3966 => (long int) D#3968
  # DEBUG D#3965 => D#3967 - D#3966
  # DEBUG _Num => D#3965 /[ex] 4
  if (prephitmp_66 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  __builtin_memmove (iftmp.77_224, prephitmp_201, prephitmp_310);

  <bb 70>:
  _221 = iftmp.77_224 + prephitmp_310;
  __first_333->D.45977._M_impl._M_finish = _221;

  <bb 71>:
  __n_184 = __n_334 + 18446744073709551615;
  # DEBUG __n => __n_184
  __first_185 = __first_333 + 24;
  # DEBUG __cur => __first_185
  # DEBUG __cur => __first_185
  # DEBUG __n => __n_184
  if (__n_184 == 0)
    goto <bb 73>;
  else
    goto <bb 72>;

  <bb 72>:
  goto <bb 60>;

  <bb 73>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1436 => &this_9(D)->D.53336
  # DEBUG this => D#1436
  # DEBUG this => &__position
  _31 = this_9(D)->D.53336._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#3970
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1395
  # DEBUG D#1394 => D#1395
  # DEBUG D#1393 => D#1394
  # DEBUG __first => _31
  # DEBUG __last => D#3970
  # DEBUG __result => NULL
  # DEBUG D.125581 => D#1393
  # DEBUG __first => _31
  # DEBUG __last => D#3970
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (_31, __position_22, __new_finish_191);
  goto <bb 83>;

<L31>:

  # __first_146 = PHI <__first_149(66), __first_150(74)>
<L20>:
  _186 = __builtin_eh_pointer (15);
  __cxa_begin_catch (_186);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_146
  # DEBUG __first => __first_27
  # DEBUG __last => __first_146

  <bb 76>:
  # __first_187 = PHI <__first_27(75), __first_189(79)>
  # DEBUG __first => __first_187
  if (__first_187 == __first_146)
    goto <bb 80>;
  else
    goto <bb 77>;

  <bb 77>:
  # DEBUG __r => __first_187
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _188 = MEM[(struct _Vector_base *)__first_187]._M_impl._M_start;
  # DEBUG D#473 => (long int) _188
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _188
  # DEBUG __n => D#470
  if (_188 != 0B)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _188
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _188
  # DEBUG this => D#462
  # DEBUG D.164785 => D#463
  operator delete (_188);

  <bb 79>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__first_187] ={v} {CLOBBER};
  __first_189 = __first_187 + 24;
  # DEBUG __first => __first_189
  goto <bb 76>;

  <bb 80>:
  __cxa_rethrow ();

<L22>:
  __cxa_end_catch ();
  resx 14

<L34>:
  goto <bb 101> (<L11>);

  <bb 83>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#1437 => &this_9(D)->D.53336
  # DEBUG this => D#1437
  _35 = this_9(D)->D.53336._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3970
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#1395
  # DEBUG D#1394 => D#1395
  # DEBUG D#1393 => D#1394
  # DEBUG __first => D#3970
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.125600 => D#1393
  # DEBUG __first => D#3970
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (__position_22, _35, __new_finish_33);
  goto <bb 85>;

<L35>:
  goto <bb 101> (<L11>);

  <bb 85>:
  # DEBUG __new_finish => _91
  # DEBUG D#1438 => &this_9(D)->D.53336
  # DEBUG this => D#1438
  _37 = this_9(D)->D.53336._M_impl._M_finish;
  __first_38 = this_9(D)->D.53336._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 92>;
  else
    goto <bb 86>;

  <bb 86>:

  <bb 87>:
  # __first_86 = PHI <__first_38(86), __first_93(90)>
  # DEBUG __first => __first_86
  # DEBUG __r => __first_86
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _92 = MEM[(struct _Vector_base *)__first_86]._M_impl._M_start;
  # DEBUG D#473 => (long int) _92
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _92
  # DEBUG __n => D#470
  if (_92 != 0B)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _92
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _92
  # DEBUG this => D#462
  # DEBUG D.125644 => D#463
  operator delete (_92);

  <bb 89>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__first_86] ={v} {CLOBBER};
  __first_93 = __first_86 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (_37 == __first_93)
    goto <bb 91>;
  else
    goto <bb 90>;

  <bb 90>:
  goto <bb 87>;

  <bb 91>:
  pretmp_154 = this_9(D)->D.53336._M_impl._M_start;

  <bb 92>:
  # prephitmp_225 = PHI <pretmp_154(91), __first_38(85)>
  # DEBUG D#1449 => this_9(D)->D.53336._M_impl._M_end_of_storage
  # DEBUG D#1448 => (long int) D#1449
  # DEBUG D#3964 => this_9(D)->D.53336._M_impl._M_start
  # DEBUG D#1447 => (long int) D#3964
  # DEBUG D#1446 => D#1448 - D#1447
  # DEBUG D#1445 => D#1446 /[ex] 24
  # DEBUG D#1444 => &this_9(D)->D.53336
  # DEBUG D#678 => D#1444
  # DEBUG D#679 => (long unsigned int) D#1445
  # DEBUG __p => D#3964
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (prephitmp_225 != 0B)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => D#3964
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => D#3964
  # DEBUG this => D#669
  # DEBUG D.125623 => D#670
  operator delete (prephitmp_225);

  <bb 94>:
  this_9(D)->D.53336._M_impl._M_start = __new_finish_191;
  this_9(D)->D.53336._M_impl._M_finish = _91;
  _44 = __new_finish_191 + prephitmp_83;
  this_9(D)->D.53336._M_impl._M_end_of_storage = _44;

  <bb 95>:
  return;

<L23>:

<L9>:
  # DEBUG this => &__x_copy
  # DEBUG D#476 => &__x_copy.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => __x_copy.D.45977._M_impl._M_finish
  # DEBUG D#478 => __x_copy.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &__x_copy.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _94 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#473 => (long int) _94
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _94
  # DEBUG __n => D#470
  if (_94 != 0B)
    goto <bb 98>;
  else
    goto <bb 99>;

  <bb 98>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _94
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _94
  # DEBUG this => D#462
  # DEBUG D.125661 => D#463
  operator delete (_94);

  <bb 99>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  resx 2

<L33>:

  # __new_finish_1 = PHI <__new_finish_191(82), 0B(100), __new_finish_33(84)>
<L11>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (7);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 103>;
  else
    goto <bb 102>;

  <bb 102>:
  goto <bb 108>;

  <bb 103>:
  # DEBUG D#1442 => &this_9(D)->D.53336
  # DEBUG this => D#1442
  _49 = __n_7(D) + __elems_before_322;
  _50 = _49 * 24;
  _51 = __new_finish_191 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 104>:
  # __first_80 = PHI <__first_27(103), __first_96(107)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 112>;
  else
    goto <bb 105>;

  <bb 105>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _95 = MEM[(struct _Vector_base *)__first_80]._M_impl._M_start;
  # DEBUG D#473 => (long int) _95
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _95
  # DEBUG __n => D#470
  if (_95 != 0B)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _95
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _95
  # DEBUG this => D#462
  # DEBUG D.125685 => D#463
  operator delete (_95);

  <bb 107>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_96 = __first_80 + 24;
  # DEBUG __first => __first_96
  goto <bb 104>;

  <bb 108>:
  # __new_finish_97 = PHI <__new_finish_191(102), __new_finish_99(111)>
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 112>;
  else
    goto <bb 109>;

  <bb 109>:
  # DEBUG __r => __new_finish_97
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _98 = MEM[(struct _Vector_base *)__new_finish_97]._M_impl._M_start;
  # DEBUG D#473 => (long int) _98
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _98
  # DEBUG __n => D#470
  if (_98 != 0B)
    goto <bb 110>;
  else
    goto <bb 111>;

  <bb 110>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _98
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _98
  # DEBUG this => D#462
  # DEBUG D.125711 => D#463
  operator delete (_98);

  <bb 111>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __first => __new_finish_99
  goto <bb 108>;

  <bb 112>:
  # DEBUG D#1450 => &this_9(D)->D.53336
  # DEBUG D#678 => D#1450
  # DEBUG __p => NULL
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (__new_finish_191 != 0B)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => NULL
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => NULL
  # DEBUG this => D#669
  # DEBUG D.125726 => D#670
  operator delete (__new_finish_191);

  <bb 114>:
  __cxa_rethrow ();

<L16>:
  __cxa_end_catch ();
  resx 8

  <bb 116>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#292 => &this_9(D)->D.53336._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#292
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84092
  # DEBUG this => &__position
  _308 = (long int) __position_22;
  # DEBUG this => &D.84092
  _306 = _308 - _194;
  _307 = _306 /[ex] 24;
  __elems_before_305 = (const size_type) _307;
  # DEBUG __elems_before => __elems_before_305
  # DEBUG D#1451 => &this_9(D)->D.53336
  # DEBUG D#1382 => D#1451
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  goto <bb 58>;

  <bb 117>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#292 => &this_9(D)->D.53336._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#292
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84092
  # DEBUG this => &__position
  _300 = (long int) __position_22;
  # DEBUG this => &D.84092
  _87 = _300 - _194;
  _304 = _87 /[ex] 24;
  __elems_before_293 = (const size_type) _304;
  # DEBUG __elems_before => __elems_before_293
  # DEBUG D#1451 => &this_9(D)->D.53336
  # DEBUG D#1382 => D#1451
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (__len_202 != 0)
    goto <bb 57>;
  else
    goto <bb 59>;

}



;; Function void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<int>] (_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEmS1_, funcdef_no=2695, decl_uid=53001, cgraph_uid=943, symbol_order=944)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<int>] (struct vector * const this, size_type __new_size, struct value_type & restrict __x)
{
  struct vector * __pos;
  struct iterator __position;
  long int _5;
  long unsigned int _6;
  long unsigned int _8;
  struct vector * const _11;
  struct vector * const _12;
  long int _13;
  long int _14;
  long int _15;
  size_type _16;
  int * _18;

  <bb 2>:
  _11 = MEM[(struct vector * *)this_3(D)];
  # DEBUG D#201 => this_3(D)
  _12 = MEM[(struct vector * *)this_3(D) + 8B];
  # DEBUG D#201 => this_3(D)
  # DEBUG this => D#201
  # DEBUG this => D#201
  _5 = (long int) _12;
  _13 = (long int) _11;
  _14 = _5 - _13;
  _15 = _14 /[ex] 24;
  _16 = (size_type) _15;
  if (__new_size_4(D) > _16)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#201 => this_3(D)
  # DEBUG D#201 => this_3(D)
  # DEBUG this => D#201
  # DEBUG this => D#201
  _6 = __new_size_4(D) - _16;
  # DEBUG this => this_3(D)
  # DEBUG D#291 => &this_3(D)->D.53336._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#291
  # DEBUG this => this_3(D)
  MEM[(struct __normal_iterator *)&__position] = _12;
  # DEBUG __n => _6
  # DEBUG __x => __x_7(D)
  std::vector<std::vector<int> >::_M_fill_insert (this_3(D), __position, _6, __x_7(D));
  goto <bb 12>;

  <bb 4>:
  # DEBUG D#201 => this_3(D)
  # DEBUG D#201 => this_3(D)
  # DEBUG this => D#201
  # DEBUG this => D#201
  if (__new_size_4(D) < _16)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  _8 = __new_size_4(D) * 24;
  __pos_9 = _11 + _8;
  # DEBUG D#689 => this_3(D)
  # DEBUG __pos => __pos_9
  # DEBUG D#688 => D#689
  # DEBUG this => D#688
  # DEBUG D#687 => &D#688->D.53336
  # DEBUG this => D#687
  # DEBUG __first => __pos_9
  # DEBUG __last => _12
  # DEBUG __first => __pos_9
  if (__pos_9 == _12)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  MEM[(struct vector * *)this_3(D) + 8B] = __pos_9;
  goto <bb 12>;

  <bb 7>:

  <bb 8>:
  # __pos_35 = PHI <__pos_9(7), __pos_19(11)>
  # DEBUG __first => __pos_35
  # DEBUG __r => __pos_35
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _18 = MEM[(struct _Vector_base *)__pos_35]._M_impl._M_start;
  # DEBUG D#473 => (long int) _18
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _18
  # DEBUG __n => D#470
  if (_18 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _18
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _18
  # DEBUG this => D#462
  # DEBUG D.125782 => D#463
  operator delete (_18);

  <bb 10>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__pos_35] ={v} {CLOBBER};
  __pos_19 = __pos_35 + 24;
  # DEBUG __first => __pos_19
  # DEBUG __first => __pos_19
  if (_12 == __pos_19)
    goto <bb 6>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 8>;

  <bb 12>:
  return;

}



;; Function std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >] (_ZNSt6vectorIS_IiSaIiEESaIS1_EEaSERKS3_, funcdef_no=5173, decl_uid=52958, cgraph_uid=3421, symbol_order=3422)

Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >] (struct vector * const this, const struct vector & __x)
{
  int * D.165164;
  const ptrdiff_t _Num;
  struct vector * D.165114;
  const struct vector * __first$_M_current;
  struct vector * D.165101;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct vector * __result;
  const struct vector * __last$_M_current;
  const struct vector * __first$_M_current;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct vector * __result;
  struct vector * D.165065;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  _Distance __n;
  struct vector * __first;
  struct vector * __result;
  _Distance __n;
  const struct vector * __first;
  struct vector * __first$_M_current;
  struct vector * __first;
  struct vector * __tmp;
  struct __normal_iterator D.95771;
  struct __normal_iterator D.95770;
  struct vector * pretmp_6;
  size_type _7;
  struct vector * const pretmp_8;
  struct vector * const prephitmp_10;
  long int _12;
  struct vector * _13;
  long int prephitmp_16;
  long unsigned int _18;
  struct vector * _19;
  long int _21;
  long unsigned int prephitmp_22;
  long int _23;
  long int _24;
  long unsigned int _28;
  struct vector * _29;
  struct vector * const _35;
  struct vector * const _36;
  struct vector * const _39;
  long int _40;
  long unsigned int pretmp_41;
  long int _42;
  long int _43;
  size_type _45;
  int * _46;
  long int _49;
  long int _50;
  size_type _52;
  long unsigned int pretmp_53;
  int * _54;
  struct vector * pretmp_56;
  long unsigned int pretmp_66;
  long int pretmp_71;
  struct vector * prephitmp_74;
  struct vector * pretmp_75;
  struct vector * pretmp_77;
  sizetype _89;
  void * _102;
  struct vector * prephitmp_104;
  void * _108;
  int * _110;
  long unsigned int _112;
  struct vector * _113;
  int * const _115;
  int * const _116;
  long int _117;
  long int _118;
  long int _119;
  long int _120;
  size_type _121;
  sizetype _122;
  int * _124;
  int * const _125;
  int * const _126;
  long int __last.79_127;
  long int __first.80_128;
  long int _129;
  long unsigned int _131;
  int * _133;
  long unsigned int _134;
  int * _135;
  int * iftmp.77_136;
  struct vector * pretmp_138;
  struct vector * const pretmp_150;
  struct vector * const pretmp_151;
  struct vector * pretmp_152;
  long int pretmp_154;
  struct vector * const prephitmp_173;
  struct vector * pretmp_180;
  struct vector * prephitmp_187;
  struct vector * pretmp_188;
  long int pretmp_189;
  long unsigned int pretmp_190;
  long unsigned int pretmp_202;
  long unsigned int prephitmp_203;

  <bb 2>:
  if (__x_3(D) != this_4(D))
    goto <bb 3>;
  else
    goto <bb 66>;

  <bb 3>:
  __first_34 = MEM[(struct vector * *)__x_3(D)];
  # DEBUG D#201 => __x_3(D)
  _35 = MEM[(struct vector * *)__x_3(D) + 8B];
  # DEBUG D#201 => __x_3(D)
  # DEBUG this => D#201
  # DEBUG this => D#201
  _40 = (long int) _35;
  _42 = (long int) __first_34;
  _43 = _40 - _42;
  __n_44 = _43 /[ex] 24;
  _45 = (size_type) __n_44;
  # DEBUG __xlen => NULL
  __result_38 = MEM[(struct vector * *)this_4(D)];
  # DEBUG D#1754 => this_4(D)
  _39 = MEM[(struct vector * *)this_4(D) + 16B];
  # DEBUG D#1754 => this_4(D)
  # DEBUG this => D#1754
  # DEBUG this => D#1754
  _24 = (long int) _39;
  _23 = (long int) __result_38;
  _21 = _24 - _23;
  _12 = _21 /[ex] 24;
  _7 = (size_type) _12;
  if (_7 < _45)
    goto <bb 4>;
  else
    goto <bb 45>;

  <bb 4>:
  # DEBUG D#302 => __x_3(D)
  # DEBUG this => D#302
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#303 => __x_3(D)
  # DEBUG this => D#303
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#1761 => this_4(D)
  # DEBUG __n => _45
  # DEBUG this => D#1761
  # DEBUG D#1760 => D#1761
  # DEBUG D#1759 => D#1761
  # DEBUG D#1758 => D#1761
  # DEBUG D#1757 => &D#1758->D.53336
  # DEBUG D#1382 => D#1757
  # DEBUG __n => _45
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (_45 != 0)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => _45
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => _45
  # DEBUG this => D#2140
  # DEBUG D.165112 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  if (_45 > 768614336404564650)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  std::__throw_bad_alloc ();

  <bb 7>:
  _112 = (long unsigned int) _43;
  _113 = operator new (_112);

  <bb 8>:
  # __tmp_114 = PHI <0B(4), _113(7)>
  # DEBUG __result => NULL
  # DEBUG D#1755 => &D#1759->D.53336
  # DEBUG this => D#1755
  # DEBUG __first$_M_current => __first_34
  # DEBUG __last$_M_current => _35
  # DEBUG __result => NULL
  # DEBUG D.165055 => D#1489
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => NULL
  # DEBUG __first$_M_current => __first_34
  # DEBUG __cur => NULL
  # DEBUG __first$_M_current => __first_34
  # DEBUG __cur => __tmp_114
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (__first_34 != _35)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  # DEBUG __tmp => NULL
  # DEBUG D#2524 => &this_4(D)->D.53336
  # DEBUG this => D#2524
  _13 = this_4(D)->D.53336._M_impl._M_finish;
  __first_14 = this_4(D)->D.53336._M_impl._M_start;
  # DEBUG __first => __first_14
  # DEBUG __last => _13
  # DEBUG __first => __first_14
  if (_13 == __first_14)
    goto <bb 42>;
  else
    goto <bb 36>;

  <bb 10>:

  <bb 11>:
  # __first_195 = PHI <__first_34(10), __first_106(23)>
  # __tmp_193 = PHI <__tmp_114(10), __tmp_107(23)>
  # DEBUG __first$_M_current => __first_195
  # DEBUG __cur => __tmp_193
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __tmp_193
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.124770 => D#20
  if (__tmp_193 != 0B)
    goto <bb 12>;
  else
    goto <bb 22>;

  <bb 12>:
  # DEBUG this => __tmp_193
  # DEBUG __x => __first_195
  # DEBUG D#1387 => &MEM[(const struct vector *)__first_195].D.45977
  # DEBUG this => D#1387
  # DEBUG __a => NULL
  _115 = MEM[(int * *)__first_195];
  # DEBUG D#68 => __first_195
  _116 = MEM[(int * *)__first_195 + 8B];
  # DEBUG D#68 => __first_195
  # DEBUG this => D#68
  # DEBUG this => D#68
  _117 = (long int) _116;
  _118 = (long int) _115;
  _119 = _117 - _118;
  _120 = _119 /[ex] 4;
  _121 = (size_type) _120;
  # DEBUG D#1389 => &__tmp_193->D.45977
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1271 => &D#1389->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)__tmp_193]._M_start = 0B;
  MEM[(struct _Vector_impl *)__tmp_193]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__tmp_193]._M_end_of_storage = 0B;
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG D#1269 => D#1389
  # DEBUG __n => _121
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (_121 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  pretmp_41 = (long unsigned int) _119;
  goto <bb 18>;

  <bb 14>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => _121
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => _121
  # DEBUG this => D#1263
  # DEBUG D.165162 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (_121 > 4611686018427387903)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # __tmp_85 = PHI <__tmp_193(14)>
  std::__throw_bad_alloc ();

  <bb 16>:
  _134 = (long unsigned int) _119;
  _135 = operator new (_134);
  goto <bb 18>;

  # __tmp_84 = PHI <__tmp_193(16)>
<L17>:
  goto <bb 25> (<L13>);

  <bb 18>:
  # iftmp.77_136 = PHI <0B(13), _135(16)>
  # prephitmp_22 = PHI <pretmp_41(13), _134(16)>
  MEM[(struct _Vector_base *)__tmp_193]._M_impl._M_start = iftmp.77_136;
  MEM[(struct _Vector_base *)__tmp_193]._M_impl._M_finish = iftmp.77_136;
  _124 = iftmp.77_136 + prephitmp_22;
  MEM[(struct _Vector_base *)__tmp_193]._M_impl._M_end_of_storage = _124;
  # DEBUG D#1388 => &__tmp_193->D.45977
  # DEBUG this => D#1388
  _125 = MEM[(int * *)__first_195 + 8B];
  # DEBUG D#276 => __first_195
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _126 = MEM[(int * *)__first_195];
  # DEBUG D#277 => __first_195
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _126
  # DEBUG __last => _125
  # DEBUG __result => NULL
  # DEBUG D.165126 => D#1386
  # DEBUG __first => _126
  # DEBUG __last => _125
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _126
  # DEBUG __last => _125
  # DEBUG __result => NULL
  # DEBUG __first => _126
  # DEBUG __last => _125
  # DEBUG __result => NULL
  # DEBUG __it => _125
  # DEBUG __it$_M_current => _125
  # DEBUG __it => _126
  # DEBUG __it$_M_current => _126
  # DEBUG __first => _126
  # DEBUG __last => _125
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _125
  # DEBUG __it => _125
  # DEBUG this => NULL
  # DEBUG __it => _126
  # DEBUG __it => _126
  # DEBUG this => NULL
  # DEBUG __first => _126
  # DEBUG __last => _125
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _126
  # DEBUG __last => _125
  # DEBUG __result => NULL
  __last.79_127 = (long int) _125;
  __first.80_128 = (long int) _126;
  _129 = __last.79_127 - __first.80_128;
  _Num_130 = _129 /[ex] 4;
  # DEBUG _Num => _Num_130
  if (_Num_130 != 0)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  pretmp_202 = (long unsigned int) _129;
  goto <bb 21>;

  <bb 20>:
  _131 = (long unsigned int) _129;
  __builtin_memmove (iftmp.77_136, _126, _131);

  <bb 21>:
  # prephitmp_203 = PHI <pretmp_202(19), _131(20)>

  <bb 72>:
  _133 = iftmp.77_136 + prephitmp_203;
  __tmp_193->D.45977._M_impl._M_finish = _133;

  <bb 22>:
  # DEBUG this => &__first
  __first_106 = __first_195 + 24;
  # DEBUG __first$_M_current => __first_106
  __tmp_107 = __tmp_193 + 24;
  # DEBUG __cur => __tmp_107
  # DEBUG __first$_M_current => __first_106
  # DEBUG __cur => __tmp_107
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_35 != __first_106)
    goto <bb 23>;
  else
    goto <bb 9>;

  <bb 23>:
  goto <bb 11>;

<L16>:

  # __tmp_83 = PHI <__tmp_84(17), __tmp_85(24)>
<L13>:
  _108 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_108);
  # DEBUG __first => NULL
  # DEBUG __last => __tmp_83
  # DEBUG __first => NULL
  # DEBUG __last => __tmp_83

  <bb 26>:
  # __tmp_109 = PHI <__tmp_114(25), __tmp_111(29)>
  # DEBUG __first => __tmp_109
  if (__tmp_109 == __tmp_83)
    goto <bb 30>;
  else
    goto <bb 27>;

  <bb 27>:
  # DEBUG __r => __tmp_109
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _110 = MEM[(struct _Vector_base *)__tmp_109]._M_impl._M_start;
  # DEBUG D#473 => (long int) _110
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _110
  # DEBUG __n => D#470
  if (_110 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _110
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _110
  # DEBUG this => D#462
  # DEBUG D.165091 => D#463
  operator delete (_110);

  <bb 29>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__tmp_109] ={v} {CLOBBER};
  __tmp_111 = __tmp_109 + 24;
  # DEBUG __first => __tmp_111
  goto <bb 26>;

  <bb 30>:

  <bb 67>:
  __cxa_rethrow ();

<L15>:
  __cxa_end_catch ();
  resx 5

<L10>:
  _102 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_102);
  # DEBUG D#1756 => &D#1760->D.53336
  # DEBUG D#678 => D#1756
  # DEBUG D#679 => _45
  # DEBUG __p => NULL
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (__tmp_114 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => NULL
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => NULL
  # DEBUG this => D#669
  # DEBUG D.165053 => D#670
  operator delete (__tmp_114);

  <bb 34>:
  __cxa_rethrow ();

<L12>:
  __cxa_end_catch ();
  resx 2

  <bb 36>:

  <bb 37>:
  # __first_185 = PHI <__first_14(36), __first_47(40)>
  # DEBUG __first => __first_185
  # DEBUG __r => __first_185
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _46 = MEM[(struct _Vector_base *)__first_185]._M_impl._M_start;
  # DEBUG D#473 => (long int) _46
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _46
  # DEBUG __n => D#470
  if (_46 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _46
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _46
  # DEBUG this => D#462
  # DEBUG D.142997 => D#463
  operator delete (_46);

  <bb 39>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__first_185] ={v} {CLOBBER};
  __first_47 = __first_185 + 24;
  # DEBUG __first => __first_47
  # DEBUG __first => __first_47
  if (_13 == __first_47)
    goto <bb 41>;
  else
    goto <bb 40>;

  <bb 40>:
  goto <bb 37>;

  <bb 41>:

  <bb 68>:
  pretmp_138 = this_4(D)->D.53336._M_impl._M_start;

  <bb 42>:
  # prephitmp_104 = PHI <pretmp_138(68), __first_14(9)>
  # DEBUG D#2532 => this_4(D)->D.53336._M_impl._M_end_of_storage
  # DEBUG D#2531 => (long int) D#2532
  # DEBUG D#3985 => this_4(D)->D.53336._M_impl._M_start
  # DEBUG D#2530 => (long int) D#3985
  # DEBUG D#2529 => D#2531 - D#2530
  # DEBUG D#2528 => D#2529 /[ex] 24
  # DEBUG D#2527 => &this_4(D)->D.53336
  # DEBUG D#678 => D#2527
  # DEBUG D#679 => (long unsigned int) D#2528
  # DEBUG __p => D#3985
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (prephitmp_104 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => D#3985
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => D#3985
  # DEBUG this => D#669
  # DEBUG D.142976 => D#670
  operator delete (prephitmp_104);

  <bb 44>:

  <bb 73>:
  this_4(D)->D.53336._M_impl._M_start = __tmp_114;
  _18 = (long unsigned int) _43;
  _19 = __tmp_114 + _18;
  this_4(D)->D.53336._M_impl._M_end_of_storage = _19;
  goto <bb 65>;

  <bb 45>:
  # DEBUG D#201 => this_4(D)
  _36 = MEM[(struct vector * *)this_4(D) + 8B];
  # DEBUG D#201 => this_4(D)
  # DEBUG this => D#201
  # DEBUG this => D#201
  _49 = (long int) _36;
  _50 = _49 - _23;
  __n_51 = _50 /[ex] 24;
  _52 = (size_type) __n_51;
  if (_45 <= _52)
    goto <bb 47>;
  else
    goto <bb 46>;

  <bb 46>:
  # DEBUG __n => __n_51
  # DEBUG __result => __result_38
  # DEBUG __first => __first_34
  if (__n_51 <= 0)
    goto <bb 64>;
  else
    goto <bb 60>;

  <bb 47>:
  # DEBUG __n => __n_44
  # DEBUG __result => __result_38
  # DEBUG __first => __first_34
  if (__n_44 <= 0)
    goto <bb 48>;
  else
    goto <bb 50>;

  <bb 48>:
  # __result_179 = PHI <__result_86(70), __result_38(47)>
  # DEBUG __first$_M_current => __result_179
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_36 != __result_179)
    goto <bb 54>;
  else
    goto <bb 49>;

  <bb 49>:
  pretmp_6 = this_4(D)->D.53336._M_impl._M_start;
  pretmp_53 = (long unsigned int) _43;
  pretmp_75 = pretmp_6 + pretmp_53;
  goto <bb 65>;

  <bb 50>:

  <bb 51>:
  # __n_186 = PHI <__n_44(50), __n_61(53)>
  # __result_181 = PHI <__result_38(50), __result_60(53)>
  # __first_182 = PHI <__first_34(50), __first_59(53)>
  # DEBUG __n => __n_186
  # DEBUG __result => __result_181
  # DEBUG __first => __first_182
  std::vector<int>::operator= (__result_181, __first_182);
  __first_59 = __first_182 + 24;
  # DEBUG __first => __first_59
  __result_60 = __result_181 + 24;
  # DEBUG __result => __result_60
  __n_61 = __n_186 + -1;
  # DEBUG __n => __n_61
  # DEBUG __n => __n_61
  # DEBUG __result => __result_60
  # DEBUG __first => __first_59
  if (__n_61 <= 0)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:

  <bb 70>:
  _89 = (sizetype) __n_44;
  _122 = _89 * 24;
  __result_86 = __result_38 + _122;
  goto <bb 48>;

  <bb 53>:
  goto <bb 51>;

  <bb 54>:

  <bb 55>:
  # __result_9 = PHI <__result_179(54), __result_55(58)>
  # DEBUG __first$_M_current => __result_9
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => NULL
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _54 = MEM[(struct _Vector_base *)__result_9]._M_impl._M_start;
  # DEBUG D#473 => (long int) _54
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _54
  # DEBUG __n => D#470
  if (_54 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _54
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _54
  # DEBUG this => D#462
  # DEBUG D.143034 => D#463
  operator delete (_54);

  <bb 57>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__result_9] ={v} {CLOBBER};
  # DEBUG this => &__first
  __result_55 = __result_9 + 24;
  # DEBUG __first$_M_current => __result_55
  # DEBUG __first$_M_current => __result_55
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_36 != __result_55)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  goto <bb 55>;

  <bb 59>:

  <bb 69>:
  pretmp_77 = this_4(D)->D.53336._M_impl._M_start;
  pretmp_66 = (long unsigned int) _43;
  pretmp_188 = pretmp_77 + pretmp_66;
  goto <bb 65>;

  <bb 60>:

  <bb 61>:
  # __n_199 = PHI <__n_51(60), __n_70(62)>
  # __result_198 = PHI <__result_38(60), __result_69(62)>
  # __first_196 = PHI <__first_34(60), __first_68(62)>
  # DEBUG __n => __n_199
  # DEBUG __result => __result_198
  # DEBUG __first => __first_196
  std::vector<int>::operator= (__result_198, __first_196);
  __first_68 = __first_196 + 24;
  # DEBUG __first => __first_68
  __result_69 = __result_198 + 24;
  # DEBUG __result => __result_69
  __n_70 = __n_199 + -1;
  # DEBUG __n => __n_70
  # DEBUG __n => __n_70
  # DEBUG __result => __result_69
  # DEBUG __first => __first_68
  if (__n_70 <= 0)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:
  goto <bb 61>;

  <bb 63>:

  <bb 71>:
  pretmp_56 = this_4(D)->D.53336._M_impl._M_finish;
  pretmp_151 = __x_3(D)->D.53336._M_impl._M_finish;
  pretmp_8 = __x_3(D)->D.53336._M_impl._M_start;
  pretmp_150 = MEM[(struct vector * *)this_4(D)];
  pretmp_189 = (long int) pretmp_56;
  pretmp_154 = (long int) pretmp_150;
  pretmp_71 = pretmp_189 - pretmp_154;

  <bb 64>:
  # prephitmp_74 = PHI <pretmp_56(71), _36(46)>
  # prephitmp_10 = PHI <pretmp_151(71), _35(46)>
  # prephitmp_173 = PHI <pretmp_8(71), __first_34(46)>
  # prephitmp_16 = PHI <pretmp_71(71), _50(46)>
  # DEBUG D#2526 => &this_4(D)->D.53336
  # DEBUG this => D#2526
  # DEBUG D#3984 => this_4(D)->D.53336._M_impl._M_finish
  # DEBUG D#3983 => __x_3(D)->D.53336._M_impl._M_finish
  # DEBUG D#201 => this_4(D)
  # DEBUG D#201 => this_4(D)
  # DEBUG this => D#201
  # DEBUG this => D#201
  _28 = (long unsigned int) prephitmp_16;
  _29 = prephitmp_173 + _28;
  # DEBUG __first => _29
  # DEBUG __last => D#3983
  # DEBUG __result => D#3984
  # DEBUG D.143086 => D#1393
  # DEBUG __first => _29
  # DEBUG __last => D#3983
  # DEBUG __result => D#3984
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (_29, prephitmp_10, prephitmp_74);
  pretmp_180 = this_4(D)->D.53336._M_impl._M_start;
  pretmp_190 = (long unsigned int) _43;
  pretmp_152 = pretmp_180 + pretmp_190;

  <bb 65>:
  # prephitmp_187 = PHI <_19(73), pretmp_188(69), pretmp_152(64), pretmp_75(49)>

  <bb 74>:
  this_4(D)->D.53336._M_impl._M_finish = prephitmp_187;

  <bb 66>:

  <bb 75>:
  return this_4(D);

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<std::vector<int> >*; _Size = long unsigned int; _Tp = std::vector<std::vector<int> >; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIS2_IiSaIiEESaIS4_EEmS6_EET_S8_T0_RKT1_, funcdef_no=5174, decl_uid=89104, cgraph_uid=3422, symbol_order=3423)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<std::vector<int> >*; _Size = long unsigned int; _Tp = std::vector<std::vector<int> >; bool _TrivialValueType = false] (struct vector * __first, long unsigned int __n, const struct vector & __x)
{
  int * D.165378;
  const ptrdiff_t _Num;
  const struct vector * __first$_M_current;
  struct vector * D.165324;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct vector * __result;
  struct vector * D.165293;
  struct __normal_iterator __last;
  struct __normal_iterator __first;
  long unsigned int pretmp_2;
  long unsigned int prephitmp_3;
  void * _12;
  long unsigned int _18;
  struct vector * const _20;
  struct vector * const _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  size_type _26;
  struct vector * _29;
  struct vector * const _30;
  struct vector * _33;
  struct vector * _34;
  long unsigned int pretmp_37;
  void * _42;
  int * _44;
  int * const _46;
  int * const _47;
  long int _48;
  long int _49;
  long int _50;
  long int _51;
  size_type _52;
  long unsigned int pretmp_53;
  int * _55;
  int * const _56;
  int * const _57;
  long int __last.79_58;
  long int __first.80_59;
  long int _60;
  long unsigned int _62;
  int * _64;
  long unsigned int _65;
  int * _66;
  int * iftmp.77_67;
  long unsigned int prephitmp_69;
  long unsigned int prephitmp_119;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 44>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_89 = PHI <__n_5(D)(3), __n_10(43)>
  # __first_90 = PHI <__first_4(D)(3), __first_11(43)>
  # DEBUG __cur => __first_90
  # DEBUG __n => __n_89
  # DEBUG __r => __first_90
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.130385 => D#20
  if (__first_90 != 0B)
    goto <bb 5>;
  else
    goto <bb 41>;

  <bb 5>:
  # DEBUG this => __first_90
  # DEBUG __x => __x_8(D)
  # DEBUG D#1490 => &__x_8(D)->D.53336
  # DEBUG this => D#1490
  # DEBUG __a => NULL
  _20 = MEM[(struct vector * *)__x_8(D)];
  # DEBUG D#201 => __x_8(D)
  _21 = MEM[(struct vector * *)__x_8(D) + 8B];
  # DEBUG D#201 => __x_8(D)
  # DEBUG this => D#201
  # DEBUG this => D#201
  _22 = (long int) _21;
  _23 = (long int) _20;
  _24 = _22 - _23;
  _25 = _24 /[ex] 24;
  _26 = (size_type) _25;
  # DEBUG D#1493 => &__first_90->D.53336
  # DEBUG this => D#1493
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1384 => &D#1493->_M_impl
  # DEBUG this => D#1384
  # DEBUG __a => NULL
  # DEBUG this => D#1384
  # DEBUG __a => NULL
  # DEBUG this => D#1384
  # DEBUG D.119591 => NULL
  MEM[(struct _Vector_impl *)__first_90]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_90]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_90]._M_end_of_storage = 0B;
  # DEBUG this => D#1493
  # DEBUG __n => NULL
  # DEBUG D#1382 => D#1493
  # DEBUG __n => _26
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (_26 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_37 = (long unsigned int) _24;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => _26
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => _26
  # DEBUG this => D#2140
  # DEBUG D.165291 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  if (_26 > 768614336404564650)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __first_1 = PHI <__first_90(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _18 = (long unsigned int) _24;
  _34 = operator new (_18);
  goto <bb 11>;

  # __first_28 = PHI <__first_90(9)>
<L12>:
  goto <bb 46> (<L4>);

  <bb 11>:
  # __result_35 = PHI <0B(6), _34(9)>
  # prephitmp_119 = PHI <pretmp_37(6), _18(9)>
  MEM[(struct _Vector_base *)__first_90]._M_impl._M_start = __result_35;
  MEM[(struct _Vector_base *)__first_90]._M_impl._M_finish = __result_35;
  _29 = __result_35 + prephitmp_119;
  MEM[(struct _Vector_base *)__first_90]._M_impl._M_end_of_storage = _29;
  # DEBUG D#1491 => &__first_90->D.53336
  # DEBUG this => D#1491
  _30 = MEM[(struct vector * *)__x_8(D) + 8B];
  # DEBUG D#302 => __x_8(D)
  # DEBUG this => D#302
  # DEBUG this => NULL
  # DEBUG __i => NULL
  __first$_M_current_31 = MEM[(struct vector * *)__x_8(D)];
  # DEBUG D#303 => __x_8(D)
  # DEBUG this => D#303
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __last$_M_current => _30
  # DEBUG __result => NULL
  # DEBUG D.165274 => D#1489
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => __result_35
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __cur => __result_35
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __cur => __result_35
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_30 != __first$_M_current_31)
    goto <bb 12>;
  else
    goto <bb 27>;

  <bb 12>:

  <bb 13>:
  # __first$_M_current_132 = PHI <__first$_M_current_31(12), __first$_M_current_40(26)>
  # __result_135 = PHI <__result_35(12), __result_41(26)>
  # DEBUG __first$_M_current => __first$_M_current_132
  # DEBUG __cur => __result_135
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __result_135
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.124770 => D#20
  if (__result_135 != 0B)
    goto <bb 14>;
  else
    goto <bb 24>;

  <bb 14>:
  # DEBUG this => __result_135
  # DEBUG __x => __first$_M_current_132
  # DEBUG D#1387 => &__first$_M_current_132->D.45977
  # DEBUG this => D#1387
  # DEBUG __a => NULL
  _46 = MEM[(int * *)__first$_M_current_132];
  # DEBUG D#68 => __first$_M_current_132
  _47 = MEM[(int * *)__first$_M_current_132 + 8B];
  # DEBUG D#68 => __first$_M_current_132
  # DEBUG this => D#68
  # DEBUG this => D#68
  _48 = (long int) _47;
  _49 = (long int) _46;
  _50 = _48 - _49;
  _51 = _50 /[ex] 4;
  _52 = (size_type) _51;
  # DEBUG D#1389 => &__result_135->D.45977
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1271 => &D#1389->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)__result_135]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_135]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_135]._M_end_of_storage = 0B;
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG D#1269 => D#1389
  # DEBUG __n => _52
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (_52 != 0)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  pretmp_2 = (long unsigned int) _50;
  goto <bb 20>;

  <bb 16>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => _52
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => _52
  # DEBUG this => D#1263
  # DEBUG D.165376 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (_52 > 4611686018427387903)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # __result_32 = PHI <__result_35(16)>
  # __first_54 = PHI <__first_90(16)>
  # __result_38 = PHI <__result_135(16)>
  std::__throw_bad_alloc ();

  <bb 18>:
  _65 = (long unsigned int) _50;
  _66 = operator new (_65);
  goto <bb 20>;

  # __result_17 = PHI <__result_35(18)>
  # __first_63 = PHI <__first_90(18)>
  # __result_39 = PHI <__result_135(18)>
<L14>:
  goto <bb 29> (<L8>);

  <bb 20>:
  # iftmp.77_67 = PHI <0B(15), _66(18)>
  # prephitmp_3 = PHI <pretmp_2(15), _65(18)>
  MEM[(struct _Vector_base *)__result_135]._M_impl._M_start = iftmp.77_67;
  MEM[(struct _Vector_base *)__result_135]._M_impl._M_finish = iftmp.77_67;
  _55 = iftmp.77_67 + prephitmp_3;
  MEM[(struct _Vector_base *)__result_135]._M_impl._M_end_of_storage = _55;
  # DEBUG D#1388 => &__result_135->D.45977
  # DEBUG this => D#1388
  _56 = MEM[(int * *)__first$_M_current_132 + 8B];
  # DEBUG D#276 => __first$_M_current_132
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _57 = MEM[(int * *)__first$_M_current_132];
  # DEBUG D#277 => __first$_M_current_132
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG D.165340 => D#1386
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG __it => _56
  # DEBUG __it$_M_current => _56
  # DEBUG __it => _57
  # DEBUG __it$_M_current => _57
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _56
  # DEBUG __it => _56
  # DEBUG this => NULL
  # DEBUG __it => _57
  # DEBUG __it => _57
  # DEBUG this => NULL
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  __last.79_58 = (long int) _56;
  __first.80_59 = (long int) _57;
  _60 = __last.79_58 - __first.80_59;
  _Num_61 = _60 /[ex] 4;
  # DEBUG _Num => _Num_61
  if (_Num_61 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  pretmp_53 = (long unsigned int) _60;
  goto <bb 23>;

  <bb 22>:
  _62 = (long unsigned int) _60;
  __builtin_memmove (iftmp.77_67, _57, _62);

  <bb 23>:
  # prephitmp_69 = PHI <pretmp_53(21), _62(22)>
  _64 = iftmp.77_67 + prephitmp_69;
  __result_135->D.45977._M_impl._M_finish = _64;

  <bb 24>:
  # DEBUG this => &__first
  __first$_M_current_40 = __first$_M_current_132 + 24;
  # DEBUG __first$_M_current => __first$_M_current_40
  __result_41 = __result_135 + 24;
  # DEBUG __cur => __result_41
  # DEBUG __first$_M_current => __first$_M_current_40
  # DEBUG __cur => __result_41
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_30 != __first$_M_current_40)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  # __result_9 = PHI <__result_41(24)>
  goto <bb 27>;

  <bb 26>:
  goto <bb 13>;

  <bb 27>:
  # __result_134 = PHI <__result_9(25), __result_35(11)>
  __first_90->D.53336._M_impl._M_finish = __result_134;
  goto <bb 41>;

<L13>:

  # __result_88 = PHI <__result_17(19), __result_32(28)>
  # __first_87 = PHI <__first_63(19), __first_54(28)>
  # __result_118 = PHI <__result_39(19), __result_38(28)>
<L8>:
  _42 = __builtin_eh_pointer (7);
  __cxa_begin_catch (_42);
  # DEBUG __first => __result_88
  # DEBUG __last => __result_118
  # DEBUG __first => __result_88
  # DEBUG __last => __result_118
  # DEBUG __first => __result_88
  if (__result_88 == __result_118)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  __cxa_rethrow ();

  <bb 31>:

  <bb 32>:
  # __result_127 = PHI <__result_88(31), __result_45(35)>
  # DEBUG __first => __result_127
  # DEBUG __r => __result_127
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _44 = MEM[(struct _Vector_base *)__result_127]._M_impl._M_start;
  # DEBUG D#473 => (long int) _44
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _44
  # DEBUG __n => D#470
  if (_44 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _44
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _44
  # DEBUG this => D#462
  # DEBUG D.165314 => D#463
  operator delete (_44);

  <bb 34>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__result_127] ={v} {CLOBBER};
  __result_45 = __result_127 + 24;
  # DEBUG __first => __result_45
  # DEBUG __first => __result_45
  if (__result_45 == __result_118)
    goto <bb 30>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 32>;

<L10>:
  __cxa_end_catch ();
  resx 6

<L7>:
  # DEBUG D#1492 => &__first_87->D.53336
  # DEBUG this => D#1492
  # DEBUG D#685 => D#1492->_M_impl._M_end_of_storage
  # DEBUG D#684 => (long int) D#685
  _33 = MEM[(struct _Vector_base *)__first_87]._M_impl._M_start;
  # DEBUG D#683 => (long int) _33
  # DEBUG D#682 => D#684 - D#683
  # DEBUG D#681 => D#682 /[ex] 24
  # DEBUG D#678 => D#1492
  # DEBUG D#679 => (long unsigned int) D#681
  # DEBUG __p => _33
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (_33 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => _33
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => _33
  # DEBUG this => D#669
  # DEBUG D.165260 => D#670
  operator delete (_33);

  <bb 39>:
  # DEBUG D#680 => &D#1492->_M_impl
  # DEBUG this => D#680
  # DEBUG this => D#680
  # DEBUG this => D#680
  MEM[(struct  &)__first_87] ={v} {CLOBBER};
  resx 4

<L15>:
  goto <bb 46> (<L4>);

  <bb 41>:
  __n_10 = __n_89 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_90 + 24;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # __first_36 = PHI <__first_11(41)>
  goto <bb 44>;

  <bb 43>:
  goto <bb 4>;

  <bb 44>:
  # __first_124 = PHI <__first_36(42), __first_4(D)(2)>
  return __first_124;

<L11>:

  # __first_27 = PHI <__first_87(40), __first_28(10), __first_1(45)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_27
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_27
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_27)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  __cxa_rethrow ();

  <bb 48>:

  <bb 49>:
  # __first_136 = PHI <__first_4(D)(48), __first_7(50)>
  # DEBUG __first => __first_136
  # DEBUG __r => __first_136
  # DEBUG __pointer => NULL
  std::vector<std::vector<int> >::~vector (__first_136);
  __first_7 = __first_136 + 24;
  # DEBUG __first => __first_7
  # DEBUG __first => __first_7
  if (__first_7 == __first_27)
    goto <bb 47>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 49>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<bool>*; _Size = long unsigned int; _Tp = std::vector<bool>; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_, funcdef_no=5191, decl_uid=89225, cgraph_uid=3439, symbol_order=3440)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<bool>*; _Size = long unsigned int; _Tp = std::vector<bool>; bool _TrivialValueType = false] (struct vector * __first, long unsigned int __n, const struct vector & __x)
{
  struct _Bit_iterator D.165592;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.165567;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.165566;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __last$D33304$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D33304$_M_offset;
  struct _Bit_iterator D.165539;
  struct iterator D.165538;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator D.165490;
  struct _Bvector_base * _7;
  void * _12;
  long unsigned int _19;
  unsigned int _26;
  _Bit_type * _27;
  unsigned int _28;
  _Bit_type * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _35;
  long int _36;
  ptrdiff_t _37;
  size_type _38;
  _Bit_type * _41;
  struct _Bvector_base * _43;
  size_t _44;
  long unsigned int _45;
  long unsigned int * _46;
  long unsigned int * _47;
  long int _49;
  long unsigned int _50;
  long unsigned int _51;
  unsigned int _57;
  long int __last.195_62;
  long int __first.196_63;
  long int _64;
  long unsigned int _66;
  long unsigned int _92;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int prephitmp_96;
  long unsigned int _97;
  long unsigned int pretmp_98;
  long unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _102;
  long unsigned int _103;
  _Bit_type cstore_138;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 28>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_135 = PHI <__n_5(D)(3), __n_10(27)>
  # __first_136 = PHI <__first_4(D)(3), __first_11(27)>
  # DEBUG __cur => __first_136
  # DEBUG __n => __n_135
  # DEBUG __r => __first_136
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#20 => 40
  # DEBUG __p => NULL
  # DEBUG D.130721 => D#20
  if (__first_136 != 0B)
    goto <bb 5>;
  else
    goto <bb 25>;

  <bb 5>:
  # DEBUG this => __first_136
  # DEBUG __x => __x_8(D)
  # DEBUG D#1519 => &__x_8(D)->D.48430
  # DEBUG this => D#1519
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.126954 => NULL
  # DEBUG this => NULL
  # DEBUG D#1521 => &__first_136->D.48430
  # DEBUG this => D#1521
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.119804 => NULL
  # DEBUG this => NULL
  # DEBUG D#1028 => &D#1521->_M_impl
  # DEBUG this => D#1028
  # DEBUG __a => NULL
  # DEBUG this => D#1028
  # DEBUG __a => NULL
  # DEBUG this => D#1028
  # DEBUG D.119778 => NULL
  # DEBUG D#1027 => &D#1028->_M_start
  # DEBUG this => D#1027
  # DEBUG D#39 => &D#1027->D.33184
  # DEBUG this => D#39
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#39
  MEM[(struct _Bit_iterator_base *)__first_136]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)__first_136]._M_offset = 0;
  # DEBUG D#1026 => &D#1028->_M_finish
  # DEBUG this => D#1026
  # DEBUG D#39 => &D#1026->D.33184
  # DEBUG this => D#39
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#39
  MEM[(struct _Bit_iterator_base *)__first_136 + 16B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)__first_136 + 16B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)__first_136]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => __x_8(D)
  # DEBUG this => __x_8(D)
  # DEBUG D#208 => &__x_8(D)->D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _26 = MEM[(const struct _Bit_iterator *)__x_8(D)].D.33184._M_offset;
  _27 = MEM[(const struct _Bit_iterator *)__x_8(D)].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _27
  # DEBUG __y => _26
  # DEBUG this => D#48
  # DEBUG this => __x_8(D)
  # DEBUG D#209 => &__x_8(D)->D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  _28 = MEM[(const struct _Bit_iterator *)__x_8(D) + 16B].D.33184._M_offset;
  _29 = MEM[(const struct _Bit_iterator *)__x_8(D) + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _29
  # DEBUG __y => _28
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _30 = (long int) _29;
  _31 = (long int) _27;
  _32 = _30 - _31;
  _33 = _32 * 8;
  _34 = (long int) _28;
  _35 = _33 + _34;
  _36 = (long int) _26;
  _37 = _35 - _36;
  _38 = (size_type) _37;
  # DEBUG this => __first_136
  # DEBUG __n => _38
  # DEBUG D#1506 => &__first_136->D.48430
  # DEBUG D#1504 => D#1506
  # DEBUG __n => _38
  # DEBUG this => D#1504
  # DEBUG D#1503 => D#1504
  # DEBUG __n => _38
  _19 = _38 + 63;
  _44 = _19 >> 6;
  # DEBUG D#1502 => &D#1503->_M_impl
  # DEBUG D#1501 => D#1502
  # DEBUG __n => NULL
  # DEBUG __a => D#1501
  # DEBUG D#1500 => D#1501
  # DEBUG D#1498 => D#1500
  # DEBUG D#1499 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1498
  # DEBUG D.165501 => D#1499
  # DEBUG D#1497 => D#1498
  # DEBUG D#1496 => D#1497
  # DEBUG this => D#1496
  _45 = _44 * 8;
  _46 = operator new (_45);

  <bb 6>:
  # DEBUG __q => _46
  # DEBUG __n => _38
  _47 = _46 + _45;
  __first_136->D.48430._M_impl._M_end_of_storage = _47;
  # DEBUG __r => _46
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  MEM[(struct _Bit_iterator *)__first_136] = _46;
  MEM[(struct _Bit_iterator *)__first_136 + 8B] = 0;
  # DEBUG D#1505 => &__first_136->D.48430._M_impl._M_start
  # DEBUG this => D#1505
  # DEBUG __i => _37
  # DEBUG __tmp$_M_p => _46
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => _37
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => _37
  # DEBUG __n => _37
  _49 = _37 / 64;
  _50 = (long unsigned int) _49;
  _51 = _50 * 8;
  __tmp$_M_p_52 = _46 + _51;
  # DEBUG __tmp$_M_p => __tmp$_M_p_52
  __n_53 = _37 % 64;
  # DEBUG __n => __n_53
  if (__n_53 < 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __n_54 = __n_53 + 64;
  # DEBUG __n => __n_54
  __tmp$_M_p_55 = __tmp$_M_p_52 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_55

  <bb 8>:
  # __n_56 = PHI <__n_53(6), __n_54(7)>
  # __tmp$_M_p_58 = PHI <__tmp$_M_p_52(6), __tmp$_M_p_55(7)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_58
  # DEBUG __n => __n_56
  _57 = (unsigned int) __n_56;
  # DEBUG __tmp$_M_offset => _57
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  MEM[(struct _Bit_iterator *)__first_136 + 16B] = __tmp$_M_p_58;
  MEM[(struct _Bit_iterator *)__first_136 + 24B] = _57;
  # DEBUG this => __x_8(D)
  # DEBUG D#209 => &__x_8(D)->D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  __it$D33304$_M_offset_39 = MEM[(const struct _Bit_iterator *)__x_8(D) + 16B].D.33184._M_offset;
  __first$_M_p_40 = MEM[(const struct _Bit_iterator *)__x_8(D) + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => __it$D33304$_M_offset_39
  # DEBUG this => D#48
  # DEBUG this => __x_8(D)
  # DEBUG D#208 => &__x_8(D)->D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG D#1520 => MEM[(const struct _Bit_iterator *)__x_8(D)].D.33184._M_offset
  _41 = MEM[(const struct _Bit_iterator *)__x_8(D)].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _41
  # DEBUG __y => D#1520
  # DEBUG this => D#48
  # DEBUG D.126974 => D#1520
  # DEBUG D#1515 => __first_136
  # DEBUG D#1518 => __first_136->D.48430._M_impl._M_start
  # DEBUG this => D#1515
  # DEBUG __last$D33304$_M_p => __first$_M_p_40
  # DEBUG __first => _41
  # DEBUG __last => __first$_M_p_40
  # DEBUG __result => _46
  # DEBUG __it => __first$_M_p_40
  # DEBUG __it => __first$_M_p_40
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  # DEBUG __it => _46
  # DEBUG __it => _46
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  __last.195_62 = (long int) __first$_M_p_40;
  __first.196_63 = (long int) _41;
  _64 = __last.195_62 - __first.196_63;
  _Num_65 = _64 /[ex] 8;
  # DEBUG _Num => _Num_65
  if (_Num_65 != 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  pretmp_98 = (long unsigned int) _64;
  goto <bb 11>;

  <bb 10>:
  _66 = (long unsigned int) _64;
  __builtin_memmove (_46, _41, _66);

  <bb 11>:
  # prephitmp_96 = PHI <pretmp_98(9), _66(10)>
  __result$_M_p_68 = _46 + prephitmp_96;
  # DEBUG __q => __result$_M_p_68
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_68
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => __result$_M_p_68
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG D#1513 => __last
  # DEBUG D#1513 => __last
  # DEBUG __it$D33304$_M_p => __first$_M_p_40
  # DEBUG __it$D33304$_M_offset => __it$D33304$_M_offset_39
  # DEBUG __it$D33304$_M_p => __first$_M_p_40
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __it$D33184$_M_p => __result$_M_p_68
  # DEBUG __it$D33184$_M_offset => 0
  # DEBUG __it$D33304$_M_p => __first$_M_p_40
  # DEBUG __it$D33304$_M_offset => __it$D33304$_M_offset_39
  # DEBUG __it$D33304$_M_p => __first$_M_p_40
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => __first$_M_p_40
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_68
  # DEBUG __result$8 => 0
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  __n_86 = (_Distance) __it$D33304$_M_offset_39;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_68
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => __first$_M_p_40
  # DEBUG __n => __n_86
  if (__n_86 == 0)
    goto <bb 25>;
  else
    goto <bb 12>;

  <bb 12>:

  <bb 13>:
  # __n_145 = PHI <__n_86(12), __n_108(23)>
  # __first$8_146 = PHI <0(12), __first$8_110(23)>
  # __first$_M_p_82 = PHI <__first$_M_p_40(12), __first$_M_p_109(23)>
  # __result$8_83 = PHI <0(12), __result$8_112(23)>
  # __result$_M_p_80 = PHI <__result$_M_p_68(12), __result$_M_p_111(23)>
  # DEBUG __result$8 => __result$8_83
  # DEBUG __result$_M_p => __result$_M_p_80
  # DEBUG __first$8 => __first$8_146
  # DEBUG __first$_M_p => __first$_M_p_82
  # DEBUG __n => __n_145
  # DEBUG D#49 => &__first
  # DEBUG D#49 => &__first
  # DEBUG this => D#49
  # DEBUG this => D#49
  _92 = 1 << __first$8_146;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_82
  # DEBUG __y => _92
  # DEBUG this => NULL
  _94 = *__first$_M_p_82;
  _95 = _92 & _94;
  # DEBUG D#41 => &__result
  # DEBUG D#41 => &__result
  # DEBUG this => D#41
  # DEBUG this => D#41
  _97 = 1 << __result$8_83;
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_80
  # DEBUG __y => _97
  # DEBUG this => NULL
  # DEBUG __x => _95 != 0
  if (_95 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _99 = *__result$_M_p_80;
  _100 = _97 | _99;
  goto <bb 16>;

  <bb 15>:
  _101 = *__result$_M_p_80;
  _102 = ~_97;
  _103 = _101 & _102;

  <bb 16>:
  # cstore_138 = PHI <_100(14), _103(15)>
  *__result$_M_p_80 = cstore_138;
  # DEBUG this => &__first
  # DEBUG D#50 => &__first.D.33304
  # DEBUG this => D#50
  # DEBUG __first$8 => __first$8_146 + 1
  if (__first$8_146 == 63)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  __first$8_104 = __first$8_146 + 1;
  goto <bb 19>;

  <bb 18>:
  # DEBUG __first$8 => 0
  __first$_M_p_105 = __first$_M_p_82 + 8;
  # DEBUG __first$_M_p => __first$_M_p_105

  <bb 19>:
  # __first$_M_p_109 = PHI <__first$_M_p_82(17), __first$_M_p_105(18)>
  # __first$8_110 = PHI <__first$8_104(17), 0(18)>
  # DEBUG __first$8 => __first$8_110
  # DEBUG __first$_M_p => __first$_M_p_109
  # DEBUG this => &__result
  # DEBUG D#42 => &__result.D.33184
  # DEBUG this => D#42
  # DEBUG __result$8 => __result$8_83 + 1
  if (__result$8_83 == 63)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  __result$8_106 = __result$8_83 + 1;
  goto <bb 22>;

  <bb 21>:
  # DEBUG __result$8 => 0
  __result$_M_p_107 = __result$_M_p_80 + 8;
  # DEBUG __result$_M_p => __result$_M_p_107

  <bb 22>:
  # __result$_M_p_111 = PHI <__result$_M_p_80(20), __result$_M_p_107(21)>
  # __result$8_112 = PHI <__result$8_106(20), 0(21)>
  # DEBUG __result$8 => __result$8_112
  # DEBUG __result$_M_p => __result$_M_p_111
  __n_108 = __n_145 + -1;
  # DEBUG __n => __n_108
  # DEBUG __result$8 => __result$8_112
  # DEBUG __result$_M_p => __result$_M_p_111
  # DEBUG __first$8 => __first$8_110
  # DEBUG __first$_M_p => __first$_M_p_109
  # DEBUG __n => __n_108
  if (__n_108 == 0)
    goto <bb 25>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 13>;

  # __first_2 = PHI <__first_136(5)>
<L7>:
  _43 = &__first_2->D.48430;
  # DEBUG this => _43
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_43);
  # DEBUG D#1019 => &_43->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__first_2] ={v} {CLOBBER};
  resx 4

  <bb 25>:
  __n_10 = __n_135 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_136 + 40;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # __first_9 = PHI <__first_11(25)>
  goto <bb 28>;

  <bb 27>:
  goto <bb 4>;

  <bb 28>:
  # __first_139 = PHI <__first_9(26), __first_4(D)(2)>
  return __first_139;

<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_2
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_2
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_2)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  __cxa_rethrow ();

  <bb 31>:

  <bb 32>:
  # __first_142 = PHI <__first_4(D)(31), __first_17(33)>
  # DEBUG __first => __first_142
  # DEBUG __r => __first_142
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _7 = &__first_142->D.48430;
  # DEBUG this => _7
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_7);
  # DEBUG D#1019 => &_7->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__first_142] ={v} {CLOBBER};
  __first_17 = __first_142 + 40;
  # DEBUG __first => __first_17
  # DEBUG __first => __first_17
  if (__first_17 == __first_2)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<std::__cxx11::list<Flit*> >*; _Size = long unsigned int; _Tp = std::vector<std::__cxx11::list<Flit*> >; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorINSt7__cxx114listIP4FlitSaIS6_EEESaIS8_EEmSA_EET_SC_T0_RKT1_, funcdef_no=5201, decl_uid=89265, cgraph_uid=3449, symbol_order=3450)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<std::__cxx11::list<Flit*> >*; _Size = long unsigned int; _Tp = std::vector<std::__cxx11::list<Flit*> >; bool _TrivialValueType = false] (struct vector * __first, long unsigned int __n, const struct vector & __x)
{
  struct iterator __position;
  struct _List_iterator D.165759;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct _Node * __tmp;
  const struct list * __first$_M_current;
  struct list * D.165724;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct list * __result;
  struct vector * D.165694;
  struct __normal_iterator __last;
  struct __normal_iterator __first;
  void * _12;
  long unsigned int _18;
  struct list * const _20;
  struct list * const _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  size_type _26;
  struct list * _29;
  struct list * const _30;
  struct list * _33;
  struct vector * _34;
  void * _42;
  struct _List_node_base * _49;
  const struct _List_node_base * _50;
  struct _List_node_base * _53;
  struct _List_node_base * _54;
  struct _List_node * _59;
  struct Flit * _61;
  struct _List_node_base * _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int pretmp_115;
  long unsigned int prephitmp_116;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 45>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_126 = PHI <__n_5(D)(3), __n_10(44)>
  # __first_127 = PHI <__first_4(D)(3), __first_11(44)>
  # DEBUG __cur => __first_127
  # DEBUG __n => __n_126
  # DEBUG __r => __first_127
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.131504 => D#20
  if (__first_127 != 0B)
    goto <bb 5>;
  else
    goto <bb 42>;

  <bb 5>:
  # DEBUG this => __first_127
  # DEBUG __x => __x_8(D)
  # DEBUG D#1830 => &__x_8(D)->D.70701
  # DEBUG this => D#1830
  # DEBUG __a => NULL
  _20 = MEM[(struct list * *)__x_8(D)];
  # DEBUG D#211 => __x_8(D)
  _21 = MEM[(struct list * *)__x_8(D) + 8B];
  # DEBUG D#211 => __x_8(D)
  # DEBUG this => D#211
  # DEBUG this => D#211
  _22 = (long int) _21;
  _23 = (long int) _20;
  _24 = _22 - _23;
  _25 = _24 /[ex] 24;
  _26 = (size_type) _25;
  # DEBUG D#1833 => &__first_127->D.70701
  # DEBUG this => D#1833
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1829 => &D#1833->_M_impl
  # DEBUG this => D#1829
  # DEBUG __a => NULL
  # DEBUG this => D#1829
  # DEBUG __a => NULL
  # DEBUG this => D#1829
  # DEBUG D.119920 => NULL
  MEM[(struct _Vector_impl *)__first_127]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_127]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_127]._M_end_of_storage = 0B;
  # DEBUG this => D#1833
  # DEBUG __n => NULL
  # DEBUG D#1827 => D#1833
  # DEBUG __n => _26
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (_26 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_115 = (long unsigned int) _24;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => _26
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => _26
  # DEBUG this => D#2140
  # DEBUG D.165692 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  if (_26 > 768614336404564650)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __first_81 = PHI <__first_127(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _18 = (long unsigned int) _24;
  _34 = operator new (_18);
  goto <bb 11>;

  # __first_119 = PHI <__first_127(9)>
<L13>:
  goto <bb 47> (<L4>);

  <bb 11>:
  # __result_35 = PHI <0B(6), _34(9)>
  # prephitmp_116 = PHI <pretmp_115(6), _18(9)>
  MEM[(struct _Vector_base *)__first_127]._M_impl._M_start = __result_35;
  MEM[(struct _Vector_base *)__first_127]._M_impl._M_finish = __result_35;
  _29 = __result_35 + prephitmp_116;
  MEM[(struct _Vector_base *)__first_127]._M_impl._M_end_of_storage = _29;
  # DEBUG D#1831 => &__first_127->D.70701
  # DEBUG this => D#1831
  _30 = MEM[(struct list * *)__x_8(D) + 8B];
  # DEBUG D#307 => __x_8(D)
  # DEBUG this => D#307
  # DEBUG this => NULL
  # DEBUG __i => NULL
  __first$_M_current_31 = MEM[(struct list * *)__x_8(D)];
  # DEBUG D#308 => __x_8(D)
  # DEBUG this => D#308
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __last$_M_current => _30
  # DEBUG __result => NULL
  # DEBUG D.165675 => D#1621
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => __result_35
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __cur => __result_35
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __cur => __result_35
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_30 != __first$_M_current_31)
    goto <bb 12>;
  else
    goto <bb 27>;

  <bb 12>:

  <bb 13>:
  # __first$_M_current_139 = PHI <__first$_M_current_31(12), __first$_M_current_40(26)>
  # __result_141 = PHI <__result_35(12), __result_41(26)>
  # DEBUG __first$_M_current => __first$_M_current_139
  # DEBUG __cur => __result_141
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __result_141
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.128471 => D#20
  if (__result_141 != 0B)
    goto <bb 14>;
  else
    goto <bb 24>;

  <bb 14>:
  # DEBUG this => __result_141
  # DEBUG __x => __first$_M_current_139
  # DEBUG D#1618 => &__first$_M_current_139->D.71295
  # DEBUG this => D#1618
  # DEBUG D#1620 => &__result_141->D.71295
  # DEBUG this => D#1620
  # DEBUG __a => NULL
  # DEBUG D#1073 => &D#1620->_M_impl
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG D.120317 => NULL
  MEM[(struct _List_impl *)__result_141]._M_node._M_data = 0;
  # DEBUG this => D#1620
  _49 = &MEM[(struct _List_base *)__result_141]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__result_141]._M_impl._M_node.D.37893._M_next = _49;
  MEM[(struct _List_base *)__result_141]._M_impl._M_node.D.37893._M_prev = _49;
  # DEBUG D#558 => D#1620
  # DEBUG __n => 0
  # DEBUG this => D#558
  # DEBUG this => __first$_M_current_139
  _50 = &__first$_M_current_139->D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _50
  __first$_M_node_51 = MEM[(struct _List_node_base * *)__first$_M_current_139];
  # DEBUG D#312 => __first$_M_current_139
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_51
  # DEBUG this => __result_141
  # DEBUG __first => __first$_M_node_51
  # DEBUG __last$_M_node => _50
  # DEBUG __first$_M_node => __first$_M_node_51
  # DEBUG __first$_M_node => __first$_M_node_51
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_50 != __first$_M_node_51)
    goto <bb 15>;
  else
    goto <bb 24>;

  <bb 15>:

  <bb 16>:
  # __first$_M_node_128 = PHI <__first$_M_node_51(15), __first$_M_node_55(18)>
  # DEBUG __first$_M_node => __first$_M_node_128
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#3997 => &MEM[(const struct _Node *)__first$_M_node_128]._M_data
  # DEBUG this => __result_141
  # DEBUG __x => NULL
  # DEBUG this => __result_141
  # DEBUG this => NULL
  # DEBUG __x => _49
  # DEBUG this => __result_141
  # DEBUG __x => D#3997
  # DEBUG D#1615 => __result_141
  # DEBUG __x => D#3997
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.165770 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _59 = operator new (24);

  <bb 17>:
  # DEBUG __p => _59
  # DEBUG D#3998 => &MEM[(struct _Node *)_59]._M_data
  # DEBUG __r => D#3998
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#3997
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  _61 = MEM[(struct Flit * const &)__first$_M_node_128 + 16];
  MEM[(struct Flit * *)_59 + 16B] = _61;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _59
  _63 = &MEM[(struct _Node *)_59].D.82395;
  std::__detail::_List_node_base::_M_hook (_63, _49);
  # DEBUG D#1616 => &__result_141->D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _64 = MEM[(long unsigned int *)__result_141 + 16B];
  _65 = _64 + 1;
  MEM[(long unsigned int *)__result_141 + 16B] = _65;
  # DEBUG this => &__first
  __first$_M_node_55 = __first$_M_node_128->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_55
  # DEBUG __first$_M_node => __first$_M_node_55
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_50 != __first$_M_node_55)
    goto <bb 18>;
  else
    goto <bb 24>;

  <bb 18>:
  goto <bb 16>;

  # __result_1 = PHI <__result_35(16)>
  # _53 = PHI <_49(16)>
  # __first_27 = PHI <__first_127(16)>
  # __result_9 = PHI <__result_141(16)>
<L11>:
  # DEBUG D#1619 => &__result_9->D.71295
  # DEBUG this => D#1619
  # DEBUG this => D#1619
  __tmp_56 = MEM[(struct _List_base *)__result_9]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_56
  # DEBUG __cur => __tmp_56
  if (_53 == __tmp_56)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#1055 => &D#1619->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_9] ={v} {CLOBBER};
  resx 8

  <bb 21>:

  <bb 22>:
  # __tmp_130 = PHI <__tmp_56(21), __tmp_58(23)>
  # DEBUG __cur => __tmp_130
  # DEBUG __tmp => __tmp_130
  __tmp_58 = __tmp_130->D.82395._M_next;
  # DEBUG __cur => __tmp_58
  # DEBUG D#1054 => &__tmp_130->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1619
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1619
  # DEBUG __p => __tmp_130
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_130
  # DEBUG this => D#559
  # DEBUG D.165739 => D#560
  operator delete (__tmp_130);
  # DEBUG __cur => __tmp_58
  if (_53 == __tmp_58)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

  <bb 24>:
  # DEBUG this => &__first
  __first$_M_current_40 = __first$_M_current_139 + 24;
  # DEBUG __first$_M_current => __first$_M_current_40
  __result_41 = __result_141 + 24;
  # DEBUG __cur => __result_41
  # DEBUG __first$_M_current => __first$_M_current_40
  # DEBUG __cur => __result_41
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_30 != __first$_M_current_40)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  # __result_67 = PHI <__result_41(24)>
  goto <bb 27>;

  <bb 26>:
  goto <bb 13>;

  <bb 27>:
  # __result_140 = PHI <__result_67(25), __result_35(11)>
  __first_127->D.70701._M_impl._M_finish = __result_140;
  goto <bb 42>;

<L8>:
  _42 = __builtin_eh_pointer (7);
  __cxa_begin_catch (_42);
  # DEBUG __first => __result_1
  # DEBUG __last => __result_9
  # DEBUG __first => __result_1
  # DEBUG __last => __result_9
  # DEBUG __first => __result_1
  if (__result_1 == __result_9)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  __cxa_rethrow ();

  <bb 30>:

  <bb 31>:
  # __result_136 = PHI <__result_1(30), __result_48(33)>
  # DEBUG __first => __result_136
  # DEBUG __r => __result_136
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_44 = MEM[(struct _List_base *)__result_136]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_44
  # DEBUG __cur => __tmp_44
  _54 = &MEM[(struct _List_base *)__result_136]._M_impl._M_node.D.37893;
  if (__tmp_44 == _54)
    goto <bb 32>;
  else
    goto <bb 34>;

  <bb 32>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_136] ={v} {CLOBBER};
  __result_48 = __result_136 + 24;
  # DEBUG __first => __result_48
  # DEBUG __first => __result_48
  if (__result_48 == __result_9)
    goto <bb 29>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 31>;

  <bb 34>:

  <bb 35>:
  # __tmp_137 = PHI <__tmp_44(34), __tmp_47(36)>
  # DEBUG __cur => __tmp_137
  # DEBUG __tmp => __tmp_137
  __tmp_47 = __tmp_137->D.82395._M_next;
  # DEBUG __cur => __tmp_47
  # DEBUG D#1054 => &__tmp_137->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_137
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_137
  # DEBUG this => D#559
  # DEBUG D.165714 => D#560
  operator delete (__tmp_137);
  # DEBUG __cur => __tmp_47
  if (__tmp_47 == _54)
    goto <bb 32>;
  else
    goto <bb 36>;

  <bb 36>:
  goto <bb 35>;

<L10>:
  __cxa_end_catch ();
  resx 6

<L7>:
  # DEBUG D#1832 => &__first_27->D.70701
  # DEBUG this => D#1832
  # DEBUG D#1049 => D#1832->_M_impl._M_end_of_storage
  # DEBUG D#1048 => (long int) D#1049
  _33 = MEM[(struct _Vector_base *)__first_27]._M_impl._M_start;
  # DEBUG D#1047 => (long int) _33
  # DEBUG D#1046 => D#1048 - D#1047
  # DEBUG D#1045 => D#1046 /[ex] 24
  # DEBUG D#1042 => D#1832
  # DEBUG D#1043 => (long unsigned int) D#1045
  # DEBUG __p => _33
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (_33 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => _33
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => _33
  # DEBUG this => D#1033
  # DEBUG D.165661 => D#1034
  operator delete (_33);

  <bb 40>:
  # DEBUG D#1044 => &D#1832->_M_impl
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  MEM[(struct  &)__first_27] ={v} {CLOBBER};
  resx 4

<L14>:
  goto <bb 47> (<L4>);

  <bb 42>:
  __n_10 = __n_126 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_127 + 24;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # __first_72 = PHI <__first_11(42)>
  goto <bb 45>;

  <bb 44>:
  goto <bb 4>;

  <bb 45>:
  # __first_134 = PHI <__first_72(43), __first_4(D)(2)>
  return __first_134;

<L12>:

  # __first_17 = PHI <__first_27(41), __first_119(10), __first_81(46)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_17
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_17
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_17)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  __cxa_rethrow ();

  <bb 49>:

  <bb 50>:
  # __first_133 = PHI <__first_4(D)(49), __first_7(51)>
  # DEBUG __first => __first_133
  # DEBUG __r => __first_133
  # DEBUG __pointer => NULL
  std::vector<std::__cxx11::list<Flit*> >::~vector (__first_133);
  __first_7 = __first_133 + 24;
  # DEBUG __first => __first_7
  # DEBUG __first => __first_7
  if (__first_7 == __first_17)
    goto <bb 48>;
  else
    goto <bb 51>;

  <bb 51>:
  goto <bb 50>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::__cxx11::list<_Tp, _Alloc>& std::__cxx11::list<_Tp, _Alloc>::operator=(const std::__cxx11::list<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (_ZNSt7__cxx114listIP4FlitSaIS2_EEaSERKS4_, funcdef_no=5211, decl_uid=71016, cgraph_uid=3459, symbol_order=3460)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::__cxx11::list<_Tp, _Alloc>& std::__cxx11::list<_Tp, _Alloc>::operator=(const std::__cxx11::list<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (struct list * const this, const struct list & __x)
{
  struct iterator __position;
  struct _List_iterator D.165917;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  const struct _List_node_base * __first;
  const struct _List_node_base * const __last$_M_node;
  struct _List_const_iterator __first;
  struct _List_const_iterator __last;
  struct list __tmp;
  struct _Node * __tmp;
  struct _List_node_base * __position;
  struct iterator __position;
  struct _List_const_iterator __first;
  struct _List_const_iterator __last;
  struct iterator D.165845;
  struct _List_node_base * const __first$_M_node;
  struct iterator __first;
  struct iterator __last;
  const struct _List_node_base * __first2$_M_node;
  struct _List_node_base * __first1$_M_node;
  struct const_iterator __last2;
  struct const_iterator __first2;
  struct iterator __last1;
  struct iterator __first1;
  struct iterator D.90274;
  struct _List_node_base * _7;
  struct Flit * _9;
  const struct _List_node_base * _11;
  long unsigned int _30;
  long unsigned int _31;
  struct _List_node_base * _32;
  const long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  bool _41;
  struct _List_node * _48;
  struct Flit * _50;
  struct _List_node_base * _52;
  long unsigned int _53;
  long unsigned int _54;
  bool _61;
  bool _62;
  bool _63;
  struct _List_node_base * prephitmp_78;
  struct _List_node_base * pretmp_93;
  bool _112;
  bool _114;

  <bb 2>:
  if (this_4(D) != __x_5(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 24>;

  <bb 4>:
  __first1$_M_node_17 = MEM[(struct _List_node_base * *)this_4(D)];
  # DEBUG D#356 => this_4(D)
  # DEBUG this => D#356
  # DEBUG this => NULL
  # DEBUG __x => __first1$_M_node_17
  # DEBUG __first1$_M_node => __first1$_M_node_17
  # DEBUG this => this_4(D)
  _7 = &this_4(D)->D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _7
  # DEBUG __last1$_M_node => _7
  __first2$_M_node_16 = MEM[(struct _List_node_base * *)__x_5(D)];
  # DEBUG D#312 => __x_5(D)
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => __first2$_M_node_16
  # DEBUG __first2$_M_node => __first2$_M_node_16
  # DEBUG this => __x_5(D)
  _11 = &__x_5(D)->D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _11
  # DEBUG __last2$_M_node => _11
  # DEBUG __first2$_M_node => __first2$_M_node_16
  # DEBUG __first1$_M_node => __first1$_M_node_17
  # DEBUG this => &__first1
  # DEBUG __x => &__last1
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  _61 = _11 != __first2$_M_node_16;
  _62 = _7 != __first1$_M_node_17;
  _63 = _61 & _62;
  if (_63 != 0)
    goto <bb 25>;
  else
    goto <bb 29>;

  <bb 5>:

  <bb 6>:
  # __first1$_M_node_49 = PHI <__first1$_M_node_72(5), __first1$_M_node_29(7)>
  # DEBUG __first$_M_node => __first1$_M_node_49
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => this_4(D)
  # DEBUG __position$_M_node => __first1$_M_node_49
  __first1$_M_node_29 = __first1$_M_node_49->_M_next;
  # DEBUG this => &__ret
  # DEBUG __x => __first1$_M_node_29
  # DEBUG __ret$_M_node => __first1$_M_node_29
  # DEBUG this => &__position
  # DEBUG this => this_4(D)
  # DEBUG __position => __first1$_M_node_49
  # DEBUG __position$_M_node => __first1$_M_node_49
  # DEBUG D#1069 => &this_4(D)->D.71295
  # DEBUG D#362 => D#1069
  # DEBUG __n => 1
  # DEBUG this => D#362
  _30 = MEM[(long unsigned int *)this_4(D) + 16B];
  _31 = _30 + 18446744073709551615;
  MEM[(long unsigned int *)this_4(D) + 16B] = _31;
  std::__detail::_List_node_base::_M_unhook (__first1$_M_node_49);
  # DEBUG __n => __first1$_M_node_49
  # DEBUG D#1070 => &MEM[(struct _Node *)__first1$_M_node_49]._M_data
  # DEBUG __r => D#1070
  # DEBUG D#1072 => &this_4(D)->D.71295
  # DEBUG D#1053 => D#1072
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1071 => &this_4(D)->D.71295
  # DEBUG D#563 => D#1071
  # DEBUG __p => __first1$_M_node_49
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __first1$_M_node_49
  # DEBUG this => D#559
  # DEBUG D.165840 => D#560
  operator delete (__first1$_M_node_49);
  # DEBUG D#2231 => {CLOBBER}
  # DEBUG __ret$_M_node => D#2231
  # DEBUG __first$_M_node => __first1$_M_node_29
  # DEBUG __first$_M_node => __first1$_M_node_29
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_7 != __first1$_M_node_29)
    goto <bb 7>;
  else
    goto <bb 3>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  # DEBUG this => this_4(D)
  # DEBUG D#2302 => this_4(D)
  # DEBUG this => D#2302
  # DEBUG D#2301 => D#2302
  # DEBUG D#2300 => &D#2301->D.71295
  # DEBUG D#2299 => D#2300
  # DEBUG this => D#2299
  # DEBUG D#2298 => D#2299
  # DEBUG this => D#2298
  # DEBUG this => NULL
  # DEBUG D.139073 => NULL
  # DEBUG this => NULL
  # DEBUG this => &__tmp
  # DEBUG __a => &D.165881
  # DEBUG this => NULL
  # DEBUG D.139113 => &D.165881
  # DEBUG this => NULL
  # DEBUG D#2304 => &__tmp.D.71295
  # DEBUG this => D#2304
  # DEBUG __a => NULL
  # DEBUG D#1073 => &D#2304->_M_impl
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG D.120317 => NULL
  MEM[(struct _List_impl *)&__tmp]._M_node._M_data = 0;
  # DEBUG this => D#2304
  MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893._M_next = &MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893._M_prev = &MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893;
  # DEBUG D#558 => D#2304
  # DEBUG __n => 0
  # DEBUG this => D#558
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &__tmp
  # DEBUG __first => __first2$_M_node_101
  # DEBUG __last$_M_node => _11
  # DEBUG __first$_M_node => __first2$_M_node_101
  # DEBUG __first$_M_node => __first2$_M_node_101
  # DEBUG this => &__first
  # DEBUG __x => &__last

  <bb 9>:
  # __first2$_M_node_57 = PHI <__first2$_M_node_44(11), __first2$_M_node_101(8)>
  # DEBUG __first$_M_node => __first2$_M_node_57
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4003 => &MEM[(const struct _Node *)__first2$_M_node_57]._M_data
  # DEBUG this => &__tmp
  # DEBUG __x => NULL
  # DEBUG this => &__tmp
  # DEBUG this => NULL
  # DEBUG __x => &__tmp.D.71295._M_impl._M_node.D.37893
  # DEBUG this => &__tmp
  # DEBUG __x => D#4003
  # DEBUG D#1615 => &__tmp
  # DEBUG __x => D#4003
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.165928 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _48 = operator new (24);

  <bb 10>:
  # DEBUG __p => _48
  # DEBUG D#4004 => &MEM[(struct _Node *)_48]._M_data
  # DEBUG __r => D#4004
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4003
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  _50 = MEM[(struct Flit * const &)__first2$_M_node_57 + 16];
  MEM[(struct Flit * *)_48 + 16B] = _50;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _48
  _52 = &MEM[(struct _Node *)_48].D.82395;
  std::__detail::_List_node_base::_M_hook (_52, &__tmp.D.71295._M_impl._M_node.D.37893);
  # DEBUG D#1616 => &__tmp.D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _53 = MEM[(long unsigned int *)&__tmp + 16B];
  _54 = _53 + 1;
  MEM[(long unsigned int *)&__tmp + 16B] = _54;
  # DEBUG this => &__first
  __first2$_M_node_44 = __first2$_M_node_57->_M_next;
  # DEBUG __first$_M_node => __first2$_M_node_44
  # DEBUG __first$_M_node => __first2$_M_node_44
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_11 != __first2$_M_node_44)
    goto <bb 11>;
  else
    goto <bb 17>;

  <bb 11>:
  goto <bb 9>;

<L15>:
  # DEBUG D#2303 => &__tmp.D.71295
  # DEBUG this => D#2303
  # DEBUG this => D#2303
  __tmp_45 = MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_45
  # DEBUG __cur => __tmp_45
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893 == __tmp_45)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # DEBUG D#1055 => &D#2303->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  resx 3

  <bb 14>:

  <bb 15>:
  # __tmp_39 = PHI <__tmp_45(14), __tmp_47(16)>
  # DEBUG __cur => __tmp_39
  # DEBUG __tmp => __tmp_39
  __tmp_47 = __tmp_39->D.82395._M_next;
  # DEBUG __cur => __tmp_47
  # DEBUG D#1054 => &__tmp_39->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#2303
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#2303
  # DEBUG __p => __tmp_39
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_39
  # DEBUG this => D#559
  # DEBUG D.165894 => D#560
  operator delete (__tmp_39);
  # DEBUG __cur => __tmp_47
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893 == __tmp_47)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

  <bb 17>:
  # DEBUG this => &D.165881
  # DEBUG this => &D.165881
  # DEBUG this => this_4(D)
  # DEBUG __position => _7
  # DEBUG __x => &__tmp
  # DEBUG this => &__tmp
  _32 = __tmp.D.71295._M_impl._M_node.D.37893._M_next;
  if (&__tmp.D.71295._M_impl._M_node.D.37893 != _32)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#2559 => this_4(D)
  # DEBUG D#2560 => &__tmp
  # DEBUG this => D#2559
  # DEBUG __x => D#2560
  # DEBUG D#2558 => D#2559
  # DEBUG D#2557 => D#2560
  # DEBUG D#2555 => &D#2557->D.71295
  # DEBUG this => D#2555
  # DEBUG D#2556 => &D#2558->D.71295
  # DEBUG this => D#2556
  # DEBUG D.143592 => D#2553
  # DEBUG D.143591 => D#2554
  # DEBUG this => &__tmp
  # DEBUG this => NULL
  # DEBUG __x => &__tmp.D.71295._M_impl._M_node.D.37893
  # DEBUG D#356 => &__tmp
  # DEBUG this => D#356
  # DEBUG this => NULL
  # DEBUG __x => _32
  # DEBUG this => &__position
  # DEBUG D#2305 => this_4(D)
  # DEBUG __position$_M_node => _7
  # DEBUG __first$_M_node => _32
  # DEBUG __last$_M_node => &__tmp.D.71295._M_impl._M_node.D.37893
  # DEBUG this => D#2305
  std::__detail::_List_node_base::_M_transfer (_7, _32, &__tmp.D.71295._M_impl._M_node.D.37893);
  # DEBUG D#2561 => &__tmp.D.71295
  _33 = MEM[(long unsigned int *)&__tmp + 16B];
  # DEBUG D#2306 => D#2561
  # DEBUG this => D#2306
  # DEBUG D#2562 => &this_4(D)->D.71295
  # DEBUG D#357 => D#2562
  # DEBUG __n => NULL
  # DEBUG this => D#357
  _34 = MEM[(long unsigned int *)this_4(D) + 16B];
  _35 = _33 + _34;
  MEM[(long unsigned int *)this_4(D) + 16B] = _35;
  # DEBUG D#2563 => &__tmp.D.71295
  # DEBUG D#558 => D#2563
  # DEBUG __n => 0
  # DEBUG this => D#558
  MEM[(long unsigned int *)&__tmp + 16B] = 0;
  pretmp_93 = MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893._M_next;

  <bb 19>:
  # prephitmp_78 = PHI <_32(17), pretmp_93(18)>
  # DEBUG this => &__tmp
  # DEBUG D#1056 => &__tmp.D.71295
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  # DEBUG D#4005 => MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893._M_next
  # DEBUG __cur => D#4005
  # DEBUG __cur => D#4005
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893 == prephitmp_78)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  __tmp ={v} {CLOBBER};
  goto <bb 24>;

  <bb 21>:

  <bb 22>:
  # __tmp_1 = PHI <prephitmp_78(21), __tmp_38(23)>
  # DEBUG __cur => __tmp_1
  # DEBUG __tmp => __tmp_1
  __tmp_38 = __tmp_1->D.82395._M_next;
  # DEBUG __cur => __tmp_38
  # DEBUG D#1054 => &__tmp_1->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_1
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_1
  # DEBUG this => D#559
  # DEBUG D.165875 => D#560
  operator delete (__tmp_1);
  # DEBUG __cur => __tmp_38
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893 == __tmp_38)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

  <bb 24>:
  return this_4(D);

  <bb 25>:

  <bb 26>:
  # __first2$_M_node_100 = PHI <__first2$_M_node_16(25), __first2$_M_node_18(28)>
  # __first1$_M_node_71 = PHI <__first1$_M_node_17(25), __first1$_M_node_19(28)>
  # DEBUG __first2$_M_node => __first2$_M_node_100
  # DEBUG __first1$_M_node => __first1$_M_node_71
  # DEBUG this => &__first1
  # DEBUG __x => &__last1
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  # DEBUG this => &__first1
  # DEBUG this => &__first2
  _9 = MEM[(struct Flit * const &)__first2$_M_node_100 + 16];
  MEM[(struct Flit * &)__first1$_M_node_71 + 16] = _9;
  # DEBUG this => &__first1
  __first1$_M_node_19 = __first1$_M_node_71->_M_next;
  # DEBUG __first1$_M_node => __first1$_M_node_19
  # DEBUG this => &__first2
  __first2$_M_node_18 = __first2$_M_node_100->_M_next;
  # DEBUG __first2$_M_node => __first2$_M_node_18
  # DEBUG __first2$_M_node => __first2$_M_node_18
  # DEBUG __first1$_M_node => __first1$_M_node_19
  # DEBUG this => &__first1
  # DEBUG __x => &__last1
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  _41 = _11 != __first2$_M_node_18;
  _112 = _7 != __first1$_M_node_19;
  _114 = _41 & _112;
  if (_114 != 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  # __first2$_M_node_15 = PHI <__first2$_M_node_18(26)>
  # __first1$_M_node_14 = PHI <__first1$_M_node_19(26)>
  goto <bb 29>;

  <bb 28>:
  goto <bb 26>;

  <bb 29>:
  # __first2$_M_node_101 = PHI <__first2$_M_node_15(27), __first2$_M_node_16(4)>
  # __first1$_M_node_72 = PHI <__first1$_M_node_14(27), __first1$_M_node_17(4)>
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  if (_11 == __first2$_M_node_101)
    goto <bb 30>;
  else
    goto <bb 8>;

  <bb 30>:
  # DEBUG __first$_M_node => __first1$_M_node_72
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_7 != __first1$_M_node_72)
    goto <bb 5>;
  else
    goto <bb 3>;

}



;; Function std::__cxx11::list<_Tp, _Alloc>& std::__cxx11::list<_Tp, _Alloc>::operator=(const std::__cxx11::list<_Tp, _Alloc>&) [with _Tp = PacketReplyInfo*; _Alloc = std::allocator<PacketReplyInfo*>] (_ZNSt7__cxx114listIP15PacketReplyInfoSaIS2_EEaSERKS4_, funcdef_no=5234, decl_uid=72865, cgraph_uid=3482, symbol_order=3483)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::__cxx11::list<_Tp, _Alloc>& std::__cxx11::list<_Tp, _Alloc>::operator=(const std::__cxx11::list<_Tp, _Alloc>&) [with _Tp = PacketReplyInfo*; _Alloc = std::allocator<PacketReplyInfo*>] (struct list * const this, const struct list & __x)
{
  struct iterator __position;
  struct _List_iterator D.166039;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  const struct _List_node_base * __first;
  const struct _List_node_base * const __last$_M_node;
  struct _List_const_iterator __first;
  struct _List_const_iterator __last;
  struct list __tmp;
  struct _Node * __tmp;
  struct _List_node_base * __position;
  struct iterator __position;
  struct _List_const_iterator __first;
  struct _List_const_iterator __last;
  struct iterator D.165967;
  struct _List_node_base * const __first$_M_node;
  struct iterator __first;
  struct iterator __last;
  const struct _List_node_base * __first2$_M_node;
  struct _List_node_base * __first1$_M_node;
  struct const_iterator __last2;
  struct const_iterator __first2;
  struct iterator __last1;
  struct iterator __first1;
  struct iterator D.90388;
  struct _List_node_base * _7;
  struct PacketReplyInfo * _9;
  const struct _List_node_base * _11;
  long unsigned int _30;
  long unsigned int _31;
  struct _List_node_base * _32;
  const long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  bool _41;
  struct _List_node * _48;
  struct PacketReplyInfo * _50;
  struct _List_node_base * _52;
  long unsigned int _53;
  long unsigned int _54;
  bool _61;
  bool _62;
  bool _63;
  struct _List_node_base * prephitmp_78;
  struct _List_node_base * pretmp_93;
  bool _112;
  bool _114;

  <bb 2>:
  if (this_4(D) != __x_5(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 24>;

  <bb 4>:
  __first1$_M_node_17 = MEM[(struct _List_node_base * *)this_4(D)];
  # DEBUG D#342 => this_4(D)
  # DEBUG this => D#342
  # DEBUG this => NULL
  # DEBUG __x => __first1$_M_node_17
  # DEBUG __first1$_M_node => __first1$_M_node_17
  # DEBUG this => this_4(D)
  _7 = &this_4(D)->D.73144._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _7
  # DEBUG __last1$_M_node => _7
  __first2$_M_node_16 = MEM[(struct _List_node_base * *)__x_5(D)];
  # DEBUG D#321 => __x_5(D)
  # DEBUG this => D#321
  # DEBUG this => NULL
  # DEBUG __x => __first2$_M_node_16
  # DEBUG __first2$_M_node => __first2$_M_node_16
  # DEBUG this => __x_5(D)
  _11 = &__x_5(D)->D.73144._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _11
  # DEBUG __last2$_M_node => _11
  # DEBUG __first2$_M_node => __first2$_M_node_16
  # DEBUG __first1$_M_node => __first1$_M_node_17
  # DEBUG this => &__first1
  # DEBUG __x => &__last1
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  _61 = _11 != __first2$_M_node_16;
  _62 = _7 != __first1$_M_node_17;
  _63 = _61 & _62;
  if (_63 != 0)
    goto <bb 25>;
  else
    goto <bb 29>;

  <bb 5>:

  <bb 6>:
  # __first1$_M_node_49 = PHI <__first1$_M_node_72(5), __first1$_M_node_29(7)>
  # DEBUG __first$_M_node => __first1$_M_node_49
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => this_4(D)
  # DEBUG __position$_M_node => __first1$_M_node_49
  __first1$_M_node_29 = __first1$_M_node_49->_M_next;
  # DEBUG this => &__ret
  # DEBUG __x => __first1$_M_node_29
  # DEBUG __ret$_M_node => __first1$_M_node_29
  # DEBUG this => &__position
  # DEBUG this => this_4(D)
  # DEBUG __position => __first1$_M_node_49
  # DEBUG __position$_M_node => __first1$_M_node_49
  # DEBUG D#1091 => &this_4(D)->D.73144
  # DEBUG D#355 => D#1091
  # DEBUG __n => 1
  # DEBUG this => D#355
  _30 = MEM[(long unsigned int *)this_4(D) + 16B];
  _31 = _30 + 18446744073709551615;
  MEM[(long unsigned int *)this_4(D) + 16B] = _31;
  std::__detail::_List_node_base::_M_unhook (__first1$_M_node_49);
  # DEBUG __n => __first1$_M_node_49
  # DEBUG D#1092 => &MEM[(struct _Node *)__first1$_M_node_49]._M_data
  # DEBUG __r => D#1092
  # DEBUG D#1094 => &this_4(D)->D.73144
  # DEBUG D#1081 => D#1094
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1093 => &this_4(D)->D.73144
  # DEBUG D#571 => D#1093
  # DEBUG __p => __first1$_M_node_49
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __first1$_M_node_49
  # DEBUG this => D#567
  # DEBUG D.165962 => D#568
  operator delete (__first1$_M_node_49);
  # DEBUG D#2232 => {CLOBBER}
  # DEBUG __ret$_M_node => D#2232
  # DEBUG __first$_M_node => __first1$_M_node_29
  # DEBUG __first$_M_node => __first1$_M_node_29
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_7 != __first1$_M_node_29)
    goto <bb 7>;
  else
    goto <bb 3>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  # DEBUG this => this_4(D)
  # DEBUG D#2311 => this_4(D)
  # DEBUG this => D#2311
  # DEBUG D#2310 => D#2311
  # DEBUG D#2309 => &D#2310->D.73144
  # DEBUG D#2308 => D#2309
  # DEBUG this => D#2308
  # DEBUG D#2307 => D#2308
  # DEBUG this => D#2307
  # DEBUG this => NULL
  # DEBUG D.139147 => NULL
  # DEBUG this => NULL
  # DEBUG this => &__tmp
  # DEBUG __a => &D.166003
  # DEBUG this => NULL
  # DEBUG D.139187 => &D.166003
  # DEBUG this => NULL
  # DEBUG D#2313 => &__tmp.D.73144
  # DEBUG this => D#2313
  # DEBUG __a => NULL
  # DEBUG D#1095 => &D#2313->_M_impl
  # DEBUG this => D#1095
  # DEBUG __a => NULL
  # DEBUG this => D#1095
  # DEBUG __a => NULL
  # DEBUG this => D#1095
  # DEBUG D.120663 => NULL
  MEM[(struct _List_impl *)&__tmp]._M_node._M_data = 0;
  # DEBUG this => D#2313
  MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893._M_next = &MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893._M_prev = &MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893;
  # DEBUG D#566 => D#2313
  # DEBUG __n => 0
  # DEBUG this => D#566
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &__tmp
  # DEBUG __first => __first2$_M_node_101
  # DEBUG __last$_M_node => _11
  # DEBUG __first$_M_node => __first2$_M_node_101
  # DEBUG __first$_M_node => __first2$_M_node_101
  # DEBUG this => &__first
  # DEBUG __x => &__last

  <bb 9>:
  # __first2$_M_node_57 = PHI <__first2$_M_node_44(11), __first2$_M_node_101(8)>
  # DEBUG __first$_M_node => __first2$_M_node_57
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4007 => &MEM[(const struct _Node *)__first2$_M_node_57]._M_data
  # DEBUG this => &__tmp
  # DEBUG __x => NULL
  # DEBUG this => &__tmp
  # DEBUG this => NULL
  # DEBUG __x => &__tmp.D.73144._M_impl._M_node.D.37893
  # DEBUG this => &__tmp
  # DEBUG __x => D#4007
  # DEBUG D#1584 => &__tmp
  # DEBUG __x => D#4007
  # DEBUG this => D#1584
  # DEBUG D#1583 => D#1584
  # DEBUG D#1582 => D#1584
  # DEBUG D#1581 => &D#1582->D.73144
  # DEBUG D#1579 => D#1581
  # DEBUG this => D#1579
  # DEBUG D#1578 => D#1579
  # DEBUG D#1577 => &D#1578->_M_impl
  # DEBUG D#1575 => D#1577
  # DEBUG D#1576 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1575
  # DEBUG D.166050 => D#1576
  # DEBUG D#1574 => D#1575
  # DEBUG D#1573 => D#1574
  # DEBUG this => D#1573
  _48 = operator new (24);

  <bb 10>:
  # DEBUG __p => _48
  # DEBUG D#4008 => &MEM[(struct _Node *)_48]._M_data
  # DEBUG __r => D#4008
  # DEBUG D#1580 => &D#1583->D.73144
  # DEBUG D#1081 => D#1580
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4007
  # DEBUG this => D#616
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115696 => D#20
  _50 = MEM[(struct PacketReplyInfo * const &)__first2$_M_node_57 + 16];
  MEM[(struct PacketReplyInfo * *)_48 + 16B] = _50;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _48
  _52 = &MEM[(struct _Node *)_48].D.82523;
  std::__detail::_List_node_base::_M_hook (_52, &__tmp.D.73144._M_impl._M_node.D.37893);
  # DEBUG D#1585 => &__tmp.D.73144
  # DEBUG D#352 => D#1585
  # DEBUG __n => 1
  # DEBUG this => D#352
  _53 = MEM[(long unsigned int *)&__tmp + 16B];
  _54 = _53 + 1;
  MEM[(long unsigned int *)&__tmp + 16B] = _54;
  # DEBUG this => &__first
  __first2$_M_node_44 = __first2$_M_node_57->_M_next;
  # DEBUG __first$_M_node => __first2$_M_node_44
  # DEBUG __first$_M_node => __first2$_M_node_44
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_11 != __first2$_M_node_44)
    goto <bb 11>;
  else
    goto <bb 17>;

  <bb 11>:
  goto <bb 9>;

<L15>:
  # DEBUG D#2312 => &__tmp.D.73144
  # DEBUG this => D#2312
  # DEBUG this => D#2312
  __tmp_45 = MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_45
  # DEBUG __cur => __tmp_45
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893 == __tmp_45)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # DEBUG D#1083 => &D#2312->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  resx 3

  <bb 14>:

  <bb 15>:
  # __tmp_39 = PHI <__tmp_45(14), __tmp_47(16)>
  # DEBUG __cur => __tmp_39
  # DEBUG __tmp => __tmp_39
  __tmp_47 = __tmp_39->D.82523._M_next;
  # DEBUG __cur => __tmp_47
  # DEBUG D#1082 => &__tmp_39->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#2312
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#2312
  # DEBUG __p => __tmp_39
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_39
  # DEBUG this => D#567
  # DEBUG D.166016 => D#568
  operator delete (__tmp_39);
  # DEBUG __cur => __tmp_47
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893 == __tmp_47)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

  <bb 17>:
  # DEBUG this => &D.166003
  # DEBUG this => &D.166003
  # DEBUG this => this_4(D)
  # DEBUG __position => _7
  # DEBUG __x => &__tmp
  # DEBUG this => &__tmp
  _32 = __tmp.D.73144._M_impl._M_node.D.37893._M_next;
  if (&__tmp.D.73144._M_impl._M_node.D.37893 != _32)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#2623 => this_4(D)
  # DEBUG D#2624 => &__tmp
  # DEBUG this => D#2623
  # DEBUG __x => D#2624
  # DEBUG D#2622 => D#2623
  # DEBUG D#2621 => D#2624
  # DEBUG D#2619 => &D#2621->D.73144
  # DEBUG this => D#2619
  # DEBUG D#2620 => &D#2622->D.73144
  # DEBUG this => D#2620
  # DEBUG D.144756 => D#2617
  # DEBUG D.144755 => D#2618
  # DEBUG this => &__tmp
  # DEBUG this => NULL
  # DEBUG __x => &__tmp.D.73144._M_impl._M_node.D.37893
  # DEBUG D#342 => &__tmp
  # DEBUG this => D#342
  # DEBUG this => NULL
  # DEBUG __x => _32
  # DEBUG this => &__position
  # DEBUG D#2314 => this_4(D)
  # DEBUG __position$_M_node => _7
  # DEBUG __first$_M_node => _32
  # DEBUG __last$_M_node => &__tmp.D.73144._M_impl._M_node.D.37893
  # DEBUG this => D#2314
  std::__detail::_List_node_base::_M_transfer (_7, _32, &__tmp.D.73144._M_impl._M_node.D.37893);
  # DEBUG D#2625 => &__tmp.D.73144
  _33 = MEM[(long unsigned int *)&__tmp + 16B];
  # DEBUG D#2315 => D#2625
  # DEBUG this => D#2315
  # DEBUG D#2626 => &this_4(D)->D.73144
  # DEBUG D#352 => D#2626
  # DEBUG __n => NULL
  # DEBUG this => D#352
  _34 = MEM[(long unsigned int *)this_4(D) + 16B];
  _35 = _33 + _34;
  MEM[(long unsigned int *)this_4(D) + 16B] = _35;
  # DEBUG D#2627 => &__tmp.D.73144
  # DEBUG D#566 => D#2627
  # DEBUG __n => 0
  # DEBUG this => D#566
  MEM[(long unsigned int *)&__tmp + 16B] = 0;
  pretmp_93 = MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893._M_next;

  <bb 19>:
  # prephitmp_78 = PHI <_32(17), pretmp_93(18)>
  # DEBUG this => &__tmp
  # DEBUG D#1084 => &__tmp.D.73144
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  # DEBUG D#4009 => MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893._M_next
  # DEBUG __cur => D#4009
  # DEBUG __cur => D#4009
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893 == prephitmp_78)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  __tmp ={v} {CLOBBER};
  goto <bb 24>;

  <bb 21>:

  <bb 22>:
  # __tmp_1 = PHI <prephitmp_78(21), __tmp_38(23)>
  # DEBUG __cur => __tmp_1
  # DEBUG __tmp => __tmp_1
  __tmp_38 = __tmp_1->D.82523._M_next;
  # DEBUG __cur => __tmp_38
  # DEBUG D#1082 => &__tmp_1->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_1
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_1
  # DEBUG this => D#567
  # DEBUG D.165997 => D#568
  operator delete (__tmp_1);
  # DEBUG __cur => __tmp_38
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.37893 == __tmp_38)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

  <bb 24>:
  return this_4(D);

  <bb 25>:

  <bb 26>:
  # __first2$_M_node_100 = PHI <__first2$_M_node_16(25), __first2$_M_node_18(28)>
  # __first1$_M_node_71 = PHI <__first1$_M_node_17(25), __first1$_M_node_19(28)>
  # DEBUG __first2$_M_node => __first2$_M_node_100
  # DEBUG __first1$_M_node => __first1$_M_node_71
  # DEBUG this => &__first1
  # DEBUG __x => &__last1
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  # DEBUG this => &__first1
  # DEBUG this => &__first2
  _9 = MEM[(struct PacketReplyInfo * const &)__first2$_M_node_100 + 16];
  MEM[(struct PacketReplyInfo * &)__first1$_M_node_71 + 16] = _9;
  # DEBUG this => &__first1
  __first1$_M_node_19 = __first1$_M_node_71->_M_next;
  # DEBUG __first1$_M_node => __first1$_M_node_19
  # DEBUG this => &__first2
  __first2$_M_node_18 = __first2$_M_node_100->_M_next;
  # DEBUG __first2$_M_node => __first2$_M_node_18
  # DEBUG __first2$_M_node => __first2$_M_node_18
  # DEBUG __first1$_M_node => __first1$_M_node_19
  # DEBUG this => &__first1
  # DEBUG __x => &__last1
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  _41 = _11 != __first2$_M_node_18;
  _112 = _7 != __first1$_M_node_19;
  _114 = _41 & _112;
  if (_114 != 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  # __first2$_M_node_15 = PHI <__first2$_M_node_18(26)>
  # __first1$_M_node_14 = PHI <__first1$_M_node_19(26)>
  goto <bb 29>;

  <bb 28>:
  goto <bb 26>;

  <bb 29>:
  # __first2$_M_node_101 = PHI <__first2$_M_node_15(27), __first2$_M_node_16(4)>
  # __first1$_M_node_72 = PHI <__first1$_M_node_14(27), __first1$_M_node_17(4)>
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  if (_11 == __first2$_M_node_101)
    goto <bb 30>;
  else
    goto <bb 8>;

  <bb 30>:
  # DEBUG __first$_M_node => __first1$_M_node_72
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_7 != __first1$_M_node_72)
    goto <bb 5>;
  else
    goto <bb 3>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<BufferState*>*; _ForwardIterator = std::vector<BufferState*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIP11BufferStateSaIS4_EES7_EET0_T_S9_S8_, funcdef_no=5311, decl_uid=89901, cgraph_uid=3559, symbol_order=3560)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<BufferState*>*; _ForwardIterator = std::vector<BufferState*>*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  struct Stats * * D.166177;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  struct BufferState * * _8;
  void * _12;
  long unsigned int _20;
  struct BufferState * * const _27;
  struct BufferState * * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  struct BufferState * * _36;
  struct BufferState * * const _37;
  struct BufferState * * const _38;
  long int __last.151_39;
  long int __first.152_40;
  long int _41;
  long unsigned int _43;
  struct BufferState * * _45;
  struct Stats * * _46;
  struct Stats * * iftmp.356_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_71 = PHI <__first_5(D)(3), __first_10(17)>
  # __result_70 = PHI <__result_4(D)(3), __result_11(17)>
  # DEBUG __cur => __result_70
  # DEBUG __first => __first_71
  # DEBUG __r => __result_70
  # DEBUG __p => NULL
  # DEBUG __value => __first_71
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.138200 => D#20
  if (__result_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_70
  # DEBUG __x => __first_71
  # DEBUG D#2253 => &MEM[(const struct vector *)__first_71].D.68817
  # DEBUG this => D#2253
  # DEBUG __a => NULL
  _27 = MEM[(struct BufferState * * *)__first_71];
  # DEBUG D#205 => __first_71
  _28 = MEM[(struct BufferState * * *)__first_71 + 8B];
  # DEBUG D#205 => __first_71
  # DEBUG this => D#205
  # DEBUG this => D#205
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 8;
  _33 = (size_type) _32;
  # DEBUG D#2255 => &__result_70->D.68817
  # DEBUG this => D#2255
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1733 => &D#2255->_M_impl
  # DEBUG this => D#1733
  # DEBUG __a => NULL
  # DEBUG this => D#1733
  # DEBUG __a => NULL
  # DEBUG this => D#1733
  # DEBUG D.119584 => NULL
  MEM[(struct _Vector_impl *)__result_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_end_of_storage = 0B;
  # DEBUG this => D#2255
  # DEBUG __n => NULL
  # DEBUG D#1731 => D#2255
  # DEBUG __n => _33
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _33
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#2118
  # DEBUG D.166175 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_33 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_9 = PHI <__result_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __result_35 = PHI <__result_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.356_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_start = iftmp.356_47;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_finish = iftmp.356_47;
  _36 = iftmp.356_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#2254 => &__result_70->D.68817
  # DEBUG this => D#2254
  _37 = MEM[(struct BufferState * * *)__first_71 + 8B];
  # DEBUG D#299 => __first_71
  # DEBUG this => D#299
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(struct BufferState * * *)__first_71];
  # DEBUG D#300 => __first_71
  # DEBUG this => D#300
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.166139 => D#2252
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.151_39 = (long int) _37;
  __first.152_40 = (long int) _38;
  _41 = __last.151_39 - __first.152_40;
  _Num_42 = _41 /[ex] 8;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.356_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.356_47 + prephitmp_2;
  __result_70->D.68817._M_impl._M_finish = _45;

  <bb 15>:
  __first_10 = __first_71 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_70 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __result_18 = PHI <__result_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __result_63 = PHI <__result_18(16), __result_4(D)(2)>
  return __result_63;

<L7>:

  # __result_44 = PHI <__result_35(10), __result_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __result_64 = PHI <__result_4(D)(22), __result_17(26)>
  # DEBUG __first => __result_64
  # DEBUG __r => __result_64
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#998
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _8 = MEM[(struct _Vector_base *)__result_64]._M_impl._M_start;
  # DEBUG D#995 => (long int) _8
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _8
  # DEBUG __n => D#992
  if (_8 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _8
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _8
  # DEBUG this => D#984
  # DEBUG D.138225 => D#985
  operator delete (_8);

  <bb 25>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  MEM[(struct  &)__result_64] ={v} {CLOBBER};
  __result_17 = __result_64 + 24;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<BufferState*>; _Alloc = std::allocator<std::vector<BufferState*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<BufferState*>*, std::vector<std::vector<BufferState*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<BufferState*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<BufferState*>] (_ZNSt6vectorIS_IP11BufferStateSaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_, funcdef_no=3869, decl_uid=58510, cgraph_uid=2117, symbol_order=2118)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<BufferState*>; _Alloc = std::allocator<std::vector<BufferState*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<BufferState*>*, std::vector<std::vector<BufferState*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<BufferState*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<BufferState*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct Stats * * D.166437;
  const ptrdiff_t _Num;
  const long unsigned int D.166387;
  const size_type __len;
  size_type D.166386;
  size_type __n;
  struct vector * D.166377;
  struct vector * D.166365;
  struct vector * __first;
  long unsigned int __n;
  struct Stats * * D.166337;
  const ptrdiff_t _Num;
  struct vector * D.166284;
  struct vector * __first;
  long unsigned int __n;
  struct Stats * * D.166256;
  const ptrdiff_t _Num;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct BufferState * * const _17;
  struct vector * prephitmp_18;
  struct vector * _20;
  struct vector * const _23;
  bool _24;
  long int __last.154_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long int pretmp_52;
  long unsigned int _55;
  struct BufferState * * const prephitmp_56;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  long int pretmp_66;
  struct vector * _67;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct BufferState * * _85;
  long int _87;
  long unsigned int prephitmp_88;
  long unsigned int _90;
  struct vector * _91;
  struct BufferState * * _92;
  struct BufferState * * _94;
  struct BufferState * * _95;
  struct BufferState * * _98;
  struct BufferState * * const pretmp_100;
  struct BufferState * * const _138;
  struct BufferState * * const _153;
  struct BufferState * * const _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  size_type _159;
  struct BufferState * * _162;
  struct BufferState * * _171;
  struct Stats * * _172;
  struct Stats * * iftmp.356_173;
  void * _178;
  struct BufferState * * _180;
  struct BufferState * * const _182;
  long int _183;
  long int _184;
  long int _185;
  long int _186;
  size_type _187;
  const ptrdiff_t pretmp_188;
  struct BufferState * * _190;
  struct BufferState * * const _191;
  struct BufferState * * const _192;
  long int __last.151_193;
  long int __first.152_194;
  long int _195;
  long unsigned int _197;
  struct BufferState * * _199;
  long unsigned int _200;
  struct Stats * * _201;
  struct Stats * * iftmp.356_202;
  long unsigned int pretmp_203;
  long unsigned int prephitmp_204;
  void * _207;
  struct BufferState * * _209;
  struct vector * _211;
  long int _215;
  long int _216;
  long int _217;
  long unsigned int _219;
  long int pretmp_220;
  struct BufferState * * const pretmp_222;
  struct vector * pretmp_224;
  struct BufferState * * const _225;
  long int _226;
  long int _227;
  long int _228;
  long int _229;
  size_type _230;
  struct BufferState * * _233;
  struct BufferState * * _242;
  long unsigned int _243;
  struct Stats * * _244;
  struct Stats * * iftmp.356_245;
  struct BufferState * * const pretmp_284;
  const ptrdiff_t prephitmp_317;
  struct vector * const prephitmp_323;
  long int pretmp_324;
  const ptrdiff_t prephitmp_327;
  struct BufferState * * const prephitmp_329;
  long int pretmp_331;
  bool _332;
  long int _333;
  const ptrdiff_t pretmp_336;
  difference_type _337;
  long int _339;
  difference_type _340;
  long int _341;
  long int pretmp_343;
  struct BufferState * * const pretmp_344;
  long unsigned int pretmp_345;
  long unsigned int prephitmp_346;
  long unsigned int prephitmp_347;
  struct vector * const pretmp_348;
  long unsigned int pretmp_349;
  long int prephitmp_350;
  long int pretmp_351;
  long int _355;
  long int _356;
  bool _358;
  long unsigned int pretmp_370;
  long unsigned int prephitmp_371;
  long unsigned int pretmp_372;
  long unsigned int prephitmp_373;
  long unsigned int pretmp_374;
  long unsigned int prephitmp_375;
  long unsigned int pretmp_378;
  long unsigned int prephitmp_379;

  <bb 2>:
  # DEBUG D#4029 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#4029
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 102>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.58587._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.58587._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 61>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#2253 => &MEM[(const struct vector *)__x_28(D)].D.68817
  # DEBUG this => D#2253
  # DEBUG __a => NULL
  _153 = MEM[(struct BufferState * * *)__x_28(D)];
  # DEBUG D#205 => __x_28(D)
  _154 = MEM[(struct BufferState * * *)__x_28(D) + 8B];
  # DEBUG D#205 => __x_28(D)
  # DEBUG this => D#205
  # DEBUG this => D#205
  _155 = (long int) _154;
  _156 = (long int) _153;
  _157 = _155 - _156;
  _158 = _157 /[ex] 8;
  _159 = (size_type) _158;
  # DEBUG D#2255 => &__x_copy.D.68817
  # DEBUG this => D#2255
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1733 => &D#2255->_M_impl
  # DEBUG this => D#1733
  # DEBUG __a => NULL
  # DEBUG this => D#1733
  # DEBUG __a => NULL
  # DEBUG this => D#1733
  # DEBUG D.119584 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#2255
  # DEBUG __n => NULL
  # DEBUG D#1731 => D#2255
  # DEBUG __n => _159
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_159 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_345 = (long unsigned int) _157;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _159
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _159
  # DEBUG this => D#2118
  # DEBUG D.166254 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_159 > 2305843009213693951)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _55 = (long unsigned int) _157;
  _172 = operator new (_55);
  pretmp_348 = MEM[(struct vector * const &)this_9(D) + 8];
  pretmp_351 = (long int) pretmp_348;
  pretmp_344 = MEM[(struct BufferState * * *)__x_28(D) + 8B];
  pretmp_284 = MEM[(struct BufferState * * *)__x_28(D)];
  pretmp_331 = (long int) pretmp_344;
  pretmp_343 = (long int) pretmp_284;
  pretmp_324 = pretmp_331 - pretmp_343;
  pretmp_188 = pretmp_324 /[ex] 8;
  pretmp_370 = (long unsigned int) pretmp_324;

  <bb 9>:
  # iftmp.356_173 = PHI <0B(5), _172(8)>
  # prephitmp_323 = PHI <_12(5), pretmp_348(8)>
  # prephitmp_350 = PHI <_13(5), pretmp_351(8)>
  # prephitmp_346 = PHI <pretmp_345(5), _55(8)>
  # prephitmp_329 = PHI <_153(5), pretmp_284(8)>
  # prephitmp_317 = PHI <_158(5), pretmp_188(8)>
  # prephitmp_371 = PHI <pretmp_345(5), pretmp_370(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = iftmp.356_173;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = iftmp.356_173;
  _162 = iftmp.356_173 + prephitmp_346;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _162;
  # DEBUG D#2254 => &__x_copy.D.68817
  # DEBUG this => D#2254
  # DEBUG D#4022 => MEM[(struct BufferState * * *)__x_28(D) + 8B]
  # DEBUG D#299 => __x_28(D)
  # DEBUG this => D#299
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#4021 => MEM[(struct BufferState * * *)__x_28(D)]
  # DEBUG D#300 => __x_28(D)
  # DEBUG this => D#300
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#4021
  # DEBUG __last => D#4022
  # DEBUG __result => NULL
  # DEBUG D.166218 => D#2252
  # DEBUG __first => D#4021
  # DEBUG __last => D#4022
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#4021
  # DEBUG __last => D#4022
  # DEBUG __result => NULL
  # DEBUG __first => D#4021
  # DEBUG __last => D#4022
  # DEBUG __result => NULL
  # DEBUG __it => D#4022
  # DEBUG __it$_M_current => D#4022
  # DEBUG __it => D#4021
  # DEBUG __it$_M_current => D#4021
  # DEBUG __first => D#4021
  # DEBUG __last => D#4022
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#4022
  # DEBUG __it => D#4022
  # DEBUG this => NULL
  # DEBUG __it => D#4021
  # DEBUG __it => D#4021
  # DEBUG this => NULL
  # DEBUG __first => D#4021
  # DEBUG __last => D#4022
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#4021
  # DEBUG __last => D#4022
  # DEBUG __result => NULL
  # DEBUG D#4020 => (long int) D#4022
  # DEBUG D#4019 => (long int) D#4021
  # DEBUG D#4018 => D#4020 - D#4019
  # DEBUG _Num => D#4018 /[ex] 8
  if (prephitmp_317 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __builtin_memmove (iftmp.356_173, prephitmp_329, prephitmp_371);

  <bb 11>:
  _171 = iftmp.356_173 + prephitmp_371;
  __x_copy.D.68817._M_impl._M_finish = _171;
  # DEBUG this => this_9(D)
  # DEBUG D#301 => &this_9(D)->D.58587._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#301
  # DEBUG D#4017 => MEM[(struct vector * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.84373
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84373
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_350 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#4017
  if (__n_7(D) < __elems_after_57)
    goto <bb 12>;
  else
    goto <bb 26>;

  <bb 12>:
  # DEBUG D#2510 => &this_9(D)->D.58587
  # DEBUG this => D#2510
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_323 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#4017
  # DEBUG __result => D#4017
  # DEBUG __alloc => D#2258
  # DEBUG D#2257 => D#2258
  # DEBUG D#2256 => D#2257
  # DEBUG __first => __last_61
  # DEBUG __last => D#4017
  # DEBUG __result => D#4017
  # DEBUG D.142360 => D#2256
  # DEBUG __first => __last_61
  # DEBUG __last => D#4017
  # DEBUG __result => D#4017
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<BufferState*>*, std::vector<BufferState*>*> (__last_61, prephitmp_323, prephitmp_323);

  <bb 13>:
  _62 = this_9(D)->D.58587._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.58587._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#4029
  # DEBUG __last => __last_61
  # DEBUG __result => D#4017
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4029
  # DEBUG __it => D#4029
  # DEBUG __first => D#4029
  # DEBUG __last => __last_61
  # DEBUG __result => D#4017
  # DEBUG __it => D#4017
  # DEBUG __it => D#4017
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4029
  # DEBUG __it => D#4029
  # DEBUG __first => D#4029
  # DEBUG __last => __last_61
  # DEBUG __result => D#4017
  # DEBUG __simple => 0
  # DEBUG __first => D#4029
  # DEBUG __last => __last_61
  # DEBUG __result => D#4017
  __last.154_25 = (long int) __last_61;
  _78 = __last.154_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#4017
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#4029
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4029
  if (__position_22 == _67)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 15>:

  <bb 16>:
  # __old_finish_366 = PHI <prephitmp_323(15), __old_finish_65(19)>
  # __last_367 = PHI <__last_61(15), __last_68(19)>
  # __n_361 = PHI <__n_73(15), __n_58(19)>
  # DEBUG __n => __n_361
  # DEBUG __result => __old_finish_366
  # DEBUG __last => __last_367
  __last_68 = __last_367 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_366 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<BufferState*>::operator= (__old_finish_65, __last_68);
  goto <bb 18>;

<L26>:
  goto <bb 104> (<L10>);

  <bb 18>:
  __n_58 = __n_361 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 16>;

  <bb 20>:
  # DEBUG this => &__x_copy
  # DEBUG D#998 => &__x_copy.D.68817
  # DEBUG this => D#998
  # DEBUG D#1001 => __x_copy.D.68817._M_impl._M_finish
  # DEBUG D#1000 => __x_copy.D.68817._M_impl._M_start
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG D#999 => &__x_copy.D.68817
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _85 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#995 => (long int) _85
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _85
  # DEBUG __n => D#992
  if (_85 != 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 21>:

  <bb 22>:
  # __position_365 = PHI <__position_22(21), __position_81(25)>
  # DEBUG __first => __position_365
  std::vector<BufferState*>::operator= (__position_365, &__x_copy);
  goto <bb 24>;

<L27>:
  goto <bb 104> (<L10>);

  <bb 24>:
  __position_81 = __position_365 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 20>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 22>;

  <bb 26>:
  # DEBUG D#2511 => &this_9(D)->D.58587
  # DEBUG this => D#2511
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#4017
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.142406 => D#2261
  # DEBUG __first => D#4017
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => D#4017
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => D#4017
  # DEBUG __cur => D#4017
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 42>;
  else
    goto <bb 27>;

  <bb 27>:

  <bb 28>:
  # __n_360 = PHI <__n_70(27), __n_176(41)>
  # __old_finish_290 = PHI <prephitmp_323(27), __old_finish_177(41)>
  # DEBUG __cur => __old_finish_290
  # DEBUG __n => __n_360
  # DEBUG __r => __old_finish_290
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.138200 => D#20
  if (__old_finish_290 != 0B)
    goto <bb 29>;
  else
    goto <bb 39>;

  <bb 29>:
  # DEBUG this => __old_finish_290
  # DEBUG __x => &__x_copy
  # DEBUG D#2253 => &__x_copy.D.68817
  # DEBUG this => D#2253
  # DEBUG __a => NULL
  _138 = MEM[(struct BufferState * * *)&__x_copy];
  # DEBUG D#205 => &__x_copy
  _182 = MEM[(struct BufferState * * *)&__x_copy + 8B];
  # DEBUG D#205 => &__x_copy
  # DEBUG this => D#205
  # DEBUG this => D#205
  _183 = (long int) _182;
  _184 = (long int) _138;
  _185 = _183 - _184;
  _186 = _185 /[ex] 8;
  _187 = (size_type) _186;
  # DEBUG D#2255 => &__old_finish_290->D.68817
  # DEBUG this => D#2255
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1733 => &D#2255->_M_impl
  # DEBUG this => D#1733
  # DEBUG __a => NULL
  # DEBUG this => D#1733
  # DEBUG __a => NULL
  # DEBUG this => D#1733
  # DEBUG D.119584 => NULL
  MEM[(struct _Vector_impl *)__old_finish_290]._M_start = 0B;
  MEM[(struct _Vector_impl *)__old_finish_290]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__old_finish_290]._M_end_of_storage = 0B;
  # DEBUG this => D#2255
  # DEBUG __n => NULL
  # DEBUG D#1731 => D#2255
  # DEBUG __n => _187
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_187 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  pretmp_372 = (long unsigned int) _185;
  goto <bb 35>;

  <bb 31>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _187
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _187
  # DEBUG this => D#2118
  # DEBUG D.166335 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_187 > 2305843009213693951)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # __old_finish_213 = PHI <__old_finish_290(31)>
  std::__throw_bad_alloc ();

  <bb 33>:
  _200 = (long unsigned int) _185;
  _201 = operator new (_200);
  goto <bb 35>;

  # __old_finish_175 = PHI <__old_finish_290(33)>
<L29>:
  goto <bb 45> (<L19>);

  <bb 35>:
  # iftmp.356_202 = PHI <0B(30), _201(33)>
  # prephitmp_373 = PHI <pretmp_372(30), _200(33)>
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_start = iftmp.356_202;
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_finish = iftmp.356_202;
  _190 = iftmp.356_202 + prephitmp_373;
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_end_of_storage = _190;
  # DEBUG D#2254 => &__old_finish_290->D.68817
  # DEBUG this => D#2254
  _191 = MEM[(struct BufferState * * *)&__x_copy + 8B];
  # DEBUG D#299 => &__x_copy
  # DEBUG this => D#299
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _192 = MEM[(struct BufferState * * *)&__x_copy];
  # DEBUG D#300 => &__x_copy
  # DEBUG this => D#300
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG D.166299 => D#2252
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => _191
  # DEBUG __it$_M_current => _191
  # DEBUG __it => _192
  # DEBUG __it$_M_current => _192
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _191
  # DEBUG __it => _191
  # DEBUG this => NULL
  # DEBUG __it => _192
  # DEBUG __it => _192
  # DEBUG this => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  __last.151_193 = (long int) _191;
  __first.152_194 = (long int) _192;
  _195 = __last.151_193 - __first.152_194;
  _Num_196 = _195 /[ex] 8;
  # DEBUG _Num => _Num_196
  if (_Num_196 != 0)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  pretmp_374 = (long unsigned int) _195;
  goto <bb 38>;

  <bb 37>:
  _197 = (long unsigned int) _195;
  __builtin_memmove (iftmp.356_202, _192, _197);

  <bb 38>:
  # prephitmp_375 = PHI <pretmp_374(36), _197(37)>
  _199 = iftmp.356_202 + prephitmp_375;
  __old_finish_290->D.68817._M_impl._M_finish = _199;

  <bb 39>:
  __n_176 = __n_360 + 18446744073709551615;
  # DEBUG __n => __n_176
  __old_finish_177 = __old_finish_290 + 24;
  # DEBUG __cur => __old_finish_177
  # DEBUG __cur => __old_finish_177
  # DEBUG __n => __n_176
  if (__n_176 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # __old_finish_221 = PHI <__old_finish_177(39)>
  goto <bb 42>;

  <bb 41>:
  goto <bb 28>;

  <bb 42>:
  # __old_finish_19 = PHI <__old_finish_221(40), prephitmp_323(26)>
  this_9(D)->D.58587._M_impl._M_finish = __old_finish_19;
  # DEBUG D#2512 => &this_9(D)->D.58587
  # DEBUG this => D#2512
  # DEBUG this => &__position
  # DEBUG __first => D#4029
  # DEBUG __last => D#4017
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2258
  # DEBUG D#2257 => D#2258
  # DEBUG D#2256 => D#2257
  # DEBUG __first => D#4029
  # DEBUG __last => D#4017
  # DEBUG __result => NULL
  # DEBUG D.142419 => D#2256
  # DEBUG __first => D#4029
  # DEBUG __last => D#4017
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<BufferState*>*, std::vector<BufferState*>*> (__position_22, prephitmp_323, __old_finish_19);
  goto <bb 53>;

<L30>:
  goto <bb 104> (<L10>);

<L28>:

  # __old_finish_151 = PHI <__old_finish_175(34), __old_finish_213(44)>
<L19>:
  _178 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_178);
  # DEBUG __first => D#4017
  # DEBUG __last => __old_finish_151
  # DEBUG __first => D#4017
  # DEBUG __last => __old_finish_151

  <bb 46>:
  # __old_finish_179 = PHI <prephitmp_323(45), __old_finish_181(49)>
  # DEBUG __first => __old_finish_179
  if (__old_finish_179 == __old_finish_151)
    goto <bb 50>;
  else
    goto <bb 47>;

  <bb 47>:
  # DEBUG __r => __old_finish_179
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#998
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _180 = MEM[(struct _Vector_base *)__old_finish_179]._M_impl._M_start;
  # DEBUG D#995 => (long int) _180
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _180
  # DEBUG __n => D#992
  if (_180 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _180
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _180
  # DEBUG this => D#984
  # DEBUG D.166277 => D#985
  operator delete (_180);

  <bb 49>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  MEM[(struct  &)__old_finish_179] ={v} {CLOBBER};
  __old_finish_181 = __old_finish_179 + 24;
  # DEBUG __first => __old_finish_181
  goto <bb 46>;

  <bb 50>:
  __cxa_rethrow ();

<L21>:
  __cxa_end_catch ();
  resx 13

<L31>:
  goto <bb 104> (<L10>);

  <bb 53>:
  _74 = this_9(D)->D.58587._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.58587._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#4029
  # DEBUG __last => D#4017
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4029
  if (__position_22 == prephitmp_323)
    goto <bb 20>;
  else
    goto <bb 54>;

  <bb 54>:

  <bb 55>:
  # __position_362 = PHI <__position_22(54), __position_84(58)>
  # DEBUG __first => __position_362
  std::vector<BufferState*>::operator= (__position_362, &__x_copy);
  goto <bb 57>;

<L32>:
  goto <bb 104> (<L10>);

  <bb 57>:
  __position_84 = __position_362 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_323)
    goto <bb 20>;
  else
    goto <bb 58>;

  <bb 58>:
  goto <bb 55>;

  <bb 59>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _85
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _85
  # DEBUG this => D#984
  # DEBUG D.142452 => D#985
  operator delete (_85);

  <bb 60>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  __x_copy ={v} {CLOBBER};
  goto <bb 102>;

  <bb 61>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _215 = (long int) _23;
  _216 = _13 - _215;
  _217 = _216 /[ex] 24;
  _218 = (const long unsigned int) _217;
  _219 = 768614336404564650 - _218;
  if (__n_7(D) > _219)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 63>:
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.166387
  # DEBUG __b => &__n
  _90 = MAX_EXPR <__n_7(D), _218>;
  __len_223 = _90 + _218;
  # DEBUG __len => __len_223
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _332 = __len_223 > 768614336404564650;
  _358 = _218 > __len_223;
  _24 = _332 | _358;
  if (_24 != 0)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 64>:
  pretmp_349 = __len_223 * 24;

  <bb 65>:
  # __elems_before_268 = PHI <__elems_before_338(123), __elems_before_326(64)>
  # _355 = PHI <_339(123), _87(64)>
  # prephitmp_347 = PHI <18446744073709551600(123), pretmp_349(64)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#548 => &this_9(D)->D.58587._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#548
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84406
  # DEBUG this => &__position
  # DEBUG this => &D.84406
  # DEBUG __elems_before => __elems_before_268
  # DEBUG D#2522 => &this_9(D)->D.58587
  # DEBUG D#1753 => D#2522
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => NULL
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2140
  # DEBUG D.166375 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  _211 = operator new (prephitmp_347);

  <bb 66>:
  # __new_finish_212 = PHI <0B(124), _211(65)>
  # __elems_before_357 = PHI <__elems_before_326(124), __elems_before_268(65)>
  # _356 = PHI <_87(124), _355(65)>
  # prephitmp_88 = PHI <0(124), prephitmp_347(65)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2506 => &this_9(D)->D.58587
  # DEBUG this => D#2506
  _26 = (long unsigned int) _356;
  __first_27 = __new_finish_212 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.142460 => D#2261
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 67>:
  # __n_369 = PHI <__n_205(79), __n_7(D)(66)>
  # __first_368 = PHI <__first_206(79), __first_27(66)>
  # DEBUG __cur => __first_368
  # DEBUG __n => __n_369
  # DEBUG __r => __first_368
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.138200 => D#20
  if (__first_368 != 0B)
    goto <bb 68>;
  else
    goto <bb 78>;

  <bb 68>:
  # DEBUG this => __first_368
  # DEBUG __x => __x_28(D)
  # DEBUG D#2253 => &MEM[(const struct vector *)__x_28(D)].D.68817
  # DEBUG this => D#2253
  # DEBUG __a => NULL
  _17 = MEM[(struct BufferState * * *)__x_28(D)];
  # DEBUG D#205 => __x_28(D)
  _225 = MEM[(struct BufferState * * *)__x_28(D) + 8B];
  # DEBUG D#205 => __x_28(D)
  # DEBUG this => D#205
  # DEBUG this => D#205
  _226 = (long int) _225;
  _227 = (long int) _17;
  _228 = _226 - _227;
  _229 = _228 /[ex] 8;
  _230 = (size_type) _229;
  # DEBUG D#2255 => &__first_368->D.68817
  # DEBUG this => D#2255
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1733 => &D#2255->_M_impl
  # DEBUG this => D#1733
  # DEBUG __a => NULL
  # DEBUG this => D#1733
  # DEBUG __a => NULL
  # DEBUG this => D#1733
  # DEBUG D.119584 => NULL
  MEM[(struct _Vector_impl *)__first_368]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_368]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_368]._M_end_of_storage = 0B;
  # DEBUG this => D#2255
  # DEBUG __n => NULL
  # DEBUG D#1731 => D#2255
  # DEBUG __n => _230
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_230 != 0)
    goto <bb 70>;
  else
    goto <bb 69>;

  <bb 69>:
  pretmp_203 = (long unsigned int) _228;
  goto <bb 75>;

  <bb 70>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _230
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _230
  # DEBUG this => D#2118
  # DEBUG D.166435 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_230 > 2305843009213693951)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # __first_174 = PHI <__first_368(70)>
  std::__throw_bad_alloc ();

  <bb 72>:
  _243 = (long unsigned int) _228;
  _244 = operator new (_243);
  goto <bb 74>;

  # __first_152 = PHI <__first_368(72)>
<L34>:
  goto <bb 82> (<L22>);

  <bb 74>:
  pretmp_222 = MEM[(struct BufferState * * *)__x_28(D) + 8B];
  pretmp_100 = MEM[(struct BufferState * * *)__x_28(D)];
  pretmp_220 = (long int) pretmp_222;
  pretmp_52 = (long int) pretmp_100;
  pretmp_66 = pretmp_220 - pretmp_52;
  pretmp_336 = pretmp_66 /[ex] 8;
  pretmp_378 = (long unsigned int) pretmp_66;

  <bb 75>:
  # iftmp.356_245 = PHI <0B(69), _244(74)>
  # prephitmp_56 = PHI <_17(69), pretmp_100(74)>
  # prephitmp_327 = PHI <_229(69), pretmp_336(74)>
  # prephitmp_204 = PHI <pretmp_203(69), _243(74)>
  # prephitmp_379 = PHI <pretmp_203(69), pretmp_378(74)>
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_start = iftmp.356_245;
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_finish = iftmp.356_245;
  _233 = iftmp.356_245 + prephitmp_204;
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_end_of_storage = _233;
  # DEBUG D#2254 => &__first_368->D.68817
  # DEBUG this => D#2254
  # DEBUG D#4028 => MEM[(struct BufferState * * *)__x_28(D) + 8B]
  # DEBUG D#299 => __x_28(D)
  # DEBUG this => D#299
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#4027 => MEM[(struct BufferState * * *)__x_28(D)]
  # DEBUG D#300 => __x_28(D)
  # DEBUG this => D#300
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#4027
  # DEBUG __last => D#4028
  # DEBUG __result => NULL
  # DEBUG D.166399 => D#2252
  # DEBUG __first => D#4027
  # DEBUG __last => D#4028
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#4027
  # DEBUG __last => D#4028
  # DEBUG __result => NULL
  # DEBUG __first => D#4027
  # DEBUG __last => D#4028
  # DEBUG __result => NULL
  # DEBUG __it => D#4028
  # DEBUG __it$_M_current => D#4028
  # DEBUG __it => D#4027
  # DEBUG __it$_M_current => D#4027
  # DEBUG __first => D#4027
  # DEBUG __last => D#4028
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#4028
  # DEBUG __it => D#4028
  # DEBUG this => NULL
  # DEBUG __it => D#4027
  # DEBUG __it => D#4027
  # DEBUG this => NULL
  # DEBUG __first => D#4027
  # DEBUG __last => D#4028
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#4027
  # DEBUG __last => D#4028
  # DEBUG __result => NULL
  # DEBUG D#4026 => (long int) D#4028
  # DEBUG D#4025 => (long int) D#4027
  # DEBUG D#4024 => D#4026 - D#4025
  # DEBUG _Num => D#4024 /[ex] 8
  if (prephitmp_327 != 0)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  __builtin_memmove (iftmp.356_245, prephitmp_56, prephitmp_379);

  <bb 77>:
  _242 = iftmp.356_245 + prephitmp_379;
  __first_368->D.68817._M_impl._M_finish = _242;

  <bb 78>:
  __n_205 = __n_369 + 18446744073709551615;
  # DEBUG __n => __n_205
  __first_206 = __first_368 + 24;
  # DEBUG __cur => __first_206
  # DEBUG __cur => __first_206
  # DEBUG __n => __n_205
  if (__n_205 == 0)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:
  goto <bb 67>;

  <bb 80>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2507 => &this_9(D)->D.58587
  # DEBUG this => D#2507
  # DEBUG this => &__position
  _31 = this_9(D)->D.58587._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#4029
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2260
  # DEBUG D#2259 => D#2260
  # DEBUG D#2256 => D#2259
  # DEBUG __first => _31
  # DEBUG __last => D#4029
  # DEBUG __result => NULL
  # DEBUG D.142481 => D#2256
  # DEBUG __first => _31
  # DEBUG __last => D#4029
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<BufferState*>*, std::vector<BufferState*>*> (_31, __position_22, __new_finish_212);
  goto <bb 90>;

<L33>:

  # __first_150 = PHI <__first_152(73), __first_174(81)>
<L22>:
  _207 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_207);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_150
  # DEBUG __first => __first_27
  # DEBUG __last => __first_150

  <bb 83>:
  # __first_208 = PHI <__first_27(82), __first_210(86)>
  # DEBUG __first => __first_208
  if (__first_208 == __first_150)
    goto <bb 87>;
  else
    goto <bb 84>;

  <bb 84>:
  # DEBUG __r => __first_208
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#998
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _209 = MEM[(struct _Vector_base *)__first_208]._M_impl._M_start;
  # DEBUG D#995 => (long int) _209
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _209
  # DEBUG __n => D#992
  if (_209 != 0B)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _209
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _209
  # DEBUG this => D#984
  # DEBUG D.166358 => D#985
  operator delete (_209);

  <bb 86>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  MEM[(struct  &)__first_208] ={v} {CLOBBER};
  __first_210 = __first_208 + 24;
  # DEBUG __first => __first_210
  goto <bb 83>;

  <bb 87>:
  __cxa_rethrow ();

<L24>:
  __cxa_end_catch ();
  resx 16

<L36>:
  goto <bb 108> (<L13>);

  <bb 90>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2508 => &this_9(D)->D.58587
  # DEBUG this => D#2508
  _35 = this_9(D)->D.58587._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#4029
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#2260
  # DEBUG D#2259 => D#2260
  # DEBUG D#2256 => D#2259
  # DEBUG __first => D#4029
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.142500 => D#2256
  # DEBUG __first => D#4029
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<BufferState*>*, std::vector<BufferState*>*> (__position_22, _35, __new_finish_33);
  goto <bb 92>;

<L37>:
  goto <bb 108> (<L13>);

  <bb 92>:
  # DEBUG __new_finish => _91
  # DEBUG D#2509 => &this_9(D)->D.58587
  # DEBUG this => D#2509
  _37 = this_9(D)->D.58587._M_impl._M_finish;
  __first_38 = this_9(D)->D.58587._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 99>;
  else
    goto <bb 93>;

  <bb 93>:

  <bb 94>:
  # __first_86 = PHI <__first_38(93), __first_93(97)>
  # DEBUG __first => __first_86
  # DEBUG __r => __first_86
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#998
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _92 = MEM[(struct _Vector_base *)__first_86]._M_impl._M_start;
  # DEBUG D#995 => (long int) _92
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _92
  # DEBUG __n => D#992
  if (_92 != 0B)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _92
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _92
  # DEBUG this => D#984
  # DEBUG D.142544 => D#985
  operator delete (_92);

  <bb 96>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  MEM[(struct  &)__first_86] ={v} {CLOBBER};
  __first_93 = __first_86 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (_37 == __first_93)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 94>;

  <bb 98>:
  pretmp_224 = this_9(D)->D.58587._M_impl._M_start;

  <bb 99>:
  # prephitmp_18 = PHI <pretmp_224(98), __first_38(92)>
  # DEBUG D#2520 => this_9(D)->D.58587._M_impl._M_end_of_storage
  # DEBUG D#2519 => (long int) D#2520
  # DEBUG D#4023 => this_9(D)->D.58587._M_impl._M_start
  # DEBUG D#2518 => (long int) D#4023
  # DEBUG D#2517 => D#2519 - D#2518
  # DEBUG D#2516 => D#2517 /[ex] 24
  # DEBUG D#2515 => &this_9(D)->D.58587
  # DEBUG D#797 => D#2515
  # DEBUG D#798 => (long unsigned int) D#2516
  # DEBUG __p => D#4023
  # DEBUG this => D#797
  # DEBUG __n => D#798
  # DEBUG D#796 => D#798
  # DEBUG D#795 => D#797
  if (prephitmp_18 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#794 => &D#795->_M_impl
  # DEBUG D#792 => D#794
  # DEBUG D#793 => D#796
  # DEBUG __p => D#4023
  # DEBUG __a => D#792
  # DEBUG __n => D#793
  # DEBUG D#791 => D#793
  # DEBUG D#790 => D#792
  # DEBUG D#788 => D#790
  # DEBUG D#789 => D#791
  # DEBUG __p => D#4023
  # DEBUG this => D#788
  # DEBUG D.142523 => D#789
  operator delete (prephitmp_18);

  <bb 101>:
  this_9(D)->D.58587._M_impl._M_start = __new_finish_212;
  this_9(D)->D.58587._M_impl._M_finish = _91;
  _44 = __new_finish_212 + prephitmp_88;
  this_9(D)->D.58587._M_impl._M_end_of_storage = _44;

  <bb 102>:
  return;

<L25>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#998 => &__x_copy.D.68817
  # DEBUG this => D#998
  # DEBUG D#1001 => __x_copy.D.68817._M_impl._M_finish
  # DEBUG D#1000 => __x_copy.D.68817._M_impl._M_start
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG D#999 => &__x_copy.D.68817
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _94 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#995 => (long int) _94
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _94
  # DEBUG __n => D#992
  if (_94 != 0B)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _94
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _94
  # DEBUG this => D#984
  # DEBUG D.142561 => D#985
  operator delete (_94);

  <bb 106>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  resx 2

<L35>:

  # __new_finish_1 = PHI <__new_finish_212(89), 0B(107), __new_finish_33(91)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 110>;
  else
    goto <bb 109>;

  <bb 109>:
  goto <bb 115>;

  <bb 110>:
  # DEBUG D#2513 => &this_9(D)->D.58587
  # DEBUG this => D#2513
  _49 = __n_7(D) + __elems_before_357;
  _50 = _49 * 24;
  _51 = __new_finish_212 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 111>:
  # __first_80 = PHI <__first_27(110), __first_96(114)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 119>;
  else
    goto <bb 112>;

  <bb 112>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#998
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _95 = MEM[(struct _Vector_base *)__first_80]._M_impl._M_start;
  # DEBUG D#995 => (long int) _95
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _95
  # DEBUG __n => D#992
  if (_95 != 0B)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _95
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _95
  # DEBUG this => D#984
  # DEBUG D.142585 => D#985
  operator delete (_95);

  <bb 114>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_96 = __first_80 + 24;
  # DEBUG __first => __first_96
  goto <bb 111>;

  <bb 115>:
  # __new_finish_97 = PHI <__new_finish_212(109), __new_finish_99(118)>
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 119>;
  else
    goto <bb 116>;

  <bb 116>:
  # DEBUG __r => __new_finish_97
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#998
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _98 = MEM[(struct _Vector_base *)__new_finish_97]._M_impl._M_start;
  # DEBUG D#995 => (long int) _98
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _98
  # DEBUG __n => D#992
  if (_98 != 0B)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _98
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _98
  # DEBUG this => D#984
  # DEBUG D.142611 => D#985
  operator delete (_98);

  <bb 118>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __first => __new_finish_99
  goto <bb 115>;

  <bb 119>:
  # DEBUG D#2521 => &this_9(D)->D.58587
  # DEBUG D#797 => D#2521
  # DEBUG __p => NULL
  # DEBUG this => D#797
  # DEBUG __n => D#798
  # DEBUG D#796 => D#798
  # DEBUG D#795 => D#797
  if (__new_finish_212 != 0B)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # DEBUG D#794 => &D#795->_M_impl
  # DEBUG D#792 => D#794
  # DEBUG D#793 => D#796
  # DEBUG __p => NULL
  # DEBUG __a => D#792
  # DEBUG __n => D#793
  # DEBUG D#791 => D#793
  # DEBUG D#790 => D#792
  # DEBUG D#788 => D#790
  # DEBUG D#789 => D#791
  # DEBUG __p => NULL
  # DEBUG this => D#788
  # DEBUG D.142626 => D#789
  operator delete (__new_finish_212);

  <bb 121>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 123>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#548 => &this_9(D)->D.58587._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#548
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84406
  # DEBUG this => &__position
  _341 = (long int) __position_22;
  # DEBUG this => &D.84406
  _339 = _341 - _215;
  _340 = _339 /[ex] 24;
  __elems_before_338 = (const size_type) _340;
  # DEBUG __elems_before => __elems_before_338
  # DEBUG D#2522 => &this_9(D)->D.58587
  # DEBUG D#1753 => D#2522
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  goto <bb 65>;

  <bb 124>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#548 => &this_9(D)->D.58587._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#548
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84406
  # DEBUG this => &__position
  _333 = (long int) __position_22;
  # DEBUG this => &D.84406
  _87 = _333 - _215;
  _337 = _87 /[ex] 24;
  __elems_before_326 = (const size_type) _337;
  # DEBUG __elems_before => __elems_before_326
  # DEBUG D#2522 => &this_9(D)->D.58587
  # DEBUG D#1753 => D#2522
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (__len_223 != 0)
    goto <bb 64>;
  else
    goto <bb 66>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<std::vector<int> >*; _ForwardIterator = std::vector<std::vector<int> >*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIS2_IiSaIiEESaIS4_EES7_EET0_T_S9_S8_, funcdef_no=5320, decl_uid=89973, cgraph_uid=3568, symbol_order=3569)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<std::vector<int> >*; _ForwardIterator = std::vector<std::vector<int> >*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  int * D.166673;
  const ptrdiff_t _Num;
  const struct vector * __first$_M_current;
  struct vector * D.166619;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct vector * __result;
  struct vector * D.166588;
  struct __normal_iterator __last;
  struct __normal_iterator __first;
  long unsigned int pretmp_2;
  long unsigned int prephitmp_3;
  void * _12;
  long unsigned int _18;
  struct vector * const _20;
  struct vector * const _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  size_type _26;
  struct vector * _29;
  struct vector * const _30;
  struct vector * _33;
  struct vector * _34;
  long unsigned int pretmp_37;
  void * _42;
  int * _44;
  int * const _46;
  int * const _47;
  long int _48;
  long int _49;
  long int _50;
  long int _51;
  size_type _52;
  long unsigned int pretmp_53;
  int * _55;
  int * const _56;
  int * const _57;
  long int __last.79_58;
  long int __first.80_59;
  long int _60;
  long unsigned int _62;
  int * _64;
  long unsigned int _65;
  int * _66;
  int * iftmp.77_67;
  long unsigned int prephitmp_69;
  long unsigned int prephitmp_119;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 44>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_89 = PHI <__first_5(D)(3), __first_10(43)>
  # __result_90 = PHI <__result_4(D)(3), __result_11(43)>
  # DEBUG __cur => __result_90
  # DEBUG __first => __first_89
  # DEBUG __r => __result_90
  # DEBUG __p => NULL
  # DEBUG __value => __first_89
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.130385 => D#20
  if (__result_90 != 0B)
    goto <bb 5>;
  else
    goto <bb 41>;

  <bb 5>:
  # DEBUG this => __result_90
  # DEBUG __x => __first_89
  # DEBUG D#1490 => &MEM[(const struct vector *)__first_89].D.53336
  # DEBUG this => D#1490
  # DEBUG __a => NULL
  _20 = MEM[(struct vector * *)__first_89];
  # DEBUG D#201 => __first_89
  _21 = MEM[(struct vector * *)__first_89 + 8B];
  # DEBUG D#201 => __first_89
  # DEBUG this => D#201
  # DEBUG this => D#201
  _22 = (long int) _21;
  _23 = (long int) _20;
  _24 = _22 - _23;
  _25 = _24 /[ex] 24;
  _26 = (size_type) _25;
  # DEBUG D#1493 => &__result_90->D.53336
  # DEBUG this => D#1493
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1384 => &D#1493->_M_impl
  # DEBUG this => D#1384
  # DEBUG __a => NULL
  # DEBUG this => D#1384
  # DEBUG __a => NULL
  # DEBUG this => D#1384
  # DEBUG D.119591 => NULL
  MEM[(struct _Vector_impl *)__result_90]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_90]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_90]._M_end_of_storage = 0B;
  # DEBUG this => D#1493
  # DEBUG __n => NULL
  # DEBUG D#1382 => D#1493
  # DEBUG __n => _26
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (_26 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_37 = (long unsigned int) _24;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => _26
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => _26
  # DEBUG this => D#2140
  # DEBUG D.166586 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  if (_26 > 768614336404564650)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_1 = PHI <__result_90(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _18 = (long unsigned int) _24;
  _34 = operator new (_18);
  goto <bb 11>;

  # __result_28 = PHI <__result_90(9)>
<L12>:
  goto <bb 46> (<L4>);

  <bb 11>:
  # __result_35 = PHI <0B(6), _34(9)>
  # prephitmp_119 = PHI <pretmp_37(6), _18(9)>
  MEM[(struct _Vector_base *)__result_90]._M_impl._M_start = __result_35;
  MEM[(struct _Vector_base *)__result_90]._M_impl._M_finish = __result_35;
  _29 = __result_35 + prephitmp_119;
  MEM[(struct _Vector_base *)__result_90]._M_impl._M_end_of_storage = _29;
  # DEBUG D#1491 => &__result_90->D.53336
  # DEBUG this => D#1491
  _30 = MEM[(struct vector * *)__first_89 + 8B];
  # DEBUG D#302 => __first_89
  # DEBUG this => D#302
  # DEBUG this => NULL
  # DEBUG __i => NULL
  __first$_M_current_31 = MEM[(struct vector * *)__first_89];
  # DEBUG D#303 => __first_89
  # DEBUG this => D#303
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __last$_M_current => _30
  # DEBUG __result => NULL
  # DEBUG D.166569 => D#1489
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => __result_35
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __cur => __result_35
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __cur => __result_35
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_30 != __first$_M_current_31)
    goto <bb 12>;
  else
    goto <bb 27>;

  <bb 12>:

  <bb 13>:
  # __first$_M_current_132 = PHI <__first$_M_current_31(12), __first$_M_current_40(26)>
  # __result_135 = PHI <__result_35(12), __result_41(26)>
  # DEBUG __first$_M_current => __first$_M_current_132
  # DEBUG __cur => __result_135
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __result_135
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.124770 => D#20
  if (__result_135 != 0B)
    goto <bb 14>;
  else
    goto <bb 24>;

  <bb 14>:
  # DEBUG this => __result_135
  # DEBUG __x => __first$_M_current_132
  # DEBUG D#1387 => &__first$_M_current_132->D.45977
  # DEBUG this => D#1387
  # DEBUG __a => NULL
  _46 = MEM[(int * *)__first$_M_current_132];
  # DEBUG D#68 => __first$_M_current_132
  _47 = MEM[(int * *)__first$_M_current_132 + 8B];
  # DEBUG D#68 => __first$_M_current_132
  # DEBUG this => D#68
  # DEBUG this => D#68
  _48 = (long int) _47;
  _49 = (long int) _46;
  _50 = _48 - _49;
  _51 = _50 /[ex] 4;
  _52 = (size_type) _51;
  # DEBUG D#1389 => &__result_135->D.45977
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1271 => &D#1389->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)__result_135]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_135]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_135]._M_end_of_storage = 0B;
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG D#1269 => D#1389
  # DEBUG __n => _52
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (_52 != 0)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  pretmp_2 = (long unsigned int) _50;
  goto <bb 20>;

  <bb 16>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => _52
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => _52
  # DEBUG this => D#1263
  # DEBUG D.166671 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (_52 > 4611686018427387903)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # __result_32 = PHI <__result_35(16)>
  # __result_54 = PHI <__result_90(16)>
  # __result_38 = PHI <__result_135(16)>
  std::__throw_bad_alloc ();

  <bb 18>:
  _65 = (long unsigned int) _50;
  _66 = operator new (_65);
  goto <bb 20>;

  # __result_17 = PHI <__result_35(18)>
  # __result_63 = PHI <__result_90(18)>
  # __result_39 = PHI <__result_135(18)>
<L14>:
  goto <bb 29> (<L8>);

  <bb 20>:
  # iftmp.77_67 = PHI <0B(15), _66(18)>
  # prephitmp_3 = PHI <pretmp_2(15), _65(18)>
  MEM[(struct _Vector_base *)__result_135]._M_impl._M_start = iftmp.77_67;
  MEM[(struct _Vector_base *)__result_135]._M_impl._M_finish = iftmp.77_67;
  _55 = iftmp.77_67 + prephitmp_3;
  MEM[(struct _Vector_base *)__result_135]._M_impl._M_end_of_storage = _55;
  # DEBUG D#1388 => &__result_135->D.45977
  # DEBUG this => D#1388
  _56 = MEM[(int * *)__first$_M_current_132 + 8B];
  # DEBUG D#276 => __first$_M_current_132
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _57 = MEM[(int * *)__first$_M_current_132];
  # DEBUG D#277 => __first$_M_current_132
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG D.166635 => D#1386
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG __it => _56
  # DEBUG __it$_M_current => _56
  # DEBUG __it => _57
  # DEBUG __it$_M_current => _57
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _56
  # DEBUG __it => _56
  # DEBUG this => NULL
  # DEBUG __it => _57
  # DEBUG __it => _57
  # DEBUG this => NULL
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _57
  # DEBUG __last => _56
  # DEBUG __result => NULL
  __last.79_58 = (long int) _56;
  __first.80_59 = (long int) _57;
  _60 = __last.79_58 - __first.80_59;
  _Num_61 = _60 /[ex] 4;
  # DEBUG _Num => _Num_61
  if (_Num_61 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  pretmp_53 = (long unsigned int) _60;
  goto <bb 23>;

  <bb 22>:
  _62 = (long unsigned int) _60;
  __builtin_memmove (iftmp.77_67, _57, _62);

  <bb 23>:
  # prephitmp_69 = PHI <pretmp_53(21), _62(22)>
  _64 = iftmp.77_67 + prephitmp_69;
  __result_135->D.45977._M_impl._M_finish = _64;

  <bb 24>:
  # DEBUG this => &__first
  __first$_M_current_40 = __first$_M_current_132 + 24;
  # DEBUG __first$_M_current => __first$_M_current_40
  __result_41 = __result_135 + 24;
  # DEBUG __cur => __result_41
  # DEBUG __first$_M_current => __first$_M_current_40
  # DEBUG __cur => __result_41
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_30 != __first$_M_current_40)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  # __result_9 = PHI <__result_41(24)>
  goto <bb 27>;

  <bb 26>:
  goto <bb 13>;

  <bb 27>:
  # __result_134 = PHI <__result_9(25), __result_35(11)>
  __result_90->D.53336._M_impl._M_finish = __result_134;
  goto <bb 41>;

<L13>:

  # __result_88 = PHI <__result_17(19), __result_32(28)>
  # __result_87 = PHI <__result_63(19), __result_54(28)>
  # __result_118 = PHI <__result_39(19), __result_38(28)>
<L8>:
  _42 = __builtin_eh_pointer (7);
  __cxa_begin_catch (_42);
  # DEBUG __first => __result_88
  # DEBUG __last => __result_118
  # DEBUG __first => __result_88
  # DEBUG __last => __result_118
  # DEBUG __first => __result_88
  if (__result_88 == __result_118)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  __cxa_rethrow ();

  <bb 31>:

  <bb 32>:
  # __result_127 = PHI <__result_88(31), __result_45(35)>
  # DEBUG __first => __result_127
  # DEBUG __r => __result_127
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _44 = MEM[(struct _Vector_base *)__result_127]._M_impl._M_start;
  # DEBUG D#473 => (long int) _44
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _44
  # DEBUG __n => D#470
  if (_44 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _44
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _44
  # DEBUG this => D#462
  # DEBUG D.166609 => D#463
  operator delete (_44);

  <bb 34>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__result_127] ={v} {CLOBBER};
  __result_45 = __result_127 + 24;
  # DEBUG __first => __result_45
  # DEBUG __first => __result_45
  if (__result_45 == __result_118)
    goto <bb 30>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 32>;

<L10>:
  __cxa_end_catch ();
  resx 6

<L7>:
  # DEBUG D#1492 => &__result_87->D.53336
  # DEBUG this => D#1492
  # DEBUG D#685 => D#1492->_M_impl._M_end_of_storage
  # DEBUG D#684 => (long int) D#685
  _33 = MEM[(struct _Vector_base *)__result_87]._M_impl._M_start;
  # DEBUG D#683 => (long int) _33
  # DEBUG D#682 => D#684 - D#683
  # DEBUG D#681 => D#682 /[ex] 24
  # DEBUG D#678 => D#1492
  # DEBUG D#679 => (long unsigned int) D#681
  # DEBUG __p => _33
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (_33 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => _33
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => _33
  # DEBUG this => D#669
  # DEBUG D.166555 => D#670
  operator delete (_33);

  <bb 39>:
  # DEBUG D#680 => &D#1492->_M_impl
  # DEBUG this => D#680
  # DEBUG this => D#680
  # DEBUG this => D#680
  MEM[(struct  &)__result_87] ={v} {CLOBBER};
  resx 4

<L15>:
  goto <bb 46> (<L4>);

  <bb 41>:
  __first_10 = __first_89 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_90 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # __result_36 = PHI <__result_11(41)>
  goto <bb 44>;

  <bb 43>:
  goto <bb 4>;

  <bb 44>:
  # __result_124 = PHI <__result_36(42), __result_4(D)(2)>
  return __result_124;

<L11>:

  # __result_27 = PHI <__result_87(40), __result_28(10), __result_1(45)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_27
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_27
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_27)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  __cxa_rethrow ();

  <bb 48>:

  <bb 49>:
  # __result_136 = PHI <__result_4(D)(48), __result_8(50)>
  # DEBUG __first => __result_136
  # DEBUG __r => __result_136
  # DEBUG __pointer => NULL
  std::vector<std::vector<int> >::~vector (__result_136);
  __result_8 = __result_136 + 24;
  # DEBUG __first => __result_8
  # DEBUG __first => __result_8
  if (__result_8 == __result_27)
    goto <bb 47>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 49>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<std::vector<int> >; _Alloc = std::allocator<std::vector<std::vector<int> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<std::vector<int> >*, std::vector<std::vector<std::vector<int> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<std::vector<int> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<std::vector<int> >] (_ZNSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_, funcdef_no=3881, decl_uid=59257, cgraph_uid=2129, symbol_order=2130)

Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is not innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<std::vector<int> >; _Alloc = std::allocator<std::vector<std::vector<int> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<std::vector<int> >*, std::vector<std::vector<std::vector<int> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<std::vector<int> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<std::vector<int> >] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct vector * __first;
  int * D.167020;
  const ptrdiff_t _Num;
  const struct vector * __first$_M_current;
  struct vector * D.166966;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct vector * __result;
  struct vector * D.166935;
  struct __normal_iterator __last;
  struct __normal_iterator __first;
  const long unsigned int D.166890;
  const size_type __len;
  size_type D.166889;
  size_type __n;
  struct vector * D.166880;
  struct vector * D.166868;
  struct vector * __first;
  long unsigned int __n;
  int * D.166855;
  const ptrdiff_t _Num;
  struct vector * D.166805;
  const struct vector * __first$_M_current;
  struct vector * D.166792;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct vector * __result;
  struct __normal_iterator __last;
  struct __normal_iterator __first;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct vector * const _17;
  struct vector * const pretmp_18;
  struct vector * _20;
  struct vector * const _23;
  bool _24;
  long int __last.167_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  long int _48;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long unsigned int pretmp_52;
  long unsigned int prephitmp_55;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  long unsigned int pretmp_66;
  struct vector * _67;
  long unsigned int prephitmp_69;
  long unsigned int _70;
  long unsigned int prephitmp_72;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct vector * _83;
  struct vector * pretmp_84;
  long unsigned int pretmp_87;
  struct vector * prephitmp_89;
  long unsigned int _90;
  struct vector * _91;
  struct vector * prephitmp_98;
  struct vector * const _118;
  struct vector * const _119;
  long int _120;
  long int _121;
  long int _122;
  long int _123;
  size_type _124;
  struct vector * _127;
  struct vector * _131;
  void * _137;
  struct vector * const prephitmp_138;
  int * _139;
  long unsigned int _141;
  struct vector * _142;
  int * const _144;
  int * const _145;
  long int _146;
  long int _147;
  long int _148;
  long int _149;
  size_type _150;
  int * _153;
  int * const _154;
  int * const _155;
  long int __last.79_156;
  long int __first.80_157;
  long int _158;
  long unsigned int _160;
  int * _162;
  long unsigned int _163;
  int * _164;
  int * iftmp.77_165;
  void * _166;
  void * _170;
  struct vector * pretmp_171;
  struct vector * _173;
  long unsigned int prephitmp_176;
  long int _177;
  long int _178;
  long int _179;
  long unsigned int _181;
  long unsigned int pretmp_182;
  struct vector * const _187;
  long int _188;
  long int _189;
  long int _190;
  long int _191;
  size_type _192;
  difference_type _193;
  struct vector * _195;
  struct vector * _199;
  long unsigned int _200;
  struct vector * _201;
  struct vector * const prephitmp_203;
  void * _209;
  struct vector * const prephitmp_210;
  int * _211;
  int * const _213;
  int * const _214;
  long int _215;
  long int _216;
  long int _217;
  long int _218;
  size_type _219;
  int * _222;
  int * const _223;
  int * const _224;
  long int __last.79_225;
  long int __first.80_226;
  long int _227;
  long unsigned int _229;
  int * _231;
  long unsigned int _232;
  int * _233;
  int * iftmp.77_234;
  struct vector * _235;
  int * _238;
  struct vector * const pretmp_246;
  struct vector * const pretmp_252;
  long unsigned int pretmp_262;
  struct vector * const pretmp_282;
  long unsigned int prephitmp_283;
  long unsigned int prephitmp_340;
  struct vector * const prephitmp_343;
  long int _379;
  long int _380;
  long int _381;
  bool _397;
  long int _415;
  long int _418;
  difference_type _419;
  long int _420;
  bool _421;
  long unsigned int pretmp_424;
  long unsigned int prephitmp_425;
  long unsigned int pretmp_426;
  long unsigned int prephitmp_427;

  <bb 2>:
  # DEBUG D#4046 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#4046
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 135>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.59334._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.59334._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 62>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#1490 => &MEM[(const struct vector *)__x_28(D)].D.53336
  # DEBUG this => D#1490
  # DEBUG __a => NULL
  _118 = MEM[(struct vector * *)__x_28(D)];
  # DEBUG D#201 => __x_28(D)
  _119 = MEM[(struct vector * *)__x_28(D) + 8B];
  # DEBUG D#201 => __x_28(D)
  # DEBUG this => D#201
  # DEBUG this => D#201
  _120 = (long int) _119;
  _121 = (long int) _118;
  _122 = _120 - _121;
  _123 = _122 /[ex] 24;
  _124 = (size_type) _123;
  # DEBUG D#1493 => &__x_copy.D.53336
  # DEBUG this => D#1493
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1384 => &D#1493->_M_impl
  # DEBUG this => D#1384
  # DEBUG __a => NULL
  # DEBUG this => D#1384
  # DEBUG __a => NULL
  # DEBUG this => D#1384
  # DEBUG D.119591 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#1493
  # DEBUG __n => NULL
  # DEBUG D#1382 => D#1493
  # DEBUG __n => _124
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (_124 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_87 = (long unsigned int) _122;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => _124
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => _124
  # DEBUG this => D#2140
  # DEBUG D.166803 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  if (_124 > 768614336404564650)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _141 = (long unsigned int) _122;
  _142 = operator new (_141);
  pretmp_18 = MEM[(struct vector * *)__x_28(D) + 8B];
  pretmp_246 = MEM[(struct vector * *)__x_28(D)];

  <bb 9>:
  # __result_143 = PHI <0B(5), _142(8)>
  # prephitmp_203 = PHI <_119(5), pretmp_18(8)>
  # prephitmp_138 = PHI <_118(5), pretmp_246(8)>
  # prephitmp_55 = PHI <pretmp_87(5), _141(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = __result_143;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = __result_143;
  _127 = __result_143 + prephitmp_55;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _127;
  # DEBUG D#1491 => &__x_copy.D.53336
  # DEBUG this => D#1491
  # DEBUG D#4041 => MEM[(struct vector * *)__x_28(D) + 8B]
  # DEBUG D#302 => __x_28(D)
  # DEBUG this => D#302
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#4040 => MEM[(struct vector * *)__x_28(D)]
  # DEBUG D#303 => __x_28(D)
  # DEBUG this => D#303
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first$_M_current => D#4040
  # DEBUG __last$_M_current => D#4041
  # DEBUG __result => NULL
  # DEBUG D.166751 => D#1489
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => NULL
  # DEBUG __first$_M_current => D#4040
  # DEBUG __cur => NULL
  # DEBUG __first$_M_current => D#4040
  # DEBUG __cur => __result_143
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (prephitmp_138 != prephitmp_203)
    goto <bb 10>;
  else
    goto <bb 25>;

  <bb 10>:

  <bb 11>:
  # __first$_M_current_311 = PHI <prephitmp_138(10), __first$_M_current_135(24)>
  # __result_399 = PHI <__result_143(10), __result_136(24)>
  # DEBUG __first$_M_current => __first$_M_current_311
  # DEBUG __cur => __result_399
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __result_399
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.124770 => D#20
  if (__result_399 != 0B)
    goto <bb 12>;
  else
    goto <bb 22>;

  <bb 12>:
  # DEBUG this => __result_399
  # DEBUG __x => __first$_M_current_311
  # DEBUG D#1387 => &__first$_M_current_311->D.45977
  # DEBUG this => D#1387
  # DEBUG __a => NULL
  _144 = MEM[(int * *)__first$_M_current_311];
  # DEBUG D#68 => __first$_M_current_311
  _145 = MEM[(int * *)__first$_M_current_311 + 8B];
  # DEBUG D#68 => __first$_M_current_311
  # DEBUG this => D#68
  # DEBUG this => D#68
  _146 = (long int) _145;
  _147 = (long int) _144;
  _148 = _146 - _147;
  _149 = _148 /[ex] 4;
  _150 = (size_type) _149;
  # DEBUG D#1389 => &__result_399->D.45977
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1271 => &D#1389->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)__result_399]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_399]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_399]._M_end_of_storage = 0B;
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG D#1269 => D#1389
  # DEBUG __n => _150
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (_150 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  pretmp_424 = (long unsigned int) _148;
  goto <bb 18>;

  <bb 14>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => _150
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => _150
  # DEBUG this => D#1263
  # DEBUG D.166853 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (_150 > 4611686018427387903)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # __result_284 = PHI <__result_399(14)>
  std::__throw_bad_alloc ();

  <bb 16>:
  _163 = (long unsigned int) _148;
  _164 = operator new (_163);
  goto <bb 18>;

  # __result_278 = PHI <__result_399(16)>
<L32>:
  goto <bb 27> (<L20>);

  <bb 18>:
  # iftmp.77_165 = PHI <0B(13), _164(16)>
  # prephitmp_425 = PHI <pretmp_424(13), _163(16)>
  MEM[(struct _Vector_base *)__result_399]._M_impl._M_start = iftmp.77_165;
  MEM[(struct _Vector_base *)__result_399]._M_impl._M_finish = iftmp.77_165;
  _153 = iftmp.77_165 + prephitmp_425;
  MEM[(struct _Vector_base *)__result_399]._M_impl._M_end_of_storage = _153;
  # DEBUG D#1388 => &__result_399->D.45977
  # DEBUG this => D#1388
  _154 = MEM[(int * *)__first$_M_current_311 + 8B];
  # DEBUG D#276 => __first$_M_current_311
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _155 = MEM[(int * *)__first$_M_current_311];
  # DEBUG D#277 => __first$_M_current_311
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _155
  # DEBUG __last => _154
  # DEBUG __result => NULL
  # DEBUG D.166817 => D#1386
  # DEBUG __first => _155
  # DEBUG __last => _154
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _155
  # DEBUG __last => _154
  # DEBUG __result => NULL
  # DEBUG __first => _155
  # DEBUG __last => _154
  # DEBUG __result => NULL
  # DEBUG __it => _154
  # DEBUG __it$_M_current => _154
  # DEBUG __it => _155
  # DEBUG __it$_M_current => _155
  # DEBUG __first => _155
  # DEBUG __last => _154
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _154
  # DEBUG __it => _154
  # DEBUG this => NULL
  # DEBUG __it => _155
  # DEBUG __it => _155
  # DEBUG this => NULL
  # DEBUG __first => _155
  # DEBUG __last => _154
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _155
  # DEBUG __last => _154
  # DEBUG __result => NULL
  __last.79_156 = (long int) _154;
  __first.80_157 = (long int) _155;
  _158 = __last.79_156 - __first.80_157;
  _Num_159 = _158 /[ex] 4;
  # DEBUG _Num => _Num_159
  if (_Num_159 != 0)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  pretmp_426 = (long unsigned int) _158;
  goto <bb 21>;

  <bb 20>:
  _160 = (long unsigned int) _158;
  __builtin_memmove (iftmp.77_165, _155, _160);

  <bb 21>:
  # prephitmp_427 = PHI <pretmp_426(19), _160(20)>
  _162 = iftmp.77_165 + prephitmp_427;
  __result_399->D.45977._M_impl._M_finish = _162;

  <bb 22>:
  # DEBUG this => &__first
  __first$_M_current_135 = __first$_M_current_311 + 24;
  # DEBUG __first$_M_current => __first$_M_current_135
  __result_136 = __result_399 + 24;
  # DEBUG __cur => __result_136
  # DEBUG __first$_M_current => __first$_M_current_135
  # DEBUG __cur => __result_136
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (__first$_M_current_135 != prephitmp_203)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  # __result_301 = PHI <__result_136(22)>
  goto <bb 25>;

  <bb 24>:
  goto <bb 11>;

  <bb 25>:
  # __result_198 = PHI <__result_301(23), __result_143(9)>
  __x_copy.D.53336._M_impl._M_finish = __result_198;
  # DEBUG this => this_9(D)
  # DEBUG D#304 => &this_9(D)->D.59334._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#304
  __old_finish_29 = MEM[(struct vector * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.84446
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84446
  _48 = (long int) __old_finish_29;
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = _48 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_29
  if (__n_7(D) < __elems_after_57)
    goto <bb 38>;
  else
    goto <bb 52>;

<L31>:

  # __result_250 = PHI <__result_278(17), __result_284(26)>
<L20>:
  _137 = __builtin_eh_pointer (15);
  __cxa_begin_catch (_137);
  # DEBUG __first => NULL
  # DEBUG __last => __result_250
  # DEBUG __first => NULL
  # DEBUG __last => __result_250
  # DEBUG __first => __result_143
  if (__result_143 == __result_250)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  __cxa_rethrow ();

  <bb 29>:

  <bb 30>:
  # __result_317 = PHI <__result_143(29), __result_140(33)>
  # DEBUG __first => __result_317
  # DEBUG __r => __result_317
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _139 = MEM[(struct _Vector_base *)__result_317]._M_impl._M_start;
  # DEBUG D#473 => (long int) _139
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _139
  # DEBUG __n => D#470
  if (_139 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _139
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _139
  # DEBUG this => D#462
  # DEBUG D.166782 => D#463
  operator delete (_139);

  <bb 32>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__result_317] ={v} {CLOBBER};
  __result_140 = __result_317 + 24;
  # DEBUG __first => __result_140
  # DEBUG __first => __result_140
  if (__result_140 == __result_250)
    goto <bb 28>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 30>;

<L22>:
  __cxa_end_catch ();
  resx 14

<L19>:
  # DEBUG D#1492 => &__x_copy.D.53336
  # DEBUG this => D#1492
  # DEBUG D#685 => D#1492->_M_impl._M_end_of_storage
  # DEBUG D#684 => (long int) D#685
  _131 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#683 => (long int) _131
  # DEBUG D#682 => D#684 - D#683
  # DEBUG D#681 => D#682 /[ex] 24
  # DEBUG D#678 => D#1492
  # DEBUG D#679 => (long unsigned int) D#681
  # DEBUG __p => _131
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (_131 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => _131
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => _131
  # DEBUG this => D#669
  # DEBUG D.166737 => D#670
  operator delete (_131);

  <bb 37>:
  # DEBUG D#680 => &D#1492->_M_impl
  # DEBUG this => D#680
  # DEBUG this => D#680
  # DEBUG this => D#680
  resx 12

  <bb 38>:
  # DEBUG D#2539 => &this_9(D)->D.59334
  # DEBUG this => D#2539
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = __old_finish_29 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG __alloc => D#1764
  # DEBUG D#1763 => D#1764
  # DEBUG D#1762 => D#1763
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG D.143210 => D#1762
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<std::vector<int> >*, std::vector<std::vector<int> >*> (__last_61, __old_finish_29, __old_finish_29);

  <bb 39>:
  _62 = this_9(D)->D.59334._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.59334._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#4046
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4046
  # DEBUG __it => D#4046
  # DEBUG __first => D#4046
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __it => __old_finish_29
  # DEBUG __it => __old_finish_29
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4046
  # DEBUG __it => D#4046
  # DEBUG __first => D#4046
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __simple => 0
  # DEBUG __first => D#4046
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  __last.167_25 = (long int) __last_61;
  _78 = __last.167_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => __old_finish_29
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#4046
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4046
  if (__position_22 == _67)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 41>:

  <bb 42>:
  # __old_finish_407 = PHI <__old_finish_29(41), __old_finish_65(45)>
  # __last_371 = PHI <__last_61(41), __last_68(45)>
  # __n_394 = PHI <__n_73(41), __n_58(45)>
  # DEBUG __n => __n_394
  # DEBUG __result => __old_finish_407
  # DEBUG __last => __last_371
  __last_68 = __last_371 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_407 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<std::vector<int> >::operator= (__old_finish_65, __last_68);
  goto <bb 44>;

<L34>:
  goto <bb 137> (<L10>);

  <bb 44>:
  __n_58 = __n_394 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 40>;
  else
    goto <bb 45>;

  <bb 45>:
  goto <bb 42>;

  <bb 46>:
  std::vector<std::vector<int> >::~vector (&__x_copy);
  __x_copy ={v} {CLOBBER};
  goto <bb 135>;

  <bb 47>:

  <bb 48>:
  # __position_410 = PHI <__position_22(47), __position_82(51)>
  # DEBUG __first => __position_410
  std::vector<std::vector<int> >::operator= (__position_410, &__x_copy);
  goto <bb 50>;

<L35>:
  goto <bb 137> (<L10>);

  <bb 50>:
  __position_82 = __position_410 + 24;
  # DEBUG __first => __position_82
  # DEBUG __first => __position_82
  if (_67 == __position_82)
    goto <bb 46>;
  else
    goto <bb 51>;

  <bb 51>:
  goto <bb 48>;

  <bb 52>:
  # DEBUG D#2540 => &this_9(D)->D.59334
  # DEBUG this => D#2540
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_29
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.143256 => D#1767
  # DEBUG __first => __old_finish_29
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _83 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<std::vector<int> >*, long unsigned int, std::vector<std::vector<int> > > (__old_finish_29, _70, &__x_copy);
  goto <bb 54>;

<L36>:
  goto <bb 137> (<L10>);

  <bb 54>:
  this_9(D)->D.59334._M_impl._M_finish = _83;
  # DEBUG D#2541 => &this_9(D)->D.59334
  # DEBUG this => D#2541
  # DEBUG this => &__position
  # DEBUG __first => D#4046
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _83
  # DEBUG __alloc => D#1764
  # DEBUG D#1763 => D#1764
  # DEBUG D#1762 => D#1763
  # DEBUG __first => D#4046
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _83
  # DEBUG D.143269 => D#1762
  # DEBUG __first => D#4046
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _83
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<std::vector<int> >*, std::vector<std::vector<int> >*> (__position_22, __old_finish_29, _83);
  goto <bb 56>;

<L37>:
  goto <bb 137> (<L10>);

  <bb 56>:
  _74 = this_9(D)->D.59334._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.59334._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#4046
  # DEBUG __last => __old_finish_29
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4046
  if (__position_22 == __old_finish_29)
    goto <bb 46>;
  else
    goto <bb 57>;

  <bb 57>:

  <bb 58>:
  # __position_393 = PHI <__position_22(57), __position_85(61)>
  # DEBUG __first => __position_393
  std::vector<std::vector<int> >::operator= (__position_393, &__x_copy);
  goto <bb 60>;

<L38>:
  goto <bb 137> (<L10>);

  <bb 60>:
  __position_85 = __position_393 + 24;
  # DEBUG __first => __position_85
  # DEBUG __first => __position_85
  if (__old_finish_29 == __position_85)
    goto <bb 46>;
  else
    goto <bb 61>;

  <bb 61>:
  goto <bb 58>;

  <bb 62>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _177 = (long int) _23;
  _178 = _13 - _177;
  _179 = _178 /[ex] 24;
  _180 = (const long unsigned int) _179;
  _181 = 768614336404564650 - _180;
  if (__n_7(D) > _181)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 64>:
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.166890
  # DEBUG __b => &__n
  _90 = MAX_EXPR <__n_7(D), _180>;
  __len_185 = _90 + _180;
  # DEBUG __len => __len_185
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _421 = __len_185 > 768614336404564650;
  _397 = _180 > __len_185;
  _24 = _397 | _421;
  if (_24 != 0)
    goto <bb 152>;
  else
    goto <bb 153>;

  <bb 65>:
  pretmp_182 = __len_185 * 24;

  <bb 66>:
  # __elems_before_271 = PHI <__elems_before_372(152), __elems_before_373(65)>
  # _379 = PHI <_380(152), _418(65)>
  # prephitmp_176 = PHI <18446744073709551600(152), pretmp_182(65)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#549 => &this_9(D)->D.59334._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#549
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84479
  # DEBUG this => &__position
  # DEBUG this => &D.84479
  # DEBUG __elems_before => __elems_before_271
  # DEBUG D#2551 => &this_9(D)->D.59334
  # DEBUG D#1781 => D#2551
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => NULL
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2140
  # DEBUG D.166878 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  _173 = operator new (prephitmp_176);

  <bb 67>:
  # __new_finish_174 = PHI <0B(153), _173(66)>
  # __elems_before_408 = PHI <__elems_before_373(153), __elems_before_271(66)>
  # _415 = PHI <_418(153), _379(66)>
  # prephitmp_340 = PHI <0(153), prephitmp_176(66)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2535 => &this_9(D)->D.59334
  # DEBUG this => D#2535
  _26 = (long unsigned int) _415;
  __first_27 = __new_finish_174 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.143295 => D#1767
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 68>:
  # __n_413 = PHI <__n_168(107), __n_7(D)(67)>
  # __first_414 = PHI <__first_169(107), __first_27(67)>
  # DEBUG __cur => __first_414
  # DEBUG __n => __n_413
  # DEBUG __r => __first_414
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.130385 => D#20
  if (__first_414 != 0B)
    goto <bb 69>;
  else
    goto <bb 106>;

  <bb 69>:
  # DEBUG this => __first_414
  # DEBUG __x => __x_28(D)
  # DEBUG D#1490 => &MEM[(const struct vector *)__x_28(D)].D.53336
  # DEBUG this => D#1490
  # DEBUG __a => NULL
  _17 = MEM[(struct vector * *)__x_28(D)];
  # DEBUG D#201 => __x_28(D)
  _187 = MEM[(struct vector * *)__x_28(D) + 8B];
  # DEBUG D#201 => __x_28(D)
  # DEBUG this => D#201
  # DEBUG this => D#201
  _188 = (long int) _187;
  _189 = (long int) _17;
  _190 = _188 - _189;
  _191 = _190 /[ex] 24;
  _192 = (size_type) _191;
  # DEBUG D#1493 => &__first_414->D.53336
  # DEBUG this => D#1493
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1384 => &D#1493->_M_impl
  # DEBUG this => D#1384
  # DEBUG __a => NULL
  # DEBUG this => D#1384
  # DEBUG __a => NULL
  # DEBUG this => D#1384
  # DEBUG D.119591 => NULL
  MEM[(struct _Vector_impl *)__first_414]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_414]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_414]._M_end_of_storage = 0B;
  # DEBUG this => D#1493
  # DEBUG __n => NULL
  # DEBUG D#1382 => D#1493
  # DEBUG __n => _192
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (_192 != 0)
    goto <bb 71>;
  else
    goto <bb 70>;

  <bb 70>:
  pretmp_262 = (long unsigned int) _190;
  goto <bb 76>;

  <bb 71>:
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => _192
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => _192
  # DEBUG this => D#2140
  # DEBUG D.166933 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  if (_192 > 768614336404564650)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  # __first_272 = PHI <__first_414(71)>
  std::__throw_bad_alloc ();

  <bb 73>:
  _200 = (long unsigned int) _190;
  _201 = operator new (_200);
  goto <bb 75>;

  # __first_269 = PHI <__first_414(73)>
<L40>:
  goto <bb 110> (<L23>);

  <bb 75>:
  pretmp_252 = MEM[(struct vector * *)__x_28(D) + 8B];
  pretmp_282 = MEM[(struct vector * *)__x_28(D)];

  <bb 76>:
  # __result_202 = PHI <0B(70), _201(75)>
  # prephitmp_343 = PHI <_187(70), pretmp_252(75)>
  # prephitmp_210 = PHI <_17(70), pretmp_282(75)>
  # prephitmp_283 = PHI <pretmp_262(70), _200(75)>
  MEM[(struct _Vector_base *)__first_414]._M_impl._M_start = __result_202;
  MEM[(struct _Vector_base *)__first_414]._M_impl._M_finish = __result_202;
  _195 = __result_202 + prephitmp_283;
  MEM[(struct _Vector_base *)__first_414]._M_impl._M_end_of_storage = _195;
  # DEBUG D#1491 => &__first_414->D.53336
  # DEBUG this => D#1491
  # DEBUG D#4045 => MEM[(struct vector * *)__x_28(D) + 8B]
  # DEBUG D#302 => __x_28(D)
  # DEBUG this => D#302
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#4044 => MEM[(struct vector * *)__x_28(D)]
  # DEBUG D#303 => __x_28(D)
  # DEBUG this => D#303
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first$_M_current => D#4044
  # DEBUG __last$_M_current => D#4045
  # DEBUG __result => NULL
  # DEBUG D.166916 => D#1489
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => __result_202
  # DEBUG __first$_M_current => D#4044
  # DEBUG __cur => __result_202
  # DEBUG __first$_M_current => D#4044
  # DEBUG __cur => __result_202
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (prephitmp_210 != prephitmp_343)
    goto <bb 77>;
  else
    goto <bb 92>;

  <bb 77>:

  <bb 78>:
  # __first$_M_current_336 = PHI <prephitmp_210(77), __first$_M_current_207(91)>
  # __result_378 = PHI <__result_202(77), __result_208(91)>
  # DEBUG __first$_M_current => __first$_M_current_336
  # DEBUG __cur => __result_378
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __result_378
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.124770 => D#20
  if (__result_378 != 0B)
    goto <bb 79>;
  else
    goto <bb 89>;

  <bb 79>:
  # DEBUG this => __result_378
  # DEBUG __x => __first$_M_current_336
  # DEBUG D#1387 => &__first$_M_current_336->D.45977
  # DEBUG this => D#1387
  # DEBUG __a => NULL
  _213 = MEM[(int * *)__first$_M_current_336];
  # DEBUG D#68 => __first$_M_current_336
  _214 = MEM[(int * *)__first$_M_current_336 + 8B];
  # DEBUG D#68 => __first$_M_current_336
  # DEBUG this => D#68
  # DEBUG this => D#68
  _215 = (long int) _214;
  _216 = (long int) _213;
  _217 = _215 - _216;
  _218 = _217 /[ex] 4;
  _219 = (size_type) _218;
  # DEBUG D#1389 => &__result_378->D.45977
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1271 => &D#1389->_M_impl
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG __a => NULL
  # DEBUG this => D#1271
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)__result_378]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_378]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_378]._M_end_of_storage = 0B;
  # DEBUG this => D#1389
  # DEBUG __n => NULL
  # DEBUG D#1269 => D#1389
  # DEBUG __n => _219
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (_219 != 0)
    goto <bb 81>;
  else
    goto <bb 80>;

  <bb 80>:
  pretmp_52 = (long unsigned int) _217;
  goto <bb 85>;

  <bb 81>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => _219
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => _219
  # DEBUG this => D#1263
  # DEBUG D.167018 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (_219 > 4611686018427387903)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  # __result_296 = PHI <__result_202(81)>
  # __result_293 = PHI <__result_378(81)>
  # __first_268 = PHI <__first_414(81)>
  std::__throw_bad_alloc ();

  <bb 83>:
  _232 = (long unsigned int) _217;
  _233 = operator new (_232);
  goto <bb 85>;

  # __result_295 = PHI <__result_202(83)>
  # __result_285 = PHI <__result_378(83)>
  # __first_267 = PHI <__first_414(83)>
<L42>:
  goto <bb 94> (<L27>);

  <bb 85>:
  # iftmp.77_234 = PHI <0B(80), _233(83)>
  # prephitmp_72 = PHI <pretmp_52(80), _232(83)>
  MEM[(struct _Vector_base *)__result_378]._M_impl._M_start = iftmp.77_234;
  MEM[(struct _Vector_base *)__result_378]._M_impl._M_finish = iftmp.77_234;
  _222 = iftmp.77_234 + prephitmp_72;
  MEM[(struct _Vector_base *)__result_378]._M_impl._M_end_of_storage = _222;
  # DEBUG D#1388 => &__result_378->D.45977
  # DEBUG this => D#1388
  _223 = MEM[(int * *)__first$_M_current_336 + 8B];
  # DEBUG D#276 => __first$_M_current_336
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _224 = MEM[(int * *)__first$_M_current_336];
  # DEBUG D#277 => __first$_M_current_336
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _224
  # DEBUG __last => _223
  # DEBUG __result => NULL
  # DEBUG D.166982 => D#1386
  # DEBUG __first => _224
  # DEBUG __last => _223
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _224
  # DEBUG __last => _223
  # DEBUG __result => NULL
  # DEBUG __first => _224
  # DEBUG __last => _223
  # DEBUG __result => NULL
  # DEBUG __it => _223
  # DEBUG __it$_M_current => _223
  # DEBUG __it => _224
  # DEBUG __it$_M_current => _224
  # DEBUG __first => _224
  # DEBUG __last => _223
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _223
  # DEBUG __it => _223
  # DEBUG this => NULL
  # DEBUG __it => _224
  # DEBUG __it => _224
  # DEBUG this => NULL
  # DEBUG __first => _224
  # DEBUG __last => _223
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _224
  # DEBUG __last => _223
  # DEBUG __result => NULL
  __last.79_225 = (long int) _223;
  __first.80_226 = (long int) _224;
  _227 = __last.79_225 - __first.80_226;
  _Num_228 = _227 /[ex] 4;
  # DEBUG _Num => _Num_228
  if (_Num_228 != 0)
    goto <bb 87>;
  else
    goto <bb 86>;

  <bb 86>:
  pretmp_66 = (long unsigned int) _227;
  goto <bb 88>;

  <bb 87>:
  _229 = (long unsigned int) _227;
  __builtin_memmove (iftmp.77_234, _224, _229);

  <bb 88>:
  # prephitmp_69 = PHI <pretmp_66(86), _229(87)>
  _231 = iftmp.77_234 + prephitmp_69;
  __result_378->D.45977._M_impl._M_finish = _231;

  <bb 89>:
  # DEBUG this => &__first
  __first$_M_current_207 = __first$_M_current_336 + 24;
  # DEBUG __first$_M_current => __first$_M_current_207
  __result_208 = __result_378 + 24;
  # DEBUG __cur => __result_208
  # DEBUG __first$_M_current => __first$_M_current_207
  # DEBUG __cur => __result_208
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (__first$_M_current_207 != prephitmp_343)
    goto <bb 91>;
  else
    goto <bb 90>;

  <bb 90>:
  # __result_294 = PHI <__result_208(89)>
  goto <bb 92>;

  <bb 91>:
  goto <bb 78>;

  <bb 92>:
  # __result_151 = PHI <__result_294(90), __result_202(76)>
  __first_414->D.53336._M_impl._M_finish = __result_151;
  goto <bb 106>;

<L41>:

  # __result_263 = PHI <__result_295(84), __result_296(93)>
  # __result_257 = PHI <__result_285(84), __result_293(93)>
  # __first_241 = PHI <__first_267(84), __first_268(93)>
<L27>:
  _209 = __builtin_eh_pointer (22);
  __cxa_begin_catch (_209);
  # DEBUG __first => __result_263
  # DEBUG __last => __result_257
  # DEBUG __first => __result_263
  # DEBUG __last => __result_257
  # DEBUG __first => __result_263
  if (__result_263 == __result_257)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  __cxa_rethrow ();

  <bb 96>:

  <bb 97>:
  # __result_376 = PHI <__result_263(96), __result_212(100)>
  # DEBUG __first => __result_376
  # DEBUG __r => __result_376
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _211 = MEM[(struct _Vector_base *)__result_376]._M_impl._M_start;
  # DEBUG D#473 => (long int) _211
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _211
  # DEBUG __n => D#470
  if (_211 != 0B)
    goto <bb 98>;
  else
    goto <bb 99>;

  <bb 98>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _211
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _211
  # DEBUG this => D#462
  # DEBUG D.166956 => D#463
  operator delete (_211);

  <bb 99>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__result_376] ={v} {CLOBBER};
  __result_212 = __result_376 + 24;
  # DEBUG __first => __result_212
  # DEBUG __first => __result_212
  if (__result_212 == __result_257)
    goto <bb 95>;
  else
    goto <bb 100>;

  <bb 100>:
  goto <bb 97>;

<L29>:
  __cxa_end_catch ();
  resx 21

<L26>:
  # DEBUG D#1492 => &__first_241->D.53336
  # DEBUG this => D#1492
  # DEBUG D#685 => D#1492->_M_impl._M_end_of_storage
  # DEBUG D#684 => (long int) D#685
  _199 = MEM[(struct _Vector_base *)__first_241]._M_impl._M_start;
  # DEBUG D#683 => (long int) _199
  # DEBUG D#682 => D#684 - D#683
  # DEBUG D#681 => D#682 /[ex] 24
  # DEBUG D#678 => D#1492
  # DEBUG D#679 => (long unsigned int) D#681
  # DEBUG __p => _199
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (_199 != 0B)
    goto <bb 103>;
  else
    goto <bb 104>;

  <bb 103>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => _199
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => _199
  # DEBUG this => D#669
  # DEBUG D.166902 => D#670
  operator delete (_199);

  <bb 104>:
  # DEBUG D#680 => &D#1492->_M_impl
  # DEBUG this => D#680
  # DEBUG this => D#680
  # DEBUG this => D#680
  MEM[(struct  &)__first_241] ={v} {CLOBBER};
  resx 19

<L43>:
  goto <bb 110> (<L23>);

  <bb 106>:
  __n_168 = __n_413 + 18446744073709551615;
  # DEBUG __n => __n_168
  __first_169 = __first_414 + 24;
  # DEBUG __cur => __first_169
  # DEBUG __cur => __first_169
  # DEBUG __n => __n_168
  if (__n_168 == 0)
    goto <bb 108>;
  else
    goto <bb 107>;

  <bb 107>:
  goto <bb 68>;

  <bb 108>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2536 => &this_9(D)->D.59334
  # DEBUG this => D#2536
  # DEBUG this => &__position
  _31 = this_9(D)->D.59334._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#4046
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1766
  # DEBUG D#1765 => D#1766
  # DEBUG D#1762 => D#1765
  # DEBUG __first => _31
  # DEBUG __last => D#4046
  # DEBUG __result => NULL
  # DEBUG D.143316 => D#1762
  # DEBUG __first => _31
  # DEBUG __last => D#4046
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<std::vector<int> >*, std::vector<std::vector<int> >*> (_31, __position_22, __new_finish_174);
  goto <bb 116>;

<L39>:

  # __first_237 = PHI <__first_241(105), __first_269(74), __first_272(109)>
<L23>:
  _170 = __builtin_eh_pointer (16);
  __cxa_begin_catch (_170);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_237
  # DEBUG __first => __first_27
  # DEBUG __last => __first_237
  # DEBUG __first => __first_27
  if (__first_27 == __first_237)
    goto <bb 111>;
  else
    goto <bb 112>;

  <bb 111>:
  __cxa_rethrow ();

  <bb 112>:

  <bb 113>:
  # __first_369 = PHI <__first_27(112), __first_172(114)>
  # DEBUG __first => __first_369
  # DEBUG __r => __first_369
  # DEBUG __pointer => NULL
  std::vector<std::vector<int> >::~vector (__first_369);
  __first_172 = __first_369 + 24;
  # DEBUG __first => __first_172
  # DEBUG __first => __first_172
  if (__first_172 == __first_237)
    goto <bb 111>;
  else
    goto <bb 114>;

  <bb 114>:
  goto <bb 113>;

<L25>:
  __cxa_end_catch ();
  resx 17

  <bb 116>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2537 => &this_9(D)->D.59334
  # DEBUG this => D#2537
  _35 = this_9(D)->D.59334._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#4046
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#1766
  # DEBUG D#1765 => D#1766
  # DEBUG D#1762 => D#1765
  # DEBUG __first => D#4046
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.143335 => D#1762
  # DEBUG __first => D#4046
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<std::vector<int> >*, std::vector<std::vector<int> >*> (__position_22, _35, __new_finish_33);
  goto <bb 118>;

<L45>:
  goto <bb 139> (<L13>);

  <bb 118>:
  # DEBUG __new_finish => _91
  # DEBUG D#2538 => &this_9(D)->D.59334
  # DEBUG this => D#2538
  _37 = this_9(D)->D.59334._M_impl._M_finish;
  __first_38 = this_9(D)->D.59334._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 132>;
  else
    goto <bb 119>;

  <bb 119>:

  <bb 120>:
  # __first_21 = PHI <__first_38(119), __first_92(130)>
  # DEBUG __first => __first_21
  # DEBUG __r => __first_21
  # DEBUG __pointer => NULL
  # DEBUG this => __first_21
  # DEBUG D#690 => &__first_21->D.53336
  # DEBUG this => D#690
  _235 = __first_21->D.53336._M_impl._M_finish;
  __first_236 = __first_21->D.53336._M_impl._M_start;
  # DEBUG __first => __first_236
  # DEBUG __last => _235
  # DEBUG __first => __first_236
  if (_235 == __first_236)
    goto <bb 127>;
  else
    goto <bb 121>;

  <bb 121>:

  <bb 122>:
  # __first_220 = PHI <__first_236(121), __first_239(125)>
  # DEBUG __first => __first_220
  # DEBUG __r => __first_220
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _238 = MEM[(struct _Vector_base *)__first_220]._M_impl._M_start;
  # DEBUG D#473 => (long int) _238
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _238
  # DEBUG __n => D#470
  if (_238 != 0B)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 123>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _238
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _238
  # DEBUG this => D#462
  # DEBUG D.167041 => D#463
  operator delete (_238);

  <bb 124>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__first_220] ={v} {CLOBBER};
  __first_239 = __first_220 + 24;
  # DEBUG __first => __first_239
  # DEBUG __first => __first_239
  if (_235 == __first_239)
    goto <bb 126>;
  else
    goto <bb 125>;

  <bb 125>:
  goto <bb 122>;

  <bb 126>:
  pretmp_84 = MEM[(struct _Vector_base *)__first_21]._M_impl._M_start;

  <bb 127>:
  # prephitmp_98 = PHI <pretmp_84(126), __first_236(120)>
  # DEBUG D#691 => &__first_21->D.53336
  # DEBUG this => D#691
  # DEBUG D#685 => D#691->_M_impl._M_end_of_storage
  # DEBUG D#684 => (long int) D#685
  # DEBUG D#4043 => MEM[(struct _Vector_base *)__first_21]._M_impl._M_start
  # DEBUG D#683 => (long int) D#4043
  # DEBUG D#682 => D#684 - D#683
  # DEBUG D#681 => D#682 /[ex] 24
  # DEBUG D#678 => D#691
  # DEBUG D#679 => (long unsigned int) D#681
  # DEBUG __p => D#4043
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (prephitmp_98 != 0B)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => D#4043
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => D#4043
  # DEBUG this => D#669
  # DEBUG D.167055 => D#670
  operator delete (prephitmp_98);

  <bb 129>:
  # DEBUG D#680 => &D#691->_M_impl
  # DEBUG this => D#680
  # DEBUG this => D#680
  # DEBUG this => D#680
  MEM[(struct  &)__first_21] ={v} {CLOBBER};
  __first_92 = __first_21 + 24;
  # DEBUG __first => __first_92
  # DEBUG __first => __first_92
  if (_37 == __first_92)
    goto <bb 131>;
  else
    goto <bb 130>;

  <bb 130>:
  goto <bb 120>;

  <bb 131>:
  pretmp_171 = this_9(D)->D.59334._M_impl._M_start;

  <bb 132>:
  # prephitmp_89 = PHI <pretmp_171(131), __first_38(118)>
  # DEBUG D#2549 => this_9(D)->D.59334._M_impl._M_end_of_storage
  # DEBUG D#2548 => (long int) D#2549
  # DEBUG D#4042 => this_9(D)->D.59334._M_impl._M_start
  # DEBUG D#2547 => (long int) D#4042
  # DEBUG D#2546 => D#2548 - D#2547
  # DEBUG D#2545 => D#2546 /[ex] 24
  # DEBUG D#2544 => &this_9(D)->D.59334
  # DEBUG D#816 => D#2544
  # DEBUG D#817 => (long unsigned int) D#2545
  # DEBUG __p => D#4042
  # DEBUG this => D#816
  # DEBUG __n => D#817
  # DEBUG D#815 => D#817
  # DEBUG D#814 => D#816
  if (prephitmp_89 != 0B)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  # DEBUG D#813 => &D#814->_M_impl
  # DEBUG D#811 => D#813
  # DEBUG D#812 => D#815
  # DEBUG __p => D#4042
  # DEBUG __a => D#811
  # DEBUG __n => D#812
  # DEBUG D#810 => D#812
  # DEBUG D#809 => D#811
  # DEBUG D#807 => D#809
  # DEBUG D#808 => D#810
  # DEBUG __p => D#4042
  # DEBUG this => D#807
  # DEBUG D.143358 => D#808
  operator delete (prephitmp_89);

  <bb 134>:
  this_9(D)->D.59334._M_impl._M_start = __new_finish_174;
  this_9(D)->D.59334._M_impl._M_finish = _91;
  _44 = __new_finish_174 + prephitmp_340;
  this_9(D)->D.59334._M_impl._M_end_of_storage = _44;

  <bb 135>:
  return;

<L33>:

<L10>:
  std::vector<std::vector<int> >::~vector (&__x_copy);
  resx 2

<L44>:

  # __new_finish_1 = PHI <__new_finish_33(117), 0B(138)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 142>;
  else
    goto <bb 140>;

  <bb 140>:
  # DEBUG __first => __new_finish_174
  if (__new_finish_1 == __new_finish_174)
    goto <bb 141>;
  else
    goto <bb 146>;

  <bb 141>:
  # DEBUG D#2550 => &this_9(D)->D.59334
  # DEBUG D#816 => D#2550
  # DEBUG __p => NULL
  # DEBUG this => D#816
  # DEBUG __n => D#817
  # DEBUG D#815 => D#817
  # DEBUG D#814 => D#816
  if (__new_finish_174 != 0B)
    goto <bb 149>;
  else
    goto <bb 150>;

  <bb 142>:
  # DEBUG D#2542 => &this_9(D)->D.59334
  # DEBUG this => D#2542
  _49 = __n_7(D) + __elems_before_408;
  _50 = _49 * 24;
  _51 = __new_finish_174 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51
  # DEBUG __first => __first_27
  if (__first_27 == _51)
    goto <bb 141>;
  else
    goto <bb 143>;

  <bb 143>:

  <bb 144>:
  # __first_404 = PHI <__first_27(143), __first_94(145)>
  # DEBUG __first => __first_404
  # DEBUG __r => __first_404
  # DEBUG __pointer => NULL
  std::vector<std::vector<int> >::~vector (__first_404);
  __first_94 = __first_404 + 24;
  # DEBUG __first => __first_94
  # DEBUG __first => __first_94
  if (_51 == __first_94)
    goto <bb 141>;
  else
    goto <bb 145>;

  <bb 145>:
  goto <bb 144>;

  <bb 146>:

  <bb 147>:
  # __new_finish_405 = PHI <__new_finish_174(146), __new_finish_96(148)>
  # DEBUG __first => __new_finish_405
  # DEBUG __r => __new_finish_405
  # DEBUG __pointer => NULL
  std::vector<std::vector<int> >::~vector (__new_finish_405);
  __new_finish_96 = __new_finish_405 + 24;
  # DEBUG __first => __new_finish_96
  # DEBUG __first => __new_finish_96
  if (__new_finish_1 == __new_finish_96)
    goto <bb 141>;
  else
    goto <bb 148>;

  <bb 148>:
  goto <bb 147>;

  <bb 149>:
  # DEBUG D#813 => &D#814->_M_impl
  # DEBUG D#811 => D#813
  # DEBUG D#812 => D#815
  # DEBUG __p => NULL
  # DEBUG __a => D#811
  # DEBUG __n => D#812
  # DEBUG D#810 => D#812
  # DEBUG D#809 => D#811
  # DEBUG D#807 => D#809
  # DEBUG D#808 => D#810
  # DEBUG __p => NULL
  # DEBUG this => D#807
  # DEBUG D.143401 => D#808
  operator delete (__new_finish_174);

  <bb 150>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 152>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#549 => &this_9(D)->D.59334._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#549
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84479
  # DEBUG this => &__position
  _381 = (long int) __position_22;
  # DEBUG this => &D.84479
  _380 = _381 - _177;
  _193 = _380 /[ex] 24;
  __elems_before_372 = (const size_type) _193;
  # DEBUG __elems_before => __elems_before_372
  # DEBUG D#2551 => &this_9(D)->D.59334
  # DEBUG D#1781 => D#2551
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  goto <bb 66>;

  <bb 153>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#549 => &this_9(D)->D.59334._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#549
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84479
  # DEBUG this => &__position
  _420 = (long int) __position_22;
  # DEBUG this => &D.84479
  _418 = _420 - _177;
  _419 = _418 /[ex] 24;
  __elems_before_373 = (const size_type) _419;
  # DEBUG __elems_before => __elems_before_373
  # DEBUG D#2551 => &this_9(D)->D.59334
  # DEBUG D#1781 => D#2551
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (__len_185 != 0)
    goto <bb 65>;
  else
    goto <bb 67>;

<L30>:
  # DEBUG __new_finish => __new_finish_174
  _166 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_166);
  if (__new_finish_174 == 0B)
    goto <bb 142>;
  else
    goto <bb 141>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<bool>*; _ForwardIterator = std::vector<bool>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIbSaIbEES5_EET0_T_S7_S6_, funcdef_no=5332, decl_uid=90092, cgraph_uid=3580, symbol_order=3581)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<bool>*; _ForwardIterator = std::vector<bool>*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  struct _Bit_iterator D.167333;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.167308;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.167307;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __last$D33304$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D33304$_M_offset;
  struct _Bit_iterator D.167280;
  struct iterator D.167279;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator D.167231;
  struct _Bvector_base * _8;
  void * _12;
  long unsigned int _19;
  unsigned int _26;
  _Bit_type * _27;
  unsigned int _28;
  _Bit_type * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _35;
  long int _36;
  ptrdiff_t _37;
  size_type _38;
  _Bit_type * _41;
  struct _Bvector_base * _43;
  size_t _44;
  long unsigned int _45;
  long unsigned int * _46;
  long unsigned int * _47;
  long int _49;
  long unsigned int _50;
  long unsigned int _51;
  unsigned int _57;
  long int __last.195_62;
  long int __first.196_63;
  long int _64;
  long unsigned int _66;
  long unsigned int _92;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int prephitmp_96;
  long unsigned int _97;
  long unsigned int pretmp_98;
  long unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _102;
  long unsigned int _103;
  _Bit_type cstore_138;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 28>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_135 = PHI <__first_5(D)(3), __first_10(27)>
  # __result_136 = PHI <__result_4(D)(3), __result_11(27)>
  # DEBUG __cur => __result_136
  # DEBUG __first => __first_135
  # DEBUG __r => __result_136
  # DEBUG __p => NULL
  # DEBUG __value => __first_135
  # DEBUG D#20 => 40
  # DEBUG __p => NULL
  # DEBUG D.130721 => D#20
  if (__result_136 != 0B)
    goto <bb 5>;
  else
    goto <bb 25>;

  <bb 5>:
  # DEBUG this => __result_136
  # DEBUG __x => __first_135
  # DEBUG D#1519 => &MEM[(const struct vector *)__first_135].D.48430
  # DEBUG this => D#1519
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.126954 => NULL
  # DEBUG this => NULL
  # DEBUG D#1521 => &__result_136->D.48430
  # DEBUG this => D#1521
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.119804 => NULL
  # DEBUG this => NULL
  # DEBUG D#1028 => &D#1521->_M_impl
  # DEBUG this => D#1028
  # DEBUG __a => NULL
  # DEBUG this => D#1028
  # DEBUG __a => NULL
  # DEBUG this => D#1028
  # DEBUG D.119778 => NULL
  # DEBUG D#1027 => &D#1028->_M_start
  # DEBUG this => D#1027
  # DEBUG D#39 => &D#1027->D.33184
  # DEBUG this => D#39
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#39
  MEM[(struct _Bit_iterator_base *)__result_136]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)__result_136]._M_offset = 0;
  # DEBUG D#1026 => &D#1028->_M_finish
  # DEBUG this => D#1026
  # DEBUG D#39 => &D#1026->D.33184
  # DEBUG this => D#39
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#39
  MEM[(struct _Bit_iterator_base *)__result_136 + 16B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)__result_136 + 16B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)__result_136]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => __first_135
  # DEBUG this => __first_135
  # DEBUG D#208 => &MEM[(const struct vector *)__first_135].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _26 = MEM[(const struct _Bit_iterator *)__first_135].D.33184._M_offset;
  _27 = MEM[(const struct _Bit_iterator *)__first_135].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _27
  # DEBUG __y => _26
  # DEBUG this => D#48
  # DEBUG this => __first_135
  # DEBUG D#209 => &MEM[(const struct vector *)__first_135].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  _28 = MEM[(const struct _Bit_iterator *)__first_135 + 16B].D.33184._M_offset;
  _29 = MEM[(const struct _Bit_iterator *)__first_135 + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _29
  # DEBUG __y => _28
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _30 = (long int) _29;
  _31 = (long int) _27;
  _32 = _30 - _31;
  _33 = _32 * 8;
  _34 = (long int) _28;
  _35 = _33 + _34;
  _36 = (long int) _26;
  _37 = _35 - _36;
  _38 = (size_type) _37;
  # DEBUG this => __result_136
  # DEBUG __n => _38
  # DEBUG D#1506 => &__result_136->D.48430
  # DEBUG D#1504 => D#1506
  # DEBUG __n => _38
  # DEBUG this => D#1504
  # DEBUG D#1503 => D#1504
  # DEBUG __n => _38
  _19 = _38 + 63;
  _44 = _19 >> 6;
  # DEBUG D#1502 => &D#1503->_M_impl
  # DEBUG D#1501 => D#1502
  # DEBUG __n => NULL
  # DEBUG __a => D#1501
  # DEBUG D#1500 => D#1501
  # DEBUG D#1498 => D#1500
  # DEBUG D#1499 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1498
  # DEBUG D.167242 => D#1499
  # DEBUG D#1497 => D#1498
  # DEBUG D#1496 => D#1497
  # DEBUG this => D#1496
  _45 = _44 * 8;
  _46 = operator new (_45);

  <bb 6>:
  # DEBUG __q => _46
  # DEBUG __n => _38
  _47 = _46 + _45;
  __result_136->D.48430._M_impl._M_end_of_storage = _47;
  # DEBUG __r => _46
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  MEM[(struct _Bit_iterator *)__result_136] = _46;
  MEM[(struct _Bit_iterator *)__result_136 + 8B] = 0;
  # DEBUG D#1505 => &__result_136->D.48430._M_impl._M_start
  # DEBUG this => D#1505
  # DEBUG __i => _37
  # DEBUG __tmp$_M_p => _46
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => _37
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => _37
  # DEBUG __n => _37
  _49 = _37 / 64;
  _50 = (long unsigned int) _49;
  _51 = _50 * 8;
  __tmp$_M_p_52 = _46 + _51;
  # DEBUG __tmp$_M_p => __tmp$_M_p_52
  __n_53 = _37 % 64;
  # DEBUG __n => __n_53
  if (__n_53 < 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __n_54 = __n_53 + 64;
  # DEBUG __n => __n_54
  __tmp$_M_p_55 = __tmp$_M_p_52 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_55

  <bb 8>:
  # __n_56 = PHI <__n_53(6), __n_54(7)>
  # __tmp$_M_p_58 = PHI <__tmp$_M_p_52(6), __tmp$_M_p_55(7)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_58
  # DEBUG __n => __n_56
  _57 = (unsigned int) __n_56;
  # DEBUG __tmp$_M_offset => _57
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  MEM[(struct _Bit_iterator *)__result_136 + 16B] = __tmp$_M_p_58;
  MEM[(struct _Bit_iterator *)__result_136 + 24B] = _57;
  # DEBUG this => __first_135
  # DEBUG D#209 => &MEM[(const struct vector *)__first_135].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  __it$D33304$_M_offset_39 = MEM[(const struct _Bit_iterator *)__first_135 + 16B].D.33184._M_offset;
  __first$_M_p_40 = MEM[(const struct _Bit_iterator *)__first_135 + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => __it$D33304$_M_offset_39
  # DEBUG this => D#48
  # DEBUG this => __first_135
  # DEBUG D#208 => &MEM[(const struct vector *)__first_135].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG D#1520 => MEM[(const struct _Bit_iterator *)__first_135].D.33184._M_offset
  _41 = MEM[(const struct _Bit_iterator *)__first_135].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _41
  # DEBUG __y => D#1520
  # DEBUG this => D#48
  # DEBUG D.126974 => D#1520
  # DEBUG D#1515 => __result_136
  # DEBUG D#1518 => __result_136->D.48430._M_impl._M_start
  # DEBUG this => D#1515
  # DEBUG __last$D33304$_M_p => __first$_M_p_40
  # DEBUG __first => _41
  # DEBUG __last => __first$_M_p_40
  # DEBUG __result => _46
  # DEBUG __it => __first$_M_p_40
  # DEBUG __it => __first$_M_p_40
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  # DEBUG __it => _46
  # DEBUG __it => _46
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  __last.195_62 = (long int) __first$_M_p_40;
  __first.196_63 = (long int) _41;
  _64 = __last.195_62 - __first.196_63;
  _Num_65 = _64 /[ex] 8;
  # DEBUG _Num => _Num_65
  if (_Num_65 != 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  pretmp_98 = (long unsigned int) _64;
  goto <bb 11>;

  <bb 10>:
  _66 = (long unsigned int) _64;
  __builtin_memmove (_46, _41, _66);

  <bb 11>:
  # prephitmp_96 = PHI <pretmp_98(9), _66(10)>
  __result$_M_p_68 = _46 + prephitmp_96;
  # DEBUG __q => __result$_M_p_68
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_68
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => __result$_M_p_68
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG D#1513 => __last
  # DEBUG D#1513 => __last
  # DEBUG __it$D33304$_M_p => __first$_M_p_40
  # DEBUG __it$D33304$_M_offset => __it$D33304$_M_offset_39
  # DEBUG __it$D33304$_M_p => __first$_M_p_40
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __it$D33184$_M_p => __result$_M_p_68
  # DEBUG __it$D33184$_M_offset => 0
  # DEBUG __it$D33304$_M_p => __first$_M_p_40
  # DEBUG __it$D33304$_M_offset => __it$D33304$_M_offset_39
  # DEBUG __it$D33304$_M_p => __first$_M_p_40
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => __first$_M_p_40
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_68
  # DEBUG __result$8 => 0
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  __n_86 = (_Distance) __it$D33304$_M_offset_39;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_68
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => __first$_M_p_40
  # DEBUG __n => __n_86
  if (__n_86 == 0)
    goto <bb 25>;
  else
    goto <bb 12>;

  <bb 12>:

  <bb 13>:
  # __n_145 = PHI <__n_86(12), __n_108(23)>
  # __first$8_146 = PHI <0(12), __first$8_110(23)>
  # __first$_M_p_82 = PHI <__first$_M_p_40(12), __first$_M_p_109(23)>
  # __result$8_83 = PHI <0(12), __result$8_112(23)>
  # __result$_M_p_81 = PHI <__result$_M_p_68(12), __result$_M_p_111(23)>
  # DEBUG __result$8 => __result$8_83
  # DEBUG __result$_M_p => __result$_M_p_81
  # DEBUG __first$8 => __first$8_146
  # DEBUG __first$_M_p => __first$_M_p_82
  # DEBUG __n => __n_145
  # DEBUG D#49 => &__first
  # DEBUG D#49 => &__first
  # DEBUG this => D#49
  # DEBUG this => D#49
  _92 = 1 << __first$8_146;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_82
  # DEBUG __y => _92
  # DEBUG this => NULL
  _94 = *__first$_M_p_82;
  _95 = _92 & _94;
  # DEBUG D#41 => &__result
  # DEBUG D#41 => &__result
  # DEBUG this => D#41
  # DEBUG this => D#41
  _97 = 1 << __result$8_83;
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_81
  # DEBUG __y => _97
  # DEBUG this => NULL
  # DEBUG __x => _95 != 0
  if (_95 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _99 = *__result$_M_p_81;
  _100 = _97 | _99;
  goto <bb 16>;

  <bb 15>:
  _101 = *__result$_M_p_81;
  _102 = ~_97;
  _103 = _101 & _102;

  <bb 16>:
  # cstore_138 = PHI <_100(14), _103(15)>
  *__result$_M_p_81 = cstore_138;
  # DEBUG this => &__first
  # DEBUG D#50 => &__first.D.33304
  # DEBUG this => D#50
  # DEBUG __first$8 => __first$8_146 + 1
  if (__first$8_146 == 63)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  __first$8_104 = __first$8_146 + 1;
  goto <bb 19>;

  <bb 18>:
  # DEBUG __first$8 => 0
  __first$_M_p_105 = __first$_M_p_82 + 8;
  # DEBUG __first$_M_p => __first$_M_p_105

  <bb 19>:
  # __first$_M_p_109 = PHI <__first$_M_p_82(17), __first$_M_p_105(18)>
  # __first$8_110 = PHI <__first$8_104(17), 0(18)>
  # DEBUG __first$8 => __first$8_110
  # DEBUG __first$_M_p => __first$_M_p_109
  # DEBUG this => &__result
  # DEBUG D#42 => &__result.D.33184
  # DEBUG this => D#42
  # DEBUG __result$8 => __result$8_83 + 1
  if (__result$8_83 == 63)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  __result$8_106 = __result$8_83 + 1;
  goto <bb 22>;

  <bb 21>:
  # DEBUG __result$8 => 0
  __result$_M_p_107 = __result$_M_p_81 + 8;
  # DEBUG __result$_M_p => __result$_M_p_107

  <bb 22>:
  # __result$_M_p_111 = PHI <__result$_M_p_81(20), __result$_M_p_107(21)>
  # __result$8_112 = PHI <__result$8_106(20), 0(21)>
  # DEBUG __result$8 => __result$8_112
  # DEBUG __result$_M_p => __result$_M_p_111
  __n_108 = __n_145 + -1;
  # DEBUG __n => __n_108
  # DEBUG __result$8 => __result$8_112
  # DEBUG __result$_M_p => __result$_M_p_111
  # DEBUG __first$8 => __first$8_110
  # DEBUG __first$_M_p => __first$_M_p_109
  # DEBUG __n => __n_108
  if (__n_108 == 0)
    goto <bb 25>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 13>;

  # __result_2 = PHI <__result_136(5)>
<L7>:
  _43 = &__result_2->D.48430;
  # DEBUG this => _43
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_43);
  # DEBUG D#1019 => &_43->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__result_2] ={v} {CLOBBER};
  resx 4

  <bb 25>:
  __first_10 = __first_135 + 40;
  # DEBUG __first => __first_10
  __result_11 = __result_136 + 40;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # __result_9 = PHI <__result_11(25)>
  goto <bb 28>;

  <bb 27>:
  goto <bb 4>;

  <bb 28>:
  # __result_139 = PHI <__result_9(26), __result_4(D)(2)>
  return __result_139;

<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_2
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_2
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_2)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  __cxa_rethrow ();

  <bb 31>:

  <bb 32>:
  # __result_142 = PHI <__result_4(D)(31), __result_17(33)>
  # DEBUG __first => __result_142
  # DEBUG __r => __result_142
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _8 = &__result_142->D.48430;
  # DEBUG this => _8
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_8);
  # DEBUG D#1019 => &_8->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__result_142] ={v} {CLOBBER};
  __result_17 = __result_142 + 40;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_2)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<bool>; _Alloc = std::allocator<std::vector<bool> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<bool>*, std::vector<std::vector<bool> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<bool>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<bool>] (_ZNSt6vectorIS_IbSaIbEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3923, decl_uid=60008, cgraph_uid=2171, symbol_order=2172)

Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is not innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<bool>; _Alloc = std::allocator<std::vector<bool> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<bool>*, std::vector<std::vector<bool> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<bool>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<bool>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  unsigned int SR.6576;
  _Bit_type * SR.6575;
  const unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.6572;
  _Bit_type * SR.6571;
  unsigned int SR.6570;
  _Bit_type * SR.6569;
  unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.6566;
  _Bit_type * SR.6565;
  unsigned int SR.6564;
  _Bit_type * SR.6563;
  unsigned int SR.6562;
  _Bit_type * SR.6561;
  unsigned int SR.6560;
  _Bit_type * SR.6559;
  const unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.6556;
  _Bit_type * SR.6555;
  unsigned int SR.6554;
  _Bit_type * SR.6553;
  unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.6550;
  _Bit_type * SR.6549;
  unsigned int SR.6548;
  _Bit_type * SR.6547;
  unsigned int SR.6546;
  _Bit_type * SR.6545;
  unsigned int SR.6544;
  _Bit_type * SR.6543;
  const unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.6540;
  _Bit_type * SR.6539;
  unsigned int SR.6538;
  _Bit_type * SR.6537;
  unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.6534;
  _Bit_type * SR.6533;
  unsigned int SR.6532;
  _Bit_type * SR.6531;
  unsigned int SR.6530;
  _Bit_type * SR.6529;
  struct _Bit_iterator D.168160;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.168135;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.168134;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __last$D33304$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D33304$_M_offset;
  struct _Bit_iterator D.168107;
  struct iterator D.168106;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator D.168058;
  const long unsigned int D.168021;
  const size_type __len;
  size_type D.168020;
  size_type __n;
  struct vector * D.168011;
  struct vector * D.167999;
  struct vector * __first;
  long unsigned int __n;
  struct _Bit_iterator D.167972;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.167947;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.167946;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __last$D33304$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D33304$_M_offset;
  struct _Bit_iterator D.167919;
  struct iterator D.167918;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator D.167862;
  _Bit_type * SR.2752;
  struct vector & D.167860;
  struct _Bit_iterator D.167819;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.167794;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.167793;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __last$D33304$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D33304$_M_offset;
  struct _Bit_iterator D.167766;
  struct iterator D.167765;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator D.167709;
  _Bit_type * SR.2752;
  struct vector & D.167707;
  struct _Bit_iterator D.167666;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.167641;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.167640;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __last$D33304$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D33304$_M_offset;
  struct _Bit_iterator D.167613;
  struct iterator D.167612;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator D.167556;
  _Bit_type * SR.2752;
  struct vector & D.167554;
  struct _Bit_iterator D.167513;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.167488;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.167487;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33304$_M_p;
  unsigned int __it$D33304$_M_offset;
  _Bit_type * __it$D33184$_M_p;
  unsigned int __it$D33184$_M_offset;
  _Bit_type * __last$D33304$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D33304$_M_offset;
  struct _Bit_iterator D.167460;
  struct iterator D.167459;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator D.167411;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  unsigned int _17;
  long unsigned int _18;
  struct vector * _20;
  struct vector * const _23;
  long int __last.199_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  long int _48;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long unsigned int _55;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  struct vector * _67;
  long unsigned int _70;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct vector * _82;
  struct vector * _90;
  struct vector * pretmp_91;
  struct _Bvector_base * _93;
  struct _Bvector_base * _96;
  long unsigned int _129;
  long unsigned int _130;
  long unsigned int _133;
  unsigned int _146;
  _Bit_type * _147;
  unsigned int _148;
  _Bit_type * _149;
  long int _150;
  long int _151;
  long int _152;
  long int _153;
  long int _154;
  long int _155;
  long int _156;
  ptrdiff_t _157;
  size_type _158;
  _Bit_type * _161;
  _Bit_type * const pretmp_162;
  long int pretmp_163;
  size_t _164;
  long unsigned int _165;
  long unsigned int * _166;
  long unsigned int * _167;
  long int _169;
  long unsigned int _170;
  long unsigned int _171;
  unsigned int _177;
  long int __last.195_182;
  long int __first.196_183;
  long int _184;
  long unsigned int _186;
  long unsigned int prephitmp_190;
  long int _197;
  long unsigned int prephitmp_201;
  long unsigned int _212;
  long unsigned int _214;
  long unsigned int _215;
  long unsigned int _217;
  long unsigned int _219;
  long unsigned int _220;
  long unsigned int _221;
  long unsigned int _222;
  long unsigned int _223;
  unsigned int _233;
  _Bit_type * _234;
  unsigned int _235;
  _Bit_type * _236;
  long int _237;
  long int _238;
  long int _239;
  long int _240;
  long int _241;
  long int _242;
  long int _243;
  ptrdiff_t _244;
  size_type _245;
  unsigned int _246;
  _Bit_type * _247;
  long unsigned int * const _248;
  long int _250;
  long int _251;
  long int _252;
  long int _253;
  long int _254;
  ptrdiff_t _255;
  size_type _256;
  struct vector * prephitmp_257;
  unsigned int _258;
  _Bit_type * _259;
  unsigned int _260;
  _Bit_type * _261;
  long int _262;
  long int _263;
  long int _264;
  long int _265;
  long int _266;
  long int _267;
  long int _268;
  ptrdiff_t _269;
  size_type _270;
  _Bit_type * _274;
  size_t _275;
  long unsigned int _276;
  long unsigned int * _277;
  long unsigned int * _278;
  long int _280;
  long unsigned int _281;
  long unsigned int _282;
  unsigned int _288;
  _Bit_type * _290;
  long int _294;
  long int _295;
  long unsigned int _296;
  sizetype _297;
  long unsigned int * _298;
  long int __last.195_302;
  long int __first.196_303;
  long int _304;
  long unsigned int _306;
  long int _314;
  difference_type _321;
  long int _329;
  long unsigned int _332;
  long unsigned int _334;
  long unsigned int _335;
  long unsigned int _337;
  long unsigned int _339;
  long unsigned int _340;
  long unsigned int _341;
  long unsigned int _342;
  long unsigned int _343;
  unsigned int _353;
  unsigned int _355;
  _Bit_type * _356;
  long int _357;
  long int _358;
  long int _359;
  long int _360;
  long int _361;
  long int _362;
  long int _363;
  ptrdiff_t _364;
  size_type _365;
  unsigned int _366;
  _Bit_type * _367;
  long unsigned int * const _368;
  long int _370;
  long int _371;
  long int _372;
  long int _373;
  long int _374;
  ptrdiff_t _375;
  size_type _376;
  size_t _395;
  long unsigned int _396;
  long unsigned int * _397;
  long unsigned int * _398;
  const unsigned int pretmp_399;
  long int _400;
  long unsigned int _401;
  long unsigned int _402;
  unsigned int _408;
  long int _410;
  _Bit_type * prephitmp_414;
  long unsigned int _416;
  sizetype _417;
  long unsigned int * _418;
  long int _419;
  bool _420;
  long unsigned int _426;
  long int _431;
  difference_type _435;
  long unsigned int _452;
  long unsigned int _454;
  long unsigned int _455;
  long unsigned int _457;
  long unsigned int _459;
  long unsigned int _460;
  long unsigned int _461;
  long unsigned int _462;
  long unsigned int _463;
  unsigned int _473;
  unsigned int _475;
  _Bit_type * _476;
  long int _477;
  long int _478;
  long int _479;
  long int _480;
  long int _481;
  long int _482;
  long int _483;
  ptrdiff_t _484;
  size_type _485;
  unsigned int _486;
  _Bit_type * _487;
  long unsigned int * const _488;
  long int _490;
  long int _491;
  long int _492;
  long int _493;
  long int _494;
  ptrdiff_t _495;
  size_type _496;
  size_t _515;
  long unsigned int _516;
  long unsigned int * _517;
  long unsigned int * _518;
  long int _520;
  long unsigned int _521;
  long unsigned int _522;
  unsigned int _528;
  long unsigned int _536;
  sizetype _537;
  long unsigned int * _538;
  long unsigned int _546;
  long int pretmp_551;
  long unsigned int prephitmp_558;
  long unsigned int pretmp_559;
  long unsigned int pretmp_560;
  long unsigned int prephitmp_561;
  long unsigned int pretmp_568;
  long unsigned int _572;
  long unsigned int _574;
  long unsigned int _575;
  long unsigned int _577;
  long unsigned int _579;
  long unsigned int _580;
  long unsigned int _581;
  long unsigned int _582;
  long unsigned int _583;
  long unsigned int * const _594;
  long int _596;
  long int _597;
  long int _598;
  long unsigned int _599;
  sizetype _600;
  long unsigned int * _601;
  void * _602;
  void * _605;
  struct _Bvector_base * _607;
  struct vector * _609;
  long int _613;
  long int _614;
  long int _615;
  long unsigned int _617;
  _Bit_type * _623;
  unsigned int _624;
  _Bit_type * _625;
  long int _626;
  long int _627;
  long int _628;
  long int _629;
  long int _630;
  long int _631;
  long int _632;
  ptrdiff_t _633;
  size_type _634;
  _Bit_type * _637;
  struct _Bvector_base * _639;
  long unsigned int _640;
  size_t _641;
  long unsigned int _642;
  long unsigned int * _643;
  long unsigned int * _644;
  long int _646;
  long unsigned int _647;
  long unsigned int _648;
  unsigned int _654;
  long int __last.195_659;
  long int __first.196_660;
  long int _661;
  long unsigned int _663;
  bool _673;
  bool _676;
  _Bit_type * const prephitmp_682;
  _Bit_type * const prephitmp_685;
  _Bit_type * const pretmp_686;
  long unsigned int _689;
  long unsigned int _691;
  long unsigned int _692;
  long unsigned int _694;
  long unsigned int _696;
  long unsigned int _697;
  long unsigned int _698;
  long unsigned int _699;
  long unsigned int _700;
  _Bit_type * _710;
  long unsigned int * const _711;
  long int _713;
  long int _714;
  long int _715;
  long unsigned int _716;
  sizetype _717;
  long unsigned int * _718;
  _Bit_type cstore_777;
  _Bit_type cstore_825;
  _Bit_type cstore_852;
  _Bit_type cstore_882;
  _Bit_type cstore_912;
  _Bit_type * prephitmp_915;
  _Bit_type * prephitmp_916;
  long int pretmp_931;
  long int prephitmp_932;
  _Distance pretmp_933;
  _Distance prephitmp_934;
  long unsigned int pretmp_936;
  long unsigned int prephitmp_937;
  _Bit_type * pretmp_938;
  _Bit_type * prephitmp_939;
  const unsigned int pretmp_945;
  _Bit_type * const pretmp_947;
  const unsigned int pretmp_949;
  _Bit_type * const pretmp_951;
  long int pretmp_953;
  long int pretmp_955;
  long int pretmp_957;
  long int pretmp_959;
  long int pretmp_961;
  long int pretmp_963;
  long int pretmp_965;
  ptrdiff_t pretmp_967;
  ptrdiff_t prephitmp_968;
  size_type pretmp_969;
  size_type prephitmp_970;
  _Bit_type * prephitmp_998;
  const unsigned int pretmp_999;
  _Bit_type * const pretmp_1001;
  _Bit_type * const prephitmp_1002;
  _Bit_type * const pretmp_1003;
  _Bit_type * const prephitmp_1004;
  long int pretmp_1005;
  long int pretmp_1007;
  long int pretmp_1009;
  long int prephitmp_1010;
  _Distance pretmp_1011;
  _Distance prephitmp_1012;
  long unsigned int pretmp_1014;
  long unsigned int prephitmp_1015;
  _Bit_type * pretmp_1016;
  _Bit_type * prephitmp_1017;
  const unsigned int pretmp_1023;
  _Bit_type * const pretmp_1025;
  const unsigned int pretmp_1027;
  _Bit_type * const pretmp_1029;
  long int pretmp_1031;
  long int pretmp_1033;
  long int pretmp_1035;
  long int pretmp_1037;
  long int pretmp_1039;
  long int pretmp_1041;
  long int pretmp_1043;
  ptrdiff_t pretmp_1045;
  ptrdiff_t prephitmp_1046;
  size_type pretmp_1047;
  size_type prephitmp_1048;
  long unsigned int pretmp_1055;
  long unsigned int prephitmp_1056;
  _Bit_type * prephitmp_1068;
  _Bit_type * prephitmp_1070;
  _Bit_type * pretmp_1071;
  _Bit_type * pretmp_1072;
  _Bit_type * prephitmp_1073;
  _Bit_type * const pretmp_1074;
  _Bit_type * const prephitmp_1075;
  _Bit_type * const pretmp_1076;
  _Bit_type * const prephitmp_1077;

  <bb 2>:
  # DEBUG D#4104 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#4104
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 178>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.60085._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.60085._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 40;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 130>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#1519 => &MEM[(const struct vector *)__x_28(D)].D.48430
  # DEBUG this => D#1519
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.126954 => NULL
  # DEBUG this => NULL
  # DEBUG D#1521 => &__x_copy.D.48430
  # DEBUG this => D#1521
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.119804 => NULL
  # DEBUG this => NULL
  # DEBUG D#1028 => &D#1521->_M_impl
  # DEBUG this => D#1028
  # DEBUG __a => NULL
  # DEBUG this => D#1028
  # DEBUG __a => NULL
  # DEBUG this => D#1028
  # DEBUG D.119778 => NULL
  # DEBUG D#1027 => &D#1028->_M_start
  # DEBUG this => D#1027
  # DEBUG D#39 => &D#1027->D.33184
  # DEBUG this => D#39
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#39
  MEM[(struct _Bit_iterator_base *)&__x_copy]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)&__x_copy]._M_offset = 0;
  # DEBUG D#1026 => &D#1028->_M_finish
  # DEBUG this => D#1026
  # DEBUG D#39 => &D#1026->D.33184
  # DEBUG this => D#39
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#39
  MEM[(struct _Bit_iterator_base *)&__x_copy + 16B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)&__x_copy + 16B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => __x_28(D)
  # DEBUG this => __x_28(D)
  # DEBUG D#208 => &MEM[(const struct vector *)__x_28(D)].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _146 = MEM[(const struct _Bit_iterator *)__x_28(D)].D.33184._M_offset;
  _147 = MEM[(const struct _Bit_iterator *)__x_28(D)].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _147
  # DEBUG __y => _146
  # DEBUG this => D#48
  # DEBUG this => __x_28(D)
  # DEBUG D#209 => &MEM[(const struct vector *)__x_28(D)].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  _148 = MEM[(const struct _Bit_iterator *)__x_28(D) + 16B].D.33184._M_offset;
  _149 = MEM[(const struct _Bit_iterator *)__x_28(D) + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _149
  # DEBUG __y => _148
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _150 = (long int) _149;
  _151 = (long int) _147;
  _152 = _150 - _151;
  _153 = _152 * 8;
  _154 = (long int) _148;
  _155 = _153 + _154;
  _156 = (long int) _146;
  _157 = _155 - _156;
  _158 = (size_type) _157;
  # DEBUG this => &__x_copy
  # DEBUG __n => _158
  # DEBUG D#1506 => &__x_copy.D.48430
  # DEBUG D#1504 => D#1506
  # DEBUG __n => _158
  # DEBUG this => D#1504
  # DEBUG D#1503 => D#1504
  # DEBUG __n => _158
  _55 = _158 + 63;
  _164 = _55 >> 6;
  # DEBUG D#1502 => &D#1503->_M_impl
  # DEBUG D#1501 => D#1502
  # DEBUG __n => NULL
  # DEBUG __a => D#1501
  # DEBUG D#1500 => D#1501
  # DEBUG D#1498 => D#1500
  # DEBUG D#1499 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1498
  # DEBUG D.167422 => D#1499
  # DEBUG D#1497 => D#1498
  # DEBUG D#1496 => D#1497
  # DEBUG this => D#1496
  _165 = _164 * 8;
  _166 = operator new (_165);

  <bb 5>:
  # DEBUG __q => _166
  # DEBUG __n => _158
  _167 = _166 + _165;
  __x_copy.D.48430._M_impl._M_end_of_storage = _167;
  # DEBUG __r => _166
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  MEM[(struct _Bit_iterator *)&__x_copy] = _166;
  MEM[(struct _Bit_iterator *)&__x_copy + 8B] = 0;
  # DEBUG D#1505 => &__x_copy.D.48430._M_impl._M_start
  # DEBUG this => D#1505
  # DEBUG __i => _157
  # DEBUG __tmp$_M_p => _166
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => _157
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => _157
  # DEBUG __n => _157
  _169 = _157 / 64;
  _170 = (long unsigned int) _169;
  _171 = _170 * 8;
  __tmp$_M_p_172 = _166 + _171;
  # DEBUG __tmp$_M_p => __tmp$_M_p_172
  __n_173 = _157 % 64;
  # DEBUG __n => __n_173
  if (__n_173 < 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __n_174 = __n_173 + 64;
  # DEBUG __n => __n_174
  __tmp$_M_p_175 = __tmp$_M_p_172 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_175

  <bb 7>:
  # __n_176 = PHI <__n_173(5), __n_174(6)>
  # __tmp$_M_p_178 = PHI <__tmp$_M_p_172(5), __tmp$_M_p_175(6)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_178
  # DEBUG __n => __n_176
  _177 = (unsigned int) __n_176;
  # DEBUG __tmp$_M_offset => _177
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  MEM[(struct _Bit_iterator *)&__x_copy + 16B] = __tmp$_M_p_178;
  MEM[(struct _Bit_iterator *)&__x_copy + 24B] = _177;
  # DEBUG this => __x_28(D)
  # DEBUG D#209 => &MEM[(const struct vector *)__x_28(D)].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  __it$D33304$_M_offset_159 = MEM[(const struct _Bit_iterator *)__x_28(D) + 16B].D.33184._M_offset;
  __first$_M_p_160 = MEM[(const struct _Bit_iterator *)__x_28(D) + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => __first$_M_p_160
  # DEBUG __y => __it$D33304$_M_offset_159
  # DEBUG this => D#48
  # DEBUG this => __x_28(D)
  # DEBUG D#208 => &MEM[(const struct vector *)__x_28(D)].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG D#1520 => MEM[(const struct _Bit_iterator *)__x_28(D)].D.33184._M_offset
  _161 = MEM[(const struct _Bit_iterator *)__x_28(D)].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _161
  # DEBUG __y => D#1520
  # DEBUG this => D#48
  # DEBUG D.126974 => D#1520
  # DEBUG D#1515 => &__x_copy
  # DEBUG D#1518 => __x_copy.D.48430._M_impl._M_start
  # DEBUG this => D#1515
  # DEBUG __last$D33304$_M_p => __first$_M_p_160
  # DEBUG __first => _161
  # DEBUG __last => __first$_M_p_160
  # DEBUG __result => _166
  # DEBUG __it => __first$_M_p_160
  # DEBUG __it => __first$_M_p_160
  # DEBUG __it => _161
  # DEBUG __it => _161
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _166
  # DEBUG __it => _166
  # DEBUG __it => _166
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _166
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _166
  __last.195_182 = (long int) __first$_M_p_160;
  __first.196_183 = (long int) _161;
  _184 = __last.195_182 - __first.196_183;
  _Num_185 = _184 /[ex] 8;
  # DEBUG _Num => _Num_185
  if (_Num_185 != 0)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  pretmp_559 = (long unsigned int) _184;
  goto <bb 10>;

  <bb 9>:
  _186 = (long unsigned int) _184;
  __builtin_memmove (_166, _161, _186);

  <bb 10>:
  # prephitmp_558 = PHI <pretmp_559(8), _186(9)>
  __result$_M_p_188 = _166 + prephitmp_558;
  # DEBUG __q => __result$_M_p_188
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_188
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => __result$_M_p_188
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_160
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => __first$_M_p_160
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG D#1513 => __last
  # DEBUG D#1513 => __last
  # DEBUG __it$D33304$_M_p => __first$_M_p_160
  # DEBUG __it$D33304$_M_offset => __it$D33304$_M_offset_159
  # DEBUG __it$D33304$_M_p => __first$_M_p_160
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __it$D33184$_M_p => __result$_M_p_188
  # DEBUG __it$D33184$_M_offset => 0
  # DEBUG __it$D33304$_M_p => __first$_M_p_160
  # DEBUG __it$D33304$_M_offset => __it$D33304$_M_offset_159
  # DEBUG __it$D33304$_M_p => __first$_M_p_160
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => __first$_M_p_160
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_188
  # DEBUG __result$8 => 0
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  __n_206 = (_Distance) __it$D33304$_M_offset_159;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_188
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => __first$_M_p_160
  # DEBUG __n => __n_206
  if (__n_206 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG this => this_9(D)
  # DEBUG D#306 => &this_9(D)->D.60085._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#306
  __old_finish_29 = MEM[(struct vector * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.84634
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84634
  _48 = (long int) __old_finish_29;
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = _48 - _36;
  _30 = _34 /[ex] 40;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_29
  if (__n_7(D) < __elems_after_57)
    goto <bb 25>;
  else
    goto <bb 89>;

  <bb 12>:

  <bb 13>:
  # __n_902 = PHI <__n_206(12), __n_228(23)>
  # __first$8_903 = PHI <0(12), __first$8_230(23)>
  # __first$_M_p_904 = PHI <__first$_M_p_160(12), __first$_M_p_229(23)>
  # __result$8_905 = PHI <0(12), __result$8_232(23)>
  # __result$_M_p_908 = PHI <__result$_M_p_188(12), __result$_M_p_231(23)>
  # DEBUG __result$8 => __result$8_905
  # DEBUG __result$_M_p => __result$_M_p_908
  # DEBUG __first$8 => __first$8_903
  # DEBUG __first$_M_p => __first$_M_p_904
  # DEBUG __n => __n_902
  # DEBUG D#49 => &__first
  # DEBUG D#49 => &__first
  # DEBUG this => D#49
  # DEBUG this => D#49
  _212 = 1 << __first$8_903;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_904
  # DEBUG __y => _212
  # DEBUG this => NULL
  _214 = *__first$_M_p_904;
  _215 = _212 & _214;
  # DEBUG D#41 => &__result
  # DEBUG D#41 => &__result
  # DEBUG this => D#41
  # DEBUG this => D#41
  _217 = 1 << __result$8_905;
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_908
  # DEBUG __y => _217
  # DEBUG this => NULL
  # DEBUG __x => _215 != 0
  if (_215 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _219 = *__result$_M_p_908;
  _220 = _217 | _219;
  goto <bb 16>;

  <bb 15>:
  _221 = *__result$_M_p_908;
  _222 = ~_217;
  _223 = _221 & _222;

  <bb 16>:
  # cstore_825 = PHI <_220(14), _223(15)>
  *__result$_M_p_908 = cstore_825;
  # DEBUG this => &__first
  # DEBUG D#50 => &__first.D.33304
  # DEBUG this => D#50
  # DEBUG __first$8 => __first$8_903 + 1
  if (__first$8_903 == 63)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  __first$8_224 = __first$8_903 + 1;
  goto <bb 19>;

  <bb 18>:
  # DEBUG __first$8 => 0
  __first$_M_p_225 = __first$_M_p_904 + 8;
  # DEBUG __first$_M_p => __first$_M_p_225

  <bb 19>:
  # __first$_M_p_229 = PHI <__first$_M_p_904(17), __first$_M_p_225(18)>
  # __first$8_230 = PHI <__first$8_224(17), 0(18)>
  # DEBUG __first$8 => __first$8_230
  # DEBUG __first$_M_p => __first$_M_p_229
  # DEBUG this => &__result
  # DEBUG D#42 => &__result.D.33184
  # DEBUG this => D#42
  # DEBUG __result$8 => __result$8_905 + 1
  if (__result$8_905 == 63)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  __result$8_226 = __result$8_905 + 1;
  goto <bb 22>;

  <bb 21>:
  # DEBUG __result$8 => 0
  __result$_M_p_227 = __result$_M_p_908 + 8;
  # DEBUG __result$_M_p => __result$_M_p_227

  <bb 22>:
  # __result$_M_p_231 = PHI <__result$_M_p_908(20), __result$_M_p_227(21)>
  # __result$8_232 = PHI <__result$8_226(20), 0(21)>
  # DEBUG __result$8 => __result$8_232
  # DEBUG __result$_M_p => __result$_M_p_231
  __n_228 = __n_902 + -1;
  # DEBUG __n => __n_228
  # DEBUG __result$8 => __result$8_232
  # DEBUG __result$_M_p => __result$_M_p_231
  # DEBUG __first$8 => __first$8_230
  # DEBUG __first$_M_p => __first$_M_p_229
  # DEBUG __n => __n_228
  if (__n_228 == 0)
    goto <bb 11>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 13>;

<L19>:
  # DEBUG this => &__x_copy.D.48430
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&__x_copy.D.48430);
  # DEBUG D#1019 => &MEM[(struct _Bvector_base *)&__x_copy]._M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  resx 12

  <bb 25>:
  # DEBUG D#1806 => &this_9(D)->D.60085
  # DEBUG this => D#1806
  _59 = __n_7(D) * 40;
  _60 = -_59;
  __last_61 = __old_finish_29 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG __alloc => D#1784
  # DEBUG D#1783 => D#1784
  # DEBUG D#1782 => D#1783
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG D.130986 => D#1782
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<bool>*, std::vector<bool>*> (__last_61, __old_finish_29, __old_finish_29);

  <bb 26>:
  _62 = this_9(D)->D.60085._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.60085._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#4104
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4104
  # DEBUG __it => D#4104
  # DEBUG __first => D#4104
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __it => __old_finish_29
  # DEBUG __it => __old_finish_29
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4104
  # DEBUG __it => D#4104
  # DEBUG __first => D#4104
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __simple => 0
  # DEBUG __first => D#4104
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  __last.199_25 = (long int) __last_61;
  _78 = __last.199_25 - _36;
  __n_73 = _78 /[ex] 40;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => __old_finish_29
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#4104
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4104
  if (__position_22 == _67)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 28>:

  <bb 29>:
  # __old_finish_780 = PHI <__old_finish_29(28), __old_finish_65(57)>
  # __last_781 = PHI <__last_61(28), __last_68(57)>
  # __n_782 = PHI <__n_73(28), __n_58(57)>
  # DEBUG __n => __n_782
  # DEBUG __result => __old_finish_780
  # DEBUG __last => __last_781
  __last_68 = __last_781 + 18446744073709551576;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_780 + 18446744073709551576;
  # DEBUG __result => __old_finish_65
  # DEBUG this => __old_finish_65
  # DEBUG __x => __last_68
  if (__old_finish_65 == __last_68)
    goto <bb 56>;
  else
    goto <bb 30>;

  <bb 30>:
  # DEBUG this => __last_68
  # DEBUG this => __last_68
  # DEBUG D#208 => &MEM[(const struct vector *)__last_68].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _233 = MEM[(const struct _Bit_iterator *)__last_68].D.33184._M_offset;
  _234 = MEM[(const struct _Bit_iterator *)__last_68].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _234
  # DEBUG __y => _233
  # DEBUG this => D#48
  # DEBUG this => __last_68
  # DEBUG D#209 => &MEM[(const struct vector *)__last_68].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  _235 = MEM[(const struct _Bit_iterator *)__last_68 + 16B].D.33184._M_offset;
  _236 = MEM[(const struct _Bit_iterator *)__last_68 + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _236
  # DEBUG __y => _235
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _237 = (long int) _236;
  _238 = (long int) _234;
  _239 = _237 - _238;
  _240 = _239 * 8;
  _241 = (long int) _235;
  _242 = _240 + _241;
  _243 = (long int) _233;
  _244 = _242 - _243;
  _245 = (size_type) _244;
  # DEBUG this => __old_finish_65
  # DEBUG this => __old_finish_65
  # DEBUG D#208 => &MEM[(const struct vector *)__old_finish_65].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _246 = MEM[(const struct _Bit_iterator *)__old_finish_65].D.33184._M_offset;
  _247 = MEM[(const struct _Bit_iterator *)__old_finish_65].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _247
  # DEBUG __y => _246
  # DEBUG this => D#48
  # DEBUG D#557 => &MEM[(const struct vector *)__old_finish_65].D.48430._M_impl
  _248 = MEM[(long unsigned int * *)__old_finish_65 + 32B];
  # DEBUG D#375 => D#557
  # DEBUG this => D#375
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _250 = (long int) _248;
  _251 = (long int) _247;
  _252 = _250 - _251;
  _253 = _252 * 8;
  _254 = (long int) _246;
  _255 = _253 - _254;
  _256 = (size_type) _255;
  if (_245 > _256)
    goto <bb 31>;
  else
    goto <bb 38>;

  <bb 31>:
  # DEBUG D#4064 => &__old_finish_65->D.48430
  # DEBUG this => D#4064
  _290 = MEM[(struct _Bvector_base *)__old_finish_65]._M_impl._M_start.D.33184._M_p;
  if (_290 != 0B)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # DEBUG D#1015 => &D#4064->_M_impl
  # DEBUG D#375 => D#1015
  # DEBUG this => D#375
  _294 = (long int) _290;
  _295 = _250 - _294;
  # DEBUG D#1018 => _295 /[ex] 8
  # DEBUG D#1017 => (const size_t) D#1018
  # DEBUG __n => D#1017
  _296 = (long unsigned int) _295;
  _297 = -_296;
  _298 = _248 + _297;
  # DEBUG D#1016 => &D#4064->_M_impl
  # DEBUG D#1013 => D#1016
  # DEBUG D#1014 => D#1017
  # DEBUG __p => _298
  # DEBUG __a => D#1013
  # DEBUG __n => D#1014
  # DEBUG D#1012 => D#1014
  # DEBUG D#1011 => D#1013
  # DEBUG D#1009 => D#1011
  # DEBUG D#1010 => D#1012
  # DEBUG __p => _298
  # DEBUG this => D#1009
  # DEBUG D.167587 => D#1010
  operator delete (_298);

  <bb 33>:
  # DEBUG this => __last_68
  # DEBUG this => __last_68
  # DEBUG D#208 => &MEM[(const struct vector *)__last_68].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _258 = MEM[(const struct _Bit_iterator *)__last_68].D.33184._M_offset;
  _259 = MEM[(const struct _Bit_iterator *)__last_68].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _259
  # DEBUG __y => _258
  # DEBUG this => D#48
  # DEBUG this => __last_68
  # DEBUG D#209 => &MEM[(const struct vector *)__last_68].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  _260 = MEM[(const struct _Bit_iterator *)__last_68 + 16B].D.33184._M_offset;
  _261 = MEM[(const struct _Bit_iterator *)__last_68 + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _261
  # DEBUG __y => _260
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _262 = (long int) _261;
  _263 = (long int) _259;
  _264 = _262 - _263;
  _265 = _264 * 8;
  _266 = (long int) _260;
  _267 = _265 + _266;
  _268 = (long int) _258;
  _269 = _267 - _268;
  _270 = (size_type) _269;
  # DEBUG this => __old_finish_65
  # DEBUG __n => _270
  # DEBUG D#1506 => &__old_finish_65->D.48430
  # DEBUG D#1504 => D#1506
  # DEBUG __n => _270
  # DEBUG this => D#1504
  # DEBUG D#1503 => D#1504
  # DEBUG __n => _270
  _129 = _270 + 63;
  _275 = _129 >> 6;
  # DEBUG D#1502 => &D#1503->_M_impl
  # DEBUG D#1501 => D#1502
  # DEBUG __n => NULL
  # DEBUG __a => D#1501
  # DEBUG D#1500 => D#1501
  # DEBUG D#1498 => D#1500
  # DEBUG D#1499 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1498
  # DEBUG D.167566 => D#1499
  # DEBUG D#1497 => D#1498
  # DEBUG D#1496 => D#1497
  # DEBUG this => D#1496
  _276 = _275 * 8;
  _277 = operator new (_276);
  goto <bb 35>;

<L26>:
  goto <bb 180> (<L10>);

  <bb 35>:
  # DEBUG __q => _277
  # DEBUG __n => _270
  _278 = _277 + _276;
  __old_finish_65->D.48430._M_impl._M_end_of_storage = _278;
  # DEBUG __r => _277
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  MEM[(struct _Bit_iterator *)__old_finish_65] = _277;
  MEM[(struct _Bit_iterator *)__old_finish_65 + 8B] = 0;
  # DEBUG D#1505 => &__old_finish_65->D.48430._M_impl._M_start
  # DEBUG this => D#1505
  # DEBUG __i => _269
  # DEBUG __tmp$_M_p => _277
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => _269
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => _269
  # DEBUG __n => _269
  _280 = _269 / 64;
  _281 = (long unsigned int) _280;
  _282 = _281 * 8;
  __tmp$_M_p_283 = _277 + _282;
  # DEBUG __tmp$_M_p => __tmp$_M_p_283
  __n_284 = _269 % 64;
  # DEBUG __n => __n_284
  if (__n_284 < 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  __n_285 = __n_284 + 64;
  # DEBUG __n => __n_285
  __tmp$_M_p_286 = __tmp$_M_p_283 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_286

  <bb 37>:
  # __n_287 = PHI <__n_284(35), __n_285(36)>
  # __tmp$_M_p_289 = PHI <__tmp$_M_p_283(35), __tmp$_M_p_286(36)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_289
  # DEBUG __n => __n_287
  _288 = (unsigned int) __n_287;
  # DEBUG __tmp$_M_offset => _288
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  MEM[(struct _Bit_iterator *)__old_finish_65 + 16B] = __tmp$_M_p_289;
  MEM[(struct _Bit_iterator *)__old_finish_65 + 24B] = _288;

  <bb 38>:
  # DEBUG this => __old_finish_65
  SR.2752_271 = MEM[(struct vector *)__old_finish_65];
  # DEBUG D#1523 => MEM[(struct vector *)__old_finish_65 + 8B]
  # DEBUG D.127035 => D#1523
  # DEBUG this => __last_68
  # DEBUG D#209 => &MEM[(const struct vector *)__last_68].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  __it$D33304$_M_offset_272 = MEM[(const struct _Bit_iterator *)__last_68 + 16B].D.33184._M_offset;
  __first$_M_p_273 = MEM[(const struct _Bit_iterator *)__last_68 + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => __first$_M_p_273
  # DEBUG __y => __it$D33304$_M_offset_272
  # DEBUG this => D#48
  # DEBUG this => __last_68
  # DEBUG D#208 => &MEM[(const struct vector *)__last_68].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG D#1522 => MEM[(const struct _Bit_iterator *)__last_68].D.33184._M_offset
  _274 = MEM[(const struct _Bit_iterator *)__last_68].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _274
  # DEBUG __y => D#1522
  # DEBUG this => D#48
  # DEBUG D.127039 => D#1522
  # DEBUG D#1515 => __old_finish_65
  # DEBUG this => D#1515
  # DEBUG __last$D33304$_M_p => __first$_M_p_273
  # DEBUG __first => _274
  # DEBUG __last => __first$_M_p_273
  # DEBUG __result => SR.2752_271
  # DEBUG __it => __first$_M_p_273
  # DEBUG __it => __first$_M_p_273
  # DEBUG __it => _274
  # DEBUG __it => _274
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => SR.2752_271
  # DEBUG __it => SR.2752_271
  # DEBUG __it => SR.2752_271
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => SR.2752_271
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => SR.2752_271
  __last.195_302 = (long int) __first$_M_p_273;
  __first.196_303 = (long int) _274;
  _304 = __last.195_302 - __first.196_303;
  _Num_305 = _304 /[ex] 8;
  # DEBUG _Num => _Num_305
  if (_Num_305 != 0)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:
  pretmp_1055 = (long unsigned int) _304;
  goto <bb 41>;

  <bb 40>:
  _306 = (long unsigned int) _304;
  __builtin_memmove (SR.2752_271, _274, _306);

  <bb 41>:
  # prephitmp_1056 = PHI <pretmp_1055(39), _306(40)>
  SR.6529_308 = SR.2752_271 + prephitmp_1056;
  # DEBUG __q => SR.6529_308
  # DEBUG this => NULL
  # DEBUG __x => SR.6529_308
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => SR.6529_308
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_273
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => __first$_M_p_273
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG D#1513 => __last
  # DEBUG D#1513 => __last
  # DEBUG __it$D33304$_M_p => __first$_M_p_273
  # DEBUG __it$D33304$_M_offset => __it$D33304$_M_offset_272
  # DEBUG __it$D33304$_M_p => __first$_M_p_273
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __it$D33184$_M_p => SR.6529_308
  # DEBUG __it$D33184$_M_offset => 0
  # DEBUG __it$D33304$_M_p => __first$_M_p_273
  # DEBUG __it$D33304$_M_offset => __it$D33304$_M_offset_272
  # DEBUG __it$D33304$_M_p => __first$_M_p_273
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __result => SR.6529_308
  # DEBUG __result$8 => 0
  # DEBUG __simple => 0
  # DEBUG __result => SR.6529_308
  # DEBUG __result$8 => 0
  # DEBUG __first$_M_p => __first$_M_p_273
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => SR.6529_308
  # DEBUG __result$8 => 0
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  __n_326 = (_Distance) __it$D33304$_M_offset_272;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => SR.6529_308
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => __first$_M_p_273
  # DEBUG __n => __n_326
  if (__n_326 == 0)
    goto <bb 55>;
  else
    goto <bb 42>;

  <bb 42>:

  <bb 43>:
  # __n_909 = PHI <__n_326(42), __n_348(54)>
  # __first$8_872 = PHI <0(42), __first$8_350(54)>
  # __first$_M_p_873 = PHI <__first$_M_p_273(42), __first$_M_p_349(54)>
  # SR.6530_874 = PHI <0(42), SR.6530_352(54)>
  # SR.6529_878 = PHI <SR.6529_308(42), SR.6529_351(54)>
  # DEBUG __result$8 => SR.6530_874
  # DEBUG __result$_M_p => SR.6529_878
  # DEBUG __first$8 => __first$8_872
  # DEBUG __first$_M_p => __first$_M_p_873
  # DEBUG __n => __n_909
  # DEBUG D#49 => &__first
  # DEBUG D#49 => &__first
  # DEBUG this => D#49
  # DEBUG this => D#49
  _332 = 1 << __first$8_872;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_873
  # DEBUG __y => _332
  # DEBUG this => NULL
  _334 = *__first$_M_p_873;
  _335 = _332 & _334;
  # DEBUG D#41 => &__result
  # DEBUG D#41 => &__result
  # DEBUG this => D#41
  # DEBUG this => D#41
  _337 = 1 << SR.6530_874;
  # DEBUG this => NULL
  # DEBUG __x => SR.6529_878
  # DEBUG __y => _337
  # DEBUG this => NULL
  # DEBUG __x => _335 != 0
  if (_335 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  _339 = *SR.6529_878;
  _340 = _337 | _339;
  goto <bb 46>;

  <bb 45>:
  _341 = *SR.6529_878;
  _342 = ~_337;
  _343 = _341 & _342;

  <bb 46>:
  # cstore_852 = PHI <_340(44), _343(45)>
  *SR.6529_878 = cstore_852;
  # DEBUG this => &__first
  # DEBUG D#50 => &__first.D.33304
  # DEBUG this => D#50
  # DEBUG __first$8 => __first$8_872 + 1
  if (__first$8_872 == 63)
    goto <bb 48>;
  else
    goto <bb 47>;

  <bb 47>:
  __first$8_344 = __first$8_872 + 1;
  goto <bb 49>;

  <bb 48>:
  # DEBUG __first$8 => 0
  __first$_M_p_345 = __first$_M_p_873 + 8;
  # DEBUG __first$_M_p => __first$_M_p_345

  <bb 49>:
  # __first$_M_p_349 = PHI <__first$_M_p_873(47), __first$_M_p_345(48)>
  # __first$8_350 = PHI <__first$8_344(47), 0(48)>
  # DEBUG __first$8 => __first$8_350
  # DEBUG __first$_M_p => __first$_M_p_349
  # DEBUG this => &__result
  # DEBUG D#42 => &__result.D.33184
  # DEBUG this => D#42
  # DEBUG __result$8 => SR.6530_874 + 1
  if (SR.6530_874 == 63)
    goto <bb 51>;
  else
    goto <bb 50>;

  <bb 50>:
  SR.6530_346 = SR.6530_874 + 1;
  goto <bb 52>;

  <bb 51>:
  # DEBUG __result$8 => 0
  SR.6529_347 = SR.6529_878 + 8;
  # DEBUG __result$_M_p => SR.6529_347

  <bb 52>:
  # SR.6529_351 = PHI <SR.6529_878(50), SR.6529_347(51)>
  # SR.6530_352 = PHI <SR.6530_346(50), 0(51)>
  # DEBUG __result$8 => SR.6530_352
  # DEBUG __result$_M_p => SR.6529_351
  __n_348 = __n_909 + -1;
  # DEBUG __n => __n_348
  # DEBUG __result$8 => SR.6530_352
  # DEBUG __result$_M_p => SR.6529_351
  # DEBUG __first$8 => __first$8_350
  # DEBUG __first$_M_p => __first$_M_p_349
  # DEBUG __n => __n_348
  if (__n_348 == 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # SR.6529_922 = PHI <SR.6529_351(52)>
  # SR.6530_921 = PHI <SR.6530_352(52)>
  goto <bb 55>;

  <bb 54>:
  goto <bb 43>;

  <bb 55>:
  # SR.6530_875 = PHI <SR.6530_921(53), 0(41)>
  # SR.6529_879 = PHI <SR.6529_922(53), SR.6529_308(41)>
  # DEBUG __result => SR.6529_879
  # DEBUG __result$8 => SR.6530_875
  MEM[(struct _Bit_iterator *)__old_finish_65 + 16B] = SR.6529_879;
  MEM[(struct _Bit_iterator *)__old_finish_65 + 24B] = SR.6530_875;

  <bb 56>:
  __n_58 = __n_782 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 27>;
  else
    goto <bb 57>;

  <bb 57>:
  goto <bb 29>;

  <bb 58>:
  pretmp_1071 = MEM[(struct _Bvector_base *)&__x_copy]._M_impl._M_start.D.33184._M_p;
  goto <bb 127>;

  <bb 59>:
  pretmp_1076 = MEM[(struct _Bvector_base *)&__x_copy]._M_impl._M_start.D.33184._M_p;

  <bb 60>:
  # __position_779 = PHI <__position_22(59), __position_81(88)>
  # prephitmp_1077 = PHI <pretmp_1076(59), prephitmp_1070(88)>
  # DEBUG __first => __position_779
  # DEBUG this => __position_779
  # DEBUG __x => &__x_copy
  if (&__x_copy == __position_779)
    goto <bb 87>;
  else
    goto <bb 61>;

  <bb 61>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG D#208 => &__x_copy.D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _353 = MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_offset;
  # DEBUG D#4102 => MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_p
  # DEBUG this => D#48
  # DEBUG __x => D#4102
  # DEBUG __y => _353
  # DEBUG this => D#48
  # DEBUG this => &__x_copy
  # DEBUG D#209 => &__x_copy.D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  _355 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_offset;
  _356 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _356
  # DEBUG __y => _355
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _357 = (long int) _356;
  _358 = (long int) prephitmp_1077;
  _359 = _357 - _358;
  _360 = _359 * 8;
  _361 = (long int) _355;
  _362 = _360 + _361;
  _363 = (long int) _353;
  _364 = _362 - _363;
  _365 = (size_type) _364;
  # DEBUG this => __position_779
  # DEBUG this => __position_779
  # DEBUG D#208 => &MEM[(const struct vector *)__position_779].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _366 = MEM[(const struct _Bit_iterator *)__position_779].D.33184._M_offset;
  _367 = MEM[(const struct _Bit_iterator *)__position_779].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _367
  # DEBUG __y => _366
  # DEBUG this => D#48
  # DEBUG D#557 => &MEM[(const struct vector *)__position_779].D.48430._M_impl
  _368 = MEM[(long unsigned int * *)__position_779 + 32B];
  # DEBUG D#375 => D#557
  # DEBUG this => D#375
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _370 = (long int) _368;
  _371 = (long int) _367;
  _372 = _370 - _371;
  _373 = _372 * 8;
  _374 = (long int) _366;
  _375 = _373 - _374;
  _376 = (size_type) _375;
  if (_365 > _376)
    goto <bb 62>;
  else
    goto <bb 69>;

  <bb 62>:
  # DEBUG D#4065 => &__position_779->D.48430
  # DEBUG this => D#4065
  if (_367 != 0B)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG D#1015 => &D#4065->_M_impl
  # DEBUG D#375 => D#1015
  # DEBUG this => D#375
  # DEBUG D#1018 => _372 /[ex] 8
  # DEBUG D#1017 => (const size_t) D#1018
  # DEBUG __n => D#1017
  _416 = (long unsigned int) _372;
  _417 = -_416;
  _418 = _368 + _417;
  # DEBUG D#1016 => &D#4065->_M_impl
  # DEBUG D#1013 => D#1016
  # DEBUG D#1014 => D#1017
  # DEBUG __p => _418
  # DEBUG __a => D#1013
  # DEBUG __n => D#1014
  # DEBUG D#1012 => D#1014
  # DEBUG D#1011 => D#1013
  # DEBUG D#1009 => D#1011
  # DEBUG D#1010 => D#1012
  # DEBUG __p => _418
  # DEBUG this => D#1009
  # DEBUG D.167740 => D#1010
  operator delete (_418);
  pretmp_1023 = MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_offset;
  pretmp_1025 = MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_p;
  pretmp_1027 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_offset;
  pretmp_1029 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_p;
  pretmp_1031 = (long int) pretmp_1029;
  pretmp_1033 = (long int) pretmp_1025;
  pretmp_1035 = pretmp_1031 - pretmp_1033;
  pretmp_1037 = pretmp_1035 * 8;
  pretmp_1039 = (long int) pretmp_1027;
  pretmp_1041 = pretmp_1037 + pretmp_1039;
  pretmp_1043 = (long int) pretmp_1023;
  pretmp_1045 = pretmp_1041 - pretmp_1043;
  pretmp_1047 = (size_type) pretmp_1045;

  <bb 64>:
  # prephitmp_1046 = PHI <pretmp_1045(63), _364(62)>
  # prephitmp_1048 = PHI <pretmp_1047(63), _365(62)>
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG D#208 => &__x_copy.D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG D#4101 => MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_offset
  # DEBUG D#4100 => MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_p
  # DEBUG this => D#48
  # DEBUG __x => D#4100
  # DEBUG __y => D#4101
  # DEBUG this => D#48
  # DEBUG this => &__x_copy
  # DEBUG D#209 => &__x_copy.D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  # DEBUG D#4099 => MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_offset
  # DEBUG D#4098 => MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_p
  # DEBUG this => D#48
  # DEBUG __x => D#4098
  # DEBUG __y => D#4099
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  # DEBUG D#4097 => (long int) D#4098
  # DEBUG D#4096 => (long int) D#4100
  # DEBUG D#4095 => D#4097 - D#4096
  # DEBUG D#4094 => D#4095 * 8
  # DEBUG D#4093 => (long int) D#4099
  # DEBUG D#4092 => D#4094 + D#4093
  # DEBUG D#4091 => (long int) D#4101
  # DEBUG D#4090 => D#4092 - D#4091
  # DEBUG D#4089 => (size_type) D#4090
  # DEBUG this => __position_779
  # DEBUG __n => D#4089
  # DEBUG D#1506 => &__position_779->D.48430
  # DEBUG D#1504 => D#1506
  # DEBUG __n => D#4089
  # DEBUG this => D#1504
  # DEBUG D#1503 => D#1504
  # DEBUG __n => D#4089
  _130 = prephitmp_1048 + 63;
  _395 = _130 >> 6;
  # DEBUG D#1502 => &D#1503->_M_impl
  # DEBUG D#1501 => D#1502
  # DEBUG __n => NULL
  # DEBUG __a => D#1501
  # DEBUG D#1500 => D#1501
  # DEBUG D#1498 => D#1500
  # DEBUG D#1499 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1498
  # DEBUG D.167719 => D#1499
  # DEBUG D#1497 => D#1498
  # DEBUG D#1496 => D#1497
  # DEBUG this => D#1496
  _396 = _395 * 8;
  _397 = operator new (_396);
  goto <bb 66>;

<L27>:
  goto <bb 180> (<L10>);

  <bb 66>:
  # DEBUG __q => _397
  # DEBUG __n => D#4089
  _398 = _397 + _396;
  __position_779->D.48430._M_impl._M_end_of_storage = _398;
  # DEBUG __r => _397
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  MEM[(struct _Bit_iterator *)__position_779] = _397;
  MEM[(struct _Bit_iterator *)__position_779 + 8B] = 0;
  # DEBUG D#1505 => &__position_779->D.48430._M_impl._M_start
  # DEBUG this => D#1505
  # DEBUG __i => D#4090
  # DEBUG __tmp$_M_p => _397
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => D#4090
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => D#4090
  # DEBUG __n => D#4090
  _400 = prephitmp_1046 / 64;
  _401 = (long unsigned int) _400;
  _402 = _401 * 8;
  __tmp$_M_p_403 = _397 + _402;
  # DEBUG __tmp$_M_p => __tmp$_M_p_403
  __n_404 = prephitmp_1046 % 64;
  # DEBUG __n => __n_404
  if (__n_404 < 0)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  __n_405 = __n_404 + 64;
  # DEBUG __n => __n_405
  __tmp$_M_p_406 = __tmp$_M_p_403 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_406

  <bb 68>:
  # __n_407 = PHI <__n_404(66), __n_405(67)>
  # __tmp$_M_p_409 = PHI <__tmp$_M_p_403(66), __tmp$_M_p_406(67)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_409
  # DEBUG __n => __n_407
  _408 = (unsigned int) __n_407;
  # DEBUG __tmp$_M_offset => _408
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  MEM[(struct _Bit_iterator *)__position_779 + 16B] = __tmp$_M_p_409;
  MEM[(struct _Bit_iterator *)__position_779 + 24B] = _408;
  pretmp_999 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_offset;
  pretmp_1001 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_p;
  pretmp_1003 = MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_p;
  pretmp_1005 = (long int) pretmp_1001;
  pretmp_1007 = (long int) pretmp_1003;
  pretmp_1009 = pretmp_1005 - pretmp_1007;
  pretmp_1011 = (_Distance) pretmp_999;

  <bb 69>:
  # prephitmp_998 = PHI <_367(61), _397(68)>
  # prephitmp_1002 = PHI <_356(61), pretmp_1001(68)>
  # prephitmp_1004 = PHI <prephitmp_1077(61), pretmp_1003(68)>
  # prephitmp_1010 = PHI <_359(61), pretmp_1009(68)>
  # prephitmp_1012 = PHI <_361(61), pretmp_1011(68)>
  # DEBUG this => __position_779
  # DEBUG D#4088 => MEM[(struct vector *)__position_779]
  # DEBUG D#1523 => MEM[(struct vector *)__position_779 + 8B]
  # DEBUG D.127035 => D#1523
  # DEBUG this => &__x_copy
  # DEBUG D#209 => &__x_copy.D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  # DEBUG D#4087 => MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_offset
  # DEBUG D#4086 => MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_p
  # DEBUG this => D#48
  # DEBUG __x => D#4086
  # DEBUG __y => D#4087
  # DEBUG this => D#48
  # DEBUG this => &__x_copy
  # DEBUG D#208 => &__x_copy.D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG D#1522 => MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_offset
  # DEBUG D#4085 => MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_p
  # DEBUG this => D#48
  # DEBUG __x => D#4085
  # DEBUG __y => D#1522
  # DEBUG this => D#48
  # DEBUG D.127039 => D#1522
  # DEBUG D#1515 => __position_779
  # DEBUG this => D#1515
  # DEBUG __last$D33304$_M_p => D#4086
  # DEBUG __first => D#4085
  # DEBUG __last => D#4086
  # DEBUG __result => D#4088
  # DEBUG __it => D#4086
  # DEBUG __it => D#4086
  # DEBUG __it => D#4085
  # DEBUG __it => D#4085
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => D#4088
  # DEBUG __it => D#4088
  # DEBUG __it => D#4088
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => D#4088
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => D#4088
  _Num_425 = prephitmp_1010 /[ex] 8;
  # DEBUG _Num => _Num_425
  if (_Num_425 != 0)
    goto <bb 71>;
  else
    goto <bb 70>;

  <bb 70>:
  pretmp_1014 = (long unsigned int) prephitmp_1010;
  goto <bb 72>;

  <bb 71>:
  _426 = (long unsigned int) prephitmp_1010;
  __builtin_memmove (prephitmp_998, prephitmp_1004, _426);
  pretmp_1016 = MEM[(struct _Bvector_base *)&__x_copy]._M_impl._M_start.D.33184._M_p;

  <bb 72>:
  # prephitmp_1015 = PHI <pretmp_1014(70), _426(71)>
  # prephitmp_1017 = PHI <prephitmp_1004(70), pretmp_1016(71)>
  SR.6545_428 = prephitmp_998 + prephitmp_1015;
  # DEBUG __q => SR.6545_428
  # DEBUG this => NULL
  # DEBUG __x => SR.6545_428
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => SR.6545_428
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG this => NULL
  # DEBUG __x => D#4086
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => D#4086
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG D#1513 => __last
  # DEBUG D#1513 => __last
  # DEBUG __it$D33304$_M_p => D#4086
  # DEBUG __it$D33304$_M_offset => D#4087
  # DEBUG __it$D33304$_M_p => D#4086
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __it$D33184$_M_p => SR.6545_428
  # DEBUG __it$D33184$_M_offset => 0
  # DEBUG __it$D33304$_M_p => D#4086
  # DEBUG __it$D33304$_M_offset => D#4087
  # DEBUG __it$D33304$_M_p => D#4086
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __result => SR.6545_428
  # DEBUG __result$8 => 0
  # DEBUG __simple => 0
  # DEBUG __result => SR.6545_428
  # DEBUG __result$8 => 0
  # DEBUG __first$_M_p => D#4086
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => SR.6545_428
  # DEBUG __result$8 => 0
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => SR.6545_428
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => D#4086
  # DEBUG __n => (_Distance) D#4087
  if (prephitmp_1012 == 0)
    goto <bb 86>;
  else
    goto <bb 73>;

  <bb 73>:

  <bb 74>:
  # __n_622 = PHI <prephitmp_1012(73), __n_468(85)>
  # __first$8_88 = PHI <0(73), __first$8_470(85)>
  # __first$_M_p_87 = PHI <prephitmp_1002(73), __first$_M_p_469(85)>
  # SR.6546_85 = PHI <0(73), SR.6546_472(85)>
  # SR.6545_668 = PHI <SR.6545_428(73), SR.6545_471(85)>
  # DEBUG __result$8 => SR.6546_85
  # DEBUG __result$_M_p => SR.6545_668
  # DEBUG __first$8 => __first$8_88
  # DEBUG __first$_M_p => __first$_M_p_87
  # DEBUG __n => __n_622
  # DEBUG D#49 => &__first
  # DEBUG D#49 => &__first
  # DEBUG this => D#49
  # DEBUG this => D#49
  _452 = 1 << __first$8_88;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_87
  # DEBUG __y => _452
  # DEBUG this => NULL
  _454 = *__first$_M_p_87;
  _455 = _452 & _454;
  # DEBUG D#41 => &__result
  # DEBUG D#41 => &__result
  # DEBUG this => D#41
  # DEBUG this => D#41
  _457 = 1 << SR.6546_85;
  # DEBUG this => NULL
  # DEBUG __x => SR.6545_668
  # DEBUG __y => _457
  # DEBUG this => NULL
  # DEBUG __x => _455 != 0
  if (_455 != 0)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  _459 = *SR.6545_668;
  _460 = _457 | _459;
  goto <bb 77>;

  <bb 76>:
  _461 = *SR.6545_668;
  _462 = ~_457;
  _463 = _461 & _462;

  <bb 77>:
  # cstore_882 = PHI <_460(75), _463(76)>
  *SR.6545_668 = cstore_882;
  # DEBUG this => &__first
  # DEBUG D#50 => &__first.D.33304
  # DEBUG this => D#50
  # DEBUG __first$8 => __first$8_88 + 1
  if (__first$8_88 == 63)
    goto <bb 79>;
  else
    goto <bb 78>;

  <bb 78>:
  __first$8_464 = __first$8_88 + 1;
  goto <bb 80>;

  <bb 79>:
  # DEBUG __first$8 => 0
  __first$_M_p_465 = __first$_M_p_87 + 8;
  # DEBUG __first$_M_p => __first$_M_p_465

  <bb 80>:
  # __first$_M_p_469 = PHI <__first$_M_p_87(78), __first$_M_p_465(79)>
  # __first$8_470 = PHI <__first$8_464(78), 0(79)>
  # DEBUG __first$8 => __first$8_470
  # DEBUG __first$_M_p => __first$_M_p_469
  # DEBUG this => &__result
  # DEBUG D#42 => &__result.D.33184
  # DEBUG this => D#42
  # DEBUG __result$8 => SR.6546_85 + 1
  if (SR.6546_85 == 63)
    goto <bb 82>;
  else
    goto <bb 81>;

  <bb 81>:
  SR.6546_466 = SR.6546_85 + 1;
  goto <bb 83>;

  <bb 82>:
  # DEBUG __result$8 => 0
  SR.6545_467 = SR.6545_668 + 8;
  # DEBUG __result$_M_p => SR.6545_467

  <bb 83>:
  # SR.6545_471 = PHI <SR.6545_668(81), SR.6545_467(82)>
  # SR.6546_472 = PHI <SR.6546_466(81), 0(82)>
  # DEBUG __result$8 => SR.6546_472
  # DEBUG __result$_M_p => SR.6545_471
  __n_468 = __n_622 + -1;
  # DEBUG __n => __n_468
  # DEBUG __result$8 => SR.6546_472
  # DEBUG __result$_M_p => SR.6545_471
  # DEBUG __first$8 => __first$8_470
  # DEBUG __first$_M_p => __first$_M_p_469
  # DEBUG __n => __n_468
  if (__n_468 == 0)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  # SR.6545_920 = PHI <SR.6545_471(83)>
  # SR.6546_919 = PHI <SR.6546_472(83)>
  goto <bb 86>;

  <bb 85>:
  goto <bb 74>;

  <bb 86>:
  # SR.6546_21 = PHI <SR.6546_919(84), 0(72)>
  # SR.6545_923 = PHI <SR.6545_920(84), SR.6545_428(72)>
  # DEBUG __result => SR.6545_923
  # DEBUG __result$8 => SR.6546_21
  MEM[(struct _Bit_iterator *)__position_779 + 16B] = SR.6545_923;
  MEM[(struct _Bit_iterator *)__position_779 + 24B] = SR.6546_21;

  <bb 87>:
  # prephitmp_1070 = PHI <prephitmp_1077(60), prephitmp_1017(86)>
  __position_81 = __position_779 + 40;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 126>;
  else
    goto <bb 88>;

  <bb 88>:
  goto <bb 60>;

  <bb 89>:
  # DEBUG D#1807 => &this_9(D)->D.60085
  # DEBUG this => D#1807
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_29
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.131032 => D#1787
  # DEBUG __first => __old_finish_29
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _82 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<bool>*, long unsigned int, std::vector<bool> > (__old_finish_29, _70, &__x_copy);
  goto <bb 91>;

<L28>:
  goto <bb 180> (<L10>);

  <bb 91>:
  this_9(D)->D.60085._M_impl._M_finish = _82;
  # DEBUG D#1808 => &this_9(D)->D.60085
  # DEBUG this => D#1808
  # DEBUG this => &__position
  # DEBUG __first => D#4104
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _82
  # DEBUG __alloc => D#1784
  # DEBUG D#1783 => D#1784
  # DEBUG D#1782 => D#1783
  # DEBUG __first => D#4104
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _82
  # DEBUG D.131045 => D#1782
  # DEBUG __first => D#4104
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _82
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<bool>*, std::vector<bool>*> (__position_22, __old_finish_29, _82);
  goto <bb 93>;

<L29>:
  goto <bb 180> (<L10>);

  <bb 93>:
  _74 = this_9(D)->D.60085._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.60085._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#4104
  # DEBUG __last => __old_finish_29
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4104
  if (__position_22 == __old_finish_29)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  pretmp_1072 = MEM[(struct _Bvector_base *)&__x_copy]._M_impl._M_start.D.33184._M_p;
  goto <bb 127>;

  <bb 95>:
  pretmp_1074 = MEM[(struct _Bvector_base *)&__x_copy]._M_impl._M_start.D.33184._M_p;

  <bb 96>:
  # __position_784 = PHI <__position_22(95), __position_84(125)>
  # prephitmp_1075 = PHI <pretmp_1074(95), prephitmp_1068(125)>
  # DEBUG __first => __position_784
  # DEBUG this => __position_784
  # DEBUG __x => &__x_copy
  if (&__x_copy == __position_784)
    goto <bb 123>;
  else
    goto <bb 97>;

  <bb 97>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG D#208 => &__x_copy.D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _473 = MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_offset;
  # DEBUG D#4084 => MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_p
  # DEBUG this => D#48
  # DEBUG __x => D#4084
  # DEBUG __y => _473
  # DEBUG this => D#48
  # DEBUG this => &__x_copy
  # DEBUG D#209 => &__x_copy.D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  _475 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_offset;
  _476 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _476
  # DEBUG __y => _475
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _477 = (long int) _476;
  _478 = (long int) prephitmp_1075;
  _479 = _477 - _478;
  _480 = _479 * 8;
  _481 = (long int) _475;
  _482 = _480 + _481;
  _483 = (long int) _473;
  _484 = _482 - _483;
  _485 = (size_type) _484;
  # DEBUG this => __position_784
  # DEBUG this => __position_784
  # DEBUG D#208 => &MEM[(const struct vector *)__position_784].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _486 = MEM[(const struct _Bit_iterator *)__position_784].D.33184._M_offset;
  _487 = MEM[(const struct _Bit_iterator *)__position_784].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _487
  # DEBUG __y => _486
  # DEBUG this => D#48
  # DEBUG D#557 => &MEM[(const struct vector *)__position_784].D.48430._M_impl
  _488 = MEM[(long unsigned int * *)__position_784 + 32B];
  # DEBUG D#375 => D#557
  # DEBUG this => D#375
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _490 = (long int) _488;
  _491 = (long int) _487;
  _492 = _490 - _491;
  _493 = _492 * 8;
  _494 = (long int) _486;
  _495 = _493 - _494;
  _496 = (size_type) _495;
  if (_485 > _496)
    goto <bb 98>;
  else
    goto <bb 105>;

  <bb 98>:
  # DEBUG D#4066 => &__position_784->D.48430
  # DEBUG this => D#4066
  if (_487 != 0B)
    goto <bb 99>;
  else
    goto <bb 100>;

  <bb 99>:
  # DEBUG D#1015 => &D#4066->_M_impl
  # DEBUG D#375 => D#1015
  # DEBUG this => D#375
  # DEBUG D#1018 => _492 /[ex] 8
  # DEBUG D#1017 => (const size_t) D#1018
  # DEBUG __n => D#1017
  _536 = (long unsigned int) _492;
  _537 = -_536;
  _538 = _488 + _537;
  # DEBUG D#1016 => &D#4066->_M_impl
  # DEBUG D#1013 => D#1016
  # DEBUG D#1014 => D#1017
  # DEBUG __p => _538
  # DEBUG __a => D#1013
  # DEBUG __n => D#1014
  # DEBUG D#1012 => D#1014
  # DEBUG D#1011 => D#1013
  # DEBUG D#1009 => D#1011
  # DEBUG D#1010 => D#1012
  # DEBUG __p => _538
  # DEBUG this => D#1009
  # DEBUG D.167893 => D#1010
  operator delete (_538);
  pretmp_945 = MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_offset;
  pretmp_947 = MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_p;
  pretmp_949 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_offset;
  pretmp_951 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_p;
  pretmp_953 = (long int) pretmp_951;
  pretmp_955 = (long int) pretmp_947;
  pretmp_957 = pretmp_953 - pretmp_955;
  pretmp_959 = pretmp_957 * 8;
  pretmp_961 = (long int) pretmp_949;
  pretmp_963 = pretmp_959 + pretmp_961;
  pretmp_965 = (long int) pretmp_945;
  pretmp_967 = pretmp_963 - pretmp_965;
  pretmp_969 = (size_type) pretmp_967;

  <bb 100>:
  # prephitmp_968 = PHI <pretmp_967(99), _484(98)>
  # prephitmp_970 = PHI <pretmp_969(99), _485(98)>
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy
  # DEBUG D#208 => &__x_copy.D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG D#4083 => MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_offset
  # DEBUG D#4082 => MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_p
  # DEBUG this => D#48
  # DEBUG __x => D#4082
  # DEBUG __y => D#4083
  # DEBUG this => D#48
  # DEBUG this => &__x_copy
  # DEBUG D#209 => &__x_copy.D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  # DEBUG D#4081 => MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_offset
  # DEBUG D#4080 => MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_p
  # DEBUG this => D#48
  # DEBUG __x => D#4080
  # DEBUG __y => D#4081
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  # DEBUG D#4079 => (long int) D#4080
  # DEBUG D#4078 => (long int) D#4082
  # DEBUG D#4077 => D#4079 - D#4078
  # DEBUG D#4076 => D#4077 * 8
  # DEBUG D#4075 => (long int) D#4081
  # DEBUG D#4074 => D#4076 + D#4075
  # DEBUG D#4073 => (long int) D#4083
  # DEBUG D#4072 => D#4074 - D#4073
  # DEBUG D#4071 => (size_type) D#4072
  # DEBUG this => __position_784
  # DEBUG __n => D#4071
  # DEBUG D#1506 => &__position_784->D.48430
  # DEBUG D#1504 => D#1506
  # DEBUG __n => D#4071
  # DEBUG this => D#1504
  # DEBUG D#1503 => D#1504
  # DEBUG __n => D#4071
  _133 = prephitmp_970 + 63;
  _515 = _133 >> 6;
  # DEBUG D#1502 => &D#1503->_M_impl
  # DEBUG D#1501 => D#1502
  # DEBUG __n => NULL
  # DEBUG __a => D#1501
  # DEBUG D#1500 => D#1501
  # DEBUG D#1498 => D#1500
  # DEBUG D#1499 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1498
  # DEBUG D.167872 => D#1499
  # DEBUG D#1497 => D#1498
  # DEBUG D#1496 => D#1497
  # DEBUG this => D#1496
  _516 = _515 * 8;
  _517 = operator new (_516);
  goto <bb 102>;

<L30>:
  goto <bb 180> (<L10>);

  <bb 102>:
  # DEBUG __q => _517
  # DEBUG __n => D#4071
  _518 = _517 + _516;
  __position_784->D.48430._M_impl._M_end_of_storage = _518;
  # DEBUG __r => _517
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  MEM[(struct _Bit_iterator *)__position_784] = _517;
  MEM[(struct _Bit_iterator *)__position_784 + 8B] = 0;
  # DEBUG D#1505 => &__position_784->D.48430._M_impl._M_start
  # DEBUG this => D#1505
  # DEBUG __i => D#4072
  # DEBUG __tmp$_M_p => _517
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => D#4072
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => D#4072
  # DEBUG __n => D#4072
  _520 = prephitmp_968 / 64;
  _521 = (long unsigned int) _520;
  _522 = _521 * 8;
  __tmp$_M_p_523 = _517 + _522;
  # DEBUG __tmp$_M_p => __tmp$_M_p_523
  __n_524 = prephitmp_968 % 64;
  # DEBUG __n => __n_524
  if (__n_524 < 0)
    goto <bb 103>;
  else
    goto <bb 104>;

  <bb 103>:
  __n_525 = __n_524 + 64;
  # DEBUG __n => __n_525
  __tmp$_M_p_526 = __tmp$_M_p_523 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_526

  <bb 104>:
  # __n_527 = PHI <__n_524(102), __n_525(103)>
  # __tmp$_M_p_529 = PHI <__tmp$_M_p_523(102), __tmp$_M_p_526(103)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_529
  # DEBUG __n => __n_527
  _528 = (unsigned int) __n_527;
  # DEBUG __tmp$_M_offset => _528
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  MEM[(struct _Bit_iterator *)__position_784 + 16B] = __tmp$_M_p_529;
  MEM[(struct _Bit_iterator *)__position_784 + 24B] = _528;
  pretmp_399 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_offset;
  pretmp_162 = MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_p;
  pretmp_686 = MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_p;
  pretmp_551 = (long int) pretmp_162;
  pretmp_163 = (long int) pretmp_686;
  pretmp_931 = pretmp_551 - pretmp_163;
  pretmp_933 = (_Distance) pretmp_399;

  <bb 105>:
  # prephitmp_414 = PHI <_487(97), _517(104)>
  # prephitmp_682 = PHI <_476(97), pretmp_162(104)>
  # prephitmp_685 = PHI <prephitmp_1075(97), pretmp_686(104)>
  # prephitmp_932 = PHI <_479(97), pretmp_931(104)>
  # prephitmp_934 = PHI <_481(97), pretmp_933(104)>
  # DEBUG this => __position_784
  # DEBUG D#4070 => MEM[(struct vector *)__position_784]
  # DEBUG D#1523 => MEM[(struct vector *)__position_784 + 8B]
  # DEBUG D.127035 => D#1523
  # DEBUG this => &__x_copy
  # DEBUG D#209 => &__x_copy.D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  # DEBUG D#4069 => MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_offset
  # DEBUG D#4068 => MEM[(const struct _Bit_iterator *)&__x_copy + 16B].D.33184._M_p
  # DEBUG this => D#48
  # DEBUG __x => D#4068
  # DEBUG __y => D#4069
  # DEBUG this => D#48
  # DEBUG this => &__x_copy
  # DEBUG D#208 => &__x_copy.D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG D#1522 => MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_offset
  # DEBUG D#4067 => MEM[(const struct _Bit_iterator *)&__x_copy].D.33184._M_p
  # DEBUG this => D#48
  # DEBUG __x => D#4067
  # DEBUG __y => D#1522
  # DEBUG this => D#48
  # DEBUG D.127039 => D#1522
  # DEBUG D#1515 => __position_784
  # DEBUG this => D#1515
  # DEBUG __last$D33304$_M_p => D#4068
  # DEBUG __first => D#4067
  # DEBUG __last => D#4068
  # DEBUG __result => D#4070
  # DEBUG __it => D#4068
  # DEBUG __it => D#4068
  # DEBUG __it => D#4067
  # DEBUG __it => D#4067
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => D#4070
  # DEBUG __it => D#4070
  # DEBUG __it => D#4070
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => D#4070
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => D#4070
  _Num_545 = prephitmp_932 /[ex] 8;
  # DEBUG _Num => _Num_545
  if (_Num_545 != 0)
    goto <bb 107>;
  else
    goto <bb 106>;

  <bb 106>:
  pretmp_936 = (long unsigned int) prephitmp_932;
  goto <bb 108>;

  <bb 107>:
  _546 = (long unsigned int) prephitmp_932;
  __builtin_memmove (prephitmp_414, prephitmp_685, _546);
  pretmp_938 = MEM[(struct _Bvector_base *)&__x_copy]._M_impl._M_start.D.33184._M_p;

  <bb 108>:
  # prephitmp_937 = PHI <pretmp_936(106), _546(107)>
  # prephitmp_939 = PHI <prephitmp_685(106), pretmp_938(107)>
  SR.6561_548 = prephitmp_414 + prephitmp_937;
  # DEBUG __q => SR.6561_548
  # DEBUG this => NULL
  # DEBUG __x => SR.6561_548
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => SR.6561_548
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG this => NULL
  # DEBUG __x => D#4068
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => D#4068
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG D#1513 => __last
  # DEBUG D#1513 => __last
  # DEBUG __it$D33304$_M_p => D#4068
  # DEBUG __it$D33304$_M_offset => D#4069
  # DEBUG __it$D33304$_M_p => D#4068
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __it$D33184$_M_p => SR.6561_548
  # DEBUG __it$D33184$_M_offset => 0
  # DEBUG __it$D33304$_M_p => D#4068
  # DEBUG __it$D33304$_M_offset => D#4069
  # DEBUG __it$D33304$_M_p => D#4068
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __result => SR.6561_548
  # DEBUG __result$8 => 0
  # DEBUG __simple => 0
  # DEBUG __result => SR.6561_548
  # DEBUG __result$8 => 0
  # DEBUG __first$_M_p => D#4068
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => SR.6561_548
  # DEBUG __result$8 => 0
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => SR.6561_548
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => D#4068
  # DEBUG __n => (_Distance) D#4069
  if (prephitmp_934 == 0)
    goto <bb 122>;
  else
    goto <bb 109>;

  <bb 109>:

  <bb 110>:
  # __n_554 = PHI <prephitmp_934(109), __n_588(121)>
  # __first$8_553 = PHI <0(109), __first$8_590(121)>
  # __first$_M_p_541 = PHI <prephitmp_682(109), __first$_M_p_589(121)>
  # SR.6562_549 = PHI <0(109), SR.6562_592(121)>
  # SR.6561_196 = PHI <SR.6561_548(109), SR.6561_591(121)>
  # DEBUG __result$8 => SR.6562_549
  # DEBUG __result$_M_p => SR.6561_196
  # DEBUG __first$8 => __first$8_553
  # DEBUG __first$_M_p => __first$_M_p_541
  # DEBUG __n => __n_554
  # DEBUG D#49 => &__first
  # DEBUG D#49 => &__first
  # DEBUG this => D#49
  # DEBUG this => D#49
  _572 = 1 << __first$8_553;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_541
  # DEBUG __y => _572
  # DEBUG this => NULL
  _574 = *__first$_M_p_541;
  _575 = _572 & _574;
  # DEBUG D#41 => &__result
  # DEBUG D#41 => &__result
  # DEBUG this => D#41
  # DEBUG this => D#41
  _577 = 1 << SR.6562_549;
  # DEBUG this => NULL
  # DEBUG __x => SR.6561_196
  # DEBUG __y => _577
  # DEBUG this => NULL
  # DEBUG __x => _575 != 0
  if (_575 != 0)
    goto <bb 111>;
  else
    goto <bb 112>;

  <bb 111>:
  _579 = *SR.6561_196;
  _580 = _577 | _579;
  goto <bb 113>;

  <bb 112>:
  _581 = *SR.6561_196;
  _582 = ~_577;
  _583 = _581 & _582;

  <bb 113>:
  # cstore_912 = PHI <_580(111), _583(112)>
  *SR.6561_196 = cstore_912;
  # DEBUG this => &__first
  # DEBUG D#50 => &__first.D.33304
  # DEBUG this => D#50
  # DEBUG __first$8 => __first$8_553 + 1
  if (__first$8_553 == 63)
    goto <bb 115>;
  else
    goto <bb 114>;

  <bb 114>:
  __first$8_584 = __first$8_553 + 1;
  goto <bb 116>;

  <bb 115>:
  # DEBUG __first$8 => 0
  __first$_M_p_585 = __first$_M_p_541 + 8;
  # DEBUG __first$_M_p => __first$_M_p_585

  <bb 116>:
  # __first$_M_p_589 = PHI <__first$_M_p_541(114), __first$_M_p_585(115)>
  # __first$8_590 = PHI <__first$8_584(114), 0(115)>
  # DEBUG __first$8 => __first$8_590
  # DEBUG __first$_M_p => __first$_M_p_589
  # DEBUG this => &__result
  # DEBUG D#42 => &__result.D.33184
  # DEBUG this => D#42
  # DEBUG __result$8 => SR.6562_549 + 1
  if (SR.6562_549 == 63)
    goto <bb 118>;
  else
    goto <bb 117>;

  <bb 117>:
  SR.6562_586 = SR.6562_549 + 1;
  goto <bb 119>;

  <bb 118>:
  # DEBUG __result$8 => 0
  SR.6561_587 = SR.6561_196 + 8;
  # DEBUG __result$_M_p => SR.6561_587

  <bb 119>:
  # SR.6561_591 = PHI <SR.6561_196(117), SR.6561_587(118)>
  # SR.6562_592 = PHI <SR.6562_586(117), 0(118)>
  # DEBUG __result$8 => SR.6562_592
  # DEBUG __result$_M_p => SR.6561_591
  __n_588 = __n_554 + -1;
  # DEBUG __n => __n_588
  # DEBUG __result$8 => SR.6562_592
  # DEBUG __result$_M_p => SR.6561_591
  # DEBUG __first$8 => __first$8_590
  # DEBUG __first$_M_p => __first$_M_p_589
  # DEBUG __n => __n_588
  if (__n_588 == 0)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # SR.6561_918 = PHI <SR.6561_591(119)>
  # SR.6562_917 = PHI <SR.6562_592(119)>
  goto <bb 122>;

  <bb 121>:
  goto <bb 110>;

  <bb 122>:
  # SR.6562_550 = PHI <SR.6562_917(120), 0(108)>
  # SR.6561_313 = PHI <SR.6561_918(120), SR.6561_548(108)>
  # DEBUG __result => SR.6561_313
  # DEBUG __result$8 => SR.6562_550
  MEM[(struct _Bit_iterator *)__position_784 + 16B] = SR.6561_313;
  MEM[(struct _Bit_iterator *)__position_784 + 24B] = SR.6562_550;

  <bb 123>:
  # prephitmp_1068 = PHI <prephitmp_1075(96), prephitmp_939(122)>
  __position_84 = __position_784 + 40;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__old_finish_29 == __position_84)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  # prephitmp_916 = PHI <prephitmp_1068(123)>
  goto <bb 127>;

  <bb 125>:
  goto <bb 96>;

  <bb 126>:
  # prephitmp_915 = PHI <prephitmp_1070(87)>

  <bb 127>:
  # prephitmp_1073 = PHI <prephitmp_915(126), prephitmp_916(124), pretmp_1071(58), pretmp_1072(94)>
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy.D.48430
  # DEBUG this => &__x_copy.D.48430
  if (prephitmp_1073 != 0B)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  # DEBUG D#1015 => &MEM[(struct _Bvector_base *)&__x_copy]._M_impl
  _594 = MEM[(long unsigned int * *)&__x_copy + 32B];
  # DEBUG D#375 => D#1015
  # DEBUG this => D#375
  _596 = (long int) _594;
  _597 = (long int) prephitmp_1073;
  _598 = _596 - _597;
  # DEBUG D#1018 => _598 /[ex] 8
  # DEBUG D#1017 => (const size_t) D#1018
  # DEBUG __n => D#1017
  _599 = (long unsigned int) _598;
  _600 = -_599;
  _601 = _594 + _600;
  # DEBUG D#1016 => &MEM[(struct _Bvector_base *)&__x_copy]._M_impl
  # DEBUG D#1013 => D#1016
  # DEBUG D#1014 => D#1017
  # DEBUG __p => _601
  # DEBUG __a => D#1013
  # DEBUG __n => D#1014
  # DEBUG D#1012 => D#1014
  # DEBUG D#1011 => D#1013
  # DEBUG D#1009 => D#1011
  # DEBUG D#1010 => D#1012
  # DEBUG __p => _601
  # DEBUG this => D#1009
  # DEBUG D.167980 => D#1010
  operator delete (_601);

  <bb 129>:
  # DEBUG D#1019 => &MEM[(struct _Bvector_base *)&__x_copy]._M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  __x_copy ={v} {CLOBBER};
  goto <bb 178>;

  <bb 130>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1793 => this_9(D)
  # DEBUG this => D#1793
  # DEBUG D#1792 => D#1793
  # DEBUG D#1791 => &D#1792->D.60085
  # DEBUG this => D#1791
  # DEBUG __a => D#1790
  # DEBUG D#1789 => D#1790
  # DEBUG D#1788 => D#1789
  # DEBUG this => D#1788
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#210 => this_9(D)
  # DEBUG D#210 => this_9(D)
  # DEBUG this => D#210
  # DEBUG this => D#210
  _613 = (long int) _23;
  _614 = _13 - _613;
  _615 = _614 /[ex] 40;
  _616 = (const long unsigned int) _615;
  _617 = 461168601842738790 - _616;
  if (__n_7(D) > _617)
    goto <bb 131>;
  else
    goto <bb 132>;

  <bb 131>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 132>:
  # DEBUG D#210 => this_9(D)
  # DEBUG D#210 => this_9(D)
  # DEBUG this => D#210
  # DEBUG this => D#210
  # DEBUG D#210 => this_9(D)
  # DEBUG D#210 => this_9(D)
  # DEBUG this => D#210
  # DEBUG this => D#210
  # DEBUG __a => &D.168021
  # DEBUG __b => &__n
  _18 = MAX_EXPR <__n_7(D), _616>;
  __len_621 = _18 + _616;
  # DEBUG __len => __len_621
  # DEBUG D#210 => this_9(D)
  # DEBUG D#210 => this_9(D)
  # DEBUG this => D#210
  # DEBUG this => D#210
  # DEBUG D#1793 => this_9(D)
  # DEBUG this => D#1793
  # DEBUG D#1792 => D#1793
  # DEBUG D#1791 => &D#1792->D.60085
  # DEBUG this => D#1791
  # DEBUG __a => D#1790
  # DEBUG D#1789 => D#1790
  # DEBUG D#1788 => D#1789
  # DEBUG this => D#1788
  _676 = __len_621 > 461168601842738790;
  _420 = _616 > __len_621;
  _673 = _420 | _676;
  if (_673 != 0)
    goto <bb 195>;
  else
    goto <bb 196>;

  <bb 133>:
  pretmp_560 = __len_621 * 40;

  <bb 134>:
  # __elems_before_753 = PHI <__elems_before_322(195), __elems_before_199(133)>
  # _419 = PHI <_410(195), _431(133)>
  # prephitmp_561 = PHI <18446744073709551600(195), pretmp_560(133)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#555 => &this_9(D)->D.60085._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#555
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84667
  # DEBUG this => &__position
  # DEBUG this => &D.84667
  # DEBUG __elems_before => __elems_before_753
  # DEBUG D#1818 => &this_9(D)->D.60085
  # DEBUG D#1801 => D#1818
  # DEBUG __n => NULL
  # DEBUG this => D#1801
  # DEBUG D#1800 => D#1801
  # DEBUG D#1799 => &D#1800->_M_impl
  # DEBUG D#1798 => D#1799
  # DEBUG __n => NULL
  # DEBUG __a => D#1798
  # DEBUG D#1797 => D#1798
  # DEBUG D#1795 => D#1797
  # DEBUG D#1796 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1795
  # DEBUG D.168009 => D#1796
  # DEBUG D#1794 => D#1795
  # DEBUG D#1788 => D#1794
  # DEBUG this => D#1788
  _609 = operator new (prephitmp_561);

  <bb 135>:
  # __new_finish_610 = PHI <0B(196), _609(134)>
  # __elems_before_863 = PHI <__elems_before_199(196), __elems_before_753(134)>
  # _314 = PHI <_431(196), _419(134)>
  # prephitmp_190 = PHI <0(196), prephitmp_561(134)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1802 => &this_9(D)->D.60085
  # DEBUG this => D#1802
  _26 = (long unsigned int) _314;
  __first_27 = __new_finish_610 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.131076 => D#1787
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 136>:
  # __n_552 = PHI <__n_603(158), __n_7(D)(135)>
  # __first_195 = PHI <__first_604(158), __first_27(135)>
  # DEBUG __cur => __first_195
  # DEBUG __n => __n_552
  # DEBUG __r => __first_195
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#20 => 40
  # DEBUG __p => NULL
  # DEBUG D.130721 => D#20
  if (__first_195 != 0B)
    goto <bb 137>;
  else
    goto <bb 157>;

  <bb 137>:
  # DEBUG this => __first_195
  # DEBUG __x => __x_28(D)
  # DEBUG D#1519 => &MEM[(const struct vector *)__x_28(D)].D.48430
  # DEBUG this => D#1519
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.126954 => NULL
  # DEBUG this => NULL
  # DEBUG D#1521 => &__first_195->D.48430
  # DEBUG this => D#1521
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.119804 => NULL
  # DEBUG this => NULL
  # DEBUG D#1028 => &D#1521->_M_impl
  # DEBUG this => D#1028
  # DEBUG __a => NULL
  # DEBUG this => D#1028
  # DEBUG __a => NULL
  # DEBUG this => D#1028
  # DEBUG D.119778 => NULL
  # DEBUG D#1027 => &D#1028->_M_start
  # DEBUG this => D#1027
  # DEBUG D#39 => &D#1027->D.33184
  # DEBUG this => D#39
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#39
  MEM[(struct _Bit_iterator_base *)__first_195]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)__first_195]._M_offset = 0;
  # DEBUG D#1026 => &D#1028->_M_finish
  # DEBUG this => D#1026
  # DEBUG D#39 => &D#1026->D.33184
  # DEBUG this => D#39
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#39
  MEM[(struct _Bit_iterator_base *)__first_195 + 16B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)__first_195 + 16B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)__first_195]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => __x_28(D)
  # DEBUG this => __x_28(D)
  # DEBUG D#208 => &MEM[(const struct vector *)__x_28(D)].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _17 = MEM[(const struct _Bit_iterator *)__x_28(D)].D.33184._M_offset;
  _623 = MEM[(const struct _Bit_iterator *)__x_28(D)].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _623
  # DEBUG __y => _17
  # DEBUG this => D#48
  # DEBUG this => __x_28(D)
  # DEBUG D#209 => &MEM[(const struct vector *)__x_28(D)].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  _624 = MEM[(const struct _Bit_iterator *)__x_28(D) + 16B].D.33184._M_offset;
  _625 = MEM[(const struct _Bit_iterator *)__x_28(D) + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _625
  # DEBUG __y => _624
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _626 = (long int) _625;
  _627 = (long int) _623;
  _628 = _626 - _627;
  _629 = _628 * 8;
  _630 = (long int) _624;
  _631 = _629 + _630;
  _632 = (long int) _17;
  _633 = _631 - _632;
  _634 = (size_type) _633;
  # DEBUG this => __first_195
  # DEBUG __n => _634
  # DEBUG D#1506 => &__first_195->D.48430
  # DEBUG D#1504 => D#1506
  # DEBUG __n => _634
  # DEBUG this => D#1504
  # DEBUG D#1503 => D#1504
  # DEBUG __n => _634
  _640 = _634 + 63;
  _641 = _640 >> 6;
  # DEBUG D#1502 => &D#1503->_M_impl
  # DEBUG D#1501 => D#1502
  # DEBUG __n => NULL
  # DEBUG __a => D#1501
  # DEBUG D#1500 => D#1501
  # DEBUG D#1498 => D#1500
  # DEBUG D#1499 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1498
  # DEBUG D.168069 => D#1499
  # DEBUG D#1497 => D#1498
  # DEBUG D#1496 => D#1497
  # DEBUG this => D#1496
  _642 = _641 * 8;
  _643 = operator new (_642);

  <bb 138>:
  # DEBUG __q => _643
  # DEBUG __n => _634
  _644 = _643 + _642;
  __first_195->D.48430._M_impl._M_end_of_storage = _644;
  # DEBUG __r => _643
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#40
  MEM[(struct _Bit_iterator *)__first_195] = _643;
  MEM[(struct _Bit_iterator *)__first_195 + 8B] = 0;
  # DEBUG D#1505 => &__first_195->D.48430._M_impl._M_start
  # DEBUG this => D#1505
  # DEBUG __i => _633
  # DEBUG __tmp$_M_p => _643
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => _633
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => _633
  # DEBUG __n => _633
  _646 = _633 / 64;
  _647 = (long unsigned int) _646;
  _648 = _647 * 8;
  __tmp$_M_p_649 = _643 + _648;
  # DEBUG __tmp$_M_p => __tmp$_M_p_649
  __n_650 = _633 % 64;
  # DEBUG __n => __n_650
  if (__n_650 < 0)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 139>:
  __n_651 = __n_650 + 64;
  # DEBUG __n => __n_651
  __tmp$_M_p_652 = __tmp$_M_p_649 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_652

  <bb 140>:
  # __n_653 = PHI <__n_650(138), __n_651(139)>
  # __tmp$_M_p_655 = PHI <__tmp$_M_p_649(138), __tmp$_M_p_652(139)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_655
  # DEBUG __n => __n_653
  _654 = (unsigned int) __n_653;
  # DEBUG __tmp$_M_offset => _654
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  MEM[(struct _Bit_iterator *)__first_195 + 16B] = __tmp$_M_p_655;
  MEM[(struct _Bit_iterator *)__first_195 + 24B] = _654;
  # DEBUG this => __x_28(D)
  # DEBUG D#209 => &MEM[(const struct vector *)__x_28(D)].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  __it$D33304$_M_offset_635 = MEM[(const struct _Bit_iterator *)__x_28(D) + 16B].D.33184._M_offset;
  __first$_M_p_636 = MEM[(const struct _Bit_iterator *)__x_28(D) + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => __first$_M_p_636
  # DEBUG __y => __it$D33304$_M_offset_635
  # DEBUG this => D#48
  # DEBUG this => __x_28(D)
  # DEBUG D#208 => &MEM[(const struct vector *)__x_28(D)].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG D#1520 => MEM[(const struct _Bit_iterator *)__x_28(D)].D.33184._M_offset
  _637 = MEM[(const struct _Bit_iterator *)__x_28(D)].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _637
  # DEBUG __y => D#1520
  # DEBUG this => D#48
  # DEBUG D.126974 => D#1520
  # DEBUG D#1515 => __first_195
  # DEBUG D#1518 => __first_195->D.48430._M_impl._M_start
  # DEBUG this => D#1515
  # DEBUG __last$D33304$_M_p => __first$_M_p_636
  # DEBUG __first => _637
  # DEBUG __last => __first$_M_p_636
  # DEBUG __result => _643
  # DEBUG __it => __first$_M_p_636
  # DEBUG __it => __first$_M_p_636
  # DEBUG __it => _637
  # DEBUG __it => _637
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _643
  # DEBUG __it => _643
  # DEBUG __it => _643
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _643
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _643
  __last.195_659 = (long int) __first$_M_p_636;
  __first.196_660 = (long int) _637;
  _661 = __last.195_659 - __first.196_660;
  _Num_662 = _661 /[ex] 8;
  # DEBUG _Num => _Num_662
  if (_Num_662 != 0)
    goto <bb 142>;
  else
    goto <bb 141>;

  <bb 141>:
  pretmp_568 = (long unsigned int) _661;
  goto <bb 143>;

  <bb 142>:
  _663 = (long unsigned int) _661;
  __builtin_memmove (_643, _637, _663);

  <bb 143>:
  # prephitmp_201 = PHI <pretmp_568(141), _663(142)>
  __result$_M_p_665 = _643 + prephitmp_201;
  # DEBUG __q => __result$_M_p_665
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_665
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG __x => __result$_M_p_665
  # DEBUG __y => 0
  # DEBUG this => D#40
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_636
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG __x => __first$_M_p_636
  # DEBUG __y => 0
  # DEBUG this => D#47
  # DEBUG D#1513 => __last
  # DEBUG D#1513 => __last
  # DEBUG __it$D33304$_M_p => __first$_M_p_636
  # DEBUG __it$D33304$_M_offset => __it$D33304$_M_offset_635
  # DEBUG __it$D33304$_M_p => __first$_M_p_636
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __it$D33184$_M_p => __result$_M_p_665
  # DEBUG __it$D33184$_M_offset => 0
  # DEBUG __it$D33304$_M_p => __first$_M_p_636
  # DEBUG __it$D33304$_M_offset => __it$D33304$_M_offset_635
  # DEBUG __it$D33304$_M_p => __first$_M_p_636
  # DEBUG __it$D33304$_M_offset => 0
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => __first$_M_p_636
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_665
  # DEBUG __result$8 => 0
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#37 => &__last.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG D#38 => &__first.D.33304
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  __n_683 = (_Distance) __it$D33304$_M_offset_635;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_665
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => __first$_M_p_636
  # DEBUG __n => __n_683
  if (__n_683 == 0)
    goto <bb 157>;
  else
    goto <bb 144>;

  <bb 144>:

  <bb 145>:
  # __n_893 = PHI <__n_683(144), __n_705(155)>
  # __first$8_539 = PHI <0(144), __first$8_707(155)>
  # __first$_M_p_540 = PHI <__first$_M_p_636(144), __first$_M_p_706(155)>
  # __result$8_430 = PHI <0(144), __result$8_709(155)>
  # __result$_M_p_432 = PHI <__result$_M_p_665(144), __result$_M_p_708(155)>
  # DEBUG __result$8 => __result$8_430
  # DEBUG __result$_M_p => __result$_M_p_432
  # DEBUG __first$8 => __first$8_539
  # DEBUG __first$_M_p => __first$_M_p_540
  # DEBUG __n => __n_893
  # DEBUG D#49 => &__first
  # DEBUG D#49 => &__first
  # DEBUG this => D#49
  # DEBUG this => D#49
  _689 = 1 << __first$8_539;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_540
  # DEBUG __y => _689
  # DEBUG this => NULL
  _691 = *__first$_M_p_540;
  _692 = _689 & _691;
  # DEBUG D#41 => &__result
  # DEBUG D#41 => &__result
  # DEBUG this => D#41
  # DEBUG this => D#41
  _694 = 1 << __result$8_430;
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_432
  # DEBUG __y => _694
  # DEBUG this => NULL
  # DEBUG __x => _692 != 0
  if (_692 != 0)
    goto <bb 146>;
  else
    goto <bb 147>;

  <bb 146>:
  _696 = *__result$_M_p_432;
  _697 = _694 | _696;
  goto <bb 148>;

  <bb 147>:
  _698 = *__result$_M_p_432;
  _699 = ~_694;
  _700 = _698 & _699;

  <bb 148>:
  # cstore_777 = PHI <_697(146), _700(147)>
  *__result$_M_p_432 = cstore_777;
  # DEBUG this => &__first
  # DEBUG D#50 => &__first.D.33304
  # DEBUG this => D#50
  # DEBUG __first$8 => __first$8_539 + 1
  if (__first$8_539 == 63)
    goto <bb 150>;
  else
    goto <bb 149>;

  <bb 149>:
  __first$8_701 = __first$8_539 + 1;
  goto <bb 151>;

  <bb 150>:
  # DEBUG __first$8 => 0
  __first$_M_p_702 = __first$_M_p_540 + 8;
  # DEBUG __first$_M_p => __first$_M_p_702

  <bb 151>:
  # __first$_M_p_706 = PHI <__first$_M_p_540(149), __first$_M_p_702(150)>
  # __first$8_707 = PHI <__first$8_701(149), 0(150)>
  # DEBUG __first$8 => __first$8_707
  # DEBUG __first$_M_p => __first$_M_p_706
  # DEBUG this => &__result
  # DEBUG D#42 => &__result.D.33184
  # DEBUG this => D#42
  # DEBUG __result$8 => __result$8_430 + 1
  if (__result$8_430 == 63)
    goto <bb 153>;
  else
    goto <bb 152>;

  <bb 152>:
  __result$8_703 = __result$8_430 + 1;
  goto <bb 154>;

  <bb 153>:
  # DEBUG __result$8 => 0
  __result$_M_p_704 = __result$_M_p_432 + 8;
  # DEBUG __result$_M_p => __result$_M_p_704

  <bb 154>:
  # __result$_M_p_708 = PHI <__result$_M_p_432(152), __result$_M_p_704(153)>
  # __result$8_709 = PHI <__result$8_703(152), 0(153)>
  # DEBUG __result$8 => __result$8_709
  # DEBUG __result$_M_p => __result$_M_p_708
  __n_705 = __n_893 + -1;
  # DEBUG __n => __n_705
  # DEBUG __result$8 => __result$8_709
  # DEBUG __result$_M_p => __result$_M_p_708
  # DEBUG __first$8 => __first$8_707
  # DEBUG __first$_M_p => __first$_M_p_706
  # DEBUG __n => __n_705
  if (__n_705 == 0)
    goto <bb 157>;
  else
    goto <bb 155>;

  <bb 155>:
  goto <bb 145>;

  # __first_926 = PHI <__first_195(137)>
<L23>:
  _639 = &__first_926->D.48430;
  # DEBUG this => _639
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_639);
  # DEBUG D#1019 => &_639->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__first_926] ={v} {CLOBBER};
  resx 16

  <bb 157>:
  __n_603 = __n_552 + 18446744073709551615;
  # DEBUG __n => __n_603
  __first_604 = __first_195 + 40;
  # DEBUG __cur => __first_604
  # DEBUG __cur => __first_604
  # DEBUG __n => __n_603
  if (__n_603 == 0)
    goto <bb 159>;
  else
    goto <bb 158>;

  <bb 158>:
  goto <bb 136>;

  <bb 159>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1803 => &this_9(D)->D.60085
  # DEBUG this => D#1803
  # DEBUG this => &__position
  _31 = this_9(D)->D.60085._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#4104
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1786
  # DEBUG D#1785 => D#1786
  # DEBUG D#1782 => D#1785
  # DEBUG __first => _31
  # DEBUG __last => D#4104
  # DEBUG __result => NULL
  # DEBUG D.131097 => D#1782
  # DEBUG __first => _31
  # DEBUG __last => D#4104
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<bool>*, std::vector<bool>*> (_31, __position_22, __new_finish_610);
  goto <bb 166>;

<L20>:
  _605 = __builtin_eh_pointer (13);
  __cxa_begin_catch (_605);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_926
  # DEBUG __first => __first_27
  # DEBUG __last => __first_926
  # DEBUG __first => __first_27
  if (__first_27 == __first_926)
    goto <bb 161>;
  else
    goto <bb 162>;

  <bb 161>:
  __cxa_rethrow ();

  <bb 162>:

  <bb 163>:
  # __first_411 = PHI <__first_27(162), __first_608(164)>
  # DEBUG __first => __first_411
  # DEBUG __r => __first_411
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _607 = &__first_411->D.48430;
  # DEBUG this => _607
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_607);
  # DEBUG D#1019 => &_607->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__first_411] ={v} {CLOBBER};
  __first_608 = __first_411 + 40;
  # DEBUG __first => __first_608
  # DEBUG __first => __first_608
  if (__first_926 == __first_608)
    goto <bb 161>;
  else
    goto <bb 164>;

  <bb 164>:
  goto <bb 163>;

<L22>:
  __cxa_end_catch ();
  resx 14

  <bb 166>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 40;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#1804 => &this_9(D)->D.60085
  # DEBUG this => D#1804
  _35 = this_9(D)->D.60085._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#4104
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#1786
  # DEBUG D#1785 => D#1786
  # DEBUG D#1782 => D#1785
  # DEBUG __first => D#4104
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.131116 => D#1782
  # DEBUG __first => D#4104
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _90 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<bool>*, std::vector<bool>*> (__position_22, _35, __new_finish_33);
  goto <bb 168>;

<L32>:
  goto <bb 182> (<L13>);

  <bb 168>:
  # DEBUG __new_finish => _90
  # DEBUG D#1805 => &this_9(D)->D.60085
  # DEBUG this => D#1805
  _37 = this_9(D)->D.60085._M_impl._M_finish;
  __first_38 = this_9(D)->D.60085._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 175>;
  else
    goto <bb 169>;

  <bb 169>:

  <bb 170>:
  # __first_774 = PHI <__first_38(169), __first_92(173)>
  # DEBUG __first => __first_774
  # DEBUG __r => __first_774
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG D#4063 => &__first_774->D.48430
  # DEBUG this => D#4063
  # DEBUG this => D#4063
  _710 = MEM[(struct _Bvector_base *)__first_774]._M_impl._M_start.D.33184._M_p;
  if (_710 != 0B)
    goto <bb 171>;
  else
    goto <bb 172>;

  <bb 171>:
  # DEBUG D#1015 => &D#4063->_M_impl
  _711 = MEM[(long unsigned int * *)__first_774 + 32B];
  # DEBUG D#375 => D#1015
  # DEBUG this => D#375
  _713 = (long int) _711;
  _714 = (long int) _710;
  _715 = _713 - _714;
  # DEBUG D#1018 => _715 /[ex] 8
  # DEBUG D#1017 => (const size_t) D#1018
  # DEBUG __n => D#1017
  _716 = (long unsigned int) _715;
  _717 = -_716;
  _718 = _711 + _717;
  # DEBUG D#1016 => &D#4063->_M_impl
  # DEBUG D#1013 => D#1016
  # DEBUG D#1014 => D#1017
  # DEBUG __p => _718
  # DEBUG __a => D#1013
  # DEBUG __n => D#1014
  # DEBUG D#1012 => D#1014
  # DEBUG D#1011 => D#1013
  # DEBUG D#1009 => D#1011
  # DEBUG D#1010 => D#1012
  # DEBUG __p => _718
  # DEBUG this => D#1009
  # DEBUG D.168168 => D#1010
  operator delete (_718);

  <bb 172>:
  # DEBUG D#1019 => &D#4063->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__first_774] ={v} {CLOBBER};
  __first_92 = __first_774 + 40;
  # DEBUG __first => __first_92
  # DEBUG __first => __first_92
  if (_37 == __first_92)
    goto <bb 174>;
  else
    goto <bb 173>;

  <bb 173>:
  goto <bb 170>;

  <bb 174>:
  pretmp_91 = this_9(D)->D.60085._M_impl._M_start;

  <bb 175>:
  # prephitmp_257 = PHI <pretmp_91(174), __first_38(168)>
  # DEBUG D#1816 => this_9(D)->D.60085._M_impl._M_end_of_storage
  # DEBUG D#1815 => (long int) D#1816
  # DEBUG D#4103 => this_9(D)->D.60085._M_impl._M_start
  # DEBUG D#1814 => (long int) D#4103
  # DEBUG D#1813 => D#1815 - D#1814
  # DEBUG D#1812 => D#1813 /[ex] 40
  # DEBUG D#1811 => &this_9(D)->D.60085
  # DEBUG D#841 => D#1811
  # DEBUG D#842 => (long unsigned int) D#1812
  # DEBUG __p => D#4103
  # DEBUG this => D#841
  # DEBUG __n => D#842
  # DEBUG D#840 => D#842
  # DEBUG D#839 => D#841
  if (prephitmp_257 != 0B)
    goto <bb 176>;
  else
    goto <bb 177>;

  <bb 176>:
  # DEBUG D#838 => &D#839->_M_impl
  # DEBUG D#836 => D#838
  # DEBUG D#837 => D#840
  # DEBUG __p => D#4103
  # DEBUG __a => D#836
  # DEBUG __n => D#837
  # DEBUG D#835 => D#837
  # DEBUG D#834 => D#836
  # DEBUG D#832 => D#834
  # DEBUG D#833 => D#835
  # DEBUG __p => D#4103
  # DEBUG this => D#832
  # DEBUG D.131139 => D#833
  operator delete (prephitmp_257);

  <bb 177>:
  this_9(D)->D.60085._M_impl._M_start = __new_finish_610;
  this_9(D)->D.60085._M_impl._M_finish = _90;
  _44 = __new_finish_610 + prephitmp_190;
  this_9(D)->D.60085._M_impl._M_end_of_storage = _44;

  <bb 178>:
  return;

<L25>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy.D.48430
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&__x_copy.D.48430);
  # DEBUG D#1019 => &MEM[(struct _Bvector_base *)&__x_copy]._M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  resx 2

<L31>:

  # __new_finish_1 = PHI <__new_finish_33(167), 0B(181)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 185>;
  else
    goto <bb 183>;

  <bb 183>:
  # DEBUG __first => __new_finish_610
  if (__new_finish_1 == __new_finish_610)
    goto <bb 184>;
  else
    goto <bb 189>;

  <bb 184>:
  # DEBUG D#1817 => &this_9(D)->D.60085
  # DEBUG D#841 => D#1817
  # DEBUG __p => NULL
  # DEBUG this => D#841
  # DEBUG __n => D#842
  # DEBUG D#840 => D#842
  # DEBUG D#839 => D#841
  if (__new_finish_610 != 0B)
    goto <bb 192>;
  else
    goto <bb 193>;

  <bb 185>:
  # DEBUG D#1809 => &this_9(D)->D.60085
  # DEBUG this => D#1809
  _49 = __n_7(D) + __elems_before_863;
  _50 = _49 * 40;
  _51 = __new_finish_610 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51
  # DEBUG __first => __first_27
  if (__first_27 == _51)
    goto <bb 184>;
  else
    goto <bb 186>;

  <bb 186>:

  <bb 187>:
  # __first_783 = PHI <__first_27(186), __first_94(188)>
  # DEBUG __first => __first_783
  # DEBUG __r => __first_783
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _93 = &__first_783->D.48430;
  # DEBUG this => _93
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_93);
  # DEBUG D#1019 => &_93->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__first_783] ={v} {CLOBBER};
  __first_94 = __first_783 + 40;
  # DEBUG __first => __first_94
  # DEBUG __first => __first_94
  if (_51 == __first_94)
    goto <bb 184>;
  else
    goto <bb 188>;

  <bb 188>:
  goto <bb 187>;

  <bb 189>:

  <bb 190>:
  # __new_finish_785 = PHI <__new_finish_610(189), __new_finish_97(191)>
  # DEBUG __first => __new_finish_785
  # DEBUG __r => __new_finish_785
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _96 = &__new_finish_785->D.48430;
  # DEBUG this => _96
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_96);
  # DEBUG D#1019 => &_96->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__new_finish_785] ={v} {CLOBBER};
  __new_finish_97 = __new_finish_785 + 40;
  # DEBUG __first => __new_finish_97
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 184>;
  else
    goto <bb 191>;

  <bb 191>:
  goto <bb 190>;

  <bb 192>:
  # DEBUG D#838 => &D#839->_M_impl
  # DEBUG D#836 => D#838
  # DEBUG D#837 => D#840
  # DEBUG __p => NULL
  # DEBUG __a => D#836
  # DEBUG __n => D#837
  # DEBUG D#835 => D#837
  # DEBUG D#834 => D#836
  # DEBUG D#832 => D#834
  # DEBUG D#833 => D#835
  # DEBUG __p => NULL
  # DEBUG this => D#832
  # DEBUG D.131202 => D#833
  operator delete (__new_finish_610);

  <bb 193>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 195>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#555 => &this_9(D)->D.60085._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#555
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84667
  # DEBUG this => &__position
  _329 = (long int) __position_22;
  # DEBUG this => &D.84667
  _410 = _329 - _613;
  _321 = _410 /[ex] 40;
  __elems_before_322 = (const size_type) _321;
  # DEBUG __elems_before => __elems_before_322
  # DEBUG D#1818 => &this_9(D)->D.60085
  # DEBUG D#1801 => D#1818
  # DEBUG __n => NULL
  # DEBUG this => D#1801
  # DEBUG D#1800 => D#1801
  goto <bb 134>;

  <bb 196>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#555 => &this_9(D)->D.60085._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#555
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84667
  # DEBUG this => &__position
  _197 = (long int) __position_22;
  # DEBUG this => &D.84667
  _431 = _197 - _613;
  _435 = _431 /[ex] 40;
  __elems_before_199 = (const size_type) _435;
  # DEBUG __elems_before => __elems_before_199
  # DEBUG D#1818 => &this_9(D)->D.60085
  # DEBUG D#1801 => D#1818
  # DEBUG __n => NULL
  # DEBUG this => D#1801
  # DEBUG D#1800 => D#1801
  if (__len_621 != 0)
    goto <bb 133>;
  else
    goto <bb 135>;

<L24>:
  # DEBUG __new_finish => __new_finish_610
  _602 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_602);
  if (__new_finish_610 == 0B)
    goto <bb 185>;
  else
    goto <bb 184>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<std::__cxx11::list<Flit*> >*; _ForwardIterator = std::vector<std::__cxx11::list<Flit*> >*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorINSt7__cxx114listIP4FlitSaIS6_EEESaIS8_EESB_EET0_T_SD_SC_, funcdef_no=5337, decl_uid=90139, cgraph_uid=3585, symbol_order=3586)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<std::__cxx11::list<Flit*> >*; _ForwardIterator = std::vector<std::__cxx11::list<Flit*> >*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  struct iterator __position;
  struct _List_iterator D.168470;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct _Node * __tmp;
  const struct list * __first$_M_current;
  struct list * D.168435;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct list * __result;
  struct vector * D.168405;
  struct __normal_iterator __last;
  struct __normal_iterator __first;
  void * _12;
  long unsigned int _18;
  struct list * const _20;
  struct list * const _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  size_type _26;
  struct list * _29;
  struct list * const _30;
  struct list * _33;
  struct vector * _34;
  void * _42;
  struct _List_node_base * _49;
  const struct _List_node_base * _50;
  struct _List_node_base * _53;
  struct _List_node_base * _54;
  struct _List_node * _59;
  struct Flit * _61;
  struct _List_node_base * _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int pretmp_115;
  long unsigned int prephitmp_116;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 45>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_126 = PHI <__first_5(D)(3), __first_10(44)>
  # __result_127 = PHI <__result_4(D)(3), __result_11(44)>
  # DEBUG __cur => __result_127
  # DEBUG __first => __first_126
  # DEBUG __r => __result_127
  # DEBUG __p => NULL
  # DEBUG __value => __first_126
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.131504 => D#20
  if (__result_127 != 0B)
    goto <bb 5>;
  else
    goto <bb 42>;

  <bb 5>:
  # DEBUG this => __result_127
  # DEBUG __x => __first_126
  # DEBUG D#1830 => &MEM[(const struct vector *)__first_126].D.70701
  # DEBUG this => D#1830
  # DEBUG __a => NULL
  _20 = MEM[(struct list * *)__first_126];
  # DEBUG D#211 => __first_126
  _21 = MEM[(struct list * *)__first_126 + 8B];
  # DEBUG D#211 => __first_126
  # DEBUG this => D#211
  # DEBUG this => D#211
  _22 = (long int) _21;
  _23 = (long int) _20;
  _24 = _22 - _23;
  _25 = _24 /[ex] 24;
  _26 = (size_type) _25;
  # DEBUG D#1833 => &__result_127->D.70701
  # DEBUG this => D#1833
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1829 => &D#1833->_M_impl
  # DEBUG this => D#1829
  # DEBUG __a => NULL
  # DEBUG this => D#1829
  # DEBUG __a => NULL
  # DEBUG this => D#1829
  # DEBUG D.119920 => NULL
  MEM[(struct _Vector_impl *)__result_127]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_127]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_127]._M_end_of_storage = 0B;
  # DEBUG this => D#1833
  # DEBUG __n => NULL
  # DEBUG D#1827 => D#1833
  # DEBUG __n => _26
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (_26 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_115 = (long unsigned int) _24;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => _26
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => _26
  # DEBUG this => D#2140
  # DEBUG D.168403 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  if (_26 > 768614336404564650)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_81 = PHI <__result_127(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _18 = (long unsigned int) _24;
  _34 = operator new (_18);
  goto <bb 11>;

  # __result_119 = PHI <__result_127(9)>
<L13>:
  goto <bb 47> (<L4>);

  <bb 11>:
  # __result_35 = PHI <0B(6), _34(9)>
  # prephitmp_116 = PHI <pretmp_115(6), _18(9)>
  MEM[(struct _Vector_base *)__result_127]._M_impl._M_start = __result_35;
  MEM[(struct _Vector_base *)__result_127]._M_impl._M_finish = __result_35;
  _29 = __result_35 + prephitmp_116;
  MEM[(struct _Vector_base *)__result_127]._M_impl._M_end_of_storage = _29;
  # DEBUG D#1831 => &__result_127->D.70701
  # DEBUG this => D#1831
  _30 = MEM[(struct list * *)__first_126 + 8B];
  # DEBUG D#307 => __first_126
  # DEBUG this => D#307
  # DEBUG this => NULL
  # DEBUG __i => NULL
  __first$_M_current_31 = MEM[(struct list * *)__first_126];
  # DEBUG D#308 => __first_126
  # DEBUG this => D#308
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __last$_M_current => _30
  # DEBUG __result => NULL
  # DEBUG D.168386 => D#1621
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => __result_35
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __cur => __result_35
  # DEBUG __first$_M_current => __first$_M_current_31
  # DEBUG __cur => __result_35
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_30 != __first$_M_current_31)
    goto <bb 12>;
  else
    goto <bb 27>;

  <bb 12>:

  <bb 13>:
  # __first$_M_current_139 = PHI <__first$_M_current_31(12), __first$_M_current_40(26)>
  # __result_141 = PHI <__result_35(12), __result_41(26)>
  # DEBUG __first$_M_current => __first$_M_current_139
  # DEBUG __cur => __result_141
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __result_141
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.128471 => D#20
  if (__result_141 != 0B)
    goto <bb 14>;
  else
    goto <bb 24>;

  <bb 14>:
  # DEBUG this => __result_141
  # DEBUG __x => __first$_M_current_139
  # DEBUG D#1618 => &__first$_M_current_139->D.71295
  # DEBUG this => D#1618
  # DEBUG D#1620 => &__result_141->D.71295
  # DEBUG this => D#1620
  # DEBUG __a => NULL
  # DEBUG D#1073 => &D#1620->_M_impl
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG D.120317 => NULL
  MEM[(struct _List_impl *)__result_141]._M_node._M_data = 0;
  # DEBUG this => D#1620
  _49 = &MEM[(struct _List_base *)__result_141]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__result_141]._M_impl._M_node.D.37893._M_next = _49;
  MEM[(struct _List_base *)__result_141]._M_impl._M_node.D.37893._M_prev = _49;
  # DEBUG D#558 => D#1620
  # DEBUG __n => 0
  # DEBUG this => D#558
  # DEBUG this => __first$_M_current_139
  _50 = &__first$_M_current_139->D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _50
  __first$_M_node_51 = MEM[(struct _List_node_base * *)__first$_M_current_139];
  # DEBUG D#312 => __first$_M_current_139
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_51
  # DEBUG this => __result_141
  # DEBUG __first => __first$_M_node_51
  # DEBUG __last$_M_node => _50
  # DEBUG __first$_M_node => __first$_M_node_51
  # DEBUG __first$_M_node => __first$_M_node_51
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_50 != __first$_M_node_51)
    goto <bb 15>;
  else
    goto <bb 24>;

  <bb 15>:

  <bb 16>:
  # __first$_M_node_128 = PHI <__first$_M_node_51(15), __first$_M_node_55(18)>
  # DEBUG __first$_M_node => __first$_M_node_128
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4120 => &MEM[(const struct _Node *)__first$_M_node_128]._M_data
  # DEBUG this => __result_141
  # DEBUG __x => NULL
  # DEBUG this => __result_141
  # DEBUG this => NULL
  # DEBUG __x => _49
  # DEBUG this => __result_141
  # DEBUG __x => D#4120
  # DEBUG D#1615 => __result_141
  # DEBUG __x => D#4120
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.168481 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _59 = operator new (24);

  <bb 17>:
  # DEBUG __p => _59
  # DEBUG D#4121 => &MEM[(struct _Node *)_59]._M_data
  # DEBUG __r => D#4121
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4120
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  _61 = MEM[(struct Flit * const &)__first$_M_node_128 + 16];
  MEM[(struct Flit * *)_59 + 16B] = _61;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _59
  _63 = &MEM[(struct _Node *)_59].D.82395;
  std::__detail::_List_node_base::_M_hook (_63, _49);
  # DEBUG D#1616 => &__result_141->D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _64 = MEM[(long unsigned int *)__result_141 + 16B];
  _65 = _64 + 1;
  MEM[(long unsigned int *)__result_141 + 16B] = _65;
  # DEBUG this => &__first
  __first$_M_node_55 = __first$_M_node_128->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_55
  # DEBUG __first$_M_node => __first$_M_node_55
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_50 != __first$_M_node_55)
    goto <bb 18>;
  else
    goto <bb 24>;

  <bb 18>:
  goto <bb 16>;

  # __result_1 = PHI <__result_35(16)>
  # _53 = PHI <_49(16)>
  # __result_27 = PHI <__result_127(16)>
  # __result_9 = PHI <__result_141(16)>
<L11>:
  # DEBUG D#1619 => &__result_9->D.71295
  # DEBUG this => D#1619
  # DEBUG this => D#1619
  __tmp_56 = MEM[(struct _List_base *)__result_9]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_56
  # DEBUG __cur => __tmp_56
  if (_53 == __tmp_56)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#1055 => &D#1619->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_9] ={v} {CLOBBER};
  resx 8

  <bb 21>:

  <bb 22>:
  # __tmp_130 = PHI <__tmp_56(21), __tmp_58(23)>
  # DEBUG __cur => __tmp_130
  # DEBUG __tmp => __tmp_130
  __tmp_58 = __tmp_130->D.82395._M_next;
  # DEBUG __cur => __tmp_58
  # DEBUG D#1054 => &__tmp_130->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1619
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1619
  # DEBUG __p => __tmp_130
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_130
  # DEBUG this => D#559
  # DEBUG D.168450 => D#560
  operator delete (__tmp_130);
  # DEBUG __cur => __tmp_58
  if (_53 == __tmp_58)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

  <bb 24>:
  # DEBUG this => &__first
  __first$_M_current_40 = __first$_M_current_139 + 24;
  # DEBUG __first$_M_current => __first$_M_current_40
  __result_41 = __result_141 + 24;
  # DEBUG __cur => __result_41
  # DEBUG __first$_M_current => __first$_M_current_40
  # DEBUG __cur => __result_41
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_30 != __first$_M_current_40)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  # __result_67 = PHI <__result_41(24)>
  goto <bb 27>;

  <bb 26>:
  goto <bb 13>;

  <bb 27>:
  # __result_140 = PHI <__result_67(25), __result_35(11)>
  __result_127->D.70701._M_impl._M_finish = __result_140;
  goto <bb 42>;

<L8>:
  _42 = __builtin_eh_pointer (7);
  __cxa_begin_catch (_42);
  # DEBUG __first => __result_1
  # DEBUG __last => __result_9
  # DEBUG __first => __result_1
  # DEBUG __last => __result_9
  # DEBUG __first => __result_1
  if (__result_1 == __result_9)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  __cxa_rethrow ();

  <bb 30>:

  <bb 31>:
  # __result_136 = PHI <__result_1(30), __result_48(33)>
  # DEBUG __first => __result_136
  # DEBUG __r => __result_136
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_44 = MEM[(struct _List_base *)__result_136]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_44
  # DEBUG __cur => __tmp_44
  _54 = &MEM[(struct _List_base *)__result_136]._M_impl._M_node.D.37893;
  if (__tmp_44 == _54)
    goto <bb 32>;
  else
    goto <bb 34>;

  <bb 32>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_136] ={v} {CLOBBER};
  __result_48 = __result_136 + 24;
  # DEBUG __first => __result_48
  # DEBUG __first => __result_48
  if (__result_48 == __result_9)
    goto <bb 29>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 31>;

  <bb 34>:

  <bb 35>:
  # __tmp_137 = PHI <__tmp_44(34), __tmp_47(36)>
  # DEBUG __cur => __tmp_137
  # DEBUG __tmp => __tmp_137
  __tmp_47 = __tmp_137->D.82395._M_next;
  # DEBUG __cur => __tmp_47
  # DEBUG D#1054 => &__tmp_137->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_137
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_137
  # DEBUG this => D#559
  # DEBUG D.168425 => D#560
  operator delete (__tmp_137);
  # DEBUG __cur => __tmp_47
  if (__tmp_47 == _54)
    goto <bb 32>;
  else
    goto <bb 36>;

  <bb 36>:
  goto <bb 35>;

<L10>:
  __cxa_end_catch ();
  resx 6

<L7>:
  # DEBUG D#1832 => &__result_27->D.70701
  # DEBUG this => D#1832
  # DEBUG D#1049 => D#1832->_M_impl._M_end_of_storage
  # DEBUG D#1048 => (long int) D#1049
  _33 = MEM[(struct _Vector_base *)__result_27]._M_impl._M_start;
  # DEBUG D#1047 => (long int) _33
  # DEBUG D#1046 => D#1048 - D#1047
  # DEBUG D#1045 => D#1046 /[ex] 24
  # DEBUG D#1042 => D#1832
  # DEBUG D#1043 => (long unsigned int) D#1045
  # DEBUG __p => _33
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (_33 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => _33
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => _33
  # DEBUG this => D#1033
  # DEBUG D.168372 => D#1034
  operator delete (_33);

  <bb 40>:
  # DEBUG D#1044 => &D#1832->_M_impl
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  MEM[(struct  &)__result_27] ={v} {CLOBBER};
  resx 4

<L14>:
  goto <bb 47> (<L4>);

  <bb 42>:
  __first_10 = __first_126 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_127 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # __result_72 = PHI <__result_11(42)>
  goto <bb 45>;

  <bb 44>:
  goto <bb 4>;

  <bb 45>:
  # __result_134 = PHI <__result_72(43), __result_4(D)(2)>
  return __result_134;

<L12>:

  # __result_17 = PHI <__result_27(41), __result_119(10), __result_81(46)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_17
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_17
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_17)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  __cxa_rethrow ();

  <bb 49>:

  <bb 50>:
  # __result_133 = PHI <__result_4(D)(49), __result_8(51)>
  # DEBUG __first => __result_133
  # DEBUG __r => __result_133
  # DEBUG __pointer => NULL
  std::vector<std::__cxx11::list<Flit*> >::~vector (__result_133);
  __result_8 = __result_133 + 24;
  # DEBUG __first => __result_8
  # DEBUG __first => __result_8
  if (__result_8 == __result_17)
    goto <bb 48>;
  else
    goto <bb 51>;

  <bb 51>:
  goto <bb 50>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::__cxx11::list<Flit*>*; _ForwardIterator = std::__cxx11::list<Flit*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx114listIP4FlitSaIS5_EEES8_EET0_T_SA_S9_, funcdef_no=5348, decl_uid=90237, cgraph_uid=3596, symbol_order=3597)

Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::__cxx11::list<Flit*>*; _ForwardIterator = std::__cxx11::list<Flit*>*; bool _TrivialValueTypes = false] (struct list * __first, struct list * __last, struct list * __result)
{
  struct iterator __position;
  struct _List_iterator D.168567;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct _Node * __tmp;
  void * _12;
  struct _List_node * _23;
  struct _List_node_base * _30;
  const struct _List_node_base * _31;
  struct Flit * _41;
  struct _List_node_base * _43;
  long unsigned int _44;
  long unsigned int _45;
  struct _List_node_base * _55;
  struct _List_node_base * _61;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_77 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_78 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_78
  # DEBUG __first => __first_77
  # DEBUG __r => __result_78
  # DEBUG __p => NULL
  # DEBUG __value => __first_77
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.128471 => D#20
  if (__result_78 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_78
  # DEBUG __x => __first_77
  # DEBUG D#1618 => &MEM[(const struct list *)__first_77].D.71295
  # DEBUG this => D#1618
  # DEBUG D#1620 => &__result_78->D.71295
  # DEBUG this => D#1620
  # DEBUG __a => NULL
  # DEBUG D#1073 => &D#1620->_M_impl
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG D.120317 => NULL
  MEM[(struct _List_impl *)__result_78]._M_node._M_data = 0;
  # DEBUG this => D#1620
  _30 = &MEM[(struct _List_base *)__result_78]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__result_78]._M_impl._M_node.D.37893._M_next = _30;
  MEM[(struct _List_base *)__result_78]._M_impl._M_node.D.37893._M_prev = _30;
  # DEBUG D#558 => D#1620
  # DEBUG __n => 0
  # DEBUG this => D#558
  # DEBUG this => __first_77
  _31 = &MEM[(const struct list *)__first_77].D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _31
  __first$_M_node_32 = MEM[(struct _List_node_base * *)__first_77];
  # DEBUG D#312 => __first_77
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_32
  # DEBUG this => __result_78
  # DEBUG __first => __first$_M_node_32
  # DEBUG __last$_M_node => _31
  # DEBUG __first$_M_node => __first$_M_node_32
  # DEBUG __first$_M_node => __first$_M_node_32
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_31 != __first$_M_node_32)
    goto <bb 6>;
  else
    goto <bb 15>;

  <bb 6>:

  <bb 7>:
  # __first$_M_node_81 = PHI <__first$_M_node_32(6), __first$_M_node_36(9)>
  # DEBUG __first$_M_node => __first$_M_node_81
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4126 => &MEM[(const struct _Node *)__first$_M_node_81]._M_data
  # DEBUG this => __result_78
  # DEBUG __x => NULL
  # DEBUG this => __result_78
  # DEBUG this => NULL
  # DEBUG __x => _30
  # DEBUG this => __result_78
  # DEBUG __x => D#4126
  # DEBUG D#1615 => __result_78
  # DEBUG __x => D#4126
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.168578 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _23 = operator new (24);

  <bb 8>:
  # DEBUG __p => _23
  # DEBUG D#4127 => &MEM[(struct _Node *)_23]._M_data
  # DEBUG __r => D#4127
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4126
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  _41 = MEM[(struct Flit * const &)__first$_M_node_81 + 16];
  MEM[(struct Flit * *)_23 + 16B] = _41;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _23
  _43 = &MEM[(struct _Node *)_23].D.82395;
  std::__detail::_List_node_base::_M_hook (_43, _30);
  # DEBUG D#1616 => &__result_78->D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _44 = MEM[(long unsigned int *)__result_78 + 16B];
  _45 = _44 + 1;
  MEM[(long unsigned int *)__result_78 + 16B] = _45;
  # DEBUG this => &__first
  __first$_M_node_36 = __first$_M_node_81->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_36
  # DEBUG __first$_M_node => __first$_M_node_36
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_31 != __first$_M_node_36)
    goto <bb 9>;
  else
    goto <bb 15>;

  <bb 9>:
  goto <bb 7>;

  # _61 = PHI <_30(7)>
  # __result_62 = PHI <__result_78(7)>
<L7>:
  # DEBUG D#1619 => &__result_62->D.71295
  # DEBUG this => D#1619
  # DEBUG this => D#1619
  __tmp_37 = MEM[(struct _List_base *)__result_62]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_37
  # DEBUG __cur => __tmp_37
  if (_61 == __tmp_37)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#1055 => &D#1619->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_62] ={v} {CLOBBER};
  resx 4

  <bb 12>:

  <bb 13>:
  # __tmp_82 = PHI <__tmp_37(12), __tmp_39(14)>
  # DEBUG __cur => __tmp_82
  # DEBUG __tmp => __tmp_82
  __tmp_39 = __tmp_82->D.82395._M_next;
  # DEBUG __cur => __tmp_39
  # DEBUG D#1054 => &__tmp_82->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1619
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1619
  # DEBUG __p => __tmp_82
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_82
  # DEBUG this => D#559
  # DEBUG D.168547 => D#560
  operator delete (__tmp_82);
  # DEBUG __cur => __tmp_39
  if (_61 == __tmp_39)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  __first_10 = __first_77 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_78 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_28 = PHI <__result_11(15)>

  <bb 18>:
  # __result_76 = PHI <__result_28(17), __result_4(D)(2)>
  return __result_76;

<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_62
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_62
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_62)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_75 = PHI <__result_4(D)(21), __result_20(27)>
  # DEBUG __first => __result_75
  # DEBUG __r => __result_75
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_8 = MEM[(struct _List_base *)__result_75]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_8
  # DEBUG __cur => __tmp_8
  _55 = &MEM[(struct _List_base *)__result_75]._M_impl._M_node.D.37893;
  if (__tmp_8 == _55)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_75] ={v} {CLOBBER};
  __result_20 = __result_75 + 24;
  # DEBUG __first => __result_20
  # DEBUG __first => __result_20
  if (__result_20 == __result_62)
    goto <bb 20>;
  else
    goto <bb 27>;

  <bb 24>:

  <bb 25>:
  # __tmp_65 = PHI <__tmp_8(24), __tmp_19(26)>
  # DEBUG __cur => __tmp_65
  # DEBUG __tmp => __tmp_65
  __tmp_19 = __tmp_65->D.82395._M_next;
  # DEBUG __cur => __tmp_19
  # DEBUG D#1054 => &__tmp_65->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_65
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_65
  # DEBUG this => D#559
  # DEBUG D.132495 => D#560
  operator delete (__tmp_65);
  # DEBUG __cur => __tmp_19
  if (__tmp_19 == _55)
    goto <bb 23>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 25>;

  <bb 27>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::list<Flit*>; _Alloc = std::allocator<std::__cxx11::list<Flit*> >] (_ZNSt6vectorINSt7__cxx114listIP4FlitSaIS3_EEESaIS5_EEaSERKS7_, funcdef_no=5200, decl_uid=70323, cgraph_uid=3448, symbol_order=3449)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is not innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::list<Flit*>; _Alloc = std::allocator<std::__cxx11::list<Flit*> >] (struct vector * const this, const struct vector & __x)
{
  struct iterator __position;
  struct _List_iterator D.168713;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct vector * D.168682;
  struct _Node * __tmp;
  const struct list * __first$_M_current;
  struct list * D.168669;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct list * __result;
  const struct list * __last$_M_current;
  const struct list * __first$_M_current;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct list * __result;
  struct list * D.168634;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  _Distance __n;
  struct list * __first;
  struct list * __result;
  _Distance __n;
  const struct list * __first;
  struct list * __first$_M_current;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct list * __first;
  struct list * __tmp;
  struct __normal_iterator D.97201;
  struct __normal_iterator D.97200;
  size_type _7;
  sizetype _9;
  long int _12;
  struct list * _13;
  long unsigned int _18;
  struct list * _19;
  long int _21;
  long int _23;
  long int _24;
  struct _List_node_base * _25;
  long unsigned int _28;
  struct list * _29;
  struct list * const _35;
  struct list * const _36;
  struct list * const _39;
  long int _40;
  long int _42;
  long int _43;
  size_type _45;
  long int prephitmp_51;
  long int _52;
  long int _53;
  size_type _55;
  sizetype _58;
  struct list * const prephitmp_59;
  struct list * const pretmp_62;
  struct list * const prephitmp_63;
  long int pretmp_64;
  struct list * pretmp_71;
  long unsigned int pretmp_72;
  struct list * pretmp_73;
  struct list * prephitmp_78;
  struct list * const pretmp_82;
  struct list * prephitmp_83;
  struct list * const pretmp_85;
  struct list * pretmp_105;
  void * _108;
  void * _114;
  long unsigned int _121;
  struct vector * _122;
  struct _List_node_base * _124;
  const struct _List_node_base * _125;
  struct _List_node * _134;
  struct Flit * _136;
  struct _List_node_base * _138;
  long unsigned int _139;
  long unsigned int _140;
  struct _List_node_base * _150;
  struct list * pretmp_159;
  long unsigned int pretmp_160;
  struct _List_node_base * _165;
  struct list * pretmp_171;
  long unsigned int pretmp_173;
  struct list * pretmp_179;
  struct list * pretmp_180;
  struct _List_node_base * _193;
  long int pretmp_195;
  long int pretmp_196;
  struct list * pretmp_197;
  struct list * prephitmp_200;

  <bb 2>:
  if (__x_3(D) != this_4(D))
    goto <bb 3>;
  else
    goto <bb 72>;

  <bb 3>:
  __first_34 = MEM[(struct list * *)__x_3(D)];
  # DEBUG D#211 => __x_3(D)
  _35 = MEM[(struct list * *)__x_3(D) + 8B];
  # DEBUG D#211 => __x_3(D)
  # DEBUG this => D#211
  # DEBUG this => D#211
  _40 = (long int) _35;
  _42 = (long int) __first_34;
  _43 = _40 - _42;
  __n_44 = _43 /[ex] 24;
  _45 = (size_type) __n_44;
  # DEBUG __xlen => NULL
  __result_38 = MEM[(struct list * *)this_4(D)];
  # DEBUG D#1839 => this_4(D)
  _39 = MEM[(struct list * *)this_4(D) + 16B];
  # DEBUG D#1839 => this_4(D)
  # DEBUG this => D#1839
  # DEBUG this => D#1839
  _24 = (long int) _39;
  _23 = (long int) __result_38;
  _21 = _24 - _23;
  _12 = _21 /[ex] 24;
  _7 = (size_type) _12;
  if (_7 < _45)
    goto <bb 4>;
  else
    goto <bb 49>;

  <bb 4>:
  # DEBUG D#307 => __x_3(D)
  # DEBUG this => D#307
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#308 => __x_3(D)
  # DEBUG this => D#308
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#1846 => this_4(D)
  # DEBUG __n => _45
  # DEBUG this => D#1846
  # DEBUG D#1845 => D#1846
  # DEBUG D#1844 => D#1846
  # DEBUG D#1843 => D#1846
  # DEBUG D#1842 => &D#1843->D.70701
  # DEBUG D#1827 => D#1842
  # DEBUG __n => _45
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (_45 != 0)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => _45
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => _45
  # DEBUG this => D#2140
  # DEBUG D.168680 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  if (_45 > 768614336404564650)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  std::__throw_bad_alloc ();

  <bb 7>:
  _121 = (long unsigned int) _43;
  _122 = operator new (_121);

  <bb 8>:
  # __tmp_123 = PHI <0B(4), _122(7)>
  # DEBUG __result => NULL
  # DEBUG D#1840 => &D#1844->D.70701
  # DEBUG this => D#1840
  # DEBUG __first$_M_current => __first_34
  # DEBUG __last$_M_current => _35
  # DEBUG __result => NULL
  # DEBUG D.168624 => D#1621
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => NULL
  # DEBUG __first$_M_current => __first_34
  # DEBUG __cur => NULL
  # DEBUG __first$_M_current => __first_34
  # DEBUG __cur => __tmp_123
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (__first_34 != _35)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  # DEBUG __tmp => NULL
  # DEBUG D#2572 => &this_4(D)->D.70701
  # DEBUG this => D#2572
  _13 = this_4(D)->D.70701._M_impl._M_finish;
  __first_14 = this_4(D)->D.70701._M_impl._M_start;
  # DEBUG __first => __first_14
  # DEBUG __last => _13
  # DEBUG __first => __first_14
  if (_13 == __first_14)
    goto <bb 46>;
  else
    goto <bb 38>;

  <bb 10>:

  <bb 11>:
  # __first_217 = PHI <__first_34(10), __first_112(23)>
  # __tmp_218 = PHI <__tmp_123(10), __tmp_113(23)>
  # DEBUG __first$_M_current => __first_217
  # DEBUG __cur => __tmp_218
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __tmp_218
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.128471 => D#20
  if (__tmp_218 != 0B)
    goto <bb 12>;
  else
    goto <bb 22>;

  <bb 12>:
  # DEBUG this => __tmp_218
  # DEBUG __x => __first_217
  # DEBUG D#1618 => &MEM[(const struct list *)__first_217].D.71295
  # DEBUG this => D#1618
  # DEBUG D#1620 => &__tmp_218->D.71295
  # DEBUG this => D#1620
  # DEBUG __a => NULL
  # DEBUG D#1073 => &D#1620->_M_impl
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG D.120317 => NULL
  MEM[(struct _List_impl *)__tmp_218]._M_node._M_data = 0;
  # DEBUG this => D#1620
  _124 = &MEM[(struct _List_base *)__tmp_218]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__tmp_218]._M_impl._M_node.D.37893._M_next = _124;
  MEM[(struct _List_base *)__tmp_218]._M_impl._M_node.D.37893._M_prev = _124;
  # DEBUG D#558 => D#1620
  # DEBUG __n => 0
  # DEBUG this => D#558
  # DEBUG this => __first_217
  _125 = &MEM[(const struct list *)__first_217].D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _125
  __first$_M_node_126 = MEM[(struct _List_node_base * *)__first_217];
  # DEBUG D#312 => __first_217
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_126
  # DEBUG this => __tmp_218
  # DEBUG __first => __first$_M_node_126
  # DEBUG __last$_M_node => _125
  # DEBUG __first$_M_node => __first$_M_node_126
  # DEBUG __first$_M_node => __first$_M_node_126
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_125 != __first$_M_node_126)
    goto <bb 13>;
  else
    goto <bb 22>;

  <bb 13>:

  <bb 14>:
  # __first$_M_node_221 = PHI <__first$_M_node_126(13), __first$_M_node_130(16)>
  # DEBUG __first$_M_node => __first$_M_node_221
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4129 => &MEM[(const struct _Node *)__first$_M_node_221]._M_data
  # DEBUG this => __tmp_218
  # DEBUG __x => NULL
  # DEBUG this => __tmp_218
  # DEBUG this => NULL
  # DEBUG __x => _124
  # DEBUG this => __tmp_218
  # DEBUG __x => D#4129
  # DEBUG D#1615 => __tmp_218
  # DEBUG __x => D#4129
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.168724 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _134 = operator new (24);

  <bb 15>:
  # DEBUG __p => _134
  # DEBUG D#4130 => &MEM[(struct _Node *)_134]._M_data
  # DEBUG __r => D#4130
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4129
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  _136 = MEM[(struct Flit * const &)__first$_M_node_221 + 16];
  MEM[(struct Flit * *)_134 + 16B] = _136;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _134
  _138 = &MEM[(struct _Node *)_134].D.82395;
  std::__detail::_List_node_base::_M_hook (_138, _124);
  # DEBUG D#1616 => &__tmp_218->D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _139 = MEM[(long unsigned int *)__tmp_218 + 16B];
  _140 = _139 + 1;
  MEM[(long unsigned int *)__tmp_218 + 16B] = _140;
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_221->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_125 != __first$_M_node_130)
    goto <bb 16>;
  else
    goto <bb 22>;

  <bb 16>:
  goto <bb 14>;

  # _25 = PHI <_124(14)>
  # __tmp_26 = PHI <__tmp_218(14)>
<L16>:
  # DEBUG D#1619 => &__tmp_26->D.71295
  # DEBUG this => D#1619
  # DEBUG this => D#1619
  __tmp_131 = MEM[(struct _List_base *)__tmp_26]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_131
  # DEBUG __cur => __tmp_131
  if (_25 == __tmp_131)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#1055 => &D#1619->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__tmp_26] ={v} {CLOBBER};
  resx 7

  <bb 19>:

  <bb 20>:
  # __tmp_222 = PHI <__tmp_131(19), __tmp_133(21)>
  # DEBUG __cur => __tmp_222
  # DEBUG __tmp => __tmp_222
  __tmp_133 = __tmp_222->D.82395._M_next;
  # DEBUG __cur => __tmp_133
  # DEBUG D#1054 => &__tmp_222->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1619
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1619
  # DEBUG __p => __tmp_222
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_222
  # DEBUG this => D#559
  # DEBUG D.168693 => D#560
  operator delete (__tmp_222);
  # DEBUG __cur => __tmp_133
  if (_25 == __tmp_133)
    goto <bb 18>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 20>;

  <bb 22>:
  # DEBUG this => &__first
  __first_112 = __first_217 + 24;
  # DEBUG __first$_M_current => __first_112
  __tmp_113 = __tmp_218 + 24;
  # DEBUG __cur => __tmp_113
  # DEBUG __first$_M_current => __first_112
  # DEBUG __cur => __tmp_113
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_35 != __first_112)
    goto <bb 23>;
  else
    goto <bb 9>;

  <bb 23>:
  goto <bb 11>;

<L13>:
  _114 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_114);
  # DEBUG __first => NULL
  # DEBUG __last => __tmp_26
  # DEBUG __first => NULL
  # DEBUG __last => __tmp_26
  # DEBUG __first => __tmp_123
  if (__tmp_123 == __tmp_26)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  __cxa_rethrow ();

  <bb 26>:

  <bb 27>:
  # __tmp_219 = PHI <__tmp_123(26), __tmp_120(29)>
  # DEBUG __first => __tmp_219
  # DEBUG __r => __tmp_219
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_116 = MEM[(struct _List_base *)__tmp_219]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_116
  # DEBUG __cur => __tmp_116
  _150 = &MEM[(struct _List_base *)__tmp_219]._M_impl._M_node.D.37893;
  if (__tmp_116 == _150)
    goto <bb 28>;
  else
    goto <bb 30>;

  <bb 28>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__tmp_219] ={v} {CLOBBER};
  __tmp_120 = __tmp_219 + 24;
  # DEBUG __first => __tmp_120
  # DEBUG __first => __tmp_120
  if (__tmp_120 == __tmp_26)
    goto <bb 25>;
  else
    goto <bb 29>;

  <bb 29>:
  goto <bb 27>;

  <bb 30>:

  <bb 31>:
  # __tmp_220 = PHI <__tmp_116(30), __tmp_119(32)>
  # DEBUG __cur => __tmp_220
  # DEBUG __tmp => __tmp_220
  __tmp_119 = __tmp_220->D.82395._M_next;
  # DEBUG __cur => __tmp_119
  # DEBUG D#1054 => &__tmp_220->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_220
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_220
  # DEBUG this => D#559
  # DEBUG D.168659 => D#560
  operator delete (__tmp_220);
  # DEBUG __cur => __tmp_119
  if (__tmp_119 == _150)
    goto <bb 28>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 31>;

<L15>:
  __cxa_end_catch ();
  resx 5

<L10>:
  _108 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_108);
  # DEBUG D#1841 => &D#1845->D.70701
  # DEBUG D#1042 => D#1841
  # DEBUG D#1043 => _45
  # DEBUG __p => NULL
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (__tmp_123 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => NULL
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => NULL
  # DEBUG this => D#1033
  # DEBUG D.168622 => D#1034
  operator delete (__tmp_123);

  <bb 36>:
  __cxa_rethrow ();

<L12>:
  __cxa_end_catch ();
  resx 2

  <bb 38>:

  <bb 39>:
  # __first_206 = PHI <__first_14(38), __first_50(41)>
  # DEBUG __first => __first_206
  # DEBUG __r => __first_206
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_46 = MEM[(struct _List_base *)__first_206]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_46
  # DEBUG __cur => __tmp_46
  _165 = &MEM[(struct _List_base *)__first_206]._M_impl._M_node.D.37893;
  if (__tmp_46 == _165)
    goto <bb 40>;
  else
    goto <bb 42>;

  <bb 40>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__first_206] ={v} {CLOBBER};
  __first_50 = __first_206 + 24;
  # DEBUG __first => __first_50
  # DEBUG __first => __first_50
  if (_13 == __first_50)
    goto <bb 45>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 39>;

  <bb 42>:

  <bb 43>:
  # __tmp_207 = PHI <__tmp_46(42), __tmp_49(44)>
  # DEBUG __cur => __tmp_207
  # DEBUG __tmp => __tmp_207
  __tmp_49 = __tmp_207->D.82395._M_next;
  # DEBUG __cur => __tmp_49
  # DEBUG D#1054 => &__tmp_207->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_207
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_207
  # DEBUG this => D#559
  # DEBUG D.143901 => D#560
  operator delete (__tmp_207);
  # DEBUG __cur => __tmp_49
  if (__tmp_49 == _165)
    goto <bb 40>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 43>;

  <bb 45>:
  pretmp_105 = this_4(D)->D.70701._M_impl._M_start;

  <bb 46>:
  # prephitmp_78 = PHI <pretmp_105(45), __first_14(9)>
  # DEBUG D#2580 => this_4(D)->D.70701._M_impl._M_end_of_storage
  # DEBUG D#2579 => (long int) D#2580
  # DEBUG D#4133 => this_4(D)->D.70701._M_impl._M_start
  # DEBUG D#2578 => (long int) D#4133
  # DEBUG D#2577 => D#2579 - D#2578
  # DEBUG D#2576 => D#2577 /[ex] 24
  # DEBUG D#2575 => &this_4(D)->D.70701
  # DEBUG D#1042 => D#2575
  # DEBUG D#1043 => (long unsigned int) D#2576
  # DEBUG __p => D#4133
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (prephitmp_78 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => D#4133
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => D#4133
  # DEBUG this => D#1033
  # DEBUG D.143881 => D#1034
  operator delete (prephitmp_78);

  <bb 48>:
  this_4(D)->D.70701._M_impl._M_start = __tmp_123;
  _18 = (long unsigned int) _43;
  _19 = __tmp_123 + _18;
  this_4(D)->D.70701._M_impl._M_end_of_storage = _19;
  goto <bb 71>;

  <bb 49>:
  # DEBUG D#211 => this_4(D)
  _36 = MEM[(struct list * *)this_4(D) + 8B];
  # DEBUG D#211 => this_4(D)
  # DEBUG this => D#211
  # DEBUG this => D#211
  _52 = (long int) _36;
  _53 = _52 - _23;
  __n_54 = _53 /[ex] 24;
  _55 = (size_type) __n_54;
  if (_45 <= _55)
    goto <bb 51>;
  else
    goto <bb 50>;

  <bb 50>:
  # DEBUG __n => __n_54
  # DEBUG __result => __result_38
  # DEBUG __first => __first_34
  if (__n_54 <= 0)
    goto <bb 70>;
  else
    goto <bb 66>;

  <bb 51>:
  # DEBUG __n => __n_44
  # DEBUG __result => __result_38
  # DEBUG __first => __first_34
  if (__n_44 <= 0)
    goto <bb 52>;
  else
    goto <bb 54>;

  <bb 52>:
  # __result_128 = PHI <__result_15(56), __result_38(51)>
  # DEBUG __first$_M_current => __result_128
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_36 != __result_128)
    goto <bb 58>;
  else
    goto <bb 53>;

  <bb 53>:
  pretmp_171 = this_4(D)->D.70701._M_impl._M_start;
  pretmp_72 = (long unsigned int) _43;
  pretmp_71 = pretmp_171 + pretmp_72;
  goto <bb 71>;

  <bb 54>:

  <bb 55>:
  # __n_214 = PHI <__n_44(54), __n_67(57)>
  # __result_215 = PHI <__result_38(54), __result_66(57)>
  # __first_213 = PHI <__first_34(54), __first_65(57)>
  # DEBUG __n => __n_214
  # DEBUG __result => __result_215
  # DEBUG __first => __first_213
  std::__cxx11::list<Flit*>::operator= (__result_215, __first_213);
  __first_65 = __first_213 + 24;
  # DEBUG __first => __first_65
  __result_66 = __result_215 + 24;
  # DEBUG __result => __result_66
  __n_67 = __n_214 + -1;
  # DEBUG __n => __n_67
  # DEBUG __n => __n_67
  # DEBUG __result => __result_66
  # DEBUG __first => __first_65
  if (__n_67 <= 0)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  _9 = (sizetype) __n_44;
  _58 = _9 * 24;
  __result_15 = __result_38 + _58;
  goto <bb 52>;

  <bb 57>:
  goto <bb 55>;

  <bb 58>:

  <bb 59>:
  # __result_84 = PHI <__result_128(58), __result_61(61)>
  # DEBUG __first$_M_current => __result_84
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => NULL
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_57 = MEM[(struct _List_base *)__result_84]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_57
  # DEBUG __cur => __tmp_57
  _193 = &MEM[(struct _List_base *)__result_84]._M_impl._M_node.D.37893;
  if (__tmp_57 == _193)
    goto <bb 60>;
  else
    goto <bb 62>;

  <bb 60>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_84] ={v} {CLOBBER};
  # DEBUG this => &__first
  __result_61 = __result_84 + 24;
  # DEBUG __first$_M_current => __result_61
  # DEBUG __first$_M_current => __result_61
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (_36 != __result_61)
    goto <bb 61>;
  else
    goto <bb 65>;

  <bb 61>:
  goto <bb 59>;

  <bb 62>:

  <bb 63>:
  # __tmp_205 = PHI <__tmp_57(62), __tmp_60(64)>
  # DEBUG __cur => __tmp_205
  # DEBUG __tmp => __tmp_205
  __tmp_60 = __tmp_205->D.82395._M_next;
  # DEBUG __cur => __tmp_60
  # DEBUG D#1054 => &__tmp_205->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_205
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_205
  # DEBUG this => D#559
  # DEBUG D.143937 => D#560
  operator delete (__tmp_205);
  # DEBUG __cur => __tmp_60
  if (__tmp_60 == _193)
    goto <bb 60>;
  else
    goto <bb 64>;

  <bb 64>:
  goto <bb 63>;

  <bb 65>:
  pretmp_179 = this_4(D)->D.70701._M_impl._M_start;
  pretmp_173 = (long unsigned int) _43;
  pretmp_159 = pretmp_179 + pretmp_173;
  goto <bb 71>;

  <bb 66>:

  <bb 67>:
  # __n_216 = PHI <__n_54(66), __n_76(68)>
  # __result_211 = PHI <__result_38(66), __result_75(68)>
  # __first_212 = PHI <__first_34(66), __first_74(68)>
  # DEBUG __n => __n_216
  # DEBUG __result => __result_211
  # DEBUG __first => __first_212
  std::__cxx11::list<Flit*>::operator= (__result_211, __first_212);
  __first_74 = __first_212 + 24;
  # DEBUG __first => __first_74
  __result_75 = __result_211 + 24;
  # DEBUG __result => __result_75
  __n_76 = __n_216 + -1;
  # DEBUG __n => __n_76
  # DEBUG __n => __n_76
  # DEBUG __result => __result_75
  # DEBUG __first => __first_74
  if (__n_76 <= 0)
    goto <bb 69>;
  else
    goto <bb 68>;

  <bb 68>:
  goto <bb 67>;

  <bb 69>:
  pretmp_197 = this_4(D)->D.70701._M_impl._M_finish;
  pretmp_85 = __x_3(D)->D.70701._M_impl._M_finish;
  pretmp_82 = __x_3(D)->D.70701._M_impl._M_start;
  pretmp_62 = MEM[(struct list * *)this_4(D)];
  pretmp_196 = (long int) pretmp_197;
  pretmp_195 = (long int) pretmp_62;
  pretmp_64 = pretmp_196 - pretmp_195;

  <bb 70>:
  # prephitmp_200 = PHI <pretmp_197(69), _36(50)>
  # prephitmp_59 = PHI <pretmp_85(69), _35(50)>
  # prephitmp_63 = PHI <pretmp_82(69), __first_34(50)>
  # prephitmp_51 = PHI <pretmp_64(69), _53(50)>
  # DEBUG D#2574 => &this_4(D)->D.70701
  # DEBUG this => D#2574
  # DEBUG D#4132 => this_4(D)->D.70701._M_impl._M_finish
  # DEBUG D#4131 => __x_3(D)->D.70701._M_impl._M_finish
  # DEBUG D#211 => this_4(D)
  # DEBUG D#211 => this_4(D)
  # DEBUG this => D#211
  # DEBUG this => D#211
  _28 = (long unsigned int) prephitmp_51;
  _29 = prephitmp_63 + _28;
  # DEBUG __first => _29
  # DEBUG __last => D#4131
  # DEBUG __result => D#4132
  # DEBUG D.143989 => D#1895
  # DEBUG __first => _29
  # DEBUG __last => D#4131
  # DEBUG __result => D#4132
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<Flit*>*, std::__cxx11::list<Flit*>*> (_29, prephitmp_59, prephitmp_200);
  pretmp_180 = this_4(D)->D.70701._M_impl._M_start;
  pretmp_160 = (long unsigned int) _43;
  pretmp_73 = pretmp_180 + pretmp_160;

  <bb 71>:
  # prephitmp_83 = PHI <_19(48), pretmp_159(65), pretmp_73(70), pretmp_71(53)>
  this_4(D)->D.70701._M_impl._M_finish = prephitmp_83;

  <bb 72>:
  return this_4(D);

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<std::__cxx11::list<Flit*> >; _Alloc = std::allocator<std::vector<std::__cxx11::list<Flit*> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::list<Flit*> >*, std::vector<std::vector<std::__cxx11::list<Flit*> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<std::__cxx11::list<Flit*> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<std::__cxx11::list<Flit*> >] (_ZNSt6vectorIS_INSt7__cxx114listIP4FlitSaIS3_EEESaIS5_EESaIS7_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS7_S9_EEmRKS7_, funcdef_no=3943, decl_uid=60758, cgraph_uid=2191, symbol_order=2192)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is not innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 19 as candidate
loop 19 is not innermost
loop is not parallel according to graphite
Trying loop 20 as candidate
loop 20 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is not innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is innermost
loop is not parallel according to graphite
Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is not innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is not innermost
loop is not parallel according to graphite
Trying loop 18 as candidate
loop 18 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<std::__cxx11::list<Flit*> >; _Alloc = std::allocator<std::vector<std::__cxx11::list<Flit*> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::list<Flit*> >*, std::vector<std::vector<std::__cxx11::list<Flit*> > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<std::__cxx11::list<Flit*> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<std::__cxx11::list<Flit*> >] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct _Node * __tmp;
  struct list * __first;
  struct iterator __position;
  struct _List_iterator D.169064;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct _Node * __tmp;
  const struct list * __first$_M_current;
  struct list * D.169029;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct list * __result;
  struct vector * D.168999;
  struct __normal_iterator __last;
  struct __normal_iterator __first;
  const long unsigned int D.168954;
  const size_type __len;
  size_type D.168953;
  size_type __n;
  struct vector * D.168944;
  struct vector * D.168932;
  struct vector * __first;
  long unsigned int __n;
  struct iterator __position;
  struct _List_iterator D.168902;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct vector * D.168871;
  struct _Node * __tmp;
  const struct list * __first$_M_current;
  struct list * D.168858;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct list * __result;
  struct __normal_iterator __last;
  struct __normal_iterator __first;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct list * const _17;
  struct _List_node_base * _18;
  struct vector * _20;
  struct vector * const _23;
  bool _24;
  long int __last.217_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  long int _48;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  struct vector * _67;
  long unsigned int _70;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct vector * _83;
  struct list * const pretmp_88;
  struct list * const prephitmp_89;
  long unsigned int _90;
  struct vector * _91;
  struct list * pretmp_95;
  void * _98;
  struct vector * pretmp_101;
  struct list * prephitmp_102;
  struct list * const _118;
  struct list * const _119;
  long int _120;
  long int _121;
  long int _122;
  long int _123;
  size_type _124;
  struct list * _127;
  struct list * _131;
  void * _137;
  long unsigned int _144;
  struct vector * _145;
  struct _List_node_base * _147;
  const struct _List_node_base * _148;
  struct _List_node * _157;
  struct Flit * _159;
  struct _List_node_base * _161;
  long unsigned int _162;
  long unsigned int _163;
  void * _168;
  struct vector * _171;
  long int _175;
  long int _176;
  long int _177;
  long unsigned int _179;
  struct _List_node_base * _184;
  struct list * const _185;
  long int _186;
  long int _187;
  long int _188;
  long int _189;
  size_type _190;
  struct list * _193;
  struct list * _197;
  long unsigned int _198;
  struct vector * _199;
  long unsigned int pretmp_203;
  struct list * const prephitmp_204;
  void * _207;
  struct _List_node_base * _214;
  const struct _List_node_base * _215;
  long unsigned int prephitmp_217;
  struct list * const prephitmp_222;
  struct _List_node * _224;
  struct Flit * _226;
  struct _List_node_base * _228;
  long unsigned int _229;
  long unsigned int _230;
  struct list * _231;
  long unsigned int prephitmp_233;
  long unsigned int prephitmp_251;
  struct list * const pretmp_252;
  struct list * const pretmp_254;
  struct list * const prephitmp_256;
  struct _List_node_base * _262;
  struct _List_node_base * _267;
  difference_type _268;
  long int _270;
  struct vector * prephitmp_281;
  long unsigned int pretmp_283;
  struct list * const pretmp_354;
  long int _385;
  long int _386;
  long int _404;
  bool _406;
  struct _List_node_base * _419;
  long unsigned int pretmp_422;
  long unsigned int prephitmp_429;
  difference_type _433;
  long int _435;
  long int _436;
  bool _437;

  <bb 2>:
  # DEBUG D#4148 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#4148
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 139>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.60835._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.60835._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 63>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#1830 => &MEM[(const struct vector *)__x_28(D)].D.70701
  # DEBUG this => D#1830
  # DEBUG __a => NULL
  _118 = MEM[(struct list * *)__x_28(D)];
  # DEBUG D#211 => __x_28(D)
  _119 = MEM[(struct list * *)__x_28(D) + 8B];
  # DEBUG D#211 => __x_28(D)
  # DEBUG this => D#211
  # DEBUG this => D#211
  _120 = (long int) _119;
  _121 = (long int) _118;
  _122 = _120 - _121;
  _123 = _122 /[ex] 24;
  _124 = (size_type) _123;
  # DEBUG D#1833 => &__x_copy.D.70701
  # DEBUG this => D#1833
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1829 => &D#1833->_M_impl
  # DEBUG this => D#1829
  # DEBUG __a => NULL
  # DEBUG this => D#1829
  # DEBUG __a => NULL
  # DEBUG this => D#1829
  # DEBUG D.119920 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#1833
  # DEBUG __n => NULL
  # DEBUG D#1827 => D#1833
  # DEBUG __n => _124
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (_124 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_283 = (long unsigned int) _122;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => _124
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => _124
  # DEBUG this => D#2140
  # DEBUG D.168869 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  if (_124 > 768614336404564650)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _144 = (long unsigned int) _122;
  _145 = operator new (_144);
  pretmp_252 = MEM[(struct list * *)__x_28(D) + 8B];
  pretmp_88 = MEM[(struct list * *)__x_28(D)];

  <bb 9>:
  # __result_146 = PHI <0B(5), _145(8)>
  # prephitmp_89 = PHI <_119(5), pretmp_252(8)>
  # prephitmp_256 = PHI <_118(5), pretmp_88(8)>
  # prephitmp_429 = PHI <pretmp_283(5), _144(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = __result_146;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = __result_146;
  _127 = __result_146 + prephitmp_429;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _127;
  # DEBUG D#1831 => &__x_copy.D.70701
  # DEBUG this => D#1831
  # DEBUG D#4143 => MEM[(struct list * *)__x_28(D) + 8B]
  # DEBUG D#307 => __x_28(D)
  # DEBUG this => D#307
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#4142 => MEM[(struct list * *)__x_28(D)]
  # DEBUG D#308 => __x_28(D)
  # DEBUG this => D#308
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first$_M_current => D#4142
  # DEBUG __last$_M_current => D#4143
  # DEBUG __result => NULL
  # DEBUG D.168818 => D#1621
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => NULL
  # DEBUG __first$_M_current => D#4142
  # DEBUG __cur => NULL
  # DEBUG __first$_M_current => D#4142
  # DEBUG __cur => __result_146
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (prephitmp_89 != prephitmp_256)
    goto <bb 10>;
  else
    goto <bb 25>;

  <bb 10>:

  <bb 11>:
  # __first$_M_current_151 = PHI <prephitmp_256(10), __first$_M_current_135(24)>
  # __result_321 = PHI <__result_146(10), __result_136(24)>
  # DEBUG __first$_M_current => __first$_M_current_151
  # DEBUG __cur => __result_321
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __result_321
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.128471 => D#20
  if (__result_321 != 0B)
    goto <bb 12>;
  else
    goto <bb 22>;

  <bb 12>:
  # DEBUG this => __result_321
  # DEBUG __x => __first$_M_current_151
  # DEBUG D#1618 => &__first$_M_current_151->D.71295
  # DEBUG this => D#1618
  # DEBUG D#1620 => &__result_321->D.71295
  # DEBUG this => D#1620
  # DEBUG __a => NULL
  # DEBUG D#1073 => &D#1620->_M_impl
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG D.120317 => NULL
  MEM[(struct _List_impl *)__result_321]._M_node._M_data = 0;
  # DEBUG this => D#1620
  _147 = &MEM[(struct _List_base *)__result_321]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__result_321]._M_impl._M_node.D.37893._M_next = _147;
  MEM[(struct _List_base *)__result_321]._M_impl._M_node.D.37893._M_prev = _147;
  # DEBUG D#558 => D#1620
  # DEBUG __n => 0
  # DEBUG this => D#558
  # DEBUG this => __first$_M_current_151
  _148 = &__first$_M_current_151->D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _148
  __first$_M_node_149 = MEM[(struct _List_node_base * *)__first$_M_current_151];
  # DEBUG D#312 => __first$_M_current_151
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_149
  # DEBUG this => __result_321
  # DEBUG __first => __first$_M_node_149
  # DEBUG __last$_M_node => _148
  # DEBUG __first$_M_node => __first$_M_node_149
  # DEBUG __first$_M_node => __first$_M_node_149
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_148 != __first$_M_node_149)
    goto <bb 13>;
  else
    goto <bb 22>;

  <bb 13>:

  <bb 14>:
  # __first$_M_node_381 = PHI <__first$_M_node_149(13), __first$_M_node_153(16)>
  # DEBUG __first$_M_node => __first$_M_node_381
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4139 => &MEM[(const struct _Node *)__first$_M_node_381]._M_data
  # DEBUG this => __result_321
  # DEBUG __x => NULL
  # DEBUG this => __result_321
  # DEBUG this => NULL
  # DEBUG __x => _147
  # DEBUG this => __result_321
  # DEBUG __x => D#4139
  # DEBUG D#1615 => __result_321
  # DEBUG __x => D#4139
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.168913 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _157 = operator new (24);

  <bb 15>:
  # DEBUG __p => _157
  # DEBUG D#4141 => &MEM[(struct _Node *)_157]._M_data
  # DEBUG __r => D#4141
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4139
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  _159 = MEM[(struct Flit * const &)__first$_M_node_381 + 16];
  MEM[(struct Flit * *)_157 + 16B] = _159;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _157
  _161 = &MEM[(struct _Node *)_157].D.82395;
  std::__detail::_List_node_base::_M_hook (_161, _147);
  # DEBUG D#1616 => &__result_321->D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _162 = MEM[(long unsigned int *)__result_321 + 16B];
  _163 = _162 + 1;
  MEM[(long unsigned int *)__result_321 + 16B] = _163;
  # DEBUG this => &__first
  __first$_M_node_153 = __first$_M_node_381->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_153
  # DEBUG __first$_M_node => __first$_M_node_153
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_148 != __first$_M_node_153)
    goto <bb 16>;
  else
    goto <bb 22>;

  <bb 16>:
  goto <bb 14>;

  # _267 = PHI <_147(14)>
  # __result_257 = PHI <__result_321(14)>
<L23>:
  # DEBUG D#1619 => &__result_257->D.71295
  # DEBUG this => D#1619
  # DEBUG this => D#1619
  __tmp_154 = MEM[(struct _List_base *)__result_257]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_154
  # DEBUG __cur => __tmp_154
  if (_267 == __tmp_154)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#1055 => &D#1619->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_257] ={v} {CLOBBER};
  resx 16

  <bb 19>:

  <bb 20>:
  # __tmp_132 = PHI <__tmp_154(19), __tmp_156(21)>
  # DEBUG __cur => __tmp_132
  # DEBUG __tmp => __tmp_132
  __tmp_156 = __tmp_132->D.82395._M_next;
  # DEBUG __cur => __tmp_156
  # DEBUG D#1054 => &__tmp_132->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1619
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1619
  # DEBUG __p => __tmp_132
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_132
  # DEBUG this => D#559
  # DEBUG D.168882 => D#560
  operator delete (__tmp_132);
  # DEBUG __cur => __tmp_156
  if (_267 == __tmp_156)
    goto <bb 18>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 20>;

  <bb 22>:
  # DEBUG this => &__first
  __first$_M_current_135 = __first$_M_current_151 + 24;
  # DEBUG __first$_M_current => __first$_M_current_135
  __result_136 = __result_321 + 24;
  # DEBUG __cur => __result_136
  # DEBUG __first$_M_current => __first$_M_current_135
  # DEBUG __cur => __result_136
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (prephitmp_89 != __first$_M_current_135)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  # __result_282 = PHI <__result_136(22)>
  goto <bb 25>;

  <bb 24>:
  goto <bb 11>;

  <bb 25>:
  # __result_277 = PHI <__result_282(23), __result_146(9)>
  __x_copy.D.70701._M_impl._M_finish = __result_277;
  # DEBUG this => this_9(D)
  # DEBUG D#309 => &this_9(D)->D.60835._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#309
  __old_finish_29 = MEM[(struct vector * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.84724
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84724
  _48 = (long int) __old_finish_29;
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = _48 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_29
  if (__n_7(D) < __elems_after_57)
    goto <bb 39>;
  else
    goto <bb 53>;

<L20>:
  _137 = __builtin_eh_pointer (15);
  __cxa_begin_catch (_137);
  # DEBUG __first => NULL
  # DEBUG __last => __result_257
  # DEBUG __first => NULL
  # DEBUG __last => __result_257
  # DEBUG __first => __result_146
  if (__result_146 == __result_257)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __cxa_rethrow ();

  <bb 28>:

  <bb 29>:
  # __result_383 = PHI <__result_146(28), __result_143(31)>
  # DEBUG __first => __result_383
  # DEBUG __r => __result_383
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_139 = MEM[(struct _List_base *)__result_383]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_139
  # DEBUG __cur => __tmp_139
  _18 = &MEM[(struct _List_base *)__result_383]._M_impl._M_node.D.37893;
  if (_18 == __tmp_139)
    goto <bb 30>;
  else
    goto <bb 32>;

  <bb 30>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_383] ={v} {CLOBBER};
  __result_143 = __result_383 + 24;
  # DEBUG __first => __result_143
  # DEBUG __first => __result_143
  if (__result_143 == __result_257)
    goto <bb 27>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 29>;

  <bb 32>:

  <bb 33>:
  # __tmp_196 = PHI <__tmp_139(32), __tmp_142(34)>
  # DEBUG __cur => __tmp_196
  # DEBUG __tmp => __tmp_196
  __tmp_142 = __tmp_196->D.82395._M_next;
  # DEBUG __cur => __tmp_142
  # DEBUG D#1054 => &__tmp_196->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_196
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_196
  # DEBUG this => D#559
  # DEBUG D.168848 => D#560
  operator delete (__tmp_196);
  # DEBUG __cur => __tmp_142
  if (_18 == __tmp_142)
    goto <bb 30>;
  else
    goto <bb 34>;

  <bb 34>:
  goto <bb 33>;

<L22>:
  __cxa_end_catch ();
  resx 14

<L19>:
  # DEBUG D#1832 => &__x_copy.D.70701
  # DEBUG this => D#1832
  # DEBUG D#1049 => D#1832->_M_impl._M_end_of_storage
  # DEBUG D#1048 => (long int) D#1049
  _131 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#1047 => (long int) _131
  # DEBUG D#1046 => D#1048 - D#1047
  # DEBUG D#1045 => D#1046 /[ex] 24
  # DEBUG D#1042 => D#1832
  # DEBUG D#1043 => (long unsigned int) D#1045
  # DEBUG __p => _131
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (_131 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => _131
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => _131
  # DEBUG this => D#1033
  # DEBUG D.168804 => D#1034
  operator delete (_131);

  <bb 38>:
  # DEBUG D#1044 => &D#1832->_M_impl
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  resx 12

  <bb 39>:
  # DEBUG D#2587 => &this_9(D)->D.60835
  # DEBUG this => D#2587
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = __old_finish_29 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG __alloc => D#1849
  # DEBUG D#1848 => D#1849
  # DEBUG D#1847 => D#1848
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG D.144113 => D#1847
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<std::__cxx11::list<Flit*> >*, std::vector<std::__cxx11::list<Flit*> >*> (__last_61, __old_finish_29, __old_finish_29);

  <bb 40>:
  _62 = this_9(D)->D.60835._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.60835._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#4148
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4148
  # DEBUG __it => D#4148
  # DEBUG __first => D#4148
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __it => __old_finish_29
  # DEBUG __it => __old_finish_29
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4148
  # DEBUG __it => D#4148
  # DEBUG __first => D#4148
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __simple => 0
  # DEBUG __first => D#4148
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  __last.217_25 = (long int) __last_61;
  _78 = __last.217_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => __old_finish_29
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#4148
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4148
  if (__position_22 == _67)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 42>:

  <bb 43>:
  # __old_finish_402 = PHI <__old_finish_29(42), __old_finish_65(46)>
  # __last_414 = PHI <__last_61(42), __last_68(46)>
  # __n_415 = PHI <__n_73(42), __n_58(46)>
  # DEBUG __n => __n_415
  # DEBUG __result => __old_finish_402
  # DEBUG __last => __last_414
  __last_68 = __last_414 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_402 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<std::__cxx11::list<Flit*> >::operator= (__old_finish_65, __last_68);
  goto <bb 45>;

<L34>:
  goto <bb 141> (<L10>);

  <bb 45>:
  __n_58 = __n_415 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 41>;
  else
    goto <bb 46>;

  <bb 46>:
  goto <bb 43>;

  <bb 47>:
  std::vector<std::__cxx11::list<Flit*> >::~vector (&__x_copy);
  __x_copy ={v} {CLOBBER};
  goto <bb 139>;

  <bb 48>:

  <bb 49>:
  # __position_403 = PHI <__position_22(48), __position_82(52)>
  # DEBUG __first => __position_403
  std::vector<std::__cxx11::list<Flit*> >::operator= (__position_403, &__x_copy);
  goto <bb 51>;

<L35>:
  goto <bb 141> (<L10>);

  <bb 51>:
  __position_82 = __position_403 + 24;
  # DEBUG __first => __position_82
  # DEBUG __first => __position_82
  if (_67 == __position_82)
    goto <bb 47>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 49>;

  <bb 53>:
  # DEBUG D#2588 => &this_9(D)->D.60835
  # DEBUG this => D#2588
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_29
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.144159 => D#1852
  # DEBUG __first => __old_finish_29
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _83 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<std::__cxx11::list<Flit*> >*, long unsigned int, std::vector<std::__cxx11::list<Flit*> > > (__old_finish_29, _70, &__x_copy);
  goto <bb 55>;

<L36>:
  goto <bb 141> (<L10>);

  <bb 55>:
  this_9(D)->D.60835._M_impl._M_finish = _83;
  # DEBUG D#2589 => &this_9(D)->D.60835
  # DEBUG this => D#2589
  # DEBUG this => &__position
  # DEBUG __first => D#4148
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _83
  # DEBUG __alloc => D#1849
  # DEBUG D#1848 => D#1849
  # DEBUG D#1847 => D#1848
  # DEBUG __first => D#4148
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _83
  # DEBUG D.144172 => D#1847
  # DEBUG __first => D#4148
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _83
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<std::__cxx11::list<Flit*> >*, std::vector<std::__cxx11::list<Flit*> >*> (__position_22, __old_finish_29, _83);
  goto <bb 57>;

<L37>:
  goto <bb 141> (<L10>);

  <bb 57>:
  _74 = this_9(D)->D.60835._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.60835._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#4148
  # DEBUG __last => __old_finish_29
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4148
  if (__position_22 == __old_finish_29)
    goto <bb 47>;
  else
    goto <bb 58>;

  <bb 58>:

  <bb 59>:
  # __position_416 = PHI <__position_22(58), __position_85(62)>
  # DEBUG __first => __position_416
  std::vector<std::__cxx11::list<Flit*> >::operator= (__position_416, &__x_copy);
  goto <bb 61>;

<L38>:
  goto <bb 141> (<L10>);

  <bb 61>:
  __position_85 = __position_416 + 24;
  # DEBUG __first => __position_85
  # DEBUG __first => __position_85
  if (__old_finish_29 == __position_85)
    goto <bb 47>;
  else
    goto <bb 62>;

  <bb 62>:
  goto <bb 59>;

  <bb 63>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _175 = (long int) _23;
  _176 = _13 - _175;
  _177 = _176 /[ex] 24;
  _178 = (const long unsigned int) _177;
  _179 = 768614336404564650 - _178;
  if (__n_7(D) > _179)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 65>:
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.168954
  # DEBUG __b => &__n
  _90 = MAX_EXPR <__n_7(D), _178>;
  __len_183 = _90 + _178;
  # DEBUG __len => __len_183
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _437 = __len_183 > 768614336404564650;
  _406 = _178 > __len_183;
  _24 = _406 | _437;
  if (_24 != 0)
    goto <bb 156>;
  else
    goto <bb 157>;

  <bb 66>:
  pretmp_422 = __len_183 * 24;

  <bb 67>:
  # __elems_before_253 = PHI <__elems_before_125(156), __elems_before_434(66)>
  # _270 = PHI <_385(156), _436(66)>
  # prephitmp_217 = PHI <18446744073709551600(156), pretmp_422(66)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#556 => &this_9(D)->D.60835._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#556
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84757
  # DEBUG this => &__position
  # DEBUG this => &D.84757
  # DEBUG __elems_before => __elems_before_253
  # DEBUG D#2599 => &this_9(D)->D.60835
  # DEBUG D#1866 => D#2599
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => NULL
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2140
  # DEBUG D.168942 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  _171 = operator new (prephitmp_217);

  <bb 68>:
  # __new_finish_172 = PHI <0B(157), _171(67)>
  # __elems_before_242 = PHI <__elems_before_434(157), __elems_before_253(67)>
  # _404 = PHI <_436(157), _270(67)>
  # prephitmp_233 = PHI <0(157), prephitmp_217(67)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2583 => &this_9(D)->D.60835
  # DEBUG this => D#2583
  _26 = (long unsigned int) _404;
  __first_27 = __new_finish_172 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.144198 => D#1852
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 69>:
  # __n_418 = PHI <__n_166(109), __n_7(D)(68)>
  # __first_384 = PHI <__first_167(109), __first_27(68)>
  # DEBUG __cur => __first_384
  # DEBUG __n => __n_418
  # DEBUG __r => __first_384
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.131504 => D#20
  if (__first_384 != 0B)
    goto <bb 70>;
  else
    goto <bb 108>;

  <bb 70>:
  # DEBUG this => __first_384
  # DEBUG __x => __x_28(D)
  # DEBUG D#1830 => &MEM[(const struct vector *)__x_28(D)].D.70701
  # DEBUG this => D#1830
  # DEBUG __a => NULL
  _17 = MEM[(struct list * *)__x_28(D)];
  # DEBUG D#211 => __x_28(D)
  _185 = MEM[(struct list * *)__x_28(D) + 8B];
  # DEBUG D#211 => __x_28(D)
  # DEBUG this => D#211
  # DEBUG this => D#211
  _186 = (long int) _185;
  _187 = (long int) _17;
  _188 = _186 - _187;
  _189 = _188 /[ex] 24;
  _190 = (size_type) _189;
  # DEBUG D#1833 => &__first_384->D.70701
  # DEBUG this => D#1833
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1829 => &D#1833->_M_impl
  # DEBUG this => D#1829
  # DEBUG __a => NULL
  # DEBUG this => D#1829
  # DEBUG __a => NULL
  # DEBUG this => D#1829
  # DEBUG D.119920 => NULL
  MEM[(struct _Vector_impl *)__first_384]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_384]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_384]._M_end_of_storage = 0B;
  # DEBUG this => D#1833
  # DEBUG __n => NULL
  # DEBUG D#1827 => D#1833
  # DEBUG __n => _190
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (_190 != 0)
    goto <bb 72>;
  else
    goto <bb 71>;

  <bb 71>:
  pretmp_203 = (long unsigned int) _188;
  goto <bb 77>;

  <bb 72>:
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => _190
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => _190
  # DEBUG this => D#2140
  # DEBUG D.168997 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  if (_190 > 768614336404564650)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # __first_236 = PHI <__first_384(72)>
  std::__throw_bad_alloc ();

  <bb 74>:
  _198 = (long unsigned int) _188;
  _199 = operator new (_198);
  goto <bb 76>;

  # __first_235 = PHI <__first_384(74)>
<L40>:
  goto <bb 112> (<L24>);

  <bb 76>:
  pretmp_354 = MEM[(struct list * *)__x_28(D) + 8B];
  pretmp_254 = MEM[(struct list * *)__x_28(D)];

  <bb 77>:
  # __result_200 = PHI <0B(71), _199(76)>
  # prephitmp_222 = PHI <_185(71), pretmp_354(76)>
  # prephitmp_204 = PHI <_17(71), pretmp_254(76)>
  # prephitmp_251 = PHI <pretmp_203(71), _198(76)>
  MEM[(struct _Vector_base *)__first_384]._M_impl._M_start = __result_200;
  MEM[(struct _Vector_base *)__first_384]._M_impl._M_finish = __result_200;
  _193 = __result_200 + prephitmp_251;
  MEM[(struct _Vector_base *)__first_384]._M_impl._M_end_of_storage = _193;
  # DEBUG D#1831 => &__first_384->D.70701
  # DEBUG this => D#1831
  # DEBUG D#4147 => MEM[(struct list * *)__x_28(D) + 8B]
  # DEBUG D#307 => __x_28(D)
  # DEBUG this => D#307
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#4146 => MEM[(struct list * *)__x_28(D)]
  # DEBUG D#308 => __x_28(D)
  # DEBUG this => D#308
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first$_M_current => D#4146
  # DEBUG __last$_M_current => D#4147
  # DEBUG __result => NULL
  # DEBUG D.168980 => D#1621
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __result => __result_200
  # DEBUG __first$_M_current => D#4146
  # DEBUG __cur => __result_200
  # DEBUG __first$_M_current => D#4146
  # DEBUG __cur => __result_200
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (prephitmp_204 != prephitmp_222)
    goto <bb 78>;
  else
    goto <bb 93>;

  <bb 78>:

  <bb 79>:
  # __first$_M_current_382 = PHI <prephitmp_204(78), __first$_M_current_205(92)>
  # __result_55 = PHI <__result_200(78), __result_206(92)>
  # DEBUG __first$_M_current => __first$_M_current_382
  # DEBUG __cur => __result_55
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  # DEBUG this => &__first
  # DEBUG __r => __result_55
  # DEBUG __p => NULL
  # DEBUG __value => NULL
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.128471 => D#20
  if (__result_55 != 0B)
    goto <bb 80>;
  else
    goto <bb 90>;

  <bb 80>:
  # DEBUG this => __result_55
  # DEBUG __x => __first$_M_current_382
  # DEBUG D#1618 => &__first$_M_current_382->D.71295
  # DEBUG this => D#1618
  # DEBUG D#1620 => &__result_55->D.71295
  # DEBUG this => D#1620
  # DEBUG __a => NULL
  # DEBUG D#1073 => &D#1620->_M_impl
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG D.120317 => NULL
  MEM[(struct _List_impl *)__result_55]._M_node._M_data = 0;
  # DEBUG this => D#1620
  _214 = &MEM[(struct _List_base *)__result_55]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__result_55]._M_impl._M_node.D.37893._M_next = _214;
  MEM[(struct _List_base *)__result_55]._M_impl._M_node.D.37893._M_prev = _214;
  # DEBUG D#558 => D#1620
  # DEBUG __n => 0
  # DEBUG this => D#558
  # DEBUG this => __first$_M_current_382
  _215 = &__first$_M_current_382->D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _215
  __first$_M_node_216 = MEM[(struct _List_node_base * *)__first$_M_current_382];
  # DEBUG D#312 => __first$_M_current_382
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_216
  # DEBUG this => __result_55
  # DEBUG __first => __first$_M_node_216
  # DEBUG __last$_M_node => _215
  # DEBUG __first$_M_node => __first$_M_node_216
  # DEBUG __first$_M_node => __first$_M_node_216
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_215 != __first$_M_node_216)
    goto <bb 81>;
  else
    goto <bb 90>;

  <bb 81>:

  <bb 82>:
  # __first$_M_node_393 = PHI <__first$_M_node_216(81), __first$_M_node_220(84)>
  # DEBUG __first$_M_node => __first$_M_node_393
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4138 => &MEM[(const struct _Node *)__first$_M_node_393]._M_data
  # DEBUG this => __result_55
  # DEBUG __x => NULL
  # DEBUG this => __result_55
  # DEBUG this => NULL
  # DEBUG __x => _214
  # DEBUG this => __result_55
  # DEBUG __x => D#4138
  # DEBUG D#1615 => __result_55
  # DEBUG __x => D#4138
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.169075 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _224 = operator new (24);

  <bb 83>:
  # DEBUG __p => _224
  # DEBUG D#4140 => &MEM[(struct _Node *)_224]._M_data
  # DEBUG __r => D#4140
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4138
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  _226 = MEM[(struct Flit * const &)__first$_M_node_393 + 16];
  MEM[(struct Flit * *)_224 + 16B] = _226;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _224
  _228 = &MEM[(struct _Node *)_224].D.82395;
  std::__detail::_List_node_base::_M_hook (_228, _214);
  # DEBUG D#1616 => &__result_55->D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _229 = MEM[(long unsigned int *)__result_55 + 16B];
  _230 = _229 + 1;
  MEM[(long unsigned int *)__result_55 + 16B] = _230;
  # DEBUG this => &__first
  __first$_M_node_220 = __first$_M_node_393->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_220
  # DEBUG __first$_M_node => __first$_M_node_220
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_215 != __first$_M_node_220)
    goto <bb 84>;
  else
    goto <bb 90>;

  <bb 84>:
  goto <bb 82>;

  # __result_285 = PHI <__result_55(82)>
  # __result_266 = PHI <__result_200(82)>
  # _262 = PHI <_214(82)>
  # __first_225 = PHI <__first_384(82)>
<L31>:
  # DEBUG D#1619 => &__result_285->D.71295
  # DEBUG this => D#1619
  # DEBUG this => D#1619
  __tmp_221 = MEM[(struct _List_base *)__result_285]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_221
  # DEBUG __cur => __tmp_221
  if (_262 == __tmp_221)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG D#1055 => &D#1619->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_285] ={v} {CLOBBER};
  resx 24

  <bb 87>:

  <bb 88>:
  # __tmp_394 = PHI <__tmp_221(87), __tmp_223(89)>
  # DEBUG __cur => __tmp_394
  # DEBUG __tmp => __tmp_394
  __tmp_223 = __tmp_394->D.82395._M_next;
  # DEBUG __cur => __tmp_223
  # DEBUG D#1054 => &__tmp_394->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1619
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1619
  # DEBUG __p => __tmp_394
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_394
  # DEBUG this => D#559
  # DEBUG D.169044 => D#560
  operator delete (__tmp_394);
  # DEBUG __cur => __tmp_223
  if (_262 == __tmp_223)
    goto <bb 86>;
  else
    goto <bb 89>;

  <bb 89>:
  goto <bb 88>;

  <bb 90>:
  # DEBUG this => &__first
  __first$_M_current_205 = __first$_M_current_382 + 24;
  # DEBUG __first$_M_current => __first$_M_current_205
  __result_206 = __result_55 + 24;
  # DEBUG __cur => __result_206
  # DEBUG __first$_M_current => __first$_M_current_205
  # DEBUG __cur => __result_206
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG this => &__first
  # DEBUG this => &__last
  if (__first$_M_current_205 != prephitmp_222)
    goto <bb 92>;
  else
    goto <bb 91>;

  <bb 91>:
  # __result_263 = PHI <__result_206(90)>
  goto <bb 93>;

  <bb 92>:
  goto <bb 79>;

  <bb 93>:
  # __result_388 = PHI <__result_263(91), __result_200(77)>
  __first_384->D.70701._M_impl._M_finish = __result_388;
  goto <bb 108>;

<L28>:
  _207 = __builtin_eh_pointer (23);
  __cxa_begin_catch (_207);
  # DEBUG __first => __result_266
  # DEBUG __last => __result_285
  # DEBUG __first => __result_266
  # DEBUG __last => __result_285
  # DEBUG __first => __result_266
  if (__result_285 == __result_266)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  __cxa_rethrow ();

  <bb 96>:

  <bb 97>:
  # __result_395 = PHI <__result_266(96), __result_213(99)>
  # DEBUG __first => __result_395
  # DEBUG __r => __result_395
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_209 = MEM[(struct _List_base *)__result_395]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_209
  # DEBUG __cur => __tmp_209
  _184 = &MEM[(struct _List_base *)__result_395]._M_impl._M_node.D.37893;
  if (_184 == __tmp_209)
    goto <bb 98>;
  else
    goto <bb 100>;

  <bb 98>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__result_395] ={v} {CLOBBER};
  __result_213 = __result_395 + 24;
  # DEBUG __first => __result_213
  # DEBUG __first => __result_213
  if (__result_285 == __result_213)
    goto <bb 95>;
  else
    goto <bb 99>;

  <bb 99>:
  goto <bb 97>;

  <bb 100>:

  <bb 101>:
  # __tmp_396 = PHI <__tmp_209(100), __tmp_212(102)>
  # DEBUG __cur => __tmp_396
  # DEBUG __tmp => __tmp_396
  __tmp_212 = __tmp_396->D.82395._M_next;
  # DEBUG __cur => __tmp_212
  # DEBUG D#1054 => &__tmp_396->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_396
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_396
  # DEBUG this => D#559
  # DEBUG D.169019 => D#560
  operator delete (__tmp_396);
  # DEBUG __cur => __tmp_212
  if (_184 == __tmp_212)
    goto <bb 98>;
  else
    goto <bb 102>;

  <bb 102>:
  goto <bb 101>;

<L30>:
  __cxa_end_catch ();
  resx 22

<L27>:
  # DEBUG D#1832 => &__first_225->D.70701
  # DEBUG this => D#1832
  # DEBUG D#1049 => D#1832->_M_impl._M_end_of_storage
  # DEBUG D#1048 => (long int) D#1049
  _197 = MEM[(struct _Vector_base *)__first_225]._M_impl._M_start;
  # DEBUG D#1047 => (long int) _197
  # DEBUG D#1046 => D#1048 - D#1047
  # DEBUG D#1045 => D#1046 /[ex] 24
  # DEBUG D#1042 => D#1832
  # DEBUG D#1043 => (long unsigned int) D#1045
  # DEBUG __p => _197
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (_197 != 0B)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => _197
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => _197
  # DEBUG this => D#1033
  # DEBUG D.168966 => D#1034
  operator delete (_197);

  <bb 106>:
  # DEBUG D#1044 => &D#1832->_M_impl
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  MEM[(struct  &)__first_225] ={v} {CLOBBER};
  resx 20

<L41>:
  goto <bb 112> (<L24>);

  <bb 108>:
  __n_166 = __n_418 + 18446744073709551615;
  # DEBUG __n => __n_166
  __first_167 = __first_384 + 24;
  # DEBUG __cur => __first_167
  # DEBUG __cur => __first_167
  # DEBUG __n => __n_166
  if (__n_166 == 0)
    goto <bb 110>;
  else
    goto <bb 109>;

  <bb 109>:
  goto <bb 69>;

  <bb 110>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2584 => &this_9(D)->D.60835
  # DEBUG this => D#2584
  # DEBUG this => &__position
  _31 = this_9(D)->D.60835._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#4148
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1851
  # DEBUG D#1850 => D#1851
  # DEBUG D#1847 => D#1850
  # DEBUG __first => _31
  # DEBUG __last => D#4148
  # DEBUG __result => NULL
  # DEBUG D.144219 => D#1847
  # DEBUG __first => _31
  # DEBUG __last => D#4148
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<std::__cxx11::list<Flit*> >*, std::vector<std::__cxx11::list<Flit*> >*> (_31, __position_22, __new_finish_172);
  goto <bb 118>;

<L39>:

  # __first_211 = PHI <__first_225(107), __first_235(75), __first_236(111)>
<L24>:
  _168 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_168);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_211
  # DEBUG __first => __first_27
  # DEBUG __last => __first_211
  # DEBUG __first => __first_27
  if (__first_27 == __first_211)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  __cxa_rethrow ();

  <bb 114>:

  <bb 115>:
  # __first_380 = PHI <__first_27(114), __first_170(116)>
  # DEBUG __first => __first_380
  # DEBUG __r => __first_380
  # DEBUG __pointer => NULL
  std::vector<std::__cxx11::list<Flit*> >::~vector (__first_380);
  __first_170 = __first_380 + 24;
  # DEBUG __first => __first_170
  # DEBUG __first => __first_170
  if (__first_170 == __first_211)
    goto <bb 113>;
  else
    goto <bb 116>;

  <bb 116>:
  goto <bb 115>;

<L26>:
  __cxa_end_catch ();
  resx 18

  <bb 118>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2585 => &this_9(D)->D.60835
  # DEBUG this => D#2585
  _35 = this_9(D)->D.60835._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#4148
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#1851
  # DEBUG D#1850 => D#1851
  # DEBUG D#1847 => D#1850
  # DEBUG __first => D#4148
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.144238 => D#1847
  # DEBUG __first => D#4148
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<std::__cxx11::list<Flit*> >*, std::vector<std::__cxx11::list<Flit*> >*> (__position_22, _35, __new_finish_33);
  goto <bb 120>;

<L43>:
  goto <bb 143> (<L13>);

  <bb 120>:
  # DEBUG __new_finish => _91
  # DEBUG D#2586 => &this_9(D)->D.60835
  # DEBUG this => D#2586
  _37 = this_9(D)->D.60835._M_impl._M_finish;
  __first_38 = this_9(D)->D.60835._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 136>;
  else
    goto <bb 121>;

  <bb 121>:

  <bb 122>:
  # __first_421 = PHI <__first_38(121), __first_92(134)>
  # DEBUG __first => __first_421
  # DEBUG __r => __first_421
  # DEBUG __pointer => NULL
  # DEBUG this => __first_421
  # DEBUG D#1061 => &__first_421->D.70701
  # DEBUG this => D#1061
  _231 = __first_421->D.70701._M_impl._M_finish;
  __first_232 = __first_421->D.70701._M_impl._M_start;
  # DEBUG __first => __first_232
  # DEBUG __last => _231
  # DEBUG __first => __first_232
  if (_231 == __first_232)
    goto <bb 131>;
  else
    goto <bb 123>;

  <bb 123>:

  <bb 124>:
  # __first_392 = PHI <__first_232(123), __first_238(126)>
  # DEBUG __first => __first_392
  # DEBUG __r => __first_392
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_234 = MEM[(struct _List_base *)__first_392]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_234
  # DEBUG __cur => __tmp_234
  _419 = &MEM[(struct _List_base *)__first_392]._M_impl._M_node.D.37893;
  if (__tmp_234 == _419)
    goto <bb 125>;
  else
    goto <bb 127>;

  <bb 125>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__first_392] ={v} {CLOBBER};
  __first_238 = __first_392 + 24;
  # DEBUG __first => __first_238
  # DEBUG __first => __first_238
  if (_231 == __first_238)
    goto <bb 130>;
  else
    goto <bb 126>;

  <bb 126>:
  goto <bb 124>;

  <bb 127>:

  <bb 128>:
  # __tmp_399 = PHI <__tmp_234(127), __tmp_237(129)>
  # DEBUG __cur => __tmp_399
  # DEBUG __tmp => __tmp_399
  __tmp_237 = __tmp_399->D.82395._M_next;
  # DEBUG __cur => __tmp_237
  # DEBUG D#1054 => &__tmp_399->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_399
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_399
  # DEBUG this => D#559
  # DEBUG D.169101 => D#560
  operator delete (__tmp_399);
  # DEBUG __cur => __tmp_237
  if (__tmp_237 == _419)
    goto <bb 125>;
  else
    goto <bb 129>;

  <bb 129>:
  goto <bb 128>;

  <bb 130>:
  pretmp_95 = MEM[(struct _Vector_base *)__first_421]._M_impl._M_start;

  <bb 131>:
  # prephitmp_102 = PHI <pretmp_95(130), __first_232(122)>
  # DEBUG D#1062 => &__first_421->D.70701
  # DEBUG this => D#1062
  # DEBUG D#1049 => D#1062->_M_impl._M_end_of_storage
  # DEBUG D#1048 => (long int) D#1049
  # DEBUG D#4145 => MEM[(struct _Vector_base *)__first_421]._M_impl._M_start
  # DEBUG D#1047 => (long int) D#4145
  # DEBUG D#1046 => D#1048 - D#1047
  # DEBUG D#1045 => D#1046 /[ex] 24
  # DEBUG D#1042 => D#1062
  # DEBUG D#1043 => (long unsigned int) D#1045
  # DEBUG __p => D#4145
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (prephitmp_102 != 0B)
    goto <bb 132>;
  else
    goto <bb 133>;

  <bb 132>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => D#4145
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => D#4145
  # DEBUG this => D#1033
  # DEBUG D.169115 => D#1034
  operator delete (prephitmp_102);

  <bb 133>:
  # DEBUG D#1044 => &D#1062->_M_impl
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  MEM[(struct  &)__first_421] ={v} {CLOBBER};
  __first_92 = __first_421 + 24;
  # DEBUG __first => __first_92
  # DEBUG __first => __first_92
  if (_37 == __first_92)
    goto <bb 135>;
  else
    goto <bb 134>;

  <bb 134>:
  goto <bb 122>;

  <bb 135>:
  pretmp_101 = this_9(D)->D.60835._M_impl._M_start;

  <bb 136>:
  # prephitmp_281 = PHI <pretmp_101(135), __first_38(120)>
  # DEBUG D#2597 => this_9(D)->D.60835._M_impl._M_end_of_storage
  # DEBUG D#2596 => (long int) D#2597
  # DEBUG D#4144 => this_9(D)->D.60835._M_impl._M_start
  # DEBUG D#2595 => (long int) D#4144
  # DEBUG D#2594 => D#2596 - D#2595
  # DEBUG D#2593 => D#2594 /[ex] 24
  # DEBUG D#2592 => &this_9(D)->D.60835
  # DEBUG D#860 => D#2592
  # DEBUG D#861 => (long unsigned int) D#2593
  # DEBUG __p => D#4144
  # DEBUG this => D#860
  # DEBUG __n => D#861
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#860
  if (prephitmp_281 != 0B)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  # DEBUG D#857 => &D#858->_M_impl
  # DEBUG D#855 => D#857
  # DEBUG D#856 => D#859
  # DEBUG __p => D#4144
  # DEBUG __a => D#855
  # DEBUG __n => D#856
  # DEBUG D#854 => D#856
  # DEBUG D#853 => D#855
  # DEBUG D#851 => D#853
  # DEBUG D#852 => D#854
  # DEBUG __p => D#4144
  # DEBUG this => D#851
  # DEBUG D.144261 => D#852
  operator delete (prephitmp_281);

  <bb 138>:
  this_9(D)->D.60835._M_impl._M_start = __new_finish_172;
  this_9(D)->D.60835._M_impl._M_finish = _91;
  _44 = __new_finish_172 + prephitmp_233;
  this_9(D)->D.60835._M_impl._M_end_of_storage = _44;

  <bb 139>:
  return;

<L33>:

<L10>:
  std::vector<std::__cxx11::list<Flit*> >::~vector (&__x_copy);
  resx 2

<L42>:

  # __new_finish_1 = PHI <__new_finish_33(119), 0B(142)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 146>;
  else
    goto <bb 144>;

  <bb 144>:
  # DEBUG __first => __new_finish_172
  if (__new_finish_1 == __new_finish_172)
    goto <bb 145>;
  else
    goto <bb 150>;

  <bb 145>:
  # DEBUG D#2598 => &this_9(D)->D.60835
  # DEBUG D#860 => D#2598
  # DEBUG __p => NULL
  # DEBUG this => D#860
  # DEBUG __n => D#861
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#860
  if (__new_finish_172 != 0B)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 146>:
  # DEBUG D#2590 => &this_9(D)->D.60835
  # DEBUG this => D#2590
  _49 = __n_7(D) + __elems_before_242;
  _50 = _49 * 24;
  _51 = __new_finish_172 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51
  # DEBUG __first => __first_27
  if (__first_27 == _51)
    goto <bb 145>;
  else
    goto <bb 147>;

  <bb 147>:

  <bb 148>:
  # __first_410 = PHI <__first_27(147), __first_94(149)>
  # DEBUG __first => __first_410
  # DEBUG __r => __first_410
  # DEBUG __pointer => NULL
  std::vector<std::__cxx11::list<Flit*> >::~vector (__first_410);
  __first_94 = __first_410 + 24;
  # DEBUG __first => __first_94
  # DEBUG __first => __first_94
  if (_51 == __first_94)
    goto <bb 145>;
  else
    goto <bb 149>;

  <bb 149>:
  goto <bb 148>;

  <bb 150>:

  <bb 151>:
  # __new_finish_411 = PHI <__new_finish_172(150), __new_finish_96(152)>
  # DEBUG __first => __new_finish_411
  # DEBUG __r => __new_finish_411
  # DEBUG __pointer => NULL
  std::vector<std::__cxx11::list<Flit*> >::~vector (__new_finish_411);
  __new_finish_96 = __new_finish_411 + 24;
  # DEBUG __first => __new_finish_96
  # DEBUG __first => __new_finish_96
  if (__new_finish_1 == __new_finish_96)
    goto <bb 145>;
  else
    goto <bb 152>;

  <bb 152>:
  goto <bb 151>;

  <bb 153>:
  # DEBUG D#857 => &D#858->_M_impl
  # DEBUG D#855 => D#857
  # DEBUG D#856 => D#859
  # DEBUG __p => NULL
  # DEBUG __a => D#855
  # DEBUG __n => D#856
  # DEBUG D#854 => D#856
  # DEBUG D#853 => D#855
  # DEBUG D#851 => D#853
  # DEBUG D#852 => D#854
  # DEBUG __p => NULL
  # DEBUG this => D#851
  # DEBUG D.144304 => D#852
  operator delete (__new_finish_172);

  <bb 154>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 156>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#556 => &this_9(D)->D.60835._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#556
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84757
  # DEBUG this => &__position
  _386 = (long int) __position_22;
  # DEBUG this => &D.84757
  _385 = _386 - _175;
  _268 = _385 /[ex] 24;
  __elems_before_125 = (const size_type) _268;
  # DEBUG __elems_before => __elems_before_125
  # DEBUG D#2599 => &this_9(D)->D.60835
  # DEBUG D#1866 => D#2599
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  goto <bb 67>;

  <bb 157>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#556 => &this_9(D)->D.60835._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#556
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84757
  # DEBUG this => &__position
  _435 = (long int) __position_22;
  # DEBUG this => &D.84757
  _436 = _435 - _175;
  _433 = _436 /[ex] 24;
  __elems_before_434 = (const size_type) _433;
  # DEBUG __elems_before => __elems_before_434
  # DEBUG D#2599 => &this_9(D)->D.60835
  # DEBUG D#1866 => D#2599
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (__len_183 != 0)
    goto <bb 66>;
  else
    goto <bb 68>;

<L32>:
  # DEBUG __new_finish => __new_finish_172
  _98 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_98);
  if (__new_finish_172 == 0B)
    goto <bb 146>;
  else
    goto <bb 145>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::list<Flit*>; _Alloc = std::allocator<std::__cxx11::list<Flit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::list<Flit*>*, std::vector<std::__cxx11::list<Flit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::list<Flit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::list<Flit*>] (_ZNSt6vectorINSt7__cxx114listIP4FlitSaIS3_EEESaIS5_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EEmRKS5_, funcdef_no=3970, decl_uid=70624, cgraph_uid=2218, symbol_order=2219)

Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is not innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is innermost
loop is not parallel according to graphite
Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is not innermost
loop is not parallel according to graphite
Trying loop 18 as candidate
loop 18 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is not innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 19 as candidate
loop 19 is not innermost
loop is not parallel according to graphite
Trying loop 20 as candidate
loop 20 is innermost
loop is not parallel according to graphite
Trying loop 22 as candidate
loop 22 is innermost
loop is not parallel according to graphite
Trying loop 21 as candidate
loop 21 is not innermost
loop is not parallel according to graphite
Trying loop 23 as candidate
loop 23 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::list<Flit*>; _Alloc = std::allocator<std::__cxx11::list<Flit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::list<Flit*>*, std::vector<std::__cxx11::list<Flit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::list<Flit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::list<Flit*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct iterator __position;
  struct _List_iterator D.169453;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  const long unsigned int D.169422;
  const size_type __len;
  size_type D.169421;
  size_type __n;
  struct vector * D.169412;
  struct _Node * __tmp;
  struct list * D.169400;
  struct list * __first;
  long unsigned int __n;
  struct iterator __position;
  struct _List_iterator D.169356;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct list * D.169322;
  struct list * __first;
  long unsigned int __n;
  struct iterator __position;
  struct _List_iterator D.169278;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct list * const __position;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct list * __first;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct list * __first;
  struct _Node * __tmp;
  struct list * __first;
  struct list * __first;
  difference_type __n;
  struct list * __last;
  struct list * __new_finish;
  const size_type __elems_before;
  struct list * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct list * _10;
  long int _11;
  struct list * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct _List_node_base * _17;
  struct _List_node_base * _19;
  struct list * _20;
  struct vector * const _23;
  long int __last.252_25;
  long unsigned int _26;
  difference_type _30;
  struct list * _31;
  long unsigned int _32;
  long int _34;
  struct list * _35;
  long int _36;
  struct list * _37;
  struct list * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct list * _51;
  struct _List_node * _55;
  long unsigned int _59;
  sizetype _60;
  struct list * _62;
  struct list * _63;
  struct list * _67;
  struct list * _74;
  long unsigned int _75;
  struct list * _76;
  long int _78;
  long unsigned int _92;
  struct list * _93;
  long int prephitmp_136;
  long unsigned int prephitmp_142;
  struct list * const pretmp_143;
  struct list * const prephitmp_144;
  long int pretmp_145;
  struct _List_node_base * _151;
  const struct _List_node_base * _167;
  struct Flit * _177;
  struct _List_node_base * _179;
  long unsigned int _180;
  long unsigned int _181;
  void * _186;
  long unsigned int prephitmp_189;
  struct _List_node * _202;
  struct Flit * _204;
  struct _List_node_base * _206;
  long unsigned int _207;
  long unsigned int _208;
  void * _213;
  struct vector * _220;
  bool _223;
  long int _224;
  long int _225;
  long int _226;
  long unsigned int _228;
  const struct _List_node_base * _234;
  struct _List_node * _243;
  struct _List_node_base * _244;
  struct Flit * _245;
  struct _List_node_base * _247;
  long unsigned int _248;
  long unsigned int _249;
  long int _251;
  long int _273;
  long unsigned int pretmp_289;
  struct list * pretmp_295;
  struct list * prephitmp_296;
  struct _List_node_base * _302;
  struct _List_node_base * _303;
  void * _308;
  long int _346;
  difference_type _347;
  bool _356;
  long int _357;
  difference_type _358;
  long int _360;
  long int _361;
  bool _385;
  struct _List_node_base * _391;
  struct _List_node_base * _392;
  struct _List_node_base * _399;

  <bb 2>:
  # DEBUG D#4170 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#4170
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 113>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.70701._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.70701._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 69>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#1618 => &MEM[(const struct list *)__x_28(D)].D.71295
  # DEBUG this => D#1618
  # DEBUG D#1620 => &__x_copy.D.71295
  # DEBUG this => D#1620
  # DEBUG __a => NULL
  # DEBUG D#1073 => &D#1620->_M_impl
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG D.120317 => NULL
  MEM[(struct _List_impl *)&__x_copy]._M_node._M_data = 0;
  # DEBUG this => D#1620
  MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893._M_next = &MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893._M_prev = &MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893;
  # DEBUG D#558 => D#1620
  # DEBUG __n => 0
  # DEBUG this => D#558
  # DEBUG this => __x_28(D)
  _167 = &MEM[(const struct list *)__x_28(D)].D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _167
  __first$_M_node_168 = MEM[(struct _List_node_base * *)__x_28(D)];
  # DEBUG D#312 => __x_28(D)
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_168
  # DEBUG this => &__x_copy
  # DEBUG __first => __first$_M_node_168
  # DEBUG __last$_M_node => _167
  # DEBUG __first$_M_node => __first$_M_node_168
  # DEBUG __first$_M_node => __first$_M_node_168
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_167 != __first$_M_node_168)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:

  <bb 6>:
  # __first$_M_node_403 = PHI <__first$_M_node_168(5), __first$_M_node_172(8)>
  # DEBUG __first$_M_node => __first$_M_node_403
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4163 => &MEM[(const struct _Node *)__first$_M_node_403]._M_data
  # DEBUG this => &__x_copy
  # DEBUG __x => NULL
  # DEBUG this => &__x_copy
  # DEBUG this => NULL
  # DEBUG __x => &__x_copy.D.71295._M_impl._M_node.D.37893
  # DEBUG this => &__x_copy
  # DEBUG __x => D#4163
  # DEBUG D#1615 => &__x_copy
  # DEBUG __x => D#4163
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.169289 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _55 = operator new (24);

  <bb 7>:
  # DEBUG __p => _55
  # DEBUG D#4167 => &MEM[(struct _Node *)_55]._M_data
  # DEBUG __r => D#4167
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4163
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  _177 = MEM[(struct Flit * const &)__first$_M_node_403 + 16];
  MEM[(struct Flit * *)_55 + 16B] = _177;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _55
  _179 = &MEM[(struct _Node *)_55].D.82395;
  std::__detail::_List_node_base::_M_hook (_179, &__x_copy.D.71295._M_impl._M_node.D.37893);
  # DEBUG D#1616 => &__x_copy.D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _180 = MEM[(long unsigned int *)&__x_copy + 16B];
  _181 = _180 + 1;
  MEM[(long unsigned int *)&__x_copy + 16B] = _181;
  # DEBUG this => &__first
  __first$_M_node_172 = __first$_M_node_403->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_172
  # DEBUG __first$_M_node => __first$_M_node_172
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_167 != __first$_M_node_172)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  goto <bb 6>;

  <bb 9>:
  pretmp_143 = MEM[(struct list * const &)this_9(D) + 8];
  pretmp_145 = (long int) pretmp_143;
  goto <bb 15>;

<L19>:
  # DEBUG D#1619 => &__x_copy.D.71295
  # DEBUG this => D#1619
  # DEBUG this => D#1619
  __tmp_173 = MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_173
  # DEBUG __cur => __tmp_173
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_173)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#1055 => &D#1619->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  resx 12

  <bb 12>:

  <bb 13>:
  # __tmp_404 = PHI <__tmp_173(12), __tmp_175(14)>
  # DEBUG __cur => __tmp_404
  # DEBUG __tmp => __tmp_404
  __tmp_175 = __tmp_404->D.82395._M_next;
  # DEBUG __cur => __tmp_175
  # DEBUG D#1054 => &__tmp_404->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1619
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1619
  # DEBUG __p => __tmp_404
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_404
  # DEBUG this => D#559
  # DEBUG D.169258 => D#560
  operator delete (__tmp_404);
  # DEBUG __cur => __tmp_175
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_175)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  # prephitmp_144 = PHI <pretmp_143(9), _12(4)>
  # prephitmp_136 = PHI <pretmp_145(9), _13(4)>
  # DEBUG this => this_9(D)
  # DEBUG D#313 => &this_9(D)->D.70701._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#313
  # DEBUG D#4168 => MEM[(struct list * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.84851
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84851
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_136 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#4168
  if (__n_7(D) < __elems_after_57)
    goto <bb 16>;
  else
    goto <bb 30>;

  <bb 16>:
  # DEBUG D#2604 => &this_9(D)->D.70701
  # DEBUG this => D#2604
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_144 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#4168
  # DEBUG __result => D#4168
  # DEBUG __alloc => D#1897
  # DEBUG D#1896 => D#1897
  # DEBUG D#1895 => D#1896
  # DEBUG __first => __last_61
  # DEBUG __last => D#4168
  # DEBUG __result => D#4168
  # DEBUG D.144421 => D#1895
  # DEBUG __first => __last_61
  # DEBUG __last => D#4168
  # DEBUG __result => D#4168
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<Flit*>*, std::__cxx11::list<Flit*>*> (__last_61, prephitmp_144, prephitmp_144);

  <bb 17>:
  _62 = this_9(D)->D.70701._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.70701._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#4170
  # DEBUG __last => __last_61
  # DEBUG __result => D#4168
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4170
  # DEBUG __it => D#4170
  # DEBUG __first => D#4170
  # DEBUG __last => __last_61
  # DEBUG __result => D#4168
  # DEBUG __it => D#4168
  # DEBUG __it => D#4168
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4170
  # DEBUG __it => D#4170
  # DEBUG __first => D#4170
  # DEBUG __last => __last_61
  # DEBUG __result => D#4168
  # DEBUG __simple => 0
  # DEBUG __first => D#4170
  # DEBUG __last => __last_61
  # DEBUG __result => D#4168
  __last.252_25 = (long int) __last_61;
  _78 = __last.252_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#4168
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#4170
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4170
  if (__position_22 == _67)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 19>:

  <bb 20>:
  # __old_finish_369 = PHI <prephitmp_144(19), __old_finish_65(23)>
  # __last_370 = PHI <__last_61(19), __last_68(23)>
  # __n_300 = PHI <__n_73(19), __n_58(23)>
  # DEBUG __n => __n_300
  # DEBUG __result => __old_finish_369
  # DEBUG __last => __last_370
  __last_68 = __last_370 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_369 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::__cxx11::list<Flit*>::operator= (__old_finish_65, __last_68);
  goto <bb 22>;

<L30>:
  goto <bb 115> (<L10>);

  <bb 22>:
  __n_58 = __n_300 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 18>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 20>;

  <bb 24>:
  # DEBUG this => &__x_copy
  # DEBUG D#1056 => &__x_copy.D.71295
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_85 = MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_85
  # DEBUG __cur => __tmp_85
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_85)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 25>:

  <bb 26>:
  # __position_372 = PHI <__position_22(25), __position_81(29)>
  # DEBUG __first => __position_372
  std::__cxx11::list<Flit*>::operator= (__position_372, &__x_copy);
  goto <bb 28>;

<L31>:
  goto <bb 115> (<L10>);

  <bb 28>:
  __position_81 = __position_372 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 24>;
  else
    goto <bb 29>;

  <bb 29>:
  goto <bb 26>;

  <bb 30>:
  # DEBUG D#2605 => &this_9(D)->D.70701
  # DEBUG this => D#2605
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#4168
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.144467 => D#1622
  # DEBUG __first => D#4168
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => D#4168
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => D#4168
  # DEBUG __cur => D#4168
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 46>;
  else
    goto <bb 31>;

  <bb 31>:

  <bb 32>:
  # __n_405 = PHI <__n_70(31), __n_184(45)>
  # __old_finish_406 = PHI <prephitmp_144(31), __old_finish_185(45)>
  # DEBUG __cur => __old_finish_406
  # DEBUG __n => __n_405
  # DEBUG __r => __old_finish_406
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.128471 => D#20
  if (__old_finish_406 != 0B)
    goto <bb 33>;
  else
    goto <bb 43>;

  <bb 33>:
  # DEBUG this => __old_finish_406
  # DEBUG __x => &__x_copy
  # DEBUG D#1618 => &__x_copy.D.71295
  # DEBUG this => D#1618
  # DEBUG D#1620 => &__old_finish_406->D.71295
  # DEBUG this => D#1620
  # DEBUG __a => NULL
  # DEBUG D#1073 => &D#1620->_M_impl
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG D.120317 => NULL
  MEM[(struct _List_impl *)__old_finish_406]._M_node._M_data = 0;
  # DEBUG this => D#1620
  _151 = &MEM[(struct _List_base *)__old_finish_406]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__old_finish_406]._M_impl._M_node.D.37893._M_next = _151;
  MEM[(struct _List_base *)__old_finish_406]._M_impl._M_node.D.37893._M_prev = _151;
  # DEBUG D#558 => D#1620
  # DEBUG __n => 0
  # DEBUG this => D#558
  # DEBUG this => &__x_copy
  # DEBUG this => NULL
  # DEBUG __x => &__x_copy.D.71295._M_impl._M_node.D.37893
  __first$_M_node_194 = MEM[(struct _List_node_base * *)&__x_copy];
  # DEBUG D#312 => &__x_copy
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_194
  # DEBUG this => __old_finish_406
  # DEBUG __first => __first$_M_node_194
  # DEBUG __last$_M_node => &__x_copy.D.71295._M_impl._M_node.D.37893
  # DEBUG __first$_M_node => __first$_M_node_194
  # DEBUG __first$_M_node => __first$_M_node_194
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (&__x_copy.D.71295._M_impl._M_node.D.37893 != __first$_M_node_194)
    goto <bb 34>;
  else
    goto <bb 43>;

  <bb 34>:

  <bb 35>:
  # __first$_M_node_410 = PHI <__first$_M_node_194(34), __first$_M_node_198(37)>
  # DEBUG __first$_M_node => __first$_M_node_410
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4164 => &MEM[(const struct _Node *)__first$_M_node_410]._M_data
  # DEBUG this => __old_finish_406
  # DEBUG __x => NULL
  # DEBUG this => __old_finish_406
  # DEBUG this => NULL
  # DEBUG __x => _151
  # DEBUG this => __old_finish_406
  # DEBUG __x => D#4164
  # DEBUG D#1615 => __old_finish_406
  # DEBUG __x => D#4164
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.169367 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _202 = operator new (24);

  <bb 36>:
  # DEBUG __p => _202
  # DEBUG D#4165 => &MEM[(struct _Node *)_202]._M_data
  # DEBUG __r => D#4165
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4164
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  _204 = MEM[(struct Flit * const &)__first$_M_node_410 + 16];
  MEM[(struct Flit * *)_202 + 16B] = _204;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _202
  _206 = &MEM[(struct _Node *)_202].D.82395;
  std::__detail::_List_node_base::_M_hook (_206, _151);
  # DEBUG D#1616 => &__old_finish_406->D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _207 = MEM[(long unsigned int *)__old_finish_406 + 16B];
  _208 = _207 + 1;
  MEM[(long unsigned int *)__old_finish_406 + 16B] = _208;
  # DEBUG this => &__first
  __first$_M_node_198 = __first$_M_node_410->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_198
  # DEBUG __first$_M_node => __first$_M_node_198
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (&__x_copy.D.71295._M_impl._M_node.D.37893 != __first$_M_node_198)
    goto <bb 37>;
  else
    goto <bb 43>;

  <bb 37>:
  goto <bb 35>;

  # _303 = PHI <_151(35)>
  # __old_finish_387 = PHI <__old_finish_406(35)>
<L23>:
  # DEBUG D#1619 => &__old_finish_387->D.71295
  # DEBUG this => D#1619
  # DEBUG this => D#1619
  __tmp_199 = MEM[(struct _List_base *)__old_finish_387]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_199
  # DEBUG __cur => __tmp_199
  if (_303 == __tmp_199)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#1055 => &D#1619->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__old_finish_387] ={v} {CLOBBER};
  resx 16

  <bb 40>:

  <bb 41>:
  # __tmp_411 = PHI <__tmp_199(40), __tmp_201(42)>
  # DEBUG __cur => __tmp_411
  # DEBUG __tmp => __tmp_411
  __tmp_201 = __tmp_411->D.82395._M_next;
  # DEBUG __cur => __tmp_201
  # DEBUG D#1054 => &__tmp_411->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1619
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1619
  # DEBUG __p => __tmp_411
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_411
  # DEBUG this => D#559
  # DEBUG D.169336 => D#560
  operator delete (__tmp_411);
  # DEBUG __cur => __tmp_201
  if (_303 == __tmp_201)
    goto <bb 39>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 41>;

  <bb 43>:
  __n_184 = __n_405 + 18446744073709551615;
  # DEBUG __n => __n_184
  __old_finish_185 = __old_finish_406 + 24;
  # DEBUG __cur => __old_finish_185
  # DEBUG __cur => __old_finish_185
  # DEBUG __n => __n_184
  if (__n_184 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # __old_finish_197 = PHI <__old_finish_185(43)>
  goto <bb 46>;

  <bb 45>:
  goto <bb 32>;

  <bb 46>:
  # __old_finish_407 = PHI <__old_finish_197(44), prephitmp_144(30)>
  this_9(D)->D.70701._M_impl._M_finish = __old_finish_407;
  # DEBUG D#2606 => &this_9(D)->D.70701
  # DEBUG this => D#2606
  # DEBUG this => &__position
  # DEBUG __first => D#4170
  # DEBUG __last => D#4168
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1897
  # DEBUG D#1896 => D#1897
  # DEBUG D#1895 => D#1896
  # DEBUG __first => D#4170
  # DEBUG __last => D#4168
  # DEBUG __result => NULL
  # DEBUG D.144480 => D#1895
  # DEBUG __first => D#4170
  # DEBUG __last => D#4168
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<Flit*>*, std::__cxx11::list<Flit*>*> (__position_22, prephitmp_144, __old_finish_407);
  goto <bb 59>;

<L32>:
  goto <bb 115> (<L10>);

<L20>:
  _186 = __builtin_eh_pointer (15);
  __cxa_begin_catch (_186);
  # DEBUG __first => D#4168
  # DEBUG __last => __old_finish_387
  # DEBUG __first => D#4168
  # DEBUG __last => __old_finish_387
  # DEBUG __first => D#4168
  if (prephitmp_144 == __old_finish_387)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  __cxa_rethrow ();

  <bb 50>:

  <bb 51>:
  # __old_finish_408 = PHI <prephitmp_144(50), __old_finish_192(53)>
  # DEBUG __first => __old_finish_408
  # DEBUG __r => __old_finish_408
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_188 = MEM[(struct _List_base *)__old_finish_408]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_188
  # DEBUG __cur => __tmp_188
  _244 = &MEM[(struct _List_base *)__old_finish_408]._M_impl._M_node.D.37893;
  if (__tmp_188 == _244)
    goto <bb 52>;
  else
    goto <bb 54>;

  <bb 52>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__old_finish_408] ={v} {CLOBBER};
  __old_finish_192 = __old_finish_408 + 24;
  # DEBUG __first => __old_finish_192
  # DEBUG __first => __old_finish_192
  if (__old_finish_192 == __old_finish_387)
    goto <bb 49>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 51>;

  <bb 54>:

  <bb 55>:
  # __tmp_409 = PHI <__tmp_188(54), __tmp_191(56)>
  # DEBUG __cur => __tmp_409
  # DEBUG __tmp => __tmp_409
  __tmp_191 = __tmp_409->D.82395._M_next;
  # DEBUG __cur => __tmp_191
  # DEBUG D#1054 => &__tmp_409->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_409
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_409
  # DEBUG this => D#559
  # DEBUG D.169315 => D#560
  operator delete (__tmp_409);
  # DEBUG __cur => __tmp_191
  if (__tmp_191 == _244)
    goto <bb 52>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 55>;

<L22>:
  __cxa_end_catch ();
  resx 14

<L33>:
  goto <bb 115> (<L10>);

  <bb 59>:
  _74 = this_9(D)->D.70701._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.70701._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#4170
  # DEBUG __last => D#4168
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4170
  if (__position_22 == prephitmp_144)
    goto <bb 24>;
  else
    goto <bb 60>;

  <bb 60>:

  <bb 61>:
  # __position_375 = PHI <__position_22(60), __position_84(64)>
  # DEBUG __first => __position_375
  std::__cxx11::list<Flit*>::operator= (__position_375, &__x_copy);
  goto <bb 63>;

<L34>:
  goto <bb 115> (<L10>);

  <bb 63>:
  __position_84 = __position_375 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_144)
    goto <bb 24>;
  else
    goto <bb 64>;

  <bb 64>:
  goto <bb 61>;

  <bb 65>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  __x_copy ={v} {CLOBBER};
  goto <bb 113>;

  <bb 66>:

  <bb 67>:
  # __tmp_376 = PHI <__tmp_85(66), __tmp_87(68)>
  # DEBUG __cur => __tmp_376
  # DEBUG __tmp => __tmp_376
  __tmp_87 = __tmp_376->D.82395._M_next;
  # DEBUG __cur => __tmp_87
  # DEBUG D#1054 => &__tmp_376->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_376
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_376
  # DEBUG this => D#559
  # DEBUG D.144512 => D#560
  operator delete (__tmp_376);
  # DEBUG __cur => __tmp_87
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_87)
    goto <bb 65>;
  else
    goto <bb 68>;

  <bb 68>:
  goto <bb 67>;

  <bb 69>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _224 = (long int) _23;
  _225 = _13 - _224;
  _226 = _225 /[ex] 24;
  _227 = (const long unsigned int) _226;
  _228 = 768614336404564650 - _227;
  if (__n_7(D) > _228)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 71>:
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.169422
  # DEBUG __b => &__n
  _92 = MAX_EXPR <__n_7(D), _227>;
  __len_232 = _92 + _227;
  # DEBUG __len => __len_232
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _356 = __len_232 > 768614336404564650;
  _385 = _227 > __len_232;
  _223 = _356 | _385;
  if (_223 != 0)
    goto <bb 142>;
  else
    goto <bb 143>;

  <bb 72>:
  pretmp_289 = __len_232 * 24;

  <bb 73>:
  # __elems_before_263 = PHI <__elems_before_359(142), __elems_before_89(72)>
  # _251 = PHI <_361(142), _346(72)>
  # prephitmp_142 = PHI <18446744073709551600(142), pretmp_289(72)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#564 => &this_9(D)->D.70701._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#564
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84884
  # DEBUG this => &__position
  # DEBUG this => &D.84884
  # DEBUG __elems_before => __elems_before_263
  # DEBUG D#2616 => &this_9(D)->D.70701
  # DEBUG D#1827 => D#2616
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => NULL
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2140
  # DEBUG D.169410 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  _220 = operator new (prephitmp_142);

  <bb 74>:
  # __new_finish_221 = PHI <0B(143), _220(73)>
  # __elems_before_255 = PHI <__elems_before_89(143), __elems_before_263(73)>
  # _273 = PHI <_346(143), _251(73)>
  # prephitmp_189 = PHI <0(143), prephitmp_142(73)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2600 => &this_9(D)->D.70701
  # DEBUG this => D#2600
  _26 = (long unsigned int) _273;
  __first_27 = __new_finish_221 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.144520 => D#1622
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 75>:
  # __n_352 = PHI <__n_211(87), __n_7(D)(74)>
  # __first_353 = PHI <__first_212(87), __first_27(74)>
  # DEBUG __cur => __first_353
  # DEBUG __n => __n_352
  # DEBUG __r => __first_353
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.128471 => D#20
  if (__first_353 != 0B)
    goto <bb 76>;
  else
    goto <bb 86>;

  <bb 76>:
  # DEBUG this => __first_353
  # DEBUG __x => __x_28(D)
  # DEBUG D#1618 => &MEM[(const struct list *)__x_28(D)].D.71295
  # DEBUG this => D#1618
  # DEBUG D#1620 => &__first_353->D.71295
  # DEBUG this => D#1620
  # DEBUG __a => NULL
  # DEBUG D#1073 => &D#1620->_M_impl
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG __a => NULL
  # DEBUG this => D#1073
  # DEBUG D.120317 => NULL
  MEM[(struct _List_impl *)__first_353]._M_node._M_data = 0;
  # DEBUG this => D#1620
  _17 = &MEM[(struct _List_base *)__first_353]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__first_353]._M_impl._M_node.D.37893._M_next = _17;
  MEM[(struct _List_base *)__first_353]._M_impl._M_node.D.37893._M_prev = _17;
  # DEBUG D#558 => D#1620
  # DEBUG __n => 0
  # DEBUG this => D#558
  # DEBUG this => __x_28(D)
  _234 = &MEM[(const struct list *)__x_28(D)].D.71295._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _234
  __first$_M_node_235 = MEM[(struct _List_node_base * *)__x_28(D)];
  # DEBUG D#312 => __x_28(D)
  # DEBUG this => D#312
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_235
  # DEBUG this => __first_353
  # DEBUG __first => __first$_M_node_235
  # DEBUG __last$_M_node => _234
  # DEBUG __first$_M_node => __first$_M_node_235
  # DEBUG __first$_M_node => __first$_M_node_235
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_234 != __first$_M_node_235)
    goto <bb 77>;
  else
    goto <bb 86>;

  <bb 77>:

  <bb 78>:
  # __first$_M_node_414 = PHI <__first$_M_node_235(77), __first$_M_node_239(80)>
  # DEBUG __first$_M_node => __first$_M_node_414
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4162 => &MEM[(const struct _Node *)__first$_M_node_414]._M_data
  # DEBUG this => __first_353
  # DEBUG __x => NULL
  # DEBUG this => __first_353
  # DEBUG this => NULL
  # DEBUG __x => _17
  # DEBUG this => __first_353
  # DEBUG __x => D#4162
  # DEBUG D#1615 => __first_353
  # DEBUG __x => D#4162
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1615
  # DEBUG D#1612 => &D#1613->D.71295
  # DEBUG D#1610 => D#1612
  # DEBUG this => D#1610
  # DEBUG D#1609 => D#1610
  # DEBUG D#1608 => &D#1609->_M_impl
  # DEBUG D#1606 => D#1608
  # DEBUG D#1607 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1606
  # DEBUG D.169464 => D#1607
  # DEBUG D#1605 => D#1606
  # DEBUG D#1604 => D#1605
  # DEBUG this => D#1604
  _243 = operator new (24);

  <bb 79>:
  # DEBUG __p => _243
  # DEBUG D#4166 => &MEM[(struct _Node *)_243]._M_data
  # DEBUG __r => D#4166
  # DEBUG D#1611 => &D#1614->D.71295
  # DEBUG D#1053 => D#1611
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4162
  # DEBUG this => D#619
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115723 => D#20
  _245 = MEM[(struct Flit * const &)__first$_M_node_414 + 16];
  MEM[(struct Flit * *)_243 + 16B] = _245;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _243
  _247 = &MEM[(struct _Node *)_243].D.82395;
  std::__detail::_List_node_base::_M_hook (_247, _17);
  # DEBUG D#1616 => &__first_353->D.71295
  # DEBUG D#357 => D#1616
  # DEBUG __n => 1
  # DEBUG this => D#357
  _248 = MEM[(long unsigned int *)__first_353 + 16B];
  _249 = _248 + 1;
  MEM[(long unsigned int *)__first_353 + 16B] = _249;
  # DEBUG this => &__first
  __first$_M_node_239 = __first$_M_node_414->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_239
  # DEBUG __first$_M_node => __first$_M_node_239
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_234 != __first$_M_node_239)
    goto <bb 80>;
  else
    goto <bb 86>;

  <bb 80>:
  goto <bb 78>;

  # _302 = PHI <_17(78)>
  # __first_96 = PHI <__first_353(78)>
<L27>:
  # DEBUG D#1619 => &__first_96->D.71295
  # DEBUG this => D#1619
  # DEBUG this => D#1619
  __tmp_240 = MEM[(struct _List_base *)__first_96]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_240
  # DEBUG __cur => __tmp_240
  if (_302 == __tmp_240)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  # DEBUG D#1055 => &D#1619->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__first_96] ={v} {CLOBBER};
  resx 20

  <bb 83>:

  <bb 84>:
  # __tmp_415 = PHI <__tmp_240(83), __tmp_242(85)>
  # DEBUG __cur => __tmp_415
  # DEBUG __tmp => __tmp_415
  __tmp_242 = __tmp_415->D.82395._M_next;
  # DEBUG __cur => __tmp_242
  # DEBUG D#1054 => &__tmp_415->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1619
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1619
  # DEBUG __p => __tmp_415
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_415
  # DEBUG this => D#559
  # DEBUG D.169433 => D#560
  operator delete (__tmp_415);
  # DEBUG __cur => __tmp_242
  if (_302 == __tmp_242)
    goto <bb 82>;
  else
    goto <bb 85>;

  <bb 85>:
  goto <bb 84>;

  <bb 86>:
  __n_211 = __n_352 + 18446744073709551615;
  # DEBUG __n => __n_211
  __first_212 = __first_353 + 24;
  # DEBUG __cur => __first_212
  # DEBUG __cur => __first_212
  # DEBUG __n => __n_211
  if (__n_211 == 0)
    goto <bb 88>;
  else
    goto <bb 87>;

  <bb 87>:
  goto <bb 75>;

  <bb 88>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2601 => &this_9(D)->D.70701
  # DEBUG this => D#2601
  # DEBUG this => &__position
  _31 = this_9(D)->D.70701._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#4170
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1899
  # DEBUG D#1898 => D#1899
  # DEBUG D#1895 => D#1898
  # DEBUG __first => _31
  # DEBUG __last => D#4170
  # DEBUG __result => NULL
  # DEBUG D.144541 => D#1895
  # DEBUG __first => _31
  # DEBUG __last => D#4170
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<Flit*>*, std::__cxx11::list<Flit*>*> (_31, __position_22, __new_finish_221);
  goto <bb 99>;

<L24>:
  _213 = __builtin_eh_pointer (19);
  __cxa_begin_catch (_213);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_96
  # DEBUG __first => __first_27
  # DEBUG __last => __first_96
  # DEBUG __first => __first_27
  if (__first_27 == __first_96)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  __cxa_rethrow ();

  <bb 91>:

  <bb 92>:
  # __first_412 = PHI <__first_27(91), __first_219(94)>
  # DEBUG __first => __first_412
  # DEBUG __r => __first_412
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_215 = MEM[(struct _List_base *)__first_412]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_215
  # DEBUG __cur => __tmp_215
  _391 = &MEM[(struct _List_base *)__first_412]._M_impl._M_node.D.37893;
  if (__tmp_215 == _391)
    goto <bb 93>;
  else
    goto <bb 95>;

  <bb 93>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__first_412] ={v} {CLOBBER};
  __first_219 = __first_412 + 24;
  # DEBUG __first => __first_219
  # DEBUG __first => __first_219
  if (__first_219 == __first_96)
    goto <bb 90>;
  else
    goto <bb 94>;

  <bb 94>:
  goto <bb 92>;

  <bb 95>:

  <bb 96>:
  # __tmp_413 = PHI <__tmp_215(95), __tmp_218(97)>
  # DEBUG __cur => __tmp_413
  # DEBUG __tmp => __tmp_413
  __tmp_218 = __tmp_413->D.82395._M_next;
  # DEBUG __cur => __tmp_218
  # DEBUG D#1054 => &__tmp_413->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_413
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_413
  # DEBUG this => D#559
  # DEBUG D.169393 => D#560
  operator delete (__tmp_413);
  # DEBUG __cur => __tmp_218
  if (__tmp_218 == _391)
    goto <bb 93>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 96>;

<L26>:
  __cxa_end_catch ();
  resx 18

  <bb 99>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2602 => &this_9(D)->D.70701
  # DEBUG this => D#2602
  _35 = this_9(D)->D.70701._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#4170
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#1899
  # DEBUG D#1898 => D#1899
  # DEBUG D#1895 => D#1898
  # DEBUG __first => D#4170
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.144560 => D#1895
  # DEBUG __first => D#4170
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _93 = std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<Flit*>*, std::__cxx11::list<Flit*>*> (__position_22, _35, __new_finish_33);
  goto <bb 101>;

<L36>:
  goto <bb 121> (<L13>);

  <bb 101>:
  # DEBUG __new_finish => _93
  # DEBUG D#2603 => &this_9(D)->D.70701
  # DEBUG this => D#2603
  _37 = this_9(D)->D.70701._M_impl._M_finish;
  __first_38 = this_9(D)->D.70701._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 110>;
  else
    goto <bb 102>;

  <bb 102>:

  <bb 103>:
  # __first_350 = PHI <__first_38(102), __first_98(105)>
  # DEBUG __first => __first_350
  # DEBUG __r => __first_350
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_94 = MEM[(struct _List_base *)__first_350]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_94
  # DEBUG __cur => __tmp_94
  _19 = &MEM[(struct _List_base *)__first_350]._M_impl._M_node.D.37893;
  if (_19 == __tmp_94)
    goto <bb 104>;
  else
    goto <bb 106>;

  <bb 104>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__first_350] ={v} {CLOBBER};
  __first_98 = __first_350 + 24;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (_37 == __first_98)
    goto <bb 109>;
  else
    goto <bb 105>;

  <bb 105>:
  goto <bb 103>;

  <bb 106>:

  <bb 107>:
  # __tmp_400 = PHI <__tmp_94(106), __tmp_97(108)>
  # DEBUG __cur => __tmp_400
  # DEBUG __tmp => __tmp_400
  __tmp_97 = __tmp_400->D.82395._M_next;
  # DEBUG __cur => __tmp_97
  # DEBUG D#1054 => &__tmp_400->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_400
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_400
  # DEBUG this => D#559
  # DEBUG D.144603 => D#560
  operator delete (__tmp_400);
  # DEBUG __cur => __tmp_97
  if (_19 == __tmp_97)
    goto <bb 104>;
  else
    goto <bb 108>;

  <bb 108>:
  goto <bb 107>;

  <bb 109>:
  pretmp_295 = this_9(D)->D.70701._M_impl._M_start;

  <bb 110>:
  # prephitmp_296 = PHI <pretmp_295(109), __first_38(101)>
  # DEBUG D#2614 => this_9(D)->D.70701._M_impl._M_end_of_storage
  # DEBUG D#2613 => (long int) D#2614
  # DEBUG D#4169 => this_9(D)->D.70701._M_impl._M_start
  # DEBUG D#2612 => (long int) D#4169
  # DEBUG D#2611 => D#2613 - D#2612
  # DEBUG D#2610 => D#2611 /[ex] 24
  # DEBUG D#2609 => &this_9(D)->D.70701
  # DEBUG D#1042 => D#2609
  # DEBUG D#1043 => (long unsigned int) D#2610
  # DEBUG __p => D#4169
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (prephitmp_296 != 0B)
    goto <bb 111>;
  else
    goto <bb 112>;

  <bb 111>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => D#4169
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => D#4169
  # DEBUG this => D#1033
  # DEBUG D.144583 => D#1034
  operator delete (prephitmp_296);

  <bb 112>:
  this_9(D)->D.70701._M_impl._M_start = __new_finish_221;
  this_9(D)->D.70701._M_impl._M_finish = _93;
  _44 = __new_finish_221 + prephitmp_189;
  this_9(D)->D.70701._M_impl._M_end_of_storage = _44;

  <bb 113>:
  return;

<L29>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1056 => &__x_copy.D.71295
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_99 = MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_99
  # DEBUG __cur => __tmp_99
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_99)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  resx 2

  <bb 117>:

  <bb 118>:
  # __tmp_377 = PHI <__tmp_99(117), __tmp_101(119)>
  # DEBUG __cur => __tmp_377
  # DEBUG __tmp => __tmp_377
  __tmp_101 = __tmp_377->D.82395._M_next;
  # DEBUG __cur => __tmp_101
  # DEBUG D#1054 => &__tmp_377->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_377
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_377
  # DEBUG this => D#559
  # DEBUG D.144619 => D#560
  operator delete (__tmp_377);
  # DEBUG __cur => __tmp_101
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_101)
    goto <bb 116>;
  else
    goto <bb 119>;

  <bb 119>:
  goto <bb 118>;

<L35>:

  # __new_finish_1 = PHI <__new_finish_33(100), 0B(120)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 124>;
  else
    goto <bb 122>;

  <bb 122>:
  # DEBUG __first => __new_finish_221
  if (__new_finish_1 == __new_finish_221)
    goto <bb 123>;
  else
    goto <bb 132>;

  <bb 123>:
  # DEBUG D#2615 => &this_9(D)->D.70701
  # DEBUG D#1042 => D#2615
  # DEBUG __p => NULL
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (__new_finish_221 != 0B)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 124>:
  # DEBUG D#2607 => &this_9(D)->D.70701
  # DEBUG this => D#2607
  _49 = __n_7(D) + __elems_before_255;
  _50 = _49 * 24;
  _51 = __new_finish_221 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51
  # DEBUG __first => __first_27
  if (__first_27 == _51)
    goto <bb 123>;
  else
    goto <bb 125>;

  <bb 125>:

  <bb 126>:
  # __first_368 = PHI <__first_27(125), __first_106(128)>
  # DEBUG __first => __first_368
  # DEBUG __r => __first_368
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_102 = MEM[(struct _List_base *)__first_368]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_102
  # DEBUG __cur => __tmp_102
  _399 = &MEM[(struct _List_base *)__first_368]._M_impl._M_node.D.37893;
  if (__tmp_102 == _399)
    goto <bb 127>;
  else
    goto <bb 129>;

  <bb 127>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__first_368] ={v} {CLOBBER};
  __first_106 = __first_368 + 24;
  # DEBUG __first => __first_106
  # DEBUG __first => __first_106
  if (_51 == __first_106)
    goto <bb 123>;
  else
    goto <bb 128>;

  <bb 128>:
  goto <bb 126>;

  <bb 129>:

  <bb 130>:
  # __tmp_373 = PHI <__tmp_102(129), __tmp_105(131)>
  # DEBUG __cur => __tmp_373
  # DEBUG __tmp => __tmp_373
  __tmp_105 = __tmp_373->D.82395._M_next;
  # DEBUG __cur => __tmp_105
  # DEBUG D#1054 => &__tmp_373->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_373
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_373
  # DEBUG this => D#559
  # DEBUG D.144642 => D#560
  operator delete (__tmp_373);
  # DEBUG __cur => __tmp_105
  if (__tmp_105 == _399)
    goto <bb 127>;
  else
    goto <bb 131>;

  <bb 131>:
  goto <bb 130>;

  <bb 132>:

  <bb 133>:
  # __new_finish_374 = PHI <__new_finish_221(132), __new_finish_112(135)>
  # DEBUG __first => __new_finish_374
  # DEBUG __r => __new_finish_374
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_108 = MEM[(struct _List_base *)__new_finish_374]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_108
  # DEBUG __cur => __tmp_108
  _392 = &MEM[(struct _List_base *)__new_finish_374]._M_impl._M_node.D.37893;
  if (__tmp_108 == _392)
    goto <bb 134>;
  else
    goto <bb 136>;

  <bb 134>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__new_finish_374] ={v} {CLOBBER};
  __new_finish_112 = __new_finish_374 + 24;
  # DEBUG __first => __new_finish_112
  # DEBUG __first => __new_finish_112
  if (__new_finish_1 == __new_finish_112)
    goto <bb 123>;
  else
    goto <bb 135>;

  <bb 135>:
  goto <bb 133>;

  <bb 136>:

  <bb 137>:
  # __tmp_367 = PHI <__tmp_108(136), __tmp_111(138)>
  # DEBUG __cur => __tmp_367
  # DEBUG __tmp => __tmp_367
  __tmp_111 = __tmp_367->D.82395._M_next;
  # DEBUG __cur => __tmp_111
  # DEBUG D#1054 => &__tmp_367->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_367
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_367
  # DEBUG this => D#559
  # DEBUG D.144667 => D#560
  operator delete (__tmp_367);
  # DEBUG __cur => __tmp_111
  if (__tmp_111 == _392)
    goto <bb 134>;
  else
    goto <bb 138>;

  <bb 138>:
  goto <bb 137>;

  <bb 139>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => NULL
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => NULL
  # DEBUG this => D#1033
  # DEBUG D.144682 => D#1034
  operator delete (__new_finish_221);

  <bb 140>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 142>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#564 => &this_9(D)->D.70701._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#564
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84884
  # DEBUG this => &__position
  _360 = (long int) __position_22;
  # DEBUG this => &D.84884
  _361 = _360 - _224;
  _358 = _361 /[ex] 24;
  __elems_before_359 = (const size_type) _358;
  # DEBUG __elems_before => __elems_before_359
  # DEBUG D#2616 => &this_9(D)->D.70701
  # DEBUG D#1827 => D#2616
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  goto <bb 73>;

  <bb 143>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#564 => &this_9(D)->D.70701._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#564
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84884
  # DEBUG this => &__position
  _357 = (long int) __position_22;
  # DEBUG this => &D.84884
  _346 = _357 - _224;
  _347 = _346 /[ex] 24;
  __elems_before_89 = (const size_type) _347;
  # DEBUG __elems_before => __elems_before_89
  # DEBUG D#2616 => &this_9(D)->D.70701
  # DEBUG D#1827 => D#2616
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (__len_232 != 0)
    goto <bb 72>;
  else
    goto <bb 74>;

<L28>:
  # DEBUG __new_finish => __new_finish_221
  _308 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_308);
  if (__new_finish_221 == 0B)
    goto <bb 124>;
  else
    goto <bb 123>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::map<int, Flit*>*; _ForwardIterator = std::map<int, Flit*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt3mapIiP4FlitSt4lessIiESaISt4pairIKiS4_EEESC_EET0_T_SE_SD_, funcdef_no=5361, decl_uid=90317, cgraph_uid=3609, symbol_order=3610)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::map<int, Flit*>*; _ForwardIterator = std::map<int, Flit*>*; bool _TrivialValueTypes = false] (struct map * __first, struct map * __last, struct map * __result)
{
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  void * _12;
  struct _Rep_type * _17;
  struct _Rep_type * _18;
  struct _Rb_tree_node_base * _19;
  struct _Rb_tree_node_base * _29;
  struct _Rb_tree_node_base * const _30;
  long unsigned int _37;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_58 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_63 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_63
  # DEBUG __first => __first_58
  # DEBUG __r => __result_63
  # DEBUG __p => NULL
  # DEBUG __value => __first_58
  # DEBUG D#20 => 48
  # DEBUG __p => NULL
  # DEBUG D.140967 => D#20
  if (__result_63 != 0B)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  goto <bb 15>;

  <bb 6>:
  # DEBUG this => NULL
  # DEBUG __x => __first_58
  # DEBUG D#4178 => &MEM[(const struct map &)__first_58]._M_t
  _17 = &__result_63->_M_t;
  # DEBUG this => _17
  # DEBUG __x => D#4178
  # DEBUG this => D#4178
  # DEBUG __a => NULL
  # DEBUG D#2412 => &MEM[(const struct _Rb_tree &)D#4178]._M_impl._M_key_compare
  # DEBUG D#2411 => &MEM[(struct _Rb_tree *)_17]._M_impl
  # DEBUG this => D#2411
  # DEBUG __comp => D#2412
  # DEBUG __a => NULL
  # DEBUG this => D#2411
  # DEBUG __a => NULL
  # DEBUG this => D#2411
  # DEBUG D.120352 => NULL
  MEM[(struct _Rb_tree_impl *)__result_63]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)__result_63]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)__result_63]._M_node_count = 0;
  # DEBUG this => D#2411
  _29 = &MEM[(struct _Rb_tree_impl *)__result_63]._M_header;
  MEM[(struct _Rb_tree_impl *)__result_63]._M_header._M_left = _29;
  MEM[(struct _Rb_tree_impl *)__result_63]._M_header._M_right = _29;
  _30 = MEM[(struct _Rb_tree_node_base * *)__first_58 + 16B];
  # DEBUG D#316 => D#4178
  # DEBUG this => D#316
  if (_30 != 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

  <bb 7>:
  # DEBUG this => _17
  # DEBUG this => _17
  # DEBUG D#317 => D#4178
  # DEBUG this => D#317
  # DEBUG this => _17
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => _17
  __an._M_t = _17;
  __x_32 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Alloc_node> (_17, _30, _29, &__an);

  <bb 8>:
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)__result_63 + 16] = __x_32;
  # DEBUG this => _17
  # DEBUG this => _17
  # DEBUG __x => __x_32

  <bb 9>:
  # __x_33 = PHI <__x_32(8), __x_34(10)>
  # DEBUG __x => __x_33
  __x_34 = __x_33->_M_left;
  if (__x_34 == 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:
  # __x_27 = PHI <__x_33(9)>
  MEM[(struct _Rb_tree_node_base * &)__result_63 + 24] = __x_27;
  # DEBUG this => _17
  # DEBUG this => _17
  # DEBUG __x => __x_32

  <bb 12>:
  # __x_35 = PHI <__x_32(11), __x_36(13)>
  # DEBUG __x => __x_35
  __x_36 = __x_35->_M_right;
  if (__x_36 == 0B)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # __x_39 = PHI <__x_35(12)>
  MEM[(struct _Rb_tree_node_base * &)__result_63 + 32] = __x_39;
  _37 = MEM[(const struct _Rb_tree &)__first_58]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)__result_63]._M_impl._M_node_count = _37;

  <bb 15>:
  __first_10 = __first_58 + 48;
  # DEBUG __first => __first_10
  __result_11 = __result_63 + 48;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_24 = PHI <__result_11(15)>

  <bb 18>:
  # __result_62 = PHI <__result_24(17), __result_4(D)(2)>
  return __result_62;

  # __result_40 = PHI <__result_63(7)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_40
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_40
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_40)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_59 = PHI <__result_4(D)(21), __result_20(23)>
  # DEBUG __first => __result_59
  # DEBUG __r => __result_59
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _18 = &__result_59->_M_t;
  # DEBUG this => _18
  _19 = MEM[(struct _Rb_tree_node_base * *)__result_59 + 16B];
  # DEBUG D#214 => _18
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_18, _19);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)_18]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  MEM[(struct  &)__result_59] ={v} {CLOBBER};
  __result_20 = __result_59 + 48;
  # DEBUG __first => __result_20
  # DEBUG __first => __result_20
  if (__result_20 == __result_40)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::__cxx11::list<PacketReplyInfo*>*; _ForwardIterator = std::__cxx11::list<PacketReplyInfo*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx114listIP15PacketReplyInfoSaIS5_EEES8_EET0_T_SA_S9_, funcdef_no=5365, decl_uid=90351, cgraph_uid=3613, symbol_order=3614)

Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::__cxx11::list<PacketReplyInfo*>*; _ForwardIterator = std::__cxx11::list<PacketReplyInfo*>*; bool _TrivialValueTypes = false] (struct list * __first, struct list * __last, struct list * __result)
{
  struct iterator __position;
  struct _List_iterator D.169650;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct _Node * __tmp;
  void * _12;
  struct _List_node * _23;
  struct _List_node_base * _30;
  const struct _List_node_base * _31;
  struct PacketReplyInfo * _41;
  struct _List_node_base * _43;
  long unsigned int _44;
  long unsigned int _45;
  struct _List_node_base * _55;
  struct _List_node_base * _61;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_77 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_78 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_78
  # DEBUG __first => __first_77
  # DEBUG __r => __result_78
  # DEBUG __p => NULL
  # DEBUG __value => __first_77
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.134754 => D#20
  if (__result_78 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_78
  # DEBUG __x => __first_77
  # DEBUG D#1587 => &MEM[(const struct list *)__first_77].D.73144
  # DEBUG this => D#1587
  # DEBUG D#1589 => &__result_78->D.73144
  # DEBUG this => D#1589
  # DEBUG __a => NULL
  # DEBUG D#1095 => &D#1589->_M_impl
  # DEBUG this => D#1095
  # DEBUG __a => NULL
  # DEBUG this => D#1095
  # DEBUG __a => NULL
  # DEBUG this => D#1095
  # DEBUG D.120663 => NULL
  MEM[(struct _List_impl *)__result_78]._M_node._M_data = 0;
  # DEBUG this => D#1589
  _30 = &MEM[(struct _List_base *)__result_78]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__result_78]._M_impl._M_node.D.37893._M_next = _30;
  MEM[(struct _List_base *)__result_78]._M_impl._M_node.D.37893._M_prev = _30;
  # DEBUG D#566 => D#1589
  # DEBUG __n => 0
  # DEBUG this => D#566
  # DEBUG this => __first_77
  _31 = &MEM[(const struct list *)__first_77].D.73144._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _31
  __first$_M_node_32 = MEM[(struct _List_node_base * *)__first_77];
  # DEBUG D#321 => __first_77
  # DEBUG this => D#321
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_32
  # DEBUG this => __result_78
  # DEBUG __first => __first$_M_node_32
  # DEBUG __last$_M_node => _31
  # DEBUG __first$_M_node => __first$_M_node_32
  # DEBUG __first$_M_node => __first$_M_node_32
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_31 != __first$_M_node_32)
    goto <bb 6>;
  else
    goto <bb 15>;

  <bb 6>:

  <bb 7>:
  # __first$_M_node_81 = PHI <__first$_M_node_32(6), __first$_M_node_36(9)>
  # DEBUG __first$_M_node => __first$_M_node_81
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4180 => &MEM[(const struct _Node *)__first$_M_node_81]._M_data
  # DEBUG this => __result_78
  # DEBUG __x => NULL
  # DEBUG this => __result_78
  # DEBUG this => NULL
  # DEBUG __x => _30
  # DEBUG this => __result_78
  # DEBUG __x => D#4180
  # DEBUG D#1584 => __result_78
  # DEBUG __x => D#4180
  # DEBUG this => D#1584
  # DEBUG D#1583 => D#1584
  # DEBUG D#1582 => D#1584
  # DEBUG D#1581 => &D#1582->D.73144
  # DEBUG D#1579 => D#1581
  # DEBUG this => D#1579
  # DEBUG D#1578 => D#1579
  # DEBUG D#1577 => &D#1578->_M_impl
  # DEBUG D#1575 => D#1577
  # DEBUG D#1576 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1575
  # DEBUG D.169661 => D#1576
  # DEBUG D#1574 => D#1575
  # DEBUG D#1573 => D#1574
  # DEBUG this => D#1573
  _23 = operator new (24);

  <bb 8>:
  # DEBUG __p => _23
  # DEBUG D#4181 => &MEM[(struct _Node *)_23]._M_data
  # DEBUG __r => D#4181
  # DEBUG D#1580 => &D#1583->D.73144
  # DEBUG D#1081 => D#1580
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4180
  # DEBUG this => D#616
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115696 => D#20
  _41 = MEM[(struct PacketReplyInfo * const &)__first$_M_node_81 + 16];
  MEM[(struct PacketReplyInfo * *)_23 + 16B] = _41;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _23
  _43 = &MEM[(struct _Node *)_23].D.82523;
  std::__detail::_List_node_base::_M_hook (_43, _30);
  # DEBUG D#1585 => &__result_78->D.73144
  # DEBUG D#352 => D#1585
  # DEBUG __n => 1
  # DEBUG this => D#352
  _44 = MEM[(long unsigned int *)__result_78 + 16B];
  _45 = _44 + 1;
  MEM[(long unsigned int *)__result_78 + 16B] = _45;
  # DEBUG this => &__first
  __first$_M_node_36 = __first$_M_node_81->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_36
  # DEBUG __first$_M_node => __first$_M_node_36
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_31 != __first$_M_node_36)
    goto <bb 9>;
  else
    goto <bb 15>;

  <bb 9>:
  goto <bb 7>;

  # _61 = PHI <_30(7)>
  # __result_62 = PHI <__result_78(7)>
<L7>:
  # DEBUG D#1588 => &__result_62->D.73144
  # DEBUG this => D#1588
  # DEBUG this => D#1588
  __tmp_37 = MEM[(struct _List_base *)__result_62]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_37
  # DEBUG __cur => __tmp_37
  if (_61 == __tmp_37)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#1083 => &D#1588->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__result_62] ={v} {CLOBBER};
  resx 4

  <bb 12>:

  <bb 13>:
  # __tmp_82 = PHI <__tmp_37(12), __tmp_39(14)>
  # DEBUG __cur => __tmp_82
  # DEBUG __tmp => __tmp_82
  __tmp_39 = __tmp_82->D.82523._M_next;
  # DEBUG __cur => __tmp_39
  # DEBUG D#1082 => &__tmp_82->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1588
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1588
  # DEBUG __p => __tmp_82
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_82
  # DEBUG this => D#567
  # DEBUG D.169630 => D#568
  operator delete (__tmp_82);
  # DEBUG __cur => __tmp_39
  if (_61 == __tmp_39)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  __first_10 = __first_77 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_78 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_28 = PHI <__result_11(15)>

  <bb 18>:
  # __result_76 = PHI <__result_28(17), __result_4(D)(2)>
  return __result_76;

<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_62
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_62
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_62)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_75 = PHI <__result_4(D)(21), __result_20(27)>
  # DEBUG __first => __result_75
  # DEBUG __r => __result_75
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_8 = MEM[(struct _List_base *)__result_75]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_8
  # DEBUG __cur => __tmp_8
  _55 = &MEM[(struct _List_base *)__result_75]._M_impl._M_node.D.37893;
  if (__tmp_8 == _55)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__result_75] ={v} {CLOBBER};
  __result_20 = __result_75 + 24;
  # DEBUG __first => __result_20
  # DEBUG __first => __result_20
  if (__result_20 == __result_62)
    goto <bb 20>;
  else
    goto <bb 27>;

  <bb 24>:

  <bb 25>:
  # __tmp_65 = PHI <__tmp_8(24), __tmp_19(26)>
  # DEBUG __cur => __tmp_65
  # DEBUG __tmp => __tmp_65
  __tmp_19 = __tmp_65->D.82523._M_next;
  # DEBUG __cur => __tmp_19
  # DEBUG D#1082 => &__tmp_65->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_65
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_65
  # DEBUG this => D#567
  # DEBUG D.134778 => D#568
  operator delete (__tmp_65);
  # DEBUG __cur => __tmp_19
  if (__tmp_19 == _55)
    goto <bb 23>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 25>;

  <bb 27>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::list<PacketReplyInfo*>; _Alloc = std::allocator<std::__cxx11::list<PacketReplyInfo*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::list<PacketReplyInfo*>*, std::vector<std::__cxx11::list<PacketReplyInfo*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::list<PacketReplyInfo*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::list<PacketReplyInfo*>] (_ZNSt6vectorINSt7__cxx114listIP15PacketReplyInfoSaIS3_EEESaIS5_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EEmRKS5_, funcdef_no=4024, decl_uid=62266, cgraph_uid=2272, symbol_order=2273)

Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is not innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is innermost
loop is not parallel according to graphite
Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is not innermost
loop is not parallel according to graphite
Trying loop 18 as candidate
loop 18 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is not innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 19 as candidate
loop 19 is not innermost
loop is not parallel according to graphite
Trying loop 20 as candidate
loop 20 is innermost
loop is not parallel according to graphite
Trying loop 22 as candidate
loop 22 is innermost
loop is not parallel according to graphite
Trying loop 21 as candidate
loop 21 is not innermost
loop is not parallel according to graphite
Trying loop 23 as candidate
loop 23 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::list<PacketReplyInfo*>; _Alloc = std::allocator<std::__cxx11::list<PacketReplyInfo*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::list<PacketReplyInfo*>*, std::vector<std::__cxx11::list<PacketReplyInfo*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::list<PacketReplyInfo*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::list<PacketReplyInfo*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct iterator __position;
  struct _List_iterator D.169897;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  const long unsigned int D.169866;
  const size_type __len;
  size_type D.169865;
  size_type __n;
  struct vector * D.169856;
  struct _Node * __tmp;
  struct list * D.169844;
  struct list * __first;
  long unsigned int __n;
  struct iterator __position;
  struct _List_iterator D.169800;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct list * D.169766;
  struct list * __first;
  long unsigned int __n;
  struct iterator __position;
  struct _List_iterator D.169722;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct list * const __position;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct list * __first;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct list * __first;
  struct _Node * __tmp;
  struct list * __first;
  struct list * __first;
  difference_type __n;
  struct list * __last;
  struct list * __new_finish;
  const size_type __elems_before;
  struct list * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct list * _10;
  long int _11;
  struct list * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct _List_node_base * _17;
  struct _List_node_base * _19;
  struct list * _20;
  struct vector * const _23;
  long int __last.276_25;
  long unsigned int _26;
  difference_type _30;
  struct list * _31;
  long unsigned int _32;
  long int _34;
  struct list * _35;
  long int _36;
  struct list * _37;
  struct list * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct list * _51;
  struct _List_node * _55;
  long unsigned int _59;
  sizetype _60;
  struct list * _62;
  struct list * _63;
  struct list * _67;
  struct list * _74;
  long unsigned int _75;
  struct list * _76;
  long int _78;
  long unsigned int _92;
  struct list * _93;
  long int prephitmp_136;
  long unsigned int prephitmp_142;
  struct list * const pretmp_143;
  struct list * const prephitmp_144;
  long int pretmp_145;
  struct _List_node_base * _151;
  const struct _List_node_base * _167;
  struct PacketReplyInfo * _177;
  struct _List_node_base * _179;
  long unsigned int _180;
  long unsigned int _181;
  void * _186;
  long unsigned int prephitmp_189;
  struct _List_node * _202;
  struct PacketReplyInfo * _204;
  struct _List_node_base * _206;
  long unsigned int _207;
  long unsigned int _208;
  void * _213;
  struct vector * _220;
  bool _223;
  long int _224;
  long int _225;
  long int _226;
  long unsigned int _228;
  const struct _List_node_base * _234;
  struct _List_node * _243;
  struct _List_node_base * _244;
  struct PacketReplyInfo * _245;
  struct _List_node_base * _247;
  long unsigned int _248;
  long unsigned int _249;
  long int _251;
  long int _273;
  long unsigned int pretmp_289;
  struct list * pretmp_295;
  struct list * prephitmp_296;
  struct _List_node_base * _302;
  struct _List_node_base * _303;
  void * _308;
  long int _346;
  difference_type _347;
  bool _356;
  long int _357;
  difference_type _358;
  long int _360;
  long int _361;
  bool _385;
  struct _List_node_base * _391;
  struct _List_node_base * _392;
  struct _List_node_base * _399;

  <bb 2>:
  # DEBUG D#4191 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#4191
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 113>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.62343._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.62343._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 69>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#1587 => &MEM[(const struct list *)__x_28(D)].D.73144
  # DEBUG this => D#1587
  # DEBUG D#1589 => &__x_copy.D.73144
  # DEBUG this => D#1589
  # DEBUG __a => NULL
  # DEBUG D#1095 => &D#1589->_M_impl
  # DEBUG this => D#1095
  # DEBUG __a => NULL
  # DEBUG this => D#1095
  # DEBUG __a => NULL
  # DEBUG this => D#1095
  # DEBUG D.120663 => NULL
  MEM[(struct _List_impl *)&__x_copy]._M_node._M_data = 0;
  # DEBUG this => D#1589
  MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893._M_next = &MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893._M_prev = &MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893;
  # DEBUG D#566 => D#1589
  # DEBUG __n => 0
  # DEBUG this => D#566
  # DEBUG this => __x_28(D)
  _167 = &MEM[(const struct list *)__x_28(D)].D.73144._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _167
  __first$_M_node_168 = MEM[(struct _List_node_base * *)__x_28(D)];
  # DEBUG D#321 => __x_28(D)
  # DEBUG this => D#321
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_168
  # DEBUG this => &__x_copy
  # DEBUG __first => __first$_M_node_168
  # DEBUG __last$_M_node => _167
  # DEBUG __first$_M_node => __first$_M_node_168
  # DEBUG __first$_M_node => __first$_M_node_168
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_167 != __first$_M_node_168)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:

  <bb 6>:
  # __first$_M_node_403 = PHI <__first$_M_node_168(5), __first$_M_node_172(8)>
  # DEBUG __first$_M_node => __first$_M_node_403
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4184 => &MEM[(const struct _Node *)__first$_M_node_403]._M_data
  # DEBUG this => &__x_copy
  # DEBUG __x => NULL
  # DEBUG this => &__x_copy
  # DEBUG this => NULL
  # DEBUG __x => &__x_copy.D.73144._M_impl._M_node.D.37893
  # DEBUG this => &__x_copy
  # DEBUG __x => D#4184
  # DEBUG D#1584 => &__x_copy
  # DEBUG __x => D#4184
  # DEBUG this => D#1584
  # DEBUG D#1583 => D#1584
  # DEBUG D#1582 => D#1584
  # DEBUG D#1581 => &D#1582->D.73144
  # DEBUG D#1579 => D#1581
  # DEBUG this => D#1579
  # DEBUG D#1578 => D#1579
  # DEBUG D#1577 => &D#1578->_M_impl
  # DEBUG D#1575 => D#1577
  # DEBUG D#1576 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1575
  # DEBUG D.169733 => D#1576
  # DEBUG D#1574 => D#1575
  # DEBUG D#1573 => D#1574
  # DEBUG this => D#1573
  _55 = operator new (24);

  <bb 7>:
  # DEBUG __p => _55
  # DEBUG D#4188 => &MEM[(struct _Node *)_55]._M_data
  # DEBUG __r => D#4188
  # DEBUG D#1580 => &D#1583->D.73144
  # DEBUG D#1081 => D#1580
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4184
  # DEBUG this => D#616
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115696 => D#20
  _177 = MEM[(struct PacketReplyInfo * const &)__first$_M_node_403 + 16];
  MEM[(struct PacketReplyInfo * *)_55 + 16B] = _177;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _55
  _179 = &MEM[(struct _Node *)_55].D.82523;
  std::__detail::_List_node_base::_M_hook (_179, &__x_copy.D.73144._M_impl._M_node.D.37893);
  # DEBUG D#1585 => &__x_copy.D.73144
  # DEBUG D#352 => D#1585
  # DEBUG __n => 1
  # DEBUG this => D#352
  _180 = MEM[(long unsigned int *)&__x_copy + 16B];
  _181 = _180 + 1;
  MEM[(long unsigned int *)&__x_copy + 16B] = _181;
  # DEBUG this => &__first
  __first$_M_node_172 = __first$_M_node_403->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_172
  # DEBUG __first$_M_node => __first$_M_node_172
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_167 != __first$_M_node_172)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  goto <bb 6>;

  <bb 9>:
  pretmp_143 = MEM[(struct list * const &)this_9(D) + 8];
  pretmp_145 = (long int) pretmp_143;
  goto <bb 15>;

<L19>:
  # DEBUG D#1588 => &__x_copy.D.73144
  # DEBUG this => D#1588
  # DEBUG this => D#1588
  __tmp_173 = MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_173
  # DEBUG __cur => __tmp_173
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_173)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#1083 => &D#1588->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  resx 12

  <bb 12>:

  <bb 13>:
  # __tmp_404 = PHI <__tmp_173(12), __tmp_175(14)>
  # DEBUG __cur => __tmp_404
  # DEBUG __tmp => __tmp_404
  __tmp_175 = __tmp_404->D.82523._M_next;
  # DEBUG __cur => __tmp_175
  # DEBUG D#1082 => &__tmp_404->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1588
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1588
  # DEBUG __p => __tmp_404
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_404
  # DEBUG this => D#567
  # DEBUG D.169702 => D#568
  operator delete (__tmp_404);
  # DEBUG __cur => __tmp_175
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_175)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  # prephitmp_144 = PHI <pretmp_143(9), _12(4)>
  # prephitmp_136 = PHI <pretmp_145(9), _13(4)>
  # DEBUG this => this_9(D)
  # DEBUG D#322 => &this_9(D)->D.62343._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#322
  # DEBUG D#4189 => MEM[(struct list * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.85020
  # DEBUG __rhs => &__position
  # DEBUG this => &D.85020
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_136 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#4189
  if (__n_7(D) < __elems_after_57)
    goto <bb 16>;
  else
    goto <bb 30>;

  <bb 16>:
  # DEBUG D#2640 => &this_9(D)->D.62343
  # DEBUG this => D#2640
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_144 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#4189
  # DEBUG __result => D#4189
  # DEBUG __alloc => D#2061
  # DEBUG D#2060 => D#2061
  # DEBUG D#2059 => D#2060
  # DEBUG __first => __last_61
  # DEBUG __last => D#4189
  # DEBUG __result => D#4189
  # DEBUG D.144961 => D#2059
  # DEBUG __first => __last_61
  # DEBUG __last => D#4189
  # DEBUG __result => D#4189
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<PacketReplyInfo*>*, std::__cxx11::list<PacketReplyInfo*>*> (__last_61, prephitmp_144, prephitmp_144);

  <bb 17>:
  _62 = this_9(D)->D.62343._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.62343._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#4191
  # DEBUG __last => __last_61
  # DEBUG __result => D#4189
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4191
  # DEBUG __it => D#4191
  # DEBUG __first => D#4191
  # DEBUG __last => __last_61
  # DEBUG __result => D#4189
  # DEBUG __it => D#4189
  # DEBUG __it => D#4189
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4191
  # DEBUG __it => D#4191
  # DEBUG __first => D#4191
  # DEBUG __last => __last_61
  # DEBUG __result => D#4189
  # DEBUG __simple => 0
  # DEBUG __first => D#4191
  # DEBUG __last => __last_61
  # DEBUG __result => D#4189
  __last.276_25 = (long int) __last_61;
  _78 = __last.276_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#4189
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#4191
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4191
  if (__position_22 == _67)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 19>:

  <bb 20>:
  # __old_finish_369 = PHI <prephitmp_144(19), __old_finish_65(23)>
  # __last_370 = PHI <__last_61(19), __last_68(23)>
  # __n_300 = PHI <__n_73(19), __n_58(23)>
  # DEBUG __n => __n_300
  # DEBUG __result => __old_finish_369
  # DEBUG __last => __last_370
  __last_68 = __last_370 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_369 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::__cxx11::list<PacketReplyInfo*>::operator= (__old_finish_65, __last_68);
  goto <bb 22>;

<L30>:
  goto <bb 115> (<L10>);

  <bb 22>:
  __n_58 = __n_300 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 18>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 20>;

  <bb 24>:
  # DEBUG this => &__x_copy
  # DEBUG D#1084 => &__x_copy.D.73144
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_85 = MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_85
  # DEBUG __cur => __tmp_85
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_85)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 25>:

  <bb 26>:
  # __position_372 = PHI <__position_22(25), __position_81(29)>
  # DEBUG __first => __position_372
  std::__cxx11::list<PacketReplyInfo*>::operator= (__position_372, &__x_copy);
  goto <bb 28>;

<L31>:
  goto <bb 115> (<L10>);

  <bb 28>:
  __position_81 = __position_372 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 24>;
  else
    goto <bb 29>;

  <bb 29>:
  goto <bb 26>;

  <bb 30>:
  # DEBUG D#2641 => &this_9(D)->D.62343
  # DEBUG this => D#2641
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#4189
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.145007 => D#2064
  # DEBUG __first => D#4189
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => D#4189
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => D#4189
  # DEBUG __cur => D#4189
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 46>;
  else
    goto <bb 31>;

  <bb 31>:

  <bb 32>:
  # __n_405 = PHI <__n_70(31), __n_184(45)>
  # __old_finish_406 = PHI <prephitmp_144(31), __old_finish_185(45)>
  # DEBUG __cur => __old_finish_406
  # DEBUG __n => __n_405
  # DEBUG __r => __old_finish_406
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.134754 => D#20
  if (__old_finish_406 != 0B)
    goto <bb 33>;
  else
    goto <bb 43>;

  <bb 33>:
  # DEBUG this => __old_finish_406
  # DEBUG __x => &__x_copy
  # DEBUG D#1587 => &__x_copy.D.73144
  # DEBUG this => D#1587
  # DEBUG D#1589 => &__old_finish_406->D.73144
  # DEBUG this => D#1589
  # DEBUG __a => NULL
  # DEBUG D#1095 => &D#1589->_M_impl
  # DEBUG this => D#1095
  # DEBUG __a => NULL
  # DEBUG this => D#1095
  # DEBUG __a => NULL
  # DEBUG this => D#1095
  # DEBUG D.120663 => NULL
  MEM[(struct _List_impl *)__old_finish_406]._M_node._M_data = 0;
  # DEBUG this => D#1589
  _151 = &MEM[(struct _List_base *)__old_finish_406]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__old_finish_406]._M_impl._M_node.D.37893._M_next = _151;
  MEM[(struct _List_base *)__old_finish_406]._M_impl._M_node.D.37893._M_prev = _151;
  # DEBUG D#566 => D#1589
  # DEBUG __n => 0
  # DEBUG this => D#566
  # DEBUG this => &__x_copy
  # DEBUG this => NULL
  # DEBUG __x => &__x_copy.D.73144._M_impl._M_node.D.37893
  __first$_M_node_194 = MEM[(struct _List_node_base * *)&__x_copy];
  # DEBUG D#321 => &__x_copy
  # DEBUG this => D#321
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_194
  # DEBUG this => __old_finish_406
  # DEBUG __first => __first$_M_node_194
  # DEBUG __last$_M_node => &__x_copy.D.73144._M_impl._M_node.D.37893
  # DEBUG __first$_M_node => __first$_M_node_194
  # DEBUG __first$_M_node => __first$_M_node_194
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (&__x_copy.D.73144._M_impl._M_node.D.37893 != __first$_M_node_194)
    goto <bb 34>;
  else
    goto <bb 43>;

  <bb 34>:

  <bb 35>:
  # __first$_M_node_410 = PHI <__first$_M_node_194(34), __first$_M_node_198(37)>
  # DEBUG __first$_M_node => __first$_M_node_410
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4185 => &MEM[(const struct _Node *)__first$_M_node_410]._M_data
  # DEBUG this => __old_finish_406
  # DEBUG __x => NULL
  # DEBUG this => __old_finish_406
  # DEBUG this => NULL
  # DEBUG __x => _151
  # DEBUG this => __old_finish_406
  # DEBUG __x => D#4185
  # DEBUG D#1584 => __old_finish_406
  # DEBUG __x => D#4185
  # DEBUG this => D#1584
  # DEBUG D#1583 => D#1584
  # DEBUG D#1582 => D#1584
  # DEBUG D#1581 => &D#1582->D.73144
  # DEBUG D#1579 => D#1581
  # DEBUG this => D#1579
  # DEBUG D#1578 => D#1579
  # DEBUG D#1577 => &D#1578->_M_impl
  # DEBUG D#1575 => D#1577
  # DEBUG D#1576 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1575
  # DEBUG D.169811 => D#1576
  # DEBUG D#1574 => D#1575
  # DEBUG D#1573 => D#1574
  # DEBUG this => D#1573
  _202 = operator new (24);

  <bb 36>:
  # DEBUG __p => _202
  # DEBUG D#4186 => &MEM[(struct _Node *)_202]._M_data
  # DEBUG __r => D#4186
  # DEBUG D#1580 => &D#1583->D.73144
  # DEBUG D#1081 => D#1580
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4185
  # DEBUG this => D#616
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115696 => D#20
  _204 = MEM[(struct PacketReplyInfo * const &)__first$_M_node_410 + 16];
  MEM[(struct PacketReplyInfo * *)_202 + 16B] = _204;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _202
  _206 = &MEM[(struct _Node *)_202].D.82523;
  std::__detail::_List_node_base::_M_hook (_206, _151);
  # DEBUG D#1585 => &__old_finish_406->D.73144
  # DEBUG D#352 => D#1585
  # DEBUG __n => 1
  # DEBUG this => D#352
  _207 = MEM[(long unsigned int *)__old_finish_406 + 16B];
  _208 = _207 + 1;
  MEM[(long unsigned int *)__old_finish_406 + 16B] = _208;
  # DEBUG this => &__first
  __first$_M_node_198 = __first$_M_node_410->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_198
  # DEBUG __first$_M_node => __first$_M_node_198
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (&__x_copy.D.73144._M_impl._M_node.D.37893 != __first$_M_node_198)
    goto <bb 37>;
  else
    goto <bb 43>;

  <bb 37>:
  goto <bb 35>;

  # _303 = PHI <_151(35)>
  # __old_finish_387 = PHI <__old_finish_406(35)>
<L23>:
  # DEBUG D#1588 => &__old_finish_387->D.73144
  # DEBUG this => D#1588
  # DEBUG this => D#1588
  __tmp_199 = MEM[(struct _List_base *)__old_finish_387]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_199
  # DEBUG __cur => __tmp_199
  if (_303 == __tmp_199)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#1083 => &D#1588->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__old_finish_387] ={v} {CLOBBER};
  resx 16

  <bb 40>:

  <bb 41>:
  # __tmp_411 = PHI <__tmp_199(40), __tmp_201(42)>
  # DEBUG __cur => __tmp_411
  # DEBUG __tmp => __tmp_411
  __tmp_201 = __tmp_411->D.82523._M_next;
  # DEBUG __cur => __tmp_201
  # DEBUG D#1082 => &__tmp_411->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1588
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1588
  # DEBUG __p => __tmp_411
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_411
  # DEBUG this => D#567
  # DEBUG D.169780 => D#568
  operator delete (__tmp_411);
  # DEBUG __cur => __tmp_201
  if (_303 == __tmp_201)
    goto <bb 39>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 41>;

  <bb 43>:
  __n_184 = __n_405 + 18446744073709551615;
  # DEBUG __n => __n_184
  __old_finish_185 = __old_finish_406 + 24;
  # DEBUG __cur => __old_finish_185
  # DEBUG __cur => __old_finish_185
  # DEBUG __n => __n_184
  if (__n_184 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # __old_finish_197 = PHI <__old_finish_185(43)>
  goto <bb 46>;

  <bb 45>:
  goto <bb 32>;

  <bb 46>:
  # __old_finish_407 = PHI <__old_finish_197(44), prephitmp_144(30)>
  this_9(D)->D.62343._M_impl._M_finish = __old_finish_407;
  # DEBUG D#2642 => &this_9(D)->D.62343
  # DEBUG this => D#2642
  # DEBUG this => &__position
  # DEBUG __first => D#4191
  # DEBUG __last => D#4189
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2061
  # DEBUG D#2060 => D#2061
  # DEBUG D#2059 => D#2060
  # DEBUG __first => D#4191
  # DEBUG __last => D#4189
  # DEBUG __result => NULL
  # DEBUG D.145020 => D#2059
  # DEBUG __first => D#4191
  # DEBUG __last => D#4189
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<PacketReplyInfo*>*, std::__cxx11::list<PacketReplyInfo*>*> (__position_22, prephitmp_144, __old_finish_407);
  goto <bb 59>;

<L32>:
  goto <bb 115> (<L10>);

<L20>:
  _186 = __builtin_eh_pointer (15);
  __cxa_begin_catch (_186);
  # DEBUG __first => D#4189
  # DEBUG __last => __old_finish_387
  # DEBUG __first => D#4189
  # DEBUG __last => __old_finish_387
  # DEBUG __first => D#4189
  if (prephitmp_144 == __old_finish_387)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  __cxa_rethrow ();

  <bb 50>:

  <bb 51>:
  # __old_finish_408 = PHI <prephitmp_144(50), __old_finish_192(53)>
  # DEBUG __first => __old_finish_408
  # DEBUG __r => __old_finish_408
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_188 = MEM[(struct _List_base *)__old_finish_408]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_188
  # DEBUG __cur => __tmp_188
  _244 = &MEM[(struct _List_base *)__old_finish_408]._M_impl._M_node.D.37893;
  if (__tmp_188 == _244)
    goto <bb 52>;
  else
    goto <bb 54>;

  <bb 52>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__old_finish_408] ={v} {CLOBBER};
  __old_finish_192 = __old_finish_408 + 24;
  # DEBUG __first => __old_finish_192
  # DEBUG __first => __old_finish_192
  if (__old_finish_192 == __old_finish_387)
    goto <bb 49>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 51>;

  <bb 54>:

  <bb 55>:
  # __tmp_409 = PHI <__tmp_188(54), __tmp_191(56)>
  # DEBUG __cur => __tmp_409
  # DEBUG __tmp => __tmp_409
  __tmp_191 = __tmp_409->D.82523._M_next;
  # DEBUG __cur => __tmp_191
  # DEBUG D#1082 => &__tmp_409->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_409
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_409
  # DEBUG this => D#567
  # DEBUG D.169759 => D#568
  operator delete (__tmp_409);
  # DEBUG __cur => __tmp_191
  if (__tmp_191 == _244)
    goto <bb 52>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 55>;

<L22>:
  __cxa_end_catch ();
  resx 14

<L33>:
  goto <bb 115> (<L10>);

  <bb 59>:
  _74 = this_9(D)->D.62343._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.62343._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#4191
  # DEBUG __last => D#4189
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4191
  if (__position_22 == prephitmp_144)
    goto <bb 24>;
  else
    goto <bb 60>;

  <bb 60>:

  <bb 61>:
  # __position_375 = PHI <__position_22(60), __position_84(64)>
  # DEBUG __first => __position_375
  std::__cxx11::list<PacketReplyInfo*>::operator= (__position_375, &__x_copy);
  goto <bb 63>;

<L34>:
  goto <bb 115> (<L10>);

  <bb 63>:
  __position_84 = __position_375 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_144)
    goto <bb 24>;
  else
    goto <bb 64>;

  <bb 64>:
  goto <bb 61>;

  <bb 65>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  __x_copy ={v} {CLOBBER};
  goto <bb 113>;

  <bb 66>:

  <bb 67>:
  # __tmp_376 = PHI <__tmp_85(66), __tmp_87(68)>
  # DEBUG __cur => __tmp_376
  # DEBUG __tmp => __tmp_376
  __tmp_87 = __tmp_376->D.82523._M_next;
  # DEBUG __cur => __tmp_87
  # DEBUG D#1082 => &__tmp_376->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_376
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_376
  # DEBUG this => D#567
  # DEBUG D.145052 => D#568
  operator delete (__tmp_376);
  # DEBUG __cur => __tmp_87
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_87)
    goto <bb 65>;
  else
    goto <bb 68>;

  <bb 68>:
  goto <bb 67>;

  <bb 69>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _224 = (long int) _23;
  _225 = _13 - _224;
  _226 = _225 /[ex] 24;
  _227 = (const long unsigned int) _226;
  _228 = 768614336404564650 - _227;
  if (__n_7(D) > _228)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 71>:
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.169866
  # DEBUG __b => &__n
  _92 = MAX_EXPR <__n_7(D), _227>;
  __len_232 = _92 + _227;
  # DEBUG __len => __len_232
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _356 = __len_232 > 768614336404564650;
  _385 = _227 > __len_232;
  _223 = _356 | _385;
  if (_223 != 0)
    goto <bb 142>;
  else
    goto <bb 143>;

  <bb 72>:
  pretmp_289 = __len_232 * 24;

  <bb 73>:
  # __elems_before_263 = PHI <__elems_before_359(142), __elems_before_89(72)>
  # _251 = PHI <_361(142), _346(72)>
  # prephitmp_142 = PHI <18446744073709551600(142), pretmp_289(72)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#572 => &this_9(D)->D.62343._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#572
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85053
  # DEBUG this => &__position
  # DEBUG this => &D.85053
  # DEBUG __elems_before => __elems_before_263
  # DEBUG D#2652 => &this_9(D)->D.62343
  # DEBUG D#2078 => D#2652
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => NULL
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2140
  # DEBUG D.169854 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  _220 = operator new (prephitmp_142);

  <bb 74>:
  # __new_finish_221 = PHI <0B(143), _220(73)>
  # __elems_before_255 = PHI <__elems_before_89(143), __elems_before_263(73)>
  # _273 = PHI <_346(143), _251(73)>
  # prephitmp_189 = PHI <0(143), prephitmp_142(73)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2636 => &this_9(D)->D.62343
  # DEBUG this => D#2636
  _26 = (long unsigned int) _273;
  __first_27 = __new_finish_221 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.145060 => D#2064
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 75>:
  # __n_352 = PHI <__n_211(87), __n_7(D)(74)>
  # __first_353 = PHI <__first_212(87), __first_27(74)>
  # DEBUG __cur => __first_353
  # DEBUG __n => __n_352
  # DEBUG __r => __first_353
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.134754 => D#20
  if (__first_353 != 0B)
    goto <bb 76>;
  else
    goto <bb 86>;

  <bb 76>:
  # DEBUG this => __first_353
  # DEBUG __x => __x_28(D)
  # DEBUG D#1587 => &MEM[(const struct list *)__x_28(D)].D.73144
  # DEBUG this => D#1587
  # DEBUG D#1589 => &__first_353->D.73144
  # DEBUG this => D#1589
  # DEBUG __a => NULL
  # DEBUG D#1095 => &D#1589->_M_impl
  # DEBUG this => D#1095
  # DEBUG __a => NULL
  # DEBUG this => D#1095
  # DEBUG __a => NULL
  # DEBUG this => D#1095
  # DEBUG D.120663 => NULL
  MEM[(struct _List_impl *)__first_353]._M_node._M_data = 0;
  # DEBUG this => D#1589
  _17 = &MEM[(struct _List_base *)__first_353]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)__first_353]._M_impl._M_node.D.37893._M_next = _17;
  MEM[(struct _List_base *)__first_353]._M_impl._M_node.D.37893._M_prev = _17;
  # DEBUG D#566 => D#1589
  # DEBUG __n => 0
  # DEBUG this => D#566
  # DEBUG this => __x_28(D)
  _234 = &MEM[(const struct list *)__x_28(D)].D.73144._M_impl._M_node.D.37893;
  # DEBUG this => NULL
  # DEBUG __x => _234
  __first$_M_node_235 = MEM[(struct _List_node_base * *)__x_28(D)];
  # DEBUG D#321 => __x_28(D)
  # DEBUG this => D#321
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_235
  # DEBUG this => __first_353
  # DEBUG __first => __first$_M_node_235
  # DEBUG __last$_M_node => _234
  # DEBUG __first$_M_node => __first$_M_node_235
  # DEBUG __first$_M_node => __first$_M_node_235
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_234 != __first$_M_node_235)
    goto <bb 77>;
  else
    goto <bb 86>;

  <bb 77>:

  <bb 78>:
  # __first$_M_node_414 = PHI <__first$_M_node_235(77), __first$_M_node_239(80)>
  # DEBUG __first$_M_node => __first$_M_node_414
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#4183 => &MEM[(const struct _Node *)__first$_M_node_414]._M_data
  # DEBUG this => __first_353
  # DEBUG __x => NULL
  # DEBUG this => __first_353
  # DEBUG this => NULL
  # DEBUG __x => _17
  # DEBUG this => __first_353
  # DEBUG __x => D#4183
  # DEBUG D#1584 => __first_353
  # DEBUG __x => D#4183
  # DEBUG this => D#1584
  # DEBUG D#1583 => D#1584
  # DEBUG D#1582 => D#1584
  # DEBUG D#1581 => &D#1582->D.73144
  # DEBUG D#1579 => D#1581
  # DEBUG this => D#1579
  # DEBUG D#1578 => D#1579
  # DEBUG D#1577 => &D#1578->_M_impl
  # DEBUG D#1575 => D#1577
  # DEBUG D#1576 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1575
  # DEBUG D.169908 => D#1576
  # DEBUG D#1574 => D#1575
  # DEBUG D#1573 => D#1574
  # DEBUG this => D#1573
  _243 = operator new (24);

  <bb 79>:
  # DEBUG __p => _243
  # DEBUG D#4187 => &MEM[(struct _Node *)_243]._M_data
  # DEBUG __r => D#4187
  # DEBUG D#1580 => &D#1583->D.73144
  # DEBUG D#1081 => D#1580
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#4183
  # DEBUG this => D#616
  # DEBUG D#20 => 8
  # DEBUG __p => NULL
  # DEBUG D.115696 => D#20
  _245 = MEM[(struct PacketReplyInfo * const &)__first$_M_node_414 + 16];
  MEM[(struct PacketReplyInfo * *)_243 + 16B] = _245;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _243
  _247 = &MEM[(struct _Node *)_243].D.82523;
  std::__detail::_List_node_base::_M_hook (_247, _17);
  # DEBUG D#1585 => &__first_353->D.73144
  # DEBUG D#352 => D#1585
  # DEBUG __n => 1
  # DEBUG this => D#352
  _248 = MEM[(long unsigned int *)__first_353 + 16B];
  _249 = _248 + 1;
  MEM[(long unsigned int *)__first_353 + 16B] = _249;
  # DEBUG this => &__first
  __first$_M_node_239 = __first$_M_node_414->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_239
  # DEBUG __first$_M_node => __first$_M_node_239
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_234 != __first$_M_node_239)
    goto <bb 80>;
  else
    goto <bb 86>;

  <bb 80>:
  goto <bb 78>;

  # _302 = PHI <_17(78)>
  # __first_96 = PHI <__first_353(78)>
<L27>:
  # DEBUG D#1588 => &__first_96->D.73144
  # DEBUG this => D#1588
  # DEBUG this => D#1588
  __tmp_240 = MEM[(struct _List_base *)__first_96]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_240
  # DEBUG __cur => __tmp_240
  if (_302 == __tmp_240)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  # DEBUG D#1083 => &D#1588->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__first_96] ={v} {CLOBBER};
  resx 20

  <bb 83>:

  <bb 84>:
  # __tmp_415 = PHI <__tmp_240(83), __tmp_242(85)>
  # DEBUG __cur => __tmp_415
  # DEBUG __tmp => __tmp_415
  __tmp_242 = __tmp_415->D.82523._M_next;
  # DEBUG __cur => __tmp_242
  # DEBUG D#1082 => &__tmp_415->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1588
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1588
  # DEBUG __p => __tmp_415
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_415
  # DEBUG this => D#567
  # DEBUG D.169877 => D#568
  operator delete (__tmp_415);
  # DEBUG __cur => __tmp_242
  if (_302 == __tmp_242)
    goto <bb 82>;
  else
    goto <bb 85>;

  <bb 85>:
  goto <bb 84>;

  <bb 86>:
  __n_211 = __n_352 + 18446744073709551615;
  # DEBUG __n => __n_211
  __first_212 = __first_353 + 24;
  # DEBUG __cur => __first_212
  # DEBUG __cur => __first_212
  # DEBUG __n => __n_211
  if (__n_211 == 0)
    goto <bb 88>;
  else
    goto <bb 87>;

  <bb 87>:
  goto <bb 75>;

  <bb 88>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2637 => &this_9(D)->D.62343
  # DEBUG this => D#2637
  # DEBUG this => &__position
  _31 = this_9(D)->D.62343._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#4191
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2063
  # DEBUG D#2062 => D#2063
  # DEBUG D#2059 => D#2062
  # DEBUG __first => _31
  # DEBUG __last => D#4191
  # DEBUG __result => NULL
  # DEBUG D.145081 => D#2059
  # DEBUG __first => _31
  # DEBUG __last => D#4191
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<PacketReplyInfo*>*, std::__cxx11::list<PacketReplyInfo*>*> (_31, __position_22, __new_finish_221);
  goto <bb 99>;

<L24>:
  _213 = __builtin_eh_pointer (19);
  __cxa_begin_catch (_213);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_96
  # DEBUG __first => __first_27
  # DEBUG __last => __first_96
  # DEBUG __first => __first_27
  if (__first_27 == __first_96)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  __cxa_rethrow ();

  <bb 91>:

  <bb 92>:
  # __first_412 = PHI <__first_27(91), __first_219(94)>
  # DEBUG __first => __first_412
  # DEBUG __r => __first_412
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_215 = MEM[(struct _List_base *)__first_412]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_215
  # DEBUG __cur => __tmp_215
  _391 = &MEM[(struct _List_base *)__first_412]._M_impl._M_node.D.37893;
  if (__tmp_215 == _391)
    goto <bb 93>;
  else
    goto <bb 95>;

  <bb 93>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__first_412] ={v} {CLOBBER};
  __first_219 = __first_412 + 24;
  # DEBUG __first => __first_219
  # DEBUG __first => __first_219
  if (__first_219 == __first_96)
    goto <bb 90>;
  else
    goto <bb 94>;

  <bb 94>:
  goto <bb 92>;

  <bb 95>:

  <bb 96>:
  # __tmp_413 = PHI <__tmp_215(95), __tmp_218(97)>
  # DEBUG __cur => __tmp_413
  # DEBUG __tmp => __tmp_413
  __tmp_218 = __tmp_413->D.82523._M_next;
  # DEBUG __cur => __tmp_218
  # DEBUG D#1082 => &__tmp_413->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_413
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_413
  # DEBUG this => D#567
  # DEBUG D.169837 => D#568
  operator delete (__tmp_413);
  # DEBUG __cur => __tmp_218
  if (__tmp_218 == _391)
    goto <bb 93>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 96>;

<L26>:
  __cxa_end_catch ();
  resx 18

  <bb 99>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2638 => &this_9(D)->D.62343
  # DEBUG this => D#2638
  _35 = this_9(D)->D.62343._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#4191
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#2063
  # DEBUG D#2062 => D#2063
  # DEBUG D#2059 => D#2062
  # DEBUG __first => D#4191
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.145100 => D#2059
  # DEBUG __first => D#4191
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _93 = std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<PacketReplyInfo*>*, std::__cxx11::list<PacketReplyInfo*>*> (__position_22, _35, __new_finish_33);
  goto <bb 101>;

<L36>:
  goto <bb 121> (<L13>);

  <bb 101>:
  # DEBUG __new_finish => _93
  # DEBUG D#2639 => &this_9(D)->D.62343
  # DEBUG this => D#2639
  _37 = this_9(D)->D.62343._M_impl._M_finish;
  __first_38 = this_9(D)->D.62343._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 110>;
  else
    goto <bb 102>;

  <bb 102>:

  <bb 103>:
  # __first_350 = PHI <__first_38(102), __first_98(105)>
  # DEBUG __first => __first_350
  # DEBUG __r => __first_350
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_94 = MEM[(struct _List_base *)__first_350]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_94
  # DEBUG __cur => __tmp_94
  _19 = &MEM[(struct _List_base *)__first_350]._M_impl._M_node.D.37893;
  if (_19 == __tmp_94)
    goto <bb 104>;
  else
    goto <bb 106>;

  <bb 104>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__first_350] ={v} {CLOBBER};
  __first_98 = __first_350 + 24;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (_37 == __first_98)
    goto <bb 109>;
  else
    goto <bb 105>;

  <bb 105>:
  goto <bb 103>;

  <bb 106>:

  <bb 107>:
  # __tmp_400 = PHI <__tmp_94(106), __tmp_97(108)>
  # DEBUG __cur => __tmp_400
  # DEBUG __tmp => __tmp_400
  __tmp_97 = __tmp_400->D.82523._M_next;
  # DEBUG __cur => __tmp_97
  # DEBUG D#1082 => &__tmp_400->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_400
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_400
  # DEBUG this => D#567
  # DEBUG D.145143 => D#568
  operator delete (__tmp_400);
  # DEBUG __cur => __tmp_97
  if (_19 == __tmp_97)
    goto <bb 104>;
  else
    goto <bb 108>;

  <bb 108>:
  goto <bb 107>;

  <bb 109>:
  pretmp_295 = this_9(D)->D.62343._M_impl._M_start;

  <bb 110>:
  # prephitmp_296 = PHI <pretmp_295(109), __first_38(101)>
  # DEBUG D#2650 => this_9(D)->D.62343._M_impl._M_end_of_storage
  # DEBUG D#2649 => (long int) D#2650
  # DEBUG D#4190 => this_9(D)->D.62343._M_impl._M_start
  # DEBUG D#2648 => (long int) D#4190
  # DEBUG D#2647 => D#2649 - D#2648
  # DEBUG D#2646 => D#2647 /[ex] 24
  # DEBUG D#2645 => &this_9(D)->D.62343
  # DEBUG D#896 => D#2645
  # DEBUG D#897 => (long unsigned int) D#2646
  # DEBUG __p => D#4190
  # DEBUG this => D#896
  # DEBUG __n => D#897
  # DEBUG D#895 => D#897
  # DEBUG D#894 => D#896
  if (prephitmp_296 != 0B)
    goto <bb 111>;
  else
    goto <bb 112>;

  <bb 111>:
  # DEBUG D#893 => &D#894->_M_impl
  # DEBUG D#891 => D#893
  # DEBUG D#892 => D#895
  # DEBUG __p => D#4190
  # DEBUG __a => D#891
  # DEBUG __n => D#892
  # DEBUG D#890 => D#892
  # DEBUG D#889 => D#891
  # DEBUG D#887 => D#889
  # DEBUG D#888 => D#890
  # DEBUG __p => D#4190
  # DEBUG this => D#887
  # DEBUG D.145123 => D#888
  operator delete (prephitmp_296);

  <bb 112>:
  this_9(D)->D.62343._M_impl._M_start = __new_finish_221;
  this_9(D)->D.62343._M_impl._M_finish = _93;
  _44 = __new_finish_221 + prephitmp_189;
  this_9(D)->D.62343._M_impl._M_end_of_storage = _44;

  <bb 113>:
  return;

<L29>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1084 => &__x_copy.D.73144
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_99 = MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_99
  # DEBUG __cur => __tmp_99
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_99)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  resx 2

  <bb 117>:

  <bb 118>:
  # __tmp_377 = PHI <__tmp_99(117), __tmp_101(119)>
  # DEBUG __cur => __tmp_377
  # DEBUG __tmp => __tmp_377
  __tmp_101 = __tmp_377->D.82523._M_next;
  # DEBUG __cur => __tmp_101
  # DEBUG D#1082 => &__tmp_377->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_377
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_377
  # DEBUG this => D#567
  # DEBUG D.145159 => D#568
  operator delete (__tmp_377);
  # DEBUG __cur => __tmp_101
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.37893 == __tmp_101)
    goto <bb 116>;
  else
    goto <bb 119>;

  <bb 119>:
  goto <bb 118>;

<L35>:

  # __new_finish_1 = PHI <__new_finish_33(100), 0B(120)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 124>;
  else
    goto <bb 122>;

  <bb 122>:
  # DEBUG __first => __new_finish_221
  if (__new_finish_1 == __new_finish_221)
    goto <bb 123>;
  else
    goto <bb 132>;

  <bb 123>:
  # DEBUG D#2651 => &this_9(D)->D.62343
  # DEBUG D#896 => D#2651
  # DEBUG __p => NULL
  # DEBUG this => D#896
  # DEBUG __n => D#897
  # DEBUG D#895 => D#897
  # DEBUG D#894 => D#896
  if (__new_finish_221 != 0B)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 124>:
  # DEBUG D#2643 => &this_9(D)->D.62343
  # DEBUG this => D#2643
  _49 = __n_7(D) + __elems_before_255;
  _50 = _49 * 24;
  _51 = __new_finish_221 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51
  # DEBUG __first => __first_27
  if (__first_27 == _51)
    goto <bb 123>;
  else
    goto <bb 125>;

  <bb 125>:

  <bb 126>:
  # __first_368 = PHI <__first_27(125), __first_106(128)>
  # DEBUG __first => __first_368
  # DEBUG __r => __first_368
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_102 = MEM[(struct _List_base *)__first_368]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_102
  # DEBUG __cur => __tmp_102
  _399 = &MEM[(struct _List_base *)__first_368]._M_impl._M_node.D.37893;
  if (__tmp_102 == _399)
    goto <bb 127>;
  else
    goto <bb 129>;

  <bb 127>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__first_368] ={v} {CLOBBER};
  __first_106 = __first_368 + 24;
  # DEBUG __first => __first_106
  # DEBUG __first => __first_106
  if (_51 == __first_106)
    goto <bb 123>;
  else
    goto <bb 128>;

  <bb 128>:
  goto <bb 126>;

  <bb 129>:

  <bb 130>:
  # __tmp_373 = PHI <__tmp_102(129), __tmp_105(131)>
  # DEBUG __cur => __tmp_373
  # DEBUG __tmp => __tmp_373
  __tmp_105 = __tmp_373->D.82523._M_next;
  # DEBUG __cur => __tmp_105
  # DEBUG D#1082 => &__tmp_373->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_373
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_373
  # DEBUG this => D#567
  # DEBUG D.145182 => D#568
  operator delete (__tmp_373);
  # DEBUG __cur => __tmp_105
  if (__tmp_105 == _399)
    goto <bb 127>;
  else
    goto <bb 131>;

  <bb 131>:
  goto <bb 130>;

  <bb 132>:

  <bb 133>:
  # __new_finish_374 = PHI <__new_finish_221(132), __new_finish_112(135)>
  # DEBUG __first => __new_finish_374
  # DEBUG __r => __new_finish_374
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_108 = MEM[(struct _List_base *)__new_finish_374]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_108
  # DEBUG __cur => __tmp_108
  _392 = &MEM[(struct _List_base *)__new_finish_374]._M_impl._M_node.D.37893;
  if (__tmp_108 == _392)
    goto <bb 134>;
  else
    goto <bb 136>;

  <bb 134>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__new_finish_374] ={v} {CLOBBER};
  __new_finish_112 = __new_finish_374 + 24;
  # DEBUG __first => __new_finish_112
  # DEBUG __first => __new_finish_112
  if (__new_finish_1 == __new_finish_112)
    goto <bb 123>;
  else
    goto <bb 135>;

  <bb 135>:
  goto <bb 133>;

  <bb 136>:

  <bb 137>:
  # __tmp_367 = PHI <__tmp_108(136), __tmp_111(138)>
  # DEBUG __cur => __tmp_367
  # DEBUG __tmp => __tmp_367
  __tmp_111 = __tmp_367->D.82523._M_next;
  # DEBUG __cur => __tmp_111
  # DEBUG D#1082 => &__tmp_367->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_367
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_367
  # DEBUG this => D#567
  # DEBUG D.145207 => D#568
  operator delete (__tmp_367);
  # DEBUG __cur => __tmp_111
  if (__tmp_111 == _392)
    goto <bb 134>;
  else
    goto <bb 138>;

  <bb 138>:
  goto <bb 137>;

  <bb 139>:
  # DEBUG D#893 => &D#894->_M_impl
  # DEBUG D#891 => D#893
  # DEBUG D#892 => D#895
  # DEBUG __p => NULL
  # DEBUG __a => D#891
  # DEBUG __n => D#892
  # DEBUG D#890 => D#892
  # DEBUG D#889 => D#891
  # DEBUG D#887 => D#889
  # DEBUG D#888 => D#890
  # DEBUG __p => NULL
  # DEBUG this => D#887
  # DEBUG D.145222 => D#888
  operator delete (__new_finish_221);

  <bb 140>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 142>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#572 => &this_9(D)->D.62343._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#572
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85053
  # DEBUG this => &__position
  _360 = (long int) __position_22;
  # DEBUG this => &D.85053
  _361 = _360 - _224;
  _358 = _361 /[ex] 24;
  __elems_before_359 = (const size_type) _358;
  # DEBUG __elems_before => __elems_before_359
  # DEBUG D#2652 => &this_9(D)->D.62343
  # DEBUG D#2078 => D#2652
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  goto <bb 73>;

  <bb 143>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#572 => &this_9(D)->D.62343._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#572
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85053
  # DEBUG this => &__position
  _357 = (long int) __position_22;
  # DEBUG this => &D.85053
  _346 = _357 - _224;
  _347 = _346 /[ex] 24;
  __elems_before_89 = (const size_type) _347;
  # DEBUG __elems_before => __elems_before_89
  # DEBUG D#2652 => &this_9(D)->D.62343
  # DEBUG D#2078 => D#2652
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (__len_232 != 0)
    goto <bb 72>;
  else
    goto <bb 74>;

<L28>:
  # DEBUG __new_finish => __new_finish_221
  _308 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_308);
  if (__new_finish_221 == 0B)
    goto <bb 124>;
  else
    goto <bb 123>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<Router*>*; _ForwardIterator = std::vector<Router*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIP6RouterSaIS4_EES7_EET0_T_S9_S8_, funcdef_no=5374, decl_uid=90416, cgraph_uid=3622, symbol_order=3623)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<Router*>*; _ForwardIterator = std::vector<Router*>*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  struct Stats * * D.170066;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  struct Router * * _8;
  void * _12;
  long unsigned int _20;
  struct Router * * const _27;
  struct Router * * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  struct Router * * _36;
  struct Router * * const _37;
  struct Router * * const _38;
  long int __last.294_39;
  long int __first.295_40;
  long int _41;
  long unsigned int _43;
  struct Router * * _45;
  struct Stats * * _46;
  struct Stats * * iftmp.356_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_71 = PHI <__first_5(D)(3), __first_10(17)>
  # __result_70 = PHI <__result_4(D)(3), __result_11(17)>
  # DEBUG __cur => __result_70
  # DEBUG __first => __first_71
  # DEBUG __r => __result_70
  # DEBUG __p => NULL
  # DEBUG __value => __first_71
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.135072 => D#20
  if (__result_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_70
  # DEBUG __x => __first_71
  # DEBUG D#1547 => &MEM[(const struct vector *)__first_71].D.49300
  # DEBUG this => D#1547
  # DEBUG __a => NULL
  _27 = MEM[(struct Router * * *)__first_71];
  # DEBUG D#217 => __first_71
  _28 = MEM[(struct Router * * *)__first_71 + 8B];
  # DEBUG D#217 => __first_71
  # DEBUG this => D#217
  # DEBUG this => D#217
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 8;
  _33 = (size_type) _32;
  # DEBUG D#1549 => &__result_70->D.49300
  # DEBUG this => D#1549
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1545 => &D#1549->_M_impl
  # DEBUG this => D#1545
  # DEBUG __a => NULL
  # DEBUG this => D#1545
  # DEBUG __a => NULL
  # DEBUG this => D#1545
  # DEBUG D.120686 => NULL
  MEM[(struct _Vector_impl *)__result_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_end_of_storage = 0B;
  # DEBUG this => D#1549
  # DEBUG __n => NULL
  # DEBUG D#1543 => D#1549
  # DEBUG __n => _33
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _33
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#2118
  # DEBUG D.170064 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_33 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_9 = PHI <__result_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __result_35 = PHI <__result_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.356_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_start = iftmp.356_47;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_finish = iftmp.356_47;
  _36 = iftmp.356_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#1548 => &__result_70->D.49300
  # DEBUG this => D#1548
  _37 = MEM[(struct Router * * *)__first_71 + 8B];
  # DEBUG D#323 => __first_71
  # DEBUG this => D#323
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(struct Router * * *)__first_71];
  # DEBUG D#324 => __first_71
  # DEBUG this => D#324
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.170028 => D#1546
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.294_39 = (long int) _37;
  __first.295_40 = (long int) _38;
  _41 = __last.294_39 - __first.295_40;
  _Num_42 = _41 /[ex] 8;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.356_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.356_47 + prephitmp_2;
  __result_70->D.49300._M_impl._M_finish = _45;

  <bb 15>:
  __first_10 = __first_71 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_70 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __result_18 = PHI <__result_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __result_63 = PHI <__result_18(16), __result_4(D)(2)>
  return __result_63;

<L7>:

  # __result_44 = PHI <__result_35(10), __result_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __result_64 = PHI <__result_4(D)(22), __result_17(26)>
  # DEBUG __first => __result_64
  # DEBUG __r => __result_64
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#599
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _8 = MEM[(struct _Vector_base *)__result_64]._M_impl._M_start;
  # DEBUG D#596 => (long int) _8
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _8
  # DEBUG __n => D#593
  if (_8 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _8
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _8
  # DEBUG this => D#585
  # DEBUG D.135097 => D#586
  operator delete (_8);

  <bb 25>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  MEM[(struct  &)__result_64] ={v} {CLOBBER};
  __result_17 = __result_64 + 24;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Router*>; _Alloc = std::allocator<std::vector<Router*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Router*>*, std::vector<std::vector<Router*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Router*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Router*>] (_ZNSt6vectorIS_IP6RouterSaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_, funcdef_no=4043, decl_uid=54758, cgraph_uid=2291, symbol_order=2292)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Router*>; _Alloc = std::allocator<std::vector<Router*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Router*>*, std::vector<std::vector<Router*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Router*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Router*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct Stats * * D.170326;
  const ptrdiff_t _Num;
  const long unsigned int D.170276;
  const size_type __len;
  size_type D.170275;
  size_type __n;
  struct vector * D.170266;
  struct vector * D.170254;
  struct vector * __first;
  long unsigned int __n;
  struct Stats * * D.170226;
  const ptrdiff_t _Num;
  struct vector * D.170173;
  struct vector * __first;
  long unsigned int __n;
  struct Stats * * D.170145;
  const ptrdiff_t _Num;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct Router * * const _17;
  struct vector * prephitmp_18;
  struct vector * _20;
  struct vector * const _23;
  bool _24;
  long int __last.297_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long int pretmp_52;
  long unsigned int _55;
  struct Router * * const prephitmp_56;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  long int pretmp_66;
  struct vector * _67;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct Router * * _85;
  long int _87;
  long unsigned int prephitmp_88;
  long unsigned int _90;
  struct vector * _91;
  struct Router * * _92;
  struct Router * * _94;
  struct Router * * _95;
  struct Router * * _98;
  struct Router * * const pretmp_100;
  struct Router * * const _138;
  struct Router * * const _153;
  struct Router * * const _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  size_type _159;
  struct Router * * _162;
  struct Router * * _171;
  struct Stats * * _172;
  struct Stats * * iftmp.356_173;
  void * _178;
  struct Router * * _180;
  struct Router * * const _182;
  long int _183;
  long int _184;
  long int _185;
  long int _186;
  size_type _187;
  const ptrdiff_t pretmp_188;
  struct Router * * _190;
  struct Router * * const _191;
  struct Router * * const _192;
  long int __last.294_193;
  long int __first.295_194;
  long int _195;
  long unsigned int _197;
  struct Router * * _199;
  long unsigned int _200;
  struct Stats * * _201;
  struct Stats * * iftmp.356_202;
  long unsigned int pretmp_203;
  long unsigned int prephitmp_204;
  void * _207;
  struct Router * * _209;
  struct vector * _211;
  long int _215;
  long int _216;
  long int _217;
  long unsigned int _219;
  long int pretmp_220;
  struct Router * * const pretmp_222;
  struct vector * pretmp_224;
  struct Router * * const _225;
  long int _226;
  long int _227;
  long int _228;
  long int _229;
  size_type _230;
  struct Router * * _233;
  struct Router * * _242;
  long unsigned int _243;
  struct Stats * * _244;
  struct Stats * * iftmp.356_245;
  struct Router * * const pretmp_284;
  const ptrdiff_t prephitmp_317;
  struct vector * const prephitmp_323;
  long int pretmp_324;
  const ptrdiff_t prephitmp_327;
  struct Router * * const prephitmp_329;
  long int pretmp_331;
  bool _332;
  long int _333;
  const ptrdiff_t pretmp_336;
  difference_type _337;
  long int _339;
  difference_type _340;
  long int _341;
  long int pretmp_343;
  struct Router * * const pretmp_344;
  long unsigned int pretmp_345;
  long unsigned int prephitmp_346;
  long unsigned int prephitmp_347;
  struct vector * const pretmp_348;
  long unsigned int pretmp_349;
  long int prephitmp_350;
  long int pretmp_351;
  long int _355;
  long int _356;
  bool _358;
  long unsigned int pretmp_370;
  long unsigned int prephitmp_371;
  long unsigned int pretmp_372;
  long unsigned int prephitmp_373;
  long unsigned int pretmp_374;
  long unsigned int prephitmp_375;
  long unsigned int pretmp_378;
  long unsigned int prephitmp_379;

  <bb 2>:
  # DEBUG D#4212 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#4212
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 102>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.54835._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.54835._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 61>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#1547 => &MEM[(const struct vector *)__x_28(D)].D.49300
  # DEBUG this => D#1547
  # DEBUG __a => NULL
  _153 = MEM[(struct Router * * *)__x_28(D)];
  # DEBUG D#217 => __x_28(D)
  _154 = MEM[(struct Router * * *)__x_28(D) + 8B];
  # DEBUG D#217 => __x_28(D)
  # DEBUG this => D#217
  # DEBUG this => D#217
  _155 = (long int) _154;
  _156 = (long int) _153;
  _157 = _155 - _156;
  _158 = _157 /[ex] 8;
  _159 = (size_type) _158;
  # DEBUG D#1549 => &__x_copy.D.49300
  # DEBUG this => D#1549
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1545 => &D#1549->_M_impl
  # DEBUG this => D#1545
  # DEBUG __a => NULL
  # DEBUG this => D#1545
  # DEBUG __a => NULL
  # DEBUG this => D#1545
  # DEBUG D.120686 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#1549
  # DEBUG __n => NULL
  # DEBUG D#1543 => D#1549
  # DEBUG __n => _159
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_159 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_345 = (long unsigned int) _157;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _159
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _159
  # DEBUG this => D#2118
  # DEBUG D.170143 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_159 > 2305843009213693951)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _55 = (long unsigned int) _157;
  _172 = operator new (_55);
  pretmp_348 = MEM[(struct vector * const &)this_9(D) + 8];
  pretmp_351 = (long int) pretmp_348;
  pretmp_344 = MEM[(struct Router * * *)__x_28(D) + 8B];
  pretmp_284 = MEM[(struct Router * * *)__x_28(D)];
  pretmp_331 = (long int) pretmp_344;
  pretmp_343 = (long int) pretmp_284;
  pretmp_324 = pretmp_331 - pretmp_343;
  pretmp_188 = pretmp_324 /[ex] 8;
  pretmp_370 = (long unsigned int) pretmp_324;

  <bb 9>:
  # iftmp.356_173 = PHI <0B(5), _172(8)>
  # prephitmp_323 = PHI <_12(5), pretmp_348(8)>
  # prephitmp_350 = PHI <_13(5), pretmp_351(8)>
  # prephitmp_346 = PHI <pretmp_345(5), _55(8)>
  # prephitmp_329 = PHI <_153(5), pretmp_284(8)>
  # prephitmp_317 = PHI <_158(5), pretmp_188(8)>
  # prephitmp_371 = PHI <pretmp_345(5), pretmp_370(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = iftmp.356_173;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = iftmp.356_173;
  _162 = iftmp.356_173 + prephitmp_346;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _162;
  # DEBUG D#1548 => &__x_copy.D.49300
  # DEBUG this => D#1548
  # DEBUG D#4205 => MEM[(struct Router * * *)__x_28(D) + 8B]
  # DEBUG D#323 => __x_28(D)
  # DEBUG this => D#323
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#4204 => MEM[(struct Router * * *)__x_28(D)]
  # DEBUG D#324 => __x_28(D)
  # DEBUG this => D#324
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#4204
  # DEBUG __last => D#4205
  # DEBUG __result => NULL
  # DEBUG D.170107 => D#1546
  # DEBUG __first => D#4204
  # DEBUG __last => D#4205
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#4204
  # DEBUG __last => D#4205
  # DEBUG __result => NULL
  # DEBUG __first => D#4204
  # DEBUG __last => D#4205
  # DEBUG __result => NULL
  # DEBUG __it => D#4205
  # DEBUG __it$_M_current => D#4205
  # DEBUG __it => D#4204
  # DEBUG __it$_M_current => D#4204
  # DEBUG __first => D#4204
  # DEBUG __last => D#4205
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#4205
  # DEBUG __it => D#4205
  # DEBUG this => NULL
  # DEBUG __it => D#4204
  # DEBUG __it => D#4204
  # DEBUG this => NULL
  # DEBUG __first => D#4204
  # DEBUG __last => D#4205
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#4204
  # DEBUG __last => D#4205
  # DEBUG __result => NULL
  # DEBUG D#4203 => (long int) D#4205
  # DEBUG D#4202 => (long int) D#4204
  # DEBUG D#4201 => D#4203 - D#4202
  # DEBUG _Num => D#4201 /[ex] 8
  if (prephitmp_317 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __builtin_memmove (iftmp.356_173, prephitmp_329, prephitmp_371);

  <bb 11>:
  _171 = iftmp.356_173 + prephitmp_371;
  __x_copy.D.49300._M_impl._M_finish = _171;
  # DEBUG this => this_9(D)
  # DEBUG D#325 => &this_9(D)->D.54835._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#325
  # DEBUG D#4200 => MEM[(struct vector * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.85108
  # DEBUG __rhs => &__position
  # DEBUG this => &D.85108
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_350 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#4200
  if (__n_7(D) < __elems_after_57)
    goto <bb 12>;
  else
    goto <bb 26>;

  <bb 12>:
  # DEBUG D#2103 => &this_9(D)->D.54835
  # DEBUG this => D#2103
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_323 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#4200
  # DEBUG __result => D#4200
  # DEBUG __alloc => D#2081
  # DEBUG D#2080 => D#2081
  # DEBUG D#2079 => D#2080
  # DEBUG __first => __last_61
  # DEBUG __last => D#4200
  # DEBUG __result => D#4200
  # DEBUG D.135357 => D#2079
  # DEBUG __first => __last_61
  # DEBUG __last => D#4200
  # DEBUG __result => D#4200
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<Router*>*, std::vector<Router*>*> (__last_61, prephitmp_323, prephitmp_323);

  <bb 13>:
  _62 = this_9(D)->D.54835._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.54835._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#4212
  # DEBUG __last => __last_61
  # DEBUG __result => D#4200
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4212
  # DEBUG __it => D#4212
  # DEBUG __first => D#4212
  # DEBUG __last => __last_61
  # DEBUG __result => D#4200
  # DEBUG __it => D#4200
  # DEBUG __it => D#4200
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4212
  # DEBUG __it => D#4212
  # DEBUG __first => D#4212
  # DEBUG __last => __last_61
  # DEBUG __result => D#4200
  # DEBUG __simple => 0
  # DEBUG __first => D#4212
  # DEBUG __last => __last_61
  # DEBUG __result => D#4200
  __last.297_25 = (long int) __last_61;
  _78 = __last.297_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#4200
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#4212
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4212
  if (__position_22 == _67)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 15>:

  <bb 16>:
  # __old_finish_366 = PHI <prephitmp_323(15), __old_finish_65(19)>
  # __last_367 = PHI <__last_61(15), __last_68(19)>
  # __n_361 = PHI <__n_73(15), __n_58(19)>
  # DEBUG __n => __n_361
  # DEBUG __result => __old_finish_366
  # DEBUG __last => __last_367
  __last_68 = __last_367 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_366 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<Router*>::operator= (__old_finish_65, __last_68);
  goto <bb 18>;

<L26>:
  goto <bb 104> (<L10>);

  <bb 18>:
  __n_58 = __n_361 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 16>;

  <bb 20>:
  # DEBUG this => &__x_copy
  # DEBUG D#599 => &__x_copy.D.49300
  # DEBUG this => D#599
  # DEBUG D#602 => __x_copy.D.49300._M_impl._M_finish
  # DEBUG D#601 => __x_copy.D.49300._M_impl._M_start
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG D#600 => &__x_copy.D.49300
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _85 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#596 => (long int) _85
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _85
  # DEBUG __n => D#593
  if (_85 != 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 21>:

  <bb 22>:
  # __position_365 = PHI <__position_22(21), __position_81(25)>
  # DEBUG __first => __position_365
  std::vector<Router*>::operator= (__position_365, &__x_copy);
  goto <bb 24>;

<L27>:
  goto <bb 104> (<L10>);

  <bb 24>:
  __position_81 = __position_365 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 20>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 22>;

  <bb 26>:
  # DEBUG D#2104 => &this_9(D)->D.54835
  # DEBUG this => D#2104
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#4200
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.135403 => D#2084
  # DEBUG __first => D#4200
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => D#4200
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => D#4200
  # DEBUG __cur => D#4200
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 42>;
  else
    goto <bb 27>;

  <bb 27>:

  <bb 28>:
  # __n_360 = PHI <__n_70(27), __n_176(41)>
  # __old_finish_290 = PHI <prephitmp_323(27), __old_finish_177(41)>
  # DEBUG __cur => __old_finish_290
  # DEBUG __n => __n_360
  # DEBUG __r => __old_finish_290
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.135072 => D#20
  if (__old_finish_290 != 0B)
    goto <bb 29>;
  else
    goto <bb 39>;

  <bb 29>:
  # DEBUG this => __old_finish_290
  # DEBUG __x => &__x_copy
  # DEBUG D#1547 => &__x_copy.D.49300
  # DEBUG this => D#1547
  # DEBUG __a => NULL
  _138 = MEM[(struct Router * * *)&__x_copy];
  # DEBUG D#217 => &__x_copy
  _182 = MEM[(struct Router * * *)&__x_copy + 8B];
  # DEBUG D#217 => &__x_copy
  # DEBUG this => D#217
  # DEBUG this => D#217
  _183 = (long int) _182;
  _184 = (long int) _138;
  _185 = _183 - _184;
  _186 = _185 /[ex] 8;
  _187 = (size_type) _186;
  # DEBUG D#1549 => &__old_finish_290->D.49300
  # DEBUG this => D#1549
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1545 => &D#1549->_M_impl
  # DEBUG this => D#1545
  # DEBUG __a => NULL
  # DEBUG this => D#1545
  # DEBUG __a => NULL
  # DEBUG this => D#1545
  # DEBUG D.120686 => NULL
  MEM[(struct _Vector_impl *)__old_finish_290]._M_start = 0B;
  MEM[(struct _Vector_impl *)__old_finish_290]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__old_finish_290]._M_end_of_storage = 0B;
  # DEBUG this => D#1549
  # DEBUG __n => NULL
  # DEBUG D#1543 => D#1549
  # DEBUG __n => _187
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_187 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  pretmp_372 = (long unsigned int) _185;
  goto <bb 35>;

  <bb 31>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _187
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _187
  # DEBUG this => D#2118
  # DEBUG D.170224 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_187 > 2305843009213693951)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # __old_finish_213 = PHI <__old_finish_290(31)>
  std::__throw_bad_alloc ();

  <bb 33>:
  _200 = (long unsigned int) _185;
  _201 = operator new (_200);
  goto <bb 35>;

  # __old_finish_175 = PHI <__old_finish_290(33)>
<L29>:
  goto <bb 45> (<L19>);

  <bb 35>:
  # iftmp.356_202 = PHI <0B(30), _201(33)>
  # prephitmp_373 = PHI <pretmp_372(30), _200(33)>
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_start = iftmp.356_202;
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_finish = iftmp.356_202;
  _190 = iftmp.356_202 + prephitmp_373;
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_end_of_storage = _190;
  # DEBUG D#1548 => &__old_finish_290->D.49300
  # DEBUG this => D#1548
  _191 = MEM[(struct Router * * *)&__x_copy + 8B];
  # DEBUG D#323 => &__x_copy
  # DEBUG this => D#323
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _192 = MEM[(struct Router * * *)&__x_copy];
  # DEBUG D#324 => &__x_copy
  # DEBUG this => D#324
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG D.170188 => D#1546
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => _191
  # DEBUG __it$_M_current => _191
  # DEBUG __it => _192
  # DEBUG __it$_M_current => _192
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _191
  # DEBUG __it => _191
  # DEBUG this => NULL
  # DEBUG __it => _192
  # DEBUG __it => _192
  # DEBUG this => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  __last.294_193 = (long int) _191;
  __first.295_194 = (long int) _192;
  _195 = __last.294_193 - __first.295_194;
  _Num_196 = _195 /[ex] 8;
  # DEBUG _Num => _Num_196
  if (_Num_196 != 0)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  pretmp_374 = (long unsigned int) _195;
  goto <bb 38>;

  <bb 37>:
  _197 = (long unsigned int) _195;
  __builtin_memmove (iftmp.356_202, _192, _197);

  <bb 38>:
  # prephitmp_375 = PHI <pretmp_374(36), _197(37)>
  _199 = iftmp.356_202 + prephitmp_375;
  __old_finish_290->D.49300._M_impl._M_finish = _199;

  <bb 39>:
  __n_176 = __n_360 + 18446744073709551615;
  # DEBUG __n => __n_176
  __old_finish_177 = __old_finish_290 + 24;
  # DEBUG __cur => __old_finish_177
  # DEBUG __cur => __old_finish_177
  # DEBUG __n => __n_176
  if (__n_176 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # __old_finish_221 = PHI <__old_finish_177(39)>
  goto <bb 42>;

  <bb 41>:
  goto <bb 28>;

  <bb 42>:
  # __old_finish_19 = PHI <__old_finish_221(40), prephitmp_323(26)>
  this_9(D)->D.54835._M_impl._M_finish = __old_finish_19;
  # DEBUG D#2105 => &this_9(D)->D.54835
  # DEBUG this => D#2105
  # DEBUG this => &__position
  # DEBUG __first => D#4212
  # DEBUG __last => D#4200
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2081
  # DEBUG D#2080 => D#2081
  # DEBUG D#2079 => D#2080
  # DEBUG __first => D#4212
  # DEBUG __last => D#4200
  # DEBUG __result => NULL
  # DEBUG D.135416 => D#2079
  # DEBUG __first => D#4212
  # DEBUG __last => D#4200
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<Router*>*, std::vector<Router*>*> (__position_22, prephitmp_323, __old_finish_19);
  goto <bb 53>;

<L30>:
  goto <bb 104> (<L10>);

<L28>:

  # __old_finish_151 = PHI <__old_finish_175(34), __old_finish_213(44)>
<L19>:
  _178 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_178);
  # DEBUG __first => D#4200
  # DEBUG __last => __old_finish_151
  # DEBUG __first => D#4200
  # DEBUG __last => __old_finish_151

  <bb 46>:
  # __old_finish_179 = PHI <prephitmp_323(45), __old_finish_181(49)>
  # DEBUG __first => __old_finish_179
  if (__old_finish_179 == __old_finish_151)
    goto <bb 50>;
  else
    goto <bb 47>;

  <bb 47>:
  # DEBUG __r => __old_finish_179
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#599
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _180 = MEM[(struct _Vector_base *)__old_finish_179]._M_impl._M_start;
  # DEBUG D#596 => (long int) _180
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _180
  # DEBUG __n => D#593
  if (_180 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _180
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _180
  # DEBUG this => D#585
  # DEBUG D.170166 => D#586
  operator delete (_180);

  <bb 49>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  MEM[(struct  &)__old_finish_179] ={v} {CLOBBER};
  __old_finish_181 = __old_finish_179 + 24;
  # DEBUG __first => __old_finish_181
  goto <bb 46>;

  <bb 50>:
  __cxa_rethrow ();

<L21>:
  __cxa_end_catch ();
  resx 13

<L31>:
  goto <bb 104> (<L10>);

  <bb 53>:
  _74 = this_9(D)->D.54835._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.54835._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#4212
  # DEBUG __last => D#4200
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4212
  if (__position_22 == prephitmp_323)
    goto <bb 20>;
  else
    goto <bb 54>;

  <bb 54>:

  <bb 55>:
  # __position_362 = PHI <__position_22(54), __position_84(58)>
  # DEBUG __first => __position_362
  std::vector<Router*>::operator= (__position_362, &__x_copy);
  goto <bb 57>;

<L32>:
  goto <bb 104> (<L10>);

  <bb 57>:
  __position_84 = __position_362 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_323)
    goto <bb 20>;
  else
    goto <bb 58>;

  <bb 58>:
  goto <bb 55>;

  <bb 59>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _85
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _85
  # DEBUG this => D#585
  # DEBUG D.135449 => D#586
  operator delete (_85);

  <bb 60>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  __x_copy ={v} {CLOBBER};
  goto <bb 102>;

  <bb 61>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _215 = (long int) _23;
  _216 = _13 - _215;
  _217 = _216 /[ex] 24;
  _218 = (const long unsigned int) _217;
  _219 = 768614336404564650 - _218;
  if (__n_7(D) > _219)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 63>:
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.170276
  # DEBUG __b => &__n
  _90 = MAX_EXPR <__n_7(D), _218>;
  __len_223 = _90 + _218;
  # DEBUG __len => __len_223
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _332 = __len_223 > 768614336404564650;
  _358 = _218 > __len_223;
  _24 = _332 | _358;
  if (_24 != 0)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 64>:
  pretmp_349 = __len_223 * 24;

  <bb 65>:
  # __elems_before_268 = PHI <__elems_before_338(123), __elems_before_326(64)>
  # _355 = PHI <_339(123), _87(64)>
  # prephitmp_347 = PHI <18446744073709551600(123), pretmp_349(64)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#584 => &this_9(D)->D.54835._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#584
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85141
  # DEBUG this => &__position
  # DEBUG this => &D.85141
  # DEBUG __elems_before => __elems_before_268
  # DEBUG D#2115 => &this_9(D)->D.54835
  # DEBUG D#2098 => D#2115
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => NULL
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2140
  # DEBUG D.170264 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  _211 = operator new (prephitmp_347);

  <bb 66>:
  # __new_finish_212 = PHI <0B(124), _211(65)>
  # __elems_before_357 = PHI <__elems_before_326(124), __elems_before_268(65)>
  # _356 = PHI <_87(124), _355(65)>
  # prephitmp_88 = PHI <0(124), prephitmp_347(65)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2099 => &this_9(D)->D.54835
  # DEBUG this => D#2099
  _26 = (long unsigned int) _356;
  __first_27 = __new_finish_212 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.135457 => D#2084
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 67>:
  # __n_369 = PHI <__n_205(79), __n_7(D)(66)>
  # __first_368 = PHI <__first_206(79), __first_27(66)>
  # DEBUG __cur => __first_368
  # DEBUG __n => __n_369
  # DEBUG __r => __first_368
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.135072 => D#20
  if (__first_368 != 0B)
    goto <bb 68>;
  else
    goto <bb 78>;

  <bb 68>:
  # DEBUG this => __first_368
  # DEBUG __x => __x_28(D)
  # DEBUG D#1547 => &MEM[(const struct vector *)__x_28(D)].D.49300
  # DEBUG this => D#1547
  # DEBUG __a => NULL
  _17 = MEM[(struct Router * * *)__x_28(D)];
  # DEBUG D#217 => __x_28(D)
  _225 = MEM[(struct Router * * *)__x_28(D) + 8B];
  # DEBUG D#217 => __x_28(D)
  # DEBUG this => D#217
  # DEBUG this => D#217
  _226 = (long int) _225;
  _227 = (long int) _17;
  _228 = _226 - _227;
  _229 = _228 /[ex] 8;
  _230 = (size_type) _229;
  # DEBUG D#1549 => &__first_368->D.49300
  # DEBUG this => D#1549
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1545 => &D#1549->_M_impl
  # DEBUG this => D#1545
  # DEBUG __a => NULL
  # DEBUG this => D#1545
  # DEBUG __a => NULL
  # DEBUG this => D#1545
  # DEBUG D.120686 => NULL
  MEM[(struct _Vector_impl *)__first_368]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_368]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_368]._M_end_of_storage = 0B;
  # DEBUG this => D#1549
  # DEBUG __n => NULL
  # DEBUG D#1543 => D#1549
  # DEBUG __n => _230
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_230 != 0)
    goto <bb 70>;
  else
    goto <bb 69>;

  <bb 69>:
  pretmp_203 = (long unsigned int) _228;
  goto <bb 75>;

  <bb 70>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _230
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _230
  # DEBUG this => D#2118
  # DEBUG D.170324 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_230 > 2305843009213693951)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # __first_174 = PHI <__first_368(70)>
  std::__throw_bad_alloc ();

  <bb 72>:
  _243 = (long unsigned int) _228;
  _244 = operator new (_243);
  goto <bb 74>;

  # __first_152 = PHI <__first_368(72)>
<L34>:
  goto <bb 82> (<L22>);

  <bb 74>:
  pretmp_222 = MEM[(struct Router * * *)__x_28(D) + 8B];
  pretmp_100 = MEM[(struct Router * * *)__x_28(D)];
  pretmp_220 = (long int) pretmp_222;
  pretmp_52 = (long int) pretmp_100;
  pretmp_66 = pretmp_220 - pretmp_52;
  pretmp_336 = pretmp_66 /[ex] 8;
  pretmp_378 = (long unsigned int) pretmp_66;

  <bb 75>:
  # iftmp.356_245 = PHI <0B(69), _244(74)>
  # prephitmp_56 = PHI <_17(69), pretmp_100(74)>
  # prephitmp_327 = PHI <_229(69), pretmp_336(74)>
  # prephitmp_204 = PHI <pretmp_203(69), _243(74)>
  # prephitmp_379 = PHI <pretmp_203(69), pretmp_378(74)>
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_start = iftmp.356_245;
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_finish = iftmp.356_245;
  _233 = iftmp.356_245 + prephitmp_204;
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_end_of_storage = _233;
  # DEBUG D#1548 => &__first_368->D.49300
  # DEBUG this => D#1548
  # DEBUG D#4211 => MEM[(struct Router * * *)__x_28(D) + 8B]
  # DEBUG D#323 => __x_28(D)
  # DEBUG this => D#323
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#4210 => MEM[(struct Router * * *)__x_28(D)]
  # DEBUG D#324 => __x_28(D)
  # DEBUG this => D#324
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#4210
  # DEBUG __last => D#4211
  # DEBUG __result => NULL
  # DEBUG D.170288 => D#1546
  # DEBUG __first => D#4210
  # DEBUG __last => D#4211
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#4210
  # DEBUG __last => D#4211
  # DEBUG __result => NULL
  # DEBUG __first => D#4210
  # DEBUG __last => D#4211
  # DEBUG __result => NULL
  # DEBUG __it => D#4211
  # DEBUG __it$_M_current => D#4211
  # DEBUG __it => D#4210
  # DEBUG __it$_M_current => D#4210
  # DEBUG __first => D#4210
  # DEBUG __last => D#4211
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#4211
  # DEBUG __it => D#4211
  # DEBUG this => NULL
  # DEBUG __it => D#4210
  # DEBUG __it => D#4210
  # DEBUG this => NULL
  # DEBUG __first => D#4210
  # DEBUG __last => D#4211
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#4210
  # DEBUG __last => D#4211
  # DEBUG __result => NULL
  # DEBUG D#4209 => (long int) D#4211
  # DEBUG D#4208 => (long int) D#4210
  # DEBUG D#4207 => D#4209 - D#4208
  # DEBUG _Num => D#4207 /[ex] 8
  if (prephitmp_327 != 0)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  __builtin_memmove (iftmp.356_245, prephitmp_56, prephitmp_379);

  <bb 77>:
  _242 = iftmp.356_245 + prephitmp_379;
  __first_368->D.49300._M_impl._M_finish = _242;

  <bb 78>:
  __n_205 = __n_369 + 18446744073709551615;
  # DEBUG __n => __n_205
  __first_206 = __first_368 + 24;
  # DEBUG __cur => __first_206
  # DEBUG __cur => __first_206
  # DEBUG __n => __n_205
  if (__n_205 == 0)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:
  goto <bb 67>;

  <bb 80>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2100 => &this_9(D)->D.54835
  # DEBUG this => D#2100
  # DEBUG this => &__position
  _31 = this_9(D)->D.54835._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#4212
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2083
  # DEBUG D#2082 => D#2083
  # DEBUG D#2079 => D#2082
  # DEBUG __first => _31
  # DEBUG __last => D#4212
  # DEBUG __result => NULL
  # DEBUG D.135478 => D#2079
  # DEBUG __first => _31
  # DEBUG __last => D#4212
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<Router*>*, std::vector<Router*>*> (_31, __position_22, __new_finish_212);
  goto <bb 90>;

<L33>:

  # __first_150 = PHI <__first_152(73), __first_174(81)>
<L22>:
  _207 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_207);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_150
  # DEBUG __first => __first_27
  # DEBUG __last => __first_150

  <bb 83>:
  # __first_208 = PHI <__first_27(82), __first_210(86)>
  # DEBUG __first => __first_208
  if (__first_208 == __first_150)
    goto <bb 87>;
  else
    goto <bb 84>;

  <bb 84>:
  # DEBUG __r => __first_208
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#599
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _209 = MEM[(struct _Vector_base *)__first_208]._M_impl._M_start;
  # DEBUG D#596 => (long int) _209
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _209
  # DEBUG __n => D#593
  if (_209 != 0B)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _209
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _209
  # DEBUG this => D#585
  # DEBUG D.170247 => D#586
  operator delete (_209);

  <bb 86>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  MEM[(struct  &)__first_208] ={v} {CLOBBER};
  __first_210 = __first_208 + 24;
  # DEBUG __first => __first_210
  goto <bb 83>;

  <bb 87>:
  __cxa_rethrow ();

<L24>:
  __cxa_end_catch ();
  resx 16

<L36>:
  goto <bb 108> (<L13>);

  <bb 90>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2101 => &this_9(D)->D.54835
  # DEBUG this => D#2101
  _35 = this_9(D)->D.54835._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#4212
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#2083
  # DEBUG D#2082 => D#2083
  # DEBUG D#2079 => D#2082
  # DEBUG __first => D#4212
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.135497 => D#2079
  # DEBUG __first => D#4212
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<Router*>*, std::vector<Router*>*> (__position_22, _35, __new_finish_33);
  goto <bb 92>;

<L37>:
  goto <bb 108> (<L13>);

  <bb 92>:
  # DEBUG __new_finish => _91
  # DEBUG D#2102 => &this_9(D)->D.54835
  # DEBUG this => D#2102
  _37 = this_9(D)->D.54835._M_impl._M_finish;
  __first_38 = this_9(D)->D.54835._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 99>;
  else
    goto <bb 93>;

  <bb 93>:

  <bb 94>:
  # __first_86 = PHI <__first_38(93), __first_93(97)>
  # DEBUG __first => __first_86
  # DEBUG __r => __first_86
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#599
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _92 = MEM[(struct _Vector_base *)__first_86]._M_impl._M_start;
  # DEBUG D#596 => (long int) _92
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _92
  # DEBUG __n => D#593
  if (_92 != 0B)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _92
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _92
  # DEBUG this => D#585
  # DEBUG D.135541 => D#586
  operator delete (_92);

  <bb 96>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  MEM[(struct  &)__first_86] ={v} {CLOBBER};
  __first_93 = __first_86 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (_37 == __first_93)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 94>;

  <bb 98>:
  pretmp_224 = this_9(D)->D.54835._M_impl._M_start;

  <bb 99>:
  # prephitmp_18 = PHI <pretmp_224(98), __first_38(92)>
  # DEBUG D#2113 => this_9(D)->D.54835._M_impl._M_end_of_storage
  # DEBUG D#2112 => (long int) D#2113
  # DEBUG D#4206 => this_9(D)->D.54835._M_impl._M_start
  # DEBUG D#2111 => (long int) D#4206
  # DEBUG D#2110 => D#2112 - D#2111
  # DEBUG D#2109 => D#2110 /[ex] 24
  # DEBUG D#2108 => &this_9(D)->D.54835
  # DEBUG D#724 => D#2108
  # DEBUG D#725 => (long unsigned int) D#2109
  # DEBUG __p => D#4206
  # DEBUG this => D#724
  # DEBUG __n => D#725
  # DEBUG D#723 => D#725
  # DEBUG D#722 => D#724
  if (prephitmp_18 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#721 => &D#722->_M_impl
  # DEBUG D#719 => D#721
  # DEBUG D#720 => D#723
  # DEBUG __p => D#4206
  # DEBUG __a => D#719
  # DEBUG __n => D#720
  # DEBUG D#718 => D#720
  # DEBUG D#717 => D#719
  # DEBUG D#715 => D#717
  # DEBUG D#716 => D#718
  # DEBUG __p => D#4206
  # DEBUG this => D#715
  # DEBUG D.135520 => D#716
  operator delete (prephitmp_18);

  <bb 101>:
  this_9(D)->D.54835._M_impl._M_start = __new_finish_212;
  this_9(D)->D.54835._M_impl._M_finish = _91;
  _44 = __new_finish_212 + prephitmp_88;
  this_9(D)->D.54835._M_impl._M_end_of_storage = _44;

  <bb 102>:
  return;

<L25>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#599 => &__x_copy.D.49300
  # DEBUG this => D#599
  # DEBUG D#602 => __x_copy.D.49300._M_impl._M_finish
  # DEBUG D#601 => __x_copy.D.49300._M_impl._M_start
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG D#600 => &__x_copy.D.49300
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _94 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#596 => (long int) _94
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _94
  # DEBUG __n => D#593
  if (_94 != 0B)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _94
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _94
  # DEBUG this => D#585
  # DEBUG D.135558 => D#586
  operator delete (_94);

  <bb 106>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  resx 2

<L35>:

  # __new_finish_1 = PHI <__new_finish_212(89), 0B(107), __new_finish_33(91)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 110>;
  else
    goto <bb 109>;

  <bb 109>:
  goto <bb 115>;

  <bb 110>:
  # DEBUG D#2106 => &this_9(D)->D.54835
  # DEBUG this => D#2106
  _49 = __n_7(D) + __elems_before_357;
  _50 = _49 * 24;
  _51 = __new_finish_212 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 111>:
  # __first_80 = PHI <__first_27(110), __first_96(114)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 119>;
  else
    goto <bb 112>;

  <bb 112>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#599
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _95 = MEM[(struct _Vector_base *)__first_80]._M_impl._M_start;
  # DEBUG D#596 => (long int) _95
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _95
  # DEBUG __n => D#593
  if (_95 != 0B)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _95
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _95
  # DEBUG this => D#585
  # DEBUG D.135582 => D#586
  operator delete (_95);

  <bb 114>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_96 = __first_80 + 24;
  # DEBUG __first => __first_96
  goto <bb 111>;

  <bb 115>:
  # __new_finish_97 = PHI <__new_finish_212(109), __new_finish_99(118)>
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 119>;
  else
    goto <bb 116>;

  <bb 116>:
  # DEBUG __r => __new_finish_97
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#599
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _98 = MEM[(struct _Vector_base *)__new_finish_97]._M_impl._M_start;
  # DEBUG D#596 => (long int) _98
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _98
  # DEBUG __n => D#593
  if (_98 != 0B)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _98
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _98
  # DEBUG this => D#585
  # DEBUG D.135608 => D#586
  operator delete (_98);

  <bb 118>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __first => __new_finish_99
  goto <bb 115>;

  <bb 119>:
  # DEBUG D#2114 => &this_9(D)->D.54835
  # DEBUG D#724 => D#2114
  # DEBUG __p => NULL
  # DEBUG this => D#724
  # DEBUG __n => D#725
  # DEBUG D#723 => D#725
  # DEBUG D#722 => D#724
  if (__new_finish_212 != 0B)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # DEBUG D#721 => &D#722->_M_impl
  # DEBUG D#719 => D#721
  # DEBUG D#720 => D#723
  # DEBUG __p => NULL
  # DEBUG __a => D#719
  # DEBUG __n => D#720
  # DEBUG D#718 => D#720
  # DEBUG D#717 => D#719
  # DEBUG D#715 => D#717
  # DEBUG D#716 => D#718
  # DEBUG __p => NULL
  # DEBUG this => D#715
  # DEBUG D.135623 => D#716
  operator delete (__new_finish_212);

  <bb 121>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 123>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#584 => &this_9(D)->D.54835._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#584
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85141
  # DEBUG this => &__position
  _341 = (long int) __position_22;
  # DEBUG this => &D.85141
  _339 = _341 - _215;
  _340 = _339 /[ex] 24;
  __elems_before_338 = (const size_type) _340;
  # DEBUG __elems_before => __elems_before_338
  # DEBUG D#2115 => &this_9(D)->D.54835
  # DEBUG D#2098 => D#2115
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  goto <bb 65>;

  <bb 124>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#584 => &this_9(D)->D.54835._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#584
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85141
  # DEBUG this => &__position
  _333 = (long int) __position_22;
  # DEBUG this => &D.85141
  _87 = _333 - _215;
  _337 = _87 /[ex] 24;
  __elems_before_326 = (const size_type) _337;
  # DEBUG __elems_before => __elems_before_326
  # DEBUG D#2115 => &this_9(D)->D.54835
  # DEBUG D#2098 => D#2115
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (__len_223 != 0)
    goto <bb 64>;
  else
    goto <bb 66>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<Stats*>*; _ForwardIterator = std::vector<Stats*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIP5StatsSaIS4_EES7_EET0_T_S9_S8_, funcdef_no=5386, decl_uid=90525, cgraph_uid=3634, symbol_order=3635)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<Stats*>*; _ForwardIterator = std::vector<Stats*>*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  struct Stats * * D.170482;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  struct Stats * * _8;
  void * _12;
  long unsigned int _20;
  struct Stats * * const _27;
  struct Stats * * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  struct Stats * * _36;
  struct Stats * * const _37;
  struct Stats * * const _38;
  long int __last.358_39;
  long int __first.359_40;
  long int _41;
  long unsigned int _43;
  struct Stats * * _45;
  struct Stats * * _46;
  struct Stats * * iftmp.356_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_71 = PHI <__first_5(D)(3), __first_10(17)>
  # __result_70 = PHI <__result_4(D)(3), __result_11(17)>
  # DEBUG __cur => __result_70
  # DEBUG __first => __first_71
  # DEBUG __r => __result_70
  # DEBUG __p => NULL
  # DEBUG __value => __first_71
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.139856 => D#20
  if (__result_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_70
  # DEBUG __x => __first_71
  # DEBUG D#2347 => &MEM[(const struct vector *)__first_71].D.63091
  # DEBUG this => D#2347
  # DEBUG __a => NULL
  _27 = MEM[(struct Stats * * *)__first_71];
  # DEBUG D#220 => __first_71
  _28 = MEM[(struct Stats * * *)__first_71 + 8B];
  # DEBUG D#220 => __first_71
  # DEBUG this => D#220
  # DEBUG this => D#220
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 8;
  _33 = (size_type) _32;
  # DEBUG D#2349 => &__result_70->D.63091
  # DEBUG this => D#2349
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#2126 => &D#2349->_M_impl
  # DEBUG this => D#2126
  # DEBUG __a => NULL
  # DEBUG this => D#2126
  # DEBUG __a => NULL
  # DEBUG this => D#2126
  # DEBUG D.120859 => NULL
  MEM[(struct _Vector_impl *)__result_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_end_of_storage = 0B;
  # DEBUG this => D#2349
  # DEBUG __n => NULL
  # DEBUG D#2124 => D#2349
  # DEBUG __n => _33
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _33
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#2118
  # DEBUG D.170480 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_33 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_9 = PHI <__result_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __result_35 = PHI <__result_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.356_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_start = iftmp.356_47;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_finish = iftmp.356_47;
  _36 = iftmp.356_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#2348 => &__result_70->D.63091
  # DEBUG this => D#2348
  _37 = MEM[(struct Stats * * *)__first_71 + 8B];
  # DEBUG D#330 => __first_71
  # DEBUG this => D#330
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(struct Stats * * *)__first_71];
  # DEBUG D#331 => __first_71
  # DEBUG this => D#331
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.170444 => D#2346
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.358_39 = (long int) _37;
  __first.359_40 = (long int) _38;
  _41 = __last.358_39 - __first.359_40;
  _Num_42 = _41 /[ex] 8;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.356_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.356_47 + prephitmp_2;
  __result_70->D.63091._M_impl._M_finish = _45;

  <bb 15>:
  __first_10 = __first_71 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_70 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __result_18 = PHI <__result_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __result_63 = PHI <__result_18(16), __result_4(D)(2)>
  return __result_63;

<L7>:

  # __result_44 = PHI <__result_35(10), __result_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __result_64 = PHI <__result_4(D)(22), __result_17(26)>
  # DEBUG __first => __result_64
  # DEBUG __r => __result_64
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#920
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _8 = MEM[(struct _Vector_base *)__result_64]._M_impl._M_start;
  # DEBUG D#917 => (long int) _8
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _8
  # DEBUG __n => D#914
  if (_8 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _8
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _8
  # DEBUG this => D#906
  # DEBUG D.139881 => D#907
  operator delete (_8);

  <bb 25>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)__result_64] ={v} {CLOBBER};
  __result_17 = __result_64 + 24;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Stats*>; _Alloc = std::allocator<std::vector<Stats*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Stats*>*, std::vector<std::vector<Stats*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Stats*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Stats*>] (_ZNSt6vectorIS_IP5StatsSaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_, funcdef_no=4082, decl_uid=63776, cgraph_uid=2330, symbol_order=2331)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Stats*>; _Alloc = std::allocator<std::vector<Stats*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Stats*>*, std::vector<std::vector<Stats*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Stats*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Stats*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct Stats * * D.170742;
  const ptrdiff_t _Num;
  const long unsigned int D.170692;
  const size_type __len;
  size_type D.170691;
  size_type __n;
  struct vector * D.170682;
  struct vector * D.170670;
  struct vector * __first;
  long unsigned int __n;
  struct Stats * * D.170642;
  const ptrdiff_t _Num;
  struct vector * D.170589;
  struct vector * __first;
  long unsigned int __n;
  struct Stats * * D.170561;
  const ptrdiff_t _Num;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct Stats * * const _17;
  struct vector * prephitmp_18;
  struct vector * _20;
  struct vector * const _23;
  bool _24;
  long int __last.361_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long int pretmp_52;
  long unsigned int _55;
  struct Stats * * const prephitmp_56;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  long int pretmp_66;
  struct vector * _67;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct Stats * * _85;
  long int _87;
  long unsigned int prephitmp_88;
  long unsigned int _90;
  struct vector * _91;
  struct Stats * * _92;
  struct Stats * * _94;
  struct Stats * * _95;
  struct Stats * * _98;
  struct Stats * * const pretmp_100;
  struct Stats * * const _138;
  struct Stats * * const _153;
  struct Stats * * const _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  size_type _159;
  struct Stats * * _162;
  struct Stats * * _171;
  struct Stats * * _172;
  struct Stats * * iftmp.356_173;
  void * _178;
  struct Stats * * _180;
  struct Stats * * const _182;
  long int _183;
  long int _184;
  long int _185;
  long int _186;
  size_type _187;
  const ptrdiff_t pretmp_188;
  struct Stats * * _190;
  struct Stats * * const _191;
  struct Stats * * const _192;
  long int __last.358_193;
  long int __first.359_194;
  long int _195;
  long unsigned int _197;
  struct Stats * * _199;
  long unsigned int _200;
  struct Stats * * _201;
  struct Stats * * iftmp.356_202;
  long unsigned int pretmp_203;
  long unsigned int prephitmp_204;
  void * _207;
  struct Stats * * _209;
  struct vector * _211;
  long int _215;
  long int _216;
  long int _217;
  long unsigned int _219;
  long int pretmp_220;
  struct Stats * * const pretmp_222;
  struct vector * pretmp_224;
  struct Stats * * const _225;
  long int _226;
  long int _227;
  long int _228;
  long int _229;
  size_type _230;
  struct Stats * * _233;
  struct Stats * * _242;
  long unsigned int _243;
  struct Stats * * _244;
  struct Stats * * iftmp.356_245;
  struct Stats * * const pretmp_284;
  const ptrdiff_t prephitmp_317;
  struct vector * const prephitmp_323;
  long int pretmp_324;
  const ptrdiff_t prephitmp_327;
  struct Stats * * const prephitmp_329;
  long int pretmp_331;
  bool _332;
  long int _333;
  const ptrdiff_t pretmp_336;
  difference_type _337;
  long int _339;
  difference_type _340;
  long int _341;
  long int pretmp_343;
  struct Stats * * const pretmp_344;
  long unsigned int pretmp_345;
  long unsigned int prephitmp_346;
  long unsigned int prephitmp_347;
  struct vector * const pretmp_348;
  long unsigned int pretmp_349;
  long int prephitmp_350;
  long int pretmp_351;
  long int _355;
  long int _356;
  bool _358;
  long unsigned int pretmp_370;
  long unsigned int prephitmp_371;
  long unsigned int pretmp_372;
  long unsigned int prephitmp_373;
  long unsigned int pretmp_374;
  long unsigned int prephitmp_375;
  long unsigned int pretmp_378;
  long unsigned int prephitmp_379;

  <bb 2>:
  # DEBUG D#4233 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#4233
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 102>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.63853._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.63853._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 61>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#2347 => &MEM[(const struct vector *)__x_28(D)].D.63091
  # DEBUG this => D#2347
  # DEBUG __a => NULL
  _153 = MEM[(struct Stats * * *)__x_28(D)];
  # DEBUG D#220 => __x_28(D)
  _154 = MEM[(struct Stats * * *)__x_28(D) + 8B];
  # DEBUG D#220 => __x_28(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  _155 = (long int) _154;
  _156 = (long int) _153;
  _157 = _155 - _156;
  _158 = _157 /[ex] 8;
  _159 = (size_type) _158;
  # DEBUG D#2349 => &__x_copy.D.63091
  # DEBUG this => D#2349
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#2126 => &D#2349->_M_impl
  # DEBUG this => D#2126
  # DEBUG __a => NULL
  # DEBUG this => D#2126
  # DEBUG __a => NULL
  # DEBUG this => D#2126
  # DEBUG D.120859 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#2349
  # DEBUG __n => NULL
  # DEBUG D#2124 => D#2349
  # DEBUG __n => _159
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_159 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_345 = (long unsigned int) _157;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _159
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _159
  # DEBUG this => D#2118
  # DEBUG D.170559 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_159 > 2305843009213693951)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _55 = (long unsigned int) _157;
  _172 = operator new (_55);
  pretmp_348 = MEM[(struct vector * const &)this_9(D) + 8];
  pretmp_351 = (long int) pretmp_348;
  pretmp_344 = MEM[(struct Stats * * *)__x_28(D) + 8B];
  pretmp_284 = MEM[(struct Stats * * *)__x_28(D)];
  pretmp_331 = (long int) pretmp_344;
  pretmp_343 = (long int) pretmp_284;
  pretmp_324 = pretmp_331 - pretmp_343;
  pretmp_188 = pretmp_324 /[ex] 8;
  pretmp_370 = (long unsigned int) pretmp_324;

  <bb 9>:
  # iftmp.356_173 = PHI <0B(5), _172(8)>
  # prephitmp_323 = PHI <_12(5), pretmp_348(8)>
  # prephitmp_350 = PHI <_13(5), pretmp_351(8)>
  # prephitmp_346 = PHI <pretmp_345(5), _55(8)>
  # prephitmp_329 = PHI <_153(5), pretmp_284(8)>
  # prephitmp_317 = PHI <_158(5), pretmp_188(8)>
  # prephitmp_371 = PHI <pretmp_345(5), pretmp_370(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = iftmp.356_173;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = iftmp.356_173;
  _162 = iftmp.356_173 + prephitmp_346;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _162;
  # DEBUG D#2348 => &__x_copy.D.63091
  # DEBUG this => D#2348
  # DEBUG D#4226 => MEM[(struct Stats * * *)__x_28(D) + 8B]
  # DEBUG D#330 => __x_28(D)
  # DEBUG this => D#330
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#4225 => MEM[(struct Stats * * *)__x_28(D)]
  # DEBUG D#331 => __x_28(D)
  # DEBUG this => D#331
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#4225
  # DEBUG __last => D#4226
  # DEBUG __result => NULL
  # DEBUG D.170523 => D#2346
  # DEBUG __first => D#4225
  # DEBUG __last => D#4226
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#4225
  # DEBUG __last => D#4226
  # DEBUG __result => NULL
  # DEBUG __first => D#4225
  # DEBUG __last => D#4226
  # DEBUG __result => NULL
  # DEBUG __it => D#4226
  # DEBUG __it$_M_current => D#4226
  # DEBUG __it => D#4225
  # DEBUG __it$_M_current => D#4225
  # DEBUG __first => D#4225
  # DEBUG __last => D#4226
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#4226
  # DEBUG __it => D#4226
  # DEBUG this => NULL
  # DEBUG __it => D#4225
  # DEBUG __it => D#4225
  # DEBUG this => NULL
  # DEBUG __first => D#4225
  # DEBUG __last => D#4226
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#4225
  # DEBUG __last => D#4226
  # DEBUG __result => NULL
  # DEBUG D#4224 => (long int) D#4226
  # DEBUG D#4223 => (long int) D#4225
  # DEBUG D#4222 => D#4224 - D#4223
  # DEBUG _Num => D#4222 /[ex] 8
  if (prephitmp_317 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __builtin_memmove (iftmp.356_173, prephitmp_329, prephitmp_371);

  <bb 11>:
  _171 = iftmp.356_173 + prephitmp_371;
  __x_copy.D.63091._M_impl._M_finish = _171;
  # DEBUG this => this_9(D)
  # DEBUG D#332 => &this_9(D)->D.63853._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#332
  # DEBUG D#4221 => MEM[(struct vector * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.85354
  # DEBUG __rhs => &__position
  # DEBUG this => &D.85354
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_350 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#4221
  if (__n_7(D) < __elems_after_57)
    goto <bb 12>;
  else
    goto <bb 26>;

  <bb 12>:
  # DEBUG D#2671 => &this_9(D)->D.63853
  # DEBUG this => D#2671
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_323 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#4221
  # DEBUG __result => D#4221
  # DEBUG __alloc => D#2352
  # DEBUG D#2351 => D#2352
  # DEBUG D#2350 => D#2351
  # DEBUG __first => __last_61
  # DEBUG __last => D#4221
  # DEBUG __result => D#4221
  # DEBUG D.145586 => D#2350
  # DEBUG __first => __last_61
  # DEBUG __last => D#4221
  # DEBUG __result => D#4221
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<Stats*>*, std::vector<Stats*>*> (__last_61, prephitmp_323, prephitmp_323);

  <bb 13>:
  _62 = this_9(D)->D.63853._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.63853._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#4233
  # DEBUG __last => __last_61
  # DEBUG __result => D#4221
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4233
  # DEBUG __it => D#4233
  # DEBUG __first => D#4233
  # DEBUG __last => __last_61
  # DEBUG __result => D#4221
  # DEBUG __it => D#4221
  # DEBUG __it => D#4221
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4233
  # DEBUG __it => D#4233
  # DEBUG __first => D#4233
  # DEBUG __last => __last_61
  # DEBUG __result => D#4221
  # DEBUG __simple => 0
  # DEBUG __first => D#4233
  # DEBUG __last => __last_61
  # DEBUG __result => D#4221
  __last.361_25 = (long int) __last_61;
  _78 = __last.361_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#4221
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#4233
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4233
  if (__position_22 == _67)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 15>:

  <bb 16>:
  # __old_finish_366 = PHI <prephitmp_323(15), __old_finish_65(19)>
  # __last_367 = PHI <__last_61(15), __last_68(19)>
  # __n_361 = PHI <__n_73(15), __n_58(19)>
  # DEBUG __n => __n_361
  # DEBUG __result => __old_finish_366
  # DEBUG __last => __last_367
  __last_68 = __last_367 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_366 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<Stats*>::operator= (__old_finish_65, __last_68);
  goto <bb 18>;

<L26>:
  goto <bb 104> (<L10>);

  <bb 18>:
  __n_58 = __n_361 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 16>;

  <bb 20>:
  # DEBUG this => &__x_copy
  # DEBUG D#920 => &__x_copy.D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => __x_copy.D.63091._M_impl._M_finish
  # DEBUG D#922 => __x_copy.D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &__x_copy.D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _85 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#917 => (long int) _85
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _85
  # DEBUG __n => D#914
  if (_85 != 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 21>:

  <bb 22>:
  # __position_365 = PHI <__position_22(21), __position_81(25)>
  # DEBUG __first => __position_365
  std::vector<Stats*>::operator= (__position_365, &__x_copy);
  goto <bb 24>;

<L27>:
  goto <bb 104> (<L10>);

  <bb 24>:
  __position_81 = __position_365 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 20>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 22>;

  <bb 26>:
  # DEBUG D#2672 => &this_9(D)->D.63853
  # DEBUG this => D#2672
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#4221
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.145632 => D#2355
  # DEBUG __first => D#4221
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => D#4221
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => D#4221
  # DEBUG __cur => D#4221
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 42>;
  else
    goto <bb 27>;

  <bb 27>:

  <bb 28>:
  # __n_360 = PHI <__n_70(27), __n_176(41)>
  # __old_finish_290 = PHI <prephitmp_323(27), __old_finish_177(41)>
  # DEBUG __cur => __old_finish_290
  # DEBUG __n => __n_360
  # DEBUG __r => __old_finish_290
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.139856 => D#20
  if (__old_finish_290 != 0B)
    goto <bb 29>;
  else
    goto <bb 39>;

  <bb 29>:
  # DEBUG this => __old_finish_290
  # DEBUG __x => &__x_copy
  # DEBUG D#2347 => &__x_copy.D.63091
  # DEBUG this => D#2347
  # DEBUG __a => NULL
  _138 = MEM[(struct Stats * * *)&__x_copy];
  # DEBUG D#220 => &__x_copy
  _182 = MEM[(struct Stats * * *)&__x_copy + 8B];
  # DEBUG D#220 => &__x_copy
  # DEBUG this => D#220
  # DEBUG this => D#220
  _183 = (long int) _182;
  _184 = (long int) _138;
  _185 = _183 - _184;
  _186 = _185 /[ex] 8;
  _187 = (size_type) _186;
  # DEBUG D#2349 => &__old_finish_290->D.63091
  # DEBUG this => D#2349
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#2126 => &D#2349->_M_impl
  # DEBUG this => D#2126
  # DEBUG __a => NULL
  # DEBUG this => D#2126
  # DEBUG __a => NULL
  # DEBUG this => D#2126
  # DEBUG D.120859 => NULL
  MEM[(struct _Vector_impl *)__old_finish_290]._M_start = 0B;
  MEM[(struct _Vector_impl *)__old_finish_290]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__old_finish_290]._M_end_of_storage = 0B;
  # DEBUG this => D#2349
  # DEBUG __n => NULL
  # DEBUG D#2124 => D#2349
  # DEBUG __n => _187
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_187 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  pretmp_372 = (long unsigned int) _185;
  goto <bb 35>;

  <bb 31>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _187
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _187
  # DEBUG this => D#2118
  # DEBUG D.170640 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_187 > 2305843009213693951)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # __old_finish_213 = PHI <__old_finish_290(31)>
  std::__throw_bad_alloc ();

  <bb 33>:
  _200 = (long unsigned int) _185;
  _201 = operator new (_200);
  goto <bb 35>;

  # __old_finish_175 = PHI <__old_finish_290(33)>
<L29>:
  goto <bb 45> (<L19>);

  <bb 35>:
  # iftmp.356_202 = PHI <0B(30), _201(33)>
  # prephitmp_373 = PHI <pretmp_372(30), _200(33)>
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_start = iftmp.356_202;
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_finish = iftmp.356_202;
  _190 = iftmp.356_202 + prephitmp_373;
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_end_of_storage = _190;
  # DEBUG D#2348 => &__old_finish_290->D.63091
  # DEBUG this => D#2348
  _191 = MEM[(struct Stats * * *)&__x_copy + 8B];
  # DEBUG D#330 => &__x_copy
  # DEBUG this => D#330
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _192 = MEM[(struct Stats * * *)&__x_copy];
  # DEBUG D#331 => &__x_copy
  # DEBUG this => D#331
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG D.170604 => D#2346
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => _191
  # DEBUG __it$_M_current => _191
  # DEBUG __it => _192
  # DEBUG __it$_M_current => _192
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _191
  # DEBUG __it => _191
  # DEBUG this => NULL
  # DEBUG __it => _192
  # DEBUG __it => _192
  # DEBUG this => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  __last.358_193 = (long int) _191;
  __first.359_194 = (long int) _192;
  _195 = __last.358_193 - __first.359_194;
  _Num_196 = _195 /[ex] 8;
  # DEBUG _Num => _Num_196
  if (_Num_196 != 0)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  pretmp_374 = (long unsigned int) _195;
  goto <bb 38>;

  <bb 37>:
  _197 = (long unsigned int) _195;
  __builtin_memmove (iftmp.356_202, _192, _197);

  <bb 38>:
  # prephitmp_375 = PHI <pretmp_374(36), _197(37)>
  _199 = iftmp.356_202 + prephitmp_375;
  __old_finish_290->D.63091._M_impl._M_finish = _199;

  <bb 39>:
  __n_176 = __n_360 + 18446744073709551615;
  # DEBUG __n => __n_176
  __old_finish_177 = __old_finish_290 + 24;
  # DEBUG __cur => __old_finish_177
  # DEBUG __cur => __old_finish_177
  # DEBUG __n => __n_176
  if (__n_176 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # __old_finish_221 = PHI <__old_finish_177(39)>
  goto <bb 42>;

  <bb 41>:
  goto <bb 28>;

  <bb 42>:
  # __old_finish_19 = PHI <__old_finish_221(40), prephitmp_323(26)>
  this_9(D)->D.63853._M_impl._M_finish = __old_finish_19;
  # DEBUG D#2673 => &this_9(D)->D.63853
  # DEBUG this => D#2673
  # DEBUG this => &__position
  # DEBUG __first => D#4233
  # DEBUG __last => D#4221
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2352
  # DEBUG D#2351 => D#2352
  # DEBUG D#2350 => D#2351
  # DEBUG __first => D#4233
  # DEBUG __last => D#4221
  # DEBUG __result => NULL
  # DEBUG D.145645 => D#2350
  # DEBUG __first => D#4233
  # DEBUG __last => D#4221
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<Stats*>*, std::vector<Stats*>*> (__position_22, prephitmp_323, __old_finish_19);
  goto <bb 53>;

<L30>:
  goto <bb 104> (<L10>);

<L28>:

  # __old_finish_151 = PHI <__old_finish_175(34), __old_finish_213(44)>
<L19>:
  _178 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_178);
  # DEBUG __first => D#4221
  # DEBUG __last => __old_finish_151
  # DEBUG __first => D#4221
  # DEBUG __last => __old_finish_151

  <bb 46>:
  # __old_finish_179 = PHI <prephitmp_323(45), __old_finish_181(49)>
  # DEBUG __first => __old_finish_179
  if (__old_finish_179 == __old_finish_151)
    goto <bb 50>;
  else
    goto <bb 47>;

  <bb 47>:
  # DEBUG __r => __old_finish_179
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#920
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _180 = MEM[(struct _Vector_base *)__old_finish_179]._M_impl._M_start;
  # DEBUG D#917 => (long int) _180
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _180
  # DEBUG __n => D#914
  if (_180 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _180
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _180
  # DEBUG this => D#906
  # DEBUG D.170582 => D#907
  operator delete (_180);

  <bb 49>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)__old_finish_179] ={v} {CLOBBER};
  __old_finish_181 = __old_finish_179 + 24;
  # DEBUG __first => __old_finish_181
  goto <bb 46>;

  <bb 50>:
  __cxa_rethrow ();

<L21>:
  __cxa_end_catch ();
  resx 13

<L31>:
  goto <bb 104> (<L10>);

  <bb 53>:
  _74 = this_9(D)->D.63853._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.63853._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#4233
  # DEBUG __last => D#4221
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4233
  if (__position_22 == prephitmp_323)
    goto <bb 20>;
  else
    goto <bb 54>;

  <bb 54>:

  <bb 55>:
  # __position_362 = PHI <__position_22(54), __position_84(58)>
  # DEBUG __first => __position_362
  std::vector<Stats*>::operator= (__position_362, &__x_copy);
  goto <bb 57>;

<L32>:
  goto <bb 104> (<L10>);

  <bb 57>:
  __position_84 = __position_362 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_323)
    goto <bb 20>;
  else
    goto <bb 58>;

  <bb 58>:
  goto <bb 55>;

  <bb 59>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _85
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _85
  # DEBUG this => D#906
  # DEBUG D.145678 => D#907
  operator delete (_85);

  <bb 60>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  __x_copy ={v} {CLOBBER};
  goto <bb 102>;

  <bb 61>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _215 = (long int) _23;
  _216 = _13 - _215;
  _217 = _216 /[ex] 24;
  _218 = (const long unsigned int) _217;
  _219 = 768614336404564650 - _218;
  if (__n_7(D) > _219)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 63>:
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.170692
  # DEBUG __b => &__n
  _90 = MAX_EXPR <__n_7(D), _218>;
  __len_223 = _90 + _218;
  # DEBUG __len => __len_223
  # DEBUG D#221 => this_9(D)
  # DEBUG D#221 => this_9(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#2138 => this_9(D)
  # DEBUG this => D#2138
  # DEBUG D#2137 => D#2138
  # DEBUG D#2136 => &D#2137->D.63853
  # DEBUG this => D#2136
  # DEBUG __a => D#2135
  # DEBUG D#2134 => D#2135
  # DEBUG D#2133 => D#2134
  # DEBUG this => D#2133
  _332 = __len_223 > 768614336404564650;
  _358 = _218 > __len_223;
  _24 = _332 | _358;
  if (_24 != 0)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 64>:
  pretmp_349 = __len_223 * 24;

  <bb 65>:
  # __elems_before_268 = PHI <__elems_before_338(123), __elems_before_326(64)>
  # _355 = PHI <_339(123), _87(64)>
  # prephitmp_347 = PHI <18446744073709551600(123), pretmp_349(64)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#612 => &this_9(D)->D.63853._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#612
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85387
  # DEBUG this => &__position
  # DEBUG this => &D.85387
  # DEBUG __elems_before => __elems_before_268
  # DEBUG D#2683 => &this_9(D)->D.63853
  # DEBUG D#2146 => D#2683
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  # DEBUG D#2144 => &D#2145->_M_impl
  # DEBUG D#2143 => D#2144
  # DEBUG __n => NULL
  # DEBUG __a => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2140 => D#2142
  # DEBUG D#2141 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2140
  # DEBUG D.170680 => D#2141
  # DEBUG D#2139 => D#2140
  # DEBUG D#2133 => D#2139
  # DEBUG this => D#2133
  _211 = operator new (prephitmp_347);

  <bb 66>:
  # __new_finish_212 = PHI <0B(124), _211(65)>
  # __elems_before_357 = PHI <__elems_before_326(124), __elems_before_268(65)>
  # _356 = PHI <_87(124), _355(65)>
  # prephitmp_88 = PHI <0(124), prephitmp_347(65)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2667 => &this_9(D)->D.63853
  # DEBUG this => D#2667
  _26 = (long unsigned int) _356;
  __first_27 = __new_finish_212 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.145686 => D#2355
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 67>:
  # __n_369 = PHI <__n_205(79), __n_7(D)(66)>
  # __first_368 = PHI <__first_206(79), __first_27(66)>
  # DEBUG __cur => __first_368
  # DEBUG __n => __n_369
  # DEBUG __r => __first_368
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#20 => 24
  # DEBUG __p => NULL
  # DEBUG D.139856 => D#20
  if (__first_368 != 0B)
    goto <bb 68>;
  else
    goto <bb 78>;

  <bb 68>:
  # DEBUG this => __first_368
  # DEBUG __x => __x_28(D)
  # DEBUG D#2347 => &MEM[(const struct vector *)__x_28(D)].D.63091
  # DEBUG this => D#2347
  # DEBUG __a => NULL
  _17 = MEM[(struct Stats * * *)__x_28(D)];
  # DEBUG D#220 => __x_28(D)
  _225 = MEM[(struct Stats * * *)__x_28(D) + 8B];
  # DEBUG D#220 => __x_28(D)
  # DEBUG this => D#220
  # DEBUG this => D#220
  _226 = (long int) _225;
  _227 = (long int) _17;
  _228 = _226 - _227;
  _229 = _228 /[ex] 8;
  _230 = (size_type) _229;
  # DEBUG D#2349 => &__first_368->D.63091
  # DEBUG this => D#2349
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#2126 => &D#2349->_M_impl
  # DEBUG this => D#2126
  # DEBUG __a => NULL
  # DEBUG this => D#2126
  # DEBUG __a => NULL
  # DEBUG this => D#2126
  # DEBUG D.120859 => NULL
  MEM[(struct _Vector_impl *)__first_368]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_368]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_368]._M_end_of_storage = 0B;
  # DEBUG this => D#2349
  # DEBUG __n => NULL
  # DEBUG D#2124 => D#2349
  # DEBUG __n => _230
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_230 != 0)
    goto <bb 70>;
  else
    goto <bb 69>;

  <bb 69>:
  pretmp_203 = (long unsigned int) _228;
  goto <bb 75>;

  <bb 70>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _230
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _230
  # DEBUG this => D#2118
  # DEBUG D.170740 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_230 > 2305843009213693951)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # __first_174 = PHI <__first_368(70)>
  std::__throw_bad_alloc ();

  <bb 72>:
  _243 = (long unsigned int) _228;
  _244 = operator new (_243);
  goto <bb 74>;

  # __first_152 = PHI <__first_368(72)>
<L34>:
  goto <bb 82> (<L22>);

  <bb 74>:
  pretmp_222 = MEM[(struct Stats * * *)__x_28(D) + 8B];
  pretmp_100 = MEM[(struct Stats * * *)__x_28(D)];
  pretmp_220 = (long int) pretmp_222;
  pretmp_52 = (long int) pretmp_100;
  pretmp_66 = pretmp_220 - pretmp_52;
  pretmp_336 = pretmp_66 /[ex] 8;
  pretmp_378 = (long unsigned int) pretmp_66;

  <bb 75>:
  # iftmp.356_245 = PHI <0B(69), _244(74)>
  # prephitmp_56 = PHI <_17(69), pretmp_100(74)>
  # prephitmp_327 = PHI <_229(69), pretmp_336(74)>
  # prephitmp_204 = PHI <pretmp_203(69), _243(74)>
  # prephitmp_379 = PHI <pretmp_203(69), pretmp_378(74)>
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_start = iftmp.356_245;
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_finish = iftmp.356_245;
  _233 = iftmp.356_245 + prephitmp_204;
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_end_of_storage = _233;
  # DEBUG D#2348 => &__first_368->D.63091
  # DEBUG this => D#2348
  # DEBUG D#4232 => MEM[(struct Stats * * *)__x_28(D) + 8B]
  # DEBUG D#330 => __x_28(D)
  # DEBUG this => D#330
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#4231 => MEM[(struct Stats * * *)__x_28(D)]
  # DEBUG D#331 => __x_28(D)
  # DEBUG this => D#331
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#4231
  # DEBUG __last => D#4232
  # DEBUG __result => NULL
  # DEBUG D.170704 => D#2346
  # DEBUG __first => D#4231
  # DEBUG __last => D#4232
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#4231
  # DEBUG __last => D#4232
  # DEBUG __result => NULL
  # DEBUG __first => D#4231
  # DEBUG __last => D#4232
  # DEBUG __result => NULL
  # DEBUG __it => D#4232
  # DEBUG __it$_M_current => D#4232
  # DEBUG __it => D#4231
  # DEBUG __it$_M_current => D#4231
  # DEBUG __first => D#4231
  # DEBUG __last => D#4232
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#4232
  # DEBUG __it => D#4232
  # DEBUG this => NULL
  # DEBUG __it => D#4231
  # DEBUG __it => D#4231
  # DEBUG this => NULL
  # DEBUG __first => D#4231
  # DEBUG __last => D#4232
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#4231
  # DEBUG __last => D#4232
  # DEBUG __result => NULL
  # DEBUG D#4230 => (long int) D#4232
  # DEBUG D#4229 => (long int) D#4231
  # DEBUG D#4228 => D#4230 - D#4229
  # DEBUG _Num => D#4228 /[ex] 8
  if (prephitmp_327 != 0)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  __builtin_memmove (iftmp.356_245, prephitmp_56, prephitmp_379);

  <bb 77>:
  _242 = iftmp.356_245 + prephitmp_379;
  __first_368->D.63091._M_impl._M_finish = _242;

  <bb 78>:
  __n_205 = __n_369 + 18446744073709551615;
  # DEBUG __n => __n_205
  __first_206 = __first_368 + 24;
  # DEBUG __cur => __first_206
  # DEBUG __cur => __first_206
  # DEBUG __n => __n_205
  if (__n_205 == 0)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:
  goto <bb 67>;

  <bb 80>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2668 => &this_9(D)->D.63853
  # DEBUG this => D#2668
  # DEBUG this => &__position
  _31 = this_9(D)->D.63853._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#4233
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2354
  # DEBUG D#2353 => D#2354
  # DEBUG D#2350 => D#2353
  # DEBUG __first => _31
  # DEBUG __last => D#4233
  # DEBUG __result => NULL
  # DEBUG D.145707 => D#2350
  # DEBUG __first => _31
  # DEBUG __last => D#4233
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<Stats*>*, std::vector<Stats*>*> (_31, __position_22, __new_finish_212);
  goto <bb 90>;

<L33>:

  # __first_150 = PHI <__first_152(73), __first_174(81)>
<L22>:
  _207 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_207);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_150
  # DEBUG __first => __first_27
  # DEBUG __last => __first_150

  <bb 83>:
  # __first_208 = PHI <__first_27(82), __first_210(86)>
  # DEBUG __first => __first_208
  if (__first_208 == __first_150)
    goto <bb 87>;
  else
    goto <bb 84>;

  <bb 84>:
  # DEBUG __r => __first_208
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#920
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _209 = MEM[(struct _Vector_base *)__first_208]._M_impl._M_start;
  # DEBUG D#917 => (long int) _209
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _209
  # DEBUG __n => D#914
  if (_209 != 0B)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _209
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _209
  # DEBUG this => D#906
  # DEBUG D.170663 => D#907
  operator delete (_209);

  <bb 86>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)__first_208] ={v} {CLOBBER};
  __first_210 = __first_208 + 24;
  # DEBUG __first => __first_210
  goto <bb 83>;

  <bb 87>:
  __cxa_rethrow ();

<L24>:
  __cxa_end_catch ();
  resx 16

<L36>:
  goto <bb 108> (<L13>);

  <bb 90>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2669 => &this_9(D)->D.63853
  # DEBUG this => D#2669
  _35 = this_9(D)->D.63853._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#4233
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#2354
  # DEBUG D#2353 => D#2354
  # DEBUG D#2350 => D#2353
  # DEBUG __first => D#4233
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.145726 => D#2350
  # DEBUG __first => D#4233
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<Stats*>*, std::vector<Stats*>*> (__position_22, _35, __new_finish_33);
  goto <bb 92>;

<L37>:
  goto <bb 108> (<L13>);

  <bb 92>:
  # DEBUG __new_finish => _91
  # DEBUG D#2670 => &this_9(D)->D.63853
  # DEBUG this => D#2670
  _37 = this_9(D)->D.63853._M_impl._M_finish;
  __first_38 = this_9(D)->D.63853._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 99>;
  else
    goto <bb 93>;

  <bb 93>:

  <bb 94>:
  # __first_86 = PHI <__first_38(93), __first_93(97)>
  # DEBUG __first => __first_86
  # DEBUG __r => __first_86
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#920
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _92 = MEM[(struct _Vector_base *)__first_86]._M_impl._M_start;
  # DEBUG D#917 => (long int) _92
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _92
  # DEBUG __n => D#914
  if (_92 != 0B)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _92
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _92
  # DEBUG this => D#906
  # DEBUG D.145770 => D#907
  operator delete (_92);

  <bb 96>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)__first_86] ={v} {CLOBBER};
  __first_93 = __first_86 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (_37 == __first_93)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 94>;

  <bb 98>:
  pretmp_224 = this_9(D)->D.63853._M_impl._M_start;

  <bb 99>:
  # prephitmp_18 = PHI <pretmp_224(98), __first_38(92)>
  # DEBUG D#2681 => this_9(D)->D.63853._M_impl._M_end_of_storage
  # DEBUG D#2680 => (long int) D#2681
  # DEBUG D#4227 => this_9(D)->D.63853._M_impl._M_start
  # DEBUG D#2679 => (long int) D#4227
  # DEBUG D#2678 => D#2680 - D#2679
  # DEBUG D#2677 => D#2678 /[ex] 24
  # DEBUG D#2676 => &this_9(D)->D.63853
  # DEBUG D#935 => D#2676
  # DEBUG D#936 => (long unsigned int) D#2677
  # DEBUG __p => D#4227
  # DEBUG this => D#935
  # DEBUG __n => D#936
  # DEBUG D#934 => D#936
  # DEBUG D#933 => D#935
  if (prephitmp_18 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#932 => &D#933->_M_impl
  # DEBUG D#930 => D#932
  # DEBUG D#931 => D#934
  # DEBUG __p => D#4227
  # DEBUG __a => D#930
  # DEBUG __n => D#931
  # DEBUG D#929 => D#931
  # DEBUG D#928 => D#930
  # DEBUG D#926 => D#928
  # DEBUG D#927 => D#929
  # DEBUG __p => D#4227
  # DEBUG this => D#926
  # DEBUG D.145749 => D#927
  operator delete (prephitmp_18);

  <bb 101>:
  this_9(D)->D.63853._M_impl._M_start = __new_finish_212;
  this_9(D)->D.63853._M_impl._M_finish = _91;
  _44 = __new_finish_212 + prephitmp_88;
  this_9(D)->D.63853._M_impl._M_end_of_storage = _44;

  <bb 102>:
  return;

<L25>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#920 => &__x_copy.D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => __x_copy.D.63091._M_impl._M_finish
  # DEBUG D#922 => __x_copy.D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &__x_copy.D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _94 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#917 => (long int) _94
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _94
  # DEBUG __n => D#914
  if (_94 != 0B)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _94
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _94
  # DEBUG this => D#906
  # DEBUG D.145787 => D#907
  operator delete (_94);

  <bb 106>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  resx 2

<L35>:

  # __new_finish_1 = PHI <__new_finish_212(89), 0B(107), __new_finish_33(91)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 110>;
  else
    goto <bb 109>;

  <bb 109>:
  goto <bb 115>;

  <bb 110>:
  # DEBUG D#2674 => &this_9(D)->D.63853
  # DEBUG this => D#2674
  _49 = __n_7(D) + __elems_before_357;
  _50 = _49 * 24;
  _51 = __new_finish_212 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 111>:
  # __first_80 = PHI <__first_27(110), __first_96(114)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 119>;
  else
    goto <bb 112>;

  <bb 112>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#920
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _95 = MEM[(struct _Vector_base *)__first_80]._M_impl._M_start;
  # DEBUG D#917 => (long int) _95
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _95
  # DEBUG __n => D#914
  if (_95 != 0B)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _95
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _95
  # DEBUG this => D#906
  # DEBUG D.145811 => D#907
  operator delete (_95);

  <bb 114>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_96 = __first_80 + 24;
  # DEBUG __first => __first_96
  goto <bb 111>;

  <bb 115>:
  # __new_finish_97 = PHI <__new_finish_212(109), __new_finish_99(118)>
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 119>;
  else
    goto <bb 116>;

  <bb 116>:
  # DEBUG __r => __new_finish_97
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#920
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _98 = MEM[(struct _Vector_base *)__new_finish_97]._M_impl._M_start;
  # DEBUG D#917 => (long int) _98
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _98
  # DEBUG __n => D#914
  if (_98 != 0B)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _98
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _98
  # DEBUG this => D#906
  # DEBUG D.145837 => D#907
  operator delete (_98);

  <bb 118>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __first => __new_finish_99
  goto <bb 115>;

  <bb 119>:
  # DEBUG D#2682 => &this_9(D)->D.63853
  # DEBUG D#935 => D#2682
  # DEBUG __p => NULL
  # DEBUG this => D#935
  # DEBUG __n => D#936
  # DEBUG D#934 => D#936
  # DEBUG D#933 => D#935
  if (__new_finish_212 != 0B)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # DEBUG D#932 => &D#933->_M_impl
  # DEBUG D#930 => D#932
  # DEBUG D#931 => D#934
  # DEBUG __p => NULL
  # DEBUG __a => D#930
  # DEBUG __n => D#931
  # DEBUG D#929 => D#931
  # DEBUG D#928 => D#930
  # DEBUG D#926 => D#928
  # DEBUG D#927 => D#929
  # DEBUG __p => NULL
  # DEBUG this => D#926
  # DEBUG D.145852 => D#927
  operator delete (__new_finish_212);

  <bb 121>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 123>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#612 => &this_9(D)->D.63853._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#612
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85387
  # DEBUG this => &__position
  _341 = (long int) __position_22;
  # DEBUG this => &D.85387
  _339 = _341 - _215;
  _340 = _339 /[ex] 24;
  __elems_before_338 = (const size_type) _340;
  # DEBUG __elems_before => __elems_before_338
  # DEBUG D#2683 => &this_9(D)->D.63853
  # DEBUG D#2146 => D#2683
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  goto <bb 65>;

  <bb 124>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#612 => &this_9(D)->D.63853._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#612
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.85387
  # DEBUG this => &__position
  _333 = (long int) __position_22;
  # DEBUG this => &D.85387
  _87 = _333 - _215;
  _337 = _87 /[ex] 24;
  __elems_before_326 = (const size_type) _337;
  # DEBUG __elems_before => __elems_before_326
  # DEBUG D#2683 => &this_9(D)->D.63853
  # DEBUG D#2146 => D#2683
  # DEBUG __n => NULL
  # DEBUG this => D#2146
  # DEBUG D#2145 => D#2146
  if (__len_223 != 0)
    goto <bb 64>;
  else
    goto <bb 66>;

}



;; Function void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = std::vector<Stats*>; _Alloc = std::allocator<std::vector<Stats*> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Stats*>] (_ZNSt6vectorIS_IP5StatsSaIS1_EESaIS3_EE6resizeEmS3_, funcdef_no=2823, decl_uid=63518, cgraph_uid=1071, symbol_order=1072)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = std::vector<Stats*>; _Alloc = std::allocator<std::vector<Stats*> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Stats*>] (struct vector * const this, size_type __new_size, struct value_type & restrict __x)
{
  struct vector * __pos;
  struct iterator __position;
  long int _5;
  long unsigned int _6;
  long unsigned int _8;
  struct vector * const _11;
  struct vector * const _12;
  long int _13;
  long int _14;
  long int _15;
  size_type _16;
  struct Stats * * _18;

  <bb 2>:
  _11 = MEM[(struct vector * *)this_3(D)];
  # DEBUG D#221 => this_3(D)
  _12 = MEM[(struct vector * *)this_3(D) + 8B];
  # DEBUG D#221 => this_3(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _5 = (long int) _12;
  _13 = (long int) _11;
  _14 = _5 - _13;
  _15 = _14 /[ex] 24;
  _16 = (size_type) _15;
  if (__new_size_4(D) > _16)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#221 => this_3(D)
  # DEBUG D#221 => this_3(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _6 = __new_size_4(D) - _16;
  # DEBUG this => this_3(D)
  # DEBUG D#332 => &this_3(D)->D.63853._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#332
  # DEBUG this => this_3(D)
  MEM[(struct __normal_iterator *)&__position] = _12;
  # DEBUG __n => _6
  # DEBUG __x => __x_7(D)
  std::vector<std::vector<Stats*> >::_M_fill_insert (this_3(D), __position, _6, __x_7(D));
  goto <bb 12>;

  <bb 4>:
  # DEBUG D#221 => this_3(D)
  # DEBUG D#221 => this_3(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  if (__new_size_4(D) < _16)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  _8 = __new_size_4(D) * 24;
  __pos_9 = _11 + _8;
  # DEBUG D#946 => this_3(D)
  # DEBUG __pos => __pos_9
  # DEBUG D#945 => D#946
  # DEBUG this => D#945
  # DEBUG D#944 => &D#945->D.63853
  # DEBUG this => D#944
  # DEBUG __first => __pos_9
  # DEBUG __last => _12
  # DEBUG __first => __pos_9
  if (__pos_9 == _12)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  MEM[(struct vector * *)this_3(D) + 8B] = __pos_9;
  goto <bb 12>;

  <bb 7>:

  <bb 8>:
  # __pos_35 = PHI <__pos_9(7), __pos_19(11)>
  # DEBUG __first => __pos_35
  # DEBUG __r => __pos_35
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#920
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _18 = MEM[(struct _Vector_base *)__pos_35]._M_impl._M_start;
  # DEBUG D#917 => (long int) _18
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _18
  # DEBUG __n => D#914
  if (_18 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _18
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _18
  # DEBUG this => D#906
  # DEBUG D.145908 => D#907
  operator delete (_18);

  <bb 10>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)__pos_35] ={v} {CLOBBER};
  __pos_19 = __pos_35 + 24;
  # DEBUG __first => __pos_19
  # DEBUG __first => __pos_19
  if (_12 == __pos_19)
    goto <bb 6>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 8>;

  <bb 12>:
  return;

}



;; Function std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Reuse_or_alloc_node; _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Flit*> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::pair<const int, Flit*> >*] (_ZNSt8_Rb_treeIiSt4pairIKiP4FlitESt10_Select1stIS4_ESt4lessIiESaIS4_EE7_M_copyINSA_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS4_EPKSE_SF_RT_, funcdef_no=5436, decl_uid=91031, cgraph_uid=3684, symbol_order=3685)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Reuse_or_alloc_node; _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Flit*> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::pair<const int, Flit*> >*] (struct _Rb_tree * const this, const struct _Rb_tree_node * __x, struct _Rb_tree_node * __p, struct _Reuse_or_alloc_node & __node_gen)
{
  bool __node_gen___M_nodes_lsm.7202;
  struct _Rb_tree_node_base * __node_gen___M_nodes_lsm.7201;
  bool __node_gen___M_nodes_lsm.7200;
  struct _Rb_tree_node_base * __node_gen___M_nodes_lsm.7199;
  struct _Rb_tree_node * D.170950;
  struct _Rb_tree_node_base * D.170920;
  struct _Rb_tree_node * __node;
  struct _Rb_tree_node * D.170917;
  struct _Rb_tree_node * D.170905;
  struct _Rb_tree_node_base * D.170875;
  struct _Rb_tree_node * __node;
  struct _Rb_tree_node * D.170872;
  struct _Rb_tree_node_base * _13;
  struct _Rb_tree_node * _15;
  _Rb_tree_color _17;
  struct _Rb_tree_node_base * _20;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node * _23;
  void * _26;
  struct _Rb_tree_node_base * const _33;
  _Rb_tree_color _36;
  struct _Rb_tree_node_base * _37;
  struct _Rb_tree_node_base * _41;
  struct _Rb_tree_node_base * _45;
  struct _Rb_tree_node_base * _46;
  struct _Rb_tree_node_base * _49;
  struct _Rb_tree_node_base * _50;
  struct _Rb_tree_node_base * _51;
  struct _Rb_tree_node_base * _52;
  struct _Rb_tree_node_base * _53;
  struct _Rb_tree_node_base * _54;
  struct _Rb_tree_node * _55;
  struct _Rb_tree_node_base * _62;
  struct _Rb_tree_node_base * _63;
  struct _Rb_tree_node_base * _64;
  struct _Rb_tree_node_base * _66;
  struct _Rb_tree_node_base * _67;
  struct _Rb_tree_node * _68;
  struct _Rb_tree_node_base * _76;
  struct _Rb_tree_node_base * _107;
  struct _Rb_tree_node_base * _110;
  struct _Rb_tree_node_base * _125;

  <bb 2>:
  # DEBUG D#2765 => this_8(D)
  # DEBUG __x => __x_9(D)
  # DEBUG __node_gen => __node_gen_10(D)
  # DEBUG this => D#2765
  # DEBUG this => __x_9(D)
  # DEBUG D#4241 => &__x_9(D)->_M_value_field
  # DEBUG __r => D#4241
  # DEBUG this => __node_gen_10(D)
  # DEBUG __arg => D#4241
  # DEBUG this => __node_gen_10(D)
  _37 = __node_gen_10(D)->_M_nodes;
  if (_37 == 0B)
    goto <bb 46>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG __node => _37
  _49 = _37->_M_parent;
  __node_gen_10(D)->_M_nodes = _49;
  if (_49 != 0B)
    goto <bb 4>;
  else
    goto <bb 14>;

  <bb 4>:
  _50 = _49->_M_right;
  if (_37 == _50)
    goto <bb 5>;
  else
    goto <bb 13>;

  <bb 5>:
  _49->_M_right = 0B;
  _51 = _49->_M_left;
  if (_51 != 0B)
    goto <bb 6>;
  else
    goto <bb 44>;

  <bb 6>:
  __node_gen_10(D)->_M_nodes = _51;
  # DEBUG this => __node_gen_10(D)
  _76 = _51->_M_right;
  if (_76 == 0B)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 7>:

  <bb 8>:
  # _21 = PHI <_76(7), _53(9)>
  _53 = _21->_M_right;
  if (_53 == 0B)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  # _52 = PHI <_21(8)>

  <bb 52>:
  __node_gen_10(D)->_M_nodes = _52;

  <bb 11>:
  # _107 = PHI <_52(52), _51(6)>
  _54 = _107->_M_left;
  if (_54 != 0B)
    goto <bb 12>;
  else
    goto <bb 44>;

  <bb 12>:
  __node_gen_10(D)->_M_nodes = _54;
  goto <bb 45>;

  <bb 13>:
  _49->_M_left = 0B;
  goto <bb 45>;

  <bb 14>:
  __node_gen_10(D)->_M_root = 0B;
  goto <bb 45>;

  <bb 15>:
  # __p_48 = PHI <_55(46), _37(54)>
  # DEBUG __tmp => NULL
  _17 = __x_9(D)->D.80728._M_color;
  __p_48->D.80728._M_color = _17;
  __p_48->D.80728._M_left = 0B;
  __p_48->D.80728._M_right = 0B;
  # DEBUG __top => NULL
  __p_48->D.80728._M_parent = __p_11(D);
  _13 = __x_9(D)->D.80728._M_right;
  if (_13 != 0B)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 16>:
  _33 = MEM[(struct _Rb_tree_node_base * *)__x_9(D) + 24B];
  # DEBUG D#614 => __x_9(D)
  # DEBUG __x => D#614
  _15 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Reuse_or_alloc_node> (this_8(D), _33, __p_48, __node_gen_10(D));

  <bb 17>:
  __p_48->D.80728._M_right = _15;

  <bb 18>:
  # DEBUG __p => NULL
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_9(D) + 16B];
  # DEBUG D#613 => __x_9(D)
  # DEBUG __x => D#613
  # DEBUG __x => NULL
  # DEBUG __p => __p_48
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:

  <bb 57>:
  return __p_48;

  <bb 20>:

  <bb 21>:
  # __x_72 = PHI <__x_31(20), __x_32(40)>
  # __p_126 = PHI <__p_48(20), __p_61(40)>
  # DEBUG __p => __p_126
  # DEBUG __x => __x_72
  # DEBUG D#2765 => this_8(D)
  # DEBUG __x => __x_72
  # DEBUG __node_gen => __node_gen_10(D)
  # DEBUG this => D#2765
  # DEBUG this => __x_72
  # DEBUG D#4242 => &__x_72->_M_value_field
  # DEBUG __r => D#4242
  # DEBUG this => __node_gen_10(D)
  # DEBUG __arg => D#4242
  # DEBUG this => __node_gen_10(D)
  _41 = __node_gen_10(D)->_M_nodes;
  if (_41 == 0B)
    goto <bb 49>;
  else
    goto <bb 22>;

  <bb 22>:
  # DEBUG __node => _41
  _62 = _41->_M_parent;
  __node_gen_10(D)->_M_nodes = _62;
  if (_62 != 0B)
    goto <bb 23>;
  else
    goto <bb 33>;

  <bb 23>:
  _63 = _62->_M_right;
  if (_41 == _63)
    goto <bb 24>;
  else
    goto <bb 32>;

  <bb 24>:
  _62->_M_right = 0B;
  _64 = _62->_M_left;
  if (_64 != 0B)
    goto <bb 25>;
  else
    goto <bb 47>;

  <bb 25>:
  __node_gen_10(D)->_M_nodes = _64;
  # DEBUG this => __node_gen_10(D)
  _46 = _64->_M_right;
  if (_46 == 0B)
    goto <bb 30>;
  else
    goto <bb 26>;

  <bb 26>:

  <bb 27>:
  # _125 = PHI <_46(26), _66(28)>
  _66 = _125->_M_right;
  if (_66 == 0B)
    goto <bb 29>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 27>;

  <bb 29>:
  # _45 = PHI <_125(27)>

  <bb 51>:
  __node_gen_10(D)->_M_nodes = _45;

  <bb 30>:
  # _110 = PHI <_45(51), _64(25)>
  _67 = _110->_M_left;
  if (_67 != 0B)
    goto <bb 31>;
  else
    goto <bb 47>;

  <bb 31>:
  __node_gen_10(D)->_M_nodes = _67;
  goto <bb 48>;

  <bb 32>:
  _62->_M_left = 0B;
  goto <bb 48>;

  <bb 33>:
  __node_gen_10(D)->_M_root = 0B;
  goto <bb 48>;

  <bb 34>:
  # DEBUG __tmp => _68
  # DEBUG D#2149 => D#2401
  # DEBUG __node => _68
  # DEBUG __x => D#4242
  # DEBUG this => D#2149
  # DEBUG D#2148 => D#2149
  # DEBUG this => _68
  # DEBUG D#4244 => &_68->_M_value_field
  # DEBUG __r => D#4244
  # DEBUG D#1901 => D#2148
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#4244
  # DEBUG __val => D#4242
  # DEBUG this => D#2147
  # DEBUG D#20 => 16
  # DEBUG __p => D#4244
  # DEBUG D.135975 => D#20
  MEM[(struct pair *)_68 + 32B] = MEM[(const struct pair &)__x_72 + 32];

  <bb 35>:
  # __p_61 = PHI <_68(34), _41(56)>
  # DEBUG __tmp => NULL
  _36 = __x_72->D.80728._M_color;
  __p_61->D.80728._M_color = _36;
  __p_61->D.80728._M_left = 0B;
  __p_61->D.80728._M_right = 0B;
  # DEBUG __y => NULL
  __p_126->D.80728._M_left = __p_61;
  __p_61->D.80728._M_parent = __p_126;
  _20 = __x_72->D.80728._M_right;
  if (_20 != 0B)
    goto <bb 36>;
  else
    goto <bb 39>;

  <bb 36>:
  # DEBUG D#614 => __x_72
  # DEBUG __x => D#614
  _23 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Reuse_or_alloc_node> (this_8(D), _20, __p_61, __node_gen_10(D));
  goto <bb 38>;

<L14>:
  goto <bb 42> (<L10>);

  <bb 38>:
  __p_61->D.80728._M_right = _23;

  <bb 39>:
  # DEBUG __p => NULL
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#613 => __x_72
  # DEBUG __x => D#613
  # DEBUG __x => NULL
  # DEBUG __p => __p_61
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 19>;
  else
    goto <bb 40>;

  <bb 40>:
  goto <bb 21>;

<L13>:

<L10>:
  _26 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_26);
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (this_8(D), __p_48);
  __cxa_rethrow ();

<L12>:
  __cxa_end_catch ();
  resx 2

  <bb 44>:

  <bb 53>:

  <bb 45>:

  <bb 54>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#2760 => __node_gen_10(D)->_M_t
  # DEBUG D#1906 => D#2760
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#2759 => __node_gen_10(D)->_M_t
  # DEBUG D#2149 => D#2759
  # DEBUG __node => NULL
  # DEBUG __x => D#4241
  # DEBUG this => D#2149
  # DEBUG D#2148 => D#2149
  # DEBUG this => NULL
  # DEBUG D#4245 => &MEM[(struct _Rb_tree_node *)_37]._M_value_field
  # DEBUG __r => D#4245
  # DEBUG D#1901 => D#2148
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#4245
  # DEBUG __val => D#4241
  # DEBUG this => D#2147
  # DEBUG D#20 => 16
  # DEBUG __p => D#4245
  # DEBUG D.135975 => D#20
  MEM[(struct pair *)_37 + 32B] = MEM[(const struct pair &)__x_9(D) + 32];
  goto <bb 15>;

  <bb 46>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#2763 => __node_gen_10(D)
  # DEBUG __arg => D#4241
  # DEBUG D#2764 => D#2763
  # DEBUG this => D#2764
  # DEBUG D#2402 => D#2761
  # DEBUG __x => D#4241
  # DEBUG this => D#2402
  # DEBUG D#2401 => D#2402
  # DEBUG D#2400 => D#2402
  # DEBUG D#2399 => D#2400
  # DEBUG this => D#2399
  # DEBUG D#2398 => D#2399
  # DEBUG this => D#2398
  # DEBUG __n => 1
  # DEBUG __a => D#2397
  # DEBUG D#2396 => D#2397
  # DEBUG D#2394 => D#2396
  # DEBUG D#2395 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#2394
  # DEBUG D.170889 => D#2395
  # DEBUG D#2393 => D#2394
  # DEBUG D#2392 => D#2393
  # DEBUG this => D#2392
  _55 = operator new (48);
  # DEBUG __tmp => _55
  # DEBUG D#2149 => D#2401
  # DEBUG __node => _55
  # DEBUG __x => D#4241
  # DEBUG this => D#2149
  # DEBUG D#2148 => D#2149
  # DEBUG this => _55
  # DEBUG D#4246 => &_55->_M_value_field
  # DEBUG __r => D#4246
  # DEBUG D#1901 => D#2148
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#4246
  # DEBUG __val => D#4241
  # DEBUG this => D#2147
  # DEBUG D#20 => 16
  # DEBUG __p => D#4246
  # DEBUG D.135975 => D#20
  MEM[(struct pair *)_55 + 32B] = MEM[(const struct pair &)__x_9(D) + 32];
  goto <bb 15>;

  <bb 47>:

  <bb 55>:

  <bb 48>:

  <bb 56>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#2760 => __node_gen_10(D)->_M_t
  # DEBUG D#1906 => D#2760
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#2759 => __node_gen_10(D)->_M_t
  # DEBUG D#2149 => D#2759
  # DEBUG __node => NULL
  # DEBUG __x => D#4242
  # DEBUG this => D#2149
  # DEBUG D#2148 => D#2149
  # DEBUG this => NULL
  # DEBUG D#4243 => &MEM[(struct _Rb_tree_node *)_41]._M_value_field
  # DEBUG __r => D#4243
  # DEBUG D#1901 => D#2148
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#4243
  # DEBUG __val => D#4242
  # DEBUG this => D#2147
  # DEBUG D#20 => 16
  # DEBUG __p => D#4243
  # DEBUG D.135975 => D#20
  MEM[(struct pair *)_41 + 32B] = MEM[(const struct pair &)__x_72 + 32];
  goto <bb 35>;

  <bb 49>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#2763 => __node_gen_10(D)
  # DEBUG __arg => D#4242
  # DEBUG D#2764 => D#2763
  # DEBUG this => D#2764
  # DEBUG D#2402 => D#2761
  # DEBUG __x => D#4242
  # DEBUG this => D#2402
  # DEBUG D#2401 => D#2402
  # DEBUG D#2400 => D#2402
  # DEBUG D#2399 => D#2400
  # DEBUG this => D#2399
  # DEBUG D#2398 => D#2399
  # DEBUG this => D#2398
  # DEBUG __n => 1
  # DEBUG __a => D#2397
  # DEBUG D#2396 => D#2397
  # DEBUG D#2394 => D#2396
  # DEBUG D#2395 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#2394
  # DEBUG D.170934 => D#2395
  # DEBUG D#2393 => D#2394
  # DEBUG D#2392 => D#2393
  # DEBUG this => D#2392
  _68 = operator new (48);
  goto <bb 34>;

<L15>:
  goto <bb 42> (<L10>);

}



;; Function std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::operator=(const std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >] (_ZNSt8_Rb_treeIiSt4pairIKiP4FlitESt10_Select1stIS4_ESt4lessIiESaIS4_EEaSERKSA_, funcdef_no=5363, decl_uid=71927, cgraph_uid=3611, symbol_order=3612)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::operator=(const std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >] (struct _Rb_tree * const this, const struct _Rb_tree & __x)
{
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  struct _Reuse_or_alloc_node __roan;
  struct _Rb_tree_node_base * _6;
  struct _Rb_tree & prephitmp_12;
  struct _Rb_tree_node_base * _13;
  struct _Rb_tree_node_base * _15;
  struct _Rb_tree_node_base * _16;
  long unsigned int _18;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * const _23;
  struct _Rb_tree & _28;
  struct _Rb_tree_node_base * pretmp_40;
  struct _Rb_tree_node_base * prephitmp_42;
  struct _Rb_tree & pretmp_43;

  <bb 2>:
  if (this_3(D) != __x_4(D))
    goto <bb 3>;
  else
    goto <bb 17>;

  <bb 3>:
  # DEBUG this => &__roan
  # DEBUG __t => this_3(D)
  # DEBUG this => this_3(D)
  _6 = MEM[(struct _Rb_tree_node_base * &)this_3(D) + 16];
  __roan._M_root = _6;
  # DEBUG this => this_3(D)
  _15 = MEM[(struct _Rb_tree_node_base * &)this_3(D) + 32];
  __roan._M_nodes = _15;
  __roan._M_t = this_3(D);
  if (_6 != 0B)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 4>:
  _6->_M_parent = 0B;
  _13 = _15->_M_left;
  if (_13 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  __roan._M_nodes = _13;
  goto <bb 7>;

  <bb 6>:
  __roan._M_nodes = 0B;

  <bb 7>:
  # DEBUG D#2766 => &this_3(D)->_M_impl
  # DEBUG this => D#2766
  MEM[(struct _Rb_tree_impl *)this_3(D)]._M_header._M_parent = 0B;
  _16 = &MEM[(struct _Rb_tree_impl *)this_3(D)]._M_header;
  MEM[(struct _Rb_tree_impl *)this_3(D)]._M_header._M_left = _16;
  MEM[(struct _Rb_tree_impl *)this_3(D)]._M_header._M_right = _16;
  MEM[(struct _Rb_tree_impl *)this_3(D)]._M_node_count = 0;
  _23 = MEM[(struct _Rb_tree_node_base * *)__x_4(D) + 16B];
  # DEBUG D#316 => __x_4(D)
  # DEBUG this => D#316
  if (_23 != 0B)
    goto <bb 8>;
  else
    goto <bb 16>;

  <bb 8>:
  # DEBUG this => this_3(D)
  # DEBUG this => this_3(D)
  # DEBUG D#317 => __x_4(D)
  # DEBUG this => D#317
  __x_10 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Reuse_or_alloc_node> (this_3(D), _23, _16, &__roan);

  <bb 9>:
  MEM[(struct _Rb_tree_node_base * &)this_3(D) + 16] = __x_10;
  # DEBUG this => this_3(D)
  # DEBUG this => this_3(D)
  # DEBUG __x => __x_10

  <bb 10>:
  # __x_24 = PHI <__x_10(9), __x_25(11)>
  # DEBUG __x => __x_24
  __x_25 = __x_24->_M_left;
  if (__x_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

  <bb 12>:
  # __x_50 = PHI <__x_24(10)>

  <bb 20>:
  MEM[(struct _Rb_tree_node_base * &)this_3(D) + 24] = __x_50;
  # DEBUG this => this_3(D)
  # DEBUG this => this_3(D)
  # DEBUG __x => __x_10

  <bb 13>:
  # __x_8 = PHI <__x_10(20), __x_7(14)>
  # DEBUG __x => __x_8
  __x_7 = __x_8->_M_right;
  if (__x_7 == 0B)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  # __x_51 = PHI <__x_8(13)>

  <bb 19>:
  MEM[(struct _Rb_tree_node_base * &)this_3(D) + 32] = __x_51;
  _18 = __x_4(D)->_M_impl._M_node_count;
  this_3(D)->_M_impl._M_node_count = _18;
  pretmp_40 = __roan._M_root;
  pretmp_43 = __roan._M_t;

  <bb 16>:
  # prephitmp_42 = PHI <_6(7), pretmp_40(19)>
  # prephitmp_12 = PHI <this_3(D)(7), pretmp_43(19)>
  # DEBUG this => &__roan
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (prephitmp_12, prephitmp_42);
  __roan ={v} {CLOBBER};

  <bb 17>:

  <bb 21>:
  return this_3(D);

<L7>:
  # DEBUG this => &__roan
  _21 = __roan._M_root;
  _28 = __roan._M_t;
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_28, _21);
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::map<int, Flit*>; _Alloc = std::allocator<std::map<int, Flit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::map<int, Flit*>*, std::vector<std::map<int, Flit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::map<int, Flit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::map<int, Flit*>] (_ZNSt6vectorISt3mapIiP4FlitSt4lessIiESaISt4pairIKiS2_EEESaIS9_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS9_SB_EEmRKS9_, funcdef_no=3997, decl_uid=61508, cgraph_uid=2245, symbol_order=2246)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is not innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::map<int, Flit*>; _Alloc = std::allocator<std::map<int, Flit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::map<int, Flit*>*, std::vector<std::map<int, Flit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::map<int, Flit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::map<int, Flit*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  const long unsigned int D.171039;
  const size_type __len;
  size_type D.171038;
  size_type __n;
  struct map * D.171029;
  struct map * D.171017;
  struct map * __first;
  long unsigned int __n;
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  struct map * const __position;
  struct map * __first;
  struct map * __first;
  struct map * __first;
  struct map * __first;
  difference_type __n;
  struct map * __last;
  struct map * __new_finish;
  const size_type __elems_before;
  struct map * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct map * _10;
  long int _11;
  struct map * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct _Rb_tree_node_base * _17;
  struct map * _20;
  long int __last.262_21;
  struct map * const _24;
  bool _25;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  struct map * _32;
  long unsigned int _33;
  long int _35;
  struct map * _36;
  struct map * _38;
  struct map * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct map * _51;
  const struct _Rep_type * _56;
  long unsigned int _59;
  sizetype _60;
  struct map * _62;
  struct map * _63;
  struct map * _67;
  long unsigned int _70;
  long int _73;
  struct map * _74;
  long unsigned int _75;
  struct map * _76;
  struct _Rep_type * _80;
  struct _Rep_type * _83;
  struct map * _85;
  struct _Rep_type * _87;
  struct _Rb_tree_node_base * _89;
  bool _91;
  long unsigned int _94;
  struct map * _95;
  struct _Rep_type * _96;
  struct _Rb_tree_node_base * _97;
  struct _Rb_tree_node_base * _99;
  struct _Rep_type * _100;
  struct _Rb_tree_node_base * _101;
  struct _Rep_type * _104;
  struct _Rb_tree_node_base * _105;
  void * _107;
  long int pretmp_118;
  long int prephitmp_119;
  struct map * pretmp_125;
  struct map * prephitmp_126;
  long unsigned int prephitmp_131;
  long unsigned int pretmp_152;
  long unsigned int prephitmp_153;
  struct map * const pretmp_154;
  struct map * const prephitmp_155;
  struct _Rb_tree_node_base * const _157;
  long unsigned int _164;
  struct _Rep_type * _167;
  void * _170;
  struct _Rep_type * _172;
  struct _Rb_tree_node_base * _173;
  struct map * _175;
  long int _179;
  long int _180;
  long int _181;
  long unsigned int _183;
  struct _Rb_tree_node_base * const _189;
  long unsigned int _196;
  long int _253;
  long int _254;
  difference_type _255;
  difference_type _258;
  long int _262;
  long int _263;
  bool _274;
  long int _284;
  long int _285;

  <bb 2>:
  # DEBUG D#4252 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#4252
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 73>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.61585._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.61585._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 48;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 37>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_29(D)
  # DEBUG D#4249 => &MEM[(const struct map &)__x_29(D)]._M_t
  # DEBUG this => &__x_copy._M_t
  # DEBUG __x => D#4249
  # DEBUG this => D#4249
  # DEBUG __a => NULL
  # DEBUG D#2412 => &MEM[(const struct _Rb_tree &)D#4249]._M_impl._M_key_compare
  # DEBUG D#2411 => &MEM[(struct _Rb_tree *)&__x_copy]._M_impl
  # DEBUG this => D#2411
  # DEBUG __comp => D#2412
  # DEBUG __a => NULL
  # DEBUG this => D#2411
  # DEBUG __a => NULL
  # DEBUG this => D#2411
  # DEBUG D.120352 => NULL
  MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&__x_copy]._M_node_count = 0;
  # DEBUG this => D#2411
  MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header;
  MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&__x_copy]._M_header;
  _157 = MEM[(struct _Rb_tree_node_base * *)__x_29(D) + 16B];
  # DEBUG D#316 => D#4249
  # DEBUG this => D#316
  if (_157 != 0B)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  # DEBUG this => &__x_copy._M_t
  # DEBUG this => &__x_copy._M_t
  # DEBUG D#317 => D#4249
  # DEBUG this => D#317
  # DEBUG this => &__x_copy._M_t
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => &__x_copy._M_t
  __an._M_t = &__x_copy._M_t;
  __x_159 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Alloc_node> (&__x_copy._M_t, _157, &MEM[(struct _Rb_tree *)&__x_copy]._M_impl._M_header, &__an);
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)&__x_copy + 16] = __x_159;
  # DEBUG this => &__x_copy._M_t
  # DEBUG this => &__x_copy._M_t
  # DEBUG __x => __x_159

  <bb 6>:
  # __x_160 = PHI <__x_159(5), __x_161(7)>
  # DEBUG __x => __x_160
  __x_161 = __x_160->_M_left;
  if (__x_161 == 0B)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  # __x_128 = PHI <__x_160(6)>
  MEM[(struct _Rb_tree_node_base * &)&__x_copy + 24] = __x_128;
  # DEBUG this => &__x_copy._M_t
  # DEBUG this => &__x_copy._M_t
  # DEBUG __x => __x_159

  <bb 9>:
  # __x_162 = PHI <__x_159(8), __x_163(10)>
  # DEBUG __x => __x_162
  __x_163 = __x_162->_M_right;
  if (__x_163 == 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:
  # __x_127 = PHI <__x_162(9)>
  MEM[(struct _Rb_tree_node_base * &)&__x_copy + 32] = __x_127;
  _164 = MEM[(const struct _Rb_tree &)__x_29(D)]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)&__x_copy]._M_impl._M_node_count = _164;
  pretmp_154 = MEM[(struct map * const &)this_9(D) + 8];
  pretmp_118 = (long int) pretmp_154;

  <bb 12>:
  # prephitmp_155 = PHI <pretmp_154(11), _12(4)>
  # prephitmp_119 = PHI <pretmp_118(11), _13(4)>
  # DEBUG this => this_9(D)
  # DEBUG D#318 => &this_9(D)->D.61585._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#318
  # DEBUG D#4250 => MEM[(struct map * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.84932
  # DEBUG __rhs => &__position
  # DEBUG this => &D.84932
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = prephitmp_119 - _35;
  _30 = _31 /[ex] 48;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#4250
  if (__n_7(D) < __elems_after_57)
    goto <bb 13>;
  else
    goto <bb 27>;

  <bb 13>:
  # DEBUG D#2771 => &this_9(D)->D.61585
  # DEBUG this => D#2771
  _59 = __n_7(D) * 48;
  _60 = -_59;
  __last_61 = prephitmp_155 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#4250
  # DEBUG __result => D#4250
  # DEBUG __alloc => D#2415
  # DEBUG D#2414 => D#2415
  # DEBUG D#2413 => D#2414
  # DEBUG __first => __last_61
  # DEBUG __last => D#4250
  # DEBUG __result => D#4250
  # DEBUG D.147633 => D#2413
  # DEBUG __first => __last_61
  # DEBUG __last => D#4250
  # DEBUG __result => D#4250
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::map<int, Flit*>*, std::map<int, Flit*>*> (__last_61, prephitmp_155, prephitmp_155);

  <bb 14>:
  _62 = this_9(D)->D.61585._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.61585._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#4252
  # DEBUG __last => __last_61
  # DEBUG __result => D#4250
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4252
  # DEBUG __it => D#4252
  # DEBUG __first => D#4252
  # DEBUG __last => __last_61
  # DEBUG __result => D#4250
  # DEBUG __it => D#4250
  # DEBUG __it => D#4250
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#4252
  # DEBUG __it => D#4252
  # DEBUG __first => D#4252
  # DEBUG __last => __last_61
  # DEBUG __result => D#4250
  # DEBUG __simple => 0
  # DEBUG __first => D#4252
  # DEBUG __last => __last_61
  # DEBUG __result => D#4250
  __last.262_21 = (long int) __last_61;
  _73 = __last.262_21 - _35;
  __n_72 = _73 /[ex] 48;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => D#4250
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#4252
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4252
  if (__position_23 == _67)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 16>:

  <bb 17>:
  # __old_finish_278 = PHI <prephitmp_155(16), __old_finish_58(20)>
  # __last_280 = PHI <__last_61(16), __last_66(20)>
  # __n_279 = PHI <__n_72(16), __n_81(20)>
  # DEBUG __n => __n_279
  # DEBUG __result => __old_finish_278
  # DEBUG __last => __last_280
  __last_66 = __last_280 + 18446744073709551568;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_278 + 18446744073709551568;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG __x => __last_66
  _56 = &MEM[(const struct map &)__last_66]._M_t;
  _80 = &__old_finish_58->_M_t;
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::operator= (_80, _56);
  goto <bb 19>;

<L24>:
  goto <bb 75> (<L10>);

  <bb 19>:
  __n_81 = __n_279 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 15>;
  else
    goto <bb 20>;

  <bb 20>:
  goto <bb 17>;

  <bb 21>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy._M_t
  _89 = MEM[(struct _Rb_tree_node_base * *)&__x_copy + 16B];
  # DEBUG D#214 => &__x_copy._M_t
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (&__x_copy._M_t, _89);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)&__x_copy]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  __x_copy ={v} {CLOBBER};
  goto <bb 73>;

  <bb 22>:

  <bb 23>:
  # __position_52 = PHI <__position_23(22), __position_84(26)>
  # DEBUG __first => __position_52
  # DEBUG this => __position_52
  # DEBUG __x => &__x_copy
  _83 = &__position_52->_M_t;
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::operator= (_83, &__x_copy._M_t);
  goto <bb 25>;

<L25>:
  goto <bb 75> (<L10>);

  <bb 25>:
  __position_84 = __position_52 + 48;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

  <bb 27>:
  # DEBUG D#2772 => &this_9(D)->D.61585
  # DEBUG this => D#2772
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#4250
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.147683 => D#2418
  # DEBUG __first => D#4250
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _85 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::map<int, Flit*>*, long unsigned int, std::map<int, Flit*> > (prephitmp_155, _70, &__x_copy);
  goto <bb 29>;

<L26>:
  goto <bb 75> (<L10>);

  <bb 29>:
  this_9(D)->D.61585._M_impl._M_finish = _85;
  # DEBUG D#2773 => &this_9(D)->D.61585
  # DEBUG this => D#2773
  # DEBUG this => &__position
  # DEBUG __first => D#4252
  # DEBUG __last => D#4250
  # DEBUG __result => _85
  # DEBUG __alloc => D#2415
  # DEBUG D#2414 => D#2415
  # DEBUG D#2413 => D#2414
  # DEBUG __first => D#4252
  # DEBUG __last => D#4250
  # DEBUG __result => _85
  # DEBUG D.147696 => D#2413
  # DEBUG __first => D#4252
  # DEBUG __last => D#4250
  # DEBUG __result => _85
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::map<int, Flit*>*, std::map<int, Flit*>*> (__position_23, prephitmp_155, _85);
  goto <bb 31>;

<L27>:
  goto <bb 75> (<L10>);

  <bb 31>:
  _74 = this_9(D)->D.61585._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.61585._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#4252
  # DEBUG __last => D#4250
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#4252
  if (__position_23 == prephitmp_155)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 32>:

  <bb 33>:
  # __position_276 = PHI <__position_23(32), __position_88(36)>
  # DEBUG __first => __position_276
  # DEBUG this => __position_276
  # DEBUG __x => &__x_copy
  _87 = &__position_276->_M_t;
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::operator= (_87, &__x_copy._M_t);
  goto <bb 35>;

<L28>:
  goto <bb 75> (<L10>);

  <bb 35>:
  __position_88 = __position_276 + 48;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__position_88 == prephitmp_155)
    goto <bb 21>;
  else
    goto <bb 36>;

  <bb 36>:
  goto <bb 33>;

  <bb 37>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#2048 => this_9(D)
  # DEBUG this => D#2048
  # DEBUG D#2047 => D#2048
  # DEBUG D#2046 => &D#2047->D.61585
  # DEBUG this => D#2046
  # DEBUG __a => D#2045
  # DEBUG D#2044 => D#2045
  # DEBUG D#2043 => D#2044
  # DEBUG this => D#2043
  _24 = MEM[(struct map * *)this_9(D)];
  # DEBUG D#215 => this_9(D)
  # DEBUG D#215 => this_9(D)
  # DEBUG this => D#215
  # DEBUG this => D#215
  _179 = (long int) _24;
  _180 = _13 - _179;
  _181 = _180 /[ex] 48;
  _182 = (const long unsigned int) _181;
  _183 = 384307168202282325 - _182;
  if (__n_7(D) > _183)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 39>:
  # DEBUG D#215 => this_9(D)
  # DEBUG D#215 => this_9(D)
  # DEBUG this => D#215
  # DEBUG this => D#215
  # DEBUG D#215 => this_9(D)
  # DEBUG D#215 => this_9(D)
  # DEBUG this => D#215
  # DEBUG this => D#215
  # DEBUG __a => &D.171039
  # DEBUG __b => &__n
  _94 = MAX_EXPR <__n_7(D), _182>;
  __len_187 = _94 + _182;
  # DEBUG __len => __len_187
  # DEBUG D#215 => this_9(D)
  # DEBUG D#215 => this_9(D)
  # DEBUG this => D#215
  # DEBUG this => D#215
  # DEBUG D#2048 => this_9(D)
  # DEBUG this => D#2048
  # DEBUG D#2047 => D#2048
  # DEBUG D#2046 => &D#2047->D.61585
  # DEBUG this => D#2046
  # DEBUG __a => D#2045
  # DEBUG D#2044 => D#2045
  # DEBUG D#2043 => D#2044
  # DEBUG this => D#2043
  _91 = __len_187 > 384307168202282325;
  _274 = _182 > __len_187;
  _25 = _91 | _274;
  if (_25 != 0)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 40>:
  pretmp_152 = __len_187 * 48;

  <bb 41>:
  # __elems_before_207 = PHI <__elems_before_259(90), __elems_before_272(40)>
  # _285 = PHI <_263(90), _254(40)>
  # prephitmp_153 = PHI <18446744073709551600(90), pretmp_152(40)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#565 => &this_9(D)->D.61585._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#565
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84955
  # DEBUG this => &__position
  # DEBUG this => &D.84955
  # DEBUG __elems_before => __elems_before_207
  # DEBUG D#2783 => &this_9(D)->D.61585
  # DEBUG D#2056 => D#2783
  # DEBUG __n => NULL
  # DEBUG this => D#2056
  # DEBUG D#2055 => D#2056
  # DEBUG D#2054 => &D#2055->_M_impl
  # DEBUG D#2053 => D#2054
  # DEBUG __n => NULL
  # DEBUG __a => D#2053
  # DEBUG D#2052 => D#2053
  # DEBUG D#2050 => D#2052
  # DEBUG D#2051 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#2050
  # DEBUG D.171027 => D#2051
  # DEBUG D#2049 => D#2050
  # DEBUG D#2043 => D#2049
  # DEBUG this => D#2043
  _175 = operator new (prephitmp_153);

  <bb 42>:
  # __new_finish_176 = PHI <0B(91), _175(41)>
  # __elems_before_286 = PHI <__elems_before_272(91), __elems_before_207(41)>
  # _284 = PHI <_254(91), _285(41)>
  # prephitmp_131 = PHI <0(91), prephitmp_153(41)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2767 => &this_9(D)->D.61585
  # DEBUG this => D#2767
  _27 = (long unsigned int) _284;
  __first_28 = __new_finish_176 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.147729 => D#2418
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __cur => __first_28
  # DEBUG __n => __n_7(D)

  <bb 43>:
  # __n_252 = PHI <__n_168(55), __n_7(D)(42)>
  # __first_270 = PHI <__first_169(55), __first_28(42)>
  # DEBUG __cur => __first_270
  # DEBUG __n => __n_252
  # DEBUG __r => __first_270
  # DEBUG __p => NULL
  # DEBUG __value => __x_29(D)
  # DEBUG D#20 => 48
  # DEBUG __p => NULL
  # DEBUG D.140967 => D#20
  if (__first_270 != 0B)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 54>;

  <bb 45>:
  # DEBUG this => NULL
  # DEBUG __x => __x_29(D)
  # DEBUG D#4248 => &MEM[(const struct map &)__x_29(D)]._M_t
  _167 = &__first_270->_M_t;
  # DEBUG this => _167
  # DEBUG __x => D#4248
  # DEBUG this => D#4248
  # DEBUG __a => NULL
  # DEBUG D#2412 => &MEM[(const struct _Rb_tree &)D#4248]._M_impl._M_key_compare
  # DEBUG D#2411 => &MEM[(struct _Rb_tree *)_167]._M_impl
  # DEBUG this => D#2411
  # DEBUG __comp => D#2412
  # DEBUG __a => NULL
  # DEBUG this => D#2411
  # DEBUG __a => NULL
  # DEBUG this => D#2411
  # DEBUG D.120352 => NULL
  MEM[(struct _Rb_tree_impl *)__first_270]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)__first_270]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)__first_270]._M_node_count = 0;
  # DEBUG this => D#2411
  _17 = &MEM[(struct _Rb_tree_impl *)__first_270]._M_header;
  MEM[(struct _Rb_tree_impl *)__first_270]._M_header._M_left = _17;
  MEM[(struct _Rb_tree_impl *)__first_270]._M_header._M_right = _17;
  _189 = MEM[(struct _Rb_tree_node_base * *)__x_29(D) + 16B];
  # DEBUG D#316 => D#4248
  # DEBUG this => D#316
  if (_189 != 0B)
    goto <bb 46>;
  else
    goto <bb 44>;

  <bb 46>:
  # DEBUG this => _167
  # DEBUG this => _167
  # DEBUG D#317 => D#4248
  # DEBUG this => D#317
  # DEBUG this => _167
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => _167
  __an._M_t = _167;
  __x_191 = std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_copy<std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_Alloc_node> (_167, _189, _17, &__an);

  <bb 47>:
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)__first_270 + 16] = __x_191;
  # DEBUG this => _167
  # DEBUG this => _167
  # DEBUG __x => __x_191

  <bb 48>:
  # __x_192 = PHI <__x_191(47), __x_193(49)>
  # DEBUG __x => __x_192
  __x_193 = __x_192->_M_left;
  if (__x_193 == 0B)
    goto <bb 50>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 48>;

  <bb 50>:
  # __x_121 = PHI <__x_192(48)>
  MEM[(struct _Rb_tree_node_base * &)__first_270 + 24] = __x_121;
  # DEBUG this => _167
  # DEBUG this => _167
  # DEBUG __x => __x_191

  <bb 51>:
  # __x_194 = PHI <__x_191(50), __x_195(52)>
  # DEBUG __x => __x_194
  __x_195 = __x_194->_M_right;
  if (__x_195 == 0B)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 51>;

  <bb 53>:
  # __x_120 = PHI <__x_194(51)>
  MEM[(struct _Rb_tree_node_base * &)__first_270 + 32] = __x_120;
  _196 = MEM[(const struct _Rb_tree &)__x_29(D)]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)__first_270]._M_impl._M_node_count = _196;

  <bb 54>:
  __n_168 = __n_252 + 18446744073709551615;
  # DEBUG __n => __n_168
  __first_169 = __first_270 + 48;
  # DEBUG __cur => __first_169
  # DEBUG __cur => __first_169
  # DEBUG __n => __n_168
  if (__n_168 == 0)
    goto <bb 56>;
  else
    goto <bb 55>;

  <bb 55>:
  goto <bb 43>;

  <bb 56>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2768 => &this_9(D)->D.61585
  # DEBUG this => D#2768
  # DEBUG this => &__position
  _32 = this_9(D)->D.61585._M_impl._M_start;
  # DEBUG __first => _32
  # DEBUG __last => D#4252
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2417
  # DEBUG D#2416 => D#2417
  # DEBUG D#2413 => D#2416
  # DEBUG __first => _32
  # DEBUG __last => D#4252
  # DEBUG __result => NULL
  # DEBUG D.147750 => D#2413
  # DEBUG __first => _32
  # DEBUG __last => D#4252
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::map<int, Flit*>*, std::map<int, Flit*>*> (_32, __position_23, __new_finish_176);
  goto <bb 63>;

  # __first_114 = PHI <__first_270(46)>
<L19>:
  _170 = __builtin_eh_pointer (12);
  __cxa_begin_catch (_170);
  # DEBUG __first => __first_28
  # DEBUG __last => __first_114
  # DEBUG __first => __first_28
  # DEBUG __last => __first_114
  # DEBUG __first => __first_28
  if (__first_28 == __first_114)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  __cxa_rethrow ();

  <bb 59>:

  <bb 60>:
  # __first_205 = PHI <__first_28(59), __first_174(61)>
  # DEBUG __first => __first_205
  # DEBUG __r => __first_205
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _172 = &__first_205->_M_t;
  # DEBUG this => _172
  _173 = MEM[(struct _Rb_tree_node_base * *)__first_205 + 16B];
  # DEBUG D#214 => _172
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_172, _173);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)_172]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  MEM[(struct  &)__first_205] ={v} {CLOBBER};
  __first_174 = __first_205 + 48;
  # DEBUG __first => __first_174
  # DEBUG __first => __first_174
  if (__first_174 == __first_114)
    goto <bb 58>;
  else
    goto <bb 61>;

  <bb 61>:
  goto <bb 60>;

<L21>:
  __cxa_end_catch ();
  resx 13

  <bb 63>:
  # DEBUG __new_finish => _20
  _33 = __n_7(D) * 48;
  __new_finish_34 = _20 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#2769 => &this_9(D)->D.61585
  # DEBUG this => D#2769
  _36 = this_9(D)->D.61585._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#4252
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#2417
  # DEBUG D#2416 => D#2417
  # DEBUG D#2413 => D#2416
  # DEBUG __first => D#4252
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.147769 => D#2413
  # DEBUG __first => D#4252
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  _95 = std::__uninitialized_copy<false>::__uninit_copy<std::map<int, Flit*>*, std::map<int, Flit*>*> (__position_23, _36, __new_finish_34);
  goto <bb 65>;

<L30>:
  goto <bb 77> (<L13>);

  <bb 65>:
  # DEBUG __new_finish => _95
  # DEBUG D#2770 => &this_9(D)->D.61585
  # DEBUG this => D#2770
  _38 = this_9(D)->D.61585._M_impl._M_finish;
  __first_39 = this_9(D)->D.61585._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => _38
  # DEBUG __first => __first_39
  if (_38 == __first_39)
    goto <bb 70>;
  else
    goto <bb 66>;

  <bb 66>:

  <bb 67>:
  # __first_282 = PHI <__first_39(66), __first_98(68)>
  # DEBUG __first => __first_282
  # DEBUG __r => __first_282
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _96 = &__first_282->_M_t;
  # DEBUG this => _96
  _97 = MEM[(struct _Rb_tree_node_base * *)__first_282 + 16B];
  # DEBUG D#214 => _96
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_96, _97);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)_96]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  MEM[(struct  &)__first_282] ={v} {CLOBBER};
  __first_98 = __first_282 + 48;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (_38 == __first_98)
    goto <bb 69>;
  else
    goto <bb 68>;

  <bb 68>:
  goto <bb 67>;

  <bb 69>:
  pretmp_125 = this_9(D)->D.61585._M_impl._M_start;

  <bb 70>:
  # prephitmp_126 = PHI <pretmp_125(69), __first_39(65)>
  # DEBUG D#2781 => this_9(D)->D.61585._M_impl._M_end_of_storage
  # DEBUG D#2780 => (long int) D#2781
  # DEBUG D#4251 => this_9(D)->D.61585._M_impl._M_start
  # DEBUG D#2779 => (long int) D#4251
  # DEBUG D#2778 => D#2780 - D#2779
  # DEBUG D#2777 => D#2778 /[ex] 48
  # DEBUG D#2776 => &this_9(D)->D.61585
  # DEBUG D#877 => D#2776
  # DEBUG D#878 => (long unsigned int) D#2777
  # DEBUG __p => D#4251
  # DEBUG this => D#877
  # DEBUG __n => D#878
  # DEBUG D#876 => D#878
  # DEBUG D#875 => D#877
  if (prephitmp_126 != 0B)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # DEBUG D#874 => &D#875->_M_impl
  # DEBUG D#872 => D#874
  # DEBUG D#873 => D#876
  # DEBUG __p => D#4251
  # DEBUG __a => D#872
  # DEBUG __n => D#873
  # DEBUG D#871 => D#873
  # DEBUG D#870 => D#872
  # DEBUG D#868 => D#870
  # DEBUG D#869 => D#871
  # DEBUG __p => D#4251
  # DEBUG this => D#868
  # DEBUG D.147792 => D#869
  operator delete (prephitmp_126);

  <bb 72>:
  this_9(D)->D.61585._M_impl._M_start = __new_finish_176;
  this_9(D)->D.61585._M_impl._M_finish = _95;
  _45 = __new_finish_176 + prephitmp_131;
  this_9(D)->D.61585._M_impl._M_end_of_storage = _45;

  <bb 73>:
  return;

<L23>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy._M_t
  _99 = MEM[(struct _Rb_tree_node_base * *)&__x_copy + 16B];
  # DEBUG D#214 => &__x_copy._M_t
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (&__x_copy._M_t, _99);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)&__x_copy]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  resx 2

<L29>:

  # __new_finish_1 = PHI <__new_finish_34(64), 0B(76)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_1 == 0B)
    goto <bb 80>;
  else
    goto <bb 78>;

  <bb 78>:
  # DEBUG __first => __new_finish_176
  if (__new_finish_1 == __new_finish_176)
    goto <bb 79>;
  else
    goto <bb 84>;

  <bb 79>:
  # DEBUG D#2782 => &this_9(D)->D.61585
  # DEBUG D#877 => D#2782
  # DEBUG __p => NULL
  # DEBUG this => D#877
  # DEBUG __n => D#878
  # DEBUG D#876 => D#878
  # DEBUG D#875 => D#877
  if (__new_finish_176 != 0B)
    goto <bb 87>;
  else
    goto <bb 88>;

  <bb 80>:
  # DEBUG D#2774 => &this_9(D)->D.61585
  # DEBUG this => D#2774
  _49 = __n_7(D) + __elems_before_286;
  _50 = _49 * 48;
  _51 = __new_finish_176 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51
  # DEBUG __first => __first_28
  if (__first_28 == _51)
    goto <bb 79>;
  else
    goto <bb 81>;

  <bb 81>:

  <bb 82>:
  # __first_275 = PHI <__first_28(81), __first_102(83)>
  # DEBUG __first => __first_275
  # DEBUG __r => __first_275
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _100 = &__first_275->_M_t;
  # DEBUG this => _100
  _101 = MEM[(struct _Rb_tree_node_base * *)__first_275 + 16B];
  # DEBUG D#214 => _100
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_100, _101);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)_100]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  MEM[(struct  &)__first_275] ={v} {CLOBBER};
  __first_102 = __first_275 + 48;
  # DEBUG __first => __first_102
  # DEBUG __first => __first_102
  if (_51 == __first_102)
    goto <bb 79>;
  else
    goto <bb 83>;

  <bb 83>:
  goto <bb 82>;

  <bb 84>:

  <bb 85>:
  # __new_finish_166 = PHI <__new_finish_176(84), __new_finish_106(86)>
  # DEBUG __first => __new_finish_166
  # DEBUG __r => __new_finish_166
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _104 = &__new_finish_166->_M_t;
  # DEBUG this => _104
  _105 = MEM[(struct _Rb_tree_node_base * *)__new_finish_166 + 16B];
  # DEBUG D#214 => _104
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_104, _105);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)_104]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  MEM[(struct  &)__new_finish_166] ={v} {CLOBBER};
  __new_finish_106 = __new_finish_166 + 48;
  # DEBUG __first => __new_finish_106
  # DEBUG __first => __new_finish_106
  if (__new_finish_1 == __new_finish_106)
    goto <bb 79>;
  else
    goto <bb 86>;

  <bb 86>:
  goto <bb 85>;

  <bb 87>:
  # DEBUG D#874 => &D#875->_M_impl
  # DEBUG D#872 => D#874
  # DEBUG D#873 => D#876
  # DEBUG __p => NULL
  # DEBUG __a => D#872
  # DEBUG __n => D#873
  # DEBUG D#871 => D#873
  # DEBUG D#870 => D#872
  # DEBUG D#868 => D#870
  # DEBUG D#869 => D#871
  # DEBUG __p => NULL
  # DEBUG this => D#868
  # DEBUG D.147855 => D#869
  operator delete (__new_finish_176);

  <bb 88>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 90>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#565 => &this_9(D)->D.61585._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#565
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84955
  # DEBUG this => &__position
  _262 = (long int) __position_23;
  # DEBUG this => &D.84955
  _263 = _262 - _179;
  _258 = _263 /[ex] 48;
  __elems_before_259 = (const size_type) _258;
  # DEBUG __elems_before => __elems_before_259
  # DEBUG D#2783 => &this_9(D)->D.61585
  # DEBUG D#2056 => D#2783
  # DEBUG __n => NULL
  # DEBUG this => D#2056
  # DEBUG D#2055 => D#2056
  goto <bb 41>;

  <bb 91>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#565 => &this_9(D)->D.61585._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#565
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.84955
  # DEBUG this => &__position
  _253 = (long int) __position_23;
  # DEBUG this => &D.84955
  _254 = _253 - _179;
  _255 = _254 /[ex] 48;
  __elems_before_272 = (const size_type) _255;
  # DEBUG __elems_before => __elems_before_272
  # DEBUG D#2783 => &this_9(D)->D.61585
  # DEBUG D#2056 => D#2783
  # DEBUG __n => NULL
  # DEBUG this => D#2056
  # DEBUG D#2055 => D#2056
  if (__len_187 != 0)
    goto <bb 40>;
  else
    goto <bb 42>;

<L22>:
  # DEBUG __new_finish => __new_finish_176
  _107 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_107);
  if (__new_finish_176 == 0B)
    goto <bb 80>;
  else
    goto <bb 79>;

}



;; Function void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = std::map<int, Flit*>; _Alloc = std::allocator<std::map<int, Flit*> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::map<int, Flit*>] (_ZNSt6vectorISt3mapIiP4FlitSt4lessIiESaISt4pairIKiS2_EEESaIS9_EE6resizeEmS9_, funcdef_no=2787, decl_uid=61250, cgraph_uid=1035, symbol_order=1036)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = std::map<int, Flit*>; _Alloc = std::allocator<std::map<int, Flit*> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::map<int, Flit*>] (struct vector * const this, size_type __new_size, struct value_type & restrict __x)
{
  struct _Rb_tree_node * __x;
  struct map * __pos;
  struct iterator __position;
  long int _5;
  long unsigned int _6;
  long unsigned int _8;
  struct map * const _11;
  struct map * const _12;
  long int _13;
  long int _14;
  long int _15;
  size_type _16;
  struct _Rep_type * _18;
  struct _Rb_tree_node_base * _31;

  <bb 2>:
  _11 = MEM[(struct map * *)this_3(D)];
  # DEBUG D#215 => this_3(D)
  _12 = MEM[(struct map * *)this_3(D) + 8B];
  # DEBUG D#215 => this_3(D)
  # DEBUG this => D#215
  # DEBUG this => D#215
  _5 = (long int) _12;
  _13 = (long int) _11;
  _14 = _5 - _13;
  _15 = _14 /[ex] 48;
  _16 = (size_type) _15;
  if (__new_size_4(D) > _16)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#215 => this_3(D)
  # DEBUG D#215 => this_3(D)
  # DEBUG this => D#215
  # DEBUG this => D#215
  _6 = __new_size_4(D) - _16;
  # DEBUG this => this_3(D)
  # DEBUG D#318 => &this_3(D)->D.61585._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#318
  # DEBUG this => this_3(D)
  MEM[(struct __normal_iterator *)&__position] = _12;
  # DEBUG __n => _6
  # DEBUG __x => __x_7(D)
  std::vector<std::map<int, Flit*> >::_M_fill_insert (this_3(D), __position, _6, __x_7(D));
  goto <bb 14>;

  <bb 4>:
  # DEBUG D#215 => this_3(D)
  # DEBUG D#215 => this_3(D)
  # DEBUG this => D#215
  # DEBUG this => D#215
  if (__new_size_4(D) < _16)
    goto <bb 5>;
  else
    goto <bb 14>;

  <bb 5>:
  _8 = __new_size_4(D) * 48;
  __pos_9 = _11 + _8;
  # DEBUG D#1916 => this_3(D)
  # DEBUG __pos => __pos_9
  # DEBUG D#1915 => D#1916
  # DEBUG this => D#1915
  # DEBUG D#1914 => &D#1915->D.61585
  # DEBUG this => D#1914
  # DEBUG __first => __pos_9
  # DEBUG __last => _12
  # DEBUG __first => __pos_9
  if (__pos_9 == _12)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  MEM[(struct map * *)this_3(D) + 8B] = __pos_9;
  goto <bb 14>;

  <bb 7>:

  <bb 8>:
  # __pos_39 = PHI <__pos_9(7), __pos_20(13)>
  # DEBUG __first => __pos_39
  # DEBUG __r => __pos_39
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _18 = &__pos_39->_M_t;
  # DEBUG this => _18
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__pos_39 + 16B];
  # DEBUG D#214 => _18
  # DEBUG this => D#214
  # DEBUG this => _18
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)_18]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  MEM[(struct  &)__pos_39] ={v} {CLOBBER};
  __pos_20 = __pos_39 + 48;
  # DEBUG __first => __pos_20
  # DEBUG __first => __pos_20
  if (_12 == __pos_20)
    goto <bb 6>;
  else
    goto <bb 13>;

  <bb 10>:

  <bb 11>:
  # __x_37 = PHI <__x_19(10), __x_32(12)>
  # DEBUG __x => __x_37
  _31 = MEM[(struct _Rb_tree_node_base * *)__x_37 + 24B];
  # DEBUG D#314 => __x_37
  # DEBUG __x => D#314
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_18, _31);
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_37 + 16B];
  # DEBUG D#315 => __x_37
  # DEBUG __x => D#315
  # DEBUG __y => NULL
  # DEBUG D#1911 => _18
  # DEBUG __p => __x_37
  # DEBUG this => D#1911
  # DEBUG D#1910 => D#1911
  # DEBUG D#1909 => D#1911
  # DEBUG D#1908 => D#1911
  # DEBUG D#1906 => D#1908
  # DEBUG D#1907 => __x_37
  # DEBUG this => D#1906
  # DEBUG __p => D#1907
  # DEBUG D#1905 => D#1906
  # DEBUG D#1904 => D#1907
  # DEBUG D#1903 => D#1907
  # DEBUG this => D#1903
  # DEBUG D#1902 => &D#1904->_M_value_field
  # DEBUG __r => D#1902
  # DEBUG D#1901 => D#1905
  # DEBUG this => D#1901
  # DEBUG D#1900 => D#1901
  # DEBUG this => D#1900
  # DEBUG this => NULL
  # DEBUG D.132594 => NULL
  # DEBUG this => NULL
  # DEBUG D#1077 => D#1902
  # DEBUG this => D#1076
  # DEBUG __p => D#1077
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1909
  # DEBUG __p => __x_37
  # DEBUG this => D#1910
  # DEBUG D#1534 => 1
  # DEBUG __p => __x_37
  # DEBUG __a => D#1533
  # DEBUG __n => D#1534
  # DEBUG D#1532 => D#1534
  # DEBUG D#1531 => D#1533
  # DEBUG D#1529 => D#1531
  # DEBUG D#1530 => D#1532
  # DEBUG __p => __x_37
  # DEBUG this => D#1529
  # DEBUG D.171156 => D#1530
  operator delete (__x_37);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 11>;

  <bb 13>:
  goto <bb 8>;

  <bb 14>:
  return;

}



;; Function TrafficManager::TrafficManager(const Configuration&, const std::vector<Network*>&) (_ZN14TrafficManagerC2ERK13ConfigurationRKSt6vectorIP7NetworkSaIS5_EE, funcdef_no=2464, decl_uid=65057, cgraph_uid=712, symbol_order=713)

Trying loop 44 as candidate
loop 44 is innermost
loop is not parallel according to graphite
Trying loop 43 as candidate
loop 43 is innermost
loop is not parallel according to graphite
Trying loop 41 as candidate
loop 41 is not innermost
loop is not parallel according to graphite
Trying loop 42 as candidate
loop 42 is innermost
loop is not parallel according to graphite
Trying loop 40 as candidate
loop 40 is innermost
loop is not parallel according to graphite
Trying loop 37 as candidate
loop 37 is not innermost
loop is not parallel according to graphite
Trying loop 38 as candidate
loop 38 is not innermost
loop is not parallel according to graphite
Trying loop 39 as candidate
loop 39 is innermost
loop is not parallel according to graphite
Trying loop 35 as candidate
loop 35 is not innermost
loop is not parallel according to graphite
Trying loop 36 as candidate
loop 36 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is not innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is not innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 34 as candidate
loop 34 is innermost
loop is not parallel according to graphite
Trying loop 18 as candidate
loop 18 is innermost
loop is not parallel according to graphite
Trying loop 20 as candidate
loop 20 is innermost
loop is not parallel according to graphite
Trying loop 32 as candidate
loop 32 is not innermost
loop is not parallel according to graphite
Trying loop 33 as candidate
loop 33 is innermost
loop is not parallel according to graphite
Trying loop 19 as candidate
loop 19 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is not innermost
loop is not parallel according to graphite
Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 30 as candidate
loop 30 is not innermost
loop is not parallel according to graphite
Trying loop 31 as candidate
loop 31 is innermost
loop is not parallel according to graphite
Trying loop 29 as candidate
loop 29 is innermost
loop is not parallel according to graphite
Trying loop 28 as candidate
loop 28 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 27 as candidate
loop 27 is innermost
loop is not parallel according to graphite
Trying loop 26 as candidate
loop 26 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 23 as candidate
loop 23 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 21 as candidate
loop 21 is innermost
loop is not parallel according to graphite
TrafficManager::TrafficManager(const Configuration&, const std::vector<Network*>&) (struct TrafficManager * const this, const struct Configuration & config, const struct vector & net)
{
  struct _Rb_tree_node_base * SR.7274;
  struct _Rb_tree_node_base * SR.7273;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct _Node * __tmp;
  struct list * __first;
  struct vector * __first;
  struct list * __first;
  struct _Node * __tmp;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  __size_type __len;
  __size_type __len;
  __size_type __len;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  struct vector * __pos;
  struct iterator __position;
  struct list * __pos;
  struct _Node * __tmp;
  struct iterator __position;
  struct list * __pos;
  struct _Node * __tmp;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator __position;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  struct vector * __pos;
  struct iterator __position;
  struct vector * __pos;
  value_type __x;
  struct iterator __position;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  struct BufferState * __x;
  struct iterator __position;
  struct vector * __pos;
  struct iterator __position;
  struct vector * __pos;
  struct iterator __position;
  struct InjectionProcess * __x;
  struct iterator __position;
  struct TrafficPattern * __x;
  int * D.171601;
  size_type __n;
  int * __first;
  int * D.171541;
  size_type __n;
  int * __first;
  struct __normal_iterator D.171481;
  struct __normal_iterator D.171472;
  struct __normal_iterator D.171463;
  struct __normal_iterator D.171454;
  int * D.171445;
  int * __first;
  size_type __n;
  struct __normal_iterator D.171385;
  int * D.171376;
  size_type __n;
  int * __first;
  struct iterator D.171316;
  struct _Rb_tree_node * __y;
  struct basic_string & D.171260;
  struct Stats * * D.171222;
  const ptrdiff_t _Num;
  struct _Rb_tree_node_base * SR.4369;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct pair __p;
  struct pair __p;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct iterator D.148370;
  int j;
  int i;
  struct ostringstream tmp_name;
  int c;
  size_t i;
  size_t i;
  int i;
  int s;
  int min_latency;
  int router_latency;
  int sw_alloc_delay;
  int vc_alloc_delay;
  struct ostringstream tmp_name;
  int subnet;
  int source;
  int c;
  int c;
  int c;
  int rate;
  int i;
  int max_val;
  int size;
  struct vector rates;
  int c;
  struct vector packet_size_rate_strings;
  int size;
  int c;
  int rate;
  size_t i;
  struct vector packet_size_strings;
  struct string stats_out_file;
  struct vector watch_packets;
  struct vector watch_flits;
  struct string watch_file;
  int seed;
  struct vector injection_process;
  struct string packet_size_rate_str;
  struct string packet_size_str;
  struct string rf;
  struct string priority;
  const struct __string_type D.73920;
  struct __string_type D.73919;
  struct __string_type D.73917;
  const struct __string_type D.73914;
  struct __string_type D.73913;
  struct __string_type D.73911;
  const struct __string_type D.73908;
  struct __string_type D.73907;
  struct __string_type D.73905;
  const struct __string_type D.73898;
  struct __string_type D.73897;
  struct __string_type D.73895;
  const struct __string_type D.73892;
  struct __string_type D.73891;
  struct __string_type D.73889;
  const struct __string_type D.73886;
  struct __string_type D.73885;
  struct __string_type D.73883;
  const struct __string_type D.73880;
  struct __string_type D.73879;
  struct __string_type D.73877;
  const struct __string_type D.73874;
  struct __string_type D.73873;
  struct __string_type D.73871;
  struct value_type D.73866;
  struct value_type D.73865;
  struct value_type D.73864;
  struct value_type D.73863;
  struct value_type D.73862;
  struct value_type D.73861;
  struct value_type D.73860;
  const struct string D.73855;
  const struct string D.73849;
  const struct string D.73843;
  const struct string D.73840;
  const struct string D.73837;
  const struct string D.73835;
  const struct string D.73833;
  const struct string D.73831;
  const value_type D.73830;
  const struct string D.73828;
  struct vector D.73827;
  const struct string D.73825;
  const value_type D.73824;
  const struct string D.73822;
  struct vector D.73821;
  const struct string D.73819;
  const value_type D.73818;
  const struct string D.73816;
  struct vector D.73815;
  const struct string D.73813;
  const value_type D.73812;
  const struct string D.73810;
  struct vector D.73809;
  const struct string D.73807;
  const value_type D.73806;
  const struct string D.73804;
  struct vector D.73803;
  const struct string D.73801;
  const struct string D.73799;
  const value_type D.73798;
  const struct string D.73796;
  struct vector D.73795;
  const struct string D.73793;
  const struct string D.73791;
  const struct string D.73789;
  const struct string D.73787;
  struct string D.73786;
  const struct string D.73784;
  const struct string D.73782;
  struct string D.73781;
  struct value_type D.73778;
  const struct string D.73776;
  const struct string D.73774;
  struct value_type D.73773;
  struct value_type D.73772;
  struct value_type D.73771;
  struct value_type D.73770;
  struct value_type D.73769;
  struct value_type D.73766;
  struct value_type D.73765;
  struct value_type D.73764;
  const struct string D.73762;
  const struct string D.73760;
  const struct string D.73758;
  const struct string D.73756;
  struct __string_type D.73754;
  struct value_type D.73744;
  struct value_type D.73741;
  struct value_type D.73740;
  struct value_type D.73739;
  struct value_type D.73736;
  const struct string D.73734;
  const struct string D.73731;
  const value_type D.73730;
  const struct string D.73728;
  struct vector D.73727;
  struct value_type D.73726;
  const struct string D.73724;
  struct vector D.73723;
  const struct string D.73718;
  const struct string D.73716;
  const value_type D.73715;
  const struct string D.73713;
  struct vector D.73712;
  struct vector D.73710;
  struct vector D.73708;
  struct value_type D.73696;
  const value_type D.73693;
  struct vector D.73691;
  const struct string D.73686;
  const struct string D.73683;
  struct value_type D.73681;
  struct vector D.73680;
  const struct string D.73673;
  struct vector D.73672;
  const struct string D.73670;
  const struct string D.73667;
  const value_type D.73666;
  const struct string D.73664;
  struct vector D.73663;
  const struct string D.73661;
  const value_type D.73660;
  const struct string D.73658;
  struct vector D.73657;
  const struct string D.73655;
  const value_type D.73654;
  const struct string D.73652;
  struct vector D.73651;
  const struct string D.73649;
  const value_type D.73648;
  const struct string D.73646;
  struct vector D.73645;
  const struct string D.73643;
  const value_type D.73642;
  const struct string D.73640;
  struct vector D.73639;
  const struct string D.73637;
  const value_type D.73636;
  const struct string D.73634;
  struct vector D.73633;
  const struct string D.73631;
  const struct string D.73629;
  const struct string D.73627;
  const struct string D.73625;
  struct basic_string D.73624;
  const struct string D.73615;
  struct string D.73614;
  struct basic_string D.73613;
  const struct string D.73618;
  struct string D.73617;
  struct basic_string D.73611;
  const struct string D.73609;
  const struct string D.73606;
  const struct string D.73604;
  const struct string D.73602;
  const struct string D.73600;
  const struct string D.73598;
  const struct string D.73596;
  const struct string D.73583;
  static const char __PRETTY_FUNCTION__[83] = "TrafficManager::TrafficManager(const Configuration&, const std::vector<Network*>&)";
  static const char __PRETTY_FUNCTION__[83] = "TrafficManager::TrafficManager(const Configuration&, const std::vector<Network*>&)";
  struct vector * pretmp_2;
  struct vector * pretmp_3;
  struct vector * pretmp_4;
  struct vector * pretmp_5;
  struct vector * pretmp_6;
  struct vector * pretmp_7;
  struct vector * pretmp_8;
  struct vector * pretmp_9;
  struct vector * pretmp_10;
  struct vector * pretmp_11;
  struct vector * pretmp_12;
  struct vector * pretmp_13;
  struct vector * pretmp_14;
  struct map * prephitmp_15;
  struct map * pretmp_16;
  struct vector * pretmp_17;
  int iftmp.48_18;
  long int _19;
  struct vector * pretmp_29;
  struct vector * pretmp_31;
  struct vector * pretmp_32;
  struct vector * pretmp_33;
  struct vector * pretmp_34;
  struct vector * pretmp_35;
  struct vector * pretmp_38;
  struct vector * pretmp_41;
  struct vector * pretmp_42;
  struct vector * pretmp_43;
  struct vector * pretmp_44;
  struct vector * pretmp_45;
  long int _53;
  struct vector * pretmp_55;
  struct vector * pretmp_56;
  int pretmp_59;
  struct map * pretmp_61;
  struct vector * pretmp_62;
  struct Module * _130;
  char * const _133;
  int * const _135;
  long unsigned int _137;
  int * const _140;
  double * const _141;
  double * const _142;
  int * const _143;
  int * const _144;
  int * const _145;
  int * const _146;
  int * const _147;
  int * const _148;
  int * const _149;
  int * const _150;
  const size_type _151;
  long int _152;
  struct _Rb_tree_node_base * _155;
  long int _156;
  long int _157;
  size_type _158;
  long unsigned int _159;
  struct basic_string & _163;
  struct _Rb_tree_node_base * _164;
  struct vector * pretmp_165;
  struct Network * _166;
  double * const _168;
  struct vector * pretmp_169;
  double * const _170;
  int _175;
  char * const _178;
  int _181;
  char * const _184;
  struct vector * _185;
  struct vector * pretmp_187;
  double * const _188;
  int _191;
  struct vector * pretmp_193;
  char * const _195;
  double * const _196;
  int _199;
  char * const _202;
  int _205;
  char * const _208;
  double * const _209;
  double * const _210;
  int _213;
  int _215;
  char * const _217;
  int _220;
  char * const _222;
  int _224;
  int _226;
  int _228;
  int _230;
  int _232;
  int _234;
  char * const _236;
  long int _239;
  char * const _242;
  struct vector * prephitmp_248;
  struct _Rep_type * pretmp_249;
  char * const _250;
  char * const _252;
  char * const _254;
  char * const _256;
  char * const _258;
  char * const _260;
  double * const _262;
  char * const _266;
  void (*<T8c16>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _268;
  int _272;
  bool _273;
  char * const _276;
  int _279;
  bool _280;
  char * const _283;
  bool _285;
  char * const _289;
  char * const _291;
  int * const _292;
  int _295;
  int * const _297;
  char * const _299;
  struct vector * _302;
  int * _305;
  char * const _307;
  int _310;
  char * const _316;
  double * _319;
  int _320;
  int _321;
  long unsigned int _322;
  int _324;
  struct vector * _327;
  double * _330;
  char * const _332;
  struct Network * & _333;
  long unsigned int _334;
  double _337;
  char * const _343;
  int * _346;
  double _347;
  int _348;
  long unsigned int _349;
  const struct vector & _351;
  struct vector * _354;
  int * _357;
  char * const _359;
  struct vector & _360;
  int _364;
  char * const _370;
  int * _373;
  struct vector * pretmp_374;
  int _375;
  int _376;
  long unsigned int _377;
  struct vector * _381;
  int * _384;
  char * const _386;
  struct _Rb_tree_node_base * _387;
  struct _Rb_tree_node_base * _388;
  int _391;
  char * const _397;
  int * _400;
  struct _Rb_tree_node_base * _401;
  int _402;
  int _403;
  long unsigned int _404;
  struct vector * _409;
  int * _412;
  char * const _414;
  struct vector * pretmp_415;
  int _418;
  char * const _424;
  int * _427;
  int _428;
  int _429;
  long unsigned int _430;
  struct vector & _432;
  struct vector * _435;
  int * _438;
  char * const _440;
  int _443;
  char * const _449;
  char * const _452;
  struct vector & _453;
  int _454;
  int _455;
  long unsigned int _456;
  long unsigned int _458;
  long int _461;
  char * const _463;
  struct vector & _464;
  int _467;
  struct vector * pretmp_468;
  struct vector * _469;
  int * _472;
  char * const _474;
  struct vector * pretmp_475;
  char * const _476;
  int * _479;
  struct vector * pretmp_480;
  struct BufferState * & _482;
  int * _485;
  struct vector * _486;
  int * _489;
  int _496;
  long unsigned int _497;
  const size_type _500;
  char * const _505;
  struct vector & _506;
  char * const _511;
  int _512;
  long unsigned int _513;
  struct vector & _514;
  long unsigned int _516;
  int * _519;
  struct vector * pretmp_522;
  int _523;
  int _524;
  struct vector * _526;
  struct vector * _527;
  char * const _532;
  struct vector * pretmp_533;
  int * _536;
  struct basic_string * _538;
  int _539;
  long unsigned int _540;
  int _543;
  long unsigned int _544;
  struct Network * & _545;
  long unsigned int _547;
  int _548;
  struct FlitChannel * _549;
  int * _552;
  struct FlitChannel * & _553;
  long unsigned int _556;
  long unsigned int _557;
  int max_val.40_560;
  struct vector * _564;
  int * _565;
  int * _569;
  int * _574;
  long unsigned int _579;
  struct FlitChannel * * _580;
  int _581;
  int _582;
  int _583;
  int _584;
  int _585;
  int _586;
  int _587;
  int _588;
  int _589;
  struct CreditChannel * _591;
  int * _594;
  struct vector * pretmp_595;
  struct Channel * & _596;
  struct vector * pretmp_597;
  double * const _599;
  int * _601;
  struct vector * pretmp_602;
  struct Channel * * _603;
  double * _606;
  struct vector * pretmp_607;
  int * _609;
  struct vector * pretmp_610;
  struct vector * _614;
  double * _617;
  char * const _619;
  int (*__vtbl_ptr_type) () _620;
  int (*__vtbl_ptr_type) () * _621;
  double _624;
  char * const _630;
  char * const _633;
  double _634;
  int _635;
  long unsigned int _636;
  struct vector * pretmp_638;
  int _641;
  char * const _643;
  double _645;
  long unsigned int _646;
  double _647;
  double _648;
  struct vector * _653;
  char * const _657;
  char * const _659;
  struct basic_string * _660;
  int _661;
  long unsigned int _662;
  int * const _664;
  int _666;
  long unsigned int _667;
  struct vector * _668;
  struct InjectionProcess * * const _669;
  struct vector & _670;
  struct vector * _673;
  int * _676;
  char * const _678;
  int _681;
  char * const _687;
  char * const _690;
  struct vector & _691;
  int _692;
  int _693;
  long unsigned int _694;
  char * const _698;
  char * const _700;
  struct basic_string * _701;
  int _702;
  long unsigned int _703;
  int _706;
  long unsigned int _707;
  struct vector * _708;
  struct vector * const _709;
  int _710;
  long unsigned int _711;
  struct InjectionProcess * & _712;
  int _713;
  struct TrafficPattern * _715;
  double & _717;
  double _718;
  int _719;
  struct InjectionProcess * _721;
  struct vector & _724;
  int _725;
  long unsigned int _726;
  struct vector * _727;
  struct vector * const _728;
  long unsigned int _729;
  int _732;
  long unsigned int _733;
  struct vector * _734;
  struct BufferState * * const _735;
  int * _738;
  int _739;
  long unsigned int _740;
  struct vector * _741;
  int _744;
  long unsigned int _746;
  long unsigned int _747;
  int * const _748;
  struct basic_string & _751;
  struct vector * pretmp_752;
  int * _753;
  int _758;
  struct vector * pretmp_759;
  struct basic_ostream & _761;
  char * const _763;
  void * _765;
  struct vector * pretmp_768;
  struct vector * pretmp_771;
  char * const _773;
  struct TrafficPattern * & _774;
  struct vector * pretmp_775;
  struct vector * pretmp_778;
  char * const _780;
  long unsigned int _781;
  struct vector * pretmp_782;
  int _784;
  int * const _785;
  int _787;
  struct basic_string & _788;
  struct vector * pretmp_789;
  int iftmp.48_790;
  char * const _793;
  char * const _795;
  long unsigned int _796;
  long unsigned int _797;
  struct Network * _798;
  int _799;
  int _800;
  char * _801;
  const size_type _802;
  char * const _804;
  int _806;
  long unsigned int _807;
  struct vector * pretmp_808;
  char * const _809;
  char * const _815;
  int * _817;
  char * const _819;
  char * const _821;
  char * const _823;
  char * const _830;
  struct vector & _832;
  long unsigned int _833;
  struct vector * _834;
  long unsigned int _836;
  int * _838;
  int _839;
  long unsigned int _840;
  struct vector * _841;
  _Bit_type * _842;
  int _844;
  long unsigned int _845;
  struct vector * _846;
  int * const _847;
  int _850;
  long unsigned int _852;
  long unsigned int _853;
  unsigned int _854;
  int * const _857;
  struct list * const _858;
  int _860;
  long unsigned int _861;
  struct list * const _862;
  struct vector * _868;
  int _871;
  long unsigned int _872;
  struct vector * _873;
  int _876;
  long unsigned int _877;
  struct vector * _878;
  int _881;
  long unsigned int _882;
  struct vector * _883;
  int _886;
  long unsigned int _887;
  struct vector * _888;
  struct vector * const _889;
  struct vector * _893;
  int _897;
  bool _898;
  long unsigned int _900;
  char * const _902;
  int _905;
  char * const _909;
  int _910;
  long unsigned int _911;
  struct vector * _912;
  int * const _913;
  int _915;
  long unsigned int _916;
  char * _917;
  struct Network * _918;
  const size_type _919;
  char * const _920;
  char * const _926;
  char * const _928;
  long int _930;
  struct basic_ostream & _933;
  double & _934;
  bool _938;
  char * const _940;
  char * const _942;
  long int _943;
  int _944;
  long unsigned int _945;
  char * const _950;
  char * const _952;
  int _955;
  char * const _958;
  int _961;
  char * const _964;
  int _967;
  int * const _969;
  char * const _971;
  struct vector * _974;
  int * _977;
  char * const _979;
  double * const _980;
  int & _981;
  int _984;
  char * const _990;
  char * const _993;
  int _994;
  int _995;
  long unsigned int _996;
  int _1000;
  bool _1001;
  double * const _1003;
  char * const _1005;
  struct vector & _1006;
  struct vector * _1009;
  double * _1012;
  char * const _1014;
  struct vector & _1015;
  double _1018;
  char * const _1024;
  double * _1027;
  long unsigned int _1028;
  double _1029;
  int _1030;
  long unsigned int _1031;
  struct vector * _1035;
  double * _1038;
  char * const _1040;
  int & _1041;
  double _1044;
  char * const _1050;
  double * _1053;
  double _1054;
  int _1055;
  long unsigned int _1056;
  int & _1058;
  struct vector * _1061;
  double * _1064;
  char * const _1066;
  double _1069;
  char * const _1075;
  double * _1078;
  int & _1079;
  double _1080;
  int _1081;
  long unsigned int _1082;
  struct vector * _1086;
  double * _1089;
  char * const _1091;
  int & _1092;
  double _1095;
  char * const _1101;
  double * _1104;
  double _1105;
  int _1106;
  long unsigned int _1107;
  struct vector * _1111;
  double * _1114;
  char * const _1116;
  int & _1117;
  long unsigned int _1118;
  double _1121;
  char * const _1127;
  char * const _1130;
  double _1132;
  int _1133;
  long unsigned int _1134;
  int & _1136;
  int _1139;
  char * const _1142;
  long unsigned int _1143;
  int _1146;
  bool _1147;
  char * const _1150;
  int _1153;
  int _1155;
  char * const _1157;
  int _1160;
  char * const _1162;
  long int _1164;
  char * const _1168;
  long int _1169;
  long int _1170;
  char * const _1175;
  long int _1176;
  int _1180;
  char * const _1182;
  int * _1185;
  struct vector & _1186;
  void * _1188;
  int _1193;
  long unsigned int _1194;
  struct vector * _1195;
  int _1197;
  long unsigned int _1198;
  struct vector * _1199;
  int _1201;
  long unsigned int _1202;
  struct vector * _1203;
  int _1205;
  long unsigned int _1206;
  struct vector * _1207;
  int _1209;
  long unsigned int _1210;
  struct vector * _1211;
  int _1213;
  long unsigned int _1214;
  struct vector * _1215;
  int _1217;
  long unsigned int _1218;
  struct vector * _1219;
  int _1221;
  long unsigned int _1222;
  struct vector * _1223;
  int _1225;
  long unsigned int _1226;
  struct vector * _1227;
  int _1229;
  long unsigned int _1230;
  struct vector * _1231;
  int _1233;
  long unsigned int _1234;
  struct vector * _1235;
  int _1237;
  long unsigned int _1238;
  struct vector * _1239;
  int _1241;
  long unsigned int _1242;
  struct vector * _1243;
  int _1245;
  long unsigned int _1246;
  struct vector * _1247;
  int _1249;
  long unsigned int _1250;
  struct vector * _1251;
  int _1253;
  long unsigned int _1254;
  struct vector * _1255;
  bool _1257;
  int _1258;
  long unsigned int _1259;
  struct vector * _1260;
  char * const _1262;
  struct Stats * * _1264;
  int _1265;
  long unsigned int _1266;
  struct vector * _1267;
  struct Stats * * _1269;
  struct Stats * * _1271;
  int _1272;
  long unsigned int _1273;
  struct vector * _1274;
  struct Stats * & _1276;
  int * _1278;
  struct Stats * * _1280;
  struct Stats * * _1282;
  int _1284;
  long unsigned int _1285;
  struct vector * _1286;
  int _1288;
  long unsigned int _1289;
  struct vector * _1290;
  int * _1292;
  int _1293;
  long unsigned int _1294;
  struct vector * _1295;
  long unsigned int _1297;
  int _1299;
  long unsigned int _1300;
  struct vector * _1301;
  int _1303;
  long unsigned int _1304;
  struct vector * _1305;
  int _1307;
  long unsigned int _1308;
  struct vector * _1309;
  int * _1311;
  int _1312;
  long unsigned int _1313;
  struct vector * _1314;
  int _1317;
  long unsigned int _1318;
  struct vector * _1319;
  int _1321;
  long unsigned int _1322;
  struct vector * _1323;
  int _1325;
  long unsigned int _1326;
  struct vector * _1327;
  int * _1329;
  int _1330;
  long unsigned int _1331;
  struct vector * _1332;
  int _1335;
  long unsigned int _1336;
  struct vector * _1337;
  int _1339;
  long unsigned int _1340;
  struct vector * _1341;
  int _1343;
  long unsigned int _1344;
  struct vector * _1345;
  int * _1347;
  int _1348;
  long unsigned int _1349;
  struct vector * _1350;
  int _1353;
  long unsigned int _1354;
  struct vector * _1355;
  int _1357;
  long unsigned int _1358;
  struct vector * _1359;
  int _1361;
  long unsigned int _1362;
  struct vector * _1363;
  int _1365;
  void * _1369;
  long unsigned int _1371;
  long unsigned int _1372;
  char * const _1375;
  struct Stats * & _1378;
  struct Stats * _1379;
  size_type _1382;
  char * const _1385;
  void * _1388;
  long int _1390;
  char * const _1393;
  struct Stats * & _1395;
  long int _1396;
  struct Stats * _1397;
  long int _1400;
  char * const _1403;
  void * _1406;
  char * const _1410;
  struct Stats * & _1412;
  long int _1413;
  struct Stats * _1414;
  char * const _1419;
  void * _1422;
  struct basic_string & _1424;
  char * const _1427;
  struct Stats * & _1429;
  long unsigned int _1430;
  struct Stats * _1431;
  char * const _1436;
  void * _1439;
  char * const _1441;
  char * const _1444;
  struct Stats * & _1446;
  struct Stats * _1447;
  char * _1450;
  char * const _1453;
  bool _1454;
  int _1455;
  int _1456;
  long unsigned int _1457;
  const size_type _1458;
  int _1460;
  int _1461;
  long unsigned int _1462;
  char * const _1463;
  int _1465;
  int _1466;
  long unsigned int _1467;
  struct vector & _1468;
  int _1470;
  long unsigned int _1471;
  long unsigned int _1472;
  int * const _1473;
  int * const _1476;
  int * const _1479;
  long int _1482;
  struct vector * pretmp_1483;
  bool _1484;
  int _1486;
  struct basic_ostream & _1488;
  struct basic_ostream & _1490;
  void * _1493;
  int _1495;
  int _1496;
  int _1497;
  long unsigned int _1498;
  long int _1499;
  long int _1500;
  char * const _1503;
  struct Stats * & _1505;
  int _1506;
  int _1507;
  int _1508;
  long unsigned int _1509;
  long int _1510;
  struct Stats * _1511;
  const size_type _1514;
  char * const _1516;
  struct basic_ostream & _1518;
  struct basic_ostream & _1520;
  void * _1523;
  int _1525;
  int _1526;
  int _1527;
  long unsigned int _1528;
  int * _1529;
  char * const _1532;
  struct Stats * & _1534;
  int _1535;
  int _1536;
  int _1537;
  long unsigned int _1538;
  struct vector * const _1539;
  int * _1540;
  struct Stats * _1541;
  struct _Rb_tree_node_base * _1544;
  const size_type _1545;
  char * const _1547;
  struct basic_ostream & _1549;
  struct basic_ostream & _1551;
  void * _1554;
  int _1556;
  int _1557;
  int _1558;
  long unsigned int _1559;
  char * const _1562;
  struct Stats * & _1564;
  int _1565;
  int _1566;
  int _1567;
  long unsigned int _1568;
  struct Stats * _1569;
  const size_type _1572;
  char * const _1573;
  char * const _1575;
  char * const _1578;
  char * const _1579;
  char * const _1582;
  char * const _1585;
  char * const _1586;
  char * const _1589;
  char * const _1592;
  char * const _1593;
  char * const _1596;
  char * const _1603;
  char * const _1604;
  char * const _1607;
  char * const _1610;
  char * const _1611;
  char * const _1614;
  char * const _1617;
  char * const _1618;
  char * const _1621;
  char * const _1624;
  char * const _1625;
  char * const _1628;
  char * const _1631;
  char * const _1632;
  char * const _1635;
  long unsigned int _1639;
  struct vector * _1640;
  int * const _1641;
  long unsigned int _1643;
  struct vector * _1644;
  struct list * _1645;
  char * const _1646;
  char * const _1647;
  int * _1648;
  int * _1649;
  char * const _1651;
  char * const _1652;
  char * const _1653;
  char * const _1654;
  struct vector * pretmp_1657;
  char * const _1665;
  int * _1667;
  int * _1669;
  int * _1671;
  int * _1673;
  struct Stats * * _1675;
  int * _1676;
  char * const _1678;
  char * const _1679;
  char * const _1681;
  char * const _1682;
  char * const _1684;
  char * const _1686;
  char * const _1688;
  char * const _1690;
  char * const _1691;
  char * const _1694;
  char * const _1695;
  char * const _1698;
  char * const _1699;
  char * const _1702;
  char * const _1703;
  char * const _1706;
  char * const _1707;
  char * const _1710;
  double * _1712;
  char * const _1713;
  char * const _1716;
  int * _1718;
  char * const _1720;
  char * const _1722;
  char * const _1723;
  char * const _1726;
  char * const _1727;
  char * const _1730;
  char * const _1731;
  struct Router * * _1734;
  char * const _1736;
  char * const _1737;
  int * _1748;
  int * _1752;
  struct BufferState * * _1754;
  char * const _1758;
  char * const _1759;
  char * const _1762;
  int * _1763;
  char * const _1768;
  char * const _1770;
  char * const _1771;
  char * const _1774;
  char * const _1775;
  char * const _1777;
  char * const _1778;
  char * const _1780;
  int * _1782;
  char * const _1783;
  char * const _1786;
  char * const _1787;
  char * const _1790;
  char * const _1791;
  char * const _1794;
  char * const _1795;
  char * const _1798;
  char * const _1799;
  char * const _1802;
  char * const _1803;
  char * const _1806;
  int * _1808;
  char * const _1810;
  char * const _1812;
  char * const _1813;
  char * const _1814;
  char * const _1816;
  char * const _1819;
  char * const _1820;
  char * const _1823;
  char * const _1826;
  char * const _1828;
  char * const _1830;
  char * const _1832;
  char * const _1834;
  char * const _1836;
  char * const _1838;
  struct vector * pretmp_1841;
  double * _1850;
  double * _1851;
  double * _1852;
  double * _1853;
  double * _1854;
  int * _1855;
  int * _1857;
  int * _1858;
  double * _1859;
  double * _1860;
  double * _1861;
  double * _1862;
  double * _1865;
  double * _1866;
  double * _1867;
  double * _1870;
  double * _1871;
  double * _1872;
  double * _1875;
  double * _1876;
  double * _1877;
  struct Stats * * _1880;
  double * _1881;
  double * _1888;
  double * _1889;
  struct Stats * * _1890;
  double * _1891;
  double * _1892;
  double * _1893;
  struct Stats * * _1894;
  double * _1895;
  double * _1896;
  double * _1897;
  struct Stats * * _1898;
  double * _1899;
  double * _1900;
  double * _1901;
  struct Stats * * _1902;
  int * _1903;
  int * _1904;
  long int _1905;
  struct vector * _1906;
  int * _1907;
  struct InjectionProcess * * _1908;
  long int _1915;
  struct list * _1916;
  long int _1917;
  _Bit_type * _1918;
  struct vector * _1922;
  struct vector * pretmp_1923;
  struct vector * _1924;
  struct TrafficPattern * * _1925;
  int * _1926;
  int * _1929;
  int * _1932;
  int * _1933;
  int * _1934;
  double * _1935;
  int * _1936;
  double * _1937;
  struct Network * * _1938;
  struct vector * prephitmp_1939;
  struct Module * * _1940;
  int * _1941;
  char * const _1949;
  const int _1950;
  const int _1951;
  struct BufferPolicy * _1952;
  int * _1953;
  int * _1954;
  int * _1955;
  int * _1956;
  int * _1957;
  int * _1958;
  int * _1959;
  int * _1960;
  int * _1961;
  int * _1962;
  struct vector * pretmp_1963;
  struct Network * * _1964;
  struct Network * * _1965;
  struct basic_string * const _1966;
  struct basic_string * const _1967;
  struct basic_string * _1968;
  struct basic_string * _1969;
  struct basic_string * _1970;
  struct vector * _1971;
  struct vector * _1972;
  struct vector * _1973;
  struct vector * _1974;
  struct vector * _1975;
  struct vector * _1976;
  struct vector * _1977;
  struct vector * _1978;
  struct vector * _1979;
  struct vector * _1980;
  struct vector * _1981;
  int * const _1982;
  int * const _1983;
  int * const _1984;
  int * const _1985;
  int * const _1986;
  int * const _1987;
  int * const _1988;
  int * const _1989;
  int * const _1990;
  int * const _1991;
  double * _1993;
  struct TrafficPattern * * _1994;
  struct InjectionProcess * * _1995;
  struct vector * _1996;
  struct vector * _1997;
  struct vector * _1998;
  struct vector * _1999;
  const int _2000;
  const int _2001;
  struct BufferState * * _2002;
  struct vector * _2003;
  struct vector * _2004;
  struct vector * _2005;
  struct Stats * * _2006;
  struct Stats * * _2007;
  struct Stats * * _2008;
  struct Stats * * _2009;
  struct Stats * * _2010;
  struct Stats * * _2011;
  struct Stats * * _2012;
  struct Stats * * _2013;
  struct Stats * * _2014;
  struct Stats * * _2015;
  struct Stats * * _2016;
  struct Stats * * _2017;
  struct Stats * * _2018;
  struct Stats * * _2019;
  struct Stats * * _2020;
  struct Stats * * _2021;
  struct vector * _2022;
  struct vector * _2023;
  struct vector * _2024;
  struct vector * _2025;
  struct vector * _2026;
  struct vector * _2027;
  struct vector * _2028;
  struct vector * _2029;
  struct vector * _2030;
  double * const _2031;
  double * const _2032;
  long int _2033;
  long int _2034;
  long int _2035;
  long int _2036;
  size_type _2037;
  long unsigned int _2039;
  int & _2040;
  long int _2041;
  long int _2042;
  long int _2043;
  long int _2044;
  size_type _2045;
  long unsigned int _2047;
  int & _2048;
  int _2049;
  char * const _2050;
  struct Stats * & _2051;
  struct Stats * & _2052;
  char * const _2053;
  struct Stats * & _2054;
  struct Stats * & _2055;
  char * const _2056;
  struct Stats * & _2057;
  struct Stats * & _2058;
  char * const _2059;
  struct Stats * & _2060;
  struct Stats * & _2061;
  char * const _2062;
  struct Stats * & _2063;
  long unsigned int _2064;
  struct vector & _2065;
  struct vector & _2066;
  struct vector & _2067;
  struct vector & _2069;
  struct vector & _2070;
  struct vector & _2071;
  struct vector & _2072;
  long unsigned int _2073;
  struct Stats * & _2074;
  struct vector & _2075;
  char * const _2076;
  long unsigned int _2077;
  struct Stats * & _2078;
  struct vector & _2079;
  long unsigned int _2080;
  struct Stats * & _2081;
  struct vector & _2082;
  char * const _2083;
  long unsigned int _2084;
  struct Stats * & _2085;
  struct vector & _2086;
  long unsigned int _2087;
  struct Stats * & _2088;
  struct vector & _2089;
  char * const _2090;
  long unsigned int _2091;
  struct Stats * & _2092;
  struct vector & _2093;
  struct _List_node_base * prephitmp_2094;
  struct _Rb_tree_node_base * _2096;
  struct _Rb_tree_node_base * _2097;
  struct _Rb_tree_node_base * _2098;
  struct _List_node_base * pretmp_2099;
  struct _Rb_tree_node_base * _2101;
  struct _Rb_tree_node_base * _2102;
  struct _Rb_tree_node_base * _2103;
  struct vector * pretmp_2172;
  struct vector * pretmp_2173;
  int pretmp_2319;
  struct _List_node_base * prephitmp_2320;
  struct vector * pretmp_2451;
  struct vector * pretmp_2452;
  struct vector * pretmp_2453;
  struct vector * pretmp_2454;
  struct vector * pretmp_2658;
  struct vector * pretmp_2659;
  struct vector * pretmp_2683;
  struct vector * pretmp_2684;
  struct vector * pretmp_2690;
  struct vector * pretmp_2691;
  struct vector * pretmp_2696;
  struct vector * pretmp_2697;
  struct vector * pretmp_2698;
  struct vector * pretmp_2699;
  struct vector * pretmp_2701;
  struct vector * prephitmp_2702;
  struct vector * pretmp_2703;
  struct vector * pretmp_2704;
  struct vector * pretmp_2706;
  struct vector * pretmp_2707;
  struct vector * pretmp_2708;
  struct vector * pretmp_2709;
  struct vector * pretmp_2711;
  struct vector * pretmp_2712;
  struct vector * pretmp_2713;
  struct vector * pretmp_2714;
  struct vector * pretmp_2716;
  struct vector * pretmp_2717;
  struct vector * pretmp_2718;
  struct vector * pretmp_2719;
  struct vector * pretmp_2721;
  struct vector * pretmp_2722;
  struct vector * pretmp_2723;
  struct vector * pretmp_2724;
  struct vector * pretmp_2726;
  struct vector * pretmp_2727;
  struct vector * pretmp_2728;
  struct vector * pretmp_2729;
  struct vector * pretmp_2739;
  struct vector * pretmp_2740;
  struct vector * pretmp_2741;
  struct vector * pretmp_2742;
  struct vector * pretmp_2745;
  struct vector * pretmp_2746;
  struct vector * pretmp_2747;
  struct vector * pretmp_2749;
  struct vector * pretmp_2750;
  struct vector * pretmp_2751;
  struct vector * pretmp_2752;
  struct vector * pretmp_2754;
  struct vector * pretmp_2755;
  struct vector * pretmp_2756;
  struct vector * pretmp_2757;
  struct vector * pretmp_2759;
  struct vector * pretmp_2760;
  struct vector * pretmp_2761;
  struct vector * pretmp_2762;
  struct vector * pretmp_2764;
  struct vector * pretmp_2765;
  struct vector * prephitmp_2766;
  struct vector * pretmp_2767;
  struct vector * pretmp_2769;
  struct vector * pretmp_2770;
  struct vector * pretmp_2771;
  struct vector * pretmp_2772;
  int * _2773;
  struct vector * pretmp_2775;
  struct vector * pretmp_2776;
  struct vector * pretmp_2777;
  struct vector * pretmp_2778;
  struct vector * prephitmp_2781;
  struct vector * prephitmp_2783;
  struct vector * pretmp_2785;
  struct vector * pretmp_2786;
  struct vector * pretmp_2787;
  struct vector * pretmp_2788;
  struct vector * pretmp_2790;
  struct vector * pretmp_2791;
  struct vector * pretmp_2792;
  struct vector * pretmp_2793;
  struct vector * pretmp_2795;
  struct vector * pretmp_2796;
  struct vector * pretmp_2797;
  struct vector * pretmp_2798;
  int * const pretmp_2801;
  int * const prephitmp_2802;
  struct vector * pretmp_2805;
  struct vector * pretmp_2806;
  struct vector * pretmp_2807;
  struct vector * prephitmp_2808;
  struct vector * pretmp_2810;
  struct vector * pretmp_2811;
  struct vector * pretmp_2812;
  struct vector * pretmp_2813;
  struct vector * pretmp_2814;
  struct vector * pretmp_2816;
  struct vector * pretmp_2817;
  struct vector * pretmp_2818;
  struct vector * pretmp_2819;
  struct vector * pretmp_2821;
  struct vector * pretmp_2822;
  struct vector * pretmp_2823;
  struct vector * pretmp_2824;
  struct list * pretmp_2827;
  struct list * prephitmp_2828;
  struct vector * pretmp_2831;
  struct vector * pretmp_2832;
  struct vector * pretmp_2833;
  struct vector * pretmp_2834;
  struct vector * pretmp_2835;
  struct vector * pretmp_2837;
  struct vector * pretmp_2838;
  struct vector * pretmp_2839;
  struct vector * pretmp_2840;
  struct vector * pretmp_2842;
  struct vector * pretmp_2843;
  struct vector * pretmp_2844;
  struct vector * pretmp_2845;
  struct vector * pretmp_2848;
  struct vector * prephitmp_2849;
  struct vector * pretmp_2852;
  struct vector * pretmp_2853;
  struct vector * pretmp_2854;
  struct vector * pretmp_2855;
  struct vector * pretmp_2856;
  struct vector * pretmp_2858;
  struct vector * pretmp_2859;
  struct vector * prephitmp_2860;
  struct vector * pretmp_2861;
  struct vector * pretmp_2863;
  struct vector * pretmp_2864;
  struct vector * pretmp_2865;
  struct vector * pretmp_2866;
  struct list * pretmp_2869;
  struct list * prephitmp_2870;
  struct vector * pretmp_2871;
  struct vector * pretmp_2873;
  struct vector * pretmp_2874;
  struct vector * pretmp_2875;
  struct vector * pretmp_2876;
  struct vector * pretmp_2877;
  struct vector * pretmp_2879;
  struct vector * pretmp_2880;
  struct vector * pretmp_2881;
  struct vector * pretmp_2882;
  struct vector * pretmp_2884;
  struct vector * pretmp_2885;
  struct vector * pretmp_2886;
  struct vector * pretmp_2887;
  struct vector * pretmp_2894;
  struct vector * pretmp_2895;
  struct vector * prephitmp_2896;
  struct vector * pretmp_2897;
  struct vector * pretmp_2898;
  struct vector * pretmp_2900;
  struct vector * pretmp_2901;
  struct vector * pretmp_2902;
  struct vector * pretmp_2903;
  struct vector * pretmp_2905;
  struct vector * pretmp_2906;
  struct vector * pretmp_2907;
  struct vector * pretmp_2908;
  struct vector * pretmp_2915;
  struct vector * pretmp_2916;
  struct vector * pretmp_2917;
  struct vector * pretmp_2918;
  struct vector * pretmp_2919;
  struct vector * pretmp_2921;
  struct vector * pretmp_2922;
  struct vector * prephitmp_2923;
  struct vector * pretmp_2924;
  struct vector * pretmp_2926;
  struct vector * pretmp_2927;
  struct vector * pretmp_2928;
  struct vector * prephitmp_2929;
  struct vector * pretmp_2936;
  struct vector * pretmp_2937;
  struct vector * pretmp_2938;
  struct vector * pretmp_2939;
  struct vector * pretmp_2941;
  struct vector * pretmp_2942;
  struct vector * pretmp_2943;
  struct vector * pretmp_2944;
  struct vector * pretmp_2945;
  struct vector * pretmp_2947;
  struct vector * pretmp_2948;
  struct vector * pretmp_2949;
  struct vector * pretmp_2950;
  struct vector * pretmp_2951;
  struct vector * pretmp_2964;
  struct vector * pretmp_2965;
  struct vector * pretmp_2967;
  struct vector * pretmp_2968;
  struct vector * pretmp_2969;
  struct vector * pretmp_2970;
  struct vector * pretmp_2971;
  struct vector * pretmp_2979;
  struct vector * pretmp_2980;
  struct vector * pretmp_2981;
  struct vector * pretmp_2982;
  struct vector * pretmp_2983;
  struct vector * pretmp_2985;
  struct vector * pretmp_2986;
  struct vector * pretmp_2987;
  struct vector * pretmp_2988;
  struct vector * pretmp_2990;
  struct vector * pretmp_2991;
  struct vector * pretmp_2992;
  struct vector * pretmp_2993;
  struct vector * pretmp_2995;
  struct vector * pretmp_2996;
  struct vector * pretmp_2997;
  struct vector * pretmp_2998;
  struct vector * pretmp_2999;
  struct vector * pretmp_3000;
  struct vector * pretmp_3001;
  struct vector * pretmp_3008;
  struct vector * pretmp_3009;
  struct vector * pretmp_3019;
  struct vector * pretmp_3020;
  struct vector * pretmp_3021;
  struct vector * prephitmp_3023;
  struct vector * pretmp_3024;
  struct vector * pretmp_3025;
  struct vector * prephitmp_3026;
  struct vector * pretmp_3042;
  struct vector * pretmp_3044;
  struct vector * pretmp_3045;
  struct vector * pretmp_3046;
  struct vector * pretmp_3048;
  struct vector * prephitmp_3049;
  struct vector * pretmp_3052;
  struct vector * pretmp_3053;
  struct vector * pretmp_3054;
  struct vector * prephitmp_3061;
  struct vector * pretmp_3062;
  struct vector * pretmp_3069;
  struct vector * pretmp_3070;
  int * prephitmp_3085;
  struct vector * pretmp_3098;
  struct vector * prephitmp_3099;
  struct vector * pretmp_3101;
  int * prephitmp_3105;
  int prephitmp_3106;
  int prephitmp_3111;
  struct vector * pretmp_3113;
  int prephitmp_3118;
  int * pretmp_3119;
  double * pretmp_3161;
  struct BufferState * * pretmp_3178;
  struct BufferState * * prephitmp_3179;
  const void * pretmp_3187;
  long unsigned int pretmp_3191;
  long unsigned int prephitmp_3192;
  int prephitmp_3196;
  const void * pretmp_3199;
  int pretmp_3239;
  struct _List_node_base * pretmp_3263;
  struct _List_node_base * prephitmp_3264;
  int pretmp_3274;
  int prephitmp_3275;
  int pretmp_3288;
  int prephitmp_3293;
  long unsigned int pretmp_3294;
  long unsigned int prephitmp_3295;
  int pretmp_3310;
  struct _List_node_base * pretmp_3329;
  struct _List_node_base * prephitmp_3330;
  struct Router * * pretmp_3338;
  struct Router * * prephitmp_3339;
  int prephitmp_3343;
  struct _Rep_type * pretmp_3344;
  struct _Rep_type * pretmp_3349;
  long unsigned int pretmp_3355;
  long unsigned int prephitmp_3356;
  int prephitmp_3358;
  int pretmp_3375;
  long unsigned int prephitmp_3378;
  int pretmp_3384;
  long unsigned int pretmp_3386;
  int pretmp_3394;
  long unsigned int pretmp_3396;
  long unsigned int prephitmp_3397;
  long unsigned int pretmp_3425;
  long unsigned int prephitmp_3426;
  struct map * pretmp_3432;
  int prephitmp_3441;
  struct map * prephitmp_3452;
  struct map * pretmp_3461;
  struct map * pretmp_3462;
  struct map * pretmp_3463;
  struct map * pretmp_3464;
  struct map * pretmp_3465;
  struct map * pretmp_3467;
  struct map * pretmp_3468;
  struct map * pretmp_3469;
  struct map * pretmp_3472;
  struct map * pretmp_3473;
  struct map * pretmp_3474;
  struct map * pretmp_3475;
  struct map * pretmp_3482;
  struct map * pretmp_3483;
  struct map * pretmp_3484;
  struct map * pretmp_3485;
  struct map * pretmp_3486;
  struct map * pretmp_3488;
  struct map * pretmp_3489;
  struct map * pretmp_3490;
  struct map * pretmp_3491;
  struct map * pretmp_3493;
  struct map * pretmp_3494;
  struct map * pretmp_3495;
  struct map * pretmp_3496;
  struct map * pretmp_3503;
  struct map * pretmp_3504;
  struct map * pretmp_3505;
  struct map * pretmp_3506;
  struct map * pretmp_3507;
  struct map * pretmp_3509;
  struct map * pretmp_3510;
  struct map * pretmp_3511;
  struct map * pretmp_3512;
  struct map * pretmp_3514;
  struct map * pretmp_3515;
  struct map * pretmp_3516;
  struct map * pretmp_3517;
  struct map * pretmp_3524;
  struct map * pretmp_3525;
  struct map * pretmp_3526;
  struct map * pretmp_3527;
  struct vector * pretmp_3529;
  struct vector * prephitmp_3530;
  struct map * pretmp_3531;
  struct map * pretmp_3532;
  struct vector * pretmp_3534;
  struct vector * pretmp_3535;
  struct vector * pretmp_3536;
  struct vector * pretmp_3537;
  struct vector * pretmp_3539;
  struct vector * pretmp_3540;
  struct vector * pretmp_3541;
  struct vector * pretmp_3542;
  struct vector * pretmp_3546;
  struct vector * pretmp_3547;
  struct vector * pretmp_3548;
  struct vector * pretmp_3549;
  struct vector * pretmp_3553;
  struct vector * pretmp_3554;
  struct vector * pretmp_3555;
  struct vector * pretmp_3556;
  struct _Rep_type * pretmp_3558;
  struct vector * pretmp_3561;
  struct vector * pretmp_3562;
  struct vector * pretmp_3563;
  struct vector * pretmp_3564;
  struct vector * pretmp_3571;
  struct vector * pretmp_3572;
  struct vector * pretmp_3573;
  struct vector * pretmp_3574;
  struct vector * pretmp_3575;
  struct vector * pretmp_3580;
  struct vector * pretmp_3581;
  struct vector * pretmp_3582;
  struct vector * pretmp_3583;
  struct vector * pretmp_3584;
  struct vector * pretmp_3589;
  struct vector * pretmp_3590;
  struct vector * pretmp_3591;
  struct vector * pretmp_3592;
  struct vector * pretmp_3593;
  struct vector * pretmp_3616;
  struct vector * pretmp_3617;
  struct vector * prephitmp_3618;
  struct vector * pretmp_3619;
  struct vector * pretmp_3620;
  struct vector * pretmp_3625;
  struct vector * pretmp_3626;
  struct vector * pretmp_3627;
  struct vector * pretmp_3628;
  struct vector * pretmp_3629;
  struct vector * pretmp_3634;
  struct vector * pretmp_3635;
  struct vector * pretmp_3636;
  struct vector * pretmp_3637;
  struct vector * pretmp_3638;
  struct vector * pretmp_3643;
  struct vector * pretmp_3644;
  struct vector * pretmp_3645;
  struct vector * pretmp_3646;
  struct vector * pretmp_3647;
  struct vector * pretmp_3651;
  struct vector * pretmp_3652;
  struct vector * pretmp_3653;
  struct vector * pretmp_3654;
  struct vector * pretmp_3657;
  struct vector * pretmp_3658;
  struct vector * pretmp_3659;
  struct vector * pretmp_3660;
  struct vector * pretmp_3663;
  struct vector * pretmp_3664;
  struct vector * pretmp_3665;
  struct vector * pretmp_3666;
  struct vector * pretmp_3670;
  struct vector * pretmp_3671;
  struct vector * pretmp_3672;
  struct vector * pretmp_3673;
  struct vector * pretmp_3676;
  struct vector * pretmp_3677;
  struct vector * prephitmp_3678;
  struct vector * pretmp_3679;
  struct vector * pretmp_3682;
  struct vector * pretmp_3683;
  struct vector * pretmp_3684;
  struct vector * pretmp_3685;
  struct vector * pretmp_3689;
  struct vector * pretmp_3690;
  struct vector * pretmp_3691;
  struct vector * pretmp_3692;
  struct vector * pretmp_3695;
  struct vector * pretmp_3696;
  struct vector * pretmp_3697;
  struct vector * pretmp_3698;
  struct vector * pretmp_3701;
  struct vector * pretmp_3702;
  struct vector * pretmp_3703;
  struct vector * pretmp_3704;
  struct vector * pretmp_3708;
  struct vector * pretmp_3709;
  struct vector * pretmp_3710;
  struct vector * pretmp_3711;
  struct vector * pretmp_3714;
  struct vector * pretmp_3715;
  struct vector * pretmp_3716;
  struct vector * pretmp_3717;
  struct vector * pretmp_3720;
  struct vector * pretmp_3721;
  struct vector * pretmp_3722;
  struct vector * pretmp_3723;
  struct vector * pretmp_3727;
  struct vector * pretmp_3728;
  struct vector * pretmp_3729;
  struct vector * prephitmp_3730;
  struct vector * pretmp_3733;
  struct vector * pretmp_3734;
  struct vector * pretmp_3735;
  struct vector * pretmp_3736;
  struct vector * pretmp_3739;
  struct vector * pretmp_3740;
  struct vector * pretmp_3741;
  struct vector * pretmp_3742;
  struct vector * pretmp_3748;
  struct vector * pretmp_3749;
  struct vector * pretmp_3750;
  struct vector * pretmp_3751;
  struct vector * pretmp_3754;
  struct vector * pretmp_3755;
  struct vector * pretmp_3756;
  struct vector * pretmp_3757;
  struct vector * pretmp_3758;
  struct vector * pretmp_3760;
  struct vector * pretmp_3761;
  struct vector * pretmp_3762;
  struct vector * pretmp_3763;
  struct vector * prephitmp_3769;
  struct vector * pretmp_3770;
  struct vector * pretmp_3771;
  struct vector * pretmp_3772;
  struct vector * pretmp_3775;
  struct vector * pretmp_3776;
  struct vector * pretmp_3777;
  struct vector * pretmp_3778;
  struct vector * pretmp_3779;
  struct vector * pretmp_3781;
  struct vector * pretmp_3782;
  struct vector * pretmp_3783;
  struct vector * pretmp_3784;
  struct vector * pretmp_3790;
  struct vector * pretmp_3791;
  struct vector * pretmp_3792;
  struct vector * pretmp_3793;
  struct vector * pretmp_3796;
  struct vector * pretmp_3797;
  struct vector * pretmp_3798;
  struct vector * pretmp_3799;
  int * const _3800;
  struct vector * pretmp_3802;
  struct vector * pretmp_3803;
  struct vector * pretmp_3804;
  struct vector * pretmp_3805;
  struct vector * prephitmp_3927;
  struct vector * pretmp_3928;
  struct vector * pretmp_3929;
  struct vector * pretmp_3932;
  struct vector * pretmp_3933;
  struct vector * pretmp_3934;
  struct vector * pretmp_3935;
  struct vector * pretmp_3938;
  struct vector * pretmp_3939;
  struct vector * pretmp_3940;
  struct vector * pretmp_3941;
  struct vector * pretmp_3944;
  struct vector * pretmp_3945;
  struct vector * pretmp_3946;
  struct vector * pretmp_3949;
  struct vector * pretmp_3950;
  struct vector * pretmp_3951;
  struct vector * pretmp_3954;
  struct vector * pretmp_3955;
  struct vector * pretmp_3956;
  struct vector * pretmp_3959;
  struct vector * pretmp_3960;
  struct vector * pretmp_3961;
  struct vector * pretmp_3964;
  struct vector * pretmp_3965;
  struct vector * pretmp_3966;
  struct vector * pretmp_3967;
  long unsigned int pretmp_4321;
  long unsigned int prephitmp_4322;
  long unsigned int pretmp_4323;
  long unsigned int prephitmp_4324;
  struct vector * prephitmp_4326;
  struct vector * pretmp_4328;
  struct vector * prephitmp_4329;
  struct vector * pretmp_4330;
  struct vector * prephitmp_4332;
  struct vector * pretmp_4334;
  struct vector * prephitmp_4335;
  struct vector * pretmp_4337;
  struct vector * prephitmp_4338;
  bool pretmp_4350;
  bool prephitmp_4351;
  int * const pretmp_4354;
  int * const prephitmp_4355;
  double * const pretmp_4357;
  double * const prephitmp_4359;
  int * const pretmp_4361;
  int * const prephitmp_4362;
  int * const pretmp_4364;
  int * const prephitmp_4365;
  int * const pretmp_4367;
  int * const prephitmp_4369;
  struct vector * pretmp_4372;
  struct vector * pretmp_4374;
  struct vector * pretmp_4375;
  struct vector * pretmp_4376;
  struct vector * pretmp_4379;
  struct vector * pretmp_4380;
  struct vector * pretmp_4381;
  struct vector * pretmp_4382;
  struct vector * pretmp_4384;
  struct vector * pretmp_4385;
  struct vector * pretmp_4386;
  struct vector * pretmp_4387;
  struct vector * pretmp_4389;
  struct vector * pretmp_4390;
  struct vector * pretmp_4391;
  struct vector * pretmp_4392;
  struct vector * pretmp_4394;
  struct vector * pretmp_4395;
  struct vector * pretmp_4396;
  struct vector * pretmp_4397;
  struct vector * pretmp_4399;
  struct vector * pretmp_4400;
  struct vector * pretmp_4402;
  struct vector * pretmp_4404;
  struct vector * pretmp_4405;
  struct vector * prephitmp_4406;
  struct vector * pretmp_4407;
  struct vector * pretmp_4410;
  struct vector * pretmp_4411;
  struct vector * pretmp_4412;
  struct vector * pretmp_4414;
  struct vector * pretmp_4415;
  struct vector * pretmp_4416;
  struct vector * pretmp_4417;
  struct vector * pretmp_4419;
  struct vector * pretmp_4420;
  struct vector * pretmp_4421;
  struct vector * pretmp_4422;
  struct vector * pretmp_4424;
  struct vector * pretmp_4425;
  struct vector * pretmp_4426;
  struct vector * pretmp_4427;
  struct vector * pretmp_4429;
  struct vector * pretmp_4430;
  struct vector * pretmp_4431;
  struct vector * prephitmp_4432;
  double * const pretmp_4435;
  double * const prephitmp_4436;
  struct vector * pretmp_4439;
  struct vector * prephitmp_4440;
  int * const pretmp_4446;
  int * const prephitmp_4447;
  struct vector * pretmp_4450;
  struct vector * pretmp_4451;
  struct vector * pretmp_4452;
  struct vector * pretmp_4453;
  struct vector * pretmp_4456;
  struct vector * pretmp_4457;
  struct vector * pretmp_4458;
  struct vector * prephitmp_4459;
  struct vector * pretmp_4462;
  struct vector * pretmp_4463;
  struct vector * pretmp_4464;
  struct vector * pretmp_4465;
  struct vector * pretmp_4468;
  struct vector * pretmp_4469;
  struct vector * pretmp_4470;
  struct vector * pretmp_4471;
  struct vector * pretmp_4474;
  struct vector * pretmp_4475;
  struct vector * pretmp_4476;
  struct vector * pretmp_4477;
  struct vector * pretmp_4480;
  struct vector * pretmp_4481;
  struct vector * prephitmp_4482;
  struct vector * pretmp_4483;
  struct vector * pretmp_4486;
  struct vector * pretmp_4487;
  struct vector * pretmp_4488;
  struct vector * pretmp_4489;
  struct vector * pretmp_4492;
  struct vector * pretmp_4493;
  struct vector * pretmp_4494;
  struct vector * pretmp_4495;
  struct vector * pretmp_4498;
  struct vector * pretmp_4499;
  struct vector * pretmp_4500;
  struct vector * pretmp_4501;
  struct vector * pretmp_4504;
  struct vector * pretmp_4505;
  struct vector * pretmp_4506;
  struct vector * pretmp_4507;
  struct vector * pretmp_4510;
  struct vector * pretmp_4511;
  struct vector * pretmp_4512;
  struct vector * prephitmp_4513;
  struct vector * pretmp_4516;
  struct vector * pretmp_4517;
  struct vector * pretmp_4518;
  struct vector * pretmp_4519;
  struct vector * pretmp_4522;
  struct vector * pretmp_4523;
  struct vector * pretmp_4524;
  struct vector * pretmp_4525;
  struct vector * pretmp_4528;
  struct vector * pretmp_4529;
  struct vector * pretmp_4530;
  struct vector * pretmp_4531;
  struct vector * pretmp_4534;
  struct vector * pretmp_4535;
  struct vector * pretmp_4536;
  struct vector * pretmp_4537;
  struct vector * pretmp_4540;
  struct vector * pretmp_4541;
  struct vector * pretmp_4542;
  struct vector * pretmp_4543;
  struct vector * pretmp_4546;
  struct vector * prephitmp_4547;
  struct vector * pretmp_4548;
  struct vector * pretmp_4549;
  struct vector * pretmp_4552;
  struct vector * pretmp_4553;
  struct vector * pretmp_4554;
  struct vector * pretmp_4555;
  struct vector * pretmp_4558;
  struct vector * pretmp_4559;
  struct vector * pretmp_4560;
  struct vector * pretmp_4561;
  struct vector * pretmp_4564;
  struct vector * pretmp_4565;
  struct vector * pretmp_4566;
  struct vector * pretmp_4567;
  struct vector * pretmp_4570;
  struct vector * pretmp_4571;
  struct vector * pretmp_4572;
  struct vector * pretmp_4573;
  struct vector * pretmp_4576;
  struct vector * pretmp_4577;
  struct vector * pretmp_4578;
  struct vector * pretmp_4579;
  struct vector * prephitmp_4582;
  int pretmp_4588;
  int prephitmp_4589;
  struct BufferState * * pretmp_4609;
  struct BufferState * * prephitmp_4613;
  long unsigned int prephitmp_4631;
  const void * pretmp_4636;
  const void * pretmp_4637;
  void * _4638;
  void * _4639;
  int pretmp_4642;
  int pretmp_4643;
  long unsigned int pretmp_4645;
  long unsigned int pretmp_4648;
  long unsigned int prephitmp_4649;
  void * _4650;
  int _4651;
  void * _4654;
  void * _4655;
  struct Router * * pretmp_4656;
  struct Router * * prephitmp_4660;
  void * _4661;
  void * _4662;
  void * _4663;
  int * const pretmp_4666;
  int * const prephitmp_4667;
  int _4668;
  double * const pretmp_4669;
  double * const prephitmp_4672;
  void * _4673;
  double * const pretmp_4674;
  double * const prephitmp_4675;
  int _4678;
  double * const pretmp_4679;
  double * const prephitmp_4680;
  int _4681;
  double * const pretmp_4684;
  double * const prephitmp_4685;
  int max_val.40_4686;
  double * const pretmp_4687;
  double * const prephitmp_4690;
  struct _Rep_type * pretmp_4691;
  struct _Rep_type * pretmp_4692;
  struct _Rep_type * pretmp_4693;
  struct _Rep_type * prephitmp_4696;
  struct vector * pretmp_4697;
  struct vector * pretmp_4698;
  struct vector * pretmp_4699;
  struct vector * pretmp_4702;
  struct vector * pretmp_4703;
  struct vector * pretmp_4704;
  struct vector * pretmp_4705;
  struct vector * pretmp_4708;
  struct vector * pretmp_4709;
  struct vector * pretmp_4710;
  struct vector * pretmp_4711;
  struct vector * pretmp_4714;
  struct vector * pretmp_4715;
  struct vector * pretmp_4716;
  struct vector * pretmp_4717;
  struct vector * pretmp_4720;
  struct vector * pretmp_4721;
  struct vector * pretmp_4722;
  struct vector * pretmp_4723;
  struct vector * pretmp_4726;
  struct vector * pretmp_4727;
  struct vector * pretmp_4728;
  struct vector * pretmp_4729;
  struct vector * pretmp_4732;
  struct vector * pretmp_4733;
  struct vector * pretmp_4734;
  struct vector * pretmp_4735;
  struct vector * pretmp_4738;
  struct vector * prephitmp_4739;
  struct vector * pretmp_4740;
  struct vector * pretmp_4741;
  struct vector * pretmp_4744;
  struct vector * pretmp_4745;
  struct vector * pretmp_4746;
  struct vector * pretmp_4747;
  struct vector * pretmp_4750;
  struct vector * pretmp_4751;
  struct vector * pretmp_4752;
  struct vector * pretmp_4753;
  struct vector * pretmp_4756;
  struct vector * pretmp_4757;
  struct vector * pretmp_4758;
  struct vector * pretmp_4759;
  struct vector * pretmp_4762;
  struct vector * pretmp_4763;
  struct vector * pretmp_4764;
  struct vector * pretmp_4765;
  struct vector * pretmp_4768;
  struct vector * pretmp_4769;
  struct vector * pretmp_4770;
  struct vector * pretmp_4771;
  struct vector * pretmp_4774;
  struct vector * pretmp_4775;
  struct vector * pretmp_4776;
  struct vector * pretmp_4777;
  struct vector * pretmp_4780;
  struct vector * pretmp_4781;
  struct vector * pretmp_4782;
  struct vector * pretmp_4783;
  void * PROF_4784;
  struct vector * pretmp_4785;
  struct Network * * const _4786;
  struct Network * * const _4787;
  long int _4788;
  long int _4789;
  long int _4790;
  long int _4791;
  size_type _4792;
  struct Network * * _4795;
  struct Network * * const _4796;
  struct Network * * const _4797;
  long int __last.66_4798;
  long int __first.67_4799;
  long int _4800;
  long unsigned int _4802;
  struct Network * * _4804;
  struct Stats * * _4805;
  struct Stats * * iftmp.356_4806;
  struct _Rep_type * pretmp_4807;
  char * const _4808;
  const size_type _4809;
  char * _4810;
  char * const _4811;
  const size_type _4812;
  int iftmp.48_4813;
  int * const _4814;
  char * const _4816;
  const size_type _4817;
  char * _4818;
  const size_type _4819;
  char * const _4820;
  char * const _4821;
  struct vector * pretmp_4823;
  const struct first_type & _4824;
  int _4825;
  struct vector * pretmp_4828;
  const struct first_type & _4829;
  int _4830;
  struct vector * pretmp_4833;
  struct vector * pretmp_4834;
  int * _4835;
  struct vector * pretmp_4836;
  struct vector * pretmp_4837;
  struct _Rep_type * pretmp_4838;
  struct _Rep_type * pretmp_4839;
  struct vector * pretmp_4840;
  int * _4841;
  struct _Rep_type * pretmp_4842;
  struct vector * _4843;
  struct vector * _4844;
  struct vector * _4846;
  int * _4849;
  struct vector * pretmp_4850;
  struct vector * pretmp_4851;
  long unsigned int _4854;
  int * _4855;
  struct _Rep_type * pretmp_4856;
  struct vector * _4857;
  struct vector * _4858;
  struct vector * _4860;
  int * _4861;
  int * _4863;
  struct vector * _4864;
  struct vector * _4866;
  int * _4867;
  int * _4869;
  struct vector * prephitmp_4870;
  struct _Rep_type * pretmp_4871;
  int * _4872;
  struct _Rep_type * pretmp_4873;
  struct vector * pretmp_4874;
  struct vector * pretmp_4875;
  struct vector * pretmp_4876;
  struct _Rep_type * pretmp_4877;
  int * _4878;
  int _4879;
  int * _4880;
  struct _Rep_type * pretmp_4881;
  struct vector * pretmp_4882;
  int * _4883;
  struct vector * pretmp_4884;
  struct vector * pretmp_4886;
  struct vector * pretmp_4887;
  struct vector * pretmp_4888;
  int * _4889;
  struct vector * pretmp_4890;
  struct TrafficPattern * * const _4891;
  struct TrafficPattern * * const _4892;
  long int _4893;
  long int _4894;
  long int _4895;
  long int _4896;
  size_type _4897;
  long unsigned int _4898;
  long unsigned int _4899;
  struct TrafficPattern * * _4900;
  struct InjectionProcess * * const _4901;
  long int _4902;
  long int _4903;
  long int _4904;
  long int _4905;
  size_type _4906;
  long unsigned int _4907;
  long unsigned int _4908;
  struct InjectionProcess * * _4909;
  struct vector * const _4910;
  long int _4911;
  long int _4912;
  long int _4913;
  long int _4914;
  size_type _4915;
  long unsigned int _4916;
  long unsigned int _4917;
  struct vector * pretmp_4919;
  struct BufferState * * _4920;
  struct vector * const _4922;
  long int _4923;
  long int _4924;
  long int _4925;
  long int _4926;
  size_type _4927;
  long unsigned int _4928;
  long unsigned int _4929;
  struct vector * pretmp_4931;
  struct BufferState * * const _4933;
  long int _4934;
  long int _4935;
  long int _4936;
  long int _4937;
  size_type _4938;
  long unsigned int _4939;
  long unsigned int _4940;
  struct BufferState * * _4941;
  int * const _4942;
  long int _4943;
  long int _4944;
  long int _4945;
  long int _4946;
  size_type _4947;
  long unsigned int _4948;
  long unsigned int _4949;
  int * _4950;
  struct vector * pretmp_4951;
  long int _4953;
  sizetype iftmp.347_4954;
  struct basic_ios * _4955;
  struct vector * pretmp_4957;
  struct vector * pretmp_4958;
  struct vector * pretmp_4959;
  struct vector * pretmp_4960;
  struct vector * pretmp_4961;
  struct vector * pretmp_4962;
  struct vector * pretmp_4963;
  struct vector * pretmp_4964;
  long int _4965;
  sizetype iftmp.352_4966;
  struct basic_ios * _4967;
  struct vector * pretmp_4968;
  struct vector * pretmp_4969;
  struct vector * pretmp_4970;
  struct vector * pretmp_4971;
  struct vector * pretmp_4972;
  struct vector * pretmp_4973;
  struct _Rep_type * prephitmp_4974;
  struct vector * pretmp_4975;
  struct vector * pretmp_4976;
  struct vector * pretmp_4977;
  struct vector * pretmp_4980;
  struct vector * pretmp_4981;
  int * const _4984;
  long int _4985;
  long int _4986;
  long int _4987;
  long int _4988;
  size_type _4989;
  long unsigned int _4990;
  long unsigned int _4991;
  int * _4992;
  struct vector * pretmp_4993;
  int prephitmp_4994;
  long int _4995;
  sizetype iftmp.352_4996;
  struct basic_ios * _4997;
  int prephitmp_4998;
  struct vector * pretmp_4999;
  struct vector * pretmp_5000;
  struct vector * const _5002;
  struct vector * const _5003;
  long int _5004;
  long int _5005;
  long int _5006;
  long int _5007;
  size_type _5008;
  long unsigned int _5009;
  long unsigned int _5010;
  struct vector * pretmp_5012;
  struct vector * prephitmp_5013;
  long unsigned int * const _5015;
  struct vector * pretmp_5016;
  long int _5017;
  long int _5018;
  long int _5019;
  long unsigned int _5020;
  sizetype _5021;
  long unsigned int * _5022;
  struct vector * const _5023;
  struct vector * const _5024;
  long int _5025;
  long int _5026;
  long int _5027;
  long int _5028;
  size_type _5029;
  long unsigned int _5030;
  long unsigned int _5031;
  int _5033;
  int * const _5035;
  long int _5036;
  long int _5037;
  long int _5038;
  long int _5039;
  size_type _5040;
  long unsigned int _5041;
  long unsigned int _5042;
  int * _5043;
  _Bit_type * _5044;
  unsigned int _5045;
  _Bit_type * _5046;
  long int _5047;
  long int _5048;
  long int _5049;
  long int _5050;
  long int _5051;
  long int _5052;
  long int _5053;
  ptrdiff_t _5054;
  size_type _5055;
  long int __new_size.239_5056;
  long int _5058;
  long unsigned int _5059;
  long unsigned int _5060;
  unsigned int _5066;
  long unsigned int _5068;
  struct vector * pretmp_5069;
  struct list * const _5070;
  long int _5071;
  long int _5072;
  long int _5073;
  long int _5074;
  size_type _5075;
  long unsigned int _5076;
  long unsigned int _5077;
  struct vector * pretmp_5079;
  struct _Rep_type * pretmp_5082;
  struct list * const _5085;
  long int _5086;
  long int _5087;
  long int _5088;
  long int _5089;
  size_type _5090;
  long unsigned int _5091;
  long unsigned int _5092;
  long unsigned int prephitmp_5094;
  struct vector * const _5100;
  long int _5101;
  long int _5102;
  long int _5103;
  long int _5104;
  size_type _5105;
  long unsigned int _5106;
  long unsigned int _5107;
  struct _Rep_type * pretmp_5109;
  struct Router * * _5110;
  int * const _5112;
  long int _5113;
  long int _5114;
  long int _5115;
  long int _5116;
  size_type _5117;
  long unsigned int _5118;
  long unsigned int _5119;
  int * _5120;
  int * const _5121;
  long int _5122;
  long int _5123;
  long int _5124;
  long int _5125;
  size_type _5126;
  long unsigned int _5127;
  long unsigned int _5128;
  int * _5129;
  int * const _5130;
  long int _5131;
  long int _5132;
  long int _5133;
  long int _5134;
  size_type _5135;
  long unsigned int _5136;
  long unsigned int _5137;
  int * _5138;
  int * const _5139;
  long int _5140;
  long int _5141;
  long int _5142;
  long int _5143;
  size_type _5144;
  long unsigned int _5145;
  long unsigned int _5146;
  int * _5147;
  struct vector * pretmp_5148;
  struct vector * pretmp_5149;
  char * const _5152;
  struct vector * pretmp_5153;
  const size_type _5154;
  _Ios_Openmode _5155;
  int __a.417_5156;
  int _5157;
  int * const _5158;
  char * const _5160;
  struct vector * pretmp_5162;
  struct vector * pretmp_5163;
  struct vector * prephitmp_5164;
  char * const _5166;
  struct vector * pretmp_5167;
  const size_type _5168;
  _Ios_Openmode _5169;
  int __a.417_5170;
  int _5171;
  int * const _5172;
  char * const _5174;
  struct vector * prephitmp_5176;
  struct vector * pretmp_5177;
  struct vector * pretmp_5178;
  char * const _5180;
  struct vector * pretmp_5181;
  const size_type _5182;
  _Ios_Openmode _5183;
  int __a.417_5184;
  int _5185;
  long int _5186;
  char * const _5188;
  int * const _5190;
  long int _5191;
  long int _5192;
  long int _5193;
  long int _5194;
  size_type _5195;
  long unsigned int _5196;
  long unsigned int _5197;
  int * _5198;
  int * const _5199;
  long int _5200;
  long int _5201;
  long int _5202;
  long int _5203;
  size_type _5204;
  long unsigned int _5205;
  long unsigned int _5206;
  int * _5207;
  struct vector * pretmp_5209;
  int prephitmp_5212;
  struct vector * pretmp_5217;
  struct vector * pretmp_5221;
  struct vector * pretmp_5224;
  struct vector * _5228;
  struct vector * pretmp_5230;
  struct vector * pretmp_5231;
  long unsigned int * const _5234;
  struct vector * pretmp_5235;
  long int _5236;
  long int _5237;
  long int _5238;
  long unsigned int _5239;
  sizetype _5240;
  long unsigned int * _5241;
  struct vector * _5242;
  struct vector * pretmp_5244;
  struct vector * pretmp_5248;
  int * _5249;
  struct vector * _5252;
  struct vector * pretmp_5254;
  struct BufferState * * _5255;
  struct vector * pretmp_5259;
  struct Router * * _5260;
  char * const _5263;
  const char * _5264;
  char * const _5265;
  const char * _5266;
  struct vector * pretmp_5276;
  struct vector * pretmp_5277;
  int _5278;
  struct vector * pretmp_5280;
  struct _List_node_base * _5281;
  struct vector * prephitmp_5282;
  struct vector * pretmp_5285;
  struct vector * pretmp_5286;
  struct vector * pretmp_5289;
  int pretmp_5300;
  struct vector * pretmp_5304;
  struct _Rep_type * pretmp_5305;
  struct _Rep_type * pretmp_5307;
  long unsigned int pretmp_5308;
  struct _Rep_type * pretmp_5310;
  struct vector * prephitmp_5325;
  struct vector * pretmp_5326;
  struct vector * pretmp_5328;
  struct vector * pretmp_5329;
  struct vector * pretmp_5330;
  struct vector * pretmp_5333;
  struct vector * pretmp_5336;
  struct vector * pretmp_5337;
  struct vector * pretmp_5341;
  struct vector * pretmp_5344;
  int pretmp_5355;
  struct _List_node_base * _5364;
  struct vector * prephitmp_5368;
  struct vector * pretmp_5369;
  struct vector * pretmp_5370;
  struct _Rep_type * pretmp_5375;
  struct vector * pretmp_5381;
  struct _Rep_type * pretmp_5384;
  struct vector * pretmp_5408;
  struct vector * pretmp_5425;
  struct vector * pretmp_5431;
  struct vector * pretmp_5434;
  struct vector * pretmp_5440;
  struct vector * pretmp_5446;
  struct vector * pretmp_5449;
  int pretmp_5461;
  int prephitmp_5462;
  int pretmp_5531;
  long unsigned int pretmp_5538;
  long unsigned int prephitmp_5539;
  long unsigned int pretmp_5570;
  long unsigned int pretmp_5571;
  long unsigned int prephitmp_5572;
  struct _Rep_type * prephitmp_5642;
  struct _Rep_type * pretmp_5643;
  struct _Rep_type * pretmp_5644;
  struct _Rep_type * pretmp_5645;
  struct vector * pretmp_5660;
  struct vector * pretmp_5661;
  struct vector * pretmp_5662;
  struct vector * pretmp_5663;
  struct vector * pretmp_5672;
  struct vector * pretmp_5673;
  struct vector * pretmp_5674;
  struct vector * pretmp_5675;
  struct vector * pretmp_5690;
  struct vector * pretmp_5691;
  struct vector * pretmp_5692;
  struct vector * pretmp_5693;
  struct vector * pretmp_5702;
  struct vector * pretmp_5703;
  struct vector * pretmp_5704;
  struct vector * pretmp_5705;
  struct vector * pretmp_5714;
  struct vector * pretmp_5715;
  struct vector * pretmp_5716;
  struct vector * pretmp_5717;
  struct vector * pretmp_5721;
  struct vector * pretmp_5722;
  struct vector * pretmp_5723;
  struct vector * pretmp_5724;
  struct vector * pretmp_5727;
  struct vector * pretmp_5728;
  struct vector * pretmp_5729;
  struct vector * pretmp_5732;
  struct vector * pretmp_5733;
  struct vector * pretmp_5734;
  struct vector * pretmp_5735;
  struct vector * pretmp_5737;
  int * pretmp_5738;
  int * prephitmp_5739;
  struct vector * pretmp_5740;
  struct vector * pretmp_5742;
  struct vector * pretmp_5743;
  struct vector * pretmp_5744;
  struct vector * pretmp_5745;
  struct vector * pretmp_5747;
  struct vector * pretmp_5748;
  struct vector * pretmp_5749;
  struct vector * pretmp_5750;
  struct vector * pretmp_5753;
  struct vector * pretmp_5755;
  struct vector * pretmp_5756;
  struct vector * prephitmp_5757;
  struct vector * pretmp_5758;
  struct vector * pretmp_5759;
  struct vector * pretmp_5760;
  struct vector * pretmp_5761;
  struct vector * pretmp_5762;
  struct vector * pretmp_5763;
  struct vector * pretmp_5764;
  struct vector * pretmp_5765;
  struct vector * pretmp_5766;
  struct vector * pretmp_5767;
  struct vector * pretmp_5768;
  struct vector * pretmp_5769;
  struct vector * pretmp_5772;
  struct vector * pretmp_5773;
  struct vector * pretmp_5774;
  struct vector * pretmp_5775;
  struct vector * pretmp_5776;
  struct vector * pretmp_5777;
  struct vector * pretmp_5778;
  struct vector * pretmp_5781;
  struct vector * pretmp_5782;
  struct vector * pretmp_5785;
  struct vector * prephitmp_5786;
  struct vector * pretmp_5787;
  struct vector * pretmp_5789;
  struct vector * pretmp_5790;
  struct vector * pretmp_5791;
  struct vector * pretmp_5792;
  struct vector * pretmp_5793;
  struct vector * pretmp_5794;
  struct vector * pretmp_5795;
  struct vector * pretmp_5796;
  struct vector * pretmp_5797;
  struct vector * pretmp_5798;
  struct vector * pretmp_5800;
  struct vector * pretmp_5801;
  struct vector * pretmp_5802;
  struct vector * pretmp_5803;
  struct vector * pretmp_5804;
  struct vector * pretmp_5805;
  struct vector * pretmp_5806;
  struct vector * pretmp_5807;
  struct vector * pretmp_5808;
  struct vector * pretmp_5809;
  struct vector * pretmp_5810;
  struct vector * pretmp_5811;
  struct vector * prephitmp_5812;
  struct vector * pretmp_5813;
  struct vector * pretmp_5814;
  struct vector * pretmp_5815;
  struct vector * pretmp_5816;
  struct vector * pretmp_5817;
  struct vector * pretmp_5818;
  struct vector * pretmp_5819;
  struct vector * pretmp_5820;
  struct vector * pretmp_5821;
  struct vector * pretmp_5822;
  struct vector * pretmp_5823;
  struct vector * pretmp_5824;
  struct vector * pretmp_5825;
  struct vector * pretmp_5826;
  struct vector * pretmp_5827;
  struct vector * pretmp_5828;
  struct vector * pretmp_5829;
  struct vector * pretmp_5830;
  struct vector * pretmp_5831;
  struct vector * pretmp_5832;
  struct vector * pretmp_5833;
  struct vector * pretmp_5834;
  struct vector * pretmp_5835;
  struct vector * pretmp_5836;
  struct vector * pretmp_5837;
  struct vector * pretmp_5838;
  struct vector * pretmp_5845;
  struct vector * pretmp_5846;
  struct vector * pretmp_5847;
  struct vector * prephitmp_5848;
  struct vector * pretmp_5849;
  struct vector * pretmp_5850;
  struct vector * pretmp_5851;
  struct vector * pretmp_5852;
  struct vector * pretmp_5853;
  struct vector * prephitmp_5854;
  struct vector * pretmp_5855;
  struct vector * pretmp_5856;
  struct vector * pretmp_5857;
  struct vector * pretmp_5858;
  struct vector * pretmp_5859;
  struct vector * pretmp_5860;
  struct vector * prephitmp_5861;
  struct map * prephitmp_5862;
  struct map * pretmp_5863;
  struct vector * prephitmp_5864;
  struct vector * pretmp_5865;
  struct vector * pretmp_5866;
  struct vector * pretmp_5867;
  struct vector * pretmp_5868;
  struct vector * prephitmp_5869;
  struct vector * pretmp_5870;
  struct vector * pretmp_5871;
  struct vector * pretmp_5872;
  struct vector * prephitmp_5873;
  struct vector * pretmp_5875;
  struct vector * pretmp_5876;
  struct vector * pretmp_5877;
  struct _Rep_type * prephitmp_5878;
  struct _Rep_type * pretmp_5879;
  struct _Rep_type * pretmp_5880;
  struct _Rep_type * pretmp_5881;
  struct _Rep_type * pretmp_5882;
  struct _Rep_type * pretmp_5884;
  struct _Rep_type * prephitmp_5885;
  struct _Rep_type * pretmp_5886;
  struct _Rep_type * pretmp_5887;
  struct _Rep_type * pretmp_5889;
  struct _Rep_type * pretmp_5890;
  struct _Rep_type * pretmp_5891;
  struct _Rep_type * pretmp_5893;
  struct _Rep_type * pretmp_5894;
  struct _Rep_type * pretmp_5895;
  struct _Rep_type * pretmp_5897;
  struct _Rep_type * pretmp_5898;
  struct _Rep_type * pretmp_5899;
  struct _Rep_type * pretmp_5901;
  struct _Rep_type * pretmp_5902;
  struct _Rep_type * pretmp_5903;
  struct vector * pretmp_5905;
  struct _Rep_type * pretmp_5906;
  struct _Rep_type * pretmp_5907;
  struct _Rep_type * pretmp_5908;
  struct _Rep_type * pretmp_5909;
  struct _Rep_type * pretmp_5910;
  struct _Rep_type * pretmp_5911;
  struct _Rep_type * pretmp_5912;
  struct vector * pretmp_5913;
  struct _Rep_type * pretmp_5914;
  struct _Rep_type * pretmp_5915;
  struct _Rep_type * pretmp_5916;
  struct _Rep_type * pretmp_5917;
  struct _Rep_type * pretmp_5921;
  struct _Rep_type * pretmp_5922;
  struct _Rep_type * pretmp_5923;
  struct _Rep_type * pretmp_5924;
  struct _Rep_type * pretmp_5925;
  struct _Rep_type * pretmp_5926;
  struct _Rep_type * pretmp_5927;
  struct _Rep_type * pretmp_5928;
  struct _Rep_type * pretmp_5929;
  struct _Rep_type * pretmp_5930;
  struct _Rep_type * pretmp_5931;
  struct _Rep_type * pretmp_5932;
  struct _Rep_type * pretmp_5933;
  struct vector * pretmp_5934;
  struct _Rep_type * pretmp_5935;
  struct _Rep_type * pretmp_5936;
  struct vector * pretmp_5937;
  struct _Rep_type * pretmp_5938;
  struct _Rep_type * pretmp_5939;
  struct _Rep_type * pretmp_5940;
  struct _Rep_type * pretmp_5941;
  struct _Rep_type * pretmp_5942;
  struct _Rep_type * pretmp_5943;
  struct _Rep_type * pretmp_5944;
  struct _Rep_type * pretmp_5945;
  struct _Rep_type * pretmp_5946;
  struct _Rep_type * pretmp_5947;
  struct _Rep_type * pretmp_5948;
  struct _Rep_type * pretmp_5949;
  struct _Rep_type * pretmp_5950;
  struct _Rep_type * pretmp_5951;
  struct vector * pretmp_5952;
  struct _Rep_type * pretmp_5953;
  struct vector * pretmp_5954;
  struct _Rep_type * pretmp_5955;
  struct _Rep_type * pretmp_5956;
  struct vector * pretmp_5957;
  struct _Rep_type * pretmp_5958;
  long unsigned int _5978;
  long unsigned int _5982;
  struct vector * pretmp_5983;
  struct _Rep_type * pretmp_5984;
  struct vector * pretmp_5985;
  struct vector * pretmp_5986;
  struct vector * pretmp_5987;
  struct vector * pretmp_5988;
  struct vector * pretmp_5989;
  struct vector * pretmp_5990;
  struct vector * pretmp_5991;
  struct vector * pretmp_5992;
  struct vector * pretmp_5993;
  struct vector * pretmp_5994;
  struct vector * pretmp_5995;
  struct vector * prephitmp_5996;
  int _6002;
  int _6004;
  struct basic_string * const _6006;
  int * const _6008;
  int * const _6009;
  int _6014;
  struct vector * prephitmp_6019;
  struct vector * pretmp_6056;
  struct vector * pretmp_6057;
  struct vector * pretmp_6058;
  struct vector * pretmp_6059;
  struct vector * pretmp_6060;
  struct vector * pretmp_6061;
  struct vector * pretmp_6062;
  struct vector * pretmp_6063;
  struct vector * pretmp_6064;
  struct vector * pretmp_6065;
  struct vector * pretmp_6066;
  struct vector * pretmp_6068;
  struct vector * pretmp_6069;
  struct vector * pretmp_6070;
  struct vector * pretmp_6071;
  struct vector * prephitmp_6072;
  struct vector * pretmp_6073;
  struct vector * pretmp_6074;
  struct vector * prephitmp_6075;
  struct vector * pretmp_6076;
  struct vector * pretmp_6077;
  struct vector * pretmp_6078;
  struct vector * pretmp_6079;
  struct vector * pretmp_6080;
  struct vector * pretmp_6081;
  struct vector * pretmp_6092;
  struct vector * pretmp_6093;
  long int _6095;
  long int _6096;
  long int _6097;
  long int _6098;
  struct basic_string * const _6099;
  struct basic_string * const _6100;
  struct vector * pretmp_6101;
  struct vector * pretmp_6102;
  struct vector * pretmp_6107;
  struct vector * pretmp_6108;
  int _6109;
  struct vector * pretmp_6110;
  struct vector * pretmp_6111;
  struct vector * pretmp_6112;
  struct vector * pretmp_6113;
  struct vector * pretmp_6114;
  int _6115;
  struct vector * pretmp_6116;
  struct vector * pretmp_6117;
  struct vector * pretmp_6119;
  struct vector * pretmp_6120;
  struct vector * prephitmp_6121;
  struct vector * pretmp_6122;
  int pretmp_6123;
  struct vector * pretmp_6124;
  struct vector * pretmp_6125;
  struct vector * pretmp_6126;
  struct vector * pretmp_6127;
  struct map * pretmp_6128;
  struct vector * prephitmp_6129;
  struct vector * pretmp_6130;
  struct vector * prephitmp_6131;
  struct _Rep_type * pretmp_6132;
  struct vector * prephitmp_6133;
  long int _6134;
  struct vector * pretmp_6135;
  int * pretmp_6136;
  struct vector * pretmp_6137;
  struct vector * pretmp_6138;
  struct _Rep_type * pretmp_6139;
  struct _Rep_type * pretmp_6140;
  struct _Rep_type * pretmp_6141;
  struct _Rep_type * pretmp_6142;
  struct _Rep_type * pretmp_6143;
  struct _Rep_type * pretmp_6144;
  struct _Rep_type * pretmp_6145;
  struct _Rep_type * pretmp_6146;
  struct _Rep_type * pretmp_6147;
  struct _Rep_type * pretmp_6148;
  struct _Rep_type * pretmp_6149;
  struct vector * pretmp_6154;
  struct vector * pretmp_6155;
  struct vector * pretmp_6156;
  struct vector * pretmp_6157;
  struct vector * pretmp_6158;
  struct vector * pretmp_6159;
  struct vector * pretmp_6160;
  struct vector * pretmp_6161;
  struct vector * pretmp_6162;
  struct vector * pretmp_6163;
  struct vector * pretmp_6164;
  struct vector * pretmp_6165;
  struct vector * pretmp_6166;
  struct vector * pretmp_6167;
  struct vector * pretmp_6168;
  struct vector * pretmp_6169;
  struct vector * pretmp_6170;
  struct vector * pretmp_6171;
  struct vector * pretmp_6172;
  struct vector * pretmp_6173;
  struct vector * pretmp_6174;
  struct vector * pretmp_6175;
  struct vector * pretmp_6176;
  struct vector * pretmp_6177;
  struct vector * pretmp_6178;
  struct vector * pretmp_6179;
  struct vector * pretmp_6180;
  struct vector * pretmp_6181;
  struct vector * pretmp_6182;
  struct vector * pretmp_6183;
  struct vector * pretmp_6184;
  struct vector * pretmp_6185;
  struct vector * pretmp_6186;
  struct vector * pretmp_6187;
  struct vector * pretmp_6188;
  struct vector * pretmp_6189;
  struct vector * pretmp_6190;
  struct vector * pretmp_6191;
  struct vector * pretmp_6192;
  struct vector * pretmp_6193;
  struct vector * pretmp_6194;
  struct vector * pretmp_6195;
  struct vector * pretmp_6196;
  struct vector * pretmp_6197;
  struct vector * prephitmp_6198;
  struct vector * pretmp_6199;
  struct vector * pretmp_6200;
  struct vector * pretmp_6201;
  struct vector * pretmp_6202;
  struct vector * pretmp_6203;
  struct vector * pretmp_6204;
  struct vector * pretmp_6205;
  struct vector * pretmp_6206;
  struct vector * pretmp_6207;
  struct vector * pretmp_6208;
  struct vector * pretmp_6209;
  struct vector * pretmp_6210;
  struct vector * pretmp_6211;
  struct map * pretmp_6212;
  struct map * pretmp_6213;
  struct vector * pretmp_6214;
  struct vector * pretmp_6215;
  struct vector * prephitmp_6216;
  struct vector * pretmp_6217;
  struct vector * pretmp_6218;
  struct vector * pretmp_6219;
  struct vector * prephitmp_6220;
  struct vector * pretmp_6221;
  struct vector * pretmp_6222;
  struct _Rep_type * pretmp_6223;
  struct _Rep_type * pretmp_6224;
  struct _Rep_type * pretmp_6225;
  struct _Rep_type * pretmp_6226;
  struct _Rep_type * pretmp_6227;
  struct _Rep_type * pretmp_6228;
  struct _Rep_type * pretmp_6229;
  struct _Rep_type * pretmp_6230;
  struct vector * prephitmp_6231;
  struct vector * pretmp_6232;
  struct vector * pretmp_6233;
  struct vector * prephitmp_6234;
  struct vector * pretmp_6235;
  int _6236;
  struct vector * pretmp_6238;
  struct vector * pretmp_6239;
  struct vector * pretmp_6240;
  struct vector * pretmp_6241;
  struct vector * pretmp_6242;
  int _6243;
  struct vector * pretmp_6244;
  struct vector * pretmp_6245;
  struct vector * pretmp_6246;
  int _6247;
  struct _Rb_tree_node_base * cstore_6248;
  int pretmp_6249;
  struct vector * pretmp_6250;
  struct _List_node_base * _6252;
  int * _6254;
  long unsigned int _6255;
  struct vector * pretmp_6256;
  struct vector * pretmp_6257;
  struct vector * pretmp_6259;
  int _6260;
  struct _List_node_base * pretmp_6261;
  int prephitmp_6263;
  struct _List_node_base * _6264;
  struct vector * pretmp_6265;
  int _6266;
  struct _Rep_type * prephitmp_6267;
  int * prephitmp_6270;
  struct vector * pretmp_6271;
  struct vector * pretmp_6272;
  struct vector * pretmp_6273;
  struct vector * pretmp_6274;
  struct vector * pretmp_6275;
  struct vector * pretmp_6276;
  struct vector * pretmp_6277;
  struct vector * pretmp_6278;
  struct vector * pretmp_6279;
  struct vector * pretmp_6280;
  struct vector * pretmp_6281;
  struct vector * pretmp_6282;
  struct vector * pretmp_6283;
  struct vector * prephitmp_6284;
  struct _Rep_type * pretmp_6285;
  struct _Rep_type * pretmp_6286;
  struct _Rep_type * pretmp_6287;
  struct _Rep_type * pretmp_6288;
  struct _Rep_type * pretmp_6289;
  struct _Rep_type * pretmp_6290;
  struct _Rep_type * pretmp_6291;
  struct _Rep_type * pretmp_6292;
  struct _Rep_type * pretmp_6293;
  struct _Rep_type * pretmp_6294;
  struct _Rep_type * pretmp_6295;
  struct _Rep_type * pretmp_6296;
  struct _Rep_type * pretmp_6297;
  struct _Rep_type * pretmp_6298;
  struct _Rep_type * pretmp_6299;
  struct _Rep_type * pretmp_6300;
  struct _Rep_type * pretmp_6301;
  struct _Rep_type * pretmp_6302;
  struct _Rep_type * pretmp_6303;
  struct _Rep_type * pretmp_6304;
  struct _Rep_type * pretmp_6305;
  struct _Rep_type * pretmp_6306;
  struct _Rep_type * pretmp_6307;
  struct _Rep_type * pretmp_6308;
  struct _Rep_type * pretmp_6309;
  struct _Rep_type * pretmp_6310;
  struct _Rep_type * pretmp_6311;
  struct _Rep_type * pretmp_6312;
  struct _Rep_type * pretmp_6313;
  struct _Rep_type * pretmp_6314;
  struct _Rep_type * prephitmp_6315;
  struct _Rep_type * pretmp_6316;
  struct _Rep_type * pretmp_6317;
  struct _Rep_type * pretmp_6318;
  struct _Rep_type * pretmp_6319;
  struct _Rep_type * pretmp_6320;
  struct _Rep_type * pretmp_6321;
  struct _Rep_type * pretmp_6322;
  struct _Rep_type * pretmp_6323;
  struct _Rep_type * pretmp_6324;
  struct _Rep_type * pretmp_6325;
  struct _Rep_type * pretmp_6326;
  struct _Rep_type * pretmp_6327;
  struct _Rep_type * pretmp_6328;
  struct _Rep_type * pretmp_6329;
  struct _Rep_type * pretmp_6330;
  struct _Rep_type * pretmp_6331;
  struct _Rep_type * pretmp_6332;
  struct _Rep_type * pretmp_6333;
  struct _Rep_type * pretmp_6334;
  struct _Rep_type * pretmp_6335;
  struct _Rep_type * pretmp_6336;
  struct _Rep_type * pretmp_6337;
  struct _Rep_type * pretmp_6338;
  struct _Rep_type * pretmp_6339;
  struct _Rep_type * pretmp_6340;
  struct _Rep_type * pretmp_6341;
  struct _Rep_type * pretmp_6342;
  struct _Rep_type * pretmp_6343;
  struct _Rep_type * pretmp_6344;
  struct _Rep_type * pretmp_6345;
  struct _Rep_type * pretmp_6346;
  struct _Rep_type * pretmp_6347;
  struct _Rep_type * pretmp_6348;
  struct _Rep_type * pretmp_6349;
  struct _Rep_type * pretmp_6350;
  struct _Rep_type * pretmp_6351;
  struct _Rep_type * pretmp_6352;
  struct _Rep_type * pretmp_6353;
  struct _Rep_type * pretmp_6354;
  struct _Rep_type * pretmp_6355;
  struct _Rep_type * pretmp_6356;
  struct _Rep_type * pretmp_6357;
  struct _Rep_type * pretmp_6358;
  struct _Rep_type * pretmp_6359;
  struct _Rep_type * pretmp_6360;
  struct _Rep_type * pretmp_6361;
  struct _Rep_type * pretmp_6362;
  struct _Rep_type * pretmp_6363;
  struct _Rep_type * pretmp_6364;
  struct _Rep_type * pretmp_6365;
  struct _Rep_type * pretmp_6366;
  struct _Rep_type * pretmp_6367;
  struct _Rep_type * pretmp_6368;
  struct _Rep_type * pretmp_6369;
  struct _Rep_type * pretmp_6370;
  struct _Rep_type * pretmp_6371;
  struct _Rep_type * pretmp_6372;
  struct _Rep_type * pretmp_6373;
  struct _Rep_type * pretmp_6374;
  struct _Rep_type * pretmp_6375;
  struct _Rep_type * pretmp_6376;
  struct _Rep_type * pretmp_6377;
  struct _Rep_type * pretmp_6378;
  struct _Rep_type * pretmp_6379;
  struct _Rep_type * pretmp_6380;
  struct _Rep_type * pretmp_6381;
  struct _Rep_type * pretmp_6382;
  struct _Rep_type * pretmp_6383;
  struct _Rep_type * pretmp_6384;
  struct _Rep_type * pretmp_6385;
  struct _Rep_type * pretmp_6386;
  struct _Rep_type * pretmp_6387;
  struct _Rep_type * pretmp_6388;
  struct _Rep_type * pretmp_6389;
  struct _Rep_type * pretmp_6390;
  struct _Rep_type * pretmp_6391;
  struct _Rep_type * pretmp_6392;
  struct _Rep_type * pretmp_6393;
  struct _Rep_type * pretmp_6394;
  struct _Rep_type * pretmp_6395;
  struct _Rep_type * pretmp_6396;
  struct _Rep_type * pretmp_6397;
  struct _Rep_type * pretmp_6398;
  struct _Rep_type * pretmp_6399;
  struct _Rep_type * pretmp_6400;
  struct _Rep_type * pretmp_6401;
  struct _Rep_type * pretmp_6402;
  struct _Rep_type * pretmp_6403;
  struct _Rep_type * pretmp_6404;
  struct _Rep_type * prephitmp_6405;
  struct vector * pretmp_6406;
  struct vector * pretmp_6407;
  struct vector * pretmp_6408;
  struct vector * pretmp_6409;
  struct vector * pretmp_6410;
  struct vector * prephitmp_6411;
  struct vector * pretmp_6412;
  struct vector * pretmp_6413;
  struct vector * pretmp_6414;
  struct vector * pretmp_6415;
  struct vector * pretmp_6416;
  struct vector * prephitmp_6417;
  struct vector * pretmp_6418;
  struct vector * pretmp_6419;
  struct vector * pretmp_6420;
  struct vector * pretmp_6421;
  struct vector * pretmp_6422;
  struct vector * prephitmp_6423;
  struct vector * pretmp_6424;
  struct vector * pretmp_6425;
  struct vector * pretmp_6426;
  struct vector * pretmp_6427;
  struct vector * pretmp_6428;
  struct vector * prephitmp_6429;
  struct vector * pretmp_6430;
  struct vector * pretmp_6431;
  struct vector * pretmp_6432;
  struct vector * pretmp_6433;
  struct vector * pretmp_6434;
  struct vector * prephitmp_6435;
  struct vector * pretmp_6436;
  struct vector * pretmp_6437;
  struct vector * pretmp_6438;
  struct vector * pretmp_6439;
  struct vector * pretmp_6440;
  struct vector * prephitmp_6441;
  struct vector * pretmp_6442;
  struct vector * pretmp_6443;
  struct vector * pretmp_6444;
  struct vector * pretmp_6445;
  struct vector * pretmp_6446;
  struct vector * prephitmp_6447;
  struct map * pretmp_6448;
  struct map * pretmp_6449;
  struct map * pretmp_6450;
  struct map * pretmp_6451;
  struct map * pretmp_6452;
  struct map * prephitmp_6453;
  struct vector * pretmp_6454;
  struct vector * pretmp_6455;
  struct vector * prephitmp_6456;
  struct vector * pretmp_6457;
  struct vector * pretmp_6458;
  struct vector * pretmp_6459;
  struct vector * pretmp_6460;
  struct vector * pretmp_6461;
  struct vector * pretmp_6462;
  struct vector * pretmp_6463;
  struct vector * pretmp_6464;
  struct vector * pretmp_6465;
  struct vector * pretmp_6466;
  struct vector * pretmp_6467;
  struct vector * pretmp_6468;
  struct vector * pretmp_6469;
  struct vector * pretmp_6470;
  struct vector * pretmp_6471;
  struct vector * prephitmp_6472;
  struct vector * pretmp_6473;
  struct vector * pretmp_6474;
  struct vector * pretmp_6475;
  struct vector * pretmp_6476;
  struct vector * pretmp_6477;
  struct vector * pretmp_6478;
  struct vector * pretmp_6479;
  struct vector * pretmp_6480;
  struct vector * pretmp_6481;
  struct vector * pretmp_6482;
  struct vector * pretmp_6483;
  struct vector * pretmp_6484;
  struct vector * pretmp_6485;
  struct vector * pretmp_6486;
  struct vector * pretmp_6487;
  struct vector * prephitmp_6488;
  struct vector * pretmp_6489;
  struct vector * pretmp_6490;
  struct vector * pretmp_6491;
  struct vector * pretmp_6492;
  struct vector * pretmp_6493;
  struct vector * pretmp_6494;
  struct vector * pretmp_6495;
  struct vector * pretmp_6496;
  struct vector * pretmp_6497;
  struct vector * pretmp_6498;
  struct vector * pretmp_6499;
  struct vector * pretmp_6500;
  struct vector * prephitmp_6501;
  struct vector * pretmp_6502;
  struct vector * pretmp_6503;
  struct vector * pretmp_6504;
  struct vector * pretmp_6505;
  struct vector * pretmp_6506;
  struct vector * pretmp_6507;
  struct vector * pretmp_6508;
  struct vector * pretmp_6509;
  struct vector * pretmp_6510;
  struct vector * pretmp_6511;
  struct vector * pretmp_6512;
  struct vector * pretmp_6513;
  struct vector * prephitmp_6514;
  struct vector * pretmp_6515;
  struct vector * pretmp_6516;
  struct vector * pretmp_6517;
  struct vector * pretmp_6518;
  struct vector * pretmp_6519;
  struct vector * pretmp_6520;
  struct vector * pretmp_6521;
  struct vector * pretmp_6522;
  struct vector * pretmp_6523;
  struct vector * pretmp_6524;
  struct vector * pretmp_6525;
  struct vector * pretmp_6526;
  struct vector * prephitmp_6527;
  struct vector * pretmp_6528;
  struct vector * pretmp_6529;
  struct vector * pretmp_6530;
  struct vector * pretmp_6531;
  struct vector * pretmp_6532;
  struct vector * pretmp_6533;
  struct vector * pretmp_6534;
  struct vector * pretmp_6535;
  struct vector * pretmp_6536;
  struct vector * pretmp_6537;
  struct vector * pretmp_6538;
  struct vector * pretmp_6539;
  struct vector * prephitmp_6540;
  struct vector * pretmp_6541;
  struct vector * pretmp_6542;
  struct vector * pretmp_6543;
  struct vector * pretmp_6544;
  struct vector * pretmp_6545;
  struct vector * pretmp_6546;
  struct vector * pretmp_6547;
  struct vector * pretmp_6548;
  struct vector * pretmp_6549;
  struct vector * pretmp_6550;
  struct vector * pretmp_6551;
  struct vector * pretmp_6552;
  struct vector * prephitmp_6553;
  struct _Rep_type * pretmp_6554;
  struct _Rep_type * pretmp_6555;
  struct _Rep_type * pretmp_6556;
  struct _Rep_type * pretmp_6557;
  struct _Rep_type * pretmp_6558;
  struct _Rep_type * pretmp_6559;
  struct _Rep_type * pretmp_6560;
  struct _Rep_type * prephitmp_6561;
  struct _Rep_type * pretmp_6562;
  struct _Rep_type * pretmp_6563;
  struct _Rep_type * pretmp_6564;
  struct _Rep_type * pretmp_6565;
  struct _Rep_type * pretmp_6566;
  struct _Rep_type * pretmp_6567;
  struct _Rep_type * pretmp_6568;
  struct _Rep_type * pretmp_6569;
  struct _Rep_type * pretmp_6570;
  struct _Rep_type * pretmp_6571;
  struct _Rep_type * pretmp_6572;
  struct _Rep_type * pretmp_6573;
  struct _Rep_type * pretmp_6574;
  struct _Rep_type * pretmp_6575;
  struct _Rep_type * pretmp_6576;
  struct _Rep_type * pretmp_6577;
  struct _Rep_type * pretmp_6578;
  struct _Rep_type * pretmp_6579;
  struct _Rep_type * pretmp_6580;
  struct _Rep_type * pretmp_6581;
  struct _Rep_type * pretmp_6582;
  struct _Rep_type * pretmp_6583;
  struct _Rep_type * pretmp_6584;
  struct _Rep_type * pretmp_6585;
  struct _Rep_type * pretmp_6586;
  struct _Rep_type * pretmp_6587;
  struct _Rep_type * pretmp_6588;
  struct _Rep_type * pretmp_6589;
  struct _Rep_type * pretmp_6590;
  struct _Rep_type * pretmp_6591;
  struct _Rep_type * prephitmp_6592;
  struct vector * pretmp_6593;
  struct vector * pretmp_6594;
  struct vector * pretmp_6595;
  struct vector * pretmp_6596;
  struct vector * pretmp_6597;
  struct vector * pretmp_6598;
  struct vector * pretmp_6599;
  struct vector * pretmp_6600;
  struct vector * pretmp_6601;
  struct vector * pretmp_6602;
  struct vector * pretmp_6603;
  struct vector * pretmp_6604;
  struct vector * pretmp_6605;
  struct vector * pretmp_6606;
  struct vector * pretmp_6607;
  struct vector * pretmp_6608;
  struct vector * pretmp_6609;
  struct vector * pretmp_6610;
  struct vector * pretmp_6611;
  struct vector * pretmp_6612;
  struct vector * pretmp_6613;
  struct vector * pretmp_6614;
  struct vector * pretmp_6615;
  struct vector * pretmp_6616;
  struct vector * pretmp_6617;
  struct vector * pretmp_6618;
  struct vector * pretmp_6619;
  struct vector * pretmp_6620;
  struct vector * pretmp_6621;
  struct vector * pretmp_6622;
  struct vector * pretmp_6623;
  struct vector * pretmp_6624;
  struct vector * pretmp_6625;
  struct vector * pretmp_6626;
  struct vector * pretmp_6627;
  struct vector * pretmp_6628;
  struct vector * pretmp_6629;
  struct vector * pretmp_6630;
  struct vector * pretmp_6631;
  struct vector * pretmp_6632;
  struct vector * pretmp_6633;
  struct vector * pretmp_6634;
  struct vector * pretmp_6635;
  struct vector * pretmp_6636;
  struct vector * pretmp_6637;
  struct vector * pretmp_6638;
  struct vector * pretmp_6639;
  struct vector * pretmp_6640;
  struct vector * pretmp_6641;
  struct vector * pretmp_6642;
  struct vector * pretmp_6643;
  struct vector * pretmp_6644;
  struct vector * pretmp_6645;
  struct vector * pretmp_6646;
  struct vector * pretmp_6647;
  struct vector * pretmp_6648;
  struct vector * pretmp_6649;
  struct vector * pretmp_6650;
  struct vector * pretmp_6651;
  struct vector * pretmp_6652;
  struct vector * pretmp_6653;
  struct vector * pretmp_6654;
  struct vector * pretmp_6655;
  struct vector * pretmp_6656;
  struct vector * pretmp_6657;
  struct vector * pretmp_6658;
  struct vector * pretmp_6659;
  struct vector * pretmp_6660;
  struct vector * pretmp_6661;
  struct vector * pretmp_6662;
  struct vector * pretmp_6663;
  struct vector * pretmp_6664;
  struct vector * pretmp_6665;
  struct vector * pretmp_6666;
  struct vector * pretmp_6667;
  struct vector * pretmp_6668;
  struct vector * pretmp_6669;
  struct vector * pretmp_6670;
  struct vector * pretmp_6671;
  struct vector * pretmp_6672;
  struct vector * pretmp_6673;
  struct vector * pretmp_6674;
  struct vector * pretmp_6675;
  struct vector * pretmp_6676;
  struct vector * pretmp_6677;
  struct vector * pretmp_6678;
  struct vector * pretmp_6679;
  struct vector * pretmp_6680;
  struct vector * pretmp_6681;
  struct vector * prephitmp_6682;
  struct vector * pretmp_6683;
  struct vector * pretmp_6684;
  struct vector * pretmp_6685;
  struct vector * pretmp_6686;
  struct vector * pretmp_6687;
  struct vector * pretmp_6688;
  struct vector * pretmp_6689;
  struct vector * pretmp_6690;
  struct vector * pretmp_6691;
  struct vector * pretmp_6692;
  struct vector * pretmp_6693;
  struct vector * pretmp_6694;
  struct vector * pretmp_6695;
  struct vector * pretmp_6696;
  struct vector * pretmp_6697;
  struct vector * pretmp_6698;
  struct vector * pretmp_6699;
  struct vector * pretmp_6700;
  struct vector * pretmp_6701;
  struct vector * pretmp_6702;
  struct vector * pretmp_6703;
  struct vector * pretmp_6704;
  struct vector * pretmp_6705;
  struct vector * pretmp_6706;
  struct vector * pretmp_6707;
  struct vector * pretmp_6708;
  struct vector * pretmp_6709;
  struct vector * pretmp_6710;
  struct vector * pretmp_6711;
  struct vector * pretmp_6712;
  struct vector * pretmp_6713;
  struct vector * pretmp_6714;
  struct vector * pretmp_6715;
  struct vector * pretmp_6716;
  struct vector * pretmp_6717;
  struct vector * pretmp_6718;
  struct vector * pretmp_6719;
  struct vector * pretmp_6720;
  struct vector * pretmp_6721;
  struct vector * pretmp_6722;
  struct vector * pretmp_6723;
  struct vector * pretmp_6724;
  struct vector * pretmp_6725;
  struct vector * pretmp_6726;
  struct vector * pretmp_6727;
  struct vector * pretmp_6728;
  struct vector * pretmp_6729;
  struct vector * pretmp_6730;
  struct vector * pretmp_6731;
  struct vector * pretmp_6732;
  struct vector * pretmp_6733;
  struct vector * pretmp_6734;
  struct vector * pretmp_6735;
  struct vector * pretmp_6736;
  struct vector * pretmp_6737;
  struct vector * pretmp_6738;
  struct vector * pretmp_6739;
  struct vector * pretmp_6740;
  struct vector * pretmp_6741;
  struct vector * pretmp_6742;
  struct vector * pretmp_6743;
  struct vector * pretmp_6744;
  struct vector * pretmp_6745;
  struct vector * pretmp_6746;
  struct vector * pretmp_6747;
  struct vector * pretmp_6748;
  struct vector * pretmp_6749;
  struct vector * pretmp_6750;
  struct vector * pretmp_6751;
  struct vector * pretmp_6752;
  struct vector * pretmp_6753;
  struct vector * pretmp_6754;
  struct vector * pretmp_6755;
  struct vector * pretmp_6756;
  struct vector * pretmp_6757;
  struct vector * pretmp_6758;
  struct vector * pretmp_6759;
  struct vector * pretmp_6760;
  struct vector * pretmp_6761;
  struct vector * pretmp_6762;
  struct vector * pretmp_6763;
  struct vector * pretmp_6764;
  struct vector * pretmp_6765;
  struct vector * pretmp_6766;
  struct vector * pretmp_6767;
  struct vector * pretmp_6768;
  struct vector * pretmp_6769;
  struct vector * pretmp_6770;
  struct vector * pretmp_6771;
  struct vector * prephitmp_6772;
  struct vector * pretmp_6773;
  struct vector * pretmp_6774;
  struct vector * pretmp_6775;
  struct vector * pretmp_6776;
  struct vector * pretmp_6777;
  struct vector * pretmp_6778;
  struct vector * pretmp_6779;
  struct vector * pretmp_6780;
  struct vector * pretmp_6781;
  struct vector * pretmp_6782;
  struct vector * pretmp_6783;
  struct vector * pretmp_6784;
  struct vector * pretmp_6785;
  struct vector * pretmp_6786;
  struct vector * pretmp_6787;
  struct vector * pretmp_6788;
  struct vector * pretmp_6789;
  struct vector * pretmp_6790;
  struct vector * pretmp_6791;
  struct vector * pretmp_6792;
  struct vector * pretmp_6793;
  struct vector * pretmp_6794;
  struct vector * pretmp_6795;
  struct vector * pretmp_6796;
  struct vector * pretmp_6797;
  struct vector * pretmp_6798;
  struct vector * pretmp_6799;
  struct vector * pretmp_6800;
  struct vector * pretmp_6801;
  struct vector * pretmp_6802;
  struct vector * pretmp_6803;
  struct vector * pretmp_6804;
  struct vector * pretmp_6805;
  struct vector * pretmp_6806;
  struct vector * pretmp_6807;
  struct vector * pretmp_6808;
  struct vector * pretmp_6809;
  struct vector * pretmp_6810;
  struct vector * pretmp_6811;
  struct vector * pretmp_6812;
  struct vector * pretmp_6813;
  struct vector * pretmp_6814;
  struct vector * pretmp_6815;
  struct vector * pretmp_6816;
  struct vector * pretmp_6817;
  struct vector * pretmp_6818;
  struct vector * pretmp_6819;
  struct vector * pretmp_6820;
  struct vector * pretmp_6821;
  struct vector * pretmp_6822;
  struct vector * pretmp_6823;
  struct vector * pretmp_6824;
  struct vector * pretmp_6825;
  struct vector * pretmp_6826;
  struct vector * pretmp_6827;
  struct vector * pretmp_6828;
  struct vector * pretmp_6829;
  struct vector * pretmp_6830;
  struct vector * pretmp_6831;
  struct vector * pretmp_6832;
  struct vector * pretmp_6833;
  struct vector * pretmp_6834;
  struct vector * pretmp_6835;
  struct vector * pretmp_6836;
  struct vector * pretmp_6837;
  struct vector * pretmp_6838;
  struct vector * pretmp_6839;
  struct vector * pretmp_6840;
  struct vector * pretmp_6841;
  struct vector * pretmp_6842;
  struct vector * pretmp_6843;
  struct vector * pretmp_6844;
  struct vector * pretmp_6845;
  struct vector * pretmp_6846;
  struct vector * pretmp_6847;
  struct vector * pretmp_6848;
  struct vector * pretmp_6849;
  struct vector * pretmp_6850;
  struct vector * pretmp_6851;
  struct vector * pretmp_6852;
  struct vector * pretmp_6853;
  struct vector * pretmp_6854;
  struct vector * pretmp_6855;
  struct vector * pretmp_6856;
  struct vector * pretmp_6857;
  struct vector * pretmp_6858;
  struct vector * pretmp_6859;
  struct vector * pretmp_6860;
  struct vector * pretmp_6861;
  struct vector * prephitmp_6862;
  struct vector * pretmp_6863;
  struct vector * pretmp_6864;
  struct vector * pretmp_6865;
  struct vector * pretmp_6866;
  struct vector * pretmp_6867;
  struct vector * pretmp_6868;
  struct vector * pretmp_6869;
  struct vector * pretmp_6870;
  struct vector * pretmp_6871;
  struct vector * pretmp_6872;
  struct vector * pretmp_6873;
  struct vector * pretmp_6874;
  struct vector * pretmp_6875;
  struct vector * pretmp_6876;
  struct vector * pretmp_6877;
  struct vector * pretmp_6878;
  struct vector * pretmp_6879;
  struct vector * pretmp_6880;
  struct vector * pretmp_6881;
  struct vector * pretmp_6882;
  struct vector * pretmp_6883;
  struct vector * pretmp_6884;
  struct vector * pretmp_6885;
  struct vector * pretmp_6886;
  struct vector * pretmp_6887;
  struct vector * pretmp_6888;
  struct vector * pretmp_6889;
  struct vector * pretmp_6890;
  struct vector * pretmp_6891;
  struct vector * pretmp_6892;
  struct vector * pretmp_6893;
  struct vector * pretmp_6894;
  struct vector * pretmp_6895;
  struct vector * pretmp_6896;
  struct vector * pretmp_6897;
  struct vector * pretmp_6898;
  struct vector * pretmp_6899;
  struct vector * pretmp_6900;
  struct vector * pretmp_6901;
  struct vector * pretmp_6902;
  struct vector * pretmp_6903;
  struct vector * pretmp_6904;
  struct vector * pretmp_6905;
  struct vector * pretmp_6906;
  struct vector * pretmp_6907;
  struct vector * pretmp_6908;
  struct vector * pretmp_6909;
  struct vector * pretmp_6910;
  struct vector * pretmp_6911;
  struct vector * pretmp_6912;
  struct vector * pretmp_6913;
  struct vector * pretmp_6914;
  struct vector * pretmp_6915;
  struct vector * pretmp_6916;
  struct vector * pretmp_6917;
  struct vector * pretmp_6918;
  struct vector * pretmp_6919;
  struct vector * pretmp_6920;
  struct vector * pretmp_6921;
  struct vector * pretmp_6922;
  struct vector * pretmp_6923;
  struct vector * pretmp_6924;
  struct vector * pretmp_6925;
  struct vector * pretmp_6926;
  struct vector * pretmp_6927;
  struct vector * pretmp_6928;
  struct vector * pretmp_6929;
  struct vector * pretmp_6930;
  struct vector * pretmp_6931;
  struct vector * pretmp_6932;
  struct vector * pretmp_6933;
  struct vector * pretmp_6934;
  struct vector * pretmp_6935;
  struct vector * pretmp_6936;
  struct vector * pretmp_6937;
  struct vector * pretmp_6938;
  struct vector * pretmp_6939;
  struct vector * pretmp_6940;
  struct vector * pretmp_6941;
  struct vector * pretmp_6942;
  struct vector * pretmp_6943;
  struct vector * pretmp_6944;
  struct vector * pretmp_6945;
  struct vector * pretmp_6946;
  struct vector * pretmp_6947;
  struct vector * pretmp_6948;
  struct vector * pretmp_6949;
  struct vector * pretmp_6950;
  struct vector * pretmp_6951;
  struct vector * prephitmp_6952;
  struct vector * pretmp_6953;
  struct vector * pretmp_6954;
  struct vector * pretmp_6955;
  struct vector * pretmp_6956;
  struct vector * pretmp_6957;
  struct vector * pretmp_6958;
  struct vector * pretmp_6959;
  struct vector * pretmp_6960;
  struct vector * pretmp_6961;
  struct vector * pretmp_6962;
  struct vector * pretmp_6963;
  struct vector * pretmp_6964;
  struct vector * pretmp_6965;
  struct vector * pretmp_6966;
  struct vector * pretmp_6967;
  struct vector * pretmp_6968;
  struct vector * pretmp_6969;
  struct vector * pretmp_6970;
  struct vector * pretmp_6971;
  struct vector * pretmp_6972;
  struct vector * pretmp_6973;
  struct vector * pretmp_6974;
  struct vector * pretmp_6975;
  struct vector * pretmp_6976;
  struct vector * pretmp_6977;
  struct vector * pretmp_6978;
  struct vector * pretmp_6979;
  struct vector * pretmp_6980;
  struct vector * pretmp_6981;
  struct vector * pretmp_6982;
  struct vector * pretmp_6983;
  struct vector * pretmp_6984;
  struct vector * pretmp_6985;
  struct vector * pretmp_6986;
  struct vector * pretmp_6987;
  struct vector * pretmp_6988;
  struct vector * pretmp_6989;
  struct vector * pretmp_6990;
  struct vector * pretmp_6991;
  struct vector * pretmp_6992;
  struct vector * pretmp_6993;
  struct vector * pretmp_6994;
  struct vector * pretmp_6995;
  struct vector * pretmp_6996;
  struct vector * pretmp_6997;
  struct vector * pretmp_6998;
  struct vector * pretmp_6999;
  struct vector * pretmp_7000;
  struct vector * pretmp_7001;
  struct vector * pretmp_7002;
  struct vector * pretmp_7003;
  struct vector * pretmp_7004;
  struct vector * pretmp_7005;
  struct vector * pretmp_7006;
  struct vector * pretmp_7007;
  struct vector * pretmp_7008;
  struct vector * pretmp_7009;
  struct vector * pretmp_7010;
  struct vector * pretmp_7011;
  struct vector * pretmp_7012;
  struct vector * pretmp_7013;
  struct vector * pretmp_7014;
  struct vector * pretmp_7015;
  struct vector * pretmp_7016;
  struct vector * pretmp_7017;
  struct vector * pretmp_7018;
  struct vector * pretmp_7019;
  struct vector * pretmp_7020;
  struct vector * pretmp_7021;
  struct vector * pretmp_7022;
  struct vector * pretmp_7023;
  struct vector * pretmp_7024;
  struct vector * pretmp_7025;
  struct vector * pretmp_7026;
  struct vector * pretmp_7027;
  struct vector * pretmp_7028;
  struct vector * pretmp_7029;
  struct vector * pretmp_7030;
  struct vector * pretmp_7031;
  struct vector * pretmp_7032;
  struct vector * pretmp_7033;
  struct vector * pretmp_7034;
  struct vector * pretmp_7035;
  struct vector * pretmp_7036;
  struct vector * pretmp_7037;
  struct vector * pretmp_7038;
  struct vector * pretmp_7039;
  struct vector * pretmp_7040;
  struct vector * pretmp_7041;
  struct vector * prephitmp_7042;
  struct vector * pretmp_7043;
  struct vector * pretmp_7044;
  struct vector * pretmp_7045;
  struct vector * pretmp_7046;
  struct vector * pretmp_7047;
  struct vector * pretmp_7048;
  struct vector * pretmp_7049;
  struct vector * pretmp_7050;
  struct vector * pretmp_7051;
  struct vector * pretmp_7052;
  struct vector * pretmp_7053;
  struct vector * pretmp_7054;
  struct vector * pretmp_7055;
  struct vector * pretmp_7056;
  struct vector * pretmp_7057;
  struct vector * pretmp_7058;
  struct vector * pretmp_7059;
  struct vector * pretmp_7060;
  struct vector * pretmp_7061;
  struct vector * pretmp_7062;
  struct vector * pretmp_7063;
  struct vector * pretmp_7064;
  struct vector * pretmp_7065;
  struct vector * pretmp_7066;
  struct vector * pretmp_7067;
  struct vector * pretmp_7068;
  struct vector * pretmp_7069;
  struct vector * pretmp_7070;
  struct vector * pretmp_7071;
  struct vector * pretmp_7072;
  struct vector * pretmp_7073;
  struct vector * pretmp_7074;
  struct vector * pretmp_7075;
  struct vector * pretmp_7076;
  struct vector * pretmp_7077;
  struct vector * pretmp_7078;
  struct vector * pretmp_7079;
  struct vector * pretmp_7080;
  struct vector * pretmp_7081;
  struct vector * pretmp_7082;
  struct vector * pretmp_7083;
  struct vector * pretmp_7084;
  struct vector * pretmp_7085;
  struct vector * pretmp_7086;
  struct vector * pretmp_7087;
  struct vector * pretmp_7088;
  struct vector * pretmp_7089;
  struct vector * pretmp_7090;
  struct vector * pretmp_7091;
  struct vector * pretmp_7092;
  struct vector * pretmp_7093;
  struct vector * pretmp_7094;
  struct vector * pretmp_7095;
  struct vector * pretmp_7096;
  struct vector * pretmp_7097;
  struct vector * pretmp_7098;
  struct vector * pretmp_7099;
  struct vector * pretmp_7100;
  struct vector * pretmp_7101;
  struct vector * pretmp_7102;
  struct vector * pretmp_7103;
  struct vector * pretmp_7104;
  struct vector * pretmp_7105;
  struct vector * pretmp_7106;
  struct vector * pretmp_7107;
  struct vector * pretmp_7108;
  struct vector * pretmp_7109;
  struct vector * pretmp_7110;
  struct vector * pretmp_7111;
  struct vector * pretmp_7112;
  struct vector * pretmp_7113;
  struct vector * pretmp_7114;
  struct vector * pretmp_7115;
  struct vector * pretmp_7116;
  struct vector * pretmp_7117;
  struct vector * pretmp_7118;
  struct vector * pretmp_7119;
  struct vector * pretmp_7120;
  struct vector * pretmp_7121;
  struct vector * pretmp_7122;
  struct vector * pretmp_7123;
  struct vector * pretmp_7124;
  struct vector * pretmp_7125;
  struct vector * pretmp_7126;
  struct vector * pretmp_7127;
  struct vector * pretmp_7128;
  struct vector * pretmp_7129;
  struct vector * pretmp_7130;
  struct vector * pretmp_7131;
  struct vector * prephitmp_7132;
  struct vector * pretmp_7133;
  struct vector * pretmp_7134;
  struct vector * pretmp_7135;
  struct vector * pretmp_7136;
  struct vector * pretmp_7137;
  struct vector * pretmp_7138;
  struct vector * pretmp_7139;
  struct vector * pretmp_7140;
  struct vector * pretmp_7141;
  struct vector * pretmp_7142;
  struct vector * pretmp_7143;
  struct vector * pretmp_7144;
  struct vector * pretmp_7145;
  struct vector * pretmp_7146;
  struct vector * pretmp_7147;
  struct vector * pretmp_7148;
  struct vector * pretmp_7149;
  struct vector * pretmp_7150;
  struct vector * pretmp_7151;
  struct vector * pretmp_7152;
  struct vector * pretmp_7153;
  struct vector * pretmp_7154;
  struct vector * pretmp_7155;
  struct vector * pretmp_7156;
  struct vector * pretmp_7157;
  struct vector * pretmp_7158;
  struct vector * pretmp_7159;
  struct vector * pretmp_7160;
  struct vector * pretmp_7161;
  struct vector * pretmp_7162;
  struct vector * pretmp_7163;
  struct vector * pretmp_7164;
  struct vector * pretmp_7165;
  struct vector * pretmp_7166;
  struct vector * pretmp_7167;
  struct vector * pretmp_7168;
  struct vector * pretmp_7169;
  struct vector * pretmp_7170;
  struct vector * pretmp_7171;
  struct vector * pretmp_7172;
  struct vector * pretmp_7173;
  struct vector * pretmp_7174;
  struct vector * pretmp_7175;
  struct vector * pretmp_7176;
  struct vector * pretmp_7177;
  struct vector * pretmp_7178;
  struct vector * pretmp_7179;
  struct vector * pretmp_7180;
  struct vector * pretmp_7181;
  struct vector * pretmp_7182;
  struct vector * pretmp_7183;
  struct vector * pretmp_7184;
  struct vector * pretmp_7185;
  struct vector * pretmp_7186;
  struct vector * pretmp_7187;
  struct vector * pretmp_7188;
  struct vector * pretmp_7189;
  struct vector * pretmp_7190;
  struct vector * pretmp_7191;
  struct vector * pretmp_7192;
  struct vector * pretmp_7193;
  struct vector * pretmp_7194;
  struct vector * pretmp_7195;
  struct vector * pretmp_7196;
  struct vector * pretmp_7197;
  struct vector * pretmp_7198;
  struct vector * pretmp_7199;
  struct vector * pretmp_7200;
  struct vector * pretmp_7201;
  struct vector * pretmp_7202;
  struct vector * pretmp_7203;
  struct vector * pretmp_7204;
  struct vector * pretmp_7205;
  struct vector * pretmp_7206;
  struct vector * pretmp_7207;
  struct vector * pretmp_7208;
  struct vector * pretmp_7209;
  struct vector * pretmp_7210;
  struct vector * pretmp_7211;
  struct vector * pretmp_7212;
  struct vector * pretmp_7213;
  struct vector * pretmp_7214;
  struct vector * pretmp_7215;
  struct vector * pretmp_7216;
  struct vector * pretmp_7217;
  struct vector * pretmp_7218;
  struct vector * pretmp_7219;
  struct vector * pretmp_7220;
  struct vector * pretmp_7221;
  struct vector * prephitmp_7222;
  struct map * pretmp_7223;
  struct map * pretmp_7224;
  struct map * pretmp_7225;
  struct map * pretmp_7226;
  struct map * pretmp_7227;
  struct map * pretmp_7228;
  struct map * pretmp_7229;
  struct map * pretmp_7230;
  struct map * pretmp_7231;
  struct map * pretmp_7232;
  struct map * pretmp_7233;
  struct map * pretmp_7234;
  struct map * pretmp_7235;
  struct map * pretmp_7236;
  struct map * pretmp_7237;
  struct map * pretmp_7238;
  struct map * pretmp_7239;
  struct map * pretmp_7240;
  struct map * pretmp_7241;
  struct map * pretmp_7242;
  struct map * pretmp_7243;
  struct map * pretmp_7244;
  struct map * pretmp_7245;
  struct map * pretmp_7246;
  struct map * pretmp_7247;
  struct map * pretmp_7248;
  struct map * pretmp_7249;
  struct map * pretmp_7250;
  struct map * pretmp_7251;
  struct map * pretmp_7252;
  struct map * pretmp_7253;
  struct map * pretmp_7254;
  struct map * pretmp_7255;
  struct map * pretmp_7256;
  struct map * pretmp_7257;
  struct map * pretmp_7258;
  struct map * pretmp_7259;
  struct map * pretmp_7260;
  struct map * pretmp_7261;
  struct map * pretmp_7262;
  struct map * pretmp_7263;
  struct map * pretmp_7264;
  struct map * pretmp_7265;
  struct map * pretmp_7266;
  struct map * pretmp_7267;
  struct map * pretmp_7268;
  struct map * pretmp_7269;
  struct map * pretmp_7270;
  struct map * pretmp_7271;
  struct map * pretmp_7272;
  struct map * pretmp_7273;
  struct map * pretmp_7274;
  struct map * pretmp_7275;
  struct map * pretmp_7276;
  struct map * pretmp_7277;
  struct map * pretmp_7278;
  struct map * pretmp_7279;
  struct map * pretmp_7280;
  struct map * pretmp_7281;
  struct map * pretmp_7282;
  struct map * pretmp_7283;
  struct map * pretmp_7284;
  struct map * pretmp_7285;
  struct map * pretmp_7286;
  struct map * pretmp_7287;
  struct map * pretmp_7288;
  struct map * pretmp_7289;
  struct map * pretmp_7290;
  struct map * pretmp_7291;
  struct map * pretmp_7292;
  struct map * pretmp_7293;
  struct map * pretmp_7294;
  struct map * pretmp_7295;
  struct map * pretmp_7296;
  struct map * pretmp_7297;
  struct map * pretmp_7298;
  struct map * pretmp_7299;
  struct map * pretmp_7300;
  struct map * pretmp_7301;
  struct map * pretmp_7302;
  struct map * pretmp_7303;
  struct map * pretmp_7304;
  struct map * pretmp_7305;
  struct map * pretmp_7306;
  struct map * pretmp_7307;
  struct map * pretmp_7308;
  struct map * pretmp_7309;
  struct map * pretmp_7310;
  struct map * pretmp_7311;
  struct map * prephitmp_7312;
  struct vector * pretmp_7313;
  struct vector * pretmp_7314;
  struct vector * prephitmp_7315;
  struct vector * pretmp_7316;
  struct vector * pretmp_7317;
  struct vector * pretmp_7318;
  struct vector * pretmp_7319;
  struct vector * pretmp_7320;
  struct vector * pretmp_7321;
  struct vector * pretmp_7322;
  struct vector * pretmp_7323;
  struct vector * pretmp_7324;
  struct vector * pretmp_7325;
  struct vector * pretmp_7326;
  struct vector * pretmp_7327;
  struct vector * pretmp_7328;
  struct vector * pretmp_7329;
  struct vector * pretmp_7330;
  struct vector * prephitmp_7331;
  struct vector * pretmp_7332;
  struct vector * pretmp_7333;
  struct vector * pretmp_7334;
  struct vector * pretmp_7335;
  struct vector * pretmp_7336;
  struct vector * pretmp_7337;
  struct vector * pretmp_7338;
  struct vector * pretmp_7339;
  struct vector * pretmp_7340;
  struct vector * pretmp_7341;
  struct vector * pretmp_7342;
  struct vector * pretmp_7343;
  struct vector * pretmp_7344;
  struct vector * pretmp_7345;
  struct vector * pretmp_7346;
  struct vector * prephitmp_7347;
  struct vector * pretmp_7348;
  struct vector * pretmp_7349;
  struct vector * pretmp_7350;
  struct vector * pretmp_7351;
  struct vector * pretmp_7352;
  struct vector * pretmp_7353;
  struct vector * pretmp_7354;
  struct vector * pretmp_7355;
  struct vector * pretmp_7356;
  struct vector * pretmp_7357;
  struct vector * pretmp_7358;
  struct vector * pretmp_7359;
  struct vector * pretmp_7360;
  struct vector * pretmp_7361;
  struct vector * pretmp_7362;
  struct vector * prephitmp_7363;
  struct vector * pretmp_7364;
  struct vector * pretmp_7365;
  struct vector * pretmp_7366;
  struct vector * pretmp_7367;
  struct vector * pretmp_7368;
  struct vector * pretmp_7369;
  struct vector * pretmp_7370;
  struct vector * pretmp_7371;
  struct vector * pretmp_7372;
  struct vector * pretmp_7373;
  struct vector * pretmp_7374;
  struct vector * pretmp_7375;
  struct vector * pretmp_7376;
  struct vector * pretmp_7377;
  struct vector * pretmp_7378;
  struct vector * prephitmp_7379;
  struct vector * pretmp_7380;
  struct vector * pretmp_7381;
  struct vector * pretmp_7382;
  struct vector * pretmp_7383;
  struct vector * pretmp_7384;
  struct vector * pretmp_7385;
  struct vector * pretmp_7386;
  struct vector * pretmp_7387;
  struct vector * pretmp_7388;
  struct vector * pretmp_7389;
  struct vector * pretmp_7390;
  struct vector * pretmp_7391;
  struct vector * pretmp_7392;
  struct vector * pretmp_7393;
  struct vector * pretmp_7394;
  struct vector * prephitmp_7395;
  struct _Rep_type * pretmp_7396;
  struct _Rep_type * pretmp_7397;
  struct _Rep_type * pretmp_7398;
  struct _Rep_type * pretmp_7399;
  struct _Rep_type * pretmp_7400;
  struct _Rep_type * pretmp_7401;
  struct _Rep_type * pretmp_7402;
  struct _Rep_type * pretmp_7403;
  struct _Rep_type * pretmp_7404;
  struct _Rep_type * pretmp_7405;
  struct _Rep_type * pretmp_7406;
  struct _Rep_type * pretmp_7407;
  struct _Rep_type * pretmp_7408;
  struct _Rep_type * pretmp_7409;
  struct _Rep_type * pretmp_7410;
  struct _Rep_type * pretmp_7411;
  struct _Rep_type * pretmp_7412;
  struct _Rep_type * pretmp_7413;
  struct _Rep_type * pretmp_7414;
  struct _Rep_type * pretmp_7415;
  struct _Rep_type * pretmp_7416;
  struct _Rep_type * pretmp_7417;
  struct _Rep_type * pretmp_7418;
  struct _Rep_type * pretmp_7419;
  struct _Rep_type * pretmp_7420;
  struct _Rep_type * pretmp_7421;
  struct _Rep_type * pretmp_7422;
  struct _Rep_type * pretmp_7423;
  struct _Rep_type * pretmp_7424;
  struct _Rep_type * pretmp_7425;
  struct _Rep_type * pretmp_7426;
  struct _Rep_type * pretmp_7427;
  struct _Rep_type * pretmp_7428;
  struct _Rep_type * pretmp_7429;
  struct _Rep_type * pretmp_7430;
  struct _Rep_type * pretmp_7431;
  struct _Rep_type * pretmp_7432;
  struct _Rep_type * pretmp_7433;
  struct _Rep_type * pretmp_7434;
  struct _Rep_type * pretmp_7435;
  struct _Rep_type * pretmp_7436;
  struct _Rep_type * pretmp_7437;
  struct _Rep_type * prephitmp_7438;
  struct _Rep_type * pretmp_7439;
  struct _Rep_type * pretmp_7440;
  struct _Rep_type * pretmp_7441;
  struct _Rep_type * pretmp_7442;
  struct _Rep_type * pretmp_7443;
  struct _Rep_type * pretmp_7444;
  struct _Rep_type * pretmp_7445;
  struct _Rep_type * prephitmp_7446;
  struct vector * pretmp_7447;
  struct vector * pretmp_7448;
  struct vector * pretmp_7449;
  struct vector * pretmp_7450;
  struct vector * pretmp_7451;
  struct vector * pretmp_7452;
  struct vector * pretmp_7453;
  struct vector * pretmp_7454;
  struct vector * pretmp_7455;
  struct vector * pretmp_7456;
  struct vector * pretmp_7457;
  struct vector * pretmp_7458;
  struct vector * pretmp_7459;
  struct vector * pretmp_7460;
  struct vector * pretmp_7461;
  struct vector * pretmp_7462;
  struct vector * pretmp_7463;
  struct vector * pretmp_7464;
  struct vector * pretmp_7465;
  struct vector * pretmp_7466;
  struct vector * pretmp_7467;
  struct vector * pretmp_7468;
  struct vector * pretmp_7469;
  struct vector * pretmp_7470;
  struct vector * pretmp_7471;
  struct vector * pretmp_7472;
  struct vector * pretmp_7473;
  struct vector * pretmp_7474;
  struct vector * pretmp_7475;
  struct vector * pretmp_7476;
  struct vector * prephitmp_7477;
  struct vector * pretmp_7478;
  struct vector * pretmp_7479;
  struct vector * pretmp_7480;
  struct vector * pretmp_7481;
  struct vector * pretmp_7482;
  struct vector * pretmp_7483;
  struct vector * pretmp_7484;
  struct vector * pretmp_7485;
  struct vector * pretmp_7486;
  struct vector * pretmp_7487;
  struct vector * pretmp_7488;
  struct vector * pretmp_7489;
  struct vector * pretmp_7490;
  struct vector * pretmp_7491;
  struct vector * pretmp_7492;
  struct vector * pretmp_7493;
  struct vector * pretmp_7494;
  struct vector * pretmp_7495;
  struct vector * pretmp_7496;
  struct vector * pretmp_7497;
  struct vector * pretmp_7498;
  struct vector * pretmp_7499;
  struct vector * pretmp_7500;
  struct vector * pretmp_7501;
  struct vector * pretmp_7502;
  struct vector * pretmp_7503;
  struct vector * pretmp_7504;
  struct vector * pretmp_7505;
  struct vector * pretmp_7506;
  struct vector * pretmp_7507;
  struct vector * prephitmp_7508;
  struct vector * pretmp_7509;
  struct vector * pretmp_7510;
  struct vector * pretmp_7511;
  struct vector * pretmp_7512;
  struct vector * pretmp_7513;
  struct vector * pretmp_7514;
  struct vector * pretmp_7515;
  struct vector * pretmp_7516;
  struct vector * pretmp_7517;
  struct vector * pretmp_7518;
  struct vector * pretmp_7519;
  struct vector * pretmp_7520;
  struct vector * pretmp_7521;
  struct vector * pretmp_7522;
  struct vector * pretmp_7523;
  struct vector * pretmp_7524;
  struct vector * pretmp_7525;
  struct vector * pretmp_7526;
  struct vector * pretmp_7527;
  struct vector * pretmp_7528;
  struct vector * pretmp_7529;
  struct vector * pretmp_7530;
  struct vector * pretmp_7531;
  struct vector * pretmp_7532;
  struct vector * pretmp_7533;
  struct vector * pretmp_7534;
  struct vector * pretmp_7535;
  struct vector * pretmp_7536;
  struct vector * pretmp_7537;
  struct vector * pretmp_7538;
  struct vector * prephitmp_7539;
  struct vector * pretmp_7540;
  struct vector * pretmp_7541;
  struct vector * pretmp_7542;
  struct vector * pretmp_7543;
  struct vector * pretmp_7544;
  struct vector * pretmp_7545;
  struct vector * pretmp_7546;
  struct vector * pretmp_7547;
  struct vector * pretmp_7548;
  struct vector * pretmp_7549;
  struct vector * pretmp_7550;
  struct vector * pretmp_7551;
  struct vector * pretmp_7552;
  struct vector * pretmp_7553;
  struct vector * pretmp_7554;
  struct vector * pretmp_7555;
  struct vector * pretmp_7556;
  struct vector * pretmp_7557;
  struct vector * pretmp_7558;
  struct vector * pretmp_7559;
  struct vector * pretmp_7560;
  struct vector * pretmp_7561;
  struct vector * pretmp_7562;
  struct vector * pretmp_7563;
  struct vector * pretmp_7564;
  struct vector * pretmp_7565;
  struct vector * pretmp_7566;
  struct vector * pretmp_7567;
  struct vector * pretmp_7568;
  struct vector * pretmp_7569;
  struct vector * prephitmp_7570;
  struct vector * pretmp_7571;
  struct vector * pretmp_7572;
  struct vector * pretmp_7573;
  struct vector * pretmp_7574;
  struct vector * pretmp_7575;
  struct vector * pretmp_7576;
  struct vector * pretmp_7577;
  struct vector * pretmp_7578;
  struct vector * pretmp_7579;
  struct vector * pretmp_7580;
  struct vector * pretmp_7581;
  struct vector * pretmp_7582;
  struct vector * pretmp_7583;
  struct vector * pretmp_7584;
  struct vector * pretmp_7585;
  struct vector * pretmp_7586;
  struct vector * pretmp_7587;
  struct vector * pretmp_7588;
  struct vector * pretmp_7589;
  struct vector * pretmp_7590;
  struct vector * pretmp_7591;
  struct vector * pretmp_7592;
  struct vector * pretmp_7593;
  struct vector * pretmp_7594;
  struct vector * pretmp_7595;
  struct vector * pretmp_7596;
  struct vector * pretmp_7597;
  struct vector * pretmp_7598;
  struct vector * pretmp_7599;
  struct vector * pretmp_7600;
  struct vector * prephitmp_7601;
  struct vector * pretmp_7602;
  struct vector * pretmp_7603;
  struct vector * pretmp_7604;
  struct vector * pretmp_7605;
  struct vector * pretmp_7606;
  struct vector * pretmp_7607;
  struct vector * pretmp_7608;
  struct vector * pretmp_7609;
  struct vector * pretmp_7610;
  struct vector * pretmp_7611;
  struct vector * pretmp_7612;
  struct vector * pretmp_7613;
  struct vector * pretmp_7614;
  struct vector * pretmp_7615;
  struct vector * pretmp_7616;
  struct vector * pretmp_7617;
  struct vector * pretmp_7618;
  struct vector * pretmp_7619;
  struct vector * pretmp_7620;
  struct vector * pretmp_7621;
  struct vector * pretmp_7622;
  struct vector * pretmp_7623;
  struct vector * pretmp_7624;
  struct vector * pretmp_7625;
  struct vector * pretmp_7626;
  struct vector * pretmp_7627;
  struct vector * pretmp_7628;
  struct vector * pretmp_7629;
  struct vector * pretmp_7630;
  struct vector * pretmp_7631;
  struct vector * prephitmp_7632;
  struct vector * pretmp_7633;
  struct vector * pretmp_7634;
  struct vector * pretmp_7635;
  struct vector * pretmp_7636;
  struct vector * pretmp_7637;
  struct vector * pretmp_7638;
  struct vector * pretmp_7639;
  struct vector * pretmp_7640;
  struct vector * pretmp_7641;
  struct vector * pretmp_7642;
  struct vector * pretmp_7643;
  struct vector * pretmp_7644;
  struct vector * pretmp_7645;
  struct vector * pretmp_7646;
  struct vector * pretmp_7647;
  struct vector * pretmp_7648;
  struct vector * pretmp_7649;
  struct vector * pretmp_7650;
  struct vector * pretmp_7651;
  struct vector * pretmp_7652;
  struct vector * pretmp_7653;
  struct vector * pretmp_7654;
  struct vector * pretmp_7655;
  struct vector * pretmp_7656;
  struct vector * pretmp_7657;
  struct vector * pretmp_7658;
  struct vector * pretmp_7659;
  struct vector * pretmp_7660;
  struct vector * pretmp_7661;
  struct vector * pretmp_7662;
  struct vector * prephitmp_7663;
  struct map * pretmp_7664;
  struct map * pretmp_7665;
  struct map * pretmp_7666;
  struct map * pretmp_7667;
  struct map * pretmp_7668;
  struct map * pretmp_7669;
  struct map * pretmp_7670;
  struct map * pretmp_7671;
  struct map * pretmp_7672;
  struct map * pretmp_7673;
  struct map * pretmp_7674;
  struct map * pretmp_7675;
  struct map * pretmp_7676;
  struct map * pretmp_7677;
  struct map * pretmp_7678;
  struct map * pretmp_7679;
  struct map * pretmp_7680;
  struct map * pretmp_7681;
  struct map * pretmp_7682;
  struct map * pretmp_7683;
  struct map * pretmp_7684;
  struct map * pretmp_7685;
  struct map * pretmp_7686;
  struct map * pretmp_7687;
  struct map * pretmp_7688;
  struct map * pretmp_7689;
  struct map * pretmp_7690;
  struct map * pretmp_7691;
  struct map * pretmp_7692;
  struct map * pretmp_7693;
  struct map * prephitmp_7694;
  struct _Rep_type * pretmp_7695;
  struct _Rep_type * pretmp_7696;
  struct _Rep_type * pretmp_7697;
  struct _Rep_type * pretmp_7698;
  struct _Rep_type * pretmp_7699;
  struct _Rep_type * pretmp_7700;
  struct _Rep_type * pretmp_7701;
  struct _Rep_type * pretmp_7702;
  struct _Rep_type * pretmp_7703;
  struct _Rep_type * pretmp_7704;
  struct _Rep_type * pretmp_7705;
  struct _Rep_type * pretmp_7706;
  struct _Rep_type * prephitmp_7707;
  struct _Rep_type * pretmp_7708;
  struct _Rep_type * pretmp_7709;
  struct _Rep_type * pretmp_7710;
  struct _Rep_type * pretmp_7711;
  struct _Rep_type * pretmp_7712;
  struct _Rep_type * pretmp_7713;
  struct _Rep_type * pretmp_7714;
  struct _Rep_type * pretmp_7715;
  struct _Rep_type * pretmp_7716;
  struct _Rep_type * pretmp_7717;
  struct _Rep_type * pretmp_7718;
  struct _Rep_type * pretmp_7719;
  struct _Rep_type * pretmp_7720;
  struct _Rep_type * pretmp_7721;
  struct _Rep_type * pretmp_7722;
  struct _Rep_type * pretmp_7723;
  struct _Rep_type * pretmp_7724;
  struct _Rep_type * pretmp_7725;
  struct _Rep_type * pretmp_7726;
  struct _Rep_type * pretmp_7727;
  struct _Rep_type * pretmp_7728;
  struct _Rep_type * pretmp_7729;
  struct _Rep_type * pretmp_7730;
  struct _Rep_type * pretmp_7731;
  struct _Rep_type * pretmp_7732;
  struct _Rep_type * pretmp_7733;
  struct _Rep_type * pretmp_7734;
  struct _Rep_type * pretmp_7735;
  struct _Rep_type * pretmp_7736;
  struct _Rep_type * pretmp_7737;
  struct _Rep_type * pretmp_7738;
  struct _Rep_type * pretmp_7739;
  struct _Rep_type * pretmp_7740;
  struct _Rep_type * pretmp_7741;
  struct _Rep_type * pretmp_7742;
  struct _Rep_type * pretmp_7743;
  struct _Rep_type * pretmp_7744;
  struct _Rep_type * pretmp_7745;
  struct _Rep_type * pretmp_7746;
  struct _Rep_type * pretmp_7747;
  struct _Rep_type * pretmp_7748;
  struct _Rep_type * pretmp_7749;
  struct _Rep_type * prephitmp_7750;
  struct vector * pretmp_7751;
  struct vector * pretmp_7752;
  struct vector * pretmp_7753;
  struct vector * pretmp_7754;
  struct vector * pretmp_7755;
  struct vector * pretmp_7756;
  struct vector * pretmp_7757;
  struct vector * prephitmp_7758;
  struct vector * pretmp_7759;
  struct vector * pretmp_7760;
  struct vector * pretmp_7761;
  struct vector * pretmp_7762;
  struct vector * pretmp_7763;
  struct vector * pretmp_7764;
  struct vector * pretmp_7765;
  struct vector * prephitmp_7766;
  struct vector * pretmp_7767;
  struct vector * pretmp_7768;
  struct vector * pretmp_7769;
  struct vector * pretmp_7770;
  struct vector * pretmp_7771;
  struct vector * pretmp_7772;
  struct vector * pretmp_7773;
  struct vector * prephitmp_7774;
  struct vector * pretmp_7775;
  struct vector * pretmp_7776;
  struct vector * pretmp_7777;
  struct vector * pretmp_7778;
  struct vector * pretmp_7779;
  struct vector * pretmp_7780;
  struct vector * pretmp_7781;
  struct vector * prephitmp_7782;
  struct vector * pretmp_7783;
  struct vector * pretmp_7784;
  struct vector * pretmp_7785;
  struct vector * pretmp_7786;
  struct vector * pretmp_7787;
  struct vector * pretmp_7788;
  struct vector * pretmp_7789;
  struct vector * prephitmp_7790;
  struct vector * pretmp_7791;
  struct vector * pretmp_7792;
  struct vector * pretmp_7793;
  struct vector * pretmp_7794;
  struct vector * pretmp_7795;
  struct vector * pretmp_7796;
  struct vector * pretmp_7797;
  struct vector * prephitmp_7798;
  struct vector * pretmp_7799;
  struct vector * pretmp_7800;
  struct vector * pretmp_7801;
  struct vector * pretmp_7802;
  struct vector * pretmp_7803;
  struct vector * pretmp_7804;
  struct vector * pretmp_7805;
  struct vector * prephitmp_7806;
  struct map * pretmp_7807;
  struct map * pretmp_7808;
  struct map * pretmp_7809;
  struct map * pretmp_7810;
  struct map * pretmp_7811;
  struct map * pretmp_7812;
  struct map * pretmp_7813;
  struct map * prephitmp_7814;
  struct _Rep_type * pretmp_7815;
  struct _Rep_type * pretmp_7816;
  struct _Rep_type * pretmp_7817;
  struct _Rep_type * pretmp_7818;
  struct _Rep_type * pretmp_7819;
  struct _Rep_type * pretmp_7820;
  struct _Rep_type * pretmp_7821;
  struct _Rep_type * pretmp_7822;
  struct _Rep_type * pretmp_7823;
  struct _Rep_type * pretmp_7824;
  struct _Rep_type * pretmp_7825;
  struct _Rep_type * pretmp_7826;
  struct _Rep_type * pretmp_7827;
  struct _Rep_type * pretmp_7828;
  struct _Rep_type * pretmp_7829;
  struct _Rep_type * prephitmp_7830;
  struct _Rep_type * pretmp_7831;
  struct _Rep_type * pretmp_7832;
  struct _Rep_type * pretmp_7833;
  struct _Rep_type * pretmp_7834;
  struct _Rep_type * pretmp_7835;
  struct _Rep_type * pretmp_7836;
  struct _Rep_type * pretmp_7837;
  struct _Rep_type * pretmp_7838;
  struct _Rep_type * pretmp_7839;
  struct _Rep_type * pretmp_7840;
  struct _Rep_type * pretmp_7841;
  struct _Rep_type * pretmp_7842;
  struct _Rep_type * prephitmp_7843;
  struct vector * pretmp_7844;
  struct vector * pretmp_7845;
  struct vector * pretmp_7846;
  struct vector * pretmp_7847;
  struct vector * pretmp_7848;
  struct vector * pretmp_7849;
  struct vector * pretmp_7850;
  struct vector * pretmp_7851;
  struct vector * pretmp_7852;
  struct vector * pretmp_7853;
  struct vector * pretmp_7854;
  struct vector * pretmp_7855;
  struct vector * pretmp_7856;
  struct vector * pretmp_7857;
  struct vector * pretmp_7858;
  struct vector * pretmp_7859;
  struct vector * pretmp_7860;
  struct vector * pretmp_7861;
  struct vector * pretmp_7862;
  struct vector * pretmp_7863;
  struct vector * pretmp_7864;
  struct vector * pretmp_7865;
  struct vector * pretmp_7866;
  struct vector * pretmp_7867;
  struct vector * pretmp_7868;
  struct vector * pretmp_7869;
  struct vector * pretmp_7870;
  struct vector * pretmp_7871;
  struct vector * pretmp_7872;
  struct vector * pretmp_7873;
  struct vector * pretmp_7874;
  struct vector * pretmp_7875;
  struct vector * pretmp_7876;
  struct vector * pretmp_7877;
  struct vector * pretmp_7878;
  struct vector * pretmp_7879;
  struct vector * pretmp_7880;
  struct vector * pretmp_7881;
  struct vector * pretmp_7882;
  struct vector * pretmp_7883;
  struct vector * pretmp_7884;
  struct vector * pretmp_7885;
  struct vector * prephitmp_7886;
  struct vector * pretmp_7887;
  struct vector * pretmp_7888;
  struct vector * pretmp_7889;
  struct vector * pretmp_7890;
  struct vector * pretmp_7891;
  struct vector * pretmp_7892;
  struct vector * pretmp_7893;
  struct vector * pretmp_7894;
  struct vector * pretmp_7895;
  struct vector * pretmp_7896;
  struct vector * pretmp_7897;
  struct vector * pretmp_7898;
  struct vector * pretmp_7899;
  struct vector * pretmp_7900;
  struct vector * pretmp_7901;
  struct vector * pretmp_7902;
  struct vector * pretmp_7903;
  struct vector * pretmp_7904;
  struct vector * pretmp_7905;
  struct vector * pretmp_7906;
  struct vector * pretmp_7907;
  struct vector * pretmp_7908;
  struct vector * pretmp_7909;
  struct vector * pretmp_7910;
  struct vector * pretmp_7911;
  struct vector * pretmp_7912;
  struct vector * pretmp_7913;
  struct vector * pretmp_7914;
  struct vector * pretmp_7915;
  struct vector * pretmp_7916;
  struct vector * pretmp_7917;
  struct vector * pretmp_7918;
  struct vector * pretmp_7919;
  struct vector * pretmp_7920;
  struct vector * pretmp_7921;
  struct vector * pretmp_7922;
  struct vector * pretmp_7923;
  struct vector * pretmp_7924;
  struct vector * pretmp_7925;
  struct vector * pretmp_7926;
  struct vector * pretmp_7927;
  struct vector * pretmp_7928;
  struct vector * prephitmp_7929;
  struct vector * pretmp_7930;
  struct vector * pretmp_7931;
  struct vector * pretmp_7932;
  struct vector * pretmp_7933;
  struct vector * pretmp_7934;
  struct vector * pretmp_7935;
  struct vector * pretmp_7936;
  struct vector * pretmp_7937;
  struct vector * pretmp_7938;
  struct vector * pretmp_7939;
  struct vector * pretmp_7940;
  struct vector * pretmp_7941;
  struct vector * pretmp_7942;
  struct vector * pretmp_7943;
  struct vector * pretmp_7944;
  struct vector * pretmp_7945;
  struct vector * pretmp_7946;
  struct vector * pretmp_7947;
  struct vector * pretmp_7948;
  struct vector * pretmp_7949;
  struct vector * pretmp_7950;
  struct vector * pretmp_7951;
  struct vector * pretmp_7952;
  struct vector * pretmp_7953;
  struct vector * pretmp_7954;
  struct vector * pretmp_7955;
  struct vector * pretmp_7956;
  struct vector * pretmp_7957;
  struct vector * pretmp_7958;
  struct vector * pretmp_7959;
  struct vector * pretmp_7960;
  struct vector * pretmp_7961;
  struct vector * pretmp_7962;
  struct vector * pretmp_7963;
  struct vector * pretmp_7964;
  struct vector * pretmp_7965;
  struct vector * pretmp_7966;
  struct vector * pretmp_7967;
  struct vector * pretmp_7968;
  struct vector * pretmp_7969;
  struct vector * pretmp_7970;
  struct vector * pretmp_7971;
  struct vector * prephitmp_7972;
  struct vector * pretmp_7973;
  struct vector * pretmp_7974;
  struct vector * pretmp_7975;
  struct vector * pretmp_7976;
  struct vector * pretmp_7977;
  struct vector * pretmp_7978;
  struct vector * pretmp_7979;
  struct vector * pretmp_7980;
  struct vector * pretmp_7981;
  struct vector * pretmp_7982;
  struct vector * pretmp_7983;
  struct vector * pretmp_7984;
  struct vector * pretmp_7985;
  struct vector * pretmp_7986;
  struct vector * pretmp_7987;
  struct vector * pretmp_7988;
  struct vector * pretmp_7989;
  struct vector * pretmp_7990;
  struct vector * pretmp_7991;
  struct vector * pretmp_7992;
  struct vector * pretmp_7993;
  struct vector * pretmp_7994;
  struct vector * pretmp_7995;
  struct vector * pretmp_7996;
  struct vector * pretmp_7997;
  struct vector * pretmp_7998;
  struct vector * pretmp_7999;
  struct vector * pretmp_8000;
  struct vector * pretmp_8001;
  struct vector * pretmp_8002;
  struct vector * pretmp_8003;
  struct vector * pretmp_8004;
  struct vector * pretmp_8005;
  struct vector * pretmp_8006;
  struct vector * pretmp_8007;
  struct vector * pretmp_8008;
  struct vector * pretmp_8009;
  struct vector * pretmp_8010;
  struct vector * pretmp_8011;
  struct vector * pretmp_8012;
  struct vector * pretmp_8013;
  struct vector * pretmp_8014;
  struct vector * prephitmp_8015;
  struct vector * pretmp_8016;
  struct vector * pretmp_8017;
  struct vector * pretmp_8018;
  struct vector * pretmp_8019;
  struct vector * pretmp_8020;
  struct vector * pretmp_8021;
  struct vector * pretmp_8022;
  struct vector * pretmp_8023;
  struct vector * pretmp_8024;
  struct vector * pretmp_8025;
  struct vector * pretmp_8026;
  struct vector * pretmp_8027;
  struct vector * pretmp_8028;
  struct vector * pretmp_8029;
  struct vector * pretmp_8030;
  struct vector * pretmp_8031;
  struct vector * pretmp_8032;
  struct vector * pretmp_8033;
  struct vector * pretmp_8034;
  struct vector * pretmp_8035;
  struct vector * pretmp_8036;
  struct vector * pretmp_8037;
  struct vector * pretmp_8038;
  struct vector * pretmp_8039;
  struct vector * pretmp_8040;
  struct vector * pretmp_8041;
  struct vector * pretmp_8042;
  struct vector * pretmp_8043;
  struct vector * pretmp_8044;
  struct vector * pretmp_8045;
  struct vector * pretmp_8046;
  struct vector * pretmp_8047;
  struct vector * pretmp_8048;
  struct vector * pretmp_8049;
  struct vector * pretmp_8050;
  struct vector * pretmp_8051;
  struct vector * pretmp_8052;
  struct vector * pretmp_8053;
  struct vector * pretmp_8054;
  struct vector * pretmp_8055;
  struct vector * pretmp_8056;
  struct vector * pretmp_8057;
  struct vector * prephitmp_8058;
  struct vector * pretmp_8059;
  struct vector * pretmp_8060;
  struct vector * pretmp_8061;
  struct vector * pretmp_8062;
  struct vector * pretmp_8063;
  struct vector * pretmp_8064;
  struct vector * pretmp_8065;
  struct vector * pretmp_8066;
  struct vector * pretmp_8067;
  struct vector * pretmp_8068;
  struct vector * pretmp_8069;
  struct vector * pretmp_8070;
  struct vector * pretmp_8071;
  struct vector * pretmp_8072;
  struct vector * pretmp_8073;
  struct vector * pretmp_8074;
  struct vector * pretmp_8075;
  struct vector * pretmp_8076;
  struct vector * pretmp_8077;
  struct vector * pretmp_8078;
  struct vector * pretmp_8079;
  struct vector * pretmp_8080;
  struct vector * pretmp_8081;
  struct vector * pretmp_8082;
  struct vector * pretmp_8083;
  struct vector * pretmp_8084;
  struct vector * pretmp_8085;
  struct vector * pretmp_8086;
  struct vector * pretmp_8087;
  struct vector * pretmp_8088;
  struct vector * pretmp_8089;
  struct vector * pretmp_8090;
  struct vector * pretmp_8091;
  struct vector * pretmp_8092;
  struct vector * pretmp_8093;
  struct vector * pretmp_8094;
  struct vector * pretmp_8095;
  struct vector * pretmp_8096;
  struct vector * pretmp_8097;
  struct vector * pretmp_8098;
  struct vector * pretmp_8099;
  struct vector * pretmp_8100;
  struct vector * prephitmp_8101;
  struct vector * pretmp_8102;
  struct vector * pretmp_8103;
  struct vector * pretmp_8104;
  struct vector * pretmp_8105;
  struct vector * pretmp_8106;
  struct vector * pretmp_8107;
  struct vector * pretmp_8108;
  struct vector * pretmp_8109;
  struct vector * pretmp_8110;
  struct vector * pretmp_8111;
  struct vector * pretmp_8112;
  struct vector * pretmp_8113;
  struct vector * pretmp_8114;
  struct vector * pretmp_8115;
  struct vector * pretmp_8116;
  struct vector * pretmp_8117;
  struct vector * pretmp_8118;
  struct vector * pretmp_8119;
  struct vector * pretmp_8120;
  struct vector * pretmp_8121;
  struct vector * pretmp_8122;
  struct vector * pretmp_8123;
  struct vector * pretmp_8124;
  struct vector * pretmp_8125;
  struct vector * pretmp_8126;
  struct vector * pretmp_8127;
  struct vector * pretmp_8128;
  struct vector * pretmp_8129;
  struct vector * pretmp_8130;
  struct vector * pretmp_8131;
  struct vector * pretmp_8132;
  struct vector * pretmp_8133;
  struct vector * pretmp_8134;
  struct vector * pretmp_8135;
  struct vector * pretmp_8136;
  struct vector * pretmp_8137;
  struct vector * pretmp_8138;
  struct vector * pretmp_8139;
  struct vector * pretmp_8140;
  struct vector * pretmp_8141;
  struct vector * pretmp_8142;
  struct vector * pretmp_8143;
  struct vector * prephitmp_8144;
  struct map * pretmp_8145;
  struct map * pretmp_8146;
  struct map * pretmp_8147;
  struct map * pretmp_8148;
  struct map * pretmp_8149;
  struct map * pretmp_8150;
  struct map * pretmp_8151;
  struct map * pretmp_8152;
  struct map * pretmp_8153;
  struct map * pretmp_8154;
  struct map * pretmp_8155;
  struct map * pretmp_8156;
  struct map * pretmp_8157;
  struct map * pretmp_8158;
  struct map * pretmp_8159;
  struct map * pretmp_8160;
  struct map * pretmp_8161;
  struct map * pretmp_8162;
  struct map * pretmp_8163;
  struct map * pretmp_8164;
  struct map * pretmp_8165;
  struct map * pretmp_8166;
  struct map * pretmp_8167;
  struct map * pretmp_8168;
  struct map * pretmp_8169;
  struct map * pretmp_8170;
  struct map * pretmp_8171;
  struct map * pretmp_8172;
  struct map * pretmp_8173;
  struct map * pretmp_8174;
  struct map * pretmp_8175;
  struct map * pretmp_8176;
  struct map * pretmp_8177;
  struct map * pretmp_8178;
  struct map * pretmp_8179;
  struct map * pretmp_8180;
  struct map * pretmp_8181;
  struct map * pretmp_8182;
  struct map * pretmp_8183;
  struct map * pretmp_8184;
  struct map * pretmp_8185;
  struct map * pretmp_8186;
  struct map * prephitmp_8187;
  struct _Rep_type * pretmp_8188;
  struct _Rep_type * pretmp_8189;
  struct _Rep_type * pretmp_8190;
  struct _Rep_type * pretmp_8191;
  struct _Rep_type * pretmp_8192;
  struct _Rep_type * pretmp_8193;
  struct _Rep_type * pretmp_8194;
  struct _Rep_type * pretmp_8195;
  struct _Rep_type * pretmp_8196;
  struct _Rep_type * pretmp_8197;
  struct _Rep_type * pretmp_8198;
  struct _Rep_type * pretmp_8199;
  struct _Rep_type * pretmp_8200;
  struct _Rep_type * pretmp_8201;
  struct _Rep_type * pretmp_8202;
  struct _Rep_type * prephitmp_8203;
  struct vector * pretmp_8204;
  struct vector * pretmp_8205;
  struct vector * pretmp_8206;
  struct vector * pretmp_8207;
  struct vector * pretmp_8208;
  struct vector * pretmp_8209;
  struct vector * pretmp_8210;
  struct vector * pretmp_8211;
  struct vector * pretmp_8212;
  struct vector * pretmp_8213;
  struct vector * pretmp_8214;
  struct vector * pretmp_8215;
  struct vector * prephitmp_8216;
  struct vector * pretmp_8217;
  struct vector * pretmp_8218;
  struct vector * pretmp_8219;
  struct vector * pretmp_8220;
  struct vector * pretmp_8221;
  struct vector * pretmp_8222;
  struct vector * pretmp_8223;
  struct vector * pretmp_8224;
  struct vector * pretmp_8225;
  struct vector * pretmp_8226;
  struct vector * pretmp_8227;
  struct vector * pretmp_8228;
  struct vector * prephitmp_8229;
  struct vector * pretmp_8230;
  struct vector * pretmp_8231;
  struct vector * pretmp_8232;
  struct vector * pretmp_8233;
  struct vector * pretmp_8234;
  struct vector * pretmp_8235;
  struct vector * pretmp_8236;
  struct vector * pretmp_8237;
  struct vector * pretmp_8238;
  struct vector * pretmp_8239;
  struct vector * pretmp_8240;
  struct vector * pretmp_8241;
  struct vector * prephitmp_8242;
  struct vector * pretmp_8243;
  struct vector * pretmp_8244;
  struct vector * pretmp_8245;
  struct vector * pretmp_8246;
  struct vector * pretmp_8247;
  struct vector * pretmp_8248;
  struct vector * pretmp_8249;
  struct vector * pretmp_8250;
  struct vector * pretmp_8251;
  struct vector * pretmp_8252;
  struct vector * pretmp_8253;
  struct vector * pretmp_8254;
  struct vector * prephitmp_8255;
  struct vector * pretmp_8256;
  struct vector * pretmp_8257;
  struct vector * pretmp_8258;
  struct vector * pretmp_8259;
  struct vector * pretmp_8260;
  struct vector * pretmp_8261;
  struct vector * pretmp_8262;
  struct vector * pretmp_8263;
  struct vector * pretmp_8264;
  struct vector * pretmp_8265;
  struct vector * pretmp_8266;
  struct vector * pretmp_8267;
  struct vector * prephitmp_8268;
  struct vector * pretmp_8269;
  struct vector * pretmp_8270;
  struct vector * pretmp_8271;
  struct vector * pretmp_8272;
  struct vector * pretmp_8273;
  struct vector * pretmp_8274;
  struct vector * pretmp_8275;
  struct vector * pretmp_8276;
  struct vector * pretmp_8277;
  struct vector * pretmp_8278;
  struct vector * pretmp_8279;
  struct vector * pretmp_8280;
  struct vector * prephitmp_8281;
  struct vector * pretmp_8282;
  struct vector * pretmp_8283;
  struct vector * pretmp_8284;
  struct vector * pretmp_8285;
  struct vector * pretmp_8286;
  struct vector * pretmp_8287;
  struct vector * pretmp_8288;
  struct vector * pretmp_8289;
  struct vector * pretmp_8290;
  struct vector * pretmp_8291;
  struct vector * pretmp_8292;
  struct vector * pretmp_8293;
  struct vector * prephitmp_8294;
  struct map * pretmp_8295;
  struct map * pretmp_8296;
  struct map * pretmp_8297;
  struct map * pretmp_8298;
  struct map * pretmp_8299;
  struct map * pretmp_8300;
  struct map * pretmp_8301;
  struct map * pretmp_8302;
  struct map * pretmp_8303;
  struct map * pretmp_8304;
  struct map * pretmp_8305;
  struct map * pretmp_8306;
  struct map * prephitmp_8307;
  struct vector * pretmp_8308;
  struct vector * pretmp_8309;
  struct vector * pretmp_8310;
  struct vector * pretmp_8311;
  struct vector * pretmp_8312;
  struct vector * pretmp_8313;
  struct vector * pretmp_8314;
  struct vector * pretmp_8315;
  struct vector * pretmp_8316;
  struct vector * pretmp_8317;
  struct vector * pretmp_8318;
  struct vector * pretmp_8319;
  struct vector * pretmp_8320;
  struct vector * pretmp_8321;
  struct vector * pretmp_8322;
  struct vector * prephitmp_8323;
  struct vector * pretmp_8324;
  struct vector * pretmp_8325;
  struct vector * pretmp_8326;
  struct vector * pretmp_8327;
  struct vector * pretmp_8328;
  struct vector * pretmp_8329;
  struct vector * pretmp_8330;
  struct vector * pretmp_8331;
  struct vector * pretmp_8332;
  struct vector * pretmp_8333;
  struct vector * pretmp_8334;
  struct vector * pretmp_8335;
  struct vector * pretmp_8336;
  struct vector * pretmp_8337;
  struct vector * pretmp_8338;
  struct vector * prephitmp_8339;
  struct vector * pretmp_8340;
  struct vector * pretmp_8341;
  struct vector * pretmp_8342;
  struct vector * pretmp_8343;
  struct vector * pretmp_8344;
  struct vector * pretmp_8345;
  struct vector * pretmp_8346;
  struct vector * pretmp_8347;
  struct vector * pretmp_8348;
  struct vector * pretmp_8349;
  struct vector * pretmp_8350;
  struct vector * pretmp_8351;
  struct vector * pretmp_8352;
  struct vector * pretmp_8353;
  struct vector * pretmp_8354;
  struct vector * prephitmp_8355;
  struct vector * pretmp_8356;
  struct vector * pretmp_8357;
  struct vector * pretmp_8358;
  struct vector * pretmp_8359;
  struct vector * pretmp_8360;
  struct vector * pretmp_8361;
  struct vector * pretmp_8362;
  struct vector * pretmp_8363;
  struct vector * pretmp_8364;
  struct vector * pretmp_8365;
  struct vector * pretmp_8366;
  struct vector * pretmp_8367;
  struct vector * pretmp_8368;
  struct vector * pretmp_8369;
  struct vector * pretmp_8370;
  struct vector * prephitmp_8371;
  struct vector * pretmp_8372;
  struct vector * pretmp_8373;
  struct vector * pretmp_8374;
  struct vector * pretmp_8375;
  struct vector * pretmp_8376;
  struct vector * pretmp_8377;
  struct vector * pretmp_8378;
  struct vector * pretmp_8379;
  struct vector * pretmp_8380;
  struct vector * pretmp_8381;
  struct vector * pretmp_8382;
  struct vector * pretmp_8383;
  struct vector * pretmp_8384;
  struct vector * pretmp_8385;
  struct vector * pretmp_8386;
  struct vector * prephitmp_8387;
  struct vector * pretmp_8388;
  struct vector * pretmp_8389;
  struct vector * pretmp_8390;
  struct vector * pretmp_8391;
  struct vector * pretmp_8392;
  struct vector * pretmp_8393;
  struct vector * pretmp_8394;
  struct vector * pretmp_8395;
  struct vector * pretmp_8396;
  struct vector * pretmp_8397;
  struct vector * pretmp_8398;
  struct vector * pretmp_8399;
  struct vector * pretmp_8400;
  struct vector * pretmp_8401;
  struct vector * pretmp_8402;
  struct vector * prephitmp_8403;
  struct vector * pretmp_8404;
  struct vector * pretmp_8405;
  struct vector * pretmp_8406;
  struct vector * pretmp_8407;
  struct vector * pretmp_8408;
  struct vector * pretmp_8409;
  struct vector * pretmp_8410;
  struct vector * pretmp_8411;
  struct vector * pretmp_8412;
  struct vector * pretmp_8413;
  struct vector * pretmp_8414;
  struct vector * pretmp_8415;
  struct vector * pretmp_8416;
  struct vector * pretmp_8417;
  struct vector * pretmp_8418;
  struct vector * prephitmp_8419;
  struct map * pretmp_8420;
  struct map * pretmp_8421;
  struct map * pretmp_8422;
  struct map * pretmp_8423;
  struct map * pretmp_8424;
  struct map * pretmp_8425;
  struct map * pretmp_8426;
  struct map * pretmp_8427;
  struct map * pretmp_8428;
  struct map * pretmp_8429;
  struct map * pretmp_8430;
  struct map * pretmp_8431;
  struct map * pretmp_8432;
  struct map * pretmp_8433;
  struct map * pretmp_8434;
  struct map * prephitmp_8435;

  <bb 2>:
  # DEBUG D#195 => &D.73584
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73584
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73583, "traffic_manager");
  _130 = &this_129(D)->D.65070;
  Module::Module (_130, 0B, &D.73583);

  <bb 3>:
  # DEBUG this => &D.73583
  # DEBUG this => &D.73583
  # DEBUG this => &D.73583
  _133 = MEM[(char * *)&D.73583];
  # DEBUG D#1 => &D.73583
  # DEBUG this => D#1
  # DEBUG this => &D.73583
  if (&D.73583.D.11539._M_local_buf != _133)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  # DEBUG D#629 => D.73583.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73583
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73583
  # DEBUG this => D#1
  # DEBUG this => &D.73583
  # DEBUG D#626 => &D.73583._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _133
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _133
  # DEBUG this => D#620
  # DEBUG D.147930 => D#621
  operator delete (_133);

  <bb 5>:
  # DEBUG D#630 => &D.73583._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73583 ={v} {CLOBBER};
  # DEBUG this => &D.73584
  # DEBUG this => &D.73584
  this_129(D)->D.65070._vptr.Module = &MEM[(void *)&_ZTV14TrafficManager + 16B];
  # DEBUG D#3016 => &this_129(D)->_packet_size
  # DEBUG this => D#3016
  # DEBUG D#668 => &D#3016->D.53336
  # DEBUG this => D#668
  # DEBUG D#667 => &D#668->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct _Vector_impl *)this_129(D) + 96B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 96B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 96B]._M_end_of_storage = 0B;
  # DEBUG D#3015 => &this_129(D)->_packet_size_rate
  # DEBUG this => D#3015
  # DEBUG D#668 => &D#3015->D.53336
  # DEBUG this => D#668
  # DEBUG D#667 => &D#668->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct _Vector_impl *)this_129(D) + 120B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 120B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 120B]._M_end_of_storage = 0B;
  # DEBUG D#3014 => &this_129(D)->_packet_size_max_val
  # DEBUG this => D#3014
  # DEBUG D#259 => &D#3014->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 144B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 144B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 144B]._M_end_of_storage = 0B;
  # DEBUG D#4270 => &this_129(D)->_net
  # DEBUG this => D#4270
  # DEBUG __x => net_136(D)
  # DEBUG D#2249 => &net_136(D)->D.54088
  # DEBUG this => D#2249
  # DEBUG __a => NULL
  _4786 = MEM[(struct Network * * *)net_136(D)];
  # DEBUG D#196 => net_136(D)
  _4787 = MEM[(struct Network * * *)net_136(D) + 8B];
  # DEBUG D#196 => net_136(D)
  # DEBUG this => D#196
  # DEBUG this => D#196
  _4788 = (long int) _4787;
  _4789 = (long int) _4786;
  _4790 = _4788 - _4789;
  _4791 = _4790 /[ex] 8;
  _4792 = (size_type) _4791;
  # DEBUG D#2251 => &D#4270->D.54088
  # DEBUG this => D#2251
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1648 => &D#2251->_M_impl
  # DEBUG this => D#1648
  # DEBUG __a => NULL
  # DEBUG this => D#1648
  # DEBUG __a => NULL
  # DEBUG this => D#1648
  # DEBUG D.116406 => NULL
  MEM[(struct _Vector_impl *)this_129(D) + 184B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 184B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 184B]._M_end_of_storage = 0B;
  # DEBUG this => D#2251
  # DEBUG __n => NULL
  # DEBUG D#1646 => D#2251
  # DEBUG __n => _4792
  # DEBUG this => D#2124
  # DEBUG D#2123 => D#2124
  if (_4792 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_4321 = (long unsigned int) _4790;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#2122 => &D#2123->_M_impl
  # DEBUG D#2121 => D#2122
  # DEBUG __n => _4792
  # DEBUG __a => D#2121
  # DEBUG D#2120 => D#2121
  # DEBUG D#2118 => D#2120
  # DEBUG D#2119 => 0B
  # DEBUG __n => _4792
  # DEBUG this => D#2118
  # DEBUG D.171220 => D#2119
  # DEBUG D#2117 => D#2118
  # DEBUG D#2116 => D#2117
  # DEBUG this => D#2116
  if (_4792 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  std::__throw_bad_alloc ();

  <bb 9>:
  _137 = (long unsigned int) _4790;
  _4805 = operator new (_137);
  goto <bb 11>;

<L539>:
  pretmp_6454 = &this_129(D)->_packet_size;
  pretmp_7313 = &this_129(D)->_packet_size_rate;
  goto <bb 2275> (<L525>);

  <bb 11>:
  # iftmp.356_4806 = PHI <0B(6), _4805(9)>
  # prephitmp_4322 = PHI <pretmp_4321(6), _137(9)>
  MEM[(struct _Vector_base *)this_129(D) + 184B]._M_impl._M_start = iftmp.356_4806;
  MEM[(struct _Vector_base *)this_129(D) + 184B]._M_impl._M_finish = iftmp.356_4806;
  _4795 = iftmp.356_4806 + prephitmp_4322;
  MEM[(struct _Vector_base *)this_129(D) + 184B]._M_impl._M_end_of_storage = _4795;
  # DEBUG D#2250 => &D#4270->D.54088
  # DEBUG this => D#2250
  _4796 = MEM[(struct Network * * *)net_136(D) + 8B];
  # DEBUG D#264 => net_136(D)
  # DEBUG this => D#264
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _4797 = MEM[(struct Network * * *)net_136(D)];
  # DEBUG D#265 => net_136(D)
  # DEBUG this => D#265
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _4797
  # DEBUG __last => _4796
  # DEBUG __result => NULL
  # DEBUG D.171184 => D#2248
  # DEBUG __first => _4797
  # DEBUG __last => _4796
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _4797
  # DEBUG __last => _4796
  # DEBUG __result => NULL
  # DEBUG __first => _4797
  # DEBUG __last => _4796
  # DEBUG __result => NULL
  # DEBUG __it => _4796
  # DEBUG __it$_M_current => _4796
  # DEBUG __it => _4797
  # DEBUG __it$_M_current => _4797
  # DEBUG __first => _4797
  # DEBUG __last => _4796
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _4796
  # DEBUG __it => _4796
  # DEBUG this => NULL
  # DEBUG __it => _4797
  # DEBUG __it => _4797
  # DEBUG this => NULL
  # DEBUG __first => _4797
  # DEBUG __last => _4796
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _4797
  # DEBUG __last => _4796
  # DEBUG __result => NULL
  __last.66_4798 = (long int) _4796;
  __first.67_4799 = (long int) _4797;
  _4800 = __last.66_4798 - __first.67_4799;
  _Num_4801 = _4800 /[ex] 8;
  # DEBUG _Num => _Num_4801
  if (_Num_4801 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_4323 = (long unsigned int) _4800;
  goto <bb 14>;

  <bb 13>:
  _4802 = (long unsigned int) _4800;
  __builtin_memmove (iftmp.356_4806, _4797, _4802);

  <bb 14>:
  # prephitmp_4324 = PHI <pretmp_4323(12), _4802(13)>
  _4804 = iftmp.356_4806 + prephitmp_4324;
  MEM[(struct vector *)this_129(D) + 184B].D.54088._M_impl._M_finish = _4804;
  # DEBUG D#3012 => &this_129(D)->_router
  # DEBUG this => D#3012
  # DEBUG D#714 => &D#3012->D.54835
  # DEBUG this => D#714
  # DEBUG D#713 => &D#714->_M_impl
  # DEBUG this => D#713
  # DEBUG this => D#713
  # DEBUG this => D#713
  MEM[(struct _Vector_impl *)this_129(D) + 208B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 208B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 208B]._M_end_of_storage = 0B;
  # DEBUG D#3011 => &this_129(D)->_load
  # DEBUG this => D#3011
  # DEBUG D#267 => &D#3011->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 240B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 240B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 240B]._M_end_of_storage = 0B;
  # DEBUG D#3010 => &this_129(D)->_use_read_write
  # DEBUG this => D#3010
  # DEBUG D#259 => &D#3010->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 264B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 264B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 264B]._M_end_of_storage = 0B;
  # DEBUG D#3009 => &this_129(D)->_write_fraction
  # DEBUG this => D#3009
  # DEBUG D#267 => &D#3009->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 288B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 288B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 288B]._M_end_of_storage = 0B;
  # DEBUG D#3008 => &this_129(D)->_read_request_size
  # DEBUG this => D#3008
  # DEBUG D#259 => &D#3008->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 312B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 312B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 312B]._M_end_of_storage = 0B;
  # DEBUG D#3007 => &this_129(D)->_read_reply_size
  # DEBUG this => D#3007
  # DEBUG D#259 => &D#3007->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 336B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 336B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 336B]._M_end_of_storage = 0B;
  # DEBUG D#3006 => &this_129(D)->_write_request_size
  # DEBUG this => D#3006
  # DEBUG D#259 => &D#3006->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 360B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 360B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 360B]._M_end_of_storage = 0B;
  # DEBUG D#3005 => &this_129(D)->_write_reply_size
  # DEBUG this => D#3005
  # DEBUG D#259 => &D#3005->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 384B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 384B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 384B]._M_end_of_storage = 0B;
  # DEBUG D#3004 => &this_129(D)->_traffic
  # DEBUG this => D#3004
  # DEBUG D#739 => &D#3004->D.56332
  # DEBUG this => D#739
  # DEBUG D#738 => &D#739->_M_impl
  # DEBUG this => D#738
  # DEBUG this => D#738
  # DEBUG this => D#738
  MEM[(struct _Vector_impl *)this_129(D) + 408B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 408B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 408B]._M_end_of_storage = 0B;
  # DEBUG D#3003 => &this_129(D)->_class_priority
  # DEBUG this => D#3003
  # DEBUG D#259 => &D#3003->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 432B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 432B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 432B]._M_end_of_storage = 0B;
  # DEBUG D#3002 => &this_129(D)->_last_class
  # DEBUG this => D#3002
  # DEBUG D#668 => &D#3002->D.53336
  # DEBUG this => D#668
  # DEBUG D#667 => &D#668->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct _Vector_impl *)this_129(D) + 456B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 456B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 456B]._M_end_of_storage = 0B;
  # DEBUG D#3001 => &this_129(D)->_traffic_pattern
  # DEBUG this => D#3001
  # DEBUG D#747 => &D#3001->D.57081
  # DEBUG this => D#747
  # DEBUG D#746 => &D#747->_M_impl
  # DEBUG this => D#746
  # DEBUG this => D#746
  # DEBUG this => D#746
  MEM[(struct _Vector_impl *)this_129(D) + 480B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 480B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 480B]._M_end_of_storage = 0B;
  # DEBUG D#3000 => &this_129(D)->_injection_process
  # DEBUG this => D#3000
  # DEBUG D#767 => &D#3000->D.57828
  # DEBUG this => D#767
  # DEBUG D#766 => &D#767->_M_impl
  # DEBUG this => D#766
  # DEBUG this => D#766
  # DEBUG this => D#766
  MEM[(struct _Vector_impl *)this_129(D) + 504B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 504B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 504B]._M_end_of_storage = 0B;
  # DEBUG D#2999 => &this_129(D)->_buf_states
  # DEBUG this => D#2999
  # DEBUG D#787 => &D#2999->D.58587
  # DEBUG this => D#787
  # DEBUG D#786 => &D#787->_M_impl
  # DEBUG this => D#786
  # DEBUG this => D#786
  # DEBUG this => D#786
  MEM[(struct _Vector_impl *)this_129(D) + 536B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 536B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 536B]._M_end_of_storage = 0B;
  # DEBUG D#2998 => &this_129(D)->_last_vc
  # DEBUG this => D#2998
  # DEBUG D#806 => &D#2998->D.59334
  # DEBUG this => D#806
  # DEBUG D#805 => &D#806->_M_impl
  # DEBUG this => D#805
  # DEBUG this => D#805
  # DEBUG this => D#805
  MEM[(struct _Vector_impl *)this_129(D) + 560B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 560B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 560B]._M_end_of_storage = 0B;
  # DEBUG D#2997 => &this_129(D)->_qtime
  # DEBUG this => D#2997
  # DEBUG D#668 => &D#2997->D.53336
  # DEBUG this => D#668
  # DEBUG D#667 => &D#668->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct _Vector_impl *)this_129(D) + 600B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 600B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 600B]._M_end_of_storage = 0B;
  # DEBUG D#2996 => &this_129(D)->_qdrained
  # DEBUG this => D#2996
  # DEBUG D#831 => &D#2996->D.60085
  # DEBUG this => D#831
  # DEBUG D#830 => &D#831->_M_impl
  # DEBUG this => D#830
  # DEBUG this => D#830
  # DEBUG this => D#830
  MEM[(struct _Vector_impl *)this_129(D) + 624B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 624B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 624B]._M_end_of_storage = 0B;
  # DEBUG D#2995 => &this_129(D)->_partial_packets
  # DEBUG this => D#2995
  # DEBUG D#850 => &D#2995->D.60835
  # DEBUG this => D#850
  # DEBUG D#849 => &D#850->_M_impl
  # DEBUG this => D#849
  # DEBUG this => D#849
  # DEBUG this => D#849
  MEM[(struct _Vector_impl *)this_129(D) + 648B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 648B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 648B]._M_end_of_storage = 0B;
  # DEBUG D#2994 => &this_129(D)->_total_in_flight_flits
  # DEBUG this => D#2994
  # DEBUG D#269 => &D#2994->D.61585
  # DEBUG this => D#269
  # DEBUG D#268 => &D#269->_M_impl
  # DEBUG this => D#268
  # DEBUG this => D#268
  # DEBUG this => D#268
  MEM[(struct _Vector_impl *)this_129(D) + 672B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 672B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 672B]._M_end_of_storage = 0B;
  # DEBUG D#2993 => &this_129(D)->_measured_in_flight_flits
  # DEBUG this => D#2993
  # DEBUG D#269 => &D#2993->D.61585
  # DEBUG this => D#269
  # DEBUG D#268 => &D#269->_M_impl
  # DEBUG this => D#268
  # DEBUG this => D#268
  # DEBUG this => D#268
  MEM[(struct _Vector_impl *)this_129(D) + 696B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 696B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 696B]._M_end_of_storage = 0B;
  # DEBUG D#2992 => &this_129(D)->_retired_packets
  # DEBUG this => D#2992
  # DEBUG D#269 => &D#2992->D.61585
  # DEBUG this => D#269
  # DEBUG D#268 => &D#269->_M_impl
  # DEBUG this => D#268
  # DEBUG this => D#268
  # DEBUG this => D#268
  MEM[(struct _Vector_impl *)this_129(D) + 720B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 720B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 720B]._M_end_of_storage = 0B;
  this_129(D)->_empty_network = 0;
  # DEBUG D#2991 => &this_129(D)->_subnet
  # DEBUG this => D#2991
  # DEBUG D#259 => &D#2991->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 752B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 752B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 752B]._M_end_of_storage = 0B;
  this_129(D)->_deadlock_timer = 0;
  # DEBUG D#2990 => &this_129(D)->_packet_seq_no
  # DEBUG this => D#2990
  # DEBUG D#259 => &D#2990->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 784B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 784B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 784B]._M_end_of_storage = 0B;
  # DEBUG D#2989 => &this_129(D)->_repliesPending
  # DEBUG this => D#2989
  # DEBUG D#886 => &D#2989->D.62343
  # DEBUG this => D#886
  # DEBUG D#885 => &D#886->_M_impl
  # DEBUG this => D#885
  # DEBUG this => D#885
  # DEBUG this => D#885
  MEM[(struct _Vector_impl *)this_129(D) + 808B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 808B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 808B]._M_end_of_storage = 0B;
  # DEBUG D#2988 => &this_129(D)->_requestsOutstanding
  # DEBUG this => D#2988
  # DEBUG D#259 => &D#2988->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 832B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 832B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 832B]._M_end_of_storage = 0B;
  # DEBUG D#2987 => &this_129(D)->_plat_stats
  # DEBUG this => D#2987
  # DEBUG D#905 => &D#2987->D.63091
  # DEBUG this => D#905
  # DEBUG D#904 => &D#905->_M_impl
  # DEBUG this => D#904
  # DEBUG this => D#904
  # DEBUG this => D#904
  MEM[(struct _Vector_impl *)this_129(D) + 856B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 856B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 856B]._M_end_of_storage = 0B;
  # DEBUG D#2986 => &this_129(D)->_overall_min_plat
  # DEBUG this => D#2986
  # DEBUG D#267 => &D#2986->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 880B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 880B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 880B]._M_end_of_storage = 0B;
  # DEBUG D#2985 => &this_129(D)->_overall_avg_plat
  # DEBUG this => D#2985
  # DEBUG D#267 => &D#2985->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 904B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 904B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 904B]._M_end_of_storage = 0B;
  # DEBUG D#2984 => &this_129(D)->_overall_max_plat
  # DEBUG this => D#2984
  # DEBUG D#267 => &D#2984->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 928B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 928B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 928B]._M_end_of_storage = 0B;
  # DEBUG D#2983 => &this_129(D)->_nlat_stats
  # DEBUG this => D#2983
  # DEBUG D#905 => &D#2983->D.63091
  # DEBUG this => D#905
  # DEBUG D#904 => &D#905->_M_impl
  # DEBUG this => D#904
  # DEBUG this => D#904
  # DEBUG this => D#904
  MEM[(struct _Vector_impl *)this_129(D) + 952B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 952B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 952B]._M_end_of_storage = 0B;
  # DEBUG D#2982 => &this_129(D)->_overall_min_nlat
  # DEBUG this => D#2982
  # DEBUG D#267 => &D#2982->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 976B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 976B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 976B]._M_end_of_storage = 0B;
  # DEBUG D#2981 => &this_129(D)->_overall_avg_nlat
  # DEBUG this => D#2981
  # DEBUG D#267 => &D#2981->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1000B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1000B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1000B]._M_end_of_storage = 0B;
  # DEBUG D#2980 => &this_129(D)->_overall_max_nlat
  # DEBUG this => D#2980
  # DEBUG D#267 => &D#2980->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1024B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1024B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1024B]._M_end_of_storage = 0B;
  # DEBUG D#2979 => &this_129(D)->_flat_stats
  # DEBUG this => D#2979
  # DEBUG D#905 => &D#2979->D.63091
  # DEBUG this => D#905
  # DEBUG D#904 => &D#905->_M_impl
  # DEBUG this => D#904
  # DEBUG this => D#904
  # DEBUG this => D#904
  MEM[(struct _Vector_impl *)this_129(D) + 1048B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1048B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1048B]._M_end_of_storage = 0B;
  # DEBUG D#2978 => &this_129(D)->_overall_min_flat
  # DEBUG this => D#2978
  # DEBUG D#267 => &D#2978->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1072B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1072B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1072B]._M_end_of_storage = 0B;
  # DEBUG D#2977 => &this_129(D)->_overall_avg_flat
  # DEBUG this => D#2977
  # DEBUG D#267 => &D#2977->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1096B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1096B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1096B]._M_end_of_storage = 0B;
  # DEBUG D#2976 => &this_129(D)->_overall_max_flat
  # DEBUG this => D#2976
  # DEBUG D#267 => &D#2976->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1120B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1120B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1120B]._M_end_of_storage = 0B;
  # DEBUG D#2975 => &this_129(D)->_frag_stats
  # DEBUG this => D#2975
  # DEBUG D#905 => &D#2975->D.63091
  # DEBUG this => D#905
  # DEBUG D#904 => &D#905->_M_impl
  # DEBUG this => D#904
  # DEBUG this => D#904
  # DEBUG this => D#904
  MEM[(struct _Vector_impl *)this_129(D) + 1144B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1144B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1144B]._M_end_of_storage = 0B;
  # DEBUG D#2974 => &this_129(D)->_overall_min_frag
  # DEBUG this => D#2974
  # DEBUG D#267 => &D#2974->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1168B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1168B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1168B]._M_end_of_storage = 0B;
  # DEBUG D#2973 => &this_129(D)->_overall_avg_frag
  # DEBUG this => D#2973
  # DEBUG D#267 => &D#2973->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1192B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1192B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1192B]._M_end_of_storage = 0B;
  # DEBUG D#2972 => &this_129(D)->_overall_max_frag
  # DEBUG this => D#2972
  # DEBUG D#267 => &D#2972->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1216B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1216B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1216B]._M_end_of_storage = 0B;
  # DEBUG D#2971 => &this_129(D)->_pair_plat
  # DEBUG this => D#2971
  # DEBUG D#925 => &D#2971->D.63853
  # DEBUG this => D#925
  # DEBUG D#924 => &D#925->_M_impl
  # DEBUG this => D#924
  # DEBUG this => D#924
  # DEBUG this => D#924
  MEM[(struct _Vector_impl *)this_129(D) + 1240B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1240B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1240B]._M_end_of_storage = 0B;
  # DEBUG D#2970 => &this_129(D)->_pair_nlat
  # DEBUG this => D#2970
  # DEBUG D#925 => &D#2970->D.63853
  # DEBUG this => D#925
  # DEBUG D#924 => &D#925->_M_impl
  # DEBUG this => D#924
  # DEBUG this => D#924
  # DEBUG this => D#924
  MEM[(struct _Vector_impl *)this_129(D) + 1264B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1264B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1264B]._M_end_of_storage = 0B;
  # DEBUG D#2969 => &this_129(D)->_pair_flat
  # DEBUG this => D#2969
  # DEBUG D#925 => &D#2969->D.63853
  # DEBUG this => D#925
  # DEBUG D#924 => &D#925->_M_impl
  # DEBUG this => D#924
  # DEBUG this => D#924
  # DEBUG this => D#924
  MEM[(struct _Vector_impl *)this_129(D) + 1288B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1288B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1288B]._M_end_of_storage = 0B;
  # DEBUG D#2968 => &this_129(D)->_hop_stats
  # DEBUG this => D#2968
  # DEBUG D#905 => &D#2968->D.63091
  # DEBUG this => D#905
  # DEBUG D#904 => &D#905->_M_impl
  # DEBUG this => D#904
  # DEBUG this => D#904
  # DEBUG this => D#904
  MEM[(struct _Vector_impl *)this_129(D) + 1312B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1312B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1312B]._M_end_of_storage = 0B;
  # DEBUG D#2967 => &this_129(D)->_overall_hop_stats
  # DEBUG this => D#2967
  # DEBUG D#267 => &D#2967->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1336B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1336B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1336B]._M_end_of_storage = 0B;
  # DEBUG D#2966 => &this_129(D)->_sent_packets
  # DEBUG this => D#2966
  # DEBUG D#668 => &D#2966->D.53336
  # DEBUG this => D#668
  # DEBUG D#667 => &D#668->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct _Vector_impl *)this_129(D) + 1360B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1360B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1360B]._M_end_of_storage = 0B;
  # DEBUG D#2965 => &this_129(D)->_overall_min_sent_packets
  # DEBUG this => D#2965
  # DEBUG D#267 => &D#2965->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1384B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1384B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1384B]._M_end_of_storage = 0B;
  # DEBUG D#2964 => &this_129(D)->_overall_avg_sent_packets
  # DEBUG this => D#2964
  # DEBUG D#267 => &D#2964->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1408B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1408B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1408B]._M_end_of_storage = 0B;
  # DEBUG D#2963 => &this_129(D)->_overall_max_sent_packets
  # DEBUG this => D#2963
  # DEBUG D#267 => &D#2963->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1432B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1432B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1432B]._M_end_of_storage = 0B;
  # DEBUG D#2962 => &this_129(D)->_accepted_packets
  # DEBUG this => D#2962
  # DEBUG D#668 => &D#2962->D.53336
  # DEBUG this => D#668
  # DEBUG D#667 => &D#668->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct _Vector_impl *)this_129(D) + 1456B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1456B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1456B]._M_end_of_storage = 0B;
  # DEBUG D#2961 => &this_129(D)->_overall_min_accepted_packets
  # DEBUG this => D#2961
  # DEBUG D#267 => &D#2961->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1480B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1480B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1480B]._M_end_of_storage = 0B;
  # DEBUG D#2960 => &this_129(D)->_overall_avg_accepted_packets
  # DEBUG this => D#2960
  # DEBUG D#267 => &D#2960->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1504B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1504B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1504B]._M_end_of_storage = 0B;
  # DEBUG D#2959 => &this_129(D)->_overall_max_accepted_packets
  # DEBUG this => D#2959
  # DEBUG D#267 => &D#2959->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1528B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1528B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1528B]._M_end_of_storage = 0B;
  # DEBUG D#2958 => &this_129(D)->_sent_flits
  # DEBUG this => D#2958
  # DEBUG D#668 => &D#2958->D.53336
  # DEBUG this => D#668
  # DEBUG D#667 => &D#668->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct _Vector_impl *)this_129(D) + 1552B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1552B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1552B]._M_end_of_storage = 0B;
  # DEBUG D#2957 => &this_129(D)->_overall_min_sent
  # DEBUG this => D#2957
  # DEBUG D#267 => &D#2957->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1576B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1576B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1576B]._M_end_of_storage = 0B;
  # DEBUG D#2956 => &this_129(D)->_overall_avg_sent
  # DEBUG this => D#2956
  # DEBUG D#267 => &D#2956->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1600B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1600B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1600B]._M_end_of_storage = 0B;
  # DEBUG D#2955 => &this_129(D)->_overall_max_sent
  # DEBUG this => D#2955
  # DEBUG D#267 => &D#2955->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1624B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1624B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1624B]._M_end_of_storage = 0B;
  # DEBUG D#2954 => &this_129(D)->_accepted_flits
  # DEBUG this => D#2954
  # DEBUG D#668 => &D#2954->D.53336
  # DEBUG this => D#668
  # DEBUG D#667 => &D#668->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct _Vector_impl *)this_129(D) + 1648B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1648B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1648B]._M_end_of_storage = 0B;
  # DEBUG D#2953 => &this_129(D)->_overall_min_accepted
  # DEBUG this => D#2953
  # DEBUG D#267 => &D#2953->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1672B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1672B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1672B]._M_end_of_storage = 0B;
  # DEBUG D#2952 => &this_129(D)->_overall_avg_accepted
  # DEBUG this => D#2952
  # DEBUG D#267 => &D#2952->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1696B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1696B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1696B]._M_end_of_storage = 0B;
  # DEBUG D#2951 => &this_129(D)->_overall_max_accepted
  # DEBUG this => D#2951
  # DEBUG D#267 => &D#2951->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1720B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1720B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1720B]._M_end_of_storage = 0B;
  # DEBUG D#2950 => &this_129(D)->_slowest_packet
  # DEBUG this => D#2950
  # DEBUG D#259 => &D#2950->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 1744B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1744B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1744B]._M_end_of_storage = 0B;
  # DEBUG D#2949 => &this_129(D)->_slowest_flit
  # DEBUG this => D#2949
  # DEBUG D#259 => &D#2949->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 1768B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1768B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1768B]._M_end_of_storage = 0B;
  # DEBUG D#2948 => &this_129(D)->_stats
  # DEBUG this => D#2948
  # DEBUG D#950 => &D#2948->_M_t
  # DEBUG this => D#950
  # DEBUG D#949 => &MEM[(struct _Rb_tree *)D#950]._M_impl
  # DEBUG this => D#949
  # DEBUG this => D#949
  # DEBUG this => D#949
  MEM[(struct _Rb_tree_impl *)this_129(D) + 1792B]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 1792B]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 1792B]._M_node_count = 0;
  # DEBUG this => D#949
  _155 = &MEM[(struct _Rb_tree_impl *)this_129(D) + 1792B]._M_header;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 1792B]._M_header._M_left = _155;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 1792B]._M_header._M_right = _155;
  this_129(D)->_reset_time = 0;
  this_129(D)->_drain_time = -1;
  # DEBUG D#2947 => &this_129(D)->_measure_stats
  # DEBUG this => D#2947
  # DEBUG D#259 => &D#2947->D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)this_129(D) + 1880B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1880B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1880B]._M_end_of_storage = 0B;
  # DEBUG D#2946 => &this_129(D)->_latency_thres
  # DEBUG this => D#2946
  # DEBUG D#267 => &D#2946->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1912B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1912B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1912B]._M_end_of_storage = 0B;
  # DEBUG D#2945 => &this_129(D)->_stopping_threshold
  # DEBUG this => D#2945
  # DEBUG D#267 => &D#2945->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1936B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1936B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1936B]._M_end_of_storage = 0B;
  # DEBUG D#2944 => &this_129(D)->_acc_stopping_threshold
  # DEBUG this => D#2944
  # DEBUG D#267 => &D#2944->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1960B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1960B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1960B]._M_end_of_storage = 0B;
  # DEBUG D#2943 => &this_129(D)->_warmup_threshold
  # DEBUG this => D#2943
  # DEBUG D#267 => &D#2943->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 1984B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1984B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 1984B]._M_end_of_storage = 0B;
  # DEBUG D#2942 => &this_129(D)->_acc_warmup_threshold
  # DEBUG this => D#2942
  # DEBUG D#267 => &D#2942->D.55581
  # DEBUG this => D#267
  # DEBUG D#266 => &D#267->_M_impl
  # DEBUG this => D#266
  # DEBUG this => D#266
  # DEBUG this => D#266
  MEM[(struct _Vector_impl *)this_129(D) + 2008B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 2008B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_129(D) + 2008B]._M_end_of_storage = 0B;
  this_129(D)->_cur_id = 0;
  this_129(D)->_cur_pid = 0;
  this_129(D)->_time = 0;
  # DEBUG D#2941 => &this_129(D)->_flits_to_watch
  # DEBUG this => D#2941
  # DEBUG D#953 => &D#2941->_M_t
  # DEBUG this => D#953
  # DEBUG D#952 => &MEM[(struct _Rb_tree *)D#953]._M_impl
  # DEBUG this => D#952
  # DEBUG this => D#952
  # DEBUG this => D#952
  MEM[(struct _Rb_tree_impl *)this_129(D) + 2048B]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 2048B]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 2048B]._M_node_count = 0;
  # DEBUG this => D#952
  _164 = &MEM[(struct _Rb_tree_impl *)this_129(D) + 2048B]._M_header;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 2048B]._M_header._M_left = _164;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 2048B]._M_header._M_right = _164;
  # DEBUG D#2940 => &this_129(D)->_packets_to_watch
  # DEBUG this => D#2940
  # DEBUG D#953 => &D#2940->_M_t
  # DEBUG this => D#953
  # DEBUG D#952 => &MEM[(struct _Rb_tree *)D#953]._M_impl
  # DEBUG this => D#952
  # DEBUG this => D#952
  # DEBUG this => D#952
  MEM[(struct _Rb_tree_impl *)this_129(D) + 2096B]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 2096B]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 2096B]._M_node_count = 0;
  # DEBUG this => D#952
  _1544 = &MEM[(struct _Rb_tree_impl *)this_129(D) + 2096B]._M_header;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 2096B]._M_header._M_left = _1544;
  MEM[(struct _Rb_tree_impl *)this_129(D) + 2096B]._M_header._M_right = _1544;
  # DEBUG D#2784 => &this_129(D)->_net
  # DEBUG D#64 => D#2784
  # DEBUG __n => 0
  # DEBUG this => D#64
  _166 = MEM[(struct Network * &)iftmp.356_4806];
  _1950 = MEM[(int *)_166 + 100B];
  # DEBUG D#53 => _166
  # DEBUG this => D#53
  this_129(D)->_nodes = _1950;
  # DEBUG D#2785 => &this_129(D)->_net
  # DEBUG D#64 => D#2785
  # DEBUG __n => 0
  # DEBUG this => D#64
  _1951 = MEM[(int *)_166 + 96B];
  # DEBUG D#54 => _166
  # DEBUG this => D#54
  this_129(D)->_routers = _1951;
  # DEBUG D#195 => &D.73597
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73597
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73596, "num_vcs");

  <bb 15>:
  _175 = Configuration::GetInt (config_173(D), &D.73596);

  <bb 16>:
  this_129(D)->_vcs = _175;
  # DEBUG this => &D.73596
  # DEBUG this => &D.73596
  # DEBUG this => &D.73596
  _178 = MEM[(char * *)&D.73596];
  # DEBUG D#1 => &D.73596
  # DEBUG this => D#1
  # DEBUG this => &D.73596
  if (&D.73596.D.11539._M_local_buf != _178)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG D#629 => D.73596.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73596
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73596
  # DEBUG this => D#1
  # DEBUG this => &D.73596
  # DEBUG D#626 => &D.73596._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _178
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _178
  # DEBUG this => D#620
  # DEBUG D.148185 => D#621
  operator delete (_178);

  <bb 18>:
  # DEBUG D#630 => &D.73596._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73596 ={v} {CLOBBER};
  # DEBUG this => &D.73597
  # DEBUG this => &D.73597
  # DEBUG D#195 => &D.73599
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73599
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73598, "subnets");
  goto <bb 20>;

<L541>:
  pretmp_6203 = &this_129(D)->_packet_size;
  pretmp_6467 = &this_129(D)->_packet_size_rate;
  pretmp_6483 = &this_129(D)->_traffic;
  pretmp_7326 = &this_129(D)->_last_class;
  pretmp_7342 = &this_129(D)->_qtime;
  pretmp_7358 = &this_129(D)->_total_in_flight_flits;
  pretmp_7374 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7390 = &this_129(D)->_retired_packets;
  pretmp_7825 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8198 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8318 = &this_129(D)->_pair_plat;
  pretmp_8334 = &this_129(D)->_pair_nlat;
  pretmp_8350 = &this_129(D)->_pair_flat;
  pretmp_8366 = &this_129(D)->_sent_packets;
  pretmp_8382 = &this_129(D)->_accepted_packets;
  pretmp_8398 = &this_129(D)->_sent_flits;
  pretmp_8414 = &this_129(D)->_accepted_flits;
  pretmp_8430 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

  <bb 20>:
  _181 = Configuration::GetInt (config_173(D), &D.73598);

  <bb 21>:
  this_129(D)->_subnets = _181;
  # DEBUG this => &D.73598
  # DEBUG this => &D.73598
  # DEBUG this => &D.73598
  _184 = MEM[(char * *)&D.73598];
  # DEBUG D#1 => &D.73598
  # DEBUG this => D#1
  # DEBUG this => &D.73598
  if (&D.73598.D.11539._M_local_buf != _184)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG D#629 => D.73598.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73598
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73598
  # DEBUG this => D#1
  # DEBUG this => &D.73598
  # DEBUG D#626 => &D.73598._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _184
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _184
  # DEBUG this => D#620
  # DEBUG D.148202 => D#621
  operator delete (_184);

  <bb 23>:
  # DEBUG D#630 => &D.73598._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73598 ={v} {CLOBBER};
  # DEBUG this => &D.73599
  # DEBUG this => &D.73599
  _185 = &this_129(D)->_subnet;
  std::vector<int>::resize.constprop (_185, 5);
  goto <bb 25>;

<L542>:
  pretmp_6210 = &this_129(D)->_packet_size;
  pretmp_6457 = &this_129(D)->_packet_size_rate;
  pretmp_6473 = &this_129(D)->_traffic;
  pretmp_7316 = &this_129(D)->_last_class;
  pretmp_7332 = &this_129(D)->_qtime;
  pretmp_7348 = &this_129(D)->_total_in_flight_flits;
  pretmp_7364 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7380 = &this_129(D)->_retired_packets;
  pretmp_7815 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8188 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8308 = &this_129(D)->_pair_plat;
  pretmp_8324 = &this_129(D)->_pair_nlat;
  pretmp_8340 = &this_129(D)->_pair_flat;
  pretmp_8356 = &this_129(D)->_sent_packets;
  pretmp_8372 = &this_129(D)->_accepted_packets;
  pretmp_8388 = &this_129(D)->_sent_flits;
  pretmp_8404 = &this_129(D)->_accepted_flits;
  pretmp_8420 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

  <bb 25>:
  # DEBUG D#2786 => &this_129(D)->_subnet
  _1953 = MEM[(int * *)this_129(D) + 752B];
  # DEBUG D#63 => D#2786
  # DEBUG __n => 0
  # DEBUG this => D#63
  # DEBUG D#195 => &D.73601
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73601
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73600, "read_request_subnet");
  goto <bb 27>;

<L543>:
  pretmp_6204 = &this_129(D)->_packet_size;
  pretmp_6469 = &this_129(D)->_packet_size_rate;
  pretmp_6485 = &this_129(D)->_traffic;
  pretmp_7328 = &this_129(D)->_last_class;
  pretmp_7344 = &this_129(D)->_qtime;
  pretmp_7360 = &this_129(D)->_total_in_flight_flits;
  pretmp_7376 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7392 = &this_129(D)->_retired_packets;
  pretmp_7827 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8200 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8320 = &this_129(D)->_pair_plat;
  pretmp_8336 = &this_129(D)->_pair_nlat;
  pretmp_8352 = &this_129(D)->_pair_flat;
  pretmp_8368 = &this_129(D)->_sent_packets;
  pretmp_8384 = &this_129(D)->_accepted_packets;
  pretmp_8400 = &this_129(D)->_sent_flits;
  pretmp_8416 = &this_129(D)->_accepted_flits;
  pretmp_8432 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

  <bb 27>:
  _191 = Configuration::GetInt (config_173(D), &D.73600);

  <bb 28>:
  *_1953 = _191;
  # DEBUG this => &D.73600
  # DEBUG this => &D.73600
  # DEBUG this => &D.73600
  _195 = MEM[(char * *)&D.73600];
  # DEBUG D#1 => &D.73600
  # DEBUG this => D#1
  # DEBUG this => &D.73600
  if (&D.73600.D.11539._M_local_buf != _195)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG D#629 => D.73600.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73600
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73600
  # DEBUG this => D#1
  # DEBUG this => &D.73600
  # DEBUG D#626 => &D.73600._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _195
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _195
  # DEBUG this => D#620
  # DEBUG D.148229 => D#621
  operator delete (_195);

  <bb 30>:
  # DEBUG D#630 => &D.73600._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73600 ={v} {CLOBBER};
  # DEBUG this => &D.73601
  # DEBUG this => &D.73601
  # DEBUG D#2787 => &this_129(D)->_subnet
  _1954 = MEM[(int * *)this_129(D) + 752B];
  # DEBUG D#63 => D#2787
  # DEBUG __n => 1
  # DEBUG this => D#63
  # DEBUG D#195 => &D.73603
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73603
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73602, "read_reply_subnet");
  goto <bb 32>;

<L544>:
  pretmp_5747 = &this_129(D)->_packet_size;
  pretmp_6471 = &this_129(D)->_packet_size_rate;
  pretmp_6487 = &this_129(D)->_traffic;
  pretmp_7330 = &this_129(D)->_last_class;
  pretmp_7346 = &this_129(D)->_qtime;
  pretmp_7362 = &this_129(D)->_total_in_flight_flits;
  pretmp_7378 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7394 = &this_129(D)->_retired_packets;
  pretmp_7829 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8202 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8322 = &this_129(D)->_pair_plat;
  pretmp_8338 = &this_129(D)->_pair_nlat;
  pretmp_8354 = &this_129(D)->_pair_flat;
  pretmp_8370 = &this_129(D)->_sent_packets;
  pretmp_8386 = &this_129(D)->_accepted_packets;
  pretmp_8402 = &this_129(D)->_sent_flits;
  pretmp_8418 = &this_129(D)->_accepted_flits;
  pretmp_8434 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

  <bb 32>:
  _199 = Configuration::GetInt (config_173(D), &D.73602);

  <bb 33>:
  MEM[(int &)_1954 + 4] = _199;
  # DEBUG this => &D.73602
  # DEBUG this => &D.73602
  # DEBUG this => &D.73602
  _202 = MEM[(char * *)&D.73602];
  # DEBUG D#1 => &D.73602
  # DEBUG this => D#1
  # DEBUG this => &D.73602
  if (&D.73602.D.11539._M_local_buf != _202)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # DEBUG D#629 => D.73602.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73602
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73602
  # DEBUG this => D#1
  # DEBUG this => &D.73602
  # DEBUG D#626 => &D.73602._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _202
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _202
  # DEBUG this => D#620
  # DEBUG D.148251 => D#621
  operator delete (_202);

  <bb 35>:
  # DEBUG D#630 => &D.73602._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73602 ={v} {CLOBBER};
  # DEBUG this => &D.73603
  # DEBUG this => &D.73603
  # DEBUG D#2788 => &this_129(D)->_subnet
  _1955 = MEM[(int * *)this_129(D) + 752B];
  # DEBUG D#63 => D#2788
  # DEBUG __n => 2
  # DEBUG this => D#63
  # DEBUG D#195 => &D.73605
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73605
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73604, "write_request_subnet");
  goto <bb 37>;

<L545>:
  pretmp_6208 = &this_129(D)->_packet_size;
  pretmp_6459 = &this_129(D)->_packet_size_rate;
  pretmp_6475 = &this_129(D)->_traffic;
  pretmp_7318 = &this_129(D)->_last_class;
  pretmp_7334 = &this_129(D)->_qtime;
  pretmp_7350 = &this_129(D)->_total_in_flight_flits;
  pretmp_7366 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7382 = &this_129(D)->_retired_packets;
  pretmp_7817 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8190 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8310 = &this_129(D)->_pair_plat;
  pretmp_8326 = &this_129(D)->_pair_nlat;
  pretmp_8342 = &this_129(D)->_pair_flat;
  pretmp_8358 = &this_129(D)->_sent_packets;
  pretmp_8374 = &this_129(D)->_accepted_packets;
  pretmp_8390 = &this_129(D)->_sent_flits;
  pretmp_8406 = &this_129(D)->_accepted_flits;
  pretmp_8422 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

  <bb 37>:
  _205 = Configuration::GetInt (config_173(D), &D.73604);

  <bb 38>:
  MEM[(int &)_1955 + 8] = _205;
  # DEBUG this => &D.73604
  # DEBUG this => &D.73604
  # DEBUG this => &D.73604
  _208 = MEM[(char * *)&D.73604];
  # DEBUG D#1 => &D.73604
  # DEBUG this => D#1
  # DEBUG this => &D.73604
  if (&D.73604.D.11539._M_local_buf != _208)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#629 => D.73604.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73604
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73604
  # DEBUG this => D#1
  # DEBUG this => &D.73604
  # DEBUG D#626 => &D.73604._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _208
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _208
  # DEBUG this => D#620
  # DEBUG D.148273 => D#621
  operator delete (_208);

  <bb 40>:
  # DEBUG D#630 => &D.73604._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73604 ={v} {CLOBBER};
  # DEBUG this => &D.73605
  # DEBUG this => &D.73605
  # DEBUG D#2789 => &this_129(D)->_subnet
  _1956 = MEM[(int * *)this_129(D) + 752B];
  # DEBUG D#63 => D#2789
  # DEBUG __n => 3
  # DEBUG this => D#63
  # DEBUG D#195 => &D.73607
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73607
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73606, "write_reply_subnet");
  goto <bb 42>;

<L546>:
  pretmp_5858 = &this_129(D)->_packet_size;
  pretmp_6461 = &this_129(D)->_packet_size_rate;
  pretmp_6477 = &this_129(D)->_traffic;
  pretmp_7320 = &this_129(D)->_last_class;
  pretmp_7336 = &this_129(D)->_qtime;
  pretmp_7352 = &this_129(D)->_total_in_flight_flits;
  pretmp_7368 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7384 = &this_129(D)->_retired_packets;
  pretmp_7819 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8192 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8312 = &this_129(D)->_pair_plat;
  pretmp_8328 = &this_129(D)->_pair_nlat;
  pretmp_8344 = &this_129(D)->_pair_flat;
  pretmp_8360 = &this_129(D)->_sent_packets;
  pretmp_8376 = &this_129(D)->_accepted_packets;
  pretmp_8392 = &this_129(D)->_sent_flits;
  pretmp_8408 = &this_129(D)->_accepted_flits;
  pretmp_8424 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

  <bb 42>:
  _213 = Configuration::GetInt (config_173(D), &D.73606);

  <bb 43>:
  MEM[(int &)_1956 + 12] = _213;
  # DEBUG this => &D.73606
  # DEBUG this => &D.73606
  # DEBUG this => &D.73606
  _217 = MEM[(char * *)&D.73606];
  # DEBUG D#1 => &D.73606
  # DEBUG this => D#1
  # DEBUG this => &D.73606
  if (&D.73606.D.11539._M_local_buf != _217)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # DEBUG D#629 => D.73606.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73606
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73606
  # DEBUG this => D#1
  # DEBUG this => &D.73606
  # DEBUG D#626 => &D.73606._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _217
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _217
  # DEBUG this => D#620
  # DEBUG D.148291 => D#621
  operator delete (_217);

  <bb 45>:
  # DEBUG D#630 => &D.73606._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73606 ={v} {CLOBBER};
  # DEBUG this => &D.73607
  # DEBUG this => &D.73607
  # DEBUG D#195 => &D.73610
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73610
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73609, "priority");
  goto <bb 47>;

<L547>:
  pretmp_5860 = &this_129(D)->_packet_size;
  pretmp_6463 = &this_129(D)->_packet_size_rate;
  pretmp_6479 = &this_129(D)->_traffic;
  pretmp_7322 = &this_129(D)->_last_class;
  pretmp_7338 = &this_129(D)->_qtime;
  pretmp_7354 = &this_129(D)->_total_in_flight_flits;
  pretmp_7370 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7386 = &this_129(D)->_retired_packets;
  pretmp_7821 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8194 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8314 = &this_129(D)->_pair_plat;
  pretmp_8330 = &this_129(D)->_pair_nlat;
  pretmp_8346 = &this_129(D)->_pair_flat;
  pretmp_8362 = &this_129(D)->_sent_packets;
  pretmp_8378 = &this_129(D)->_accepted_packets;
  pretmp_8394 = &this_129(D)->_sent_flits;
  pretmp_8410 = &this_129(D)->_accepted_flits;
  pretmp_8426 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

  <bb 47>:
  priority = Configuration::GetStr (config_173(D), &D.73609); [return slot optimization]

  <bb 48>:
  # DEBUG this => &D.73609
  # DEBUG this => &D.73609
  # DEBUG this => &D.73609
  _222 = MEM[(char * *)&D.73609];
  # DEBUG D#1 => &D.73609
  # DEBUG this => D#1
  # DEBUG this => &D.73609
  if (&D.73609.D.11539._M_local_buf != _222)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # DEBUG D#629 => D.73609.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73609
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73609
  # DEBUG this => D#1
  # DEBUG this => &D.73609
  # DEBUG D#626 => &D.73609._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _222
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _222
  # DEBUG this => D#620
  # DEBUG D.148311 => D#621
  operator delete (_222);

  <bb 50>:
  # DEBUG D#630 => &D.73609._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73609 ={v} {CLOBBER};
  # DEBUG this => &D.73610
  # DEBUG this => &D.73610
  # DEBUG __lhs => &priority
  # DEBUG __rhs => "class"
  _215 = std::__cxx11::basic_string<char>::compare (&priority, "class");

  <bb 51>:
  if (_215 == 0)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  this_129(D)->_pri_type = 0;
  goto <bb 87>;

  <bb 53>:
  # DEBUG __lhs => &priority
  # DEBUG __rhs => "age"
  _220 = std::__cxx11::basic_string<char>::compare (&priority, "age");
  goto <bb 55>;

<L549>:
  pretmp_5381 = &this_129(D)->_packet_size;
  pretmp_5856 = &this_129(D)->_packet_size_rate;
  pretmp_752 = &this_129(D)->_traffic;
  pretmp_6490 = &this_129(D)->_last_class;
  pretmp_6503 = &this_129(D)->_qtime;
  pretmp_6516 = &this_129(D)->_total_in_flight_flits;
  pretmp_6529 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6542 = &this_129(D)->_retired_packets;
  pretmp_7696 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7832 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8205 = &this_129(D)->_pair_plat;
  pretmp_8218 = &this_129(D)->_pair_nlat;
  pretmp_8231 = &this_129(D)->_pair_flat;
  pretmp_8244 = &this_129(D)->_sent_packets;
  pretmp_8257 = &this_129(D)->_accepted_packets;
  pretmp_8270 = &this_129(D)->_sent_flits;
  pretmp_8283 = &this_129(D)->_accepted_flits;
  pretmp_8296 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

  <bb 55>:
  if (_220 == 0)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  this_129(D)->_pri_type = 1;
  goto <bb 87>;

  <bb 57>:
  # DEBUG __lhs => &priority
  # DEBUG __rhs => "network_age"
  _224 = std::__cxx11::basic_string<char>::compare (&priority, "network_age");
  goto <bb 59>;

<L550>:
  pretmp_5224 = &this_129(D)->_packet_size;
  pretmp_6201 = &this_129(D)->_packet_size_rate;
  pretmp_6196 = &this_129(D)->_traffic;
  pretmp_6491 = &this_129(D)->_last_class;
  pretmp_6504 = &this_129(D)->_qtime;
  pretmp_6517 = &this_129(D)->_total_in_flight_flits;
  pretmp_6530 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6543 = &this_129(D)->_retired_packets;
  pretmp_7697 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7833 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8206 = &this_129(D)->_pair_plat;
  pretmp_8219 = &this_129(D)->_pair_nlat;
  pretmp_8232 = &this_129(D)->_pair_flat;
  pretmp_8245 = &this_129(D)->_sent_packets;
  pretmp_8258 = &this_129(D)->_accepted_packets;
  pretmp_8271 = &this_129(D)->_sent_flits;
  pretmp_8284 = &this_129(D)->_accepted_flits;
  pretmp_8297 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

  <bb 59>:
  if (_224 == 0)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  this_129(D)->_pri_type = 2;
  goto <bb 87>;

  <bb 61>:
  # DEBUG __lhs => &priority
  # DEBUG __rhs => "local_age"
  _226 = std::__cxx11::basic_string<char>::compare (&priority, "local_age");
  goto <bb 63>;

<L551>:
  pretmp_5330 = &this_129(D)->_packet_size;
  pretmp_5855 = &this_129(D)->_packet_size_rate;
  pretmp_6197 = &this_129(D)->_traffic;
  pretmp_6492 = &this_129(D)->_last_class;
  pretmp_6505 = &this_129(D)->_qtime;
  pretmp_6518 = &this_129(D)->_total_in_flight_flits;
  pretmp_6531 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6544 = &this_129(D)->_retired_packets;
  pretmp_7698 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7834 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8207 = &this_129(D)->_pair_plat;
  pretmp_8220 = &this_129(D)->_pair_nlat;
  pretmp_8233 = &this_129(D)->_pair_flat;
  pretmp_8246 = &this_129(D)->_sent_packets;
  pretmp_8259 = &this_129(D)->_accepted_packets;
  pretmp_8272 = &this_129(D)->_sent_flits;
  pretmp_8285 = &this_129(D)->_accepted_flits;
  pretmp_8298 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

  <bb 63>:
  if (_226 == 0)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  this_129(D)->_pri_type = 3;
  goto <bb 87>;

  <bb 65>:
  # DEBUG __lhs => &priority
  # DEBUG __rhs => "queue_length"
  _228 = std::__cxx11::basic_string<char>::compare (&priority, "queue_length");
  goto <bb 67>;

<L552>:
  pretmp_5221 = &this_129(D)->_packet_size;
  pretmp_5845 = &this_129(D)->_packet_size_rate;
  pretmp_6194 = &this_129(D)->_traffic;
  pretmp_6493 = &this_129(D)->_last_class;
  pretmp_6506 = &this_129(D)->_qtime;
  pretmp_6519 = &this_129(D)->_total_in_flight_flits;
  pretmp_6532 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6545 = &this_129(D)->_retired_packets;
  pretmp_7699 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7835 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8208 = &this_129(D)->_pair_plat;
  pretmp_8221 = &this_129(D)->_pair_nlat;
  pretmp_8234 = &this_129(D)->_pair_flat;
  pretmp_8247 = &this_129(D)->_sent_packets;
  pretmp_8260 = &this_129(D)->_accepted_packets;
  pretmp_8273 = &this_129(D)->_sent_flits;
  pretmp_8286 = &this_129(D)->_accepted_flits;
  pretmp_8299 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

  <bb 67>:
  if (_228 == 0)
    goto <bb 68>;
  else
    goto <bb 69>;

  <bb 68>:
  this_129(D)->_pri_type = 4;
  goto <bb 87>;

  <bb 69>:
  # DEBUG __lhs => &priority
  # DEBUG __rhs => "hop_count"
  _230 = std::__cxx11::basic_string<char>::compare (&priority, "hop_count");
  goto <bb 71>;

<L553>:
  pretmp_5329 = &this_129(D)->_packet_size;
  pretmp_193 = &this_129(D)->_packet_size_rate;
  pretmp_5850 = &this_129(D)->_traffic;
  pretmp_6494 = &this_129(D)->_last_class;
  pretmp_6507 = &this_129(D)->_qtime;
  pretmp_6520 = &this_129(D)->_total_in_flight_flits;
  pretmp_6533 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6546 = &this_129(D)->_retired_packets;
  pretmp_7700 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7836 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8209 = &this_129(D)->_pair_plat;
  pretmp_8222 = &this_129(D)->_pair_nlat;
  pretmp_8235 = &this_129(D)->_pair_flat;
  pretmp_8248 = &this_129(D)->_sent_packets;
  pretmp_8261 = &this_129(D)->_accepted_packets;
  pretmp_8274 = &this_129(D)->_sent_flits;
  pretmp_8287 = &this_129(D)->_accepted_flits;
  pretmp_8300 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

  <bb 71>:
  if (_230 == 0)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  this_129(D)->_pri_type = 5;
  goto <bb 87>;

  <bb 73>:
  # DEBUG __lhs => &priority
  # DEBUG __rhs => "sequence"
  _232 = std::__cxx11::basic_string<char>::compare (&priority, "sequence");
  goto <bb 75>;

<L554>:
  pretmp_5217 = &this_129(D)->_packet_size;
  pretmp_4876 = &this_129(D)->_packet_size_rate;
  pretmp_6193 = &this_129(D)->_traffic;
  pretmp_6495 = &this_129(D)->_last_class;
  pretmp_6508 = &this_129(D)->_qtime;
  pretmp_6521 = &this_129(D)->_total_in_flight_flits;
  pretmp_6534 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6547 = &this_129(D)->_retired_packets;
  pretmp_7701 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7837 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8210 = &this_129(D)->_pair_plat;
  pretmp_8223 = &this_129(D)->_pair_nlat;
  pretmp_8236 = &this_129(D)->_pair_flat;
  pretmp_8249 = &this_129(D)->_sent_packets;
  pretmp_8262 = &this_129(D)->_accepted_packets;
  pretmp_8275 = &this_129(D)->_sent_flits;
  pretmp_8288 = &this_129(D)->_accepted_flits;
  pretmp_8301 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

  <bb 75>:
  if (_232 == 0)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  this_129(D)->_pri_type = 6;
  goto <bb 87>;

  <bb 77>:
  # DEBUG __lhs => &priority
  # DEBUG __rhs => "none"
  _234 = std::__cxx11::basic_string<char>::compare (&priority, "none");
  goto <bb 79>;

<L555>:
  pretmp_5328 = &this_129(D)->_packet_size;
  pretmp_187 = &this_129(D)->_packet_size_rate;
  pretmp_6195 = &this_129(D)->_traffic;
  pretmp_6496 = &this_129(D)->_last_class;
  pretmp_6509 = &this_129(D)->_qtime;
  pretmp_6522 = &this_129(D)->_total_in_flight_flits;
  pretmp_6535 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6548 = &this_129(D)->_retired_packets;
  pretmp_7702 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7838 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8211 = &this_129(D)->_pair_plat;
  pretmp_8224 = &this_129(D)->_pair_nlat;
  pretmp_8237 = &this_129(D)->_pair_flat;
  pretmp_8250 = &this_129(D)->_sent_packets;
  pretmp_8263 = &this_129(D)->_accepted_packets;
  pretmp_8276 = &this_129(D)->_sent_flits;
  pretmp_8289 = &this_129(D)->_accepted_flits;
  pretmp_8302 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

  <bb 79>:
  if (_234 == 0)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  this_129(D)->_pri_type = 7;
  goto <bb 87>;

  <bb 81>:
  D.73611 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unkown priority value: ", &priority); [return slot optimization]
  goto <bb 83>;

<L556>:
  pretmp_789 = &this_129(D)->_packet_size;
  pretmp_6200 = &this_129(D)->_packet_size_rate;
  pretmp_5847 = &this_129(D)->_traffic;
  pretmp_6497 = &this_129(D)->_last_class;
  pretmp_6510 = &this_129(D)->_qtime;
  pretmp_6523 = &this_129(D)->_total_in_flight_flits;
  pretmp_6536 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6549 = &this_129(D)->_retired_packets;
  pretmp_7703 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7839 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8212 = &this_129(D)->_pair_plat;
  pretmp_8225 = &this_129(D)->_pair_nlat;
  pretmp_8238 = &this_129(D)->_pair_flat;
  pretmp_8251 = &this_129(D)->_sent_packets;
  pretmp_8264 = &this_129(D)->_accepted_packets;
  pretmp_8277 = &this_129(D)->_sent_flits;
  pretmp_8290 = &this_129(D)->_accepted_flits;
  pretmp_8303 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

  <bb 83>:
  Module::Error (_130, &D.73611);

  <bb 84>:
  # DEBUG this => &D.73611
  # DEBUG this => &D.73611
  # DEBUG this => &D.73611
  _236 = MEM[(char * *)&D.73611];
  # DEBUG D#1 => &D.73611
  # DEBUG this => D#1
  # DEBUG this => &D.73611
  if (&D.73611.D.11539._M_local_buf != _236)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  # DEBUG D#629 => D.73611.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73611
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73611
  # DEBUG this => D#1
  # DEBUG this => &D.73611
  # DEBUG D#626 => &D.73611._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _236
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _236
  # DEBUG this => D#620
  # DEBUG D.148347 => D#621
  operator delete (_236);

  <bb 86>:
  # DEBUG D#630 => &D.73611._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73611 ={v} {CLOBBER};

  <bb 87>:
  # DEBUG D#195 => &D.73619
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73619
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73618, "topology");
  goto <bb 89>;

<L557>:
  pretmp_6135 = &this_129(D)->_packet_size;
  pretmp_5853 = &this_129(D)->_packet_size_rate;
  pretmp_6191 = &this_129(D)->_traffic;
  pretmp_6500 = &this_129(D)->_last_class;
  pretmp_6513 = &this_129(D)->_qtime;
  pretmp_6526 = &this_129(D)->_total_in_flight_flits;
  pretmp_6539 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6552 = &this_129(D)->_retired_packets;
  pretmp_7706 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7842 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8215 = &this_129(D)->_pair_plat;
  pretmp_8228 = &this_129(D)->_pair_nlat;
  pretmp_8241 = &this_129(D)->_pair_flat;
  pretmp_8254 = &this_129(D)->_sent_packets;
  pretmp_8267 = &this_129(D)->_accepted_packets;
  pretmp_8280 = &this_129(D)->_sent_flits;
  pretmp_8293 = &this_129(D)->_accepted_flits;
  pretmp_8306 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

  <bb 89>:
  D.73617 = Configuration::GetStr (config_173(D), &D.73618); [return slot optimization]

  <bb 90>:
  # DEBUG D#195 => &D.73616
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73616
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73615, "routing_function");

  <bb 91>:
  D.73614 = Configuration::GetStr (config_173(D), &D.73615); [return slot optimization]

  <bb 92>:
  # DEBUG __lhs => &D.73614
  # DEBUG __rhs => "_"
  # DEBUG this => &D.73613
  # DEBUG __str => &D.73614
  # DEBUG this => &D.73614
  # DEBUG D#1185 => &D.73614._M_dataplus
  # DEBUG this => &D.73613
  # DEBUG D#1186 => &D.73613._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &D.73613.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73613]._M_p = &D.73613.D.11539._M_local_buf;
  _4808 = MEM[(char * *)&D.73614];
  # DEBUG D#1 => &D.73614
  # DEBUG this => D#1
  _4809 = MEM[(long unsigned int *)&D.73614 + 8B];
  # DEBUG D#2 => &D.73614
  # DEBUG this => D#2
  _4810 = _4808 + _4809;
  # DEBUG D#1 => &D.73614
  # DEBUG this => D#1
  # DEBUG this => &D.73613
  # DEBUG __beg => _4808
  # DEBUG __end => _4810
  # DEBUG this => &D.73613
  # DEBUG __beg => _4808
  # DEBUG __end => _4810
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (&D.73613, _4808, _4810);

  <bb 93>:
  # DEBUG this => &D.73613
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  # DEBUG __n => NULL
  # DEBUG this => &D.73613
  # DEBUG __n1 => 0
  # DEBUG __n2 => NULL
  # DEBUG __s => "basic_string::append"
  # DEBUG D#1260 => &D.73613
  # DEBUG this => D#1260
  # DEBUG D#1259 => D#1260
  # DEBUG D#1258 => D#1260
  # DEBUG this => D#1258
  # DEBUG D#1257 => &D#1259->_M_dataplus
  # DEBUG D#1256 => D#1257
  # DEBUG __a => D#1256
  # DEBUG D#1255 => D#1256
  # DEBUG D#1254 => D#1255
  # DEBUG this => D#1254
  _4812 = MEM[(long unsigned int *)&D.73613 + 8B];
  # DEBUG D#3 => &D.73613
  # DEBUG this => D#3
  if (_4812 == 9223372036854775807)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  std::__throw_length_error ("basic_string::append");

  <bb 95>:
  std::__cxx11::basic_string<char>::_M_append (&D.73613, "_", 1);
  goto <bb 97>;

<L563>:
  goto <bb 99> (<L529>);

  <bb 97>:
  # DEBUG __lhs => &D.73613
  # DEBUG __rhs => &D.73617
  # DEBUG this => &rf
  # DEBUG __str => &D.73613
  # DEBUG this => &D.73613
  # DEBUG D#1185 => &D.73613._M_dataplus
  # DEBUG this => &rf
  # DEBUG D#1186 => &rf._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &rf.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&rf]._M_p = &rf.D.11539._M_local_buf;
  _4816 = MEM[(char * *)&D.73613];
  # DEBUG D#1 => &D.73613
  # DEBUG this => D#1
  _4817 = MEM[(long unsigned int *)&D.73613 + 8B];
  # DEBUG D#2 => &D.73613
  # DEBUG this => D#2
  _4818 = _4816 + _4817;
  # DEBUG D#1 => &D.73613
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG __beg => _4816
  # DEBUG __end => _4818
  # DEBUG this => &rf
  # DEBUG __beg => _4816
  # DEBUG __end => _4818
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (&rf, _4816, _4818);
  goto <bb 103>;

<L562>:

<L529>:
  # DEBUG this => &D.73613
  # DEBUG this => &D.73613
  # DEBUG this => &D.73613
  _4811 = MEM[(char * *)&D.73613];
  # DEBUG D#1 => &D.73613
  # DEBUG this => D#1
  # DEBUG this => &D.73613
  if (&D.73613.D.11539._M_local_buf != _4811)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#629 => D.73613.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73613
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73613
  # DEBUG this => D#1
  # DEBUG this => &D.73613
  # DEBUG D#626 => &D.73613._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _4811
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _4811
  # DEBUG this => D#620
  # DEBUG D.171235 => D#621
  operator delete (_4811);

  <bb 101>:
  # DEBUG D#630 => &D.73613._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  resx 738

<L565>:
  goto <bb 1359> (<L187>);

  <bb 103>:
  # DEBUG this => &rf
  # DEBUG __str => &D.73617
  _4819 = MEM[(long unsigned int *)&D.73617 + 8B];
  # DEBUG D#3 => &D.73617
  # DEBUG this => D#3
  _4820 = MEM[(char * *)&D.73617];
  # DEBUG D#1 => &D.73617
  # DEBUG this => D#1
  std::__cxx11::basic_string<char>::_M_append (&rf, _4820, _4819);
  goto <bb 108>;

<L530>:
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _4821 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _4821)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#629 => rf.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &rf
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#626 => &rf._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _4821
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _4821
  # DEBUG this => D#620
  # DEBUG D.171273 => D#621
  operator delete (_4821);

  <bb 106>:
  # DEBUG D#630 => &rf._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  resx 739

<L566>:
  goto <bb 1354> (<L185>);

  <bb 108>:
  # DEBUG this => &D.73613
  # DEBUG this => &D.73613
  # DEBUG this => &D.73613
  _252 = MEM[(char * *)&D.73613];
  # DEBUG D#1 => &D.73613
  # DEBUG this => D#1
  # DEBUG this => &D.73613
  if (&D.73613.D.11539._M_local_buf != _252)
    goto <bb 109>;
  else
    goto <bb 110>;

  <bb 109>:
  # DEBUG D#629 => D.73613.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73613
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73613
  # DEBUG this => D#1
  # DEBUG this => &D.73613
  # DEBUG D#626 => &D.73613._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _252
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _252
  # DEBUG this => D#620
  # DEBUG D.148443 => D#621
  operator delete (_252);

  <bb 110>:
  # DEBUG D#630 => &D.73613._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73613 ={v} {CLOBBER};
  # DEBUG this => &D.73614
  # DEBUG this => &D.73614
  # DEBUG this => &D.73614
  _254 = MEM[(char * *)&D.73614];
  # DEBUG D#1 => &D.73614
  # DEBUG this => D#1
  # DEBUG this => &D.73614
  if (&D.73614.D.11539._M_local_buf != _254)
    goto <bb 111>;
  else
    goto <bb 112>;

  <bb 111>:
  # DEBUG D#629 => D.73614.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73614
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73614
  # DEBUG this => D#1
  # DEBUG this => &D.73614
  # DEBUG D#626 => &D.73614._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _254
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _254
  # DEBUG this => D#620
  # DEBUG D.148428 => D#621
  operator delete (_254);

  <bb 112>:
  # DEBUG D#630 => &D.73614._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73614 ={v} {CLOBBER};
  # DEBUG this => &D.73615
  # DEBUG this => &D.73615
  # DEBUG this => &D.73615
  _256 = MEM[(char * *)&D.73615];
  # DEBUG D#1 => &D.73615
  # DEBUG this => D#1
  # DEBUG this => &D.73615
  if (&D.73615.D.11539._M_local_buf != _256)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  # DEBUG D#629 => D.73615.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73615
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73615
  # DEBUG this => D#1
  # DEBUG this => &D.73615
  # DEBUG D#626 => &D.73615._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _256
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _256
  # DEBUG this => D#620
  # DEBUG D.148413 => D#621
  operator delete (_256);

  <bb 114>:
  # DEBUG D#630 => &D.73615._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73615 ={v} {CLOBBER};
  # DEBUG this => &D.73616
  # DEBUG this => &D.73616
  # DEBUG this => &D.73617
  # DEBUG this => &D.73617
  # DEBUG this => &D.73617
  _258 = MEM[(char * *)&D.73617];
  # DEBUG D#1 => &D.73617
  # DEBUG this => D#1
  # DEBUG this => &D.73617
  if (&D.73617.D.11539._M_local_buf != _258)
    goto <bb 115>;
  else
    goto <bb 116>;

  <bb 115>:
  # DEBUG D#629 => D.73617.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73617
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73617
  # DEBUG this => D#1
  # DEBUG this => &D.73617
  # DEBUG D#626 => &D.73617._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _258
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _258
  # DEBUG this => D#620
  # DEBUG D.148396 => D#621
  operator delete (_258);

  <bb 116>:
  # DEBUG D#630 => &D.73617._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73617 ={v} {CLOBBER};
  # DEBUG this => &D.73618
  # DEBUG this => &D.73618
  # DEBUG this => &D.73618
  _260 = MEM[(char * *)&D.73618];
  # DEBUG D#1 => &D.73618
  # DEBUG this => D#1
  # DEBUG this => &D.73618
  if (&D.73618.D.11539._M_local_buf != _260)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  # DEBUG D#629 => D.73618.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73618
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73618
  # DEBUG this => D#1
  # DEBUG this => &D.73618
  # DEBUG D#626 => &D.73618._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _260
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _260
  # DEBUG this => D#620
  # DEBUG D.148381 => D#621
  operator delete (_260);

  <bb 118>:
  # DEBUG D#630 => &D.73618._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73618 ={v} {CLOBBER};
  # DEBUG this => &D.73619
  # DEBUG this => &D.73619
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &rf
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &rf
  # DEBUG this => &gRoutingFunctionMap._M_t
  __y_4822 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#274 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#274
  # DEBUG D#960 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &rf
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __y_4822
  if (__y_4822 == 0B)
    goto <bb 127>;
  else
    goto <bb 121>;

  <bb 119>:
  # __y_4832 = PHI <__y_4826(123), __y_4827(124)>
  # __y_4831 = PHI <__y_6016(123), __y_5892(124)>
  # DEBUG __y => __y_4831
  # DEBUG __x => __y_4832
  if (__y_4832 == 0B)
    goto <bb 125>;
  else
    goto <bb 120>;

  <bb 120>:
  goto <bb 122>;

  <bb 121>:

  <bb 122>:
  # __y_6016 = PHI <__y_4822(121), __y_4832(120)>
  # __y_5892 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(121), __y_4831(120)>
  # DEBUG __y => __y_5892
  # DEBUG __x => __y_6016
  # DEBUG __x => __y_6016
  # DEBUG __x => __y_6016
  # DEBUG this => __y_6016
  # DEBUG D#957 => &MEM[(const struct _Rb_tree_node *)__y_6016]._M_value_field
  # DEBUG __r => D#957
  # DEBUG __x => D#957
  # DEBUG this => D#460
  _4824 = &MEM[(const struct pair &)__y_6016 + 32].first;
  # DEBUG D#958 => &D#959->_M_impl._M_key_compare
  # DEBUG D#665 => D#958
  # DEBUG __x => _4824
  # DEBUG __y => &rf
  # DEBUG this => D#665
  # DEBUG __lhs => _4824
  # DEBUG __rhs => &rf
  _4825 = std::__cxx11::basic_string<char>::compare (_4824, &rf);
  if (_4825 >= 0)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 123>:
  # DEBUG __y => __y_6016
  __y_4826 = MEM[(struct _Rb_tree_node_base * *)__y_6016 + 16B];
  # DEBUG D#458 => __y_6016
  # DEBUG __x => D#458
  # DEBUG __x => NULL
  goto <bb 119>;

  <bb 124>:
  __y_4827 = MEM[(struct _Rb_tree_node_base * *)__y_6016 + 24B];
  # DEBUG D#459 => __y_6016
  # DEBUG __x => D#459
  # DEBUG __x => NULL
  goto <bb 119>;

  <bb 125>:
  # __y_4633 = PHI <__y_4831(119)>
  # DEBUG this => NULL
  # DEBUG __x => __y_4633
  # DEBUG __j$_M_node => __y_4633
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_4633 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 127>;
  else
    goto <bb 126>;

  <bb 126>:
  # DEBUG __x => __y_4633
  # DEBUG __x => __y_4633
  # DEBUG this => __y_4633
  # DEBUG D#461 => &MEM[(const struct _Rb_tree_node *)__y_4633]._M_value_field
  # DEBUG __r => D#461
  # DEBUG __x => D#461
  # DEBUG this => D#460
  _4829 = &MEM[(const struct pair &)__y_4633 + 32].first;
  # DEBUG D#962 => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_key_compare
  # DEBUG D#665 => D#962
  # DEBUG __x => &rf
  # DEBUG __y => _4829
  # DEBUG this => D#665
  # DEBUG __lhs => &rf
  # DEBUG __rhs => _4829
  _4830 = std::__cxx11::basic_string<char>::compare (&rf, _4829);
  if (_4830 < 0)
    goto <bb 127>;
  else
    goto <bb 132>;

  <bb 127>:
  # DEBUG D#961 => {CLOBBER}
  # DEBUG __j$_M_node => D#961
  # DEBUG this => &rf_iter
  # DEBUG __it => &D.73621
  # DEBUG rf_iter$_M_node => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#275 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#275
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &D.73622
  # DEBUG __it => &D.73623
  # DEBUG this => &rf_iter
  # DEBUG __x => &D.73622
  D.73624 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Invalid routing function: ", &rf); [return slot optimization]

  <bb 128>:
  Module::Error (_130, &D.73624);

  <bb 129>:
  # DEBUG this => &D.73624
  # DEBUG this => &D.73624
  # DEBUG this => &D.73624
  _250 = MEM[(char * *)&D.73624];
  # DEBUG D#1 => &D.73624
  # DEBUG this => D#1
  # DEBUG this => &D.73624
  if (&D.73624.D.11539._M_local_buf != _250)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # DEBUG D#629 => D.73624.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73624
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73624
  # DEBUG this => D#1
  # DEBUG this => &D.73624
  # DEBUG D#626 => &D.73624._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _250
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _250
  # DEBUG this => D#620
  # DEBUG D.148458 => D#621
  operator delete (_250);

  <bb 131>:
  # DEBUG D#630 => &D.73624._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73624 ={v} {CLOBBER};

  <bb 132>:
  # cstore_6248 = PHI <__y_4633(126), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(131)>
  # DEBUG this => &rf_iter
  # DEBUG this => cstore_6248
  # DEBUG D#2790 => &MEM[(const struct _Rb_tree_node *)cstore_6248]._M_value_field
  # DEBUG __r => D#2790
  _268 = MEM[(const struct pair *)cstore_6248 + 32B].second;
  this_129(D)->_rf = _268;
  # DEBUG D#195 => &D.73626
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73626
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73625, "routing_delay");
  goto <bb 134>;

<L568>:
  pretmp_2945 = &this_129(D)->_packet_size;
  pretmp_43 = &this_129(D)->_packet_size_rate;
  pretmp_6117 = &this_129(D)->_traffic;
  pretmp_5820 = &this_129(D)->_last_class;
  pretmp_5798 = &this_129(D)->_qtime;
  pretmp_5763 = &this_129(D)->_total_in_flight_flits;
  pretmp_2965 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6155 = &this_129(D)->_retired_packets;
  pretmp_7421 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7733 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7869 = &this_129(D)->_pair_plat;
  pretmp_7912 = &this_129(D)->_pair_nlat;
  pretmp_7955 = &this_129(D)->_pair_flat;
  pretmp_7998 = &this_129(D)->_sent_packets;
  pretmp_8041 = &this_129(D)->_accepted_packets;
  pretmp_8084 = &this_129(D)->_sent_flits;
  pretmp_8127 = &this_129(D)->_accepted_flits;
  pretmp_8170 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 134>:
  _272 = Configuration::GetInt (config_173(D), &D.73625);

  <bb 135>:
  _273 = _272 == 0;
  this_129(D)->_lookahead_routing = _273;
  # DEBUG this => &D.73625
  # DEBUG this => &D.73625
  # DEBUG this => &D.73625
  _276 = MEM[(char * *)&D.73625];
  # DEBUG D#1 => &D.73625
  # DEBUG this => D#1
  # DEBUG this => &D.73625
  if (&D.73625.D.11539._M_local_buf != _276)
    goto <bb 136>;
  else
    goto <bb 137>;

  <bb 136>:
  # DEBUG D#629 => D.73625.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73625
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73625
  # DEBUG this => D#1
  # DEBUG this => &D.73625
  # DEBUG D#626 => &D.73625._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _276
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _276
  # DEBUG this => D#620
  # DEBUG D.148480 => D#621
  operator delete (_276);

  <bb 137>:
  # DEBUG D#630 => &D.73625._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73625 ={v} {CLOBBER};
  # DEBUG this => &D.73626
  # DEBUG this => &D.73626
  # DEBUG D#195 => &D.73628
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73628
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73627, "noq");
  goto <bb 139>;

<L569>:
  pretmp_2948 = &this_129(D)->_packet_size;
  pretmp_6246 = &this_129(D)->_packet_size_rate;
  pretmp_2 = &this_129(D)->_traffic;
  pretmp_5822 = &this_129(D)->_last_class;
  pretmp_5796 = &this_129(D)->_qtime;
  pretmp_5766 = &this_129(D)->_total_in_flight_flits;
  pretmp_3062 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4834 = &this_129(D)->_retired_packets;
  pretmp_7423 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7735 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7871 = &this_129(D)->_pair_plat;
  pretmp_7914 = &this_129(D)->_pair_nlat;
  pretmp_7957 = &this_129(D)->_pair_flat;
  pretmp_8000 = &this_129(D)->_sent_packets;
  pretmp_8043 = &this_129(D)->_accepted_packets;
  pretmp_8086 = &this_129(D)->_sent_flits;
  pretmp_8129 = &this_129(D)->_accepted_flits;
  pretmp_8172 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 139>:
  _279 = Configuration::GetInt (config_173(D), &D.73627);

  <bb 140>:
  _280 = _279 != 0;
  this_129(D)->_noq = _280;
  # DEBUG this => &D.73627
  # DEBUG this => &D.73627
  # DEBUG this => &D.73627
  _283 = MEM[(char * *)&D.73627];
  # DEBUG D#1 => &D.73627
  # DEBUG this => D#1
  # DEBUG this => &D.73627
  if (&D.73627.D.11539._M_local_buf != _283)
    goto <bb 141>;
  else
    goto <bb 142>;

  <bb 141>:
  # DEBUG D#629 => D.73627.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73627
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73627
  # DEBUG this => D#1
  # DEBUG this => &D.73627
  # DEBUG D#626 => &D.73627._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _283
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _283
  # DEBUG this => D#620
  # DEBUG D.148497 => D#621
  operator delete (_283);
  pretmp_4350 = this_129(D)->_noq;

  <bb 142>:
  # prephitmp_4351 = PHI <_280(140), pretmp_4350(141)>
  # DEBUG D#630 => &D.73627._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73627 ={v} {CLOBBER};
  # DEBUG this => &D.73628
  # DEBUG this => &D.73628
  if (prephitmp_4351 != 0)
    goto <bb 143>;
  else
    goto <bb 150>;

  <bb 143>:
  _285 = this_129(D)->_lookahead_routing;
  if (_285 != 0)
    goto <bb 150>;
  else
    goto <bb 144>;

  <bb 144>:
  # DEBUG D#195 => &D.73630
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73630
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73629, "NOQ requires lookahead routing to be enabled.");
  goto <bb 146>;

<L570>:
  pretmp_2950 = &this_129(D)->_packet_size;
  pretmp_6242 = &this_129(D)->_packet_size_rate;
  pretmp_6102 = &this_129(D)->_traffic;
  pretmp_5821 = &this_129(D)->_last_class;
  pretmp_5793 = &this_129(D)->_qtime;
  pretmp_4968 = &this_129(D)->_total_in_flight_flits;
  pretmp_3069 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6271 = &this_129(D)->_retired_packets;
  pretmp_7425 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7737 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7873 = &this_129(D)->_pair_plat;
  pretmp_7916 = &this_129(D)->_pair_nlat;
  pretmp_7959 = &this_129(D)->_pair_flat;
  pretmp_8002 = &this_129(D)->_sent_packets;
  pretmp_8045 = &this_129(D)->_accepted_packets;
  pretmp_8088 = &this_129(D)->_sent_flits;
  pretmp_8131 = &this_129(D)->_accepted_flits;
  pretmp_8174 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 146>:
  Module::Error (_130, &D.73629);

  <bb 147>:
  # DEBUG this => &D.73629
  # DEBUG this => &D.73629
  # DEBUG this => &D.73629
  _289 = MEM[(char * *)&D.73629];
  # DEBUG D#1 => &D.73629
  # DEBUG this => D#1
  # DEBUG this => &D.73629
  if (&D.73629.D.11539._M_local_buf != _289)
    goto <bb 148>;
  else
    goto <bb 149>;

  <bb 148>:
  # DEBUG D#629 => D.73629.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73629
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73629
  # DEBUG this => D#1
  # DEBUG this => &D.73629
  # DEBUG D#626 => &D.73629._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _289
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _289
  # DEBUG this => D#620
  # DEBUG D.148515 => D#621
  operator delete (_289);

  <bb 149>:
  # DEBUG D#630 => &D.73629._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73629 ={v} {CLOBBER};
  # DEBUG this => &D.73630
  # DEBUG this => &D.73630

  <bb 150>:
  # DEBUG D#195 => &D.73632
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73632
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73631, "classes");
  goto <bb 152>;

<L571>:
  pretmp_2968 = &this_129(D)->_packet_size;
  pretmp_5289 = &this_129(D)->_packet_size_rate;
  pretmp_4823 = &this_129(D)->_traffic;
  pretmp_5817 = &this_129(D)->_last_class;
  pretmp_5795 = &this_129(D)->_qtime;
  pretmp_6168 = &this_129(D)->_total_in_flight_flits;
  pretmp_3008 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6273 = &this_129(D)->_retired_packets;
  pretmp_7427 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7739 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7875 = &this_129(D)->_pair_plat;
  pretmp_7918 = &this_129(D)->_pair_nlat;
  pretmp_7961 = &this_129(D)->_pair_flat;
  pretmp_8004 = &this_129(D)->_sent_packets;
  pretmp_8047 = &this_129(D)->_accepted_packets;
  pretmp_8090 = &this_129(D)->_sent_flits;
  pretmp_8133 = &this_129(D)->_accepted_flits;
  pretmp_8176 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 152>:
  _295 = Configuration::GetInt (config_173(D), &D.73631);

  <bb 153>:
  this_129(D)->_classes = _295;
  # DEBUG this => &D.73631
  # DEBUG this => &D.73631
  # DEBUG this => &D.73631
  _299 = MEM[(char * *)&D.73631];
  # DEBUG D#1 => &D.73631
  # DEBUG this => D#1
  # DEBUG this => &D.73631
  if (&D.73631.D.11539._M_local_buf != _299)
    goto <bb 154>;
  else
    goto <bb 155>;

  <bb 154>:
  # DEBUG D#629 => D.73631.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73631
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73631
  # DEBUG this => D#1
  # DEBUG this => &D.73631
  # DEBUG D#626 => &D.73631._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _299
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _299
  # DEBUG this => D#620
  # DEBUG D.148534 => D#621
  operator delete (_299);

  <bb 155>:
  # DEBUG D#630 => &D.73631._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73631 ={v} {CLOBBER};
  # DEBUG this => &D.73632
  # DEBUG this => &D.73632
  # DEBUG D#195 => &D.73635
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73635
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73634, "use_read_write");
  goto <bb 157>;

<L572>:
  pretmp_2970 = &this_129(D)->_packet_size;
  pretmp_6240 = &this_129(D)->_packet_size_rate;
  pretmp_6093 = &this_129(D)->_traffic;
  pretmp_5819 = &this_129(D)->_last_class;
  pretmp_5794 = &this_129(D)->_qtime;
  pretmp_6166 = &this_129(D)->_total_in_flight_flits;
  pretmp_3009 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6275 = &this_129(D)->_retired_packets;
  pretmp_7429 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7741 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7877 = &this_129(D)->_pair_plat;
  pretmp_7920 = &this_129(D)->_pair_nlat;
  pretmp_7963 = &this_129(D)->_pair_flat;
  pretmp_8006 = &this_129(D)->_sent_packets;
  pretmp_8049 = &this_129(D)->_accepted_packets;
  pretmp_8092 = &this_129(D)->_sent_flits;
  pretmp_8135 = &this_129(D)->_accepted_flits;
  pretmp_8178 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 157>:
  D.73633 = Configuration::GetIntArray (config_173(D), &D.73634); [return slot optimization]

  <bb 158>:
  _302 = &this_129(D)->_use_read_write;
  std::vector<int>::operator= (_302, &D.73633);

  <bb 159>:
  # DEBUG this => &D.73633
  # DEBUG D#476 => &D.73633.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73633.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73633.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73633.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _305 = MEM[(struct _Vector_base *)&D.73633]._M_impl._M_start;
  # DEBUG D#473 => (long int) _305
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _305
  # DEBUG __n => D#470
  if (_305 != 0B)
    goto <bb 160>;
  else
    goto <bb 161>;

  <bb 160>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _305
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _305
  # DEBUG this => D#462
  # DEBUG D.148572 => D#463
  operator delete (_305);

  <bb 161>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73633 ={v} {CLOBBER};
  # DEBUG this => &D.73634
  # DEBUG this => &D.73634
  # DEBUG this => &D.73634
  _307 = MEM[(char * *)&D.73634];
  # DEBUG D#1 => &D.73634
  # DEBUG this => D#1
  # DEBUG this => &D.73634
  if (&D.73634.D.11539._M_local_buf != _307)
    goto <bb 162>;
  else
    goto <bb 163>;

  <bb 162>:
  # DEBUG D#629 => D.73634.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73634
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73634
  # DEBUG this => D#1
  # DEBUG this => &D.73634
  # DEBUG D#626 => &D.73634._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _307
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _307
  # DEBUG this => D#620
  # DEBUG D.148555 => D#621
  operator delete (_307);

  <bb 163>:
  # DEBUG D#630 => &D.73634._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73634 ={v} {CLOBBER};
  # DEBUG this => &D.73635
  # DEBUG this => &D.73635
  # DEBUG D#2791 => &this_129(D)->_use_read_write
  # DEBUG this => D#2791
  _297 = MEM[(int * *)this_129(D) + 272B];
  # DEBUG D#276 => D#2791
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _140 = MEM[(int * *)this_129(D) + 264B];
  # DEBUG D#277 => D#2791
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_140 == _297)
    goto <bb 164>;
  else
    goto <bb 172>;

  <bb 164>:
  # DEBUG D#195 => &D.73638
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73638
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73637, "use_read_write");
  goto <bb 166>;

<L574>:
  pretmp_2936 = &this_129(D)->_packet_size;
  pretmp_5286 = &this_129(D)->_packet_size_rate;
  pretmp_6056 = &this_129(D)->_traffic;
  pretmp_5818 = &this_129(D)->_last_class;
  pretmp_5792 = &this_129(D)->_qtime;
  pretmp_5759 = &this_129(D)->_total_in_flight_flits;
  pretmp_5162 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6277 = &this_129(D)->_retired_packets;
  pretmp_7431 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7743 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7879 = &this_129(D)->_pair_plat;
  pretmp_7922 = &this_129(D)->_pair_nlat;
  pretmp_7965 = &this_129(D)->_pair_flat;
  pretmp_8008 = &this_129(D)->_sent_packets;
  pretmp_8051 = &this_129(D)->_accepted_packets;
  pretmp_8094 = &this_129(D)->_sent_flits;
  pretmp_8137 = &this_129(D)->_accepted_flits;
  pretmp_8180 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 166>:
  _310 = Configuration::GetInt (config_173(D), &D.73637);

  <bb 167>:
  D.73636 = _310;
  std::vector<int>::push_back (_302, &D.73636);
  goto <bb 169>;

<L576>:
  goto <bb 1408> (<L210>);

  <bb 169>:
  D.73636 ={v} {CLOBBER};
  # DEBUG this => &D.73637
  # DEBUG this => &D.73637
  # DEBUG this => &D.73637
  _316 = MEM[(char * *)&D.73637];
  # DEBUG D#1 => &D.73637
  # DEBUG this => D#1
  # DEBUG this => &D.73637
  if (&D.73637.D.11539._M_local_buf != _316)
    goto <bb 170>;
  else
    goto <bb 171>;

  <bb 170>:
  # DEBUG D#629 => D.73637.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73637
  # DEBUG this => D#1
  # DEBUG this => &D.73637
  # DEBUG D#626 => &D.73637._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _316
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _316
  # DEBUG this => D#620
  # DEBUG D.148588 => D#621
  operator delete (_316);

  <bb 171>:
  # DEBUG D#630 => &D.73637._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73637 ={v} {CLOBBER};
  # DEBUG this => &D.73638
  # DEBUG this => &D.73638
  pretmp_4354 = MEM[(int * const &)this_129(D) + 272];

  <bb 172>:
  # prephitmp_4355 = PHI <_297(163), pretmp_4354(171)>
  # DEBUG D#2792 => &this_129(D)->_use_read_write
  # DEBUG this => D#2792
  # DEBUG this => D#2792
  # DEBUG D#272 => &D#2792->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _320 = MEM[(int &)prephitmp_4355 + 18446744073709551612];
  _321 = this_129(D)->_classes;
  _322 = (long unsigned int) _321;
  std::vector<int>::resize (_302, _322, _320);
  goto <bb 174>;

<L577>:
  pretmp_2998 = &this_129(D)->_packet_size;
  pretmp_5408 = &this_129(D)->_packet_size_rate;
  pretmp_6119 = &this_129(D)->_traffic;
  pretmp_6189 = &this_129(D)->_last_class;
  pretmp_6179 = &this_129(D)->_qtime;
  pretmp_4887 = &this_129(D)->_total_in_flight_flits;
  pretmp_4972 = &this_129(D)->_measured_in_flight_flits;
  pretmp_808 = &this_129(D)->_retired_packets;
  pretmp_7402 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7714 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7850 = &this_129(D)->_pair_plat;
  pretmp_7893 = &this_129(D)->_pair_nlat;
  pretmp_7936 = &this_129(D)->_pair_flat;
  pretmp_7979 = &this_129(D)->_sent_packets;
  pretmp_8022 = &this_129(D)->_accepted_packets;
  pretmp_8065 = &this_129(D)->_sent_flits;
  pretmp_8108 = &this_129(D)->_accepted_flits;
  pretmp_8151 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 174>:
  # DEBUG D#195 => &D.73641
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73641
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73640, "write_fraction");
  goto <bb 176>;

<L578>:
  pretmp_2938 = &this_129(D)->_packet_size;
  pretmp_6122 = &this_129(D)->_packet_size_rate;
  pretmp_6059 = &this_129(D)->_traffic;
  pretmp_4951 = &this_129(D)->_last_class;
  pretmp_5872 = &this_129(D)->_qtime;
  pretmp_5761 = &this_129(D)->_total_in_flight_flits;
  pretmp_6081 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6279 = &this_129(D)->_retired_packets;
  pretmp_7433 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7745 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7881 = &this_129(D)->_pair_plat;
  pretmp_7924 = &this_129(D)->_pair_nlat;
  pretmp_7967 = &this_129(D)->_pair_flat;
  pretmp_8010 = &this_129(D)->_sent_packets;
  pretmp_8053 = &this_129(D)->_accepted_packets;
  pretmp_8096 = &this_129(D)->_sent_flits;
  pretmp_8139 = &this_129(D)->_accepted_flits;
  pretmp_8182 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 176>:
  D.73639 = Configuration::GetFloatArray (config_173(D), &D.73640); [return slot optimization]

  <bb 177>:
  _327 = &this_129(D)->_write_fraction;
  std::vector<double>::operator= (_327, &D.73639);

  <bb 178>:
  # DEBUG this => &D.73639
  # DEBUG D#503 => &D.73639.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73639.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73639.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73639.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _330 = MEM[(struct _Vector_base *)&D.73639]._M_impl._M_start;
  # DEBUG D#500 => (long int) _330
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _330
  # DEBUG __n => D#497
  if (_330 != 0B)
    goto <bb 179>;
  else
    goto <bb 180>;

  <bb 179>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _330
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _330
  # DEBUG this => D#489
  # DEBUG D.148634 => D#490
  operator delete (_330);

  <bb 180>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73639 ={v} {CLOBBER};
  # DEBUG this => &D.73640
  # DEBUG this => &D.73640
  # DEBUG this => &D.73640
  _332 = MEM[(char * *)&D.73640];
  # DEBUG D#1 => &D.73640
  # DEBUG this => D#1
  # DEBUG this => &D.73640
  if (&D.73640.D.11539._M_local_buf != _332)
    goto <bb 181>;
  else
    goto <bb 182>;

  <bb 181>:
  # DEBUG D#629 => D.73640.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73640
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73640
  # DEBUG this => D#1
  # DEBUG this => &D.73640
  # DEBUG D#626 => &D.73640._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _332
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _332
  # DEBUG this => D#620
  # DEBUG D.148617 => D#621
  operator delete (_332);

  <bb 182>:
  # DEBUG D#630 => &D.73640._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73640 ={v} {CLOBBER};
  # DEBUG this => &D.73641
  # DEBUG this => &D.73641
  # DEBUG D#2793 => &this_129(D)->_write_fraction
  # DEBUG this => D#2793
  _141 = MEM[(double * *)this_129(D) + 296B];
  # DEBUG D#284 => D#2793
  # DEBUG this => D#284
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _142 = MEM[(double * *)this_129(D) + 288B];
  # DEBUG D#285 => D#2793
  # DEBUG this => D#285
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_141 == _142)
    goto <bb 183>;
  else
    goto <bb 191>;

  <bb 183>:
  # DEBUG D#195 => &D.73644
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73644
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73643, "write_fraction");
  goto <bb 185>;

<L580>:
  pretmp_2926 = &this_129(D)->_packet_size;
  pretmp_41 = &this_129(D)->_packet_size_rate;
  pretmp_602 = &this_129(D)->_traffic;
  pretmp_5815 = &this_129(D)->_last_class;
  pretmp_4962 = &this_129(D)->_qtime;
  pretmp_4837 = &this_129(D)->_total_in_flight_flits;
  pretmp_6161 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6281 = &this_129(D)->_retired_packets;
  pretmp_7435 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7747 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7883 = &this_129(D)->_pair_plat;
  pretmp_7926 = &this_129(D)->_pair_nlat;
  pretmp_7969 = &this_129(D)->_pair_flat;
  pretmp_8012 = &this_129(D)->_sent_packets;
  pretmp_8055 = &this_129(D)->_accepted_packets;
  pretmp_8098 = &this_129(D)->_sent_flits;
  pretmp_8141 = &this_129(D)->_accepted_flits;
  pretmp_8184 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 185>:
  _337 = Configuration::GetFloat (config_173(D), &D.73643);

  <bb 186>:
  D.73642 = _337;
  std::vector<double>::push_back (_327, &D.73642);
  goto <bb 188>;

<L582>:
  goto <bb 1422> (<L216>);

  <bb 188>:
  D.73642 ={v} {CLOBBER};
  # DEBUG this => &D.73643
  # DEBUG this => &D.73643
  # DEBUG this => &D.73643
  _343 = MEM[(char * *)&D.73643];
  # DEBUG D#1 => &D.73643
  # DEBUG this => D#1
  # DEBUG this => &D.73643
  if (&D.73643.D.11539._M_local_buf != _343)
    goto <bb 189>;
  else
    goto <bb 190>;

  <bb 189>:
  # DEBUG D#629 => D.73643.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73643
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73643
  # DEBUG this => D#1
  # DEBUG this => &D.73643
  # DEBUG D#626 => &D.73643._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _343
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _343
  # DEBUG this => D#620
  # DEBUG D.148650 => D#621
  operator delete (_343);

  <bb 190>:
  # DEBUG D#630 => &D.73643._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73643 ={v} {CLOBBER};
  # DEBUG this => &D.73644
  # DEBUG this => &D.73644
  pretmp_4357 = MEM[(double * const &)this_129(D) + 296];

  <bb 191>:
  # prephitmp_4359 = PHI <_141(182), pretmp_4357(190)>
  # DEBUG D#2794 => &this_129(D)->_write_fraction
  # DEBUG this => D#2794
  # DEBUG this => D#2794
  # DEBUG D#286 => &D#2794->D.55581._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#286
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _347 = MEM[(double &)prephitmp_4359 + 18446744073709551608];
  _348 = this_129(D)->_classes;
  _349 = (long unsigned int) _348;
  std::vector<double>::resize (_327, _349, _347);
  goto <bb 193>;

<L583>:
  pretmp_2991 = &this_129(D)->_packet_size;
  pretmp_5337 = &this_129(D)->_packet_size_rate;
  pretmp_4 = &this_129(D)->_traffic;
  pretmp_6138 = &this_129(D)->_last_class;
  pretmp_5808 = &this_129(D)->_qtime;
  pretmp_5773 = &this_129(D)->_total_in_flight_flits;
  pretmp_5749 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4980 = &this_129(D)->_retired_packets;
  pretmp_7405 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7717 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7853 = &this_129(D)->_pair_plat;
  pretmp_7896 = &this_129(D)->_pair_nlat;
  pretmp_7939 = &this_129(D)->_pair_flat;
  pretmp_7982 = &this_129(D)->_sent_packets;
  pretmp_8025 = &this_129(D)->_accepted_packets;
  pretmp_8068 = &this_129(D)->_sent_flits;
  pretmp_8111 = &this_129(D)->_accepted_flits;
  pretmp_8154 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 193>:
  # DEBUG D#195 => &D.73647
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73647
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73646, "read_request_size");
  goto <bb 195>;

<L584>:
  pretmp_2928 = &this_129(D)->_packet_size;
  pretmp_6239 = &this_129(D)->_packet_size_rate;
  pretmp_6060 = &this_129(D)->_traffic;
  pretmp_6182 = &this_129(D)->_last_class;
  pretmp_5787 = &this_129(D)->_qtime;
  pretmp_5756 = &this_129(D)->_total_in_flight_flits;
  pretmp_5177 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6283 = &this_129(D)->_retired_packets;
  pretmp_7437 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7749 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7885 = &this_129(D)->_pair_plat;
  pretmp_7928 = &this_129(D)->_pair_nlat;
  pretmp_7971 = &this_129(D)->_pair_flat;
  pretmp_8014 = &this_129(D)->_sent_packets;
  pretmp_8057 = &this_129(D)->_accepted_packets;
  pretmp_8100 = &this_129(D)->_sent_flits;
  pretmp_8143 = &this_129(D)->_accepted_flits;
  pretmp_8186 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 195>:
  D.73645 = Configuration::GetIntArray (config_173(D), &D.73646); [return slot optimization]

  <bb 196>:
  _354 = &this_129(D)->_read_request_size;
  std::vector<int>::operator= (_354, &D.73645);

  <bb 197>:
  # DEBUG this => &D.73645
  # DEBUG D#476 => &D.73645.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73645.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73645.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73645.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _357 = MEM[(struct _Vector_base *)&D.73645]._M_impl._M_start;
  # DEBUG D#473 => (long int) _357
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _357
  # DEBUG __n => D#470
  if (_357 != 0B)
    goto <bb 198>;
  else
    goto <bb 199>;

  <bb 198>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _357
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _357
  # DEBUG this => D#462
  # DEBUG D.148696 => D#463
  operator delete (_357);

  <bb 199>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73645 ={v} {CLOBBER};
  # DEBUG this => &D.73646
  # DEBUG this => &D.73646
  # DEBUG this => &D.73646
  _359 = MEM[(char * *)&D.73646];
  # DEBUG D#1 => &D.73646
  # DEBUG this => D#1
  # DEBUG this => &D.73646
  if (&D.73646.D.11539._M_local_buf != _359)
    goto <bb 200>;
  else
    goto <bb 201>;

  <bb 200>:
  # DEBUG D#629 => D.73646.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73646
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73646
  # DEBUG this => D#1
  # DEBUG this => &D.73646
  # DEBUG D#626 => &D.73646._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _359
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _359
  # DEBUG this => D#620
  # DEBUG D.148679 => D#621
  operator delete (_359);

  <bb 201>:
  # DEBUG D#630 => &D.73646._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73646 ={v} {CLOBBER};
  # DEBUG this => &D.73647
  # DEBUG this => &D.73647
  # DEBUG D#2795 => &this_129(D)->_read_request_size
  # DEBUG this => D#2795
  _143 = MEM[(int * *)this_129(D) + 320B];
  # DEBUG D#276 => D#2795
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _144 = MEM[(int * *)this_129(D) + 312B];
  # DEBUG D#277 => D#2795
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_143 == _144)
    goto <bb 202>;
  else
    goto <bb 210>;

  <bb 202>:
  # DEBUG D#195 => &D.73650
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73650
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73649, "read_request_size");
  goto <bb 204>;

<L586>:
  pretmp_2942 = &this_129(D)->_packet_size;
  pretmp_6124 = &this_129(D)->_packet_size_rate;
  pretmp_6113 = &this_129(D)->_traffic;
  pretmp_6187 = &this_129(D)->_last_class;
  pretmp_5801 = &this_129(D)->_qtime;
  pretmp_5772 = &this_129(D)->_total_in_flight_flits;
  pretmp_3053 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4964 = &this_129(D)->_retired_packets;
  pretmp_7418 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7730 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7866 = &this_129(D)->_pair_plat;
  pretmp_7909 = &this_129(D)->_pair_nlat;
  pretmp_7952 = &this_129(D)->_pair_flat;
  pretmp_7995 = &this_129(D)->_sent_packets;
  pretmp_8038 = &this_129(D)->_accepted_packets;
  pretmp_8081 = &this_129(D)->_sent_flits;
  pretmp_8124 = &this_129(D)->_accepted_flits;
  pretmp_8167 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 204>:
  _364 = Configuration::GetInt (config_173(D), &D.73649);

  <bb 205>:
  D.73648 = _364;
  std::vector<int>::push_back (_354, &D.73648);
  goto <bb 207>;

<L588>:
  goto <bb 1436> (<L222>);

  <bb 207>:
  D.73648 ={v} {CLOBBER};
  # DEBUG this => &D.73649
  # DEBUG this => &D.73649
  # DEBUG this => &D.73649
  _370 = MEM[(char * *)&D.73649];
  # DEBUG D#1 => &D.73649
  # DEBUG this => D#1
  # DEBUG this => &D.73649
  if (&D.73649.D.11539._M_local_buf != _370)
    goto <bb 208>;
  else
    goto <bb 209>;

  <bb 208>:
  # DEBUG D#629 => D.73649.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73649
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73649
  # DEBUG this => D#1
  # DEBUG this => &D.73649
  # DEBUG D#626 => &D.73649._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _370
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _370
  # DEBUG this => D#620
  # DEBUG D.148712 => D#621
  operator delete (_370);

  <bb 209>:
  # DEBUG D#630 => &D.73649._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73649 ={v} {CLOBBER};
  # DEBUG this => &D.73650
  # DEBUG this => &D.73650
  pretmp_4361 = MEM[(int * const &)this_129(D) + 320];

  <bb 210>:
  # prephitmp_4362 = PHI <_143(201), pretmp_4361(209)>
  # DEBUG D#2796 => &this_129(D)->_read_request_size
  # DEBUG this => D#2796
  # DEBUG this => D#2796
  # DEBUG D#272 => &D#2796->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _375 = MEM[(int &)prephitmp_4362 + 18446744073709551612];
  _376 = this_129(D)->_classes;
  _377 = (long unsigned int) _376;
  std::vector<int>::resize (_354, _377, _375);
  goto <bb 212>;

<L589>:
  pretmp_2985 = &this_129(D)->_packet_size;
  pretmp_4833 = &this_129(D)->_packet_size_rate;
  pretmp_6107 = &this_129(D)->_traffic;
  pretmp_5833 = &this_129(D)->_last_class;
  pretmp_6175 = &this_129(D)->_qtime;
  pretmp_5777 = &this_129(D)->_total_in_flight_flits;
  pretmp_5745 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4976 = &this_129(D)->_retired_packets;
  pretmp_7408 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7720 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7856 = &this_129(D)->_pair_plat;
  pretmp_7899 = &this_129(D)->_pair_nlat;
  pretmp_7942 = &this_129(D)->_pair_flat;
  pretmp_7985 = &this_129(D)->_sent_packets;
  pretmp_8028 = &this_129(D)->_accepted_packets;
  pretmp_8071 = &this_129(D)->_sent_flits;
  pretmp_8114 = &this_129(D)->_accepted_flits;
  pretmp_8157 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 212>:
  # DEBUG D#195 => &D.73653
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73653
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73652, "read_reply_size");
  goto <bb 214>;

<L590>:
  pretmp_2982 = &this_129(D)->_packet_size;
  pretmp_5344 = &this_129(D)->_packet_size_rate;
  pretmp_4850 = &this_129(D)->_traffic;
  pretmp_5828 = &this_129(D)->_last_class;
  pretmp_5806 = &this_129(D)->_qtime;
  pretmp_5449 = &this_129(D)->_total_in_flight_flits;
  pretmp_3000 = &this_129(D)->_measured_in_flight_flits;
  pretmp_34 = &this_129(D)->_retired_packets;
  pretmp_7415 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7727 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7863 = &this_129(D)->_pair_plat;
  pretmp_7906 = &this_129(D)->_pair_nlat;
  pretmp_7949 = &this_129(D)->_pair_flat;
  pretmp_7992 = &this_129(D)->_sent_packets;
  pretmp_8035 = &this_129(D)->_accepted_packets;
  pretmp_8078 = &this_129(D)->_sent_flits;
  pretmp_8121 = &this_129(D)->_accepted_flits;
  pretmp_8164 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 214>:
  D.73651 = Configuration::GetIntArray (config_173(D), &D.73652); [return slot optimization]

  <bb 215>:
  _381 = &this_129(D)->_read_reply_size;
  std::vector<int>::operator= (_381, &D.73651);

  <bb 216>:
  # DEBUG this => &D.73651
  # DEBUG D#476 => &D.73651.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73651.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73651.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73651.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _384 = MEM[(struct _Vector_base *)&D.73651]._M_impl._M_start;
  # DEBUG D#473 => (long int) _384
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _384
  # DEBUG __n => D#470
  if (_384 != 0B)
    goto <bb 217>;
  else
    goto <bb 218>;

  <bb 217>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _384
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _384
  # DEBUG this => D#462
  # DEBUG D.148758 => D#463
  operator delete (_384);

  <bb 218>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73651 ={v} {CLOBBER};
  # DEBUG this => &D.73652
  # DEBUG this => &D.73652
  # DEBUG this => &D.73652
  _386 = MEM[(char * *)&D.73652];
  # DEBUG D#1 => &D.73652
  # DEBUG this => D#1
  # DEBUG this => &D.73652
  if (&D.73652.D.11539._M_local_buf != _386)
    goto <bb 219>;
  else
    goto <bb 220>;

  <bb 219>:
  # DEBUG D#629 => D.73652.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73652
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73652
  # DEBUG this => D#1
  # DEBUG this => &D.73652
  # DEBUG D#626 => &D.73652._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _386
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _386
  # DEBUG this => D#620
  # DEBUG D.148741 => D#621
  operator delete (_386);

  <bb 220>:
  # DEBUG D#630 => &D.73652._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73652 ={v} {CLOBBER};
  # DEBUG this => &D.73653
  # DEBUG this => &D.73653
  # DEBUG D#2797 => &this_129(D)->_read_reply_size
  # DEBUG this => D#2797
  _145 = MEM[(int * *)this_129(D) + 344B];
  # DEBUG D#276 => D#2797
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _146 = MEM[(int * *)this_129(D) + 336B];
  # DEBUG D#277 => D#2797
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_145 == _146)
    goto <bb 221>;
  else
    goto <bb 229>;

  <bb 221>:
  # DEBUG D#195 => &D.73656
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73656
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73655, "read_reply_size");
  goto <bb 223>;

<L592>:
  pretmp_2979 = &this_129(D)->_packet_size;
  pretmp_5235 = &this_129(D)->_packet_size_rate;
  pretmp_31 = &this_129(D)->_traffic;
  pretmp_5830 = &this_129(D)->_last_class;
  pretmp_4960 = &this_129(D)->_qtime;
  pretmp_5767 = &this_129(D)->_total_in_flight_flits;
  pretmp_5737 = &this_129(D)->_measured_in_flight_flits;
  pretmp_1483 = &this_129(D)->_retired_packets;
  pretmp_7412 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7724 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7860 = &this_129(D)->_pair_plat;
  pretmp_7903 = &this_129(D)->_pair_nlat;
  pretmp_7946 = &this_129(D)->_pair_flat;
  pretmp_7989 = &this_129(D)->_sent_packets;
  pretmp_8032 = &this_129(D)->_accepted_packets;
  pretmp_8075 = &this_129(D)->_sent_flits;
  pretmp_8118 = &this_129(D)->_accepted_flits;
  pretmp_8161 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 223>:
  _391 = Configuration::GetInt (config_173(D), &D.73655);

  <bb 224>:
  D.73654 = _391;
  std::vector<int>::push_back (_381, &D.73654);
  goto <bb 226>;

<L594>:
  goto <bb 1450> (<L228>);

  <bb 226>:
  D.73654 ={v} {CLOBBER};
  # DEBUG this => &D.73655
  # DEBUG this => &D.73655
  # DEBUG this => &D.73655
  _397 = MEM[(char * *)&D.73655];
  # DEBUG D#1 => &D.73655
  # DEBUG this => D#1
  # DEBUG this => &D.73655
  if (&D.73655.D.11539._M_local_buf != _397)
    goto <bb 227>;
  else
    goto <bb 228>;

  <bb 227>:
  # DEBUG D#629 => D.73655.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73655
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73655
  # DEBUG this => D#1
  # DEBUG this => &D.73655
  # DEBUG D#626 => &D.73655._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _397
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _397
  # DEBUG this => D#620
  # DEBUG D.148774 => D#621
  operator delete (_397);

  <bb 228>:
  # DEBUG D#630 => &D.73655._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73655 ={v} {CLOBBER};
  # DEBUG this => &D.73656
  # DEBUG this => &D.73656
  pretmp_2801 = MEM[(int * const &)this_129(D) + 344];

  <bb 229>:
  # prephitmp_2802 = PHI <_145(220), pretmp_2801(228)>
  # DEBUG D#2798 => &this_129(D)->_read_reply_size
  # DEBUG this => D#2798
  # DEBUG this => D#2798
  # DEBUG D#272 => &D#2798->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _402 = MEM[(int &)prephitmp_2802 + 18446744073709551612];
  _403 = this_129(D)->_classes;
  _404 = (long unsigned int) _403;
  std::vector<int>::resize (_381, _404, _402);
  goto <bb 231>;

<L595>:
  pretmp_2988 = &this_129(D)->_packet_size;
  pretmp_5341 = &this_129(D)->_packet_size_rate;
  pretmp_6111 = &this_129(D)->_traffic;
  pretmp_5826 = &this_129(D)->_last_class;
  pretmp_5446 = &this_129(D)->_qtime;
  pretmp_768 = &this_129(D)->_total_in_flight_flits;
  pretmp_5740 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5148 = &this_129(D)->_retired_packets;
  pretmp_7411 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7723 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7859 = &this_129(D)->_pair_plat;
  pretmp_7902 = &this_129(D)->_pair_nlat;
  pretmp_7945 = &this_129(D)->_pair_flat;
  pretmp_7988 = &this_129(D)->_sent_packets;
  pretmp_8031 = &this_129(D)->_accepted_packets;
  pretmp_8074 = &this_129(D)->_sent_flits;
  pretmp_8117 = &this_129(D)->_accepted_flits;
  pretmp_8160 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 231>:
  # DEBUG D#195 => &D.73659
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73659
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73658, "write_request_size");
  goto <bb 233>;

<L596>:
  pretmp_2986 = &this_129(D)->_packet_size;
  pretmp_4890 = &this_129(D)->_packet_size_rate;
  pretmp_6108 = &this_129(D)->_traffic;
  pretmp_5832 = &this_129(D)->_last_class;
  pretmp_5809 = &this_129(D)->_qtime;
  pretmp_4886 = &this_129(D)->_total_in_flight_flits;
  pretmp_5744 = &this_129(D)->_measured_in_flight_flits;
  pretmp_775 = &this_129(D)->_retired_packets;
  pretmp_7409 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7721 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7857 = &this_129(D)->_pair_plat;
  pretmp_7900 = &this_129(D)->_pair_nlat;
  pretmp_7943 = &this_129(D)->_pair_flat;
  pretmp_7986 = &this_129(D)->_sent_packets;
  pretmp_8029 = &this_129(D)->_accepted_packets;
  pretmp_8072 = &this_129(D)->_sent_flits;
  pretmp_8115 = &this_129(D)->_accepted_flits;
  pretmp_8158 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 233>:
  D.73657 = Configuration::GetIntArray (config_173(D), &D.73658); [return slot optimization]

  <bb 234>:
  _409 = &this_129(D)->_write_request_size;
  std::vector<int>::operator= (_409, &D.73657);

  <bb 235>:
  # DEBUG this => &D.73657
  # DEBUG D#476 => &D.73657.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73657.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73657.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73657.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _412 = MEM[(struct _Vector_base *)&D.73657]._M_impl._M_start;
  # DEBUG D#473 => (long int) _412
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _412
  # DEBUG __n => D#470
  if (_412 != 0B)
    goto <bb 236>;
  else
    goto <bb 237>;

  <bb 236>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _412
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _412
  # DEBUG this => D#462
  # DEBUG D.148820 => D#463
  operator delete (_412);

  <bb 237>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73657 ={v} {CLOBBER};
  # DEBUG this => &D.73658
  # DEBUG this => &D.73658
  # DEBUG this => &D.73658
  _414 = MEM[(char * *)&D.73658];
  # DEBUG D#1 => &D.73658
  # DEBUG this => D#1
  # DEBUG this => &D.73658
  if (&D.73658.D.11539._M_local_buf != _414)
    goto <bb 238>;
  else
    goto <bb 239>;

  <bb 238>:
  # DEBUG D#629 => D.73658.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73658
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73658
  # DEBUG this => D#1
  # DEBUG this => &D.73658
  # DEBUG D#626 => &D.73658._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _414
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _414
  # DEBUG this => D#620
  # DEBUG D.148803 => D#621
  operator delete (_414);

  <bb 239>:
  # DEBUG D#630 => &D.73658._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73658 ={v} {CLOBBER};
  # DEBUG this => &D.73659
  # DEBUG this => &D.73659
  # DEBUG D#2799 => &this_129(D)->_write_request_size
  # DEBUG this => D#2799
  _147 = MEM[(int * *)this_129(D) + 368B];
  # DEBUG D#276 => D#2799
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _148 = MEM[(int * *)this_129(D) + 360B];
  # DEBUG D#277 => D#2799
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_147 == _148)
    goto <bb 240>;
  else
    goto <bb 248>;

  <bb 240>:
  # DEBUG D#195 => &D.73662
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73662
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73661, "write_request_size");
  goto <bb 242>;

<L598>:
  pretmp_2992 = &this_129(D)->_packet_size;
  pretmp_5244 = &this_129(D)->_packet_size_rate;
  pretmp_33 = &this_129(D)->_traffic;
  pretmp_5825 = &this_129(D)->_last_class;
  pretmp_6176 = &this_129(D)->_qtime;
  pretmp_5774 = &this_129(D)->_total_in_flight_flits;
  pretmp_6154 = &this_129(D)->_measured_in_flight_flits;
  pretmp_782 = &this_129(D)->_retired_packets;
  pretmp_7406 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7718 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7854 = &this_129(D)->_pair_plat;
  pretmp_7897 = &this_129(D)->_pair_nlat;
  pretmp_7940 = &this_129(D)->_pair_flat;
  pretmp_7983 = &this_129(D)->_sent_packets;
  pretmp_8026 = &this_129(D)->_accepted_packets;
  pretmp_8069 = &this_129(D)->_sent_flits;
  pretmp_8112 = &this_129(D)->_accepted_flits;
  pretmp_8155 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 242>:
  _418 = Configuration::GetInt (config_173(D), &D.73661);

  <bb 243>:
  D.73660 = _418;
  std::vector<int>::push_back (_409, &D.73660);
  goto <bb 245>;

<L600>:
  goto <bb 1464> (<L234>);

  <bb 245>:
  D.73660 ={v} {CLOBBER};
  # DEBUG this => &D.73661
  # DEBUG this => &D.73661
  # DEBUG this => &D.73661
  _424 = MEM[(char * *)&D.73661];
  # DEBUG D#1 => &D.73661
  # DEBUG this => D#1
  # DEBUG this => &D.73661
  if (&D.73661.D.11539._M_local_buf != _424)
    goto <bb 246>;
  else
    goto <bb 247>;

  <bb 246>:
  # DEBUG D#629 => D.73661.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73661
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73661
  # DEBUG this => D#1
  # DEBUG this => &D.73661
  # DEBUG D#626 => &D.73661._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _424
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _424
  # DEBUG this => D#620
  # DEBUG D.148836 => D#621
  operator delete (_424);

  <bb 247>:
  # DEBUG D#630 => &D.73661._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73661 ={v} {CLOBBER};
  # DEBUG this => &D.73662
  # DEBUG this => &D.73662
  pretmp_4364 = MEM[(int * const &)this_129(D) + 368];

  <bb 248>:
  # prephitmp_4365 = PHI <_147(239), pretmp_4364(247)>
  # DEBUG D#2800 => &this_129(D)->_write_request_size
  # DEBUG this => D#2800
  # DEBUG this => D#2800
  # DEBUG D#272 => &D#2800->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _428 = MEM[(int &)prephitmp_4365 + 18446744073709551612];
  _429 = this_129(D)->_classes;
  _430 = (long unsigned int) _429;
  std::vector<int>::resize (_409, _430, _428);
  goto <bb 250>;

<L601>:
  pretmp_2981 = &this_129(D)->_packet_size;
  pretmp_5259 = &this_129(D)->_packet_size_rate;
  pretmp_4970 = &this_129(D)->_traffic;
  pretmp_5831 = &this_129(D)->_last_class;
  pretmp_6174 = &this_129(D)->_qtime;
  pretmp_5913 = &this_129(D)->_total_in_flight_flits;
  pretmp_475 = &this_129(D)->_measured_in_flight_flits;
  pretmp_165 = &this_129(D)->_retired_packets;
  pretmp_7414 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7726 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7862 = &this_129(D)->_pair_plat;
  pretmp_7905 = &this_129(D)->_pair_nlat;
  pretmp_7948 = &this_129(D)->_pair_flat;
  pretmp_7991 = &this_129(D)->_sent_packets;
  pretmp_8034 = &this_129(D)->_accepted_packets;
  pretmp_8077 = &this_129(D)->_sent_flits;
  pretmp_8120 = &this_129(D)->_accepted_flits;
  pretmp_8163 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 250>:
  # DEBUG D#195 => &D.73665
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73665
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73664, "write_reply_size");
  goto <bb 252>;

<L602>:
  pretmp_2999 = &this_129(D)->_packet_size;
  pretmp_4874 = &this_129(D)->_packet_size_rate;
  pretmp_6120 = &this_129(D)->_traffic;
  pretmp_5836 = &this_129(D)->_last_class;
  pretmp_6177 = &this_129(D)->_qtime;
  pretmp_5905 = &this_129(D)->_total_in_flight_flits;
  pretmp_4836 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4785 = &this_129(D)->_retired_packets;
  pretmp_7403 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7715 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7851 = &this_129(D)->_pair_plat;
  pretmp_7894 = &this_129(D)->_pair_nlat;
  pretmp_7937 = &this_129(D)->_pair_flat;
  pretmp_7980 = &this_129(D)->_sent_packets;
  pretmp_8023 = &this_129(D)->_accepted_packets;
  pretmp_8066 = &this_129(D)->_sent_flits;
  pretmp_8109 = &this_129(D)->_accepted_flits;
  pretmp_8152 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 252>:
  D.73663 = Configuration::GetIntArray (config_173(D), &D.73664); [return slot optimization]

  <bb 253>:
  _435 = &this_129(D)->_write_reply_size;
  std::vector<int>::operator= (_435, &D.73663);

  <bb 254>:
  # DEBUG this => &D.73663
  # DEBUG D#476 => &D.73663.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73663.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73663.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73663.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _438 = MEM[(struct _Vector_base *)&D.73663]._M_impl._M_start;
  # DEBUG D#473 => (long int) _438
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _438
  # DEBUG __n => D#470
  if (_438 != 0B)
    goto <bb 255>;
  else
    goto <bb 256>;

  <bb 255>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _438
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _438
  # DEBUG this => D#462
  # DEBUG D.148882 => D#463
  operator delete (_438);

  <bb 256>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73663 ={v} {CLOBBER};
  # DEBUG this => &D.73664
  # DEBUG this => &D.73664
  # DEBUG this => &D.73664
  _440 = MEM[(char * *)&D.73664];
  # DEBUG D#1 => &D.73664
  # DEBUG this => D#1
  # DEBUG this => &D.73664
  if (&D.73664.D.11539._M_local_buf != _440)
    goto <bb 257>;
  else
    goto <bb 258>;

  <bb 257>:
  # DEBUG D#629 => D.73664.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73664
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73664
  # DEBUG this => D#1
  # DEBUG this => &D.73664
  # DEBUG D#626 => &D.73664._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _440
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _440
  # DEBUG this => D#620
  # DEBUG D.148865 => D#621
  operator delete (_440);

  <bb 258>:
  # DEBUG D#630 => &D.73664._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73664 ={v} {CLOBBER};
  # DEBUG this => &D.73665
  # DEBUG this => &D.73665
  # DEBUG D#2801 => &this_129(D)->_write_reply_size
  # DEBUG this => D#2801
  _149 = MEM[(int * *)this_129(D) + 392B];
  # DEBUG D#276 => D#2801
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _150 = MEM[(int * *)this_129(D) + 384B];
  # DEBUG D#277 => D#2801
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_149 == _150)
    goto <bb 259>;
  else
    goto <bb 267>;

  <bb 259>:
  # DEBUG D#195 => &D.73668
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73668
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73667, "write_reply_size");
  goto <bb 261>;

<L604>:
  pretmp_2996 = &this_129(D)->_packet_size;
  pretmp_5277 = &this_129(D)->_packet_size_rate;
  pretmp_35 = &this_129(D)->_traffic;
  pretmp_6190 = &this_129(D)->_last_class;
  pretmp_5811 = &this_129(D)->_qtime;
  pretmp_5778 = &this_129(D)->_total_in_flight_flits;
  pretmp_6162 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6157 = &this_129(D)->_retired_packets;
  pretmp_7400 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7712 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7848 = &this_129(D)->_pair_plat;
  pretmp_7891 = &this_129(D)->_pair_nlat;
  pretmp_7934 = &this_129(D)->_pair_flat;
  pretmp_7977 = &this_129(D)->_sent_packets;
  pretmp_8020 = &this_129(D)->_accepted_packets;
  pretmp_8063 = &this_129(D)->_sent_flits;
  pretmp_8106 = &this_129(D)->_accepted_flits;
  pretmp_8149 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 261>:
  _443 = Configuration::GetInt (config_173(D), &D.73667);

  <bb 262>:
  D.73666 = _443;
  std::vector<int>::push_back (_435, &D.73666);
  goto <bb 264>;

<L606>:
  goto <bb 1478> (<L240>);

  <bb 264>:
  D.73666 ={v} {CLOBBER};
  # DEBUG this => &D.73667
  # DEBUG this => &D.73667
  # DEBUG this => &D.73667
  _449 = MEM[(char * *)&D.73667];
  # DEBUG D#1 => &D.73667
  # DEBUG this => D#1
  # DEBUG this => &D.73667
  if (&D.73667.D.11539._M_local_buf != _449)
    goto <bb 265>;
  else
    goto <bb 266>;

  <bb 265>:
  # DEBUG D#629 => D.73667.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73667
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73667
  # DEBUG this => D#1
  # DEBUG this => &D.73667
  # DEBUG D#626 => &D.73667._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _449
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _449
  # DEBUG this => D#620
  # DEBUG D.148898 => D#621
  operator delete (_449);

  <bb 266>:
  # DEBUG D#630 => &D.73667._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73667 ={v} {CLOBBER};
  # DEBUG this => &D.73668
  # DEBUG this => &D.73668
  pretmp_4367 = MEM[(int * const &)this_129(D) + 392];

  <bb 267>:
  # prephitmp_4369 = PHI <_149(258), pretmp_4367(266)>
  # DEBUG D#2802 => &this_129(D)->_write_reply_size
  # DEBUG this => D#2802
  # DEBUG this => D#2802
  # DEBUG D#272 => &D#2802->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _454 = MEM[(int &)prephitmp_4369 + 18446744073709551612];
  _455 = this_129(D)->_classes;
  _456 = (long unsigned int) _455;
  std::vector<int>::resize (_435, _456, _454);
  goto <bb 269>;

<L607>:
  pretmp_2941 = &this_129(D)->_packet_size;
  pretmp_778 = &this_129(D)->_packet_size_rate;
  pretmp_6112 = &this_129(D)->_traffic;
  pretmp_6188 = &this_129(D)->_last_class;
  pretmp_5805 = &this_129(D)->_qtime;
  pretmp_4969 = &this_129(D)->_total_in_flight_flits;
  pretmp_595 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4884 = &this_129(D)->_retired_packets;
  pretmp_7417 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7729 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7865 = &this_129(D)->_pair_plat;
  pretmp_7908 = &this_129(D)->_pair_nlat;
  pretmp_7951 = &this_129(D)->_pair_flat;
  pretmp_7994 = &this_129(D)->_sent_packets;
  pretmp_8037 = &this_129(D)->_accepted_packets;
  pretmp_8080 = &this_129(D)->_sent_flits;
  pretmp_8123 = &this_129(D)->_accepted_flits;
  pretmp_8166 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 269>:
  # DEBUG D#195 => &D.73671
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73671
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73670, "packet_size");
  goto <bb 271>;

<L608>:
  pretmp_3021 = &this_129(D)->_packet_size;
  pretmp_5230 = &this_129(D)->_packet_size_rate;
  pretmp_6235 = &this_129(D)->_traffic;
  pretmp_5838 = &this_129(D)->_last_class;
  pretmp_6180 = &this_129(D)->_qtime;
  pretmp_6170 = &this_129(D)->_total_in_flight_flits;
  pretmp_5954 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5163 = &this_129(D)->_retired_packets;
  pretmp_7398 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7710 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7846 = &this_129(D)->_pair_plat;
  pretmp_7889 = &this_129(D)->_pair_nlat;
  pretmp_7932 = &this_129(D)->_pair_flat;
  pretmp_7975 = &this_129(D)->_sent_packets;
  pretmp_8018 = &this_129(D)->_accepted_packets;
  pretmp_8061 = &this_129(D)->_sent_flits;
  pretmp_8104 = &this_129(D)->_accepted_flits;
  pretmp_8147 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

  <bb 271>:
  packet_size_str = Configuration::GetStr (config_173(D), &D.73670); [return slot optimization]

  <bb 272>:
  # DEBUG this => &D.73670
  # DEBUG this => &D.73670
  # DEBUG this => &D.73670
  _463 = MEM[(char * *)&D.73670];
  # DEBUG D#1 => &D.73670
  # DEBUG this => D#1
  # DEBUG this => &D.73670
  if (&D.73670.D.11539._M_local_buf != _463)
    goto <bb 273>;
  else
    goto <bb 274>;

  <bb 273>:
  # DEBUG D#629 => D.73670.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73670
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73670
  # DEBUG this => D#1
  # DEBUG this => &D.73670
  # DEBUG D#626 => &D.73670._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _463
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _463
  # DEBUG this => D#620
  # DEBUG D.148925 => D#621
  operator delete (_463);

  <bb 274>:
  # DEBUG D#630 => &D.73670._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73670 ={v} {CLOBBER};
  # DEBUG this => &D.73671
  # DEBUG this => &D.73671
  # DEBUG this => &packet_size_str
  _151 = MEM[(long unsigned int *)&packet_size_str + 8B];
  # DEBUG D#3 => &packet_size_str
  # DEBUG this => D#3
  if (_151 == 0)
    goto <bb 275>;
  else
    goto <bb 288>;

  <bb 275>:
  # DEBUG this => &D.73675
  # DEBUG this => &D.73675
  # DEBUG D#195 => &D.73674
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73674
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73673, "packet_size");

  <bb 276>:
  _467 = Configuration::GetInt (config_173(D), &D.73673);

  <bb 277>:
  # DEBUG this => &D.73672
  # DEBUG __last => _467
  # DEBUG __first => 1
  # DEBUG D#1292 => &D.73672.D.45977
  # DEBUG this => D#1292
  # DEBUG __a => NULL
  # DEBUG D#978 => &D#1292->_M_impl
  # DEBUG this => D#978
  # DEBUG __a => NULL
  # DEBUG this => D#978
  # DEBUG __a => NULL
  # DEBUG this => D#978
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)&D.73672]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73672]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73672]._M_end_of_storage = 0B;
  # DEBUG this => &D.73672
  # DEBUG __value => _467
  # DEBUG __n => 1
  # DEBUG D#1289 => &D.73672.D.45977
  # DEBUG D#1269 => D#1289
  # DEBUG __n => 1
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => 1
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1263
  # DEBUG D.171374 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  _4841 = operator new (4);

  <bb 278>:
  D.73672.D.45977._M_impl._M_start = _4841;
  _4835 = _4841 + 4;
  D.73672.D.45977._M_impl._M_end_of_storage = _4835;
  # DEBUG D#1252 => &D.73672
  # DEBUG D#1252 => &D.73672
  # DEBUG D#1253 => &__value
  # DEBUG __n => 1
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.171349 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG __value => D#1144
  # DEBUG __tmp => _467
  # DEBUG __niter => 1
  # DEBUG __niter => 1
  # DEBUG __first => _4841
  *_4841 = _467;
  # DEBUG __niter => 0
  # DEBUG __first => _4835
  # DEBUG __niter => 0
  # DEBUG __first => _4835
  MEM[(int * *)&D.73672 + 8B] = _4835;
  _469 = &this_129(D)->_packet_size;
  std::vector<std::vector<int> >::push_back (_469, &D.73672);
  goto <bb 283>;

<L531>:
  # DEBUG D#1291 => &D.73672.D.45977
  # DEBUG this => D#1291
  # DEBUG D#475 => D#1291->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _2773 = MEM[(struct _Vector_base *)&D.73672]._M_impl._M_start;
  # DEBUG D#473 => (long int) _2773
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#1291
  # DEBUG __p => _2773
  # DEBUG __n => D#470
  if (_2773 != 0B)
    goto <bb 280>;
  else
    goto <bb 281>;

  <bb 280>:
  # DEBUG D#468 => &D#1291->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _2773
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _2773
  # DEBUG this => D#462
  # DEBUG D.171330 => D#463
  operator delete (_2773);

  <bb 281>:
  # DEBUG D#469 => &D#1291->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)&D.73672] ={v} {CLOBBER};
  resx 740

<L611>:
  pretmp_3025 = &this_129(D)->_packet_size;
  goto <bb 1491> (<L246>);

  <bb 283>:
  # DEBUG this => &D.73672
  # DEBUG D#476 => &D.73672.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73672.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73672.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73672.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _472 = MEM[(struct _Vector_base *)&D.73672]._M_impl._M_start;
  # DEBUG D#473 => (long int) _472
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _472
  # DEBUG __n => D#470
  if (_472 != 0B)
    goto <bb 284>;
  else
    goto <bb 285>;

  <bb 284>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _472
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _472
  # DEBUG this => D#462
  # DEBUG D.148963 => D#463
  operator delete (_472);

  <bb 285>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73672 ={v} {CLOBBER};
  # DEBUG this => &D.73673
  # DEBUG this => &D.73673
  # DEBUG this => &D.73673
  _474 = MEM[(char * *)&D.73673];
  # DEBUG D#1 => &D.73673
  # DEBUG this => D#1
  # DEBUG this => &D.73673
  if (&D.73673.D.11539._M_local_buf != _474)
    goto <bb 286>;
  else
    goto <bb 287>;

  <bb 286>:
  # DEBUG D#629 => D.73673.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73673
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73673
  # DEBUG this => D#1
  # DEBUG this => &D.73673
  # DEBUG D#626 => &D.73673._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _474
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _474
  # DEBUG this => D#620
  # DEBUG D.148946 => D#621
  operator delete (_474);

  <bb 287>:
  # DEBUG D#630 => &D.73673._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73673 ={v} {CLOBBER};
  # DEBUG this => &D.73674
  # DEBUG this => &D.73674
  # DEBUG this => &D.73675
  # DEBUG this => &D.73675
  goto <bb 304>;

  <bb 288>:
  packet_size_strings = tokenize_str (&packet_size_str); [return slot optimization]

  <bb 289>:
  # DEBUG i => 0
  _6100 = MEM[(struct basic_string * *)&packet_size_strings];
  # DEBUG D#65 => &packet_size_strings
  _6099 = MEM[(struct basic_string * *)&packet_size_strings + 8B];
  # DEBUG D#65 => &packet_size_strings
  # DEBUG this => D#65
  # DEBUG this => D#65
  _6098 = (long int) _6099;
  _6097 = (long int) _6100;
  _6096 = _6098 - _6097;
  _6095 = _6096 /[ex] 32;
  if (_6095 != 0)
    goto <bb 291>;
  else
    goto <bb 290>;

  <bb 290>:
  pretmp_3052 = &this_129(D)->_packet_size;
  std::vector<std::__cxx11::basic_string<char> >::~vector (&packet_size_strings);
  packet_size_strings ={v} {CLOBBER};
  goto <bb 304>;

  <bb 291>:
  pretmp_3042 = &this_129(D)->_packet_size;

  <bb 292>:
  # i_6091 = PHI <0(291), i_488(303)>
  # _6006 = PHI <_6100(291), _1966(303)>
  # DEBUG i => i_6091
  # DEBUG D#65 => &packet_size_strings
  # DEBUG this => D#65
  # DEBUG this => D#65
  # DEBUG D#66 => &packet_size_strings
  # DEBUG __n => i_6091
  # DEBUG this => D#66
  _159 = i_6091 * 32;
  _163 = _6006 + _159;
  D.73680 = tokenize_int (_163); [return slot optimization]

  <bb 293>:
  # DEBUG D#4301 => &this_129(D)->_packet_size
  # DEBUG this => D#4301
  # DEBUG __x => &D.73680
  _4843 = MEM[(struct vector *)this_129(D) + 96B].D.53336._M_impl._M_finish;
  _4844 = MEM[(struct vector *)this_129(D) + 96B].D.53336._M_impl._M_end_of_storage;
  if (_4843 != _4844)
    goto <bb 294>;
  else
    goto <bb 298>;

  <bb 294>:
  # DEBUG D#1433 => &D#4301->D.53336._M_impl
  # DEBUG D#1392 => D#1433
  # DEBUG __p => _4843
  # DEBUG __arg => &D.73680
  # DEBUG __a => D#1392
  # DEBUG D#1391 => D#1392
  # DEBUG D#1390 => D#1391
  # DEBUG __p => _4843
  # DEBUG __val => &D.73680
  # DEBUG this => D#1390
  # DEBUG D#20 => 24
  # DEBUG __p => _4843
  # DEBUG D.124741 => D#20
  if (_4843 != 0B)
    goto <bb 295>;
  else
    goto <bb 297>;

  <bb 295>:
  std::vector<int>::vector (_4843, &D.73680);

  <bb 296>:
  pretmp_3044 = MEM[(struct vector *)this_129(D) + 96B].D.53336._M_impl._M_finish;

  <bb 297>:
  # prephitmp_3023 = PHI <_4843(294), pretmp_3044(296)>
  _4846 = prephitmp_3023 + 24;
  MEM[(struct vector *)this_129(D) + 96B].D.53336._M_impl._M_finish = _4846;
  goto <bb 300>;

  <bb 298>:
  # DEBUG this => D#4301
  # DEBUG D#291 => &D#4301->D.53336._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#291
  MEM[(struct __normal_iterator *)&D.171385] = _4843;
  std::vector<std::vector<int> >::_M_insert_aux (pretmp_3042, D.171385, &D.73680);
  goto <bb 300>;

<L615>:
  goto <bb 1499> (<L249>);

  <bb 300>:
  # DEBUG this => &D.73680
  # DEBUG D#476 => &D.73680.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73680.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73680.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73680.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1540 = MEM[(struct _Vector_base *)&D.73680]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1540
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1540
  # DEBUG __n => D#470
  if (_1540 != 0B)
    goto <bb 301>;
  else
    goto <bb 302>;

  <bb 301>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1540
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1540
  # DEBUG this => D#462
  # DEBUG D.148987 => D#463
  operator delete (_1540);

  <bb 302>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73680 ={v} {CLOBBER};
  i_488 = i_6091 + 1;
  # DEBUG i => i_488
  # DEBUG i => i_488
  _1966 = MEM[(struct basic_string * *)&packet_size_strings];
  # DEBUG D#65 => &packet_size_strings
  _1967 = MEM[(struct basic_string * *)&packet_size_strings + 8B];
  # DEBUG D#65 => &packet_size_strings
  # DEBUG this => D#65
  # DEBUG this => D#65
  _461 = (long int) _1967;
  _152 = (long int) _1966;
  _156 = _461 - _152;
  _157 = _156 /[ex] 32;
  _158 = (size_type) _157;
  if (_158 > i_488)
    goto <bb 303>;
  else
    goto <bb 290>;

  <bb 303>:
  goto <bb 292>;

  <bb 304>:
  # prephitmp_2783 = PHI <_469(287), pretmp_3052(290)>
  # DEBUG D#2803 => &this_129(D)->_packet_size
  # DEBUG this => D#2803
  # DEBUG this => D#2803
  # DEBUG D#291 => &D#2803->D.53336._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#291
  _486 = MEM[(struct vector * const &)this_129(D) + 104];
  # DEBUG this => NULL
  # DEBUG __n => 1
  _1539 = _486 + 18446744073709551592;
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  std::vector<int>::vector (&D.73681, _1539);
  goto <bb 306>;

<L616>:
  pretmp_2916 = &this_129(D)->_packet_size_rate;
  pretmp_2905 = &this_129(D)->_traffic;
  pretmp_6062 = &this_129(D)->_last_class;
  pretmp_6070 = &this_129(D)->_qtime;
  pretmp_6077 = &this_129(D)->_total_in_flight_flits;
  pretmp_5994 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6233 = &this_129(D)->_retired_packets;
  pretmp_6555 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7440 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7752 = &this_129(D)->_pair_plat;
  pretmp_7760 = &this_129(D)->_pair_nlat;
  pretmp_7768 = &this_129(D)->_pair_flat;
  pretmp_7776 = &this_129(D)->_sent_packets;
  pretmp_7784 = &this_129(D)->_accepted_packets;
  pretmp_7792 = &this_129(D)->_sent_flits;
  pretmp_7800 = &this_129(D)->_accepted_flits;
  pretmp_7808 = &this_129(D)->_stats;
  goto <bb 2008> (<L447>);

  <bb 306>:
  _496 = this_129(D)->_classes;
  _497 = (long unsigned int) _496;
  std::vector<std::vector<int> >::resize (prephitmp_2783, _497, &D.73681);

  <bb 307>:
  # DEBUG this => &D.73681
  # DEBUG D#476 => &D.73681.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73681.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73681.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73681.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1529 = MEM[(struct _Vector_base *)&D.73681]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1529
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1529
  # DEBUG __n => D#470
  if (_1529 != 0B)
    goto <bb 308>;
  else
    goto <bb 309>;

  <bb 308>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1529
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1529
  # DEBUG this => D#462
  # DEBUG D.149010 => D#463
  operator delete (_1529);

  <bb 309>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73681 ={v} {CLOBBER};
  # DEBUG D#195 => &D.73684
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73684
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73683, "packet_size_rate");
  goto <bb 311>;

<L617>:
  pretmp_2918 = &this_129(D)->_packet_size_rate;
  pretmp_2907 = &this_129(D)->_traffic;
  pretmp_610 = &this_129(D)->_last_class;
  pretmp_6068 = &this_129(D)->_qtime;
  pretmp_6079 = &this_129(D)->_total_in_flight_flits;
  pretmp_5992 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5440 = &this_129(D)->_retired_packets;
  pretmp_6557 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7442 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7754 = &this_129(D)->_pair_plat;
  pretmp_7762 = &this_129(D)->_pair_nlat;
  pretmp_7770 = &this_129(D)->_pair_flat;
  pretmp_7778 = &this_129(D)->_sent_packets;
  pretmp_7786 = &this_129(D)->_accepted_packets;
  pretmp_7794 = &this_129(D)->_sent_flits;
  pretmp_7802 = &this_129(D)->_accepted_flits;
  pretmp_7810 = &this_129(D)->_stats;
  goto <bb 2008> (<L447>);

  <bb 311>:
  packet_size_rate_str = Configuration::GetStr (config_173(D), &D.73683); [return slot optimization]

  <bb 312>:
  # DEBUG this => &D.73683
  # DEBUG this => &D.73683
  # DEBUG this => &D.73683
  _505 = MEM[(char * *)&D.73683];
  # DEBUG D#1 => &D.73683
  # DEBUG this => D#1
  # DEBUG this => &D.73683
  if (&D.73683.D.11539._M_local_buf != _505)
    goto <bb 313>;
  else
    goto <bb 314>;

  <bb 313>:
  # DEBUG D#629 => D.73683.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73683
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73683
  # DEBUG this => D#1
  # DEBUG this => &D.73683
  # DEBUG D#626 => &D.73683._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _505
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _505
  # DEBUG this => D#620
  # DEBUG D.149027 => D#621
  operator delete (_505);

  <bb 314>:
  # DEBUG D#630 => &D.73683._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73683 ={v} {CLOBBER};
  # DEBUG this => &D.73684
  # DEBUG this => &D.73684
  # DEBUG this => &packet_size_rate_str
  _500 = MEM[(long unsigned int *)&packet_size_rate_str + 8B];
  # DEBUG D#3 => &packet_size_rate_str
  # DEBUG this => D#3
  if (_500 == 0)
    goto <bb 315>;
  else
    goto <bb 357>;

  <bb 315>:
  # DEBUG D#195 => &D.73687
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73687
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73686, "packet_size_rate");

  <bb 316>:
  rate_509 = Configuration::GetInt (config_173(D), &D.73686);

  <bb 317>:
  # DEBUG rate => rate_509
  # DEBUG this => &D.73686
  # DEBUG this => &D.73686
  # DEBUG this => &D.73686
  _511 = MEM[(char * *)&D.73686];
  # DEBUG D#1 => &D.73686
  # DEBUG this => D#1
  # DEBUG this => &D.73686
  if (&D.73686.D.11539._M_local_buf != _511)
    goto <bb 318>;
  else
    goto <bb 319>;

  <bb 318>:
  # DEBUG D#629 => D.73686.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73686
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73686
  # DEBUG this => D#1
  # DEBUG this => &D.73686
  # DEBUG D#626 => &D.73686._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _511
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _511
  # DEBUG this => D#620
  # DEBUG D.149045 => D#621
  operator delete (_511);

  <bb 319>:
  # DEBUG D#630 => &D.73686._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73686 ={v} {CLOBBER};
  # DEBUG this => &D.73687
  # DEBUG this => &D.73687
  if (rate_509 < 0)
    goto <bb 322>;
  else
    goto <bb 320>;

  <bb 320>:
  # DEBUG c => 0
  _6115 = this_129(D)->_classes;
  if (_6115 <= 0)
    goto <bb 321>;
  else
    goto <bb 323>;

  <bb 321>:
  # DEBUG D#195 => &D.73714
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73714
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73713, "injection_rate");
  goto <bb 420>;

  <bb 322>:
  __assert_fail ("rate >= 0", "trafficmanager.cpp", 173, &__PRETTY_FUNCTION__);

  <bb 323>:
  pretmp_3101 = &this_129(D)->_packet_size_rate;

  <bb 324>:
  # c_6090 = PHI <0(323), c_529(356)>
  # DEBUG c => c_6090
  _513 = (long unsigned int) c_6090;
  # DEBUG D#2804 => &this_129(D)->_packet_size
  _1971 = MEM[(struct vector * *)this_129(D) + 96B];
  # DEBUG D#67 => D#2804
  # DEBUG __n => _513
  # DEBUG this => D#67
  _1472 = _513 * 24;
  _1468 = _1971 + _1472;
  _1982 = MEM[(int * *)_1468];
  _1983 = MEM[(int * *)_1468 + 8B];
  # DEBUG this => D#68
  # DEBUG this => D#68
  _1510 = (long int) _1983;
  _1500 = (long int) _1982;
  _1499 = _1510 - _1500;
  _1482 = _1499 /[ex] 4;
  size_515 = (int) _1482;
  # DEBUG size => size_515
  # DEBUG this => &D.73692
  # DEBUG this => &D.73692
  # DEBUG this => &D.73691
  # DEBUG __first => size_515
  # DEBUG __last => rate_509
  # DEBUG __a => &D.73692
  # DEBUG D#1292 => &D.73691.D.45977
  # DEBUG this => D#1292
  # DEBUG __a => &D.73692
  # DEBUG D#978 => &D#1292->_M_impl
  # DEBUG this => D#978
  # DEBUG __a => &D.73692
  # DEBUG this => D#978
  # DEBUG __a => &D.73692
  # DEBUG this => D#978
  # DEBUG D.119037 => &D.73692
  MEM[(struct _Vector_impl *)&D.73691]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73691]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73691]._M_end_of_storage = 0B;
  # DEBUG this => &D.73691
  # DEBUG __n => size_515
  # DEBUG __value => rate_509
  __n_517 = (size_type) size_515;
  # DEBUG D#1289 => &D.73691.D.45977
  # DEBUG D#1269 => D#1289
  # DEBUG __n => __n_517
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  if (__n_517 != 0)
    goto <bb 325>;
  else
    goto <bb 2291>;

  <bb 325>:
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => __n_517
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => __n_517
  # DEBUG this => D#1263
  # DEBUG D.171443 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  if (__n_517 > 4611686018427387903)
    goto <bb 326>;
  else
    goto <bb 327>;

  <bb 326>:
  std::__throw_bad_alloc ();

  <bb 327>:
  _4854 = __n_517 * 4;
  _4855 = operator new (_4854);
  goto <bb 329>;

<L620>:
  goto <bb 336> (<L532>);

  <bb 329>:
  D.73691.D.45977._M_impl._M_start = _4855;
  _4849 = _4855 + _4854;
  D.73691.D.45977._M_impl._M_end_of_storage = _4849;
  # DEBUG D#1252 => &D.73691
  # DEBUG D#1252 => &D.73691
  # DEBUG D#1253 => &__value
  # DEBUG __n => __n_517
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => __n_517
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.171418 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => __n_517
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => __n_517
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => __n_517
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_517
  # DEBUG __value => D#1144
  # DEBUG __tmp => rate_509
  # DEBUG __niter => __n_517
  # DEBUG __niter => __n_517
  # DEBUG __first => _4855
  if (__n_517 == 0)
    goto <bb 334>;
  else
    goto <bb 330>;

  <bb 330>:

  <bb 331>:
  # __n_6018 = PHI <__n_517(330), __n_4852(333)>
  # __first_5888 = PHI <_4855(330), __first_4853(333)>
  # DEBUG __niter => __n_6018
  # DEBUG __first => __first_5888
  *__first_5888 = rate_509;
  __n_4852 = __n_6018 + 18446744073709551615;
  # DEBUG __niter => __n_4852
  __first_4853 = __first_5888 + 4;
  # DEBUG __first => __first_4853
  # DEBUG __niter => __n_4852
  # DEBUG __first => __first_4853
  if (__n_4852 == 0)
    goto <bb 332>;
  else
    goto <bb 333>;

  <bb 332>:
  _6014 = (int) _1482;
  _5978 = (long unsigned int) _6014;
  _5982 = _5978 * 4;
  __first_4632 = _4855 + _5982;
  goto <bb 334>;

  <bb 333>:
  goto <bb 331>;

  <bb 334>:
  # __first_6021 = PHI <__first_4632(332), _4855(329), 0B(2291)>
  # prephitmp_3085 = PHI <_4855(332), _4855(329), 0B(2291)>
  MEM[(int * *)&D.73691 + 8B] = __first_6021;
  # DEBUG D#4300 => &this_129(D)->_packet_size_rate
  # DEBUG this => D#4300
  # DEBUG __x => &D.73691
  _4857 = MEM[(struct vector *)this_129(D) + 120B].D.53336._M_impl._M_finish;
  _4858 = MEM[(struct vector *)this_129(D) + 120B].D.53336._M_impl._M_end_of_storage;
  if (_4857 != _4858)
    goto <bb 340>;
  else
    goto <bb 344>;

<L619>:

<L532>:
  # DEBUG D#1291 => &D.73691.D.45977
  # DEBUG this => D#1291
  # DEBUG D#475 => D#1291->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _485 = MEM[(struct _Vector_base *)&D.73691]._M_impl._M_start;
  # DEBUG D#473 => (long int) _485
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#1291
  # DEBUG __p => _485
  # DEBUG __n => D#470
  if (_485 != 0B)
    goto <bb 337>;
  else
    goto <bb 338>;

  <bb 337>:
  # DEBUG D#468 => &D#1291->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _485
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _485
  # DEBUG this => D#462
  # DEBUG D.171399 => D#463
  operator delete (_485);

  <bb 338>:
  # DEBUG D#469 => &D#1291->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)&D.73691] ={v} {CLOBBER};
  resx 741

<L621>:
  pretmp_4420 = &this_129(D)->_traffic;
  pretmp_2864 = &this_129(D)->_last_class;
  pretmp_2812 = &this_129(D)->_qtime;
  pretmp_2754 = &this_129(D)->_total_in_flight_flits;
  pretmp_2719 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5079 = &this_129(D)->_retired_packets;
  pretmp_6305 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6582 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7467 = &this_129(D)->_pair_plat;
  pretmp_7498 = &this_129(D)->_pair_nlat;
  pretmp_7529 = &this_129(D)->_pair_flat;
  pretmp_7560 = &this_129(D)->_sent_packets;
  pretmp_7591 = &this_129(D)->_accepted_packets;
  pretmp_7622 = &this_129(D)->_sent_flits;
  pretmp_7653 = &this_129(D)->_accepted_flits;
  pretmp_7684 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 340>:
  # DEBUG D#1433 => &D#4300->D.53336._M_impl
  # DEBUG D#1392 => D#1433
  # DEBUG __p => _4857
  # DEBUG __arg => &D.73691
  # DEBUG __a => D#1392
  # DEBUG D#1391 => D#1392
  # DEBUG D#1390 => D#1391
  # DEBUG __p => _4857
  # DEBUG __val => &D.73691
  # DEBUG this => D#1390
  # DEBUG D#20 => 24
  # DEBUG __p => _4857
  # DEBUG D.124741 => D#20
  if (_4857 != 0B)
    goto <bb 341>;
  else
    goto <bb 343>;

  <bb 341>:
  std::vector<int>::vector (_4857, &D.73691);

  <bb 342>:
  pretmp_3048 = MEM[(struct vector *)this_129(D) + 120B].D.53336._M_impl._M_finish;
  pretmp_6136 = MEM[(struct _Vector_base *)&D.73691]._M_impl._M_start;

  <bb 343>:
  # prephitmp_3049 = PHI <_4857(340), pretmp_3048(342)>
  # prephitmp_6270 = PHI <prephitmp_3085(340), pretmp_6136(342)>
  _4860 = prephitmp_3049 + 24;
  MEM[(struct vector *)this_129(D) + 120B].D.53336._M_impl._M_finish = _4860;
  goto <bb 347>;

  <bb 344>:
  # DEBUG this => D#4300
  # DEBUG D#291 => &D#4300->D.53336._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#291
  MEM[(struct __normal_iterator *)&D.171454] = _4857;
  std::vector<std::vector<int> >::_M_insert_aux (pretmp_3101, D.171454, &D.73691);
  goto <bb 346>;

<L623>:
  goto <bb 1519> (<L258>);

  <bb 346>:
  pretmp_5738 = MEM[(struct _Vector_base *)&D.73691]._M_impl._M_start;

  <bb 347>:
  # prephitmp_5739 = PHI <pretmp_5738(346), prephitmp_6270(343)>
  # DEBUG this => &D.73691
  # DEBUG D#476 => &D.73691.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73691.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73691.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73691.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  # DEBUG D#4299 => MEM[(struct _Vector_base *)&D.73691]._M_impl._M_start
  # DEBUG D#473 => (long int) D#4299
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => D#4299
  # DEBUG __n => D#470
  if (prephitmp_5739 != 0B)
    goto <bb 348>;
  else
    goto <bb 349>;

  <bb 348>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => D#4299
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => D#4299
  # DEBUG this => D#462
  # DEBUG D.149074 => D#463
  operator delete (prephitmp_5739);

  <bb 349>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73691 ={v} {CLOBBER};
  # DEBUG this => &D.73692
  # DEBUG this => &D.73692
  _523 = rate_509 * size_515;
  _524 = _523 + -1;
  D.73693 = _524;
  # DEBUG D#4319 => &this_129(D)->_packet_size_max_val
  # DEBUG this => D#4319
  # DEBUG __x => &D.73693
  _519 = MEM[(struct vector *)this_129(D) + 144B].D.45977._M_impl._M_finish;
  _4861 = MEM[(struct vector *)this_129(D) + 144B].D.45977._M_impl._M_end_of_storage;
  if (_519 != _4861)
    goto <bb 350>;
  else
    goto <bb 353>;

  <bb 350>:
  # DEBUG D#1315 => &D#4319->D.45977._M_impl
  # DEBUG D#283 => D#1315
  # DEBUG __p => _519
  # DEBUG __arg => &D.73693
  # DEBUG __a => D#283
  # DEBUG D#282 => D#283
  # DEBUG D#281 => D#282
  # DEBUG __p => _519
  # DEBUG __val => &D.73693
  # DEBUG this => D#281
  # DEBUG D#20 => 4
  # DEBUG __p => _519
  # DEBUG D.113271 => D#20
  if (_519 != 0B)
    goto <bb 351>;
  else
    goto <bb 352>;

  <bb 351>:
  *_519 = _524;

  <bb 352>:
  _4863 = _519 + 4;
  MEM[(struct vector *)this_129(D) + 144B].D.45977._M_impl._M_finish = _4863;
  goto <bb 355>;

  <bb 353>:
  # DEBUG this => D#4319
  # DEBUG D#272 => &D#4319->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  MEM[(struct __normal_iterator *)&D.171463] = _519;
  _526 = &this_129(D)->_packet_size_max_val;
  std::vector<int>::_M_insert_aux (_526, D.171463, &D.73693);
  goto <bb 355>;

<L624>:
  pretmp_4422 = &this_129(D)->_traffic;
  pretmp_2866 = &this_129(D)->_last_class;
  pretmp_2814 = &this_129(D)->_qtime;
  pretmp_2756 = &this_129(D)->_total_in_flight_flits;
  pretmp_2712 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2172 = &this_129(D)->_retired_packets;
  pretmp_6307 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6584 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7469 = &this_129(D)->_pair_plat;
  pretmp_7500 = &this_129(D)->_pair_nlat;
  pretmp_7531 = &this_129(D)->_pair_flat;
  pretmp_7562 = &this_129(D)->_sent_packets;
  pretmp_7593 = &this_129(D)->_accepted_packets;
  pretmp_7624 = &this_129(D)->_sent_flits;
  pretmp_7655 = &this_129(D)->_accepted_flits;
  pretmp_7686 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 355>:
  D.73693 ={v} {CLOBBER};
  c_529 = c_6090 + 1;
  # DEBUG c => c_529
  # DEBUG c => c_529
  _512 = this_129(D)->_classes;
  if (_512 <= c_529)
    goto <bb 396>;
  else
    goto <bb 356>;

  <bb 356>:
  goto <bb 324>;

  <bb 357>:
  packet_size_rate_strings = tokenize_str (&packet_size_rate_str); [return slot optimization]
  goto <bb 359>;

<L625>:
  pretmp_4402 = &this_129(D)->_packet_size_rate;
  pretmp_4424 = &this_129(D)->_traffic;
  pretmp_2852 = &this_129(D)->_last_class;
  pretmp_2816 = &this_129(D)->_qtime;
  pretmp_2757 = &this_129(D)->_total_in_flight_flits;
  pretmp_2713 = &this_129(D)->_measured_in_flight_flits;
  pretmp_1841 = &this_129(D)->_retired_packets;
  pretmp_6308 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6585 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7470 = &this_129(D)->_pair_plat;
  pretmp_7501 = &this_129(D)->_pair_nlat;
  pretmp_7532 = &this_129(D)->_pair_flat;
  pretmp_7563 = &this_129(D)->_sent_packets;
  pretmp_7594 = &this_129(D)->_accepted_packets;
  pretmp_7625 = &this_129(D)->_sent_flits;
  pretmp_7656 = &this_129(D)->_accepted_flits;
  pretmp_7687 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 359>:
  # DEBUG this => &packet_size_rate_strings
  # DEBUG this => &packet_size_rate_strings
  # DEBUG D#295 => &packet_size_rate_strings.D.56332._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#295
  _538 = MEM[(struct basic_string * const &)&packet_size_rate_strings + 8];
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG D#2805 => _538 + 18446744073709551584
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.73696
  # DEBUG __str => D#2805
  # DEBUG this => D#2805
  # DEBUG D#1185 => &MEM[(const struct basic_string *)D#2805]._M_dataplus
  # DEBUG this => &D.73696
  # DEBUG D#1186 => &D.73696._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &D.73696.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73696]._M_p = &D.73696.D.11539._M_local_buf;
  _1463 = MEM[(char * *)_538 + -32B];
  # DEBUG D#1 => D#2805
  # DEBUG this => D#1
  _1458 = MEM[(long unsigned int *)_538 + -24B];
  # DEBUG D#2 => D#2805
  # DEBUG this => D#2
  _1450 = _1463 + _1458;
  # DEBUG D#1 => D#2805
  # DEBUG this => D#1
  # DEBUG this => &D.73696
  # DEBUG __beg => _1463
  # DEBUG __end => _1450
  # DEBUG this => &D.73696
  # DEBUG __beg => _1463
  # DEBUG __end => _1450
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (&D.73696, _1463, _1450);

  <bb 360>:
  _539 = this_129(D)->_classes;
  _540 = (long unsigned int) _539;
  std::vector<std::__cxx11::basic_string<char> >::resize (&packet_size_rate_strings, _540, &D.73696);

  <bb 361>:
  # DEBUG this => &D.73696
  # DEBUG this => &D.73696
  # DEBUG this => &D.73696
  _1441 = MEM[(char * *)&D.73696];
  # DEBUG D#1 => &D.73696
  # DEBUG this => D#1
  # DEBUG this => &D.73696
  if (&D.73696.D.11539._M_local_buf != _1441)
    goto <bb 362>;
  else
    goto <bb 363>;

  <bb 362>:
  # DEBUG D#629 => D.73696.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73696
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73696
  # DEBUG this => D#1
  # DEBUG this => &D.73696
  # DEBUG D#626 => &D.73696._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1441
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1441
  # DEBUG this => D#620
  # DEBUG D.149109 => D#621
  operator delete (_1441);

  <bb 363>:
  # DEBUG D#630 => &D.73696._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73696 ={v} {CLOBBER};
  # DEBUG c => 0
  # DEBUG c => 0
  _6109 = this_129(D)->_classes;
  if (_6109 <= 0)
    goto <bb 364>;
  else
    goto <bb 365>;

  <bb 364>:
  std::vector<std::__cxx11::basic_string<char> >::~vector (&packet_size_rate_strings);
  packet_size_rate_strings ={v} {CLOBBER};
  pretmp_5461 = this_129(D)->_classes;
  goto <bb 397>;

  <bb 365>:
  pretmp_3113 = &this_129(D)->_packet_size_rate;

  <bb 366>:
  # c_6089 = PHI <0(365), c_568(395)>
  # DEBUG c => c_6089
  _544 = (long unsigned int) c_6089;
  _1968 = MEM[(struct basic_string * *)&packet_size_rate_strings];
  # DEBUG D#66 => &packet_size_rate_strings
  # DEBUG __n => _544
  # DEBUG this => D#66
  _1430 = _544 * 32;
  _1424 = _1968 + _1430;
  rates = tokenize_int (_1424); [return slot optimization]
  goto <bb 368>;

<L627>:
  goto <bb 1533> (<L264>);

  <bb 368>:
  # DEBUG this => &rates
  # DEBUG this => &rates
  # DEBUG D#272 => &rates.D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  _1185 = MEM[(int * const &)&rates + 8];
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _548 = MEM[(int &)_1185 + 18446744073709551612];
  # DEBUG D#2806 => &this_129(D)->_packet_size
  _1972 = MEM[(struct vector * *)this_129(D) + 96B];
  # DEBUG D#67 => D#2806
  # DEBUG __n => _544
  # DEBUG this => D#67
  _1372 = _544 * 24;
  _1186 = _1972 + _1372;
  _1984 = MEM[(int * *)_1186];
  _1985 = MEM[(int * *)_1186 + 8B];
  # DEBUG this => D#68
  # DEBUG this => D#68
  _1413 = (long int) _1985;
  _1400 = (long int) _1984;
  _1396 = _1413 - _1400;
  _1390 = _1396 /[ex] 4;
  _1382 = (size_type) _1390;
  std::vector<int>::resize (&rates, _1382, _548);

  <bb 369>:
  # DEBUG D#4298 => &this_129(D)->_packet_size_rate
  # DEBUG this => D#4298
  # DEBUG __x => &rates
  _527 = MEM[(struct vector *)this_129(D) + 120B].D.53336._M_impl._M_finish;
  _4864 = MEM[(struct vector *)this_129(D) + 120B].D.53336._M_impl._M_end_of_storage;
  if (_527 != _4864)
    goto <bb 370>;
  else
    goto <bb 375>;

  <bb 370>:
  # DEBUG D#1433 => &D#4298->D.53336._M_impl
  # DEBUG D#1392 => D#1433
  # DEBUG __p => _527
  # DEBUG __arg => &rates
  # DEBUG __a => D#1392
  # DEBUG D#1391 => D#1392
  # DEBUG D#1390 => D#1391
  # DEBUG __p => _527
  # DEBUG __val => &rates
  # DEBUG this => D#1390
  # DEBUG D#20 => 24
  # DEBUG __p => _527
  # DEBUG D.124741 => D#20
  if (_527 != 0B)
    goto <bb 371>;
  else
    goto <bb 374>;

  <bb 371>:
  std::vector<int>::vector (_527, &rates);
  goto <bb 373>;

<L629>:
  goto <bb 1528> (<L262>);

  <bb 373>:
  pretmp_3098 = MEM[(struct vector *)this_129(D) + 120B].D.53336._M_impl._M_finish;

  <bb 374>:
  # prephitmp_3099 = PHI <_527(370), pretmp_3098(373)>
  _4866 = prephitmp_3099 + 24;
  MEM[(struct vector *)this_129(D) + 120B].D.53336._M_impl._M_finish = _4866;
  goto <bb 377>;

  <bb 375>:
  # DEBUG this => D#4298
  # DEBUG D#291 => &D#4298->D.53336._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#291
  MEM[(struct __normal_iterator *)&D.171472] = _527;
  std::vector<std::vector<int> >::_M_insert_aux (pretmp_3113, D.171472, &rates);
  goto <bb 377>;

<L630>:
  goto <bb 1528> (<L262>);

  <bb 377>:
  _1986 = MEM[(int * *)&rates];
  # DEBUG D#68 => &rates
  _1987 = MEM[(int * *)&rates + 8B];
  # DEBUG D#68 => &rates
  # DEBUG this => D#68
  # DEBUG this => D#68
  _1176 = (long int) _1987;
  _1170 = (long int) _1986;
  _1169 = _1176 - _1170;
  _1164 = _1169 /[ex] 4;
  size_554 = (int) _1164;
  # DEBUG size => size_554
  max_val = -1;
  # DEBUG i => 0
  # DEBUG i => 0
  if (size_554 <= 0)
    goto <bb 385>;
  else
    goto <bb 378>;

  <bb 378>:
  # DEBUG D#63 => &rates
  # DEBUG __n => 0
  # DEBUG this => D#63
  rate_6103 = *_1986;
  # DEBUG rate => rate_6103
  if (rate_6103 < 0)
    goto <bb 379>;
  else
    goto <bb 382>;

  <bb 379>:
  __assert_fail ("rate >= 0", "trafficmanager.cpp", 190, &__PRETTY_FUNCTION__);

  <bb 380>:
  _556 = (long unsigned int) i_562;
  # DEBUG D#63 => &rates
  # DEBUG __n => _556
  # DEBUG this => D#63
  _1143 = _556 * 4;
  _1136 = _1986 + _1143;
  rate_558 = *_1136;
  # DEBUG rate => rate_558
  if (rate_558 < 0)
    goto <bb 379>;
  else
    goto <bb 381>;

  <bb 381>:
  goto <bb 383>;

  <bb 382>:

  <bb 383>:
  # i_6088 = PHI <0(382), i_562(381)>
  # rate_5920 = PHI <rate_6103(382), rate_558(381)>
  # prephitmp_3106 = PHI <-1(382), max_val.40_560(381)>
  # DEBUG i => i_6088
  # DEBUG D#63 => &rates
  # DEBUG __n => 0
  # DEBUG this => D#63
  # DEBUG rate => rate_5920
  max_val.40_560 = prephitmp_3106 + rate_5920;
  max_val = max_val.40_560;
  i_562 = i_6088 + 1;
  # DEBUG i => i_562
  # DEBUG i => i_562
  if (size_554 <= i_562)
    goto <bb 384>;
  else
    goto <bb 380>;

  <bb 384>:
  # max_val.40_4686 = PHI <max_val.40_560(383)>

  <bb 385>:
  # prephitmp_3118 = PHI <max_val.40_4686(384), -1(377)>
  # DEBUG D#4318 => &this_129(D)->_packet_size_max_val
  # DEBUG this => D#4318
  # DEBUG __x => &max_val
  _552 = MEM[(struct vector *)this_129(D) + 144B].D.45977._M_impl._M_finish;
  _4867 = MEM[(struct vector *)this_129(D) + 144B].D.45977._M_impl._M_end_of_storage;
  if (_552 != _4867)
    goto <bb 386>;
  else
    goto <bb 389>;

  <bb 386>:
  # DEBUG D#1315 => &D#4318->D.45977._M_impl
  # DEBUG D#283 => D#1315
  # DEBUG __p => _552
  # DEBUG __arg => &max_val
  # DEBUG __a => D#283
  # DEBUG D#282 => D#283
  # DEBUG D#281 => D#282
  # DEBUG __p => _552
  # DEBUG __val => &max_val
  # DEBUG this => D#281
  # DEBUG D#20 => 4
  # DEBUG __p => _552
  # DEBUG D.113271 => D#20
  if (_552 != 0B)
    goto <bb 387>;
  else
    goto <bb 388>;

  <bb 387>:
  *_552 = prephitmp_3118;

  <bb 388>:
  _4869 = _552 + 4;
  MEM[(struct vector *)this_129(D) + 144B].D.45977._M_impl._M_finish = _4869;
  goto <bb 392>;

  <bb 389>:
  # DEBUG this => D#4318
  # DEBUG D#272 => &D#4318->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  MEM[(struct __normal_iterator *)&D.171481] = _552;
  _564 = &this_129(D)->_packet_size_max_val;
  std::vector<int>::_M_insert_aux (_564, D.171481, &max_val);
  goto <bb 391>;

<L631>:
  goto <bb 1528> (<L262>);

  <bb 391>:
  pretmp_3119 = MEM[(struct _Vector_base *)&rates]._M_impl._M_start;

  <bb 392>:
  # prephitmp_3105 = PHI <pretmp_3119(391), _1986(388)>
  # DEBUG this => &rates
  # DEBUG D#476 => &rates.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => rates.D.45977._M_impl._M_finish
  # DEBUG D#478 => rates.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &rates.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  # DEBUG D#4297 => MEM[(struct _Vector_base *)&rates]._M_impl._M_start
  # DEBUG D#473 => (long int) D#4297
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => D#4297
  # DEBUG __n => D#470
  if (prephitmp_3105 != 0B)
    goto <bb 393>;
  else
    goto <bb 394>;

  <bb 393>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => D#4297
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => D#4297
  # DEBUG this => D#462
  # DEBUG D.149155 => D#463
  operator delete (prephitmp_3105);

  <bb 394>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  rates ={v} {CLOBBER};
  max_val ={v} {CLOBBER};
  c_568 = c_6089 + 1;
  # DEBUG c => c_568
  # DEBUG c => c_568
  _543 = this_129(D)->_classes;
  if (_543 <= c_568)
    goto <bb 364>;
  else
    goto <bb 395>;

  <bb 395>:
  goto <bb 366>;

  <bb 396>:
  # _5033 = PHI <_512(355)>

  <bb 397>:
  # prephitmp_5462 = PHI <_5033(396), pretmp_5461(364)>
  # DEBUG c => 0
  if (prephitmp_5462 <= 0)
    goto <bb 321>;
  else
    goto <bb 398>;

  <bb 398>:

  <bb 399>:
  # c_6087 = PHI <0(398), c_611(418)>
  # prephitmp_3111 = PHI <prephitmp_5462(398), prephitmp_5212(418)>
  # DEBUG c => c_6087
  _579 = (long unsigned int) c_6087;
  # DEBUG D#2807 => &this_129(D)->_use_read_write
  _1957 = MEM[(int * *)this_129(D) + 264B];
  # DEBUG D#63 => D#2807
  # DEBUG __n => _579
  # DEBUG this => D#63
  _1118 = _579 * 4;
  _1117 = _1957 + _1118;
  _581 = *_1117;
  if (_581 != 0)
    goto <bb 400>;
  else
    goto <bb 417>;

  <bb 400>:
  # DEBUG this => &D.73709
  # DEBUG this => &D.73709
  # DEBUG D#2808 => &this_129(D)->_read_request_size
  _1958 = MEM[(int * *)this_129(D) + 312B];
  # DEBUG D#63 => D#2808
  # DEBUG __n => _579
  # DEBUG this => D#63
  _1041 = _1958 + _1118;
  _582 = *_1041;
  # DEBUG D#2809 => &this_129(D)->_read_reply_size
  _1959 = MEM[(int * *)this_129(D) + 336B];
  # DEBUG D#63 => D#2809
  # DEBUG __n => _579
  # DEBUG this => D#63
  _1058 = _1959 + _1118;
  _583 = *_1058;
  _584 = _582 + _583;
  # DEBUG D#2810 => &this_129(D)->_write_request_size
  _1960 = MEM[(int * *)this_129(D) + 360B];
  # DEBUG D#63 => D#2810
  # DEBUG __n => _579
  # DEBUG this => D#63
  _1079 = _1960 + _1118;
  _585 = *_1079;
  _586 = _584 + _585;
  # DEBUG D#2811 => &this_129(D)->_write_reply_size
  _1961 = MEM[(int * *)this_129(D) + 384B];
  # DEBUG D#63 => D#2811
  # DEBUG __n => _579
  # DEBUG this => D#63
  _1092 = _1961 + _1118;
  _587 = *_1092;
  _588 = _586 + _587;
  _589 = _588 / 2;
  # DEBUG this => &D.73708
  # DEBUG __last => _589
  # DEBUG __first => 1
  # DEBUG D#1292 => &D.73708.D.45977
  # DEBUG this => D#1292
  # DEBUG __a => NULL
  # DEBUG D#978 => &D#1292->_M_impl
  # DEBUG this => D#978
  # DEBUG __a => NULL
  # DEBUG this => D#978
  # DEBUG __a => NULL
  # DEBUG this => D#978
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)&D.73708]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73708]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73708]._M_end_of_storage = 0B;
  # DEBUG this => &D.73708
  # DEBUG __value => _589
  # DEBUG __n => 1
  # DEBUG D#1289 => &D.73708.D.45977
  # DEBUG D#1269 => D#1289
  # DEBUG __n => 1
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => 1
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1263
  # DEBUG D.171539 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  _4878 = operator new (4);

  <bb 401>:
  D.73708.D.45977._M_impl._M_start = _4878;
  _4872 = _4878 + 4;
  D.73708.D.45977._M_impl._M_end_of_storage = _4872;
  # DEBUG D#1252 => &D.73708
  # DEBUG D#1252 => &D.73708
  # DEBUG D#1253 => &__value
  # DEBUG __n => 1
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.171514 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG __value => D#1144
  # DEBUG __tmp => _589
  # DEBUG __niter => 1
  # DEBUG __niter => 1
  # DEBUG __first => _4878
  *_4878 = _589;
  # DEBUG __niter => 0
  # DEBUG __first => _4872
  # DEBUG __niter => 0
  # DEBUG __first => _4872
  MEM[(int * *)&D.73708 + 8B] = _4872;
  # DEBUG D#2812 => &this_129(D)->_packet_size
  _1973 = MEM[(struct vector * *)this_129(D) + 96B];
  # DEBUG D#67 => D#2812
  # DEBUG __n => _579
  # DEBUG this => D#67
  _1028 = _579 * 24;
  _1015 = _1973 + _1028;
  std::vector<int>::operator= (_1015, &D.73708);
  goto <bb 406>;

<L533>:
  # DEBUG D#1291 => &D.73708.D.45977
  # DEBUG this => D#1291
  # DEBUG D#475 => D#1291->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _565 = MEM[(struct _Vector_base *)&D.73708]._M_impl._M_start;
  # DEBUG D#473 => (long int) _565
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#1291
  # DEBUG __p => _565
  # DEBUG __n => D#470
  if (_565 != 0B)
    goto <bb 403>;
  else
    goto <bb 404>;

  <bb 403>:
  # DEBUG D#468 => &D#1291->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _565
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _565
  # DEBUG this => D#462
  # DEBUG D.171495 => D#463
  operator delete (_565);

  <bb 404>:
  # DEBUG D#469 => &D#1291->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)&D.73708] ={v} {CLOBBER};
  resx 742

<L632>:
  pretmp_2745 = &this_129(D)->_packet_size_rate;
  pretmp_4426 = &this_129(D)->_traffic;
  pretmp_2854 = &this_129(D)->_last_class;
  pretmp_2818 = &this_129(D)->_qtime;
  pretmp_2760 = &this_129(D)->_total_in_flight_flits;
  pretmp_2706 = &this_129(D)->_measured_in_flight_flits;
  pretmp_11 = &this_129(D)->_retired_packets;
  pretmp_6310 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6587 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7472 = &this_129(D)->_pair_plat;
  pretmp_7503 = &this_129(D)->_pair_nlat;
  pretmp_7534 = &this_129(D)->_pair_flat;
  pretmp_7565 = &this_129(D)->_sent_packets;
  pretmp_7596 = &this_129(D)->_accepted_packets;
  pretmp_7627 = &this_129(D)->_sent_flits;
  pretmp_7658 = &this_129(D)->_accepted_flits;
  pretmp_7689 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 406>:
  # DEBUG this => &D.73708
  # DEBUG D#476 => &D.73708.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73708.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73708.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73708.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _594 = MEM[(struct _Vector_base *)&D.73708]._M_impl._M_start;
  # DEBUG D#473 => (long int) _594
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _594
  # DEBUG __n => D#470
  if (_594 != 0B)
    goto <bb 407>;
  else
    goto <bb 408>;

  <bb 407>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _594
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _594
  # DEBUG this => D#462
  # DEBUG D.149198 => D#463
  operator delete (_594);

  <bb 408>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73708 ={v} {CLOBBER};
  # DEBUG this => &D.73709
  # DEBUG this => &D.73709
  # DEBUG this => &D.73711
  # DEBUG this => &D.73711
  # DEBUG this => &D.73710
  # DEBUG __last => 1
  # DEBUG __first => 1
  # DEBUG D#1292 => &D.73710.D.45977
  # DEBUG this => D#1292
  # DEBUG __a => NULL
  # DEBUG D#978 => &D#1292->_M_impl
  # DEBUG this => D#978
  # DEBUG __a => NULL
  # DEBUG this => D#978
  # DEBUG __a => NULL
  # DEBUG this => D#978
  # DEBUG D.119037 => NULL
  MEM[(struct _Vector_impl *)&D.73710]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73710]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73710]._M_end_of_storage = 0B;
  # DEBUG this => &D.73710
  # DEBUG __value => 1
  # DEBUG __n => 1
  # DEBUG D#1289 => &D.73710.D.45977
  # DEBUG D#1269 => D#1289
  # DEBUG __n => 1
  # DEBUG this => D#1269
  # DEBUG D#1268 => D#1269
  # DEBUG D#1267 => &D#1268->_M_impl
  # DEBUG D#1266 => D#1267
  # DEBUG __n => 1
  # DEBUG __a => D#1266
  # DEBUG D#1265 => D#1266
  # DEBUG D#1263 => D#1265
  # DEBUG D#1264 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1263
  # DEBUG D.171599 => D#1264
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => D#1262
  # DEBUG this => D#1261
  _4889 = operator new (4);

  <bb 409>:
  D.73710.D.45977._M_impl._M_start = _4889;
  _4883 = _4889 + 4;
  D.73710.D.45977._M_impl._M_end_of_storage = _4883;
  # DEBUG D#1252 => &D.73710
  # DEBUG D#1252 => &D.73710
  # DEBUG D#1253 => &__value
  # DEBUG __n => 1
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.171574 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => 1
  # DEBUG __value => D#1144
  # DEBUG __tmp => 1
  # DEBUG __niter => 1
  # DEBUG __niter => 1
  # DEBUG __first => _4889
  *_4889 = 1;
  # DEBUG __niter => 0
  # DEBUG __first => _4883
  # DEBUG __niter => 0
  # DEBUG __first => _4883
  MEM[(int * *)&D.73710 + 8B] = _4883;
  # DEBUG D#2813 => &this_129(D)->_packet_size_rate
  _1974 = MEM[(struct vector * *)this_129(D) + 120B];
  # DEBUG D#67 => D#2813
  # DEBUG __n => _579
  # DEBUG this => D#67
  _1006 = _1974 + _1028;
  std::vector<int>::operator= (_1006, &D.73710);
  goto <bb 414>;

<L534>:
  # DEBUG D#1291 => &D.73710.D.45977
  # DEBUG this => D#1291
  # DEBUG D#475 => D#1291->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _4880 = MEM[(struct _Vector_base *)&D.73710]._M_impl._M_start;
  # DEBUG D#473 => (long int) _4880
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#1291
  # DEBUG __p => _4880
  # DEBUG __n => D#470
  if (_4880 != 0B)
    goto <bb 411>;
  else
    goto <bb 412>;

  <bb 411>:
  # DEBUG D#468 => &D#1291->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _4880
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _4880
  # DEBUG this => D#462
  # DEBUG D.171555 => D#463
  operator delete (_4880);

  <bb 412>:
  # DEBUG D#469 => &D#1291->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)&D.73710] ={v} {CLOBBER};
  resx 743

<L633>:
  pretmp_2747 = &this_129(D)->_packet_size_rate;
  pretmp_4429 = &this_129(D)->_traffic;
  pretmp_2856 = &this_129(D)->_last_class;
  pretmp_2805 = &this_129(D)->_qtime;
  pretmp_2762 = &this_129(D)->_total_in_flight_flits;
  pretmp_2708 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6126 = &this_129(D)->_retired_packets;
  pretmp_6312 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6589 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7474 = &this_129(D)->_pair_plat;
  pretmp_7505 = &this_129(D)->_pair_nlat;
  pretmp_7536 = &this_129(D)->_pair_flat;
  pretmp_7567 = &this_129(D)->_sent_packets;
  pretmp_7598 = &this_129(D)->_accepted_packets;
  pretmp_7629 = &this_129(D)->_sent_flits;
  pretmp_7660 = &this_129(D)->_accepted_flits;
  pretmp_7691 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 414>:
  # DEBUG this => &D.73710
  # DEBUG D#476 => &D.73710.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73710.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73710.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73710.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _601 = MEM[(struct _Vector_base *)&D.73710]._M_impl._M_start;
  # DEBUG D#473 => (long int) _601
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _601
  # DEBUG __n => D#470
  if (_601 != 0B)
    goto <bb 415>;
  else
    goto <bb 416>;

  <bb 415>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _601
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _601
  # DEBUG this => D#462
  # DEBUG D.149223 => D#463
  operator delete (_601);

  <bb 416>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73710 ={v} {CLOBBER};
  # DEBUG this => &D.73711
  # DEBUG this => &D.73711
  # DEBUG D#2814 => &this_129(D)->_packet_size_max_val
  _1962 = MEM[(int * *)this_129(D) + 144B];
  # DEBUG D#63 => D#2814
  # DEBUG __n => _579
  # DEBUG this => D#63
  _981 = _1962 + _1118;
  *_981 = 0;
  pretmp_6249 = this_129(D)->_classes;

  <bb 417>:
  # prephitmp_5212 = PHI <prephitmp_3111(399), pretmp_6249(416)>
  c_611 = c_6087 + 1;
  # DEBUG c => c_611
  # DEBUG c => c_611
  if (c_611 >= prephitmp_5212)
    goto <bb 321>;
  else
    goto <bb 418>;

  <bb 418>:
  goto <bb 399>;

<L634>:
  pretmp_4405 = &this_129(D)->_packet_size_rate;
  pretmp_4431 = &this_129(D)->_traffic;
  pretmp_2859 = &this_129(D)->_last_class;
  pretmp_2807 = &this_129(D)->_qtime;
  pretmp_2765 = &this_129(D)->_total_in_flight_flits;
  pretmp_2701 = &this_129(D)->_measured_in_flight_flits;
  pretmp_415 = &this_129(D)->_retired_packets;
  pretmp_6314 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6591 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7476 = &this_129(D)->_pair_plat;
  pretmp_7507 = &this_129(D)->_pair_nlat;
  pretmp_7538 = &this_129(D)->_pair_flat;
  pretmp_7569 = &this_129(D)->_sent_packets;
  pretmp_7600 = &this_129(D)->_accepted_packets;
  pretmp_7631 = &this_129(D)->_sent_flits;
  pretmp_7662 = &this_129(D)->_accepted_flits;
  pretmp_7693 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 420>:
  D.73712 = Configuration::GetFloatArray (config_173(D), &D.73713); [return slot optimization]

  <bb 421>:
  _614 = &this_129(D)->_load;
  std::vector<double>::operator= (_614, &D.73712);

  <bb 422>:
  # DEBUG this => &D.73712
  # DEBUG D#503 => &D.73712.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73712.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73712.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73712.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _617 = MEM[(struct _Vector_base *)&D.73712]._M_impl._M_start;
  # DEBUG D#500 => (long int) _617
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _617
  # DEBUG __n => D#497
  if (_617 != 0B)
    goto <bb 423>;
  else
    goto <bb 424>;

  <bb 423>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _617
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _617
  # DEBUG this => D#489
  # DEBUG D.149260 => D#490
  operator delete (_617);

  <bb 424>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73712 ={v} {CLOBBER};
  # DEBUG this => &D.73713
  # DEBUG this => &D.73713
  # DEBUG this => &D.73713
  _619 = MEM[(char * *)&D.73713];
  # DEBUG D#1 => &D.73713
  # DEBUG this => D#1
  # DEBUG this => &D.73713
  if (&D.73713.D.11539._M_local_buf != _619)
    goto <bb 425>;
  else
    goto <bb 426>;

  <bb 425>:
  # DEBUG D#629 => D.73713.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73713
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73713
  # DEBUG this => D#1
  # DEBUG this => &D.73713
  # DEBUG D#626 => &D.73713._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _619
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _619
  # DEBUG this => D#620
  # DEBUG D.149243 => D#621
  operator delete (_619);

  <bb 426>:
  # DEBUG D#630 => &D.73713._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73713 ={v} {CLOBBER};
  # DEBUG this => &D.73714
  # DEBUG this => &D.73714
  # DEBUG D#2815 => &this_129(D)->_load
  # DEBUG this => D#2815
  _599 = MEM[(double * *)this_129(D) + 248B];
  # DEBUG D#284 => D#2815
  # DEBUG this => D#284
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _980 = MEM[(double * *)this_129(D) + 240B];
  # DEBUG D#285 => D#2815
  # DEBUG this => D#285
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_599 == _980)
    goto <bb 427>;
  else
    goto <bb 435>;

  <bb 427>:
  # DEBUG D#195 => &D.73717
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73717
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73716, "injection_rate");
  goto <bb 429>;

<L636>:
  pretmp_4392 = &this_129(D)->_packet_size_rate;
  pretmp_4411 = &this_129(D)->_traffic;
  pretmp_2876 = &this_129(D)->_last_class;
  pretmp_2840 = &this_129(D)->_qtime;
  pretmp_2776 = &this_129(D)->_total_in_flight_flits;
  pretmp_2721 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2452 = &this_129(D)->_retired_packets;
  pretmp_6298 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6575 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7460 = &this_129(D)->_pair_plat;
  pretmp_7491 = &this_129(D)->_pair_nlat;
  pretmp_7522 = &this_129(D)->_pair_flat;
  pretmp_7553 = &this_129(D)->_sent_packets;
  pretmp_7584 = &this_129(D)->_accepted_packets;
  pretmp_7615 = &this_129(D)->_sent_flits;
  pretmp_7646 = &this_129(D)->_accepted_flits;
  pretmp_7677 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 429>:
  _624 = Configuration::GetFloat (config_173(D), &D.73716);

  <bb 430>:
  D.73715 = _624;
  std::vector<double>::push_back (_614, &D.73715);
  goto <bb 432>;

<L638>:
  goto <bb 1553> (<L274>);

  <bb 432>:
  D.73715 ={v} {CLOBBER};
  # DEBUG this => &D.73716
  # DEBUG this => &D.73716
  # DEBUG this => &D.73716
  _630 = MEM[(char * *)&D.73716];
  # DEBUG D#1 => &D.73716
  # DEBUG this => D#1
  # DEBUG this => &D.73716
  if (&D.73716.D.11539._M_local_buf != _630)
    goto <bb 433>;
  else
    goto <bb 434>;

  <bb 433>:
  # DEBUG D#629 => D.73716.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73716
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73716
  # DEBUG this => D#1
  # DEBUG this => &D.73716
  # DEBUG D#626 => &D.73716._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _630
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _630
  # DEBUG this => D#620
  # DEBUG D.149276 => D#621
  operator delete (_630);

  <bb 434>:
  # DEBUG D#630 => &D.73716._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73716 ={v} {CLOBBER};
  # DEBUG this => &D.73717
  # DEBUG this => &D.73717
  pretmp_4435 = MEM[(double * const &)this_129(D) + 248];

  <bb 435>:
  # prephitmp_4436 = PHI <_599(426), pretmp_4435(434)>
  # DEBUG D#2816 => &this_129(D)->_load
  # DEBUG this => D#2816
  # DEBUG this => D#2816
  # DEBUG D#286 => &D#2816->D.55581._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#286
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _634 = MEM[(double &)prephitmp_4436 + 18446744073709551608];
  _635 = this_129(D)->_classes;
  _636 = (long unsigned int) _635;
  std::vector<double>::resize (_614, _636, _634);
  goto <bb 437>;

<L639>:
  pretmp_4379 = &this_129(D)->_packet_size_rate;
  pretmp_4407 = &this_129(D)->_traffic;
  pretmp_2900 = &this_129(D)->_last_class;
  pretmp_2843 = &this_129(D)->_qtime;
  pretmp_2797 = &this_129(D)->_total_in_flight_flits;
  pretmp_2770 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2696 = &this_129(D)->_retired_packets;
  pretmp_6287 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6564 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7449 = &this_129(D)->_pair_plat;
  pretmp_7480 = &this_129(D)->_pair_nlat;
  pretmp_7511 = &this_129(D)->_pair_flat;
  pretmp_7542 = &this_129(D)->_sent_packets;
  pretmp_7573 = &this_129(D)->_accepted_packets;
  pretmp_7604 = &this_129(D)->_sent_flits;
  pretmp_7635 = &this_129(D)->_accepted_flits;
  pretmp_7666 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 437>:
  # DEBUG D#195 => &D.73719
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73719
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73718, "injection_rate_uses_flits");
  goto <bb 439>;

<L640>:
  pretmp_4395 = &this_129(D)->_packet_size_rate;
  pretmp_4414 = &this_129(D)->_traffic;
  pretmp_2879 = &this_129(D)->_last_class;
  pretmp_2822 = &this_129(D)->_qtime;
  pretmp_2778 = &this_129(D)->_total_in_flight_flits;
  pretmp_2723 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2454 = &this_129(D)->_retired_packets;
  pretmp_6300 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6577 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7462 = &this_129(D)->_pair_plat;
  pretmp_7493 = &this_129(D)->_pair_nlat;
  pretmp_7524 = &this_129(D)->_pair_flat;
  pretmp_7555 = &this_129(D)->_sent_packets;
  pretmp_7586 = &this_129(D)->_accepted_packets;
  pretmp_7617 = &this_129(D)->_sent_flits;
  pretmp_7648 = &this_129(D)->_accepted_flits;
  pretmp_7679 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 439>:
  _641 = Configuration::GetInt (config_173(D), &D.73718);

  <bb 440>:
  # DEBUG this => &D.73718
  # DEBUG this => &D.73718
  # DEBUG this => &D.73718
  _643 = MEM[(char * *)&D.73718];
  # DEBUG D#1 => &D.73718
  # DEBUG this => D#1
  # DEBUG this => &D.73718
  if (&D.73718.D.11539._M_local_buf != _643)
    goto <bb 441>;
  else
    goto <bb 442>;

  <bb 441>:
  # DEBUG D#629 => D.73718.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73718
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73718
  # DEBUG this => D#1
  # DEBUG this => &D.73718
  # DEBUG D#626 => &D.73718._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _643
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _643
  # DEBUG this => D#620
  # DEBUG D.149301 => D#621
  operator delete (_643);

  <bb 442>:
  # DEBUG D#630 => &D.73718._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73718 ={v} {CLOBBER};
  # DEBUG this => &D.73719
  # DEBUG this => &D.73719
  if (_641 != 0)
    goto <bb 444>;
  else
    goto <bb 443>;

  <bb 443>:
  # DEBUG D#195 => &D.73725
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73725
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73724, "traffic");
  goto <bb 449>;

  <bb 444>:
  # DEBUG c => 0
  _6236 = this_129(D)->_classes;
  if (_6236 <= 0)
    goto <bb 443>;
  else
    goto <bb 445>;

  <bb 445>:
  pretmp_3161 = MEM[(double * *)this_129(D) + 240B];

  <bb 446>:
  # c_6086 = PHI <0(445), c_650(447)>
  # DEBUG c => c_6086
  _645 = TrafficManager::_GetAveragePacketSize (this_129(D), c_6086);
  _646 = (long unsigned int) c_6086;
  # DEBUG D#2817 => &this_129(D)->_load
  # DEBUG D#69 => D#2817
  # DEBUG __n => _646
  # DEBUG this => D#69
  _945 = _646 * 8;
  _934 = pretmp_3161 + _945;
  _647 = *_934;
  _648 = _647 / _645;
  *_934 = _648;
  c_650 = c_6086 + 1;
  # DEBUG c => c_650
  # DEBUG c => c_650
  if (c_650 >= _6236)
    goto <bb 443>;
  else
    goto <bb 447>;

  <bb 447>:
  goto <bb 446>;

<L641>:
  pretmp_4397 = &this_129(D)->_packet_size_rate;
  pretmp_4416 = &this_129(D)->_traffic;
  pretmp_2881 = &this_129(D)->_last_class;
  pretmp_2824 = &this_129(D)->_qtime;
  pretmp_2750 = &this_129(D)->_total_in_flight_flits;
  pretmp_2716 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5370 = &this_129(D)->_retired_packets;
  pretmp_6302 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6579 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7464 = &this_129(D)->_pair_plat;
  pretmp_7495 = &this_129(D)->_pair_nlat;
  pretmp_7526 = &this_129(D)->_pair_flat;
  pretmp_7557 = &this_129(D)->_sent_packets;
  pretmp_7588 = &this_129(D)->_accepted_packets;
  pretmp_7619 = &this_129(D)->_sent_flits;
  pretmp_7650 = &this_129(D)->_accepted_flits;
  pretmp_7681 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 449>:
  D.73723 = Configuration::GetStrArray (config_173(D), &D.73724); [return slot optimization]

  <bb 450>:
  _653 = &this_129(D)->_traffic;
  std::vector<std::__cxx11::basic_string<char> >::operator= (_653, &D.73723);

  <bb 451>:
  std::vector<std::__cxx11::basic_string<char> >::~vector (&D.73723);
  D.73723 ={v} {CLOBBER};
  # DEBUG this => &D.73724
  # DEBUG this => &D.73724
  # DEBUG this => &D.73724
  _659 = MEM[(char * *)&D.73724];
  # DEBUG D#1 => &D.73724
  # DEBUG this => D#1
  # DEBUG this => &D.73724
  if (&D.73724.D.11539._M_local_buf != _659)
    goto <bb 452>;
  else
    goto <bb 453>;

  <bb 452>:
  # DEBUG D#629 => D.73724.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73724
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73724
  # DEBUG this => D#1
  # DEBUG this => &D.73724
  # DEBUG D#626 => &D.73724._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _659
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _659
  # DEBUG this => D#620
  # DEBUG D.149345 => D#621
  operator delete (_659);

  <bb 453>:
  # DEBUG D#630 => &D.73724._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73724 ={v} {CLOBBER};
  # DEBUG this => &D.73725
  # DEBUG this => &D.73725
  # DEBUG D#2818 => &this_129(D)->_traffic
  # DEBUG this => D#2818
  # DEBUG this => D#2818
  # DEBUG D#295 => &D#2818->D.56332._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#295
  _660 = MEM[(struct basic_string * const &)this_129(D) + 416];
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG D#2819 => _660 + 18446744073709551584
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.73726
  # DEBUG __str => D#2819
  # DEBUG this => D#2819
  # DEBUG D#1185 => &MEM[(const struct basic_string *)D#2819]._M_dataplus
  # DEBUG this => &D.73726
  # DEBUG D#1186 => &D.73726._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &D.73726.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73726]._M_p = &D.73726.D.11539._M_local_buf;
  _920 = MEM[(char * *)_660 + -32B];
  # DEBUG D#1 => D#2819
  # DEBUG this => D#1
  _919 = MEM[(long unsigned int *)_660 + -24B];
  # DEBUG D#2 => D#2819
  # DEBUG this => D#2
  _917 = _920 + _919;
  # DEBUG D#1 => D#2819
  # DEBUG this => D#1
  # DEBUG this => &D.73726
  # DEBUG __beg => _920
  # DEBUG __end => _917
  # DEBUG this => &D.73726
  # DEBUG __beg => _920
  # DEBUG __end => _917
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (&D.73726, _920, _917);
  goto <bb 455>;

<L643>:
  pretmp_4382 = &this_129(D)->_packet_size_rate;
  pretmp_2903 = &this_129(D)->_last_class;
  pretmp_2831 = &this_129(D)->_qtime;
  pretmp_2791 = &this_129(D)->_total_in_flight_flits;
  pretmp_2739 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2699 = &this_129(D)->_retired_packets;
  pretmp_6290 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6567 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7452 = &this_129(D)->_pair_plat;
  pretmp_7483 = &this_129(D)->_pair_nlat;
  pretmp_7514 = &this_129(D)->_pair_flat;
  pretmp_7545 = &this_129(D)->_sent_packets;
  pretmp_7576 = &this_129(D)->_accepted_packets;
  pretmp_7607 = &this_129(D)->_sent_flits;
  pretmp_7638 = &this_129(D)->_accepted_flits;
  pretmp_7669 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 455>:
  _661 = this_129(D)->_classes;
  _662 = (long unsigned int) _661;
  std::vector<std::__cxx11::basic_string<char> >::resize (_653, _662, &D.73726);

  <bb 456>:
  # DEBUG this => &D.73726
  # DEBUG this => &D.73726
  # DEBUG this => &D.73726
  _657 = MEM[(char * *)&D.73726];
  # DEBUG D#1 => &D.73726
  # DEBUG this => D#1
  # DEBUG this => &D.73726
  if (&D.73726.D.11539._M_local_buf != _657)
    goto <bb 457>;
  else
    goto <bb 458>;

  <bb 457>:
  # DEBUG D#629 => D.73726.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73726
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73726
  # DEBUG this => D#1
  # DEBUG this => &D.73726
  # DEBUG D#626 => &D.73726._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _657
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _657
  # DEBUG this => D#620
  # DEBUG D.149360 => D#621
  operator delete (_657);

  <bb 458>:
  # DEBUG D#630 => &D.73726._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73726 ={v} {CLOBBER};
  _666 = this_129(D)->_classes;
  _667 = (long unsigned int) _666;
  _668 = &this_129(D)->_traffic_pattern;
  # DEBUG this => _668
  # DEBUG __new_size => _667
  __x = 0B;
  # DEBUG __x => __x
  _4891 = MEM[(struct TrafficPattern * * *)this_129(D) + 480B];
  # DEBUG D#203 => _668
  _4892 = MEM[(struct TrafficPattern * * *)this_129(D) + 488B];
  # DEBUG D#203 => _668
  # DEBUG this => D#203
  # DEBUG this => D#203
  _4893 = (long int) _4892;
  _4894 = (long int) _4891;
  _4895 = _4893 - _4894;
  _4896 = _4895 /[ex] 8;
  _4897 = (size_type) _4896;
  if (_667 > _4897)
    goto <bb 459>;
  else
    goto <bb 462>;

  <bb 459>:
  # DEBUG D#203 => _668
  # DEBUG D#203 => _668
  # DEBUG this => D#203
  # DEBUG this => D#203
  _4898 = _667 - _4897;
  # DEBUG this => _668
  # DEBUG D#297 => &_668->D.57081._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#297
  # DEBUG this => _668
  MEM[(struct __normal_iterator *)&__position] = _4892;
  # DEBUG __n => _4898
  # DEBUG __x => &__x
  std::vector<TrafficPattern*>::_M_fill_insert (_668, __position, _4898, &__x);
  goto <bb 461>;

<L644>:
  pretmp_4385 = &this_129(D)->_packet_size_rate;
  pretmp_2885 = &this_129(D)->_last_class;
  pretmp_2833 = &this_129(D)->_qtime;
  pretmp_2793 = &this_129(D)->_total_in_flight_flits;
  pretmp_2741 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2659 = &this_129(D)->_retired_packets;
  pretmp_6292 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6569 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7454 = &this_129(D)->_pair_plat;
  pretmp_7485 = &this_129(D)->_pair_nlat;
  pretmp_7516 = &this_129(D)->_pair_flat;
  pretmp_7547 = &this_129(D)->_sent_packets;
  pretmp_7578 = &this_129(D)->_accepted_packets;
  pretmp_7609 = &this_129(D)->_sent_flits;
  pretmp_7640 = &this_129(D)->_accepted_flits;
  pretmp_7671 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 461>:
  goto <bb 464>;

  <bb 462>:
  # DEBUG D#203 => _668
  # DEBUG D#203 => _668
  # DEBUG this => D#203
  # DEBUG this => D#203
  if (_667 < _4897)
    goto <bb 463>;
  else
    goto <bb 461>;

  <bb 463>:
  _4899 = _667 * 8;
  _4900 = _4891 + _4899;
  # DEBUG D#437 => _668
  # DEBUG __pos => _4900
  # DEBUG D#436 => D#437
  # DEBUG this => D#436
  # DEBUG D#434 => &D#436->D.57081
  # DEBUG this => D#434
  # DEBUG D#435 => D#436->D.57081._M_impl._M_finish
  # DEBUG __first => _4900
  # DEBUG __last => D#435
  # DEBUG D.114631 => NULL
  # DEBUG D#432 => _4900
  # DEBUG D#433 => D#435
  # DEBUG __first => D#432
  # DEBUG __last => D#433
  # DEBUG D#431 => D#433
  # DEBUG D#430 => D#432
  # DEBUG D#428 => D#430
  # DEBUG D#429 => D#431
  # DEBUG D.114615 => D#428
  # DEBUG D.114614 => D#429
  MEM[(struct TrafficPattern * * *)this_129(D) + 488B] = _4900;

  <bb 464>:
  # DEBUG D#195 => &D.73729
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73729
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73728, "class_priority");
  goto <bb 466>;

<L645>:
  pretmp_4387 = &this_129(D)->_packet_size_rate;
  pretmp_2887 = &this_129(D)->_last_class;
  pretmp_2835 = &this_129(D)->_qtime;
  pretmp_2786 = &this_129(D)->_total_in_flight_flits;
  pretmp_2726 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2684 = &this_129(D)->_retired_packets;
  pretmp_6294 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6571 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7456 = &this_129(D)->_pair_plat;
  pretmp_7487 = &this_129(D)->_pair_nlat;
  pretmp_7518 = &this_129(D)->_pair_flat;
  pretmp_7549 = &this_129(D)->_sent_packets;
  pretmp_7580 = &this_129(D)->_accepted_packets;
  pretmp_7611 = &this_129(D)->_sent_flits;
  pretmp_7642 = &this_129(D)->_accepted_flits;
  pretmp_7673 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 466>:
  D.73727 = Configuration::GetIntArray (config_173(D), &D.73728); [return slot optimization]

  <bb 467>:
  _673 = &this_129(D)->_class_priority;
  std::vector<int>::operator= (_673, &D.73727);

  <bb 468>:
  # DEBUG this => &D.73727
  # DEBUG D#476 => &D.73727.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73727.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73727.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73727.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _676 = MEM[(struct _Vector_base *)&D.73727]._M_impl._M_start;
  # DEBUG D#473 => (long int) _676
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _676
  # DEBUG __n => D#470
  if (_676 != 0B)
    goto <bb 469>;
  else
    goto <bb 470>;

  <bb 469>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _676
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _676
  # DEBUG this => D#462
  # DEBUG D.149399 => D#463
  operator delete (_676);

  <bb 470>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73727 ={v} {CLOBBER};
  # DEBUG this => &D.73728
  # DEBUG this => &D.73728
  # DEBUG this => &D.73728
  _678 = MEM[(char * *)&D.73728];
  # DEBUG D#1 => &D.73728
  # DEBUG this => D#1
  # DEBUG this => &D.73728
  if (&D.73728.D.11539._M_local_buf != _678)
    goto <bb 471>;
  else
    goto <bb 472>;

  <bb 471>:
  # DEBUG D#629 => D.73728.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73728
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73728
  # DEBUG this => D#1
  # DEBUG this => &D.73728
  # DEBUG D#626 => &D.73728._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _678
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _678
  # DEBUG this => D#620
  # DEBUG D.149382 => D#621
  operator delete (_678);

  <bb 472>:
  # DEBUG D#630 => &D.73728._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73728 ={v} {CLOBBER};
  # DEBUG this => &D.73729
  # DEBUG this => &D.73729
  # DEBUG D#2820 => &this_129(D)->_class_priority
  # DEBUG this => D#2820
  _664 = MEM[(int * *)this_129(D) + 440B];
  # DEBUG D#276 => D#2820
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _857 = MEM[(int * *)this_129(D) + 432B];
  # DEBUG D#277 => D#2820
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_664 == _857)
    goto <bb 473>;
  else
    goto <bb 481>;

  <bb 473>:
  # DEBUG D#195 => &D.73732
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73732
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73731, "class_priority");
  goto <bb 475>;

<L647>:
  pretmp_4384 = &this_129(D)->_packet_size_rate;
  pretmp_2884 = &this_129(D)->_last_class;
  pretmp_2832 = &this_129(D)->_qtime;
  pretmp_2792 = &this_129(D)->_total_in_flight_flits;
  pretmp_2740 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2658 = &this_129(D)->_retired_packets;
  pretmp_6291 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6568 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7453 = &this_129(D)->_pair_plat;
  pretmp_7484 = &this_129(D)->_pair_nlat;
  pretmp_7515 = &this_129(D)->_pair_flat;
  pretmp_7546 = &this_129(D)->_sent_packets;
  pretmp_7577 = &this_129(D)->_accepted_packets;
  pretmp_7608 = &this_129(D)->_sent_flits;
  pretmp_7639 = &this_129(D)->_accepted_flits;
  pretmp_7670 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 475>:
  _681 = Configuration::GetInt (config_173(D), &D.73731);

  <bb 476>:
  D.73730 = _681;
  std::vector<int>::push_back (_673, &D.73730);
  goto <bb 478>;

<L649>:
  goto <bb 1582> (<L286>);

  <bb 478>:
  D.73730 ={v} {CLOBBER};
  # DEBUG this => &D.73731
  # DEBUG this => &D.73731
  # DEBUG this => &D.73731
  _687 = MEM[(char * *)&D.73731];
  # DEBUG D#1 => &D.73731
  # DEBUG this => D#1
  # DEBUG this => &D.73731
  if (&D.73731.D.11539._M_local_buf != _687)
    goto <bb 479>;
  else
    goto <bb 480>;

  <bb 479>:
  # DEBUG D#629 => D.73731.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73731
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73731
  # DEBUG this => D#1
  # DEBUG this => &D.73731
  # DEBUG D#626 => &D.73731._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _687
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _687
  # DEBUG this => D#620
  # DEBUG D.149415 => D#621
  operator delete (_687);

  <bb 480>:
  # DEBUG D#630 => &D.73731._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73731 ={v} {CLOBBER};
  # DEBUG this => &D.73732
  # DEBUG this => &D.73732
  pretmp_4446 = MEM[(int * const &)this_129(D) + 440];

  <bb 481>:
  # prephitmp_4447 = PHI <_664(472), pretmp_4446(480)>
  # DEBUG D#2821 => &this_129(D)->_class_priority
  # DEBUG this => D#2821
  # DEBUG this => D#2821
  # DEBUG D#272 => &D#2821->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _692 = MEM[(int &)prephitmp_4447 + 18446744073709551612];
  _693 = this_129(D)->_classes;
  _694 = (long unsigned int) _693;
  std::vector<int>::resize (_673, _694, _692);
  goto <bb 483>;

<L650>:
  pretmp_4389 = &this_129(D)->_packet_size_rate;
  pretmp_2873 = &this_129(D)->_last_class;
  pretmp_2837 = &this_129(D)->_qtime;
  pretmp_2787 = &this_129(D)->_total_in_flight_flits;
  pretmp_2727 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2690 = &this_129(D)->_retired_packets;
  pretmp_6295 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6572 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7457 = &this_129(D)->_pair_plat;
  pretmp_7488 = &this_129(D)->_pair_nlat;
  pretmp_7519 = &this_129(D)->_pair_flat;
  pretmp_7550 = &this_129(D)->_sent_packets;
  pretmp_7581 = &this_129(D)->_accepted_packets;
  pretmp_7612 = &this_129(D)->_sent_flits;
  pretmp_7643 = &this_129(D)->_accepted_flits;
  pretmp_7674 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 483>:
  # DEBUG D#195 => &D.73735
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73735
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73734, "injection_process");
  goto <bb 485>;

<L651>:
  pretmp_4376 = &this_129(D)->_packet_size_rate;
  pretmp_2898 = &this_129(D)->_last_class;
  pretmp_2842 = &this_129(D)->_qtime;
  pretmp_2796 = &this_129(D)->_total_in_flight_flits;
  pretmp_2769 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2704 = &this_129(D)->_retired_packets;
  pretmp_6286 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6563 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7448 = &this_129(D)->_pair_plat;
  pretmp_7479 = &this_129(D)->_pair_nlat;
  pretmp_7510 = &this_129(D)->_pair_flat;
  pretmp_7541 = &this_129(D)->_sent_packets;
  pretmp_7572 = &this_129(D)->_accepted_packets;
  pretmp_7603 = &this_129(D)->_sent_flits;
  pretmp_7634 = &this_129(D)->_accepted_flits;
  pretmp_7665 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

  <bb 485>:
  injection_process = Configuration::GetStrArray (config_173(D), &D.73734); [return slot optimization]

  <bb 486>:
  # DEBUG this => &D.73734
  # DEBUG this => &D.73734
  # DEBUG this => &D.73734
  _700 = MEM[(char * *)&D.73734];
  # DEBUG D#1 => &D.73734
  # DEBUG this => D#1
  # DEBUG this => &D.73734
  if (&D.73734.D.11539._M_local_buf != _700)
    goto <bb 487>;
  else
    goto <bb 488>;

  <bb 487>:
  # DEBUG D#629 => D.73734.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73734
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73734
  # DEBUG this => D#1
  # DEBUG this => &D.73734
  # DEBUG D#626 => &D.73734._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _700
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _700
  # DEBUG this => D#620
  # DEBUG D.149462 => D#621
  operator delete (_700);

  <bb 488>:
  # DEBUG D#630 => &D.73734._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73734 ={v} {CLOBBER};
  # DEBUG this => &D.73735
  # DEBUG this => &D.73735
  # DEBUG this => &injection_process
  # DEBUG this => &injection_process
  # DEBUG D#295 => &injection_process.D.56332._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#295
  _701 = MEM[(struct basic_string * const &)&injection_process + 8];
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG D#2822 => _701 + 18446744073709551584
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.73736
  # DEBUG __str => D#2822
  # DEBUG this => D#2822
  # DEBUG D#1185 => &MEM[(const struct basic_string *)D#2822]._M_dataplus
  # DEBUG this => &D.73736
  # DEBUG D#1186 => &D.73736._M_dataplus
  # DEBUG D#403 => D#1185
  # DEBUG this => D#1186
  # DEBUG __dat => &D.73736.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1186
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73736]._M_p = &D.73736.D.11539._M_local_buf;
  _804 = MEM[(char * *)_701 + -32B];
  # DEBUG D#1 => D#2822
  # DEBUG this => D#1
  _802 = MEM[(long unsigned int *)_701 + -24B];
  # DEBUG D#2 => D#2822
  # DEBUG this => D#2
  _801 = _804 + _802;
  # DEBUG D#1 => D#2822
  # DEBUG this => D#1
  # DEBUG this => &D.73736
  # DEBUG __beg => _804
  # DEBUG __end => _801
  # DEBUG this => &D.73736
  # DEBUG __beg => _804
  # DEBUG __end => _801
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.334 (&D.73736, _804, _801);

  <bb 489>:
  _702 = this_129(D)->_classes;
  _703 = (long unsigned int) _702;
  std::vector<std::__cxx11::basic_string<char> >::resize (&injection_process, _703, &D.73736);

  <bb 490>:
  # DEBUG this => &D.73736
  # DEBUG this => &D.73736
  # DEBUG this => &D.73736
  _698 = MEM[(char * *)&D.73736];
  # DEBUG D#1 => &D.73736
  # DEBUG this => D#1
  # DEBUG this => &D.73736
  if (&D.73736.D.11539._M_local_buf != _698)
    goto <bb 491>;
  else
    goto <bb 492>;

  <bb 491>:
  # DEBUG D#629 => D.73736.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73736
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73736
  # DEBUG this => D#1
  # DEBUG this => &D.73736
  # DEBUG D#626 => &D.73736._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _698
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _698
  # DEBUG this => D#620
  # DEBUG D.149477 => D#621
  operator delete (_698);

  <bb 492>:
  # DEBUG D#630 => &D.73736._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73736 ={v} {CLOBBER};
  _706 = this_129(D)->_classes;
  _707 = (long unsigned int) _706;
  _708 = &this_129(D)->_injection_process;
  # DEBUG this => _708
  # DEBUG __new_size => _707
  __x = 0B;
  # DEBUG __x => __x
  _669 = MEM[(struct InjectionProcess * * *)this_129(D) + 504B];
  # DEBUG D#204 => _708
  _4901 = MEM[(struct InjectionProcess * * *)this_129(D) + 512B];
  # DEBUG D#204 => _708
  # DEBUG this => D#204
  # DEBUG this => D#204
  _4902 = (long int) _4901;
  _4903 = (long int) _669;
  _4904 = _4902 - _4903;
  _4905 = _4904 /[ex] 8;
  _4906 = (size_type) _4905;
  if (_707 > _4906)
    goto <bb 493>;
  else
    goto <bb 496>;

  <bb 493>:
  # DEBUG D#204 => _708
  # DEBUG D#204 => _708
  # DEBUG this => D#204
  # DEBUG this => D#204
  _4907 = _707 - _4906;
  # DEBUG this => _708
  # DEBUG D#298 => &_708->D.57828._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#298
  # DEBUG this => _708
  MEM[(struct __normal_iterator *)&__position] = _4901;
  # DEBUG __n => _4907
  # DEBUG __x => &__x
  std::vector<InjectionProcess*>::_M_fill_insert (_708, __position, _4907, &__x);
  goto <bb 495>;

<L653>:
  pretmp_4451 = &this_129(D)->_last_class;
  pretmp_4463 = &this_129(D)->_qtime;
  pretmp_4486 = &this_129(D)->_total_in_flight_flits;
  pretmp_4517 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4549 = &this_129(D)->_retired_packets;
  pretmp_5958 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6318 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6595 = &this_129(D)->_pair_plat;
  pretmp_6685 = &this_129(D)->_pair_nlat;
  pretmp_6775 = &this_129(D)->_pair_flat;
  pretmp_6865 = &this_129(D)->_sent_packets;
  pretmp_6955 = &this_129(D)->_accepted_packets;
  pretmp_7045 = &this_129(D)->_sent_flits;
  pretmp_7135 = &this_129(D)->_accepted_flits;
  pretmp_7225 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 495>:
  pretmp_4588 = this_129(D)->_classes;
  goto <bb 498>;

  <bb 496>:
  # DEBUG D#204 => _708
  # DEBUG D#204 => _708
  # DEBUG this => D#204
  # DEBUG this => D#204
  if (_707 < _4906)
    goto <bb 497>;
  else
    goto <bb 498>;

  <bb 497>:
  _4908 = _707 * 8;
  _4909 = _669 + _4908;
  # DEBUG D#447 => _708
  # DEBUG __pos => _4909
  # DEBUG D#446 => D#447
  # DEBUG this => D#446
  # DEBUG D#444 => &D#446->D.57828
  # DEBUG this => D#444
  # DEBUG D#445 => D#446->D.57828._M_impl._M_finish
  # DEBUG __first => _4909
  # DEBUG __last => D#445
  # DEBUG D.114675 => NULL
  # DEBUG D#442 => _4909
  # DEBUG D#443 => D#445
  # DEBUG __first => D#442
  # DEBUG __last => D#443
  # DEBUG D#441 => D#443
  # DEBUG D#440 => D#442
  # DEBUG D#438 => D#440
  # DEBUG D#439 => D#441
  # DEBUG D.114659 => D#438
  # DEBUG D.114658 => D#439
  MEM[(struct InjectionProcess * * *)this_129(D) + 512B] = _4909;

  <bb 498>:
  # prephitmp_4589 = PHI <pretmp_4588(495), _706(497), _706(496)>
  # DEBUG c => 0
  if (prephitmp_4589 <= 0)
    goto <bb 499>;
  else
    goto <bb 500>;

  <bb 499>:
  # DEBUG this => &D.73739
  # DEBUG D#983 => &D.73739.D.68817
  # DEBUG this => D#983
  # DEBUG D#982 => &D#983->_M_impl
  # DEBUG this => D#982
  # DEBUG this => D#982
  # DEBUG this => D#982
  MEM[(struct _Vector_impl *)&D.73739]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73739]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73739]._M_end_of_storage = 0B;
  _725 = this_129(D)->_nodes;
  _726 = (long unsigned int) _725;
  _727 = &this_129(D)->_buf_states;
  # DEBUG this => _727
  # DEBUG __new_size => _726
  # DEBUG __x => &D.73739
  _709 = MEM[(struct vector * *)this_129(D) + 536B];
  # DEBUG D#206 => _727
  _4910 = MEM[(struct vector * *)this_129(D) + 544B];
  # DEBUG D#206 => _727
  # DEBUG this => D#206
  # DEBUG this => D#206
  _4911 = (long int) _4910;
  _4912 = (long int) _709;
  _4913 = _4911 - _4912;
  _4914 = _4913 /[ex] 24;
  _4915 = (size_type) _4914;
  if (_726 > _4915)
    goto <bb 507>;
  else
    goto <bb 509>;

  <bb 500>:

  <bb 501>:
  # c_6085 = PHI <0(500), c_723(506)>
  # DEBUG c => c_6085
  _711 = (long unsigned int) c_6085;
  # DEBUG D#2823 => &this_129(D)->_traffic_pattern
  _1994 = MEM[(struct TrafficPattern * * *)this_129(D) + 480B];
  # DEBUG D#70 => D#2823
  # DEBUG __n => _711
  # DEBUG this => D#70
  _781 = _711 * 8;
  _774 = _1994 + _781;
  _713 = this_129(D)->_nodes;
  # DEBUG D#2824 => &this_129(D)->_traffic
  _1969 = MEM[(struct basic_string * *)this_129(D) + 408B];
  # DEBUG D#66 => D#2824
  # DEBUG __n => _711
  # DEBUG this => D#66
  _797 = _711 * 32;
  _788 = _1969 + _797;
  _715 = TrafficPattern::New (_788, _713, config_173(D));
  goto <bb 503>;

<L654>:
  pretmp_4452 = &this_129(D)->_last_class;
  pretmp_4464 = &this_129(D)->_qtime;
  pretmp_4487 = &this_129(D)->_total_in_flight_flits;
  pretmp_4518 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4552 = &this_129(D)->_retired_packets;
  pretmp_6149 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6319 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6596 = &this_129(D)->_pair_plat;
  pretmp_6686 = &this_129(D)->_pair_nlat;
  pretmp_6776 = &this_129(D)->_pair_flat;
  pretmp_6866 = &this_129(D)->_sent_packets;
  pretmp_6956 = &this_129(D)->_accepted_packets;
  pretmp_7046 = &this_129(D)->_sent_flits;
  pretmp_7136 = &this_129(D)->_accepted_flits;
  pretmp_7226 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 503>:
  *_774 = _715;
  # DEBUG D#2825 => &this_129(D)->_injection_process
  _1995 = MEM[(struct InjectionProcess * * *)this_129(D) + 504B];
  # DEBUG D#71 => D#2825
  # DEBUG __n => _711
  # DEBUG this => D#71
  _712 = _1995 + _781;
  # DEBUG D#2826 => &this_129(D)->_load
  _1993 = MEM[(double * *)this_129(D) + 240B];
  # DEBUG D#69 => D#2826
  # DEBUG __n => _711
  # DEBUG this => D#69
  _717 = _1993 + _781;
  _718 = *_717;
  _719 = this_129(D)->_nodes;
  _1970 = MEM[(struct basic_string * *)&injection_process];
  # DEBUG D#66 => &injection_process
  # DEBUG __n => _711
  # DEBUG this => D#66
  _751 = _1970 + _797;
  _721 = InjectionProcess::New (_751, _719, _718, config_173(D));
  goto <bb 505>;

<L655>:
  pretmp_4453 = &this_129(D)->_last_class;
  pretmp_4465 = &this_129(D)->_qtime;
  pretmp_4488 = &this_129(D)->_total_in_flight_flits;
  pretmp_4519 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4553 = &this_129(D)->_retired_packets;
  pretmp_5956 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6320 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6597 = &this_129(D)->_pair_plat;
  pretmp_6687 = &this_129(D)->_pair_nlat;
  pretmp_6777 = &this_129(D)->_pair_flat;
  pretmp_6867 = &this_129(D)->_sent_packets;
  pretmp_6957 = &this_129(D)->_accepted_packets;
  pretmp_7047 = &this_129(D)->_sent_flits;
  pretmp_7137 = &this_129(D)->_accepted_flits;
  pretmp_7227 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 505>:
  *_712 = _721;
  c_723 = c_6085 + 1;
  # DEBUG c => c_723
  # DEBUG c => c_723
  _710 = this_129(D)->_classes;
  if (_710 <= c_723)
    goto <bb 499>;
  else
    goto <bb 506>;

  <bb 506>:
  goto <bb 501>;

  <bb 507>:
  # DEBUG D#206 => _727
  # DEBUG D#206 => _727
  # DEBUG this => D#206
  # DEBUG this => D#206
  _4916 = _726 - _4915;
  # DEBUG this => _727
  # DEBUG D#301 => &_727->D.58587._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#301
  # DEBUG this => _727
  MEM[(struct __normal_iterator *)&__position] = _4910;
  # DEBUG __n => _4916
  # DEBUG __x => &D.73739
  std::vector<std::vector<BufferState*> >::_M_fill_insert (_727, __position, _4916, &D.73739);

  <bb 508>:
  pretmp_4609 = MEM[(struct _Vector_base *)&D.73739]._M_impl._M_start;
  goto <bb 518>;

  <bb 509>:
  # DEBUG D#206 => _727
  # DEBUG D#206 => _727
  # DEBUG this => D#206
  # DEBUG this => D#206
  if (_726 < _4915)
    goto <bb 510>;
  else
    goto <bb 518>;

  <bb 510>:
  _4917 = _726 * 24;
  __pos_4918 = _709 + _4917;
  # DEBUG D#1005 => _727
  # DEBUG __pos => __pos_4918
  # DEBUG D#1004 => D#1005
  # DEBUG this => D#1004
  # DEBUG D#1003 => &D#1004->D.58587
  # DEBUG this => D#1003
  # DEBUG __first => __pos_4918
  # DEBUG __last => _4910
  # DEBUG __first => __pos_4918
  if (_4910 == __pos_4918)
    goto <bb 517>;
  else
    goto <bb 511>;

  <bb 511>:

  <bb 512>:
  # __pos_6020 = PHI <__pos_4918(511), __pos_4921(515)>
  # DEBUG __first => __pos_6020
  # DEBUG __r => __pos_6020
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#998
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _4920 = MEM[(struct _Vector_base *)__pos_6020]._M_impl._M_start;
  # DEBUG D#995 => (long int) _4920
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _4920
  # DEBUG __n => D#992
  if (_4920 != 0B)
    goto <bb 513>;
  else
    goto <bb 514>;

  <bb 513>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _4920
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _4920
  # DEBUG this => D#984
  # DEBUG D.171648 => D#985
  operator delete (_4920);

  <bb 514>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  MEM[(struct  &)__pos_6020] ={v} {CLOBBER};
  __pos_4921 = __pos_6020 + 24;
  # DEBUG __first => __pos_4921
  # DEBUG __first => __pos_4921
  if (_4910 == __pos_4921)
    goto <bb 516>;
  else
    goto <bb 515>;

  <bb 515>:
  goto <bb 512>;

  <bb 516>:
  pretmp_3178 = MEM[(struct _Vector_base *)&D.73739]._M_impl._M_start;

  <bb 517>:
  # prephitmp_3179 = PHI <pretmp_3178(516), 0B(510)>
  MEM[(struct vector * *)this_129(D) + 544B] = __pos_4918;

  <bb 518>:
  # prephitmp_4613 = PHI <0B(509), pretmp_4609(508), prephitmp_3179(517)>
  # DEBUG this => &D.73739
  # DEBUG D#998 => &D.73739.D.68817
  # DEBUG this => D#998
  # DEBUG D#1001 => D.73739.D.68817._M_impl._M_finish
  # DEBUG D#1000 => D.73739.D.68817._M_impl._M_start
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG D#999 => &D.73739.D.68817
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  # DEBUG D#4296 => MEM[(struct _Vector_base *)&D.73739]._M_impl._M_start
  # DEBUG D#995 => (long int) D#4296
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => D#4296
  # DEBUG __n => D#992
  if (prephitmp_4613 != 0B)
    goto <bb 519>;
  else
    goto <bb 520>;

  <bb 519>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => D#4296
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => D#4296
  # DEBUG this => D#984
  # DEBUG D.149520 => D#985
  operator delete (prephitmp_4613);

  <bb 520>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  D.73739 ={v} {CLOBBER};
  # DEBUG this => &D.73740
  # DEBUG D#668 => &D.73740.D.53336
  # DEBUG this => D#668
  # DEBUG D#667 => &D#668->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct _Vector_impl *)&D.73740]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73740]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73740]._M_end_of_storage = 0B;
  _732 = this_129(D)->_nodes;
  _733 = (long unsigned int) _732;
  _734 = &this_129(D)->_last_vc;
  # DEBUG this => _734
  # DEBUG __new_size => _733
  # DEBUG __x => &D.73740
  _728 = MEM[(struct vector * *)this_129(D) + 560B];
  # DEBUG D#207 => _734
  _4922 = MEM[(struct vector * *)this_129(D) + 568B];
  # DEBUG D#207 => _734
  # DEBUG this => D#207
  # DEBUG this => D#207
  _4923 = (long int) _4922;
  _4924 = (long int) _728;
  _4925 = _4923 - _4924;
  _4926 = _4925 /[ex] 24;
  _4927 = (size_type) _4926;
  if (_733 > _4927)
    goto <bb 521>;
  else
    goto <bb 523>;

  <bb 521>:
  # DEBUG D#207 => _734
  # DEBUG D#207 => _734
  # DEBUG this => D#207
  # DEBUG this => D#207
  _4928 = _733 - _4927;
  # DEBUG this => _734
  # DEBUG D#304 => &_734->D.59334._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#304
  # DEBUG this => _734
  MEM[(struct __normal_iterator *)&__position] = _4922;
  # DEBUG __n => _4928
  # DEBUG __x => &D.73740
  std::vector<std::vector<std::vector<int> > >::_M_fill_insert (_734, __position, _4928, &D.73740);

  <bb 522>:
  goto <bb 529>;

  <bb 523>:
  # DEBUG D#207 => _734
  # DEBUG D#207 => _734
  # DEBUG this => D#207
  # DEBUG this => D#207
  if (_733 < _4927)
    goto <bb 524>;
  else
    goto <bb 522>;

  <bb 524>:
  _4929 = _733 * 24;
  __pos_4930 = _728 + _4929;
  # DEBUG D#827 => _734
  # DEBUG __pos => __pos_4930
  # DEBUG D#826 => D#827
  # DEBUG this => D#826
  # DEBUG D#825 => &D#826->D.59334
  # DEBUG this => D#825
  # DEBUG __first => __pos_4930
  # DEBUG __last => _4922
  # DEBUG __first => __pos_4930
  if (_4922 == __pos_4930)
    goto <bb 525>;
  else
    goto <bb 526>;

  <bb 525>:
  MEM[(struct vector * *)this_129(D) + 568B] = __pos_4930;
  goto <bb 529>;

  <bb 526>:

  <bb 527>:
  # __pos_6022 = PHI <__pos_4930(526), __pos_4932(528)>
  # DEBUG __first => __pos_6022
  # DEBUG __r => __pos_6022
  # DEBUG __pointer => NULL
  std::vector<std::vector<int> >::~vector (__pos_6022);
  __pos_4932 = __pos_6022 + 24;
  # DEBUG __first => __pos_4932
  # DEBUG __first => __pos_4932
  if (_4922 == __pos_4932)
    goto <bb 525>;
  else
    goto <bb 528>;

  <bb 528>:
  goto <bb 527>;

  <bb 529>:
  std::vector<std::vector<int> >::~vector (&D.73740);
  D.73740 ={v} {CLOBBER};
  # DEBUG this => &D.73741
  # DEBUG D#259 => &D.73741.D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)&D.73741]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73741]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73741]._M_end_of_storage = 0B;
  _739 = this_129(D)->_nodes;
  _740 = (long unsigned int) _739;
  _741 = &this_129(D)->_last_class;
  std::vector<std::vector<int> >::resize (_741, _740, &D.73741);

  <bb 530>:
  # DEBUG this => &D.73741
  # DEBUG D#476 => &D.73741.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73741.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73741.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73741.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _738 = MEM[(struct _Vector_base *)&D.73741]._M_impl._M_start;
  # DEBUG D#473 => (long int) _738
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _738
  # DEBUG __n => D#470
  if (_738 != 0B)
    goto <bb 531>;
  else
    goto <bb 532>;

  <bb 531>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _738
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _738
  # DEBUG this => D#462
  # DEBUG D.149538 => D#463
  operator delete (_738);

  <bb 532>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73741 ={v} {CLOBBER};
  # DEBUG source => 0
  # DEBUG source => 0
  _6247 = this_129(D)->_nodes;
  if (_6247 <= 0)
    goto <bb 614>;
  else
    goto <bb 533>;

  <bb 533>:
  pretmp_5355 = this_129(D)->_subnets;

  <bb 534>:
  # source_6084 = PHI <0(533), source_829(613)>
  # prephitmp_4998 = PHI <pretmp_5355(533), prephitmp_3196(613)>
  # DEBUG source => source_6084
  _746 = (long unsigned int) prephitmp_4998;
  _747 = (long unsigned int) source_6084;
  # DEBUG D#2827 => &this_129(D)->_buf_states
  _1996 = MEM[(struct vector * *)this_129(D) + 536B];
  # DEBUG D#72 => D#2827
  # DEBUG __n => _747
  # DEBUG this => D#72
  _729 = _747 * 24;
  _724 = _1996 + _729;
  # DEBUG this => _724
  # DEBUG __new_size => _746
  __x = 0B;
  # DEBUG __x => __x
  _735 = MEM[(struct BufferState * * *)_724];
  # DEBUG D#205 => _724
  _4933 = MEM[(struct BufferState * * *)_724 + 8B];
  # DEBUG D#205 => _724
  # DEBUG this => D#205
  # DEBUG this => D#205
  _4934 = (long int) _4933;
  _4935 = (long int) _735;
  _4936 = _4934 - _4935;
  _4937 = _4936 /[ex] 8;
  _4938 = (size_type) _4937;
  if (_746 > _4938)
    goto <bb 535>;
  else
    goto <bb 538>;

  <bb 535>:
  # DEBUG D#205 => _724
  # DEBUG D#205 => _724
  # DEBUG this => D#205
  # DEBUG this => D#205
  _4939 = _746 - _4938;
  # DEBUG this => _724
  # DEBUG D#305 => &_724->D.68817._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#305
  # DEBUG this => _724
  MEM[(struct __normal_iterator *)&__position] = _4933;
  # DEBUG __n => _4939
  # DEBUG __x => &__x
  std::vector<BufferState*>::_M_fill_insert (_724, __position, _4939, &__x);
  goto <bb 537>;

<L656>:
  pretmp_4468 = &this_129(D)->_qtime;
  pretmp_4489 = &this_129(D)->_total_in_flight_flits;
  pretmp_4522 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4554 = &this_129(D)->_retired_packets;
  pretmp_3558 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6327 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6604 = &this_129(D)->_pair_plat;
  pretmp_6694 = &this_129(D)->_pair_nlat;
  pretmp_6784 = &this_129(D)->_pair_flat;
  pretmp_6874 = &this_129(D)->_sent_packets;
  pretmp_6964 = &this_129(D)->_accepted_packets;
  pretmp_7054 = &this_129(D)->_sent_flits;
  pretmp_7144 = &this_129(D)->_accepted_flits;
  pretmp_7234 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 537>:
  pretmp_3239 = this_129(D)->_subnets;
  pretmp_5538 = (long unsigned int) pretmp_3239;
  goto <bb 540>;

  <bb 538>:
  # DEBUG D#205 => _724
  # DEBUG D#205 => _724
  # DEBUG this => D#205
  # DEBUG this => D#205
  if (_746 < _4938)
    goto <bb 539>;
  else
    goto <bb 540>;

  <bb 539>:
  _4940 = _746 * 8;
  _4941 = _735 + _4940;
  # DEBUG D#547 => _724
  # DEBUG __pos => _4941
  # DEBUG D#546 => D#547
  # DEBUG this => D#546
  # DEBUG D#544 => &D#546->D.68817
  # DEBUG this => D#544
  # DEBUG D#545 => D#546->D.68817._M_impl._M_finish
  # DEBUG __first => _4941
  # DEBUG __last => D#545
  # DEBUG D.115232 => NULL
  # DEBUG D#542 => _4941
  # DEBUG D#543 => D#545
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  MEM[(struct BufferState * * *)_724 + 8B] = _4941;

  <bb 540>:
  # prephitmp_5539 = PHI <_746(538), pretmp_5538(537), _746(539)>
  # DEBUG D#4295 => this_129(D)->_subnets
  # DEBUG D#2828 => &this_129(D)->_last_class
  _1975 = MEM[(struct vector * *)this_129(D) + 456B];
  # DEBUG D#67 => D#2828
  # DEBUG __n => _747
  # DEBUG this => D#67
  _691 = _1975 + _729;
  # DEBUG this => _691
  # DEBUG __new_size => (long unsigned int) D#4295
  __x = 0;
  # DEBUG __x => __x
  _748 = MEM[(int * *)_691];
  # DEBUG D#68 => _691
  _4942 = MEM[(int * *)_691 + 8B];
  # DEBUG D#68 => _691
  # DEBUG this => D#68
  # DEBUG this => D#68
  _4943 = (long int) _4942;
  _4944 = (long int) _748;
  _4945 = _4943 - _4944;
  _4946 = _4945 /[ex] 4;
  _4947 = (size_type) _4946;
  if (_4947 < prephitmp_5539)
    goto <bb 541>;
  else
    goto <bb 544>;

  <bb 541>:
  # DEBUG D#68 => _691
  # DEBUG D#68 => _691
  # DEBUG this => D#68
  # DEBUG this => D#68
  _4948 = prephitmp_5539 - _4947;
  # DEBUG this => _691
  # DEBUG D#272 => &_691->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => _691
  MEM[(struct __normal_iterator *)&__position] = _4942;
  # DEBUG __n => _4948
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_691, __position, _4948, &__x);
  goto <bb 543>;

<L657>:
  pretmp_4469 = &this_129(D)->_qtime;
  pretmp_4492 = &this_129(D)->_total_in_flight_flits;
  pretmp_4523 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4555 = &this_129(D)->_retired_packets;
  pretmp_4839 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6328 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6605 = &this_129(D)->_pair_plat;
  pretmp_6695 = &this_129(D)->_pair_nlat;
  pretmp_6785 = &this_129(D)->_pair_flat;
  pretmp_6875 = &this_129(D)->_sent_packets;
  pretmp_6965 = &this_129(D)->_accepted_packets;
  pretmp_7055 = &this_129(D)->_sent_flits;
  pretmp_7145 = &this_129(D)->_accepted_flits;
  pretmp_7235 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 543>:
  pretmp_5531 = this_129(D)->_subnets;
  pretmp_3191 = (long unsigned int) pretmp_5531;
  goto <bb 546>;

  <bb 544>:
  # DEBUG D#68 => _691
  # DEBUG D#68 => _691
  # DEBUG this => D#68
  # DEBUG this => D#68
  if (_4947 > prephitmp_5539)
    goto <bb 545>;
  else
    goto <bb 546>;

  <bb 545>:
  _4949 = prephitmp_5539 * 4;
  _4950 = _748 + _4949;
  # DEBUG D#396 => _691
  # DEBUG __pos => _4950
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => _4950
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => _4950
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)_691 + 8B] = _4950;

  <bb 546>:
  # prephitmp_3192 = PHI <prephitmp_5539(544), pretmp_3191(543), prephitmp_5539(545)>
  # DEBUG this => &D.73744
  # DEBUG D#259 => &D.73744.D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)&D.73744]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73744]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73744]._M_end_of_storage = 0B;
  # DEBUG D#2829 => &this_129(D)->_last_vc
  _1998 = MEM[(struct vector * *)this_129(D) + 560B];
  # DEBUG D#73 => D#2829
  # DEBUG __n => _747
  # DEBUG this => D#73
  _670 = _1998 + _729;
  std::vector<std::vector<int> >::resize (_670, prephitmp_3192, &D.73744);

  <bb 547>:
  # DEBUG this => &D.73744
  # DEBUG D#476 => &D.73744.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73744.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73744.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73744.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _753 = MEM[(struct _Vector_base *)&D.73744]._M_impl._M_start;
  # DEBUG D#473 => (long int) _753
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _753
  # DEBUG __n => D#470
  if (_753 != 0B)
    goto <bb 548>;
  else
    goto <bb 549>;

  <bb 548>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _753
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _753
  # DEBUG this => D#462
  # DEBUG D.149568 => D#463
  operator delete (_753);

  <bb 549>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73744 ={v} {CLOBBER};
  # DEBUG subnet => 0
  # DEBUG subnet => 0
  _6243 = this_129(D)->_subnets;
  if (_6243 <= 0)
    goto <bb 611>;
  else
    goto <bb 550>;

  <bb 550>:
  pretmp_3199 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_3187 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _557 = _747 * 8;

  <bb 551>:
  # subnet_6083 = PHI <0(550), subnet_813(610)>
  # DEBUG subnet => subnet_6083
  # DEBUG this => &tmp_name
  # DEBUG __mode => 16
  # DEBUG D#635 => &tmp_name.D.23231
  # DEBUG this => D#635
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&tmp_name + 112B].D.19921);
  MEM[(struct basic_ios *)&tmp_name + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&tmp_name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&tmp_name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&tmp_name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&tmp_name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&tmp_name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&tmp_name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&tmp_name + 112B]._M_num_get = 0B;
  # DEBUG this => &tmp_name.D.23228
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&tmp_name]._vptr.basic_ostream = pretmp_3199;
  _4953 = MEM[(long int *)pretmp_3199 + -24B];
  iftmp.347_4954 = (sizetype) _4953;
  _4955 = &tmp_name.D.23228 + iftmp.347_4954;
  _4955->D.19921._vptr.ios_base = pretmp_3187;
  std::basic_ios<char>::init (_4955, 0B);

  <bb 552>:
  tmp_name.D.23228._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&tmp_name + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#633 => &tmp_name._M_stringbuf
  # DEBUG this => D#633
  # DEBUG __mode => NULL
  # DEBUG D#406 => &MEM[(struct basic_stringbuf *)D#633].D.23078
  # DEBUG this => D#406
  MEM[(struct basic_streambuf *)&tmp_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&tmp_name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&tmp_name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&tmp_name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&tmp_name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&tmp_name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&tmp_name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&tmp_name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&tmp_name + 8B].D.23078._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_mode = 16;
  # DEBUG D#405 => &MEM[(struct basic_stringbuf *)D#633]._M_string
  # DEBUG this => D#405
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG this => D#405
  # DEBUG D#404 => &MEM[(struct basic_string *)D#405]._M_dataplus
  # DEBUG this => D#404
  # DEBUG __dat => &MEM[(struct basic_string *)&tmp_name + 80B].D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#404
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&tmp_name + 80B]._M_p = &MEM[(struct basic_string *)&tmp_name + 80B].D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#405
  # DEBUG __n => 0
  # DEBUG D#8 => D#405
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&tmp_name + 88B] = 0;
  # DEBUG D#1 => D#405
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(struct basic_string *)&tmp_name + 80B].D.11539._M_local_buf
  # DEBUG __c2 => D#19
  MEM[(char_type &)&tmp_name + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&tmp_name + 112B], &tmp_name._M_stringbuf.D.23078);
  goto <bb 559>;

  # pretmp_4637 = PHI <pretmp_3187(552)>
  # pretmp_4636 = PHI <pretmp_3199(552)>
<L535>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&tmp_name._M_stringbuf);
  resx 747

<L536>:
  # DEBUG this => &tmp_name.D.23228
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _4965 = MEM[(long int *)pretmp_4636 + -24B];
  iftmp.352_4966 = (sizetype) _4965;
  _4967 = &tmp_name.D.23228 + iftmp.352_4966;
  _4967->D.19921._vptr.ios_base = pretmp_4637;
  MEM[(struct  &)&tmp_name] ={v} {CLOBBER};
  resx 746

<L659>:
  goto <bb 557> (<L537>);

<L658>:

<L537>:
  # DEBUG D#634 => &tmp_name.D.23231
  # DEBUG this => D#634
  MEM[(struct basic_ios *)&tmp_name + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&tmp_name + 112B].D.19921);
  resx 745

<L660>:
  pretmp_4477 = &this_129(D)->_qtime;
  pretmp_4510 = &this_129(D)->_total_in_flight_flits;
  pretmp_4542 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4577 = &this_129(D)->_retired_packets;
  pretmp_249 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6378 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6655 = &this_129(D)->_pair_plat;
  pretmp_6745 = &this_129(D)->_pair_nlat;
  pretmp_6835 = &this_129(D)->_pair_flat;
  pretmp_6925 = &this_129(D)->_sent_packets;
  pretmp_7015 = &this_129(D)->_accepted_packets;
  pretmp_7105 = &this_129(D)->_sent_flits;
  pretmp_7195 = &this_129(D)->_accepted_flits;
  pretmp_7285 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 559>:
  # DEBUG __out => &tmp_name.D.23228
  # DEBUG __s => "terminal_buf_state_"
  # DEBUG __s => "terminal_buf_state_"
  std::__ostream_insert<char, std::char_traits<char> > (&tmp_name.D.23228, "terminal_buf_state_", 19);

  <bb 560>:
  _761 = std::basic_ostream<char>::operator<< (&tmp_name.D.23228, source_6084);
  goto <bb 562>;

<L662>:
  goto <bb 1633> (<L306>);

  <bb 562>:
  # DEBUG __out => _761
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  std::__ostream_insert<char, std::char_traits<char> > (_761, "_", 1);
  goto <bb 564>;

<L663>:
  goto <bb 1633> (<L306>);

  <bb 564>:
  std::basic_ostream<char>::operator<< (_761, subnet_6083);
  goto <bb 566>;

<L664>:
  goto <bb 1633> (<L306>);

  <bb 566>:
  # DEBUG this => &tmp_name
  D.73754 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 568>;

<L665>:
  goto <bb 1633> (<L306>);

  <bb 568>:
  _765 = operator new (264);

  <bb 569>:
  BufferState::BufferState (_765, config_173(D), _130, &D.73754);

  <bb 570>:
  # DEBUG bs => _765
  # DEBUG this => &D.73754
  # DEBUG this => &D.73754
  # DEBUG this => &D.73754
  _763 = MEM[(char * *)&D.73754];
  # DEBUG D#1 => &D.73754
  # DEBUG this => D#1
  # DEBUG this => &D.73754
  if (&D.73754.D.11539._M_local_buf != _763)
    goto <bb 571>;
  else
    goto <bb 572>;

  <bb 571>:
  # DEBUG D#629 => D.73754.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73754
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73754
  # DEBUG this => D#1
  # DEBUG this => &D.73754
  # DEBUG D#626 => &D.73754._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _763
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _763
  # DEBUG this => D#620
  # DEBUG D.149591 => D#621
  operator delete (_763);

  <bb 572>:
  # DEBUG D#630 => &D.73754._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73754 ={v} {CLOBBER};
  # DEBUG D#195 => &D.73757
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73757
  # DEBUG this => &D.73756
  # DEBUG __s => "vc_alloc_delay"
  # DEBUG __a => D#1180
  # DEBUG D#1179 => D#1180
  # DEBUG this => &D.73756
  # DEBUG D#1177 => &D.73756._M_dataplus
  # DEBUG D#403 => D#1179
  # DEBUG this => D#1177
  # DEBUG __dat => &D.73756.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1177
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73756]._M_p = &D.73756.D.11539._M_local_buf;
  # DEBUG __s => "vc_alloc_delay"
  # DEBUG this => &D.73756
  # DEBUG __beg => "vc_alloc_delay"
  # DEBUG __end => &MEM[(void *)"vc_alloc_delay" + 14B]
  # DEBUG this => &D.73756
  # DEBUG __beg => "vc_alloc_delay"
  # DEBUG __end => &MEM[(void *)"vc_alloc_delay" + 14B]
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.329 (&D.73756, "vc_alloc_delay", &MEM[(void *)"vc_alloc_delay" + 14B]);
  goto <bb 574>;

<L667>:
  goto <bb 1633> (<L306>);

  <bb 574>:
  vc_alloc_delay_770 = Configuration::GetInt (config_173(D), &D.73756);

  <bb 575>:
  # DEBUG vc_alloc_delay => vc_alloc_delay_770
  # DEBUG this => &D.73756
  # DEBUG this => &D.73756
  # DEBUG this => &D.73756
  _773 = MEM[(char * *)&D.73756];
  # DEBUG D#1 => &D.73756
  # DEBUG this => D#1
  # DEBUG this => &D.73756
  if (&D.73756.D.11539._M_local_buf != _773)
    goto <bb 576>;
  else
    goto <bb 577>;

  <bb 576>:
  # DEBUG D#629 => D.73756.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73756
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73756
  # DEBUG this => D#1
  # DEBUG this => &D.73756
  # DEBUG D#626 => &D.73756._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _773
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _773
  # DEBUG this => D#620
  # DEBUG D.149609 => D#621
  operator delete (_773);

  <bb 577>:
  # DEBUG D#630 => &D.73756._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73756 ={v} {CLOBBER};
  # DEBUG this => &D.73757
  # DEBUG this => &D.73757
  # DEBUG D#195 => &D.73759
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73759
  # DEBUG this => &D.73758
  # DEBUG __s => "sw_alloc_delay"
  # DEBUG __a => D#1180
  # DEBUG D#1179 => D#1180
  # DEBUG this => &D.73758
  # DEBUG D#1177 => &D.73758._M_dataplus
  # DEBUG D#403 => D#1179
  # DEBUG this => D#1177
  # DEBUG __dat => &D.73758.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1177
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73758]._M_p = &D.73758.D.11539._M_local_buf;
  # DEBUG __s => "sw_alloc_delay"
  # DEBUG this => &D.73758
  # DEBUG __beg => "sw_alloc_delay"
  # DEBUG __end => &MEM[(void *)"sw_alloc_delay" + 14B]
  # DEBUG this => &D.73758
  # DEBUG __beg => "sw_alloc_delay"
  # DEBUG __end => &MEM[(void *)"sw_alloc_delay" + 14B]
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.329 (&D.73758, "sw_alloc_delay", &MEM[(void *)"sw_alloc_delay" + 14B]);
  goto <bb 579>;

<L668>:
  goto <bb 1633> (<L306>);

  <bb 579>:
  sw_alloc_delay_777 = Configuration::GetInt (config_173(D), &D.73758);

  <bb 580>:
  # DEBUG sw_alloc_delay => sw_alloc_delay_777
  # DEBUG this => &D.73758
  # DEBUG this => &D.73758
  # DEBUG this => &D.73758
  _780 = MEM[(char * *)&D.73758];
  # DEBUG D#1 => &D.73758
  # DEBUG this => D#1
  # DEBUG this => &D.73758
  if (&D.73758.D.11539._M_local_buf != _780)
    goto <bb 581>;
  else
    goto <bb 582>;

  <bb 581>:
  # DEBUG D#629 => D.73758.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73758
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73758
  # DEBUG this => D#1
  # DEBUG this => &D.73758
  # DEBUG D#626 => &D.73758._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _780
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _780
  # DEBUG this => D#620
  # DEBUG D.149627 => D#621
  operator delete (_780);

  <bb 582>:
  # DEBUG D#630 => &D.73758._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73758 ={v} {CLOBBER};
  # DEBUG this => &D.73759
  # DEBUG this => &D.73759
  # DEBUG D#195 => &D.73761
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73761
  # DEBUG this => &D.73760
  # DEBUG __s => "routing_delay"
  # DEBUG __a => D#1180
  # DEBUG D#1179 => D#1180
  # DEBUG this => &D.73760
  # DEBUG D#1177 => &D.73760._M_dataplus
  # DEBUG D#403 => D#1179
  # DEBUG this => D#1177
  # DEBUG __dat => &D.73760.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1177
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73760]._M_p = &D.73760.D.11539._M_local_buf;
  # DEBUG __s => "routing_delay"
  # DEBUG this => &D.73760
  # DEBUG __beg => "routing_delay"
  # DEBUG __end => &MEM[(void *)"routing_delay" + 13B]
  # DEBUG this => &D.73760
  # DEBUG __beg => "routing_delay"
  # DEBUG __end => &MEM[(void *)"routing_delay" + 13B]
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.329 (&D.73760, "routing_delay", &MEM[(void *)"routing_delay" + 13B]);
  goto <bb 584>;

<L669>:
  goto <bb 1633> (<L306>);

  <bb 584>:
  _784 = Configuration::GetInt (config_173(D), &D.73760);

  <bb 585>:
  # DEBUG D#195 => &D.73763
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73763
  # DEBUG this => &D.73762
  # DEBUG __s => "speculative"
  # DEBUG __a => D#1180
  # DEBUG D#1179 => D#1180
  # DEBUG this => &D.73762
  # DEBUG D#1177 => &D.73762._M_dataplus
  # DEBUG D#403 => D#1179
  # DEBUG this => D#1177
  # DEBUG __dat => &D.73762.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1177
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73762]._M_p = &D.73762.D.11539._M_local_buf;
  # DEBUG __s => "speculative"
  # DEBUG this => &D.73762
  # DEBUG __beg => "speculative"
  # DEBUG __end => &MEM[(void *)"speculative" + 11B]
  # DEBUG this => &D.73762
  # DEBUG __beg => "speculative"
  # DEBUG __end => &MEM[(void *)"speculative" + 11B]
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.329 (&D.73762, "speculative", &MEM[(void *)"speculative" + 11B]);
  goto <bb 587>;

<L671>:
  goto <bb 1628> (<L304>);

  <bb 587>:
  _787 = Configuration::GetInt (config_173(D), &D.73762);

  <bb 588>:
  if (_787 != 0)
    goto <bb 589>;
  else
    goto <bb 590>;

  <bb 589>:
  # DEBUG __a => &vc_alloc_delay
  # DEBUG __b => &sw_alloc_delay
  iftmp.48_4813 = MAX_EXPR <vc_alloc_delay_770, sw_alloc_delay_777>;
  goto <bb 591>;

  <bb 590>:
  iftmp.48_790 = vc_alloc_delay_770 + sw_alloc_delay_777;

  <bb 591>:
  # iftmp.48_18 = PHI <iftmp.48_4813(589), iftmp.48_790(590)>
  # DEBUG D#4317 => iftmp.48_18 + _784
  # DEBUG router_latency => D#4317
  # DEBUG this => &D.73762
  # DEBUG this => &D.73762
  # DEBUG this => &D.73762
  _793 = MEM[(char * *)&D.73762];
  # DEBUG D#1 => &D.73762
  # DEBUG this => D#1
  # DEBUG this => &D.73762
  if (&D.73762.D.11539._M_local_buf != _793)
    goto <bb 592>;
  else
    goto <bb 593>;

  <bb 592>:
  # DEBUG D#629 => D.73762.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73762
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73762
  # DEBUG this => D#1
  # DEBUG this => &D.73762
  # DEBUG D#626 => &D.73762._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _793
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _793
  # DEBUG this => D#620
  # DEBUG D.149692 => D#621
  operator delete (_793);

  <bb 593>:
  # DEBUG D#630 => &D.73762._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73762 ={v} {CLOBBER};
  # DEBUG this => &D.73763
  # DEBUG this => &D.73763
  # DEBUG this => &D.73760
  # DEBUG this => &D.73760
  # DEBUG this => &D.73760
  _795 = MEM[(char * *)&D.73760];
  # DEBUG D#1 => &D.73760
  # DEBUG this => D#1
  # DEBUG this => &D.73760
  if (&D.73760.D.11539._M_local_buf != _795)
    goto <bb 594>;
  else
    goto <bb 595>;

  <bb 594>:
  # DEBUG D#629 => D.73760.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73760
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73760
  # DEBUG this => D#1
  # DEBUG this => &D.73760
  # DEBUG D#626 => &D.73760._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _795
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _795
  # DEBUG this => D#620
  # DEBUG D.149675 => D#621
  operator delete (_795);

  <bb 595>:
  # DEBUG D#630 => &D.73760._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73760 ={v} {CLOBBER};
  # DEBUG this => &D.73761
  # DEBUG this => &D.73761
  _796 = (long unsigned int) subnet_6083;
  # DEBUG D#2830 => &this_129(D)->_net
  # DEBUG D#4316 => MEM[(struct Network * * *)this_129(D) + 184B]
  # DEBUG D#64 => D#2830
  # DEBUG __n => _796
  # DEBUG this => D#64
  _547 = _796 * 8;
  # DEBUG D#4315 => D#4316 + _547
  # DEBUG D#4314 => *D#4315
  # DEBUG this => D#4314
  # DEBUG index => source_6084
  # DEBUG D#58 => &D#4314->_inject
  # DEBUG D#4313 => MEM[(struct FlitChannel * * *)D#4314 + 136B]
  # DEBUG D#57 => D#58
  # DEBUG __n => _747
  # DEBUG this => D#57
  # DEBUG D#4312 => _747 * 8
  # DEBUG D#4311 => D#4313 + D#4312
  # DEBUG D#4310 => *D#4311
  # DEBUG D#2831 => &D#4310->D.46003
  # DEBUG D#4309 => MEM[(int *)D#4310 + 96B]
  # DEBUG D#74 => D#2831
  # DEBUG this => D#74
  # DEBUG D#4308 => D#4309 + 1
  # DEBUG D#4307 => D#4317 + D#4308
  # DEBUG D#2832 => &this_129(D)->_net
  # DEBUG D#64 => D#2832
  # DEBUG __n => _796
  # DEBUG this => D#64
  # DEBUG this => D#4314
  # DEBUG index => source_6084
  # DEBUG D#60 => &D#4314->_inject_cred
  # DEBUG D#4306 => MEM[(struct Channel * * *)D#4314 + 160B]
  # DEBUG D#59 => D#60
  # DEBUG __n => _747
  # DEBUG this => D#59
  # DEBUG D#4305 => D#4306 + D#4312
  # DEBUG D#4304 => *D#4305
  # DEBUG D#4303 => MEM[(int *)D#4304 + 96B]
  # DEBUG D#75 => D#4304
  # DEBUG this => D#75
  # DEBUG D#4302 => D#4307 + D#4303
  # DEBUG min_latency => D#4302
  _1952 = MEM[(struct BufferPolicy * *)_765 + 144B];
  # DEBUG D#55 => _765
  # DEBUG min_latency => D#4302
  # DEBUG this => D#55
  _621 = _1952->D.50434._vptr.Module;
  _620 = MEM[(int (*__vtbl_ptr_type) () *)_621 + 24B];
  PROF_4784 = [obj_type_ref] OBJ_TYPE_REF(_620;(struct BufferPolicy)_1952->3);
  if (PROF_4784 == SetMinLatency)
    goto <bb 596>;
  else
    goto <bb 597>;

  <bb 596>:
  # DEBUG D#2833 => &this_129(D)->_buf_states
  _1997 = MEM[(struct vector * *)this_129(D) + 536B];
  # DEBUG D#72 => D#2833
  # DEBUG __n => _747
  # DEBUG this => D#72
  _464 = _1997 + _729;
  _2002 = MEM[(struct BufferState * * *)_464];
  # DEBUG __n => _796
  # DEBUG this => D#76
  _482 = _2002 + _547;
  *_482 = _765;
  _806 = this_129(D)->_classes;
  _807 = (long unsigned int) _806;
  # DEBUG D#2834 => &this_129(D)->_last_vc
  _1999 = MEM[(struct vector * *)this_129(D) + 560B];
  # DEBUG D#73 => D#2834
  # DEBUG __n => _747
  # DEBUG this => D#73
  _506 = _1999 + _729;
  _1976 = MEM[(struct vector * *)_506];
  # DEBUG __n => _796
  # DEBUG this => D#67
  _516 = _796 * 24;
  _514 = _1976 + _516;
  # DEBUG this => _514
  # DEBUG __new_size => _807
  __x = -1;
  # DEBUG __x => __x
  _785 = MEM[(int * *)_514];
  # DEBUG D#68 => _514
  _4984 = MEM[(int * *)_514 + 8B];
  # DEBUG D#68 => _514
  # DEBUG this => D#68
  # DEBUG this => D#68
  _4985 = (long int) _4984;
  _4986 = (long int) _785;
  _4987 = _4985 - _4986;
  _4988 = _4987 /[ex] 4;
  _4989 = (size_type) _4988;
  if (_807 > _4989)
    goto <bb 599>;
  else
    goto <bb 602>;

  <bb 597>:
  _1964 = MEM[(struct Network * * *)this_129(D) + 184B];
  _545 = _1964 + _547;
  _798 = *_545;
  _580 = MEM[(struct FlitChannel * * *)_798 + 136B];
  _553 = _580 + _557;
  _549 = *_553;
  _2000 = MEM[(int *)_549 + 96B];
  _603 = MEM[(struct Channel * * *)_798 + 160B];
  _596 = _603 + _557;
  _591 = *_596;
  _2001 = MEM[(int *)_591 + 96B];
  _799 = _2000 + 1;
  router_latency_791 = iftmp.48_18 + _784;
  _800 = router_latency_791 + _799;
  min_latency_803 = _800 + _2001;
  OBJ_TYPE_REF(_620;(struct BufferPolicy)_1952->3) (_1952, min_latency_803);
  goto <bb 596>;

<L672>:
  goto <bb 1633> (<L306>);

  <bb 599>:
  # DEBUG D#68 => _514
  # DEBUG D#68 => _514
  # DEBUG this => D#68
  # DEBUG this => D#68
  _4990 = _807 - _4989;
  # DEBUG this => _514
  # DEBUG D#272 => &_514->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => _514
  MEM[(struct __normal_iterator *)&__position] = _4984;
  # DEBUG __n => _4990
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_514, __position, _4990, &__x);
  goto <bb 601>;

<L673>:
  goto <bb 1633> (<L306>);

  <bb 601>:
  goto <bb 604>;

  <bb 602>:
  # DEBUG D#68 => _514
  # DEBUG D#68 => _514
  # DEBUG this => D#68
  # DEBUG this => D#68
  if (_807 < _4989)
    goto <bb 603>;
  else
    goto <bb 601>;

  <bb 603>:
  _4991 = _807 * 4;
  _4992 = _785 + _4991;
  # DEBUG D#396 => _514
  # DEBUG __pos => _4992
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => _4992
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => _4992
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)_514 + 8B] = _4992;

  <bb 604>:
  # DEBUG this => &tmp_name
  tmp_name.D.23228._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&tmp_name + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &tmp_name._M_stringbuf
  MEM[(struct basic_stringbuf *)&tmp_name + 8B].D.23078._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#632 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  # DEBUG this => D#632
  # DEBUG this => D#632
  # DEBUG this => D#632
  _809 = MEM[(char * *)&tmp_name + 80B];
  # DEBUG D#1 => D#632
  # DEBUG this => D#1
  # DEBUG this => D#632
  if (&MEM[(const struct basic_string *)&tmp_name + 80B].D.11539._M_local_buf != _809)
    goto <bb 605>;
  else
    goto <bb 606>;

  <bb 605>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#632].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#632
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#632
  # DEBUG this => D#1
  # DEBUG this => D#632
  # DEBUG D#626 => &MEM[(struct basic_string *)D#632]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _809
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _809
  # DEBUG this => D#620
  # DEBUG D.171818 => D#621
  operator delete (_809);

  <bb 606>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#632]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&tmp_name + 80] ={v} {CLOBBER};
  # DEBUG D#631 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B].D.23078
  # DEBUG this => D#631
  MEM[(struct basic_streambuf *)&tmp_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&tmp_name + 8B]._M_buf_locale);
  MEM[(struct  &)&tmp_name + 8] ={v} {CLOBBER};
  # DEBUG this => &tmp_name.D.23228
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _4995 = MEM[(long int *)pretmp_3199 + -24B];
  iftmp.352_4996 = (sizetype) _4995;
  _4997 = &tmp_name.D.23228 + iftmp.352_4996;
  _4997->D.19921._vptr.ios_base = pretmp_3187;
  MEM[(struct  &)&tmp_name] ={v} {CLOBBER};
  # DEBUG D#636 => &tmp_name.D.23231
  # DEBUG this => D#636
  MEM[(struct basic_ios *)&tmp_name + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&tmp_name + 112B].D.19921);
  goto <bb 608>;

<L674>:
  pretmp_4481 = &this_129(D)->_qtime;
  pretmp_4512 = &this_129(D)->_total_in_flight_flits;
  pretmp_4546 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4579 = &this_129(D)->_retired_packets;
  pretmp_4877 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6380 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6657 = &this_129(D)->_pair_plat;
  pretmp_6747 = &this_129(D)->_pair_nlat;
  pretmp_6837 = &this_129(D)->_pair_flat;
  pretmp_6927 = &this_129(D)->_sent_packets;
  pretmp_7017 = &this_129(D)->_accepted_packets;
  pretmp_7107 = &this_129(D)->_sent_flits;
  pretmp_7197 = &this_129(D)->_accepted_flits;
  pretmp_7287 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 608>:
  tmp_name ={v} {CLOBBER};
  # DEBUG D#4271 => {CLOBBER}
  # DEBUG vc_alloc_delay => D#4271
  # DEBUG D#4272 => {CLOBBER}
  # DEBUG sw_alloc_delay => D#4272
  subnet_813 = subnet_6083 + 1;
  # DEBUG subnet => subnet_813
  # DEBUG subnet => subnet_813
  _758 = this_129(D)->_subnets;
  if (_758 <= subnet_813)
    goto <bb 609>;
  else
    goto <bb 610>;

  <bb 609>:
  # _4678 = PHI <_758(608)>
  goto <bb 611>;

  <bb 610>:
  goto <bb 551>;

  <bb 611>:
  # prephitmp_3196 = PHI <_4678(609), _6243(549)>
  source_829 = source_6084 + 1;
  # DEBUG source => source_829
  # DEBUG source => source_829
  _744 = this_129(D)->_nodes;
  if (_744 <= source_829)
    goto <bb 612>;
  else
    goto <bb 613>;

  <bb 612>:
  # _4681 = PHI <_744(611)>
  goto <bb 614>;

  <bb 613>:
  goto <bb 534>;

  <bb 614>:
  # _6002 = PHI <_4681(612), _6247(532)>
  # DEBUG this => &D.73764
  # DEBUG D#259 => &D.73764.D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)&D.73764]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73764]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73764]._M_end_of_storage = 0B;
  _833 = (long unsigned int) _6002;
  _834 = &this_129(D)->_qtime;
  std::vector<std::vector<int> >::resize (_834, _833, &D.73764);

  <bb 615>:
  # DEBUG this => &D.73764
  # DEBUG D#476 => &D.73764.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73764.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73764.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73764.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _838 = MEM[(struct _Vector_base *)&D.73764]._M_impl._M_start;
  # DEBUG D#473 => (long int) _838
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _838
  # DEBUG __n => D#470
  if (_838 != 0B)
    goto <bb 616>;
  else
    goto <bb 617>;

  <bb 616>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _838
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _838
  # DEBUG this => D#462
  # DEBUG D.149739 => D#463
  operator delete (_838);

  <bb 617>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73764 ={v} {CLOBBER};
  # DEBUG this => &D.73765
  # DEBUG D#554 => &D.73765.D.48430
  # DEBUG this => D#554
  # DEBUG D#553 => &D#554->_M_impl
  # DEBUG this => D#553
  # DEBUG this => D#553
  # DEBUG this => D#553
  # DEBUG D#552 => &D#553->_M_start
  # DEBUG this => D#552
  # DEBUG D#39 => &D#552->D.33184
  # DEBUG this => D#39
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#39
  MEM[(struct _Bit_iterator_base *)&D.73765]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)&D.73765]._M_offset = 0;
  # DEBUG D#551 => &D#553->_M_finish
  # DEBUG this => D#551
  # DEBUG D#39 => &D#551->D.33184
  # DEBUG this => D#39
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#39
  MEM[(struct _Bit_iterator_base *)&D.73765 + 16B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)&D.73765 + 16B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)&D.73765]._M_end_of_storage = 0B;
  _839 = this_129(D)->_nodes;
  _840 = (long unsigned int) _839;
  _841 = &this_129(D)->_qdrained;
  # DEBUG this => _841
  # DEBUG __new_size => _840
  # DEBUG __x => &D.73765
  _5002 = MEM[(struct vector * *)this_129(D) + 624B];
  # DEBUG D#210 => _841
  _5003 = MEM[(struct vector * *)this_129(D) + 632B];
  # DEBUG D#210 => _841
  # DEBUG this => D#210
  # DEBUG this => D#210
  _5004 = (long int) _5003;
  _5005 = (long int) _5002;
  _5006 = _5004 - _5005;
  _5007 = _5006 /[ex] 40;
  _5008 = (size_type) _5007;
  if (_840 > _5008)
    goto <bb 618>;
  else
    goto <bb 620>;

  <bb 618>:
  # DEBUG D#210 => _841
  # DEBUG D#210 => _841
  # DEBUG this => D#210
  # DEBUG this => D#210
  _5009 = _840 - _5008;
  # DEBUG this => _841
  # DEBUG D#306 => &_841->D.60085._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#306
  # DEBUG this => _841
  MEM[(struct __normal_iterator *)&__position] = _5003;
  # DEBUG __n => _5009
  # DEBUG __x => &D.73765
  std::vector<std::vector<bool> >::_M_fill_insert (_841, __position, _5009, &D.73765);

  <bb 619>:
  goto <bb 628>;

  <bb 620>:
  # DEBUG D#210 => _841
  # DEBUG D#210 => _841
  # DEBUG this => D#210
  # DEBUG this => D#210
  if (_840 < _5008)
    goto <bb 621>;
  else
    goto <bb 619>;

  <bb 621>:
  _5010 = _840 * 40;
  __pos_5011 = _5002 + _5010;
  # DEBUG D#1023 => _841
  # DEBUG __pos => __pos_5011
  # DEBUG D#1022 => D#1023
  # DEBUG this => D#1022
  # DEBUG D#1021 => &D#1022->D.60085
  # DEBUG this => D#1021
  # DEBUG __first => __pos_5011
  # DEBUG __last => _5003
  # DEBUG __first => __pos_5011
  if (_5003 == __pos_5011)
    goto <bb 622>;
  else
    goto <bb 623>;

  <bb 622>:
  MEM[(struct vector * *)this_129(D) + 632B] = __pos_5011;
  goto <bb 628>;

  <bb 623>:

  <bb 624>:
  # __pos_6023 = PHI <__pos_5011(623), __pos_5014(627)>
  # DEBUG __first => __pos_6023
  # DEBUG __r => __pos_6023
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG D#4262 => &__pos_6023->D.48430
  # DEBUG this => D#4262
  # DEBUG this => D#4262
  _842 = MEM[(struct _Bvector_base *)__pos_6023]._M_impl._M_start.D.33184._M_p;
  if (_842 != 0B)
    goto <bb 625>;
  else
    goto <bb 626>;

  <bb 625>:
  # DEBUG D#1015 => &D#4262->_M_impl
  _5015 = MEM[(long unsigned int * *)__pos_6023 + 32B];
  # DEBUG D#375 => D#1015
  # DEBUG this => D#375
  _5017 = (long int) _5015;
  _5018 = (long int) _842;
  _5019 = _5017 - _5018;
  # DEBUG D#1018 => _5019 /[ex] 8
  # DEBUG D#1017 => (const size_t) D#1018
  # DEBUG __n => D#1017
  _5020 = (long unsigned int) _5019;
  _5021 = -_5020;
  _5022 = _5015 + _5021;
  # DEBUG D#1016 => &D#4262->_M_impl
  # DEBUG D#1013 => D#1016
  # DEBUG D#1014 => D#1017
  # DEBUG __p => _5022
  # DEBUG __a => D#1013
  # DEBUG __n => D#1014
  # DEBUG D#1012 => D#1014
  # DEBUG D#1011 => D#1013
  # DEBUG D#1009 => D#1011
  # DEBUG D#1010 => D#1012
  # DEBUG __p => _5022
  # DEBUG this => D#1009
  # DEBUG D.171858 => D#1010
  operator delete (_5022);

  <bb 626>:
  # DEBUG D#1019 => &D#4262->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__pos_6023] ={v} {CLOBBER};
  __pos_5014 = __pos_6023 + 40;
  # DEBUG __first => __pos_5014
  # DEBUG __first => __pos_5014
  if (_5003 == __pos_5014)
    goto <bb 622>;
  else
    goto <bb 627>;

  <bb 627>:
  goto <bb 624>;

  <bb 628>:
  # DEBUG this => &D.73765
  # DEBUG this => &D.73765.D.48430
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&D.73765.D.48430);
  # DEBUG D#1019 => &MEM[(struct _Bvector_base *)&D.73765]._M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  D.73765 ={v} {CLOBBER};
  # DEBUG this => &D.73766
  # DEBUG D#1032 => &D.73766.D.70701
  # DEBUG this => D#1032
  # DEBUG D#1031 => &D#1032->_M_impl
  # DEBUG this => D#1031
  # DEBUG this => D#1031
  # DEBUG this => D#1031
  MEM[(struct _Vector_impl *)&D.73766]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73766]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73766]._M_end_of_storage = 0B;
  _844 = this_129(D)->_nodes;
  _845 = (long unsigned int) _844;
  _846 = &this_129(D)->_partial_packets;
  # DEBUG this => _846
  # DEBUG __new_size => _845
  # DEBUG __x => &D.73766
  _5023 = MEM[(struct vector * *)this_129(D) + 648B];
  # DEBUG D#212 => _846
  _5024 = MEM[(struct vector * *)this_129(D) + 656B];
  # DEBUG D#212 => _846
  # DEBUG this => D#212
  # DEBUG this => D#212
  _5025 = (long int) _5024;
  _5026 = (long int) _5023;
  _5027 = _5025 - _5026;
  _5028 = _5027 /[ex] 24;
  _5029 = (size_type) _5028;
  if (_845 > _5029)
    goto <bb 629>;
  else
    goto <bb 631>;

  <bb 629>:
  # DEBUG D#212 => _846
  # DEBUG D#212 => _846
  # DEBUG this => D#212
  # DEBUG this => D#212
  _5030 = _845 - _5029;
  # DEBUG this => _846
  # DEBUG D#309 => &_846->D.60835._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#309
  # DEBUG this => _846
  MEM[(struct __normal_iterator *)&__position] = _5024;
  # DEBUG __n => _5030
  # DEBUG __x => &D.73766
  std::vector<std::vector<std::__cxx11::list<Flit*> > >::_M_fill_insert (_846, __position, _5030, &D.73766);

  <bb 630>:
  goto <bb 637>;

  <bb 631>:
  # DEBUG D#212 => _846
  # DEBUG D#212 => _846
  # DEBUG this => D#212
  # DEBUG this => D#212
  if (_845 < _5029)
    goto <bb 632>;
  else
    goto <bb 630>;

  <bb 632>:
  _5031 = _845 * 24;
  __pos_5032 = _5023 + _5031;
  # DEBUG D#1066 => _846
  # DEBUG __pos => __pos_5032
  # DEBUG D#1065 => D#1066
  # DEBUG this => D#1065
  # DEBUG D#1064 => &D#1065->D.60835
  # DEBUG this => D#1064
  # DEBUG __first => __pos_5032
  # DEBUG __last => _5024
  # DEBUG __first => __pos_5032
  if (_5024 == __pos_5032)
    goto <bb 633>;
  else
    goto <bb 634>;

  <bb 633>:
  MEM[(struct vector * *)this_129(D) + 656B] = __pos_5032;
  goto <bb 637>;

  <bb 634>:

  <bb 635>:
  # __pos_6025 = PHI <__pos_5032(634), __pos_5034(636)>
  # DEBUG __first => __pos_6025
  # DEBUG __r => __pos_6025
  # DEBUG __pointer => NULL
  std::vector<std::__cxx11::list<Flit*> >::~vector (__pos_6025);
  __pos_5034 = __pos_6025 + 24;
  # DEBUG __first => __pos_5034
  # DEBUG __first => __pos_5034
  if (_5024 == __pos_5034)
    goto <bb 633>;
  else
    goto <bb 636>;

  <bb 636>:
  goto <bb 635>;

  <bb 637>:
  std::vector<std::__cxx11::list<Flit*> >::~vector (&D.73766);
  D.73766 ={v} {CLOBBER};
  # DEBUG s => 0
  # DEBUG s => 0
  _6260 = this_129(D)->_nodes;
  if (_6260 <= 0)
    goto <bb 638>;
  else
    goto <bb 639>;

  <bb 638>:
  pretmp_6123 = this_129(D)->_classes;
  pretmp_5308 = (long unsigned int) pretmp_6123;
  goto <bb 675>;

  <bb 639>:
  pretmp_2319 = this_129(D)->_classes;

  <bb 640>:
  # s_6082 = PHI <0(639), s_864(673)>
  # prephitmp_4994 = PHI <pretmp_2319(639), prephitmp_3275(673)>
  # DEBUG s => s_6082
  _852 = (long unsigned int) prephitmp_4994;
  _853 = (long unsigned int) s_6082;
  # DEBUG D#2835 => &this_129(D)->_qtime
  _1977 = MEM[(struct vector * *)this_129(D) + 600B];
  # DEBUG D#67 => D#2835
  # DEBUG __n => _853
  # DEBUG this => D#67
  _836 = _853 * 24;
  _832 = _1977 + _836;
  # DEBUG this => _832
  # DEBUG __new_size => _852
  __x = 0;
  # DEBUG __x => __x
  _847 = MEM[(int * *)_832];
  # DEBUG D#68 => _832
  _5035 = MEM[(int * *)_832 + 8B];
  # DEBUG D#68 => _832
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5036 = (long int) _5035;
  _5037 = (long int) _847;
  _5038 = _5036 - _5037;
  _5039 = _5038 /[ex] 4;
  _5040 = (size_type) _5039;
  if (_852 > _5040)
    goto <bb 641>;
  else
    goto <bb 644>;

  <bb 641>:
  # DEBUG D#68 => _832
  # DEBUG D#68 => _832
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5041 = _852 - _5040;
  # DEBUG this => _832
  # DEBUG D#272 => &_832->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => _832
  MEM[(struct __normal_iterator *)&__position] = _5035;
  # DEBUG __n => _5041
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_832, __position, _5041, &__x);
  goto <bb 643>;

<L675>:
  pretmp_4493 = &this_129(D)->_total_in_flight_flits;
  pretmp_4524 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4558 = &this_129(D)->_retired_packets;
  pretmp_5946 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6337 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6614 = &this_129(D)->_pair_plat;
  pretmp_6704 = &this_129(D)->_pair_nlat;
  pretmp_6794 = &this_129(D)->_pair_flat;
  pretmp_6884 = &this_129(D)->_sent_packets;
  pretmp_6974 = &this_129(D)->_accepted_packets;
  pretmp_7064 = &this_129(D)->_sent_flits;
  pretmp_7154 = &this_129(D)->_accepted_flits;
  pretmp_7244 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 643>:
  pretmp_3310 = this_129(D)->_classes;
  pretmp_3294 = (long unsigned int) pretmp_3310;
  goto <bb 646>;

  <bb 644>:
  # DEBUG D#68 => _832
  # DEBUG D#68 => _832
  # DEBUG this => D#68
  # DEBUG this => D#68
  if (_852 < _5040)
    goto <bb 645>;
  else
    goto <bb 646>;

  <bb 645>:
  _5042 = _852 * 4;
  _5043 = _847 + _5042;
  # DEBUG D#396 => _832
  # DEBUG __pos => _5043
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => _5043
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => _5043
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)_832 + 8B] = _5043;

  <bb 646>:
  # prephitmp_3293 = PHI <prephitmp_4994(644), pretmp_3310(643), prephitmp_4994(645)>
  # prephitmp_3295 = PHI <_852(644), pretmp_3294(643), _852(645)>
  # DEBUG D#4294 => this_129(D)->_classes
  # DEBUG D#2836 => &this_129(D)->_qdrained
  _2003 = MEM[(struct vector * *)this_129(D) + 624B];
  # DEBUG D#77 => D#2836
  # DEBUG __n => _853
  # DEBUG this => D#77
  _458 = _853 * 40;
  _453 = _2003 + _458;
  # DEBUG this => _453
  # DEBUG __new_size => (long unsigned int) D#4294
  # DEBUG __x => 0
  # DEBUG this => _453
  # DEBUG this => _453
  # DEBUG D#208 => &MEM[(const struct vector *)_453].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  _854 = MEM[(const struct _Bit_iterator *)_453].D.33184._M_offset;
  _5044 = MEM[(const struct _Bit_iterator *)_453].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _5044
  # DEBUG __y => _854
  # DEBUG this => D#48
  # DEBUG this => _453
  # DEBUG D#209 => &MEM[(const struct vector *)_453].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  _5045 = MEM[(const struct _Bit_iterator *)_453 + 16B].D.33184._M_offset;
  _5046 = MEM[(const struct _Bit_iterator *)_453 + 16B].D.33184._M_p;
  # DEBUG this => D#48
  # DEBUG __x => _5046
  # DEBUG __y => _5045
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _5047 = (long int) _5046;
  _5048 = (long int) _5044;
  _5049 = _5047 - _5048;
  _5050 = _5049 * 8;
  _5051 = (long int) _5045;
  _5052 = _5050 + _5051;
  _5053 = (long int) _854;
  _5054 = _5052 - _5053;
  _5055 = (size_type) _5054;
  if (prephitmp_3295 < _5055)
    goto <bb 647>;
  else
    goto <bb 650>;

  <bb 647>:
  __new_size.239_5056 = (long int) prephitmp_3293;
  # DEBUG this => _453
  # DEBUG this => NULL
  # DEBUG __i => __new_size.239_5056
  # DEBUG __tmp$_M_p => _5044
  # DEBUG __tmp$_M_offset => _854
  # DEBUG this => &__tmp
  # DEBUG __i => __new_size.239_5056
  # DEBUG D#44 => &__tmp.D.33184
  # DEBUG this => D#44
  # DEBUG __i => __new_size.239_5056
  __n_5057 = _5053 + __new_size.239_5056;
  # DEBUG __n => __n_5057
  _5058 = __n_5057 / 64;
  _5059 = (long unsigned int) _5058;
  _5060 = _5059 * 8;
  __tmp$_M_p_5061 = _5044 + _5060;
  # DEBUG __tmp$_M_p => __tmp$_M_p_5061
  __n_5062 = __n_5057 % 64;
  # DEBUG __n => __n_5062
  if (__n_5062 < 0)
    goto <bb 648>;
  else
    goto <bb 649>;

  <bb 648>:
  __n_5063 = __n_5062 + 64;
  # DEBUG __n => __n_5063
  __tmp$_M_p_5064 = __tmp$_M_p_5061 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_5064

  <bb 649>:
  # __n_5065 = PHI <__n_5062(647), __n_5063(648)>
  # __tmp$_M_p_5067 = PHI <__tmp$_M_p_5061(647), __tmp$_M_p_5064(648)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_5067
  # DEBUG __n => __n_5065
  _5066 = (unsigned int) __n_5065;
  # DEBUG __tmp$_M_offset => _5066
  # DEBUG D#45 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#45
  # DEBUG D#46 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#46
  # DEBUG this => _453
  MEM[(struct _Bit_iterator *)_453 + 16B] = __tmp$_M_p_5067;
  MEM[(struct _Bit_iterator *)_453 + 24B] = _5066;
  goto <bb 652>;

  <bb 650>:
  # DEBUG this => _453
  # DEBUG this => _453
  # DEBUG D#208 => &MEM[(const struct vector *)_453].D.48430._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#208
  # DEBUG this => D#48
  # DEBUG __x => _5044
  # DEBUG __y => _854
  # DEBUG this => D#48
  # DEBUG this => _453
  # DEBUG D#209 => &MEM[(const struct vector *)_453].D.48430._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#209
  # DEBUG this => D#48
  # DEBUG __x => _5046
  # DEBUG __y => _5045
  # DEBUG this => D#48
  # DEBUG __x => D#37
  # DEBUG __x => D#37
  # DEBUG __y => D#38
  # DEBUG __y => D#38
  _5068 = prephitmp_3295 - _5055;
  # DEBUG this => _453
  # DEBUG D#1891 => &__x
  # DEBUG this => _453
  MEM[(struct _Bit_iterator *)&__position] = _5046;
  MEM[(struct _Bit_iterator *)&__position + 8B] = _5045;
  # DEBUG __n => _5068
  # DEBUG __x => D#1891
  std::vector<bool>::_M_fill_insert (_453, __position, _5068, 0);
  goto <bb 652>;

<L676>:
  pretmp_4494 = &this_129(D)->_total_in_flight_flits;
  pretmp_4525 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4559 = &this_129(D)->_retired_packets;
  pretmp_6227 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6338 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6615 = &this_129(D)->_pair_plat;
  pretmp_6705 = &this_129(D)->_pair_nlat;
  pretmp_6795 = &this_129(D)->_pair_flat;
  pretmp_6885 = &this_129(D)->_sent_packets;
  pretmp_6975 = &this_129(D)->_accepted_packets;
  pretmp_7065 = &this_129(D)->_sent_flits;
  pretmp_7155 = &this_129(D)->_accepted_flits;
  pretmp_7245 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 652>:
  # DEBUG this => &D.73769
  # DEBUG D#1051 => &D.73769.D.71295
  # DEBUG this => D#1051
  # DEBUG D#1050 => &D#1051->_M_impl
  # DEBUG this => D#1050
  # DEBUG this => D#1050
  # DEBUG this => D#1050
  MEM[(struct _List_impl *)&D.73769]._M_node._M_data = 0;
  # DEBUG this => D#1051
  MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893._M_next = &MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893._M_prev = &MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893;
  # DEBUG D#558 => D#1051
  # DEBUG __n => 0
  # DEBUG this => D#558
  _860 = this_129(D)->_classes;
  _861 = (long unsigned int) _860;
  # DEBUG D#2837 => &this_129(D)->_partial_packets
  _2004 = MEM[(struct vector * *)this_129(D) + 648B];
  # DEBUG D#78 => D#2837
  # DEBUG __n => _853
  # DEBUG this => D#78
  _432 = _2004 + _836;
  # DEBUG this => _432
  # DEBUG __new_size => _861
  # DEBUG __x => &D.73769
  _858 = MEM[(struct list * *)_432];
  # DEBUG D#211 => _432
  _5070 = MEM[(struct list * *)_432 + 8B];
  # DEBUG D#211 => _432
  # DEBUG this => D#211
  # DEBUG this => D#211
  _5071 = (long int) _5070;
  _5072 = (long int) _858;
  _5073 = _5071 - _5072;
  _5074 = _5073 /[ex] 24;
  _5075 = (size_type) _5074;
  if (_861 > _5075)
    goto <bb 653>;
  else
    goto <bb 655>;

  <bb 653>:
  # DEBUG D#211 => _432
  # DEBUG D#211 => _432
  # DEBUG this => D#211
  # DEBUG this => D#211
  _5076 = _861 - _5075;
  # DEBUG this => _432
  # DEBUG D#313 => &_432->D.70701._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#313
  # DEBUG this => _432
  MEM[(struct __normal_iterator *)&__position] = _5070;
  # DEBUG __n => _5076
  # DEBUG __x => &D.73769
  std::vector<std::__cxx11::list<Flit*> >::_M_fill_insert (_432, __position, _5076, &D.73769);

  <bb 654>:
  pretmp_2099 = MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893._M_next;
  goto <bb 666>;

  <bb 655>:
  # DEBUG D#211 => _432
  # DEBUG D#211 => _432
  # DEBUG this => D#211
  # DEBUG this => D#211
  if (_861 < _5075)
    goto <bb 656>;
  else
    goto <bb 672>;

  <bb 656>:
  _5077 = _861 * 24;
  __pos_5078 = _858 + _5077;
  # DEBUG D#1060 => _432
  # DEBUG __pos => __pos_5078
  # DEBUG D#1059 => D#1060
  # DEBUG this => D#1059
  # DEBUG D#1058 => &D#1059->D.70701
  # DEBUG this => D#1058
  # DEBUG __first => __pos_5078
  # DEBUG __last => _5070
  # DEBUG __first => __pos_5078
  if (_5070 == __pos_5078)
    goto <bb 665>;
  else
    goto <bb 657>;

  <bb 657>:

  <bb 658>:
  # __pos_6026 = PHI <__pos_5078(657), __pos_5084(660)>
  # DEBUG __first => __pos_6026
  # DEBUG __r => __pos_6026
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_5080 = MEM[(struct _List_base *)__pos_6026]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_5080
  # DEBUG __cur => __tmp_5080
  _6252 = &MEM[(struct _List_base *)__pos_6026]._M_impl._M_node.D.37893;
  if (__tmp_5080 == _6252)
    goto <bb 659>;
  else
    goto <bb 661>;

  <bb 659>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__pos_6026] ={v} {CLOBBER};
  __pos_5084 = __pos_6026 + 24;
  # DEBUG __first => __pos_5084
  # DEBUG __first => __pos_5084
  if (_5070 == __pos_5084)
    goto <bb 664>;
  else
    goto <bb 660>;

  <bb 660>:
  goto <bb 658>;

  <bb 661>:

  <bb 662>:
  # __tmp_6027 = PHI <__tmp_5080(661), __tmp_5083(663)>
  # DEBUG __cur => __tmp_6027
  # DEBUG __tmp => __tmp_6027
  __tmp_5083 = __tmp_6027->D.82395._M_next;
  # DEBUG __cur => __tmp_5083
  # DEBUG D#1054 => &__tmp_6027->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_6027
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_6027
  # DEBUG this => D#559
  # DEBUG D.171942 => D#560
  operator delete (__tmp_6027);
  # DEBUG __cur => __tmp_5083
  if (__tmp_5083 == _6252)
    goto <bb 659>;
  else
    goto <bb 663>;

  <bb 663>:
  goto <bb 662>;

  <bb 664>:
  pretmp_3263 = MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893._M_next;

  <bb 665>:
  # prephitmp_3264 = PHI <pretmp_3263(664), &MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893(656)>
  MEM[(struct list * *)_432 + 8B] = __pos_5078;

  <bb 666>:
  # prephitmp_2320 = PHI <prephitmp_3264(665), pretmp_2099(654)>
  # DEBUG this => &D.73769
  # DEBUG D#1056 => &D.73769.D.71295
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  # DEBUG D#4293 => MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893._M_next
  # DEBUG __cur => D#4293
  # DEBUG __cur => D#4293
  if (&MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893 == prephitmp_2320)
    goto <bb 667>;
  else
    goto <bb 668>;

  <bb 667>:
  pretmp_3274 = this_129(D)->_classes;
  pretmp_5571 = (long unsigned int) pretmp_3274;
  goto <bb 672>;

  <bb 668>:

  <bb 669>:
  # __tmp_5919 = PHI <prephitmp_2320(668), __tmp_406(670)>
  # DEBUG __cur => __tmp_5919
  # DEBUG __tmp => __tmp_5919
  __tmp_406 = __tmp_5919->D.82395._M_next;
  # DEBUG __cur => __tmp_406
  # DEBUG D#1054 => &__tmp_5919->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_5919
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_5919
  # DEBUG this => D#559
  # DEBUG D.149777 => D#560
  operator delete (__tmp_5919);
  # DEBUG __cur => __tmp_406
  if (&MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893 == __tmp_406)
    goto <bb 671>;
  else
    goto <bb 670>;

  <bb 670>:
  goto <bb 669>;

  <bb 671>:
  pretmp_3288 = this_129(D)->_classes;
  pretmp_5570 = (long unsigned int) pretmp_3288;

  <bb 672>:
  # prephitmp_3275 = PHI <pretmp_3288(671), pretmp_3274(667), _860(655)>
  # prephitmp_5572 = PHI <pretmp_5570(671), pretmp_5571(667), _861(655)>
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  D.73769 ={v} {CLOBBER};
  s_864 = s_6082 + 1;
  # DEBUG s => s_864
  # DEBUG s => s_864
  _850 = this_129(D)->_nodes;
  if (_850 <= s_864)
    goto <bb 674>;
  else
    goto <bb 673>;

  <bb 673>:
  goto <bb 640>;

  <bb 674>:
  # prephitmp_4631 = PHI <prephitmp_5572(672)>

  <bb 675>:
  # prephitmp_5094 = PHI <prephitmp_4631(674), pretmp_5308(638)>
  # DEBUG this => &D.73770
  # DEBUG D#1075 => &D.73770._M_t
  # DEBUG this => D#1075
  # DEBUG D#1074 => &MEM[(struct _Rb_tree *)D#1075]._M_impl
  # DEBUG this => D#1074
  # DEBUG this => D#1074
  # DEBUG this => D#1074
  MEM[(struct _Rb_tree_impl *)&D.73770]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&D.73770]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&D.73770]._M_node_count = 0;
  # DEBUG this => D#1074
  MEM[(struct _Rb_tree_impl *)&D.73770]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&D.73770]._M_header;
  MEM[(struct _Rb_tree_impl *)&D.73770]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&D.73770]._M_header;
  _868 = &this_129(D)->_total_in_flight_flits;
  std::vector<std::map<int, Flit*> >::resize (_868, prephitmp_5094, &D.73770);

  <bb 676>:
  # DEBUG this => &D.73770
  # DEBUG this => &D.73770._M_t
  _401 = MEM[(struct _Rb_tree_node_base * *)&D.73770 + 16B];
  # DEBUG D#214 => &D.73770._M_t
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (&D.73770._M_t, _401);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)&D.73770]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  D.73770 ={v} {CLOBBER};
  # DEBUG this => &D.73771
  # DEBUG D#1075 => &D.73771._M_t
  # DEBUG this => D#1075
  # DEBUG D#1074 => &MEM[(struct _Rb_tree *)D#1075]._M_impl
  # DEBUG this => D#1074
  # DEBUG this => D#1074
  # DEBUG this => D#1074
  MEM[(struct _Rb_tree_impl *)&D.73771]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&D.73771]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&D.73771]._M_node_count = 0;
  # DEBUG this => D#1074
  MEM[(struct _Rb_tree_impl *)&D.73771]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&D.73771]._M_header;
  MEM[(struct _Rb_tree_impl *)&D.73771]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&D.73771]._M_header;
  _871 = this_129(D)->_classes;
  _872 = (long unsigned int) _871;
  _873 = &this_129(D)->_measured_in_flight_flits;
  std::vector<std::map<int, Flit*> >::resize (_873, _872, &D.73771);

  <bb 677>:
  # DEBUG this => &D.73771
  # DEBUG this => &D.73771._M_t
  _388 = MEM[(struct _Rb_tree_node_base * *)&D.73771 + 16B];
  # DEBUG D#214 => &D.73771._M_t
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (&D.73771._M_t, _388);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)&D.73771]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  D.73771 ={v} {CLOBBER};
  # DEBUG this => &D.73772
  # DEBUG D#1075 => &D.73772._M_t
  # DEBUG this => D#1075
  # DEBUG D#1074 => &MEM[(struct _Rb_tree *)D#1075]._M_impl
  # DEBUG this => D#1074
  # DEBUG this => D#1074
  # DEBUG this => D#1074
  MEM[(struct _Rb_tree_impl *)&D.73772]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&D.73772]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&D.73772]._M_node_count = 0;
  # DEBUG this => D#1074
  MEM[(struct _Rb_tree_impl *)&D.73772]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&D.73772]._M_header;
  MEM[(struct _Rb_tree_impl *)&D.73772]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&D.73772]._M_header;
  _876 = this_129(D)->_classes;
  _877 = (long unsigned int) _876;
  _878 = &this_129(D)->_retired_packets;
  std::vector<std::map<int, Flit*> >::resize (_878, _877, &D.73772);

  <bb 678>:
  # DEBUG this => &D.73772
  # DEBUG this => &D.73772._M_t
  _387 = MEM[(struct _Rb_tree_node_base * *)&D.73772 + 16B];
  # DEBUG D#214 => &D.73772._M_t
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (&D.73772._M_t, _387);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)&D.73772]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  D.73772 ={v} {CLOBBER};
  _881 = this_129(D)->_nodes;
  _882 = (long unsigned int) _881;
  _883 = &this_129(D)->_packet_seq_no;
  std::vector<int>::resize.constprop (_883, _882);
  goto <bb 680>;

<L677>:
  pretmp_5938 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6347 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6624 = &this_129(D)->_pair_plat;
  pretmp_6714 = &this_129(D)->_pair_nlat;
  pretmp_6804 = &this_129(D)->_pair_flat;
  pretmp_6894 = &this_129(D)->_sent_packets;
  pretmp_6984 = &this_129(D)->_accepted_packets;
  pretmp_7074 = &this_129(D)->_sent_flits;
  pretmp_7164 = &this_129(D)->_accepted_flits;
  pretmp_7254 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 680>:
  # DEBUG this => &D.73773
  # DEBUG D#1079 => &D.73773.D.73144
  # DEBUG this => D#1079
  # DEBUG D#1078 => &D#1079->_M_impl
  # DEBUG this => D#1078
  # DEBUG this => D#1078
  # DEBUG this => D#1078
  MEM[(struct _List_impl *)&D.73773]._M_node._M_data = 0;
  # DEBUG this => D#1079
  MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893._M_next = &MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893;
  MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893._M_prev = &MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893;
  # DEBUG D#566 => D#1079
  # DEBUG __n => 0
  # DEBUG this => D#566
  _886 = this_129(D)->_nodes;
  _887 = (long unsigned int) _886;
  _888 = &this_129(D)->_repliesPending;
  # DEBUG this => _888
  # DEBUG __new_size => _887
  # DEBUG __x => &D.73773
  _862 = MEM[(struct list * *)this_129(D) + 808B];
  # DEBUG D#216 => _888
  _5085 = MEM[(struct list * *)this_129(D) + 816B];
  # DEBUG D#216 => _888
  # DEBUG this => D#216
  # DEBUG this => D#216
  _5086 = (long int) _5085;
  _5087 = (long int) _862;
  _5088 = _5086 - _5087;
  _5089 = _5088 /[ex] 24;
  _5090 = (size_type) _5089;
  if (_887 > _5090)
    goto <bb 681>;
  else
    goto <bb 683>;

  <bb 681>:
  # DEBUG D#216 => _888
  # DEBUG D#216 => _888
  # DEBUG this => D#216
  # DEBUG this => D#216
  _5091 = _887 - _5090;
  # DEBUG this => _888
  # DEBUG D#322 => &_888->D.62343._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#322
  # DEBUG this => _888
  MEM[(struct __normal_iterator *)&__position] = _5085;
  # DEBUG __n => _5091
  # DEBUG __x => &D.73773
  std::vector<std::__cxx11::list<PacketReplyInfo*> >::_M_fill_insert (_888, __position, _5091, &D.73773);

  <bb 682>:
  pretmp_6261 = MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893._M_next;
  goto <bb 694>;

  <bb 683>:
  # DEBUG D#216 => _888
  # DEBUG D#216 => _888
  # DEBUG this => D#216
  # DEBUG this => D#216
  if (_887 < _5090)
    goto <bb 684>;
  else
    goto <bb 700>;

  <bb 684>:
  _5092 = _887 * 24;
  __pos_5093 = _862 + _5092;
  # DEBUG D#1088 => _888
  # DEBUG __pos => __pos_5093
  # DEBUG D#1087 => D#1088
  # DEBUG this => D#1087
  # DEBUG D#1086 => &D#1087->D.62343
  # DEBUG this => D#1086
  # DEBUG __first => __pos_5093
  # DEBUG __last => _5085
  # DEBUG __first => __pos_5093
  if (_5085 == __pos_5093)
    goto <bb 693>;
  else
    goto <bb 685>;

  <bb 685>:

  <bb 686>:
  # __pos_6029 = PHI <__pos_5093(685), __pos_5099(688)>
  # DEBUG __first => __pos_6029
  # DEBUG __r => __pos_6029
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_5095 = MEM[(struct _List_base *)__pos_6029]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_5095
  # DEBUG __cur => __tmp_5095
  _6264 = &MEM[(struct _List_base *)__pos_6029]._M_impl._M_node.D.37893;
  if (__tmp_5095 == _6264)
    goto <bb 687>;
  else
    goto <bb 689>;

  <bb 687>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__pos_6029] ={v} {CLOBBER};
  __pos_5099 = __pos_6029 + 24;
  # DEBUG __first => __pos_5099
  # DEBUG __first => __pos_5099
  if (_5085 == __pos_5099)
    goto <bb 692>;
  else
    goto <bb 688>;

  <bb 688>:
  goto <bb 686>;

  <bb 689>:

  <bb 690>:
  # __tmp_6028 = PHI <__tmp_5095(689), __tmp_5098(691)>
  # DEBUG __cur => __tmp_6028
  # DEBUG __tmp => __tmp_6028
  __tmp_5098 = __tmp_6028->D.82523._M_next;
  # DEBUG __cur => __tmp_5098
  # DEBUG D#1082 => &__tmp_6028->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_6028
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_6028
  # DEBUG this => D#567
  # DEBUG D.171976 => D#568
  operator delete (__tmp_6028);
  # DEBUG __cur => __tmp_5098
  if (__tmp_5098 == _6264)
    goto <bb 687>;
  else
    goto <bb 691>;

  <bb 691>:
  goto <bb 690>;

  <bb 692>:
  pretmp_3329 = MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893._M_next;

  <bb 693>:
  # prephitmp_3330 = PHI <pretmp_3329(692), &MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893(684)>
  MEM[(struct list * *)this_129(D) + 816B] = __pos_5093;

  <bb 694>:
  # prephitmp_2094 = PHI <prephitmp_3330(693), pretmp_6261(682)>
  # DEBUG this => &D.73773
  # DEBUG D#1084 => &D.73773.D.73144
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  # DEBUG D#4292 => MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893._M_next
  # DEBUG __cur => D#4292
  # DEBUG __cur => D#4292
  if (&MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893 == prephitmp_2094)
    goto <bb 695>;
  else
    goto <bb 696>;

  <bb 695>:
  pretmp_4643 = this_129(D)->_nodes;
  pretmp_4648 = (long unsigned int) pretmp_4643;
  goto <bb 700>;

  <bb 696>:

  <bb 697>:
  # __tmp_5918 = PHI <prephitmp_2094(696), __tmp_361(698)>
  # DEBUG __cur => __tmp_5918
  # DEBUG __tmp => __tmp_5918
  __tmp_361 = __tmp_5918->D.82523._M_next;
  # DEBUG __cur => __tmp_361
  # DEBUG D#1082 => &__tmp_5918->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_5918
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_5918
  # DEBUG this => D#567
  # DEBUG D.149822 => D#568
  operator delete (__tmp_5918);
  # DEBUG __cur => __tmp_361
  if (&MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893 == __tmp_361)
    goto <bb 699>;
  else
    goto <bb 698>;

  <bb 698>:
  goto <bb 697>;

  <bb 699>:
  pretmp_4642 = this_129(D)->_nodes;
  pretmp_4645 = (long unsigned int) pretmp_4642;

  <bb 700>:
  # prephitmp_4649 = PHI <pretmp_4645(699), pretmp_4648(695), _887(683)>
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  D.73773 ={v} {CLOBBER};
  _893 = &this_129(D)->_requestsOutstanding;
  std::vector<int>::resize.constprop (_893, prephitmp_4649);
  goto <bb 702>;

<L678>:
  pretmp_6223 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6350 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6627 = &this_129(D)->_pair_plat;
  pretmp_6717 = &this_129(D)->_pair_nlat;
  pretmp_6807 = &this_129(D)->_pair_flat;
  pretmp_6897 = &this_129(D)->_sent_packets;
  pretmp_6987 = &this_129(D)->_accepted_packets;
  pretmp_7077 = &this_129(D)->_sent_flits;
  pretmp_7167 = &this_129(D)->_accepted_flits;
  pretmp_7257 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 702>:
  # DEBUG D#195 => &D.73775
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73775
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73774, "hold_switch_for_packet");
  goto <bb 704>;

<L679>:
  pretmp_4807 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6381 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6658 = &this_129(D)->_pair_plat;
  pretmp_6748 = &this_129(D)->_pair_nlat;
  pretmp_6838 = &this_129(D)->_pair_flat;
  pretmp_6928 = &this_129(D)->_sent_packets;
  pretmp_7018 = &this_129(D)->_accepted_packets;
  pretmp_7108 = &this_129(D)->_sent_flits;
  pretmp_7198 = &this_129(D)->_accepted_flits;
  pretmp_7288 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 704>:
  _897 = Configuration::GetInt (config_173(D), &D.73774);

  <bb 705>:
  _898 = _897 != 0;
  this_129(D)->_hold_switch_for_packet = _898;
  # DEBUG this => &D.73774
  # DEBUG this => &D.73774
  # DEBUG this => &D.73774
  _902 = MEM[(char * *)&D.73774];
  # DEBUG D#1 => &D.73774
  # DEBUG this => D#1
  # DEBUG this => &D.73774
  if (&D.73774.D.11539._M_local_buf != _902)
    goto <bb 706>;
  else
    goto <bb 707>;

  <bb 706>:
  # DEBUG D#629 => D.73774.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73774
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73774
  # DEBUG this => D#1
  # DEBUG this => &D.73774
  # DEBUG D#626 => &D.73774._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _902
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _902
  # DEBUG this => D#620
  # DEBUG D.149839 => D#621
  operator delete (_902);

  <bb 707>:
  # DEBUG D#630 => &D.73774._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73774 ={v} {CLOBBER};
  # DEBUG this => &D.73775
  # DEBUG this => &D.73775
  # DEBUG D#195 => &D.73777
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73777
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73776, "sim_count");
  goto <bb 709>;

<L680>:
  pretmp_5384 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6383 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6660 = &this_129(D)->_pair_plat;
  pretmp_6750 = &this_129(D)->_pair_nlat;
  pretmp_6840 = &this_129(D)->_pair_flat;
  pretmp_6930 = &this_129(D)->_sent_packets;
  pretmp_7020 = &this_129(D)->_accepted_packets;
  pretmp_7110 = &this_129(D)->_sent_flits;
  pretmp_7200 = &this_129(D)->_accepted_flits;
  pretmp_7290 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 709>:
  _905 = Configuration::GetInt (config_173(D), &D.73776);

  <bb 710>:
  this_129(D)->_total_sims = _905;
  # DEBUG this => &D.73776
  # DEBUG this => &D.73776
  # DEBUG this => &D.73776
  _909 = MEM[(char * *)&D.73776];
  # DEBUG D#1 => &D.73776
  # DEBUG this => D#1
  # DEBUG this => &D.73776
  if (&D.73776.D.11539._M_local_buf != _909)
    goto <bb 711>;
  else
    goto <bb 712>;

  <bb 711>:
  # DEBUG D#629 => D.73776.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73776
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73776
  # DEBUG this => D#1
  # DEBUG this => &D.73776
  # DEBUG D#626 => &D.73776._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _909
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _909
  # DEBUG this => D#620
  # DEBUG D.149859 => D#621
  operator delete (_909);

  <bb 712>:
  # DEBUG D#630 => &D.73776._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73776 ={v} {CLOBBER};
  # DEBUG this => &D.73777
  # DEBUG this => &D.73777
  # DEBUG this => &D.73778
  # DEBUG D#1097 => &D.73778.D.49300
  # DEBUG this => D#1097
  # DEBUG D#1096 => &D#1097->_M_impl
  # DEBUG this => D#1096
  # DEBUG this => D#1096
  # DEBUG this => D#1096
  MEM[(struct _Vector_impl *)&D.73778]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73778]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73778]._M_end_of_storage = 0B;
  _910 = this_129(D)->_subnets;
  _911 = (long unsigned int) _910;
  _912 = &this_129(D)->_router;
  # DEBUG this => _912
  # DEBUG __new_size => _911
  # DEBUG __x => &D.73778
  _889 = MEM[(struct vector * *)this_129(D) + 208B];
  # DEBUG D#218 => _912
  _5100 = MEM[(struct vector * *)this_129(D) + 216B];
  # DEBUG D#218 => _912
  # DEBUG this => D#218
  # DEBUG this => D#218
  _5101 = (long int) _5100;
  _5102 = (long int) _889;
  _5103 = _5101 - _5102;
  _5104 = _5103 /[ex] 24;
  _5105 = (size_type) _5104;
  if (_911 > _5105)
    goto <bb 713>;
  else
    goto <bb 715>;

  <bb 713>:
  # DEBUG D#218 => _912
  # DEBUG D#218 => _912
  # DEBUG this => D#218
  # DEBUG this => D#218
  _5106 = _911 - _5105;
  # DEBUG this => _912
  # DEBUG D#325 => &_912->D.54835._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#325
  # DEBUG this => _912
  MEM[(struct __normal_iterator *)&__position] = _5100;
  # DEBUG __n => _5106
  # DEBUG __x => &D.73778
  std::vector<std::vector<Router*> >::_M_fill_insert (_912, __position, _5106, &D.73778);

  <bb 714>:
  pretmp_4656 = MEM[(struct _Vector_base *)&D.73778]._M_impl._M_start;
  goto <bb 724>;

  <bb 715>:
  # DEBUG D#218 => _912
  # DEBUG D#218 => _912
  # DEBUG this => D#218
  # DEBUG this => D#218
  if (_911 < _5105)
    goto <bb 716>;
  else
    goto <bb 724>;

  <bb 716>:
  _5107 = _911 * 24;
  __pos_5108 = _889 + _5107;
  # DEBUG D#735 => _912
  # DEBUG __pos => __pos_5108
  # DEBUG D#734 => D#735
  # DEBUG this => D#734
  # DEBUG D#733 => &D#734->D.54835
  # DEBUG this => D#733
  # DEBUG __first => __pos_5108
  # DEBUG __last => _5100
  # DEBUG __first => __pos_5108
  if (_5100 == __pos_5108)
    goto <bb 723>;
  else
    goto <bb 717>;

  <bb 717>:

  <bb 718>:
  # __pos_5874 = PHI <__pos_5108(717), __pos_5111(721)>
  # DEBUG __first => __pos_5874
  # DEBUG __r => __pos_5874
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#599
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _5110 = MEM[(struct _Vector_base *)__pos_5874]._M_impl._M_start;
  # DEBUG D#596 => (long int) _5110
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _5110
  # DEBUG __n => D#593
  if (_5110 != 0B)
    goto <bb 719>;
  else
    goto <bb 720>;

  <bb 719>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _5110
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _5110
  # DEBUG this => D#585
  # DEBUG D.172011 => D#586
  operator delete (_5110);

  <bb 720>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  MEM[(struct  &)__pos_5874] ={v} {CLOBBER};
  __pos_5111 = __pos_5874 + 24;
  # DEBUG __first => __pos_5111
  # DEBUG __first => __pos_5111
  if (_5100 == __pos_5111)
    goto <bb 722>;
  else
    goto <bb 721>;

  <bb 721>:
  goto <bb 718>;

  <bb 722>:
  pretmp_3338 = MEM[(struct _Vector_base *)&D.73778]._M_impl._M_start;

  <bb 723>:
  # prephitmp_3339 = PHI <pretmp_3338(722), 0B(716)>
  MEM[(struct vector * *)this_129(D) + 216B] = __pos_5108;

  <bb 724>:
  # prephitmp_4660 = PHI <0B(715), pretmp_4656(714), prephitmp_3339(723)>
  # DEBUG this => &D.73778
  # DEBUG D#599 => &D.73778.D.49300
  # DEBUG this => D#599
  # DEBUG D#602 => D.73778.D.49300._M_impl._M_finish
  # DEBUG D#601 => D.73778.D.49300._M_impl._M_start
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG D#600 => &D.73778.D.49300
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  # DEBUG D#4291 => MEM[(struct _Vector_base *)&D.73778]._M_impl._M_start
  # DEBUG D#596 => (long int) D#4291
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => D#4291
  # DEBUG __n => D#593
  if (prephitmp_4660 != 0B)
    goto <bb 725>;
  else
    goto <bb 726>;

  <bb 725>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => D#4291
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => D#4291
  # DEBUG this => D#585
  # DEBUG D.149876 => D#586
  operator delete (prephitmp_4660);

  <bb 726>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  D.73778 ={v} {CLOBBER};
  # DEBUG i => 0
  # DEBUG i => 0
  _6266 = this_129(D)->_subnets;
  if (_6266 <= 0)
    goto <bb 727>;
  else
    goto <bb 728>;

  <bb 727>:
  # DEBUG D#195 => &D.73783
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73783
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73782, "seed");
  goto <bb 734>;

  <bb 728>:

  <bb 729>:
  # i_6067 = PHI <0(728), i_922(732)>
  # DEBUG i => i_6067
  _916 = (long unsigned int) i_6067;
  # DEBUG D#2838 => &this_129(D)->_net
  _1965 = MEM[(struct Network * * *)this_129(D) + 184B];
  # DEBUG D#64 => D#2838
  # DEBUG __n => _916
  # DEBUG this => D#64
  _334 = _916 * 8;
  _333 = _1965 + _334;
  _918 = *_333;
  # DEBUG this => _918
  _351 = &_918->_routers;
  # DEBUG D#2839 => &this_129(D)->_router
  _2005 = MEM[(struct vector * *)this_129(D) + 208B];
  # DEBUG D#79 => D#2839
  # DEBUG __n => _916
  # DEBUG this => D#79
  _900 = _916 * 24;
  _360 = _2005 + _900;
  std::vector<Router*>::operator= (_360, _351);
  goto <bb 731>;

<L681>:
  pretmp_4873 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6353 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6630 = &this_129(D)->_pair_plat;
  pretmp_6720 = &this_129(D)->_pair_nlat;
  pretmp_6810 = &this_129(D)->_pair_flat;
  pretmp_6900 = &this_129(D)->_sent_packets;
  pretmp_6990 = &this_129(D)->_accepted_packets;
  pretmp_7080 = &this_129(D)->_sent_flits;
  pretmp_7170 = &this_129(D)->_accepted_flits;
  pretmp_7260 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 731>:
  i_922 = i_6067 + 1;
  # DEBUG i => i_922
  # DEBUG i => i_922
  _915 = this_129(D)->_subnets;
  if (_915 <= i_922)
    goto <bb 727>;
  else
    goto <bb 732>;

  <bb 732>:
  goto <bb 729>;

<L682>:
  pretmp_5375 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6385 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6662 = &this_129(D)->_pair_plat;
  pretmp_6752 = &this_129(D)->_pair_nlat;
  pretmp_6842 = &this_129(D)->_pair_flat;
  pretmp_6932 = &this_129(D)->_sent_packets;
  pretmp_7022 = &this_129(D)->_accepted_packets;
  pretmp_7112 = &this_129(D)->_sent_flits;
  pretmp_7202 = &this_129(D)->_accepted_flits;
  pretmp_7292 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 734>:
  D.73781 = Configuration::GetStr (config_173(D), &D.73782); [return slot optimization]

  <bb 735>:
  # DEBUG __lhs => &D.73781
  # DEBUG __rhs => "time"
  _324 = std::__cxx11::basic_string<char>::compare (&D.73781, "time");

  <bb 736>:
  # DEBUG this => &D.73781
  # DEBUG this => &D.73781
  # DEBUG this => &D.73781
  _926 = MEM[(char * *)&D.73781];
  # DEBUG D#1 => &D.73781
  # DEBUG this => D#1
  # DEBUG this => &D.73781
  if (&D.73781.D.11539._M_local_buf != _926)
    goto <bb 737>;
  else
    goto <bb 738>;

  <bb 737>:
  # DEBUG D#629 => D.73781.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73781
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73781
  # DEBUG this => D#1
  # DEBUG this => &D.73781
  # DEBUG D#626 => &D.73781._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _926
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _926
  # DEBUG this => D#620
  # DEBUG D.149920 => D#621
  operator delete (_926);

  <bb 738>:
  # DEBUG D#630 => &D.73781._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73781 ={v} {CLOBBER};
  # DEBUG this => &D.73782
  # DEBUG this => &D.73782
  # DEBUG this => &D.73782
  _928 = MEM[(char * *)&D.73782];
  # DEBUG D#1 => &D.73782
  # DEBUG this => D#1
  # DEBUG this => &D.73782
  if (&D.73782.D.11539._M_local_buf != _928)
    goto <bb 739>;
  else
    goto <bb 740>;

  <bb 739>:
  # DEBUG D#629 => D.73782.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73782
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73782
  # DEBUG this => D#1
  # DEBUG this => &D.73782
  # DEBUG D#626 => &D.73782._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _928
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _928
  # DEBUG this => D#620
  # DEBUG D.149905 => D#621
  operator delete (_928);

  <bb 740>:
  # DEBUG D#630 => &D.73782._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73782 ={v} {CLOBBER};
  # DEBUG this => &D.73783
  # DEBUG this => &D.73783
  if (_324 == 0)
    goto <bb 741>;
  else
    goto <bb 747>;

  <bb 741>:
  _930 = time (0B);
  seed_931 = (int) _930;
  # DEBUG seed => seed_931
  # DEBUG __out => &cout
  # DEBUG __s => "SEED: seed="
  # DEBUG __s => "SEED: seed="
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "SEED: seed=", 11);
  goto <bb 743>;

<L684>:
  pretmp_5936 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6354 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6631 = &this_129(D)->_pair_plat;
  pretmp_6721 = &this_129(D)->_pair_nlat;
  pretmp_6811 = &this_129(D)->_pair_flat;
  pretmp_6901 = &this_129(D)->_sent_packets;
  pretmp_6991 = &this_129(D)->_accepted_packets;
  pretmp_7081 = &this_129(D)->_sent_flits;
  pretmp_7171 = &this_129(D)->_accepted_flits;
  pretmp_7261 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 743>:
  _933 = std::basic_ostream<char>::operator<< (&cout, seed_931);
  goto <bb 745>;

<L685>:
  pretmp_6142 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6355 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6632 = &this_129(D)->_pair_plat;
  pretmp_6722 = &this_129(D)->_pair_nlat;
  pretmp_6812 = &this_129(D)->_pair_flat;
  pretmp_6902 = &this_129(D)->_sent_packets;
  pretmp_6992 = &this_129(D)->_accepted_packets;
  pretmp_7082 = &this_129(D)->_sent_flits;
  pretmp_7172 = &this_129(D)->_accepted_flits;
  pretmp_7262 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 745>:
  # DEBUG this => _933
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_933);
  goto <bb 753>;

<L686>:
  pretmp_5935 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6356 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6633 = &this_129(D)->_pair_plat;
  pretmp_6723 = &this_129(D)->_pair_nlat;
  pretmp_6813 = &this_129(D)->_pair_flat;
  pretmp_6903 = &this_129(D)->_sent_packets;
  pretmp_6993 = &this_129(D)->_accepted_packets;
  pretmp_7083 = &this_129(D)->_sent_flits;
  pretmp_7173 = &this_129(D)->_accepted_flits;
  pretmp_7263 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 747>:
  # DEBUG D#195 => &D.73785
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73785
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73784, "seed");
  goto <bb 749>;

<L687>:
  pretmp_5909 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6387 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6664 = &this_129(D)->_pair_plat;
  pretmp_6754 = &this_129(D)->_pair_nlat;
  pretmp_6844 = &this_129(D)->_pair_flat;
  pretmp_6934 = &this_129(D)->_sent_packets;
  pretmp_7024 = &this_129(D)->_accepted_packets;
  pretmp_7114 = &this_129(D)->_sent_flits;
  pretmp_7204 = &this_129(D)->_accepted_flits;
  pretmp_7294 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 749>:
  seed_937 = Configuration::GetInt (config_173(D), &D.73784);

  <bb 750>:
  # DEBUG seed => seed_937
  # DEBUG this => &D.73784
  # DEBUG this => &D.73784
  # DEBUG this => &D.73784
  _940 = MEM[(char * *)&D.73784];
  # DEBUG D#1 => &D.73784
  # DEBUG this => D#1
  # DEBUG this => &D.73784
  if (&D.73784.D.11539._M_local_buf != _940)
    goto <bb 751>;
  else
    goto <bb 752>;

  <bb 751>:
  # DEBUG D#629 => D.73784.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73784
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73784
  # DEBUG this => D#1
  # DEBUG this => &D.73784
  # DEBUG D#626 => &D.73784._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _940
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _940
  # DEBUG this => D#620
  # DEBUG D.149945 => D#621
  operator delete (_940);

  <bb 752>:
  # DEBUG D#630 => &D.73784._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73784 ={v} {CLOBBER};
  # DEBUG this => &D.73785
  # DEBUG this => &D.73785

  <bb 753>:
  # seed_1 = PHI <seed_931(745), seed_937(752)>
  # DEBUG seed => seed_1
  _943 = (long int) seed_1;
  # DEBUG seed => _943
  ran_start (_943);
  goto <bb 755>;

<L688>:
  pretmp_5915 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6377 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6654 = &this_129(D)->_pair_plat;
  pretmp_6744 = &this_129(D)->_pair_nlat;
  pretmp_6834 = &this_129(D)->_pair_flat;
  pretmp_6924 = &this_129(D)->_sent_packets;
  pretmp_7014 = &this_129(D)->_accepted_packets;
  pretmp_7104 = &this_129(D)->_sent_flits;
  pretmp_7194 = &this_129(D)->_accepted_flits;
  pretmp_7284 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 755>:
  ranf_start (_943);
  goto <bb 757>;

<L689>:
  pretmp_5933 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6357 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6634 = &this_129(D)->_pair_plat;
  pretmp_6724 = &this_129(D)->_pair_nlat;
  pretmp_6814 = &this_129(D)->_pair_flat;
  pretmp_6904 = &this_129(D)->_sent_packets;
  pretmp_6994 = &this_129(D)->_accepted_packets;
  pretmp_7084 = &this_129(D)->_sent_flits;
  pretmp_7174 = &this_129(D)->_accepted_flits;
  pretmp_7264 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 757>:
  # DEBUG D#195 => &D.73788
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73788
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73787, "sim_type");
  goto <bb 759>;

<L690>:
  pretmp_5907 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6389 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6666 = &this_129(D)->_pair_plat;
  pretmp_6756 = &this_129(D)->_pair_nlat;
  pretmp_6846 = &this_129(D)->_pair_flat;
  pretmp_6936 = &this_129(D)->_sent_packets;
  pretmp_7026 = &this_129(D)->_accepted_packets;
  pretmp_7116 = &this_129(D)->_sent_flits;
  pretmp_7206 = &this_129(D)->_accepted_flits;
  pretmp_7296 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 759>:
  D.73786 = Configuration::GetStr (config_173(D), &D.73787); [return slot optimization]

  <bb 760>:
  # DEBUG __lhs => &D.73786
  # DEBUG __rhs => "latency"
  _944 = std::__cxx11::basic_string<char>::compare (&D.73786, "latency");

  <bb 761>:
  _938 = _944 == 0;
  this_129(D)->_measure_latency = _938;
  # DEBUG this => &D.73786
  # DEBUG this => &D.73786
  # DEBUG this => &D.73786
  _950 = MEM[(char * *)&D.73786];
  # DEBUG D#1 => &D.73786
  # DEBUG this => D#1
  # DEBUG this => &D.73786
  if (&D.73786.D.11539._M_local_buf != _950)
    goto <bb 762>;
  else
    goto <bb 763>;

  <bb 762>:
  # DEBUG D#629 => D.73786.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73786
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73786
  # DEBUG this => D#1
  # DEBUG this => &D.73786
  # DEBUG D#626 => &D.73786._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _950
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _950
  # DEBUG this => D#620
  # DEBUG D.149983 => D#621
  operator delete (_950);

  <bb 763>:
  # DEBUG D#630 => &D.73786._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73786 ={v} {CLOBBER};
  # DEBUG this => &D.73787
  # DEBUG this => &D.73787
  # DEBUG this => &D.73787
  _952 = MEM[(char * *)&D.73787];
  # DEBUG D#1 => &D.73787
  # DEBUG this => D#1
  # DEBUG this => &D.73787
  if (&D.73787.D.11539._M_local_buf != _952)
    goto <bb 764>;
  else
    goto <bb 765>;

  <bb 764>:
  # DEBUG D#629 => D.73787.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73787
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73787
  # DEBUG this => D#1
  # DEBUG this => &D.73787
  # DEBUG D#626 => &D.73787._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _952
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _952
  # DEBUG this => D#620
  # DEBUG D.149968 => D#621
  operator delete (_952);

  <bb 765>:
  # DEBUG D#630 => &D.73787._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73787 ={v} {CLOBBER};
  # DEBUG this => &D.73788
  # DEBUG this => &D.73788
  # DEBUG D#195 => &D.73790
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73790
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73789, "sample_period");
  goto <bb 767>;

<L692>:
  pretmp_5903 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6391 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6668 = &this_129(D)->_pair_plat;
  pretmp_6758 = &this_129(D)->_pair_nlat;
  pretmp_6848 = &this_129(D)->_pair_flat;
  pretmp_6938 = &this_129(D)->_sent_packets;
  pretmp_7028 = &this_129(D)->_accepted_packets;
  pretmp_7118 = &this_129(D)->_sent_flits;
  pretmp_7208 = &this_129(D)->_accepted_flits;
  pretmp_7298 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 767>:
  _955 = Configuration::GetInt (config_173(D), &D.73789);

  <bb 768>:
  this_129(D)->_sample_period = _955;
  # DEBUG this => &D.73789
  # DEBUG this => &D.73789
  # DEBUG this => &D.73789
  _958 = MEM[(char * *)&D.73789];
  # DEBUG D#1 => &D.73789
  # DEBUG this => D#1
  # DEBUG this => &D.73789
  if (&D.73789.D.11539._M_local_buf != _958)
    goto <bb 769>;
  else
    goto <bb 770>;

  <bb 769>:
  # DEBUG D#629 => D.73789.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73789
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73789
  # DEBUG this => D#1
  # DEBUG this => &D.73789
  # DEBUG D#626 => &D.73789._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _958
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _958
  # DEBUG this => D#620
  # DEBUG D.150001 => D#621
  operator delete (_958);

  <bb 770>:
  # DEBUG D#630 => &D.73789._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73789 ={v} {CLOBBER};
  # DEBUG this => &D.73790
  # DEBUG this => &D.73790
  # DEBUG D#195 => &D.73792
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73792
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73791, "max_samples");
  goto <bb 772>;

<L693>:
  pretmp_5901 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6393 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6670 = &this_129(D)->_pair_plat;
  pretmp_6760 = &this_129(D)->_pair_nlat;
  pretmp_6850 = &this_129(D)->_pair_flat;
  pretmp_6940 = &this_129(D)->_sent_packets;
  pretmp_7030 = &this_129(D)->_accepted_packets;
  pretmp_7120 = &this_129(D)->_sent_flits;
  pretmp_7210 = &this_129(D)->_accepted_flits;
  pretmp_7300 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 772>:
  _961 = Configuration::GetInt (config_173(D), &D.73791);

  <bb 773>:
  this_129(D)->_max_samples = _961;
  # DEBUG this => &D.73791
  # DEBUG this => &D.73791
  # DEBUG this => &D.73791
  _964 = MEM[(char * *)&D.73791];
  # DEBUG D#1 => &D.73791
  # DEBUG this => D#1
  # DEBUG this => &D.73791
  if (&D.73791.D.11539._M_local_buf != _964)
    goto <bb 774>;
  else
    goto <bb 775>;

  <bb 774>:
  # DEBUG D#629 => D.73791.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73791
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73791
  # DEBUG this => D#1
  # DEBUG this => &D.73791
  # DEBUG D#626 => &D.73791._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _964
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _964
  # DEBUG this => D#620
  # DEBUG D.150019 => D#621
  operator delete (_964);

  <bb 775>:
  # DEBUG D#630 => &D.73791._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73791 ={v} {CLOBBER};
  # DEBUG this => &D.73792
  # DEBUG this => &D.73792
  # DEBUG D#195 => &D.73794
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73794
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73793, "warmup_periods");
  goto <bb 777>;

<L694>:
  pretmp_5898 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6395 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6672 = &this_129(D)->_pair_plat;
  pretmp_6762 = &this_129(D)->_pair_nlat;
  pretmp_6852 = &this_129(D)->_pair_flat;
  pretmp_6942 = &this_129(D)->_sent_packets;
  pretmp_7032 = &this_129(D)->_accepted_packets;
  pretmp_7122 = &this_129(D)->_sent_flits;
  pretmp_7212 = &this_129(D)->_accepted_flits;
  pretmp_7302 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 777>:
  _967 = Configuration::GetInt (config_173(D), &D.73793);

  <bb 778>:
  this_129(D)->_warmup_periods = _967;
  # DEBUG this => &D.73793
  # DEBUG this => &D.73793
  # DEBUG this => &D.73793
  _971 = MEM[(char * *)&D.73793];
  # DEBUG D#1 => &D.73793
  # DEBUG this => D#1
  # DEBUG this => &D.73793
  if (&D.73793.D.11539._M_local_buf != _971)
    goto <bb 779>;
  else
    goto <bb 780>;

  <bb 779>:
  # DEBUG D#629 => D.73793.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73793
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73793
  # DEBUG this => D#1
  # DEBUG this => &D.73793
  # DEBUG D#626 => &D.73793._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _971
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _971
  # DEBUG this => D#620
  # DEBUG D.150037 => D#621
  operator delete (_971);

  <bb 780>:
  # DEBUG D#630 => &D.73793._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73793 ={v} {CLOBBER};
  # DEBUG this => &D.73794
  # DEBUG this => &D.73794
  # DEBUG D#195 => &D.73797
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73797
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73796, "measure_stats");
  goto <bb 782>;

<L695>:
  pretmp_5895 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6397 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6674 = &this_129(D)->_pair_plat;
  pretmp_6764 = &this_129(D)->_pair_nlat;
  pretmp_6854 = &this_129(D)->_pair_flat;
  pretmp_6944 = &this_129(D)->_sent_packets;
  pretmp_7034 = &this_129(D)->_accepted_packets;
  pretmp_7124 = &this_129(D)->_sent_flits;
  pretmp_7214 = &this_129(D)->_accepted_flits;
  pretmp_7304 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 782>:
  D.73795 = Configuration::GetIntArray (config_173(D), &D.73796); [return slot optimization]

  <bb 783>:
  _974 = &this_129(D)->_measure_stats;
  std::vector<int>::operator= (_974, &D.73795);

  <bb 784>:
  # DEBUG this => &D.73795
  # DEBUG D#476 => &D.73795.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73795.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73795.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73795.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _977 = MEM[(struct _Vector_base *)&D.73795]._M_impl._M_start;
  # DEBUG D#473 => (long int) _977
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _977
  # DEBUG __n => D#470
  if (_977 != 0B)
    goto <bb 785>;
  else
    goto <bb 786>;

  <bb 785>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _977
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _977
  # DEBUG this => D#462
  # DEBUG D.150075 => D#463
  operator delete (_977);

  <bb 786>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73795 ={v} {CLOBBER};
  # DEBUG this => &D.73796
  # DEBUG this => &D.73796
  # DEBUG this => &D.73796
  _979 = MEM[(char * *)&D.73796];
  # DEBUG D#1 => &D.73796
  # DEBUG this => D#1
  # DEBUG this => &D.73796
  if (&D.73796.D.11539._M_local_buf != _979)
    goto <bb 787>;
  else
    goto <bb 788>;

  <bb 787>:
  # DEBUG D#629 => D.73796.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73796
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73796
  # DEBUG this => D#1
  # DEBUG this => &D.73796
  # DEBUG D#626 => &D.73796._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _979
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _979
  # DEBUG this => D#620
  # DEBUG D.150058 => D#621
  operator delete (_979);

  <bb 788>:
  # DEBUG D#630 => &D.73796._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73796 ={v} {CLOBBER};
  # DEBUG this => &D.73797
  # DEBUG this => &D.73797
  # DEBUG D#2840 => &this_129(D)->_measure_stats
  # DEBUG this => D#2840
  _969 = MEM[(int * *)this_129(D) + 1888B];
  # DEBUG D#276 => D#2840
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _292 = MEM[(int * *)this_129(D) + 1880B];
  # DEBUG D#277 => D#2840
  # DEBUG this => D#277
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_292 == _969)
    goto <bb 789>;
  else
    goto <bb 797>;

  <bb 789>:
  # DEBUG D#195 => &D.73800
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73800
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73799, "measure_stats");
  goto <bb 791>;

<L697>:
  pretmp_5893 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6399 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6676 = &this_129(D)->_pair_plat;
  pretmp_6766 = &this_129(D)->_pair_nlat;
  pretmp_6856 = &this_129(D)->_pair_flat;
  pretmp_6946 = &this_129(D)->_sent_packets;
  pretmp_7036 = &this_129(D)->_accepted_packets;
  pretmp_7126 = &this_129(D)->_sent_flits;
  pretmp_7216 = &this_129(D)->_accepted_flits;
  pretmp_7306 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 791>:
  _984 = Configuration::GetInt (config_173(D), &D.73799);

  <bb 792>:
  D.73798 = _984;
  std::vector<int>::push_back (_974, &D.73798);
  goto <bb 794>;

<L699>:
  goto <bb 1717> (<L339>);

  <bb 794>:
  D.73798 ={v} {CLOBBER};
  # DEBUG this => &D.73799
  # DEBUG this => &D.73799
  # DEBUG this => &D.73799
  _990 = MEM[(char * *)&D.73799];
  # DEBUG D#1 => &D.73799
  # DEBUG this => D#1
  # DEBUG this => &D.73799
  if (&D.73799.D.11539._M_local_buf != _990)
    goto <bb 795>;
  else
    goto <bb 796>;

  <bb 795>:
  # DEBUG D#629 => D.73799.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73799
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73799
  # DEBUG this => D#1
  # DEBUG this => &D.73799
  # DEBUG D#626 => &D.73799._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _990
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _990
  # DEBUG this => D#620
  # DEBUG D.150091 => D#621
  operator delete (_990);

  <bb 796>:
  # DEBUG D#630 => &D.73799._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73799 ={v} {CLOBBER};
  # DEBUG this => &D.73800
  # DEBUG this => &D.73800
  pretmp_4666 = MEM[(int * const &)this_129(D) + 1888];

  <bb 797>:
  # prephitmp_4667 = PHI <_969(788), pretmp_4666(796)>
  # DEBUG D#2841 => &this_129(D)->_measure_stats
  # DEBUG this => D#2841
  # DEBUG this => D#2841
  # DEBUG D#272 => &D#2841->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _994 = MEM[(int &)prephitmp_4667 + 18446744073709551612];
  _995 = this_129(D)->_classes;
  _996 = (long unsigned int) _995;
  std::vector<int>::resize (_974, _996, _994);
  goto <bb 799>;

<L700>:
  pretmp_5931 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6360 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6637 = &this_129(D)->_pair_plat;
  pretmp_6727 = &this_129(D)->_pair_nlat;
  pretmp_6817 = &this_129(D)->_pair_flat;
  pretmp_6907 = &this_129(D)->_sent_packets;
  pretmp_6997 = &this_129(D)->_accepted_packets;
  pretmp_7087 = &this_129(D)->_sent_flits;
  pretmp_7177 = &this_129(D)->_accepted_flits;
  pretmp_7267 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 799>:
  # DEBUG D#195 => &D.73802
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73802
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73801, "pair_stats");
  goto <bb 801>;

<L701>:
  pretmp_5890 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6401 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6678 = &this_129(D)->_pair_plat;
  pretmp_6768 = &this_129(D)->_pair_nlat;
  pretmp_6858 = &this_129(D)->_pair_flat;
  pretmp_6948 = &this_129(D)->_sent_packets;
  pretmp_7038 = &this_129(D)->_accepted_packets;
  pretmp_7128 = &this_129(D)->_sent_flits;
  pretmp_7218 = &this_129(D)->_accepted_flits;
  pretmp_7308 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 801>:
  _1000 = Configuration::GetInt (config_173(D), &D.73801);

  <bb 802>:
  _1001 = _1000 == 1;
  this_129(D)->_pair_stats = _1001;
  # DEBUG this => &D.73801
  # DEBUG this => &D.73801
  # DEBUG this => &D.73801
  _1005 = MEM[(char * *)&D.73801];
  # DEBUG D#1 => &D.73801
  # DEBUG this => D#1
  # DEBUG this => &D.73801
  if (&D.73801.D.11539._M_local_buf != _1005)
    goto <bb 803>;
  else
    goto <bb 804>;

  <bb 803>:
  # DEBUG D#629 => D.73801.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73801
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73801
  # DEBUG this => D#1
  # DEBUG this => &D.73801
  # DEBUG D#626 => &D.73801._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1005
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1005
  # DEBUG this => D#620
  # DEBUG D.150117 => D#621
  operator delete (_1005);

  <bb 804>:
  # DEBUG D#630 => &D.73801._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73801 ={v} {CLOBBER};
  # DEBUG this => &D.73802
  # DEBUG this => &D.73802
  # DEBUG D#195 => &D.73805
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73805
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73804, "latency_thres");
  goto <bb 806>;

<L702>:
  pretmp_5887 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6403 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6680 = &this_129(D)->_pair_plat;
  pretmp_6770 = &this_129(D)->_pair_nlat;
  pretmp_6860 = &this_129(D)->_pair_flat;
  pretmp_6950 = &this_129(D)->_sent_packets;
  pretmp_7040 = &this_129(D)->_accepted_packets;
  pretmp_7130 = &this_129(D)->_sent_flits;
  pretmp_7220 = &this_129(D)->_accepted_flits;
  pretmp_7310 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 806>:
  D.73803 = Configuration::GetFloatArray (config_173(D), &D.73804); [return slot optimization]

  <bb 807>:
  _1009 = &this_129(D)->_latency_thres;
  std::vector<double>::operator= (_1009, &D.73803);

  <bb 808>:
  # DEBUG this => &D.73803
  # DEBUG D#503 => &D.73803.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73803.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73803.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73803.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1012 = MEM[(struct _Vector_base *)&D.73803]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1012
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1012
  # DEBUG __n => D#497
  if (_1012 != 0B)
    goto <bb 809>;
  else
    goto <bb 810>;

  <bb 809>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1012
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1012
  # DEBUG this => D#489
  # DEBUG D.150155 => D#490
  operator delete (_1012);

  <bb 810>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73803 ={v} {CLOBBER};
  # DEBUG this => &D.73804
  # DEBUG this => &D.73804
  # DEBUG this => &D.73804
  _1014 = MEM[(char * *)&D.73804];
  # DEBUG D#1 => &D.73804
  # DEBUG this => D#1
  # DEBUG this => &D.73804
  if (&D.73804.D.11539._M_local_buf != _1014)
    goto <bb 811>;
  else
    goto <bb 812>;

  <bb 811>:
  # DEBUG D#629 => D.73804.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73804
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73804
  # DEBUG this => D#1
  # DEBUG this => &D.73804
  # DEBUG D#626 => &D.73804._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1014
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1014
  # DEBUG this => D#620
  # DEBUG D.150138 => D#621
  operator delete (_1014);

  <bb 812>:
  # DEBUG D#630 => &D.73804._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73804 ={v} {CLOBBER};
  # DEBUG this => &D.73805
  # DEBUG this => &D.73805
  # DEBUG D#2842 => &this_129(D)->_latency_thres
  # DEBUG this => D#2842
  _1003 = MEM[(double * *)this_129(D) + 1920B];
  # DEBUG D#284 => D#2842
  # DEBUG this => D#284
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _262 = MEM[(double * *)this_129(D) + 1912B];
  # DEBUG D#285 => D#2842
  # DEBUG this => D#285
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_262 == _1003)
    goto <bb 813>;
  else
    goto <bb 821>;

  <bb 813>:
  # DEBUG D#195 => &D.73808
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73808
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73807, "latency_thres");
  goto <bb 815>;

<L704>:
  pretmp_5926 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6368 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6645 = &this_129(D)->_pair_plat;
  pretmp_6735 = &this_129(D)->_pair_nlat;
  pretmp_6825 = &this_129(D)->_pair_flat;
  pretmp_6915 = &this_129(D)->_sent_packets;
  pretmp_7005 = &this_129(D)->_accepted_packets;
  pretmp_7095 = &this_129(D)->_sent_flits;
  pretmp_7185 = &this_129(D)->_accepted_flits;
  pretmp_7275 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 815>:
  _1018 = Configuration::GetFloat (config_173(D), &D.73807);

  <bb 816>:
  D.73806 = _1018;
  std::vector<double>::push_back (_1009, &D.73806);
  goto <bb 818>;

<L706>:
  goto <bb 1735> (<L347>);

  <bb 818>:
  D.73806 ={v} {CLOBBER};
  # DEBUG this => &D.73807
  # DEBUG this => &D.73807
  # DEBUG this => &D.73807
  _1024 = MEM[(char * *)&D.73807];
  # DEBUG D#1 => &D.73807
  # DEBUG this => D#1
  # DEBUG this => &D.73807
  if (&D.73807.D.11539._M_local_buf != _1024)
    goto <bb 819>;
  else
    goto <bb 820>;

  <bb 819>:
  # DEBUG D#629 => D.73807.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73807
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73807
  # DEBUG this => D#1
  # DEBUG this => &D.73807
  # DEBUG D#626 => &D.73807._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1024
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1024
  # DEBUG this => D#620
  # DEBUG D.150171 => D#621
  operator delete (_1024);

  <bb 820>:
  # DEBUG D#630 => &D.73807._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73807 ={v} {CLOBBER};
  # DEBUG this => &D.73808
  # DEBUG this => &D.73808
  pretmp_4669 = MEM[(double * const &)this_129(D) + 1920];

  <bb 821>:
  # prephitmp_4672 = PHI <_1003(812), pretmp_4669(820)>
  # DEBUG D#2843 => &this_129(D)->_latency_thres
  # DEBUG this => D#2843
  # DEBUG this => D#2843
  # DEBUG D#286 => &D#2843->D.55581._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#286
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _1029 = MEM[(double &)prephitmp_4672 + 18446744073709551608];
  _1030 = this_129(D)->_classes;
  _1031 = (long unsigned int) _1030;
  std::vector<double>::resize (_1009, _1031, _1029);
  goto <bb 823>;

<L707>:
  pretmp_5929 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6363 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6640 = &this_129(D)->_pair_plat;
  pretmp_6730 = &this_129(D)->_pair_nlat;
  pretmp_6820 = &this_129(D)->_pair_flat;
  pretmp_6910 = &this_129(D)->_sent_packets;
  pretmp_7000 = &this_129(D)->_accepted_packets;
  pretmp_7090 = &this_129(D)->_sent_flits;
  pretmp_7180 = &this_129(D)->_accepted_flits;
  pretmp_7270 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 823>:
  # DEBUG D#195 => &D.73811
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73811
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73810, "warmup_thres");
  goto <bb 825>;

<L708>:
  pretmp_5940 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6349 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6626 = &this_129(D)->_pair_plat;
  pretmp_6716 = &this_129(D)->_pair_nlat;
  pretmp_6806 = &this_129(D)->_pair_flat;
  pretmp_6896 = &this_129(D)->_sent_packets;
  pretmp_6986 = &this_129(D)->_accepted_packets;
  pretmp_7076 = &this_129(D)->_sent_flits;
  pretmp_7166 = &this_129(D)->_accepted_flits;
  pretmp_7256 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 825>:
  D.73809 = Configuration::GetFloatArray (config_173(D), &D.73810); [return slot optimization]

  <bb 826>:
  _1035 = &this_129(D)->_warmup_threshold;
  std::vector<double>::operator= (_1035, &D.73809);

  <bb 827>:
  # DEBUG this => &D.73809
  # DEBUG D#503 => &D.73809.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73809.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73809.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73809.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1038 = MEM[(struct _Vector_base *)&D.73809]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1038
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1038
  # DEBUG __n => D#497
  if (_1038 != 0B)
    goto <bb 828>;
  else
    goto <bb 829>;

  <bb 828>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1038
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1038
  # DEBUG this => D#489
  # DEBUG D.150217 => D#490
  operator delete (_1038);

  <bb 829>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73809 ={v} {CLOBBER};
  # DEBUG this => &D.73810
  # DEBUG this => &D.73810
  # DEBUG this => &D.73810
  _1040 = MEM[(char * *)&D.73810];
  # DEBUG D#1 => &D.73810
  # DEBUG this => D#1
  # DEBUG this => &D.73810
  if (&D.73810.D.11539._M_local_buf != _1040)
    goto <bb 830>;
  else
    goto <bb 831>;

  <bb 830>:
  # DEBUG D#629 => D.73810.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73810
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73810
  # DEBUG this => D#1
  # DEBUG this => &D.73810
  # DEBUG D#626 => &D.73810._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1040
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1040
  # DEBUG this => D#620
  # DEBUG D.150200 => D#621
  operator delete (_1040);

  <bb 831>:
  # DEBUG D#630 => &D.73810._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73810 ={v} {CLOBBER};
  # DEBUG this => &D.73811
  # DEBUG this => &D.73811
  # DEBUG D#2844 => &this_129(D)->_warmup_threshold
  # DEBUG this => D#2844
  _210 = MEM[(double * *)this_129(D) + 1992B];
  # DEBUG D#284 => D#2844
  # DEBUG this => D#284
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _209 = MEM[(double * *)this_129(D) + 1984B];
  # DEBUG D#285 => D#2844
  # DEBUG this => D#285
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_209 == _210)
    goto <bb 832>;
  else
    goto <bb 840>;

  <bb 832>:
  # DEBUG D#195 => &D.73814
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73814
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73813, "warmup_thres");
  goto <bb 834>;

<L710>:
  pretmp_5942 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6345 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6622 = &this_129(D)->_pair_plat;
  pretmp_6712 = &this_129(D)->_pair_nlat;
  pretmp_6802 = &this_129(D)->_pair_flat;
  pretmp_6892 = &this_129(D)->_sent_packets;
  pretmp_6982 = &this_129(D)->_accepted_packets;
  pretmp_7072 = &this_129(D)->_sent_flits;
  pretmp_7162 = &this_129(D)->_accepted_flits;
  pretmp_7252 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 834>:
  _1044 = Configuration::GetFloat (config_173(D), &D.73813);

  <bb 835>:
  D.73812 = _1044;
  std::vector<double>::push_back (_1035, &D.73812);
  goto <bb 837>;

<L712>:
  goto <bb 1749> (<L353>);

  <bb 837>:
  D.73812 ={v} {CLOBBER};
  # DEBUG this => &D.73813
  # DEBUG this => &D.73813
  # DEBUG this => &D.73813
  _1050 = MEM[(char * *)&D.73813];
  # DEBUG D#1 => &D.73813
  # DEBUG this => D#1
  # DEBUG this => &D.73813
  if (&D.73813.D.11539._M_local_buf != _1050)
    goto <bb 838>;
  else
    goto <bb 839>;

  <bb 838>:
  # DEBUG D#629 => D.73813.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73813
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73813
  # DEBUG this => D#1
  # DEBUG this => &D.73813
  # DEBUG D#626 => &D.73813._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1050
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1050
  # DEBUG this => D#620
  # DEBUG D.150233 => D#621
  operator delete (_1050);

  <bb 839>:
  # DEBUG D#630 => &D.73813._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73813 ={v} {CLOBBER};
  # DEBUG this => &D.73814
  # DEBUG this => &D.73814
  pretmp_4674 = MEM[(double * const &)this_129(D) + 1992];

  <bb 840>:
  # prephitmp_4675 = PHI <_210(831), pretmp_4674(839)>
  # DEBUG D#2845 => &this_129(D)->_warmup_threshold
  # DEBUG this => D#2845
  # DEBUG this => D#2845
  # DEBUG D#286 => &D#2845->D.55581._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#286
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _1054 = MEM[(double &)prephitmp_4675 + 18446744073709551608];
  _1055 = this_129(D)->_classes;
  _1056 = (long unsigned int) _1055;
  std::vector<double>::resize (_1035, _1056, _1054);
  goto <bb 842>;

<L713>:
  pretmp_5927 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6366 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6643 = &this_129(D)->_pair_plat;
  pretmp_6733 = &this_129(D)->_pair_nlat;
  pretmp_6823 = &this_129(D)->_pair_flat;
  pretmp_6913 = &this_129(D)->_sent_packets;
  pretmp_7003 = &this_129(D)->_accepted_packets;
  pretmp_7093 = &this_129(D)->_sent_flits;
  pretmp_7183 = &this_129(D)->_accepted_flits;
  pretmp_7273 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 842>:
  # DEBUG D#195 => &D.73817
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73817
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73816, "acc_warmup_thres");
  goto <bb 844>;

<L714>:
  pretmp_5943 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6343 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6620 = &this_129(D)->_pair_plat;
  pretmp_6710 = &this_129(D)->_pair_nlat;
  pretmp_6800 = &this_129(D)->_pair_flat;
  pretmp_6890 = &this_129(D)->_sent_packets;
  pretmp_6980 = &this_129(D)->_accepted_packets;
  pretmp_7070 = &this_129(D)->_sent_flits;
  pretmp_7160 = &this_129(D)->_accepted_flits;
  pretmp_7250 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 844>:
  D.73815 = Configuration::GetFloatArray (config_173(D), &D.73816); [return slot optimization]

  <bb 845>:
  _1061 = &this_129(D)->_acc_warmup_threshold;
  std::vector<double>::operator= (_1061, &D.73815);

  <bb 846>:
  # DEBUG this => &D.73815
  # DEBUG D#503 => &D.73815.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73815.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73815.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73815.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1064 = MEM[(struct _Vector_base *)&D.73815]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1064
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1064
  # DEBUG __n => D#497
  if (_1064 != 0B)
    goto <bb 847>;
  else
    goto <bb 848>;

  <bb 847>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1064
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1064
  # DEBUG this => D#489
  # DEBUG D.150279 => D#490
  operator delete (_1064);

  <bb 848>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73815 ={v} {CLOBBER};
  # DEBUG this => &D.73816
  # DEBUG this => &D.73816
  # DEBUG this => &D.73816
  _1066 = MEM[(char * *)&D.73816];
  # DEBUG D#1 => &D.73816
  # DEBUG this => D#1
  # DEBUG this => &D.73816
  if (&D.73816.D.11539._M_local_buf != _1066)
    goto <bb 849>;
  else
    goto <bb 850>;

  <bb 849>:
  # DEBUG D#629 => D.73816.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73816
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73816
  # DEBUG this => D#1
  # DEBUG this => &D.73816
  # DEBUG D#626 => &D.73816._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1066
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1066
  # DEBUG this => D#620
  # DEBUG D.150262 => D#621
  operator delete (_1066);

  <bb 850>:
  # DEBUG D#630 => &D.73816._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73816 ={v} {CLOBBER};
  # DEBUG this => &D.73817
  # DEBUG this => &D.73817
  # DEBUG D#2846 => &this_129(D)->_acc_warmup_threshold
  # DEBUG this => D#2846
  _196 = MEM[(double * *)this_129(D) + 2016B];
  # DEBUG D#284 => D#2846
  # DEBUG this => D#284
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _188 = MEM[(double * *)this_129(D) + 2008B];
  # DEBUG D#285 => D#2846
  # DEBUG this => D#285
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_188 == _196)
    goto <bb 851>;
  else
    goto <bb 859>;

  <bb 851>:
  # DEBUG D#195 => &D.73820
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73820
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73819, "acc_warmup_thres");
  goto <bb 853>;

<L716>:
  pretmp_5941 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6341 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6618 = &this_129(D)->_pair_plat;
  pretmp_6708 = &this_129(D)->_pair_nlat;
  pretmp_6798 = &this_129(D)->_pair_flat;
  pretmp_6888 = &this_129(D)->_sent_packets;
  pretmp_6978 = &this_129(D)->_accepted_packets;
  pretmp_7068 = &this_129(D)->_sent_flits;
  pretmp_7158 = &this_129(D)->_accepted_flits;
  pretmp_7248 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 853>:
  _1069 = Configuration::GetFloat (config_173(D), &D.73819);

  <bb 854>:
  D.73818 = _1069;
  std::vector<double>::push_back (_1061, &D.73818);
  goto <bb 856>;

<L718>:
  goto <bb 1763> (<L359>);

  <bb 856>:
  D.73818 ={v} {CLOBBER};
  # DEBUG this => &D.73819
  # DEBUG this => &D.73819
  # DEBUG this => &D.73819
  _1075 = MEM[(char * *)&D.73819];
  # DEBUG D#1 => &D.73819
  # DEBUG this => D#1
  # DEBUG this => &D.73819
  if (&D.73819.D.11539._M_local_buf != _1075)
    goto <bb 857>;
  else
    goto <bb 858>;

  <bb 857>:
  # DEBUG D#629 => D.73819.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73819
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73819
  # DEBUG this => D#1
  # DEBUG this => &D.73819
  # DEBUG D#626 => &D.73819._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1075
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1075
  # DEBUG this => D#620
  # DEBUG D.150295 => D#621
  operator delete (_1075);

  <bb 858>:
  # DEBUG D#630 => &D.73819._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73819 ={v} {CLOBBER};
  # DEBUG this => &D.73820
  # DEBUG this => &D.73820
  pretmp_4679 = MEM[(double * const &)this_129(D) + 2016];

  <bb 859>:
  # prephitmp_4680 = PHI <_196(850), pretmp_4679(858)>
  # DEBUG D#2847 => &this_129(D)->_acc_warmup_threshold
  # DEBUG this => D#2847
  # DEBUG this => D#2847
  # DEBUG D#286 => &D#2847->D.55581._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#286
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _1080 = MEM[(double &)prephitmp_4680 + 18446744073709551608];
  _1081 = this_129(D)->_classes;
  _1082 = (long unsigned int) _1081;
  std::vector<double>::resize (_1061, _1082, _1080);
  goto <bb 861>;

<L719>:
  pretmp_4881 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6369 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6646 = &this_129(D)->_pair_plat;
  pretmp_6736 = &this_129(D)->_pair_nlat;
  pretmp_6826 = &this_129(D)->_pair_flat;
  pretmp_6916 = &this_129(D)->_sent_packets;
  pretmp_7006 = &this_129(D)->_accepted_packets;
  pretmp_7096 = &this_129(D)->_sent_flits;
  pretmp_7186 = &this_129(D)->_accepted_flits;
  pretmp_7276 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 861>:
  # DEBUG D#195 => &D.73823
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73823
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73822, "stopping_thres");
  goto <bb 863>;

<L720>:
  pretmp_5945 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6339 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6616 = &this_129(D)->_pair_plat;
  pretmp_6706 = &this_129(D)->_pair_nlat;
  pretmp_6796 = &this_129(D)->_pair_flat;
  pretmp_6886 = &this_129(D)->_sent_packets;
  pretmp_6976 = &this_129(D)->_accepted_packets;
  pretmp_7066 = &this_129(D)->_sent_flits;
  pretmp_7156 = &this_129(D)->_accepted_flits;
  pretmp_7246 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 863>:
  D.73821 = Configuration::GetFloatArray (config_173(D), &D.73822); [return slot optimization]

  <bb 864>:
  _1086 = &this_129(D)->_stopping_threshold;
  std::vector<double>::operator= (_1086, &D.73821);

  <bb 865>:
  # DEBUG this => &D.73821
  # DEBUG D#503 => &D.73821.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73821.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73821.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73821.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1089 = MEM[(struct _Vector_base *)&D.73821]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1089
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1089
  # DEBUG __n => D#497
  if (_1089 != 0B)
    goto <bb 866>;
  else
    goto <bb 867>;

  <bb 866>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1089
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1089
  # DEBUG this => D#489
  # DEBUG D.150341 => D#490
  operator delete (_1089);

  <bb 867>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73821 ={v} {CLOBBER};
  # DEBUG this => &D.73822
  # DEBUG this => &D.73822
  # DEBUG this => &D.73822
  _1091 = MEM[(char * *)&D.73822];
  # DEBUG D#1 => &D.73822
  # DEBUG this => D#1
  # DEBUG this => &D.73822
  if (&D.73822.D.11539._M_local_buf != _1091)
    goto <bb 868>;
  else
    goto <bb 869>;

  <bb 868>:
  # DEBUG D#629 => D.73822.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73822
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73822
  # DEBUG this => D#1
  # DEBUG this => &D.73822
  # DEBUG D#626 => &D.73822._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1091
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1091
  # DEBUG this => D#620
  # DEBUG D.150324 => D#621
  operator delete (_1091);

  <bb 869>:
  # DEBUG D#630 => &D.73822._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73822 ={v} {CLOBBER};
  # DEBUG this => &D.73823
  # DEBUG this => &D.73823
  # DEBUG D#2848 => &this_129(D)->_stopping_threshold
  # DEBUG this => D#2848
  _170 = MEM[(double * *)this_129(D) + 1944B];
  # DEBUG D#284 => D#2848
  # DEBUG this => D#284
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _168 = MEM[(double * *)this_129(D) + 1936B];
  # DEBUG D#285 => D#2848
  # DEBUG this => D#285
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_168 == _170)
    goto <bb 870>;
  else
    goto <bb 878>;

  <bb 870>:
  # DEBUG D#195 => &D.73826
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73826
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73825, "stopping_thres");
  goto <bb 872>;

<L722>:
  pretmp_5944 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6335 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6612 = &this_129(D)->_pair_plat;
  pretmp_6702 = &this_129(D)->_pair_nlat;
  pretmp_6792 = &this_129(D)->_pair_flat;
  pretmp_6882 = &this_129(D)->_sent_packets;
  pretmp_6972 = &this_129(D)->_accepted_packets;
  pretmp_7062 = &this_129(D)->_sent_flits;
  pretmp_7152 = &this_129(D)->_accepted_flits;
  pretmp_7242 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 872>:
  _1095 = Configuration::GetFloat (config_173(D), &D.73825);

  <bb 873>:
  D.73824 = _1095;
  std::vector<double>::push_back (_1086, &D.73824);
  goto <bb 875>;

<L724>:
  goto <bb 1777> (<L365>);

  <bb 875>:
  D.73824 ={v} {CLOBBER};
  # DEBUG this => &D.73825
  # DEBUG this => &D.73825
  # DEBUG this => &D.73825
  _1101 = MEM[(char * *)&D.73825];
  # DEBUG D#1 => &D.73825
  # DEBUG this => D#1
  # DEBUG this => &D.73825
  if (&D.73825.D.11539._M_local_buf != _1101)
    goto <bb 876>;
  else
    goto <bb 877>;

  <bb 876>:
  # DEBUG D#629 => D.73825.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73825
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73825
  # DEBUG this => D#1
  # DEBUG this => &D.73825
  # DEBUG D#626 => &D.73825._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1101
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1101
  # DEBUG this => D#620
  # DEBUG D.150357 => D#621
  operator delete (_1101);

  <bb 877>:
  # DEBUG D#630 => &D.73825._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73825 ={v} {CLOBBER};
  # DEBUG this => &D.73826
  # DEBUG this => &D.73826
  pretmp_4684 = MEM[(double * const &)this_129(D) + 1944];

  <bb 878>:
  # prephitmp_4685 = PHI <_170(869), pretmp_4684(877)>
  # DEBUG D#2849 => &this_129(D)->_stopping_threshold
  # DEBUG this => D#2849
  # DEBUG this => D#2849
  # DEBUG D#286 => &D#2849->D.55581._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#286
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _1105 = MEM[(double &)prephitmp_4685 + 18446744073709551608];
  _1106 = this_129(D)->_classes;
  _1107 = (long unsigned int) _1106;
  std::vector<double>::resize (_1086, _1107, _1105);
  goto <bb 880>;

<L725>:
  pretmp_5923 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6372 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6649 = &this_129(D)->_pair_plat;
  pretmp_6739 = &this_129(D)->_pair_nlat;
  pretmp_6829 = &this_129(D)->_pair_flat;
  pretmp_6919 = &this_129(D)->_sent_packets;
  pretmp_7009 = &this_129(D)->_accepted_packets;
  pretmp_7099 = &this_129(D)->_sent_flits;
  pretmp_7189 = &this_129(D)->_accepted_flits;
  pretmp_7279 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 880>:
  # DEBUG D#195 => &D.73829
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73829
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73828, "acc_stopping_thres");
  goto <bb 882>;

<L726>:
  pretmp_5948 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6333 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6610 = &this_129(D)->_pair_plat;
  pretmp_6700 = &this_129(D)->_pair_nlat;
  pretmp_6790 = &this_129(D)->_pair_flat;
  pretmp_6880 = &this_129(D)->_sent_packets;
  pretmp_6970 = &this_129(D)->_accepted_packets;
  pretmp_7060 = &this_129(D)->_sent_flits;
  pretmp_7150 = &this_129(D)->_accepted_flits;
  pretmp_7240 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 882>:
  D.73827 = Configuration::GetFloatArray (config_173(D), &D.73828); [return slot optimization]

  <bb 883>:
  _1111 = &this_129(D)->_acc_stopping_threshold;
  std::vector<double>::operator= (_1111, &D.73827);

  <bb 884>:
  # DEBUG this => &D.73827
  # DEBUG D#503 => &D.73827.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73827.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73827.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73827.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1114 = MEM[(struct _Vector_base *)&D.73827]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1114
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1114
  # DEBUG __n => D#497
  if (_1114 != 0B)
    goto <bb 885>;
  else
    goto <bb 886>;

  <bb 885>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1114
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1114
  # DEBUG this => D#489
  # DEBUG D.150403 => D#490
  operator delete (_1114);

  <bb 886>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73827 ={v} {CLOBBER};
  # DEBUG this => &D.73828
  # DEBUG this => &D.73828
  # DEBUG this => &D.73828
  _1116 = MEM[(char * *)&D.73828];
  # DEBUG D#1 => &D.73828
  # DEBUG this => D#1
  # DEBUG this => &D.73828
  if (&D.73828.D.11539._M_local_buf != _1116)
    goto <bb 887>;
  else
    goto <bb 888>;

  <bb 887>:
  # DEBUG D#629 => D.73828.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73828
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73828
  # DEBUG this => D#1
  # DEBUG this => &D.73828
  # DEBUG D#626 => &D.73828._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1116
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1116
  # DEBUG this => D#620
  # DEBUG D.150386 => D#621
  operator delete (_1116);

  <bb 888>:
  # DEBUG D#630 => &D.73828._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73828 ={v} {CLOBBER};
  # DEBUG this => &D.73829
  # DEBUG this => &D.73829
  # DEBUG D#2850 => &this_129(D)->_acc_stopping_threshold
  # DEBUG this => D#2850
  _2031 = MEM[(double * *)this_129(D) + 1968B];
  # DEBUG D#284 => D#2850
  # DEBUG this => D#284
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _2032 = MEM[(double * *)this_129(D) + 1960B];
  # DEBUG D#285 => D#2850
  # DEBUG this => D#285
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  if (_2031 == _2032)
    goto <bb 889>;
  else
    goto <bb 897>;

  <bb 889>:
  # DEBUG D#195 => &D.73832
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73832
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73831, "acc_stopping_thres");
  goto <bb 891>;

<L728>:
  pretmp_5949 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6331 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6608 = &this_129(D)->_pair_plat;
  pretmp_6698 = &this_129(D)->_pair_nlat;
  pretmp_6788 = &this_129(D)->_pair_flat;
  pretmp_6878 = &this_129(D)->_sent_packets;
  pretmp_6968 = &this_129(D)->_accepted_packets;
  pretmp_7058 = &this_129(D)->_sent_flits;
  pretmp_7148 = &this_129(D)->_accepted_flits;
  pretmp_7238 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 891>:
  _1121 = Configuration::GetFloat (config_173(D), &D.73831);

  <bb 892>:
  D.73830 = _1121;
  std::vector<double>::push_back (_1111, &D.73830);
  goto <bb 894>;

<L730>:
  goto <bb 1791> (<L371>);

  <bb 894>:
  D.73830 ={v} {CLOBBER};
  # DEBUG this => &D.73831
  # DEBUG this => &D.73831
  # DEBUG this => &D.73831
  _1127 = MEM[(char * *)&D.73831];
  # DEBUG D#1 => &D.73831
  # DEBUG this => D#1
  # DEBUG this => &D.73831
  if (&D.73831.D.11539._M_local_buf != _1127)
    goto <bb 895>;
  else
    goto <bb 896>;

  <bb 895>:
  # DEBUG D#629 => D.73831.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73831
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73831
  # DEBUG this => D#1
  # DEBUG this => &D.73831
  # DEBUG D#626 => &D.73831._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1127
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1127
  # DEBUG this => D#620
  # DEBUG D.150419 => D#621
  operator delete (_1127);

  <bb 896>:
  # DEBUG D#630 => &D.73831._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73831 ={v} {CLOBBER};
  # DEBUG this => &D.73832
  # DEBUG this => &D.73832
  pretmp_4687 = MEM[(double * const &)this_129(D) + 1968];

  <bb 897>:
  # prephitmp_4690 = PHI <_2031(888), pretmp_4687(896)>
  # DEBUG D#2851 => &this_129(D)->_acc_stopping_threshold
  # DEBUG this => D#2851
  # DEBUG this => D#2851
  # DEBUG D#286 => &D#2851->D.55581._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#286
  # DEBUG this => NULL
  # DEBUG __n => 1
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  _1132 = MEM[(double &)prephitmp_4690 + 18446744073709551608];
  _1133 = this_129(D)->_classes;
  _1134 = (long unsigned int) _1133;
  std::vector<double>::resize (_1111, _1134, _1132);
  goto <bb 899>;

<L731>:
  pretmp_5916 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6375 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6652 = &this_129(D)->_pair_plat;
  pretmp_6742 = &this_129(D)->_pair_nlat;
  pretmp_6832 = &this_129(D)->_pair_flat;
  pretmp_6922 = &this_129(D)->_sent_packets;
  pretmp_7012 = &this_129(D)->_accepted_packets;
  pretmp_7102 = &this_129(D)->_sent_flits;
  pretmp_7192 = &this_129(D)->_accepted_flits;
  pretmp_7282 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 899>:
  # DEBUG D#195 => &D.73834
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73834
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73833, "include_queuing");
  goto <bb 901>;

<L732>:
  pretmp_5947 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6329 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6606 = &this_129(D)->_pair_plat;
  pretmp_6696 = &this_129(D)->_pair_nlat;
  pretmp_6786 = &this_129(D)->_pair_flat;
  pretmp_6876 = &this_129(D)->_sent_packets;
  pretmp_6966 = &this_129(D)->_accepted_packets;
  pretmp_7056 = &this_129(D)->_sent_flits;
  pretmp_7146 = &this_129(D)->_accepted_flits;
  pretmp_7236 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 901>:
  _1139 = Configuration::GetInt (config_173(D), &D.73833);

  <bb 902>:
  this_129(D)->_include_queuing = _1139;
  # DEBUG this => &D.73833
  # DEBUG this => &D.73833
  # DEBUG this => &D.73833
  _1142 = MEM[(char * *)&D.73833];
  # DEBUG D#1 => &D.73833
  # DEBUG this => D#1
  # DEBUG this => &D.73833
  if (&D.73833.D.11539._M_local_buf != _1142)
    goto <bb 903>;
  else
    goto <bb 904>;

  <bb 903>:
  # DEBUG D#629 => D.73833.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73833
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73833
  # DEBUG this => D#1
  # DEBUG this => &D.73833
  # DEBUG D#626 => &D.73833._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1142
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1142
  # DEBUG this => D#620
  # DEBUG D.150445 => D#621
  operator delete (_1142);

  <bb 904>:
  # DEBUG D#630 => &D.73833._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73833 ={v} {CLOBBER};
  # DEBUG this => &D.73834
  # DEBUG this => &D.73834
  # DEBUG D#195 => &D.73836
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73836
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73835, "print_csv_results");
  goto <bb 906>;

<L733>:
  pretmp_6147 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6325 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6602 = &this_129(D)->_pair_plat;
  pretmp_6692 = &this_129(D)->_pair_nlat;
  pretmp_6782 = &this_129(D)->_pair_flat;
  pretmp_6872 = &this_129(D)->_sent_packets;
  pretmp_6962 = &this_129(D)->_accepted_packets;
  pretmp_7052 = &this_129(D)->_sent_flits;
  pretmp_7142 = &this_129(D)->_accepted_flits;
  pretmp_7232 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 906>:
  _1146 = Configuration::GetInt (config_173(D), &D.73835);

  <bb 907>:
  _1147 = _1146 != 0;
  this_129(D)->_print_csv_results = _1147;
  # DEBUG this => &D.73835
  # DEBUG this => &D.73835
  # DEBUG this => &D.73835
  _1150 = MEM[(char * *)&D.73835];
  # DEBUG D#1 => &D.73835
  # DEBUG this => D#1
  # DEBUG this => &D.73835
  if (&D.73835.D.11539._M_local_buf != _1150)
    goto <bb 908>;
  else
    goto <bb 909>;

  <bb 908>:
  # DEBUG D#629 => D.73835.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73835
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73835
  # DEBUG this => D#1
  # DEBUG this => &D.73835
  # DEBUG D#626 => &D.73835._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1150
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1150
  # DEBUG this => D#620
  # DEBUG D.150463 => D#621
  operator delete (_1150);

  <bb 909>:
  # DEBUG D#630 => &D.73835._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73835 ={v} {CLOBBER};
  # DEBUG this => &D.73836
  # DEBUG this => &D.73836
  # DEBUG D#195 => &D.73838
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73838
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73837, "deadlock_warn_timeout");
  goto <bb 911>;

<L734>:
  pretmp_5953 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6323 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6600 = &this_129(D)->_pair_plat;
  pretmp_6690 = &this_129(D)->_pair_nlat;
  pretmp_6780 = &this_129(D)->_pair_flat;
  pretmp_6870 = &this_129(D)->_sent_packets;
  pretmp_6960 = &this_129(D)->_accepted_packets;
  pretmp_7050 = &this_129(D)->_sent_flits;
  pretmp_7140 = &this_129(D)->_accepted_flits;
  pretmp_7230 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 911>:
  _1153 = Configuration::GetInt (config_173(D), &D.73837);

  <bb 912>:
  this_129(D)->_deadlock_warn_timeout = _1153;
  # DEBUG this => &D.73837
  # DEBUG this => &D.73837
  # DEBUG this => &D.73837
  _1157 = MEM[(char * *)&D.73837];
  # DEBUG D#1 => &D.73837
  # DEBUG this => D#1
  # DEBUG this => &D.73837
  if (&D.73837.D.11539._M_local_buf != _1157)
    goto <bb 913>;
  else
    goto <bb 914>;

  <bb 913>:
  # DEBUG D#629 => D.73837.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73837
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73837
  # DEBUG this => D#1
  # DEBUG this => &D.73837
  # DEBUG D#626 => &D.73837._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1157
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1157
  # DEBUG this => D#620
  # DEBUG D.150481 => D#621
  operator delete (_1157);

  <bb 914>:
  # DEBUG D#630 => &D.73837._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73837 ={v} {CLOBBER};
  # DEBUG this => &D.73838
  # DEBUG this => &D.73838
  # DEBUG D#195 => &D.73841
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73841
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73840, "watch_file");
  goto <bb 916>;

<L735>:
  pretmp_5955 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6321 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6598 = &this_129(D)->_pair_plat;
  pretmp_6688 = &this_129(D)->_pair_nlat;
  pretmp_6778 = &this_129(D)->_pair_flat;
  pretmp_6868 = &this_129(D)->_sent_packets;
  pretmp_6958 = &this_129(D)->_accepted_packets;
  pretmp_7048 = &this_129(D)->_sent_flits;
  pretmp_7138 = &this_129(D)->_accepted_flits;
  pretmp_7228 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  <bb 916>:
  watch_file = Configuration::GetStr (config_173(D), &D.73840); [return slot optimization]

  <bb 917>:
  # DEBUG this => &D.73840
  # DEBUG this => &D.73840
  # DEBUG this => &D.73840
  _1162 = MEM[(char * *)&D.73840];
  # DEBUG D#1 => &D.73840
  # DEBUG this => D#1
  # DEBUG this => &D.73840
  if (&D.73840.D.11539._M_local_buf != _1162)
    goto <bb 918>;
  else
    goto <bb 919>;

  <bb 918>:
  # DEBUG D#629 => D.73840.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73840
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73840
  # DEBUG this => D#1
  # DEBUG this => &D.73840
  # DEBUG D#626 => &D.73840._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1162
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1162
  # DEBUG this => D#620
  # DEBUG D.150503 => D#621
  operator delete (_1162);

  <bb 919>:
  # DEBUG D#630 => &D.73840._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73840 ={v} {CLOBBER};
  # DEBUG this => &D.73841
  # DEBUG this => &D.73841
  # DEBUG __lhs => &watch_file
  # DEBUG __rhs => ""
  # DEBUG __lhs => &watch_file
  # DEBUG __rhs => ""
  _1155 = std::__cxx11::basic_string<char>::compare (&watch_file, "");

  <bb 920>:
  if (_1155 != 0)
    goto <bb 921>;
  else
    goto <bb 2287>;

  <bb 921>:
  # DEBUG __lhs => &watch_file
  # DEBUG __rhs => "-"
  # DEBUG __lhs => &watch_file
  # DEBUG __rhs => "-"
  _1160 = std::__cxx11::basic_string<char>::compare (&watch_file, "-");
  goto <bb 923>;

<L737>:
  pretmp_4842 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_5882 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6407 = &this_129(D)->_pair_plat;
  pretmp_6413 = &this_129(D)->_pair_nlat;
  pretmp_6419 = &this_129(D)->_pair_flat;
  pretmp_6425 = &this_129(D)->_sent_packets;
  pretmp_6431 = &this_129(D)->_accepted_packets;
  pretmp_6437 = &this_129(D)->_sent_flits;
  pretmp_6443 = &this_129(D)->_accepted_flits;
  pretmp_6449 = &this_129(D)->_stats;
  goto <bb 1995> (<L444>);

  <bb 923>:
  if (_1160 != 0)
    goto <bb 2289>;
  else
    goto <bb 2287>;

<L738>:
  pretmp_5310 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_5879 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6410 = &this_129(D)->_pair_plat;
  pretmp_6416 = &this_129(D)->_pair_nlat;
  pretmp_6422 = &this_129(D)->_pair_flat;
  pretmp_6428 = &this_129(D)->_sent_packets;
  pretmp_6434 = &this_129(D)->_accepted_packets;
  pretmp_6440 = &this_129(D)->_sent_flits;
  pretmp_6446 = &this_129(D)->_accepted_flits;
  pretmp_6452 = &this_129(D)->_stats;
  goto <bb 1995> (<L444>);

  <bb 925>:
  watch_flits = Configuration::GetIntArray (config_173(D), &D.73843); [return slot optimization]

  <bb 926>:
  # DEBUG this => &D.73843
  # DEBUG this => &D.73843
  # DEBUG this => &D.73843
  _1168 = MEM[(char * *)&D.73843];
  # DEBUG D#1 => &D.73843
  # DEBUG this => D#1
  # DEBUG this => &D.73843
  if (&D.73843.D.11539._M_local_buf != _1168)
    goto <bb 927>;
  else
    goto <bb 928>;

  <bb 927>:
  # DEBUG D#629 => D.73843.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73843
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73843
  # DEBUG this => D#1
  # DEBUG this => &D.73843
  # DEBUG D#626 => &D.73843._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1168
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1168
  # DEBUG this => D#620
  # DEBUG D.150526 => D#621
  operator delete (_1168);

  <bb 928>:
  # DEBUG D#630 => &D.73843._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73843 ={v} {CLOBBER};
  # DEBUG this => &D.73844
  # DEBUG this => &D.73844
  # DEBUG i => 0
  # DEBUG i => 0
  _5158 = MEM[(int * *)&watch_flits];
  # DEBUG D#68 => &watch_flits
  _5172 = MEM[(int * *)&watch_flits + 8B];
  # DEBUG D#68 => &watch_flits
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5186 = (long int) _5172;
  _53 = (long int) _5158;
  _19 = _5186 - _53;
  _6134 = _19 /[ex] 4;
  if (_6134 != 0)
    goto <bb 930>;
  else
    goto <bb 929>;

  <bb 929>:
  # DEBUG D#195 => &D.73850
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73850
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73849, "watch_packets");
  goto <bb 935>;

  <bb 930>:
  pretmp_3349 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;

  <bb 931>:
  # i_6050 = PHI <0(930), i_1171(933)>
  # _6008 = PHI <_5158(930), _1988(933)>
  # DEBUG i => i_6050
  # DEBUG D#68 => &watch_flits
  # DEBUG this => D#68
  # DEBUG this => D#68
  # DEBUG D#63 => &watch_flits
  # DEBUG __n => i_6050
  # DEBUG this => D#63
  _2039 = i_6050 * 4;
  _2040 = _6008 + _2039;
  # DEBUG D#2852 => &this_129(D)->_flits_to_watch
  # DEBUG this => D#2852
  # DEBUG __x => NULL
  __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique (pretmp_3349, _2040);

  <bb 932>:
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#2884 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#2883 => MEM[(const bool &)&__p + 8]
  # DEBUG D#2882 => VIEW_CONVERT_EXPR<unsigned char>(D#2883)
  __p ={v} {CLOBBER};
  # DEBUG D.154649 => D#2884
  # DEBUG D.154650 => D#2882
  i_1171 = i_6050 + 1;
  # DEBUG i => i_1171
  # DEBUG i => i_1171
  _1988 = MEM[(int * *)&watch_flits];
  # DEBUG D#68 => &watch_flits
  _1989 = MEM[(int * *)&watch_flits + 8B];
  # DEBUG D#68 => &watch_flits
  # DEBUG this => D#68
  # DEBUG this => D#68
  _2033 = (long int) _1989;
  _2034 = (long int) _1988;
  _2035 = _2033 - _2034;
  _2036 = _2035 /[ex] 4;
  _2037 = (size_type) _2036;
  if (i_1171 < _2037)
    goto <bb 933>;
  else
    goto <bb 929>;

  <bb 933>:
  goto <bb 931>;

<L740>:
  pretmp_4693 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_5305 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_5875 = &this_129(D)->_pair_plat;
  pretmp_597 = &this_129(D)->_pair_nlat;
  pretmp_6222 = &this_129(D)->_pair_flat;
  pretmp_6219 = &this_129(D)->_sent_packets;
  pretmp_5866 = &this_129(D)->_accepted_packets;
  pretmp_4882 = &this_129(D)->_sent_flits;
  pretmp_6215 = &this_129(D)->_accepted_flits;
  pretmp_6212 = &this_129(D)->_stats;
  goto <bb 1990> (<L443>);

  <bb 935>:
  watch_packets = Configuration::GetIntArray (config_173(D), &D.73849); [return slot optimization]

  <bb 936>:
  # DEBUG this => &D.73849
  # DEBUG this => &D.73849
  # DEBUG this => &D.73849
  _1175 = MEM[(char * *)&D.73849];
  # DEBUG D#1 => &D.73849
  # DEBUG this => D#1
  # DEBUG this => &D.73849
  if (&D.73849.D.11539._M_local_buf != _1175)
    goto <bb 937>;
  else
    goto <bb 938>;

  <bb 937>:
  # DEBUG D#629 => D.73849.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73849
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73849
  # DEBUG this => D#1
  # DEBUG this => &D.73849
  # DEBUG D#626 => &D.73849._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1175
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1175
  # DEBUG this => D#620
  # DEBUG D.150562 => D#621
  operator delete (_1175);

  <bb 938>:
  # DEBUG D#630 => &D.73849._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73849 ={v} {CLOBBER};
  # DEBUG this => &D.73850
  # DEBUG this => &D.73850
  # DEBUG i => 0
  # DEBUG i => 0
  _135 = MEM[(int * *)&watch_packets];
  # DEBUG D#68 => &watch_packets
  _4814 = MEM[(int * *)&watch_packets + 8B];
  # DEBUG D#68 => &watch_packets
  # DEBUG this => D#68
  # DEBUG this => D#68
  _1905 = (long int) _4814;
  _1915 = (long int) _135;
  _239 = _1905 - _1915;
  _1917 = _239 /[ex] 4;
  if (_1917 != 0)
    goto <bb 940>;
  else
    goto <bb 939>;

  <bb 939>:
  # DEBUG D#195 => &D.73856
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73856
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73855, "stats_out");
  goto <bb 945>;

  <bb 940>:
  pretmp_3344 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;

  <bb 941>:
  # i_6047 = PHI <0(940), i_1177(943)>
  # _6009 = PHI <_135(940), _1990(943)>
  # DEBUG i => i_6047
  # DEBUG D#68 => &watch_packets
  # DEBUG this => D#68
  # DEBUG this => D#68
  # DEBUG D#63 => &watch_packets
  # DEBUG __n => i_6047
  # DEBUG this => D#63
  _2047 = i_6047 * 4;
  _2048 = _6009 + _2047;
  # DEBUG D#2853 => &this_129(D)->_packets_to_watch
  # DEBUG this => D#2853
  # DEBUG __x => NULL
  __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique (pretmp_3344, _2048);

  <bb 942>:
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#2881 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#2880 => MEM[(const bool &)&__p + 8]
  # DEBUG D#2879 => VIEW_CONVERT_EXPR<unsigned char>(D#2880)
  __p ={v} {CLOBBER};
  # DEBUG D.154651 => D#2881
  # DEBUG D.154652 => D#2879
  i_1177 = i_6047 + 1;
  # DEBUG i => i_1177
  # DEBUG i => i_1177
  _1990 = MEM[(int * *)&watch_packets];
  # DEBUG D#68 => &watch_packets
  _1991 = MEM[(int * *)&watch_packets + 8B];
  # DEBUG D#68 => &watch_packets
  # DEBUG this => D#68
  # DEBUG this => D#68
  _2041 = (long int) _1991;
  _2042 = (long int) _1990;
  _2043 = _2041 - _2042;
  _2044 = _2043 /[ex] 4;
  _2045 = (size_type) _2044;
  if (i_1177 < _2045)
    goto <bb 943>;
  else
    goto <bb 939>;

  <bb 943>:
  goto <bb 941>;

<L742>:
  pretmp_5645 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_638 = &this_129(D)->_pair_plat;
  pretmp_2173 = &this_129(D)->_pair_nlat;
  pretmp_1923 = &this_129(D)->_pair_flat;
  pretmp_55 = &this_129(D)->_sent_packets;
  pretmp_56 = &this_129(D)->_accepted_packets;
  pretmp_1963 = &this_129(D)->_sent_flits;
  pretmp_62 = &this_129(D)->_accepted_flits;
  pretmp_61 = &this_129(D)->_stats;
  goto <bb 1985> (<L442>);

  <bb 945>:
  stats_out_file = Configuration::GetStr (config_173(D), &D.73855); [return slot optimization]

  <bb 946>:
  # DEBUG this => &D.73855
  # DEBUG this => &D.73855
  # DEBUG this => &D.73855
  _1182 = MEM[(char * *)&D.73855];
  # DEBUG D#1 => &D.73855
  # DEBUG this => D#1
  # DEBUG this => &D.73855
  if (&D.73855.D.11539._M_local_buf != _1182)
    goto <bb 947>;
  else
    goto <bb 948>;

  <bb 947>:
  # DEBUG D#629 => D.73855.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73855
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73855
  # DEBUG this => D#1
  # DEBUG this => &D.73855
  # DEBUG D#626 => &D.73855._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1182
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1182
  # DEBUG this => D#620
  # DEBUG D.150601 => D#621
  operator delete (_1182);

  <bb 948>:
  # DEBUG D#630 => &D.73855._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73855 ={v} {CLOBBER};
  # DEBUG this => &D.73856
  # DEBUG this => &D.73856
  # DEBUG __lhs => &stats_out_file
  # DEBUG __rhs => ""
  _2049 = std::__cxx11::basic_string<char>::compare (&stats_out_file, "");

  <bb 949>:
  if (_2049 == 0)
    goto <bb 950>;
  else
    goto <bb 951>;

  <bb 950>:
  this_129(D)->_stats_out = 0B;
  goto <bb 960>;

  <bb 951>:
  # DEBUG __lhs => &stats_out_file
  # DEBUG __rhs => "-"
  _1180 = std::__cxx11::basic_string<char>::compare (&stats_out_file, "-");
  goto <bb 953>;

<L744>:
  pretmp_4698 = &this_129(D)->_pair_plat;
  pretmp_4741 = &this_129(D)->_pair_nlat;
  pretmp_3929 = &this_129(D)->_pair_flat;
  pretmp_3771 = &this_129(D)->_sent_packets;
  pretmp_3721 = &this_129(D)->_accepted_packets;
  pretmp_3670 = &this_129(D)->_sent_flits;
  pretmp_3620 = &this_129(D)->_accepted_flits;
  pretmp_3532 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 953>:
  if (_1180 == 0)
    goto <bb 954>;
  else
    goto <bb 955>;

  <bb 954>:
  this_129(D)->_stats_out = &cout;
  goto <bb 960>;

  <bb 955>:
  # DEBUG this => &stats_out_file
  _2050 = MEM[(char * *)&stats_out_file];
  # DEBUG D#1 => &stats_out_file
  # DEBUG this => D#1
  # DEBUG __a => 16
  # DEBUG __b => 32
  _1188 = operator new (512);
  goto <bb 957>;

<L745>:
  pretmp_4702 = &this_129(D)->_pair_plat;
  pretmp_4745 = &this_129(D)->_pair_nlat;
  pretmp_3933 = &this_129(D)->_pair_flat;
  pretmp_3772 = &this_129(D)->_sent_packets;
  pretmp_3722 = &this_129(D)->_accepted_packets;
  pretmp_3671 = &this_129(D)->_sent_flits;
  pretmp_3589 = &this_129(D)->_accepted_flits;
  pretmp_3524 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 957>:
  std::basic_ofstream<char>::basic_ofstream (_1188, _2050, 48);

  <bb 958>:
  this_129(D)->_stats_out = _1188;
  Configuration::WriteMatlabFile (config_173(D), _1188);
  goto <bb 960>;

<L746>:
  pretmp_4703 = &this_129(D)->_pair_plat;
  pretmp_4746 = &this_129(D)->_pair_nlat;
  pretmp_3934 = &this_129(D)->_pair_flat;
  pretmp_3760 = &this_129(D)->_sent_packets;
  pretmp_3723 = &this_129(D)->_accepted_packets;
  pretmp_3672 = &this_129(D)->_sent_flits;
  pretmp_3590 = &this_129(D)->_accepted_flits;
  pretmp_3525 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 960>:
  _1193 = this_129(D)->_classes;
  _1194 = (long unsigned int) _1193;
  _1195 = &this_129(D)->_plat_stats;
  std::vector<Stats*>::resize.constprop (_1195, _1194);
  goto <bb 962>;

<L747>:
  pretmp_4704 = &this_129(D)->_pair_plat;
  pretmp_4747 = &this_129(D)->_pair_nlat;
  pretmp_3935 = &this_129(D)->_pair_flat;
  pretmp_3761 = &this_129(D)->_sent_packets;
  pretmp_3714 = &this_129(D)->_accepted_packets;
  pretmp_3673 = &this_129(D)->_sent_flits;
  pretmp_3591 = &this_129(D)->_accepted_flits;
  pretmp_3526 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 962>:
  _1197 = this_129(D)->_classes;
  _1198 = (long unsigned int) _1197;
  _1199 = &this_129(D)->_overall_min_plat;
  std::vector<double>::resize.constprop (_1199, _1198);
  goto <bb 964>;

<L748>:
  pretmp_4705 = &this_129(D)->_pair_plat;
  pretmp_4750 = &this_129(D)->_pair_nlat;
  pretmp_3938 = &this_129(D)->_pair_flat;
  pretmp_3762 = &this_129(D)->_sent_packets;
  pretmp_3715 = &this_129(D)->_accepted_packets;
  pretmp_3663 = &this_129(D)->_sent_flits;
  pretmp_3592 = &this_129(D)->_accepted_flits;
  pretmp_3527 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 964>:
  _1201 = this_129(D)->_classes;
  _1202 = (long unsigned int) _1201;
  _1203 = &this_129(D)->_overall_avg_plat;
  std::vector<double>::resize.constprop (_1203, _1202);
  goto <bb 966>;

<L749>:
  pretmp_5660 = &this_129(D)->_pair_plat;
  pretmp_4751 = &this_129(D)->_pair_nlat;
  pretmp_3939 = &this_129(D)->_pair_flat;
  pretmp_3763 = &this_129(D)->_sent_packets;
  pretmp_3716 = &this_129(D)->_accepted_packets;
  pretmp_3664 = &this_129(D)->_sent_flits;
  pretmp_3593 = &this_129(D)->_accepted_flits;
  pretmp_3514 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 966>:
  _1205 = this_129(D)->_classes;
  _1206 = (long unsigned int) _1205;
  _1207 = &this_129(D)->_overall_max_plat;
  std::vector<double>::resize.constprop (_1207, _1206);
  goto <bb 968>;

<L750>:
  pretmp_5661 = &this_129(D)->_pair_plat;
  pretmp_4752 = &this_129(D)->_pair_nlat;
  pretmp_3940 = &this_129(D)->_pair_flat;
  pretmp_3754 = &this_129(D)->_sent_packets;
  pretmp_3717 = &this_129(D)->_accepted_packets;
  pretmp_3665 = &this_129(D)->_sent_flits;
  pretmp_3580 = &this_129(D)->_accepted_flits;
  pretmp_3515 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 968>:
  _1209 = this_129(D)->_classes;
  _1210 = (long unsigned int) _1209;
  _1211 = &this_129(D)->_nlat_stats;
  std::vector<Stats*>::resize.constprop (_1211, _1210);
  goto <bb 970>;

<L751>:
  pretmp_5662 = &this_129(D)->_pair_plat;
  pretmp_4753 = &this_129(D)->_pair_nlat;
  pretmp_3941 = &this_129(D)->_pair_flat;
  pretmp_3755 = &this_129(D)->_sent_packets;
  pretmp_3708 = &this_129(D)->_accepted_packets;
  pretmp_3666 = &this_129(D)->_sent_flits;
  pretmp_3581 = &this_129(D)->_accepted_flits;
  pretmp_3516 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 970>:
  _1213 = this_129(D)->_classes;
  _1214 = (long unsigned int) _1213;
  _1215 = &this_129(D)->_overall_min_nlat;
  std::vector<double>::resize.constprop (_1215, _1214);
  goto <bb 972>;

<L752>:
  pretmp_5663 = &this_129(D)->_pair_plat;
  pretmp_4756 = &this_129(D)->_pair_nlat;
  pretmp_3944 = &this_129(D)->_pair_flat;
  pretmp_3756 = &this_129(D)->_sent_packets;
  pretmp_3709 = &this_129(D)->_accepted_packets;
  pretmp_3657 = &this_129(D)->_sent_flits;
  pretmp_3582 = &this_129(D)->_accepted_flits;
  pretmp_3517 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 972>:
  _1217 = this_129(D)->_classes;
  _1218 = (long unsigned int) _1217;
  _1219 = &this_129(D)->_overall_avg_nlat;
  std::vector<double>::resize.constprop (_1219, _1218);
  goto <bb 974>;

<L753>:
  pretmp_5672 = &this_129(D)->_pair_plat;
  pretmp_4757 = &this_129(D)->_pair_nlat;
  pretmp_3945 = &this_129(D)->_pair_flat;
  pretmp_3757 = &this_129(D)->_sent_packets;
  pretmp_3710 = &this_129(D)->_accepted_packets;
  pretmp_3658 = &this_129(D)->_sent_flits;
  pretmp_3583 = &this_129(D)->_accepted_flits;
  pretmp_3503 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 974>:
  _1221 = this_129(D)->_classes;
  _1222 = (long unsigned int) _1221;
  _1223 = &this_129(D)->_overall_max_nlat;
  std::vector<double>::resize.constprop (_1223, _1222);
  goto <bb 976>;

<L754>:
  pretmp_5673 = &this_129(D)->_pair_plat;
  pretmp_4758 = &this_129(D)->_pair_nlat;
  pretmp_3946 = &this_129(D)->_pair_flat;
  pretmp_3748 = &this_129(D)->_sent_packets;
  pretmp_3711 = &this_129(D)->_accepted_packets;
  pretmp_3659 = &this_129(D)->_sent_flits;
  pretmp_3584 = &this_129(D)->_accepted_flits;
  pretmp_3504 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 976>:
  _1225 = this_129(D)->_classes;
  _1226 = (long unsigned int) _1225;
  _1227 = &this_129(D)->_flat_stats;
  std::vector<Stats*>::resize.constprop (_1227, _1226);
  goto <bb 978>;

<L755>:
  pretmp_5674 = &this_129(D)->_pair_plat;
  pretmp_4759 = &this_129(D)->_pair_nlat;
  pretmp_3949 = &this_129(D)->_pair_flat;
  pretmp_3749 = &this_129(D)->_sent_packets;
  pretmp_3701 = &this_129(D)->_accepted_packets;
  pretmp_3660 = &this_129(D)->_sent_flits;
  pretmp_3571 = &this_129(D)->_accepted_flits;
  pretmp_3505 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 978>:
  _1229 = this_129(D)->_classes;
  _1230 = (long unsigned int) _1229;
  _1231 = &this_129(D)->_overall_min_flat;
  std::vector<double>::resize.constprop (_1231, _1230);
  goto <bb 980>;

<L756>:
  pretmp_5675 = &this_129(D)->_pair_plat;
  pretmp_4762 = &this_129(D)->_pair_nlat;
  pretmp_3950 = &this_129(D)->_pair_flat;
  pretmp_3750 = &this_129(D)->_sent_packets;
  pretmp_3702 = &this_129(D)->_accepted_packets;
  pretmp_3651 = &this_129(D)->_sent_flits;
  pretmp_3572 = &this_129(D)->_accepted_flits;
  pretmp_3506 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 980>:
  _1233 = this_129(D)->_classes;
  _1234 = (long unsigned int) _1233;
  _1235 = &this_129(D)->_overall_avg_flat;
  std::vector<double>::resize.constprop (_1235, _1234);
  goto <bb 982>;

<L757>:
  pretmp_5690 = &this_129(D)->_pair_plat;
  pretmp_4763 = &this_129(D)->_pair_nlat;
  pretmp_3951 = &this_129(D)->_pair_flat;
  pretmp_3751 = &this_129(D)->_sent_packets;
  pretmp_3703 = &this_129(D)->_accepted_packets;
  pretmp_3652 = &this_129(D)->_sent_flits;
  pretmp_3573 = &this_129(D)->_accepted_flits;
  pretmp_3507 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 982>:
  _1237 = this_129(D)->_classes;
  _1238 = (long unsigned int) _1237;
  _1239 = &this_129(D)->_overall_max_flat;
  std::vector<double>::resize.constprop (_1239, _1238);
  goto <bb 984>;

<L758>:
  pretmp_5691 = &this_129(D)->_pair_plat;
  pretmp_4764 = &this_129(D)->_pair_nlat;
  pretmp_3954 = &this_129(D)->_pair_flat;
  pretmp_3739 = &this_129(D)->_sent_packets;
  pretmp_3704 = &this_129(D)->_accepted_packets;
  pretmp_3653 = &this_129(D)->_sent_flits;
  pretmp_3574 = &this_129(D)->_accepted_flits;
  pretmp_3509 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 984>:
  _1241 = this_129(D)->_classes;
  _1242 = (long unsigned int) _1241;
  _1243 = &this_129(D)->_frag_stats;
  std::vector<Stats*>::resize.constprop (_1243, _1242);
  goto <bb 986>;

<L759>:
  pretmp_5692 = &this_129(D)->_pair_plat;
  pretmp_4765 = &this_129(D)->_pair_nlat;
  pretmp_3955 = &this_129(D)->_pair_flat;
  pretmp_3740 = &this_129(D)->_sent_packets;
  pretmp_3695 = &this_129(D)->_accepted_packets;
  pretmp_3654 = &this_129(D)->_sent_flits;
  pretmp_3575 = &this_129(D)->_accepted_flits;
  pretmp_3510 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 986>:
  _1245 = this_129(D)->_classes;
  _1246 = (long unsigned int) _1245;
  _1247 = &this_129(D)->_overall_min_frag;
  std::vector<double>::resize.constprop (_1247, _1246);
  goto <bb 988>;

<L760>:
  pretmp_5693 = &this_129(D)->_pair_plat;
  pretmp_5714 = &this_129(D)->_pair_nlat;
  pretmp_3956 = &this_129(D)->_pair_flat;
  pretmp_3741 = &this_129(D)->_sent_packets;
  pretmp_3696 = &this_129(D)->_accepted_packets;
  pretmp_3643 = &this_129(D)->_sent_flits;
  pretmp_3561 = &this_129(D)->_accepted_flits;
  pretmp_3511 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 988>:
  _1249 = this_129(D)->_classes;
  _1250 = (long unsigned int) _1249;
  _1251 = &this_129(D)->_overall_avg_frag;
  std::vector<double>::resize.constprop (_1251, _1250);
  goto <bb 990>;

<L761>:
  pretmp_5702 = &this_129(D)->_pair_plat;
  pretmp_5715 = &this_129(D)->_pair_nlat;
  pretmp_3959 = &this_129(D)->_pair_flat;
  pretmp_3742 = &this_129(D)->_sent_packets;
  pretmp_3697 = &this_129(D)->_accepted_packets;
  pretmp_3644 = &this_129(D)->_sent_flits;
  pretmp_3562 = &this_129(D)->_accepted_flits;
  pretmp_3512 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 990>:
  _1253 = this_129(D)->_classes;
  _1254 = (long unsigned int) _1253;
  _1255 = &this_129(D)->_overall_max_frag;
  std::vector<double>::resize.constprop (_1255, _1254);
  goto <bb 992>;

<L762>:
  pretmp_5703 = &this_129(D)->_pair_plat;
  pretmp_5716 = &this_129(D)->_pair_nlat;
  pretmp_3960 = &this_129(D)->_pair_flat;
  pretmp_3733 = &this_129(D)->_sent_packets;
  pretmp_3698 = &this_129(D)->_accepted_packets;
  pretmp_3645 = &this_129(D)->_sent_flits;
  pretmp_3563 = &this_129(D)->_accepted_flits;
  pretmp_3493 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 992>:
  _1257 = this_129(D)->_pair_stats;
  if (_1257 != 0)
    goto <bb 993>;
  else
    goto <bb 1003>;

  <bb 993>:
  # DEBUG this => &D.73860
  # DEBUG D#905 => &D.73860.D.63091
  # DEBUG this => D#905
  # DEBUG D#904 => &D#905->_M_impl
  # DEBUG this => D#904
  # DEBUG this => D#904
  # DEBUG this => D#904
  MEM[(struct _Vector_impl *)&D.73860]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73860]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73860]._M_end_of_storage = 0B;
  _1258 = this_129(D)->_classes;
  _1259 = (long unsigned int) _1258;
  _1260 = &this_129(D)->_pair_plat;
  std::vector<std::vector<Stats*> >::resize (_1260, _1259, &D.73860);

  <bb 994>:
  # DEBUG this => &D.73860
  # DEBUG D#920 => &D.73860.D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D.73860.D.63091._M_impl._M_finish
  # DEBUG D#922 => D.73860.D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D.73860.D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1264 = MEM[(struct _Vector_base *)&D.73860]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1264
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1264
  # DEBUG __n => D#914
  if (_1264 != 0B)
    goto <bb 995>;
  else
    goto <bb 996>;

  <bb 995>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1264
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1264
  # DEBUG this => D#906
  # DEBUG D.150632 => D#907
  operator delete (_1264);

  <bb 996>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  D.73860 ={v} {CLOBBER};
  # DEBUG this => &D.73861
  # DEBUG D#905 => &D.73861.D.63091
  # DEBUG this => D#905
  # DEBUG D#904 => &D#905->_M_impl
  # DEBUG this => D#904
  # DEBUG this => D#904
  # DEBUG this => D#904
  MEM[(struct _Vector_impl *)&D.73861]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73861]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73861]._M_end_of_storage = 0B;
  _1265 = this_129(D)->_classes;
  _1266 = (long unsigned int) _1265;
  _1267 = &this_129(D)->_pair_nlat;
  std::vector<std::vector<Stats*> >::resize (_1267, _1266, &D.73861);

  <bb 997>:
  # DEBUG this => &D.73861
  # DEBUG D#920 => &D.73861.D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D.73861.D.63091._M_impl._M_finish
  # DEBUG D#922 => D.73861.D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D.73861.D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1271 = MEM[(struct _Vector_base *)&D.73861]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1271
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1271
  # DEBUG __n => D#914
  if (_1271 != 0B)
    goto <bb 998>;
  else
    goto <bb 999>;

  <bb 998>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1271
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1271
  # DEBUG this => D#906
  # DEBUG D.150650 => D#907
  operator delete (_1271);

  <bb 999>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  D.73861 ={v} {CLOBBER};
  # DEBUG this => &D.73862
  # DEBUG D#905 => &D.73862.D.63091
  # DEBUG this => D#905
  # DEBUG D#904 => &D#905->_M_impl
  # DEBUG this => D#904
  # DEBUG this => D#904
  # DEBUG this => D#904
  MEM[(struct _Vector_impl *)&D.73862]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73862]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73862]._M_end_of_storage = 0B;
  _1272 = this_129(D)->_classes;
  _1273 = (long unsigned int) _1272;
  _1274 = &this_129(D)->_pair_flat;
  std::vector<std::vector<Stats*> >::resize (_1274, _1273, &D.73862);

  <bb 1000>:
  # DEBUG this => &D.73862
  # DEBUG D#920 => &D.73862.D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D.73862.D.63091._M_impl._M_finish
  # DEBUG D#922 => D.73862.D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D.73862.D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1269 = MEM[(struct _Vector_base *)&D.73862]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1269
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1269
  # DEBUG __n => D#914
  if (_1269 != 0B)
    goto <bb 1001>;
  else
    goto <bb 1002>;

  <bb 1001>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1269
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1269
  # DEBUG this => D#906
  # DEBUG D.150665 => D#907
  operator delete (_1269);

  <bb 1002>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  D.73862 ={v} {CLOBBER};

  <bb 1003>:
  _1284 = this_129(D)->_classes;
  _1285 = (long unsigned int) _1284;
  _1286 = &this_129(D)->_hop_stats;
  std::vector<Stats*>::resize.constprop (_1286, _1285);
  goto <bb 1005>;

<L763>:
  pretmp_4710 = &this_129(D)->_pair_plat;
  pretmp_4771 = &this_129(D)->_pair_nlat;
  pretmp_3802 = &this_129(D)->_pair_flat;
  pretmp_3736 = &this_129(D)->_sent_packets;
  pretmp_3692 = &this_129(D)->_accepted_packets;
  pretmp_3636 = &this_129(D)->_sent_flits;
  pretmp_3546 = &this_129(D)->_accepted_flits;
  pretmp_3485 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1005>:
  _1288 = this_129(D)->_classes;
  _1289 = (long unsigned int) _1288;
  _1290 = &this_129(D)->_overall_hop_stats;
  std::vector<double>::resize.constprop (_1290, _1289);
  goto <bb 1007>;

<L764>:
  pretmp_4711 = &this_129(D)->_pair_plat;
  pretmp_4774 = &this_129(D)->_pair_nlat;
  pretmp_3803 = &this_129(D)->_pair_flat;
  pretmp_3727 = &this_129(D)->_sent_packets;
  pretmp_3682 = &this_129(D)->_accepted_packets;
  pretmp_3637 = &this_129(D)->_sent_flits;
  pretmp_3547 = &this_129(D)->_accepted_flits;
  pretmp_3486 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1007>:
  # DEBUG this => &D.73863
  # DEBUG D#259 => &D.73863.D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)&D.73863]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73863]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73863]._M_end_of_storage = 0B;
  _1293 = this_129(D)->_classes;
  _1294 = (long unsigned int) _1293;
  _1295 = &this_129(D)->_sent_packets;
  std::vector<std::vector<int> >::resize (_1295, _1294, &D.73863);

  <bb 1008>:
  # DEBUG this => &D.73863
  # DEBUG D#476 => &D.73863.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73863.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73863.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73863.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1292 = MEM[(struct _Vector_base *)&D.73863]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1292
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1292
  # DEBUG __n => D#470
  if (_1292 != 0B)
    goto <bb 1009>;
  else
    goto <bb 1010>;

  <bb 1009>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1292
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1292
  # DEBUG this => D#462
  # DEBUG D.150683 => D#463
  operator delete (_1292);

  <bb 1010>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73863 ={v} {CLOBBER};
  _1299 = this_129(D)->_classes;
  _1300 = (long unsigned int) _1299;
  _1301 = &this_129(D)->_overall_min_sent_packets;
  std::vector<double>::resize.constprop (_1301, _1300);
  goto <bb 1012>;

<L765>:
  pretmp_4715 = &this_129(D)->_pair_plat;
  pretmp_4777 = &this_129(D)->_pair_nlat;
  pretmp_3796 = &this_129(D)->_pair_flat;
  pretmp_3685 = &this_129(D)->_accepted_packets;
  pretmp_3626 = &this_129(D)->_sent_flits;
  pretmp_3539 = &this_129(D)->_accepted_flits;
  pretmp_3490 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1012>:
  _1303 = this_129(D)->_classes;
  _1304 = (long unsigned int) _1303;
  _1305 = &this_129(D)->_overall_avg_sent_packets;
  std::vector<double>::resize.constprop (_1305, _1304);
  goto <bb 1014>;

<L766>:
  pretmp_4716 = &this_129(D)->_pair_plat;
  pretmp_5721 = &this_129(D)->_pair_nlat;
  pretmp_3797 = &this_129(D)->_pair_flat;
  pretmp_3676 = &this_129(D)->_accepted_packets;
  pretmp_3627 = &this_129(D)->_sent_flits;
  pretmp_3540 = &this_129(D)->_accepted_flits;
  pretmp_3491 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1014>:
  _1307 = this_129(D)->_classes;
  _1308 = (long unsigned int) _1307;
  _1309 = &this_129(D)->_overall_max_sent_packets;
  std::vector<double>::resize.constprop (_1309, _1308);
  goto <bb 1016>;

<L767>:
  pretmp_4717 = &this_129(D)->_pair_plat;
  pretmp_5722 = &this_129(D)->_pair_nlat;
  pretmp_3798 = &this_129(D)->_pair_flat;
  pretmp_3677 = &this_129(D)->_accepted_packets;
  pretmp_3628 = &this_129(D)->_sent_flits;
  pretmp_3541 = &this_129(D)->_accepted_flits;
  pretmp_3472 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1016>:
  # DEBUG this => &D.73864
  # DEBUG D#259 => &D.73864.D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)&D.73864]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73864]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73864]._M_end_of_storage = 0B;
  _1312 = this_129(D)->_classes;
  _1313 = (long unsigned int) _1312;
  _1314 = &this_129(D)->_accepted_packets;
  std::vector<std::vector<int> >::resize (_1314, _1313, &D.73864);

  <bb 1017>:
  # DEBUG this => &D.73864
  # DEBUG D#476 => &D.73864.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73864.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73864.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73864.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1311 = MEM[(struct _Vector_base *)&D.73864]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1311
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1311
  # DEBUG __n => D#470
  if (_1311 != 0B)
    goto <bb 1018>;
  else
    goto <bb 1019>;

  <bb 1018>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1311
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1311
  # DEBUG this => D#462
  # DEBUG D.150701 => D#463
  operator delete (_1311);

  <bb 1019>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73864 ={v} {CLOBBER};
  _1317 = this_129(D)->_classes;
  _1318 = (long unsigned int) _1317;
  _1319 = &this_129(D)->_overall_min_accepted_packets;
  std::vector<double>::resize.constprop (_1319, _1318);
  goto <bb 1021>;

<L768>:
  pretmp_4722 = &this_129(D)->_pair_plat;
  pretmp_5727 = &this_129(D)->_pair_nlat;
  pretmp_3791 = &this_129(D)->_pair_flat;
  pretmp_3629 = &this_129(D)->_sent_flits;
  pretmp_3542 = &this_129(D)->_accepted_flits;
  pretmp_3475 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1021>:
  _1321 = this_129(D)->_classes;
  _1322 = (long unsigned int) _1321;
  _1323 = &this_129(D)->_overall_avg_accepted_packets;
  std::vector<double>::resize.constprop (_1323, _1322);
  goto <bb 1023>;

<L769>:
  pretmp_4723 = &this_129(D)->_pair_plat;
  pretmp_5728 = &this_129(D)->_pair_nlat;
  pretmp_3792 = &this_129(D)->_pair_flat;
  pretmp_3616 = &this_129(D)->_sent_flits;
  pretmp_3534 = &this_129(D)->_accepted_flits;
  pretmp_3461 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1023>:
  _1325 = this_129(D)->_classes;
  _1326 = (long unsigned int) _1325;
  _1327 = &this_129(D)->_overall_max_accepted_packets;
  std::vector<double>::resize.constprop (_1327, _1326);
  goto <bb 1025>;

<L770>:
  pretmp_4726 = &this_129(D)->_pair_plat;
  pretmp_5729 = &this_129(D)->_pair_nlat;
  pretmp_3793 = &this_129(D)->_pair_flat;
  pretmp_3617 = &this_129(D)->_sent_flits;
  pretmp_3535 = &this_129(D)->_accepted_flits;
  pretmp_3462 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1025>:
  # DEBUG this => &D.73865
  # DEBUG D#259 => &D.73865.D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)&D.73865]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73865]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73865]._M_end_of_storage = 0B;
  _1330 = this_129(D)->_classes;
  _1331 = (long unsigned int) _1330;
  _1332 = &this_129(D)->_sent_flits;
  std::vector<std::vector<int> >::resize (_1332, _1331, &D.73865);

  <bb 1026>:
  # DEBUG this => &D.73865
  # DEBUG D#476 => &D.73865.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73865.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73865.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73865.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1329 = MEM[(struct _Vector_base *)&D.73865]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1329
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1329
  # DEBUG __n => D#470
  if (_1329 != 0B)
    goto <bb 1027>;
  else
    goto <bb 1028>;

  <bb 1027>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1329
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1329
  # DEBUG this => D#462
  # DEBUG D.150719 => D#463
  operator delete (_1329);

  <bb 1028>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73865 ={v} {CLOBBER};
  _1335 = this_129(D)->_classes;
  _1336 = (long unsigned int) _1335;
  _1337 = &this_129(D)->_overall_min_sent;
  std::vector<double>::resize.constprop (_1337, _1336);
  goto <bb 1030>;

<L771>:
  pretmp_4729 = &this_129(D)->_pair_plat;
  pretmp_5734 = &this_129(D)->_pair_nlat;
  pretmp_3783 = &this_129(D)->_pair_flat;
  pretmp_3536 = &this_129(D)->_accepted_flits;
  pretmp_3465 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1030>:
  _1339 = this_129(D)->_classes;
  _1340 = (long unsigned int) _1339;
  _1341 = &this_129(D)->_overall_avg_sent;
  std::vector<double>::resize.constprop (_1341, _1340);
  goto <bb 1032>;

<L772>:
  pretmp_4732 = &this_129(D)->_pair_plat;
  pretmp_5735 = &this_129(D)->_pair_nlat;
  pretmp_3784 = &this_129(D)->_pair_flat;
  pretmp_3537 = &this_129(D)->_accepted_flits;
  pretmp_3467 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1032>:
  _1343 = this_129(D)->_classes;
  _1344 = (long unsigned int) _1343;
  _1345 = &this_129(D)->_overall_max_sent;
  std::vector<double>::resize.constprop (_1345, _1344);
  goto <bb 1034>;

<L773>:
  pretmp_4733 = &this_129(D)->_pair_plat;
  pretmp_4780 = &this_129(D)->_pair_nlat;
  pretmp_3775 = &this_129(D)->_pair_flat;
  pretmp_3529 = &this_129(D)->_accepted_flits;
  pretmp_3468 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1034>:
  # DEBUG this => &D.73866
  # DEBUG D#259 => &D.73866.D.45977
  # DEBUG this => D#259
  # DEBUG D#258 => &D#259->_M_impl
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG this => D#258
  MEM[(struct _Vector_impl *)&D.73866]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.73866]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.73866]._M_end_of_storage = 0B;
  _1348 = this_129(D)->_classes;
  _1349 = (long unsigned int) _1348;
  _1350 = &this_129(D)->_accepted_flits;
  std::vector<std::vector<int> >::resize (_1350, _1349, &D.73866);

  <bb 1035>:
  # DEBUG this => &D.73866
  # DEBUG D#476 => &D.73866.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73866.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73866.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73866.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1347 = MEM[(struct _Vector_base *)&D.73866]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1347
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1347
  # DEBUG __n => D#470
  if (_1347 != 0B)
    goto <bb 1036>;
  else
    goto <bb 1037>;

  <bb 1036>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1347
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1347
  # DEBUG this => D#462
  # DEBUG D.150737 => D#463
  operator delete (_1347);

  <bb 1037>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73866 ={v} {CLOBBER};
  _1353 = this_129(D)->_classes;
  _1354 = (long unsigned int) _1353;
  _1355 = &this_129(D)->_overall_min_accepted;
  std::vector<double>::resize.constprop (_1355, _1354);
  goto <bb 1039>;

<L774>:
  pretmp_4734 = &this_129(D)->_pair_plat;
  pretmp_4781 = &this_129(D)->_pair_nlat;
  pretmp_3776 = &this_129(D)->_pair_flat;
  pretmp_3469 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1039>:
  _1357 = this_129(D)->_classes;
  _1358 = (long unsigned int) _1357;
  _1359 = &this_129(D)->_overall_avg_accepted;
  std::vector<double>::resize.constprop (_1359, _1358);
  goto <bb 1041>;

<L775>:
  pretmp_4728 = &this_129(D)->_pair_plat;
  pretmp_5733 = &this_129(D)->_pair_nlat;
  pretmp_3782 = &this_129(D)->_pair_flat;
  pretmp_3464 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1041>:
  _1361 = this_129(D)->_classes;
  _1362 = (long unsigned int) _1361;
  _1363 = &this_129(D)->_overall_max_accepted;
  std::vector<double>::resize.constprop (_1363, _1362);
  goto <bb 1043>;

<L776>:
  pretmp_4727 = &this_129(D)->_pair_plat;
  pretmp_5732 = &this_129(D)->_pair_nlat;
  pretmp_3781 = &this_129(D)->_pair_flat;
  pretmp_3463 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1043>:
  # DEBUG c => 0
  _5278 = this_129(D)->_classes;
  if (_5278 <= 0)
    goto <bb 1289>;
  else
    goto <bb 1044>;

  <bb 1044>:
  pretmp_3432 = &this_129(D)->_stats;

  <bb 1045>:
  # c_6007 = PHI <0(1044), c_1601(1288)>
  # DEBUG c => c_6007
  std::__cxx11::basic_ostringstream<char>::__comp_ctor .constprop (&tmp_name);
  goto <bb 1047>;

<L777>:
  pretmp_4735 = &this_129(D)->_pair_plat;
  pretmp_4782 = &this_129(D)->_pair_nlat;
  pretmp_3777 = &this_129(D)->_pair_flat;
  goto <bb 1980> (<L441>);

  <bb 1047>:
  # DEBUG __out => &tmp_name.D.23228
  # DEBUG __s => "plat_stat_"
  # DEBUG __s => "plat_stat_"
  std::__ostream_insert<char, std::char_traits<char> > (&tmp_name.D.23228, "plat_stat_", 10);

  <bb 1048>:
  std::basic_ostream<char>::operator<< (&tmp_name.D.23228, c_6007);
  goto <bb 1050>;

<L779>:
  goto <bb 1977> (<L439>);

  <bb 1050>:
  # DEBUG this => &tmp_name
  D.73871 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1052>;

<L780>:
  goto <bb 1977> (<L439>);

  <bb 1052>:
  _1369 = operator new (176);

  <bb 1053>:
  Stats::Stats (_1369, _130, &D.73871, 1.0e+0, 1000);

  <bb 1054>:
  _1371 = (long unsigned int) c_6007;
  # DEBUG D#2854 => &this_129(D)->_plat_stats
  _2006 = MEM[(struct Stats * * *)this_129(D) + 856B];
  # DEBUG D#80 => D#2854
  # DEBUG __n => _1371
  # DEBUG this => D#80
  _1297 = _1371 * 8;
  _1276 = _2006 + _1297;
  *_1276 = _1369;
  # DEBUG this => &D.73871
  # DEBUG this => &D.73871
  # DEBUG this => &D.73871
  _1375 = MEM[(char * *)&D.73871];
  # DEBUG D#1 => &D.73871
  # DEBUG this => D#1
  # DEBUG this => &D.73871
  if (&D.73871.D.11539._M_local_buf != _1375)
    goto <bb 1055>;
  else
    goto <bb 1056>;

  <bb 1055>:
  # DEBUG D#629 => D.73871.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73871
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73871
  # DEBUG this => D#1
  # DEBUG this => &D.73871
  # DEBUG D#626 => &D.73871._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1375
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1375
  # DEBUG this => D#620
  # DEBUG D.150756 => D#621
  operator delete (_1375);

  <bb 1056>:
  # DEBUG D#630 => &D.73871._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73871 ={v} {CLOBBER};
  # DEBUG this => &tmp_name
  D.73873 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1058>;

<L782>:
  goto <bb 1977> (<L439>);

  <bb 1058>:
  _1378 = std::map<std::__cxx11::basic_string<char>, Stats*>::operator[] (pretmp_3432, &D.73873);

  <bb 1059>:
  # DEBUG D#2855 => &this_129(D)->_plat_stats
  _2007 = MEM[(struct Stats * * *)this_129(D) + 856B];
  # DEBUG D#80 => D#2855
  # DEBUG __n => _1371
  # DEBUG this => D#80
  _2051 = _2007 + _1297;
  _1379 = *_2051;
  *_1378 = _1379;
  # DEBUG this => &D.73873
  # DEBUG this => &D.73873
  # DEBUG this => &D.73873
  _1262 = MEM[(char * *)&D.73873];
  # DEBUG D#1 => &D.73873
  # DEBUG this => D#1
  # DEBUG this => &D.73873
  if (&D.73873.D.11539._M_local_buf != _1262)
    goto <bb 1060>;
  else
    goto <bb 1061>;

  <bb 1060>:
  # DEBUG D#629 => D.73873.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73873
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73873
  # DEBUG this => D#1
  # DEBUG this => &D.73873
  # DEBUG D#626 => &D.73873._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1262
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1262
  # DEBUG this => D#620
  # DEBUG D.150776 => D#621
  operator delete (_1262);

  <bb 1061>:
  # DEBUG D#630 => &D.73873._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73873 ={v} {CLOBBER};
  # DEBUG D#195 => &D.73875
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73875
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73874, "");
  goto <bb 1063>;

<L783>:
  goto <bb 1977> (<L439>);

  <bb 1063>:
  # DEBUG this => &tmp_name
  # DEBUG __s => &D.73874
  std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf, &D.73874);

  <bb 1064>:
  # DEBUG this => &D.73874
  # DEBUG this => &D.73874
  # DEBUG this => &D.73874
  _1385 = MEM[(char * *)&D.73874];
  # DEBUG D#1 => &D.73874
  # DEBUG this => D#1
  # DEBUG this => &D.73874
  if (&D.73874.D.11539._M_local_buf != _1385)
    goto <bb 1065>;
  else
    goto <bb 1066>;

  <bb 1065>:
  # DEBUG D#629 => D.73874.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73874
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73874
  # DEBUG this => D#1
  # DEBUG this => &D.73874
  # DEBUG D#626 => &D.73874._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1385
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1385
  # DEBUG this => D#620
  # DEBUG D.150803 => D#621
  operator delete (_1385);

  <bb 1066>:
  # DEBUG D#630 => &D.73874._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73874 ={v} {CLOBBER};
  # DEBUG this => &D.73875
  # DEBUG this => &D.73875
  # DEBUG __out => &tmp_name.D.23228
  # DEBUG __s => "nlat_stat_"
  # DEBUG __s => "nlat_stat_"
  std::__ostream_insert<char, std::char_traits<char> > (&tmp_name.D.23228, "nlat_stat_", 10);
  goto <bb 1068>;

<L784>:
  goto <bb 1977> (<L439>);

  <bb 1068>:
  std::basic_ostream<char>::operator<< (&tmp_name.D.23228, c_6007);
  goto <bb 1070>;

<L785>:
  goto <bb 1977> (<L439>);

  <bb 1070>:
  # DEBUG this => &tmp_name
  D.73877 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1072>;

<L786>:
  goto <bb 1977> (<L439>);

  <bb 1072>:
  _1388 = operator new (176);

  <bb 1073>:
  Stats::Stats (_1388, _130, &D.73877, 1.0e+0, 1000);

  <bb 1074>:
  # DEBUG D#2856 => &this_129(D)->_nlat_stats
  _2008 = MEM[(struct Stats * * *)this_129(D) + 952B];
  # DEBUG D#80 => D#2856
  # DEBUG __n => _1371
  # DEBUG this => D#80
  _2052 = _2008 + _1297;
  *_2052 = _1388;
  # DEBUG this => &D.73877
  # DEBUG this => &D.73877
  # DEBUG this => &D.73877
  _1393 = MEM[(char * *)&D.73877];
  # DEBUG D#1 => &D.73877
  # DEBUG this => D#1
  # DEBUG this => &D.73877
  if (&D.73877.D.11539._M_local_buf != _1393)
    goto <bb 1075>;
  else
    goto <bb 1076>;

  <bb 1075>:
  # DEBUG D#629 => D.73877.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73877
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73877
  # DEBUG this => D#1
  # DEBUG this => &D.73877
  # DEBUG D#626 => &D.73877._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1393
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1393
  # DEBUG this => D#620
  # DEBUG D.150820 => D#621
  operator delete (_1393);

  <bb 1076>:
  # DEBUG D#630 => &D.73877._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73877 ={v} {CLOBBER};
  # DEBUG this => &tmp_name
  D.73879 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1078>;

<L788>:
  goto <bb 1977> (<L439>);

  <bb 1078>:
  _1395 = std::map<std::__cxx11::basic_string<char>, Stats*>::operator[] (pretmp_3432, &D.73879);

  <bb 1079>:
  # DEBUG D#2857 => &this_129(D)->_nlat_stats
  _2009 = MEM[(struct Stats * * *)this_129(D) + 952B];
  # DEBUG D#80 => D#2857
  # DEBUG __n => _1371
  # DEBUG this => D#80
  _2054 = _2009 + _1297;
  _1397 = *_2054;
  *_1395 = _1397;
  # DEBUG this => &D.73879
  # DEBUG this => &D.73879
  # DEBUG this => &D.73879
  _2053 = MEM[(char * *)&D.73879];
  # DEBUG D#1 => &D.73879
  # DEBUG this => D#1
  # DEBUG this => &D.73879
  if (&D.73879.D.11539._M_local_buf != _2053)
    goto <bb 1080>;
  else
    goto <bb 1081>;

  <bb 1080>:
  # DEBUG D#629 => D.73879.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73879
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73879
  # DEBUG this => D#1
  # DEBUG this => &D.73879
  # DEBUG D#626 => &D.73879._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _2053
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _2053
  # DEBUG this => D#620
  # DEBUG D.150840 => D#621
  operator delete (_2053);

  <bb 1081>:
  # DEBUG D#630 => &D.73879._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73879 ={v} {CLOBBER};
  # DEBUG D#195 => &D.73881
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73881
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73880, "");
  goto <bb 1083>;

<L789>:
  goto <bb 1977> (<L439>);

  <bb 1083>:
  # DEBUG this => &tmp_name
  # DEBUG __s => &D.73880
  std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf, &D.73880);

  <bb 1084>:
  # DEBUG this => &D.73880
  # DEBUG this => &D.73880
  # DEBUG this => &D.73880
  _1403 = MEM[(char * *)&D.73880];
  # DEBUG D#1 => &D.73880
  # DEBUG this => D#1
  # DEBUG this => &D.73880
  if (&D.73880.D.11539._M_local_buf != _1403)
    goto <bb 1085>;
  else
    goto <bb 1086>;

  <bb 1085>:
  # DEBUG D#629 => D.73880.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73880
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73880
  # DEBUG this => D#1
  # DEBUG this => &D.73880
  # DEBUG D#626 => &D.73880._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1403
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1403
  # DEBUG this => D#620
  # DEBUG D.150867 => D#621
  operator delete (_1403);

  <bb 1086>:
  # DEBUG D#630 => &D.73880._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73880 ={v} {CLOBBER};
  # DEBUG this => &D.73881
  # DEBUG this => &D.73881
  # DEBUG __out => &tmp_name.D.23228
  # DEBUG __s => "flat_stat_"
  # DEBUG __s => "flat_stat_"
  std::__ostream_insert<char, std::char_traits<char> > (&tmp_name.D.23228, "flat_stat_", 10);
  goto <bb 1088>;

<L790>:
  goto <bb 1977> (<L439>);

  <bb 1088>:
  std::basic_ostream<char>::operator<< (&tmp_name.D.23228, c_6007);
  goto <bb 1090>;

<L791>:
  goto <bb 1977> (<L439>);

  <bb 1090>:
  # DEBUG this => &tmp_name
  D.73883 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1092>;

<L792>:
  goto <bb 1977> (<L439>);

  <bb 1092>:
  _1406 = operator new (176);

  <bb 1093>:
  Stats::Stats (_1406, _130, &D.73883, 1.0e+0, 1000);

  <bb 1094>:
  # DEBUG D#2858 => &this_129(D)->_flat_stats
  _2010 = MEM[(struct Stats * * *)this_129(D) + 1048B];
  # DEBUG D#80 => D#2858
  # DEBUG __n => _1371
  # DEBUG this => D#80
  _2055 = _2010 + _1297;
  *_2055 = _1406;
  # DEBUG this => &D.73883
  # DEBUG this => &D.73883
  # DEBUG this => &D.73883
  _1410 = MEM[(char * *)&D.73883];
  # DEBUG D#1 => &D.73883
  # DEBUG this => D#1
  # DEBUG this => &D.73883
  if (&D.73883.D.11539._M_local_buf != _1410)
    goto <bb 1095>;
  else
    goto <bb 1096>;

  <bb 1095>:
  # DEBUG D#629 => D.73883.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73883
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73883
  # DEBUG this => D#1
  # DEBUG this => &D.73883
  # DEBUG D#626 => &D.73883._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1410
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1410
  # DEBUG this => D#620
  # DEBUG D.150884 => D#621
  operator delete (_1410);

  <bb 1096>:
  # DEBUG D#630 => &D.73883._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73883 ={v} {CLOBBER};
  # DEBUG this => &tmp_name
  D.73885 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1098>;

<L794>:
  goto <bb 1977> (<L439>);

  <bb 1098>:
  _1412 = std::map<std::__cxx11::basic_string<char>, Stats*>::operator[] (pretmp_3432, &D.73885);

  <bb 1099>:
  # DEBUG D#2859 => &this_129(D)->_flat_stats
  _2011 = MEM[(struct Stats * * *)this_129(D) + 1048B];
  # DEBUG D#80 => D#2859
  # DEBUG __n => _1371
  # DEBUG this => D#80
  _2057 = _2011 + _1297;
  _1414 = *_2057;
  *_1412 = _1414;
  # DEBUG this => &D.73885
  # DEBUG this => &D.73885
  # DEBUG this => &D.73885
  _2056 = MEM[(char * *)&D.73885];
  # DEBUG D#1 => &D.73885
  # DEBUG this => D#1
  # DEBUG this => &D.73885
  if (&D.73885.D.11539._M_local_buf != _2056)
    goto <bb 1100>;
  else
    goto <bb 1101>;

  <bb 1100>:
  # DEBUG D#629 => D.73885.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73885
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73885
  # DEBUG this => D#1
  # DEBUG this => &D.73885
  # DEBUG D#626 => &D.73885._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _2056
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _2056
  # DEBUG this => D#620
  # DEBUG D.150904 => D#621
  operator delete (_2056);

  <bb 1101>:
  # DEBUG D#630 => &D.73885._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73885 ={v} {CLOBBER};
  # DEBUG D#195 => &D.73887
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73887
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73886, "");
  goto <bb 1103>;

<L795>:
  goto <bb 1977> (<L439>);

  <bb 1103>:
  # DEBUG this => &tmp_name
  # DEBUG __s => &D.73886
  std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf, &D.73886);

  <bb 1104>:
  # DEBUG this => &D.73886
  # DEBUG this => &D.73886
  # DEBUG this => &D.73886
  _1419 = MEM[(char * *)&D.73886];
  # DEBUG D#1 => &D.73886
  # DEBUG this => D#1
  # DEBUG this => &D.73886
  if (&D.73886.D.11539._M_local_buf != _1419)
    goto <bb 1105>;
  else
    goto <bb 1106>;

  <bb 1105>:
  # DEBUG D#629 => D.73886.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73886
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73886
  # DEBUG this => D#1
  # DEBUG this => &D.73886
  # DEBUG D#626 => &D.73886._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1419
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1419
  # DEBUG this => D#620
  # DEBUG D.150931 => D#621
  operator delete (_1419);

  <bb 1106>:
  # DEBUG D#630 => &D.73886._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73886 ={v} {CLOBBER};
  # DEBUG this => &D.73887
  # DEBUG this => &D.73887
  # DEBUG __out => &tmp_name.D.23228
  # DEBUG __s => "frag_stat_"
  # DEBUG __s => "frag_stat_"
  std::__ostream_insert<char, std::char_traits<char> > (&tmp_name.D.23228, "frag_stat_", 10);
  goto <bb 1108>;

<L796>:
  goto <bb 1977> (<L439>);

  <bb 1108>:
  std::basic_ostream<char>::operator<< (&tmp_name.D.23228, c_6007);
  goto <bb 1110>;

<L797>:
  goto <bb 1977> (<L439>);

  <bb 1110>:
  # DEBUG this => &tmp_name
  D.73889 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1112>;

<L798>:
  goto <bb 1977> (<L439>);

  <bb 1112>:
  _1422 = operator new (176);

  <bb 1113>:
  Stats::Stats (_1422, _130, &D.73889, 1.0e+0, 100);

  <bb 1114>:
  # DEBUG D#2860 => &this_129(D)->_frag_stats
  _2012 = MEM[(struct Stats * * *)this_129(D) + 1144B];
  # DEBUG D#80 => D#2860
  # DEBUG __n => _1371
  # DEBUG this => D#80
  _2058 = _2012 + _1297;
  *_2058 = _1422;
  # DEBUG this => &D.73889
  # DEBUG this => &D.73889
  # DEBUG this => &D.73889
  _1427 = MEM[(char * *)&D.73889];
  # DEBUG D#1 => &D.73889
  # DEBUG this => D#1
  # DEBUG this => &D.73889
  if (&D.73889.D.11539._M_local_buf != _1427)
    goto <bb 1115>;
  else
    goto <bb 1116>;

  <bb 1115>:
  # DEBUG D#629 => D.73889.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73889
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73889
  # DEBUG this => D#1
  # DEBUG this => &D.73889
  # DEBUG D#626 => &D.73889._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1427
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1427
  # DEBUG this => D#620
  # DEBUG D.150948 => D#621
  operator delete (_1427);

  <bb 1116>:
  # DEBUG D#630 => &D.73889._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73889 ={v} {CLOBBER};
  # DEBUG this => &tmp_name
  D.73891 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1118>;

<L800>:
  goto <bb 1977> (<L439>);

  <bb 1118>:
  _1429 = std::map<std::__cxx11::basic_string<char>, Stats*>::operator[] (pretmp_3432, &D.73891);

  <bb 1119>:
  # DEBUG D#2861 => &this_129(D)->_frag_stats
  _2013 = MEM[(struct Stats * * *)this_129(D) + 1144B];
  # DEBUG D#80 => D#2861
  # DEBUG __n => _1371
  # DEBUG this => D#80
  _2060 = _2013 + _1297;
  _1431 = *_2060;
  *_1429 = _1431;
  # DEBUG this => &D.73891
  # DEBUG this => &D.73891
  # DEBUG this => &D.73891
  _2059 = MEM[(char * *)&D.73891];
  # DEBUG D#1 => &D.73891
  # DEBUG this => D#1
  # DEBUG this => &D.73891
  if (&D.73891.D.11539._M_local_buf != _2059)
    goto <bb 1120>;
  else
    goto <bb 1121>;

  <bb 1120>:
  # DEBUG D#629 => D.73891.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73891
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73891
  # DEBUG this => D#1
  # DEBUG this => &D.73891
  # DEBUG D#626 => &D.73891._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _2059
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _2059
  # DEBUG this => D#620
  # DEBUG D.150968 => D#621
  operator delete (_2059);

  <bb 1121>:
  # DEBUG D#630 => &D.73891._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73891 ={v} {CLOBBER};
  # DEBUG D#195 => &D.73893
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73893
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73892, "");
  goto <bb 1123>;

<L801>:
  goto <bb 1977> (<L439>);

  <bb 1123>:
  # DEBUG this => &tmp_name
  # DEBUG __s => &D.73892
  std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf, &D.73892);

  <bb 1124>:
  # DEBUG this => &D.73892
  # DEBUG this => &D.73892
  # DEBUG this => &D.73892
  _1436 = MEM[(char * *)&D.73892];
  # DEBUG D#1 => &D.73892
  # DEBUG this => D#1
  # DEBUG this => &D.73892
  if (&D.73892.D.11539._M_local_buf != _1436)
    goto <bb 1125>;
  else
    goto <bb 1126>;

  <bb 1125>:
  # DEBUG D#629 => D.73892.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73892
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73892
  # DEBUG this => D#1
  # DEBUG this => &D.73892
  # DEBUG D#626 => &D.73892._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1436
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1436
  # DEBUG this => D#620
  # DEBUG D.150995 => D#621
  operator delete (_1436);

  <bb 1126>:
  # DEBUG D#630 => &D.73892._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73892 ={v} {CLOBBER};
  # DEBUG this => &D.73893
  # DEBUG this => &D.73893
  # DEBUG __out => &tmp_name.D.23228
  # DEBUG __s => "hop_stat_"
  # DEBUG __s => "hop_stat_"
  std::__ostream_insert<char, std::char_traits<char> > (&tmp_name.D.23228, "hop_stat_", 9);
  goto <bb 1128>;

<L802>:
  goto <bb 1977> (<L439>);

  <bb 1128>:
  std::basic_ostream<char>::operator<< (&tmp_name.D.23228, c_6007);
  goto <bb 1130>;

<L803>:
  goto <bb 1977> (<L439>);

  <bb 1130>:
  # DEBUG this => &tmp_name
  D.73895 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1132>;

<L804>:
  goto <bb 1977> (<L439>);

  <bb 1132>:
  _1439 = operator new (176);

  <bb 1133>:
  Stats::Stats (_1439, _130, &D.73895, 1.0e+0, 20);

  <bb 1134>:
  # DEBUG D#2862 => &this_129(D)->_hop_stats
  _2014 = MEM[(struct Stats * * *)this_129(D) + 1312B];
  # DEBUG D#80 => D#2862
  # DEBUG __n => _1371
  # DEBUG this => D#80
  _2061 = _2014 + _1297;
  *_2061 = _1439;
  # DEBUG this => &D.73895
  # DEBUG this => &D.73895
  # DEBUG this => &D.73895
  _1444 = MEM[(char * *)&D.73895];
  # DEBUG D#1 => &D.73895
  # DEBUG this => D#1
  # DEBUG this => &D.73895
  if (&D.73895.D.11539._M_local_buf != _1444)
    goto <bb 1135>;
  else
    goto <bb 1136>;

  <bb 1135>:
  # DEBUG D#629 => D.73895.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73895
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73895
  # DEBUG this => D#1
  # DEBUG this => &D.73895
  # DEBUG D#626 => &D.73895._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1444
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1444
  # DEBUG this => D#620
  # DEBUG D.151012 => D#621
  operator delete (_1444);

  <bb 1136>:
  # DEBUG D#630 => &D.73895._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73895 ={v} {CLOBBER};
  # DEBUG this => &tmp_name
  D.73897 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1138>;

<L806>:
  goto <bb 1977> (<L439>);

  <bb 1138>:
  _1446 = std::map<std::__cxx11::basic_string<char>, Stats*>::operator[] (pretmp_3432, &D.73897);

  <bb 1139>:
  # DEBUG D#2863 => &this_129(D)->_hop_stats
  _2015 = MEM[(struct Stats * * *)this_129(D) + 1312B];
  # DEBUG D#80 => D#2863
  # DEBUG __n => _1371
  # DEBUG this => D#80
  _2063 = _2015 + _1297;
  _1447 = *_2063;
  *_1446 = _1447;
  # DEBUG this => &D.73897
  # DEBUG this => &D.73897
  # DEBUG this => &D.73897
  _2062 = MEM[(char * *)&D.73897];
  # DEBUG D#1 => &D.73897
  # DEBUG this => D#1
  # DEBUG this => &D.73897
  if (&D.73897.D.11539._M_local_buf != _2062)
    goto <bb 1140>;
  else
    goto <bb 1141>;

  <bb 1140>:
  # DEBUG D#629 => D.73897.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73897
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73897
  # DEBUG this => D#1
  # DEBUG this => &D.73897
  # DEBUG D#626 => &D.73897._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _2062
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _2062
  # DEBUG this => D#620
  # DEBUG D.151032 => D#621
  operator delete (_2062);

  <bb 1141>:
  # DEBUG D#630 => &D.73897._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73897 ={v} {CLOBBER};
  # DEBUG D#195 => &D.73899
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73899
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73898, "");
  goto <bb 1143>;

<L807>:
  goto <bb 1977> (<L439>);

  <bb 1143>:
  # DEBUG this => &tmp_name
  # DEBUG __s => &D.73898
  std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf, &D.73898);

  <bb 1144>:
  # DEBUG this => &D.73898
  # DEBUG this => &D.73898
  # DEBUG this => &D.73898
  _1453 = MEM[(char * *)&D.73898];
  # DEBUG D#1 => &D.73898
  # DEBUG this => D#1
  # DEBUG this => &D.73898
  if (&D.73898.D.11539._M_local_buf != _1453)
    goto <bb 1145>;
  else
    goto <bb 1146>;

  <bb 1145>:
  # DEBUG D#629 => D.73898.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73898
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73898
  # DEBUG this => D#1
  # DEBUG this => &D.73898
  # DEBUG D#626 => &D.73898._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1453
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1453
  # DEBUG this => D#620
  # DEBUG D.151055 => D#621
  operator delete (_1453);

  <bb 1146>:
  # DEBUG D#630 => &D.73898._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73898 ={v} {CLOBBER};
  # DEBUG this => &D.73899
  # DEBUG this => &D.73899
  _1454 = this_129(D)->_pair_stats;
  if (_1454 != 0)
    goto <bb 1148>;
  else
    goto <bb 1147>;

  <bb 1147>:
  pretmp_3425 = _1371 * 24;
  goto <bb 1154>;

  <bb 1148>:
  _1455 = this_129(D)->_nodes;
  _1456 = _1455 * _1455;
  _1457 = (long unsigned int) _1456;
  # DEBUG D#2864 => &this_129(D)->_pair_plat
  _2022 = MEM[(struct vector * *)this_129(D) + 1240B];
  # DEBUG D#124 => D#2864
  # DEBUG __n => _1371
  # DEBUG this => D#124
  _2064 = _1371 * 24;
  _2065 = _2022 + _2064;
  std::vector<Stats*>::resize.constprop (_2065, _1457);
  goto <bb 1150>;

<L808>:
  goto <bb 1977> (<L439>);

  <bb 1150>:
  _1460 = this_129(D)->_nodes;
  _1461 = _1460 * _1460;
  _1462 = (long unsigned int) _1461;
  # DEBUG D#2865 => &this_129(D)->_pair_nlat
  _2023 = MEM[(struct vector * *)this_129(D) + 1264B];
  # DEBUG D#124 => D#2865
  # DEBUG __n => _1371
  # DEBUG this => D#124
  _2066 = _2023 + _2064;
  std::vector<Stats*>::resize.constprop (_2066, _1462);
  goto <bb 1152>;

<L809>:
  goto <bb 1977> (<L439>);

  <bb 1152>:
  _1465 = this_129(D)->_nodes;
  _1466 = _1465 * _1465;
  _1467 = (long unsigned int) _1466;
  # DEBUG D#2866 => &this_129(D)->_pair_flat
  _2024 = MEM[(struct vector * *)this_129(D) + 1288B];
  # DEBUG D#124 => D#2866
  # DEBUG __n => _1371
  # DEBUG this => D#124
  _2067 = _2024 + _2064;
  std::vector<Stats*>::resize.constprop (_2067, _1467);
  goto <bb 1154>;

<L810>:
  goto <bb 1977> (<L439>);

  <bb 1154>:
  # prephitmp_3426 = PHI <pretmp_3425(1147), _2064(1152)>
  _1470 = this_129(D)->_nodes;
  _1471 = (long unsigned int) _1470;
  # DEBUG D#2867 => &this_129(D)->_sent_packets
  _1978 = MEM[(struct vector * *)this_129(D) + 1360B];
  # DEBUG D#67 => D#2867
  # DEBUG __n => _1371
  # DEBUG this => D#67
  _2069 = _1978 + prephitmp_3426;
  # DEBUG this => _2069
  # DEBUG __new_size => _1471
  __x = 0;
  # DEBUG __x => __x
  _913 = MEM[(int * *)_2069];
  # DEBUG D#68 => _2069
  _5112 = MEM[(int * *)_2069 + 8B];
  # DEBUG D#68 => _2069
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5113 = (long int) _5112;
  _5114 = (long int) _913;
  _5115 = _5113 - _5114;
  _5116 = _5115 /[ex] 4;
  _5117 = (size_type) _5116;
  if (_1471 > _5117)
    goto <bb 1155>;
  else
    goto <bb 1158>;

  <bb 1155>:
  # DEBUG D#68 => _2069
  # DEBUG D#68 => _2069
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5118 = _1471 - _5117;
  # DEBUG this => _2069
  # DEBUG D#272 => &_2069->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => _2069
  MEM[(struct __normal_iterator *)&__position] = _5112;
  # DEBUG __n => _5118
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_2069, __position, _5118, &__x);
  goto <bb 1157>;

<L811>:
  goto <bb 1977> (<L439>);

  <bb 1157>:
  pretmp_3394 = this_129(D)->_nodes;
  pretmp_3396 = (long unsigned int) pretmp_3394;
  goto <bb 1160>;

  <bb 1158>:
  # DEBUG D#68 => _2069
  # DEBUG D#68 => _2069
  # DEBUG this => D#68
  # DEBUG this => D#68
  if (_1471 < _5117)
    goto <bb 1159>;
  else
    goto <bb 1160>;

  <bb 1159>:
  _5119 = _1471 * 4;
  _5120 = _913 + _5119;
  # DEBUG D#396 => _2069
  # DEBUG __pos => _5120
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => _5120
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => _5120
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)_2069 + 8B] = _5120;

  <bb 1160>:
  # prephitmp_3397 = PHI <_1471(1158), pretmp_3396(1157), _1471(1159)>
  # DEBUG D#4290 => this_129(D)->_nodes
  # DEBUG D#2868 => &this_129(D)->_accepted_packets
  _1979 = MEM[(struct vector * *)this_129(D) + 1456B];
  # DEBUG D#67 => D#2868
  # DEBUG __n => _1371
  # DEBUG this => D#67
  _2070 = _1979 + prephitmp_3426;
  # DEBUG this => _2070
  # DEBUG __new_size => (long unsigned int) D#4290
  __x = 0;
  # DEBUG __x => __x
  _1473 = MEM[(int * *)_2070];
  # DEBUG D#68 => _2070
  _5121 = MEM[(int * *)_2070 + 8B];
  # DEBUG D#68 => _2070
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5122 = (long int) _5121;
  _5123 = (long int) _1473;
  _5124 = _5122 - _5123;
  _5125 = _5124 /[ex] 4;
  _5126 = (size_type) _5125;
  if (prephitmp_3397 > _5126)
    goto <bb 1161>;
  else
    goto <bb 1164>;

  <bb 1161>:
  # DEBUG D#68 => _2070
  # DEBUG D#68 => _2070
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5127 = prephitmp_3397 - _5126;
  # DEBUG this => _2070
  # DEBUG D#272 => &_2070->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => _2070
  MEM[(struct __normal_iterator *)&__position] = _5121;
  # DEBUG __n => _5127
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_2070, __position, _5127, &__x);
  goto <bb 1163>;

<L812>:
  goto <bb 1977> (<L439>);

  <bb 1163>:
  pretmp_3384 = this_129(D)->_nodes;
  pretmp_3386 = (long unsigned int) pretmp_3384;
  goto <bb 1166>;

  <bb 1164>:
  # DEBUG D#68 => _2070
  # DEBUG D#68 => _2070
  # DEBUG this => D#68
  # DEBUG this => D#68
  if (prephitmp_3397 < _5126)
    goto <bb 1165>;
  else
    goto <bb 1166>;

  <bb 1165>:
  _5128 = prephitmp_3397 * 4;
  _5129 = _1473 + _5128;
  # DEBUG D#396 => _2070
  # DEBUG __pos => _5129
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => _5129
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => _5129
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)_2070 + 8B] = _5129;

  <bb 1166>:
  # prephitmp_3378 = PHI <prephitmp_3397(1164), pretmp_3386(1163), prephitmp_3397(1165)>
  # DEBUG D#4289 => this_129(D)->_nodes
  # DEBUG D#2869 => &this_129(D)->_sent_flits
  _1980 = MEM[(struct vector * *)this_129(D) + 1552B];
  # DEBUG D#67 => D#2869
  # DEBUG __n => _1371
  # DEBUG this => D#67
  _2071 = _1980 + prephitmp_3426;
  # DEBUG this => _2071
  # DEBUG __new_size => (long unsigned int) D#4289
  __x = 0;
  # DEBUG __x => __x
  _1476 = MEM[(int * *)_2071];
  # DEBUG D#68 => _2071
  _5130 = MEM[(int * *)_2071 + 8B];
  # DEBUG D#68 => _2071
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5131 = (long int) _5130;
  _5132 = (long int) _1476;
  _5133 = _5131 - _5132;
  _5134 = _5133 /[ex] 4;
  _5135 = (size_type) _5134;
  if (prephitmp_3378 > _5135)
    goto <bb 1167>;
  else
    goto <bb 1170>;

  <bb 1167>:
  # DEBUG D#68 => _2071
  # DEBUG D#68 => _2071
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5136 = prephitmp_3378 - _5135;
  # DEBUG this => _2071
  # DEBUG D#272 => &_2071->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => _2071
  MEM[(struct __normal_iterator *)&__position] = _5130;
  # DEBUG __n => _5136
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_2071, __position, _5136, &__x);
  goto <bb 1169>;

<L813>:
  goto <bb 1977> (<L439>);

  <bb 1169>:
  pretmp_3375 = this_129(D)->_nodes;
  pretmp_3355 = (long unsigned int) pretmp_3375;
  goto <bb 1172>;

  <bb 1170>:
  # DEBUG D#68 => _2071
  # DEBUG D#68 => _2071
  # DEBUG this => D#68
  # DEBUG this => D#68
  if (prephitmp_3378 < _5135)
    goto <bb 1171>;
  else
    goto <bb 1172>;

  <bb 1171>:
  _5137 = prephitmp_3378 * 4;
  _5138 = _1476 + _5137;
  # DEBUG D#396 => _2071
  # DEBUG __pos => _5138
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => _5138
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => _5138
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)_2071 + 8B] = _5138;

  <bb 1172>:
  # prephitmp_3356 = PHI <prephitmp_3378(1170), pretmp_3355(1169), prephitmp_3378(1171)>
  # DEBUG D#4288 => this_129(D)->_nodes
  # DEBUG D#2870 => &this_129(D)->_accepted_flits
  _1981 = MEM[(struct vector * *)this_129(D) + 1648B];
  # DEBUG D#67 => D#2870
  # DEBUG __n => _1371
  # DEBUG this => D#67
  _2072 = _1981 + prephitmp_3426;
  # DEBUG this => _2072
  # DEBUG __new_size => (long unsigned int) D#4288
  __x = 0;
  # DEBUG __x => __x
  _1479 = MEM[(int * *)_2072];
  # DEBUG D#68 => _2072
  _5139 = MEM[(int * *)_2072 + 8B];
  # DEBUG D#68 => _2072
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5140 = (long int) _5139;
  _5141 = (long int) _1479;
  _5142 = _5140 - _5141;
  _5143 = _5142 /[ex] 4;
  _5144 = (size_type) _5143;
  if (prephitmp_3356 > _5144)
    goto <bb 1173>;
  else
    goto <bb 1176>;

  <bb 1173>:
  # DEBUG D#68 => _2072
  # DEBUG D#68 => _2072
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5145 = prephitmp_3356 - _5144;
  # DEBUG this => _2072
  # DEBUG D#272 => &_2072->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => _2072
  MEM[(struct __normal_iterator *)&__position] = _5139;
  # DEBUG __n => _5145
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_2072, __position, _5145, &__x);
  goto <bb 1175>;

<L814>:
  goto <bb 1977> (<L439>);

  <bb 1175>:
  goto <bb 1178>;

  <bb 1176>:
  # DEBUG D#68 => _2072
  # DEBUG D#68 => _2072
  # DEBUG this => D#68
  # DEBUG this => D#68
  if (prephitmp_3356 < _5144)
    goto <bb 1177>;
  else
    goto <bb 1175>;

  <bb 1177>:
  _5146 = prephitmp_3356 * 4;
  _5147 = _1479 + _5146;
  # DEBUG D#396 => _2072
  # DEBUG __pos => _5147
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => _5147
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => _5147
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)_2072 + 8B] = _5147;

  <bb 1178>:
  _1484 = this_129(D)->_pair_stats;
  if (_1484 != 0)
    goto <bb 1180>;
  else
    goto <bb 1179>;

  <bb 1179>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&tmp_name);
  goto <bb 1286>;

  <bb 1180>:
  # DEBUG i => 0
  _4879 = this_129(D)->_nodes;
  if (_4879 <= 0)
    goto <bb 1179>;
  else
    goto <bb 1181>;

  <bb 1181>:

  <bb 1182>:
  # i_6005 = PHI <0(1181), i_1598(1284)>
  # prephitmp_3358 = PHI <_4879(1181), prephitmp_3343(1284)>
  # DEBUG i => i_6005
  # DEBUG j => 0
  if (prephitmp_3358 <= 0)
    goto <bb 1283>;
  else
    goto <bb 1183>;

  <bb 1183>:

  <bb 1184>:
  # j_6003 = PHI <0(1183), j_1576(1282)>
  # DEBUG j => j_6003
  # DEBUG __out => &tmp_name.D.23228
  # DEBUG __s => "pair_plat_stat_"
  # DEBUG __s => "pair_plat_stat_"
  std::__ostream_insert<char, std::char_traits<char> > (&tmp_name.D.23228, "pair_plat_stat_", 15);
  goto <bb 1186>;

<L815>:
  goto <bb 1977> (<L439>);

  <bb 1186>:
  _1488 = std::basic_ostream<char>::operator<< (&tmp_name.D.23228, c_6007);
  goto <bb 1188>;

<L816>:
  goto <bb 1977> (<L439>);

  <bb 1188>:
  # DEBUG __out => _1488
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  std::__ostream_insert<char, std::char_traits<char> > (_1488, "_", 1);
  goto <bb 1190>;

<L817>:
  goto <bb 1977> (<L439>);

  <bb 1190>:
  _1490 = std::basic_ostream<char>::operator<< (_1488, i_6005);
  goto <bb 1192>;

<L818>:
  goto <bb 1977> (<L439>);

  <bb 1192>:
  # DEBUG __out => _1490
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  std::__ostream_insert<char, std::char_traits<char> > (_1490, "_", 1);
  goto <bb 1194>;

<L819>:
  goto <bb 1977> (<L439>);

  <bb 1194>:
  std::basic_ostream<char>::operator<< (_1490, j_6003);
  goto <bb 1196>;

<L820>:
  goto <bb 1977> (<L439>);

  <bb 1196>:
  # DEBUG this => &tmp_name
  D.73905 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1198>;

<L821>:
  goto <bb 1977> (<L439>);

  <bb 1198>:
  _1493 = operator new (176);

  <bb 1199>:
  Stats::Stats (_1493, _130, &D.73905, 1.0e+0, 250);

  <bb 1200>:
  _1495 = this_129(D)->_nodes;
  _1496 = _1495 * i_6005;
  _1497 = _1496 + j_6003;
  _1498 = (long unsigned int) _1497;
  # DEBUG D#2871 => &this_129(D)->_pair_plat
  _2025 = MEM[(struct vector * *)this_129(D) + 1240B];
  # DEBUG D#124 => D#2871
  # DEBUG __n => _1371
  # DEBUG this => D#124
  _2075 = _2025 + prephitmp_3426;
  _2016 = MEM[(struct Stats * * *)_2075];
  # DEBUG __n => _1498
  # DEBUG this => D#80
  _2073 = _1498 * 8;
  _2074 = _2016 + _2073;
  *_2074 = _1493;
  # DEBUG this => &D.73905
  # DEBUG this => &D.73905
  # DEBUG this => &D.73905
  _1503 = MEM[(char * *)&D.73905];
  # DEBUG D#1 => &D.73905
  # DEBUG this => D#1
  # DEBUG this => &D.73905
  if (&D.73905.D.11539._M_local_buf != _1503)
    goto <bb 1201>;
  else
    goto <bb 1202>;

  <bb 1201>:
  # DEBUG D#629 => D.73905.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73905
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73905
  # DEBUG this => D#1
  # DEBUG this => &D.73905
  # DEBUG D#626 => &D.73905._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1503
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1503
  # DEBUG this => D#620
  # DEBUG D.151112 => D#621
  operator delete (_1503);

  <bb 1202>:
  # DEBUG D#630 => &D.73905._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73905 ={v} {CLOBBER};
  # DEBUG this => &tmp_name
  D.73907 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1204>;

<L823>:
  goto <bb 1977> (<L439>);

  <bb 1204>:
  _1505 = std::map<std::__cxx11::basic_string<char>, Stats*>::operator[] (pretmp_3432, &D.73907);

  <bb 1205>:
  _1506 = this_129(D)->_nodes;
  _1507 = _1506 * i_6005;
  _1508 = _1507 + j_6003;
  _1509 = (long unsigned int) _1508;
  # DEBUG D#2872 => &this_129(D)->_pair_plat
  _2026 = MEM[(struct vector * *)this_129(D) + 1240B];
  # DEBUG D#124 => D#2872
  # DEBUG __n => _1371
  # DEBUG this => D#124
  _2079 = _2026 + prephitmp_3426;
  _2017 = MEM[(struct Stats * * *)_2079];
  # DEBUG __n => _1509
  # DEBUG this => D#80
  _2077 = _1509 * 8;
  _2078 = _2017 + _2077;
  _1511 = *_2078;
  *_1505 = _1511;
  # DEBUG this => &D.73907
  # DEBUG this => &D.73907
  # DEBUG this => &D.73907
  _2076 = MEM[(char * *)&D.73907];
  # DEBUG D#1 => &D.73907
  # DEBUG this => D#1
  # DEBUG this => &D.73907
  if (&D.73907.D.11539._M_local_buf != _2076)
    goto <bb 1206>;
  else
    goto <bb 1207>;

  <bb 1206>:
  # DEBUG D#629 => D.73907.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73907
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73907
  # DEBUG this => D#1
  # DEBUG this => &D.73907
  # DEBUG D#626 => &D.73907._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _2076
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _2076
  # DEBUG this => D#620
  # DEBUG D.151136 => D#621
  operator delete (_2076);

  <bb 1207>:
  # DEBUG D#630 => &D.73907._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73907 ={v} {CLOBBER};
  # DEBUG D#195 => &D.73909
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73909
  # DEBUG this => &D.73908
  # DEBUG __s => ""
  # DEBUG __a => D#1180
  # DEBUG D#1179 => D#1180
  # DEBUG this => &D.73908
  # DEBUG D#1177 => &D.73908._M_dataplus
  # DEBUG D#403 => D#1179
  # DEBUG this => D#1177
  # DEBUG __dat => &D.73908.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1177
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73908]._M_p = &D.73908.D.11539._M_local_buf;
  # DEBUG __s => ""
  # DEBUG this => &D.73908
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.73908
  # DEBUG __beg => ""
  # DEBUG __end => ""
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.329 (&D.73908, "", "");
  goto <bb 1209>;

<L824>:
  goto <bb 1977> (<L439>);

  <bb 1209>:
  # DEBUG this => &tmp_name
  # DEBUG __s => &D.73908
  # DEBUG this => &tmp_name._M_stringbuf
  # DEBUG __s => &D.73908
  _1514 = MEM[(long unsigned int *)&D.73908 + 8B];
  # DEBUG D#3 => &D.73908
  # DEBUG this => D#3
  # DEBUG this => &D.73908
  _5152 = MEM[(char * *)&D.73908];
  # DEBUG D#1 => &D.73908
  # DEBUG this => D#1
  # DEBUG this => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  # DEBUG __s => _5152
  # DEBUG __n => _1514
  _5154 = MEM[(long unsigned int *)&tmp_name + 88B];
  # DEBUG D#3 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  # DEBUG this => D#3
  std::__cxx11::basic_string<char>::_M_replace (&MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string, 0, _5154, _5152, _1514);

  <bb 1210>:
  _5155 = MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_mode;
  # DEBUG this => &tmp_name._M_stringbuf
  # DEBUG __mode => _5155
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => _5155
  # DEBUG __b => NULL
  __a.417_5156 = (int) _5155;
  _5157 = __a.417_5156 & 3;
  if (_5157 != 0)
    goto <bb 1211>;
  else
    goto <bb 1212>;

  <bb 1211>:
  # DEBUG D#23 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  __len_5159 = MEM[(long unsigned int *)&tmp_name + 88B];
  # DEBUG D#3 => D#23
  # DEBUG this => D#3
  # DEBUG __len => __len_5159

  <bb 1212>:
  # __len_5161 = PHI <0(1210), __len_5159(1211)>
  # DEBUG __len => __len_5161
  # DEBUG D#24 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  # DEBUG this => D#24
  _5160 = MEM[(char * *)&tmp_name + 80B];
  # DEBUG D#1 => D#24
  # DEBUG this => D#1
  std::__cxx11::basic_stringbuf<char>::_M_sync (&tmp_name._M_stringbuf, _5160, 0, __len_5161);
  goto <bb 1214>;

<L826>:
  goto <bb 1940> (<L427>);

  <bb 1214>:
  # DEBUG this => &D.73908
  # DEBUG this => &D.73908
  # DEBUG this => &D.73908
  _1516 = MEM[(char * *)&D.73908];
  # DEBUG D#1 => &D.73908
  # DEBUG this => D#1
  # DEBUG this => &D.73908
  if (&D.73908.D.11539._M_local_buf != _1516)
    goto <bb 1215>;
  else
    goto <bb 1216>;

  <bb 1215>:
  # DEBUG D#629 => D.73908.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73908
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73908
  # DEBUG this => D#1
  # DEBUG this => &D.73908
  # DEBUG D#626 => &D.73908._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1516
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1516
  # DEBUG this => D#620
  # DEBUG D.151167 => D#621
  operator delete (_1516);

  <bb 1216>:
  # DEBUG D#630 => &D.73908._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73908 ={v} {CLOBBER};
  # DEBUG this => &D.73909
  # DEBUG this => &D.73909
  # DEBUG __out => &tmp_name.D.23228
  # DEBUG __s => "pair_nlat_stat_"
  # DEBUG __s => "pair_nlat_stat_"
  std::__ostream_insert<char, std::char_traits<char> > (&tmp_name.D.23228, "pair_nlat_stat_", 15);
  goto <bb 1218>;

<L827>:
  goto <bb 1977> (<L439>);

  <bb 1218>:
  _1518 = std::basic_ostream<char>::operator<< (&tmp_name.D.23228, c_6007);
  goto <bb 1220>;

<L828>:
  goto <bb 1977> (<L439>);

  <bb 1220>:
  # DEBUG __out => _1518
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  std::__ostream_insert<char, std::char_traits<char> > (_1518, "_", 1);
  goto <bb 1222>;

<L829>:
  goto <bb 1977> (<L439>);

  <bb 1222>:
  _1520 = std::basic_ostream<char>::operator<< (_1518, i_6005);
  goto <bb 1224>;

<L830>:
  goto <bb 1977> (<L439>);

  <bb 1224>:
  # DEBUG __out => _1520
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  std::__ostream_insert<char, std::char_traits<char> > (_1520, "_", 1);
  goto <bb 1226>;

<L831>:
  goto <bb 1977> (<L439>);

  <bb 1226>:
  std::basic_ostream<char>::operator<< (_1520, j_6003);
  goto <bb 1228>;

<L832>:
  goto <bb 1977> (<L439>);

  <bb 1228>:
  # DEBUG this => &tmp_name
  D.73911 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1230>;

<L833>:
  goto <bb 1977> (<L439>);

  <bb 1230>:
  _1523 = operator new (176);

  <bb 1231>:
  Stats::Stats (_1523, _130, &D.73911, 1.0e+0, 250);

  <bb 1232>:
  _1525 = this_129(D)->_nodes;
  _1526 = _1525 * i_6005;
  _1527 = _1526 + j_6003;
  _1528 = (long unsigned int) _1527;
  # DEBUG D#2873 => &this_129(D)->_pair_nlat
  _2027 = MEM[(struct vector * *)this_129(D) + 1264B];
  # DEBUG D#124 => D#2873
  # DEBUG __n => _1371
  # DEBUG this => D#124
  _2082 = _2027 + prephitmp_3426;
  _2018 = MEM[(struct Stats * * *)_2082];
  # DEBUG __n => _1528
  # DEBUG this => D#80
  _2080 = _1528 * 8;
  _2081 = _2018 + _2080;
  *_2081 = _1523;
  # DEBUG this => &D.73911
  # DEBUG this => &D.73911
  # DEBUG this => &D.73911
  _1532 = MEM[(char * *)&D.73911];
  # DEBUG D#1 => &D.73911
  # DEBUG this => D#1
  # DEBUG this => &D.73911
  if (&D.73911.D.11539._M_local_buf != _1532)
    goto <bb 1233>;
  else
    goto <bb 1234>;

  <bb 1233>:
  # DEBUG D#629 => D.73911.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73911
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73911
  # DEBUG this => D#1
  # DEBUG this => &D.73911
  # DEBUG D#626 => &D.73911._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1532
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1532
  # DEBUG this => D#620
  # DEBUG D.151192 => D#621
  operator delete (_1532);

  <bb 1234>:
  # DEBUG D#630 => &D.73911._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73911 ={v} {CLOBBER};
  # DEBUG this => &tmp_name
  D.73913 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1236>;

<L835>:
  goto <bb 1977> (<L439>);

  <bb 1236>:
  _1534 = std::map<std::__cxx11::basic_string<char>, Stats*>::operator[] (pretmp_3432, &D.73913);

  <bb 1237>:
  _1535 = this_129(D)->_nodes;
  _1536 = _1535 * i_6005;
  _1537 = _1536 + j_6003;
  _1538 = (long unsigned int) _1537;
  # DEBUG D#2874 => &this_129(D)->_pair_nlat
  _2028 = MEM[(struct vector * *)this_129(D) + 1264B];
  # DEBUG D#124 => D#2874
  # DEBUG __n => _1371
  # DEBUG this => D#124
  _2086 = _2028 + prephitmp_3426;
  _2019 = MEM[(struct Stats * * *)_2086];
  # DEBUG __n => _1538
  # DEBUG this => D#80
  _2084 = _1538 * 8;
  _2085 = _2019 + _2084;
  _1541 = *_2085;
  *_1534 = _1541;
  # DEBUG this => &D.73913
  # DEBUG this => &D.73913
  # DEBUG this => &D.73913
  _2083 = MEM[(char * *)&D.73913];
  # DEBUG D#1 => &D.73913
  # DEBUG this => D#1
  # DEBUG this => &D.73913
  if (&D.73913.D.11539._M_local_buf != _2083)
    goto <bb 1238>;
  else
    goto <bb 1239>;

  <bb 1238>:
  # DEBUG D#629 => D.73913.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73913
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73913
  # DEBUG this => D#1
  # DEBUG this => &D.73913
  # DEBUG D#626 => &D.73913._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _2083
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _2083
  # DEBUG this => D#620
  # DEBUG D.151216 => D#621
  operator delete (_2083);

  <bb 1239>:
  # DEBUG D#630 => &D.73913._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73913 ={v} {CLOBBER};
  # DEBUG D#195 => &D.73915
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73915
  # DEBUG this => &D.73914
  # DEBUG __s => ""
  # DEBUG __a => D#1180
  # DEBUG D#1179 => D#1180
  # DEBUG this => &D.73914
  # DEBUG D#1177 => &D.73914._M_dataplus
  # DEBUG D#403 => D#1179
  # DEBUG this => D#1177
  # DEBUG __dat => &D.73914.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1177
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73914]._M_p = &D.73914.D.11539._M_local_buf;
  # DEBUG __s => ""
  # DEBUG this => &D.73914
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.73914
  # DEBUG __beg => ""
  # DEBUG __end => ""
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.329 (&D.73914, "", "");
  goto <bb 1241>;

<L836>:
  goto <bb 1977> (<L439>);

  <bb 1241>:
  # DEBUG this => &tmp_name
  # DEBUG __s => &D.73914
  # DEBUG this => &tmp_name._M_stringbuf
  # DEBUG __s => &D.73914
  _1545 = MEM[(long unsigned int *)&D.73914 + 8B];
  # DEBUG D#3 => &D.73914
  # DEBUG this => D#3
  # DEBUG this => &D.73914
  _5166 = MEM[(char * *)&D.73914];
  # DEBUG D#1 => &D.73914
  # DEBUG this => D#1
  # DEBUG this => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  # DEBUG __s => _5166
  # DEBUG __n => _1545
  _5168 = MEM[(long unsigned int *)&tmp_name + 88B];
  # DEBUG D#3 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  # DEBUG this => D#3
  std::__cxx11::basic_string<char>::_M_replace (&MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string, 0, _5168, _5166, _1545);

  <bb 1242>:
  _5169 = MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_mode;
  # DEBUG this => &tmp_name._M_stringbuf
  # DEBUG __mode => _5169
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => _5169
  # DEBUG __b => NULL
  __a.417_5170 = (int) _5169;
  _5171 = __a.417_5170 & 3;
  if (_5171 != 0)
    goto <bb 1243>;
  else
    goto <bb 1244>;

  <bb 1243>:
  # DEBUG D#23 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  __len_5173 = MEM[(long unsigned int *)&tmp_name + 88B];
  # DEBUG D#3 => D#23
  # DEBUG this => D#3
  # DEBUG __len => __len_5173

  <bb 1244>:
  # __len_5175 = PHI <0(1242), __len_5173(1243)>
  # DEBUG __len => __len_5175
  # DEBUG D#24 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  # DEBUG this => D#24
  _5174 = MEM[(char * *)&tmp_name + 80B];
  # DEBUG D#1 => D#24
  # DEBUG this => D#1
  std::__cxx11::basic_stringbuf<char>::_M_sync (&tmp_name._M_stringbuf, _5174, 0, __len_5175);
  goto <bb 1246>;

<L838>:
  goto <bb 1956> (<L432>);

  <bb 1246>:
  # DEBUG this => &D.73914
  # DEBUG this => &D.73914
  # DEBUG this => &D.73914
  _1547 = MEM[(char * *)&D.73914];
  # DEBUG D#1 => &D.73914
  # DEBUG this => D#1
  # DEBUG this => &D.73914
  if (&D.73914.D.11539._M_local_buf != _1547)
    goto <bb 1247>;
  else
    goto <bb 1248>;

  <bb 1247>:
  # DEBUG D#629 => D.73914.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73914
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73914
  # DEBUG this => D#1
  # DEBUG this => &D.73914
  # DEBUG D#626 => &D.73914._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1547
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1547
  # DEBUG this => D#620
  # DEBUG D.151247 => D#621
  operator delete (_1547);

  <bb 1248>:
  # DEBUG D#630 => &D.73914._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73914 ={v} {CLOBBER};
  # DEBUG this => &D.73915
  # DEBUG this => &D.73915
  # DEBUG __out => &tmp_name.D.23228
  # DEBUG __s => "pair_flat_stat_"
  # DEBUG __s => "pair_flat_stat_"
  std::__ostream_insert<char, std::char_traits<char> > (&tmp_name.D.23228, "pair_flat_stat_", 15);
  goto <bb 1250>;

<L839>:
  goto <bb 1977> (<L439>);

  <bb 1250>:
  _1549 = std::basic_ostream<char>::operator<< (&tmp_name.D.23228, c_6007);
  goto <bb 1252>;

<L840>:
  goto <bb 1977> (<L439>);

  <bb 1252>:
  # DEBUG __out => _1549
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  std::__ostream_insert<char, std::char_traits<char> > (_1549, "_", 1);
  goto <bb 1254>;

<L841>:
  goto <bb 1977> (<L439>);

  <bb 1254>:
  _1551 = std::basic_ostream<char>::operator<< (_1549, i_6005);
  goto <bb 1256>;

<L842>:
  goto <bb 1977> (<L439>);

  <bb 1256>:
  # DEBUG __out => _1551
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  std::__ostream_insert<char, std::char_traits<char> > (_1551, "_", 1);
  goto <bb 1258>;

<L843>:
  goto <bb 1977> (<L439>);

  <bb 1258>:
  std::basic_ostream<char>::operator<< (_1551, j_6003);
  goto <bb 1260>;

<L844>:
  goto <bb 1977> (<L439>);

  <bb 1260>:
  # DEBUG this => &tmp_name
  D.73917 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1262>;

<L845>:
  goto <bb 1977> (<L439>);

  <bb 1262>:
  _1554 = operator new (176);

  <bb 1263>:
  Stats::Stats (_1554, _130, &D.73917, 1.0e+0, 250);

  <bb 1264>:
  _1556 = this_129(D)->_nodes;
  _1557 = _1556 * i_6005;
  _1558 = _1557 + j_6003;
  _1559 = (long unsigned int) _1558;
  # DEBUG D#2875 => &this_129(D)->_pair_flat
  _2029 = MEM[(struct vector * *)this_129(D) + 1288B];
  # DEBUG D#124 => D#2875
  # DEBUG __n => _1371
  # DEBUG this => D#124
  _2089 = _2029 + prephitmp_3426;
  _2020 = MEM[(struct Stats * * *)_2089];
  # DEBUG __n => _1559
  # DEBUG this => D#80
  _2087 = _1559 * 8;
  _2088 = _2020 + _2087;
  *_2088 = _1554;
  # DEBUG this => &D.73917
  # DEBUG this => &D.73917
  # DEBUG this => &D.73917
  _1562 = MEM[(char * *)&D.73917];
  # DEBUG D#1 => &D.73917
  # DEBUG this => D#1
  # DEBUG this => &D.73917
  if (&D.73917.D.11539._M_local_buf != _1562)
    goto <bb 1265>;
  else
    goto <bb 1266>;

  <bb 1265>:
  # DEBUG D#629 => D.73917.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73917
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73917
  # DEBUG this => D#1
  # DEBUG this => &D.73917
  # DEBUG D#626 => &D.73917._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1562
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1562
  # DEBUG this => D#620
  # DEBUG D.151272 => D#621
  operator delete (_1562);

  <bb 1266>:
  # DEBUG D#630 => &D.73917._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73917 ={v} {CLOBBER};
  # DEBUG this => &tmp_name
  D.73919 = std::__cxx11::basic_stringbuf<char>::str (&tmp_name._M_stringbuf); [return slot optimization]
  goto <bb 1268>;

<L847>:
  goto <bb 1977> (<L439>);

  <bb 1268>:
  _1564 = std::map<std::__cxx11::basic_string<char>, Stats*>::operator[] (pretmp_3432, &D.73919);

  <bb 1269>:
  _1565 = this_129(D)->_nodes;
  _1566 = _1565 * i_6005;
  _1567 = _1566 + j_6003;
  _1568 = (long unsigned int) _1567;
  # DEBUG D#2876 => &this_129(D)->_pair_flat
  _2030 = MEM[(struct vector * *)this_129(D) + 1288B];
  # DEBUG D#124 => D#2876
  # DEBUG __n => _1371
  # DEBUG this => D#124
  _2093 = _2030 + prephitmp_3426;
  _2021 = MEM[(struct Stats * * *)_2093];
  # DEBUG __n => _1568
  # DEBUG this => D#80
  _2091 = _1568 * 8;
  _2092 = _2021 + _2091;
  _1569 = *_2092;
  *_1564 = _1569;
  # DEBUG this => &D.73919
  # DEBUG this => &D.73919
  # DEBUG this => &D.73919
  _2090 = MEM[(char * *)&D.73919];
  # DEBUG D#1 => &D.73919
  # DEBUG this => D#1
  # DEBUG this => &D.73919
  if (&D.73919.D.11539._M_local_buf != _2090)
    goto <bb 1270>;
  else
    goto <bb 1271>;

  <bb 1270>:
  # DEBUG D#629 => D.73919.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73919
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73919
  # DEBUG this => D#1
  # DEBUG this => &D.73919
  # DEBUG D#626 => &D.73919._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _2090
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _2090
  # DEBUG this => D#620
  # DEBUG D.151296 => D#621
  operator delete (_2090);

  <bb 1271>:
  # DEBUG D#630 => &D.73919._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73919 ={v} {CLOBBER};
  # DEBUG D#195 => &D.73921
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73921
  # DEBUG this => &D.73920
  # DEBUG __s => ""
  # DEBUG __a => D#1180
  # DEBUG D#1179 => D#1180
  # DEBUG this => &D.73920
  # DEBUG D#1177 => &D.73920._M_dataplus
  # DEBUG D#403 => D#1179
  # DEBUG this => D#1177
  # DEBUG __dat => &D.73920.D.11539._M_local_buf
  # DEBUG __a => D#403
  # DEBUG D#402 => D#403
  # DEBUG D#400 => D#1177
  # DEBUG D#401 => D#402
  # DEBUG this => D#400
  # DEBUG __a => D#401
  # DEBUG D#399 => D#401
  # DEBUG D#398 => D#400
  # DEBUG this => D#398
  # DEBUG D.114455 => D#399
  MEM[(struct _Alloc_hider *)&D.73920]._M_p = &D.73920.D.11539._M_local_buf;
  # DEBUG __s => ""
  # DEBUG this => &D.73920
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.73920
  # DEBUG __beg => ""
  # DEBUG __end => ""
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.329 (&D.73920, "", "");
  goto <bb 1273>;

<L848>:
  goto <bb 1977> (<L439>);

  <bb 1273>:
  # DEBUG this => &tmp_name
  # DEBUG __s => &D.73920
  # DEBUG this => &tmp_name._M_stringbuf
  # DEBUG __s => &D.73920
  _1572 = MEM[(long unsigned int *)&D.73920 + 8B];
  # DEBUG D#3 => &D.73920
  # DEBUG this => D#3
  # DEBUG this => &D.73920
  _5180 = MEM[(char * *)&D.73920];
  # DEBUG D#1 => &D.73920
  # DEBUG this => D#1
  # DEBUG this => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  # DEBUG __s => _5180
  # DEBUG __n => _1572
  _5182 = MEM[(long unsigned int *)&tmp_name + 88B];
  # DEBUG D#3 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  # DEBUG this => D#3
  std::__cxx11::basic_string<char>::_M_replace (&MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string, 0, _5182, _5180, _1572);

  <bb 1274>:
  _5183 = MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_mode;
  # DEBUG this => &tmp_name._M_stringbuf
  # DEBUG __mode => _5183
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => _5183
  # DEBUG __b => NULL
  __a.417_5184 = (int) _5183;
  _5185 = __a.417_5184 & 3;
  if (_5185 != 0)
    goto <bb 1275>;
  else
    goto <bb 1276>;

  <bb 1275>:
  # DEBUG D#23 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  __len_5187 = MEM[(long unsigned int *)&tmp_name + 88B];
  # DEBUG D#3 => D#23
  # DEBUG this => D#3
  # DEBUG __len => __len_5187

  <bb 1276>:
  # __len_5189 = PHI <0(1274), __len_5187(1275)>
  # DEBUG __len => __len_5189
  # DEBUG D#24 => &MEM[(struct basic_stringbuf *)&tmp_name + 8B]._M_string
  # DEBUG this => D#24
  _5188 = MEM[(char * *)&tmp_name + 80B];
  # DEBUG D#1 => D#24
  # DEBUG this => D#1
  std::__cxx11::basic_stringbuf<char>::_M_sync (&tmp_name._M_stringbuf, _5188, 0, __len_5189);
  goto <bb 1278>;

<L850>:
  goto <bb 1972> (<L437>);

  <bb 1278>:
  # DEBUG this => &D.73920
  # DEBUG this => &D.73920
  # DEBUG this => &D.73920
  _1575 = MEM[(char * *)&D.73920];
  # DEBUG D#1 => &D.73920
  # DEBUG this => D#1
  # DEBUG this => &D.73920
  if (&D.73920.D.11539._M_local_buf != _1575)
    goto <bb 1279>;
  else
    goto <bb 1280>;

  <bb 1279>:
  # DEBUG D#629 => D.73920.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73920
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73920
  # DEBUG this => D#1
  # DEBUG this => &D.73920
  # DEBUG D#626 => &D.73920._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1575
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1575
  # DEBUG this => D#620
  # DEBUG D.151323 => D#621
  operator delete (_1575);

  <bb 1280>:
  # DEBUG D#630 => &D.73920._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73920 ={v} {CLOBBER};
  # DEBUG this => &D.73921
  # DEBUG this => &D.73921
  j_1576 = j_6003 + 1;
  # DEBUG j => j_1576
  # DEBUG j => j_1576
  _1486 = this_129(D)->_nodes;
  if (_1486 <= j_1576)
    goto <bb 1281>;
  else
    goto <bb 1282>;

  <bb 1281>:
  # _4651 = PHI <_1486(1280)>
  goto <bb 1283>;

  <bb 1282>:
  goto <bb 1184>;

  <bb 1283>:
  # prephitmp_3343 = PHI <_4651(1281), prephitmp_3358(1182)>
  i_1598 = i_6005 + 1;
  # DEBUG i => i_1598
  # DEBUG i => i_1598
  if (i_1598 >= prephitmp_3343)
    goto <bb 1179>;
  else
    goto <bb 1284>;

  <bb 1284>:
  goto <bb 1182>;

<L851>:
  pretmp_4699 = &this_129(D)->_pair_plat;
  pretmp_4744 = &this_129(D)->_pair_nlat;
  pretmp_3932 = &this_129(D)->_pair_flat;
  goto <bb 1980> (<L441>);

  <bb 1286>:
  tmp_name ={v} {CLOBBER};
  c_1601 = c_6007 + 1;
  # DEBUG c => c_1601
  # DEBUG c => c_1601
  _1365 = this_129(D)->_classes;
  if (_1365 <= c_1601)
    goto <bb 1287>;
  else
    goto <bb 1288>;

  <bb 1287>:
  # _4668 = PHI <_1365(1286)>
  goto <bb 1289>;

  <bb 1288>:
  goto <bb 1045>;

  <bb 1289>:
  # _6004 = PHI <_4668(1287), _5278(1043)>
  # prephitmp_3441 = PHI <_4668(1287), _5278(1043)>
  _1639 = (long unsigned int) _6004;
  _1640 = &this_129(D)->_slowest_flit;
  # DEBUG this => _1640
  # DEBUG __new_size => _1639
  __x = -1;
  # DEBUG __x => __x
  _3800 = MEM[(int * *)this_129(D) + 1768B];
  # DEBUG D#68 => _1640
  _5190 = MEM[(int * *)this_129(D) + 1776B];
  # DEBUG D#68 => _1640
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5191 = (long int) _5190;
  _5192 = (long int) _3800;
  _5193 = _5191 - _5192;
  _5194 = _5193 /[ex] 4;
  _5195 = (size_type) _5194;
  if (_1639 > _5195)
    goto <bb 1290>;
  else
    goto <bb 1293>;

  <bb 1290>:
  # DEBUG D#68 => _1640
  # DEBUG D#68 => _1640
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5196 = _1639 - _5195;
  # DEBUG this => _1640
  # DEBUG D#272 => &_1640->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => _1640
  MEM[(struct __normal_iterator *)&__position] = _5190;
  # DEBUG __n => _5196
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_1640, __position, _5196, &__x);
  goto <bb 1292>;

<L852>:
  pretmp_4721 = &this_129(D)->_pair_plat;
  pretmp_5724 = &this_129(D)->_pair_nlat;
  pretmp_3790 = &this_129(D)->_pair_flat;
  pretmp_3474 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1292>:
  pretmp_59 = this_129(D)->_classes;
  goto <bb 1295>;

  <bb 1293>:
  # DEBUG D#68 => _1640
  # DEBUG D#68 => _1640
  # DEBUG this => D#68
  # DEBUG this => D#68
  if (_1639 < _5195)
    goto <bb 1294>;
  else
    goto <bb 1295>;

  <bb 1294>:
  _5197 = _1639 * 4;
  _5198 = _3800 + _5197;
  # DEBUG D#396 => _1640
  # DEBUG __pos => _5198
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => _5198
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => _5198
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)this_129(D) + 1776B] = _5198;
  pretmp_5300 = this_129(D)->_classes;

  <bb 1295>:
  # prephitmp_6263 = PHI <prephitmp_3441(1293), pretmp_59(1292), pretmp_5300(1294)>
  _1643 = (long unsigned int) prephitmp_6263;
  _1644 = &this_129(D)->_slowest_packet;
  # DEBUG this => _1644
  # DEBUG __new_size => _1643
  __x = -1;
  # DEBUG __x => __x
  _1641 = MEM[(int * *)this_129(D) + 1744B];
  # DEBUG D#68 => _1644
  _5199 = MEM[(int * *)this_129(D) + 1752B];
  # DEBUG D#68 => _1644
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5200 = (long int) _5199;
  _5201 = (long int) _1641;
  _5202 = _5200 - _5201;
  _5203 = _5202 /[ex] 4;
  _5204 = (size_type) _5203;
  if (_1643 > _5204)
    goto <bb 1296>;
  else
    goto <bb 1299>;

  <bb 1296>:
  # DEBUG D#68 => _1644
  # DEBUG D#68 => _1644
  # DEBUG this => D#68
  # DEBUG this => D#68
  _5205 = _1643 - _5204;
  # DEBUG this => _1644
  # DEBUG D#272 => &_1644->D.45977._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#272
  # DEBUG this => _1644
  MEM[(struct __normal_iterator *)&__position] = _5199;
  # DEBUG __n => _5205
  # DEBUG __x => &__x
  std::vector<int>::_M_fill_insert (_1644, __position, _5205, &__x);
  goto <bb 1298>;

<L853>:
  pretmp_4720 = &this_129(D)->_pair_plat;
  pretmp_5723 = &this_129(D)->_pair_nlat;
  pretmp_3799 = &this_129(D)->_pair_flat;
  pretmp_3473 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  <bb 1298>:
  goto <bb 1301>;

  <bb 1299>:
  # DEBUG D#68 => _1644
  # DEBUG D#68 => _1644
  # DEBUG this => D#68
  # DEBUG this => D#68
  if (_1643 < _5204)
    goto <bb 1300>;
  else
    goto <bb 1298>;

  <bb 1300>:
  _5206 = _1643 * 4;
  _5207 = _1641 + _5206;
  # DEBUG D#396 => _1644
  # DEBUG __pos => _5207
  # DEBUG D#395 => D#396
  # DEBUG this => D#395
  # DEBUG D#393 => &D#395->D.45977
  # DEBUG this => D#393
  # DEBUG D#394 => D#395->D.45977._M_impl._M_finish
  # DEBUG __first => _5207
  # DEBUG __last => D#394
  # DEBUG D.114420 => NULL
  # DEBUG D#391 => _5207
  # DEBUG D#392 => D#394
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  MEM[(int * *)this_129(D) + 1752B] = _5207;

  <bb 1301>:
  # DEBUG this => &stats_out_file
  # DEBUG this => &stats_out_file
  # DEBUG this => &stats_out_file
  _1647 = MEM[(char * *)&stats_out_file];
  # DEBUG D#1 => &stats_out_file
  # DEBUG this => D#1
  # DEBUG this => &stats_out_file
  if (&stats_out_file.D.11539._M_local_buf != _1647)
    goto <bb 1302>;
  else
    goto <bb 1303>;

  <bb 1302>:
  # DEBUG D#629 => stats_out_file.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &stats_out_file
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &stats_out_file
  # DEBUG this => D#1
  # DEBUG this => &stats_out_file
  # DEBUG D#626 => &stats_out_file._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1647
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1647
  # DEBUG this => D#620
  # DEBUG D.151443 => D#621
  operator delete (_1647);

  <bb 1303>:
  # DEBUG D#630 => &stats_out_file._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&stats_out_file] ={v} {CLOBBER};
  # DEBUG this => &watch_packets
  # DEBUG D#476 => &watch_packets.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => watch_packets.D.45977._M_impl._M_finish
  # DEBUG D#478 => watch_packets.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &watch_packets.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1648 = MEM[(struct _Vector_base *)&watch_packets]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1648
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1648
  # DEBUG __n => D#470
  if (_1648 != 0B)
    goto <bb 1304>;
  else
    goto <bb 1305>;

  <bb 1304>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1648
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1648
  # DEBUG this => D#462
  # DEBUG D.151430 => D#463
  operator delete (_1648);

  <bb 1305>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)&watch_packets] ={v} {CLOBBER};
  # DEBUG this => &watch_flits
  # DEBUG D#476 => &watch_flits.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => watch_flits.D.45977._M_impl._M_finish
  # DEBUG D#478 => watch_flits.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &watch_flits.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1649 = MEM[(struct _Vector_base *)&watch_flits]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1649
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1649
  # DEBUG __n => D#470
  if (_1649 != 0B)
    goto <bb 1306>;
  else
    goto <bb 1307>;

  <bb 1306>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1649
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1649
  # DEBUG this => D#462
  # DEBUG D.151415 => D#463
  operator delete (_1649);

  <bb 1307>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)&watch_flits] ={v} {CLOBBER};
  # DEBUG this => &watch_file
  # DEBUG this => &watch_file
  # DEBUG this => &watch_file
  _1651 = MEM[(char * *)&watch_file];
  # DEBUG D#1 => &watch_file
  # DEBUG this => D#1
  # DEBUG this => &watch_file
  if (&watch_file.D.11539._M_local_buf != _1651)
    goto <bb 1308>;
  else
    goto <bb 1309>;

  <bb 1308>:
  # DEBUG D#629 => watch_file.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &watch_file
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &watch_file
  # DEBUG this => D#1
  # DEBUG this => &watch_file
  # DEBUG D#626 => &watch_file._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1651
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1651
  # DEBUG this => D#620
  # DEBUG D.151398 => D#621
  operator delete (_1651);

  <bb 1309>:
  # DEBUG D#630 => &watch_file._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&watch_file] ={v} {CLOBBER};
  std::vector<std::__cxx11::basic_string<char> >::~vector (&injection_process);
  # DEBUG this => &packet_size_rate_str
  # DEBUG this => &packet_size_rate_str
  # DEBUG this => &packet_size_rate_str
  _1652 = MEM[(char * *)&packet_size_rate_str];
  # DEBUG D#1 => &packet_size_rate_str
  # DEBUG this => D#1
  # DEBUG this => &packet_size_rate_str
  if (&packet_size_rate_str.D.11539._M_local_buf != _1652)
    goto <bb 1310>;
  else
    goto <bb 1311>;

  <bb 1310>:
  # DEBUG D#629 => packet_size_rate_str.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &packet_size_rate_str
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &packet_size_rate_str
  # DEBUG this => D#1
  # DEBUG this => &packet_size_rate_str
  # DEBUG D#626 => &packet_size_rate_str._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1652
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1652
  # DEBUG this => D#620
  # DEBUG D.151383 => D#621
  operator delete (_1652);

  <bb 1311>:
  # DEBUG D#630 => &packet_size_rate_str._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&packet_size_rate_str] ={v} {CLOBBER};
  # DEBUG this => &packet_size_str
  # DEBUG this => &packet_size_str
  # DEBUG this => &packet_size_str
  _1653 = MEM[(char * *)&packet_size_str];
  # DEBUG D#1 => &packet_size_str
  # DEBUG this => D#1
  # DEBUG this => &packet_size_str
  if (&packet_size_str.D.11539._M_local_buf != _1653)
    goto <bb 1312>;
  else
    goto <bb 1313>;

  <bb 1312>:
  # DEBUG D#629 => packet_size_str.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &packet_size_str
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &packet_size_str
  # DEBUG this => D#1
  # DEBUG this => &packet_size_str
  # DEBUG D#626 => &packet_size_str._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1653
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1653
  # DEBUG this => D#620
  # DEBUG D.151368 => D#621
  operator delete (_1653);

  <bb 1313>:
  # DEBUG D#630 => &packet_size_str._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&packet_size_str] ={v} {CLOBBER};
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _1654 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _1654)
    goto <bb 1314>;
  else
    goto <bb 1315>;

  <bb 1314>:
  # DEBUG D#629 => rf.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &rf
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#626 => &rf._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1654
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1654
  # DEBUG this => D#620
  # DEBUG D.151353 => D#621
  operator delete (_1654);

  <bb 1315>:
  # DEBUG D#630 => &rf._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&rf] ={v} {CLOBBER};
  # DEBUG this => &priority
  # DEBUG this => &priority
  # DEBUG this => &priority
  _1573 = MEM[(char * *)&priority];
  # DEBUG D#1 => &priority
  # DEBUG this => D#1
  # DEBUG this => &priority
  if (&priority.D.11539._M_local_buf != _1573)
    goto <bb 1316>;
  else
    goto <bb 1317>;

  <bb 1316>:
  # DEBUG D#629 => priority.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &priority
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &priority
  # DEBUG this => D#1
  # DEBUG this => &priority
  # DEBUG D#626 => &priority._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1573
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1573
  # DEBUG this => D#620
  # DEBUG D.151338 => D#621
  operator delete (_1573);

  <bb 1317>:
  # DEBUG D#630 => &priority._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  priority ={v} {CLOBBER};
  rf ={v} {CLOBBER};
  # DEBUG D#2877 => {CLOBBER}
  # DEBUG rf_iter$_M_node => D#2877
  packet_size_str ={v} {CLOBBER};
  packet_size_rate_str ={v} {CLOBBER};
  injection_process ={v} {CLOBBER};
  watch_file ={v} {CLOBBER};
  watch_flits ={v} {CLOBBER};
  watch_packets ={v} {CLOBBER};
  stats_out_file ={v} {CLOBBER};
  return;

<L167>:
  # DEBUG this => &D.73583
  # DEBUG this => &D.73583
  # DEBUG this => &D.73583
  _1646 = MEM[(char * *)&D.73583];
  # DEBUG D#1 => &D.73583
  # DEBUG this => D#1
  # DEBUG this => &D.73583
  if (&D.73583.D.11539._M_local_buf != _1646)
    goto <bb 1319>;
  else
    goto <bb 1320>;

  <bb 1319>:
  # DEBUG D#629 => D.73583.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73583
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73583
  # DEBUG this => D#1
  # DEBUG this => &D.73583
  # DEBUG D#626 => &D.73583._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1646
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1646
  # DEBUG this => D#620
  # DEBUG D.151458 => D#621
  operator delete (_1646);

  <bb 1320>:
  # DEBUG D#630 => &D.73583._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73583 ={v} {CLOBBER};
  resx 2

<L169>:
  # DEBUG this => &D.73596
  # DEBUG this => &D.73596
  # DEBUG this => &D.73596
  _1949 = MEM[(char * *)&D.73596];
  # DEBUG D#1 => &D.73596
  # DEBUG this => D#1
  # DEBUG this => &D.73596
  if (&D.73596.D.11539._M_local_buf != _1949)
    goto <bb 1322>;
  else
    goto <bb 1323>;

  <bb 1322>:
  # DEBUG D#629 => D.73596.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73596
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73596
  # DEBUG this => D#1
  # DEBUG this => &D.73596
  # DEBUG D#626 => &D.73596._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1949
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1949
  # DEBUG this => D#620
  # DEBUG D.151475 => D#621
  operator delete (_1949);

  <bb 1323>:
  # DEBUG D#630 => &D.73596._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73596 ={v} {CLOBBER};
  resx 85

<L854>:
  pretmp_5742 = &this_129(D)->_packet_size;
  pretmp_6466 = &this_129(D)->_packet_size_rate;
  pretmp_6482 = &this_129(D)->_traffic;
  pretmp_7325 = &this_129(D)->_last_class;
  pretmp_7341 = &this_129(D)->_qtime;
  pretmp_7357 = &this_129(D)->_total_in_flight_flits;
  pretmp_7373 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7389 = &this_129(D)->_retired_packets;
  pretmp_7824 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8197 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8317 = &this_129(D)->_pair_plat;
  pretmp_8333 = &this_129(D)->_pair_nlat;
  pretmp_8349 = &this_129(D)->_pair_flat;
  pretmp_8365 = &this_129(D)->_sent_packets;
  pretmp_8381 = &this_129(D)->_accepted_packets;
  pretmp_8397 = &this_129(D)->_sent_flits;
  pretmp_8413 = &this_129(D)->_accepted_flits;
  pretmp_8429 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

<L171>:
  # DEBUG this => &D.73598
  # DEBUG this => &D.73598
  # DEBUG this => &D.73598
  _1838 = MEM[(char * *)&D.73598];
  # DEBUG D#1 => &D.73598
  # DEBUG this => D#1
  # DEBUG this => &D.73598
  if (&D.73598.D.11539._M_local_buf != _1838)
    goto <bb 1326>;
  else
    goto <bb 1327>;

  <bb 1326>:
  # DEBUG D#629 => D.73598.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73598
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73598
  # DEBUG this => D#1
  # DEBUG this => &D.73598
  # DEBUG D#626 => &D.73598._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1838
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1838
  # DEBUG this => D#620
  # DEBUG D.151492 => D#621
  operator delete (_1838);

  <bb 1327>:
  # DEBUG D#630 => &D.73598._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73598 ={v} {CLOBBER};
  resx 89

<L855>:
  pretmp_5857 = &this_129(D)->_packet_size;
  pretmp_6468 = &this_129(D)->_packet_size_rate;
  pretmp_6484 = &this_129(D)->_traffic;
  pretmp_7327 = &this_129(D)->_last_class;
  pretmp_7343 = &this_129(D)->_qtime;
  pretmp_7359 = &this_129(D)->_total_in_flight_flits;
  pretmp_7375 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7391 = &this_129(D)->_retired_packets;
  pretmp_7826 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8199 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8319 = &this_129(D)->_pair_plat;
  pretmp_8335 = &this_129(D)->_pair_nlat;
  pretmp_8351 = &this_129(D)->_pair_flat;
  pretmp_8367 = &this_129(D)->_sent_packets;
  pretmp_8383 = &this_129(D)->_accepted_packets;
  pretmp_8399 = &this_129(D)->_sent_flits;
  pretmp_8415 = &this_129(D)->_accepted_flits;
  pretmp_8431 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

<L173>:
  # DEBUG this => &D.73600
  # DEBUG this => &D.73600
  # DEBUG this => &D.73600
  _1836 = MEM[(char * *)&D.73600];
  # DEBUG D#1 => &D.73600
  # DEBUG this => D#1
  # DEBUG this => &D.73600
  if (&D.73600.D.11539._M_local_buf != _1836)
    goto <bb 1330>;
  else
    goto <bb 1331>;

  <bb 1330>:
  # DEBUG D#629 => D.73600.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73600
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73600
  # DEBUG this => D#1
  # DEBUG this => &D.73600
  # DEBUG D#626 => &D.73600._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1836
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1836
  # DEBUG this => D#620
  # DEBUG D.151509 => D#621
  operator delete (_1836);

  <bb 1331>:
  # DEBUG D#630 => &D.73600._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73600 ={v} {CLOBBER};
  resx 93

<L856>:
  pretmp_6205 = &this_129(D)->_packet_size;
  pretmp_6470 = &this_129(D)->_packet_size_rate;
  pretmp_6486 = &this_129(D)->_traffic;
  pretmp_7329 = &this_129(D)->_last_class;
  pretmp_7345 = &this_129(D)->_qtime;
  pretmp_7361 = &this_129(D)->_total_in_flight_flits;
  pretmp_7377 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7393 = &this_129(D)->_retired_packets;
  pretmp_7828 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8201 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8321 = &this_129(D)->_pair_plat;
  pretmp_8337 = &this_129(D)->_pair_nlat;
  pretmp_8353 = &this_129(D)->_pair_flat;
  pretmp_8369 = &this_129(D)->_sent_packets;
  pretmp_8385 = &this_129(D)->_accepted_packets;
  pretmp_8401 = &this_129(D)->_sent_flits;
  pretmp_8417 = &this_129(D)->_accepted_flits;
  pretmp_8433 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

<L175>:
  # DEBUG this => &D.73602
  # DEBUG this => &D.73602
  # DEBUG this => &D.73602
  _1834 = MEM[(char * *)&D.73602];
  # DEBUG D#1 => &D.73602
  # DEBUG this => D#1
  # DEBUG this => &D.73602
  if (&D.73602.D.11539._M_local_buf != _1834)
    goto <bb 1334>;
  else
    goto <bb 1335>;

  <bb 1334>:
  # DEBUG D#629 => D.73602.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73602
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73602
  # DEBUG this => D#1
  # DEBUG this => &D.73602
  # DEBUG D#626 => &D.73602._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1834
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1834
  # DEBUG this => D#620
  # DEBUG D.151526 => D#621
  operator delete (_1834);

  <bb 1335>:
  # DEBUG D#630 => &D.73602._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73602 ={v} {CLOBBER};
  resx 97

<L857>:
  pretmp_6211 = &this_129(D)->_packet_size;
  pretmp_6458 = &this_129(D)->_packet_size_rate;
  pretmp_6474 = &this_129(D)->_traffic;
  pretmp_7317 = &this_129(D)->_last_class;
  pretmp_7333 = &this_129(D)->_qtime;
  pretmp_7349 = &this_129(D)->_total_in_flight_flits;
  pretmp_7365 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7381 = &this_129(D)->_retired_packets;
  pretmp_7816 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8189 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8309 = &this_129(D)->_pair_plat;
  pretmp_8325 = &this_129(D)->_pair_nlat;
  pretmp_8341 = &this_129(D)->_pair_flat;
  pretmp_8357 = &this_129(D)->_sent_packets;
  pretmp_8373 = &this_129(D)->_accepted_packets;
  pretmp_8389 = &this_129(D)->_sent_flits;
  pretmp_8405 = &this_129(D)->_accepted_flits;
  pretmp_8421 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

<L177>:
  # DEBUG this => &D.73604
  # DEBUG this => &D.73604
  # DEBUG this => &D.73604
  _1832 = MEM[(char * *)&D.73604];
  # DEBUG D#1 => &D.73604
  # DEBUG this => D#1
  # DEBUG this => &D.73604
  if (&D.73604.D.11539._M_local_buf != _1832)
    goto <bb 1338>;
  else
    goto <bb 1339>;

  <bb 1338>:
  # DEBUG D#629 => D.73604.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73604
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73604
  # DEBUG this => D#1
  # DEBUG this => &D.73604
  # DEBUG D#626 => &D.73604._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1832
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1832
  # DEBUG this => D#620
  # DEBUG D.151543 => D#621
  operator delete (_1832);

  <bb 1339>:
  # DEBUG D#630 => &D.73604._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73604 ={v} {CLOBBER};
  resx 101

<L858>:
  pretmp_6209 = &this_129(D)->_packet_size;
  pretmp_6460 = &this_129(D)->_packet_size_rate;
  pretmp_6476 = &this_129(D)->_traffic;
  pretmp_7319 = &this_129(D)->_last_class;
  pretmp_7335 = &this_129(D)->_qtime;
  pretmp_7351 = &this_129(D)->_total_in_flight_flits;
  pretmp_7367 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7383 = &this_129(D)->_retired_packets;
  pretmp_7818 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8191 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8311 = &this_129(D)->_pair_plat;
  pretmp_8327 = &this_129(D)->_pair_nlat;
  pretmp_8343 = &this_129(D)->_pair_flat;
  pretmp_8359 = &this_129(D)->_sent_packets;
  pretmp_8375 = &this_129(D)->_accepted_packets;
  pretmp_8391 = &this_129(D)->_sent_flits;
  pretmp_8407 = &this_129(D)->_accepted_flits;
  pretmp_8423 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

<L179>:
  # DEBUG this => &D.73606
  # DEBUG this => &D.73606
  # DEBUG this => &D.73606
  _1830 = MEM[(char * *)&D.73606];
  # DEBUG D#1 => &D.73606
  # DEBUG this => D#1
  # DEBUG this => &D.73606
  if (&D.73606.D.11539._M_local_buf != _1830)
    goto <bb 1342>;
  else
    goto <bb 1343>;

  <bb 1342>:
  # DEBUG D#629 => D.73606.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73606
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73606
  # DEBUG this => D#1
  # DEBUG this => &D.73606
  # DEBUG D#626 => &D.73606._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1830
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1830
  # DEBUG this => D#620
  # DEBUG D.151560 => D#621
  operator delete (_1830);

  <bb 1343>:
  # DEBUG D#630 => &D.73606._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73606 ={v} {CLOBBER};
  resx 105

<L859>:
  pretmp_6207 = &this_129(D)->_packet_size;
  pretmp_6462 = &this_129(D)->_packet_size_rate;
  pretmp_6478 = &this_129(D)->_traffic;
  pretmp_7321 = &this_129(D)->_last_class;
  pretmp_7337 = &this_129(D)->_qtime;
  pretmp_7353 = &this_129(D)->_total_in_flight_flits;
  pretmp_7369 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7385 = &this_129(D)->_retired_packets;
  pretmp_7820 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8193 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8313 = &this_129(D)->_pair_plat;
  pretmp_8329 = &this_129(D)->_pair_nlat;
  pretmp_8345 = &this_129(D)->_pair_flat;
  pretmp_8361 = &this_129(D)->_sent_packets;
  pretmp_8377 = &this_129(D)->_accepted_packets;
  pretmp_8393 = &this_129(D)->_sent_flits;
  pretmp_8409 = &this_129(D)->_accepted_flits;
  pretmp_8425 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

<L181>:
  # DEBUG this => &D.73609
  # DEBUG this => &D.73609
  # DEBUG this => &D.73609
  _1828 = MEM[(char * *)&D.73609];
  # DEBUG D#1 => &D.73609
  # DEBUG this => D#1
  # DEBUG this => &D.73609
  if (&D.73609.D.11539._M_local_buf != _1828)
    goto <bb 1346>;
  else
    goto <bb 1347>;

  <bb 1346>:
  # DEBUG D#629 => D.73609.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73609
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73609
  # DEBUG this => D#1
  # DEBUG this => &D.73609
  # DEBUG D#626 => &D.73609._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1828
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1828
  # DEBUG this => D#620
  # DEBUG D.151577 => D#621
  operator delete (_1828);

  <bb 1347>:
  # DEBUG D#630 => &D.73609._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73609 ={v} {CLOBBER};
  resx 109

<L860>:
  pretmp_6206 = &this_129(D)->_packet_size;
  pretmp_6464 = &this_129(D)->_packet_size_rate;
  pretmp_6480 = &this_129(D)->_traffic;
  pretmp_7323 = &this_129(D)->_last_class;
  pretmp_7339 = &this_129(D)->_qtime;
  pretmp_7355 = &this_129(D)->_total_in_flight_flits;
  pretmp_7371 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7387 = &this_129(D)->_retired_packets;
  pretmp_7822 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8195 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8315 = &this_129(D)->_pair_plat;
  pretmp_8331 = &this_129(D)->_pair_nlat;
  pretmp_8347 = &this_129(D)->_pair_flat;
  pretmp_8363 = &this_129(D)->_sent_packets;
  pretmp_8379 = &this_129(D)->_accepted_packets;
  pretmp_8395 = &this_129(D)->_sent_flits;
  pretmp_8411 = &this_129(D)->_accepted_flits;
  pretmp_8427 = &this_129(D)->_stats;
  goto <bb 2023> (<L450>);

<L184>:
  # DEBUG this => &D.73611
  # DEBUG this => &D.73611
  # DEBUG this => &D.73611
  _1826 = MEM[(char * *)&D.73611];
  # DEBUG D#1 => &D.73611
  # DEBUG this => D#1
  # DEBUG this => &D.73611
  if (&D.73611.D.11539._M_local_buf != _1826)
    goto <bb 1350>;
  else
    goto <bb 1351>;

  <bb 1350>:
  # DEBUG D#629 => D.73611.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73611
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73611
  # DEBUG this => D#1
  # DEBUG this => &D.73611
  # DEBUG D#626 => &D.73611._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1826
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1826
  # DEBUG this => D#620
  # DEBUG D.151594 => D#621
  operator delete (_1826);

  <bb 1351>:
  # DEBUG D#630 => &D.73611._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73611 ={v} {CLOBBER};
  resx 116

<L861>:
  pretmp_5425 = &this_129(D)->_packet_size;
  pretmp_6199 = &this_129(D)->_packet_size_rate;
  pretmp_5849 = &this_129(D)->_traffic;
  pretmp_6499 = &this_129(D)->_last_class;
  pretmp_6512 = &this_129(D)->_qtime;
  pretmp_6525 = &this_129(D)->_total_in_flight_flits;
  pretmp_6538 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6551 = &this_129(D)->_retired_packets;
  pretmp_7705 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7841 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8214 = &this_129(D)->_pair_plat;
  pretmp_8227 = &this_129(D)->_pair_nlat;
  pretmp_8240 = &this_129(D)->_pair_flat;
  pretmp_8253 = &this_129(D)->_sent_packets;
  pretmp_8266 = &this_129(D)->_accepted_packets;
  pretmp_8279 = &this_129(D)->_sent_flits;
  pretmp_8292 = &this_129(D)->_accepted_flits;
  pretmp_8305 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

<L564>:

<L185>:
  # DEBUG this => &D.73613
  # DEBUG this => &D.73613
  # DEBUG this => &D.73613
  _242 = MEM[(char * *)&D.73613];
  # DEBUG D#1 => &D.73613
  # DEBUG this => D#1
  # DEBUG this => &D.73613
  if (&D.73613.D.11539._M_local_buf != _242)
    goto <bb 1355>;
  else
    goto <bb 1356>;

  <bb 1355>:
  # DEBUG D#629 => D.73613.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73613
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73613
  # DEBUG this => D#1
  # DEBUG this => &D.73613
  # DEBUG D#626 => &D.73613._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _242
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _242
  # DEBUG this => D#620
  # DEBUG D.151609 => D#621
  operator delete (_242);

  <bb 1356>:
  # DEBUG D#630 => &D.73613._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73613 ={v} {CLOBBER};
  resx 124

<L862>:
  goto <bb 1359> (<L187>);

<L561>:

<L187>:
  # DEBUG this => &D.73614
  # DEBUG this => &D.73614
  # DEBUG this => &D.73614
  _1814 = MEM[(char * *)&D.73614];
  # DEBUG D#1 => &D.73614
  # DEBUG this => D#1
  # DEBUG this => &D.73614
  if (&D.73614.D.11539._M_local_buf != _1814)
    goto <bb 1360>;
  else
    goto <bb 1361>;

  <bb 1360>:
  # DEBUG D#629 => D.73614.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73614
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73614
  # DEBUG this => D#1
  # DEBUG this => &D.73614
  # DEBUG D#626 => &D.73614._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1814
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1814
  # DEBUG this => D#620
  # DEBUG D.151624 => D#621
  operator delete (_1814);

  <bb 1361>:
  # DEBUG D#630 => &D.73614._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73614 ={v} {CLOBBER};
  resx 123

<L863>:
  goto <bb 1364> (<L189>);

<L560>:

<L189>:
  # DEBUG this => &D.73615
  # DEBUG this => &D.73615
  # DEBUG this => &D.73615
  _1816 = MEM[(char * *)&D.73615];
  # DEBUG D#1 => &D.73615
  # DEBUG this => D#1
  # DEBUG this => &D.73615
  if (&D.73615.D.11539._M_local_buf != _1816)
    goto <bb 1365>;
  else
    goto <bb 1366>;

  <bb 1365>:
  # DEBUG D#629 => D.73615.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73615
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73615
  # DEBUG this => D#1
  # DEBUG this => &D.73615
  # DEBUG D#626 => &D.73615._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1816
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1816
  # DEBUG this => D#620
  # DEBUG D.151639 => D#621
  operator delete (_1816);

  <bb 1366>:
  # DEBUG D#630 => &D.73615._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73615 ={v} {CLOBBER};
  resx 122

<L864>:
  goto <bb 1369> (<L191>);

<L559>:

<L191>:
  # DEBUG this => &D.73616
  # DEBUG this => &D.73616
  # DEBUG this => &D.73617
  # DEBUG this => &D.73617
  # DEBUG this => &D.73617
  _1819 = MEM[(char * *)&D.73617];
  # DEBUG D#1 => &D.73617
  # DEBUG this => D#1
  # DEBUG this => &D.73617
  if (&D.73617.D.11539._M_local_buf != _1819)
    goto <bb 1370>;
  else
    goto <bb 1371>;

  <bb 1370>:
  # DEBUG D#629 => D.73617.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73617
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73617
  # DEBUG this => D#1
  # DEBUG this => &D.73617
  # DEBUG D#626 => &D.73617._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1819
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1819
  # DEBUG this => D#620
  # DEBUG D.151656 => D#621
  operator delete (_1819);

  <bb 1371>:
  # DEBUG D#630 => &D.73617._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73617 ={v} {CLOBBER};
  resx 120

<L865>:
  goto <bb 1374> (<L194>);

<L558>:

<L194>:
  # DEBUG this => &D.73618
  # DEBUG this => &D.73618
  # DEBUG this => &D.73618
  _1820 = MEM[(char * *)&D.73618];
  # DEBUG D#1 => &D.73618
  # DEBUG this => D#1
  # DEBUG this => &D.73618
  if (&D.73618.D.11539._M_local_buf != _1820)
    goto <bb 1375>;
  else
    goto <bb 1376>;

  <bb 1375>:
  # DEBUG D#629 => D.73618.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73618
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73618
  # DEBUG this => D#1
  # DEBUG this => &D.73618
  # DEBUG D#626 => &D.73618._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1820
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1820
  # DEBUG this => D#620
  # DEBUG D.151671 => D#621
  operator delete (_1820);

  <bb 1376>:
  # DEBUG D#630 => &D.73618._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73618 ={v} {CLOBBER};
  resx 119

<L866>:
  pretmp_5178 = &this_129(D)->_packet_size;
  pretmp_5851 = &this_129(D)->_packet_size_rate;
  pretmp_6192 = &this_129(D)->_traffic;
  pretmp_6498 = &this_129(D)->_last_class;
  pretmp_6511 = &this_129(D)->_qtime;
  pretmp_6524 = &this_129(D)->_total_in_flight_flits;
  pretmp_6537 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6550 = &this_129(D)->_retired_packets;
  pretmp_7704 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7840 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8213 = &this_129(D)->_pair_plat;
  pretmp_8226 = &this_129(D)->_pair_nlat;
  pretmp_8239 = &this_129(D)->_pair_flat;
  pretmp_8252 = &this_129(D)->_sent_packets;
  pretmp_8265 = &this_129(D)->_accepted_packets;
  pretmp_8278 = &this_129(D)->_sent_flits;
  pretmp_8291 = &this_129(D)->_accepted_flits;
  pretmp_8304 = &this_129(D)->_stats;
  goto <bb 2018> (<L449>);

<L197>:
  # DEBUG this => &D.73624
  # DEBUG this => &D.73624
  # DEBUG this => &D.73624
  _1823 = MEM[(char * *)&D.73624];
  # DEBUG D#1 => &D.73624
  # DEBUG this => D#1
  # DEBUG this => &D.73624
  if (&D.73624.D.11539._M_local_buf != _1823)
    goto <bb 1379>;
  else
    goto <bb 1380>;

  <bb 1379>:
  # DEBUG D#629 => D.73624.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73624
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73624
  # DEBUG this => D#1
  # DEBUG this => &D.73624
  # DEBUG D#626 => &D.73624._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1823
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1823
  # DEBUG this => D#620
  # DEBUG D.151688 => D#621
  operator delete (_1823);

  <bb 1380>:
  # DEBUG D#630 => &D.73624._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73624 ={v} {CLOBBER};
  resx 148

<L867>:
  pretmp_2943 = &this_129(D)->_packet_size;
  pretmp_42 = &this_129(D)->_packet_size_rate;
  pretmp_6114 = &this_129(D)->_traffic;
  pretmp_4875 = &this_129(D)->_last_class;
  pretmp_5803 = &this_129(D)->_qtime;
  pretmp_5765 = &this_129(D)->_total_in_flight_flits;
  pretmp_3054 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6156 = &this_129(D)->_retired_packets;
  pretmp_7419 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7731 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7867 = &this_129(D)->_pair_plat;
  pretmp_7910 = &this_129(D)->_pair_nlat;
  pretmp_7953 = &this_129(D)->_pair_flat;
  pretmp_7996 = &this_129(D)->_sent_packets;
  pretmp_8039 = &this_129(D)->_accepted_packets;
  pretmp_8082 = &this_129(D)->_sent_flits;
  pretmp_8125 = &this_129(D)->_accepted_flits;
  pretmp_8168 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L198>:
  # DEBUG this => &D.73625
  # DEBUG this => &D.73625
  # DEBUG this => &D.73625
  _266 = MEM[(char * *)&D.73625];
  # DEBUG D#1 => &D.73625
  # DEBUG this => D#1
  # DEBUG this => &D.73625
  if (&D.73625.D.11539._M_local_buf != _266)
    goto <bb 1383>;
  else
    goto <bb 1384>;

  <bb 1383>:
  # DEBUG D#629 => D.73625.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73625
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73625
  # DEBUG this => D#1
  # DEBUG this => &D.73625
  # DEBUG D#626 => &D.73625._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _266
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _266
  # DEBUG this => D#620
  # DEBUG D.151703 => D#621
  operator delete (_266);

  <bb 1384>:
  # DEBUG D#630 => &D.73625._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73625 ={v} {CLOBBER};
  resx 151

<L868>:
  pretmp_2947 = &this_129(D)->_packet_size;
  pretmp_10 = &this_129(D)->_packet_size_rate;
  pretmp_29 = &this_129(D)->_traffic;
  pretmp_6186 = &this_129(D)->_last_class;
  pretmp_5797 = &this_129(D)->_qtime;
  pretmp_5764 = &this_129(D)->_total_in_flight_flits;
  pretmp_480 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4999 = &this_129(D)->_retired_packets;
  pretmp_7422 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7734 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7870 = &this_129(D)->_pair_plat;
  pretmp_7913 = &this_129(D)->_pair_nlat;
  pretmp_7956 = &this_129(D)->_pair_flat;
  pretmp_7999 = &this_129(D)->_sent_packets;
  pretmp_8042 = &this_129(D)->_accepted_packets;
  pretmp_8085 = &this_129(D)->_sent_flits;
  pretmp_8128 = &this_129(D)->_accepted_flits;
  pretmp_8171 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L200>:
  # DEBUG this => &D.73627
  # DEBUG this => &D.73627
  # DEBUG this => &D.73627
  _1812 = MEM[(char * *)&D.73627];
  # DEBUG D#1 => &D.73627
  # DEBUG this => D#1
  # DEBUG this => &D.73627
  if (&D.73627.D.11539._M_local_buf != _1812)
    goto <bb 1387>;
  else
    goto <bb 1388>;

  <bb 1387>:
  # DEBUG D#629 => D.73627.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73627
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73627
  # DEBUG this => D#1
  # DEBUG this => &D.73627
  # DEBUG D#626 => &D.73627._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1812
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1812
  # DEBUG this => D#620
  # DEBUG D.151720 => D#621
  operator delete (_1812);

  <bb 1388>:
  # DEBUG D#630 => &D.73627._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73627 ={v} {CLOBBER};
  resx 155

<L869>:
  pretmp_2949 = &this_129(D)->_packet_size;
  pretmp_6245 = &this_129(D)->_packet_size_rate;
  pretmp_6101 = &this_129(D)->_traffic;
  pretmp_6185 = &this_129(D)->_last_class;
  pretmp_4961 = &this_129(D)->_qtime;
  pretmp_6169 = &this_129(D)->_total_in_flight_flits;
  pretmp_607 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4993 = &this_129(D)->_retired_packets;
  pretmp_7424 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7736 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7872 = &this_129(D)->_pair_plat;
  pretmp_7915 = &this_129(D)->_pair_nlat;
  pretmp_7958 = &this_129(D)->_pair_flat;
  pretmp_8001 = &this_129(D)->_sent_packets;
  pretmp_8044 = &this_129(D)->_accepted_packets;
  pretmp_8087 = &this_129(D)->_sent_flits;
  pretmp_8130 = &this_129(D)->_accepted_flits;
  pretmp_8173 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L202>:
  # DEBUG this => &D.73629
  # DEBUG this => &D.73629
  # DEBUG this => &D.73629
  _1810 = MEM[(char * *)&D.73629];
  # DEBUG D#1 => &D.73629
  # DEBUG this => D#1
  # DEBUG this => &D.73629
  if (&D.73629.D.11539._M_local_buf != _1810)
    goto <bb 1391>;
  else
    goto <bb 1392>;

  <bb 1391>:
  # DEBUG D#629 => D.73629.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73629
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73629
  # DEBUG this => D#1
  # DEBUG this => &D.73629
  # DEBUG D#626 => &D.73629._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1810
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1810
  # DEBUG this => D#620
  # DEBUG D.151737 => D#621
  operator delete (_1810);

  <bb 1392>:
  # DEBUG D#630 => &D.73629._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73629 ={v} {CLOBBER};
  resx 159

<L870>:
  pretmp_2967 = &this_129(D)->_packet_size;
  pretmp_6250 = &this_129(D)->_packet_size_rate;
  pretmp_4828 = &this_129(D)->_traffic;
  pretmp_5800 = &this_129(D)->_last_class;
  pretmp_6172 = &this_129(D)->_qtime;
  pretmp_6167 = &this_129(D)->_total_in_flight_flits;
  pretmp_3070 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6272 = &this_129(D)->_retired_packets;
  pretmp_7426 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7738 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7874 = &this_129(D)->_pair_plat;
  pretmp_7917 = &this_129(D)->_pair_nlat;
  pretmp_7960 = &this_129(D)->_pair_flat;
  pretmp_8003 = &this_129(D)->_sent_packets;
  pretmp_8046 = &this_129(D)->_accepted_packets;
  pretmp_8089 = &this_129(D)->_sent_flits;
  pretmp_8132 = &this_129(D)->_accepted_flits;
  pretmp_8175 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L204>:
  # DEBUG this => &D.73631
  # DEBUG this => &D.73631
  # DEBUG this => &D.73631
  _291 = MEM[(char * *)&D.73631];
  # DEBUG D#1 => &D.73631
  # DEBUG this => D#1
  # DEBUG this => &D.73631
  if (&D.73631.D.11539._M_local_buf != _291)
    goto <bb 1395>;
  else
    goto <bb 1396>;

  <bb 1395>:
  # DEBUG D#629 => D.73631.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73631
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73631
  # DEBUG this => D#1
  # DEBUG this => &D.73631
  # DEBUG D#626 => &D.73631._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _291
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _291
  # DEBUG this => D#620
  # DEBUG D.151754 => D#621
  operator delete (_291);

  <bb 1396>:
  # DEBUG D#630 => &D.73631._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73631 ={v} {CLOBBER};
  resx 163

<L871>:
  pretmp_2969 = &this_129(D)->_packet_size;
  pretmp_4931 = &this_129(D)->_packet_size_rate;
  pretmp_6092 = &this_129(D)->_traffic;
  pretmp_6184 = &this_129(D)->_last_class;
  pretmp_6171 = &this_129(D)->_qtime;
  pretmp_5753 = &this_129(D)->_total_in_flight_flits;
  pretmp_4973 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6274 = &this_129(D)->_retired_packets;
  pretmp_7428 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7740 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7876 = &this_129(D)->_pair_plat;
  pretmp_7919 = &this_129(D)->_pair_nlat;
  pretmp_7962 = &this_129(D)->_pair_flat;
  pretmp_8005 = &this_129(D)->_sent_packets;
  pretmp_8048 = &this_129(D)->_accepted_packets;
  pretmp_8091 = &this_129(D)->_sent_flits;
  pretmp_8134 = &this_129(D)->_accepted_flits;
  pretmp_8177 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L206>:
  # DEBUG this => &D.73633
  # DEBUG D#476 => &D.73633.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73633.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73633.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73633.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1808 = MEM[(struct _Vector_base *)&D.73633]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1808
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1808
  # DEBUG __n => D#470
  if (_1808 != 0B)
    goto <bb 1399>;
  else
    goto <bb 1400>;

  <bb 1399>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1808
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1808
  # DEBUG this => D#462
  # DEBUG D.151773 => D#463
  operator delete (_1808);

  <bb 1400>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73633 ={v} {CLOBBER};
  resx 168

<L872>:
  goto <bb 1403> (<L207>);

<L573>:

<L207>:
  # DEBUG this => &D.73634
  # DEBUG this => &D.73634
  # DEBUG this => &D.73634
  _1803 = MEM[(char * *)&D.73634];
  # DEBUG D#1 => &D.73634
  # DEBUG this => D#1
  # DEBUG this => &D.73634
  if (&D.73634.D.11539._M_local_buf != _1803)
    goto <bb 1404>;
  else
    goto <bb 1405>;

  <bb 1404>:
  # DEBUG D#629 => D.73634.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73634
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73634
  # DEBUG this => D#1
  # DEBUG this => &D.73634
  # DEBUG D#626 => &D.73634._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1803
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1803
  # DEBUG this => D#620
  # DEBUG D.151786 => D#621
  operator delete (_1803);

  <bb 1405>:
  # DEBUG D#630 => &D.73634._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73634 ={v} {CLOBBER};
  resx 167

<L873>:
  pretmp_2971 = &this_129(D)->_packet_size;
  pretmp_6244 = &this_129(D)->_packet_size_rate;
  pretmp_6057 = &this_129(D)->_traffic;
  pretmp_6183 = &this_129(D)->_last_class;
  pretmp_5790 = &this_129(D)->_qtime;
  pretmp_6165 = &this_129(D)->_total_in_flight_flits;
  pretmp_533 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6276 = &this_129(D)->_retired_packets;
  pretmp_7430 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7742 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7878 = &this_129(D)->_pair_plat;
  pretmp_7921 = &this_129(D)->_pair_nlat;
  pretmp_7964 = &this_129(D)->_pair_flat;
  pretmp_8007 = &this_129(D)->_sent_packets;
  pretmp_8050 = &this_129(D)->_accepted_packets;
  pretmp_8093 = &this_129(D)->_sent_flits;
  pretmp_8136 = &this_129(D)->_accepted_flits;
  pretmp_8179 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L575>:

<L210>:
  D.73636 ={v} {CLOBBER};
  # DEBUG this => &D.73637
  # DEBUG this => &D.73637
  # DEBUG this => &D.73637
  _1806 = MEM[(char * *)&D.73637];
  # DEBUG D#1 => &D.73637
  # DEBUG this => D#1
  # DEBUG this => &D.73637
  if (&D.73637.D.11539._M_local_buf != _1806)
    goto <bb 1409>;
  else
    goto <bb 1410>;

  <bb 1409>:
  # DEBUG D#629 => D.73637.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73637
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73637
  # DEBUG this => D#1
  # DEBUG this => &D.73637
  # DEBUG D#626 => &D.73637._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1806
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1806
  # DEBUG this => D#620
  # DEBUG D.151803 => D#621
  operator delete (_1806);

  <bb 1410>:
  # DEBUG D#630 => &D.73637._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73637 ={v} {CLOBBER};
  resx 173

<L874>:
  pretmp_2937 = &this_129(D)->_packet_size;
  pretmp_4919 = &this_129(D)->_packet_size_rate;
  pretmp_3046 = &this_129(D)->_traffic;
  pretmp_5807 = &this_129(D)->_last_class;
  pretmp_5791 = &this_129(D)->_qtime;
  pretmp_5760 = &this_129(D)->_total_in_flight_flits;
  pretmp_6080 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6278 = &this_129(D)->_retired_packets;
  pretmp_7432 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7744 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7880 = &this_129(D)->_pair_plat;
  pretmp_7923 = &this_129(D)->_pair_nlat;
  pretmp_7966 = &this_129(D)->_pair_flat;
  pretmp_8009 = &this_129(D)->_sent_packets;
  pretmp_8052 = &this_129(D)->_accepted_packets;
  pretmp_8095 = &this_129(D)->_sent_flits;
  pretmp_8138 = &this_129(D)->_accepted_flits;
  pretmp_8181 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L212>:
  # DEBUG this => &D.73639
  # DEBUG D#503 => &D.73639.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73639.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73639.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73639.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _319 = MEM[(struct _Vector_base *)&D.73639]._M_impl._M_start;
  # DEBUG D#500 => (long int) _319
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _319
  # DEBUG __n => D#497
  if (_319 != 0B)
    goto <bb 1413>;
  else
    goto <bb 1414>;

  <bb 1413>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _319
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _319
  # DEBUG this => D#489
  # DEBUG D.151822 => D#490
  operator delete (_319);

  <bb 1414>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73639 ={v} {CLOBBER};
  resx 180

<L875>:
  goto <bb 1417> (<L213>);

<L579>:

<L213>:
  # DEBUG this => &D.73640
  # DEBUG this => &D.73640
  # DEBUG this => &D.73640
  _1799 = MEM[(char * *)&D.73640];
  # DEBUG D#1 => &D.73640
  # DEBUG this => D#1
  # DEBUG this => &D.73640
  if (&D.73640.D.11539._M_local_buf != _1799)
    goto <bb 1418>;
  else
    goto <bb 1419>;

  <bb 1418>:
  # DEBUG D#629 => D.73640.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73640
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73640
  # DEBUG this => D#1
  # DEBUG this => &D.73640
  # DEBUG D#626 => &D.73640._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1799
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1799
  # DEBUG this => D#620
  # DEBUG D.151835 => D#621
  operator delete (_1799);

  <bb 1419>:
  # DEBUG D#630 => &D.73640._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73640 ={v} {CLOBBER};
  resx 179

<L876>:
  pretmp_2939 = &this_129(D)->_packet_size;
  pretmp_6241 = &this_129(D)->_packet_size_rate;
  pretmp_6058 = &this_129(D)->_traffic;
  pretmp_5434 = &this_129(D)->_last_class;
  pretmp_5000 = &this_129(D)->_qtime;
  pretmp_5937 = &this_129(D)->_total_in_flight_flits;
  pretmp_6158 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6280 = &this_129(D)->_retired_packets;
  pretmp_7434 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7746 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7882 = &this_129(D)->_pair_plat;
  pretmp_7925 = &this_129(D)->_pair_nlat;
  pretmp_7968 = &this_129(D)->_pair_flat;
  pretmp_8011 = &this_129(D)->_sent_packets;
  pretmp_8054 = &this_129(D)->_accepted_packets;
  pretmp_8097 = &this_129(D)->_sent_flits;
  pretmp_8140 = &this_129(D)->_accepted_flits;
  pretmp_8183 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L581>:

<L216>:
  D.73642 ={v} {CLOBBER};
  # DEBUG this => &D.73643
  # DEBUG this => &D.73643
  # DEBUG this => &D.73643
  _1802 = MEM[(char * *)&D.73643];
  # DEBUG D#1 => &D.73643
  # DEBUG this => D#1
  # DEBUG this => &D.73643
  if (&D.73643.D.11539._M_local_buf != _1802)
    goto <bb 1423>;
  else
    goto <bb 1424>;

  <bb 1423>:
  # DEBUG D#629 => D.73643.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73643
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73643
  # DEBUG this => D#1
  # DEBUG this => &D.73643
  # DEBUG D#626 => &D.73643._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1802
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1802
  # DEBUG this => D#620
  # DEBUG D.151852 => D#621
  operator delete (_1802);

  <bb 1424>:
  # DEBUG D#630 => &D.73643._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73643 ={v} {CLOBBER};
  resx 185

<L877>:
  pretmp_2927 = &this_129(D)->_packet_size;
  pretmp_8 = &this_129(D)->_packet_size_rate;
  pretmp_6061 = &this_129(D)->_traffic;
  pretmp_4957 = &this_129(D)->_last_class;
  pretmp_5789 = &this_129(D)->_qtime;
  pretmp_759 = &this_129(D)->_total_in_flight_flits;
  pretmp_6160 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6282 = &this_129(D)->_retired_packets;
  pretmp_7436 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7748 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7884 = &this_129(D)->_pair_plat;
  pretmp_7927 = &this_129(D)->_pair_nlat;
  pretmp_7970 = &this_129(D)->_pair_flat;
  pretmp_8013 = &this_129(D)->_sent_packets;
  pretmp_8056 = &this_129(D)->_accepted_packets;
  pretmp_8099 = &this_129(D)->_sent_flits;
  pretmp_8142 = &this_129(D)->_accepted_flits;
  pretmp_8185 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L218>:
  # DEBUG this => &D.73645
  # DEBUG D#476 => &D.73645.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73645.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73645.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73645.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _346 = MEM[(struct _Vector_base *)&D.73645]._M_impl._M_start;
  # DEBUG D#473 => (long int) _346
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _346
  # DEBUG __n => D#470
  if (_346 != 0B)
    goto <bb 1427>;
  else
    goto <bb 1428>;

  <bb 1427>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _346
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _346
  # DEBUG this => D#462
  # DEBUG D.151871 => D#463
  operator delete (_346);

  <bb 1428>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73645 ={v} {CLOBBER};
  resx 192

<L878>:
  goto <bb 1431> (<L219>);

<L585>:

<L219>:
  # DEBUG this => &D.73646
  # DEBUG this => &D.73646
  # DEBUG this => &D.73646
  _1795 = MEM[(char * *)&D.73646];
  # DEBUG D#1 => &D.73646
  # DEBUG this => D#1
  # DEBUG this => &D.73646
  if (&D.73646.D.11539._M_local_buf != _1795)
    goto <bb 1432>;
  else
    goto <bb 1433>;

  <bb 1432>:
  # DEBUG D#629 => D.73646.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73646
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73646
  # DEBUG this => D#1
  # DEBUG this => &D.73646
  # DEBUG D#626 => &D.73646._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1795
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1795
  # DEBUG this => D#620
  # DEBUG D.151884 => D#621
  operator delete (_1795);

  <bb 1433>:
  # DEBUG D#630 => &D.73646._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73646 ={v} {CLOBBER};
  resx 191

<L879>:
  pretmp_2944 = &this_129(D)->_packet_size;
  pretmp_9 = &this_129(D)->_packet_size_rate;
  pretmp_6116 = &this_129(D)->_traffic;
  pretmp_5823 = &this_129(D)->_last_class;
  pretmp_5802 = &this_129(D)->_qtime;
  pretmp_5762 = &this_129(D)->_total_in_flight_flits;
  pretmp_2964 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4840 = &this_129(D)->_retired_packets;
  pretmp_7420 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7732 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7868 = &this_129(D)->_pair_plat;
  pretmp_7911 = &this_129(D)->_pair_nlat;
  pretmp_7954 = &this_129(D)->_pair_flat;
  pretmp_7997 = &this_129(D)->_sent_packets;
  pretmp_8040 = &this_129(D)->_accepted_packets;
  pretmp_8083 = &this_129(D)->_sent_flits;
  pretmp_8126 = &this_129(D)->_accepted_flits;
  pretmp_8169 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L587>:

<L222>:
  D.73648 ={v} {CLOBBER};
  # DEBUG this => &D.73649
  # DEBUG this => &D.73649
  # DEBUG this => &D.73649
  _1798 = MEM[(char * *)&D.73649];
  # DEBUG D#1 => &D.73649
  # DEBUG this => D#1
  # DEBUG this => &D.73649
  if (&D.73649.D.11539._M_local_buf != _1798)
    goto <bb 1437>;
  else
    goto <bb 1438>;

  <bb 1437>:
  # DEBUG D#629 => D.73649.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73649
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73649
  # DEBUG this => D#1
  # DEBUG this => &D.73649
  # DEBUG D#626 => &D.73649._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1798
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1798
  # DEBUG this => D#620
  # DEBUG D.151901 => D#621
  operator delete (_1798);

  <bb 1438>:
  # DEBUG D#630 => &D.73649._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73649 ={v} {CLOBBER};
  resx 197

<L880>:
  pretmp_2983 = &this_129(D)->_packet_size;
  pretmp_771 = &this_129(D)->_packet_size_rate;
  pretmp_4851 = &this_129(D)->_traffic;
  pretmp_5824 = &this_129(D)->_last_class;
  pretmp_6173 = &this_129(D)->_qtime;
  pretmp_5934 = &this_129(D)->_total_in_flight_flits;
  pretmp_3001 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5069 = &this_129(D)->_retired_packets;
  pretmp_7416 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7728 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7864 = &this_129(D)->_pair_plat;
  pretmp_7907 = &this_129(D)->_pair_nlat;
  pretmp_7950 = &this_129(D)->_pair_flat;
  pretmp_7993 = &this_129(D)->_sent_packets;
  pretmp_8036 = &this_129(D)->_accepted_packets;
  pretmp_8079 = &this_129(D)->_sent_flits;
  pretmp_8122 = &this_129(D)->_accepted_flits;
  pretmp_8165 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L224>:
  # DEBUG this => &D.73651
  # DEBUG D#476 => &D.73651.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73651.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73651.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73651.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _373 = MEM[(struct _Vector_base *)&D.73651]._M_impl._M_start;
  # DEBUG D#473 => (long int) _373
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _373
  # DEBUG __n => D#470
  if (_373 != 0B)
    goto <bb 1441>;
  else
    goto <bb 1442>;

  <bb 1441>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _373
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _373
  # DEBUG this => D#462
  # DEBUG D.151920 => D#463
  operator delete (_373);

  <bb 1442>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73651 ={v} {CLOBBER};
  resx 204

<L881>:
  goto <bb 1445> (<L225>);

<L591>:

<L225>:
  # DEBUG this => &D.73652
  # DEBUG this => &D.73652
  # DEBUG this => &D.73652
  _1791 = MEM[(char * *)&D.73652];
  # DEBUG D#1 => &D.73652
  # DEBUG this => D#1
  # DEBUG this => &D.73652
  if (&D.73652.D.11539._M_local_buf != _1791)
    goto <bb 1446>;
  else
    goto <bb 1447>;

  <bb 1446>:
  # DEBUG D#629 => D.73652.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73652
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73652
  # DEBUG this => D#1
  # DEBUG this => &D.73652
  # DEBUG D#626 => &D.73652._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1791
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1791
  # DEBUG this => D#620
  # DEBUG D.151933 => D#621
  operator delete (_1791);

  <bb 1447>:
  # DEBUG D#630 => &D.73652._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73652 ={v} {CLOBBER};
  resx 203

<L882>:
  pretmp_2980 = &this_129(D)->_packet_size;
  pretmp_5016 = &this_129(D)->_packet_size_rate;
  pretmp_3 = &this_129(D)->_traffic;
  pretmp_5827 = &this_129(D)->_last_class;
  pretmp_5804 = &this_129(D)->_qtime;
  pretmp_5768 = &this_129(D)->_total_in_flight_flits;
  pretmp_2951 = &this_129(D)->_measured_in_flight_flits;
  pretmp_169 = &this_129(D)->_retired_packets;
  pretmp_7413 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7725 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7861 = &this_129(D)->_pair_plat;
  pretmp_7904 = &this_129(D)->_pair_nlat;
  pretmp_7947 = &this_129(D)->_pair_flat;
  pretmp_7990 = &this_129(D)->_sent_packets;
  pretmp_8033 = &this_129(D)->_accepted_packets;
  pretmp_8076 = &this_129(D)->_sent_flits;
  pretmp_8119 = &this_129(D)->_accepted_flits;
  pretmp_8162 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L593>:

<L228>:
  D.73654 ={v} {CLOBBER};
  # DEBUG this => &D.73655
  # DEBUG this => &D.73655
  # DEBUG this => &D.73655
  _1794 = MEM[(char * *)&D.73655];
  # DEBUG D#1 => &D.73655
  # DEBUG this => D#1
  # DEBUG this => &D.73655
  if (&D.73655.D.11539._M_local_buf != _1794)
    goto <bb 1451>;
  else
    goto <bb 1452>;

  <bb 1451>:
  # DEBUG D#629 => D.73655.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73655
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73655
  # DEBUG this => D#1
  # DEBUG this => &D.73655
  # DEBUG D#626 => &D.73655._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1794
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1794
  # DEBUG this => D#620
  # DEBUG D.151950 => D#621
  operator delete (_1794);

  <bb 1452>:
  # DEBUG D#630 => &D.73655._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73655 ={v} {CLOBBER};
  resx 209

<L883>:
  pretmp_2987 = &this_129(D)->_packet_size;
  pretmp_5254 = &this_129(D)->_packet_size_rate;
  pretmp_6110 = &this_129(D)->_traffic;
  pretmp_5829 = &this_129(D)->_last_class;
  pretmp_4959 = &this_129(D)->_qtime;
  pretmp_5769 = &this_129(D)->_total_in_flight_flits;
  pretmp_5743 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5149 = &this_129(D)->_retired_packets;
  pretmp_7410 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7722 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7858 = &this_129(D)->_pair_plat;
  pretmp_7901 = &this_129(D)->_pair_nlat;
  pretmp_7944 = &this_129(D)->_pair_flat;
  pretmp_7987 = &this_129(D)->_sent_packets;
  pretmp_8030 = &this_129(D)->_accepted_packets;
  pretmp_8073 = &this_129(D)->_sent_flits;
  pretmp_8116 = &this_129(D)->_accepted_flits;
  pretmp_8159 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L230>:
  # DEBUG this => &D.73657
  # DEBUG D#476 => &D.73657.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73657.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73657.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73657.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _400 = MEM[(struct _Vector_base *)&D.73657]._M_impl._M_start;
  # DEBUG D#473 => (long int) _400
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _400
  # DEBUG __n => D#470
  if (_400 != 0B)
    goto <bb 1455>;
  else
    goto <bb 1456>;

  <bb 1455>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _400
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _400
  # DEBUG this => D#462
  # DEBUG D.151969 => D#463
  operator delete (_400);

  <bb 1456>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73657 ={v} {CLOBBER};
  resx 216

<L884>:
  goto <bb 1459> (<L231>);

<L597>:

<L231>:
  # DEBUG this => &D.73658
  # DEBUG this => &D.73658
  # DEBUG this => &D.73658
  _1787 = MEM[(char * *)&D.73658];
  # DEBUG D#1 => &D.73658
  # DEBUG this => D#1
  # DEBUG this => &D.73658
  if (&D.73658.D.11539._M_local_buf != _1787)
    goto <bb 1460>;
  else
    goto <bb 1461>;

  <bb 1460>:
  # DEBUG D#629 => D.73658.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73658
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73658
  # DEBUG this => D#1
  # DEBUG this => &D.73658
  # DEBUG D#626 => &D.73658._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1787
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1787
  # DEBUG this => D#620
  # DEBUG D.151982 => D#621
  operator delete (_1787);

  <bb 1461>:
  # DEBUG D#630 => &D.73658._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73658 ={v} {CLOBBER};
  resx 215

<L885>:
  pretmp_2993 = &this_129(D)->_packet_size;
  pretmp_5336 = &this_129(D)->_packet_size_rate;
  pretmp_5 = &this_129(D)->_traffic;
  pretmp_5834 = &this_129(D)->_last_class;
  pretmp_5810 = &this_129(D)->_qtime;
  pretmp_5775 = &this_129(D)->_total_in_flight_flits;
  pretmp_5748 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4977 = &this_129(D)->_retired_packets;
  pretmp_7407 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7719 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7855 = &this_129(D)->_pair_plat;
  pretmp_7898 = &this_129(D)->_pair_nlat;
  pretmp_7941 = &this_129(D)->_pair_flat;
  pretmp_7984 = &this_129(D)->_sent_packets;
  pretmp_8027 = &this_129(D)->_accepted_packets;
  pretmp_8070 = &this_129(D)->_sent_flits;
  pretmp_8113 = &this_129(D)->_accepted_flits;
  pretmp_8156 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L599>:

<L234>:
  D.73660 ={v} {CLOBBER};
  # DEBUG this => &D.73661
  # DEBUG this => &D.73661
  # DEBUG this => &D.73661
  _1790 = MEM[(char * *)&D.73661];
  # DEBUG D#1 => &D.73661
  # DEBUG this => D#1
  # DEBUG this => &D.73661
  if (&D.73661.D.11539._M_local_buf != _1790)
    goto <bb 1465>;
  else
    goto <bb 1466>;

  <bb 1465>:
  # DEBUG D#629 => D.73661.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73661
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73661
  # DEBUG this => D#1
  # DEBUG this => &D.73661
  # DEBUG D#626 => &D.73661._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1790
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1790
  # DEBUG this => D#620
  # DEBUG D.151999 => D#621
  operator delete (_1790);

  <bb 1466>:
  # DEBUG D#630 => &D.73661._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73661 ={v} {CLOBBER};
  resx 221

<L886>:
  pretmp_2990 = &this_129(D)->_packet_size;
  pretmp_5248 = &this_129(D)->_packet_size_rate;
  pretmp_32 = &this_129(D)->_traffic;
  pretmp_5758 = &this_129(D)->_last_class;
  pretmp_6178 = &this_129(D)->_qtime;
  pretmp_5776 = &this_129(D)->_total_in_flight_flits;
  pretmp_5750 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4981 = &this_129(D)->_retired_packets;
  pretmp_7404 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7716 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7852 = &this_129(D)->_pair_plat;
  pretmp_7895 = &this_129(D)->_pair_nlat;
  pretmp_7938 = &this_129(D)->_pair_flat;
  pretmp_7981 = &this_129(D)->_sent_packets;
  pretmp_8024 = &this_129(D)->_accepted_packets;
  pretmp_8067 = &this_129(D)->_sent_flits;
  pretmp_8110 = &this_129(D)->_accepted_flits;
  pretmp_8153 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L236>:
  # DEBUG this => &D.73663
  # DEBUG D#476 => &D.73663.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73663.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73663.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73663.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _427 = MEM[(struct _Vector_base *)&D.73663]._M_impl._M_start;
  # DEBUG D#473 => (long int) _427
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _427
  # DEBUG __n => D#470
  if (_427 != 0B)
    goto <bb 1469>;
  else
    goto <bb 1470>;

  <bb 1469>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _427
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _427
  # DEBUG this => D#462
  # DEBUG D.152018 => D#463
  operator delete (_427);

  <bb 1470>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73663 ={v} {CLOBBER};
  resx 228

<L887>:
  goto <bb 1473> (<L237>);

<L603>:

<L237>:
  # DEBUG this => &D.73664
  # DEBUG this => &D.73664
  # DEBUG this => &D.73664
  _1783 = MEM[(char * *)&D.73664];
  # DEBUG D#1 => &D.73664
  # DEBUG this => D#1
  # DEBUG this => &D.73664
  if (&D.73664.D.11539._M_local_buf != _1783)
    goto <bb 1474>;
  else
    goto <bb 1475>;

  <bb 1474>:
  # DEBUG D#629 => D.73664.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73664
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73664
  # DEBUG this => D#1
  # DEBUG this => &D.73664
  # DEBUG D#626 => &D.73664._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1783
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1783
  # DEBUG this => D#620
  # DEBUG D.152031 => D#621
  operator delete (_1783);

  <bb 1475>:
  # DEBUG D#630 => &D.73664._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73664 ={v} {CLOBBER};
  resx 227

<L888>:
  pretmp_2997 = &this_129(D)->_packet_size;
  pretmp_1657 = &this_129(D)->_packet_size_rate;
  pretmp_6 = &this_129(D)->_traffic;
  pretmp_5837 = &this_129(D)->_last_class;
  pretmp_4958 = &this_129(D)->_qtime;
  pretmp_4963 = &this_129(D)->_total_in_flight_flits;
  pretmp_6163 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5153 = &this_129(D)->_retired_packets;
  pretmp_7401 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7713 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7849 = &this_129(D)->_pair_plat;
  pretmp_7892 = &this_129(D)->_pair_nlat;
  pretmp_7935 = &this_129(D)->_pair_flat;
  pretmp_7978 = &this_129(D)->_sent_packets;
  pretmp_8021 = &this_129(D)->_accepted_packets;
  pretmp_8064 = &this_129(D)->_sent_flits;
  pretmp_8107 = &this_129(D)->_accepted_flits;
  pretmp_8150 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L605>:

<L240>:
  D.73666 ={v} {CLOBBER};
  # DEBUG this => &D.73667
  # DEBUG this => &D.73667
  # DEBUG this => &D.73667
  _1786 = MEM[(char * *)&D.73667];
  # DEBUG D#1 => &D.73667
  # DEBUG this => D#1
  # DEBUG this => &D.73667
  if (&D.73667.D.11539._M_local_buf != _1786)
    goto <bb 1479>;
  else
    goto <bb 1480>;

  <bb 1479>:
  # DEBUG D#629 => D.73667.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73667
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73667
  # DEBUG this => D#1
  # DEBUG this => &D.73667
  # DEBUG D#626 => &D.73667._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1786
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1786
  # DEBUG this => D#620
  # DEBUG D.152048 => D#621
  operator delete (_1786);

  <bb 1480>:
  # DEBUG D#630 => &D.73667._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73667 ={v} {CLOBBER};
  resx 233

<L889>:
  pretmp_2995 = &this_129(D)->_packet_size;
  pretmp_5333 = &this_129(D)->_packet_size_rate;
  pretmp_6238 = &this_129(D)->_traffic;
  pretmp_5835 = &this_129(D)->_last_class;
  pretmp_5813 = &this_129(D)->_qtime;
  pretmp_5781 = &this_129(D)->_total_in_flight_flits;
  pretmp_6164 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6159 = &this_129(D)->_retired_packets;
  pretmp_7399 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7711 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7847 = &this_129(D)->_pair_plat;
  pretmp_7890 = &this_129(D)->_pair_nlat;
  pretmp_7933 = &this_129(D)->_pair_flat;
  pretmp_7976 = &this_129(D)->_sent_packets;
  pretmp_8019 = &this_129(D)->_accepted_packets;
  pretmp_8062 = &this_129(D)->_sent_flits;
  pretmp_8105 = &this_129(D)->_accepted_flits;
  pretmp_8148 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L242>:
  # DEBUG this => &D.73670
  # DEBUG this => &D.73670
  # DEBUG this => &D.73670
  _452 = MEM[(char * *)&D.73670];
  # DEBUG D#1 => &D.73670
  # DEBUG this => D#1
  # DEBUG this => &D.73670
  if (&D.73670.D.11539._M_local_buf != _452)
    goto <bb 1483>;
  else
    goto <bb 1484>;

  <bb 1483>:
  # DEBUG D#629 => D.73670.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73670
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73670
  # DEBUG this => D#1
  # DEBUG this => &D.73670
  # DEBUG D#626 => &D.73670._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _452
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _452
  # DEBUG this => D#620
  # DEBUG D.152065 => D#621
  operator delete (_452);

  <bb 1484>:
  # DEBUG D#630 => &D.73670._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73670 ={v} {CLOBBER};
  resx 239

<L890>:
  pretmp_3019 = &this_129(D)->_packet_size;
  pretmp_4975 = &this_129(D)->_packet_size_rate;
  pretmp_38 = &this_129(D)->_traffic;
  pretmp_5846 = &this_129(D)->_last_class;
  pretmp_6181 = &this_129(D)->_qtime;
  pretmp_5785 = &this_129(D)->_total_in_flight_flits;
  pretmp_5755 = &this_129(D)->_measured_in_flight_flits;
  pretmp_3779 = &this_129(D)->_retired_packets;
  pretmp_7396 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7708 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7844 = &this_129(D)->_pair_plat;
  pretmp_7887 = &this_129(D)->_pair_nlat;
  pretmp_7930 = &this_129(D)->_pair_flat;
  pretmp_7973 = &this_129(D)->_sent_packets;
  pretmp_8016 = &this_129(D)->_accepted_packets;
  pretmp_8059 = &this_129(D)->_sent_flits;
  pretmp_8102 = &this_129(D)->_accepted_flits;
  pretmp_8145 = &this_129(D)->_stats;
  goto <bb 2013> (<L448>);

<L245>:
  # DEBUG this => &D.73672
  # DEBUG D#476 => &D.73672.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73672.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73672.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73672.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1782 = MEM[(struct _Vector_base *)&D.73672]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1782
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1782
  # DEBUG __n => D#470
  if (_1782 != 0B)
    goto <bb 1487>;
  else
    goto <bb 1488>;

  <bb 1487>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1782
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1782
  # DEBUG this => D#462
  # DEBUG D.152084 => D#463
  operator delete (_1782);

  <bb 1488>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73672 ={v} {CLOBBER};
  resx 249

<L891>:
  goto <bb 1491> (<L246>);

<L610>:
  pretmp_3024 = &this_129(D)->_packet_size;

  # prephitmp_3026 = PHI <pretmp_3024(1490), pretmp_3025(282), _469(1489)>
<L246>:
  # DEBUG this => &D.73673
  # DEBUG this => &D.73673
  # DEBUG this => &D.73673
  _476 = MEM[(char * *)&D.73673];
  # DEBUG D#1 => &D.73673
  # DEBUG this => D#1
  # DEBUG this => &D.73673
  if (&D.73673.D.11539._M_local_buf != _476)
    goto <bb 1492>;
  else
    goto <bb 1493>;

  <bb 1492>:
  # DEBUG D#629 => D.73673.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73673
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73673
  # DEBUG this => D#1
  # DEBUG this => &D.73673
  # DEBUG D#626 => &D.73673._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _476
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _476
  # DEBUG this => D#620
  # DEBUG D.152097 => D#621
  operator delete (_476);

  <bb 1493>:
  # DEBUG D#630 => &D.73673._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73673 ={v} {CLOBBER};
  resx 248

<L892>:
  goto <bb 1496> (<L247>);

<L609>:
  pretmp_5285 = &this_129(D)->_packet_size;

  # prephitmp_5013 = PHI <pretmp_5285(1495), prephitmp_3026(1494)>
<L247>:
  # DEBUG this => &D.73674
  # DEBUG this => &D.73674
  # DEBUG this => &D.73675
  # DEBUG this => &D.73675
  resx 246

<L893>:
  pretmp_2919 = &this_129(D)->_packet_size_rate;
  pretmp_2908 = &this_129(D)->_traffic;
  pretmp_6065 = &this_129(D)->_last_class;
  pretmp_3758 = &this_129(D)->_qtime;
  pretmp_6137 = &this_129(D)->_total_in_flight_flits;
  pretmp_5991 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5983 = &this_129(D)->_retired_packets;
  pretmp_6558 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7443 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7755 = &this_129(D)->_pair_plat;
  pretmp_7763 = &this_129(D)->_pair_nlat;
  pretmp_7771 = &this_129(D)->_pair_flat;
  pretmp_7779 = &this_129(D)->_sent_packets;
  pretmp_7787 = &this_129(D)->_accepted_packets;
  pretmp_7795 = &this_129(D)->_sent_flits;
  pretmp_7803 = &this_129(D)->_accepted_flits;
  pretmp_7811 = &this_129(D)->_stats;
  goto <bb 2008> (<L447>);

<L614>:

<L249>:
  # DEBUG this => &D.73680
  # DEBUG D#476 => &D.73680.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73680.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73680.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73680.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _479 = MEM[(struct _Vector_base *)&D.73680]._M_impl._M_start;
  # DEBUG D#473 => (long int) _479
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _479
  # DEBUG __n => D#470
  if (_479 != 0B)
    goto <bb 1500>;
  else
    goto <bb 1501>;

  <bb 1500>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _479
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _479
  # DEBUG this => D#462
  # DEBUG D.152118 => D#463
  operator delete (_479);

  <bb 1501>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73680 ={v} {CLOBBER};
  resx 256

<L894>:
  goto <bb 1504> (<L250>);

<L613>:

<L250>:
  std::vector<std::__cxx11::basic_string<char> >::~vector (&packet_size_strings);
  resx 255

<L895>:
  pretmp_2922 = &this_129(D)->_packet_size_rate;
  pretmp_2895 = &this_129(D)->_traffic;
  pretmp_5181 = &this_129(D)->_last_class;
  pretmp_6074 = &this_129(D)->_qtime;
  pretmp_5957 = &this_129(D)->_total_in_flight_flits;
  pretmp_5986 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5985 = &this_129(D)->_retired_packets;
  pretmp_6560 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7445 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7757 = &this_129(D)->_pair_plat;
  pretmp_7765 = &this_129(D)->_pair_nlat;
  pretmp_7773 = &this_129(D)->_pair_flat;
  pretmp_7781 = &this_129(D)->_sent_packets;
  pretmp_7789 = &this_129(D)->_accepted_packets;
  pretmp_7797 = &this_129(D)->_sent_flits;
  pretmp_7805 = &this_129(D)->_accepted_flits;
  pretmp_7813 = &this_129(D)->_stats;
  goto <bb 2008> (<L447>);

<L252>:
  # DEBUG this => &D.73681
  # DEBUG D#476 => &D.73681.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73681.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73681.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73681.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _489 = MEM[(struct _Vector_base *)&D.73681]._M_impl._M_start;
  # DEBUG D#473 => (long int) _489
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _489
  # DEBUG __n => D#470
  if (_489 != 0B)
    goto <bb 1507>;
  else
    goto <bb 1508>;

  <bb 1507>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _489
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _489
  # DEBUG this => D#462
  # DEBUG D.152133 => D#463
  operator delete (_489);

  <bb 1508>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73681 ={v} {CLOBBER};
  resx 260

<L896>:
  pretmp_2917 = &this_129(D)->_packet_size_rate;
  pretmp_2906 = &this_129(D)->_traffic;
  pretmp_6064 = &this_129(D)->_last_class;
  pretmp_6069 = &this_129(D)->_qtime;
  pretmp_6078 = &this_129(D)->_total_in_flight_flits;
  pretmp_5993 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5987 = &this_129(D)->_retired_packets;
  pretmp_6556 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7441 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7753 = &this_129(D)->_pair_plat;
  pretmp_7761 = &this_129(D)->_pair_nlat;
  pretmp_7769 = &this_129(D)->_pair_flat;
  pretmp_7777 = &this_129(D)->_sent_packets;
  pretmp_7785 = &this_129(D)->_accepted_packets;
  pretmp_7793 = &this_129(D)->_sent_flits;
  pretmp_7801 = &this_129(D)->_accepted_flits;
  pretmp_7809 = &this_129(D)->_stats;
  goto <bb 2008> (<L447>);

<L253>:
  # DEBUG this => &D.73683
  # DEBUG this => &D.73683
  # DEBUG this => &D.73683
  _1778 = MEM[(char * *)&D.73683];
  # DEBUG D#1 => &D.73683
  # DEBUG this => D#1
  # DEBUG this => &D.73683
  if (&D.73683.D.11539._M_local_buf != _1778)
    goto <bb 1511>;
  else
    goto <bb 1512>;

  <bb 1511>:
  # DEBUG D#629 => D.73683.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73683
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73683
  # DEBUG this => D#1
  # DEBUG this => &D.73683
  # DEBUG D#626 => &D.73683._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1778
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1778
  # DEBUG this => D#620
  # DEBUG D.152146 => D#621
  operator delete (_1778);

  <bb 1512>:
  # DEBUG D#630 => &D.73683._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73683 ={v} {CLOBBER};
  resx 263

<L897>:
  pretmp_2915 = &this_129(D)->_packet_size_rate;
  pretmp_2924 = &this_129(D)->_traffic;
  pretmp_6063 = &this_129(D)->_last_class;
  pretmp_6071 = &this_129(D)->_qtime;
  pretmp_6076 = &this_129(D)->_total_in_flight_flits;
  pretmp_5995 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5988 = &this_129(D)->_retired_packets;
  pretmp_6554 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7439 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7751 = &this_129(D)->_pair_plat;
  pretmp_7759 = &this_129(D)->_pair_nlat;
  pretmp_7767 = &this_129(D)->_pair_flat;
  pretmp_7775 = &this_129(D)->_sent_packets;
  pretmp_7783 = &this_129(D)->_accepted_packets;
  pretmp_7791 = &this_129(D)->_sent_flits;
  pretmp_7799 = &this_129(D)->_accepted_flits;
  pretmp_7807 = &this_129(D)->_stats;
  goto <bb 2008> (<L447>);

<L256>:
  # DEBUG this => &D.73686
  # DEBUG this => &D.73686
  # DEBUG this => &D.73686
  _1777 = MEM[(char * *)&D.73686];
  # DEBUG D#1 => &D.73686
  # DEBUG this => D#1
  # DEBUG this => &D.73686
  if (&D.73686.D.11539._M_local_buf != _1777)
    goto <bb 1515>;
  else
    goto <bb 1516>;

  <bb 1515>:
  # DEBUG D#629 => D.73686.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73686
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73686
  # DEBUG this => D#1
  # DEBUG this => &D.73686
  # DEBUG D#626 => &D.73686._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1777
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1777
  # DEBUG this => D#620
  # DEBUG D.152163 => D#621
  operator delete (_1777);

  <bb 1516>:
  # DEBUG D#630 => &D.73686._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73686 ={v} {CLOBBER};
  resx 271

<L898>:
  pretmp_4400 = &this_129(D)->_packet_size_rate;
  pretmp_4419 = &this_129(D)->_traffic;
  pretmp_2863 = &this_129(D)->_last_class;
  pretmp_2811 = &this_129(D)->_qtime;
  pretmp_2752 = &this_129(D)->_total_in_flight_flits;
  pretmp_2718 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5304 = &this_129(D)->_retired_packets;
  pretmp_6304 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6581 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7466 = &this_129(D)->_pair_plat;
  pretmp_7497 = &this_129(D)->_pair_nlat;
  pretmp_7528 = &this_129(D)->_pair_flat;
  pretmp_7559 = &this_129(D)->_sent_packets;
  pretmp_7590 = &this_129(D)->_accepted_packets;
  pretmp_7621 = &this_129(D)->_sent_flits;
  pretmp_7652 = &this_129(D)->_accepted_flits;
  pretmp_7683 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L622>:

<L258>:
  # DEBUG this => &D.73691
  # DEBUG D#476 => &D.73691.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73691.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73691.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73691.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _536 = MEM[(struct _Vector_base *)&D.73691]._M_impl._M_start;
  # DEBUG D#473 => (long int) _536
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _536
  # DEBUG __n => D#470
  if (_536 != 0B)
    goto <bb 1520>;
  else
    goto <bb 1521>;

  <bb 1520>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _536
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _536
  # DEBUG this => D#462
  # DEBUG D.152182 => D#463
  operator delete (_536);

  <bb 1521>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73691 ={v} {CLOBBER};
  resx 275

<L899>:
  pretmp_4421 = &this_129(D)->_traffic;
  pretmp_2865 = &this_129(D)->_last_class;
  pretmp_2813 = &this_129(D)->_qtime;
  pretmp_2755 = &this_129(D)->_total_in_flight_flits;
  pretmp_2711 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5012 = &this_129(D)->_retired_packets;
  pretmp_6306 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6583 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7468 = &this_129(D)->_pair_plat;
  pretmp_7499 = &this_129(D)->_pair_nlat;
  pretmp_7530 = &this_129(D)->_pair_flat;
  pretmp_7561 = &this_129(D)->_sent_packets;
  pretmp_7592 = &this_129(D)->_accepted_packets;
  pretmp_7623 = &this_129(D)->_sent_flits;
  pretmp_7654 = &this_129(D)->_accepted_flits;
  pretmp_7685 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L261>:
  # DEBUG this => &D.73696
  # DEBUG this => &D.73696
  # DEBUG this => &D.73696
  _532 = MEM[(char * *)&D.73696];
  # DEBUG D#1 => &D.73696
  # DEBUG this => D#1
  # DEBUG this => &D.73696
  if (&D.73696.D.11539._M_local_buf != _532)
    goto <bb 1524>;
  else
    goto <bb 1525>;

  <bb 1524>:
  # DEBUG D#629 => D.73696.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73696
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73696
  # DEBUG this => D#1
  # DEBUG this => &D.73696
  # DEBUG D#626 => &D.73696._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _532
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _532
  # DEBUG this => D#620
  # DEBUG D.152197 => D#621
  operator delete (_532);

  <bb 1525>:
  # DEBUG D#630 => &D.73696._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73696 ={v} {CLOBBER};
  resx 282

<L900>:
  pretmp_5209 = &this_129(D)->_packet_size_rate;
  goto <bb 1533> (<L264>);

<L628>:

<L262>:
  # DEBUG this => &rates
  # DEBUG D#476 => &rates.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => rates.D.45977._M_impl._M_finish
  # DEBUG D#478 => rates.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &rates.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _574 = MEM[(struct _Vector_base *)&rates]._M_impl._M_start;
  # DEBUG D#473 => (long int) _574
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _574
  # DEBUG __n => D#470
  if (_574 != 0B)
    goto <bb 1529>;
  else
    goto <bb 1530>;

  <bb 1529>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _574
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _574
  # DEBUG this => D#462
  # DEBUG D.152214 => D#463
  operator delete (_574);

  <bb 1530>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  resx 285

<L901>:
  goto <bb 1533> (<L264>);

<L626>:
  pretmp_5326 = &this_129(D)->_packet_size_rate;

  # prephitmp_5325 = PHI <pretmp_3113(1531), pretmp_5326(1532), pretmp_5209(1526), pretmp_3113(367)>
<L264>:
  rates ={v} {CLOBBER};
  max_val ={v} {CLOBBER};
  std::vector<std::__cxx11::basic_string<char> >::~vector (&packet_size_rate_strings);
  resx 281

<L902>:
  pretmp_4425 = &this_129(D)->_traffic;
  pretmp_2853 = &this_129(D)->_last_class;
  pretmp_2817 = &this_129(D)->_qtime;
  pretmp_2759 = &this_129(D)->_total_in_flight_flits;
  pretmp_2714 = &this_129(D)->_measured_in_flight_flits;
  pretmp_44 = &this_129(D)->_retired_packets;
  pretmp_6309 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6586 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7471 = &this_129(D)->_pair_plat;
  pretmp_7502 = &this_129(D)->_pair_nlat;
  pretmp_7533 = &this_129(D)->_pair_flat;
  pretmp_7564 = &this_129(D)->_sent_packets;
  pretmp_7595 = &this_129(D)->_accepted_packets;
  pretmp_7626 = &this_129(D)->_sent_flits;
  pretmp_7657 = &this_129(D)->_accepted_flits;
  pretmp_7688 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L266>:
  # DEBUG this => &D.73708
  # DEBUG D#476 => &D.73708.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73708.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73708.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73708.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _569 = MEM[(struct _Vector_base *)&D.73708]._M_impl._M_start;
  # DEBUG D#473 => (long int) _569
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _569
  # DEBUG __n => D#470
  if (_569 != 0B)
    goto <bb 1536>;
  else
    goto <bb 1537>;

  <bb 1536>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _569
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _569
  # DEBUG this => D#462
  # DEBUG D.152229 => D#463
  operator delete (_569);

  <bb 1537>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73708 ={v} {CLOBBER};
  resx 291

<L903>:
  pretmp_2746 = &this_129(D)->_packet_size_rate;
  pretmp_4427 = &this_129(D)->_traffic;
  pretmp_2855 = &this_129(D)->_last_class;
  pretmp_2819 = &this_129(D)->_qtime;
  pretmp_2761 = &this_129(D)->_total_in_flight_flits;
  pretmp_2707 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6127 = &this_129(D)->_retired_packets;
  pretmp_6311 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6588 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7473 = &this_129(D)->_pair_plat;
  pretmp_7504 = &this_129(D)->_pair_nlat;
  pretmp_7535 = &this_129(D)->_pair_flat;
  pretmp_7566 = &this_129(D)->_sent_packets;
  pretmp_7597 = &this_129(D)->_accepted_packets;
  pretmp_7628 = &this_129(D)->_sent_flits;
  pretmp_7659 = &this_129(D)->_accepted_flits;
  pretmp_7690 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L268>:
  # DEBUG this => &D.73710
  # DEBUG D#476 => &D.73710.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73710.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73710.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73710.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _609 = MEM[(struct _Vector_base *)&D.73710]._M_impl._M_start;
  # DEBUG D#473 => (long int) _609
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _609
  # DEBUG __n => D#470
  if (_609 != 0B)
    goto <bb 1540>;
  else
    goto <bb 1541>;

  <bb 1540>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _609
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _609
  # DEBUG this => D#462
  # DEBUG D.152246 => D#463
  operator delete (_609);

  <bb 1541>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73710 ={v} {CLOBBER};
  resx 295

<L904>:
  pretmp_4404 = &this_129(D)->_packet_size_rate;
  pretmp_4430 = &this_129(D)->_traffic;
  pretmp_2858 = &this_129(D)->_last_class;
  pretmp_2806 = &this_129(D)->_qtime;
  pretmp_2764 = &this_129(D)->_total_in_flight_flits;
  pretmp_2709 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6257 = &this_129(D)->_retired_packets;
  pretmp_6313 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6590 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7475 = &this_129(D)->_pair_plat;
  pretmp_7506 = &this_129(D)->_pair_nlat;
  pretmp_7537 = &this_129(D)->_pair_flat;
  pretmp_7568 = &this_129(D)->_sent_packets;
  pretmp_7599 = &this_129(D)->_accepted_packets;
  pretmp_7630 = &this_129(D)->_sent_flits;
  pretmp_7661 = &this_129(D)->_accepted_flits;
  pretmp_7692 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L270>:
  # DEBUG this => &D.73712
  # DEBUG D#503 => &D.73712.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73712.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73712.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73712.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _606 = MEM[(struct _Vector_base *)&D.73712]._M_impl._M_start;
  # DEBUG D#500 => (long int) _606
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _606
  # DEBUG __n => D#497
  if (_606 != 0B)
    goto <bb 1544>;
  else
    goto <bb 1545>;

  <bb 1544>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _606
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _606
  # DEBUG this => D#489
  # DEBUG D.152263 => D#490
  operator delete (_606);

  <bb 1545>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73712 ={v} {CLOBBER};
  resx 300

<L905>:
  goto <bb 1548> (<L271>);

<L635>:

<L271>:
  # DEBUG this => &D.73713
  # DEBUG this => &D.73713
  # DEBUG this => &D.73713
  _1771 = MEM[(char * *)&D.73713];
  # DEBUG D#1 => &D.73713
  # DEBUG this => D#1
  # DEBUG this => &D.73713
  if (&D.73713.D.11539._M_local_buf != _1771)
    goto <bb 1549>;
  else
    goto <bb 1550>;

  <bb 1549>:
  # DEBUG D#629 => D.73713.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73713
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73713
  # DEBUG this => D#1
  # DEBUG this => &D.73713
  # DEBUG D#626 => &D.73713._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1771
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1771
  # DEBUG this => D#620
  # DEBUG D.152276 => D#621
  operator delete (_1771);

  <bb 1550>:
  # DEBUG D#630 => &D.73713._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73713 ={v} {CLOBBER};
  resx 299

<L906>:
  pretmp_4391 = &this_129(D)->_packet_size_rate;
  pretmp_4410 = &this_129(D)->_traffic;
  pretmp_2875 = &this_129(D)->_last_class;
  pretmp_2839 = &this_129(D)->_qtime;
  pretmp_2775 = &this_129(D)->_total_in_flight_flits;
  pretmp_2729 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2451 = &this_129(D)->_retired_packets;
  pretmp_6297 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6574 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7459 = &this_129(D)->_pair_plat;
  pretmp_7490 = &this_129(D)->_pair_nlat;
  pretmp_7521 = &this_129(D)->_pair_flat;
  pretmp_7552 = &this_129(D)->_sent_packets;
  pretmp_7583 = &this_129(D)->_accepted_packets;
  pretmp_7614 = &this_129(D)->_sent_flits;
  pretmp_7645 = &this_129(D)->_accepted_flits;
  pretmp_7676 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L637>:

<L274>:
  D.73715 ={v} {CLOBBER};
  # DEBUG this => &D.73716
  # DEBUG this => &D.73716
  # DEBUG this => &D.73716
  _1774 = MEM[(char * *)&D.73716];
  # DEBUG D#1 => &D.73716
  # DEBUG this => D#1
  # DEBUG this => &D.73716
  if (&D.73716.D.11539._M_local_buf != _1774)
    goto <bb 1554>;
  else
    goto <bb 1555>;

  <bb 1554>:
  # DEBUG D#629 => D.73716.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73716
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73716
  # DEBUG this => D#1
  # DEBUG this => &D.73716
  # DEBUG D#626 => &D.73716._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1774
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1774
  # DEBUG this => D#620
  # DEBUG D.152293 => D#621
  operator delete (_1774);

  <bb 1555>:
  # DEBUG D#630 => &D.73716._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73716 ={v} {CLOBBER};
  resx 305

<L907>:
  pretmp_4394 = &this_129(D)->_packet_size_rate;
  pretmp_4412 = &this_129(D)->_traffic;
  pretmp_2877 = &this_129(D)->_last_class;
  pretmp_2821 = &this_129(D)->_qtime;
  pretmp_2777 = &this_129(D)->_total_in_flight_flits;
  pretmp_2722 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2453 = &this_129(D)->_retired_packets;
  pretmp_6299 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6576 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7461 = &this_129(D)->_pair_plat;
  pretmp_7492 = &this_129(D)->_pair_nlat;
  pretmp_7523 = &this_129(D)->_pair_flat;
  pretmp_7554 = &this_129(D)->_sent_packets;
  pretmp_7585 = &this_129(D)->_accepted_packets;
  pretmp_7616 = &this_129(D)->_sent_flits;
  pretmp_7647 = &this_129(D)->_accepted_flits;
  pretmp_7678 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L276>:
  # DEBUG this => &D.73718
  # DEBUG this => &D.73718
  # DEBUG this => &D.73718
  _633 = MEM[(char * *)&D.73718];
  # DEBUG D#1 => &D.73718
  # DEBUG this => D#1
  # DEBUG this => &D.73718
  if (&D.73718.D.11539._M_local_buf != _633)
    goto <bb 1558>;
  else
    goto <bb 1559>;

  <bb 1558>:
  # DEBUG D#629 => D.73718.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73718
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73718
  # DEBUG this => D#1
  # DEBUG this => &D.73718
  # DEBUG D#626 => &D.73718._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _633
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _633
  # DEBUG this => D#620
  # DEBUG D.152310 => D#621
  operator delete (_633);

  <bb 1559>:
  # DEBUG D#630 => &D.73718._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73718 ={v} {CLOBBER};
  resx 311

<L908>:
  pretmp_4396 = &this_129(D)->_packet_size_rate;
  pretmp_4415 = &this_129(D)->_traffic;
  pretmp_2880 = &this_129(D)->_last_class;
  pretmp_2823 = &this_129(D)->_qtime;
  pretmp_2749 = &this_129(D)->_total_in_flight_flits;
  pretmp_2724 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6259 = &this_129(D)->_retired_packets;
  pretmp_6301 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6578 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7463 = &this_129(D)->_pair_plat;
  pretmp_7494 = &this_129(D)->_pair_nlat;
  pretmp_7525 = &this_129(D)->_pair_flat;
  pretmp_7556 = &this_129(D)->_sent_packets;
  pretmp_7587 = &this_129(D)->_accepted_packets;
  pretmp_7618 = &this_129(D)->_sent_flits;
  pretmp_7649 = &this_129(D)->_accepted_flits;
  pretmp_7680 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L278>:
  std::vector<std::__cxx11::basic_string<char> >::~vector (&D.73723);
  D.73723 ={v} {CLOBBER};
  resx 316

<L909>:
  goto <bb 1564> (<L279>);

<L642>:
  pretmp_4439 = &this_129(D)->_traffic;

  # prephitmp_4440 = PHI <pretmp_4439(1563), _653(1562)>
<L279>:
  # DEBUG this => &D.73724
  # DEBUG this => &D.73724
  # DEBUG this => &D.73724
  _1770 = MEM[(char * *)&D.73724];
  # DEBUG D#1 => &D.73724
  # DEBUG this => D#1
  # DEBUG this => &D.73724
  if (&D.73724.D.11539._M_local_buf != _1770)
    goto <bb 1565>;
  else
    goto <bb 1566>;

  <bb 1565>:
  # DEBUG D#629 => D.73724.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73724
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73724
  # DEBUG this => D#1
  # DEBUG this => &D.73724
  # DEBUG D#626 => &D.73724._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1770
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1770
  # DEBUG this => D#620
  # DEBUG D.152327 => D#621
  operator delete (_1770);

  <bb 1566>:
  # DEBUG D#630 => &D.73724._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73724 ={v} {CLOBBER};
  resx 315

<L910>:
  pretmp_4390 = &this_129(D)->_packet_size_rate;
  pretmp_2874 = &this_129(D)->_last_class;
  pretmp_2838 = &this_129(D)->_qtime;
  pretmp_2788 = &this_129(D)->_total_in_flight_flits;
  pretmp_2728 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2691 = &this_129(D)->_retired_packets;
  pretmp_6296 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6573 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7458 = &this_129(D)->_pair_plat;
  pretmp_7489 = &this_129(D)->_pair_nlat;
  pretmp_7520 = &this_129(D)->_pair_flat;
  pretmp_7551 = &this_129(D)->_sent_packets;
  pretmp_7582 = &this_129(D)->_accepted_packets;
  pretmp_7613 = &this_129(D)->_sent_flits;
  pretmp_7644 = &this_129(D)->_accepted_flits;
  pretmp_7675 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L281>:
  # DEBUG this => &D.73726
  # DEBUG this => &D.73726
  # DEBUG this => &D.73726
  _1768 = MEM[(char * *)&D.73726];
  # DEBUG D#1 => &D.73726
  # DEBUG this => D#1
  # DEBUG this => &D.73726
  if (&D.73726.D.11539._M_local_buf != _1768)
    goto <bb 1569>;
  else
    goto <bb 1570>;

  <bb 1569>:
  # DEBUG D#629 => D.73726.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73726
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73726
  # DEBUG this => D#1
  # DEBUG this => &D.73726
  # DEBUG D#626 => &D.73726._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1768
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1768
  # DEBUG this => D#620
  # DEBUG D.152344 => D#621
  operator delete (_1768);

  <bb 1570>:
  # DEBUG D#630 => &D.73726._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73726 ={v} {CLOBBER};
  resx 320

<L911>:
  pretmp_4381 = &this_129(D)->_packet_size_rate;
  pretmp_2902 = &this_129(D)->_last_class;
  pretmp_2845 = &this_129(D)->_qtime;
  pretmp_2790 = &this_129(D)->_total_in_flight_flits;
  pretmp_2772 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2698 = &this_129(D)->_retired_packets;
  pretmp_6289 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6566 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7451 = &this_129(D)->_pair_plat;
  pretmp_7482 = &this_129(D)->_pair_nlat;
  pretmp_7513 = &this_129(D)->_pair_flat;
  pretmp_7544 = &this_129(D)->_sent_packets;
  pretmp_7575 = &this_129(D)->_accepted_packets;
  pretmp_7606 = &this_129(D)->_sent_flits;
  pretmp_7637 = &this_129(D)->_accepted_flits;
  pretmp_7668 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L282>:
  # DEBUG this => &D.73727
  # DEBUG D#476 => &D.73727.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73727.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73727.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73727.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1763 = MEM[(struct _Vector_base *)&D.73727]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1763
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1763
  # DEBUG __n => D#470
  if (_1763 != 0B)
    goto <bb 1573>;
  else
    goto <bb 1574>;

  <bb 1573>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1763
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1763
  # DEBUG this => D#462
  # DEBUG D.152361 => D#463
  operator delete (_1763);

  <bb 1574>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73727 ={v} {CLOBBER};
  resx 324

<L912>:
  goto <bb 1577> (<L283>);

<L646>:

<L283>:
  # DEBUG this => &D.73728
  # DEBUG this => &D.73728
  # DEBUG this => &D.73728
  _1759 = MEM[(char * *)&D.73728];
  # DEBUG D#1 => &D.73728
  # DEBUG this => D#1
  # DEBUG this => &D.73728
  if (&D.73728.D.11539._M_local_buf != _1759)
    goto <bb 1578>;
  else
    goto <bb 1579>;

  <bb 1578>:
  # DEBUG D#629 => D.73728.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73728
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73728
  # DEBUG this => D#1
  # DEBUG this => &D.73728
  # DEBUG D#626 => &D.73728._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1759
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1759
  # DEBUG this => D#620
  # DEBUG D.152374 => D#621
  operator delete (_1759);

  <bb 1579>:
  # DEBUG D#630 => &D.73728._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73728 ={v} {CLOBBER};
  resx 323

<L913>:
  pretmp_4386 = &this_129(D)->_packet_size_rate;
  pretmp_2886 = &this_129(D)->_last_class;
  pretmp_2834 = &this_129(D)->_qtime;
  pretmp_2785 = &this_129(D)->_total_in_flight_flits;
  pretmp_2742 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2683 = &this_129(D)->_retired_packets;
  pretmp_6293 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6570 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7455 = &this_129(D)->_pair_plat;
  pretmp_7486 = &this_129(D)->_pair_nlat;
  pretmp_7517 = &this_129(D)->_pair_flat;
  pretmp_7548 = &this_129(D)->_sent_packets;
  pretmp_7579 = &this_129(D)->_accepted_packets;
  pretmp_7610 = &this_129(D)->_sent_flits;
  pretmp_7641 = &this_129(D)->_accepted_flits;
  pretmp_7672 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L648>:

<L286>:
  D.73730 ={v} {CLOBBER};
  # DEBUG this => &D.73731
  # DEBUG this => &D.73731
  # DEBUG this => &D.73731
  _1762 = MEM[(char * *)&D.73731];
  # DEBUG D#1 => &D.73731
  # DEBUG this => D#1
  # DEBUG this => &D.73731
  if (&D.73731.D.11539._M_local_buf != _1762)
    goto <bb 1583>;
  else
    goto <bb 1584>;

  <bb 1583>:
  # DEBUG D#629 => D.73731.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73731
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73731
  # DEBUG this => D#1
  # DEBUG this => &D.73731
  # DEBUG D#626 => &D.73731._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1762
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1762
  # DEBUG this => D#620
  # DEBUG D.152391 => D#621
  operator delete (_1762);

  <bb 1584>:
  # DEBUG D#630 => &D.73731._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73731 ={v} {CLOBBER};
  resx 329

<L914>:
  pretmp_4380 = &this_129(D)->_packet_size_rate;
  pretmp_2901 = &this_129(D)->_last_class;
  pretmp_2844 = &this_129(D)->_qtime;
  pretmp_2798 = &this_129(D)->_total_in_flight_flits;
  pretmp_2771 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2697 = &this_129(D)->_retired_packets;
  pretmp_6288 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6565 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7450 = &this_129(D)->_pair_plat;
  pretmp_7481 = &this_129(D)->_pair_nlat;
  pretmp_7512 = &this_129(D)->_pair_flat;
  pretmp_7543 = &this_129(D)->_sent_packets;
  pretmp_7574 = &this_129(D)->_accepted_packets;
  pretmp_7605 = &this_129(D)->_sent_flits;
  pretmp_7636 = &this_129(D)->_accepted_flits;
  pretmp_7667 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L288>:
  # DEBUG this => &D.73734
  # DEBUG this => &D.73734
  # DEBUG this => &D.73734
  _690 = MEM[(char * *)&D.73734];
  # DEBUG D#1 => &D.73734
  # DEBUG this => D#1
  # DEBUG this => &D.73734
  if (&D.73734.D.11539._M_local_buf != _690)
    goto <bb 1587>;
  else
    goto <bb 1588>;

  <bb 1587>:
  # DEBUG D#629 => D.73734.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73734
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73734
  # DEBUG this => D#1
  # DEBUG this => &D.73734
  # DEBUG D#626 => &D.73734._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _690
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _690
  # DEBUG this => D#620
  # DEBUG D.152408 => D#621
  operator delete (_690);

  <bb 1588>:
  # DEBUG D#630 => &D.73734._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73734 ={v} {CLOBBER};
  resx 335

<L915>:
  pretmp_4375 = &this_129(D)->_packet_size_rate;
  pretmp_2897 = &this_129(D)->_last_class;
  pretmp_2861 = &this_129(D)->_qtime;
  pretmp_2795 = &this_129(D)->_total_in_flight_flits;
  pretmp_2767 = &this_129(D)->_measured_in_flight_flits;
  pretmp_2703 = &this_129(D)->_retired_packets;
  pretmp_6285 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6562 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7447 = &this_129(D)->_pair_plat;
  pretmp_7478 = &this_129(D)->_pair_nlat;
  pretmp_7509 = &this_129(D)->_pair_flat;
  pretmp_7540 = &this_129(D)->_sent_packets;
  pretmp_7571 = &this_129(D)->_accepted_packets;
  pretmp_7602 = &this_129(D)->_sent_flits;
  pretmp_7633 = &this_129(D)->_accepted_flits;
  pretmp_7664 = &this_129(D)->_stats;
  goto <bb 2003> (<L446>);

<L291>:
  # DEBUG this => &D.73736
  # DEBUG this => &D.73736
  # DEBUG this => &D.73736
  _1758 = MEM[(char * *)&D.73736];
  # DEBUG D#1 => &D.73736
  # DEBUG this => D#1
  # DEBUG this => &D.73736
  if (&D.73736.D.11539._M_local_buf != _1758)
    goto <bb 1591>;
  else
    goto <bb 1592>;

  <bb 1591>:
  # DEBUG D#629 => D.73736.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73736
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73736
  # DEBUG this => D#1
  # DEBUG this => &D.73736
  # DEBUG D#626 => &D.73736._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1758
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1758
  # DEBUG this => D#620
  # DEBUG D.152425 => D#621
  operator delete (_1758);

  <bb 1592>:
  # DEBUG D#630 => &D.73736._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73736 ={v} {CLOBBER};
  resx 342

<L916>:
  pretmp_4458 = &this_129(D)->_last_class;
  pretmp_4476 = &this_129(D)->_qtime;
  pretmp_4507 = &this_129(D)->_total_in_flight_flits;
  pretmp_4541 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4576 = &this_129(D)->_retired_packets;
  pretmp_5917 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6376 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6653 = &this_129(D)->_pair_plat;
  pretmp_6743 = &this_129(D)->_pair_nlat;
  pretmp_6833 = &this_129(D)->_pair_flat;
  pretmp_6923 = &this_129(D)->_sent_packets;
  pretmp_7013 = &this_129(D)->_accepted_packets;
  pretmp_7103 = &this_129(D)->_sent_flits;
  pretmp_7193 = &this_129(D)->_accepted_flits;
  pretmp_7283 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L292>:
  # DEBUG this => &D.73739
  # DEBUG D#998 => &D.73739.D.68817
  # DEBUG this => D#998
  # DEBUG D#1001 => D.73739.D.68817._M_impl._M_finish
  # DEBUG D#1000 => D.73739.D.68817._M_impl._M_start
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG D#999 => &D.73739.D.68817
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _1754 = MEM[(struct _Vector_base *)&D.73739]._M_impl._M_start;
  # DEBUG D#995 => (long int) _1754
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _1754
  # DEBUG __n => D#992
  if (_1754 != 0B)
    goto <bb 1595>;
  else
    goto <bb 1596>;

  <bb 1595>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _1754
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _1754
  # DEBUG this => D#984
  # DEBUG D.152442 => D#985
  operator delete (_1754);

  <bb 1596>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  D.73739 ={v} {CLOBBER};
  resx 344

<L917>:
  pretmp_4457 = &this_129(D)->_last_class;
  pretmp_4475 = &this_129(D)->_qtime;
  pretmp_4506 = &this_129(D)->_total_in_flight_flits;
  pretmp_4540 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4573 = &this_129(D)->_retired_packets;
  pretmp_5921 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6374 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6651 = &this_129(D)->_pair_plat;
  pretmp_6741 = &this_129(D)->_pair_nlat;
  pretmp_6831 = &this_129(D)->_pair_flat;
  pretmp_6921 = &this_129(D)->_sent_packets;
  pretmp_7011 = &this_129(D)->_accepted_packets;
  pretmp_7101 = &this_129(D)->_sent_flits;
  pretmp_7191 = &this_129(D)->_accepted_flits;
  pretmp_7281 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L293>:
  std::vector<std::vector<int> >::~vector (&D.73740);
  D.73740 ={v} {CLOBBER};
  resx 346

<L918>:
  pretmp_4456 = &this_129(D)->_last_class;
  pretmp_4474 = &this_129(D)->_qtime;
  pretmp_4505 = &this_129(D)->_total_in_flight_flits;
  pretmp_4537 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4572 = &this_129(D)->_retired_packets;
  pretmp_5922 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6373 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6650 = &this_129(D)->_pair_plat;
  pretmp_6740 = &this_129(D)->_pair_nlat;
  pretmp_6830 = &this_129(D)->_pair_flat;
  pretmp_6920 = &this_129(D)->_sent_packets;
  pretmp_7010 = &this_129(D)->_accepted_packets;
  pretmp_7100 = &this_129(D)->_sent_flits;
  pretmp_7190 = &this_129(D)->_accepted_flits;
  pretmp_7280 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L294>:
  # DEBUG this => &D.73741
  # DEBUG D#476 => &D.73741.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73741.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73741.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73741.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1752 = MEM[(struct _Vector_base *)&D.73741]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1752
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1752
  # DEBUG __n => D#470
  if (_1752 != 0B)
    goto <bb 1601>;
  else
    goto <bb 1602>;

  <bb 1601>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1752
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1752
  # DEBUG this => D#462
  # DEBUG D.152457 => D#463
  operator delete (_1752);

  <bb 1602>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73741 ={v} {CLOBBER};
  resx 348

<L919>:
  pretmp_4471 = &this_129(D)->_qtime;
  pretmp_4504 = &this_129(D)->_total_in_flight_flits;
  pretmp_4536 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4571 = &this_129(D)->_retired_packets;
  pretmp_5924 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6371 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6648 = &this_129(D)->_pair_plat;
  pretmp_6738 = &this_129(D)->_pair_nlat;
  pretmp_6828 = &this_129(D)->_pair_flat;
  pretmp_6918 = &this_129(D)->_sent_packets;
  pretmp_7008 = &this_129(D)->_accepted_packets;
  pretmp_7098 = &this_129(D)->_sent_flits;
  pretmp_7188 = &this_129(D)->_accepted_flits;
  pretmp_7278 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L295>:
  # DEBUG this => &D.73744
  # DEBUG D#476 => &D.73744.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73744.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73744.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73744.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1748 = MEM[(struct _Vector_base *)&D.73744]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1748
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1748
  # DEBUG __n => D#470
  if (_1748 != 0B)
    goto <bb 1605>;
  else
    goto <bb 1606>;

  <bb 1605>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1748
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1748
  # DEBUG this => D#462
  # DEBUG D.152472 => D#463
  operator delete (_1748);

  <bb 1606>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73744 ={v} {CLOBBER};
  resx 350

<L920>:
  pretmp_4470 = &this_129(D)->_qtime;
  pretmp_4501 = &this_129(D)->_total_in_flight_flits;
  pretmp_4535 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4570 = &this_129(D)->_retired_packets;
  pretmp_4838 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6370 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6647 = &this_129(D)->_pair_plat;
  pretmp_6737 = &this_129(D)->_pair_nlat;
  pretmp_6827 = &this_129(D)->_pair_flat;
  pretmp_6917 = &this_129(D)->_sent_packets;
  pretmp_7007 = &this_129(D)->_accepted_packets;
  pretmp_7097 = &this_129(D)->_sent_flits;
  pretmp_7187 = &this_129(D)->_accepted_flits;
  pretmp_7277 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

  # _4673 = PHI <_765(569)>
<L296>:
  operator delete (_4673);
  resx 355

<L921>:
  goto <bb 1611> (<L297>);

<L666>:

<L297>:
  # DEBUG this => &D.73754
  # DEBUG this => &D.73754
  # DEBUG this => &D.73754
  _830 = MEM[(char * *)&D.73754];
  # DEBUG D#1 => &D.73754
  # DEBUG this => D#1
  # DEBUG this => &D.73754
  if (&D.73754.D.11539._M_local_buf != _830)
    goto <bb 1612>;
  else
    goto <bb 1613>;

  <bb 1612>:
  # DEBUG D#629 => D.73754.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73754
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73754
  # DEBUG this => D#1
  # DEBUG this => &D.73754
  # DEBUG D#626 => &D.73754._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _830
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _830
  # DEBUG this => D#620
  # DEBUG D.152485 => D#621
  operator delete (_830);

  <bb 1613>:
  # DEBUG D#630 => &D.73754._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73754 ={v} {CLOBBER};
  resx 354

<L922>:
  goto <bb 1633> (<L306>);

<L298>:
  # DEBUG this => &D.73756
  # DEBUG this => &D.73756
  # DEBUG this => &D.73756
  _823 = MEM[(char * *)&D.73756];
  # DEBUG D#1 => &D.73756
  # DEBUG this => D#1
  # DEBUG this => &D.73756
  if (&D.73756.D.11539._M_local_buf != _823)
    goto <bb 1616>;
  else
    goto <bb 1617>;

  <bb 1616>:
  # DEBUG D#629 => D.73756.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73756
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73756
  # DEBUG this => D#1
  # DEBUG this => &D.73756
  # DEBUG D#626 => &D.73756._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _823
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _823
  # DEBUG this => D#620
  # DEBUG D.152500 => D#621
  operator delete (_823);

  <bb 1617>:
  # DEBUG D#630 => &D.73756._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73756 ={v} {CLOBBER};
  resx 359

<L923>:
  goto <bb 1633> (<L306>);

<L300>:
  # DEBUG this => &D.73758
  # DEBUG this => &D.73758
  # DEBUG this => &D.73758
  _821 = MEM[(char * *)&D.73758];
  # DEBUG D#1 => &D.73758
  # DEBUG this => D#1
  # DEBUG this => &D.73758
  if (&D.73758.D.11539._M_local_buf != _821)
    goto <bb 1620>;
  else
    goto <bb 1621>;

  <bb 1620>:
  # DEBUG D#629 => D.73758.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73758
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73758
  # DEBUG this => D#1
  # DEBUG this => &D.73758
  # DEBUG D#626 => &D.73758._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _821
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _821
  # DEBUG this => D#620
  # DEBUG D.152517 => D#621
  operator delete (_821);

  <bb 1621>:
  # DEBUG D#630 => &D.73758._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73758 ={v} {CLOBBER};
  resx 363

<L924>:
  goto <bb 1633> (<L306>);

<L302>:
  # DEBUG this => &D.73762
  # DEBUG this => &D.73762
  # DEBUG this => &D.73762
  _819 = MEM[(char * *)&D.73762];
  # DEBUG D#1 => &D.73762
  # DEBUG this => D#1
  # DEBUG this => &D.73762
  if (&D.73762.D.11539._M_local_buf != _819)
    goto <bb 1624>;
  else
    goto <bb 1625>;

  <bb 1624>:
  # DEBUG D#629 => D.73762.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73762
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73762
  # DEBUG this => D#1
  # DEBUG this => &D.73762
  # DEBUG D#626 => &D.73762._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _819
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _819
  # DEBUG this => D#620
  # DEBUG D.152534 => D#621
  operator delete (_819);

  <bb 1625>:
  # DEBUG D#630 => &D.73762._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73762 ={v} {CLOBBER};
  resx 369

<L925>:
  goto <bb 1628> (<L304>);

<L670>:

<L304>:
  # DEBUG this => &D.73760
  # DEBUG this => &D.73760
  # DEBUG this => &D.73760
  _815 = MEM[(char * *)&D.73760];
  # DEBUG D#1 => &D.73760
  # DEBUG this => D#1
  # DEBUG this => &D.73760
  if (&D.73760.D.11539._M_local_buf != _815)
    goto <bb 1629>;
  else
    goto <bb 1630>;

  <bb 1629>:
  # DEBUG D#629 => D.73760.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73760
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73760
  # DEBUG this => D#1
  # DEBUG this => &D.73760
  # DEBUG D#626 => &D.73760._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _815
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _815
  # DEBUG this => D#620
  # DEBUG D.152551 => D#621
  operator delete (_815);

  <bb 1630>:
  # DEBUG D#630 => &D.73760._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73760 ={v} {CLOBBER};
  resx 367

<L926>:
  goto <bb 1633> (<L306>);

<L661>:

<L306>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&tmp_name);
  resx 353

<L927>:
  pretmp_4480 = &this_129(D)->_qtime;
  pretmp_4511 = &this_129(D)->_total_in_flight_flits;
  pretmp_4543 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4578 = &this_129(D)->_retired_packets;
  pretmp_4871 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6379 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6656 = &this_129(D)->_pair_plat;
  pretmp_6746 = &this_129(D)->_pair_nlat;
  pretmp_6836 = &this_129(D)->_pair_flat;
  pretmp_6926 = &this_129(D)->_sent_packets;
  pretmp_7016 = &this_129(D)->_accepted_packets;
  pretmp_7106 = &this_129(D)->_sent_flits;
  pretmp_7196 = &this_129(D)->_accepted_flits;
  pretmp_7286 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L308>:
  # DEBUG this => &D.73764
  # DEBUG D#476 => &D.73764.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73764.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73764.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73764.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _817 = MEM[(struct _Vector_base *)&D.73764]._M_impl._M_start;
  # DEBUG D#473 => (long int) _817
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _817
  # DEBUG __n => D#470
  if (_817 != 0B)
    goto <bb 1636>;
  else
    goto <bb 1637>;

  <bb 1636>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _817
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _817
  # DEBUG this => D#462
  # DEBUG D.152570 => D#463
  operator delete (_817);

  <bb 1637>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73764 ={v} {CLOBBER};
  resx 376

<L928>:
  pretmp_4500 = &this_129(D)->_total_in_flight_flits;
  pretmp_4534 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4567 = &this_129(D)->_retired_packets;
  pretmp_5914 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6367 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6644 = &this_129(D)->_pair_plat;
  pretmp_6734 = &this_129(D)->_pair_nlat;
  pretmp_6824 = &this_129(D)->_pair_flat;
  pretmp_6914 = &this_129(D)->_sent_packets;
  pretmp_7004 = &this_129(D)->_accepted_packets;
  pretmp_7094 = &this_129(D)->_sent_flits;
  pretmp_7184 = &this_129(D)->_accepted_flits;
  pretmp_7274 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L309>:
  # DEBUG this => &D.73765
  # DEBUG this => &D.73765.D.48430
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&D.73765.D.48430);
  # DEBUG D#1019 => &MEM[(struct _Bvector_base *)&D.73765]._M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  D.73765 ={v} {CLOBBER};
  resx 378

<L929>:
  pretmp_4499 = &this_129(D)->_total_in_flight_flits;
  pretmp_4531 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4566 = &this_129(D)->_retired_packets;
  pretmp_5928 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6365 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6642 = &this_129(D)->_pair_plat;
  pretmp_6732 = &this_129(D)->_pair_nlat;
  pretmp_6822 = &this_129(D)->_pair_flat;
  pretmp_6912 = &this_129(D)->_sent_packets;
  pretmp_7002 = &this_129(D)->_accepted_packets;
  pretmp_7092 = &this_129(D)->_sent_flits;
  pretmp_7182 = &this_129(D)->_accepted_flits;
  pretmp_7272 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L310>:
  std::vector<std::__cxx11::list<Flit*> >::~vector (&D.73766);
  D.73766 ={v} {CLOBBER};
  resx 380

<L930>:
  pretmp_4498 = &this_129(D)->_total_in_flight_flits;
  pretmp_4530 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4565 = &this_129(D)->_retired_packets;
  pretmp_6139 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6364 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6641 = &this_129(D)->_pair_plat;
  pretmp_6731 = &this_129(D)->_pair_nlat;
  pretmp_6821 = &this_129(D)->_pair_flat;
  pretmp_6911 = &this_129(D)->_sent_packets;
  pretmp_7001 = &this_129(D)->_accepted_packets;
  pretmp_7091 = &this_129(D)->_sent_flits;
  pretmp_7181 = &this_129(D)->_accepted_flits;
  pretmp_7271 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L311>:
  # DEBUG this => &D.73769
  # DEBUG D#1056 => &D.73769.D.71295
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_1745 = MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_1745
  # DEBUG __cur => __tmp_1745
  if (&MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893 == __tmp_1745)
    goto <bb 1644>;
  else
    goto <bb 1645>;

  <bb 1644>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  D.73769 ={v} {CLOBBER};
  resx 382

  <bb 1645>:

  <bb 1646>:
  # __tmp_6010 = PHI <__tmp_1745(1645), __tmp_2095(1647)>
  # DEBUG __cur => __tmp_6010
  # DEBUG __tmp => __tmp_6010
  __tmp_2095 = __tmp_6010->D.82395._M_next;
  # DEBUG __cur => __tmp_2095
  # DEBUG D#1054 => &__tmp_6010->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_6010
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_6010
  # DEBUG this => D#559
  # DEBUG D.152589 => D#560
  operator delete (__tmp_6010);
  # DEBUG __cur => __tmp_2095
  if (&MEM[(struct _List_base *)&D.73769]._M_impl._M_node.D.37893 == __tmp_2095)
    goto <bb 1644>;
  else
    goto <bb 1647>;

  <bb 1647>:
  goto <bb 1646>;

<L931>:
  pretmp_4495 = &this_129(D)->_total_in_flight_flits;
  pretmp_4529 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4564 = &this_129(D)->_retired_packets;
  pretmp_5930 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6362 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6639 = &this_129(D)->_pair_plat;
  pretmp_6729 = &this_129(D)->_pair_nlat;
  pretmp_6819 = &this_129(D)->_pair_flat;
  pretmp_6909 = &this_129(D)->_sent_packets;
  pretmp_6999 = &this_129(D)->_accepted_packets;
  pretmp_7089 = &this_129(D)->_sent_flits;
  pretmp_7179 = &this_129(D)->_accepted_flits;
  pretmp_7269 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L312>:
  # DEBUG this => &D.73770
  # DEBUG this => &D.73770._M_t
  _2096 = MEM[(struct _Rb_tree_node_base * *)&D.73770 + 16B];
  # DEBUG D#214 => &D.73770._M_t
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (&D.73770._M_t, _2096);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)&D.73770]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  D.73770 ={v} {CLOBBER};
  resx 384

<L932>:
  pretmp_4528 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4561 = &this_129(D)->_retired_packets;
  pretmp_6140 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6361 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6638 = &this_129(D)->_pair_plat;
  pretmp_6728 = &this_129(D)->_pair_nlat;
  pretmp_6818 = &this_129(D)->_pair_flat;
  pretmp_6908 = &this_129(D)->_sent_packets;
  pretmp_6998 = &this_129(D)->_accepted_packets;
  pretmp_7088 = &this_129(D)->_sent_flits;
  pretmp_7178 = &this_129(D)->_accepted_flits;
  pretmp_7268 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L313>:
  # DEBUG this => &D.73771
  # DEBUG this => &D.73771._M_t
  _2097 = MEM[(struct _Rb_tree_node_base * *)&D.73771 + 16B];
  # DEBUG D#214 => &D.73771._M_t
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (&D.73771._M_t, _2097);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)&D.73771]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  D.73771 ={v} {CLOBBER};
  resx 386

<L933>:
  pretmp_4560 = &this_129(D)->_retired_packets;
  pretmp_5932 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6359 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6636 = &this_129(D)->_pair_plat;
  pretmp_6726 = &this_129(D)->_pair_nlat;
  pretmp_6816 = &this_129(D)->_pair_flat;
  pretmp_6906 = &this_129(D)->_sent_packets;
  pretmp_6996 = &this_129(D)->_accepted_packets;
  pretmp_7086 = &this_129(D)->_sent_flits;
  pretmp_7176 = &this_129(D)->_accepted_flits;
  pretmp_7266 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L314>:
  # DEBUG this => &D.73772
  # DEBUG this => &D.73772._M_t
  _2098 = MEM[(struct _Rb_tree_node_base * *)&D.73772 + 16B];
  # DEBUG D#214 => &D.73772._M_t
  # DEBUG this => D#214
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (&D.73772._M_t, _2098);
  # DEBUG D#1912 => &MEM[(struct _Rb_tree *)&D.73772]._M_impl
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  # DEBUG this => D#1912
  D.73772 ={v} {CLOBBER};
  resx 388

<L934>:
  pretmp_6141 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6358 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6635 = &this_129(D)->_pair_plat;
  pretmp_6725 = &this_129(D)->_pair_nlat;
  pretmp_6815 = &this_129(D)->_pair_flat;
  pretmp_6905 = &this_129(D)->_sent_packets;
  pretmp_6995 = &this_129(D)->_accepted_packets;
  pretmp_7085 = &this_129(D)->_sent_flits;
  pretmp_7175 = &this_129(D)->_accepted_flits;
  pretmp_7265 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L315>:
  # DEBUG this => &D.73773
  # DEBUG D#1084 => &D.73773.D.73144
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_1739 = MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_1739
  # DEBUG __cur => __tmp_1739
  if (&MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893 == __tmp_1739)
    goto <bb 1656>;
  else
    goto <bb 1657>;

  <bb 1656>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  D.73773 ={v} {CLOBBER};
  resx 390

  <bb 1657>:

  <bb 1658>:
  # __tmp_6011 = PHI <__tmp_1739(1657), __tmp_2100(1659)>
  # DEBUG __cur => __tmp_6011
  # DEBUG __tmp => __tmp_6011
  __tmp_2100 = __tmp_6011->D.82523._M_next;
  # DEBUG __cur => __tmp_2100
  # DEBUG D#1082 => &__tmp_6011->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_6011
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_6011
  # DEBUG this => D#567
  # DEBUG D.152618 => D#568
  operator delete (__tmp_6011);
  # DEBUG __cur => __tmp_2100
  if (&MEM[(struct _List_base *)&D.73773]._M_impl._M_node.D.37893 == __tmp_2100)
    goto <bb 1656>;
  else
    goto <bb 1659>;

  <bb 1659>:
  goto <bb 1658>;

<L935>:
  pretmp_6143 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6352 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6629 = &this_129(D)->_pair_plat;
  pretmp_6719 = &this_129(D)->_pair_nlat;
  pretmp_6809 = &this_129(D)->_pair_flat;
  pretmp_6899 = &this_129(D)->_sent_packets;
  pretmp_6989 = &this_129(D)->_accepted_packets;
  pretmp_7079 = &this_129(D)->_sent_flits;
  pretmp_7169 = &this_129(D)->_accepted_flits;
  pretmp_7259 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L316>:
  # DEBUG this => &D.73774
  # DEBUG this => &D.73774
  # DEBUG this => &D.73774
  _1737 = MEM[(char * *)&D.73774];
  # DEBUG D#1 => &D.73774
  # DEBUG this => D#1
  # DEBUG this => &D.73774
  if (&D.73774.D.11539._M_local_buf != _1737)
    goto <bb 1662>;
  else
    goto <bb 1663>;

  <bb 1662>:
  # DEBUG D#629 => D.73774.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73774
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73774
  # DEBUG this => D#1
  # DEBUG this => &D.73774
  # DEBUG D#626 => &D.73774._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1737
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1737
  # DEBUG this => D#620
  # DEBUG D.152631 => D#621
  operator delete (_1737);

  <bb 1663>:
  # DEBUG D#630 => &D.73774._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73774 ={v} {CLOBBER};
  resx 393

<L936>:
  pretmp_5912 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6382 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6659 = &this_129(D)->_pair_plat;
  pretmp_6749 = &this_129(D)->_pair_nlat;
  pretmp_6839 = &this_129(D)->_pair_flat;
  pretmp_6929 = &this_129(D)->_sent_packets;
  pretmp_7019 = &this_129(D)->_accepted_packets;
  pretmp_7109 = &this_129(D)->_sent_flits;
  pretmp_7199 = &this_129(D)->_accepted_flits;
  pretmp_7289 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L318>:
  # DEBUG this => &D.73776
  # DEBUG this => &D.73776
  # DEBUG this => &D.73776
  _1736 = MEM[(char * *)&D.73776];
  # DEBUG D#1 => &D.73776
  # DEBUG this => D#1
  # DEBUG this => &D.73776
  if (&D.73776.D.11539._M_local_buf != _1736)
    goto <bb 1666>;
  else
    goto <bb 1667>;

  <bb 1666>:
  # DEBUG D#629 => D.73776.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73776
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73776
  # DEBUG this => D#1
  # DEBUG this => &D.73776
  # DEBUG D#626 => &D.73776._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1736
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1736
  # DEBUG this => D#620
  # DEBUG D.152648 => D#621
  operator delete (_1736);

  <bb 1667>:
  # DEBUG D#630 => &D.73776._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73776 ={v} {CLOBBER};
  resx 397

<L937>:
  pretmp_5911 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6384 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6661 = &this_129(D)->_pair_plat;
  pretmp_6751 = &this_129(D)->_pair_nlat;
  pretmp_6841 = &this_129(D)->_pair_flat;
  pretmp_6931 = &this_129(D)->_sent_packets;
  pretmp_7021 = &this_129(D)->_accepted_packets;
  pretmp_7111 = &this_129(D)->_sent_flits;
  pretmp_7201 = &this_129(D)->_accepted_flits;
  pretmp_7291 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L320>:
  # DEBUG this => &D.73778
  # DEBUG D#599 => &D.73778.D.49300
  # DEBUG this => D#599
  # DEBUG D#602 => D.73778.D.49300._M_impl._M_finish
  # DEBUG D#601 => D.73778.D.49300._M_impl._M_start
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG D#600 => &D.73778.D.49300
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _1734 = MEM[(struct _Vector_base *)&D.73778]._M_impl._M_start;
  # DEBUG D#596 => (long int) _1734
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _1734
  # DEBUG __n => D#593
  if (_1734 != 0B)
    goto <bb 1670>;
  else
    goto <bb 1671>;

  <bb 1670>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _1734
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _1734
  # DEBUG this => D#585
  # DEBUG D.152667 => D#586
  operator delete (_1734);

  <bb 1671>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  D.73778 ={v} {CLOBBER};
  resx 400

<L938>:
  pretmp_6224 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6348 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6625 = &this_129(D)->_pair_plat;
  pretmp_6715 = &this_129(D)->_pair_nlat;
  pretmp_6805 = &this_129(D)->_pair_flat;
  pretmp_6895 = &this_129(D)->_sent_packets;
  pretmp_6985 = &this_129(D)->_accepted_packets;
  pretmp_7075 = &this_129(D)->_sent_flits;
  pretmp_7165 = &this_129(D)->_accepted_flits;
  pretmp_7255 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L321>:
  # DEBUG this => &D.73781
  # DEBUG this => &D.73781
  # DEBUG this => &D.73781
  _1731 = MEM[(char * *)&D.73781];
  # DEBUG D#1 => &D.73781
  # DEBUG this => D#1
  # DEBUG this => &D.73781
  if (&D.73781.D.11539._M_local_buf != _1731)
    goto <bb 1674>;
  else
    goto <bb 1675>;

  <bb 1674>:
  # DEBUG D#629 => D.73781.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73781
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73781
  # DEBUG this => D#1
  # DEBUG this => &D.73781
  # DEBUG D#626 => &D.73781._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1731
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1731
  # DEBUG this => D#620
  # DEBUG D.152680 => D#621
  operator delete (_1731);

  <bb 1675>:
  # DEBUG D#630 => &D.73781._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73781 ={v} {CLOBBER};
  resx 404

<L939>:
  goto <bb 1678> (<L322>);

<L683>:

<L322>:
  # DEBUG this => &D.73782
  # DEBUG this => &D.73782
  # DEBUG this => &D.73782
  _1727 = MEM[(char * *)&D.73782];
  # DEBUG D#1 => &D.73782
  # DEBUG this => D#1
  # DEBUG this => &D.73782
  if (&D.73782.D.11539._M_local_buf != _1727)
    goto <bb 1679>;
  else
    goto <bb 1680>;

  <bb 1679>:
  # DEBUG D#629 => D.73782.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73782
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73782
  # DEBUG this => D#1
  # DEBUG this => &D.73782
  # DEBUG D#626 => &D.73782._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1727
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1727
  # DEBUG this => D#620
  # DEBUG D.152695 => D#621
  operator delete (_1727);

  <bb 1680>:
  # DEBUG D#630 => &D.73782._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73782 ={v} {CLOBBER};
  resx 403

<L940>:
  pretmp_5910 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6386 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6663 = &this_129(D)->_pair_plat;
  pretmp_6753 = &this_129(D)->_pair_nlat;
  pretmp_6843 = &this_129(D)->_pair_flat;
  pretmp_6933 = &this_129(D)->_sent_packets;
  pretmp_7023 = &this_129(D)->_accepted_packets;
  pretmp_7113 = &this_129(D)->_sent_flits;
  pretmp_7203 = &this_129(D)->_accepted_flits;
  pretmp_7293 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L324>:
  # DEBUG this => &D.73784
  # DEBUG this => &D.73784
  # DEBUG this => &D.73784
  _1730 = MEM[(char * *)&D.73784];
  # DEBUG D#1 => &D.73784
  # DEBUG this => D#1
  # DEBUG this => &D.73784
  if (&D.73784.D.11539._M_local_buf != _1730)
    goto <bb 1683>;
  else
    goto <bb 1684>;

  <bb 1683>:
  # DEBUG D#629 => D.73784.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73784
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73784
  # DEBUG this => D#1
  # DEBUG this => &D.73784
  # DEBUG D#626 => &D.73784._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1730
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1730
  # DEBUG this => D#620
  # DEBUG D.152712 => D#621
  operator delete (_1730);

  <bb 1684>:
  # DEBUG D#630 => &D.73784._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73784 ={v} {CLOBBER};
  resx 409

<L941>:
  pretmp_5908 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6388 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6665 = &this_129(D)->_pair_plat;
  pretmp_6755 = &this_129(D)->_pair_nlat;
  pretmp_6845 = &this_129(D)->_pair_flat;
  pretmp_6935 = &this_129(D)->_sent_packets;
  pretmp_7025 = &this_129(D)->_accepted_packets;
  pretmp_7115 = &this_129(D)->_sent_flits;
  pretmp_7205 = &this_129(D)->_accepted_flits;
  pretmp_7295 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L326>:
  # DEBUG this => &D.73786
  # DEBUG this => &D.73786
  # DEBUG this => &D.73786
  _942 = MEM[(char * *)&D.73786];
  # DEBUG D#1 => &D.73786
  # DEBUG this => D#1
  # DEBUG this => &D.73786
  if (&D.73786.D.11539._M_local_buf != _942)
    goto <bb 1687>;
  else
    goto <bb 1688>;

  <bb 1687>:
  # DEBUG D#629 => D.73786.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73786
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73786
  # DEBUG this => D#1
  # DEBUG this => &D.73786
  # DEBUG D#626 => &D.73786._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _942
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _942
  # DEBUG this => D#620
  # DEBUG D.152729 => D#621
  operator delete (_942);

  <bb 1688>:
  # DEBUG D#630 => &D.73786._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73786 ={v} {CLOBBER};
  resx 414

<L942>:
  goto <bb 1691> (<L327>);

<L691>:

<L327>:
  # DEBUG this => &D.73787
  # DEBUG this => &D.73787
  # DEBUG this => &D.73787
  _1723 = MEM[(char * *)&D.73787];
  # DEBUG D#1 => &D.73787
  # DEBUG this => D#1
  # DEBUG this => &D.73787
  if (&D.73787.D.11539._M_local_buf != _1723)
    goto <bb 1692>;
  else
    goto <bb 1693>;

  <bb 1692>:
  # DEBUG D#629 => D.73787.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73787
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73787
  # DEBUG this => D#1
  # DEBUG this => &D.73787
  # DEBUG D#626 => &D.73787._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1723
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1723
  # DEBUG this => D#620
  # DEBUG D.152744 => D#621
  operator delete (_1723);

  <bb 1693>:
  # DEBUG D#630 => &D.73787._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73787 ={v} {CLOBBER};
  resx 413

<L943>:
  pretmp_5906 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6390 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6667 = &this_129(D)->_pair_plat;
  pretmp_6757 = &this_129(D)->_pair_nlat;
  pretmp_6847 = &this_129(D)->_pair_flat;
  pretmp_6937 = &this_129(D)->_sent_packets;
  pretmp_7027 = &this_129(D)->_accepted_packets;
  pretmp_7117 = &this_129(D)->_sent_flits;
  pretmp_7207 = &this_129(D)->_accepted_flits;
  pretmp_7297 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L329>:
  # DEBUG this => &D.73789
  # DEBUG this => &D.73789
  # DEBUG this => &D.73789
  _1726 = MEM[(char * *)&D.73789];
  # DEBUG D#1 => &D.73789
  # DEBUG this => D#1
  # DEBUG this => &D.73789
  if (&D.73789.D.11539._M_local_buf != _1726)
    goto <bb 1696>;
  else
    goto <bb 1697>;

  <bb 1696>:
  # DEBUG D#629 => D.73789.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73789
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73789
  # DEBUG this => D#1
  # DEBUG this => &D.73789
  # DEBUG D#626 => &D.73789._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1726
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1726
  # DEBUG this => D#620
  # DEBUG D.152761 => D#621
  operator delete (_1726);

  <bb 1697>:
  # DEBUG D#630 => &D.73789._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73789 ={v} {CLOBBER};
  resx 419

<L944>:
  pretmp_5902 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6392 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6669 = &this_129(D)->_pair_plat;
  pretmp_6759 = &this_129(D)->_pair_nlat;
  pretmp_6849 = &this_129(D)->_pair_flat;
  pretmp_6939 = &this_129(D)->_sent_packets;
  pretmp_7029 = &this_129(D)->_accepted_packets;
  pretmp_7119 = &this_129(D)->_sent_flits;
  pretmp_7209 = &this_129(D)->_accepted_flits;
  pretmp_7299 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L331>:
  # DEBUG this => &D.73791
  # DEBUG this => &D.73791
  # DEBUG this => &D.73791
  _1722 = MEM[(char * *)&D.73791];
  # DEBUG D#1 => &D.73791
  # DEBUG this => D#1
  # DEBUG this => &D.73791
  if (&D.73791.D.11539._M_local_buf != _1722)
    goto <bb 1700>;
  else
    goto <bb 1701>;

  <bb 1700>:
  # DEBUG D#629 => D.73791.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73791
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73791
  # DEBUG this => D#1
  # DEBUG this => &D.73791
  # DEBUG D#626 => &D.73791._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1722
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1722
  # DEBUG this => D#620
  # DEBUG D.152778 => D#621
  operator delete (_1722);

  <bb 1701>:
  # DEBUG D#630 => &D.73791._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73791 ={v} {CLOBBER};
  resx 423

<L945>:
  pretmp_5899 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6394 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6671 = &this_129(D)->_pair_plat;
  pretmp_6761 = &this_129(D)->_pair_nlat;
  pretmp_6851 = &this_129(D)->_pair_flat;
  pretmp_6941 = &this_129(D)->_sent_packets;
  pretmp_7031 = &this_129(D)->_accepted_packets;
  pretmp_7121 = &this_129(D)->_sent_flits;
  pretmp_7211 = &this_129(D)->_accepted_flits;
  pretmp_7301 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L333>:
  # DEBUG this => &D.73793
  # DEBUG this => &D.73793
  # DEBUG this => &D.73793
  _1720 = MEM[(char * *)&D.73793];
  # DEBUG D#1 => &D.73793
  # DEBUG this => D#1
  # DEBUG this => &D.73793
  if (&D.73793.D.11539._M_local_buf != _1720)
    goto <bb 1704>;
  else
    goto <bb 1705>;

  <bb 1704>:
  # DEBUG D#629 => D.73793.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73793
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73793
  # DEBUG this => D#1
  # DEBUG this => &D.73793
  # DEBUG D#626 => &D.73793._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1720
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1720
  # DEBUG this => D#620
  # DEBUG D.152795 => D#621
  operator delete (_1720);

  <bb 1705>:
  # DEBUG D#630 => &D.73793._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73793 ={v} {CLOBBER};
  resx 427

<L946>:
  pretmp_5897 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6396 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6673 = &this_129(D)->_pair_plat;
  pretmp_6763 = &this_129(D)->_pair_nlat;
  pretmp_6853 = &this_129(D)->_pair_flat;
  pretmp_6943 = &this_129(D)->_sent_packets;
  pretmp_7033 = &this_129(D)->_accepted_packets;
  pretmp_7123 = &this_129(D)->_sent_flits;
  pretmp_7213 = &this_129(D)->_accepted_flits;
  pretmp_7303 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L335>:
  # DEBUG this => &D.73795
  # DEBUG D#476 => &D.73795.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73795.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73795.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73795.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1718 = MEM[(struct _Vector_base *)&D.73795]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1718
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1718
  # DEBUG __n => D#470
  if (_1718 != 0B)
    goto <bb 1708>;
  else
    goto <bb 1709>;

  <bb 1708>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1718
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1718
  # DEBUG this => D#462
  # DEBUG D.152814 => D#463
  operator delete (_1718);

  <bb 1709>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73795 ={v} {CLOBBER};
  resx 432

<L947>:
  goto <bb 1712> (<L336>);

<L696>:

<L336>:
  # DEBUG this => &D.73796
  # DEBUG this => &D.73796
  # DEBUG this => &D.73796
  _1713 = MEM[(char * *)&D.73796];
  # DEBUG D#1 => &D.73796
  # DEBUG this => D#1
  # DEBUG this => &D.73796
  if (&D.73796.D.11539._M_local_buf != _1713)
    goto <bb 1713>;
  else
    goto <bb 1714>;

  <bb 1713>:
  # DEBUG D#629 => D.73796.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73796
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73796
  # DEBUG this => D#1
  # DEBUG this => &D.73796
  # DEBUG D#626 => &D.73796._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1713
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1713
  # DEBUG this => D#620
  # DEBUG D.152827 => D#621
  operator delete (_1713);

  <bb 1714>:
  # DEBUG D#630 => &D.73796._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73796 ={v} {CLOBBER};
  resx 431

<L948>:
  pretmp_5894 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6398 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6675 = &this_129(D)->_pair_plat;
  pretmp_6765 = &this_129(D)->_pair_nlat;
  pretmp_6855 = &this_129(D)->_pair_flat;
  pretmp_6945 = &this_129(D)->_sent_packets;
  pretmp_7035 = &this_129(D)->_accepted_packets;
  pretmp_7125 = &this_129(D)->_sent_flits;
  pretmp_7215 = &this_129(D)->_accepted_flits;
  pretmp_7305 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L698>:

<L339>:
  D.73798 ={v} {CLOBBER};
  # DEBUG this => &D.73799
  # DEBUG this => &D.73799
  # DEBUG this => &D.73799
  _1716 = MEM[(char * *)&D.73799];
  # DEBUG D#1 => &D.73799
  # DEBUG this => D#1
  # DEBUG this => &D.73799
  if (&D.73799.D.11539._M_local_buf != _1716)
    goto <bb 1718>;
  else
    goto <bb 1719>;

  <bb 1718>:
  # DEBUG D#629 => D.73799.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73799
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73799
  # DEBUG this => D#1
  # DEBUG this => &D.73799
  # DEBUG D#626 => &D.73799._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1716
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1716
  # DEBUG this => D#620
  # DEBUG D.152844 => D#621
  operator delete (_1716);

  <bb 1719>:
  # DEBUG D#630 => &D.73799._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73799 ={v} {CLOBBER};
  resx 437

<L949>:
  pretmp_5891 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6400 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6677 = &this_129(D)->_pair_plat;
  pretmp_6767 = &this_129(D)->_pair_nlat;
  pretmp_6857 = &this_129(D)->_pair_flat;
  pretmp_6947 = &this_129(D)->_sent_packets;
  pretmp_7037 = &this_129(D)->_accepted_packets;
  pretmp_7127 = &this_129(D)->_sent_flits;
  pretmp_7217 = &this_129(D)->_accepted_flits;
  pretmp_7307 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L341>:
  # DEBUG this => &D.73801
  # DEBUG this => &D.73801
  # DEBUG this => &D.73801
  _993 = MEM[(char * *)&D.73801];
  # DEBUG D#1 => &D.73801
  # DEBUG this => D#1
  # DEBUG this => &D.73801
  if (&D.73801.D.11539._M_local_buf != _993)
    goto <bb 1722>;
  else
    goto <bb 1723>;

  <bb 1722>:
  # DEBUG D#629 => D.73801.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73801
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73801
  # DEBUG this => D#1
  # DEBUG this => &D.73801
  # DEBUG D#626 => &D.73801._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _993
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _993
  # DEBUG this => D#620
  # DEBUG D.152861 => D#621
  operator delete (_993);

  <bb 1723>:
  # DEBUG D#630 => &D.73801._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73801 ={v} {CLOBBER};
  resx 443

<L950>:
  pretmp_5889 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6402 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6679 = &this_129(D)->_pair_plat;
  pretmp_6769 = &this_129(D)->_pair_nlat;
  pretmp_6859 = &this_129(D)->_pair_flat;
  pretmp_6949 = &this_129(D)->_sent_packets;
  pretmp_7039 = &this_129(D)->_accepted_packets;
  pretmp_7129 = &this_129(D)->_sent_flits;
  pretmp_7219 = &this_129(D)->_accepted_flits;
  pretmp_7309 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L343>:
  # DEBUG this => &D.73803
  # DEBUG D#503 => &D.73803.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73803.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73803.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73803.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1712 = MEM[(struct _Vector_base *)&D.73803]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1712
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1712
  # DEBUG __n => D#497
  if (_1712 != 0B)
    goto <bb 1726>;
  else
    goto <bb 1727>;

  <bb 1726>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1712
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1712
  # DEBUG this => D#489
  # DEBUG D.152880 => D#490
  operator delete (_1712);

  <bb 1727>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73803 ={v} {CLOBBER};
  resx 448

<L951>:
  goto <bb 1730> (<L344>);

<L703>:

<L344>:
  # DEBUG this => &D.73804
  # DEBUG this => &D.73804
  # DEBUG this => &D.73804
  _1707 = MEM[(char * *)&D.73804];
  # DEBUG D#1 => &D.73804
  # DEBUG this => D#1
  # DEBUG this => &D.73804
  if (&D.73804.D.11539._M_local_buf != _1707)
    goto <bb 1731>;
  else
    goto <bb 1732>;

  <bb 1731>:
  # DEBUG D#629 => D.73804.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73804
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73804
  # DEBUG this => D#1
  # DEBUG this => &D.73804
  # DEBUG D#626 => &D.73804._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1707
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1707
  # DEBUG this => D#620
  # DEBUG D.152893 => D#621
  operator delete (_1707);

  <bb 1732>:
  # DEBUG D#630 => &D.73804._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73804 ={v} {CLOBBER};
  resx 447

<L952>:
  pretmp_5886 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6404 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6681 = &this_129(D)->_pair_plat;
  pretmp_6771 = &this_129(D)->_pair_nlat;
  pretmp_6861 = &this_129(D)->_pair_flat;
  pretmp_6951 = &this_129(D)->_sent_packets;
  pretmp_7041 = &this_129(D)->_accepted_packets;
  pretmp_7131 = &this_129(D)->_sent_flits;
  pretmp_7221 = &this_129(D)->_accepted_flits;
  pretmp_7311 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L705>:

<L347>:
  D.73806 ={v} {CLOBBER};
  # DEBUG this => &D.73807
  # DEBUG this => &D.73807
  # DEBUG this => &D.73807
  _1710 = MEM[(char * *)&D.73807];
  # DEBUG D#1 => &D.73807
  # DEBUG this => D#1
  # DEBUG this => &D.73807
  if (&D.73807.D.11539._M_local_buf != _1710)
    goto <bb 1736>;
  else
    goto <bb 1737>;

  <bb 1736>:
  # DEBUG D#629 => D.73807.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73807
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73807
  # DEBUG this => D#1
  # DEBUG this => &D.73807
  # DEBUG D#626 => &D.73807._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1710
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1710
  # DEBUG this => D#620
  # DEBUG D.152910 => D#621
  operator delete (_1710);

  <bb 1737>:
  # DEBUG D#630 => &D.73807._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73807 ={v} {CLOBBER};
  resx 453

<L953>:
  pretmp_5939 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6351 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6628 = &this_129(D)->_pair_plat;
  pretmp_6718 = &this_129(D)->_pair_nlat;
  pretmp_6808 = &this_129(D)->_pair_flat;
  pretmp_6898 = &this_129(D)->_sent_packets;
  pretmp_6988 = &this_129(D)->_accepted_packets;
  pretmp_7078 = &this_129(D)->_sent_flits;
  pretmp_7168 = &this_129(D)->_accepted_flits;
  pretmp_7258 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L349>:
  # DEBUG this => &D.73809
  # DEBUG D#503 => &D.73809.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73809.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73809.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73809.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1027 = MEM[(struct _Vector_base *)&D.73809]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1027
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1027
  # DEBUG __n => D#497
  if (_1027 != 0B)
    goto <bb 1740>;
  else
    goto <bb 1741>;

  <bb 1740>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1027
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1027
  # DEBUG this => D#489
  # DEBUG D.152929 => D#490
  operator delete (_1027);

  <bb 1741>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73809 ={v} {CLOBBER};
  resx 460

<L954>:
  goto <bb 1744> (<L350>);

<L709>:

<L350>:
  # DEBUG this => &D.73810
  # DEBUG this => &D.73810
  # DEBUG this => &D.73810
  _1703 = MEM[(char * *)&D.73810];
  # DEBUG D#1 => &D.73810
  # DEBUG this => D#1
  # DEBUG this => &D.73810
  if (&D.73810.D.11539._M_local_buf != _1703)
    goto <bb 1745>;
  else
    goto <bb 1746>;

  <bb 1745>:
  # DEBUG D#629 => D.73810.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73810
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73810
  # DEBUG this => D#1
  # DEBUG this => &D.73810
  # DEBUG D#626 => &D.73810._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1703
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1703
  # DEBUG this => D#620
  # DEBUG D.152942 => D#621
  operator delete (_1703);

  <bb 1746>:
  # DEBUG D#630 => &D.73810._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73810 ={v} {CLOBBER};
  resx 459

<L955>:
  pretmp_6144 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6346 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6623 = &this_129(D)->_pair_plat;
  pretmp_6713 = &this_129(D)->_pair_nlat;
  pretmp_6803 = &this_129(D)->_pair_flat;
  pretmp_6893 = &this_129(D)->_sent_packets;
  pretmp_6983 = &this_129(D)->_accepted_packets;
  pretmp_7073 = &this_129(D)->_sent_flits;
  pretmp_7163 = &this_129(D)->_accepted_flits;
  pretmp_7253 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L711>:

<L353>:
  D.73812 ={v} {CLOBBER};
  # DEBUG this => &D.73813
  # DEBUG this => &D.73813
  # DEBUG this => &D.73813
  _1706 = MEM[(char * *)&D.73813];
  # DEBUG D#1 => &D.73813
  # DEBUG this => D#1
  # DEBUG this => &D.73813
  if (&D.73813.D.11539._M_local_buf != _1706)
    goto <bb 1750>;
  else
    goto <bb 1751>;

  <bb 1750>:
  # DEBUG D#629 => D.73813.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73813
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73813
  # DEBUG this => D#1
  # DEBUG this => &D.73813
  # DEBUG D#626 => &D.73813._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1706
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1706
  # DEBUG this => D#620
  # DEBUG D.152959 => D#621
  operator delete (_1706);

  <bb 1751>:
  # DEBUG D#630 => &D.73813._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73813 ={v} {CLOBBER};
  resx 465

<L956>:
  pretmp_6225 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6344 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6621 = &this_129(D)->_pair_plat;
  pretmp_6711 = &this_129(D)->_pair_nlat;
  pretmp_6801 = &this_129(D)->_pair_flat;
  pretmp_6891 = &this_129(D)->_sent_packets;
  pretmp_6981 = &this_129(D)->_accepted_packets;
  pretmp_7071 = &this_129(D)->_sent_flits;
  pretmp_7161 = &this_129(D)->_accepted_flits;
  pretmp_7251 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L355>:
  # DEBUG this => &D.73815
  # DEBUG D#503 => &D.73815.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73815.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73815.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73815.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1053 = MEM[(struct _Vector_base *)&D.73815]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1053
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1053
  # DEBUG __n => D#497
  if (_1053 != 0B)
    goto <bb 1754>;
  else
    goto <bb 1755>;

  <bb 1754>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1053
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1053
  # DEBUG this => D#489
  # DEBUG D.152978 => D#490
  operator delete (_1053);

  <bb 1755>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73815 ={v} {CLOBBER};
  resx 472

<L957>:
  goto <bb 1758> (<L356>);

<L715>:

<L356>:
  # DEBUG this => &D.73816
  # DEBUG this => &D.73816
  # DEBUG this => &D.73816
  _1699 = MEM[(char * *)&D.73816];
  # DEBUG D#1 => &D.73816
  # DEBUG this => D#1
  # DEBUG this => &D.73816
  if (&D.73816.D.11539._M_local_buf != _1699)
    goto <bb 1759>;
  else
    goto <bb 1760>;

  <bb 1759>:
  # DEBUG D#629 => D.73816.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73816
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73816
  # DEBUG this => D#1
  # DEBUG this => &D.73816
  # DEBUG D#626 => &D.73816._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1699
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1699
  # DEBUG this => D#620
  # DEBUG D.152991 => D#621
  operator delete (_1699);

  <bb 1760>:
  # DEBUG D#630 => &D.73816._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73816 ={v} {CLOBBER};
  resx 471

<L958>:
  pretmp_6226 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6342 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6619 = &this_129(D)->_pair_plat;
  pretmp_6709 = &this_129(D)->_pair_nlat;
  pretmp_6799 = &this_129(D)->_pair_flat;
  pretmp_6889 = &this_129(D)->_sent_packets;
  pretmp_6979 = &this_129(D)->_accepted_packets;
  pretmp_7069 = &this_129(D)->_sent_flits;
  pretmp_7159 = &this_129(D)->_accepted_flits;
  pretmp_7249 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L717>:

<L359>:
  D.73818 ={v} {CLOBBER};
  # DEBUG this => &D.73819
  # DEBUG this => &D.73819
  # DEBUG this => &D.73819
  _1702 = MEM[(char * *)&D.73819];
  # DEBUG D#1 => &D.73819
  # DEBUG this => D#1
  # DEBUG this => &D.73819
  if (&D.73819.D.11539._M_local_buf != _1702)
    goto <bb 1764>;
  else
    goto <bb 1765>;

  <bb 1764>:
  # DEBUG D#629 => D.73819.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73819
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73819
  # DEBUG this => D#1
  # DEBUG this => &D.73819
  # DEBUG D#626 => &D.73819._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1702
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1702
  # DEBUG this => D#620
  # DEBUG D.153008 => D#621
  operator delete (_1702);

  <bb 1765>:
  # DEBUG D#630 => &D.73819._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73819 ={v} {CLOBBER};
  resx 477

<L959>:
  pretmp_6145 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6340 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6617 = &this_129(D)->_pair_plat;
  pretmp_6707 = &this_129(D)->_pair_nlat;
  pretmp_6797 = &this_129(D)->_pair_flat;
  pretmp_6887 = &this_129(D)->_sent_packets;
  pretmp_6977 = &this_129(D)->_accepted_packets;
  pretmp_7067 = &this_129(D)->_sent_flits;
  pretmp_7157 = &this_129(D)->_accepted_flits;
  pretmp_7247 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L361>:
  # DEBUG this => &D.73821
  # DEBUG D#503 => &D.73821.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73821.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73821.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73821.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1078 = MEM[(struct _Vector_base *)&D.73821]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1078
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1078
  # DEBUG __n => D#497
  if (_1078 != 0B)
    goto <bb 1768>;
  else
    goto <bb 1769>;

  <bb 1768>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1078
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1078
  # DEBUG this => D#489
  # DEBUG D.153027 => D#490
  operator delete (_1078);

  <bb 1769>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73821 ={v} {CLOBBER};
  resx 484

<L960>:
  goto <bb 1772> (<L362>);

<L721>:

<L362>:
  # DEBUG this => &D.73822
  # DEBUG this => &D.73822
  # DEBUG this => &D.73822
  _1695 = MEM[(char * *)&D.73822];
  # DEBUG D#1 => &D.73822
  # DEBUG this => D#1
  # DEBUG this => &D.73822
  if (&D.73822.D.11539._M_local_buf != _1695)
    goto <bb 1773>;
  else
    goto <bb 1774>;

  <bb 1773>:
  # DEBUG D#629 => D.73822.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73822
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73822
  # DEBUG this => D#1
  # DEBUG this => &D.73822
  # DEBUG D#626 => &D.73822._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1695
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1695
  # DEBUG this => D#620
  # DEBUG D.153040 => D#621
  operator delete (_1695);

  <bb 1774>:
  # DEBUG D#630 => &D.73822._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73822 ={v} {CLOBBER};
  resx 483

<L961>:
  pretmp_6228 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6336 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6613 = &this_129(D)->_pair_plat;
  pretmp_6703 = &this_129(D)->_pair_nlat;
  pretmp_6793 = &this_129(D)->_pair_flat;
  pretmp_6883 = &this_129(D)->_sent_packets;
  pretmp_6973 = &this_129(D)->_accepted_packets;
  pretmp_7063 = &this_129(D)->_sent_flits;
  pretmp_7153 = &this_129(D)->_accepted_flits;
  pretmp_7243 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L723>:

<L365>:
  D.73824 ={v} {CLOBBER};
  # DEBUG this => &D.73825
  # DEBUG this => &D.73825
  # DEBUG this => &D.73825
  _1698 = MEM[(char * *)&D.73825];
  # DEBUG D#1 => &D.73825
  # DEBUG this => D#1
  # DEBUG this => &D.73825
  if (&D.73825.D.11539._M_local_buf != _1698)
    goto <bb 1778>;
  else
    goto <bb 1779>;

  <bb 1778>:
  # DEBUG D#629 => D.73825.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73825
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73825
  # DEBUG this => D#1
  # DEBUG this => &D.73825
  # DEBUG D#626 => &D.73825._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1698
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1698
  # DEBUG this => D#620
  # DEBUG D.153057 => D#621
  operator delete (_1698);

  <bb 1779>:
  # DEBUG D#630 => &D.73825._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73825 ={v} {CLOBBER};
  resx 489

<L962>:
  pretmp_6146 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6334 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6611 = &this_129(D)->_pair_plat;
  pretmp_6701 = &this_129(D)->_pair_nlat;
  pretmp_6791 = &this_129(D)->_pair_flat;
  pretmp_6881 = &this_129(D)->_sent_packets;
  pretmp_6971 = &this_129(D)->_accepted_packets;
  pretmp_7061 = &this_129(D)->_sent_flits;
  pretmp_7151 = &this_129(D)->_accepted_flits;
  pretmp_7241 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L367>:
  # DEBUG this => &D.73827
  # DEBUG D#503 => &D.73827.D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D.73827.D.55581._M_impl._M_finish
  # DEBUG D#505 => D.73827.D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D.73827.D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1104 = MEM[(struct _Vector_base *)&D.73827]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1104
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1104
  # DEBUG __n => D#497
  if (_1104 != 0B)
    goto <bb 1782>;
  else
    goto <bb 1783>;

  <bb 1782>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1104
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1104
  # DEBUG this => D#489
  # DEBUG D.153076 => D#490
  operator delete (_1104);

  <bb 1783>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  D.73827 ={v} {CLOBBER};
  resx 496

<L963>:
  goto <bb 1786> (<L368>);

<L727>:

<L368>:
  # DEBUG this => &D.73828
  # DEBUG this => &D.73828
  # DEBUG this => &D.73828
  _1691 = MEM[(char * *)&D.73828];
  # DEBUG D#1 => &D.73828
  # DEBUG this => D#1
  # DEBUG this => &D.73828
  if (&D.73828.D.11539._M_local_buf != _1691)
    goto <bb 1787>;
  else
    goto <bb 1788>;

  <bb 1787>:
  # DEBUG D#629 => D.73828.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73828
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73828
  # DEBUG this => D#1
  # DEBUG this => &D.73828
  # DEBUG D#626 => &D.73828._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1691
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1691
  # DEBUG this => D#620
  # DEBUG D.153089 => D#621
  operator delete (_1691);

  <bb 1788>:
  # DEBUG D#630 => &D.73828._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73828 ={v} {CLOBBER};
  resx 495

<L964>:
  pretmp_6229 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6332 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6609 = &this_129(D)->_pair_plat;
  pretmp_6699 = &this_129(D)->_pair_nlat;
  pretmp_6789 = &this_129(D)->_pair_flat;
  pretmp_6879 = &this_129(D)->_sent_packets;
  pretmp_6969 = &this_129(D)->_accepted_packets;
  pretmp_7059 = &this_129(D)->_sent_flits;
  pretmp_7149 = &this_129(D)->_accepted_flits;
  pretmp_7239 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L729>:

<L371>:
  D.73830 ={v} {CLOBBER};
  # DEBUG this => &D.73831
  # DEBUG this => &D.73831
  # DEBUG this => &D.73831
  _1694 = MEM[(char * *)&D.73831];
  # DEBUG D#1 => &D.73831
  # DEBUG this => D#1
  # DEBUG this => &D.73831
  if (&D.73831.D.11539._M_local_buf != _1694)
    goto <bb 1792>;
  else
    goto <bb 1793>;

  <bb 1792>:
  # DEBUG D#629 => D.73831.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73831
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73831
  # DEBUG this => D#1
  # DEBUG this => &D.73831
  # DEBUG D#626 => &D.73831._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1694
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1694
  # DEBUG this => D#620
  # DEBUG D.153106 => D#621
  operator delete (_1694);

  <bb 1793>:
  # DEBUG D#630 => &D.73831._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73831 ={v} {CLOBBER};
  resx 501

<L965>:
  pretmp_6230 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6330 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6607 = &this_129(D)->_pair_plat;
  pretmp_6697 = &this_129(D)->_pair_nlat;
  pretmp_6787 = &this_129(D)->_pair_flat;
  pretmp_6877 = &this_129(D)->_sent_packets;
  pretmp_6967 = &this_129(D)->_accepted_packets;
  pretmp_7057 = &this_129(D)->_sent_flits;
  pretmp_7147 = &this_129(D)->_accepted_flits;
  pretmp_7237 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L373>:
  # DEBUG this => &D.73833
  # DEBUG this => &D.73833
  # DEBUG this => &D.73833
  _1130 = MEM[(char * *)&D.73833];
  # DEBUG D#1 => &D.73833
  # DEBUG this => D#1
  # DEBUG this => &D.73833
  if (&D.73833.D.11539._M_local_buf != _1130)
    goto <bb 1796>;
  else
    goto <bb 1797>;

  <bb 1796>:
  # DEBUG D#629 => D.73833.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73833
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73833
  # DEBUG this => D#1
  # DEBUG this => &D.73833
  # DEBUG D#626 => &D.73833._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1130
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1130
  # DEBUG this => D#620
  # DEBUG D.153123 => D#621
  operator delete (_1130);

  <bb 1797>:
  # DEBUG D#630 => &D.73833._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73833 ={v} {CLOBBER};
  resx 507

<L966>:
  pretmp_5950 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6326 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6603 = &this_129(D)->_pair_plat;
  pretmp_6693 = &this_129(D)->_pair_nlat;
  pretmp_6783 = &this_129(D)->_pair_flat;
  pretmp_6873 = &this_129(D)->_sent_packets;
  pretmp_6963 = &this_129(D)->_accepted_packets;
  pretmp_7053 = &this_129(D)->_sent_flits;
  pretmp_7143 = &this_129(D)->_accepted_flits;
  pretmp_7233 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L375>:
  # DEBUG this => &D.73835
  # DEBUG this => &D.73835
  # DEBUG this => &D.73835
  _1690 = MEM[(char * *)&D.73835];
  # DEBUG D#1 => &D.73835
  # DEBUG this => D#1
  # DEBUG this => &D.73835
  if (&D.73835.D.11539._M_local_buf != _1690)
    goto <bb 1800>;
  else
    goto <bb 1801>;

  <bb 1800>:
  # DEBUG D#629 => D.73835.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73835
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73835
  # DEBUG this => D#1
  # DEBUG this => &D.73835
  # DEBUG D#626 => &D.73835._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1690
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1690
  # DEBUG this => D#620
  # DEBUG D.153140 => D#621
  operator delete (_1690);

  <bb 1801>:
  # DEBUG D#630 => &D.73835._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73835 ={v} {CLOBBER};
  resx 511

<L967>:
  pretmp_5951 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6324 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6601 = &this_129(D)->_pair_plat;
  pretmp_6691 = &this_129(D)->_pair_nlat;
  pretmp_6781 = &this_129(D)->_pair_flat;
  pretmp_6871 = &this_129(D)->_sent_packets;
  pretmp_6961 = &this_129(D)->_accepted_packets;
  pretmp_7051 = &this_129(D)->_sent_flits;
  pretmp_7141 = &this_129(D)->_accepted_flits;
  pretmp_7231 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L377>:
  # DEBUG this => &D.73837
  # DEBUG this => &D.73837
  # DEBUG this => &D.73837
  _1688 = MEM[(char * *)&D.73837];
  # DEBUG D#1 => &D.73837
  # DEBUG this => D#1
  # DEBUG this => &D.73837
  if (&D.73837.D.11539._M_local_buf != _1688)
    goto <bb 1804>;
  else
    goto <bb 1805>;

  <bb 1804>:
  # DEBUG D#629 => D.73837.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73837
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73837
  # DEBUG this => D#1
  # DEBUG this => &D.73837
  # DEBUG D#626 => &D.73837._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1688
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1688
  # DEBUG this => D#620
  # DEBUG D.153157 => D#621
  operator delete (_1688);

  <bb 1805>:
  # DEBUG D#630 => &D.73837._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73837 ={v} {CLOBBER};
  resx 515

<L968>:
  pretmp_6148 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6322 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6599 = &this_129(D)->_pair_plat;
  pretmp_6689 = &this_129(D)->_pair_nlat;
  pretmp_6779 = &this_129(D)->_pair_flat;
  pretmp_6869 = &this_129(D)->_sent_packets;
  pretmp_6959 = &this_129(D)->_accepted_packets;
  pretmp_7049 = &this_129(D)->_sent_flits;
  pretmp_7139 = &this_129(D)->_accepted_flits;
  pretmp_7229 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L379>:
  # DEBUG this => &D.73840
  # DEBUG this => &D.73840
  # DEBUG this => &D.73840
  _1686 = MEM[(char * *)&D.73840];
  # DEBUG D#1 => &D.73840
  # DEBUG this => D#1
  # DEBUG this => &D.73840
  if (&D.73840.D.11539._M_local_buf != _1686)
    goto <bb 1808>;
  else
    goto <bb 1809>;

  <bb 1808>:
  # DEBUG D#629 => D.73840.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73840
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73840
  # DEBUG this => D#1
  # DEBUG this => &D.73840
  # DEBUG D#626 => &D.73840._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1686
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1686
  # DEBUG this => D#620
  # DEBUG D.153174 => D#621
  operator delete (_1686);

  <bb 1809>:
  # DEBUG D#630 => &D.73840._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73840 ={v} {CLOBBER};
  resx 519

<L969>:
  pretmp_5925 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6317 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6594 = &this_129(D)->_pair_plat;
  pretmp_6684 = &this_129(D)->_pair_nlat;
  pretmp_6774 = &this_129(D)->_pair_flat;
  pretmp_6864 = &this_129(D)->_sent_packets;
  pretmp_6954 = &this_129(D)->_accepted_packets;
  pretmp_7044 = &this_129(D)->_sent_flits;
  pretmp_7134 = &this_129(D)->_accepted_flits;
  pretmp_7224 = &this_129(D)->_stats;
  goto <bb 2000> (<L445>);

<L382>:
  # DEBUG this => &D.73843
  # DEBUG this => &D.73843
  # DEBUG this => &D.73843
  _1684 = MEM[(char * *)&D.73843];
  # DEBUG D#1 => &D.73843
  # DEBUG this => D#1
  # DEBUG this => &D.73843
  if (&D.73843.D.11539._M_local_buf != _1684)
    goto <bb 1812>;
  else
    goto <bb 1813>;

  <bb 1812>:
  # DEBUG D#629 => D.73843.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73843
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73843
  # DEBUG this => D#1
  # DEBUG this => &D.73843
  # DEBUG D#626 => &D.73843._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1684
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1684
  # DEBUG this => D#620
  # DEBUG D.153191 => D#621
  operator delete (_1684);

  <bb 1813>:
  # DEBUG D#630 => &D.73843._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73843 ={v} {CLOBBER};
  resx 527

<L970>:
  pretmp_5109 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_5880 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6409 = &this_129(D)->_pair_plat;
  pretmp_6415 = &this_129(D)->_pair_nlat;
  pretmp_6421 = &this_129(D)->_pair_flat;
  pretmp_6427 = &this_129(D)->_sent_packets;
  pretmp_6433 = &this_129(D)->_accepted_packets;
  pretmp_6439 = &this_129(D)->_sent_flits;
  pretmp_6445 = &this_129(D)->_accepted_flits;
  pretmp_6451 = &this_129(D)->_stats;
  goto <bb 1995> (<L444>);

<L385>:
  # DEBUG this => &D.73849
  # DEBUG this => &D.73849
  # DEBUG this => &D.73849
  _1681 = MEM[(char * *)&D.73849];
  # DEBUG D#1 => &D.73849
  # DEBUG this => D#1
  # DEBUG this => &D.73849
  if (&D.73849.D.11539._M_local_buf != _1681)
    goto <bb 1816>;
  else
    goto <bb 1817>;

  <bb 1816>:
  # DEBUG D#629 => D.73849.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73849
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73849
  # DEBUG this => D#1
  # DEBUG this => &D.73849
  # DEBUG D#626 => &D.73849._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1681
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1681
  # DEBUG this => D#620
  # DEBUG D.153208 => D#621
  operator delete (_1681);

  <bb 1817>:
  # DEBUG D#630 => &D.73849._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73849 ={v} {CLOBBER};
  resx 535

<L971>:
  pretmp_4692 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_5082 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_5876 = &this_129(D)->_pair_plat;
  pretmp_5870 = &this_129(D)->_pair_nlat;
  pretmp_4888 = &this_129(D)->_pair_flat;
  pretmp_5867 = &this_129(D)->_sent_packets;
  pretmp_5868 = &this_129(D)->_accepted_packets;
  pretmp_522 = &this_129(D)->_sent_flits;
  pretmp_6214 = &this_129(D)->_accepted_flits;
  pretmp_5863 = &this_129(D)->_stats;
  goto <bb 1990> (<L443>);

<L388>:
  # DEBUG this => &D.73855
  # DEBUG this => &D.73855
  # DEBUG this => &D.73855
  _1678 = MEM[(char * *)&D.73855];
  # DEBUG D#1 => &D.73855
  # DEBUG this => D#1
  # DEBUG this => &D.73855
  if (&D.73855.D.11539._M_local_buf != _1678)
    goto <bb 1820>;
  else
    goto <bb 1821>;

  <bb 1820>:
  # DEBUG D#629 => D.73855.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73855
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73855
  # DEBUG this => D#1
  # DEBUG this => &D.73855
  # DEBUG D#626 => &D.73855._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1678
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1678
  # DEBUG this => D#620
  # DEBUG D.153225 => D#621
  operator delete (_1678);

  <bb 1821>:
  # DEBUG D#630 => &D.73855._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73855 ={v} {CLOBBER};
  resx 543

<L972>:
  pretmp_5644 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6256 = &this_129(D)->_pair_plat;
  pretmp_374 = &this_129(D)->_pair_nlat;
  pretmp_45 = &this_129(D)->_pair_flat;
  pretmp_13 = &this_129(D)->_sent_packets;
  pretmp_14 = &this_129(D)->_accepted_packets;
  pretmp_5276 = &this_129(D)->_sent_flits;
  pretmp_17 = &this_129(D)->_accepted_flits;
  pretmp_16 = &this_129(D)->_stats;
  goto <bb 1985> (<L442>);

<L391>:
  operator delete (_1188);
  resx 550

<L973>:
  pretmp_4714 = &this_129(D)->_pair_plat;
  pretmp_4776 = &this_129(D)->_pair_nlat;
  pretmp_3805 = &this_129(D)->_pair_flat;
  pretmp_3729 = &this_129(D)->_sent_packets;
  pretmp_3684 = &this_129(D)->_accepted_packets;
  pretmp_3625 = &this_129(D)->_sent_flits;
  pretmp_3549 = &this_129(D)->_accepted_flits;
  pretmp_3489 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

<L392>:
  # DEBUG this => &D.73860
  # DEBUG D#920 => &D.73860.D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D.73860.D.63091._M_impl._M_finish
  # DEBUG D#922 => D.73860.D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D.73860.D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1675 = MEM[(struct _Vector_base *)&D.73860]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1675
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1675
  # DEBUG __n => D#914
  if (_1675 != 0B)
    goto <bb 1826>;
  else
    goto <bb 1827>;

  <bb 1826>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1675
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1675
  # DEBUG this => D#906
  # DEBUG D.153244 => D#907
  operator delete (_1675);

  <bb 1827>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  D.73860 ={v} {CLOBBER};
  resx 552

<L974>:
  pretmp_4775 = &this_129(D)->_pair_nlat;
  pretmp_3804 = &this_129(D)->_pair_flat;
  pretmp_3728 = &this_129(D)->_sent_packets;
  pretmp_3683 = &this_129(D)->_accepted_packets;
  pretmp_3638 = &this_129(D)->_sent_flits;
  pretmp_3548 = &this_129(D)->_accepted_flits;
  pretmp_3488 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

<L393>:
  # DEBUG this => &D.73861
  # DEBUG D#920 => &D.73861.D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D.73861.D.63091._M_impl._M_finish
  # DEBUG D#922 => D.73861.D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D.73861.D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1282 = MEM[(struct _Vector_base *)&D.73861]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1282
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1282
  # DEBUG __n => D#914
  if (_1282 != 0B)
    goto <bb 1830>;
  else
    goto <bb 1831>;

  <bb 1830>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1282
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1282
  # DEBUG this => D#906
  # DEBUG D.153259 => D#907
  operator delete (_1282);

  <bb 1831>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  D.73861 ={v} {CLOBBER};
  resx 554

<L975>:
  pretmp_3967 = &this_129(D)->_pair_flat;
  pretmp_3735 = &this_129(D)->_sent_packets;
  pretmp_3691 = &this_129(D)->_accepted_packets;
  pretmp_3635 = &this_129(D)->_sent_flits;
  pretmp_3556 = &this_129(D)->_accepted_flits;
  pretmp_3484 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

<L394>:
  # DEBUG this => &D.73862
  # DEBUG D#920 => &D.73862.D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D.73862.D.63091._M_impl._M_finish
  # DEBUG D#922 => D.73862.D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D.73862.D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1280 = MEM[(struct _Vector_base *)&D.73862]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1280
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1280
  # DEBUG __n => D#914
  if (_1280 != 0B)
    goto <bb 1834>;
  else
    goto <bb 1835>;

  <bb 1834>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1280
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1280
  # DEBUG this => D#906
  # DEBUG D.153274 => D#907
  operator delete (_1280);

  <bb 1835>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  D.73862 ={v} {CLOBBER};
  resx 556

<L976>:
  pretmp_3734 = &this_129(D)->_sent_packets;
  pretmp_3690 = &this_129(D)->_accepted_packets;
  pretmp_3634 = &this_129(D)->_sent_flits;
  pretmp_3555 = &this_129(D)->_accepted_flits;
  pretmp_3483 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

<L395>:
  # DEBUG this => &D.73863
  # DEBUG D#476 => &D.73863.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73863.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73863.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73863.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1278 = MEM[(struct _Vector_base *)&D.73863]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1278
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1278
  # DEBUG __n => D#470
  if (_1278 != 0B)
    goto <bb 1838>;
  else
    goto <bb 1839>;

  <bb 1838>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1278
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1278
  # DEBUG this => D#462
  # DEBUG D.153289 => D#463
  operator delete (_1278);

  <bb 1839>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73863 ={v} {CLOBBER};
  resx 558

<L977>:
  pretmp_4709 = &this_129(D)->_pair_plat;
  pretmp_4770 = &this_129(D)->_pair_nlat;
  pretmp_3966 = &this_129(D)->_pair_flat;
  pretmp_3689 = &this_129(D)->_accepted_packets;
  pretmp_3647 = &this_129(D)->_sent_flits;
  pretmp_3554 = &this_129(D)->_accepted_flits;
  pretmp_3482 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

<L396>:
  # DEBUG this => &D.73864
  # DEBUG D#476 => &D.73864.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73864.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73864.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73864.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1671 = MEM[(struct _Vector_base *)&D.73864]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1671
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1671
  # DEBUG __n => D#470
  if (_1671 != 0B)
    goto <bb 1842>;
  else
    goto <bb 1843>;

  <bb 1842>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1671
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1671
  # DEBUG this => D#462
  # DEBUG D.153304 => D#463
  operator delete (_1671);

  <bb 1843>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73864 ={v} {CLOBBER};
  resx 560

<L978>:
  pretmp_4708 = &this_129(D)->_pair_plat;
  pretmp_4769 = &this_129(D)->_pair_nlat;
  pretmp_3965 = &this_129(D)->_pair_flat;
  pretmp_3646 = &this_129(D)->_sent_flits;
  pretmp_3553 = &this_129(D)->_accepted_flits;
  pretmp_3496 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

<L397>:
  # DEBUG this => &D.73865
  # DEBUG D#476 => &D.73865.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73865.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73865.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73865.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1669 = MEM[(struct _Vector_base *)&D.73865]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1669
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1669
  # DEBUG __n => D#470
  if (_1669 != 0B)
    goto <bb 1846>;
  else
    goto <bb 1847>;

  <bb 1846>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1669
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1669
  # DEBUG this => D#462
  # DEBUG D.153319 => D#463
  operator delete (_1669);

  <bb 1847>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73865 ={v} {CLOBBER};
  resx 562

<L979>:
  pretmp_5705 = &this_129(D)->_pair_plat;
  pretmp_4768 = &this_129(D)->_pair_nlat;
  pretmp_3964 = &this_129(D)->_pair_flat;
  pretmp_3564 = &this_129(D)->_accepted_flits;
  pretmp_3495 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

<L398>:
  # DEBUG this => &D.73866
  # DEBUG D#476 => &D.73866.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D.73866.D.45977._M_impl._M_finish
  # DEBUG D#478 => D.73866.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D.73866.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1667 = MEM[(struct _Vector_base *)&D.73866]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1667
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1667
  # DEBUG __n => D#470
  if (_1667 != 0B)
    goto <bb 1850>;
  else
    goto <bb 1851>;

  <bb 1850>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1667
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1667
  # DEBUG this => D#462
  # DEBUG D.153334 => D#463
  operator delete (_1667);

  <bb 1851>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  D.73866 ={v} {CLOBBER};
  resx 564

<L980>:
  pretmp_5704 = &this_129(D)->_pair_plat;
  pretmp_5717 = &this_129(D)->_pair_nlat;
  pretmp_3961 = &this_129(D)->_pair_flat;
  pretmp_3494 = &this_129(D)->_stats;
  goto <bb 1980> (<L441>);

  # _4663 = PHI <_1369(1053)>
<L399>:
  operator delete (_4663);
  resx 569

<L981>:
  goto <bb 1856> (<L400>);

<L781>:

<L400>:
  # DEBUG this => &D.73871
  # DEBUG this => &D.73871
  # DEBUG this => &D.73871
  _1665 = MEM[(char * *)&D.73871];
  # DEBUG D#1 => &D.73871
  # DEBUG this => D#1
  # DEBUG this => &D.73871
  if (&D.73871.D.11539._M_local_buf != _1665)
    goto <bb 1857>;
  else
    goto <bb 1858>;

  <bb 1857>:
  # DEBUG D#629 => D.73871.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73871
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73871
  # DEBUG this => D#1
  # DEBUG this => &D.73871
  # DEBUG D#626 => &D.73871._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1665
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1665
  # DEBUG this => D#620
  # DEBUG D.153347 => D#621
  operator delete (_1665);

  <bb 1858>:
  # DEBUG D#630 => &D.73871._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73871 ={v} {CLOBBER};
  resx 568

<L982>:
  goto <bb 1977> (<L439>);

<L401>:
  # DEBUG this => &D.73873
  # DEBUG this => &D.73873
  # DEBUG this => &D.73873
  _1635 = MEM[(char * *)&D.73873];
  # DEBUG D#1 => &D.73873
  # DEBUG this => D#1
  # DEBUG this => &D.73873
  if (&D.73873.D.11539._M_local_buf != _1635)
    goto <bb 1861>;
  else
    goto <bb 1862>;

  <bb 1861>:
  # DEBUG D#629 => D.73873.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73873
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73873
  # DEBUG this => D#1
  # DEBUG this => &D.73873
  # DEBUG D#626 => &D.73873._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1635
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1635
  # DEBUG this => D#620
  # DEBUG D.153362 => D#621
  operator delete (_1635);

  <bb 1862>:
  # DEBUG D#630 => &D.73873._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73873 ={v} {CLOBBER};
  resx 572

<L983>:
  goto <bb 1977> (<L439>);

<L402>:
  # DEBUG this => &D.73874
  # DEBUG this => &D.73874
  # DEBUG this => &D.73874
  _1632 = MEM[(char * *)&D.73874];
  # DEBUG D#1 => &D.73874
  # DEBUG this => D#1
  # DEBUG this => &D.73874
  if (&D.73874.D.11539._M_local_buf != _1632)
    goto <bb 1865>;
  else
    goto <bb 1866>;

  <bb 1865>:
  # DEBUG D#629 => D.73874.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73874
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73874
  # DEBUG this => D#1
  # DEBUG this => &D.73874
  # DEBUG D#626 => &D.73874._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1632
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1632
  # DEBUG this => D#620
  # DEBUG D.153377 => D#621
  operator delete (_1632);

  <bb 1866>:
  # DEBUG D#630 => &D.73874._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73874 ={v} {CLOBBER};
  resx 575

<L984>:
  goto <bb 1977> (<L439>);

  # _4662 = PHI <_1388(1073)>
<L404>:
  operator delete (_4662);
  resx 579

<L985>:
  goto <bb 1871> (<L405>);

<L787>:

<L405>:
  # DEBUG this => &D.73877
  # DEBUG this => &D.73877
  # DEBUG this => &D.73877
  _1631 = MEM[(char * *)&D.73877];
  # DEBUG D#1 => &D.73877
  # DEBUG this => D#1
  # DEBUG this => &D.73877
  if (&D.73877.D.11539._M_local_buf != _1631)
    goto <bb 1872>;
  else
    goto <bb 1873>;

  <bb 1872>:
  # DEBUG D#629 => D.73877.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73877
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73877
  # DEBUG this => D#1
  # DEBUG this => &D.73877
  # DEBUG D#626 => &D.73877._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1631
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1631
  # DEBUG this => D#620
  # DEBUG D.153394 => D#621
  operator delete (_1631);

  <bb 1873>:
  # DEBUG D#630 => &D.73877._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73877 ={v} {CLOBBER};
  resx 578

<L986>:
  goto <bb 1977> (<L439>);

<L406>:
  # DEBUG this => &D.73879
  # DEBUG this => &D.73879
  # DEBUG this => &D.73879
  _1628 = MEM[(char * *)&D.73879];
  # DEBUG D#1 => &D.73879
  # DEBUG this => D#1
  # DEBUG this => &D.73879
  if (&D.73879.D.11539._M_local_buf != _1628)
    goto <bb 1876>;
  else
    goto <bb 1877>;

  <bb 1876>:
  # DEBUG D#629 => D.73879.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73879
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73879
  # DEBUG this => D#1
  # DEBUG this => &D.73879
  # DEBUG D#626 => &D.73879._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1628
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1628
  # DEBUG this => D#620
  # DEBUG D.153409 => D#621
  operator delete (_1628);

  <bb 1877>:
  # DEBUG D#630 => &D.73879._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73879 ={v} {CLOBBER};
  resx 582

<L987>:
  goto <bb 1977> (<L439>);

<L407>:
  # DEBUG this => &D.73880
  # DEBUG this => &D.73880
  # DEBUG this => &D.73880
  _1625 = MEM[(char * *)&D.73880];
  # DEBUG D#1 => &D.73880
  # DEBUG this => D#1
  # DEBUG this => &D.73880
  if (&D.73880.D.11539._M_local_buf != _1625)
    goto <bb 1880>;
  else
    goto <bb 1881>;

  <bb 1880>:
  # DEBUG D#629 => D.73880.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73880
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73880
  # DEBUG this => D#1
  # DEBUG this => &D.73880
  # DEBUG D#626 => &D.73880._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1625
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1625
  # DEBUG this => D#620
  # DEBUG D.153424 => D#621
  operator delete (_1625);

  <bb 1881>:
  # DEBUG D#630 => &D.73880._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73880 ={v} {CLOBBER};
  resx 585

<L988>:
  goto <bb 1977> (<L439>);

  # _4661 = PHI <_1406(1093)>
<L409>:
  operator delete (_4661);
  resx 589

<L989>:
  goto <bb 1886> (<L410>);

<L793>:

<L410>:
  # DEBUG this => &D.73883
  # DEBUG this => &D.73883
  # DEBUG this => &D.73883
  _1624 = MEM[(char * *)&D.73883];
  # DEBUG D#1 => &D.73883
  # DEBUG this => D#1
  # DEBUG this => &D.73883
  if (&D.73883.D.11539._M_local_buf != _1624)
    goto <bb 1887>;
  else
    goto <bb 1888>;

  <bb 1887>:
  # DEBUG D#629 => D.73883.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73883
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73883
  # DEBUG this => D#1
  # DEBUG this => &D.73883
  # DEBUG D#626 => &D.73883._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1624
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1624
  # DEBUG this => D#620
  # DEBUG D.153441 => D#621
  operator delete (_1624);

  <bb 1888>:
  # DEBUG D#630 => &D.73883._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73883 ={v} {CLOBBER};
  resx 588

<L990>:
  goto <bb 1977> (<L439>);

<L411>:
  # DEBUG this => &D.73885
  # DEBUG this => &D.73885
  # DEBUG this => &D.73885
  _1621 = MEM[(char * *)&D.73885];
  # DEBUG D#1 => &D.73885
  # DEBUG this => D#1
  # DEBUG this => &D.73885
  if (&D.73885.D.11539._M_local_buf != _1621)
    goto <bb 1891>;
  else
    goto <bb 1892>;

  <bb 1891>:
  # DEBUG D#629 => D.73885.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73885
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73885
  # DEBUG this => D#1
  # DEBUG this => &D.73885
  # DEBUG D#626 => &D.73885._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1621
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1621
  # DEBUG this => D#620
  # DEBUG D.153456 => D#621
  operator delete (_1621);

  <bb 1892>:
  # DEBUG D#630 => &D.73885._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73885 ={v} {CLOBBER};
  resx 592

<L991>:
  goto <bb 1977> (<L439>);

<L412>:
  # DEBUG this => &D.73886
  # DEBUG this => &D.73886
  # DEBUG this => &D.73886
  _1618 = MEM[(char * *)&D.73886];
  # DEBUG D#1 => &D.73886
  # DEBUG this => D#1
  # DEBUG this => &D.73886
  if (&D.73886.D.11539._M_local_buf != _1618)
    goto <bb 1895>;
  else
    goto <bb 1896>;

  <bb 1895>:
  # DEBUG D#629 => D.73886.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73886
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73886
  # DEBUG this => D#1
  # DEBUG this => &D.73886
  # DEBUG D#626 => &D.73886._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1618
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1618
  # DEBUG this => D#620
  # DEBUG D.153471 => D#621
  operator delete (_1618);

  <bb 1896>:
  # DEBUG D#630 => &D.73886._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73886 ={v} {CLOBBER};
  resx 595

<L992>:
  goto <bb 1977> (<L439>);

  # _4655 = PHI <_1422(1113)>
<L414>:
  operator delete (_4655);
  resx 599

<L993>:
  goto <bb 1901> (<L415>);

<L799>:

<L415>:
  # DEBUG this => &D.73889
  # DEBUG this => &D.73889
  # DEBUG this => &D.73889
  _1617 = MEM[(char * *)&D.73889];
  # DEBUG D#1 => &D.73889
  # DEBUG this => D#1
  # DEBUG this => &D.73889
  if (&D.73889.D.11539._M_local_buf != _1617)
    goto <bb 1902>;
  else
    goto <bb 1903>;

  <bb 1902>:
  # DEBUG D#629 => D.73889.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73889
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73889
  # DEBUG this => D#1
  # DEBUG this => &D.73889
  # DEBUG D#626 => &D.73889._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1617
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1617
  # DEBUG this => D#620
  # DEBUG D.153488 => D#621
  operator delete (_1617);

  <bb 1903>:
  # DEBUG D#630 => &D.73889._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73889 ={v} {CLOBBER};
  resx 598

<L994>:
  goto <bb 1977> (<L439>);

<L416>:
  # DEBUG this => &D.73891
  # DEBUG this => &D.73891
  # DEBUG this => &D.73891
  _1614 = MEM[(char * *)&D.73891];
  # DEBUG D#1 => &D.73891
  # DEBUG this => D#1
  # DEBUG this => &D.73891
  if (&D.73891.D.11539._M_local_buf != _1614)
    goto <bb 1906>;
  else
    goto <bb 1907>;

  <bb 1906>:
  # DEBUG D#629 => D.73891.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73891
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73891
  # DEBUG this => D#1
  # DEBUG this => &D.73891
  # DEBUG D#626 => &D.73891._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1614
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1614
  # DEBUG this => D#620
  # DEBUG D.153503 => D#621
  operator delete (_1614);

  <bb 1907>:
  # DEBUG D#630 => &D.73891._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73891 ={v} {CLOBBER};
  resx 602

<L995>:
  goto <bb 1977> (<L439>);

<L417>:
  # DEBUG this => &D.73892
  # DEBUG this => &D.73892
  # DEBUG this => &D.73892
  _1611 = MEM[(char * *)&D.73892];
  # DEBUG D#1 => &D.73892
  # DEBUG this => D#1
  # DEBUG this => &D.73892
  if (&D.73892.D.11539._M_local_buf != _1611)
    goto <bb 1910>;
  else
    goto <bb 1911>;

  <bb 1910>:
  # DEBUG D#629 => D.73892.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73892
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73892
  # DEBUG this => D#1
  # DEBUG this => &D.73892
  # DEBUG D#626 => &D.73892._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1611
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1611
  # DEBUG this => D#620
  # DEBUG D.153518 => D#621
  operator delete (_1611);

  <bb 1911>:
  # DEBUG D#630 => &D.73892._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73892 ={v} {CLOBBER};
  resx 605

<L996>:
  goto <bb 1977> (<L439>);

  # _4654 = PHI <_1439(1133)>
<L419>:
  operator delete (_4654);
  resx 609

<L997>:
  goto <bb 1916> (<L420>);

<L805>:

<L420>:
  # DEBUG this => &D.73895
  # DEBUG this => &D.73895
  # DEBUG this => &D.73895
  _1610 = MEM[(char * *)&D.73895];
  # DEBUG D#1 => &D.73895
  # DEBUG this => D#1
  # DEBUG this => &D.73895
  if (&D.73895.D.11539._M_local_buf != _1610)
    goto <bb 1917>;
  else
    goto <bb 1918>;

  <bb 1917>:
  # DEBUG D#629 => D.73895.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73895
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73895
  # DEBUG this => D#1
  # DEBUG this => &D.73895
  # DEBUG D#626 => &D.73895._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1610
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1610
  # DEBUG this => D#620
  # DEBUG D.153535 => D#621
  operator delete (_1610);

  <bb 1918>:
  # DEBUG D#630 => &D.73895._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73895 ={v} {CLOBBER};
  resx 608

<L998>:
  goto <bb 1977> (<L439>);

<L421>:
  # DEBUG this => &D.73897
  # DEBUG this => &D.73897
  # DEBUG this => &D.73897
  _1607 = MEM[(char * *)&D.73897];
  # DEBUG D#1 => &D.73897
  # DEBUG this => D#1
  # DEBUG this => &D.73897
  if (&D.73897.D.11539._M_local_buf != _1607)
    goto <bb 1921>;
  else
    goto <bb 1922>;

  <bb 1921>:
  # DEBUG D#629 => D.73897.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73897
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73897
  # DEBUG this => D#1
  # DEBUG this => &D.73897
  # DEBUG D#626 => &D.73897._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1607
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1607
  # DEBUG this => D#620
  # DEBUG D.153550 => D#621
  operator delete (_1607);

  <bb 1922>:
  # DEBUG D#630 => &D.73897._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73897 ={v} {CLOBBER};
  resx 612

<L999>:
  goto <bb 1977> (<L439>);

<L422>:
  # DEBUG this => &D.73898
  # DEBUG this => &D.73898
  # DEBUG this => &D.73898
  _1604 = MEM[(char * *)&D.73898];
  # DEBUG D#1 => &D.73898
  # DEBUG this => D#1
  # DEBUG this => &D.73898
  if (&D.73898.D.11539._M_local_buf != _1604)
    goto <bb 1925>;
  else
    goto <bb 1926>;

  <bb 1925>:
  # DEBUG D#629 => D.73898.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73898
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73898
  # DEBUG this => D#1
  # DEBUG this => &D.73898
  # DEBUG D#626 => &D.73898._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1604
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1604
  # DEBUG this => D#620
  # DEBUG D.153565 => D#621
  operator delete (_1604);

  <bb 1926>:
  # DEBUG D#630 => &D.73898._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73898 ={v} {CLOBBER};
  resx 615

<L1000>:
  goto <bb 1977> (<L439>);

  # _4650 = PHI <_1493(1199)>
<L424>:
  operator delete (_4650);
  resx 619

<L1001>:
  goto <bb 1931> (<L425>);

<L822>:

<L425>:
  # DEBUG this => &D.73905
  # DEBUG this => &D.73905
  # DEBUG this => &D.73905
  _1603 = MEM[(char * *)&D.73905];
  # DEBUG D#1 => &D.73905
  # DEBUG this => D#1
  # DEBUG this => &D.73905
  if (&D.73905.D.11539._M_local_buf != _1603)
    goto <bb 1932>;
  else
    goto <bb 1933>;

  <bb 1932>:
  # DEBUG D#629 => D.73905.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73905
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73905
  # DEBUG this => D#1
  # DEBUG this => &D.73905
  # DEBUG D#626 => &D.73905._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1603
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1603
  # DEBUG this => D#620
  # DEBUG D.153582 => D#621
  operator delete (_1603);

  <bb 1933>:
  # DEBUG D#630 => &D.73905._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73905 ={v} {CLOBBER};
  resx 618

<L1002>:
  goto <bb 1977> (<L439>);

<L426>:
  # DEBUG this => &D.73907
  # DEBUG this => &D.73907
  # DEBUG this => &D.73907
  _1596 = MEM[(char * *)&D.73907];
  # DEBUG D#1 => &D.73907
  # DEBUG this => D#1
  # DEBUG this => &D.73907
  if (&D.73907.D.11539._M_local_buf != _1596)
    goto <bb 1936>;
  else
    goto <bb 1937>;

  <bb 1936>:
  # DEBUG D#629 => D.73907.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73907
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73907
  # DEBUG this => D#1
  # DEBUG this => &D.73907
  # DEBUG D#626 => &D.73907._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1596
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1596
  # DEBUG this => D#620
  # DEBUG D.153597 => D#621
  operator delete (_1596);

  <bb 1937>:
  # DEBUG D#630 => &D.73907._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73907 ={v} {CLOBBER};
  resx 622

<L1003>:
  goto <bb 1977> (<L439>);

<L825>:

<L427>:
  # DEBUG this => &D.73908
  # DEBUG this => &D.73908
  # DEBUG this => &D.73908
  _1593 = MEM[(char * *)&D.73908];
  # DEBUG D#1 => &D.73908
  # DEBUG this => D#1
  # DEBUG this => &D.73908
  if (&D.73908.D.11539._M_local_buf != _1593)
    goto <bb 1941>;
  else
    goto <bb 1942>;

  <bb 1941>:
  # DEBUG D#629 => D.73908.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73908
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73908
  # DEBUG this => D#1
  # DEBUG this => &D.73908
  # DEBUG D#626 => &D.73908._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1593
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1593
  # DEBUG this => D#620
  # DEBUG D.153612 => D#621
  operator delete (_1593);

  <bb 1942>:
  # DEBUG D#630 => &D.73908._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73908 ={v} {CLOBBER};
  resx 625

<L1004>:
  goto <bb 1977> (<L439>);

  # _4639 = PHI <_1523(1231)>
<L429>:
  operator delete (_4639);
  resx 629

<L1005>:
  goto <bb 1947> (<L430>);

<L834>:

<L430>:
  # DEBUG this => &D.73911
  # DEBUG this => &D.73911
  # DEBUG this => &D.73911
  _1592 = MEM[(char * *)&D.73911];
  # DEBUG D#1 => &D.73911
  # DEBUG this => D#1
  # DEBUG this => &D.73911
  if (&D.73911.D.11539._M_local_buf != _1592)
    goto <bb 1948>;
  else
    goto <bb 1949>;

  <bb 1948>:
  # DEBUG D#629 => D.73911.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73911
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73911
  # DEBUG this => D#1
  # DEBUG this => &D.73911
  # DEBUG D#626 => &D.73911._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1592
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1592
  # DEBUG this => D#620
  # DEBUG D.153629 => D#621
  operator delete (_1592);

  <bb 1949>:
  # DEBUG D#630 => &D.73911._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73911 ={v} {CLOBBER};
  resx 628

<L1006>:
  goto <bb 1977> (<L439>);

<L431>:
  # DEBUG this => &D.73913
  # DEBUG this => &D.73913
  # DEBUG this => &D.73913
  _1589 = MEM[(char * *)&D.73913];
  # DEBUG D#1 => &D.73913
  # DEBUG this => D#1
  # DEBUG this => &D.73913
  if (&D.73913.D.11539._M_local_buf != _1589)
    goto <bb 1952>;
  else
    goto <bb 1953>;

  <bb 1952>:
  # DEBUG D#629 => D.73913.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73913
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73913
  # DEBUG this => D#1
  # DEBUG this => &D.73913
  # DEBUG D#626 => &D.73913._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1589
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1589
  # DEBUG this => D#620
  # DEBUG D.153644 => D#621
  operator delete (_1589);

  <bb 1953>:
  # DEBUG D#630 => &D.73913._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73913 ={v} {CLOBBER};
  resx 632

<L1007>:
  goto <bb 1977> (<L439>);

<L837>:

<L432>:
  # DEBUG this => &D.73914
  # DEBUG this => &D.73914
  # DEBUG this => &D.73914
  _1586 = MEM[(char * *)&D.73914];
  # DEBUG D#1 => &D.73914
  # DEBUG this => D#1
  # DEBUG this => &D.73914
  if (&D.73914.D.11539._M_local_buf != _1586)
    goto <bb 1957>;
  else
    goto <bb 1958>;

  <bb 1957>:
  # DEBUG D#629 => D.73914.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73914
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73914
  # DEBUG this => D#1
  # DEBUG this => &D.73914
  # DEBUG D#626 => &D.73914._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1586
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1586
  # DEBUG this => D#620
  # DEBUG D.153659 => D#621
  operator delete (_1586);

  <bb 1958>:
  # DEBUG D#630 => &D.73914._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73914 ={v} {CLOBBER};
  resx 635

<L1008>:
  goto <bb 1977> (<L439>);

  # _4638 = PHI <_1554(1263)>
<L434>:
  operator delete (_4638);
  resx 639

<L1009>:
  goto <bb 1963> (<L435>);

<L846>:

<L435>:
  # DEBUG this => &D.73917
  # DEBUG this => &D.73917
  # DEBUG this => &D.73917
  _1585 = MEM[(char * *)&D.73917];
  # DEBUG D#1 => &D.73917
  # DEBUG this => D#1
  # DEBUG this => &D.73917
  if (&D.73917.D.11539._M_local_buf != _1585)
    goto <bb 1964>;
  else
    goto <bb 1965>;

  <bb 1964>:
  # DEBUG D#629 => D.73917.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73917
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73917
  # DEBUG this => D#1
  # DEBUG this => &D.73917
  # DEBUG D#626 => &D.73917._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1585
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1585
  # DEBUG this => D#620
  # DEBUG D.153676 => D#621
  operator delete (_1585);

  <bb 1965>:
  # DEBUG D#630 => &D.73917._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73917 ={v} {CLOBBER};
  resx 638

<L1010>:
  goto <bb 1977> (<L439>);

<L436>:
  # DEBUG this => &D.73919
  # DEBUG this => &D.73919
  # DEBUG this => &D.73919
  _1582 = MEM[(char * *)&D.73919];
  # DEBUG D#1 => &D.73919
  # DEBUG this => D#1
  # DEBUG this => &D.73919
  if (&D.73919.D.11539._M_local_buf != _1582)
    goto <bb 1968>;
  else
    goto <bb 1969>;

  <bb 1968>:
  # DEBUG D#629 => D.73919.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73919
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73919
  # DEBUG this => D#1
  # DEBUG this => &D.73919
  # DEBUG D#626 => &D.73919._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1582
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1582
  # DEBUG this => D#620
  # DEBUG D.153691 => D#621
  operator delete (_1582);

  <bb 1969>:
  # DEBUG D#630 => &D.73919._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73919 ={v} {CLOBBER};
  resx 642

<L1011>:
  goto <bb 1977> (<L439>);

<L849>:

<L437>:
  # DEBUG this => &D.73920
  # DEBUG this => &D.73920
  # DEBUG this => &D.73920
  _1579 = MEM[(char * *)&D.73920];
  # DEBUG D#1 => &D.73920
  # DEBUG this => D#1
  # DEBUG this => &D.73920
  if (&D.73920.D.11539._M_local_buf != _1579)
    goto <bb 1973>;
  else
    goto <bb 1974>;

  <bb 1973>:
  # DEBUG D#629 => D.73920.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &D.73920
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &D.73920
  # DEBUG this => D#1
  # DEBUG this => &D.73920
  # DEBUG D#626 => &D.73920._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1579
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1579
  # DEBUG this => D#620
  # DEBUG D.153706 => D#621
  operator delete (_1579);

  <bb 1974>:
  # DEBUG D#630 => &D.73920._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  D.73920 ={v} {CLOBBER};
  resx 645

<L1012>:
  goto <bb 1977> (<L439>);

<L778>:

<L439>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&tmp_name);
  resx 567

<L1013>:
  pretmp_4738 = &this_129(D)->_pair_plat;
  pretmp_4783 = &this_129(D)->_pair_nlat;
  pretmp_3778 = &this_129(D)->_pair_flat;
  goto <bb 1980> (<L441>);

<L743>:
  pretmp_4697 = &this_129(D)->_pair_plat;
  pretmp_4740 = &this_129(D)->_pair_nlat;
  pretmp_3928 = &this_129(D)->_pair_flat;
  pretmp_3770 = &this_129(D)->_sent_packets;
  pretmp_3720 = &this_129(D)->_accepted_packets;
  pretmp_3679 = &this_129(D)->_sent_flits;
  pretmp_3619 = &this_129(D)->_accepted_flits;
  pretmp_3531 = &this_129(D)->_stats;

  # prephitmp_4739 = PHI <pretmp_4697(1979), pretmp_4698(952), pretmp_4699(1285), pretmp_4702(956), pretmp_4703(959), pretmp_4704(961), pretmp_4705(963), pretmp_5660(965), pretmp_5661(967), pretmp_5662(969), pretmp_5663(971), pretmp_5672(973), pretmp_5673(975), pretmp_5674(977), pretmp_5675(979), pretmp_5690(981), pretmp_5691(983), pretmp_5692(985), pretmp_5693(987), pretmp_5702(989), pretmp_5703(991), pretmp_5704(1852), pretmp_5705(1848), pretmp_4708(1844), pretmp_4709(1840), _1260(1836), _1260(1832), pretmp_4710(1004), pretmp_4711(1006), _1260(1828), pretmp_4714(1824), pretmp_4715(1011), pretmp_4716(1013), pretmp_4717(1015), pretmp_4720(1297), pretmp_4721(1291), pretmp_4722(1020), pretmp_4723(1022), pretmp_4726(1024), pretmp_4727(1042), pretmp_4728(1040), pretmp_4729(1029), pretmp_4732(1031), pretmp_4733(1033), pretmp_4734(1038), pretmp_4735(1046), pretmp_4738(1978)>
  # prephitmp_3927 = PHI <pretmp_4740(1979), pretmp_4741(952), pretmp_4744(1285), pretmp_4745(956), pretmp_4746(959), pretmp_4747(961), pretmp_4750(963), pretmp_4751(965), pretmp_4752(967), pretmp_4753(969), pretmp_4756(971), pretmp_4757(973), pretmp_4758(975), pretmp_4759(977), pretmp_4762(979), pretmp_4763(981), pretmp_4764(983), pretmp_4765(985), pretmp_5714(987), pretmp_5715(989), pretmp_5716(991), pretmp_5717(1852), pretmp_4768(1848), pretmp_4769(1844), pretmp_4770(1840), _1267(1836), _1267(1832), pretmp_4771(1004), pretmp_4774(1006), pretmp_4775(1828), pretmp_4776(1824), pretmp_4777(1011), pretmp_5721(1013), pretmp_5722(1015), pretmp_5723(1297), pretmp_5724(1291), pretmp_5727(1020), pretmp_5728(1022), pretmp_5729(1024), pretmp_5732(1042), pretmp_5733(1040), pretmp_5734(1029), pretmp_5735(1031), pretmp_4780(1033), pretmp_4781(1038), pretmp_4782(1046), pretmp_4783(1978)>
  # prephitmp_3769 = PHI <pretmp_3928(1979), pretmp_3929(952), pretmp_3932(1285), pretmp_3933(956), pretmp_3934(959), pretmp_3935(961), pretmp_3938(963), pretmp_3939(965), pretmp_3940(967), pretmp_3941(969), pretmp_3944(971), pretmp_3945(973), pretmp_3946(975), pretmp_3949(977), pretmp_3950(979), pretmp_3951(981), pretmp_3954(983), pretmp_3955(985), pretmp_3956(987), pretmp_3959(989), pretmp_3960(991), pretmp_3961(1852), pretmp_3964(1848), pretmp_3965(1844), pretmp_3966(1840), _1274(1836), pretmp_3967(1832), pretmp_3802(1004), pretmp_3803(1006), pretmp_3804(1828), pretmp_3805(1824), pretmp_3796(1011), pretmp_3797(1013), pretmp_3798(1015), pretmp_3799(1297), pretmp_3790(1291), pretmp_3791(1020), pretmp_3792(1022), pretmp_3793(1024), pretmp_3781(1042), pretmp_3782(1040), pretmp_3783(1029), pretmp_3784(1031), pretmp_3775(1033), pretmp_3776(1038), pretmp_3777(1046), pretmp_3778(1978)>
  # prephitmp_3730 = PHI <pretmp_3770(1979), pretmp_3771(952), _1295(1285), pretmp_3772(956), pretmp_3760(959), pretmp_3761(961), pretmp_3762(963), pretmp_3763(965), pretmp_3754(967), pretmp_3755(969), pretmp_3756(971), pretmp_3757(973), pretmp_3748(975), pretmp_3749(977), pretmp_3750(979), pretmp_3751(981), pretmp_3739(983), pretmp_3740(985), pretmp_3741(987), pretmp_3742(989), pretmp_3733(991), _1295(1852), _1295(1848), _1295(1844), _1295(1840), pretmp_3734(1836), pretmp_3735(1832), pretmp_3736(1004), pretmp_3727(1006), pretmp_3728(1828), pretmp_3729(1824), _1295(1011), _1295(1013), _1295(1015), _1295(1297), _1295(1291), _1295(1020), _1295(1022), _1295(1024), _1295(1042), _1295(1040), _1295(1029), _1295(1031), _1295(1033), _1295(1038), _1295(1046), _1295(1978)>
  # prephitmp_3678 = PHI <pretmp_3720(1979), pretmp_3721(952), _1314(1285), pretmp_3722(956), pretmp_3723(959), pretmp_3714(961), pretmp_3715(963), pretmp_3716(965), pretmp_3717(967), pretmp_3708(969), pretmp_3709(971), pretmp_3710(973), pretmp_3711(975), pretmp_3701(977), pretmp_3702(979), pretmp_3703(981), pretmp_3704(983), pretmp_3695(985), pretmp_3696(987), pretmp_3697(989), pretmp_3698(991), _1314(1852), _1314(1848), _1314(1844), pretmp_3689(1840), pretmp_3690(1836), pretmp_3691(1832), pretmp_3692(1004), pretmp_3682(1006), pretmp_3683(1828), pretmp_3684(1824), pretmp_3685(1011), pretmp_3676(1013), pretmp_3677(1015), _1314(1297), _1314(1291), _1314(1020), _1314(1022), _1314(1024), _1314(1042), _1314(1040), _1314(1029), _1314(1031), _1314(1033), _1314(1038), _1314(1046), _1314(1978)>
  # prephitmp_3618 = PHI <pretmp_3679(1979), pretmp_3670(952), _1332(1285), pretmp_3671(956), pretmp_3672(959), pretmp_3673(961), pretmp_3663(963), pretmp_3664(965), pretmp_3665(967), pretmp_3666(969), pretmp_3657(971), pretmp_3658(973), pretmp_3659(975), pretmp_3660(977), pretmp_3651(979), pretmp_3652(981), pretmp_3653(983), pretmp_3654(985), pretmp_3643(987), pretmp_3644(989), pretmp_3645(991), _1332(1852), _1332(1848), pretmp_3646(1844), pretmp_3647(1840), pretmp_3634(1836), pretmp_3635(1832), pretmp_3636(1004), pretmp_3637(1006), pretmp_3638(1828), pretmp_3625(1824), pretmp_3626(1011), pretmp_3627(1013), pretmp_3628(1015), _1332(1297), _1332(1291), pretmp_3629(1020), pretmp_3616(1022), pretmp_3617(1024), _1332(1042), _1332(1040), _1332(1029), _1332(1031), _1332(1033), _1332(1038), _1332(1046), _1332(1978)>
  # prephitmp_3530 = PHI <pretmp_3619(1979), pretmp_3620(952), _1350(1285), pretmp_3589(956), pretmp_3590(959), pretmp_3591(961), pretmp_3592(963), pretmp_3593(965), pretmp_3580(967), pretmp_3581(969), pretmp_3582(971), pretmp_3583(973), pretmp_3584(975), pretmp_3571(977), pretmp_3572(979), pretmp_3573(981), pretmp_3574(983), pretmp_3575(985), pretmp_3561(987), pretmp_3562(989), pretmp_3563(991), _1350(1852), pretmp_3564(1848), pretmp_3553(1844), pretmp_3554(1840), pretmp_3555(1836), pretmp_3556(1832), pretmp_3546(1004), pretmp_3547(1006), pretmp_3548(1828), pretmp_3549(1824), pretmp_3539(1011), pretmp_3540(1013), pretmp_3541(1015), _1350(1297), _1350(1291), pretmp_3542(1020), pretmp_3534(1022), pretmp_3535(1024), _1350(1042), _1350(1040), pretmp_3536(1029), pretmp_3537(1031), pretmp_3529(1033), _1350(1038), _1350(1046), _1350(1978)>
  # prephitmp_3452 = PHI <pretmp_3531(1979), pretmp_3532(952), pretmp_3432(1285), pretmp_3524(956), pretmp_3525(959), pretmp_3526(961), pretmp_3527(963), pretmp_3514(965), pretmp_3515(967), pretmp_3516(969), pretmp_3517(971), pretmp_3503(973), pretmp_3504(975), pretmp_3505(977), pretmp_3506(979), pretmp_3507(981), pretmp_3509(983), pretmp_3510(985), pretmp_3511(987), pretmp_3512(989), pretmp_3493(991), pretmp_3494(1852), pretmp_3495(1848), pretmp_3496(1844), pretmp_3482(1840), pretmp_3483(1836), pretmp_3484(1832), pretmp_3485(1004), pretmp_3486(1006), pretmp_3488(1828), pretmp_3489(1824), pretmp_3490(1011), pretmp_3491(1013), pretmp_3472(1015), pretmp_3473(1297), pretmp_3474(1291), pretmp_3475(1020), pretmp_3461(1022), pretmp_3462(1024), pretmp_3463(1042), pretmp_3464(1040), pretmp_3465(1029), pretmp_3467(1031), pretmp_3468(1033), pretmp_3469(1038), pretmp_3432(1046), pretmp_3432(1978)>
<L441>:
  tmp_name ={v} {CLOBBER};
  # DEBUG this => &stats_out_file
  # DEBUG this => &stats_out_file
  # DEBUG this => &stats_out_file
  _1578 = MEM[(char * *)&stats_out_file];
  # DEBUG D#1 => &stats_out_file
  # DEBUG this => D#1
  # DEBUG this => &stats_out_file
  if (&stats_out_file.D.11539._M_local_buf != _1578)
    goto <bb 1981>;
  else
    goto <bb 1982>;

  <bb 1981>:
  # DEBUG D#629 => stats_out_file.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &stats_out_file
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &stats_out_file
  # DEBUG this => D#1
  # DEBUG this => &stats_out_file
  # DEBUG D#626 => &stats_out_file._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1578
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1578
  # DEBUG this => D#620
  # DEBUG D.153723 => D#621
  operator delete (_1578);

  <bb 1982>:
  # DEBUG D#630 => &stats_out_file._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&stats_out_file] ={v} {CLOBBER};
  resx 549

<L1014>:
  pretmp_5643 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  goto <bb 1985> (<L442>);

<L741>:
  pretmp_6265 = &this_129(D)->_pair_plat;
  pretmp_6130 = &this_129(D)->_pair_nlat;
  pretmp_12 = &this_129(D)->_pair_flat;
  pretmp_5431 = &this_129(D)->_sent_packets;
  pretmp_4971 = &this_129(D)->_accepted_packets;
  pretmp_5280 = &this_129(D)->_sent_flits;
  pretmp_468 = &this_129(D)->_accepted_flits;
  pretmp_6128 = &this_129(D)->_stats;

  # prephitmp_4696 = PHI <pretmp_3344(1984), pretmp_5643(1983), pretmp_5644(1822), pretmp_5645(944)>
  # prephitmp_6131 = PHI <pretmp_6265(1984), prephitmp_4739(1983), pretmp_6256(1822), pretmp_638(944)>
  # prephitmp_6133 = PHI <pretmp_6130(1984), prephitmp_3927(1983), pretmp_374(1822), pretmp_2173(944)>
  # prephitmp_1939 = PHI <pretmp_12(1984), prephitmp_3769(1983), pretmp_45(1822), pretmp_1923(944)>
  # prephitmp_5164 = PHI <pretmp_5431(1984), prephitmp_3730(1983), pretmp_13(1822), pretmp_55(944)>
  # prephitmp_5282 = PHI <pretmp_4971(1984), prephitmp_3678(1983), pretmp_14(1822), pretmp_56(944)>
  # prephitmp_4870 = PHI <pretmp_5280(1984), prephitmp_3618(1983), pretmp_5276(1822), pretmp_1963(944)>
  # prephitmp_6129 = PHI <pretmp_468(1984), prephitmp_3530(1983), pretmp_17(1822), pretmp_62(944)>
  # prephitmp_15 = PHI <pretmp_6128(1984), prephitmp_3452(1983), pretmp_16(1822), pretmp_61(944)>
<L442>:
  # DEBUG this => &watch_packets
  # DEBUG D#476 => &watch_packets.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => watch_packets.D.45977._M_impl._M_finish
  # DEBUG D#478 => watch_packets.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &watch_packets.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1673 = MEM[(struct _Vector_base *)&watch_packets]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1673
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1673
  # DEBUG __n => D#470
  if (_1673 != 0B)
    goto <bb 1986>;
  else
    goto <bb 1987>;

  <bb 1986>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1673
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1673
  # DEBUG this => D#462
  # DEBUG D.153740 => D#463
  operator delete (_1673);

  <bb 1987>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)&watch_packets] ={v} {CLOBBER};
  resx 541

<L1015>:
  pretmp_4691 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  goto <bb 1990> (<L443>);

<L739>:
  pretmp_4856 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_5877 = &this_129(D)->_pair_plat;
  pretmp_5871 = &this_129(D)->_pair_nlat;
  pretmp_5865 = &this_129(D)->_pair_flat;
  pretmp_6221 = &this_129(D)->_sent_packets;
  pretmp_6218 = &this_129(D)->_accepted_packets;
  pretmp_3045 = &this_129(D)->_sent_flits;
  pretmp_6217 = &this_129(D)->_accepted_flits;
  pretmp_6213 = &this_129(D)->_stats;

  # prephitmp_5642 = PHI <pretmp_3349(1989), pretmp_4691(1988), pretmp_4692(1818), pretmp_4693(934)>
  # prephitmp_6267 = PHI <pretmp_4856(1989), prephitmp_4696(1988), pretmp_5082(1818), pretmp_5305(934)>
  # prephitmp_5873 = PHI <pretmp_5877(1989), prephitmp_6131(1988), pretmp_5876(1818), pretmp_5875(934)>
  # prephitmp_248 = PHI <pretmp_5871(1989), prephitmp_6133(1988), pretmp_5870(1818), pretmp_597(934)>
  # prephitmp_6220 = PHI <pretmp_5865(1989), prephitmp_1939(1988), pretmp_4888(1818), pretmp_6222(934)>
  # prephitmp_5869 = PHI <pretmp_6221(1989), prephitmp_5164(1988), pretmp_5867(1818), pretmp_6219(934)>
  # prephitmp_5864 = PHI <pretmp_6218(1989), prephitmp_5282(1988), pretmp_5868(1818), pretmp_5866(934)>
  # prephitmp_6216 = PHI <pretmp_3045(1989), prephitmp_4870(1988), pretmp_522(1818), pretmp_4882(934)>
  # prephitmp_5861 = PHI <pretmp_6217(1989), prephitmp_6129(1988), pretmp_6214(1818), pretmp_6215(934)>
  # prephitmp_5862 = PHI <pretmp_6213(1989), prephitmp_15(1988), pretmp_5863(1818), pretmp_6212(934)>
<L443>:
  # DEBUG this => &watch_flits
  # DEBUG D#476 => &watch_flits.D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => watch_flits.D.45977._M_impl._M_finish
  # DEBUG D#478 => watch_flits.D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &watch_flits.D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1676 = MEM[(struct _Vector_base *)&watch_flits]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1676
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1676
  # DEBUG __n => D#470
  if (_1676 != 0B)
    goto <bb 1991>;
  else
    goto <bb 1992>;

  <bb 1991>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1676
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1676
  # DEBUG this => D#462
  # DEBUG D.153755 => D#463
  operator delete (_1676);

  <bb 1992>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)&watch_flits] ={v} {CLOBBER};
  resx 533

<L1016>:
  goto <bb 1995> (<L444>);

<L736>:
  pretmp_5307 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_5884 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6406 = &this_129(D)->_pair_plat;
  pretmp_6412 = &this_129(D)->_pair_nlat;
  pretmp_6418 = &this_129(D)->_pair_flat;
  pretmp_6424 = &this_129(D)->_sent_packets;
  pretmp_6430 = &this_129(D)->_accepted_packets;
  pretmp_6436 = &this_129(D)->_sent_flits;
  pretmp_6442 = &this_129(D)->_accepted_flits;
  pretmp_6448 = &this_129(D)->_stats;

  # prephitmp_4974 = PHI <pretmp_5307(1994), pretmp_4842(922), pretmp_6132(2290), prephitmp_5642(1993), pretmp_5109(1814), pretmp_5310(924)>
  # prephitmp_5878 = PHI <pretmp_5884(1994), pretmp_5882(922), pretmp_5881(2290), prephitmp_6267(1993), pretmp_5880(1814), pretmp_5879(924)>
  # prephitmp_6411 = PHI <pretmp_6406(1994), pretmp_6407(922), pretmp_6408(2290), prephitmp_5873(1993), pretmp_6409(1814), pretmp_6410(924)>
  # prephitmp_6417 = PHI <pretmp_6412(1994), pretmp_6413(922), pretmp_6414(2290), prephitmp_248(1993), pretmp_6415(1814), pretmp_6416(924)>
  # prephitmp_6423 = PHI <pretmp_6418(1994), pretmp_6419(922), pretmp_6420(2290), prephitmp_6220(1993), pretmp_6421(1814), pretmp_6422(924)>
  # prephitmp_6429 = PHI <pretmp_6424(1994), pretmp_6425(922), pretmp_6426(2290), prephitmp_5869(1993), pretmp_6427(1814), pretmp_6428(924)>
  # prephitmp_6435 = PHI <pretmp_6430(1994), pretmp_6431(922), pretmp_6432(2290), prephitmp_5864(1993), pretmp_6433(1814), pretmp_6434(924)>
  # prephitmp_6441 = PHI <pretmp_6436(1994), pretmp_6437(922), pretmp_6438(2290), prephitmp_6216(1993), pretmp_6439(1814), pretmp_6440(924)>
  # prephitmp_6447 = PHI <pretmp_6442(1994), pretmp_6443(922), pretmp_6444(2290), prephitmp_5861(1993), pretmp_6445(1814), pretmp_6446(924)>
  # prephitmp_6453 = PHI <pretmp_6448(1994), pretmp_6449(922), pretmp_6450(2290), prephitmp_5862(1993), pretmp_6451(1814), pretmp_6452(924)>
<L444>:
  # DEBUG this => &watch_file
  # DEBUG this => &watch_file
  # DEBUG this => &watch_file
  _1679 = MEM[(char * *)&watch_file];
  # DEBUG D#1 => &watch_file
  # DEBUG this => D#1
  # DEBUG this => &watch_file
  if (&watch_file.D.11539._M_local_buf != _1679)
    goto <bb 1996>;
  else
    goto <bb 1997>;

  <bb 1996>:
  # DEBUG D#629 => watch_file.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &watch_file
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &watch_file
  # DEBUG this => D#1
  # DEBUG this => &watch_file
  # DEBUG D#626 => &watch_file._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1679
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1679
  # DEBUG this => D#620
  # DEBUG D.153768 => D#621
  operator delete (_1679);

  <bb 1997>:
  # DEBUG D#630 => &watch_file._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&watch_file] ={v} {CLOBBER};
  resx 525

<L1017>:
  goto <bb 2000> (<L445>);

<L652>:
  pretmp_4450 = &this_129(D)->_last_class;
  pretmp_4462 = &this_129(D)->_qtime;
  pretmp_4483 = &this_129(D)->_total_in_flight_flits;
  pretmp_4516 = &this_129(D)->_measured_in_flight_flits;
  pretmp_4548 = &this_129(D)->_retired_packets;
  pretmp_5984 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6316 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6593 = &this_129(D)->_pair_plat;
  pretmp_6683 = &this_129(D)->_pair_nlat;
  pretmp_6773 = &this_129(D)->_pair_flat;
  pretmp_6863 = &this_129(D)->_sent_packets;
  pretmp_6953 = &this_129(D)->_accepted_packets;
  pretmp_7043 = &this_129(D)->_sent_flits;
  pretmp_7133 = &this_129(D)->_accepted_flits;
  pretmp_7223 = &this_129(D)->_stats;

  # prephitmp_4459 = PHI <_741(1998), pretmp_4450(1999), _741(1810), pretmp_4451(494), pretmp_4452(502), pretmp_4453(504), _741(915), _741(1806), _741(910), _741(1802), _741(905), _741(1798), _741(536), _741(542), _741(900), _741(1794), _741(890), _741(1789), _741(881), _741(1780), _741(871), _741(1775), _741(642), _741(651), _741(862), _741(1766), _741(852), _741(1761), _741(843), _741(1752), _741(833), _741(1747), _741(679), _741(1672), _741(824), _741(701), _741(1738), _741(1660), _741(730), _741(742), _741(744), _741(746), _741(756), _741(1654), _741(1652), _741(798), _741(1650), _741(1648), _741(822), _741(1642), _741(1640), _741(841), _741(1638), _741(814), _741(860), _741(1607), _741(1603), _741(879), pretmp_4456(1599), pretmp_4457(1597), _741(898), pretmp_4458(1593), _741(754), _741(558), _741(1634), _741(607), _741(703), _741(1664), _741(708), _741(1668), _741(733), _741(1681), _741(748), _741(1685), _741(758), _741(1694), _741(766), _741(1698), _741(771), _741(1702), _741(776), _741(1706), _741(781), _741(1715), _741(790), _741(1720), _741(800), _741(1724), _741(805), _741(1733)>
  # prephitmp_4482 = PHI <_834(1998), pretmp_4462(1999), _834(1810), pretmp_4463(494), pretmp_4464(502), pretmp_4465(504), _834(915), _834(1806), _834(910), _834(1802), _834(905), _834(1798), pretmp_4468(536), pretmp_4469(542), _834(900), _834(1794), _834(890), _834(1789), _834(881), _834(1780), _834(871), _834(1775), _834(642), _834(651), _834(862), _834(1766), _834(852), _834(1761), _834(843), _834(1752), _834(833), _834(1747), _834(679), _834(1672), _834(824), _834(701), _834(1738), _834(1660), _834(730), _834(742), _834(744), _834(746), _834(756), _834(1654), _834(1652), _834(798), _834(1650), _834(1648), _834(822), _834(1642), _834(1640), _834(841), _834(1638), _834(814), _834(860), pretmp_4470(1607), pretmp_4471(1603), _834(879), pretmp_4474(1599), pretmp_4475(1597), _834(898), pretmp_4476(1593), _834(754), pretmp_4477(558), pretmp_4480(1634), pretmp_4481(607), _834(703), _834(1664), _834(708), _834(1668), _834(733), _834(1681), _834(748), _834(1685), _834(758), _834(1694), _834(766), _834(1698), _834(771), _834(1702), _834(776), _834(1706), _834(781), _834(1715), _834(790), _834(1720), _834(800), _834(1724), _834(805), _834(1733)>
  # prephitmp_4513 = PHI <_868(1998), pretmp_4483(1999), _868(1810), pretmp_4486(494), pretmp_4487(502), pretmp_4488(504), _868(915), _868(1806), _868(910), _868(1802), _868(905), _868(1798), pretmp_4489(536), pretmp_4492(542), _868(900), _868(1794), _868(890), _868(1789), _868(881), _868(1780), _868(871), _868(1775), pretmp_4493(642), pretmp_4494(651), _868(862), _868(1766), _868(852), _868(1761), _868(843), _868(1752), _868(833), _868(1747), _868(679), _868(1672), _868(824), _868(701), _868(1738), _868(1660), _868(730), _868(742), _868(744), _868(746), _868(756), _868(1654), _868(1652), _868(798), _868(1650), pretmp_4495(1648), _868(822), pretmp_4498(1642), pretmp_4499(1640), _868(841), pretmp_4500(1638), _868(814), _868(860), pretmp_4501(1607), pretmp_4504(1603), _868(879), pretmp_4505(1599), pretmp_4506(1597), _868(898), pretmp_4507(1593), _868(754), pretmp_4510(558), pretmp_4511(1634), pretmp_4512(607), _868(703), _868(1664), _868(708), _868(1668), _868(733), _868(1681), _868(748), _868(1685), _868(758), _868(1694), _868(766), _868(1698), _868(771), _868(1702), _868(776), _868(1706), _868(781), _868(1715), _868(790), _868(1720), _868(800), _868(1724), _868(805), _868(1733)>
  # prephitmp_4547 = PHI <_873(1998), pretmp_4516(1999), _873(1810), pretmp_4517(494), pretmp_4518(502), pretmp_4519(504), _873(915), _873(1806), _873(910), _873(1802), _873(905), _873(1798), pretmp_4522(536), pretmp_4523(542), _873(900), _873(1794), _873(890), _873(1789), _873(881), _873(1780), _873(871), _873(1775), pretmp_4524(642), pretmp_4525(651), _873(862), _873(1766), _873(852), _873(1761), _873(843), _873(1752), _873(833), _873(1747), _873(679), _873(1672), _873(824), _873(701), _873(1738), _873(1660), _873(730), _873(742), _873(744), _873(746), _873(756), _873(1654), _873(1652), _873(798), pretmp_4528(1650), pretmp_4529(1648), _873(822), pretmp_4530(1642), pretmp_4531(1640), _873(841), pretmp_4534(1638), _873(814), _873(860), pretmp_4535(1607), pretmp_4536(1603), _873(879), pretmp_4537(1599), pretmp_4540(1597), _873(898), pretmp_4541(1593), _873(754), pretmp_4542(558), pretmp_4543(1634), pretmp_4546(607), _873(703), _873(1664), _873(708), _873(1668), _873(733), _873(1681), _873(748), _873(1685), _873(758), _873(1694), _873(766), _873(1698), _873(771), _873(1702), _873(776), _873(1706), _873(781), _873(1715), _873(790), _873(1720), _873(800), _873(1724), _873(805), _873(1733)>
  # prephitmp_4582 = PHI <_878(1998), pretmp_4548(1999), _878(1810), pretmp_4549(494), pretmp_4552(502), pretmp_4553(504), _878(915), _878(1806), _878(910), _878(1802), _878(905), _878(1798), pretmp_4554(536), pretmp_4555(542), _878(900), _878(1794), _878(890), _878(1789), _878(881), _878(1780), _878(871), _878(1775), pretmp_4558(642), pretmp_4559(651), _878(862), _878(1766), _878(852), _878(1761), _878(843), _878(1752), _878(833), _878(1747), _878(679), _878(1672), _878(824), _878(701), _878(1738), _878(1660), _878(730), _878(742), _878(744), _878(746), _878(756), _878(1654), pretmp_4560(1652), _878(798), pretmp_4561(1650), pretmp_4564(1648), _878(822), pretmp_4565(1642), pretmp_4566(1640), _878(841), pretmp_4567(1638), _878(814), _878(860), pretmp_4570(1607), pretmp_4571(1603), _878(879), pretmp_4572(1599), pretmp_4573(1597), _878(898), pretmp_4576(1593), _878(754), pretmp_4577(558), pretmp_4578(1634), pretmp_4579(607), _878(703), _878(1664), _878(708), _878(1668), _878(733), _878(1681), _878(748), _878(1685), _878(758), _878(1694), _878(766), _878(1698), _878(771), _878(1702), _878(776), _878(1706), _878(781), _878(1715), _878(790), _878(1720), _878(800), _878(1724), _878(805), _878(1733)>
  # prephitmp_5885 = PHI <prephitmp_4974(1998), pretmp_5984(1999), pretmp_5925(1810), pretmp_5958(494), pretmp_6149(502), pretmp_5956(504), pretmp_5955(915), pretmp_6148(1806), pretmp_5953(910), pretmp_5951(1802), pretmp_6147(905), pretmp_5950(1798), pretmp_3558(536), pretmp_4839(542), pretmp_5947(900), pretmp_6230(1794), pretmp_5949(890), pretmp_6229(1789), pretmp_5948(881), pretmp_6146(1780), pretmp_5944(871), pretmp_6228(1775), pretmp_5946(642), pretmp_6227(651), pretmp_5945(862), pretmp_6145(1766), pretmp_5941(852), pretmp_6226(1761), pretmp_5943(843), pretmp_6225(1752), pretmp_5942(833), pretmp_6144(1747), pretmp_5938(679), pretmp_6224(1672), pretmp_5940(824), pretmp_6223(701), pretmp_5939(1738), pretmp_6143(1660), pretmp_4873(730), pretmp_5936(742), pretmp_6142(744), pretmp_5935(746), pretmp_5933(756), pretmp_6141(1654), pretmp_5932(1652), pretmp_5931(798), pretmp_6140(1650), pretmp_5930(1648), pretmp_5929(822), pretmp_6139(1642), pretmp_5928(1640), pretmp_5927(841), pretmp_5914(1638), pretmp_5926(814), pretmp_4881(860), pretmp_4838(1607), pretmp_5924(1603), pretmp_5923(879), pretmp_5922(1599), pretmp_5921(1597), pretmp_5916(898), pretmp_5917(1593), pretmp_5915(754), pretmp_249(558), pretmp_4871(1634), pretmp_4877(607), pretmp_4807(703), pretmp_5912(1664), pretmp_5384(708), pretmp_5911(1668), pretmp_5375(733), pretmp_5910(1681), pretmp_5909(748), pretmp_5908(1685), pretmp_5907(758), pretmp_5906(1694), pretmp_5903(766), pretmp_5902(1698), pretmp_5901(771), pretmp_5899(1702), pretmp_5898(776), pretmp_5897(1706), pretmp_5895(781), pretmp_5894(1715), pretmp_5893(790), pretmp_5891(1720), pretmp_5890(800), pretmp_5889(1724), pretmp_5887(805), pretmp_5886(1733)>
  # prephitmp_6405 = PHI <prephitmp_5878(1998), pretmp_6316(1999), pretmp_6317(1810), pretmp_6318(494), pretmp_6319(502), pretmp_6320(504), pretmp_6321(915), pretmp_6322(1806), pretmp_6323(910), pretmp_6324(1802), pretmp_6325(905), pretmp_6326(1798), pretmp_6327(536), pretmp_6328(542), pretmp_6329(900), pretmp_6330(1794), pretmp_6331(890), pretmp_6332(1789), pretmp_6333(881), pretmp_6334(1780), pretmp_6335(871), pretmp_6336(1775), pretmp_6337(642), pretmp_6338(651), pretmp_6339(862), pretmp_6340(1766), pretmp_6341(852), pretmp_6342(1761), pretmp_6343(843), pretmp_6344(1752), pretmp_6345(833), pretmp_6346(1747), pretmp_6347(679), pretmp_6348(1672), pretmp_6349(824), pretmp_6350(701), pretmp_6351(1738), pretmp_6352(1660), pretmp_6353(730), pretmp_6354(742), pretmp_6355(744), pretmp_6356(746), pretmp_6357(756), pretmp_6358(1654), pretmp_6359(1652), pretmp_6360(798), pretmp_6361(1650), pretmp_6362(1648), pretmp_6363(822), pretmp_6364(1642), pretmp_6365(1640), pretmp_6366(841), pretmp_6367(1638), pretmp_6368(814), pretmp_6369(860), pretmp_6370(1607), pretmp_6371(1603), pretmp_6372(879), pretmp_6373(1599), pretmp_6374(1597), pretmp_6375(898), pretmp_6376(1593), pretmp_6377(754), pretmp_6378(558), pretmp_6379(1634), pretmp_6380(607), pretmp_6381(703), pretmp_6382(1664), pretmp_6383(708), pretmp_6384(1668), pretmp_6385(733), pretmp_6386(1681), pretmp_6387(748), pretmp_6388(1685), pretmp_6389(758), pretmp_6390(1694), pretmp_6391(766), pretmp_6392(1698), pretmp_6393(771), pretmp_6394(1702), pretmp_6395(776), pretmp_6396(1706), pretmp_6397(781), pretmp_6398(1715), pretmp_6399(790), pretmp_6400(1720), pretmp_6401(800), pretmp_6402(1724), pretmp_6403(805), pretmp_6404(1733)>
  # prephitmp_6682 = PHI <prephitmp_6411(1998), pretmp_6593(1999), pretmp_6594(1810), pretmp_6595(494), pretmp_6596(502), pretmp_6597(504), pretmp_6598(915), pretmp_6599(1806), pretmp_6600(910), pretmp_6601(1802), pretmp_6602(905), pretmp_6603(1798), pretmp_6604(536), pretmp_6605(542), pretmp_6606(900), pretmp_6607(1794), pretmp_6608(890), pretmp_6609(1789), pretmp_6610(881), pretmp_6611(1780), pretmp_6612(871), pretmp_6613(1775), pretmp_6614(642), pretmp_6615(651), pretmp_6616(862), pretmp_6617(1766), pretmp_6618(852), pretmp_6619(1761), pretmp_6620(843), pretmp_6621(1752), pretmp_6622(833), pretmp_6623(1747), pretmp_6624(679), pretmp_6625(1672), pretmp_6626(824), pretmp_6627(701), pretmp_6628(1738), pretmp_6629(1660), pretmp_6630(730), pretmp_6631(742), pretmp_6632(744), pretmp_6633(746), pretmp_6634(756), pretmp_6635(1654), pretmp_6636(1652), pretmp_6637(798), pretmp_6638(1650), pretmp_6639(1648), pretmp_6640(822), pretmp_6641(1642), pretmp_6642(1640), pretmp_6643(841), pretmp_6644(1638), pretmp_6645(814), pretmp_6646(860), pretmp_6647(1607), pretmp_6648(1603), pretmp_6649(879), pretmp_6650(1599), pretmp_6651(1597), pretmp_6652(898), pretmp_6653(1593), pretmp_6654(754), pretmp_6655(558), pretmp_6656(1634), pretmp_6657(607), pretmp_6658(703), pretmp_6659(1664), pretmp_6660(708), pretmp_6661(1668), pretmp_6662(733), pretmp_6663(1681), pretmp_6664(748), pretmp_6665(1685), pretmp_6666(758), pretmp_6667(1694), pretmp_6668(766), pretmp_6669(1698), pretmp_6670(771), pretmp_6671(1702), pretmp_6672(776), pretmp_6673(1706), pretmp_6674(781), pretmp_6675(1715), pretmp_6676(790), pretmp_6677(1720), pretmp_6678(800), pretmp_6679(1724), pretmp_6680(805), pretmp_6681(1733)>
  # prephitmp_6772 = PHI <prephitmp_6417(1998), pretmp_6683(1999), pretmp_6684(1810), pretmp_6685(494), pretmp_6686(502), pretmp_6687(504), pretmp_6688(915), pretmp_6689(1806), pretmp_6690(910), pretmp_6691(1802), pretmp_6692(905), pretmp_6693(1798), pretmp_6694(536), pretmp_6695(542), pretmp_6696(900), pretmp_6697(1794), pretmp_6698(890), pretmp_6699(1789), pretmp_6700(881), pretmp_6701(1780), pretmp_6702(871), pretmp_6703(1775), pretmp_6704(642), pretmp_6705(651), pretmp_6706(862), pretmp_6707(1766), pretmp_6708(852), pretmp_6709(1761), pretmp_6710(843), pretmp_6711(1752), pretmp_6712(833), pretmp_6713(1747), pretmp_6714(679), pretmp_6715(1672), pretmp_6716(824), pretmp_6717(701), pretmp_6718(1738), pretmp_6719(1660), pretmp_6720(730), pretmp_6721(742), pretmp_6722(744), pretmp_6723(746), pretmp_6724(756), pretmp_6725(1654), pretmp_6726(1652), pretmp_6727(798), pretmp_6728(1650), pretmp_6729(1648), pretmp_6730(822), pretmp_6731(1642), pretmp_6732(1640), pretmp_6733(841), pretmp_6734(1638), pretmp_6735(814), pretmp_6736(860), pretmp_6737(1607), pretmp_6738(1603), pretmp_6739(879), pretmp_6740(1599), pretmp_6741(1597), pretmp_6742(898), pretmp_6743(1593), pretmp_6744(754), pretmp_6745(558), pretmp_6746(1634), pretmp_6747(607), pretmp_6748(703), pretmp_6749(1664), pretmp_6750(708), pretmp_6751(1668), pretmp_6752(733), pretmp_6753(1681), pretmp_6754(748), pretmp_6755(1685), pretmp_6756(758), pretmp_6757(1694), pretmp_6758(766), pretmp_6759(1698), pretmp_6760(771), pretmp_6761(1702), pretmp_6762(776), pretmp_6763(1706), pretmp_6764(781), pretmp_6765(1715), pretmp_6766(790), pretmp_6767(1720), pretmp_6768(800), pretmp_6769(1724), pretmp_6770(805), pretmp_6771(1733)>
  # prephitmp_6862 = PHI <prephitmp_6423(1998), pretmp_6773(1999), pretmp_6774(1810), pretmp_6775(494), pretmp_6776(502), pretmp_6777(504), pretmp_6778(915), pretmp_6779(1806), pretmp_6780(910), pretmp_6781(1802), pretmp_6782(905), pretmp_6783(1798), pretmp_6784(536), pretmp_6785(542), pretmp_6786(900), pretmp_6787(1794), pretmp_6788(890), pretmp_6789(1789), pretmp_6790(881), pretmp_6791(1780), pretmp_6792(871), pretmp_6793(1775), pretmp_6794(642), pretmp_6795(651), pretmp_6796(862), pretmp_6797(1766), pretmp_6798(852), pretmp_6799(1761), pretmp_6800(843), pretmp_6801(1752), pretmp_6802(833), pretmp_6803(1747), pretmp_6804(679), pretmp_6805(1672), pretmp_6806(824), pretmp_6807(701), pretmp_6808(1738), pretmp_6809(1660), pretmp_6810(730), pretmp_6811(742), pretmp_6812(744), pretmp_6813(746), pretmp_6814(756), pretmp_6815(1654), pretmp_6816(1652), pretmp_6817(798), pretmp_6818(1650), pretmp_6819(1648), pretmp_6820(822), pretmp_6821(1642), pretmp_6822(1640), pretmp_6823(841), pretmp_6824(1638), pretmp_6825(814), pretmp_6826(860), pretmp_6827(1607), pretmp_6828(1603), pretmp_6829(879), pretmp_6830(1599), pretmp_6831(1597), pretmp_6832(898), pretmp_6833(1593), pretmp_6834(754), pretmp_6835(558), pretmp_6836(1634), pretmp_6837(607), pretmp_6838(703), pretmp_6839(1664), pretmp_6840(708), pretmp_6841(1668), pretmp_6842(733), pretmp_6843(1681), pretmp_6844(748), pretmp_6845(1685), pretmp_6846(758), pretmp_6847(1694), pretmp_6848(766), pretmp_6849(1698), pretmp_6850(771), pretmp_6851(1702), pretmp_6852(776), pretmp_6853(1706), pretmp_6854(781), pretmp_6855(1715), pretmp_6856(790), pretmp_6857(1720), pretmp_6858(800), pretmp_6859(1724), pretmp_6860(805), pretmp_6861(1733)>
  # prephitmp_6952 = PHI <prephitmp_6429(1998), pretmp_6863(1999), pretmp_6864(1810), pretmp_6865(494), pretmp_6866(502), pretmp_6867(504), pretmp_6868(915), pretmp_6869(1806), pretmp_6870(910), pretmp_6871(1802), pretmp_6872(905), pretmp_6873(1798), pretmp_6874(536), pretmp_6875(542), pretmp_6876(900), pretmp_6877(1794), pretmp_6878(890), pretmp_6879(1789), pretmp_6880(881), pretmp_6881(1780), pretmp_6882(871), pretmp_6883(1775), pretmp_6884(642), pretmp_6885(651), pretmp_6886(862), pretmp_6887(1766), pretmp_6888(852), pretmp_6889(1761), pretmp_6890(843), pretmp_6891(1752), pretmp_6892(833), pretmp_6893(1747), pretmp_6894(679), pretmp_6895(1672), pretmp_6896(824), pretmp_6897(701), pretmp_6898(1738), pretmp_6899(1660), pretmp_6900(730), pretmp_6901(742), pretmp_6902(744), pretmp_6903(746), pretmp_6904(756), pretmp_6905(1654), pretmp_6906(1652), pretmp_6907(798), pretmp_6908(1650), pretmp_6909(1648), pretmp_6910(822), pretmp_6911(1642), pretmp_6912(1640), pretmp_6913(841), pretmp_6914(1638), pretmp_6915(814), pretmp_6916(860), pretmp_6917(1607), pretmp_6918(1603), pretmp_6919(879), pretmp_6920(1599), pretmp_6921(1597), pretmp_6922(898), pretmp_6923(1593), pretmp_6924(754), pretmp_6925(558), pretmp_6926(1634), pretmp_6927(607), pretmp_6928(703), pretmp_6929(1664), pretmp_6930(708), pretmp_6931(1668), pretmp_6932(733), pretmp_6933(1681), pretmp_6934(748), pretmp_6935(1685), pretmp_6936(758), pretmp_6937(1694), pretmp_6938(766), pretmp_6939(1698), pretmp_6940(771), pretmp_6941(1702), pretmp_6942(776), pretmp_6943(1706), pretmp_6944(781), pretmp_6945(1715), pretmp_6946(790), pretmp_6947(1720), pretmp_6948(800), pretmp_6949(1724), pretmp_6950(805), pretmp_6951(1733)>
  # prephitmp_7042 = PHI <prephitmp_6435(1998), pretmp_6953(1999), pretmp_6954(1810), pretmp_6955(494), pretmp_6956(502), pretmp_6957(504), pretmp_6958(915), pretmp_6959(1806), pretmp_6960(910), pretmp_6961(1802), pretmp_6962(905), pretmp_6963(1798), pretmp_6964(536), pretmp_6965(542), pretmp_6966(900), pretmp_6967(1794), pretmp_6968(890), pretmp_6969(1789), pretmp_6970(881), pretmp_6971(1780), pretmp_6972(871), pretmp_6973(1775), pretmp_6974(642), pretmp_6975(651), pretmp_6976(862), pretmp_6977(1766), pretmp_6978(852), pretmp_6979(1761), pretmp_6980(843), pretmp_6981(1752), pretmp_6982(833), pretmp_6983(1747), pretmp_6984(679), pretmp_6985(1672), pretmp_6986(824), pretmp_6987(701), pretmp_6988(1738), pretmp_6989(1660), pretmp_6990(730), pretmp_6991(742), pretmp_6992(744), pretmp_6993(746), pretmp_6994(756), pretmp_6995(1654), pretmp_6996(1652), pretmp_6997(798), pretmp_6998(1650), pretmp_6999(1648), pretmp_7000(822), pretmp_7001(1642), pretmp_7002(1640), pretmp_7003(841), pretmp_7004(1638), pretmp_7005(814), pretmp_7006(860), pretmp_7007(1607), pretmp_7008(1603), pretmp_7009(879), pretmp_7010(1599), pretmp_7011(1597), pretmp_7012(898), pretmp_7013(1593), pretmp_7014(754), pretmp_7015(558), pretmp_7016(1634), pretmp_7017(607), pretmp_7018(703), pretmp_7019(1664), pretmp_7020(708), pretmp_7021(1668), pretmp_7022(733), pretmp_7023(1681), pretmp_7024(748), pretmp_7025(1685), pretmp_7026(758), pretmp_7027(1694), pretmp_7028(766), pretmp_7029(1698), pretmp_7030(771), pretmp_7031(1702), pretmp_7032(776), pretmp_7033(1706), pretmp_7034(781), pretmp_7035(1715), pretmp_7036(790), pretmp_7037(1720), pretmp_7038(800), pretmp_7039(1724), pretmp_7040(805), pretmp_7041(1733)>
  # prephitmp_7132 = PHI <prephitmp_6441(1998), pretmp_7043(1999), pretmp_7044(1810), pretmp_7045(494), pretmp_7046(502), pretmp_7047(504), pretmp_7048(915), pretmp_7049(1806), pretmp_7050(910), pretmp_7051(1802), pretmp_7052(905), pretmp_7053(1798), pretmp_7054(536), pretmp_7055(542), pretmp_7056(900), pretmp_7057(1794), pretmp_7058(890), pretmp_7059(1789), pretmp_7060(881), pretmp_7061(1780), pretmp_7062(871), pretmp_7063(1775), pretmp_7064(642), pretmp_7065(651), pretmp_7066(862), pretmp_7067(1766), pretmp_7068(852), pretmp_7069(1761), pretmp_7070(843), pretmp_7071(1752), pretmp_7072(833), pretmp_7073(1747), pretmp_7074(679), pretmp_7075(1672), pretmp_7076(824), pretmp_7077(701), pretmp_7078(1738), pretmp_7079(1660), pretmp_7080(730), pretmp_7081(742), pretmp_7082(744), pretmp_7083(746), pretmp_7084(756), pretmp_7085(1654), pretmp_7086(1652), pretmp_7087(798), pretmp_7088(1650), pretmp_7089(1648), pretmp_7090(822), pretmp_7091(1642), pretmp_7092(1640), pretmp_7093(841), pretmp_7094(1638), pretmp_7095(814), pretmp_7096(860), pretmp_7097(1607), pretmp_7098(1603), pretmp_7099(879), pretmp_7100(1599), pretmp_7101(1597), pretmp_7102(898), pretmp_7103(1593), pretmp_7104(754), pretmp_7105(558), pretmp_7106(1634), pretmp_7107(607), pretmp_7108(703), pretmp_7109(1664), pretmp_7110(708), pretmp_7111(1668), pretmp_7112(733), pretmp_7113(1681), pretmp_7114(748), pretmp_7115(1685), pretmp_7116(758), pretmp_7117(1694), pretmp_7118(766), pretmp_7119(1698), pretmp_7120(771), pretmp_7121(1702), pretmp_7122(776), pretmp_7123(1706), pretmp_7124(781), pretmp_7125(1715), pretmp_7126(790), pretmp_7127(1720), pretmp_7128(800), pretmp_7129(1724), pretmp_7130(805), pretmp_7131(1733)>
  # prephitmp_7222 = PHI <prephitmp_6447(1998), pretmp_7133(1999), pretmp_7134(1810), pretmp_7135(494), pretmp_7136(502), pretmp_7137(504), pretmp_7138(915), pretmp_7139(1806), pretmp_7140(910), pretmp_7141(1802), pretmp_7142(905), pretmp_7143(1798), pretmp_7144(536), pretmp_7145(542), pretmp_7146(900), pretmp_7147(1794), pretmp_7148(890), pretmp_7149(1789), pretmp_7150(881), pretmp_7151(1780), pretmp_7152(871), pretmp_7153(1775), pretmp_7154(642), pretmp_7155(651), pretmp_7156(862), pretmp_7157(1766), pretmp_7158(852), pretmp_7159(1761), pretmp_7160(843), pretmp_7161(1752), pretmp_7162(833), pretmp_7163(1747), pretmp_7164(679), pretmp_7165(1672), pretmp_7166(824), pretmp_7167(701), pretmp_7168(1738), pretmp_7169(1660), pretmp_7170(730), pretmp_7171(742), pretmp_7172(744), pretmp_7173(746), pretmp_7174(756), pretmp_7175(1654), pretmp_7176(1652), pretmp_7177(798), pretmp_7178(1650), pretmp_7179(1648), pretmp_7180(822), pretmp_7181(1642), pretmp_7182(1640), pretmp_7183(841), pretmp_7184(1638), pretmp_7185(814), pretmp_7186(860), pretmp_7187(1607), pretmp_7188(1603), pretmp_7189(879), pretmp_7190(1599), pretmp_7191(1597), pretmp_7192(898), pretmp_7193(1593), pretmp_7194(754), pretmp_7195(558), pretmp_7196(1634), pretmp_7197(607), pretmp_7198(703), pretmp_7199(1664), pretmp_7200(708), pretmp_7201(1668), pretmp_7202(733), pretmp_7203(1681), pretmp_7204(748), pretmp_7205(1685), pretmp_7206(758), pretmp_7207(1694), pretmp_7208(766), pretmp_7209(1698), pretmp_7210(771), pretmp_7211(1702), pretmp_7212(776), pretmp_7213(1706), pretmp_7214(781), pretmp_7215(1715), pretmp_7216(790), pretmp_7217(1720), pretmp_7218(800), pretmp_7219(1724), pretmp_7220(805), pretmp_7221(1733)>
  # prephitmp_7312 = PHI <prephitmp_6453(1998), pretmp_7223(1999), pretmp_7224(1810), pretmp_7225(494), pretmp_7226(502), pretmp_7227(504), pretmp_7228(915), pretmp_7229(1806), pretmp_7230(910), pretmp_7231(1802), pretmp_7232(905), pretmp_7233(1798), pretmp_7234(536), pretmp_7235(542), pretmp_7236(900), pretmp_7237(1794), pretmp_7238(890), pretmp_7239(1789), pretmp_7240(881), pretmp_7241(1780), pretmp_7242(871), pretmp_7243(1775), pretmp_7244(642), pretmp_7245(651), pretmp_7246(862), pretmp_7247(1766), pretmp_7248(852), pretmp_7249(1761), pretmp_7250(843), pretmp_7251(1752), pretmp_7252(833), pretmp_7253(1747), pretmp_7254(679), pretmp_7255(1672), pretmp_7256(824), pretmp_7257(701), pretmp_7258(1738), pretmp_7259(1660), pretmp_7260(730), pretmp_7261(742), pretmp_7262(744), pretmp_7263(746), pretmp_7264(756), pretmp_7265(1654), pretmp_7266(1652), pretmp_7267(798), pretmp_7268(1650), pretmp_7269(1648), pretmp_7270(822), pretmp_7271(1642), pretmp_7272(1640), pretmp_7273(841), pretmp_7274(1638), pretmp_7275(814), pretmp_7276(860), pretmp_7277(1607), pretmp_7278(1603), pretmp_7279(879), pretmp_7280(1599), pretmp_7281(1597), pretmp_7282(898), pretmp_7283(1593), pretmp_7284(754), pretmp_7285(558), pretmp_7286(1634), pretmp_7287(607), pretmp_7288(703), pretmp_7289(1664), pretmp_7290(708), pretmp_7291(1668), pretmp_7292(733), pretmp_7293(1681), pretmp_7294(748), pretmp_7295(1685), pretmp_7296(758), pretmp_7297(1694), pretmp_7298(766), pretmp_7299(1698), pretmp_7300(771), pretmp_7301(1702), pretmp_7302(776), pretmp_7303(1706), pretmp_7304(781), pretmp_7305(1715), pretmp_7306(790), pretmp_7307(1720), pretmp_7308(800), pretmp_7309(1724), pretmp_7310(805), pretmp_7311(1733)>
<L445>:
  tmp_name ={v} {CLOBBER};
  # DEBUG D#4273 => {CLOBBER}
  # DEBUG vc_alloc_delay => D#4273
  # DEBUG D#4274 => {CLOBBER}
  # DEBUG sw_alloc_delay => D#4274
  std::vector<std::__cxx11::basic_string<char> >::~vector (&injection_process);
  resx 341

<L1018>:
  pretmp_4374 = &this_129(D)->_packet_size_rate;
  goto <bb 2003> (<L446>);

<L618>:
  pretmp_4399 = &this_129(D)->_packet_size_rate;
  pretmp_4417 = &this_129(D)->_traffic;
  pretmp_2882 = &this_129(D)->_last_class;
  pretmp_2810 = &this_129(D)->_qtime;
  pretmp_2751 = &this_129(D)->_total_in_flight_flits;
  pretmp_2717 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5369 = &this_129(D)->_retired_packets;
  pretmp_6303 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_6580 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7465 = &this_129(D)->_pair_plat;
  pretmp_7496 = &this_129(D)->_pair_nlat;
  pretmp_7527 = &this_129(D)->_pair_flat;
  pretmp_7558 = &this_129(D)->_sent_packets;
  pretmp_7589 = &this_129(D)->_accepted_packets;
  pretmp_7620 = &this_129(D)->_sent_flits;
  pretmp_7651 = &this_129(D)->_accepted_flits;
  pretmp_7682 = &this_129(D)->_stats;

  # prephitmp_4406 = PHI <pretmp_4374(2001), pretmp_4375(1589), pretmp_4376(484), pretmp_4379(436), pretmp_4380(1585), pretmp_4381(1571), pretmp_4382(454), pretmp_4384(474), pretmp_4385(460), pretmp_4386(1580), pretmp_4387(465), pretmp_4389(482), pretmp_4390(1567), pretmp_4391(1551), pretmp_4392(428), pretmp_4394(1556), pretmp_4395(438), pretmp_4396(1560), pretmp_4397(448), pretmp_4399(2002), pretmp_4400(1517), pretmp_3101(339), pretmp_3101(1522), pretmp_3101(354), pretmp_4402(358), prephitmp_5325(1534), pretmp_2745(405), pretmp_2746(1538), pretmp_2747(413), pretmp_4404(1542), pretmp_4405(419)>
  # prephitmp_4432 = PHI <_653(2001), _653(1589), _653(484), pretmp_4407(436), _653(1585), _653(1571), _653(454), _653(474), _653(460), _653(1580), _653(465), _653(482), prephitmp_4440(1567), pretmp_4410(1551), pretmp_4411(428), pretmp_4412(1556), pretmp_4414(438), pretmp_4415(1560), pretmp_4416(448), pretmp_4417(2002), pretmp_4419(1517), pretmp_4420(339), pretmp_4421(1522), pretmp_4422(354), pretmp_4424(358), pretmp_4425(1534), pretmp_4426(405), pretmp_4427(1538), pretmp_4429(413), pretmp_4430(1542), pretmp_4431(419)>
  # prephitmp_2860 = PHI <prephitmp_4459(2001), pretmp_2897(1589), pretmp_2898(484), pretmp_2900(436), pretmp_2901(1585), pretmp_2902(1571), pretmp_2903(454), pretmp_2884(474), pretmp_2885(460), pretmp_2886(1580), pretmp_2887(465), pretmp_2873(482), pretmp_2874(1567), pretmp_2875(1551), pretmp_2876(428), pretmp_2877(1556), pretmp_2879(438), pretmp_2880(1560), pretmp_2881(448), pretmp_2882(2002), pretmp_2863(1517), pretmp_2864(339), pretmp_2865(1522), pretmp_2866(354), pretmp_2852(358), pretmp_2853(1534), pretmp_2854(405), pretmp_2855(1538), pretmp_2856(413), pretmp_2858(1542), pretmp_2859(419)>
  # prephitmp_2808 = PHI <prephitmp_4482(2001), pretmp_2861(1589), pretmp_2842(484), pretmp_2843(436), pretmp_2844(1585), pretmp_2845(1571), pretmp_2831(454), pretmp_2832(474), pretmp_2833(460), pretmp_2834(1580), pretmp_2835(465), pretmp_2837(482), pretmp_2838(1567), pretmp_2839(1551), pretmp_2840(428), pretmp_2821(1556), pretmp_2822(438), pretmp_2823(1560), pretmp_2824(448), pretmp_2810(2002), pretmp_2811(1517), pretmp_2812(339), pretmp_2813(1522), pretmp_2814(354), pretmp_2816(358), pretmp_2817(1534), pretmp_2818(405), pretmp_2819(1538), pretmp_2805(413), pretmp_2806(1542), pretmp_2807(419)>
  # prephitmp_2766 = PHI <prephitmp_4513(2001), pretmp_2795(1589), pretmp_2796(484), pretmp_2797(436), pretmp_2798(1585), pretmp_2790(1571), pretmp_2791(454), pretmp_2792(474), pretmp_2793(460), pretmp_2785(1580), pretmp_2786(465), pretmp_2787(482), pretmp_2788(1567), pretmp_2775(1551), pretmp_2776(428), pretmp_2777(1556), pretmp_2778(438), pretmp_2749(1560), pretmp_2750(448), pretmp_2751(2002), pretmp_2752(1517), pretmp_2754(339), pretmp_2755(1522), pretmp_2756(354), pretmp_2757(358), pretmp_2759(1534), pretmp_2760(405), pretmp_2761(1538), pretmp_2762(413), pretmp_2764(1542), pretmp_2765(419)>
  # prephitmp_2702 = PHI <prephitmp_4547(2001), pretmp_2767(1589), pretmp_2769(484), pretmp_2770(436), pretmp_2771(1585), pretmp_2772(1571), pretmp_2739(454), pretmp_2740(474), pretmp_2741(460), pretmp_2742(1580), pretmp_2726(465), pretmp_2727(482), pretmp_2728(1567), pretmp_2729(1551), pretmp_2721(428), pretmp_2722(1556), pretmp_2723(438), pretmp_2724(1560), pretmp_2716(448), pretmp_2717(2002), pretmp_2718(1517), pretmp_2719(339), pretmp_2711(1522), pretmp_2712(354), pretmp_2713(358), pretmp_2714(1534), pretmp_2706(405), pretmp_2707(1538), pretmp_2708(413), pretmp_2709(1542), pretmp_2701(419)>
  # prephitmp_6019 = PHI <prephitmp_4582(2001), pretmp_2703(1589), pretmp_2704(484), pretmp_2696(436), pretmp_2697(1585), pretmp_2698(1571), pretmp_2699(454), pretmp_2658(474), pretmp_2659(460), pretmp_2683(1580), pretmp_2684(465), pretmp_2690(482), pretmp_2691(1567), pretmp_2451(1551), pretmp_2452(428), pretmp_2453(1556), pretmp_2454(438), pretmp_6259(1560), pretmp_5370(448), pretmp_5369(2002), pretmp_5304(1517), pretmp_5079(339), pretmp_5012(1522), pretmp_2172(354), pretmp_1841(358), pretmp_44(1534), pretmp_11(405), pretmp_6127(1538), pretmp_6126(413), pretmp_6257(1542), pretmp_415(419)>
  # prephitmp_6315 = PHI <prephitmp_5885(2001), pretmp_6285(1589), pretmp_6286(484), pretmp_6287(436), pretmp_6288(1585), pretmp_6289(1571), pretmp_6290(454), pretmp_6291(474), pretmp_6292(460), pretmp_6293(1580), pretmp_6294(465), pretmp_6295(482), pretmp_6296(1567), pretmp_6297(1551), pretmp_6298(428), pretmp_6299(1556), pretmp_6300(438), pretmp_6301(1560), pretmp_6302(448), pretmp_6303(2002), pretmp_6304(1517), pretmp_6305(339), pretmp_6306(1522), pretmp_6307(354), pretmp_6308(358), pretmp_6309(1534), pretmp_6310(405), pretmp_6311(1538), pretmp_6312(413), pretmp_6313(1542), pretmp_6314(419)>
  # prephitmp_6592 = PHI <prephitmp_6405(2001), pretmp_6562(1589), pretmp_6563(484), pretmp_6564(436), pretmp_6565(1585), pretmp_6566(1571), pretmp_6567(454), pretmp_6568(474), pretmp_6569(460), pretmp_6570(1580), pretmp_6571(465), pretmp_6572(482), pretmp_6573(1567), pretmp_6574(1551), pretmp_6575(428), pretmp_6576(1556), pretmp_6577(438), pretmp_6578(1560), pretmp_6579(448), pretmp_6580(2002), pretmp_6581(1517), pretmp_6582(339), pretmp_6583(1522), pretmp_6584(354), pretmp_6585(358), pretmp_6586(1534), pretmp_6587(405), pretmp_6588(1538), pretmp_6589(413), pretmp_6590(1542), pretmp_6591(419)>
  # prephitmp_7477 = PHI <prephitmp_6682(2001), pretmp_7447(1589), pretmp_7448(484), pretmp_7449(436), pretmp_7450(1585), pretmp_7451(1571), pretmp_7452(454), pretmp_7453(474), pretmp_7454(460), pretmp_7455(1580), pretmp_7456(465), pretmp_7457(482), pretmp_7458(1567), pretmp_7459(1551), pretmp_7460(428), pretmp_7461(1556), pretmp_7462(438), pretmp_7463(1560), pretmp_7464(448), pretmp_7465(2002), pretmp_7466(1517), pretmp_7467(339), pretmp_7468(1522), pretmp_7469(354), pretmp_7470(358), pretmp_7471(1534), pretmp_7472(405), pretmp_7473(1538), pretmp_7474(413), pretmp_7475(1542), pretmp_7476(419)>
  # prephitmp_7508 = PHI <prephitmp_6772(2001), pretmp_7478(1589), pretmp_7479(484), pretmp_7480(436), pretmp_7481(1585), pretmp_7482(1571), pretmp_7483(454), pretmp_7484(474), pretmp_7485(460), pretmp_7486(1580), pretmp_7487(465), pretmp_7488(482), pretmp_7489(1567), pretmp_7490(1551), pretmp_7491(428), pretmp_7492(1556), pretmp_7493(438), pretmp_7494(1560), pretmp_7495(448), pretmp_7496(2002), pretmp_7497(1517), pretmp_7498(339), pretmp_7499(1522), pretmp_7500(354), pretmp_7501(358), pretmp_7502(1534), pretmp_7503(405), pretmp_7504(1538), pretmp_7505(413), pretmp_7506(1542), pretmp_7507(419)>
  # prephitmp_7539 = PHI <prephitmp_6862(2001), pretmp_7509(1589), pretmp_7510(484), pretmp_7511(436), pretmp_7512(1585), pretmp_7513(1571), pretmp_7514(454), pretmp_7515(474), pretmp_7516(460), pretmp_7517(1580), pretmp_7518(465), pretmp_7519(482), pretmp_7520(1567), pretmp_7521(1551), pretmp_7522(428), pretmp_7523(1556), pretmp_7524(438), pretmp_7525(1560), pretmp_7526(448), pretmp_7527(2002), pretmp_7528(1517), pretmp_7529(339), pretmp_7530(1522), pretmp_7531(354), pretmp_7532(358), pretmp_7533(1534), pretmp_7534(405), pretmp_7535(1538), pretmp_7536(413), pretmp_7537(1542), pretmp_7538(419)>
  # prephitmp_7570 = PHI <prephitmp_6952(2001), pretmp_7540(1589), pretmp_7541(484), pretmp_7542(436), pretmp_7543(1585), pretmp_7544(1571), pretmp_7545(454), pretmp_7546(474), pretmp_7547(460), pretmp_7548(1580), pretmp_7549(465), pretmp_7550(482), pretmp_7551(1567), pretmp_7552(1551), pretmp_7553(428), pretmp_7554(1556), pretmp_7555(438), pretmp_7556(1560), pretmp_7557(448), pretmp_7558(2002), pretmp_7559(1517), pretmp_7560(339), pretmp_7561(1522), pretmp_7562(354), pretmp_7563(358), pretmp_7564(1534), pretmp_7565(405), pretmp_7566(1538), pretmp_7567(413), pretmp_7568(1542), pretmp_7569(419)>
  # prephitmp_7601 = PHI <prephitmp_7042(2001), pretmp_7571(1589), pretmp_7572(484), pretmp_7573(436), pretmp_7574(1585), pretmp_7575(1571), pretmp_7576(454), pretmp_7577(474), pretmp_7578(460), pretmp_7579(1580), pretmp_7580(465), pretmp_7581(482), pretmp_7582(1567), pretmp_7583(1551), pretmp_7584(428), pretmp_7585(1556), pretmp_7586(438), pretmp_7587(1560), pretmp_7588(448), pretmp_7589(2002), pretmp_7590(1517), pretmp_7591(339), pretmp_7592(1522), pretmp_7593(354), pretmp_7594(358), pretmp_7595(1534), pretmp_7596(405), pretmp_7597(1538), pretmp_7598(413), pretmp_7599(1542), pretmp_7600(419)>
  # prephitmp_7632 = PHI <prephitmp_7132(2001), pretmp_7602(1589), pretmp_7603(484), pretmp_7604(436), pretmp_7605(1585), pretmp_7606(1571), pretmp_7607(454), pretmp_7608(474), pretmp_7609(460), pretmp_7610(1580), pretmp_7611(465), pretmp_7612(482), pretmp_7613(1567), pretmp_7614(1551), pretmp_7615(428), pretmp_7616(1556), pretmp_7617(438), pretmp_7618(1560), pretmp_7619(448), pretmp_7620(2002), pretmp_7621(1517), pretmp_7622(339), pretmp_7623(1522), pretmp_7624(354), pretmp_7625(358), pretmp_7626(1534), pretmp_7627(405), pretmp_7628(1538), pretmp_7629(413), pretmp_7630(1542), pretmp_7631(419)>
  # prephitmp_7663 = PHI <prephitmp_7222(2001), pretmp_7633(1589), pretmp_7634(484), pretmp_7635(436), pretmp_7636(1585), pretmp_7637(1571), pretmp_7638(454), pretmp_7639(474), pretmp_7640(460), pretmp_7641(1580), pretmp_7642(465), pretmp_7643(482), pretmp_7644(1567), pretmp_7645(1551), pretmp_7646(428), pretmp_7647(1556), pretmp_7648(438), pretmp_7649(1560), pretmp_7650(448), pretmp_7651(2002), pretmp_7652(1517), pretmp_7653(339), pretmp_7654(1522), pretmp_7655(354), pretmp_7656(358), pretmp_7657(1534), pretmp_7658(405), pretmp_7659(1538), pretmp_7660(413), pretmp_7661(1542), pretmp_7662(419)>
  # prephitmp_7694 = PHI <prephitmp_7312(2001), pretmp_7664(1589), pretmp_7665(484), pretmp_7666(436), pretmp_7667(1585), pretmp_7668(1571), pretmp_7669(454), pretmp_7670(474), pretmp_7671(460), pretmp_7672(1580), pretmp_7673(465), pretmp_7674(482), pretmp_7675(1567), pretmp_7676(1551), pretmp_7677(428), pretmp_7678(1556), pretmp_7679(438), pretmp_7680(1560), pretmp_7681(448), pretmp_7682(2002), pretmp_7683(1517), pretmp_7684(339), pretmp_7685(1522), pretmp_7686(354), pretmp_7687(358), pretmp_7688(1534), pretmp_7689(405), pretmp_7690(1538), pretmp_7691(413), pretmp_7692(1542), pretmp_7693(419)>
<L446>:
  packet_size_rate_strings ={v} {CLOBBER};
  D.73693 ={v} {CLOBBER};
  # DEBUG this => &packet_size_rate_str
  # DEBUG this => &packet_size_rate_str
  # DEBUG this => &packet_size_rate_str
  _1682 = MEM[(char * *)&packet_size_rate_str];
  # DEBUG D#1 => &packet_size_rate_str
  # DEBUG this => D#1
  # DEBUG this => &packet_size_rate_str
  if (&packet_size_rate_str.D.11539._M_local_buf != _1682)
    goto <bb 2004>;
  else
    goto <bb 2005>;

  <bb 2004>:
  # DEBUG D#629 => packet_size_rate_str.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &packet_size_rate_str
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &packet_size_rate_str
  # DEBUG this => D#1
  # DEBUG this => &packet_size_rate_str
  # DEBUG D#626 => &packet_size_rate_str._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1682
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1682
  # DEBUG this => D#620
  # DEBUG D.153783 => D#621
  operator delete (_1682);

  <bb 2005>:
  # DEBUG D#630 => &packet_size_rate_str._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&packet_size_rate_str] ={v} {CLOBBER};
  resx 269

<L1019>:
  goto <bb 2008> (<L447>);

<L612>:
  pretmp_4372 = &this_129(D)->_packet_size;
  pretmp_2921 = &this_129(D)->_packet_size_rate;
  pretmp_2894 = &this_129(D)->_traffic;
  pretmp_6066 = &this_129(D)->_last_class;
  pretmp_6073 = &this_129(D)->_qtime;
  pretmp_5989 = &this_129(D)->_total_in_flight_flits;
  pretmp_5990 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6232 = &this_129(D)->_retired_packets;
  pretmp_6559 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7444 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7756 = &this_129(D)->_pair_plat;
  pretmp_7764 = &this_129(D)->_pair_nlat;
  pretmp_7772 = &this_129(D)->_pair_flat;
  pretmp_7780 = &this_129(D)->_sent_packets;
  pretmp_7788 = &this_129(D)->_accepted_packets;
  pretmp_7796 = &this_129(D)->_sent_flits;
  pretmp_7804 = &this_129(D)->_accepted_flits;
  pretmp_7812 = &this_129(D)->_stats;

  # prephitmp_2781 = PHI <prephitmp_2783(2006), prephitmp_2783(1513), prephitmp_2783(305), prephitmp_2783(1509), prephitmp_2783(310), prephitmp_5013(1497), pretmp_4372(2007), pretmp_3042(1505)>
  # prephitmp_2923 = PHI <prephitmp_4406(2006), pretmp_2915(1513), pretmp_2916(305), pretmp_2917(1509), pretmp_2918(310), pretmp_2919(1497), pretmp_2921(2007), pretmp_2922(1505)>
  # prephitmp_2896 = PHI <prephitmp_4432(2006), pretmp_2924(1513), pretmp_2905(305), pretmp_2906(1509), pretmp_2907(310), pretmp_2908(1497), pretmp_2894(2007), pretmp_2895(1505)>
  # prephitmp_6072 = PHI <prephitmp_2860(2006), pretmp_6063(1513), pretmp_6062(305), pretmp_6064(1509), pretmp_610(310), pretmp_6065(1497), pretmp_6066(2007), pretmp_5181(1505)>
  # prephitmp_6075 = PHI <prephitmp_2808(2006), pretmp_6071(1513), pretmp_6070(305), pretmp_6069(1509), pretmp_6068(310), pretmp_3758(1497), pretmp_6073(2007), pretmp_6074(1505)>
  # prephitmp_5996 = PHI <prephitmp_2766(2006), pretmp_6076(1513), pretmp_6077(305), pretmp_6078(1509), pretmp_6079(310), pretmp_6137(1497), pretmp_5989(2007), pretmp_5957(1505)>
  # prephitmp_6234 = PHI <prephitmp_2702(2006), pretmp_5995(1513), pretmp_5994(305), pretmp_5993(1509), pretmp_5992(310), pretmp_5991(1497), pretmp_5990(2007), pretmp_5986(1505)>
  # prephitmp_6231 = PHI <prephitmp_6019(2006), pretmp_5988(1513), pretmp_6233(305), pretmp_5987(1509), pretmp_5440(310), pretmp_5983(1497), pretmp_6232(2007), pretmp_5985(1505)>
  # prephitmp_6561 = PHI <prephitmp_6315(2006), pretmp_6554(1513), pretmp_6555(305), pretmp_6556(1509), pretmp_6557(310), pretmp_6558(1497), pretmp_6559(2007), pretmp_6560(1505)>
  # prephitmp_7446 = PHI <prephitmp_6592(2006), pretmp_7439(1513), pretmp_7440(305), pretmp_7441(1509), pretmp_7442(310), pretmp_7443(1497), pretmp_7444(2007), pretmp_7445(1505)>
  # prephitmp_7758 = PHI <prephitmp_7477(2006), pretmp_7751(1513), pretmp_7752(305), pretmp_7753(1509), pretmp_7754(310), pretmp_7755(1497), pretmp_7756(2007), pretmp_7757(1505)>
  # prephitmp_7766 = PHI <prephitmp_7508(2006), pretmp_7759(1513), pretmp_7760(305), pretmp_7761(1509), pretmp_7762(310), pretmp_7763(1497), pretmp_7764(2007), pretmp_7765(1505)>
  # prephitmp_7774 = PHI <prephitmp_7539(2006), pretmp_7767(1513), pretmp_7768(305), pretmp_7769(1509), pretmp_7770(310), pretmp_7771(1497), pretmp_7772(2007), pretmp_7773(1505)>
  # prephitmp_7782 = PHI <prephitmp_7570(2006), pretmp_7775(1513), pretmp_7776(305), pretmp_7777(1509), pretmp_7778(310), pretmp_7779(1497), pretmp_7780(2007), pretmp_7781(1505)>
  # prephitmp_7790 = PHI <prephitmp_7601(2006), pretmp_7783(1513), pretmp_7784(305), pretmp_7785(1509), pretmp_7786(310), pretmp_7787(1497), pretmp_7788(2007), pretmp_7789(1505)>
  # prephitmp_7798 = PHI <prephitmp_7632(2006), pretmp_7791(1513), pretmp_7792(305), pretmp_7793(1509), pretmp_7794(310), pretmp_7795(1497), pretmp_7796(2007), pretmp_7797(1505)>
  # prephitmp_7806 = PHI <prephitmp_7663(2006), pretmp_7799(1513), pretmp_7800(305), pretmp_7801(1509), pretmp_7802(310), pretmp_7803(1497), pretmp_7804(2007), pretmp_7805(1505)>
  # prephitmp_7814 = PHI <prephitmp_7694(2006), pretmp_7807(1513), pretmp_7808(305), pretmp_7809(1509), pretmp_7810(310), pretmp_7811(1497), pretmp_7812(2007), pretmp_7813(1505)>
<L447>:
  packet_size_strings ={v} {CLOBBER};
  # DEBUG this => &packet_size_str
  # DEBUG this => &packet_size_str
  # DEBUG this => &packet_size_str
  _1775 = MEM[(char * *)&packet_size_str];
  # DEBUG D#1 => &packet_size_str
  # DEBUG this => D#1
  # DEBUG this => &packet_size_str
  if (&packet_size_str.D.11539._M_local_buf != _1775)
    goto <bb 2009>;
  else
    goto <bb 2010>;

  <bb 2009>:
  # DEBUG D#629 => packet_size_str.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &packet_size_str
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &packet_size_str
  # DEBUG this => D#1
  # DEBUG this => &packet_size_str
  # DEBUG D#626 => &packet_size_str._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1775
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1775
  # DEBUG this => D#620
  # DEBUG D.153798 => D#621
  operator delete (_1775);

  <bb 2010>:
  # DEBUG D#630 => &packet_size_str._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&packet_size_str] ={v} {CLOBBER};
  resx 245

<L1020>:
  goto <bb 2013> (<L448>);

<L567>:
  pretmp_3020 = &this_129(D)->_packet_size;
  pretmp_6125 = &this_129(D)->_packet_size_rate;
  pretmp_7 = &this_129(D)->_traffic;
  pretmp_5816 = &this_129(D)->_last_class;
  pretmp_5814 = &this_129(D)->_qtime;
  pretmp_5782 = &this_129(D)->_total_in_flight_flits;
  pretmp_5952 = &this_129(D)->_measured_in_flight_flits;
  pretmp_5167 = &this_129(D)->_retired_packets;
  pretmp_7397 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7709 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_7845 = &this_129(D)->_pair_plat;
  pretmp_7888 = &this_129(D)->_pair_nlat;
  pretmp_7931 = &this_129(D)->_pair_flat;
  pretmp_7974 = &this_129(D)->_sent_packets;
  pretmp_8017 = &this_129(D)->_accepted_packets;
  pretmp_8060 = &this_129(D)->_sent_flits;
  pretmp_8103 = &this_129(D)->_accepted_flits;
  pretmp_8146 = &this_129(D)->_stats;

  # prephitmp_2929 = PHI <prephitmp_2781(2011), pretmp_3019(1485), pretmp_3020(2012), pretmp_3021(270), pretmp_2995(1481), pretmp_2996(260), pretmp_2997(1476), pretmp_2998(173), pretmp_2999(251), pretmp_2990(1467), pretmp_2991(192), pretmp_2992(241), pretmp_2993(1462), pretmp_2985(211), pretmp_2986(232), pretmp_2987(1453), pretmp_2988(230), pretmp_2979(222), pretmp_2980(1448), pretmp_2981(249), pretmp_2982(213), pretmp_2983(1439), pretmp_2941(268), pretmp_2942(203), pretmp_2943(1381), pretmp_2944(1434), pretmp_2945(133), pretmp_2947(1385), pretmp_2948(138), pretmp_2949(1389), pretmp_2950(145), pretmp_2967(1393), pretmp_2968(151), pretmp_2969(1397), pretmp_2970(156), pretmp_2971(1406), pretmp_2936(165), pretmp_2937(1411), pretmp_2938(175), pretmp_2939(1420), pretmp_2926(184), pretmp_2927(1425), pretmp_2928(194)>
  # prephitmp_6121 = PHI <prephitmp_2923(2011), pretmp_4975(1485), pretmp_6125(2012), pretmp_5230(270), pretmp_5333(1481), pretmp_5277(260), pretmp_1657(1476), pretmp_5408(173), pretmp_4874(251), pretmp_5248(1467), pretmp_5337(192), pretmp_5244(241), pretmp_5336(1462), pretmp_4833(211), pretmp_4890(232), pretmp_5254(1453), pretmp_5341(230), pretmp_5235(222), pretmp_5016(1448), pretmp_5259(249), pretmp_5344(213), pretmp_771(1439), pretmp_778(268), pretmp_6124(203), pretmp_42(1381), pretmp_9(1434), pretmp_43(133), pretmp_10(1385), pretmp_6246(138), pretmp_6245(1389), pretmp_6242(145), pretmp_6250(1393), pretmp_5289(151), pretmp_4931(1397), pretmp_6240(156), pretmp_6244(1406), pretmp_5286(165), pretmp_4919(1411), pretmp_6122(175), pretmp_6241(1420), pretmp_41(184), pretmp_8(1425), pretmp_6239(194)>
  # prephitmp_3061 = PHI <prephitmp_2896(2011), pretmp_38(1485), pretmp_7(2012), pretmp_6235(270), pretmp_6238(1481), pretmp_35(260), pretmp_6(1476), pretmp_6119(173), pretmp_6120(251), pretmp_32(1467), pretmp_4(192), pretmp_33(241), pretmp_5(1462), pretmp_6107(211), pretmp_6108(232), pretmp_6110(1453), pretmp_6111(230), pretmp_31(222), pretmp_3(1448), pretmp_4970(249), pretmp_4850(213), pretmp_4851(1439), pretmp_6112(268), pretmp_6113(203), pretmp_6114(1381), pretmp_6116(1434), pretmp_6117(133), pretmp_29(1385), pretmp_2(138), pretmp_6101(1389), pretmp_6102(145), pretmp_4828(1393), pretmp_4823(151), pretmp_6092(1397), pretmp_6093(156), pretmp_6057(1406), pretmp_6056(165), pretmp_3046(1411), pretmp_6059(175), pretmp_6058(1420), pretmp_602(184), pretmp_6061(1425), pretmp_6060(194)>
  # prephitmp_5812 = PHI <prephitmp_6072(2011), pretmp_5846(1485), pretmp_5816(2012), pretmp_5838(270), pretmp_5835(1481), pretmp_6190(260), pretmp_5837(1476), pretmp_6189(173), pretmp_5836(251), pretmp_5758(1467), pretmp_6138(192), pretmp_5825(241), pretmp_5834(1462), pretmp_5833(211), pretmp_5832(232), pretmp_5829(1453), pretmp_5826(230), pretmp_5830(222), pretmp_5827(1448), pretmp_5831(249), pretmp_5828(213), pretmp_5824(1439), pretmp_6188(268), pretmp_6187(203), pretmp_4875(1381), pretmp_5823(1434), pretmp_5820(133), pretmp_6186(1385), pretmp_5822(138), pretmp_6185(1389), pretmp_5821(145), pretmp_5800(1393), pretmp_5817(151), pretmp_6184(1397), pretmp_5819(156), pretmp_6183(1406), pretmp_5818(165), pretmp_5807(1411), pretmp_4951(175), pretmp_5434(1420), pretmp_5815(184), pretmp_4957(1425), pretmp_6182(194)>
  # prephitmp_5786 = PHI <prephitmp_6075(2011), pretmp_6181(1485), pretmp_5814(2012), pretmp_6180(270), pretmp_5813(1481), pretmp_5811(260), pretmp_4958(1476), pretmp_6179(173), pretmp_6177(251), pretmp_6178(1467), pretmp_5808(192), pretmp_6176(241), pretmp_5810(1462), pretmp_6175(211), pretmp_5809(232), pretmp_4959(1453), pretmp_5446(230), pretmp_4960(222), pretmp_5804(1448), pretmp_6174(249), pretmp_5806(213), pretmp_6173(1439), pretmp_5805(268), pretmp_5801(203), pretmp_5803(1381), pretmp_5802(1434), pretmp_5798(133), pretmp_5797(1385), pretmp_5796(138), pretmp_4961(1389), pretmp_5793(145), pretmp_6172(1393), pretmp_5795(151), pretmp_6171(1397), pretmp_5794(156), pretmp_5790(1406), pretmp_5792(165), pretmp_5791(1411), pretmp_5872(175), pretmp_5000(1420), pretmp_4962(184), pretmp_5789(1425), pretmp_5787(194)>
  # prephitmp_5757 = PHI <prephitmp_5996(2011), pretmp_5785(1485), pretmp_5782(2012), pretmp_6170(270), pretmp_5781(1481), pretmp_5778(260), pretmp_4963(1476), pretmp_4887(173), pretmp_5905(251), pretmp_5776(1467), pretmp_5773(192), pretmp_5774(241), pretmp_5775(1462), pretmp_5777(211), pretmp_4886(232), pretmp_5769(1453), pretmp_768(230), pretmp_5767(222), pretmp_5768(1448), pretmp_5913(249), pretmp_5449(213), pretmp_5934(1439), pretmp_4969(268), pretmp_5772(203), pretmp_5765(1381), pretmp_5762(1434), pretmp_5763(133), pretmp_5764(1385), pretmp_5766(138), pretmp_6169(1389), pretmp_4968(145), pretmp_6167(1393), pretmp_6168(151), pretmp_5753(1397), pretmp_6166(156), pretmp_6165(1406), pretmp_5759(165), pretmp_5760(1411), pretmp_5761(175), pretmp_5937(1420), pretmp_4837(184), pretmp_759(1425), pretmp_5756(194)>
  # prephitmp_5176 = PHI <prephitmp_6234(2011), pretmp_5755(1485), pretmp_5952(2012), pretmp_5954(270), pretmp_6164(1481), pretmp_6162(260), pretmp_6163(1476), pretmp_4972(173), pretmp_4836(251), pretmp_5750(1467), pretmp_5749(192), pretmp_6154(241), pretmp_5748(1462), pretmp_5745(211), pretmp_5744(232), pretmp_5743(1453), pretmp_5740(230), pretmp_5737(222), pretmp_2951(1448), pretmp_475(249), pretmp_3000(213), pretmp_3001(1439), pretmp_595(268), pretmp_3053(203), pretmp_3054(1381), pretmp_2964(1434), pretmp_2965(133), pretmp_480(1385), pretmp_3062(138), pretmp_607(1389), pretmp_3069(145), pretmp_3070(1393), pretmp_3008(151), pretmp_4973(1397), pretmp_3009(156), pretmp_533(1406), pretmp_5162(165), pretmp_6080(1411), pretmp_6081(175), pretmp_6158(1420), pretmp_6161(184), pretmp_6160(1425), pretmp_5177(194)>
  # prephitmp_6284 = PHI <prephitmp_6231(2011), pretmp_3779(1485), pretmp_5167(2012), pretmp_5163(270), pretmp_6159(1481), pretmp_6157(260), pretmp_5153(1476), pretmp_808(173), pretmp_4785(251), pretmp_4981(1467), pretmp_4980(192), pretmp_782(241), pretmp_4977(1462), pretmp_4976(211), pretmp_775(232), pretmp_5149(1453), pretmp_5148(230), pretmp_1483(222), pretmp_169(1448), pretmp_165(249), pretmp_34(213), pretmp_5069(1439), pretmp_4884(268), pretmp_4964(203), pretmp_6156(1381), pretmp_4840(1434), pretmp_6155(133), pretmp_4999(1385), pretmp_4834(138), pretmp_4993(1389), pretmp_6271(145), pretmp_6272(1393), pretmp_6273(151), pretmp_6274(1397), pretmp_6275(156), pretmp_6276(1406), pretmp_6277(165), pretmp_6278(1411), pretmp_6279(175), pretmp_6280(1420), pretmp_6281(184), pretmp_6282(1425), pretmp_6283(194)>
  # prephitmp_7438 = PHI <prephitmp_6561(2011), pretmp_7396(1485), pretmp_7397(2012), pretmp_7398(270), pretmp_7399(1481), pretmp_7400(260), pretmp_7401(1476), pretmp_7402(173), pretmp_7403(251), pretmp_7404(1467), pretmp_7405(192), pretmp_7406(241), pretmp_7407(1462), pretmp_7408(211), pretmp_7409(232), pretmp_7410(1453), pretmp_7411(230), pretmp_7412(222), pretmp_7413(1448), pretmp_7414(249), pretmp_7415(213), pretmp_7416(1439), pretmp_7417(268), pretmp_7418(203), pretmp_7419(1381), pretmp_7420(1434), pretmp_7421(133), pretmp_7422(1385), pretmp_7423(138), pretmp_7424(1389), pretmp_7425(145), pretmp_7426(1393), pretmp_7427(151), pretmp_7428(1397), pretmp_7429(156), pretmp_7430(1406), pretmp_7431(165), pretmp_7432(1411), pretmp_7433(175), pretmp_7434(1420), pretmp_7435(184), pretmp_7436(1425), pretmp_7437(194)>
  # prephitmp_7750 = PHI <prephitmp_7446(2011), pretmp_7708(1485), pretmp_7709(2012), pretmp_7710(270), pretmp_7711(1481), pretmp_7712(260), pretmp_7713(1476), pretmp_7714(173), pretmp_7715(251), pretmp_7716(1467), pretmp_7717(192), pretmp_7718(241), pretmp_7719(1462), pretmp_7720(211), pretmp_7721(232), pretmp_7722(1453), pretmp_7723(230), pretmp_7724(222), pretmp_7725(1448), pretmp_7726(249), pretmp_7727(213), pretmp_7728(1439), pretmp_7729(268), pretmp_7730(203), pretmp_7731(1381), pretmp_7732(1434), pretmp_7733(133), pretmp_7734(1385), pretmp_7735(138), pretmp_7736(1389), pretmp_7737(145), pretmp_7738(1393), pretmp_7739(151), pretmp_7740(1397), pretmp_7741(156), pretmp_7742(1406), pretmp_7743(165), pretmp_7744(1411), pretmp_7745(175), pretmp_7746(1420), pretmp_7747(184), pretmp_7748(1425), pretmp_7749(194)>
  # prephitmp_7886 = PHI <prephitmp_7758(2011), pretmp_7844(1485), pretmp_7845(2012), pretmp_7846(270), pretmp_7847(1481), pretmp_7848(260), pretmp_7849(1476), pretmp_7850(173), pretmp_7851(251), pretmp_7852(1467), pretmp_7853(192), pretmp_7854(241), pretmp_7855(1462), pretmp_7856(211), pretmp_7857(232), pretmp_7858(1453), pretmp_7859(230), pretmp_7860(222), pretmp_7861(1448), pretmp_7862(249), pretmp_7863(213), pretmp_7864(1439), pretmp_7865(268), pretmp_7866(203), pretmp_7867(1381), pretmp_7868(1434), pretmp_7869(133), pretmp_7870(1385), pretmp_7871(138), pretmp_7872(1389), pretmp_7873(145), pretmp_7874(1393), pretmp_7875(151), pretmp_7876(1397), pretmp_7877(156), pretmp_7878(1406), pretmp_7879(165), pretmp_7880(1411), pretmp_7881(175), pretmp_7882(1420), pretmp_7883(184), pretmp_7884(1425), pretmp_7885(194)>
  # prephitmp_7929 = PHI <prephitmp_7766(2011), pretmp_7887(1485), pretmp_7888(2012), pretmp_7889(270), pretmp_7890(1481), pretmp_7891(260), pretmp_7892(1476), pretmp_7893(173), pretmp_7894(251), pretmp_7895(1467), pretmp_7896(192), pretmp_7897(241), pretmp_7898(1462), pretmp_7899(211), pretmp_7900(232), pretmp_7901(1453), pretmp_7902(230), pretmp_7903(222), pretmp_7904(1448), pretmp_7905(249), pretmp_7906(213), pretmp_7907(1439), pretmp_7908(268), pretmp_7909(203), pretmp_7910(1381), pretmp_7911(1434), pretmp_7912(133), pretmp_7913(1385), pretmp_7914(138), pretmp_7915(1389), pretmp_7916(145), pretmp_7917(1393), pretmp_7918(151), pretmp_7919(1397), pretmp_7920(156), pretmp_7921(1406), pretmp_7922(165), pretmp_7923(1411), pretmp_7924(175), pretmp_7925(1420), pretmp_7926(184), pretmp_7927(1425), pretmp_7928(194)>
  # prephitmp_7972 = PHI <prephitmp_7774(2011), pretmp_7930(1485), pretmp_7931(2012), pretmp_7932(270), pretmp_7933(1481), pretmp_7934(260), pretmp_7935(1476), pretmp_7936(173), pretmp_7937(251), pretmp_7938(1467), pretmp_7939(192), pretmp_7940(241), pretmp_7941(1462), pretmp_7942(211), pretmp_7943(232), pretmp_7944(1453), pretmp_7945(230), pretmp_7946(222), pretmp_7947(1448), pretmp_7948(249), pretmp_7949(213), pretmp_7950(1439), pretmp_7951(268), pretmp_7952(203), pretmp_7953(1381), pretmp_7954(1434), pretmp_7955(133), pretmp_7956(1385), pretmp_7957(138), pretmp_7958(1389), pretmp_7959(145), pretmp_7960(1393), pretmp_7961(151), pretmp_7962(1397), pretmp_7963(156), pretmp_7964(1406), pretmp_7965(165), pretmp_7966(1411), pretmp_7967(175), pretmp_7968(1420), pretmp_7969(184), pretmp_7970(1425), pretmp_7971(194)>
  # prephitmp_8015 = PHI <prephitmp_7782(2011), pretmp_7973(1485), pretmp_7974(2012), pretmp_7975(270), pretmp_7976(1481), pretmp_7977(260), pretmp_7978(1476), pretmp_7979(173), pretmp_7980(251), pretmp_7981(1467), pretmp_7982(192), pretmp_7983(241), pretmp_7984(1462), pretmp_7985(211), pretmp_7986(232), pretmp_7987(1453), pretmp_7988(230), pretmp_7989(222), pretmp_7990(1448), pretmp_7991(249), pretmp_7992(213), pretmp_7993(1439), pretmp_7994(268), pretmp_7995(203), pretmp_7996(1381), pretmp_7997(1434), pretmp_7998(133), pretmp_7999(1385), pretmp_8000(138), pretmp_8001(1389), pretmp_8002(145), pretmp_8003(1393), pretmp_8004(151), pretmp_8005(1397), pretmp_8006(156), pretmp_8007(1406), pretmp_8008(165), pretmp_8009(1411), pretmp_8010(175), pretmp_8011(1420), pretmp_8012(184), pretmp_8013(1425), pretmp_8014(194)>
  # prephitmp_8058 = PHI <prephitmp_7790(2011), pretmp_8016(1485), pretmp_8017(2012), pretmp_8018(270), pretmp_8019(1481), pretmp_8020(260), pretmp_8021(1476), pretmp_8022(173), pretmp_8023(251), pretmp_8024(1467), pretmp_8025(192), pretmp_8026(241), pretmp_8027(1462), pretmp_8028(211), pretmp_8029(232), pretmp_8030(1453), pretmp_8031(230), pretmp_8032(222), pretmp_8033(1448), pretmp_8034(249), pretmp_8035(213), pretmp_8036(1439), pretmp_8037(268), pretmp_8038(203), pretmp_8039(1381), pretmp_8040(1434), pretmp_8041(133), pretmp_8042(1385), pretmp_8043(138), pretmp_8044(1389), pretmp_8045(145), pretmp_8046(1393), pretmp_8047(151), pretmp_8048(1397), pretmp_8049(156), pretmp_8050(1406), pretmp_8051(165), pretmp_8052(1411), pretmp_8053(175), pretmp_8054(1420), pretmp_8055(184), pretmp_8056(1425), pretmp_8057(194)>
  # prephitmp_8101 = PHI <prephitmp_7798(2011), pretmp_8059(1485), pretmp_8060(2012), pretmp_8061(270), pretmp_8062(1481), pretmp_8063(260), pretmp_8064(1476), pretmp_8065(173), pretmp_8066(251), pretmp_8067(1467), pretmp_8068(192), pretmp_8069(241), pretmp_8070(1462), pretmp_8071(211), pretmp_8072(232), pretmp_8073(1453), pretmp_8074(230), pretmp_8075(222), pretmp_8076(1448), pretmp_8077(249), pretmp_8078(213), pretmp_8079(1439), pretmp_8080(268), pretmp_8081(203), pretmp_8082(1381), pretmp_8083(1434), pretmp_8084(133), pretmp_8085(1385), pretmp_8086(138), pretmp_8087(1389), pretmp_8088(145), pretmp_8089(1393), pretmp_8090(151), pretmp_8091(1397), pretmp_8092(156), pretmp_8093(1406), pretmp_8094(165), pretmp_8095(1411), pretmp_8096(175), pretmp_8097(1420), pretmp_8098(184), pretmp_8099(1425), pretmp_8100(194)>
  # prephitmp_8144 = PHI <prephitmp_7806(2011), pretmp_8102(1485), pretmp_8103(2012), pretmp_8104(270), pretmp_8105(1481), pretmp_8106(260), pretmp_8107(1476), pretmp_8108(173), pretmp_8109(251), pretmp_8110(1467), pretmp_8111(192), pretmp_8112(241), pretmp_8113(1462), pretmp_8114(211), pretmp_8115(232), pretmp_8116(1453), pretmp_8117(230), pretmp_8118(222), pretmp_8119(1448), pretmp_8120(249), pretmp_8121(213), pretmp_8122(1439), pretmp_8123(268), pretmp_8124(203), pretmp_8125(1381), pretmp_8126(1434), pretmp_8127(133), pretmp_8128(1385), pretmp_8129(138), pretmp_8130(1389), pretmp_8131(145), pretmp_8132(1393), pretmp_8133(151), pretmp_8134(1397), pretmp_8135(156), pretmp_8136(1406), pretmp_8137(165), pretmp_8138(1411), pretmp_8139(175), pretmp_8140(1420), pretmp_8141(184), pretmp_8142(1425), pretmp_8143(194)>
  # prephitmp_8187 = PHI <prephitmp_7814(2011), pretmp_8145(1485), pretmp_8146(2012), pretmp_8147(270), pretmp_8148(1481), pretmp_8149(260), pretmp_8150(1476), pretmp_8151(173), pretmp_8152(251), pretmp_8153(1467), pretmp_8154(192), pretmp_8155(241), pretmp_8156(1462), pretmp_8157(211), pretmp_8158(232), pretmp_8159(1453), pretmp_8160(230), pretmp_8161(222), pretmp_8162(1448), pretmp_8163(249), pretmp_8164(213), pretmp_8165(1439), pretmp_8166(268), pretmp_8167(203), pretmp_8168(1381), pretmp_8169(1434), pretmp_8170(133), pretmp_8171(1385), pretmp_8172(138), pretmp_8173(1389), pretmp_8174(145), pretmp_8175(1393), pretmp_8176(151), pretmp_8177(1397), pretmp_8178(156), pretmp_8179(1406), pretmp_8180(165), pretmp_8181(1411), pretmp_8182(175), pretmp_8183(1420), pretmp_8184(184), pretmp_8185(1425), pretmp_8186(194)>
<L448>:
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _1780 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _1780)
    goto <bb 2014>;
  else
    goto <bb 2015>;

  <bb 2014>:
  # DEBUG D#629 => rf.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &rf
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#626 => &rf._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1780
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1780
  # DEBUG this => D#620
  # DEBUG D.153813 => D#621
  operator delete (_1780);

  <bb 2015>:
  # DEBUG D#630 => &rf._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)&rf] ={v} {CLOBBER};
  resx 144

<L1021>:
  goto <bb 2018> (<L449>);

<L548>:
  pretmp_5231 = &this_129(D)->_packet_size;
  pretmp_6202 = &this_129(D)->_packet_size_rate;
  pretmp_5852 = &this_129(D)->_traffic;
  pretmp_6489 = &this_129(D)->_last_class;
  pretmp_6502 = &this_129(D)->_qtime;
  pretmp_6515 = &this_129(D)->_total_in_flight_flits;
  pretmp_6528 = &this_129(D)->_measured_in_flight_flits;
  pretmp_6541 = &this_129(D)->_retired_packets;
  pretmp_7695 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_7831 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8204 = &this_129(D)->_pair_plat;
  pretmp_8217 = &this_129(D)->_pair_nlat;
  pretmp_8230 = &this_129(D)->_pair_flat;
  pretmp_8243 = &this_129(D)->_sent_packets;
  pretmp_8256 = &this_129(D)->_accepted_packets;
  pretmp_8269 = &this_129(D)->_sent_flits;
  pretmp_8282 = &this_129(D)->_accepted_flits;
  pretmp_8295 = &this_129(D)->_stats;

  # prephitmp_5368 = PHI <pretmp_5231(2017), pretmp_5381(54), pretmp_5224(58), pretmp_5330(62), pretmp_5221(66), pretmp_5329(70), pretmp_5217(74), pretmp_5328(78), pretmp_789(82), prephitmp_2929(2016), pretmp_5178(1377), pretmp_5425(1352), pretmp_6135(88)>
  # prephitmp_6198 = PHI <pretmp_6202(2017), pretmp_5856(54), pretmp_6201(58), pretmp_5855(62), pretmp_5845(66), pretmp_193(70), pretmp_4876(74), pretmp_187(78), pretmp_6200(82), prephitmp_6121(2016), pretmp_5851(1377), pretmp_6199(1352), pretmp_5853(88)>
  # prephitmp_5848 = PHI <pretmp_5852(2017), pretmp_752(54), pretmp_6196(58), pretmp_6197(62), pretmp_6194(66), pretmp_5850(70), pretmp_6193(74), pretmp_6195(78), pretmp_5847(82), prephitmp_3061(2016), pretmp_6192(1377), pretmp_5849(1352), pretmp_6191(88)>
  # prephitmp_6501 = PHI <pretmp_6489(2017), pretmp_6490(54), pretmp_6491(58), pretmp_6492(62), pretmp_6493(66), pretmp_6494(70), pretmp_6495(74), pretmp_6496(78), pretmp_6497(82), prephitmp_5812(2016), pretmp_6498(1377), pretmp_6499(1352), pretmp_6500(88)>
  # prephitmp_6514 = PHI <pretmp_6502(2017), pretmp_6503(54), pretmp_6504(58), pretmp_6505(62), pretmp_6506(66), pretmp_6507(70), pretmp_6508(74), pretmp_6509(78), pretmp_6510(82), prephitmp_5786(2016), pretmp_6511(1377), pretmp_6512(1352), pretmp_6513(88)>
  # prephitmp_6527 = PHI <pretmp_6515(2017), pretmp_6516(54), pretmp_6517(58), pretmp_6518(62), pretmp_6519(66), pretmp_6520(70), pretmp_6521(74), pretmp_6522(78), pretmp_6523(82), prephitmp_5757(2016), pretmp_6524(1377), pretmp_6525(1352), pretmp_6526(88)>
  # prephitmp_6540 = PHI <pretmp_6528(2017), pretmp_6529(54), pretmp_6530(58), pretmp_6531(62), pretmp_6532(66), pretmp_6533(70), pretmp_6534(74), pretmp_6535(78), pretmp_6536(82), prephitmp_5176(2016), pretmp_6537(1377), pretmp_6538(1352), pretmp_6539(88)>
  # prephitmp_6553 = PHI <pretmp_6541(2017), pretmp_6542(54), pretmp_6543(58), pretmp_6544(62), pretmp_6545(66), pretmp_6546(70), pretmp_6547(74), pretmp_6548(78), pretmp_6549(82), prephitmp_6284(2016), pretmp_6550(1377), pretmp_6551(1352), pretmp_6552(88)>
  # prephitmp_7707 = PHI <pretmp_7695(2017), pretmp_7696(54), pretmp_7697(58), pretmp_7698(62), pretmp_7699(66), pretmp_7700(70), pretmp_7701(74), pretmp_7702(78), pretmp_7703(82), prephitmp_7438(2016), pretmp_7704(1377), pretmp_7705(1352), pretmp_7706(88)>
  # prephitmp_7843 = PHI <pretmp_7831(2017), pretmp_7832(54), pretmp_7833(58), pretmp_7834(62), pretmp_7835(66), pretmp_7836(70), pretmp_7837(74), pretmp_7838(78), pretmp_7839(82), prephitmp_7750(2016), pretmp_7840(1377), pretmp_7841(1352), pretmp_7842(88)>
  # prephitmp_8216 = PHI <pretmp_8204(2017), pretmp_8205(54), pretmp_8206(58), pretmp_8207(62), pretmp_8208(66), pretmp_8209(70), pretmp_8210(74), pretmp_8211(78), pretmp_8212(82), prephitmp_7886(2016), pretmp_8213(1377), pretmp_8214(1352), pretmp_8215(88)>
  # prephitmp_8229 = PHI <pretmp_8217(2017), pretmp_8218(54), pretmp_8219(58), pretmp_8220(62), pretmp_8221(66), pretmp_8222(70), pretmp_8223(74), pretmp_8224(78), pretmp_8225(82), prephitmp_7929(2016), pretmp_8226(1377), pretmp_8227(1352), pretmp_8228(88)>
  # prephitmp_8242 = PHI <pretmp_8230(2017), pretmp_8231(54), pretmp_8232(58), pretmp_8233(62), pretmp_8234(66), pretmp_8235(70), pretmp_8236(74), pretmp_8237(78), pretmp_8238(82), prephitmp_7972(2016), pretmp_8239(1377), pretmp_8240(1352), pretmp_8241(88)>
  # prephitmp_8255 = PHI <pretmp_8243(2017), pretmp_8244(54), pretmp_8245(58), pretmp_8246(62), pretmp_8247(66), pretmp_8248(70), pretmp_8249(74), pretmp_8250(78), pretmp_8251(82), prephitmp_8015(2016), pretmp_8252(1377), pretmp_8253(1352), pretmp_8254(88)>
  # prephitmp_8268 = PHI <pretmp_8256(2017), pretmp_8257(54), pretmp_8258(58), pretmp_8259(62), pretmp_8260(66), pretmp_8261(70), pretmp_8262(74), pretmp_8263(78), pretmp_8264(82), prephitmp_8058(2016), pretmp_8265(1377), pretmp_8266(1352), pretmp_8267(88)>
  # prephitmp_8281 = PHI <pretmp_8269(2017), pretmp_8270(54), pretmp_8271(58), pretmp_8272(62), pretmp_8273(66), pretmp_8274(70), pretmp_8275(74), pretmp_8276(78), pretmp_8277(82), prephitmp_8101(2016), pretmp_8278(1377), pretmp_8279(1352), pretmp_8280(88)>
  # prephitmp_8294 = PHI <pretmp_8282(2017), pretmp_8283(54), pretmp_8284(58), pretmp_8285(62), pretmp_8286(66), pretmp_8287(70), pretmp_8288(74), pretmp_8289(78), pretmp_8290(82), prephitmp_8144(2016), pretmp_8291(1377), pretmp_8292(1352), pretmp_8293(88)>
  # prephitmp_8307 = PHI <pretmp_8295(2017), pretmp_8296(54), pretmp_8297(58), pretmp_8298(62), pretmp_8299(66), pretmp_8300(70), pretmp_8301(74), pretmp_8302(78), pretmp_8303(82), prephitmp_8187(2016), pretmp_8304(1377), pretmp_8305(1352), pretmp_8306(88)>
<L449>:
  # DEBUG this => &priority
  # DEBUG this => &priority
  # DEBUG this => &priority
  _1813 = MEM[(char * *)&priority];
  # DEBUG D#1 => &priority
  # DEBUG this => D#1
  # DEBUG this => &priority
  if (&priority.D.11539._M_local_buf != _1813)
    goto <bb 2019>;
  else
    goto <bb 2020>;

  <bb 2019>:
  # DEBUG D#629 => priority.D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => &priority
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => &priority
  # DEBUG this => D#1
  # DEBUG this => &priority
  # DEBUG D#626 => &priority._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _1813
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _1813
  # DEBUG this => D#620
  # DEBUG D.153828 => D#621
  operator delete (_1813);

  <bb 2020>:
  # DEBUG D#630 => &priority._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  resx 115

<L1022>:
  goto <bb 2023> (<L450>);

<L540>:
  pretmp_5859 = &this_129(D)->_packet_size;
  pretmp_6465 = &this_129(D)->_packet_size_rate;
  pretmp_6481 = &this_129(D)->_traffic;
  pretmp_7324 = &this_129(D)->_last_class;
  pretmp_7340 = &this_129(D)->_qtime;
  pretmp_7356 = &this_129(D)->_total_in_flight_flits;
  pretmp_7372 = &this_129(D)->_measured_in_flight_flits;
  pretmp_7388 = &this_129(D)->_retired_packets;
  pretmp_7823 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_8196 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_8316 = &this_129(D)->_pair_plat;
  pretmp_8332 = &this_129(D)->_pair_nlat;
  pretmp_8348 = &this_129(D)->_pair_flat;
  pretmp_8364 = &this_129(D)->_sent_packets;
  pretmp_8380 = &this_129(D)->_accepted_packets;
  pretmp_8396 = &this_129(D)->_sent_flits;
  pretmp_8412 = &this_129(D)->_accepted_flits;
  pretmp_8428 = &this_129(D)->_stats;

  # prephitmp_5854 = PHI <pretmp_6210(24), prephitmp_5368(2021), pretmp_6211(1336), pretmp_6208(36), pretmp_6209(1340), pretmp_5858(41), pretmp_6207(1344), pretmp_5860(46), pretmp_6206(1348), pretmp_5859(2022), pretmp_5742(1324), pretmp_6203(19), pretmp_5857(1328), pretmp_6204(26), pretmp_6205(1332), pretmp_5747(31)>
  # prephitmp_6472 = PHI <pretmp_6457(24), prephitmp_6198(2021), pretmp_6458(1336), pretmp_6459(36), pretmp_6460(1340), pretmp_6461(41), pretmp_6462(1344), pretmp_6463(46), pretmp_6464(1348), pretmp_6465(2022), pretmp_6466(1324), pretmp_6467(19), pretmp_6468(1328), pretmp_6469(26), pretmp_6470(1332), pretmp_6471(31)>
  # prephitmp_6488 = PHI <pretmp_6473(24), prephitmp_5848(2021), pretmp_6474(1336), pretmp_6475(36), pretmp_6476(1340), pretmp_6477(41), pretmp_6478(1344), pretmp_6479(46), pretmp_6480(1348), pretmp_6481(2022), pretmp_6482(1324), pretmp_6483(19), pretmp_6484(1328), pretmp_6485(26), pretmp_6486(1332), pretmp_6487(31)>
  # prephitmp_7331 = PHI <pretmp_7316(24), prephitmp_6501(2021), pretmp_7317(1336), pretmp_7318(36), pretmp_7319(1340), pretmp_7320(41), pretmp_7321(1344), pretmp_7322(46), pretmp_7323(1348), pretmp_7324(2022), pretmp_7325(1324), pretmp_7326(19), pretmp_7327(1328), pretmp_7328(26), pretmp_7329(1332), pretmp_7330(31)>
  # prephitmp_7347 = PHI <pretmp_7332(24), prephitmp_6514(2021), pretmp_7333(1336), pretmp_7334(36), pretmp_7335(1340), pretmp_7336(41), pretmp_7337(1344), pretmp_7338(46), pretmp_7339(1348), pretmp_7340(2022), pretmp_7341(1324), pretmp_7342(19), pretmp_7343(1328), pretmp_7344(26), pretmp_7345(1332), pretmp_7346(31)>
  # prephitmp_7363 = PHI <pretmp_7348(24), prephitmp_6527(2021), pretmp_7349(1336), pretmp_7350(36), pretmp_7351(1340), pretmp_7352(41), pretmp_7353(1344), pretmp_7354(46), pretmp_7355(1348), pretmp_7356(2022), pretmp_7357(1324), pretmp_7358(19), pretmp_7359(1328), pretmp_7360(26), pretmp_7361(1332), pretmp_7362(31)>
  # prephitmp_7379 = PHI <pretmp_7364(24), prephitmp_6540(2021), pretmp_7365(1336), pretmp_7366(36), pretmp_7367(1340), pretmp_7368(41), pretmp_7369(1344), pretmp_7370(46), pretmp_7371(1348), pretmp_7372(2022), pretmp_7373(1324), pretmp_7374(19), pretmp_7375(1328), pretmp_7376(26), pretmp_7377(1332), pretmp_7378(31)>
  # prephitmp_7395 = PHI <pretmp_7380(24), prephitmp_6553(2021), pretmp_7381(1336), pretmp_7382(36), pretmp_7383(1340), pretmp_7384(41), pretmp_7385(1344), pretmp_7386(46), pretmp_7387(1348), pretmp_7388(2022), pretmp_7389(1324), pretmp_7390(19), pretmp_7391(1328), pretmp_7392(26), pretmp_7393(1332), pretmp_7394(31)>
  # prephitmp_7830 = PHI <pretmp_7815(24), prephitmp_7707(2021), pretmp_7816(1336), pretmp_7817(36), pretmp_7818(1340), pretmp_7819(41), pretmp_7820(1344), pretmp_7821(46), pretmp_7822(1348), pretmp_7823(2022), pretmp_7824(1324), pretmp_7825(19), pretmp_7826(1328), pretmp_7827(26), pretmp_7828(1332), pretmp_7829(31)>
  # prephitmp_8203 = PHI <pretmp_8188(24), prephitmp_7843(2021), pretmp_8189(1336), pretmp_8190(36), pretmp_8191(1340), pretmp_8192(41), pretmp_8193(1344), pretmp_8194(46), pretmp_8195(1348), pretmp_8196(2022), pretmp_8197(1324), pretmp_8198(19), pretmp_8199(1328), pretmp_8200(26), pretmp_8201(1332), pretmp_8202(31)>
  # prephitmp_8323 = PHI <pretmp_8308(24), prephitmp_8216(2021), pretmp_8309(1336), pretmp_8310(36), pretmp_8311(1340), pretmp_8312(41), pretmp_8313(1344), pretmp_8314(46), pretmp_8315(1348), pretmp_8316(2022), pretmp_8317(1324), pretmp_8318(19), pretmp_8319(1328), pretmp_8320(26), pretmp_8321(1332), pretmp_8322(31)>
  # prephitmp_8339 = PHI <pretmp_8324(24), prephitmp_8229(2021), pretmp_8325(1336), pretmp_8326(36), pretmp_8327(1340), pretmp_8328(41), pretmp_8329(1344), pretmp_8330(46), pretmp_8331(1348), pretmp_8332(2022), pretmp_8333(1324), pretmp_8334(19), pretmp_8335(1328), pretmp_8336(26), pretmp_8337(1332), pretmp_8338(31)>
  # prephitmp_8355 = PHI <pretmp_8340(24), prephitmp_8242(2021), pretmp_8341(1336), pretmp_8342(36), pretmp_8343(1340), pretmp_8344(41), pretmp_8345(1344), pretmp_8346(46), pretmp_8347(1348), pretmp_8348(2022), pretmp_8349(1324), pretmp_8350(19), pretmp_8351(1328), pretmp_8352(26), pretmp_8353(1332), pretmp_8354(31)>
  # prephitmp_8371 = PHI <pretmp_8356(24), prephitmp_8255(2021), pretmp_8357(1336), pretmp_8358(36), pretmp_8359(1340), pretmp_8360(41), pretmp_8361(1344), pretmp_8362(46), pretmp_8363(1348), pretmp_8364(2022), pretmp_8365(1324), pretmp_8366(19), pretmp_8367(1328), pretmp_8368(26), pretmp_8369(1332), pretmp_8370(31)>
  # prephitmp_8387 = PHI <pretmp_8372(24), prephitmp_8268(2021), pretmp_8373(1336), pretmp_8374(36), pretmp_8375(1340), pretmp_8376(41), pretmp_8377(1344), pretmp_8378(46), pretmp_8379(1348), pretmp_8380(2022), pretmp_8381(1324), pretmp_8382(19), pretmp_8383(1328), pretmp_8384(26), pretmp_8385(1332), pretmp_8386(31)>
  # prephitmp_8403 = PHI <pretmp_8388(24), prephitmp_8281(2021), pretmp_8389(1336), pretmp_8390(36), pretmp_8391(1340), pretmp_8392(41), pretmp_8393(1344), pretmp_8394(46), pretmp_8395(1348), pretmp_8396(2022), pretmp_8397(1324), pretmp_8398(19), pretmp_8399(1328), pretmp_8400(26), pretmp_8401(1332), pretmp_8402(31)>
  # prephitmp_8419 = PHI <pretmp_8404(24), prephitmp_8294(2021), pretmp_8405(1336), pretmp_8406(36), pretmp_8407(1340), pretmp_8408(41), pretmp_8409(1344), pretmp_8410(46), pretmp_8411(1348), pretmp_8412(2022), pretmp_8413(1324), pretmp_8414(19), pretmp_8415(1328), pretmp_8416(26), pretmp_8417(1332), pretmp_8418(31)>
  # prephitmp_8435 = PHI <pretmp_8420(24), prephitmp_8307(2021), pretmp_8421(1336), pretmp_8422(36), pretmp_8423(1340), pretmp_8424(41), pretmp_8425(1344), pretmp_8426(46), pretmp_8427(1348), pretmp_8428(2022), pretmp_8429(1324), pretmp_8430(19), pretmp_8431(1328), pretmp_8432(26), pretmp_8433(1332), pretmp_8434(31)>
<L450>:
  # DEBUG D#2878 => {CLOBBER}
  # DEBUG rf_iter$_M_node => D#2878
  priority ={v} {CLOBBER};
  rf ={v} {CLOBBER};
  packet_size_str ={v} {CLOBBER};
  packet_size_rate_str ={v} {CLOBBER};
  injection_process ={v} {CLOBBER};
  watch_file ={v} {CLOBBER};
  watch_flits ={v} {CLOBBER};
  watch_packets ={v} {CLOBBER};
  stats_out_file ={v} {CLOBBER};
  # DEBUG D#2939 => &this_129(D)->_packets_to_watch
  # DEBUG this => D#2939
  # DEBUG D#4287 => &MEM[(struct set *)this_129(D) + 2096B]._M_t
  # DEBUG this => D#4287
  _2101 = MEM[(struct _Rb_tree_node_base * *)this_129(D) + 2112B];
  # DEBUG D#193 => D#4287
  # DEBUG this => D#193
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (prephitmp_8203, _2101);
  # DEBUG D#1171 => &MEM[(struct _Rb_tree *)D#4287]._M_impl
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  MEM[(struct  &)this_129(D) + 2096] ={v} {CLOBBER};
  resx 82

<L452>:
  # DEBUG D#2938 => &this_129(D)->_flits_to_watch
  # DEBUG this => D#2938
  # DEBUG D#4286 => &MEM[(struct set *)this_129(D) + 2048B]._M_t
  # DEBUG this => D#4286
  _2102 = MEM[(struct _Rb_tree_node_base * *)this_129(D) + 2064B];
  # DEBUG D#193 => D#4286
  # DEBUG this => D#193
  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (prephitmp_7830, _2102);
  # DEBUG D#1171 => &MEM[(struct _Rb_tree *)D#4286]._M_impl
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  # DEBUG this => D#1171
  MEM[(struct  &)this_129(D) + 2048] ={v} {CLOBBER};
  resx 81

<L453>:
  # DEBUG D#2937 => &this_129(D)->_acc_warmup_threshold
  # DEBUG this => D#2937
  # DEBUG D#503 => &D#2937->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2937->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2937->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2937->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1850 = MEM[(struct _Vector_base *)this_129(D) + 2008B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1850
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1850
  # DEBUG __n => D#497
  if (_1850 != 0B)
    goto <bb 2026>;
  else
    goto <bb 2027>;

  <bb 2026>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1850
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1850
  # DEBUG this => D#489
  # DEBUG D.153855 => D#490
  operator delete (_1850);

  <bb 2027>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 2008] ={v} {CLOBBER};
  resx 80

<L454>:
  # DEBUG D#2936 => &this_129(D)->_warmup_threshold
  # DEBUG this => D#2936
  # DEBUG D#503 => &D#2936->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2936->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2936->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2936->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1851 = MEM[(struct _Vector_base *)this_129(D) + 1984B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1851
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1851
  # DEBUG __n => D#497
  if (_1851 != 0B)
    goto <bb 2029>;
  else
    goto <bb 2030>;

  <bb 2029>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1851
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1851
  # DEBUG this => D#489
  # DEBUG D.153870 => D#490
  operator delete (_1851);

  <bb 2030>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1984] ={v} {CLOBBER};
  resx 79

<L455>:
  # DEBUG D#2935 => &this_129(D)->_acc_stopping_threshold
  # DEBUG this => D#2935
  # DEBUG D#503 => &D#2935->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2935->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2935->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2935->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1852 = MEM[(struct _Vector_base *)this_129(D) + 1960B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1852
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1852
  # DEBUG __n => D#497
  if (_1852 != 0B)
    goto <bb 2032>;
  else
    goto <bb 2033>;

  <bb 2032>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1852
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1852
  # DEBUG this => D#489
  # DEBUG D.153885 => D#490
  operator delete (_1852);

  <bb 2033>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1960] ={v} {CLOBBER};
  resx 78

<L456>:
  # DEBUG D#2934 => &this_129(D)->_stopping_threshold
  # DEBUG this => D#2934
  # DEBUG D#503 => &D#2934->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2934->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2934->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2934->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1853 = MEM[(struct _Vector_base *)this_129(D) + 1936B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1853
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1853
  # DEBUG __n => D#497
  if (_1853 != 0B)
    goto <bb 2035>;
  else
    goto <bb 2036>;

  <bb 2035>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1853
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1853
  # DEBUG this => D#489
  # DEBUG D.153900 => D#490
  operator delete (_1853);

  <bb 2036>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1936] ={v} {CLOBBER};
  resx 77

<L457>:
  # DEBUG D#2933 => &this_129(D)->_latency_thres
  # DEBUG this => D#2933
  # DEBUG D#503 => &D#2933->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2933->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2933->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2933->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1854 = MEM[(struct _Vector_base *)this_129(D) + 1912B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1854
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1854
  # DEBUG __n => D#497
  if (_1854 != 0B)
    goto <bb 2038>;
  else
    goto <bb 2039>;

  <bb 2038>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1854
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1854
  # DEBUG this => D#489
  # DEBUG D.153915 => D#490
  operator delete (_1854);

  <bb 2039>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1912] ={v} {CLOBBER};
  resx 76

<L458>:
  # DEBUG D#2932 => &this_129(D)->_measure_stats
  # DEBUG this => D#2932
  # DEBUG D#476 => &D#2932->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2932->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2932->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2932->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1855 = MEM[(struct _Vector_base *)this_129(D) + 1880B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1855
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1855
  # DEBUG __n => D#470
  if (_1855 != 0B)
    goto <bb 2041>;
  else
    goto <bb 2042>;

  <bb 2041>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1855
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1855
  # DEBUG this => D#462
  # DEBUG D.153930 => D#463
  operator delete (_1855);

  <bb 2042>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 1880] ={v} {CLOBBER};
  resx 75

<L459>:
  # DEBUG D#2931 => &this_129(D)->_stats
  # DEBUG this => D#2931
  # DEBUG D#4285 => &MEM[(struct map *)this_129(D) + 1792B]._M_t
  # DEBUG this => D#4285
  _2103 = MEM[(struct _Rb_tree_node_base * *)this_129(D) + 1808B];
  # DEBUG D#197 => D#4285
  # DEBUG this => D#197
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, Stats*>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Stats*> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, Stats*> > >::_M_erase (prephitmp_8435, _2103);
  # DEBUG D#1657 => &MEM[(struct _Rb_tree *)D#4285]._M_impl
  # DEBUG this => D#1657
  # DEBUG this => D#1657
  # DEBUG this => D#1657
  MEM[(struct  &)this_129(D) + 1792] ={v} {CLOBBER};
  resx 74

<L460>:
  # DEBUG D#2930 => &this_129(D)->_slowest_flit
  # DEBUG this => D#2930
  # DEBUG D#476 => &D#2930->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2930->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2930->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2930->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1857 = MEM[(struct _Vector_base *)this_129(D) + 1768B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1857
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1857
  # DEBUG __n => D#470
  if (_1857 != 0B)
    goto <bb 2045>;
  else
    goto <bb 2046>;

  <bb 2045>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1857
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1857
  # DEBUG this => D#462
  # DEBUG D.153950 => D#463
  operator delete (_1857);

  <bb 2046>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 1768] ={v} {CLOBBER};
  resx 73

<L461>:
  # DEBUG D#2929 => &this_129(D)->_slowest_packet
  # DEBUG this => D#2929
  # DEBUG D#476 => &D#2929->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2929->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2929->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2929->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1858 = MEM[(struct _Vector_base *)this_129(D) + 1744B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1858
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1858
  # DEBUG __n => D#470
  if (_1858 != 0B)
    goto <bb 2048>;
  else
    goto <bb 2049>;

  <bb 2048>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1858
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1858
  # DEBUG this => D#462
  # DEBUG D.153965 => D#463
  operator delete (_1858);

  <bb 2049>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 1744] ={v} {CLOBBER};
  resx 72

<L462>:
  # DEBUG D#2928 => &this_129(D)->_overall_max_accepted
  # DEBUG this => D#2928
  # DEBUG D#503 => &D#2928->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2928->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2928->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2928->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1859 = MEM[(struct _Vector_base *)this_129(D) + 1720B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1859
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1859
  # DEBUG __n => D#497
  if (_1859 != 0B)
    goto <bb 2051>;
  else
    goto <bb 2052>;

  <bb 2051>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1859
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1859
  # DEBUG this => D#489
  # DEBUG D.153980 => D#490
  operator delete (_1859);

  <bb 2052>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1720] ={v} {CLOBBER};
  resx 71

<L463>:
  # DEBUG D#2927 => &this_129(D)->_overall_avg_accepted
  # DEBUG this => D#2927
  # DEBUG D#503 => &D#2927->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2927->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2927->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2927->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1860 = MEM[(struct _Vector_base *)this_129(D) + 1696B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1860
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1860
  # DEBUG __n => D#497
  if (_1860 != 0B)
    goto <bb 2054>;
  else
    goto <bb 2055>;

  <bb 2054>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1860
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1860
  # DEBUG this => D#489
  # DEBUG D.153995 => D#490
  operator delete (_1860);

  <bb 2055>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1696] ={v} {CLOBBER};
  resx 70

<L464>:
  # DEBUG D#2926 => &this_129(D)->_overall_min_accepted
  # DEBUG this => D#2926
  # DEBUG D#503 => &D#2926->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2926->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2926->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2926->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1861 = MEM[(struct _Vector_base *)this_129(D) + 1672B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1861
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1861
  # DEBUG __n => D#497
  if (_1861 != 0B)
    goto <bb 2057>;
  else
    goto <bb 2058>;

  <bb 2057>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1861
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1861
  # DEBUG this => D#489
  # DEBUG D.154010 => D#490
  operator delete (_1861);

  <bb 2058>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1672] ={v} {CLOBBER};
  resx 69

<L465>:
  std::vector<std::vector<int> >::~vector (prephitmp_8419);
  resx 68

<L466>:
  # DEBUG D#2925 => &this_129(D)->_overall_max_sent
  # DEBUG this => D#2925
  # DEBUG D#503 => &D#2925->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2925->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2925->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2925->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1862 = MEM[(struct _Vector_base *)this_129(D) + 1624B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1862
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1862
  # DEBUG __n => D#497
  if (_1862 != 0B)
    goto <bb 2061>;
  else
    goto <bb 2062>;

  <bb 2061>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1862
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1862
  # DEBUG this => D#489
  # DEBUG D.154025 => D#490
  operator delete (_1862);

  <bb 2062>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1624] ={v} {CLOBBER};
  resx 67

<L467>:
  # DEBUG D#2924 => &this_129(D)->_overall_avg_sent
  # DEBUG this => D#2924
  # DEBUG D#503 => &D#2924->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2924->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2924->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2924->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1865 = MEM[(struct _Vector_base *)this_129(D) + 1600B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1865
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1865
  # DEBUG __n => D#497
  if (_1865 != 0B)
    goto <bb 2064>;
  else
    goto <bb 2065>;

  <bb 2064>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1865
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1865
  # DEBUG this => D#489
  # DEBUG D.154040 => D#490
  operator delete (_1865);

  <bb 2065>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1600] ={v} {CLOBBER};
  resx 66

<L468>:
  # DEBUG D#2923 => &this_129(D)->_overall_min_sent
  # DEBUG this => D#2923
  # DEBUG D#503 => &D#2923->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2923->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2923->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2923->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1866 = MEM[(struct _Vector_base *)this_129(D) + 1576B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1866
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1866
  # DEBUG __n => D#497
  if (_1866 != 0B)
    goto <bb 2067>;
  else
    goto <bb 2068>;

  <bb 2067>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1866
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1866
  # DEBUG this => D#489
  # DEBUG D.154055 => D#490
  operator delete (_1866);

  <bb 2068>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1576] ={v} {CLOBBER};
  resx 65

<L469>:
  std::vector<std::vector<int> >::~vector (prephitmp_8403);
  resx 64

<L470>:
  # DEBUG D#2922 => &this_129(D)->_overall_max_accepted_packets
  # DEBUG this => D#2922
  # DEBUG D#503 => &D#2922->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2922->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2922->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2922->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1867 = MEM[(struct _Vector_base *)this_129(D) + 1528B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1867
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1867
  # DEBUG __n => D#497
  if (_1867 != 0B)
    goto <bb 2071>;
  else
    goto <bb 2072>;

  <bb 2071>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1867
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1867
  # DEBUG this => D#489
  # DEBUG D.154070 => D#490
  operator delete (_1867);

  <bb 2072>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1528] ={v} {CLOBBER};
  resx 63

<L471>:
  # DEBUG D#2921 => &this_129(D)->_overall_avg_accepted_packets
  # DEBUG this => D#2921
  # DEBUG D#503 => &D#2921->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2921->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2921->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2921->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1870 = MEM[(struct _Vector_base *)this_129(D) + 1504B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1870
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1870
  # DEBUG __n => D#497
  if (_1870 != 0B)
    goto <bb 2074>;
  else
    goto <bb 2075>;

  <bb 2074>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1870
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1870
  # DEBUG this => D#489
  # DEBUG D.154085 => D#490
  operator delete (_1870);

  <bb 2075>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1504] ={v} {CLOBBER};
  resx 62

<L472>:
  # DEBUG D#2920 => &this_129(D)->_overall_min_accepted_packets
  # DEBUG this => D#2920
  # DEBUG D#503 => &D#2920->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2920->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2920->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2920->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1871 = MEM[(struct _Vector_base *)this_129(D) + 1480B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1871
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1871
  # DEBUG __n => D#497
  if (_1871 != 0B)
    goto <bb 2077>;
  else
    goto <bb 2078>;

  <bb 2077>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1871
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1871
  # DEBUG this => D#489
  # DEBUG D.154100 => D#490
  operator delete (_1871);

  <bb 2078>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1480] ={v} {CLOBBER};
  resx 61

<L473>:
  std::vector<std::vector<int> >::~vector (prephitmp_8387);
  resx 60

<L474>:
  # DEBUG D#2919 => &this_129(D)->_overall_max_sent_packets
  # DEBUG this => D#2919
  # DEBUG D#503 => &D#2919->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2919->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2919->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2919->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1872 = MEM[(struct _Vector_base *)this_129(D) + 1432B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1872
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1872
  # DEBUG __n => D#497
  if (_1872 != 0B)
    goto <bb 2081>;
  else
    goto <bb 2082>;

  <bb 2081>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1872
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1872
  # DEBUG this => D#489
  # DEBUG D.154115 => D#490
  operator delete (_1872);

  <bb 2082>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1432] ={v} {CLOBBER};
  resx 59

<L475>:
  # DEBUG D#2918 => &this_129(D)->_overall_avg_sent_packets
  # DEBUG this => D#2918
  # DEBUG D#503 => &D#2918->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2918->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2918->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2918->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1875 = MEM[(struct _Vector_base *)this_129(D) + 1408B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1875
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1875
  # DEBUG __n => D#497
  if (_1875 != 0B)
    goto <bb 2084>;
  else
    goto <bb 2085>;

  <bb 2084>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1875
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1875
  # DEBUG this => D#489
  # DEBUG D.154130 => D#490
  operator delete (_1875);

  <bb 2085>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1408] ={v} {CLOBBER};
  resx 58

<L476>:
  # DEBUG D#2917 => &this_129(D)->_overall_min_sent_packets
  # DEBUG this => D#2917
  # DEBUG D#503 => &D#2917->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2917->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2917->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2917->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1876 = MEM[(struct _Vector_base *)this_129(D) + 1384B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1876
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1876
  # DEBUG __n => D#497
  if (_1876 != 0B)
    goto <bb 2087>;
  else
    goto <bb 2088>;

  <bb 2087>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1876
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1876
  # DEBUG this => D#489
  # DEBUG D.154145 => D#490
  operator delete (_1876);

  <bb 2088>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1384] ={v} {CLOBBER};
  resx 57

<L477>:
  std::vector<std::vector<int> >::~vector (prephitmp_8371);
  resx 56

<L478>:
  # DEBUG D#2916 => &this_129(D)->_overall_hop_stats
  # DEBUG this => D#2916
  # DEBUG D#503 => &D#2916->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2916->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2916->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2916->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1877 = MEM[(struct _Vector_base *)this_129(D) + 1336B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1877
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1877
  # DEBUG __n => D#497
  if (_1877 != 0B)
    goto <bb 2091>;
  else
    goto <bb 2092>;

  <bb 2091>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1877
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1877
  # DEBUG this => D#489
  # DEBUG D.154160 => D#490
  operator delete (_1877);

  <bb 2092>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1336] ={v} {CLOBBER};
  resx 55

<L479>:
  # DEBUG D#2915 => &this_129(D)->_hop_stats
  # DEBUG this => D#2915
  # DEBUG D#920 => &D#2915->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#2915->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#2915->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#2915->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1880 = MEM[(struct _Vector_base *)this_129(D) + 1312B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1880
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1880
  # DEBUG __n => D#914
  if (_1880 != 0B)
    goto <bb 2094>;
  else
    goto <bb 2095>;

  <bb 2094>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1880
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1880
  # DEBUG this => D#906
  # DEBUG D.154175 => D#907
  operator delete (_1880);

  <bb 2095>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_129(D) + 1312] ={v} {CLOBBER};
  resx 54

<L480>:
  std::vector<std::vector<Stats*> >::~vector (prephitmp_8355);
  resx 53

<L481>:
  std::vector<std::vector<Stats*> >::~vector (prephitmp_8339);
  resx 52

<L482>:
  std::vector<std::vector<Stats*> >::~vector (prephitmp_8323);
  resx 51

<L483>:
  # DEBUG D#2914 => &this_129(D)->_overall_max_frag
  # DEBUG this => D#2914
  # DEBUG D#503 => &D#2914->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2914->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2914->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2914->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1881 = MEM[(struct _Vector_base *)this_129(D) + 1216B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1881
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1881
  # DEBUG __n => D#497
  if (_1881 != 0B)
    goto <bb 2100>;
  else
    goto <bb 2101>;

  <bb 2100>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1881
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1881
  # DEBUG this => D#489
  # DEBUG D.154190 => D#490
  operator delete (_1881);

  <bb 2101>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1216] ={v} {CLOBBER};
  resx 50

<L484>:
  # DEBUG D#2913 => &this_129(D)->_overall_avg_frag
  # DEBUG this => D#2913
  # DEBUG D#503 => &D#2913->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2913->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2913->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2913->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1888 = MEM[(struct _Vector_base *)this_129(D) + 1192B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1888
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1888
  # DEBUG __n => D#497
  if (_1888 != 0B)
    goto <bb 2103>;
  else
    goto <bb 2104>;

  <bb 2103>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1888
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1888
  # DEBUG this => D#489
  # DEBUG D.154205 => D#490
  operator delete (_1888);

  <bb 2104>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1192] ={v} {CLOBBER};
  resx 49

<L485>:
  # DEBUG D#2912 => &this_129(D)->_overall_min_frag
  # DEBUG this => D#2912
  # DEBUG D#503 => &D#2912->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2912->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2912->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2912->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1889 = MEM[(struct _Vector_base *)this_129(D) + 1168B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1889
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1889
  # DEBUG __n => D#497
  if (_1889 != 0B)
    goto <bb 2106>;
  else
    goto <bb 2107>;

  <bb 2106>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1889
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1889
  # DEBUG this => D#489
  # DEBUG D.154220 => D#490
  operator delete (_1889);

  <bb 2107>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1168] ={v} {CLOBBER};
  resx 48

<L486>:
  # DEBUG D#2911 => &this_129(D)->_frag_stats
  # DEBUG this => D#2911
  # DEBUG D#920 => &D#2911->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#2911->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#2911->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#2911->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1890 = MEM[(struct _Vector_base *)this_129(D) + 1144B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1890
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1890
  # DEBUG __n => D#914
  if (_1890 != 0B)
    goto <bb 2109>;
  else
    goto <bb 2110>;

  <bb 2109>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1890
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1890
  # DEBUG this => D#906
  # DEBUG D.154235 => D#907
  operator delete (_1890);

  <bb 2110>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_129(D) + 1144] ={v} {CLOBBER};
  resx 47

<L487>:
  # DEBUG D#2910 => &this_129(D)->_overall_max_flat
  # DEBUG this => D#2910
  # DEBUG D#503 => &D#2910->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2910->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2910->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2910->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1891 = MEM[(struct _Vector_base *)this_129(D) + 1120B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1891
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1891
  # DEBUG __n => D#497
  if (_1891 != 0B)
    goto <bb 2112>;
  else
    goto <bb 2113>;

  <bb 2112>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1891
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1891
  # DEBUG this => D#489
  # DEBUG D.154250 => D#490
  operator delete (_1891);

  <bb 2113>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1120] ={v} {CLOBBER};
  resx 46

<L488>:
  # DEBUG D#2909 => &this_129(D)->_overall_avg_flat
  # DEBUG this => D#2909
  # DEBUG D#503 => &D#2909->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2909->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2909->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2909->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1892 = MEM[(struct _Vector_base *)this_129(D) + 1096B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1892
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1892
  # DEBUG __n => D#497
  if (_1892 != 0B)
    goto <bb 2115>;
  else
    goto <bb 2116>;

  <bb 2115>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1892
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1892
  # DEBUG this => D#489
  # DEBUG D.154265 => D#490
  operator delete (_1892);

  <bb 2116>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1096] ={v} {CLOBBER};
  resx 45

<L489>:
  # DEBUG D#2908 => &this_129(D)->_overall_min_flat
  # DEBUG this => D#2908
  # DEBUG D#503 => &D#2908->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2908->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2908->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2908->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1893 = MEM[(struct _Vector_base *)this_129(D) + 1072B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1893
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1893
  # DEBUG __n => D#497
  if (_1893 != 0B)
    goto <bb 2118>;
  else
    goto <bb 2119>;

  <bb 2118>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1893
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1893
  # DEBUG this => D#489
  # DEBUG D.154280 => D#490
  operator delete (_1893);

  <bb 2119>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1072] ={v} {CLOBBER};
  resx 44

<L490>:
  # DEBUG D#2907 => &this_129(D)->_flat_stats
  # DEBUG this => D#2907
  # DEBUG D#920 => &D#2907->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#2907->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#2907->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#2907->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1894 = MEM[(struct _Vector_base *)this_129(D) + 1048B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1894
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1894
  # DEBUG __n => D#914
  if (_1894 != 0B)
    goto <bb 2121>;
  else
    goto <bb 2122>;

  <bb 2121>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1894
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1894
  # DEBUG this => D#906
  # DEBUG D.154295 => D#907
  operator delete (_1894);

  <bb 2122>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_129(D) + 1048] ={v} {CLOBBER};
  resx 43

<L491>:
  # DEBUG D#2906 => &this_129(D)->_overall_max_nlat
  # DEBUG this => D#2906
  # DEBUG D#503 => &D#2906->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2906->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2906->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2906->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1895 = MEM[(struct _Vector_base *)this_129(D) + 1024B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1895
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1895
  # DEBUG __n => D#497
  if (_1895 != 0B)
    goto <bb 2124>;
  else
    goto <bb 2125>;

  <bb 2124>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1895
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1895
  # DEBUG this => D#489
  # DEBUG D.154310 => D#490
  operator delete (_1895);

  <bb 2125>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1024] ={v} {CLOBBER};
  resx 42

<L492>:
  # DEBUG D#2905 => &this_129(D)->_overall_avg_nlat
  # DEBUG this => D#2905
  # DEBUG D#503 => &D#2905->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2905->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2905->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2905->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1896 = MEM[(struct _Vector_base *)this_129(D) + 1000B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1896
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1896
  # DEBUG __n => D#497
  if (_1896 != 0B)
    goto <bb 2127>;
  else
    goto <bb 2128>;

  <bb 2127>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1896
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1896
  # DEBUG this => D#489
  # DEBUG D.154325 => D#490
  operator delete (_1896);

  <bb 2128>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 1000] ={v} {CLOBBER};
  resx 41

<L493>:
  # DEBUG D#2904 => &this_129(D)->_overall_min_nlat
  # DEBUG this => D#2904
  # DEBUG D#503 => &D#2904->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2904->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2904->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2904->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1897 = MEM[(struct _Vector_base *)this_129(D) + 976B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1897
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1897
  # DEBUG __n => D#497
  if (_1897 != 0B)
    goto <bb 2130>;
  else
    goto <bb 2131>;

  <bb 2130>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1897
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1897
  # DEBUG this => D#489
  # DEBUG D.154340 => D#490
  operator delete (_1897);

  <bb 2131>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 976] ={v} {CLOBBER};
  resx 40

<L494>:
  # DEBUG D#2903 => &this_129(D)->_nlat_stats
  # DEBUG this => D#2903
  # DEBUG D#920 => &D#2903->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#2903->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#2903->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#2903->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1898 = MEM[(struct _Vector_base *)this_129(D) + 952B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1898
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1898
  # DEBUG __n => D#914
  if (_1898 != 0B)
    goto <bb 2133>;
  else
    goto <bb 2134>;

  <bb 2133>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1898
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1898
  # DEBUG this => D#906
  # DEBUG D.154355 => D#907
  operator delete (_1898);

  <bb 2134>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_129(D) + 952] ={v} {CLOBBER};
  resx 39

<L495>:
  # DEBUG D#2902 => &this_129(D)->_overall_max_plat
  # DEBUG this => D#2902
  # DEBUG D#503 => &D#2902->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2902->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2902->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2902->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1899 = MEM[(struct _Vector_base *)this_129(D) + 928B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1899
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1899
  # DEBUG __n => D#497
  if (_1899 != 0B)
    goto <bb 2136>;
  else
    goto <bb 2137>;

  <bb 2136>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1899
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1899
  # DEBUG this => D#489
  # DEBUG D.154370 => D#490
  operator delete (_1899);

  <bb 2137>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 928] ={v} {CLOBBER};
  resx 38

<L496>:
  # DEBUG D#2901 => &this_129(D)->_overall_avg_plat
  # DEBUG this => D#2901
  # DEBUG D#503 => &D#2901->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2901->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2901->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2901->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1900 = MEM[(struct _Vector_base *)this_129(D) + 904B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1900
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1900
  # DEBUG __n => D#497
  if (_1900 != 0B)
    goto <bb 2139>;
  else
    goto <bb 2140>;

  <bb 2139>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1900
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1900
  # DEBUG this => D#489
  # DEBUG D.154385 => D#490
  operator delete (_1900);

  <bb 2140>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 904] ={v} {CLOBBER};
  resx 37

<L497>:
  # DEBUG D#2900 => &this_129(D)->_overall_min_plat
  # DEBUG this => D#2900
  # DEBUG D#503 => &D#2900->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2900->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2900->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2900->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1901 = MEM[(struct _Vector_base *)this_129(D) + 880B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1901
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1901
  # DEBUG __n => D#497
  if (_1901 != 0B)
    goto <bb 2142>;
  else
    goto <bb 2143>;

  <bb 2142>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1901
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1901
  # DEBUG this => D#489
  # DEBUG D.154400 => D#490
  operator delete (_1901);

  <bb 2143>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 880] ={v} {CLOBBER};
  resx 36

<L498>:
  # DEBUG D#2899 => &this_129(D)->_plat_stats
  # DEBUG this => D#2899
  # DEBUG D#920 => &D#2899->D.63091
  # DEBUG this => D#920
  # DEBUG D#923 => D#2899->D.63091._M_impl._M_finish
  # DEBUG D#922 => D#2899->D.63091._M_impl._M_start
  # DEBUG __first => D#922
  # DEBUG __last => D#923
  # DEBUG D.117705 => NULL
  # DEBUG D#452 => D#922
  # DEBUG D#453 => D#923
  # DEBUG __first => D#452
  # DEBUG __last => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG D.114733 => D#448
  # DEBUG D.114732 => D#449
  # DEBUG D#921 => &D#2899->D.63091
  # DEBUG this => D#921
  # DEBUG D#919 => D#921->_M_impl._M_end_of_storage
  # DEBUG D#918 => (long int) D#919
  _1902 = MEM[(struct _Vector_base *)this_129(D) + 856B]._M_impl._M_start;
  # DEBUG D#917 => (long int) _1902
  # DEBUG D#916 => D#918 - D#917
  # DEBUG D#915 => D#916 /[ex] 8
  # DEBUG D#914 => (long unsigned int) D#915
  # DEBUG this => D#921
  # DEBUG __p => _1902
  # DEBUG __n => D#914
  if (_1902 != 0B)
    goto <bb 2145>;
  else
    goto <bb 2146>;

  <bb 2145>:
  # DEBUG D#912 => &D#921->_M_impl
  # DEBUG D#910 => D#912
  # DEBUG D#911 => D#914
  # DEBUG __p => _1902
  # DEBUG __a => D#910
  # DEBUG __n => D#911
  # DEBUG D#909 => D#911
  # DEBUG D#908 => D#910
  # DEBUG D#906 => D#908
  # DEBUG D#907 => D#909
  # DEBUG __p => _1902
  # DEBUG this => D#906
  # DEBUG D.154415 => D#907
  operator delete (_1902);

  <bb 2146>:
  # DEBUG D#913 => &D#921->_M_impl
  # DEBUG this => D#913
  # DEBUG this => D#913
  # DEBUG this => D#913
  MEM[(struct  &)this_129(D) + 856] ={v} {CLOBBER};
  resx 35

<L499>:
  # DEBUG D#2898 => &this_129(D)->_requestsOutstanding
  # DEBUG this => D#2898
  # DEBUG D#476 => &D#2898->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2898->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2898->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2898->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1903 = MEM[(struct _Vector_base *)this_129(D) + 832B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1903
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1903
  # DEBUG __n => D#470
  if (_1903 != 0B)
    goto <bb 2148>;
  else
    goto <bb 2149>;

  <bb 2148>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1903
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1903
  # DEBUG this => D#462
  # DEBUG D.154430 => D#463
  operator delete (_1903);

  <bb 2149>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 832] ={v} {CLOBBER};
  resx 34

<L500>:
  # DEBUG D#4269 => &this_129(D)->_repliesPending
  # DEBUG this => D#4269
  # DEBUG D#1089 => &D#4269->D.62343
  # DEBUG this => D#1089
  _1645 = MEM[(struct vector *)this_129(D) + 808B].D.62343._M_impl._M_finish;
  __first_5208 = MEM[(struct vector *)this_129(D) + 808B].D.62343._M_impl._M_start;
  # DEBUG __first => __first_5208
  # DEBUG __last => _1645
  # DEBUG __first => __first_5208
  if (_1645 == __first_5208)
    goto <bb 2159>;
  else
    goto <bb 2151>;

  <bb 2151>:

  <bb 2152>:
  # __first_6031 = PHI <__first_5208(2151), __first_5214(2154)>
  # DEBUG __first => __first_6031
  # DEBUG __r => __first_6031
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1084
  # DEBUG this => D#1084
  __tmp_5210 = MEM[(struct _List_base *)__first_6031]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_5210
  # DEBUG __cur => __tmp_5210
  _5281 = &MEM[(struct _List_base *)__first_6031]._M_impl._M_node.D.37893;
  if (__tmp_5210 == _5281)
    goto <bb 2153>;
  else
    goto <bb 2155>;

  <bb 2153>:
  # DEBUG D#1083 => &D#1084->_M_impl
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  # DEBUG this => D#1083
  MEM[(struct  &)__first_6031] ={v} {CLOBBER};
  __first_5214 = __first_6031 + 24;
  # DEBUG __first => __first_5214
  # DEBUG __first => __first_5214
  if (_1645 == __first_5214)
    goto <bb 2158>;
  else
    goto <bb 2154>;

  <bb 2154>:
  goto <bb 2152>;

  <bb 2155>:

  <bb 2156>:
  # __tmp_6030 = PHI <__tmp_5210(2155), __tmp_5213(2157)>
  # DEBUG __cur => __tmp_6030
  # DEBUG __tmp => __tmp_6030
  __tmp_5213 = __tmp_6030->D.82523._M_next;
  # DEBUG __cur => __tmp_5213
  # DEBUG D#1082 => &__tmp_6030->_M_data
  # DEBUG __r => D#1082
  # DEBUG D#1081 => D#1084
  # DEBUG this => D#1081
  # DEBUG D#1080 => D#1081
  # DEBUG this => D#1080
  # DEBUG this => NULL
  # DEBUG D.120376 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#319
  # DEBUG __p => D#320
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#571 => D#1084
  # DEBUG __p => __tmp_6030
  # DEBUG this => D#571
  # DEBUG D#570 => D#571
  # DEBUG D#569 => &D#570->_M_impl
  # DEBUG D#567 => D#569
  # DEBUG D#568 => 1
  # DEBUG __p => __tmp_6030
  # DEBUG this => D#567
  # DEBUG D.172185 => D#568
  operator delete (__tmp_6030);
  # DEBUG __cur => __tmp_5213
  if (__tmp_5213 == _5281)
    goto <bb 2153>;
  else
    goto <bb 2157>;

  <bb 2157>:
  goto <bb 2156>;

  <bb 2158>:
  pretmp_2869 = MEM[(struct _Vector_base *)this_129(D) + 808B]._M_impl._M_start;

  <bb 2159>:
  # prephitmp_2870 = PHI <pretmp_2869(2158), __first_5208(2150)>
  # DEBUG D#1090 => &D#4269->D.62343
  # DEBUG this => D#1090
  # DEBUG D#903 => D#1090->_M_impl._M_end_of_storage
  # DEBUG D#902 => (long int) D#903
  # DEBUG D#4284 => MEM[(struct _Vector_base *)this_129(D) + 808B]._M_impl._M_start
  # DEBUG D#901 => (long int) D#4284
  # DEBUG D#900 => D#902 - D#901
  # DEBUG D#899 => D#900 /[ex] 24
  # DEBUG D#896 => D#1090
  # DEBUG D#897 => (long unsigned int) D#899
  # DEBUG __p => D#4284
  # DEBUG this => D#896
  # DEBUG __n => D#897
  # DEBUG D#895 => D#897
  # DEBUG D#894 => D#896
  if (prephitmp_2870 != 0B)
    goto <bb 2160>;
  else
    goto <bb 2161>;

  <bb 2160>:
  # DEBUG D#893 => &D#894->_M_impl
  # DEBUG D#891 => D#893
  # DEBUG D#892 => D#895
  # DEBUG __p => D#4284
  # DEBUG __a => D#891
  # DEBUG __n => D#892
  # DEBUG D#890 => D#892
  # DEBUG D#889 => D#891
  # DEBUG D#887 => D#889
  # DEBUG D#888 => D#890
  # DEBUG __p => D#4284
  # DEBUG this => D#887
  # DEBUG D.172199 => D#888
  operator delete (prephitmp_2870);

  <bb 2161>:
  # DEBUG D#898 => &D#1090->_M_impl
  # DEBUG this => D#898
  # DEBUG this => D#898
  # DEBUG this => D#898
  MEM[(struct  &)this_129(D) + 808] ={v} {CLOBBER};
  resx 33

<L501>:
  # DEBUG D#2897 => &this_129(D)->_packet_seq_no
  # DEBUG this => D#2897
  # DEBUG D#476 => &D#2897->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2897->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2897->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2897->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1904 = MEM[(struct _Vector_base *)this_129(D) + 784B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1904
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1904
  # DEBUG __n => D#470
  if (_1904 != 0B)
    goto <bb 2163>;
  else
    goto <bb 2164>;

  <bb 2163>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1904
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1904
  # DEBUG this => D#462
  # DEBUG D.154445 => D#463
  operator delete (_1904);

  <bb 2164>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 784] ={v} {CLOBBER};
  resx 32

<L502>:
  # DEBUG D#2896 => &this_129(D)->_subnet
  # DEBUG this => D#2896
  # DEBUG D#476 => &D#2896->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2896->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2896->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2896->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1907 = MEM[(struct _Vector_base *)this_129(D) + 752B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1907
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1907
  # DEBUG __n => D#470
  if (_1907 != 0B)
    goto <bb 2166>;
  else
    goto <bb 2167>;

  <bb 2166>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1907
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1907
  # DEBUG this => D#462
  # DEBUG D.154460 => D#463
  operator delete (_1907);

  <bb 2167>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 752] ={v} {CLOBBER};
  resx 31

<L503>:
  std::vector<std::map<int, Flit*> >::~vector (prephitmp_7395);
  resx 30

<L504>:
  std::vector<std::map<int, Flit*> >::~vector (prephitmp_7379);
  resx 29

<L505>:
  std::vector<std::map<int, Flit*> >::~vector (prephitmp_7363);
  resx 28

<L506>:
  # DEBUG D#4268 => &this_129(D)->_partial_packets
  # DEBUG this => D#4268
  # DEBUG D#1067 => &D#4268->D.60835
  # DEBUG this => D#1067
  _1906 = MEM[(struct vector *)this_129(D) + 648B].D.60835._M_impl._M_finish;
  __first_5216 = MEM[(struct vector *)this_129(D) + 648B].D.60835._M_impl._M_start;
  # DEBUG __first => __first_5216
  # DEBUG __last => _1906
  # DEBUG __first => __first_5216
  if (_1906 == __first_5216)
    goto <bb 2187>;
  else
    goto <bb 2172>;

  <bb 2172>:

  <bb 2173>:
  # __first_6032 = PHI <__first_5216(2172), __first_5218(2185)>
  # DEBUG __first => __first_6032
  # DEBUG __r => __first_6032
  # DEBUG __pointer => NULL
  # DEBUG this => __first_6032
  # DEBUG D#1061 => &__first_6032->D.70701
  # DEBUG this => D#1061
  _1916 = __first_6032->D.70701._M_impl._M_finish;
  __first_5220 = __first_6032->D.70701._M_impl._M_start;
  # DEBUG __first => __first_5220
  # DEBUG __last => _1916
  # DEBUG __first => __first_5220
  if (_1916 == __first_5220)
    goto <bb 2182>;
  else
    goto <bb 2174>;

  <bb 2174>:

  <bb 2175>:
  # __first_6033 = PHI <__first_5220(2174), __first_5226(2177)>
  # DEBUG __first => __first_6033
  # DEBUG __r => __first_6033
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1056
  # DEBUG this => D#1056
  __tmp_5222 = MEM[(struct _List_base *)__first_6033]._M_impl._M_node.D.37893._M_next;
  # DEBUG __cur => __tmp_5222
  # DEBUG __cur => __tmp_5222
  _5364 = &MEM[(struct _List_base *)__first_6033]._M_impl._M_node.D.37893;
  if (__tmp_5222 == _5364)
    goto <bb 2176>;
  else
    goto <bb 2178>;

  <bb 2176>:
  # DEBUG D#1055 => &D#1056->_M_impl
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  # DEBUG this => D#1055
  MEM[(struct  &)__first_6033] ={v} {CLOBBER};
  __first_5226 = __first_6033 + 24;
  # DEBUG __first => __first_5226
  # DEBUG __first => __first_5226
  if (_1916 == __first_5226)
    goto <bb 2181>;
  else
    goto <bb 2177>;

  <bb 2177>:
  goto <bb 2175>;

  <bb 2178>:

  <bb 2179>:
  # __tmp_6034 = PHI <__tmp_5222(2178), __tmp_5225(2180)>
  # DEBUG __cur => __tmp_6034
  # DEBUG __tmp => __tmp_6034
  __tmp_5225 = __tmp_6034->D.82395._M_next;
  # DEBUG __cur => __tmp_5225
  # DEBUG D#1054 => &__tmp_6034->_M_data
  # DEBUG __r => D#1054
  # DEBUG D#1053 => D#1056
  # DEBUG this => D#1053
  # DEBUG D#1052 => D#1053
  # DEBUG this => D#1052
  # DEBUG this => NULL
  # DEBUG D.119945 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#310
  # DEBUG __p => D#311
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#563 => D#1056
  # DEBUG __p => __tmp_6034
  # DEBUG this => D#563
  # DEBUG D#562 => D#563
  # DEBUG D#561 => &D#562->_M_impl
  # DEBUG D#559 => D#561
  # DEBUG D#560 => 1
  # DEBUG __p => __tmp_6034
  # DEBUG this => D#559
  # DEBUG D.172247 => D#560
  operator delete (__tmp_6034);
  # DEBUG __cur => __tmp_5225
  if (__tmp_5225 == _5364)
    goto <bb 2176>;
  else
    goto <bb 2180>;

  <bb 2180>:
  goto <bb 2179>;

  <bb 2181>:
  pretmp_2827 = MEM[(struct _Vector_base *)__first_6032]._M_impl._M_start;

  <bb 2182>:
  # prephitmp_2828 = PHI <pretmp_2827(2181), __first_5220(2173)>
  # DEBUG D#1062 => &__first_6032->D.70701
  # DEBUG this => D#1062
  # DEBUG D#1049 => D#1062->_M_impl._M_end_of_storage
  # DEBUG D#1048 => (long int) D#1049
  # DEBUG D#4283 => MEM[(struct _Vector_base *)__first_6032]._M_impl._M_start
  # DEBUG D#1047 => (long int) D#4283
  # DEBUG D#1046 => D#1048 - D#1047
  # DEBUG D#1045 => D#1046 /[ex] 24
  # DEBUG D#1042 => D#1062
  # DEBUG D#1043 => (long unsigned int) D#1045
  # DEBUG __p => D#4283
  # DEBUG this => D#1042
  # DEBUG __n => D#1043
  # DEBUG D#1041 => D#1043
  # DEBUG D#1040 => D#1042
  if (prephitmp_2828 != 0B)
    goto <bb 2183>;
  else
    goto <bb 2184>;

  <bb 2183>:
  # DEBUG D#1039 => &D#1040->_M_impl
  # DEBUG D#1037 => D#1039
  # DEBUG D#1038 => D#1041
  # DEBUG __p => D#4283
  # DEBUG __a => D#1037
  # DEBUG __n => D#1038
  # DEBUG D#1036 => D#1038
  # DEBUG D#1035 => D#1037
  # DEBUG D#1033 => D#1035
  # DEBUG D#1034 => D#1036
  # DEBUG __p => D#4283
  # DEBUG this => D#1033
  # DEBUG D.172261 => D#1034
  operator delete (prephitmp_2828);

  <bb 2184>:
  # DEBUG D#1044 => &D#1062->_M_impl
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  # DEBUG this => D#1044
  MEM[(struct  &)__first_6032] ={v} {CLOBBER};
  __first_5218 = __first_6032 + 24;
  # DEBUG __first => __first_5218
  # DEBUG __first => __first_5218
  if (_1906 == __first_5218)
    goto <bb 2186>;
  else
    goto <bb 2185>;

  <bb 2185>:
  goto <bb 2173>;

  <bb 2186>:
  pretmp_2871 = MEM[(struct _Vector_base *)this_129(D) + 648B]._M_impl._M_start;

  <bb 2187>:
  # prephitmp_4326 = PHI <pretmp_2871(2186), __first_5216(2171)>
  # DEBUG D#1068 => &D#4268->D.60835
  # DEBUG this => D#1068
  # DEBUG D#867 => D#1068->_M_impl._M_end_of_storage
  # DEBUG D#866 => (long int) D#867
  # DEBUG D#4282 => MEM[(struct _Vector_base *)this_129(D) + 648B]._M_impl._M_start
  # DEBUG D#865 => (long int) D#4282
  # DEBUG D#864 => D#866 - D#865
  # DEBUG D#863 => D#864 /[ex] 24
  # DEBUG D#860 => D#1068
  # DEBUG D#861 => (long unsigned int) D#863
  # DEBUG __p => D#4282
  # DEBUG this => D#860
  # DEBUG __n => D#861
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#860
  if (prephitmp_4326 != 0B)
    goto <bb 2188>;
  else
    goto <bb 2189>;

  <bb 2188>:
  # DEBUG D#857 => &D#858->_M_impl
  # DEBUG D#855 => D#857
  # DEBUG D#856 => D#859
  # DEBUG __p => D#4282
  # DEBUG __a => D#855
  # DEBUG __n => D#856
  # DEBUG D#854 => D#856
  # DEBUG D#853 => D#855
  # DEBUG D#851 => D#853
  # DEBUG D#852 => D#854
  # DEBUG __p => D#4282
  # DEBUG this => D#851
  # DEBUG D.172223 => D#852
  operator delete (prephitmp_4326);

  <bb 2189>:
  # DEBUG D#862 => &D#1068->_M_impl
  # DEBUG this => D#862
  # DEBUG this => D#862
  # DEBUG this => D#862
  MEM[(struct  &)this_129(D) + 648] ={v} {CLOBBER};
  resx 27

<L507>:
  # DEBUG D#4267 => &this_129(D)->_qdrained
  # DEBUG this => D#4267
  # DEBUG D#1024 => &D#4267->D.60085
  # DEBUG this => D#1024
  _5228 = MEM[(struct vector *)this_129(D) + 624B].D.60085._M_impl._M_finish;
  __first_5229 = MEM[(struct vector *)this_129(D) + 624B].D.60085._M_impl._M_start;
  # DEBUG __first => __first_5229
  # DEBUG __last => _5228
  # DEBUG __first => __first_5229
  if (_5228 == __first_5229)
    goto <bb 2197>;
  else
    goto <bb 2191>;

  <bb 2191>:

  <bb 2192>:
  # __first_6035 = PHI <__first_5229(2191), __first_5232(2195)>
  # DEBUG __first => __first_6035
  # DEBUG __r => __first_6035
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG D#4263 => &__first_6035->D.48430
  # DEBUG this => D#4263
  # DEBUG this => D#4263
  _1918 = MEM[(struct _Bvector_base *)__first_6035]._M_impl._M_start.D.33184._M_p;
  if (_1918 != 0B)
    goto <bb 2193>;
  else
    goto <bb 2194>;

  <bb 2193>:
  # DEBUG D#1015 => &D#4263->_M_impl
  _5234 = MEM[(long unsigned int * *)__first_6035 + 32B];
  # DEBUG D#375 => D#1015
  # DEBUG this => D#375
  _5236 = (long int) _5234;
  _5237 = (long int) _1918;
  _5238 = _5236 - _5237;
  # DEBUG D#1018 => _5238 /[ex] 8
  # DEBUG D#1017 => (const size_t) D#1018
  # DEBUG __n => D#1017
  _5239 = (long unsigned int) _5238;
  _5240 = -_5239;
  _5241 = _5234 + _5240;
  # DEBUG D#1016 => &D#4263->_M_impl
  # DEBUG D#1013 => D#1016
  # DEBUG D#1014 => D#1017
  # DEBUG __p => _5241
  # DEBUG __a => D#1013
  # DEBUG __n => D#1014
  # DEBUG D#1012 => D#1014
  # DEBUG D#1011 => D#1013
  # DEBUG D#1009 => D#1011
  # DEBUG D#1010 => D#1012
  # DEBUG __p => _5241
  # DEBUG this => D#1009
  # DEBUG D.172302 => D#1010
  operator delete (_5241);

  <bb 2194>:
  # DEBUG D#1019 => &D#4263->_M_impl
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  # DEBUG this => D#1019
  MEM[(struct  &)__first_6035] ={v} {CLOBBER};
  __first_5232 = __first_6035 + 40;
  # DEBUG __first => __first_5232
  # DEBUG __first => __first_5232
  if (_5228 == __first_5232)
    goto <bb 2196>;
  else
    goto <bb 2195>;

  <bb 2195>:
  goto <bb 2192>;

  <bb 2196>:
  pretmp_4328 = MEM[(struct _Vector_base *)this_129(D) + 624B]._M_impl._M_start;

  <bb 2197>:
  # prephitmp_4329 = PHI <pretmp_4328(2196), __first_5229(2190)>
  # DEBUG D#1025 => &D#4267->D.60085
  # DEBUG this => D#1025
  # DEBUG D#848 => D#1025->_M_impl._M_end_of_storage
  # DEBUG D#847 => (long int) D#848
  # DEBUG D#4281 => MEM[(struct _Vector_base *)this_129(D) + 624B]._M_impl._M_start
  # DEBUG D#846 => (long int) D#4281
  # DEBUG D#845 => D#847 - D#846
  # DEBUG D#844 => D#845 /[ex] 40
  # DEBUG D#841 => D#1025
  # DEBUG D#842 => (long unsigned int) D#844
  # DEBUG __p => D#4281
  # DEBUG this => D#841
  # DEBUG __n => D#842
  # DEBUG D#840 => D#842
  # DEBUG D#839 => D#841
  if (prephitmp_4329 != 0B)
    goto <bb 2198>;
  else
    goto <bb 2199>;

  <bb 2198>:
  # DEBUG D#838 => &D#839->_M_impl
  # DEBUG D#836 => D#838
  # DEBUG D#837 => D#840
  # DEBUG __p => D#4281
  # DEBUG __a => D#836
  # DEBUG __n => D#837
  # DEBUG D#835 => D#837
  # DEBUG D#834 => D#836
  # DEBUG D#832 => D#834
  # DEBUG D#833 => D#835
  # DEBUG __p => D#4281
  # DEBUG this => D#832
  # DEBUG D.172290 => D#833
  operator delete (prephitmp_4329);

  <bb 2199>:
  # DEBUG D#843 => &D#1025->_M_impl
  # DEBUG this => D#843
  # DEBUG this => D#843
  # DEBUG this => D#843
  MEM[(struct  &)this_129(D) + 624] ={v} {CLOBBER};
  resx 26

<L508>:
  std::vector<std::vector<int> >::~vector (prephitmp_7347);
  resx 25

<L509>:
  # DEBUG D#4266 => &this_129(D)->_last_vc
  # DEBUG this => D#4266
  # DEBUG D#828 => &D#4266->D.59334
  # DEBUG this => D#828
  _5242 = MEM[(struct vector *)this_129(D) + 560B].D.59334._M_impl._M_finish;
  __first_5243 = MEM[(struct vector *)this_129(D) + 560B].D.59334._M_impl._M_start;
  # DEBUG __first => __first_5243
  # DEBUG __last => _5242
  # DEBUG __first => __first_5243
  if (_5242 == __first_5243)
    goto <bb 2215>;
  else
    goto <bb 2202>;

  <bb 2202>:

  <bb 2203>:
  # __first_6152 = PHI <__first_5243(2202), __first_5245(2213)>
  # DEBUG __first => __first_6152
  # DEBUG __r => __first_6152
  # DEBUG __pointer => NULL
  # DEBUG this => __first_6152
  # DEBUG D#690 => &__first_6152->D.53336
  # DEBUG this => D#690
  _1922 = __first_6152->D.53336._M_impl._M_finish;
  __first_5247 = __first_6152->D.53336._M_impl._M_start;
  # DEBUG __first => __first_5247
  # DEBUG __last => _1922
  # DEBUG __first => __first_5247
  if (_1922 == __first_5247)
    goto <bb 2210>;
  else
    goto <bb 2204>;

  <bb 2204>:

  <bb 2205>:
  # __first_6153 = PHI <__first_5247(2204), __first_5250(2208)>
  # DEBUG __first => __first_6153
  # DEBUG __r => __first_6153
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#476
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _5249 = MEM[(struct _Vector_base *)__first_6153]._M_impl._M_start;
  # DEBUG D#473 => (long int) _5249
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _5249
  # DEBUG __n => D#470
  if (_5249 != 0B)
    goto <bb 2206>;
  else
    goto <bb 2207>;

  <bb 2206>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _5249
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _5249
  # DEBUG this => D#462
  # DEBUG D.172348 => D#463
  operator delete (_5249);

  <bb 2207>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)__first_6153] ={v} {CLOBBER};
  __first_5250 = __first_6153 + 24;
  # DEBUG __first => __first_5250
  # DEBUG __first => __first_5250
  if (_1922 == __first_5250)
    goto <bb 2209>;
  else
    goto <bb 2208>;

  <bb 2208>:
  goto <bb 2205>;

  <bb 2209>:
  pretmp_4337 = MEM[(struct _Vector_base *)__first_6152]._M_impl._M_start;

  <bb 2210>:
  # prephitmp_4338 = PHI <pretmp_4337(2209), __first_5247(2203)>
  # DEBUG D#691 => &__first_6152->D.53336
  # DEBUG this => D#691
  # DEBUG D#685 => D#691->_M_impl._M_end_of_storage
  # DEBUG D#684 => (long int) D#685
  # DEBUG D#4280 => MEM[(struct _Vector_base *)__first_6152]._M_impl._M_start
  # DEBUG D#683 => (long int) D#4280
  # DEBUG D#682 => D#684 - D#683
  # DEBUG D#681 => D#682 /[ex] 24
  # DEBUG D#678 => D#691
  # DEBUG D#679 => (long unsigned int) D#681
  # DEBUG __p => D#4280
  # DEBUG this => D#678
  # DEBUG __n => D#679
  # DEBUG D#677 => D#679
  # DEBUG D#676 => D#678
  if (prephitmp_4338 != 0B)
    goto <bb 2211>;
  else
    goto <bb 2212>;

  <bb 2211>:
  # DEBUG D#675 => &D#676->_M_impl
  # DEBUG D#673 => D#675
  # DEBUG D#674 => D#677
  # DEBUG __p => D#4280
  # DEBUG __a => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  # DEBUG D#669 => D#671
  # DEBUG D#670 => D#672
  # DEBUG __p => D#4280
  # DEBUG this => D#669
  # DEBUG D.172362 => D#670
  operator delete (prephitmp_4338);

  <bb 2212>:
  # DEBUG D#680 => &D#691->_M_impl
  # DEBUG this => D#680
  # DEBUG this => D#680
  # DEBUG this => D#680
  MEM[(struct  &)__first_6152] ={v} {CLOBBER};
  __first_5245 = __first_6152 + 24;
  # DEBUG __first => __first_5245
  # DEBUG __first => __first_5245
  if (_5242 == __first_5245)
    goto <bb 2214>;
  else
    goto <bb 2213>;

  <bb 2213>:
  goto <bb 2203>;

  <bb 2214>:
  pretmp_4330 = MEM[(struct _Vector_base *)this_129(D) + 560B]._M_impl._M_start;

  <bb 2215>:
  # prephitmp_4332 = PHI <pretmp_4330(2214), __first_5243(2201)>
  # DEBUG D#829 => &D#4266->D.59334
  # DEBUG this => D#829
  # DEBUG D#823 => D#829->_M_impl._M_end_of_storage
  # DEBUG D#822 => (long int) D#823
  # DEBUG D#4279 => MEM[(struct _Vector_base *)this_129(D) + 560B]._M_impl._M_start
  # DEBUG D#821 => (long int) D#4279
  # DEBUG D#820 => D#822 - D#821
  # DEBUG D#819 => D#820 /[ex] 24
  # DEBUG D#816 => D#829
  # DEBUG D#817 => (long unsigned int) D#819
  # DEBUG __p => D#4279
  # DEBUG this => D#816
  # DEBUG __n => D#817
  # DEBUG D#815 => D#817
  # DEBUG D#814 => D#816
  if (prephitmp_4332 != 0B)
    goto <bb 2216>;
  else
    goto <bb 2217>;

  <bb 2216>:
  # DEBUG D#813 => &D#814->_M_impl
  # DEBUG D#811 => D#813
  # DEBUG D#812 => D#815
  # DEBUG __p => D#4279
  # DEBUG __a => D#811
  # DEBUG __n => D#812
  # DEBUG D#810 => D#812
  # DEBUG D#809 => D#811
  # DEBUG D#807 => D#809
  # DEBUG D#808 => D#810
  # DEBUG __p => D#4279
  # DEBUG this => D#807
  # DEBUG D.172323 => D#808
  operator delete (prephitmp_4332);

  <bb 2217>:
  # DEBUG D#818 => &D#829->_M_impl
  # DEBUG this => D#818
  # DEBUG this => D#818
  # DEBUG this => D#818
  MEM[(struct  &)this_129(D) + 560] ={v} {CLOBBER};
  resx 24

<L510>:
  # DEBUG D#4265 => &this_129(D)->_buf_states
  # DEBUG this => D#4265
  # DEBUG D#1006 => &D#4265->D.58587
  # DEBUG this => D#1006
  _5252 = MEM[(struct vector *)this_129(D) + 536B].D.58587._M_impl._M_finish;
  __first_5253 = MEM[(struct vector *)this_129(D) + 536B].D.58587._M_impl._M_start;
  # DEBUG __first => __first_5253
  # DEBUG __last => _5252
  # DEBUG __first => __first_5253
  if (_5252 == __first_5253)
    goto <bb 2225>;
  else
    goto <bb 2219>;

  <bb 2219>:

  <bb 2220>:
  # __first_6150 = PHI <__first_5253(2219), __first_5256(2223)>
  # DEBUG __first => __first_6150
  # DEBUG __r => __first_6150
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#998
  # DEBUG __first => D#1000
  # DEBUG __last => D#1001
  # DEBUG D.119373 => NULL
  # DEBUG D#542 => D#1000
  # DEBUG D#543 => D#1001
  # DEBUG __first => D#542
  # DEBUG __last => D#543
  # DEBUG D#541 => D#543
  # DEBUG D#540 => D#542
  # DEBUG D#538 => D#540
  # DEBUG D#539 => D#541
  # DEBUG D.115216 => D#538
  # DEBUG D.115215 => D#539
  # DEBUG this => D#999
  # DEBUG D#997 => D#999->_M_impl._M_end_of_storage
  # DEBUG D#996 => (long int) D#997
  _5255 = MEM[(struct _Vector_base *)__first_6150]._M_impl._M_start;
  # DEBUG D#995 => (long int) _5255
  # DEBUG D#994 => D#996 - D#995
  # DEBUG D#993 => D#994 /[ex] 8
  # DEBUG D#992 => (long unsigned int) D#993
  # DEBUG this => D#999
  # DEBUG __p => _5255
  # DEBUG __n => D#992
  if (_5255 != 0B)
    goto <bb 2221>;
  else
    goto <bb 2222>;

  <bb 2221>:
  # DEBUG D#990 => &D#999->_M_impl
  # DEBUG D#988 => D#990
  # DEBUG D#989 => D#992
  # DEBUG __p => _5255
  # DEBUG __a => D#988
  # DEBUG __n => D#989
  # DEBUG D#987 => D#989
  # DEBUG D#986 => D#988
  # DEBUG D#984 => D#986
  # DEBUG D#985 => D#987
  # DEBUG __p => _5255
  # DEBUG this => D#984
  # DEBUG D.172387 => D#985
  operator delete (_5255);

  <bb 2222>:
  # DEBUG D#991 => &D#999->_M_impl
  # DEBUG this => D#991
  # DEBUG this => D#991
  # DEBUG this => D#991
  MEM[(struct  &)__first_6150] ={v} {CLOBBER};
  __first_5256 = __first_6150 + 24;
  # DEBUG __first => __first_5256
  # DEBUG __first => __first_5256
  if (_5252 == __first_5256)
    goto <bb 2224>;
  else
    goto <bb 2223>;

  <bb 2223>:
  goto <bb 2220>;

  <bb 2224>:
  pretmp_4334 = MEM[(struct _Vector_base *)this_129(D) + 536B]._M_impl._M_start;

  <bb 2225>:
  # prephitmp_4335 = PHI <pretmp_4334(2224), __first_5253(2218)>
  # DEBUG D#1007 => &D#4265->D.58587
  # DEBUG this => D#1007
  # DEBUG D#804 => D#1007->_M_impl._M_end_of_storage
  # DEBUG D#803 => (long int) D#804
  # DEBUG D#4278 => MEM[(struct _Vector_base *)this_129(D) + 536B]._M_impl._M_start
  # DEBUG D#802 => (long int) D#4278
  # DEBUG D#801 => D#803 - D#802
  # DEBUG D#800 => D#801 /[ex] 24
  # DEBUG D#797 => D#1007
  # DEBUG D#798 => (long unsigned int) D#800
  # DEBUG __p => D#4278
  # DEBUG this => D#797
  # DEBUG __n => D#798
  # DEBUG D#796 => D#798
  # DEBUG D#795 => D#797
  if (prephitmp_4335 != 0B)
    goto <bb 2226>;
  else
    goto <bb 2227>;

  <bb 2226>:
  # DEBUG D#794 => &D#795->_M_impl
  # DEBUG D#792 => D#794
  # DEBUG D#793 => D#796
  # DEBUG __p => D#4278
  # DEBUG __a => D#792
  # DEBUG __n => D#793
  # DEBUG D#791 => D#793
  # DEBUG D#790 => D#792
  # DEBUG D#788 => D#790
  # DEBUG D#789 => D#791
  # DEBUG __p => D#4278
  # DEBUG this => D#788
  # DEBUG D.172401 => D#789
  operator delete (prephitmp_4335);

  <bb 2227>:
  # DEBUG D#799 => &D#1007->_M_impl
  # DEBUG this => D#799
  # DEBUG this => D#799
  # DEBUG this => D#799
  MEM[(struct  &)this_129(D) + 536] ={v} {CLOBBER};
  resx 23

<L511>:
  # DEBUG D#2895 => &this_129(D)->_injection_process
  # DEBUG this => D#2895
  # DEBUG D#782 => &D#2895->D.57828
  # DEBUG this => D#782
  # DEBUG D#785 => D#2895->D.57828._M_impl._M_finish
  # DEBUG D#784 => D#2895->D.57828._M_impl._M_start
  # DEBUG __first => D#784
  # DEBUG __last => D#785
  # DEBUG D.117129 => NULL
  # DEBUG D#442 => D#784
  # DEBUG D#443 => D#785
  # DEBUG __first => D#442
  # DEBUG __last => D#443
  # DEBUG D#441 => D#443
  # DEBUG D#440 => D#442
  # DEBUG D#438 => D#440
  # DEBUG D#439 => D#441
  # DEBUG D.114659 => D#438
  # DEBUG D.114658 => D#439
  # DEBUG D#783 => &D#2895->D.57828
  # DEBUG this => D#783
  # DEBUG D#781 => D#783->_M_impl._M_end_of_storage
  # DEBUG D#780 => (long int) D#781
  _1908 = MEM[(struct _Vector_base *)this_129(D) + 504B]._M_impl._M_start;
  # DEBUG D#779 => (long int) _1908
  # DEBUG D#778 => D#780 - D#779
  # DEBUG D#777 => D#778 /[ex] 8
  # DEBUG D#776 => (long unsigned int) D#777
  # DEBUG this => D#783
  # DEBUG __p => _1908
  # DEBUG __n => D#776
  if (_1908 != 0B)
    goto <bb 2229>;
  else
    goto <bb 2230>;

  <bb 2229>:
  # DEBUG D#774 => &D#783->_M_impl
  # DEBUG D#772 => D#774
  # DEBUG D#773 => D#776
  # DEBUG __p => _1908
  # DEBUG __a => D#772
  # DEBUG __n => D#773
  # DEBUG D#771 => D#773
  # DEBUG D#770 => D#772
  # DEBUG D#768 => D#770
  # DEBUG D#769 => D#771
  # DEBUG __p => _1908
  # DEBUG this => D#768
  # DEBUG D.154475 => D#769
  operator delete (_1908);

  <bb 2230>:
  # DEBUG D#775 => &D#783->_M_impl
  # DEBUG this => D#775
  # DEBUG this => D#775
  # DEBUG this => D#775
  MEM[(struct  &)this_129(D) + 504] ={v} {CLOBBER};
  resx 22

<L512>:
  # DEBUG D#2894 => &this_129(D)->_traffic_pattern
  # DEBUG this => D#2894
  # DEBUG D#762 => &D#2894->D.57081
  # DEBUG this => D#762
  # DEBUG D#765 => D#2894->D.57081._M_impl._M_finish
  # DEBUG D#764 => D#2894->D.57081._M_impl._M_start
  # DEBUG __first => D#764
  # DEBUG __last => D#765
  # DEBUG D.117054 => NULL
  # DEBUG D#432 => D#764
  # DEBUG D#433 => D#765
  # DEBUG __first => D#432
  # DEBUG __last => D#433
  # DEBUG D#431 => D#433
  # DEBUG D#430 => D#432
  # DEBUG D#428 => D#430
  # DEBUG D#429 => D#431
  # DEBUG D.114615 => D#428
  # DEBUG D.114614 => D#429
  # DEBUG D#763 => &D#2894->D.57081
  # DEBUG this => D#763
  # DEBUG D#761 => D#763->_M_impl._M_end_of_storage
  # DEBUG D#760 => (long int) D#761
  _1925 = MEM[(struct _Vector_base *)this_129(D) + 480B]._M_impl._M_start;
  # DEBUG D#759 => (long int) _1925
  # DEBUG D#758 => D#760 - D#759
  # DEBUG D#757 => D#758 /[ex] 8
  # DEBUG D#756 => (long unsigned int) D#757
  # DEBUG this => D#763
  # DEBUG __p => _1925
  # DEBUG __n => D#756
  if (_1925 != 0B)
    goto <bb 2232>;
  else
    goto <bb 2233>;

  <bb 2232>:
  # DEBUG D#754 => &D#763->_M_impl
  # DEBUG D#752 => D#754
  # DEBUG D#753 => D#756
  # DEBUG __p => _1925
  # DEBUG __a => D#752
  # DEBUG __n => D#753
  # DEBUG D#751 => D#753
  # DEBUG D#750 => D#752
  # DEBUG D#748 => D#750
  # DEBUG D#749 => D#751
  # DEBUG __p => _1925
  # DEBUG this => D#748
  # DEBUG D.154490 => D#749
  operator delete (_1925);

  <bb 2233>:
  # DEBUG D#755 => &D#763->_M_impl
  # DEBUG this => D#755
  # DEBUG this => D#755
  # DEBUG this => D#755
  MEM[(struct  &)this_129(D) + 480] ={v} {CLOBBER};
  resx 21

<L513>:
  std::vector<std::vector<int> >::~vector (prephitmp_7331);
  resx 20

<L514>:
  # DEBUG D#2893 => &this_129(D)->_class_priority
  # DEBUG this => D#2893
  # DEBUG D#476 => &D#2893->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2893->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2893->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2893->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1926 = MEM[(struct _Vector_base *)this_129(D) + 432B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1926
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1926
  # DEBUG __n => D#470
  if (_1926 != 0B)
    goto <bb 2236>;
  else
    goto <bb 2237>;

  <bb 2236>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1926
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1926
  # DEBUG this => D#462
  # DEBUG D.154505 => D#463
  operator delete (_1926);

  <bb 2237>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 432] ={v} {CLOBBER};
  resx 19

<L515>:
  std::vector<std::__cxx11::basic_string<char> >::~vector (prephitmp_6488);
  resx 18

<L516>:
  # DEBUG D#2892 => &this_129(D)->_write_reply_size
  # DEBUG this => D#2892
  # DEBUG D#476 => &D#2892->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2892->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2892->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2892->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1929 = MEM[(struct _Vector_base *)this_129(D) + 384B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1929
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1929
  # DEBUG __n => D#470
  if (_1929 != 0B)
    goto <bb 2240>;
  else
    goto <bb 2241>;

  <bb 2240>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1929
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1929
  # DEBUG this => D#462
  # DEBUG D.154520 => D#463
  operator delete (_1929);

  <bb 2241>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 384] ={v} {CLOBBER};
  resx 17

<L517>:
  # DEBUG D#2891 => &this_129(D)->_write_request_size
  # DEBUG this => D#2891
  # DEBUG D#476 => &D#2891->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2891->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2891->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2891->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1932 = MEM[(struct _Vector_base *)this_129(D) + 360B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1932
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1932
  # DEBUG __n => D#470
  if (_1932 != 0B)
    goto <bb 2243>;
  else
    goto <bb 2244>;

  <bb 2243>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1932
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1932
  # DEBUG this => D#462
  # DEBUG D.154535 => D#463
  operator delete (_1932);

  <bb 2244>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 360] ={v} {CLOBBER};
  resx 16

<L518>:
  # DEBUG D#2890 => &this_129(D)->_read_reply_size
  # DEBUG this => D#2890
  # DEBUG D#476 => &D#2890->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2890->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2890->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2890->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1933 = MEM[(struct _Vector_base *)this_129(D) + 336B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1933
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1933
  # DEBUG __n => D#470
  if (_1933 != 0B)
    goto <bb 2246>;
  else
    goto <bb 2247>;

  <bb 2246>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1933
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1933
  # DEBUG this => D#462
  # DEBUG D.154550 => D#463
  operator delete (_1933);

  <bb 2247>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 336] ={v} {CLOBBER};
  resx 15

<L519>:
  # DEBUG D#2889 => &this_129(D)->_read_request_size
  # DEBUG this => D#2889
  # DEBUG D#476 => &D#2889->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2889->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2889->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2889->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1934 = MEM[(struct _Vector_base *)this_129(D) + 312B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1934
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1934
  # DEBUG __n => D#470
  if (_1934 != 0B)
    goto <bb 2249>;
  else
    goto <bb 2250>;

  <bb 2249>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1934
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1934
  # DEBUG this => D#462
  # DEBUG D.154565 => D#463
  operator delete (_1934);

  <bb 2250>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 312] ={v} {CLOBBER};
  resx 14

<L520>:
  # DEBUG D#2888 => &this_129(D)->_write_fraction
  # DEBUG this => D#2888
  # DEBUG D#503 => &D#2888->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2888->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2888->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2888->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1935 = MEM[(struct _Vector_base *)this_129(D) + 288B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1935
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1935
  # DEBUG __n => D#497
  if (_1935 != 0B)
    goto <bb 2252>;
  else
    goto <bb 2253>;

  <bb 2252>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1935
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1935
  # DEBUG this => D#489
  # DEBUG D.154580 => D#490
  operator delete (_1935);

  <bb 2253>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 288] ={v} {CLOBBER};
  resx 13

<L521>:
  # DEBUG D#2887 => &this_129(D)->_use_read_write
  # DEBUG this => D#2887
  # DEBUG D#476 => &D#2887->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#2887->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#2887->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#2887->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1936 = MEM[(struct _Vector_base *)this_129(D) + 264B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1936
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1936
  # DEBUG __n => D#470
  if (_1936 != 0B)
    goto <bb 2255>;
  else
    goto <bb 2256>;

  <bb 2255>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1936
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1936
  # DEBUG this => D#462
  # DEBUG D.154595 => D#463
  operator delete (_1936);

  <bb 2256>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 264] ={v} {CLOBBER};
  resx 12

<L522>:
  # DEBUG D#2886 => &this_129(D)->_load
  # DEBUG this => D#2886
  # DEBUG D#503 => &D#2886->D.55581
  # DEBUG this => D#503
  # DEBUG D#506 => D#2886->D.55581._M_impl._M_finish
  # DEBUG D#505 => D#2886->D.55581._M_impl._M_start
  # DEBUG __first => D#505
  # DEBUG __last => D#506
  # DEBUG D.114974 => NULL
  # DEBUG D#422 => D#505
  # DEBUG D#423 => D#506
  # DEBUG __first => D#422
  # DEBUG __last => D#423
  # DEBUG D#421 => D#423
  # DEBUG D#420 => D#422
  # DEBUG D#418 => D#420
  # DEBUG D#419 => D#421
  # DEBUG D.114565 => D#418
  # DEBUG D.114564 => D#419
  # DEBUG D#504 => &D#2886->D.55581
  # DEBUG this => D#504
  # DEBUG D#502 => D#504->_M_impl._M_end_of_storage
  # DEBUG D#501 => (long int) D#502
  _1937 = MEM[(struct _Vector_base *)this_129(D) + 240B]._M_impl._M_start;
  # DEBUG D#500 => (long int) _1937
  # DEBUG D#499 => D#501 - D#500
  # DEBUG D#498 => D#499 /[ex] 8
  # DEBUG D#497 => (long unsigned int) D#498
  # DEBUG this => D#504
  # DEBUG __p => _1937
  # DEBUG __n => D#497
  if (_1937 != 0B)
    goto <bb 2258>;
  else
    goto <bb 2259>;

  <bb 2258>:
  # DEBUG D#495 => &D#504->_M_impl
  # DEBUG D#493 => D#495
  # DEBUG D#494 => D#497
  # DEBUG __p => _1937
  # DEBUG __a => D#493
  # DEBUG __n => D#494
  # DEBUG D#492 => D#494
  # DEBUG D#491 => D#493
  # DEBUG D#489 => D#491
  # DEBUG D#490 => D#492
  # DEBUG __p => _1937
  # DEBUG this => D#489
  # DEBUG D.154610 => D#490
  operator delete (_1937);

  <bb 2259>:
  # DEBUG D#496 => &D#504->_M_impl
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  MEM[(struct  &)this_129(D) + 240] ={v} {CLOBBER};
  resx 11

<L523>:
  # DEBUG D#4264 => &this_129(D)->_router
  # DEBUG this => D#4264
  # DEBUG D#736 => &D#4264->D.54835
  # DEBUG this => D#736
  _1924 = MEM[(struct vector *)this_129(D) + 208B].D.54835._M_impl._M_finish;
  __first_5258 = MEM[(struct vector *)this_129(D) + 208B].D.54835._M_impl._M_start;
  # DEBUG __first => __first_5258
  # DEBUG __last => _1924
  # DEBUG __first => __first_5258
  if (_1924 == __first_5258)
    goto <bb 2267>;
  else
    goto <bb 2261>;

  <bb 2261>:

  <bb 2262>:
  # __first_6151 = PHI <__first_5258(2261), __first_5261(2265)>
  # DEBUG __first => __first_6151
  # DEBUG __r => __first_6151
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#599
  # DEBUG D#581 => D#601
  # DEBUG D#582 => D#602
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.115590 => D#583
  # DEBUG D#580 => D#582
  # DEBUG D#579 => D#581
  # DEBUG D#577 => D#579
  # DEBUG D#578 => D#580
  # DEBUG __first => D#577
  # DEBUG __last => D#578
  # DEBUG D#576 => D#578
  # DEBUG D#575 => D#577
  # DEBUG D#573 => D#575
  # DEBUG D#574 => D#576
  # DEBUG D.115498 => D#573
  # DEBUG D.115497 => D#574
  # DEBUG this => D#600
  # DEBUG D#598 => D#600->_M_impl._M_end_of_storage
  # DEBUG D#597 => (long int) D#598
  _5260 = MEM[(struct _Vector_base *)__first_6151]._M_impl._M_start;
  # DEBUG D#596 => (long int) _5260
  # DEBUG D#595 => D#597 - D#596
  # DEBUG D#594 => D#595 /[ex] 8
  # DEBUG D#593 => (long unsigned int) D#594
  # DEBUG this => D#600
  # DEBUG __p => _5260
  # DEBUG __n => D#593
  if (_5260 != 0B)
    goto <bb 2263>;
  else
    goto <bb 2264>;

  <bb 2263>:
  # DEBUG D#591 => &D#600->_M_impl
  # DEBUG D#589 => D#591
  # DEBUG D#590 => D#593
  # DEBUG __p => _5260
  # DEBUG __a => D#589
  # DEBUG __n => D#590
  # DEBUG D#588 => D#590
  # DEBUG D#587 => D#589
  # DEBUG D#585 => D#587
  # DEBUG D#586 => D#588
  # DEBUG __p => _5260
  # DEBUG this => D#585
  # DEBUG D.172426 => D#586
  operator delete (_5260);

  <bb 2264>:
  # DEBUG D#592 => &D#600->_M_impl
  # DEBUG this => D#592
  # DEBUG this => D#592
  # DEBUG this => D#592
  MEM[(struct  &)__first_6151] ={v} {CLOBBER};
  __first_5261 = __first_6151 + 24;
  # DEBUG __first => __first_5261
  # DEBUG __first => __first_5261
  if (_1924 == __first_5261)
    goto <bb 2266>;
  else
    goto <bb 2265>;

  <bb 2265>:
  goto <bb 2262>;

  <bb 2266>:
  pretmp_2848 = MEM[(struct _Vector_base *)this_129(D) + 208B]._M_impl._M_start;

  <bb 2267>:
  # prephitmp_2849 = PHI <pretmp_2848(2266), __first_5258(2260)>
  # DEBUG D#737 => &D#4264->D.54835
  # DEBUG this => D#737
  # DEBUG D#731 => D#737->_M_impl._M_end_of_storage
  # DEBUG D#730 => (long int) D#731
  # DEBUG D#4277 => MEM[(struct _Vector_base *)this_129(D) + 208B]._M_impl._M_start
  # DEBUG D#729 => (long int) D#4277
  # DEBUG D#728 => D#730 - D#729
  # DEBUG D#727 => D#728 /[ex] 24
  # DEBUG D#724 => D#737
  # DEBUG D#725 => (long unsigned int) D#727
  # DEBUG __p => D#4277
  # DEBUG this => D#724
  # DEBUG __n => D#725
  # DEBUG D#723 => D#725
  # DEBUG D#722 => D#724
  if (prephitmp_2849 != 0B)
    goto <bb 2268>;
  else
    goto <bb 2269>;

  <bb 2268>:
  # DEBUG D#721 => &D#722->_M_impl
  # DEBUG D#719 => D#721
  # DEBUG D#720 => D#723
  # DEBUG __p => D#4277
  # DEBUG __a => D#719
  # DEBUG __n => D#720
  # DEBUG D#718 => D#720
  # DEBUG D#717 => D#719
  # DEBUG D#715 => D#717
  # DEBUG D#716 => D#718
  # DEBUG __p => D#4277
  # DEBUG this => D#715
  # DEBUG D.172440 => D#716
  operator delete (prephitmp_2849);

  <bb 2269>:
  # DEBUG D#726 => &D#737->_M_impl
  # DEBUG this => D#726
  # DEBUG this => D#726
  # DEBUG this => D#726
  MEM[(struct  &)this_129(D) + 208] ={v} {CLOBBER};
  resx 10

<L524>:
  # DEBUG D#2885 => &this_129(D)->_net
  # DEBUG this => D#2885
  # DEBUG D#709 => &D#2885->D.54088
  # DEBUG this => D#709
  # DEBUG D#712 => D#2885->D.54088._M_impl._M_finish
  # DEBUG D#711 => D#2885->D.54088._M_impl._M_start
  # DEBUG D#415 => D#711
  # DEBUG D#416 => D#712
  # DEBUG __first => D#415
  # DEBUG __last => D#416
  # DEBUG D.116485 => D#417
  # DEBUG D#414 => D#416
  # DEBUG D#413 => D#415
  # DEBUG D#411 => D#413
  # DEBUG D#412 => D#414
  # DEBUG __first => D#411
  # DEBUG __last => D#412
  # DEBUG D#410 => D#412
  # DEBUG D#409 => D#411
  # DEBUG D#407 => D#409
  # DEBUG D#408 => D#410
  # DEBUG D.114527 => D#407
  # DEBUG D.114526 => D#408
  # DEBUG D#710 => &D#2885->D.54088
  # DEBUG this => D#710
  # DEBUG D#708 => D#710->_M_impl._M_end_of_storage
  # DEBUG D#707 => (long int) D#708
  _1938 = MEM[(struct _Vector_base *)this_129(D) + 184B]._M_impl._M_start;
  # DEBUG D#706 => (long int) _1938
  # DEBUG D#705 => D#707 - D#706
  # DEBUG D#704 => D#705 /[ex] 8
  # DEBUG D#701 => D#710
  # DEBUG D#702 => (long unsigned int) D#704
  # DEBUG __p => _1938
  # DEBUG this => D#701
  # DEBUG __n => D#702
  # DEBUG D#700 => D#702
  # DEBUG D#699 => D#701
  if (_1938 != 0B)
    goto <bb 2271>;
  else
    goto <bb 2272>;

  <bb 2271>:
  # DEBUG D#698 => &D#699->_M_impl
  # DEBUG D#696 => D#698
  # DEBUG D#697 => D#700
  # DEBUG __p => _1938
  # DEBUG __a => D#696
  # DEBUG __n => D#697
  # DEBUG D#695 => D#697
  # DEBUG D#694 => D#696
  # DEBUG D#692 => D#694
  # DEBUG D#693 => D#695
  # DEBUG __p => _1938
  # DEBUG this => D#692
  # DEBUG D.154625 => D#693
  operator delete (_1938);

  <bb 2272>:
  # DEBUG D#703 => &D#710->_M_impl
  # DEBUG this => D#703
  # DEBUG this => D#703
  # DEBUG this => D#703
  MEM[(struct  &)this_129(D) + 184] ={v} {CLOBBER};
  resx 9

<L1023>:
  goto <bb 2275> (<L525>);

<L538>:
  pretmp_6455 = &this_129(D)->_packet_size;
  pretmp_7314 = &this_129(D)->_packet_size_rate;

  # prephitmp_6456 = PHI <pretmp_6454(10), prephitmp_5854(2273), pretmp_6455(2274)>
  # prephitmp_7315 = PHI <pretmp_7313(10), prephitmp_6472(2273), pretmp_7314(2274)>
<L525>:
  # DEBUG D#3013 => &this_129(D)->_packet_size_max_val
  # DEBUG this => D#3013
  # DEBUG D#476 => &D#3013->D.45977
  # DEBUG this => D#476
  # DEBUG D#479 => D#3013->D.45977._M_impl._M_finish
  # DEBUG D#478 => D#3013->D.45977._M_impl._M_start
  # DEBUG __first => D#478
  # DEBUG __last => D#479
  # DEBUG D.114862 => NULL
  # DEBUG D#391 => D#478
  # DEBUG D#392 => D#479
  # DEBUG __first => D#391
  # DEBUG __last => D#392
  # DEBUG D#390 => D#392
  # DEBUG D#389 => D#391
  # DEBUG D#387 => D#389
  # DEBUG D#388 => D#390
  # DEBUG D.114404 => D#387
  # DEBUG D.114403 => D#388
  # DEBUG D#477 => &D#3013->D.45977
  # DEBUG this => D#477
  # DEBUG D#475 => D#477->_M_impl._M_end_of_storage
  # DEBUG D#474 => (long int) D#475
  _1941 = MEM[(struct _Vector_base *)this_129(D) + 144B]._M_impl._M_start;
  # DEBUG D#473 => (long int) _1941
  # DEBUG D#472 => D#474 - D#473
  # DEBUG D#471 => D#472 /[ex] 4
  # DEBUG D#470 => (long unsigned int) D#471
  # DEBUG this => D#477
  # DEBUG __p => _1941
  # DEBUG __n => D#470
  if (_1941 != 0B)
    goto <bb 2276>;
  else
    goto <bb 2277>;

  <bb 2276>:
  # DEBUG D#468 => &D#477->_M_impl
  # DEBUG D#466 => D#468
  # DEBUG D#467 => D#470
  # DEBUG __p => _1941
  # DEBUG __a => D#466
  # DEBUG __n => D#467
  # DEBUG D#465 => D#467
  # DEBUG D#464 => D#466
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465
  # DEBUG __p => _1941
  # DEBUG this => D#462
  # DEBUG D.154640 => D#463
  operator delete (_1941);

  <bb 2277>:
  # DEBUG D#469 => &D#477->_M_impl
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  MEM[(struct  &)this_129(D) + 144] ={v} {CLOBBER};
  resx 8

<L526>:
  std::vector<std::vector<int> >::~vector (prephitmp_7315);
  resx 7

<L527>:
  std::vector<std::vector<int> >::~vector (prephitmp_6456);
  resx 6

<L528>:
  # DEBUG this => _130
  MEM[(struct Module *)this_129(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#661 => &_130->_children
  # DEBUG this => D#661
  # DEBUG D#655 => &D#661->D.39983
  # DEBUG this => D#655
  # DEBUG D#658 => D#661->D.39983._M_impl._M_finish
  # DEBUG D#657 => D#661->D.39983._M_impl._M_start
  # DEBUG D#384 => D#657
  # DEBUG D#385 => D#658
  # DEBUG __first => D#384
  # DEBUG __last => D#385
  # DEBUG D.116000 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#382 => D#384
  # DEBUG D#380 => D#382
  # DEBUG D#381 => D#383
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.114372 => D#376
  # DEBUG D.114371 => D#377
  # DEBUG D#656 => &D#661->D.39983
  # DEBUG this => D#656
  # DEBUG D#654 => D#656->_M_impl._M_end_of_storage
  # DEBUG D#653 => (long int) D#654
  _1940 = MEM[(struct _Vector_base *)this_129(D) + 72B]._M_impl._M_start;
  # DEBUG D#652 => (long int) _1940
  # DEBUG D#651 => D#653 - D#652
  # DEBUG D#650 => D#651 /[ex] 8
  # DEBUG D#647 => D#656
  # DEBUG D#648 => (long unsigned int) D#650
  # DEBUG __p => _1940
  # DEBUG this => D#647
  # DEBUG __n => D#648
  # DEBUG D#646 => D#648
  # DEBUG D#645 => D#647
  if (_1940 != 0B)
    goto <bb 2281>;
  else
    goto <bb 2282>;

  <bb 2281>:
  # DEBUG D#644 => &D#645->_M_impl
  # DEBUG D#642 => D#644
  # DEBUG D#643 => D#646
  # DEBUG __p => _1940
  # DEBUG __a => D#642
  # DEBUG __n => D#643
  # DEBUG D#641 => D#643
  # DEBUG D#640 => D#642
  # DEBUG D#638 => D#640
  # DEBUG D#639 => D#641
  # DEBUG __p => _1940
  # DEBUG this => D#638
  # DEBUG D.172456 => D#639
  operator delete (_1940);

  <bb 2282>:
  # DEBUG D#649 => &D#656->_M_impl
  # DEBUG this => D#649
  # DEBUG this => D#649
  # DEBUG this => D#649
  MEM[(struct  &)this_129(D) + 72] ={v} {CLOBBER};
  # DEBUG D#660 => &_130->_fullname
  # DEBUG this => D#660
  # DEBUG this => D#660
  # DEBUG this => D#660
  _5263 = MEM[(char * *)this_129(D) + 40B];
  # DEBUG D#1 => D#660
  # DEBUG this => D#1
  # DEBUG this => D#660
  _5264 = &MEM[(const struct basic_string *)this_129(D) + 40B].D.11539._M_local_buf;
  if (_5263 != _5264)
    goto <bb 2283>;
  else
    goto <bb 2284>;

  <bb 2283>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#660].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#660
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#660
  # DEBUG this => D#1
  # DEBUG this => D#660
  # DEBUG D#626 => &MEM[(struct basic_string *)D#660]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _5263
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _5263
  # DEBUG this => D#620
  # DEBUG D.172469 => D#621
  operator delete (_5263);

  <bb 2284>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#660]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)this_129(D) + 40] ={v} {CLOBBER};
  # DEBUG D#659 => &_130->_name
  # DEBUG this => D#659
  # DEBUG this => D#659
  # DEBUG this => D#659
  _5265 = MEM[(char * *)this_129(D) + 8B];
  # DEBUG D#1 => D#659
  # DEBUG this => D#1
  # DEBUG this => D#659
  _5266 = &MEM[(const struct basic_string *)this_129(D) + 8B].D.11539._M_local_buf;
  if (_5265 != _5266)
    goto <bb 2285>;
  else
    goto <bb 2286>;

  <bb 2285>:
  # DEBUG D#629 => MEM[(struct basic_string *)D#659].D.11539._M_allocated_capacity
  # DEBUG D#628 => D#629
  # DEBUG this => D#659
  # DEBUG __size => D#628
  # DEBUG D#627 => D#628
  # DEBUG D#1 => D#659
  # DEBUG this => D#1
  # DEBUG this => D#659
  # DEBUG D#626 => &MEM[(struct basic_string *)D#659]._M_dataplus
  # DEBUG D#624 => D#626
  # DEBUG D#625 => D#627 + 1
  # DEBUG __p => _5265
  # DEBUG __a => D#624
  # DEBUG __n => D#625
  # DEBUG D#623 => D#625
  # DEBUG D#622 => D#624
  # DEBUG D#620 => D#622
  # DEBUG D#621 => D#623
  # DEBUG __p => _5265
  # DEBUG this => D#620
  # DEBUG D.172484 => D#621
  operator delete (_5265);

  <bb 2286>:
  # DEBUG D#630 => &MEM[(struct basic_string *)D#659]._M_dataplus
  # DEBUG this => D#630
  # DEBUG this => D#630
  # DEBUG this => D#630
  MEM[(struct  &)this_129(D)] ={v} {CLOBBER};
  resx 5

  <bb 2287>:

  <bb 2288>:
  # DEBUG D#195 => &D.73844
  # DEBUG this => D#195
  # DEBUG D#194 => D#195
  # DEBUG this => D#194
  # DEBUG D#1180 => &D.73844
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.331 (&D.73843, "watch_flits");
  goto <bb 925>;

  <bb 2289>:
  TrafficManager::_LoadWatchList (this_129(D), &watch_file);
  goto <bb 2288>;

<L1024>:
  pretmp_6132 = &MEM[(struct set *)this_129(D) + 2048B]._M_t;
  pretmp_5881 = &MEM[(struct set *)this_129(D) + 2096B]._M_t;
  pretmp_6408 = &this_129(D)->_pair_plat;
  pretmp_6414 = &this_129(D)->_pair_nlat;
  pretmp_6420 = &this_129(D)->_pair_flat;
  pretmp_6426 = &this_129(D)->_sent_packets;
  pretmp_6432 = &this_129(D)->_accepted_packets;
  pretmp_6438 = &this_129(D)->_sent_flits;
  pretmp_6444 = &this_129(D)->_accepted_flits;
  pretmp_6450 = &this_129(D)->_stats;
  goto <bb 1995> (<L444>);

  <bb 2291>:
  _6255 = __n_517 * 4;
  _6254 = (int *) _6255;
  D.73691.D.45977._M_impl._M_end_of_storage = _6254;
  # DEBUG D#1252 => &D.73691
  # DEBUG D#1252 => &D.73691
  # DEBUG D#1253 => &__value
  # DEBUG __n => __n_517
  # DEBUG D#1250 => D#1252
  # DEBUG this => D#1250
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1253
  # DEBUG __value => D#1251
  # DEBUG D#1249 => &D#1250->D.45977
  # DEBUG this => D#1249
  # DEBUG D#1247 => D#1251
  # DEBUG __first => NULL
  # DEBUG __n => __n_517
  # DEBUG D#1246 => D#1247
  # DEBUG __x => D#1246
  # DEBUG D.171418 => D#1248
  # DEBUG D#1245 => D#1246
  # DEBUG __first => NULL
  # DEBUG __n => __n_517
  # DEBUG D#1244 => D#1245
  # DEBUG __x => D#1244
  # DEBUG __assignable => 1
  # DEBUG D#1243 => D#1244
  # DEBUG __first => NULL
  # DEBUG __n => __n_517
  # DEBUG D#1242 => D#1243
  # DEBUG __x => D#1242
  # DEBUG D#1146 => D#1242
  # DEBUG __first => NULL
  # DEBUG __n => __n_517
  # DEBUG D#1145 => D#1146
  # DEBUG __value => D#1145
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1144 => D#1145
  # DEBUG __first => NULL
  # DEBUG __n => __n_517
  # DEBUG __value => D#1144
  # DEBUG __tmp => rate_509
  # DEBUG __niter => __n_517
  # DEBUG __niter => __n_517
  # DEBUG __first => 0B
  goto <bb 334>;

}


